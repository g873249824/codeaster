@Parser Implicit;
@Behaviour Norton_Jacnum;
@Algorithm NewtonRaphson_NumericalJacobian;
@RequireStiffnessTensor;
@Epsilon 1.e-12;

@MaterialProperty real A;
@MaterialProperty real m;
@StateVariable real    p;

@TangentOperator{
  Stensor4 Je;
  getPartialJacobianInvert(Je);
  Dt = D*Je;
}

@ComputeStress{  sig = D*eel;}

@Integrator{
  real seq = sigmaeq(sig);
  Stensor n = Stensor(0.);
  if(seq > 1.e-15){
    n   = 1.5*deviator(sig)/seq;
  }
  feel += dp*n-deto;
  fp   -= dt*A*pow(seq,m);
}
