      SUBROUTINE MPISTP( IMODE )
!           CONFIGURATION MANAGEMENT OF EDF VERSION                  
!& MODIF MPISTP UTILITAI  DATE 15/10/2012   AUTEUR COURTOIS M.COURTOIS 
! ================================================================== 
! COPYRIGHT (C) 1991 - 2012  EDF R&D              WWW.CODE-ASTER.ORG 
!                                                                    
! THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR      
! MODIFY IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS     
! PUBLISHED BY THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE 
! LICENSE, OR (AT YOUR OPTION) ANY LATER VERSION.                    
! THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,    
! BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF     
! MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU   
! GENERAL PUBLIC LICENSE FOR MORE DETAILS.                           
!                                                                    
! YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE  
! ALONG WITH THIS PROGRAM; IF NOT, WRITE TO : EDF R&D CODE_ASTER,    
!    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.     
! ================================================================== 
C RESPONSABLE COURTOIS M.COURTOIS
      IMPLICIT NONE
!     ARGUMENT IN
      INTEGER            IMODE
!-----------------------------------------------------------------------
!     FONCTION REALISEE : MPI COMM STOP
!     UN PROC DEMANDE AUX AUTRES PROCESSEURS D'INTERROMPRE.
!
!     - IMODE = 1, UN DES PROCESSEURS N'A PAS REPONDU DANS LE DELAI,
!       L'EXECUTION EST INTERROMPUE PAR MPI_ABORT
!
!     - IMODE = 2, TOUS LES PROCS SE SYNCHRONISENT ET TERMINENT AVEC
!       LE MEME UTMESS('S').
!       NE DEVRAIT PAS ETRE APPELE EN SEQUENTIEL.
!
!     L'APPELANT NE DEVRAIT RIEN EXECUTER APRES L'APPEL A MPISTP.
!-----------------------------------------------------------------------
!
      INCLUDE 'aster_constant.h'
      INTEGER   LOUT, IMOD2
      CHARACTER *16 COMPEX
      LOGICAL   GTSTAT, LABORT
!
      CALL STSTAT(ST_ER_OTH)
      LABORT = .NOT. GTSTAT(ST_EXCEPT)
!
!     S'IL FAUT FAIRE UN ABORT, ON FORCE IMODE=1
      IMOD2 = IMODE
      IF ( LABORT ) THEN
        CALL ONERRF(' ', COMPEX, LOUT)
        IF ( COMPEX(1:LOUT) .EQ. 'ABORT' ) THEN
          IMOD2 = 1
        ENDIF
      ENDIF
!
      IF ( IMOD2 .EQ. 1 ) THEN
#ifdef _USE_MPI
        CALL U2MESS('D', 'APPELMPI_99')
#endif
        CALL JEFINI('ERREUR')
!
      ELSEIF ( IMOD2 .EQ. 2 ) THEN
        IF ( LABORT ) THEN
          CALL U2MESS('M', 'APPELMPI_95')
        ENDIF
!
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
!
      END
