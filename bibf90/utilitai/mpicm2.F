      SUBROUTINE MPICM2(OPTMPI,NOMJEV)
!           CONFIGURATION MANAGEMENT OF EDF VERSION
!& MODIF MPICM2 UTILITAI  DATE 26/02/2013   AUTEUR BOITEAU O.BOITEAU 
! ==================================================================
! COPYRIGHT (C) 1991 - 2013  EDF R&D              WWW.CODE-ASTER.ORG
!
! THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR
! MODIFY IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS
! PUBLISHED BY THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE
! LICENSE, OR (AT YOUR OPTION) ANY LATER VERSION.
! THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
! BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
! MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
! GENERAL PUBLIC LICENSE FOR MORE DETAILS.
!
! YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
! ALONG WITH THIS PROGRAM; IF NOT, WRITE TO : EDF R&D CODE_ASTER,
!    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
! ==================================================================
!-----------------------------------------------------------------------
!    - FONCTION REALISEE : SUR-COUCHE MPI
!
!      FAIRE UN ECHANGE BCAST/REDUCE/ALL_REDUCE SUR UN OBJET JEVEUX
!
! ARGUMENTS D'APPELS
! IN OPTMPI :
!      /'MPI_SUM' == 'ALLREDUCE + SUM'
!      /'REDUCE'  == 'REDUCE + SUM' : TOUS -> 0
!      /'BCAST'   == 'BCAST'        : 0    -> TOUS
!
! IN NOMJEV : K24 : NOM JEVEUX DU VECTEUR A COMMUNIQUER
!----------------------------------------------------------------------
! RESPONSABLE PELLET J.PELLET
! CORPS DU PROGRAMME
      IMPLICIT NONE
! DECLARATION PARAMETRES D'APPELS
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXNOM,JEXATR
      CHARACTER*(*) OPTMPI
      CHARACTER*24  NOMJEV

#ifdef _USE_MPI
      INCLUDE 'mpif.h'
! DECLARATION VARIABLES LOCALES
      INTEGER      JNOMJV,IEXI
      INTEGER      IBID
      INTEGER      JTRAV,LOISEM,K
      INTEGER      IOBJ,NBOBJ,NLONG,IRET
      INTEGER*4    IERMPI,LINT,LINT4,LR8,LC8,NBPRO4,N4,COMCOU,MPICOU
      CHARACTER*1  TYPSCA,XOUS
      CHARACTER*8  KBID
      CHARACTER*24 NOTRAV

! ---------------------------------------------------------------------
      CALL JEMARQ()
! --- COMMUNICATEUR MPI DE TRAVAIL
      MPICOU=COMCOU(1)
! --- COMPTEUR
      CALL UTTCPU('CPU.CMPI.1','DEBUT',' ')

!     -- INITIALISATIONS :
!     --------------------
      IF (LOISEM().EQ.8) THEN
        LINT=MPI_INTEGER8
      ELSE
        LINT=MPI_INTEGER
      ENDIF
      LINT4=MPI_INTEGER4
      LR8 = MPI_DOUBLE_PRECISION
      LC8 = MPI_DOUBLE_COMPLEX
!
      NOTRAV='&&MPICM2.TRAV'

!     -- S'IL N'Y A QU'UN SEUL PROC, IL N'Y A RIEN A FAIRE :
      CALL MPI_COMM_SIZE(MPICOU,NBPRO4,IERMPI)
      CALL MPIERR(IERMPI)
      IF (NBPRO4.EQ.1) GOTO 9999
!
!     -- VERIFICATION RENDEZ-VOUS
      IRET=1
      CALL MPICHK(NBPRO4,IRET)
      IF (IRET .NE. 0) THEN
        CALL U2MESK('I', 'APPELMPI_83', 1, OPTMPI)
        GOTO 9999
      ENDIF
!
      IF (OPTMPI.EQ.'BCAST') THEN
!     ---------------------------------
        CALL JELIRA(NOMJEV,'XOUS',IBID,XOUS)
        CALL ASSERT(XOUS.EQ.'S')
        CALL JELIRA(NOMJEV,'TYPE',IBID,TYPSCA)
        CALL JELIRA(NOMJEV,'LONMAX',NLONG,KBID)
!
        N4=NLONG
        CALL JEVEUO(NOMJEV,'E',JNOMJV)
!
        IF (TYPSCA.EQ.'R') THEN
          CALL MPI_BCAST(ZR(JNOMJV),N4,LR8,0,MPICOU,IERMPI)
        ELSE IF(TYPSCA.EQ.'I') THEN
          CALL MPI_BCAST(ZI(JNOMJV),N4,LINT,0,MPICOU,IERMPI)
        ELSE IF(TYPSCA.EQ.'S') THEN
          CALL MPI_BCAST(ZI4(JNOMJV),N4,LINT4,0,MPICOU,IERMPI)
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
        CALL MPIERR(IERMPI)

      ELSE IF (OPTMPI.EQ.'REDUCE') THEN
!     ---------------------------------
        CALL JELIRA(NOMJEV,'XOUS',IBID,XOUS)
        CALL ASSERT(XOUS.EQ.'S')
        CALL JELIRA(NOMJEV,'TYPE',IBID,TYPSCA)
        CALL JELIRA(NOMJEV,'LONMAX',NLONG,KBID)
!
        N4=NLONG
        CALL JEVEUO(NOMJEV,'E',JNOMJV)
!
        IF (TYPSCA.EQ.'R') THEN
          CALL WKVECT(NOTRAV,'V V R',NLONG,JTRAV)
          CALL DCOPY(N4,ZR(JNOMJV),1,ZR(JTRAV),1)
          CALL MPI_REDUCE(ZR(JTRAV),ZR(JNOMJV),N4,LR8,MPI_SUM,0,
     &                    MPICOU,IERMPI)
        ELSEIF (TYPSCA.EQ.'C') THEN
          CALL WKVECT(NOTRAV,'V V C',NLONG,JTRAV)
          CALL ZCOPY(N4,ZC(JNOMJV),1,ZC(JTRAV),1)
          CALL MPI_REDUCE(ZC(JTRAV),ZC(JNOMJV),N4,LC8,MPI_SUM,0,
     &                    MPICOU,IERMPI)
        ELSE IF (TYPSCA.EQ.'I') THEN
          CALL WKVECT(NOTRAV,'V V I',NLONG,JTRAV)
          DO 1, K=1,N4
            ZI(JTRAV-1+K)=ZI(JNOMJV-1+K)
 1        CONTINUE
          CALL MPI_REDUCE(ZI(JTRAV),ZI(JNOMJV),N4,LINT,MPI_SUM,0,
     &                    MPICOU,IERMPI)
        ELSE IF (TYPSCA.EQ.'S') THEN
          CALL WKVECT(NOTRAV,'V V S',NLONG,JTRAV)
          DO 2, K=1,N4
            ZI4(JTRAV-1+K)=ZI4(JNOMJV-1+K)
 2        CONTINUE
          CALL MPI_REDUCE(ZI4(JTRAV),ZI4(JNOMJV),N4,LINT4,MPI_SUM,0,
     &                    MPICOU,IERMPI)
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
        CALL MPIERR(IERMPI)
        CALL JEDETR(NOTRAV)

      ELSE IF (OPTMPI.EQ.'MPI_SUM') THEN
!     -----------------------------------
!       REDUCTION + DIFFUSION DE L'OBJET JEVEUX NOMJEV
!       REMARQUE : NOMJEV PEUT ETRE UNE COLLECTION
        CALL JELIRA(NOMJEV,'TYPE',IBID,TYPSCA)
        CALL JELIRA(NOMJEV,'XOUS',IBID,XOUS)
        IF (XOUS.EQ.'X') THEN
          CALL JELIRA(NOMJEV,'NMAXOC',NBOBJ,KBID)
        ELSE
          NBOBJ=1
        ENDIF
!
        DO 10, IOBJ = 1,NBOBJ
          IF (XOUS.EQ.'S') THEN
            CALL JEVEUO(NOMJEV,'E',JNOMJV)
            CALL JELIRA(NOMJEV,'LONMAX',NLONG,KBID)
          ELSE
            CALL JEEXIN(JEXNUM(NOMJEV,IOBJ),IEXI)
            IF (IEXI.EQ.0) GOTO 10
            CALL JEVEUO(JEXNUM(NOMJEV,IOBJ),'E',JNOMJV)
            CALL JELIRA(JEXNUM(NOMJEV,IOBJ),'LONMAX',NLONG,KBID)
          ENDIF
!
          N4=NLONG
!
          IF (TYPSCA.EQ.'R') THEN
            CALL WKVECT(NOTRAV,'V V R',NLONG,JTRAV)
            CALL DCOPY(N4,ZR(JNOMJV),1,ZR(JTRAV),1)
            CALL MPI_ALLREDUCE(ZR(JTRAV),ZR(JNOMJV),N4,LR8,MPI_SUM,
     &                         MPICOU,IERMPI)
          ELSEIF (TYPSCA.EQ.'C') THEN
            CALL WKVECT(NOTRAV,'V V C',NLONG,JTRAV)
            CALL ZCOPY(N4,ZC(JNOMJV),1,ZC(JTRAV),1)
            CALL MPI_ALLREDUCE(ZC(JTRAV),ZC(JNOMJV),N4,LC8,MPI_SUM,
     &                         MPICOU,IERMPI)
          ELSE IF (TYPSCA.EQ.'I') THEN
            CALL WKVECT(NOTRAV,'V V I',NLONG,JTRAV)
            DO 3, K=1,N4
              ZI(JTRAV-1+K)=ZI(JNOMJV-1+K)
 3          CONTINUE
            CALL MPI_ALLREDUCE(ZI(JTRAV),ZI(JNOMJV),N4,LINT,MPI_SUM,
     &                         MPICOU,IERMPI)
          ELSE IF (TYPSCA.EQ.'S') THEN
            CALL WKVECT(NOTRAV,'V V S',NLONG,JTRAV)
            DO 4, K=1,N4
              ZI4(JTRAV-1+K)=ZI4(JNOMJV-1+K)
 4          CONTINUE
            CALL MPI_ALLREDUCE(ZI4(JTRAV),ZI4(JNOMJV),N4,LINT4,MPI_SUM,
     &                         MPICOU,IERMPI)
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF
          CALL JEDETR(NOTRAV)

          IF (XOUS.EQ.'X') CALL JELIBE(JEXNUM(NOMJEV,IOBJ))
 10     CONTINUE
        CALL MPIERR(IERMPI)

      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF

 9999 CONTINUE
! --- COMPTEUR
      CALL UTTCPU('CPU.CMPI.1','FIN',' ')
      CALL JEDEMA()
#endif
      END
