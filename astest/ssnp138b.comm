# MODIF  DATE 02/02/2010   AUTEUR IDOUX L.IDOUX 
# TITRE FISSURE INCLINEE EN 2D AVEC X-FEM, CHARGEMENTS VOLUMIQUES
# ssnp138b.para = tps_job 120 mem_job 256Mo mem_aster 50 ncpus 1 liste_test R
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(NOM='SSNP138B',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'),)


#*********************************************************
#                    GEOMETRIE
#                    *********
#     Parametres a modifier avec le maillage
#*********************************************************
#
# LARGEUR DE L EPROUVETTE SELON X
W = 0.2 ;
#
# HAUTEUR DE L EPROUVETTE SELON Y
H = 0.5 ;
#
# NOMBRE D ELEMENTS SELON X
NX = 100. ;
#
# NOMBRE D ELEMENTS SELON Y
NY = 100. ;
#
# precision
eps = sqrt((W/NX)**2+(H/NY)**2)

#*********************************************************

# LONGUEUR DE LA FISSURE
A = 0.04 ;

# DEFINITION DU MATERIAU
E   = 210E9;
nu  = 0.0;
rho = 7800.

ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,RHO=rho,),);

#*********************************************************

# ANGLES D INCLINAISON DE LA FISSURE (EN DEGRES)
alphaf = [0., 45.] ;

# DEFINITION DE lA COURONNE POUR LE CALCUL DES SIF
RI=0.1*A;
RS=0.3*A;

#----------------------------------------------
#                MAILLAGE, MODELE INITIAL
#----------------------------------------------

PRE_GIBI();

MAILLAGE=LIRE_MAILLAGE(INFO=1,);



MAILLAGE=DEFI_GROUP( reuse =MAILLAGE,
                     MAILLAGE=MAILLAGE,
                     CREA_GROUP_NO=(_F(NOM='NA',OPTION='ENV_SPHERE',POINT=(-W/2.,0.),PRECISION=eps/4.,RAYON=eps/4.),
                                    _F(NOM='NB',OPTION='ENV_SPHERE',POINT=(+W/2.,0.),PRECISION=eps/4.,RAYON=eps/4.),
                                    _F(NOM='NC',OPTION='ENV_SPHERE',POINT=(0.,-H/2.),PRECISION=eps/4.,RAYON=eps/4.),
                                    _F(NOM='ND',OPTION='ENV_SPHERE',POINT=(0.,+H/2.),PRECISION=eps/4.,RAYON=eps/4.),
                                    ),
                      INFO=2 );
MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAGE,
                     AFFE= _F(GROUP_MA=('SURF','LIG1','LIG3'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='D_PLAN'));

MAILLAGE=MODI_MAILLAGE(reuse =MAILLAGE,
                       MAILLAGE=MAILLAGE,
                       ORIE_PEAU_2D=_F(GROUP_MA=('LIG1','LIG3',),),
                       );

L_INS1=DEFI_LIST_REEL(DEBUT=0.0,INTERVALLE=_F(JUSQU_A=1.0,NOMBRE=1,),);

def LEVSETTAN(x,y,beta) :
     if ( x * cos(beta) + y * sin(beta) ) >= 0. : return   (x * cos(beta) + y * sin(beta)) -  A/2.
     else :  return   (-x * cos(beta) - y * sin(beta)) -  A/2.
     
#----------------------------------------------
#         DEBUT DE LA BOUCLE SUR LES ANGLES
#----------------------------------------------

nbcalc = len(alphaf)
alpha = [None]*nbcalc
#LN = [None]*nbcalc
#LT = [None]*nbcalc
FISS = [None]*nbcalc
MODELK = [None]*nbcalc
CHMA = [None]*nbcalc
CH1 = [None]*nbcalc
CH2 = [None]*nbcalc
UTOT1 = [None]*nbcalc
UTOT2 = [None]*nbcalc
PK1 = [None]*nbcalc
PK2 = [None]*nbcalc

# VALEURS DES SIF POUR LES TESTS DE NON REGRESSION 
#--------------------------------------------------

# K1 SUR LE FOND 1 POUR LES DEUX ANGLES
K1_1=[5.01383E+03 , 2.46368E+03]
# K1 SUR LE FOND 2 POUR LES DEUX ANGLES
K1_2=[5.01336E+03 , 2.58291E+03]
# G SUR LE FOND 1 POUR LES DEUX ANGLES
GR  =[1.14796E-04 , 5.16888E-05]
# K1_MAX SUR LE FOND 2 (POST_K1_K2_K3 METHODE 3) POUR LES DEUX ANGLES
PK  =[4.46255E+03 , 2.28174E+03]

SI1CH1 = [None]*(nbcalc)
SI2CH1 = [None]*(nbcalc)
TG1CH1 = [None]*(nbcalc)
TG1CH2 = [None]*(nbcalc)
SI1CH2 = [None]*(nbcalc)
SI2CH2 = [None]*(nbcalc)

# BOUCLE SUR LES ANGLES DE LA FISSURE 
#--------------------------------------
for i in range(nbcalc) :
#
# DEFINITION DES LEVEL SET
#
# on passe pas un string pour que l evaluation de la fonction se fasse a chaque pas
  alpha = str(eval('alphaf[i]*pi/180.'))
  
  FISS[i]=DEFI_FISS_XFEM(MODELE=MODELEIN,
                    DEFI_FISS=_F(
                                 FORM_FISS  = 'SEGMENT',
                                 PFON_ORIG  = (-A*cos(eval(alpha))/2,-A*sin(eval(alpha))/2, 0.),
                                 PFON_EXTR  = ( A*cos(eval(alpha))/2, A*sin(eval(alpha))/2, 0.),
                                 ),
                    GROUP_MA_ENRI='SURF',
                    TYPE_ENRI_FOND='GEOMETRIQUE',
                    NB_COUCHES=3,
                    INFO=1);

  MODELK[i]=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,FISSURE=FISS[i],INFO=1,);


  CHMA[i]=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       MODELE=MODELK[i],
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER,
                                ),
                             );
#
# DEUX CHARGEMENTS VOLUMIQUES IDENTIQUES (L'UN AVEC FORCE_INTERNE L'AUTRE AVEC PESANTEUR)
#
# FORCE VOLUMIQUE
  CH1[i]=AFFE_CHAR_MECA(MODELE=MODELK[i],
                       LIAISON_XFEM='OUI',
                       FACE_IMPO=(_F(GROUP_MA=('LIG3'),DX=0.0,DY=0.0,),),
                       FORCE_INTERNE=(_F(TOUT='OUI',FX=0,FY=-78000))
                       );
# PESANTEUR                     
  CH2[i]=AFFE_CHAR_MECA(MODELE=MODELK[i],
                       LIAISON_XFEM='OUI',
                       FACE_IMPO=(_F(GROUP_MA=('LIG3'),DX=0.0,DY=0.0,),),
                       PESANTEUR=_F(GRAVITE=10,
                                    DIRECTION=(0.,-1.,0.),),
                       );

#
# RESOLUTIONS AVEC LES DEUX CHARGEMENTS
#
  UTOT1[i]=STAT_NON_LINE(MODELE=MODELK[i],
                   CHAM_MATER=CHMA[i],
                   EXCIT=(_F(CHARGE=CH1[i])),
                   COMP_ELAS=_F(RELATION='ELAS',
                                GROUP_MA='SURF',),
                   INCREMENT=_F(LIST_INST=L_INS1,
                                INST_FIN=1.0,),
                   NEWTON=_F(REAC_ITER=1,),
                   ARCHIVAGE=_F(CHAM_EXCLU='VARI_ELGA',),
                   INFO=1,);

  UTOT2[i]=STAT_NON_LINE(MODELE=MODELK[i],
                   CHAM_MATER=CHMA[i],
                   EXCIT=(_F(CHARGE=CH2[i])),
                   COMP_ELAS=_F(RELATION='ELAS',
                                GROUP_MA='SURF',),
                   INCREMENT=_F(LIST_INST=L_INS1,
                                INST_FIN=1.0,),
                   NEWTON=_F(REAC_ITER=1,),
                   ARCHIVAGE=_F(CHAM_EXCLU='VARI_ELGA',),
                   INFO=1,);
                   

# POST-TRAITEMENT : CALCUL DES SIFS 
#----------------------------------

# 1) CALCUL AVEC CALC_G POUR L'ANGLE COURANT i

# CAS DU PREMIER CHARGEMENT    
  SI1CH1[i]=CALC_G(RESULTAT=UTOT1[i],
                 SYME_CHAR='SANS',
                 OPTION='CALC_K_G',
                 THETA=_F(FISSURE=FISS[i],
                          NUME_FOND=1,
                          R_INF=RI,
                          R_SUP=RS,),
                 INFO=2);

  SI2CH1[i]=CALC_G(RESULTAT=UTOT1[i],
                 SYME_CHAR='SANS',
                 OPTION='CALC_K_G',
                 THETA=_F(FISSURE=FISS[i],
                          NUME_FOND=2,
                          R_INF=RI,
                          R_SUP=RS,),
                 INFO=2);

  TG1CH1[i]=CALC_G(RESULTAT=UTOT1[i],
                 SYME_CHAR='SANS',
                 OPTION='CALC_G',
                 THETA=_F(FISSURE=FISS[i],
                          NUME_FOND=1,
                          R_INF=RI,
                          R_SUP=RS,),
                 INFO=2);
                 
# CAS DU DEUXIEME CHARGEMENT    
  SI1CH2[i]=CALC_G(RESULTAT=UTOT2[i],
                 SYME_CHAR='SANS',
                 OPTION='CALC_K_G',
                 THETA=_F(FISSURE=FISS[i],
                          NUME_FOND=1,
                          R_INF=RI,
                          R_SUP=RS,),
                 INFO=2);

  SI2CH2[i]=CALC_G(RESULTAT=UTOT2[i],
                 SYME_CHAR='SANS',
                 OPTION='CALC_K_G',
                 THETA=_F(FISSURE=FISS[i],
                          NUME_FOND=2,
                          R_INF=RI,
                          R_SUP=RS,),
                 INFO=2);

  TG1CH2[i]=CALC_G(RESULTAT=UTOT2[i],
                 SYME_CHAR='SANS',
                 OPTION='CALC_G',
                 THETA=_F(FISSURE=FISS[i],
                          NUME_FOND=1,
                          R_INF=RI,
                          R_SUP=RS,),
                 INFO=2);
                 
  IMPR_TABLE(TABLE=SI1CH1[i],);
  IMPR_TABLE(TABLE=SI2CH1[i],);
  IMPR_TABLE(TABLE=TG1CH1[i],);

  TEST_TABLE(TABLE=SI1CH1[i],
            NOM_PARA='K1',
            VALE=K1_1[i],
            CRITERE='RELATIF',
            REFERENCE='NON_REGRESSION',);
            
  TEST_TABLE(TABLE=SI2CH1[i],
            NOM_PARA='K1',
            VALE=K1_2[i],
            CRITERE='RELATIF',
            REFERENCE='NON_REGRESSION',);
            

  TEST_TABLE(TABLE=SI1CH2[i],
            NOM_PARA='K1',
            VALE=K1_1[i],
            CRITERE='RELATIF',
            REFERENCE='NON_REGRESSION',);
            
  TEST_TABLE(TABLE=SI2CH2[i],
            NOM_PARA='K1',
            VALE=K1_2[i],
            CRITERE='RELATIF',
            REFERENCE='NON_REGRESSION',);
            
  TEST_TABLE(TABLE=TG1CH1[i],
            NOM_PARA='G',
            VALE=GR[i],
            CRITERE='RELATIF',
            REFERENCE='NON_REGRESSION',);

  TEST_TABLE(TABLE=TG1CH2[i],
            NOM_PARA='G',
            VALE=GR[i],
            CRITERE='RELATIF',
            REFERENCE='NON_REGRESSION',);

# 2) CALCUL AVEC POST_K1_K2_K3  POUR L'ANGLE COURANT i 

  # K1 SUR LE 2EME FOND, POUR LE CHARGEMENT 1
  PK1[i]=POST_K1_K2_K3(MODELISATION='D_PLAN',
                     MAILLAGE=MAILLAGE,
                     MATER=ACIER,
                     FISSURE = FISS[i],
                     NUME_FOND = 2,
                     INFO =2,
                     ABSC_CURV_MAXI = RS,
                     RESULTAT  = UTOT1[i],
                    )
                    
  # K1 SUR LE 2EME FOND, POUR LE CHARGEMENT 2
  PK2[i]=POST_K1_K2_K3(MODELISATION='D_PLAN',
                     MAILLAGE=MAILLAGE,
                     MATER=ACIER,
                     FISSURE = FISS[i],
                     NUME_FOND = 2,
                     INFO =2,
                     ABSC_CURV_MAXI = RS,
                     RESULTAT  = UTOT2[i],
                    )

  IMPR_TABLE(TABLE = PK1[i]);
  IMPR_TABLE(TABLE = PK2[i]);
  
  TEST_TABLE(TABLE=PK1[i],
              NOM_PARA='K1_MAX',
              VALE=PK[i],
              CRITERE='RELATIF',
              REFERENCE='NON_REGRESSION',
              FILTRE=(_F(NOM_PARA='METHODE',VALE_I = 3))
              );
  
  TEST_TABLE(TABLE=PK2[i],
              NOM_PARA='K1_MAX',
              VALE=PK[i],
              CRITERE='RELATIF',
              REFERENCE='NON_REGRESSION',
              FILTRE=(_F(NOM_PARA='METHODE',VALE_I = 3))
              );
 

#------------------------------------------------------------------------
# POST-TRAITEMENT : MAILLAGE FISSURE et DEPLACEMENTS POUR LE MAILLAGE FISSURE
#------------------------------------------------------------------------
i =1

MA_XFEM=POST_MAIL_XFEM(MAILLAGE_SAIN = MAILLAGE,
                       MODELE        = MODELK[i],
                       INFO          = 2)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='D_PLAN',),)

RES_XFEM=POST_CHAM_XFEM(MAILLAGE_SAIN = MAILLAGE,
                        MAILLAGE_FISS = MA_XFEM,
                        MODELE        = MODELK[i],
                        MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT1[i],
                        NOM_CHAM      = ('DEPL','SIEF_ELGA'),
                        INFO          = 2)

RES_XFEM=CALC_ELEM(reuse =RES_XFEM,
                   RESULTAT=RES_XFEM,
                   OPTION=('EQUI_ELGA_SIGM','EQUI_ELNO_SIGM'));

RES_XFEM=CALC_NO(reuse =RES_XFEM,
                 RESULTAT=RES_XFEM,
                 OPTION=('EQUI_NOEU_SIGM'));

IMPR_RESU(FORMAT='GMSH',UNITE=81,RESU=(_F(MAILLAGE=MA_XFEM,RESULTAT=RES_XFEM,NOM_CHAM='DEPL',NOM_CMP=('DX','DY')),
                              _F(RESULTAT=RES_XFEM,NOM_CHAM='EQUI_NOEU_SIGM',NOM_CMP='VMIS'),
                               ),  );
IMPR_RESU(FORMAT='GMSH',UNITE=81,RESU=_F(RESULTAT=RES_XFEM,NOM_CHAM='DEPL',TYPE_CHAM='VECT_2D',NOM_CMP=('DX','DY')));

FIN();
