# MODIF  DATE 03/11/2004   AUTEUR MCOURTOI M.COURTOIS 
# TITRE DEMONSTRATION DE LA JOURNE ASTER LIBRE DU 14 OCTOBRE 2003
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# ILLUSTRATION D APPEL A HOMARD ET DE STAT_NON_LINE DANS DES BOUCLES PYTHON
# TRACE DE COURBE AVEC XMGRACE
# MAILLAGE GMSH
# APPEL A STANLEY POUR LE POST_TRAITEMENT
# RESPONSABLE JMBHH01 J.M.PROIX

DEBUT(CODE=_F( NOM = 'DEMO001A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),PAR_LOT='NON' );
import os


# Execution interactive : 1=OUI, 0=NON
interactif  = 0
fic_ps='fort.55'


MAIL=[None]*5

# Maillage de la plaque (volontairement grossier)

PRE_GMSH();
MAIL[0]=LIRE_MAILLAGE()


# VISUALISATION DU MAILLAGE INITIAL A L AIDE DE GMSH
if interactif == 1:
   os.system(os.path.join(aster.repout(),'gmsh') +  ' fort.19')

# Maillage de la frontiere

PRE_GMSH(UNITE_GMSH=18,UNITE_MAILLAGE=21);

MAILFRON=LIRE_MAILLAGE(UNITE=21)


MATEL=DEFI_MATERIAU( ELAS=_F( E  = 200000., NU  = 0.3, ), )

#-------------------------------------------------------------------------
# OPTIMISATION DU MAILLAGE EN ELASTICITE LINEAIRE AVEC SUIVI DE FRONTIERE
#-------------------------------------------------------------------------

for k in range(3):

   MO=AFFE_MODELE(MAILLAGE=MAIL[k],
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='C_PLAN',),);
                       
   CM=AFFE_MATERIAU(MAILLAGE=MAIL[k],
                 AFFE=_F(TOUT='OUI',
                         MATER=MATEL,),);

   SYMETRIE=AFFE_CHAR_MECA(MODELE=MO,
                        FACE_IMPO=_F(GROUP_MA=('GM8','GM9',),
                                     DNOR=0,),);

   FPILO=AFFE_CHAR_MECA(MODELE=MO,
                     FORCE_CONTOUR=_F(GROUP_MA='GM10',
                                      FY=100.0,),);
                                      
   RESUELAS=MECA_STATIQUE(CHAM_MATER=CM,MODELE=MO,
                       EXCIT=(_F(CHARGE=SYMETRIE,),
                              _F(CHARGE=FPILO),),);
                       
   RESUELAS=CALC_ELEM(reuse =RESUELAS,
                 OPTION=('SIEF_ELNO_ELGA','ERRE_ELGA_NORE','ERRE_ELNO_ELGA'),
                 RESULTAT=RESUELAS);  
                                
   MAIL[k+1]=CO('MAIL_%d' % (k+1))
   MACR_ADAP_MAIL( ADAPTATION=_F( 
                   LIBRE = 'RAFFINEMENT',
                   MAILLAGE_N = MAIL[k],
                   MAILLAGE_NP1 = MAIL[k+1],
                   RESULTAT_N = RESUELAS,
                   INDICATEUR = 'ERRE_ELGA_NORE',
                   NOM_CMP_INDICA = 'ERREST' ,
                   CRIT_RAFF_PE = 0.08,
                   ),
                MAILLAGE_FRONTIERE = MAILFRON,
                QUALITE='OUI',
                TAILLE='OUI',
                INTERPENETRATION='NON'
              )
              
   DEFI_FICHIER(UNITE=51)
   
   IMPR_RESU(FORMAT='GMSH',UNITE=51,MODELE=MO,
             RESU=_F( RESULTAT=RESUELAS,NOM_CHAM='ERRE_ELGA_NORE',NOM_CMP='ERREST'),)
   DEFI_FICHIER(ACTION='LIBERER',UNITE=51)

#  Lancement de GMSH 
   if interactif == 1:
      os.system(os.path.join(aster.repout(),'gmsh') + ' fort.51')
      
   DETRUIRE(CONCEPT=_F(NOM=(MO,CM,SYMETRIE,FPILO,RESUELAS)))

#-------------------------------------------------------------------------
# MAILLAGE FINAL POUR CALCUL NON LINEAIRE
#-------------------------------------------------------------------------

MAIL2=CREA_MAILLAGE(MAILLAGE=MAIL[k+1])
#MAIL1=CREA_MAILLAGE(MAILLAGE=MAIL[k+1])
#MAIL2=CREA_MAILLAGE( MAILLAGE  = MAIL1,
#                    LINE_QUAD = _F(TOUT='OUI'))

DEFI_FICHIER(UNITE=52)
IMPR_RESU(FORMAT='GMSH',UNITE=52,RESU=_F(MAILLAGE=MAIL2))
DEFI_FICHIER(ACTION='LIBERER',UNITE=52)

# Lancement de GMSH
if interactif == 1:
   os.system(os.path.join(aster.repout(),'gmsh') +  ' fort.52')

# COURBE DE TRACTION
A5=DEFI_FONCTION(   NOM_RESU='SIGM',
                    NOM_PARA='EPSI',
                   VALE=(0.002,400.0,
                         0.003,500.0,
                         0.0045,550.0,
                         0.0065,580.0,
                         0.008,590.0,
                         0.01,600.0,
                         0.02,600.0,
                        ),
                    PROL_DROITE='CONSTANT',
                    PROL_GAUCHE='LINEAIRE',
                    );

if interactif == 1:
   pilote='INTERACTIF'
else:
   pilote='POSTSCRIPT'

IMPR_FONCTION(
   FORMAT='XMGRACE',
   UNITE=53,
   PILOTE=pilote,
   COURBE=(
      _F(
         ABSCISSE=[0.]+A5.Absc(),
         ORDONNEE=[0.]+A5.Ordo(),
         COULEUR=2,
      ),
   ),
   TITRE='Courbe de traction',
   SOUS_TITRE='avec un palier horizontal',
   LEGENDE_X='Deformation',
   LEGENDE_Y='Contrainte',
)

MA=DEFI_MATERIAU( ELAS=_F( E  = 200000., NU  = 0.3, ),
                  TRACTION=_F(SIGM=A5,),
                 )
                 
NPAST=8
LISTT=DEFI_LIST_REEL(DEBUT=0, INTERVALLE=(
                     _F(JUSQU_A=1.6,NOMBRE=NPAST,),),)

MO=AFFE_MODELE(MAILLAGE=MAIL2,
            AFFE=_F(TOUT='OUI',
                    PHENOMENE='MECANIQUE',
                    MODELISATION='C_PLAN',),);
                    
CM=AFFE_MATERIAU(MAILLAGE=MAIL2,
              AFFE=_F(TOUT='OUI',
                      MATER=MA,),);

SYMETRIE=AFFE_CHAR_MECA(MODELE=MO,
                     FACE_IMPO=_F(GROUP_MA=('GM8','GM9',),
                                  DNOR=0,),);

FPILO=AFFE_CHAR_MECA(MODELE=MO,
                  FORCE_CONTOUR=_F(GROUP_MA='GM10',
                                   FY=100.0,),);
                                   
#-------------------------------------------------------------------------
# BOUCLE SUR LES INSTANTS POUR SUIVI INTERACTIF
#-------------------------------------------------------------------------

# if interactif == 1:
#    INCLUDE(UNITE=54)

INCLUDE(UNITE=54)

for k in range(1,NPAST+1):

   if ( k == 1 ) :

      RESUPILO=STAT_NON_LINE(
                       CHAM_MATER=CM,MODELE=MO,
                       EXCIT=(_F(CHARGE=SYMETRIE,),
                              _F(CHARGE=FPILO,
                                 TYPE_CHARGE='FIXE_PILO',),),
                       COMP_INCR=_F(RELATION='VMIS_ISOT_TRAC',),
                       INCREMENT=_F(LIST_INST=LISTT,NUME_INST_FIN=k),
                       NEWTON=_F(REAC_ITER=1,),
                       PILOTAGE=_F(TYPE='DDL_IMPO',
                                   COEF_MULT=1.0,
                                   GROUP_NO='GM12',
                                   NOM_CMP='DY',),
                       CONVERGENCE=_F(ITER_GLOB_MAXI=100,),);
                       
   else :

      RESUPILO=STAT_NON_LINE(reuse=RESUPILO,ETAT_INIT=_F(EVOL_NOLI=RESUPILO),
                       CHAM_MATER=CM,MODELE=MO,
                       EXCIT=(_F(CHARGE=SYMETRIE,),
                              _F(CHARGE=FPILO,
                                 TYPE_CHARGE='FIXE_PILO',),),
                       COMP_INCR=_F(RELATION='VMIS_ISOT_TRAC',),
                       INCREMENT=_F(LIST_INST=LISTT,NUME_INST_FIN=k),
                       NEWTON=_F(REAC_ITER=1,),
                       PILOTAGE=_F(TYPE='DDL_IMPO',
                                   COEF_MULT=1.0,
                                   GROUP_NO='GM12',
                                   NOM_CMP='DY',),
                       CONVERGENCE=_F(ITER_GLOB_MAXI=100,),);
                       
   RESUPILO=CALC_ELEM(reuse =RESUPILO,
                 OPTION=('SIEF_ELNO_ELGA',),RESULTAT=RESUPILO,NUME_ORDRE=k);  
                                
   RESUPILO=CALC_NO(reuse =RESUPILO,RESULTAT=RESUPILO,
               OPTION=('SIEF_NOEU_ELGA'),NUME_ORDRE=k);   
                           
   GNUSY=POST_RELEVE_T(ACTION=_F(  INTITULE = 'SYG',
              GROUP_NO='GM12', RESULTAT = RESUPILO,
             NOM_CMP = 'SIYY',NOM_CHAM = 'SIEF_NOEU_ELGA',OPERATION = 'EXTRACTION'))
             
   GNUDY=POST_RELEVE_T( ACTION=_F(  INTITULE = 'DYG',
              GROUP_NO='GM12', RESULTAT = RESUPILO,
             NOM_CMP = 'DY',NOM_CHAM = 'DEPL',OPERATION = 'EXTRACTION'))
             
#   if interactif == 1:
   sig = as_courbes.Courbe()
   sig.Lire_x(GNUDY,'DY')
   sig.Lire_y(GNUSY,'SIYY')
   t.Courbe(sig)
   t.Send('WITH G'+repr(t.gr_act))
   t.Send('S' + str(k+1) + ' SYMBOL 1')
   t.Send('S' + str(k+1) + ' SYMBOL SIZE 0.5')
   t.Send('S' + str(k+1) + ' SYMBOL COLOR 4')
   t.Send('S' + str(k+1) + ' LINE COLOR 4')
   t.Send('REDRAW')
      
   DETRUIRE(CONCEPT=_F(NOM=GNUSY))
   DETRUIRE(CONCEPT=_F(NOM=GNUDY))
   
if interactif == 1:
   t.Attendre()
else:
   t.Sortie_EPS(fic_ps)
   t.Fermer()
                
if interactif == 1:
   STANLEY()


ETA_PILO=RECU_FONCTION(RESULTAT=RESUPILO,
                       NOM_PARA_RESU='ETA_PILOTAGE',
                       TOUT_ORDRE='OUI',);

TEST_FONCTION(VALEUR=( _F(FONCTION=ETA_PILO,
                         NOM_PARA='INST',
                         VALE_PARA=1.6,
                         VALE_REFE=5.66,
                         REFERENCE='NON_REGRESSION',),),);
FIN();


