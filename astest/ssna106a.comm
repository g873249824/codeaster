# MODIF  DATE 20/09/2004   AUTEUR DURAND C.DURAND 
# RESPONSABLE F6BHHBO P.DEBONNIERES
# TITRE CYLINDRE CREUX THERMOVISCOPLASTICITE LINEAIRE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================

DEBUT(CODE=_F(NOM='SSNA106A',NIV_PUB_WEB='INTERNET'))

PRE_GIBI()

L_INST =DEFI_LIST_REEL(  DEBUT=0.0,
                        INTERVALLE=(
                        _F( PAS = 0.002,       JUSQU_A = 0.02),
                        _F( PAS = 0.004,       JUSQU_A = 0.06),
                        _F( PAS = 0.01,        JUSQU_A = 0.24),
)
                      )
MA = LIRE_MAILLAGE();

MA = DEFI_GROUP(reuse =MA,
                MAILLAGE=MA,
                CREA_GROUP_NO =(
                       _F(GROUP_MA = 'DAB',),
                       _F(GROUP_MA = 'DCD',),
                       _F(GROUP_MA = 'DBC',),
                       _F(GROUP_MA = 'DDA',),
                        )
                )



FONC1= FORMULE(NOM_PARA=('X','INST'),VALE='(X**2)*INST ')

TP1=CREA_CHAMP(OPERATION='AFFE', TYPE_CHAM='NOEU_TEMP_F',
MAILLAGE=MA,
                            AFFE=_F(  TOUT ='OUI',
                                NOM_CMP = 'TEMP',
                               VALE_F = FONC1)   )


TEMPE=CREA_RESU(    OPERATION='AFFE', TYPE_RESU='EVOL_THER',    NOM_CHAM='TEMP',AFFE=(
                      _F(  CHAM_GD = TP1,   LIST_INST =L_INST),)  )
#CALCUL MECANIQUE

MO = AFFE_MODELE( MAILLAGE =MA,
                  AFFE=_F(
                       TOUT ='OUI',
                       PHENOMENE = 'MECANIQUE',
                       MODELISATION = 'AXIS',)
                 )

MAT = DEFI_MATERIAU(
            ELAS=_F( E = 1., NU = 0.3, ALPHA = 0.7),
            LEMAITRE=_F( N = 1.,UN_SUR_K = 1.,UN_SUR_M = 0.)
           )

CHMAT = AFFE_MATERIAU (MAILLAGE = MA,
                       AFFE =_F(TOUT='OUI',
                                MATER = MAT,
                                TEMP_REF = 20.)
                       ) 

                             
BLOC = AFFE_CHAR_MECA (MODELE = MO,
                       DDL_IMPO=_F(GROUP_NO =('DAB','DCD'),
                                   DY=0.)
                      )
CALC_T = AFFE_CHAR_MECA (MODELE = MO,
                         TEMP_CALCULEE= TEMPE
                                    )
  
                                  
RESU = STAT_NON_LINE (MODELE = MO,
                      CHAM_MATER = CHMAT,
                      EXCIT =(
                         _F( CHARGE = BLOC),
                         _F( CHARGE = CALC_T),),
                      COMP_INCR =_F(RELATION ='LEMAITRE'),
                      INCREMENT =_F(LIST_INST =L_INST),
                      NEWTON    =_F(
                                MATRICE ='TANGENTE', 
                                REAC_ITER= 1),
                      PARM_THETA = 0.5,
                      CONVERGENCE=_F(
                                RESI_GLOB_RELA = 1.E-6,
                                ITER_GLOB_MAXI = 25,
                                ITER_INTE_MAXI = 1000)
                        )

RESU = CALC_ELEM( reuse= RESU,
                  RESULTAT = RESU,
                  OPTION = 'SIEF_ELNO_ELGA',
                  )
RESU = CALC_NO ( reuse= RESU,
                  RESULTAT = RESU,
                  OPTION = 'SIEF_NOEU_ELGA',
                  )

TEST_RESU( 
          RESU= _F(RESULTAT = RESU,
                   NUME_ORDRE =38,
                   NOM_CHAM ='DEPL',
                   GROUP_NO ='B',
                   NOM_CMP ='DX',
                   VALE= 1.110,
                   REFERENCE='ANALYTIQUE')
         )


     
           
FIN()
TEST_RESU( 
          RESU=(
                _F(RESULTAT = RESU,
                   NUME_ORDRE =38,
                   NOM_CHAM ='SIEF_NOEU_ELGA',
                   GROUP_NO ='B',
                   NOM_CMP ='SIXX',
                   VALE= 0.,
                   CRITERE='ABSOLU',
                   REFERENCE='ANALYTIQUE'),
                 _F(RESULTAT = RESU,
                   NUME_ORDRE =38,
                   NOM_CHAM ='SIEF_NOEU_ELGA',
                   GROUP_NO ='B',
                   NOM_CMP ='SIYY',
                   VALE= 2.7912E-4,
                   PRECISION=1.5E-2,
                   REFERENCE='ANALYTIQUE'),
                 _F(RESULTAT = RESU,
                   NUME_ORDRE =38,
                   NOM_CHAM ='SIEF_NOEU_ELGA',
                   GROUP_NO ='B',
                   NOM_CMP ='SIZZ',
                   VALE= 6.666E-4,
                   PRECISION=5.E-3,
                   REFERENCE='ANALYTIQUE'))
                   
         )
FIN()
