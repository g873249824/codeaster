# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# FISSUREE (FISSURE INCLINEE A 30 DEGRES)
# ETUDE A PARTIR DE LA SOLUTION ANALYTIQUE SINGULIERE EN MODE MIXTE
#

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

# EMPLOI DE FORMULE POUR DEFINIR LA SOLUTION ANALYTIQUE SINGULIERE
# EN DEPLACEMENT SUR LE POURTOUR (RAYON R=100MM)
#   NU = 0.3
#
K1=2.

K2=1.

KDP=1.8

KCP=2.7/1.3

A0=8.6602540379999E-01

A1=0.5

UXTEST = FORMULE(VALE='atan2(-X*A1+Y*A0,X*A0+Y*A1)',
                 A1=A1,
                 A0=A0,
                 NOM_PARA=['X', 'Y'],)

UXDP = FORMULE(VALE="""
2.593124823E-5 *
        ( K1*cos(atan2(-X*A1+Y*A0,X*A0+Y*A1)*0.5)
            *(KDP-cos(atan2(-X*A1+Y*A0,X*A0+Y*A1)))
         +K2* sin(atan2(-X*A1+Y*A0,X*A0+Y*A1)*0.5)
            *(KDP+2.0+cos(atan2(-X*A1+Y*A0,X*A0+Y*A1))))
                 """,
               K1=K1,
               A1=A1,
               A0=A0,
               KDP=KDP,
               K2=K2,
               NOM_PARA=['X', 'Y'],)

UYDP = FORMULE(VALE="""
2.593124823E-5 *
      (   K1* sin(atan2(-X*A1+Y*A0,X*A0+Y*A1)*0.5)
            *(KDP-cos(atan2(-X*A1+Y*A0,X*A0+Y*A1)))
         -K2* cos(atan2(-X*A1+Y*A0,X*A0+Y*A1)*0.5)
            *(KDP-2.0+cos(atan2(-X*A1+Y*A0,X*A0+Y*A1))))
                 """,
               K1=K1,
               A1=A1,
               A0=A0,
               KDP=KDP,
               K2=K2,
               NOM_PARA=['X', 'Y'],)

UXCP = FORMULE(VALE="""
2.593124823E-5 *
      (   K1* cos(atan2(-X*A1+Y*A0,X*A0+Y*A1)*0.5)
            *(KCP-cos(atan2(-X*A1+Y*A0,X*A0+Y*A1)))
         +K2* sin(atan2(-X*A1+Y*A0,X*A0+Y*A1)*0.5)
            *(KCP+2.0+cos(atan2(-X*A1+Y*A0,X*A0+Y*A1))))
                 """,
               K1=K1,
               A1=A1,
               A0=A0,
               KCP=KCP,
               K2=K2,
               NOM_PARA=['X', 'Y'],)

UYCP = FORMULE(VALE="""
2.593124823E-5 *
      (   K1* sin(atan2(-X*A1+Y*A0,X*A0+Y*A1)*0.5)
            *(KCP-cos(atan2(-X*A1+Y*A0,X*A0+Y*A1)))
         -K2* cos(atan2(-X*A1+Y*A0,X*A0+Y*A1)*0.5)
            *(KCP-2.0+cos(atan2(-X*A1+Y*A0,X*A0+Y*A1))))
                 """,
               K1=K1,
               A1=A1,
               A0=A0,
               KCP=KCP,
               K2=K2,
               NOM_PARA=['X', 'Y'],)

U1CP = FORMULE(VALE="""
A0*UXCP(X,Y)- A1*UYCP(X,Y)
                 """,
               A0=A0,
               UXCP=UXCP,
               A1=A1,
               UYCP=UYCP,
               NOM_PARA=['X', 'Y'],)

U2CP = FORMULE(VALE="""
+A1*UXCP(X,Y)+ A0*UYCP(X,Y)
                 """,
               A1=A1,
               UXCP=UXCP,
               A0=A0,
               UYCP=UYCP,
               NOM_PARA=['X', 'Y'],)

U1DP = FORMULE(VALE="""
A0*UXDP(X,Y)- A1*UYDP(X,Y)
                 """,
               A0=A0,
               UXDP=UXDP,
               A1=A1,
               UYDP=UYDP,
               NOM_PARA=['X', 'Y'],)

U2DP = FORMULE(VALE="""
+A1*UXDP(X,Y)+ A0*UYDP(X,Y)
                 """,
               A1=A1,
               UXDP=UXDP,
               A0=A0,
               UYDP=UYDP,
               NOM_PARA=['X', 'Y'],)

# ---------------------------------------------------------------------
M=LIRE_MAILLAGE(FORMAT='MED',)

M=DEFI_GROUP( reuse=M,  MAILLAGE=M,
                 CREA_GROUP_NO=_F( GROUP_MA = 'CC') )

MA=DEFI_MATERIAU(ELAS=_F( E = 200000.,  NU = 0.3, RHO = 0., ALPHA = 0.00005))

CM=AFFE_MATERIAU(MAILLAGE=M,
                 AFFE=_F(  TOUT = 'OUI',
                        MATER = MA) )

FOND=DEFI_FOND_FISS( MAILLAGE=M, SYME='NON',
                       FOND_FISS=_F( GROUP_NO = 'O'),)

#---------------------------------------------------------------------
#          MODELISATION ET CALCUL EN CONTRAINTES PLANES
#---------------------------------------------------------------------

MOCP=AFFE_MODELE( MAILLAGE=M,
                  AFFE=_F(  TOUT = 'OUI',
                         MODELISATION = 'C_PLAN',
                         PHENOMENE = 'MECANIQUE') )

CHCP=AFFE_CHAR_MECA_F(MODELE=MOCP,
                      DDL_IMPO=_F( GROUP_NO = 'CC',
                                DX = U1CP,
                                DY = U2CP) )

ELASCP=MECA_STATIQUE( MODELE=MOCP,
                      CHAM_MATER=CM,
                       EXCIT=_F( CHARGE = CHCP))



GCP=CALC_G(RESULTAT=ELASCP,
           THETA=_F(
                    R_INF=10.,
                    R_SUP=20.,
                    FOND_FISS=FOND,
                    MODULE=1.,
                    DIRECTION=( 8.6602540379E-01, 0.5, 0.,)),
           )

K1K2CP=CALC_G(RESULTAT=ELASCP,
              THETA=_F(FOND_FISS=FOND,
                       R_INF = 10.,
                       R_SUP = 20.,),
              OPTION='CALC_K_G')


#---------------------------------------------------------------------
#          MODELISATION ET CALCUL EN DEFORMATIONS PLANES
#---------------------------------------------------------------------

MODP=AFFE_MODELE( MAILLAGE=M,
                  AFFE=_F(  TOUT = 'OUI',
                         MODELISATION = 'D_PLAN',
                         PHENOMENE = 'MECANIQUE') )

CHDP=AFFE_CHAR_MECA_F(MODELE=MODP,
                      DDL_IMPO=_F( GROUP_NO = 'CC',
                                DX = U1DP,
                                DY = U2DP) )

ELASDP=MECA_STATIQUE( MODELE=MODP,
                      CHAM_MATER=CM,
                       EXCIT=_F( CHARGE = CHDP))



GDP=CALC_G(RESULTAT=ELASDP,
           THETA=_F(
                    R_INF=10.,
                    R_SUP=20.,
                    FOND_FISS=FOND,
                    MODULE=1.,
                    DIRECTION=( 8.6602540379E-01, 0.5, 0.,)),
            )

K1K2DP=CALC_G(RESULTAT=ELASDP,
              THETA=_F(FOND_FISS=FOND,
                       R_INF = 10.,
                       R_SUP = 20.,),
              OPTION='CALC_K_G')

#--------------------------------------------------------------------
#            TEST DES RESULTATS DE G, K1 ET K2   EN CP
#--------------------------------------------------------------------


TEST_TABLE(PRECISION=1.E-2,
           VALE_CALC=2.52132273545E-05,
           VALE_REFE=2.5000000000000001E-05,
           REFERENCE='NON_DEFINI',
           NOM_PARA='G',
           TABLE=GCP,)

TEST_TABLE(PRECISION=1.E-2,
           VALE_CALC=2.00670383183,
           VALE_REFE=2.0,
           REFERENCE='NON_DEFINI',
           NOM_PARA='K1',
           TABLE=K1K2CP,)

TEST_TABLE(PRECISION=0.0123,
           VALE_CALC=0.987774042837,
           VALE_REFE=1.0,
           REFERENCE='NON_DEFINI',
           NOM_PARA='K2',
           TABLE=K1K2CP,)

TEST_TABLE(PRECISION=1.E-2,
           VALE_CALC=2.52132274802E-05,
           VALE_REFE=2.5000000000000001E-05,
           REFERENCE='NON_DEFINI',
           NOM_PARA='G',
           TABLE=K1K2CP,)

TEST_TABLE(VALE_CALC=2.5012789142E-05,
           NOM_PARA='G_IRWIN',
           TABLE=K1K2CP,)

#--------------------------------------------------------------------
#            TEST DES RESULTATS DE G, K1 ET K2   EN DP
#--------------------------------------------------------------------


TEST_TABLE(PRECISION=1.E-2,
           VALE_CALC=2.29684381448E-05,
           VALE_REFE=2.2750000000000001E-05,
           REFERENCE='NON_DEFINI',
           NOM_PARA='G',
           TABLE=GDP,)

TEST_TABLE(PRECISION=1.E-2,
           VALE_CALC=2.0030182618,
           VALE_REFE=2.0,
           REFERENCE='NON_DEFINI',
           NOM_PARA='K1',
           TABLE=K1K2DP,)

TEST_TABLE(PRECISION=1.E-2,
           VALE_CALC=0.996040826717,
           VALE_REFE=1.0,
           REFERENCE='NON_DEFINI',
           NOM_PARA='K2',
           TABLE=K1K2DP,)

TEST_TABLE(PRECISION=1.E-2,
           VALE_CALC=2.29684382606E-05,
           VALE_REFE=2.2750000000000001E-05,
           REFERENCE='NON_DEFINI',
           NOM_PARA='G',
           TABLE=K1K2DP,)

TEST_TABLE(VALE_CALC=2.27690166595E-05,
           NOM_PARA='G_IRWIN',
           TABLE=K1K2DP,)

FIN()
#
