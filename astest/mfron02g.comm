# -*- coding: utf-8 -*-
# person_in_charge: jean-michel.proix at edf.fr
# TITRE TEST MFRONT drucker-prager
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))


MATF=DEFI_MATERIAU(
                    ELAS=_F(E=1., NU=0.3),
                    DruckerPrager=_F(
                                YoungModulus = 200.e9,
                                PoissonRatio = 0.3,
                                tau = 0.6,
                                sigc = 150.e6,
                    )
                               )



LINST=DEFI_LIST_REEL(              DEBUT=0.,INTERVALLE=(
                              _F( JUSQU_A = 1., NOMBRE = 10),
                              ))

E1=DEFI_FONCTION( NOM_PARA='INST',
                            PROL_DROITE='LINEAIRE',
                           PROL_GAUCHE='LINEAIRE',
                          VALE=( 0.0,  0.0,
                                 1.,  5.e-3,
                                 ))



SOLMF=SIMU_POINT_MAT( MATER=MATF,
                COMPORTEMENT=_F(RELATION='DruckerPrager',
                        RESI_INTE_RELA=1.e-8,
                        ),
                INCREMENT=_F(  LIST_INST = LINST),
                NEWTON=_F(REAC_ITER = 1, ),
                EPSI_IMPOSE=_F(EPXX=E1),
                     )

# reference mtest
TEST_TABLE(FILTRE=_F(NOM_PARA='INST',VALE=1.),
                   TABLE=SOLMF,
                   NOM_PARA='SIXX',
                   VALE_CALC=9.E7,
                   VALE_REFE=9.E7,
                   REFERENCE='SOURCE_EXTERNE',
)

FIN()
