# TITRE Calcul du taux de restitution d'énergie d'un disque fissuré en présence de contraintes initiales
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))


#####################
##CALCUL THERMIQUE
#####################

#Maillage mecanique
MAILMECA=LIRE_MAILLAGE(UNITE=20,
                       FORMAT='MED',
                        );

TEMPVARX=DEFI_FONCTION(NOM_PARA='X',VALE=(-100,260,
                                           0,130,
                                           22,100,
                                           100,200),);

CHP_TEMP=CREA_CHAMP( OPERATION='AFFE', TYPE_CHAM='NOEU_TEMP_F',
                     MAILLAGE=MAILMECA,
                     AFFE=_F(TOUT = 'OUI',
                     NOM_CMP = 'TEMP',
                     VALE_F = TEMPVARX))

CTE250=DEFI_FONCTION(NOM_PARA='X',
                     VALE=(-100,250,
                            100,250),);

CHTEMP0=CREA_CHAMP( OPERATION='AFFE',
                    TYPE_CHAM='NOEU_TEMP_F',
                    MAILLAGE=MAILMECA,
                    AFFE=_F(TOUT = 'OUI',
                            NOM_CMP = 'TEMP',
                            VALE_F = CTE250))

#Calcul thermique
LIST1=DEFI_LIST_REEL(DEBUT=0,
                     INTERVALLE=_F(JUSQU_A=2,NOMBRE=2,),);

RESUTHER=CREA_RESU(OPERATION='AFFE',
                   TYPE_RESU='EVOL_THER',
                   NOM_CHAM='TEMP',
                   AFFE=(_F(INST = -1,
                            CHAM_GD = CHTEMP0),
                         _F(LIST_INST = LIST1,
                            CHAM_GD = CHP_TEMP),)
                   )

##CALCUL MECANIQUE AVEC TEMPERATURE, FISSURE FERMEE => RESUMECA, pour champs
#de contrainte initiale

MO=AFFE_MODELE(MAILLAGE=MAILMECA,
               AFFE=_F(GROUP_MA='Tout',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='D_PLAN',),);

a0=23
#LN = FORMULE(NOM_PARA=('Y'),VALE='Y')
#LT = FORMULE(NOM_PARA=('X'),VALE='abs(X-a0/2)-a0/2')
FISS=DEFI_FISS_XFEM(MODELE=MO,
                    DEFI_FISS=_F(FORM_FISS='SEGMENT',
                                 PFON_ORIG  = (0. , 0., 0.),
                                 PFON_EXTR  = (a0 , 0., 0.),),
                    )

##Materiau dependant de la temperature
MAMEC=DEFI_MATERIAU(ELAS=_F(E=210000,
                            NU=0.3,
                            ALPHA=10e-6,),);

MAMECA=AFFE_MATERIAU(MAILLAGE=MAILMECA,
                     AFFE=_F(TOUT='OUI',
                             MATER=MAMEC,),
                     AFFE_VARC=_F(TOUT='OUI',
                                  NOM_VARC='TEMP',
                                  EVOL = RESUTHER,
                                  VALE_REF=250,),);


INSTMECA=DEFI_LIST_REEL(DEBUT=-1,
                        INTERVALLE=(_F(JUSQU_A=0,PAS=1,),
                                    _F(JUSQU_A=1,PAS=1,),),);

ModX=MODI_MODELE_XFEM(MODELE_IN=MO,
                         FISSURE=FISS);

##Chargement : encastrement
ENCASTRE=AFFE_CHAR_MECA(MODELE=ModX,
                        DDL_IMPO=_F(GROUP_NO='Contour',
                                    DX=0,
                                    DY=0,),);
                         
# Desactiver les ddl enrichis pour considere une fissure fermed
BLOCFISS=AFFE_CHAR_MECA(MODELE=ModX,
                       DDL_IMPO=_F(TOUT ='OUI',
                                   H1X = 0,
                                   H1Y = 0,
                                   E1X = 0,
                                   E1Y = 0,
                                   E2X = 0,
                                   E2Y = 0,
                                   E3X = 0,
                                   E3Y = 0,
                                   E4X = 0,
                                   E4Y = 0,
                                    )  ,);

##Calcul thermomecanique avec fissure fermee pour extraction des contraintes
RESUMECA=STAT_NON_LINE(MODELE=ModX,
                       CHAM_MATER=MAMECA,
                       EXCIT=(_F(CHARGE=ENCASTRE,),
                              _F(CHARGE=BLOCFISS,),),
                       COMPORTEMENT=_F(RELATION='ELAS',),
                       INCREMENT=_F(LIST_INST=INSTMECA,),);

RESUMECA=CALC_CHAMP(reuse=RESUMECA,
                    RESULTAT=RESUMECA,
                    CONTRAINTE=('SIEF_ELNO','SIEF_NOEU',),
                    DEFORMATION=('EPSI_ELGA','EPSP_ELNO',),
#                    CRITERES=('SIEQ_ELGA',),
                    VARI_INTERNE=('VARI_ELNO',),);

##Extraction des contraintes au noeuds et points de Gauss
# en fait, aux noeuds, c'est impossible car avec X-FEM SIEF_ELNO est trop pauvre
SIEFELGA=CREA_CHAMP(TYPE_CHAM='ELGA_SIEF_R',
                    OPERATION='EXTR',
                    RESULTAT=RESUMECA,
                    NOM_CHAM='SIEF_ELGA',
                    INST=1,);

##Calcul thermomecanique sans etat init ouverture de la fissure
RESOUVFI=STAT_NON_LINE(MODELE=ModX,
                       CHAM_MATER=MAMECA,
                       EXCIT=(_F(CHARGE=ENCASTRE,),),
                       COMPORTEMENT=_F(RELATION='ELAS',),
                       INCREMENT=_F(LIST_INST=INSTMECA,),);

RESOUVFI=CALC_CHAMP(reuse=RESOUVFI,
                    RESULTAT=RESOUVFI,
                    CONTRAINTE=('SIEF_ELNO',),
                    DEFORMATION=('EPSI_ELGA','EPSP_ELNO',),
#                    CRITERES=('SIEQ_ELGA',),
                    VARI_INTERNE=('VARI_ELNO',),);

##Definition du fond de fissure et des couronnes pour reutilisation dans resuini
# Définit par CALC_G avec ce maillahe

# defintion de 3 couronnes pour le champ theta
#---------------------------------------------

h = 0.6

# valeurs automatiquement calculees (C1 = 2h - 4h)
Rinf1 = 1.2
Rsup1 = 2.4

# valeurs automatiquement calculees (C2 = 4h - 8h)
Rinf2 = 2.4
Rsup2 = 4.8

# meme valeurs que sslp115a (soit ici C3 = 7h - 15h)
Rinf3 = 4.228
Rsup3 = 9.0
GTHER3=CALC_G(THETA=_F(FISSURE=FISS,
                       NUME_FOND = 2,
                       R_INF=Rinf3,
                       R_SUP=Rsup3,),
              RESULTAT=RESOUVFI,
              INST=1.,
              OPTION='CALC_G')

IMPR_TABLE(TABLE = GTHER3, UNITE=9)

PKTHER=POST_K1_K2_K3(MODELISATION='D_PLAN',
                     NUME_FOND = 2,
                     MATER = MAMEC,
                     FISSURE=FISS,
                     RESULTAT=RESOUVFI)

IMPR_TABLE(TABLE = PKTHER, UNITE=9)

#################################################################
# Calcul de G en presence du champ de contrainte residuelle 
# genere par le calcul thermique)
##################################################################

## Definition de la liste d'instants
LIST3=DEFI_LIST_REEL(DEBUT=2,
                     INTERVALLE=_F(JUSQU_A=3,PAS=1,),);

## Affectation du materiau mecanique (sans chargement thermique)
MAMECA2=AFFE_MATERIAU(MAILLAGE=MAILMECA,
                      AFFE=_F(TOUT='OUI',MATER=MAMEC,),);

## Resolution ouverture de la fissure en presence d'un champ de contrainte residuelle
RESUINI=STAT_NON_LINE(MODELE=ModX,
                      CHAM_MATER=MAMECA2,
                      EXCIT=(_F(CHARGE=ENCASTRE,),),
                      COMPORTEMENT=_F(RELATION='ELAS',),
                      ETAT_INIT=_F(SIGM=SIEFELGA,),
                      CONVERGENCE=_F(RESI_GLOB_MAXI=1.E-10),
                      INCREMENT=_F(LIST_INST=LIST3),);

## Calcul postraitement
RESUINI=CALC_CHAMP(reuse=RESUINI,
                   RESULTAT=RESUINI,
                   DEFORMATION=('EPSI_ELGA','EPSP_ELNO',),
#                   CRITERES=('SIEQ_ELGA',), # pas possble 
                   VARI_INTERNE=('VARI_ELNO',),);


# Calcul de G pour les 3 couronnes, a partir de SIEF_ELGA
#--------------------------------------------------------

GINGA1=CALC_G(THETA=_F(FISSURE=FISS, 
                       NUME_FOND = 2,
                       R_INF = Rinf1,
                       R_SUP = Rsup1),
              RESULTAT=RESUINI,
              INST=3,
              ETAT_INIT =_F(SIGM=SIEFELGA),
              OPTION='CALC_G')

GINGA2=CALC_G(THETA=_F(FISSURE=FISS,
                       NUME_FOND = 2,
                       R_INF = Rinf2,
                       R_SUP = Rsup2),
             RESULTAT=RESUINI,
             INST=3,
             ETAT_INIT =_F(SIGM=SIEFELGA),
             OPTION='CALC_G')
             
GINGA3=CALC_G(THETA=_F(FISSURE=FISS,
                       NUME_FOND = 2,
                       R_INF = Rinf3,
                       R_SUP = Rsup3),
             RESULTAT=RESUINI,
             INST=3,
             ETAT_INIT =_F(SIGM=SIEFELGA),
             OPTION='CALC_G')

IMPR_TABLE(TABLE=GINGA1,UNITE=11)
IMPR_TABLE(TABLE=GINGA2,UNITE=11)
IMPR_TABLE(TABLE=GINGA3,UNITE=11)

# Calcul de G et K pour les 3 couronnes, a partir de SIEF_ELGA
#-------------------------------------------------------------

GINGAK1=CALC_G(THETA=_F(FISSURE=FISS, 
                       NUME_FOND = 2,
                       R_INF = Rinf1,
                       R_SUP = Rsup1),
               RESULTAT=RESUINI,
               INST=3,
               ETAT_INIT =_F(SIGM=SIEFELGA),
               OPTION='CALC_K_G')

GINGAK2=CALC_G(THETA=_F(FISSURE=FISS,
                       NUME_FOND = 2,
                       R_INF = Rinf2,
                       R_SUP = Rsup2),
               RESULTAT=RESUINI,
               INST=3,
               ETAT_INIT =_F(SIGM=SIEFELGA),
               OPTION='CALC_K_G')   

GINGAK3=CALC_G(THETA=_F(FISSURE=FISS,
                        NUME_FOND = 2,
                        R_INF = Rinf3,
                        R_SUP = Rsup3),
               RESULTAT=RESUINI,
               INST=3,
               ETAT_INIT =_F(SIGM=SIEFELGA),
               OPTION='CALC_K_G')             

IMPR_TABLE(TABLE=GINGAK1,UNITE=11)
IMPR_TABLE(TABLE=GINGAK2,UNITE=11)
IMPR_TABLE(TABLE=GINGAK3,UNITE=11)

PKMECA=POST_K1_K2_K3(MODELISATION='D_PLAN',
                     INST=3,
                     NUME_FOND = 2,
                     MATER = MAMEC,
                     FISSURE=FISS,
                     RESULTAT=RESUINI)          

IMPR_TABLE(TABLE=PKMECA, UNITE=9)

# -------------------------------------------------------------------
#                       Tests des tables
# -------------------------------------------------------------------

# Gref provient de la modelisation A : CALC_G a partir du calcul thermique
Gref = 55.36

# KIref =  sqrt( E * Gref / (1 - nu^2)) = 3574.396129741035
KIref = 3574.39612


# 1) le G de CALC_G
TEST_TABLE(PRECISION=0.021,
           VALE_CALC=54.9057366145,
           VALE_REFE=Gref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='G',
           TABLE=GINGA1)

TEST_TABLE(PRECISION=0.02,
           VALE_CALC=54.5166405674,
           VALE_REFE=Gref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='G',
           TABLE=GINGA2)

TEST_TABLE(PRECISION=0.035,
           VALE_CALC=53.4298213805,
           VALE_REFE=Gref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='G',
           TABLE=GINGA3)

# 2) le G de CALC_K_G
TEST_TABLE(PRECISION=0.02,
           VALE_CALC=55.0309001195,
           VALE_REFE=Gref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='G',
           TABLE=GINGAK1,)

TEST_TABLE(PRECISION=0.02,
           VALE_CALC=54.6483565339,
           VALE_REFE=Gref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='G',
           TABLE=GINGAK2,)

TEST_TABLE(PRECISION=0.035,
           VALE_CALC=53.5677970912,
           VALE_REFE=Gref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='G',
           TABLE=GINGAK3,)
           
# 3) le K de CALC_K_G
TEST_TABLE(PRECISION=0.01,
           VALE_CALC=3571.21045922,
           VALE_REFE=KIref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='K1',
           TABLE=GINGAK1,)

TEST_TABLE(PRECISION=0.01,
           VALE_CALC=3561.07057244,
           VALE_REFE=KIref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='K1',
           TABLE=GINGAK2,)

TEST_TABLE(PRECISION=0.01,
           VALE_CALC=3539.8265489,
           VALE_REFE=KIref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='K1',
           TABLE=GINGAK3,)

# 4) le K avec POST_K1_K2_K3 : 5% d'ecart, c'est bizarre
TEST_TABLE(PRECISION=0.05,
           VALE_CALC=3735.03567957,
           VALE_REFE=KIref,
           REFERENCE='AUTRE_ASTER',
           NOM_PARA='K1',
           TABLE=PKMECA,)

# 5) le G suite au calcul thermique
TEST_TABLE(VALE_CALC=55.1469005895,
           NOM_PARA='G',
           TABLE=GTHER3,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=1,),
           )



FIN()
