# MODIF  DATE 20/09/2004   AUTEUR DURAND C.DURAND 
# TITRE FORMATION DE BASE A L'UTILISATION D'ASTER - TP DYNAMIQUE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
#
#
# ======================================================================
#
#        TUYAUTERIE COMPORTANT UN COUDE
#     MODELISATION PAR DES ELEMENTS POUTRES
#     -------------------------------------
#
#


DEBUT(CODE=_F(NOM='FORMA01D',NIV_PUB_WEB='INTERNET'),);
# 1 - MISE EN DONNEES :
# INTERFACE AVEC GIBI ET LECTURE DU MAILLAGE
#
#


PRE_GIBI();

MAIL=LIRE_MAILLAGE(VERI_MAIL=_F(VERIF='NON'),);
#
# DEFINITION DES ELEMENTS FINIS UTILISES
#
#


MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=(_F(GROUP_MA=('TUY1','TUY2'),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='POU_D_T',),
                         _F(GROUP_MA='COUDE',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='POU_C_T',),),);
#
# DEFINITION DU MATERIAU UTILISE
#
#


ACIER=DEFI_MATERIAU(ELAS=_F(E=2.1E11,
                            NU=0.3,
                            RHO=7800.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(GROUP_MA='TUYAU',
                            MATER=ACIER,),);
#
# CARACTERISTIQUES DES POUTRES
#
#


CARA_POU=AFFE_CARA_ELEM(MODELE=MODELE,
                        POUTRE=_F(GROUP_MA='TUYAU',
                                  SECTION='CERCLE',
                                  CARA=('R','EP'),
                                  VALE=(0.2, 0.02),),
                        DEFI_ARC=_F(GROUP_MA='COUDE',
                                    CENTRE=(0.6, 3.0, 0.0),
                                    RAYON=0.6,),);
#
# DEFINITION DES CONDITIONS AUX LIMITES 
#   AU POINT A : ENCASTREMENT
#
#


BLOQUAGE=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=_F(GROUP_NO='PA',
                                    DX=0.0,
                                    DY=0.0,
                                    DZ=0.0,
                                    DRX=0.0,
                                    DRY=0.0,
                                    DRZ=0.0,),);


# 2 - CALCUL DES CINQ PREMIERS MODES PROPRES
#
# CALCUL DES MATRICES ASSEMBLEES K ET M
#
#


MACRO_MATR_ASSE(MODELE=MODELE,
                CHAM_MATER=CHMAT,
                CARA_ELEM=CARA_POU,
                CHARGE=BLOQUAGE,
                NUME_DDL=CO('NUMEDDL'),
                MATR_ASSE=(_F(MATRICE=CO('RIGIDITE'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSE'),
                              OPTION='MASS_MECA',),),);
#
#
#


MODES=MODE_ITER_SIMULT(MATR_A=RIGIDITE,
                       MATR_B=MASSE,
                       CALC_FREQ=_F(OPTION='PLUS_PETITE',
                                    NMAX_FREQ=5,),);
#
# ECRITURE DES MODES AU FORMAT CASTEM
#
#


IMPR_RESU(MODELE=MODELE,FORMAT='CASTEM',
          RESU=_F(MAILLAGE=MAIL,
                  RESULTAT=MODES,
                  NOM_CHAM='DEPL',),);

# 3 - ANALYSE TRANSITOIRE :
# FORCE APPLIQUEE AU POINT B
#


CHARGT=AFFE_CHAR_MECA(MODELE=MODELE,
                      FORCE_NODALE=_F(GROUP_NO='PB',
                                      FY=1.E5,),);
#
# CALCUL DU VECTEUR ASSEMBLE FY
#
#
#


FY_ELEM=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                       CHARGE=CHARGT,
                       CARA_ELEM=CARA_POU,);

FY=ASSE_VECTEUR(VECT_ELEM=FY_ELEM,
                NUME_DDL=NUMEDDL,);
#
#
#
#
# PROJECTION DES MATRICES M ET K SUR LA BASE MODALE
#
#
#


MACRO_PROJ_BASE(BASE=MODES,
                MATR_ASSE_GENE=(_F(MATRICE=CO('MASS_GEN'),
                                   MATR_ASSE=MASSE,),
                                _F(MATRICE=CO('RIGI_GEN'),
                                   MATR_ASSE=RIGIDITE,),),
                VECT_ASSE_GENE=_F(VECTEUR=CO('VGEN_FY'),
                                  VECT_ASSE=FY,),);
#
#
#

OMEGA = 121.0;

#
# DEFINITION DE LA FONCTION D'EVOLUTION DE FY
#
#
#


EVOL_FY = FORMULE(VALE='cos(OMEGA*INST)',
                  NOM_PARA='INST');
#
#
#


L_INTERP=DEFI_LIST_REEL(DEBUT=0.0,
                        INTERVALLE=_F(JUSQU_A=2.0,
                                      PAS=1.E-4,),);

EVINT_FY=CALC_FONC_INTERP(FONCTION=EVOL_FY,
                          NOM_RESU='EVOL_FY',
                          LIST_PARA=L_INTERP,
                          NOM_PARA = 'INST',);
#
#
#


LISTER=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=2.0,
                                    NOMBRE=1001,),);
#
#
#-----------------------------------------------------------------------
#
#


TRANGEN1=DYNA_TRAN_MODAL(MASS_GENE=MASS_GEN,
                         RIGI_GENE=RIGI_GEN,
                         AMOR_REDUIT=(0.02,0.02,0.03,0.04,0.05),
                         INCREMENT=_F(INST_INIT=0.0,
                                      INST_FIN=2.0,
                                      PAS=1.E-4,),
                         ARCHIVAGE=_F(PAS_ARCH=10,),
                         EXCIT=_F(VECT_GENE=VGEN_FY,
                                  FONC_MULT=EVINT_FY,),);
#
# RECUPERATION DES DEPLACEMENTS ET VITESSES CALCULES EN B, C, D
# --------------------------------------------------------------
#
#


DY_B=RECU_FONCTION(RESU_GENE=TRANGEN1,
                   NOM_CHAM='DEPL',
                   LIST_INST=LISTER,
                   INTERP_NUME='LIN',
                   NOM_CMP='DY',
                   GROUP_NO='PB',
                   INTERPOL='LIN',);

DY_C=RECU_FONCTION(RESU_GENE=TRANGEN1,
                   NOM_CHAM='DEPL',
                   LIST_INST=LISTER,
                   INTERP_NUME='LIN',
                   NOM_CMP='DY',
                   GROUP_NO='PC',
                   INTERPOL='LIN',);

DY_D=RECU_FONCTION(RESU_GENE=TRANGEN1,
                   NOM_CHAM='DEPL',
                   LIST_INST=LISTER,
                   INTERP_NUME='LIN',
                   NOM_CMP='DY',
                   GROUP_NO='PD',
                   INTERPOL='LIN',);
# IMPRESSION DES DEPLACEMENTS TRANSITOIRES
#
#


IMPR_COURBE(UNITE=25,
            FORMAT='AGRAF',
            TITRE_GRAPHIQUE='DEPLACEMENT DU TUYAU EN B C D ',
            COURBE=(_F(FONCTION=DY_B,
                       LEGENDE='DY_B',),
                    _F(FONCTION=DY_C,
                       LEGENDE='DY_C',),
                   _F(FONCTION=DY_D,
                      LEGENDE='DY_D',),),);
#
#
# VALEURS MIN ET MAX DES CONTRAINTES DUES AUX EFFORTS GENERALISES
#
#


DYNATRAN=REST_BASE_PHYS(RESU_GENE=TRANGEN1,
                        LIST_INST=LISTER,
                        INTERPOL='LIN',
                        TOUT_CHAM='OUI',);
#
# CALCUL DES CONTRAINTES DUES AUX EFFORTS GENERALISES
#

DYNATRAN=CALC_ELEM(reuse =DYNATRAN,
                   MODELE=MODELE,
                   CHAM_MATER=CHMAT,
                   CARA_ELEM=CARA_POU,
                   OPTION='SIPO_ELNO_DEPL',
                   RESULTAT=DYNATRAN,);

# INSTANT DES MAX :
#

EXTR_T=CREA_CHAMP(TYPE_CHAM='ELNO_SIEF_R',
                  OPERATION='EXTR',
                  RESULTAT=DYNATRAN,
                  NOM_CHAM='SIPO_ELNO_DEPL',
                  TYPE_MAXI='MAXI',
                  TYPE_RESU='INST',
                  LIST_INST=LISTER,
                  PRECISION=1.0E-6,);

# VALEUR DES MAX :
#

EXTR_V=CREA_CHAMP(TYPE_CHAM='ELNO_SIEF_R',
                  OPERATION='EXTR',
                  RESULTAT=DYNATRAN,
                  NOM_CHAM='SIPO_ELNO_DEPL',
                  TYPE_MAXI='MAXI',
                  TYPE_RESU='VALE',
                  LIST_INST=LISTER,
                  PRECISION=1.0E-6,);

IMPR_RESU(MODELE=MODELE,FORMAT='RESULTAT',
          RESU=(_F(CHAM_GD=EXTR_T,),
                _F(CHAM_GD=EXTR_V,),),);

# INSTANT DES MIN :
#

EXTR_TMI=CREA_CHAMP(TYPE_CHAM='ELNO_SIEF_R',
                  OPERATION='EXTR',
                  RESULTAT=DYNATRAN,
                  NOM_CHAM='SIPO_ELNO_DEPL',
                  TYPE_MAXI='MINI',
                  TYPE_RESU='INST',
                  LIST_INST=LISTER,
                  PRECISION=1.0E-6,);

# VALEUR DES MAX :
#

EXTR_VMI=CREA_CHAMP(TYPE_CHAM='ELNO_SIEF_R',
                  OPERATION='EXTR',
                  RESULTAT=DYNATRAN,
                  NOM_CHAM='SIPO_ELNO_DEPL',
                  TYPE_MAXI='MINI',
                  TYPE_RESU='VALE',
                  LIST_INST=LISTER,
                  PRECISION=1.0E-6,);

IMPR_RESU(MODELE=MODELE,FORMAT='RESULTAT',
          RESU=(_F(CHAM_GD=EXTR_TMI,),
                _F(CHAM_GD=EXTR_VMI,),),);

# TEST_RESU UNIQUEMENT POUR FAIRE TEST

TEST_RESU(RESU=_F(RESULTAT=DYNATRAN,
                  NUME_ORDRE=21,
                  NOM_CHAM='SIPO_ELNO_DEPL',
                  NOM_CMP='SN',
                  MAILLE='M10',
                  NOEUD='N7',
                  VALE=-6.2035597042013003E4,
                  REFERENCE='NON_REGRESSION',
                  VERSION='5.07',),);

FIN();
#
#
