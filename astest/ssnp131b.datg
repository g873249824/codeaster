DEBUT(PAR_LOT='NON')


from Utilitai.sup_gmsh import *
from numpy import *

#Creation generique de maillage d'une Ã©prouvette CT en fonction des
#caracteristiques geometriques
#L eprouvette construite est constituee d une goupille circulaire,
#de 2 marches permettant d arriver au niveau du ligament de la fissure
#le centre de la goupille sert d origine pour les abscisses


x = 27.4 #abscisse du centre du cercle de front de fissure
r = .1  #rayon du front de fissure
ad = 50.   #distance entre le centre de la goupille et le bord lateral droit 
ag = -12.5 #distance entre le centre de la goupille et le bord lateral gauche
h = 30.    #hauteur de la demie CT
yc= 18.75  #ordonnee du centre de la goupille
ye1=9.5    #ordonnee de la premiere marche (en dessous de la goupille, la plus haute)
ye2=4    #ordonnee de la second marche
xe1=-10.5    #abscisse de debut de la premiere marche (superieure a celle du bord droit)
xe2=5    #abscisse de fin de la seconde marche
xe3=19.268     #abscisse de fin de la troisieme marche
xe4=21.     #abscisse de fin du biseau
ye3=1.     #ordonnee de la troisieme marche
rg =6.5   #rayon de la goupille (doit etre inferieur a (h-yc)/2 et (yc-ye1)
lg =20.5   #longueur de la partie gauche de l eprouvette (avant le biseau); doit etre inferieure a h-ye1

ordre_maillage = 2 #on veut un maillage quadratique, sinon, mettre à 1

if ((x-5*r)<xe2) :
	raise 'le rayon de la fissure est trop grand par rapport aux dimensions de l eprouvette (rapport minimal de 1500); veuillez modifier le programme pour prendre en compte cette caracteristique (rayon du grand disque entourant la fissure arrive sur la marche basse.'
if ((h-yc)<rg) or (yc-ye1)<rg :
	raise 'le rayon de la goupille rg semble trop grand'
if (xe1<ag) :
	raise 'le biseau est dans le mauvais sens; modifiez ag ou xe1'
if (lg>h-ye1) :
	raise 'le biseau est dans le mauvais sens; modifiez lg ou ye1'
 
 
hfin = 0.125
hgro = 2.25
hmoy = (hfin*hgro)**0.5

#*********************************************************
#Creation du pourtour proche du front de fissure
C  = Point(x,0) #centre du front de fissure
T2 = Point(x+r,0)
T1 = Point(x,r)
T3 = Point(x+1.1*r,0)
T4 = Point(x,1.1*r)
T5 = Point(x-1.1*r,1.1*r)
T6 = Point(x-1.1*r,r)
T1.Size(r/20)
T2.Size(r/20)
T3.Size(r/20)
T4.Size(r/20)
T5.Size(r/20)
T6.Size(r/20)

T3T4=Circle(T3,C,T4)
T2T3=Line(T2,T3)
T4T1=Line(T4,T1)
T4T5=Line(T4,T5)
T5T6=Line(T5,T6)
T6T1=Line(T6,T1)
T1T2=Circle(T1,C,T2)

TIP=Surface(T1T2,T2T3,T3T4,T4T5,T5T6,T6T1)
TIP.Recombine()
#****************************************************************************
#Creation des 4 surfaces circulaires entourant la fissure
#Premier disque
BG1 = Point (x-2.*r, r)
V1  = Point (x,sqrt(2.**2+1)*r)
BD1 = Point (x+sqrt(2.**2+1)*r,0)
BG1.Size(r/10)
V1.Size(r/10)
BD1.Size(r/10)

T6BG1=Line(T6,BG1)
BD1T3=Line(BD1,T3)
C1G=Circle(BG1,C,V1)
C1D=Circle(V1,C,BD1)


DISK1=Surface(T6BG1,C1G,C1D,BD1T3,T3T4,T4T5,T5T6)
DISK1.Recombine()
#Second disque
BG2 = Point (x-3*r, r)
V2  = Point (x,sqrt(3**2+1)*r)
BD2 = Point (x+sqrt(3**2+1)*r,0)
BG2.Size(r/5)
V2.Size(r/5)
BD2.Size(r/5)

BD1BD2=Line(BD1,BD2)
BG2BG1=Line(BG2,BG1)
C2G=Circle(V2,C,BG2)
C2D=Circle(BD2,C,V2)

DISK2=Surface(BD1BD2,C2D,C2G,BG2BG1,C1G,C1D)

#Troisieme disque
BG3 = Point (x-4*r,r)
V3  = Point (x,sqrt(4**2+1)*r)
BD3 = Point (x+sqrt(4**2+1)*r,0)
BG3.Size(r/2)
V3.Size(r/2)
BD3.Size(r/2)

BD3BD2=Line(BD3,BD2)
BG2BG3=Line(BG2,BG3)
C3G=Circle(BG3,C,V3)
C3D=Circle(V3,C,BD3)

DISK3=Surface(BD3BD2,C2D,C2G,BG2BG3,C3G,C3D)

#Quatrieme disque
BG4 = Point (xe4,r)
V4  = Point (x,sqrt((x-xe4)**2+r**2))
BD4 = Point (x+sqrt((x-xe4)**2+r**2),0)
BG4.Size(6*r)
V4.Size(6*r)
BD4.Size(2*r)

BD3BD4=Line(BD3,BD4)
BG4BG3=Line(BG4,BG3)
C4G=Circle(V4,C,BG4)
C4D=Circle(BD4,C,V4)

DISK4=Surface(BD3BD4,C4D,C4G,BG4BG3,C3G,C3D)

#*****************************************************
#Creation de la goupille
CG=Point(0,yc)
C1=Point(-rg*cos(pi/4),yc+rg*sin(pi/4))
C2=Point(rg*cos(pi/4),yc+rg*sin(pi/4))
C3=Point(rg*cos(pi/4),yc-rg*sin(pi/4))
C4=Point(0,yc-rg)
CG.Size(rg/5)
C1.Size(pi/20*rg)
C2.Size(pi/10*rg)
C3.Size(pi/5*rg)
C4.Size(pi/5*rg)

CGC2=Line(CG,C2)
C2C1=Circle(C2,CG,C1)
C1CG=Line(C1,CG)

GOUP=Surface(CGC2,C2C1,C1CG)

C1C4=Circle(C1,CG,C4)
C4C3=Circle(C4,CG,C3)
C3C2=Circle(C3,CG,C2)


#*****************************************************
#Creation du corps de l eprouvette
#Creation de la surface superieure au ligament
BD = Point(ad,0)
HD = Point(ad,h)
HF = Point(x,h)
BD.Size(h/10)
HD.Size(h/10)
HF.Size(h/5)


BDBD4=Line(BD,BD4)
V4HF=Line(V4,HF)
HFHD=Line(HF,HD)
HDBD=Line(HD,BD)

LSUP=Surface(BDBD4,C4D,V4HF,HFHD,HDBD)

#Creation de la surface entre la goupille et la fissure

E1D=Point(0,ye1)
E2G=Point(0,ye2)
E2D=Point(xe2,ye2)
BF2=Point(xe3,ye3)
BF=Point(xe2,ye3)

E1D.Size((ye1-ye2)/3)
E2G.Size((ye1-ye2)/3)
E2D.Size(ye2/3)
BF.Size(ye2/3)
BF2.Size(ye2/3)

E1DC4=Line(E1D,C4)
C3BG4=Line(C3,BG4)
C2HF=Line(C2,HF)
BG4BF2=Line(BG4,BF2)
BF2BF=Line(BF2,BF)
BFE2D=Line(BF,E2D)
E2DE2G=Line(E2D,E2G)
E2GE1D=Line(E2G,E1D)

GOUPFIS1=Surface(E1DC4,C4C3,C3BG4,BG4BF2,BF2BF,BFE2D,E2DE2G,E2GE1D)
GOUPFIS2=Surface(C3C2,C2HF,V4HF,C4G,C3BG4)

#Creation de la surface entre la goupille et le haut de l eprouvette
HG=Point(ag,h)
HG.Size((x-ag)/8)

HGC1=Line(HG,C1)
HFHG=Line(HF,HG)

GOUPHAUT=Surface(HGC1,C2C1,C2HF,HFHG)

#Creation de la surface entre la goupille et la gauche de l eprouvette
G1=Point(ag,h-lg)
E1G=Point(xe1,ye1)
E1G.Size((x-ag)/10)
G1.Size((x-ag)/10)

E1DE1G=Line(E1D,E1G)
E1GG1=Line(E1G,G1)
G1HG=Line(G1,HG)

GOUPGAU=Surface(HGC1,C1C4,E1DC4,E1DE1G,E1GG1,G1HG)


mesh = Mesh(order=ordre_maillage, algo = 1)
mesh.Physical('PGOUP',CG)
mesh.Physical('FOND_0',TIP,DISK1,DISK2,DISK3,DISK4)
mesh.Physical('LIGBE',BDBD4,BD3BD4,BD3BD2,BD1BD2,BD1T3,T2T3)
mesh.Physical('SEPRO',LSUP,GOUPFIS1,GOUPFIS2,GOUPHAUT,GOUPGAU)
mesh.Physical('SGOUP',GOUP)
mesh.Physical('SYM',HDBD)
#mesh.View()

MA = mesh.LIRE_GMSH()

IMPR_RESU(FORMAT='ASTER',
          UNITE=12,
          RESU=_F(MAILLAGE=MA),
          )
IMPR_RESU(FORMAT='GMSH',
          UNITE=13,
          RESU=_F(MAILLAGE=MA),
          )
IMPR_RESU(FORMAT='MED',
          UNITE=14,
          RESU=_F(MAILLAGE=MA),
          )

FIN()
