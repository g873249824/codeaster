# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#
#        TUYAUTERIE COMPORTANT UN COUDE
#     MODELISATION PAR DES ELEMENTS HEXAEDRES
#     ---------------------------------------

POURSUITE(CODE='OUI');

FYC=AFFE_CHAR_MECA(MODELE=MODELE,
                   FORCE_FACE=_F(GROUP_MA='EFOND',
                                 FY=1.0,),);

FYE=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                   CHARGE=FYC,);

FY=ASSE_VECTEUR(VECT_ELEM=FYE,
                NUME_DDL=NUMEDDL,);

PROJ_BASE(BASE=MODES,
          MATR_ASSE_GENE=(_F(MATRICE=CO('MASPRO'),
                             MATR_ASSE=MASSE,),
                          _F(MATRICE=CO('RIPRO'),
                             MATR_ASSE=RIGIDITE,),),
          VECT_ASSE_GENE=_F(VECTEUR=CO('FYPRO'),
                            VECT_ASSE=FY,),);
tfi = 2.0;

pas = 0.0001;

fex = 20.0;

amF = 10000000.0;


fs = FORMULE(VALE='amF*sin(2*pi*fex*INST)',
             amF=amF,
             fex=fex,
             NOM_PARA='INST',)

LINS=DEFI_LIST_REEL(DEBUT=0.0,
                    INTERVALLE=_F(JUSQU_A=tfi,
                                  PAS=pas,),);

FSI=CALC_FONC_INTERP(FONCTION=fs,
                     LIST_PARA=LINS,
                     PROL_DROITE='CONSTANT',
                     PROL_GAUCHE='CONSTANT',);

DTM=DYNA_VIBRA(TYPE_CALCUL = 'TRAN', BASE_CALCUL='GENE',
               MATR_MASS   = MASPRO,
               MATR_RIGI   = RIPRO,
               AMOR_MODAL  = _F(AMOR_REDUIT    = .05,),
               INCREMENT   = _F(INST_FIN       = tfi,
                                PAS            = pas,),
               SCHEMA_TEMPS= _F(SCHEMA         = 'DIFF_CENTRE'),
               EXCIT       = _F(VECT_ASSE_GENE = FYPRO, 
                                FONC_MULT      = FSI,),);

DEPY_B=RECU_FONCTION(RESU_GENE=DTM,
                     NOM_CHAM='DEPL',
                     NOM_CMP='DY',
                     GROUP_NO='P_EFOND',);

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=29,
              COURBE=_F(FONCTION=DEPY_B,
                        MARQUEUR=0,),);
pavi = 0.01;

LIVI=DEFI_LIST_REEL(DEBUT=0.0,
                    INTERVALLE=_F(JUSQU_A=tfi,
                                  PAS=pavi,),);

TRAN=REST_GENE_PHYS(RESU_GENE=DTM,
                    LIST_INST=LIVI,
                    NOM_CHAM='DEPL',);

IMPR_RESU(FORMAT='MED',
          RESU=_F(RESULTAT=TRAN,),);

LFR=DEFI_LIST_REEL(DEBUT=0,
                   INTERVALLE=_F(JUSQU_A=60,
                                 PAS=.1,),);

DLH=DYNA_VIBRA( TYPE_CALCUL='HARM', BASE_CALCUL='GENE',
                MATR_MASS=MASPRO,
                MATR_RIGI=RIPRO,
                AMOR_MODAL=_F(AMOR_REDUIT=.05,),
                LIST_FREQ=LFR,
                EXCIT=_F(VECT_ASSE_GENE=FYPRO,
                         COEF_MULT=amF,),);

DHB=REST_GENE_PHYS(RESU_GENE=DLH,
                   NOM_CHAM=('DEPL','ACCE',),
                   GROUP_NO='P_EFOND',);

DHY_B=RECU_FONCTION(RESULTAT=DHB,
                    NOM_CHAM='DEPL',
                    NOM_CMP='DY',
                    GROUP_NO='P_EFOND',);

MDHY_B=CALC_FONCTION(EXTRACTION=_F(FONCTION=DHY_B,
                                   PARTIE='MODULE',),);

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=39,
              COURBE=_F(FONCTION=MDHY_B,
                        MARQUEUR=0,),
                        ECHELLE_Y='LOG',);

TEST_RESU(RESU=_F(GROUP_NO='P_EFOND',
                  INST=1.0,
                  RESULTAT=TRAN,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  VALE_CALC=-0.12834619214,
                  ),
          )

TEST_FONCTION(VALEUR=_F(VALE_CALC=0.9390585084505,
                        VALE_PARA=10.0,
                        FONCTION=MDHY_B,
                        ),
              )

FIN();
