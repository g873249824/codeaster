# TITRE POST-FLAMBEMENT ELASTIQUE D'UNE STRUCTURE EN L
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='OUI'))

MA=LIRE_MAILLAGE(UNITE=17,FORMAT='MED',)

MA=DEFI_GROUP(reuse =MA,
   MAILLAGE=MA,
   CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI',),)

MA_SECT=LIRE_MAILLAGE(UNITE=18,FORMAT='MED',)

MO=AFFE_MODELE(
   MAILLAGE=MA,
   AFFE=_F(TOUT='OUI', PHENOMENE='MECANIQUE', MODELISATION='POU_D_TGM',),)

ACIER=DEFI_MATERIAU(ELAS=_F(E=71240.0, NU=0.3,),)

GF=DEFI_GEOM_FIBRE(
   SECTION =_F(GROUP_FIBRE='SECF',
             GROUP_MA_SECT='SECT',
             MAILLAGE_SECT=MA_SECT,
            COOR_AXE_POUTRE=(0.,0.,),),
)

COMPF=DEFI_COMPOR(
   GEOM_FIBRE=GF,MATER_SECT=ACIER,
   MULTIFIBRE=_F(GROUP_FIBRE='SECF',MATER=ACIER, RELATION='ELAS',), )

MAT=AFFE_MATERIAU(
   MAILLAGE=MA,
   AFFE=_F(TOUT='OUI',MATER=ACIER,),
   AFFE_COMPOR=_F(TOUT='OUI',COMPOR=COMPF),
)

CARA=AFFE_CARA_ELEM(
   MODELE=MO,
   POUTRE=_F(GROUP_MA='LAME', SECTION='GENERALE',
             CARA=('A','IY','IZ','AY','AZ','JX','JG',),
             VALE=(18.0,0.5346,1336.5,1.2,1.2,2.16,0.0,),),
   ORIENTATION=_F(GROUP_MA='LAME', CARA='ANGL_VRIL', VALE=0.,),
   GEOM_FIBRE=GF,
   MULTIFIBRE=_F(GROUP_MA='LAME', GROUP_FIBRE='SECF', ),)

CL=AFFE_CHAR_MECA(
   MODELE=MO,
   DDL_IMPO=_F(GROUP_NO='PA', DX=0., DY=0., DZ=0., DRX=0., DRY=0., DRZ=0.,),)

FORCE=AFFE_CHAR_MECA(
   MODELE=MO,
   FORCE_NODALE=_F(GROUP_NO='PC', FX=1.0, FZ=0.001,),)

FORCE_F=DEFI_FONCTION(NOM_PARA='INST', VALE=(0.,0.,20.0,20.0,),)

tforc = 0.5
tsuiv = 5.0
tfin = 20.0

TEMPS=DEFI_LIST_REEL(
   DEBUT=0.,
   INTERVALLE=(
      _F(JUSQU_A=tforc, NOMBRE=2,),
      _F(JUSQU_A=tfin, PAS=0.1,),),
)

DEFLIST=DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=TEMPS,), )

# PREMIER CALCUL SANS PILOTAGE POUR INITIALISER
# LE CHAMP DE DEPLACEMENT
RESO0=STAT_NON_LINE(
   MODELE=MO,
   CHAM_MATER=MAT,
   CARA_ELEM=CARA,
   EXCIT=(
      _F(CHARGE=CL,),
      _F(CHARGE=FORCE, FONC_MULT=FORCE_F,),),
   COMPORTEMENT=_F(RELATION='MULTIFIBRE',DEFORMATION='GROT_GDEP',),
   INCREMENT=_F(LIST_INST=TEMPS, INST_FIN=tforc,),
   NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
   CONVERGENCE=_F(RESI_GLOB_RELA=1.0E-6, ITER_GLOB_MAXI=50,),
   INFO=1,
)

# SECOND CALCUL AVEC PILOTAGE LONGEUR D'ARC ET SELECTION PAR
# MINIMISATION DE L'ANGLE ENTRE 2 DEPLACEMENTS SUCCESSIFS
# ON NE FAIT PAS DE REPRISE POUR NE PAS AVOIR DE ETA_PILOTAGE
# NON DISPONIBLE DANS LES INSTANTS SANS PILOTAGE
RESO=STAT_NON_LINE(
   MODELE=MO,
   CHAM_MATER=MAT,
   CARA_ELEM=CARA,
   EXCIT=(
      _F(CHARGE=CL,),
      _F(CHARGE=FORCE, TYPE_CHARGE='FIXE_PILO',),),
   COMPORTEMENT=_F(RELATION='MULTIFIBRE',DEFORMATION='GROT_GDEP',),
   INCREMENT=_F(LIST_INST=DEFLIST, INST_FIN=tsuiv,),
   NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
   PILOTAGE=_F(TYPE='LONG_ARC',
               COEF_MULT=1.0,
               ETA_PILO_MAX=1.1,
               ETA_PILO_R_MIN=0.0,
               SELECTION='ANGL_INCR_DEPL',
               GROUP_NO='LAME',
               NOM_CMP=('DX','DY','DZ',),),
   ETAT_INIT = _F(EVOL_NOLI=RESO0, ) ,
   CONVERGENCE=_F(RESI_GLOB_RELA=1.0E-6, ITER_GLOB_MAXI=50,),
)

# VALIDATION DE LA REPRISE D'UN CALCUL AVEC PILOTAGE
# ET SELECTION PAR ANGL_INCR_DEPL
RESO=STAT_NON_LINE(reuse=RESO,
   MODELE=MO,
   CHAM_MATER=MAT,
   CARA_ELEM=CARA,
   EXCIT=(
      _F(CHARGE=CL,),
      _F(CHARGE=FORCE, TYPE_CHARGE='FIXE_PILO',),),
   COMPORTEMENT=_F(RELATION='MULTIFIBRE',DEFORMATION='GROT_GDEP',),
   INCREMENT=_F(LIST_INST=DEFLIST, INST_FIN=tfin,),
   NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
   PILOTAGE=_F(TYPE='LONG_ARC',
               COEF_MULT=0.1,
               ETA_PILO_MAX=5.0,
               SELECTION='ANGL_INCR_DEPL',
               GROUP_NO='LAME',
               NOM_CMP=('DX','DY','DZ',),),
   ETAT_INIT = _F(EVOL_NOLI=RESO , ) ,
   CONVERGENCE=_F(RESI_GLOB_RELA=1.0E-6, ITER_GLOB_MAXI=50,),
)

ETA_PILO=RECU_FONCTION(RESULTAT=RESO, NOM_PARA_RESU='ETA_PILOTAGE',)

DEPX=RECU_FONCTION(
   RESULTAT=RESO,
   TOUT_ORDRE='OUI',
   NOM_CHAM='DEPL',
   NOM_CMP='DX',
   GROUP_NO='PC',)

DEPZ=RECU_FONCTION(
   RESULTAT=RESO,
   TOUT_ORDRE='OUI',
   NOM_CHAM='DEPL',
   NOM_CMP='DZ',
   GROUP_NO='PC',)

IMPR_FONCTION(
   FORMAT='XMGRACE',
   UNITE=29,
   COURBE=(
      _F(FONC_X=DEPX,FONC_Y=ETA_PILO,LEGENDE='DX',MARQUEUR=0,),
      _F(FONC_X=DEPZ,FONC_Y=ETA_PILO,LEGENDE='DZ',MARQUEUR=0,), ),
   TITRE='Reponse force-deplacement',
   BORNE_X=(0.0,170.0,),
   BORNE_Y=(0.0,5.0,),
   ECHELLE_X='LIN',
   ECHELLE_Y='LIN',
   GRILLE_X=20,
   GRILLE_Y=1,
   LEGENDE_X='Deplacement (mm)',
   LEGENDE_Y='Force (N)',)


# -------------------- TESTS / REFERENCE ET NON-REGRESSION ----------
T_ETA=CREA_TABLE(FONCTION=_F(FONCTION=ETA_PILO,),)
T_DEPX=CREA_TABLE(FONCTION=_F(FONCTION=DEPX,),)
T_DEPZ=CREA_TABLE(FONCTION=_F(FONCTION=DEPZ,),)

TAB_COMB=CALC_TABLE(
   TABLE=T_ETA,
   ACTION=(
      _F(OPERATION='COMB', TABLE=T_DEPX, NOM_PARA='INST'),
      _F(OPERATION='COMB', TABLE=T_DEPZ, NOM_PARA='INST'),),)

DX_ETA=RECU_FONCTION(
   TABLE=TAB_COMB, PARA_X='ETA_PILO', PARA_Y='DX',
   INTERPOL='LIN', PROL_DROITE='CONSTANT', PROL_GAUCHE='CONSTANT',)

DZ_ETA=RECU_FONCTION(
   TABLE=TAB_COMB, PARA_X='ETA_PILO', PARA_Y='DZ',
   INTERPOL='LIN', PROL_DROITE='CONSTANT', PROL_GAUCHE='CONSTANT',)

INST_ETA=RECU_FONCTION(
   TABLE=TAB_COMB, PARA_X='ETA_PILO', PARA_Y='INST',
   INTERPOL='LIN', PROL_DROITE='CONSTANT', PROL_GAUCHE='CONSTANT',)

IMPR_FONCTION(
   FORMAT='TABLEAU',
   COURBE=(
      _F(FONCTION=DX_ETA,),
      _F(FONCTION=DZ_ETA,),
      _F(FONCTION=INST_ETA,),),)

# REFERENCE MODELISATION A (POU_D_T_GD)
ResuRefe = [
# PARA    DXREFE                DZREFE              PRECISx  , PRECISz
[ 1.0 , 1.9557493475982E-01 , 8.1849504440533E-01 , 2.0E-02 , 7.0E-02 ,],
[ 1.2 , 2.2003159601578E+01 , 4.5085834614729E+01 , 6.0E-02 , 1.0E-02 ,],
[ 1.4 , 5.1370721240215E+01 , 5.9127605459760E+01 , 2.2E-02 , 1.5E-02 ,],
[ 1.6 , 7.2307885049332E+01 , 6.1008538728158E+01 , 2.0E-02 , 2.0E-02 ,],
[ 2.0 , 9.9971229134146E+01 , 5.5985405418044E+01 , 1.0E-02 , 2.2E-02 ,],
[ 3.0 , 1.3415730437940E+02 , 3.9186532467172E+01 , 1.0E-02 , 2.0E-02 ,],
[ 4.0 , 1.5070726872507E+02 , 2.7659987903886E+01 , 1.0E-02 , 1.0e-02 ,],
[ 5.0 , 1.6092765462757E+02 , 2.0199252710901E+01 , 1.0E-02 , 0.5E-02 ,],
]
ResuCalc = [
# PARA     DXCALC                DZCALC             TOLEMAx   TOLEMAz
[ 1.0 , 1.9923620441504E-01 , 8.7235975990081E-01 , 1.1E-06 , 2.0E-05 ,],
[ 1.2 , 2.3300402443980E+01 , 4.5275012469079E+01 , 1.0E-06 , 1.0E-06 ,],
[ 1.4 , 5.2450918959333E+01 , 5.8317864107539E+01 , 1.0E-06 , 1.0E-06 ,],
[ 1.6 , 7.3160258995743E+01 , 5.9902876621404E+01 , 1.0E-06 , 1.0E-06 ,],
[ 2.0 , 1.0040816201812E+02 , 5.4831951378751E+01 , 1.0E-06 , 1.0E-06 ,],
[ 3.0 , 1.3370711108312E+02 , 3.8544417140043E+01 , 1.0E-06 , 1.0E-06 ,],
[ 4.0 , 1.4968823849952E+02 , 2.7468597580055E+01 , 1.0E-06 , 1.0E-06 ,],
[ 5.0 , 1.5941628533943E+02 , 2.0273529988170E+01 , 1.0E-06 , 1.0E-06 ,],
]

# Par defaut TOLE_MACHINE=1.0E-06
# Les TOLE_MACHINE sont ajustes pour clap0f0q (32bits) car la solution est
# numeriquement sensible (instabilite)
motclef = {}
motclef['VALEUR']= []
for ii in range(len(ResuRefe)):
   vpara, vdxrefe, vdzrefe, precisx, precisz = ResuRefe[ii]
   vpara, vdxcalc, vdzcalc, tolemax, tolemaz = ResuCalc[ii]
   motclef['VALEUR'].append( _F( VALE_PARA=vpara,   FONCTION=DX_ETA,    CRITERE='RELATIF' ,
                                 VALE_REFE=vdxrefe, PRECISION= precisx, REFERENCE='AUTRE_ASTER',
                                 VALE_CALC=vdxcalc, TOLE_MACHINE=tolemax, ) )
   motclef['VALEUR'].append( _F(VALE_PARA=vpara,    FONCTION=DZ_ETA,    CRITERE='RELATIF' ,
                                 VALE_REFE=vdzrefe, PRECISION= precisz, REFERENCE='AUTRE_ASTER',
                                 VALE_CALC=vdzcalc, TOLE_MACHINE=tolemaz, ) )
TEST_FONCTION(**motclef)
FIN()
