# MODIF  DATE 09/03/2004   AUTEUR CIBHHPD S.VANDENBERGHE 
# RESPONSABLE G8BHHXD X.DESROCHES
# TITRE CYLINDRE SOUS CHARGEMENT THERMIQUE (AXIS_FOURIER)
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================
DEBUT( CODE=_F(  NOM = 'HSLV304A',NIV_PUB_WEB='INTERNET') )

MAIL=LIRE_MAILLAGE(VERI_MAIL=_F(VERIF='NON'),   )

#
# DEFINITION DES GROUPES DE NOEUDS
MAIL=DEFI_GROUP( reuse=MAIL,   MAILLAGE=MAIL,CREA_GROUP_NO=(
                       _F(  GROUP_MA = 'ENCAST'),
                       _F(  GROUP_MA = ( 'E', 'F', 'G', )))
                   )

#
# DEFINITION DU MODELE
MODELE=AFFE_MODELE(    MAILLAGE=MAIL,
                         AFFE=_F(  TOUT = 'OUI',
                       PHENOMENE = 'MECANIQUE',
                       MODELISATION = 'AXIS_FOURIER')  )

#
# DEFINITION DU MATERIAU
ACIER=DEFI_MATERIAU(    ELAS=_F(  E = 2.1E11,  NU = 0.3,
                                 ALPHA = 0.12E-4,  RHO = 7800.)
                      )

#
# ATTRIBUTION DU MATERIAU
CHMAT=AFFE_MATERIAU(    MAILLAGE=MAIL,
                          AFFE=_F(  TOUT = 'OUI',
                                 MATER = ACIER)  )

#
# DEFINITION DES CONDITIONS AUX LIMITES
CLIM=AFFE_CHAR_MECA(    MODELE=MODELE,
                           DDL_IMPO=_F(  GROUP_NO = 'ENCAST',
                                      DX = 0.,  DY = 0.,  DZ = 0.)
                        )

#
# DEFINITION DU CHARGEMENT
CHAR_NO=CREA_CHAMP(  OPERATION='AFFE', TYPE_CHAM='NOEU_TEMP_R',
                         MAILLAGE=MAIL,
                           AFFE=_F(  TOUT = 'OUI',
                                  NOM_CMP = 'TEMP',
                                  VALE = 1.)
                         )

CHARGE=AFFE_CHAR_MECA(    MODELE=MODELE,
                            TEMP_CALCULEE=CHAR_NO )

# RESOLUTION
DEF=MACRO_ELAS_MULT(        MODELE=MODELE,
                              CHAM_MATER=CHMAT,
                              CHAR_MECA_GLOBAL=CLIM,CAS_CHARGE=(
                              _F( 
                                           MODE_FOURIER = 1,
                                             
                                           TYPE_MODE = 'SYME',
                                           CHAR_MECA = CHARGE),
                              _F( 
                                           MODE_FOURIER = 2,
                                             
                                           TYPE_MODE = 'ANTI',
                                           CHAR_MECA = CHARGE))
                           )

#
# RECUPERATION DU CHAMP DE DEPLACEMENTS
U0_C=CREA_CHAMP(  OPERATION='EXTR', TYPE_CHAM='NOEU_DEPL_R',
                      RESULTAT=DEF,
                      NUME_ORDRE=1,
                      NOM_CHAM='DEPL' )

U0_S=CREA_CHAMP(  OPERATION='EXTR', TYPE_CHAM='NOEU_DEPL_R',
                      RESULTAT=DEF,
                      NUME_ORDRE=2,
                      NOM_CHAM='DEPL' )

#
# CALCUL DES CONTRAINTES

    
DEF=CALC_ELEM( reuse= DEF ,RESULTAT= DEF ,
                           MODELE=MODELE,
                           CHAM_MATER=CHMAT,
                           TOUT_ORDRE='OUI',
                           OPTION=('SIGM_ELNO_DEPL',)
                )
                
SIG0_C=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELNO_SIEF_R',
RESULTAT=DEF, NUME_ORDRE=1,
                         NOM_CHAM='SIGM_ELNO_DEPL' )
                                                     
SIG0_S=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELNO_SIEF_R',
RESULTAT=DEF, NUME_ORDRE=2,
                         NOM_CHAM='SIGM_ELNO_DEPL' )
                         
# RECOMBINAISONS DE FOURIER EN DEPLACEMENTS ET CONTRAINTES
# POUR TETA = 45 DEG.
U1=COMB_CHAM_NO( 
                      COMB_FOURIER=_F(  CHAM_NO = U0_C,
                                     NUME_MODE = 1,
                                     TYPE_MODE = 'SYME',
                                     COEF_R = 1.),
                      ANGL=45. )

U2=COMB_CHAM_NO( 
                      COMB_FOURIER=_F(  CHAM_NO = U0_S,
                                     NUME_MODE = 2,
                                     TYPE_MODE = 'ANTI',
                                     COEF_R = 1.),
                      ANGL=45. )

U=COMB_CHAM_NO( COMB_FOURIER=(
                      _F(  CHAM_NO = U0_C,
                                     NUME_MODE = 1,
                                     TYPE_MODE = 'SYME',
                                     COEF_R = 1.),
                      _F(  CHAM_NO = U0_S,
                                     NUME_MODE = 2,
                                     TYPE_MODE = 'ANTI',
                                     COEF_R = 1.)),
                      ANGL=45. )

SIG=COMB_CHAM_ELEM( COMB_FOURIER=(
                      _F(  CHAM_ELEM = SIG0_C,
                                     NUME_MODE = 1,
                                     TYPE_MODE = 'SYME',
                                     COEF_R = 1.),
                      _F(  CHAM_ELEM = SIG0_S,
                                     NUME_MODE = 2,
                                     TYPE_MODE = 'ANTI',
                                     COEF_R = 1.)),
                      ANGL=45. )

#
# TEST_RESU DES DEPLACEMENTS
#
TEST_RESU(CHAM_NO=(   _F(  CHAM_GD = U1,
                        NOEUD = 'N371',
                        NOM_CMP = 'DX',
                        VALE = 9.63057E-06,
                        PRECISION = 0.001),
              _F(  CHAM_GD = U1,
                        NOEUD = 'N371',
                        NOM_CMP = 'DZ',
                        VALE = 1.52412E-06,
                        PRECISION = 0.001))
          )

# U2
TEST_RESU(   CHAM_NO=_F(  CHAM_GD = U2,
                        NOEUD = 'N371',
                        NOM_CMP = 'DX',
                        VALE = 5.44426E-06,
                        PRECISION = 0.001)
          )

# U
TEST_RESU(CHAM_NO=(   _F(  CHAM_GD = U,
                        NOEUD = 'N371',
                        NOM_CMP = 'DX',
                        VALE = 1.50748E-05,
                        PRECISION = 0.001),
              _F(  CHAM_GD = U,
                        NOEUD = 'N371',
                        NOM_CMP = 'DZ',
                        VALE = 1.52412E-06,
                        PRECISION = 0.001))
          )

#
T1=POST_RELEVE_T(    ACTION=_F( 
                        INTITULE = 'SIG',
                        GROUP_NO = 'ENCAST',
                        CHAM_GD = SIG,
                        NOM_CMP = ('SIXX', 'SIYY', 'SIZZ', 'SIXY',),
                        OPERATION = 'EXTRACTION')
            )

#
# E1
TEST_TABLE(        TABLE=T1,
                   FILTRE=_F(  NOM_PARA = 'NOEUD',
                            VALE_K = 'N1'),
                 NOM_PARA='SIXX',
                     VALE=5.872145666E+06    )

TEST_TABLE(        TABLE=T1,
                   FILTRE=_F(  NOM_PARA = 'NOEUD',
                            VALE_K = 'N1'),
                 NOM_PARA='SIYY',
                     VALE=1.137204848E+07    )

TEST_TABLE(        TABLE=T1,
                   FILTRE=_F(  NOM_PARA = 'NOEUD',
                            VALE_K = 'N1'),
                 NOM_PARA='SIZZ',
                     VALE=5.1024766510338E+06 )

TEST_TABLE(        TABLE=T1,
                   FILTRE=_F(  NOM_PARA = 'NOEUD',
                            VALE_K = 'N1'),
                 NOM_PARA='SIXY',
                     VALE=-3.739500149E+06    )

TEST_TABLE(        TABLE=T1,
                   FILTRE=_F(  NOM_PARA = 'NOEUD',
                            VALE_K = 'N172'),
                 NOM_PARA='SIXX',
                     VALE=5.407372656E+06    )

TEST_TABLE(        TABLE=T1,
                   FILTRE=_F(  NOM_PARA = 'NOEUD',
                            VALE_K = 'N172'),
                 NOM_PARA='SIYY',
                     VALE=1.026810308E+07    )

TEST_TABLE(        TABLE=T1,
                   FILTRE=_F(  NOM_PARA = 'NOEUD',
                            VALE_K = 'N172'),
                 NOM_PARA='SIZZ',
                     VALE=4.6557915460043E+06 )

TEST_TABLE(        TABLE=T1,
                   FILTRE=_F(  NOM_PARA = 'NOEUD',
                            VALE_K = 'N172'),
                 NOM_PARA='SIXY',
                     VALE=1.495588057E+06    )

FIN()
#
