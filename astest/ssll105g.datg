# -*- coding: utf-8 -*-

###
### This file is generated automatically by SALOME v6.4.0 with dump python functionality
###

import sys
import salome
salome.salome_init()
theStudy = salome.myStudy
import salome_notebook
notebook = salome_notebook.notebook

#############Chemin pour l'export du maillage resultat############
ExportPATH="/home/PHIMECA/maillages/"
##################################################################

###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
geompy = geomBuilder.New(salome.myStudy)
import math
import SALOMEDS

A = geompy.MakeVertex(0, -15, 0)
B = geompy.MakeVertex(0, 15, 0)
Line_1 = geompy.MakeLineTwoPnt(A, B)
O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
Part_A = geompy.MakePrismVecH(Line_1, OX, 225)
[Edge_1] = geompy.SubShapes(Part_A, [10])
Part_B = geompy.MakePrismVecH(Edge_1, OX, 30)
[Edge_2] = geompy.SubShapes(Part_B, [3])
Part_C = geompy.MakePrismVecH(Edge_2, OY, -225)
Poutre = geompy.MakeCompound([Part_A, Part_B, Part_C])
[Encas] = geompy.SubShapes(Poutre, [10])
[Charge] = geompy.SubShapes(Poutre, [24])
listSubShapeIDs = geompy.SubShapeAllIDs(Poutre, geompy.ShapeType["SHAPE"])
geomObj_1 = geompy.GetSubShape(Poutre, [2])
geompy.addToStudy( A, 'A' )
geompy.addToStudy( B, 'B' )
geompy.addToStudy( Line_1, 'Line_1' )
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( Part_A, 'Part_A' )
geompy.addToStudyInFather( Part_A, Edge_1, 'Edge_1' )
geompy.addToStudy( Part_B, 'Part_B' )
geompy.addToStudyInFather( Part_B, Edge_2, 'Edge_2' )
geompy.addToStudy( Part_C, 'Part_C' )
geompy.addToStudy( Poutre, 'Poutre' )
geompy.addToStudyInFather( Poutre, Encas, 'Encas' )
geompy.addToStudyInFather( Poutre, Charge, 'Charge' )

###
### SMESH component
###

import SMESH, SALOMEDS
from salome.smesh import smeshBuilder
smesh = smeshBuilder.New(salome.myStudy)
from salome.StdMeshers import StdMeshersBuilder

Equerre_T6 = smesh.Mesh(Poutre)
Regular_1D = Equerre_T6.Segment()
Local_Length_1 = Regular_1D.LocalLength(7.5)
Local_Length_1.SetPrecision( 1e-07 )
Quadrangle_2D = Equerre_T6.Quadrangle()
isDone = Equerre_T6.Compute()
equerre = Equerre_T6.GroupOnGeom(Poutre,'Poutre',SMESH.FACE)
Encas_1 = Equerre_T6.GroupOnGeom(Encas,'Encas',SMESH.EDGE)
Charge_1 = Equerre_T6.GroupOnGeom(Charge,'Charge',SMESH.NODE)
smesh.SetName(Equerre_T6, 'Poutre_L_Q4')
equerre.SetName( 'equerre' )
smesh.SetName(Equerre_T6, 'Poutre_L_Q4')
smesh.SetName(Equerre_T6, 'Equerre_Q4')
isDone = Equerre_T6.SplitQuadObject( Equerre_T6, 0 )
smesh.SetName(Equerre_T6, 'Equerre_T3')
Equerre_T6.ConvertToQuadratic( 1 )
smesh.SetName(Equerre_T6, 'Equerre_T6')

## set object names
smesh.SetName(Equerre_T6.GetMesh(), 'Equerre_T6')
smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
smesh.SetName(Local_Length_1, 'Local Length_1')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(equerre, 'equerre')
smesh.SetName(Encas_1, 'Encas')
smesh.SetName(Charge_1, 'Charge')


########Export du maillage au format MMED########
Equerre_T6.ExportMED( r''+ExportPATH+'ssll105g.mmed'+'', 0, SMESH.MED_V2_2 , 1 )


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser(1)
