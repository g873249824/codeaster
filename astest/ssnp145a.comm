# MODIF  DATE 15/01/2013   AUTEUR LADIER A.LADIER 
# TITRE VALIDATION DU PILOTAGE PRED_ELAS EN PLASTICITE
# ssnp145a.para = tps_job 100 mem_job 512Mo ncpus 1 liste_test R
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='SSNP145A',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))


Young   = 2.E5
Poisson = 0.3
S0      = 300.
a       = 100.
b       = 200.
ang     = pi/6



def P(c) :
  """
    Pression fonction du rayon de la zone plastique
    Si c=b : pression critique
  """
  return 2*S0*log(c/a) + 2./3. * S0 * (b**3-c**3)/b**3




MA = LIRE_MAILLAGE(FORMAT='MED')


ACIER = DEFI_MATERIAU(
  ELAS      = _F (E=Young, NU=Poisson),
  ECRO_LINE = _F (D_SIGM_EPSI=0, SY=S0),
        )

CHMAT = AFFE_MATERIAU(
  MAILLAGE = MA,
  AFFE = _F(
    GROUP_MA = 'MATIERE',
    MATER    =  ACIER
    )
  )

MO = AFFE_MODELE(
  MAILLAGE = MA,
  AFFE = _F(
    TOUT         = 'OUI',
    PHENOMENE    = 'MECANIQUE',
    MODELISATION = 'AXIS'
          )
  )


MODI_MAILLAGE(reuse = MA,
  MAILLAGE = MA,
  ORIE_PEAU_2D = _F(GROUP_MA = 'PEAU_INT'),
  )


SYMETRIE = AFFE_CHAR_MECA(
  MODELE = MO,
  FACE_IMPO =  (
    _F(GROUP_MA='SYME_INF', DY   = 0.),
    _F(GROUP_MA='SYME_SUP', DNOR = 0.)
    )
  )

PRESSION = AFFE_CHAR_MECA(
  MODELE = MO,
  PRES_REP = _F(
    GROUP_MA = 'PEAU_INT',
    PRES     = 1.
    )
        )

temps = DEFI_LIST_REEL(
  DEBUT = 0.,
  INTERVALLE = (
          _F(JUSQU_A=20    , NOMBRE = 20),
          )
        )

DEFLIST =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = temps,),
                        ECHEC=_F(ACTION       = 'DECOUPE',
                                 SUBD_METHODE = 'MANUEL',
                                 SUBD_NIVEAU  = 4,),)




EVOL = STAT_NON_LINE(
  MODELE     = MO,
  CHAM_MATER = CHMAT,
  EXCIT      = (
          _F(CHARGE = SYMETRIE),
          _F(CHARGE = PRESSION, TYPE_CHARGE = 'FIXE_PILO')
               ),
  COMP_INCR = _F(RELATION = 'VMIS_ISOT_LINE'),
  INCREMENT = _F(
           LIST_INST = DEFLIST,
           NUME_INST_FIN = 1,
                ),
  PILOTAGE  = _F (
           TYPE      = 'PRED_ELAS',
           GROUP_MA  = 'MATIERE',
           COEF_MULT = 1E10,
           ETA_PILO_R_MIN = 0,
                ),
  NEWTON  = _F(
           MATRICE   = 'TANGENTE',
           REAC_ITER = 1,
           ),
   CONVERGENCE = _F(
     SIGM_REFE      = S0,
     RESI_REFE_RELA = 1.E-4,
     ITER_GLOB_MAXI = 10,
           ),
         )


STAT_NON_LINE(reuse = EVOL,
  ETAT_INIT = _F(EVOL_NOLI = EVOL),
  MODELE     = MO,
  CHAM_MATER = CHMAT,
  EXCIT = (
          _F(CHARGE = SYMETRIE),
          _F(CHARGE = PRESSION, TYPE_CHARGE = 'FIXE_PILO')
          ),
  COMP_INCR = _F(RELATION = 'VMIS_ISOT_LINE'),
  INCREMENT = _F(
           LIST_INST = DEFLIST,
           ),
         PILOTAGE  = _F (
           TYPE      = 'PRED_ELAS',
           GROUP_MA  = 'MATIERE',
           COEF_MULT = 1.,
     ETA_PILO_R_MIN = 0,
     EVOL_PARA = 'CROISSANT',
           ),
         NEWTON  = _F(
           MATRICE   = 'TANGENTE',
           REAC_ITER = 1,
           ),
   CONVERGENCE = _F(
     SIGM_REFE      = S0,
     RESI_REFE_RELA = 1.E-4,
     ITER_GLOB_MAXI = 10,
           )
         )

ETA_PILO=RECU_FONCTION(RESULTAT=EVOL,
                       NOM_PARA_RESU='ETA_PILOTAGE',
                       TOUT_ORDRE='OUI',);


TEST_FONCTION(VALEUR=_F(VALE_CALC=416.446420248,
                        VALE_REFE=P(b),
                        VALE_PARA=20,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=1.5E-3,
                        NOM_PARA='INST',
                        FONCTION=ETA_PILO,),
              )

FIN()
