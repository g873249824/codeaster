# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2019 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT( CODE = _F( NIV_PUB_WEB = 'INTERNET'), DEBUG = _F( SDVERI = 'OUI'),);

MA = LIRE_MAILLAGE( FORMAT = "MED");

MODEL = AFFE_MODELE( MAILLAGE = MA,
                     AFFE = _F( GROUP_MA = 'PLAQUE',
                                PHENOMENE = 'MECANIQUE',
                                MODELISATION = 'DKT'),);

CARA = AFFE_CARA_ELEM( MODELE = MODEL,
                       COQUE = _F( GROUP_MA = 'PLAQUE', EPAIS = 0.2),);


# on cree une sd evol_elas avec des champs d'efforts imposes :
#-------------------------------------------------------------
CHEFF1 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PLAQUE',
                                NOM_CMP  = ('NXX','NYY','NXY','MXX','MYY','MXY','QX', 'QY'),
                                VALE     = ( 1.e6, 0.0,  0.0,  0.0,  0.0,  0.0, -6.e5, 0.0),),);
#fibre sup√©rieure tendue en X
CHEFF2 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PLAQUE',
                                NOM_CMP  = ('NXX','NYY','NXY','MXX','MYY','MXY','QX','QY'),
                                VALE     = ( 0.0,  0.0,  0.0,  1.e5, 0.0,  0.0,  0.0, 0.0),),);
#section partiellement tendue
CHEFF3 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PLAQUE',
                                NOM_CMP  = ('NXX','NYY','NXY','MXX','MYY','MXY','QX','QY'),
                                VALE     = ( 1.e5, 0.0,  0.0,  1.e5, 0.0,  0.0,  0.0, 0.0),),);
#section totalement tendue
CHEFF4 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PLAQUE',
                                NOM_CMP  = ('NXX','NYY','NXY','MXX' ,'MYY','MXY','QX','QY'),
                                VALE     = ( 2.e6, 0.0,  0.0,  1.e5,  0.0,  0.0,  0.0, 0.0),),);

CHEFF5 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PLAQUE',
                                NOM_CMP  = ('NXX','NYY','NXY','MXX','MYY', 'MXY','QX','QY'),
                                VALE     = ( 0.0,  0.0,  0.0,  1e5, -75.e3, 0.0,  0.0, 0.0),),);

RESUELU = CREA_RESU( OPERATION = 'AFFE',
                     TYPE_RESU = 'EVOL_ELAS',
                     NOM_CHAM = 'EFGE_ELNO',
                     AFFE = (_F( CHAM_GD = CHEFF1, INST=1., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF2, INST=2., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF3, INST=3., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF4, INST=4., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF5, INST=5., MODELE = MODEL, CARA_ELEM = CARA,),),);

RESUELS = CREA_RESU( OPERATION = 'AFFE',
                     TYPE_RESU = 'EVOL_ELAS',
                     NOM_CHAM = 'EFGE_ELNO',
                     AFFE = (_F( CHAM_GD = CHEFF1, INST=1., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF2, INST=2., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF3, INST=3., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF4, INST=4., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF5, INST=5., MODELE = MODEL, CARA_ELEM = CARA,),),);

# calcul du ferraillage :
#------------------------
RESUELU = CALC_FERRAILLAGE( RESULTAT = RESUELU, reuse = RESUELU,
                            CODIFICATION = 'EC2',
                            TYPE_COMB = 'ELU',
                            INST = (1.,2.,3.,4.,5.),
                            AFFE = (_F( TOUT = 'OUI',
                                        C_INF = 0.04,
                                        C_SUP = 0.02,
                                        FYK = 500.0E6,
                                        FCK = 55.E6,
                                        GAMMA_S = 1.15,
                                        GAMMA_C = 1.5,
                                        CLASSE_ACIER = 'B',
                                        RHO_ACIER = 7800,
                                        ALPHA_CC = 1.,
                                        UTIL_COMPR = 'NON',
                                        UNITE_CONTRAINTE = 'Pa'),),);

RESUELS = CALC_FERRAILLAGE( RESULTAT = RESUELS, reuse = RESUELS,
                            CODIFICATION = 'EC2',
                            TYPE_COMB = 'ELS',
                            INST = (1.,2.,3.,4.,5.),
                            AFFE = (_F( TOUT = 'OUI',
                                        C_INF = 0.04,
                                        C_SUP = 0.02,
                                        FCK = 55.e6,
                                        SIGS_ELS = 400.e6,
                                        SIGC_ELS = 21.e6,
                                        ALPHA_E = 21.,
                                        CLASSE_ACIER = 'B',
                                        RHO_ACIER = 7800,
                                        ALPHA_CC = 1.,
                                        UTIL_COMPR = 'NON',
                                        UNITE_CONTRAINTE = 'Pa'),),);

COMP = ['DNSXI','DNSXS','DNSYI','DNSYS','DNST','DNSVOL'];
#-----------------------------------------------------
# Tests pour l'ELU
#-----------------------------------------------------
D_ref = [
    [0.00115,       0.00115,       0.,            0.,            0.00383333333, 119.6        , 0.50855555555],
    [0,             0.00152600275, 0.,            0.,            0            , 59.5141073087, 0.13225357179],
    [0,             0.00165884152, 0.,            0.,            0.           , 64.694819305 , 0.14376626512],
    [0.00038333333, 0.00421666666, 0.,            0.,            0.           , 179.4        , 0.39866666666],
    [0.,            0.00152600275, 0.00099154727, 0.,            0.           , 98.1844511908, 0.21818766931],
];

# valeurs de non-regression DNSXI,DNSXS,DNSYI,DNSYS
D_calc = [
    [0.00115,       0.00115,       0.,            0.,            0.00383333333, 119.6        , 0.50855555555],
    [0.,            0.00152600275, 0.,            0.,            0.           , 59.5141073087, 0.13225357179],
    [0.,            0.00165884152, 0.,            0.,            0.           , 64.694819305 , 0.14376626512],
    [0.00038333333, 0.00421666666, 0.,            0.,            0.           , 179.4        , 0.39866666666],
    [0.,            0.00152600275, 0.00099154727, 0.,            0.           , 98.1844511908, 0.21818766931],
];

for j in range(len(D_ref)) :
    for i,ncmp in enumerate(COMP) :
        if (D_ref[j][i] == 0):
            TEST_RESU( RESU = _F( RESULTAT = RESUELU,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  VALE_CALC = D_calc[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  ORDRE_GRANDEUR = 1.e-3,
                                  CRITERE = 'ABSOLU'),);
        else: 
            TEST_RESU( RESU = _F( RESULTAT = RESUELU,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  PRECISION = 1e-4,
                                  VALE_CALC=D_calc[j][i]),);

#-----------------------------------------------------
# Tests pour l'ELS
#-----------------------------------------------------
D_ref = [
    [0.00125,       0.00125,       0.,            0.,            0.00659805555, 148.964833333, 0.74890981481],
    [0.,            0.00187289543, 0.,            0.,            0.           , 73.0429218525, 0.16231760411],
    [0.,            0.00200283345, 0.,            0.,            0.           , 78.1105048708, 0.17357889971],
    [0.00041666666, 0.00458333333, 0.,            0.,            0.           , 195.0        , 0.43333333333],
    [0.,            0.00187289543, 0.00120566606, 0.,            0.           , 120.063898292, 0.26680866287],
];

# valeurs de non-regression DNSXI,DNSXS,DNSYI,DNSYS
D_calc = [
    [0.00125,       0.00125,       0.,            0.,            0.00659805555, 148.964833333, 0.74890981481],
    [0.,            0.00187289543, 0.,            0.,            0.           , 73.0429218525, 0.16231760411],
    [0.,            0.00200283345, 0.,            0.,            0.           , 78.1105048708, 0.17357889971],
    [0.00041666666, 0.00458333333, 0.,            0.,            0.           , 195.0        , 0.43333333333],
    [0.,            0.00187289543, 0.00120566606, 0.,            0.           , 120.063898292, 0.26680866287],
];

for j in range(len(D_ref)) :
    for i,ncmp in enumerate(COMP) :
        if (D_ref[j][i] == 0):
            TEST_RESU( RESU = _F( RESULTAT = RESUELS,
                       INST = j+1.0,
                       NOM_CHAM = 'FERRAILLAGE',
                       NOM_CMP = ncmp,
                       LEGENDE = 'ELS',
                       MAILLE = 'M1',
                       VALE_CALC = D_calc[j][i],
                       VALE_REFE = D_ref[j][i],
                       REFERENCE = 'ANALYTIQUE',
                       ORDRE_GRANDEUR = 1.e-3,
                       CRITERE = 'ABSOLU',),);
        else:
            TEST_RESU( RESU = _F( RESULTAT = RESUELS,
                       INST = j+1.0,
                       NOM_CHAM = 'FERRAILLAGE',
                       NOM_CMP = ncmp,
                       LEGENDE = 'ELS',
                       MAILLE = 'M1',
                       VALE_REFE = D_ref[j][i],
                       REFERENCE = 'ANALYTIQUE',
                       VALE_CALC = D_calc[j][i],),);

Telu = CREA_TABLE( RESU = _F( RESULTAT = RESUELU,
                              NOM_CHAM = 'FERRAILLAGE',
                              TOUT_CMP = 'OUI',
                              MAILLE = 'M1'),);

IMPR_TABLE( UNITE = 8,TABLE = Telu, FORMAT = 'TABLEAU', SEPARATEUR = ';', TITRE ='');

Tels = CREA_TABLE( RESU = _F( RESULTAT = RESUELS,
                              NOM_CHAM = 'FERRAILLAGE',
                              TOUT_CMP = 'OUI',
                              MAILLE = 'M1'),);

IMPR_TABLE( UNITE = 8, TABLE = Tels, FORMAT = 'TABLEAU', SEPARATEUR = ';', TITRE = '');
FIN()
