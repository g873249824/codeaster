# TITRE LACHER D'UN SIMPLE MASSE-RESSORT AVEC AMORTISSEMENT
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='OUI',),DEBUG=_F(SDVERI='OUI'))

# MISE EN DONNEES
tfin = 3.0;

pdt = 0.01;

k = (((0.5 * pi) * 2.0) ** 2);

m = 1.0;

dinit = 1.0;

ainit = (-(k) / m);

amort=0.1


MAIL=LIRE_MAILLAGE();

MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=_F(GROUP_MA='GROUP_MA_N',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='DIS_T',),);

ACIER=DEFI_MATERIAU(ELAS=_F(E=2.0E11,
                            NU=0.3,
                            RHO=7800.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(GROUP_MA='GROUP_MA_N',
                            MATER=ACIER,),);

CARELEM=AFFE_CARA_ELEM(MODELE=MODELE,
                       DISCRET=(_F(CARA='K_T_D_N',
                                   GROUP_MA='GROUP_MA_N',
                                   VALE=(k,0.,0.,),),
                                _F(CARA='M_T_D_N',
                                   GROUP_MA='GROUP_MA_N',
                                   VALE=m,),),);

# CONDITIONS AUX LIMITES

BLOQUAGE=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=_F(GROUP_NO='GROUP_NO_N',
                                    DY=0.,
                                    DZ=0.,),);

#MATRICES ASSEMBLEES K, M

ASSEMBLAGE(MODELE=MODELE,
                CHAM_MATER=CHMAT,
                CARA_ELEM=CARELEM,
                CHARGE=BLOQUAGE,
                NUME_DDL=CO('NUMEDDL'),
                MATR_ASSE=(_F(MATRICE=CO('RIGIDITE'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSE'),
                              OPTION='MASS_MECA',),
                           _F(MATRICE=CO('MASDIAG'),
                              OPTION='MASS_MECA_DIAG',),),);

LINST=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=tfin,
                                   PAS=pdt,),);

DEPLINI=CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R',
                   NUME_DDL=NUMEDDL,
                   OPERATION='AFFE', PROL_ZERO='OUI',
                   MODELE=MODELE,
                   AFFE=_F(GROUP_NO='GROUP_NO_N',
                           NOM_CMP='DX',
                           VALE=dinit,),);

MODES=CALC_MODES(MATR_RIGI=RIGIDITE,
                 OPTION='TOUT',
                 MATR_MASS=MASSE,
                 SOLVEUR_MODAL=_F(METHODE='QZ',
                                  ),
                 )

PROJ_BASE(BASE=MODES,
                STOCKAGE='DIAG',
                MATR_ASSE_GENE=(_F(MATRICE=CO('MAGE'),
                                   MATR_ASSE=MASSE,),
                                _F(MATRICE=CO('RIGE'),
                                   MATR_ASSE=RIGIDITE,),),
                VECT_ASSE_GENE=_F(VECTEUR=CO('DIGE'),
                                  TYPE_VECT='DEPL',
                                  VECT_ASSE=DEPLINI,),);

rel = FORMULE(VALE='-.1*2*pi*DX', NOM_PARA='DX',);

TRANSMO=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                        SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                        MATR_MASS=MAGE,
                        MATR_RIGI=RIGE,
                        AMOR_MODAL=_F(AMOR_REDUIT=.1,),
                        ETAT_INIT=_F(DEPL=DIGE,),
                        INCREMENT=_F(INST_FIN=tfin,
                                     PAS=pdt,),);

DXGEMO=RECU_FONCTION(RESU_GENE=TRANSMO,
                     NOM_CHAM='DEPL',
                     NUME_CMP_GENE=1,)

TRANSMR=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                        SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                        MATR_MASS=MAGE,
                        MATR_RIGI=RIGE,
                        ETAT_INIT=_F(DEPL=DIGE,),
                        RELA_EFFO_VITE=_F(NOEUD='N', RELATION=rel, NOM_CMP='DX'),
                        INCREMENT=_F(INST_FIN=tfin,
                                     PAS=pdt,),);

DXGEMR=RECU_FONCTION(RESU_GENE=TRANSMR,
                     NOM_CHAM='DEPL',
                     NUME_CMP_GENE=1,)

TEST_FONCTION(VALEUR=(_F(VALE_CALC=0.531338358315,
                         VALE_REFE=0.53000000000000003,
                         VALE_PARA=2,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=1.E-2,
                         FONCTION=DXGEMR,),
                      _F(VALE_CALC=0.531338358315,
                         VALE_REFE=0.53000000000000003,
                         VALE_PARA=2,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=1.E-2,
                         FONCTION=DXGEMO,),
                      ),
              )

TEST_FONCTION(VALEUR=(_F(VALE_CALC=0.531338358315,
                         VALE_REFE=0.53133799999999998,
                         VALE_PARA=2,
                         REFERENCE='NON_DEFINI',
                         PRECISION=1.E6,
                         FONCTION=DXGEMR,
                         ),
                      _F(VALE_CALC=0.53133799999999998,

                         VALE_PARA=2,
                         FONCTION=DXGEMO,
                         ),
                      ),
              )

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=29,
              COURBE=(
                      _F(FONCTION=DXGEMO,
                         MARQUEUR=0,),
                      _F(FONCTION=DXGEMR,
                         MARQUEUR=0,),),);

FIN();
