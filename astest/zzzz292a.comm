# TITRE VALIDATION ELEMENTAIRE DE SANS_GROUP_NO_FR
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='ZZZZ292A',
              NIV_PUB_WEB='INTERNET',
VISU_EFICAS='OUI',),DEBUG=_F(SDVERI='OUI'))

MA=LIRE_MAILLAGE(FORMAT='MED',);

MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_PEAU_3D=(_F(GROUP_MA='S_HAUT',),
                               _F(GROUP_MA='S_BAS',),),);

ACIER=DEFI_MATERIAU(ELAS=_F(E=2.0E+11,
                            NU=0.3,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(GROUP_MA=('HAUT','BAS',),
                            MATER=ACIER,),);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(GROUP_MA=('HAUT','BAS',),
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

BLOQ=AFFE_CHAR_CINE(MODELE=MO,
                    MECA_IMPO=(_F(GROUP_MA='SYMETRIE',
                                  DY=0,),
                               _F(GROUP_NO=('A','C',),
                                  DX=0,
                                  DY=0,),),);

DEPL=AFFE_CHAR_CINE(MODELE=MO,
                    MECA_IMPO=(_F(GROUP_MA='F_HAUT',
                                  DZ=-1,),
                               _F(GROUP_MA='F_BAS',
                                  DZ=1,),),);

CONT=DEFI_CONTACT(MODELE         = MO,
                  FORMULATION    = 'CONTINUE',
                  FROTTEMENT     = 'COULOMB',
                  ALGO_RESO_CONT = 'NEWTON',
                  ALGO_RESO_GEOM = 'NEWTON',
                  ALGO_RESO_FROT = 'NEWTON',
                  ZONE=_F(GROUP_MA_MAIT='S_BAS',
                          GROUP_MA_ESCL='S_HAUT',
                          CONTACT_INIT='INTERPENETRE',
                          COULOMB=0.3,
                          SANS_GROUP_NO_FR='L_HAUT',
                          DIRE_EXCL_FROT=(0,1,0,),),);

RAMPE=DEFI_FONCTION(NOM_PARA='INST',VALE=(0,0,
                          1,0.1,
                          ),);

TEMPS=DEFI_LIST_REEL(DEBUT=0,
                     INTERVALLE=_F(JUSQU_A=1,
                                   NOMBRE=1,),);

RESU=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   EXCIT=(_F(CHARGE=BLOQ,),
                          _F(CHARGE=DEPL,
                             FONC_MULT=RAMPE,),),
                   CONTACT=CONT,
                   COMP_INCR=_F(RELATION='ELAS',),
                   INCREMENT=_F(LIST_INST=TEMPS,),
                   NEWTON=_F(REAC_ITER=1,),
                   CONVERGENCE=_F(),
                   SOLVEUR=_F(METHODE='MULT_FRONT',
                              RENUM='MDA',),
                   INFO=1,);

RESU=CALC_CHAMP(reuse =RESU,
             RESULTAT=RESU,
             FORCE='FORC_NODA',);

IMPR_RESU(UNITE=8,
          RESU=(_F(RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   GROUP_NO=('K','B','D',),),
                _F(RESULTAT=RESU,
                   NOM_CHAM='FORC_NODA',
                   GROUP_NO='K',),),);

IMPR_RESU(FORMAT='GMSH',
          RESU=(_F(RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   TYPE_CHAM='VECT_3D',
                   NOM_CMP=('DX','DY','DZ',),),
                _F(RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   TYPE_CHAM='VECT_3D',
                   NOM_CMP=('LAGS_C','LAGS_F1','LAGS_F2',),),),);

TEST_RESU(RESU=(_F(GROUP_NO='K',
                   INST=1.0,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   VALE_CALC=0.030000000,
                   VALE_REFE=0.029999999999999999,),
                _F(GROUP_NO='K',
                   INST=1.0,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   VALE_CALC=0.030000000,
                   VALE_REFE=0.029999999999999999,),
                _F(GROUP_NO='K',
                   INST=1.0,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DZ',
                   VALE_CALC= 2.07445861E-17,
                   VALE_REFE=0.0,
                   CRITERE='ABSOLU',
                   PRECISION=1.E-08,),
                _F(GROUP_NO='B',
                   INST=1.0,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   VALE_CALC=0.030000000,
                   VALE_REFE=0.029999999999999999,),
                ),
          )

TEST_RESU(RESU=(_F(GROUP_NO='K',
                   INST=1.0,
                   RESULTAT=RESU,
                   NOM_CHAM='FORC_NODA',
                   NOM_CMP='DX',
                   VALE_CALC=0.0,
                   CRITERE='ABSOLU',),
                _F(GROUP_NO='K',
                   INST=1.0,
                   RESULTAT=RESU,
                   NOM_CHAM='FORC_NODA',
                   NOM_CMP='DY',
                   VALE_CALC=0.0,
                   CRITERE='ABSOLU',),
                _F(GROUP_NO='K',
                   INST=1.0,
                   RESULTAT=RESU,
                   NOM_CHAM='FORC_NODA',
                   NOM_CMP='DZ',
                   VALE_CALC=-1.250000000E9,),
                ),
          )

FIN();
