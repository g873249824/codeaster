# TITRE PROPAGATION DE FISSURE DEBOUCHANTE DANS UNE PLAQUE 3D DE LARGEUR FINIE AVEC X-FEM
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# person_in_charge: samuel.geniaut at edf.fr

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'),
      IGNORE_ALARM=('XFEM2_94','XFEM2_18'),);

# ON IGNORE L'ALARME XFEM2_94 PARCE QUE LA VALEUR MINIMALE CONSEILLE EST
# TRES PROCHES A L'AVANCEE UTILISEE ET ON OBTIENT DES BONNES RESULTATS
# COMME MEME


#----------------------------------------------
#                 MAILLAGE
#----------------------------------------------

nbcalc = 3

MAILLAG1=LIRE_MAILLAGE(INFO=1,FORMAT='MED');

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO=_F(GROUP_MA=('VOL','SURFINF','LIG1','LIG5'),),);


#----------------------------------------------
#                   MODELE
#----------------------------------------------


MODELE=AFFE_MODELE(MAILLAGE=MAILLAG1,
                      AFFE=(_F(GROUP_MA=('VOL',),
                               PHENOMENE='MECANIQUE',
                               MODELISATION='3D',),
                            _F(GROUP_MA=('SURFINF','SURFSUP',),
                               PHENOMENE='MECANIQUE',
                               MODELISATION='3D',),),);

MAILLAG1=MODI_MAILLAGE(reuse =MAILLAG1,
                       MAILLAGE=MAILLAG1,
                       ORIE_PEAU_3D=_F(GROUP_MA=('SURFSUP','SURFINF',),),
                       );

#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

E=205000.0E6
nu=0.
rho=7800.
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,RHO=rho,),);

CHAMPMA1=AFFE_MATERIAU(MAILLAGE=MAILLAG1,
                       MODELE=MODELE,
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER,
                                ),
                             );

#----------------------------------------------
#              FISSURE INITIALE
#----------------------------------------------

FISS = [None]*nbcalc

FISS[0]=DEFI_FISS_XFEM(MAILLAGE=MAILLAG1,
                       DEFI_FISS=_F(
                                 FORM_FISS = 'DEMI_PLAN',
                                 PFON      =(0. , 2. ,9.),
                                 NORMALE   =(0. , -0.5 , 0.5),
                                 DTAN      =(0. ,0.5 , 0.5)),
                       );

#----------------------------------------------
#                   CHARGEMENTS
#----------------------------------------------

PRES=-1.E6

#----------------------------------------------
#         PROPAGATION SUR 3 PAS DE TEMPS
#----------------------------------------------

MODELX = [None]*nbcalc
CHXFEM = [None]*nbcalc
CH = [None]*nbcalc
RESU = [None]*nbcalc
SIF = [None]*nbcalc
LSN = [None]*nbcalc
LST = [None]*nbcalc

L_INS1=DEFI_LIST_REEL(DEBUT=0.0,INTERVALLE=_F(JUSQU_A=3.0,NOMBRE=3,),);
RI = 0.1
RS = 0.4
RP = 2*RS

for i in range(nbcalc) :

   MODELX[i]=MODI_MODELE_XFEM(MODELE_IN=MODELE,FISSURE=FISS[i],INFO=1,);

   CH[i]=AFFE_CHAR_MECA(MODELE=MODELX[i],
                        PRES_REP=_F(GROUP_MA=('SURFSUP',),PRES=PRES,),
                        DDL_IMPO=(_F(GROUP_NO='SURFINF',DZ=0.0,),
                                  _F(GROUP_NO=('LIG1','LIG5'),DX=0.0,),
                                  _F(GROUP_NO='P4',DY=0.0,),),);

   RESU[i]=MECA_STATIQUE(MODELE=MODELX[i],
                         CHAM_MATER=CHAMPMA1,
                         EXCIT=(
                                _F(CHARGE=CH[i],),),
                         INFO=1,);

   SIF[i]=CALC_G        (RESULTAT=RESU[i],
                         OPTION='CALC_K_G',
                         THETA=_F( FISSURE=FISS[i],),
                         LISSAGE=_F( DEGRE=0,),);

   IMPR_TABLE(TABLE=SIF[i],);

   if ( i != (nbcalc-1) ) :
      FISS[i+1] = CO('FISS_%d'%(i+1))
      PROPA_FISS(MODELE=MODELX[i],
                 FISSURE=_F(FISS_ACTUELLE=FISS[i],
                            FISS_PROPAGEE=FISS[i+1],
                            TABLE=SIF[i],
                           ),
                 METHODE_PROPA='UPWIND',
                 DA_MAX=0.4,
                 LOI_PROPA=_F(LOI='PARIS',
                              C=1.,
                              M=1.,
                              MATER=ACIER,),
                 RAYON=RP,
                 COMP_LINE=_F(COEF_MULT_MINI=0.0,
                              COEF_MULT_MAXI=1.0,
                             ),
                 INFO=1,);

#     LEVEL SET AU PAS DE PROPAGATION COURANT
      LSN[i+1]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                          OPERATION='EXTR',
                          FISSURE=FISS[i+1],
                          NOM_CHAM='LNNO',);
      LST[i+1]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                          OPERATION='EXTR',
                          FISSURE=FISS[i+1],
                          NOM_CHAM='LTNO',);

      IMPR_RESU(FORMAT='MED',
                UNITE=30,
                RESU=_F(CHAM_GD=LSN[i+1],),);
      IMPR_RESU(FORMAT='MED',
                UNITE=30,
                RESU=_F(CHAM_GD=LST[i+1],),);


i=nbcalc-1
# *********************************************
# VERIFICATION DE LA POSITION DU FOND DE FISSURE
# *********************************************

# LES COORDONNES DU FOND DE FISSURE ONT ETE CALCULEES
# PAR LA METHODE PAR PROJECTION (SSLV315B):
# Y=2.8
# Z=9.
#LES DEUX NOEUDS LES PLUS PROCHES VOISINS SONT DONNES DANS SSLV315B.MESS
# NOEUD 1 = N219
# NOEUD 2 = N1576
# NOEUD 3 = N1577
# NOEUD 4 = N2636
# NOEUD 5 = N2637

# ON PEUT DONC CALCULER LA VALEUR DES LEVEL SETS POUR CES NOEUDS:

TABLSN= POST_RELEVE_T(ACTION=_F(INTITULE='Test LSN',
                                NOEUD=('N219','N1576','N1577','N2636','N2637',),                                
                                CHAM_GD=LSN[i],
                                TOUT_CMP='OUI',
                                OPERATION='EXTRACTION',),);

TABLST= POST_RELEVE_T(ACTION=_F(INTITULE='Test LST',
                                NOEUD=('N219','N1576','N1577','N2636','N2637',), 
                                CHAM_GD=LST[i],
                                TOUT_CMP='OUI',
                                OPERATION='EXTRACTION',),);

IMPR_TABLE(TABLE=TABLSN,);
IMPR_TABLE(TABLE=TABLST,);

# ON PEUT ENFIN VERIFIER QUE LE FOND DE FISSURE CALCULE PAR PROPA_FISS
# EST DANS L'ELEMENT EN VERIFIENT QUE LA VALEUR DES LEVEL SETS EST
# INFERIEURE A LA DISTANCE MAXIMALE ENTRE LES QUATRE NOEUDS (EGAL A 2/3)

DISTMAX=2./3.

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='NON_DEFINI',
           PRECISION=DISTMAX,
           TOLE_MACHINE=DISTMAX/10.,
           VALE_CALC=0.33678200886,
           VALE_REFE=0.0,
           NOM_PARA='X1',
           TYPE_TEST='MAX',
           VALE_ABS='OUI',
           TABLE=TABLSN,
           )

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='NON_DEFINI',
           PRECISION=DISTMAX,
           TOLE_MACHINE=DISTMAX/10.,
           VALE_CALC=0.300278867477,
           VALE_REFE=0.0,
           NOM_PARA='X1',
           TYPE_TEST='MIN',
           VALE_ABS='OUI',
           TABLE=TABLSN,
           )

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='NON_DEFINI',
           PRECISION=DISTMAX,
           TOLE_MACHINE=DISTMAX/10.,
           VALE_CALC=0.334180179513,
           VALE_REFE=0.0,
           NOM_PARA='X1',
           TYPE_TEST='MAX',
           VALE_ABS='OUI',
           TABLE=TABLST,
           )

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='NON_DEFINI',
           PRECISION=DISTMAX,
           TOLE_MACHINE=DISTMAX/10.,
           VALE_CALC=0.276377996119,
           VALE_REFE=0.0,
           NOM_PARA='X1',
           TYPE_TEST='MIN',
           VALE_ABS='OUI',
           TABLE=TABLST,
           )

#----------------------------------------------
#         POST TRAITEMENT
#----------------------------------------------

MAXFEM=POST_MAIL_XFEM(MODELE=MODELX[i],
                          );

MOVISU=AFFE_MODELE(MAILLAGE=MAXFEM,
                      AFFE=_F(TOUT='OUI',
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D',),) 

DEPL=POST_CHAM_XFEM(
                       MODELE_VISU   = MOVISU,
                       RESULTAT=RESU[i],
                       );

#IMPR_RESU(FORMAT='IDEAS',
#          RESU=_F(RESULTAT=DEPL,MAILLAGE=MAXFEM),);

DEFI_FICHIER(UNITE=31,);
IMPR_RESU(FORMAT='MED',
             UNITE=31,
             RESU=_F(RESULTAT=DEPL,),);

FIN();
