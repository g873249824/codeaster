# person_in_charge: gerald.nicolas at edf.fr
# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))
#
# 1. Definition des materiaux
#
MATER1=DEFI_MATERIAU(
           ELAS=_F(  E = 180000., NU = 0.30, ALPHA = 1.5E-7, RHO = 7700.) )
#
MATER2=DEFI_MATERIAU(
           ELAS=_F(  E = 220000., NU = 0.33, ALPHA = 1.6E-7, RHO = 8300.) )
#
# 2. Lecture du maillage
#
PRE_IDEAS()
MAILTRQU=LIRE_MAILLAGE( );
#
# 3. Calcul
# 3.1. Modele mecanique
#
MODETRQU=AFFE_MODELE(  MAILLAGE=MAILTRQU,
                       AFFE=_F(  TOUT         = 'OUI',
                                 PHENOMENE    = 'MECANIQUE',
                                 MODELISATION = 'D_PLAN') );

#
# 3.2. Orientation des mailles de bord
#
MAILTRQU=MODI_MAILLAGE( reuse=MAILTRQU,   MAILLAGE=MAILTRQU,
                     ORIE_PEAU_2D=_F(  GROUP_MA = ('BORD_GAU','BORD_INF','BORD_DRO','BORD_SUP',),),);
#
# 3.3. Mise en place des materiaux
#
MATETEST=AFFE_MATERIAU( MAILLAGE=MAILTRQU,
                        AFFE=(_F(  GROUP_MA = 'TRIA',
                                   MATER    = MATER1),
                              _F(  GROUP_MA = 'QUAD',
                                   MATER    = MATER2))
                      );

#
# 3.4. Chargements
#
CHARTRQU=AFFE_CHAR_MECA(    MODELE=MODETRQU,
                  DDL_IMPO =_F(  GROUP_NO = 'ORIGINE',     DY = 0.,),
                  PRES_REP =_F(  GROUP_MA = 'BORD_SUP',    PRES = 1000.,),
                  FACE_IMPO=_F(  GROUP_MA = 'BORD_GAU',    DNOR = 0.,)
                          );
#
# 3.4. Resolution
#
RESUTRQU=MECA_STATIQUE( MODELE=MODETRQU,
                        CHAM_MATER=MATETEST,
                        EXCIT  =_F( CHARGE = CHARTRQU),
                        SOLVEUR=_F( METHODE='LDLT', ),
                       )

# On profite de l'occasion pour tester la commande INFO_RESU
INFO_RESU(RESULTAT=RESUTRQU)

#
# 3.5. Ecriture relecture du resultat complet au format MED
#

DEFI_FICHIER( FICHIER = 'MED_70', TYPE = 'LIBRE',UNITE = 70)

IMPR_RESU(FORMAT='MED',UNITE = 70,RESU=_F(RESULTAT=RESUTRQU,),PROC0='NON',);


RESUTRQ2=LIRE_RESU(
              EXCIT  =_F( CHARGE = CHARTRQU),
              MODELE=MODETRQU,
              CHAM_MATER=MATETEST,
              TYPE_RESU='EVOL_ELAS',
              FORMAT='MED',
              FORMAT_MED=_F( NOM_CHAM_MED='RESUTRQUDEPL',
                             NOM_CHAM  ='DEPL' ),
              UNITE=70,
              TOUT_ORDRE ='OUI',);

#
# 3.6. Calculs d autres champs
#
RESUTRQ2=CALC_CHAMP(reuse=RESUTRQ2,
                    RESULTAT=RESUTRQ2,
                    CONTRAINTE='SIGM_ELNO',
                    DEFORMATION='EPSI_ELNO',);

RESU2=CALC_ERREUR(RESULTAT=RESUTRQ2,
                  OPTION='ERME_ELEM',);

RESUTRQ2=CALC_ERREUR(reuse=RESUTRQ2,
                     RESULTAT=RESUTRQ2,
                     OPTION='ERME_ELEM',);

#
# 3.7. On cree un champ aux noeuds avec le deplacement
#
REQT_GD=CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R',
                   OPERATION='EXTR',
                   RESULTAT=RESUTRQ2,
                   NOM_CHAM = 'DEPL',);
#
# 4. Impressions
#
IMPR_RESU ( PROC0='NON',RESU=_F( MAILLAGE=MAILTRQU, IMPR_COOR = 'OUI', ) ) ;
IMPR_RESU ( PROC0='NON',RESU=_F( RESULTAT=RESUTRQ2, ) ) ;
IMPR_RESU ( PROC0='NON',RESU=_F( CHAM_GD =REQT_GD, ) ) ;
IMPR_RESU ( PROC0='NON',RESU=_F( RESULTAT=RESUTRQ2,
                     NOM_CHAM = ('ERME_ELEM',),
                     GROUP_MA = 'MILIEU' ),
            INFO=2 ) ;
#
IMPR_RESU ( PROC0='NON',FORMAT='MED', RESU=_F( RESULTAT=RESUTRQ2,
                                   NOM_CHAM = ('DEPL',) ),
            INFO=2 ) ;
IMPR_RESU ( PROC0='NON',FORMAT='MED', RESU=_F( CHAM_GD=REQT_GD,),
            INFO=2 ) ;
IMPR_RESU ( PROC0='NON',FORMAT='MED', RESU=_F( RESULTAT=RESUTRQ2,
                                   NOM_CHAM = ('SIGM_ELNO',),),
            INFO=2 ) ;
IMPR_RESU ( PROC0='NON',FORMAT='MED', RESU=_F( RESULTAT=RESUTRQ2,
                                   NOM_CHAM = 'ERME_ELEM',),
            INFO=2 ) ;
#
# 5. Relecture
#
################## CHAM_NO ##################
#
DEPLRELU=LIRE_CHAMP(MAILLAGE=MAILTRQU,
                FORMAT='MED',
                UNITE=80,
                NOM_MED='RESUTRQ2DEPL',
                NUME_ORDRE=1,NUME_PT=1,
                TYPE_CHAM='NOEU_DEPL_R',
                NOM_CMP_IDEM='OUI',
                INFO=2
               ) ;
IMPR_RESU ( PROC0='NON',RESU=_F( CHAM_GD=DEPLRELU, ) ) ;
#
################## CHAM_ELEM ELNO ##################
#
SIGMRELU=LIRE_CHAMP(MAILLAGE=MAILTRQU,
                MODELE=MODETRQU,
                FORMAT='MED',
                UNITE=80,
                NOM_MED='RESUTRQ2SIGM_ELNO',
                NUME_ORDRE=1,NUME_PT=1,
                TYPE_CHAM='ELNO_SIEF_R',
                NOM_CMP_IDEM='OUI',
                INFO=2
               ) ;
IMPR_RESU ( PROC0='NON',RESU=_F( CHAM_GD=SIGMRELU, ) ) ;
#
################## CHAM_ELEM ELEM ##################
#
ERRERELU=LIRE_CHAMP(MAILLAGE=MAILTRQU,
                FORMAT='MED',
                UNITE=80,
                NOM_MED='RESUTRQ2ERME_ELEM',
                NUME_ORDRE=1,NUME_PT=1,
                TYPE_CHAM='CART_ERRE_R',
                NOM_CMP_IDEM='OUI',
                PROL_ZERO='OUI',
                INFO=2
               ) ;
ERRERELB=CREA_CHAMP(
   OPERATION='ASSE',
   TYPE_CHAM='ELEM_ERRE_R',
   MODELE=MODETRQU,
   PROL_ZERO='OUI',
   ASSE=(_F( CHAM_GD = ERRERELU,
             COEF_R= 1.0,
             TOUT='OUI',),),) ;
IMPR_RESU ( PROC0='NON',RESU=_F( CHAM_GD=ERRERELB, ) ) ;
#
# 6. Validation des mots cles GROUP_NO,GROUP_MA,NOEUD,MAILLE de
# l'operateur IMPR_RESU au FORMAT 'MED'


DEFI_FICHIER(UNITE=81)

IMPR_RESU(PROC0='NON',UNITE=81,FORMAT='MED',
          RESU=(_F( RESULTAT=RESUTRQ2,NOM_CHAM ='DEPL',GROUP_NO='OPPOSE',),
                _F( RESULTAT=RESUTRQ2,NOM_CHAM ='EPSI_ELNO',GROUP_MA='TRIA',MAILLE='M43'),),)


UUU=LIRE_RESU(TYPE_RESU='EVOL_ELAS',
               FORMAT='MED',
               MODELE=MODETRQU,
               FORMAT_MED=(
                          _F( NOM_CHAM_MED='RESUTRQ2DEPL',
                              NOM_CHAM    ='DEPL' ),
                          _F( NOM_CHAM_MED='RESUTRQ2EPSI_ELNO',
                              NOM_CHAM    ='EPSI_ELNO'),
                         ) ,
               PROL_ZERO='OUI',
               UNITE=81,TOUT_ORDRE='OUI');

DEFI_FICHIER(UNITE=82, FICHIER='./fort.82')


IMPR_RESU(PROC0='NON',UNITE=82, FORMAT='GMSH',
         RESU=(_F(RESULTAT=UUU,NOM_CHAM='DEPL',NOM_CMP=('DX','DY'),),
               _F(RESULTAT=UUU,NOM_CHAM='EPSI_ELNO',NOM_CMP=('EPXX','EPYY','EPXY'),),),)


DEFI_FICHIER(UNITE=82, ACTION='LIBERER')


TEST_FICHIER(FICHIER="./fort.82",
             NB_VALE_I=147,
             VALE_CALC_I=97,
             NB_VALE=998,
             VALE_CALC=4.3251124143e+03,
             VALE_CALC_K="e18cbfef5a9209243c8ea7bc3a22d50f",
)

#
# 7. Test de non-regression
#
TEST_RESU(CHAM_NO=(_F(CRITERE='RELATIF',
                      NOM_CMP='DX',
                      GROUP_NO='OPPOSE',
                      CHAM_GD=DEPLRELU,
                      VALE_CALC=0.41830440000000002,
                      ),
                   _F(CRITERE='RELATIF',
                      NOM_CMP='DY',
                      GROUP_NO='OPPOSE',
                      CHAM_GD=DEPLRELU,
                      VALE_CALC=-1.6398489999999999,
                      ),
                   ),
          )

#
TEST_RESU(CHAM_ELEM=(_F(CRITERE='RELATIF',
                        NOM_CMP='SIYY',
                        GROUP_NO='OPPOSE',
                        MAILLE='M43',
                        CHAM_GD=SIGMRELU,
                        VALE_CALC=-325.56460308479,),
                     _F(CRITERE='RELATIF',
                        NOM_CMP='SIXY',
                        GROUP_NO='OPPOSE',
                        MAILLE='M43',
                        CHAM_GD=SIGMRELU,
                        VALE_CALC=-120.89476229992,),
                     ),
          )

#
FIN( )
