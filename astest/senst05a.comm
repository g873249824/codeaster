# MODIF  DATE 07/10/2004   AUTEUR GNICOLAS G.NICOLAS 
# RESPONSABLE BOITEAU O.BOITEAU
# TITRE Sensibilite par rapport a la chaleur volumique et emissivite
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================
#
DEBUT( CODE=_F(  NOM = 'SENST05A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON') ,PAR_LOT='NON' )
#
#
#          J    BORD_SU1       BORD_SU2    
#           *-------------------------------*
#           !               !               !
#           !               !               !
#           !               !               !
#  BORD_GAU !    MOITIE1    *   MOITIE2     ! BORD_DRO
#  COEFH:   !               !               ! RAYONNEMENT
#   30      !            CENTRE             ! SIGMA: 1.E-8
#  T_EXT:   !               !               ! EPSILON: 0.3 (EPS2)
#  140      *-------------------------------* TEMP_EXT: 500
#       ORIGINE   BORD_IN1     BORD_IN2     I
#       TEMP_IMPO: 100*(1+0.1*INST)
#
#    TRANSITOIRE T DE 0 A 10 PAR PAS DE 5       
#              1   < X < 11
#             -1.5 < Y <  1.5
#        55 NOEUDS, 28 SEG2 ET 80 TRIA3
#
# On calcule les sensibilites par rapport a la chaleur volumique (PS1)
# et par rapport a la caracteristique d'emissivite de la CL de rayonnement
# (PS2) sur BORD_DRO, et ce, de deux manieres differentes: par differences 
# finies (via PYTHON) et de maniere numerique (via l'option
# idoine de THER_NON_LINE). La deuxieme strategie est evidemment celle qui
# est preconisee (plus rapide, plus commode a utiliser, plus robuste...)
# mais, dans un cas test aussi tordu que celui-ci, elle est la seule voie
# de validation possible.
# On teste l'ecart, pour ces deux derivees, entre la valeur obtenue en
# resolvant le probleme derive et la valeur par differences finies. Et ce,
# en tous les instants du transitoire (via la boucle PYTHON) et pour les
# trois points I, CENTRE et J.
# DETAILS:
#   * La difference finie est une difference centree requierant 3 calculs,
#     avec un epsilon EPSA=1.e-4 pour la chaleur volumique et 1.e-6 pour
#     l'emisivite.
#   * L'ecart qui est teste est un ecart relatif par rapport a la valeur par
#     differences finies.
#
# 1. Definition/memorisation des fonctions constantes
#
PS_UN=DEFI_CONSTANTE(VALE=1.0,);
MEMO_NOM_SENSI ( NOM_UN = PS_UN ) ;
#
PS_ZERO=DEFI_CONSTANTE(VALE=0.0,);
MEMO_NOM_SENSI ( NOM_ZERO = PS_ZERO ) ;
#
# 2. Definition des parametres sensibles et des autres parametres
#
PS1=DEFI_PARA_SENSI(VALE=2.0,);
MEMO_NOM_SENSI(NOM=_F(NOM_COMPOSE='PS_UN',PARA_SENSI=PS1,NOM_SD='PS1',),);
PS2=DEFI_PARA_SENSI(VALE=0.3,);
MEMO_NOM_SENSI(NOM=_F(NOM_COMPOSE='PS_UN',PARA_SENSI=PS2,NOM_SD='PS2',),);
#
EPSA=1.E-6;
A1=DEFI_CONSTANTE(VALE=30.0);
A2=DEFI_CONSTANTE(VALE=140.0);
A3=DEFI_CONSTANTE(VALE=1.E-8);
A4=DEFI_CONSTANTE(VALE=500.0);
aux=2.0+100.*EPSA
PS1P=DEFI_CONSTANTE(VALE=aux);
aux=2.0-100.*EPSA
PS1M=DEFI_CONSTANTE(VALE=aux);
PS2P = FORMULE(NOM_PARA='INST',VALE='0.3+EPSA');
PS2M = FORMULE(NOM_PARA='INST',VALE='0.3-EPSA');
T_ORI = FORMULE(NOM_PARA='INST',VALE='100.*(1.E0+0.1E0*INST)');
LAMB = DEFI_CONSTANTE(VALE=0.75);
#
# 3. Prealable
#
MAILLAGE=LIRE_MAILLAGE();
#
# 3.1. Mise en place du materiau, de sa derivee et de ses translates
#
MAT=DEFI_MATERIAU(THER_NL=_F(  LAMBDA = LAMB, RHO_CP = PS1));
#                       
MEMO_NOM_SENSI(NOM=(_F(NOM_SD='MAT',
                      PARA_SENSI=PS1,
                      NOM_COMPOSE='MAT_PS1',
                      VALEUR='PS1',
                      MOT_FACT='THER_NL',
                      MOT_CLE='RHO_CP',),));
MAT_PS1=DEFI_MATERIAU(THER_NL=_F( LAMBDA = PS_ZERO,RHO_CP = PS_UN))
#
CMAT=AFFE_MATERIAU(MAILLAGE=MAILLAGE,AFFE=_F(TOUT='OUI',MATER=MAT));
MEMO_NOM_SENSI(NOM=(_F(NOM_SD='CMAT',
                      PARA_SENSI=PS1,
                      NOM_COMPOSE='CMAT_PS1',
                      VALEUR='MAT',
                      MOT_FACT='AFFE',
                      MOT_CLE='MATER',)));
CMAT_PS1=AFFE_MATERIAU(MAILLAGE=MAILLAGE,AFFE=_F(TOUT='OUI',MATER=MAT_PS1))
#
MATP=DEFI_MATERIAU(THER_NL=_F(  LAMBDA = LAMB, RHO_CP = PS1P));
CMATP=AFFE_MATERIAU(MAILLAGE=MAILLAGE,AFFE=_F(TOUT='OUI',MATER=MATP));
MATM=DEFI_MATERIAU(THER_NL=_F(  LAMBDA = LAMB, RHO_CP = PS1M));
CMATM=AFFE_MATERIAU(MAILLAGE=MAILLAGE,AFFE=_F(TOUT='OUI',MATER=MATM));
#
# 3.2. Modele
#
MODEPLAN=AFFE_MODELE(MAILLAGE=MAILLAGE,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='THERMIQUE',
                             MODELISATION='PLAN_DIAG'));
#
# 3.3. Chargements non sensibles (echange/temp_impo)
#
CH_0=AFFE_CHAR_THER_F(MODELE=MODEPLAN,
                      ECHANGE=_F(GROUP_MA='BORD_GAU',COEF_H=A1,TEMP_EXT=A2),
                      TEMP_IMPO=_F(GROUP_NO='ORIGINE',TEMP=T_ORI),);
#
# 3.4. Chargements sensibles (rayonnement)
#
CH_1=AFFE_CHAR_THER_F(MODELE=MODEPLAN,RAYONNEMENT=_F(GROUP_MA='BORD_DRO',
                     SIGMA=A3,EPSILON=PS2,TEMP_EXT=A4));
MEMO_NOM_SENSI(NOM=_F(NOM_SD='CH_1',
                      PARA_SENSI=PS2,
                      NOM_COMPOSE='CH_1_PS2',
                      VALEUR='PS2',
                      MOT_FACT='RAYONNEMENT',
                      MOT_CLE='EPSILON',));
CH_1_PS2=AFFE_CHAR_THER_F(MODELE=MODEPLAN,RAYONNEMENT=_F(GROUP_MA='BORD_DRO',
                          SIGMA=PS_ZERO,EPSILON=PS_UN,TEMP_EXT=PS_ZERO));
#
# 3.4 Chargements translates pour differences finies
#
CH_1P=AFFE_CHAR_THER_F(MODELE=MODEPLAN,RAYONNEMENT=_F(GROUP_MA='BORD_DRO',
                     SIGMA=A3,EPSILON=PS2P,TEMP_EXT=A4));
CH_1M=AFFE_CHAR_THER_F(MODELE=MODEPLAN,RAYONNEMENT=_F(GROUP_MA='BORD_DRO',
                     SIGMA=A3,EPSILON=PS2M,TEMP_EXT=A4));                     
#
# 4.1. Calcul standard + 2 calculs de sensibilite
#
MEMO_NOM_SENSI(NOM=(_F(NOM_SD='RETH',
                       PARA_SENSI=PS1,
                       NOM_COMPOSE='RETH_PS1'),
                    _F(NOM_SD='RETH',
                       PARA_SENSI=PS2,
                       NOM_COMPOSE='RETH_PS2')));
LR8=DEFI_LIST_REEL(DEBUT=0.,INTERVALLE=_F(JUSQU_A = 10.,NOMBRE=2));
RETH=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=CMAT,
                   INCREMENT=_F(LIST_INST = LR8), 
                   TEMP_INIT=_F(STATIONNAIRE = 'OUI'),
                   CONVERGENCE=_F(ITER_GLOB_MAXI=20,
                                  RESI_GLOB_MAXI=1.E-12),
                   NEWTON=_F(RESI_LINE_RELA=1.E-3,
                             REAC_ITER=1,
                             ITER_LINE_MAXI=5),
                   INFO=2,
                   EXCIT=(_F(CHARGE=CH_0,),_F(CHARGE=CH_1,),),
                   SENSIBILITE=(PS1,PS2));
#
# 4.2. Calculs pour evaluer les differences finies
#
RETH1M=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=CMATM,
                   INCREMENT=_F(LIST_INST = LR8), 
                   TEMP_INIT=_F(STATIONNAIRE = 'OUI'),
                   CONVERGENCE=_F(ITER_GLOB_MAXI=20,
                                  RESI_GLOB_MAXI=1.E-12),
                   NEWTON=_F(RESI_LINE_RELA=1.E-3,
                             REAC_ITER=1,
                             ITER_LINE_MAXI=5),
                   EXCIT=(_F(CHARGE=CH_0),_F(CHARGE=CH_1)));
RETH1P=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=CMATP,
                   INCREMENT=_F(LIST_INST = LR8), 
                   TEMP_INIT=_F(STATIONNAIRE = 'OUI'),
                   CONVERGENCE=_F(ITER_GLOB_MAXI=20,
                                  RESI_GLOB_MAXI=1.E-12),
                   NEWTON=_F(RESI_LINE_RELA=1.E-3,
                             REAC_ITER=1,
                             ITER_LINE_MAXI=5),
                   EXCIT=(_F(CHARGE=CH_0),_F(CHARGE=CH_1)));
RETH2M=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=CMAT,
                   INCREMENT=_F(LIST_INST = LR8), 
                   TEMP_INIT=_F(STATIONNAIRE = 'OUI'),
                   CONVERGENCE=_F(ITER_GLOB_MAXI=20,
                                  RESI_GLOB_MAXI=1.E-12),
                   NEWTON=_F(RESI_LINE_RELA=1.E-3,
                             REAC_ITER=1,
                             ITER_LINE_MAXI=5),
                   EXCIT=(_F(CHARGE=CH_0),_F(CHARGE=CH_1M)));
RETH2P=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=CMAT,
                   INCREMENT=_F(LIST_INST = LR8), 
                   TEMP_INIT=_F(STATIONNAIRE = 'OUI'),
                   CONVERGENCE=_F(ITER_GLOB_MAXI=20,
                                  RESI_GLOB_MAXI=1.E-12),
                   NEWTON=_F(RESI_LINE_RELA=1.E-3,
                             REAC_ITER=1,
                             ITER_LINE_MAXI=5),
                   EXCIT=(_F(CHARGE=CH_0),_F(CHARGE=CH_1P)));
#
# 4.3. Releve des temperatures (ou sensibilite de temperature)
#
MEMO_NOM_SENSI(NOM=(_F(NOM_SD='RLTH',
                       PARA_SENSI=PS1,
                       NOM_COMPOSE='RLTH_PS1'),
                    _F(NOM_SD='RLTH',
                       PARA_SENSI=PS2,
                       NOM_COMPOSE='RLTH_PS2')));
RLTH=POST_RELEVE_T(ACTION=(_F(RESULTAT = RETH,
                              INTITULE='TEMPERATURE',
                              NOM_CHAM='TEMP',
                              OPERATION='EXTRACTION',
                              GROUP_NO=('I','CENTRE','J'),
                              NOM_CMP=('TEMP'),),
                           _F(RESULTAT = RETH,
                              INTITULE='DT/DPS1',
                              NOM_CHAM='TEMP',
                              OPERATION='EXTRACTION',
                              GROUP_NO=('I','CENTRE','J'),
                              NOM_CMP=('TEMP'),
                              SENSIBILITE=(PS1),),
                           _F(RESULTAT = RETH,
                              INTITULE='DT/DPS2',
                              NOM_CHAM='TEMP',
                              OPERATION='EXTRACTION',
                              GROUP_NO=('I','CENTRE','J'),
                              NOM_CMP=('TEMP'),
                              SENSIBILITE=(PS2),),
                           )
                   );
###IMPR_TABLE( TABLE=RLTH,NOM_PARA=('NOEUD','INST','TEMP',),);
IMPR_TABLE( TABLE=RLTH,SENSIBILITE=(PS1),
            NOM_PARA=('NOEUD','INST','TEMP',),);
IMPR_TABLE( TABLE=RLTH,SENSIBILITE=(PS2),
            NOM_PARA=('NOEUD','INST','TEMP',),);
RLTH1M=POST_RELEVE_T(ACTION=_F(RESULTAT = RETH1M,
                   INTITULE='TEMPERATURE',
                   NOM_CHAM='TEMP',
                   OPERATION='EXTRACTION',
                   GROUP_NO=('I','CENTRE','J'),
                   NOM_CMP=('TEMP')));
RLTH1P=POST_RELEVE_T(ACTION=_F(RESULTAT = RETH1P,
                   INTITULE='TEMPERATURE',
                   NOM_CHAM='TEMP',
                   OPERATION='EXTRACTION',
                   GROUP_NO=('I','CENTRE','J'),
                   NOM_CMP=('TEMP')));
RLTH2M=POST_RELEVE_T(ACTION=_F(RESULTAT = RETH2M,
                   INTITULE='TEMPERATURE',
                   NOM_CHAM='TEMP',
                   OPERATION='EXTRACTION',
                   GROUP_NO=('I','CENTRE','J'),
                   NOM_CMP=('TEMP')));
RLTH2P=POST_RELEVE_T(ACTION=_F(RESULTAT = RETH2P,
                   INTITULE='TEMPERATURE',
                   NOM_CHAM='TEMP',
                   OPERATION='EXTRACTION',
                   GROUP_NO=('I','CENTRE','J'),
                   NOM_CMP=('TEMP')));
#
# 5. Boucle Python de comparaison difference finie/derivee analytique
#
for nume_ordre_k in range(3):
#
  k1 = 3*nume_ordre_k+1
  if nume_ordre_k == 0 :
    aux='ABSOLU'
    raux=1.e-8
  else :
    aux='RELATIF'
    raux=1.e-4
#
# 5.1. point 'I'
#
  temp=RLTH['TEMP',k1]
#
  tempm=RLTH1M['TEMP',k1]
  tempp=RLTH1P['TEMP',k1]
  dfps1 = (tempp-tempm)/(200.*EPSA)
  tempm=RLTH2M['TEMP',k1]
  tempp=RLTH2P['TEMP',k1]
  dfps2 = (tempp-tempm)/(2.*EPSA)
#
  TEST_RESU(RESU=(
     _F(  RESULTAT = RETH,   NUME_ORDRE = nume_ordre_k,
          NOM_CHAM = 'TEMP',  GROUP_NO=('I'),
          CRITERE = aux, PRECISION = raux,
          NOM_CMP = 'TEMP',   SENSIBILITE = PS1,
          VALE = dfps1, REFERENCE = 'AUTRE_ASTER' ),
     _F(  RESULTAT = RETH,   NUME_ORDRE = nume_ordre_k,
          NOM_CHAM = 'TEMP',  GROUP_NO=('I'),
          CRITERE = 'RELATIF', PRECISION = 1.E-8,
          NOM_CMP = 'TEMP',   SENSIBILITE = PS2,
          VALE = dfps2, REFERENCE = 'AUTRE_ASTER' ),
                 )
            ) ;
#
# 5.2. point 'CENTRE'
#
  k1=k1+1
  temp=RLTH['TEMP',k1]
#
  tempm=RLTH1M['TEMP',k1]
  tempp=RLTH1P['TEMP',k1]
  dfps1 = (tempp-tempm)/(200.*EPSA)
  tempm=RLTH2M['TEMP',k1]
  tempp=RLTH2P['TEMP',k1]
  dfps2 = (tempp-tempm)/(2.*EPSA)
#
  TEST_RESU(RESU=(
     _F(  RESULTAT = RETH,   NUME_ORDRE = nume_ordre_k,
          NOM_CHAM = 'TEMP',  GROUP_NO=('CENTRE'),
          CRITERE = aux, PRECISION = 1.E-8,
          NOM_CMP = 'TEMP',   SENSIBILITE = PS1,
          VALE = dfps1, REFERENCE = 'AUTRE_ASTER' ),
     _F(  RESULTAT = RETH,   NUME_ORDRE = nume_ordre_k,
          NOM_CHAM = 'TEMP',  GROUP_NO=('CENTRE'),
          CRITERE = 'RELATIF', PRECISION = 1.E-8,
          NOM_CMP = 'TEMP',   SENSIBILITE = PS2,
          VALE = dfps2, REFERENCE = 'AUTRE_ASTER' ),
                 )
            ) ;
#
# 5.3. point 'J'
#
  k1=k1+1
  temp=RLTH['TEMP',k1]
#
  tempm=RLTH1M['TEMP',k1]
  tempp=RLTH1P['TEMP',k1]
  dfps1 = (tempp-tempm)/(200.*EPSA)
  tempm=RLTH2M['TEMP',k1]
  tempp=RLTH2P['TEMP',k1]
  dfps2 = (tempp-tempm)/(2.*EPSA)
#
  TEST_RESU(RESU=(
     _F(  RESULTAT = RETH,   NUME_ORDRE = nume_ordre_k,
          NOM_CHAM = 'TEMP',  GROUP_NO=('J'),
          CRITERE = aux, PRECISION = 1.E-4,
          NOM_CMP = 'TEMP',   SENSIBILITE = PS1,
          VALE = dfps1, REFERENCE = 'AUTRE_ASTER' ),
     _F(  RESULTAT = RETH,   NUME_ORDRE = nume_ordre_k,
          NOM_CHAM = 'TEMP',  GROUP_NO=('J'),
          CRITERE = 'RELATIF', PRECISION = 1.E-4,
          NOM_CMP = 'TEMP',   SENSIBILITE = PS2,
          VALE = dfps2, REFERENCE = 'AUTRE_ASTER' ),
                 )
            ) ;
#
FIN();
