# MODIF  DATE 10/10/2012   AUTEUR COURTOIS M.COURTOIS 
# TITRE TEST EN 3D VMIS_ISOT_PUIS UTILISANT SIMU_POINT_MAT
# comp001i.para = tps_job 60 mem_job 256Mo ncpus 1 liste_test R
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='COMP001I',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),PAR_LOT='OUI',IMPR_MACRO='NON',DEBUG=_F(SDVERI='OUI'))

# DEFINITION DES DEUX MATERIAUX EQUIVALENT POUR UNE INTERCOMPARAISON

YOUNG=200000.0
SY=500.0
POISSON=0.3
APUI=20000
NPUI=3.5

# def des materiaux
ACIER = [None]*2
ACIER2 = [None]*2
#unite en Pa
C_Pa = 1.e+6
YOUNG_Pa = YOUNG * C_Pa
SY_Pa = SY * C_Pa;

ACIER[0]=DEFI_MATERIAU(ELAS=_F(E=YOUNG_Pa,
                               NU=POISSON),
                    ECRO_PUIS=_F(A_PUIS=APUI,
                                 N_PUIS=NPUI,
                                 SY=SY_Pa,
                                 ),
                                 );

#unite en MPa
ACIER[1]=DEFI_MATERIAU(ELAS=_F(E=YOUNG,
                               NU=POISSON),
                    ECRO_PUIS=_F(A_PUIS=APUI,
                                 N_PUIS=NPUI,
                                 SY=SY,
                                 ),
                   )

# courbe de traction equivalente

# courbe R(p)
Rdep = FORMULE(VALE='SY+SY*(YOUNG*p/APUI/SY)**(1./NPUI)',NOM_PARA='p',);

LISTE=DEFI_LIST_REEL(DEBUT=0.,INFO=1,
                        INTERVALLE=_F(JUSQU_A=1.,
                                      NOMBRE=1000,),);

Rdep2=CALC_FONC_INTERP(FONCTION=Rdep,
                       LIST_PARA=LISTE,
                       NOM_PARA='p');

# transforamtion en courbe Sigma=F(epsilon)

TRdep=CREA_TABLE(FONCTION=_F(FONCTION=Rdep2,PARA=('p','SIGM')))

EPSI = FORMULE(VALE='p+SIGM/YOUNG',NOM_PARA=('p','SIGM'),)

TTRAC = CALC_TABLE(TABLE = TRdep,
ACTION = _F (OPERATION = 'OPER',FORMULE = EPSI,NOM_PARA = ('EPSI')))

Ftrac=RECU_FONCTION(TABLE=TTRAC,PARA_X='EPSI',PARA_Y='SIGM')

ACIER2[1]=DEFI_MATERIAU(ELAS=_F(E=YOUNG,
                            NU=POISSON),
                    TRACTION=_F(SIGM=Ftrac),);

FtracPa=CALC_FONCTION(COMB=(
                          _F( FONCTION = Ftrac, COEF =  C_Pa),
                          ) );

ACIER2[0]=DEFI_MATERIAU(ELAS=_F(E=YOUNG_Pa,
                            NU=POISSON),
                    TRACTION=_F(SIGM=FtracPa),);




compor1='ELAS_VMIS_PUIS'
compor2='ELAS_VMIS_TRAC'

TEST_COMPOR(OPTION='MECA',

              COMP_ELAS=_F(RELATION=compor1,),
              NEWTON=_F(REAC_ITER=1),
              LIST_MATER=ACIER,
              LIST_NPAS=4*[1] + [1, 5, 25],
              VARI_TEST=('V1','VMIS','TRACE'),
              #LIST_TOLE=4*[1.E-10] + [1.E-1] + 2*[1.E-2] + [1.E-8]
              YOUNG=YOUNG,POISSON=POISSON,
              )

TEST_COMPOR(OPTION='MECA',

              COMP_ELAS=_F(RELATION=compor2,),
              NEWTON=_F(REAC_ITER=1),
              LIST_MATER=ACIER2,
              LIST_NPAS=4*[1] + [1, 5, 25],
              VARI_TEST=('V1','VMIS','TRACE'),
              #LIST_TOLE=4*[1.E-10] + [1.E-1] + 2*[1.E-2] + [1.E-8]
              YOUNG=YOUNG,POISSON=POISSON,
              )

FIN()

