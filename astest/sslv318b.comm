# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

# MODELISATION B : FISSURE CYLINDRE

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='OUI'),
      DEBUG=_F(SDVERI='OUI')
      )

# dimension du cube 
LX = 1.
LY = 1.
LZ = 1.

MA=LIRE_MAILLAGE(FORMAT='MED',)

MOD=AFFE_MODELE(MAILLAGE=MA,
                AFFE=_F(TOUT='OUI',
                        PHENOMENE='MECANIQUE',
                        MODELISATION='3D'))

# Definition de la fissure sur le maillage en entree
r = 0.5
x0 = LX
y0 = LY/2.
z0 = LZ

FISS=DEFI_FISS_XFEM(MAILLAGE=MA,
                    DEFI_FISS=_F(FORM_FISS      = 'CYLINDRE',
                                 DEMI_GRAND_AXE = r,
                                 DEMI_PETIT_AXE = r,
                                 CENTRE         = (x0, y0, z0),
                                 VECT_X         = ( 0., 0.,-1.),
                                 VECT_Y         = (-1., 0., 0.),
                                 ))

# Extraction des level sets
LSN=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
               OPERATION='EXTR',
               FISSURE=FISS,
               NOM_CHAM='LNNO')

LST=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
               OPERATION='EXTR',
               FISSURE=FISS,
               NOM_CHAM='LTNO')

# IMPR_RESU(FORMAT='GMSH',UNITE=37,RESU=(_F(CHAM_GD=LSN),
#                                        _F(CHAM_GD=LST)))

LSN_P4=POST_RELEVE_T(ACTION=_F(GROUP_NO = 'P4',
                               CHAM_GD = LSN,
                               TOUT_CMP='OUI',
                               INTITULE='LSN P4',
                               OPERATION = 'EXTRACTION') )

LSN_P5=POST_RELEVE_T(ACTION=_F(GROUP_NO = 'P5',
                               CHAM_GD = LSN,
                               TOUT_CMP='OUI',
                               INTITULE='LSN P5',
                               OPERATION = 'EXTRACTION') )
                               
IMPR_TABLE(TABLE=LSN_P4)
IMPR_TABLE(TABLE=LSN_P5)

LST_P4=POST_RELEVE_T(ACTION=_F(GROUP_NO = 'P4',
                               CHAM_GD = LST,
                               TOUT_CMP='OUI',
                               INTITULE='LST P4',
                               OPERATION = 'EXTRACTION') )

LST_P5=POST_RELEVE_T(ACTION=_F(GROUP_NO = 'P5',
                               CHAM_GD = LST,
                               TOUT_CMP='OUI',
                               INTITULE='LST P5',
                               OPERATION = 'EXTRACTION') )
                               
IMPR_TABLE(TABLE=LST_P4)
IMPR_TABLE(TABLE=LST_P5)

ref_lsn_p4 = sqrt(LX**2+LZ**2) - r
ref_lsn_p5 = LX-r

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-12,
           VALE_CALC=0.9142135623731,
           VALE_REFE=0.91421356237309515,
           NOM_PARA='X1',
           TABLE=LSN_P4,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-12,
           VALE_CALC=0.5,
           VALE_REFE=0.5,
           NOM_PARA='X1',
           TABLE=LSN_P5,)

ref_lst_p4 = -LY/2.
ref_lst_p5 = -LY/2.

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-12,
           VALE_CALC=-0.5,
           VALE_REFE=-0.5,
           NOM_PARA='X1',
           TABLE=LST_P4,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-12,
           VALE_CALC=-0.5,
           VALE_REFE=-0.5,
           NOM_PARA='X1',
           TABLE=LST_P5,)

FIN()
