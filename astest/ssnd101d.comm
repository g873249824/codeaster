#
# TITRE DISCRETS AVEC COMPORTEMENT VISQUEUX 3D
#
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#
# --------------------------------------------------------------------------------------------------
#
#                   DISCRET COMPORTEMENT ZENER GENERALISE
#
#   Modélisation d'un amortisseur de type MAXWELL (non-linéaire)
#
#          e1      c,a
#      ---=====-----=]---
#
# --------------------------------------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON',),
    
)

MAIL=LIRE_MAILLAGE()

Zener = DEFI_MATERIAU( ELAS=_F(E=1.0, NU=0.3 ,  ),
    DIS_VISC=_F(K1=120.0, K2=0.0, UNSUR_K3=0.0, C=1.7, PUIS_ALPHA=0.50 ),
)

CHMATZ=AFFE_MATERIAU(
    MAILLAGE=MAIL,
    AFFE= (
        _F(GROUP_MA=('ZENER01',),  MATER=Zener,),
    ),
)

MODELZ=AFFE_MODELE(
    MAILLAGE=MAIL,
    AFFE=(
        _F( GROUP_MA=('ZENER01',), PHENOMENE='MECANIQUE', MODELISATION='DIS_T',),
    ),
)

# condition aux limites en déplacement
ZERO = DEFI_CONSTANTE(VALE=0.0)
def Sinus(t,freq):
    return sin(2.0*pi*freq*t)

Freq01 = 5.0 ; U01 = 0.10
# Le déplacement imposé
Depla01  = FORMULE(VALE='U01*Sinus(INST,Freq01)',   NOM_PARA='INST')

CONDZ1 =AFFE_CHAR_MECA_F(MODELE=MODELZ,
    DDL_IMPO = (
        _F(GROUP_NO='PZ2', DY=ZERO, DZ=ZERO, DX=Depla01, ),
        _F(GROUP_NO='PZ1', LIAISON='ENCASTRE',),
    ),
)
#
kbid = 1.0
CARELZ1=AFFE_CARA_ELEM(
    MODELE=MODELZ,
    DISCRET=(
        _F( REPERE='LOCAL',CARA='K_T_D_L', GROUP_MA='ZENER01',  VALE=( kbid,kbid,kbid), ),
    ),
)
# Liste d'instant
TempsMaxi = 1.00
DeltaPas  = 4.0E-03

linstS=DEFI_LIST_REEL(
    DEBUT=0.0,
    INTERVALLE=_F(JUSQU_A = TempsMaxi, PAS = DeltaPas,), )

RESUZ=STAT_NON_LINE(
    MODELE     = MODELZ,
    CHAM_MATER = CHMATZ,
    CARA_ELEM  = CARELZ1,
    EXCIT=_F(CHARGE=CONDZ1),
    COMPORTEMENT=(
        _F(RELATION='DIS_VISC', GROUP_MA='ZENER01'),
    ),
    INCREMENT=_F(LIST_INST=linstS,),
    CONVERGENCE=_F(ARRET='OUI',  ITER_GLOB_MAXI=50,),
    NEWTON=_F(REAC_INCR=1,REAC_ITER=1, MATRICE='TANGENTE',),
)

ResultatZ = [
  ( 4.000E-03,  1.2533323356430E-02,  1.3901305564654E+00 ),
  ( 4.800E-02,  9.9802672842827E-02,  1.5399690347096E+00 ),
  ( 1.000E-01, -1.6539504141266E-16, -2.9840799981192E+00 ),
  ( 1.360E-01, -9.0482705246602E-02, -2.2555706075403E+00 ),
  ( 2.040E-01,  1.2533323356431E-02,  2.9999350282465E+00 ),
  ( 2.480E-01,  9.9802672842827E-02,  1.5401915597398E+00 ),
  ( 3.040E-01, -1.2533323356431E-02, -2.9999350282852E+00 ),
  ( 3.480E-01, -9.9802672842827E-02, -1.5401915597074E+00 ),
  ( 4.040E-01,  1.2533323356431E-02,  2.9999350282970E+00 ),
  ( 5.000E-01, -1.0045133128078E-15, -2.9840798812719E+00 ),
  ( 5.600E-01, -9.5105651629515E-02, -4.1551773591104E-01 ),
  ( 6.000E-01,  1.3475548801822E-15,  2.9840798812750E+00 ),
  ( 6.400E-01,  9.5105651629516E-02,  2.0490126532863E+00 ),
  ( 7.040E-01, -1.2533323356432E-02, -2.9999350283063E+00 ),
  ( 7.480E-01, -9.9802672842827E-02, -1.5401915596821E+00 ),
  ( 8.040E-01,  1.2533323356432E-02,  2.9999350283073E+00 ),
  ( 8.480E-01,  9.9802672842827E-02,  1.5401915596806E+00 ),
  ( 9.040E-01, -1.2533323356432E-02, -2.9999350283079E+00 ),
  ( 9.480E-01, -9.9802672842827E-02, -1.5401915596795E+00 ),
  ( 1.000E+00, -1.2240642527361E-16,  2.9840798812793E+00 ),
]

def Critere(valr):
    if ( abs(valr) <= 1.0E-08 ): return 'ABSOLU'
    return 'RELATIF'

# --------------------------------------------------------------------------------------------------
TABDEPZ0 = CREA_TABLE(
    RESU=_F(RESULTAT=RESUZ, GROUP_MA='ZENER01',NOM_CHAM='DEPL',TOUT_CMP='OUI',),
)
TABDEPZ0 = CALC_TABLE(reuse=TABDEPZ0,
    TABLE=TABDEPZ0,
    ACTION=(
        _F(OPERATION='FILTRE',NOM_PARA='NOEUD',CRIT_COMP='EQ',VALE_K='NZ2'),
        _F(OPERATION='EXTR',NOM_PARA=('NUME_ORDRE','INST','DX'),),
    ),
)
TABSIGZ0 = CREA_TABLE(
    RESU=_F(RESULTAT=RESUZ, GROUP_MA='ZENER01',NOM_CHAM='SIEF_ELGA',TOUT_CMP='OUI',),
)
TABSIGZ0 = CALC_TABLE(reuse=TABSIGZ0,
    TABLE=TABSIGZ0,
    ACTION=(
        _F(OPERATION='FILTRE',NOM_PARA='POINT',CRIT_COMP='EQ',VALE=1),
        _F(OPERATION='EXTR',NOM_PARA=('NUME_ORDRE','INST','N',),),
    ),
)
TABRZ0= CALC_TABLE(
    TABLE=TABDEPZ0,
    ACTION=(
        _F(OPERATION='COMB',TABLE=TABSIGZ0,NOM_PARA='NUME_ORDRE'),
    ),
)
#IMPR_TABLE(FORMAT='TABLEAU',TABLE=TABRZ0,FORMAT_R='E20.13')
for inst,dx,force in ResultatZ:
    TEST_TABLE(
        TABLE = TABRZ0,
        FILTRE=_F(NOM_PARA='INST',CRIT_COMP='EQ',VALE=inst ),
        NOM_PARA= 'DX', VALE_CALC=dx, VALE_REFE=dx, REFERENCE='SOURCE_EXTERNE',
        CRITERE= Critere(dx), LEGENDE='%s' % inst,
    )
    TEST_TABLE(
        TABLE = TABRZ0,
        FILTRE=_F(NOM_PARA='INST',CRIT_COMP='EQ',VALE=inst ),
        NOM_PARA= 'N', VALE_CALC=force, VALE_REFE=force, REFERENCE='SOURCE_EXTERNE',
        CRITERE= Critere(force), LEGENDE='%s' % inst,
    )

FIN()
