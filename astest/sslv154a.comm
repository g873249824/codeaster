# MODIF  DATE 30/01/2012   AUTEUR MACOCCO K.MACOCCO 
# TITRE  FISSURE CIRCULAIRE EN MODE MIXTE
# sslv154a.para = tps_job 120 mem_job 512Mo liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(NOM='SSLV154A',
              NIV_PUB_WEB='INTERNET',
              VISU_EFICAS='OUI'),
      DEBUG=_F(SDVERI='OUI'))

# MODELISATION A : FEM, MAILLAGE QUADRATIQUE (SANS BARSOUM CAR PLANTE DANS DEFI_FISS_XFEM)

# parametres utiles
#------------------

# angle d'inclinaison de la force imposee
alpha = pi / 4.0

# valeur nominale de la force imposee
sig = 1000000.

# rayon de la fissure
a = 2


MA=LIRE_MAILLAGE(FORMAT='MED',);

MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_PEAU_3D=_F(GROUP_MA=('FACE_AV','FACE_SUP','FACE_INF','FACE_LAD','FACE_LAG',),),);

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_MA=_F(NOM='CUBE',
                               TOUT='OUI',),);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

nu = 0.3
MAT=DEFI_MATERIAU(ELAS=_F(E=2.E11,
                          NU=nu),)

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=MAT,),);

SYMETR=AFFE_CHAR_MECA(MODELE=MO,
                      DDL_IMPO=(_F(GROUP_NO='D1',
                                   DX=0,
                                   DZ=0,),
                                _F(GROUP_NO='D2',
                                   DZ=0,),),
                      FACE_IMPO=_F(GROUP_MA='FACE_AV',
                                   DY=0.,),);

PRESSION=AFFE_CHAR_MECA(MODELE=MO,
                        FORCE_FACE=(_F(GROUP_MA='FACE_SUP', FX= cos(alpha)*sin(alpha)*sig, FZ= sin(alpha)*sin(alpha)*sig ),
                                    _F(GROUP_MA='FACE_INF', FX=-cos(alpha)*sin(alpha)*sig, FZ=-sin(alpha)*sin(alpha)*sig ),
                                    _F(GROUP_MA='FACE_LAG', FX=-cos(alpha)*cos(alpha)*sig, FZ=-cos(alpha)*sin(alpha)*sig ),
                                    _F(GROUP_MA='FACE_LAD', FX= cos(alpha)*cos(alpha)*sig, FZ= cos(alpha)*sin(alpha)*sig ),
                                    )
                        )

RESU=MECA_STATIQUE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   EXCIT=(_F(CHARGE=PRESSION,),
                          _F(CHARGE=SYMETR,),)
                   )

k1ref = 2/pi * sig*sin(alpha)**2 * sqrt(pi*a)

angle = 0
k2ref_0 = 4./(pi*(2.-nu)) * sig*sin(alpha)*cos(alpha) * cos(angle) * sqrt(pi*a)

angle = pi/2.
k3ref_90 = 4.*(1 - nu)/(pi*(2.-nu)) * sig*sin(alpha)*cos(alpha) * sin(angle) * sqrt(pi*a)


MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=_F(OPTION='NOEUD_ORDO',
                               NOM='NFF3',
                               GROUP_MA='LFF1',
                               GROUP_NO_ORIG='NFF1',
                               GROUP_NO_EXTR='NFF2',),);

FISS=DEFI_FOND_FISS(MAILLAGE=MA,
                    FOND_FISS=_F(GROUP_NO='NFF3',
                                 DTAN_ORIG=( 1.,0.,0.,),
                                 DTAN_EXTR=(-1.,0.,0.,),
                               ),
                    LEVRE_SUP=_F(GROUP_MA='LEVSUP',),
                    LEVRE_INF=_F(GROUP_MA='LEVINF',),
                    );

FISSX=DEFI_FISS_XFEM(MODELE=MO,
                     DEFI_FISS=_F(GROUP_MA_FISS='LEVINF',
                                  GROUP_MA_FOND='LFF1',),
                     GROUP_MA_ENRI='CUBE',
                     ORIE_FOND=_F(PFON_INI=(2.0,0.0,0.0,),
                                  VECT_ORIE=(0.0,0.0,1.0,),
                                  POINT_ORIG=(0.0,0.0,0.0,),),);
RSUP = 0.5
RINF = 0.1


# Methode G-theta
CG=CALC_G(THETA=_F(FISSURE=FISSX,
                   DTAN_ORIG=(1,0,0,),
                   DTAN_EXTR=(-1,0,0,),
                   R_INF=RINF,
                   R_SUP=RSUP),
          RESULTAT=RESU,
          LISSAGE=_F(LISSAGE_THETA='LAGRANGE',
                     LISSAGE_G='LAGRANGE',),
          OPTION='CALC_K_G')

# Extrapolation des sauts de deplacements
PK=POST_K1_K2_K3(MODELISATION='3D',
                 FOND_FISS=FISS,
                 MATER=MAT,
                 RESULTAT=RESU,
                 )
                
# formule pour le calcul de l'angle en degre
ANGLE=FORMULE(NOM_PARA=('ABSC_CURV'),VALE='ABSC_CURV/a * 180./pi')

# ajout de la colonne angle dans chaque table
CG=CALC_TABLE(TABLE=CG,
              reuse=CG,
              ACTION=_F(OPERATION='OPER',
                        FORMULE=ANGLE,
                        NOM_PARA='ANGLE'))

PK=CALC_TABLE(TABLE=PK,
              reuse=PK,
              ACTION=_F(OPERATION='OPER',
                        FORMULE=ANGLE,
                        NOM_PARA='ANGLE'))

# impression de chaque table
IMPR_TABLE(TABLE=CG)
IMPR_TABLE(TABLE=PK)


# TEST DE CALC_G
#---------------

# test de KI sur tout le fond de fissure
TEST_TABLE(TABLE=CG,
           TYPE_TEST='MAX',
           NOM_PARA='K1',
           VALE=k1ref,
           CRITERE='RELATIF',
           PRECISION=0.08,
           REFERENCE='ANALYTIQUE')

TEST_TABLE(TABLE=CG,
           TYPE_TEST='MIN',
           NOM_PARA='K1',
           VALE=k1ref,
           CRITERE='RELATIF',
           PRECISION=0.02,
           REFERENCE='ANALYTIQUE')

# test de KII au premier point du fond (angle = 0)
# le signe n'est pas important, mais on ne peut pas tester |K2|
# il se trouve que le K2 de CALC_G est de signe oppose a celui de POST_K
TEST_TABLE(TABLE=CG,
           FILTRE=_F(NOM_PARA='ANGLE',
                     VALE=0.),
           NOM_PARA='K2',
           VALE=-k2ref_0,
           CRITERE='RELATIF',
           PRECISION=0.14,
           REFERENCE='ANALYTIQUE')

# test de KIII au milieu du fond (angle = 90 avec + ou -0.5 degre)
# le signe n'est pas important, mais on ne peut pas tester |K3|
# il se trouve que le K3 de CALC_G est de signe oppose a celui de POST_K
TEST_TABLE(TABLE=CG,
           FILTRE=_F(NOM_PARA='ANGLE',
                     VALE=90.,
                     CRITERE='ABSOLU',
                     PRECISION=0.5,),
           NOM_PARA='K3',
           VALE=k3ref_90,
           CRITERE='RELATIF',
           PRECISION=0.09,
           REFERENCE='ANALYTIQUE')


# TEST DE POST_K
#---------------

# test de KI sur tout le fond de fissure
TEST_TABLE(TABLE=PK,
           TYPE_TEST='MAX',
           NOM_PARA='K1',
           VALE=k1ref,
           CRITERE='RELATIF',
           PRECISION=0.03,
           REFERENCE='ANALYTIQUE')

TEST_TABLE(TABLE=PK,
           TYPE_TEST='MIN',
           NOM_PARA='K1',
           VALE=k1ref,
           CRITERE='RELATIF',
           PRECISION=0.05,
           REFERENCE='ANALYTIQUE')

# test de KII au premier point du fond (angle = 0)
TEST_TABLE(TABLE=PK,
           FILTRE=_F(NOM_PARA='ANGLE',
                     VALE=0.),
           NOM_PARA='K2',
           VALE=k2ref_0,
           CRITERE='RELATIF',
           PRECISION=0.07,
           REFERENCE='ANALYTIQUE')

# test de KIII au milieu du fond (angle = 90 avec + ou -0.5 degre)
# le signe n'est pas important, mais on ne peut pas tester |K3|
# il se trouve que le K3 de CALC_G est de signe oppose a celui de POST_K
TEST_TABLE(TABLE=PK,
           FILTRE=_F(NOM_PARA='ANGLE',
                     VALE=90.,
                     CRITERE='ABSOLU',
                     PRECISION=0.5,),
           NOM_PARA='K3',
           VALE=-k3ref_90,
           CRITERE='RELATIF',
           PRECISION=0.07,
           REFERENCE='ANALYTIQUE')
            

FIN();
