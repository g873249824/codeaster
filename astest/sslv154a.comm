# MODIF  DATE 22/01/2013   AUTEUR LADIER A.LADIER 
# TITRE  FISSURE CIRCULAIRE EN MODE MIXTE
# sslv154a.para = tps_job 120 mem_job 512Mo liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(NOM='SSLV154A',
              NIV_PUB_WEB='INTERNET',
              VISU_EFICAS='OUI'),
      DEBUG=_F(SDVERI='OUI'))

# MODELISATION A : FEM, MAILLAGE QUADRATIQUE

# parametres utiles
#------------------

# angle d'inclinaison de la force imposee
alpha = pi / 4.0

# valeur nominale de la force imposee
sig = 1000000.

# rayon de la fissure
a = 2

#-----------------------------------------------------------------------------------------------------------------------------
#                                 CALCUL
#-----------------------------------------------------------------------------------------------------------------------------

MA=LIRE_MAILLAGE(FORMAT='MED')

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=_F(OPTION='NOEUD_ORDO',
                               NOM='NFF3',
                               GROUP_MA='LFF1',
                               GROUP_NO_ORIG='NFF1',
                               GROUP_NO_EXTR='NFF2',),);

# Barsoum
MA=MODI_MAILLAGE(reuse=MA,
                 MAILLAGE=MA,
                 MODI_MAILLE=_F(OPTION='NOEUD_QUART',
                                GROUP_NO_FOND='NFF3'))

MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_PEAU_3D=_F(GROUP_MA=('FACE_AV','FACE_SUP','FACE_INF','FACE_LAD','FACE_LAG',),),);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

E=2.E11
nu = 0.3
MAT=DEFI_MATERIAU(ELAS=_F(E=E,
                          NU=nu),)

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=MAT,),);

SYMETR=AFFE_CHAR_MECA(MODELE=MO,
                      DDL_IMPO=(_F(GROUP_NO='D1',
                                   DX=0,
                                   DZ=0,),
                                _F(GROUP_NO='D2',
                                   DZ=0,),),
                      FACE_IMPO=_F(GROUP_MA='FACE_AV',
                                   DY=0.,),);

PRESSION=AFFE_CHAR_MECA(MODELE=MO,
                        FORCE_FACE=(_F(GROUP_MA='FACE_SUP', FX= cos(alpha)*sin(alpha)*sig, FZ= sin(alpha)*sin(alpha)*sig ),
                                    _F(GROUP_MA='FACE_INF', FX=-cos(alpha)*sin(alpha)*sig, FZ=-sin(alpha)*sin(alpha)*sig ),
                                    _F(GROUP_MA='FACE_LAG', FX=-cos(alpha)*cos(alpha)*sig, FZ=-cos(alpha)*sin(alpha)*sig ),
                                    _F(GROUP_MA='FACE_LAD', FX= cos(alpha)*cos(alpha)*sig, FZ= cos(alpha)*sin(alpha)*sig ),
                                    )
                        )

RESU=MECA_STATIQUE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   EXCIT=(_F(CHARGE=PRESSION,),
                          _F(CHARGE=SYMETR,),)
                   )


#-----------------------------------------------------------------------------------------------------------------------------
#                                 POST-TRAITEMENT
#-----------------------------------------------------------------------------------------------------------------------------

FISS=DEFI_FOND_FISS(MAILLAGE=MA,
                    FOND_FISS=_F(GROUP_NO='NFF3'),
                    LEVRE_SUP=_F(GROUP_MA='LEVSUP'),
                    LEVRE_INF=_F(GROUP_MA='LEVINF'),
                    )

RSUP = 0.528
RINF = 0.12

# Methode G-theta
CG=CALC_G(THETA=_F(FOND_FISS=FISS,
                   R_INF=RINF,
                   R_SUP=RSUP),
          RESULTAT=RESU,
          OPTION='CALC_K_G')

# Extrapolation des sauts de deplacements
PK=POST_K1_K2_K3(MODELISATION='3D',
                 FOND_FISS=FISS,
                 MATER=MAT,
                 RESULTAT=RESU,
                 )
                
# formule pour le calcul de l'angle en degre
ANGLE=FORMULE(NOM_PARA=('ABSC_CURV'),VALE='ABSC_CURV/a * 180./pi')

# formules pour les valeurs de reference
K1REF=FORMULE(NOM_PARA=('ANGLE'),VALE=' 2/pi * sig * sin(alpha)**2 * sqrt(pi*a) ')
K2REF=FORMULE(NOM_PARA=('ANGLE'),VALE=' 4./(pi*(2.-nu)) * sig*sin(alpha)*cos(alpha) * cos(ANGLE/180*pi) * sqrt(pi*a)')
K3REF=FORMULE(NOM_PARA=('ANGLE'),VALE=' 4.*(1 - nu)/(pi*(2.-nu)) * sig*sin(alpha)*cos(alpha) * sin(ANGLE/180*pi) * sqrt(pi*a) ')
GREF =FORMULE(NOM_PARA=('ANGLE'),VALE=' (1-nu**2)/E * ( K1REF(ANGLE)**2 + K2REF(ANGLE)**2 ) + (1+nu)/E * K3REF(ANGLE)**2 ')

# ajout des colonnes 'angle' et valeurs de ref dans les tables
CG=CALC_TABLE(TABLE=CG,
              reuse=CG,
              ACTION=(_F(OPERATION='OPER',FORMULE=ANGLE,NOM_PARA='ANGLE'),
                      _F(OPERATION='OPER',FORMULE=K1REF,NOM_PARA='K1REF'),
                      _F(OPERATION='OPER',FORMULE=K2REF,NOM_PARA='K2REF'),
                      _F(OPERATION='OPER',FORMULE=K3REF,NOM_PARA='K3REF'),
                      _F(OPERATION='OPER',FORMULE=GREF ,NOM_PARA='GREF'),
                      )
              )

PK=CALC_TABLE(TABLE=PK,
              reuse=PK,
              ACTION=(_F(OPERATION='OPER',FORMULE=ANGLE,NOM_PARA='ANGLE'),
                      _F(OPERATION='OPER',FORMULE=K1REF,NOM_PARA='K1REF'),
                      _F(OPERATION='OPER',FORMULE=K2REF,NOM_PARA='K2REF'),
                      _F(OPERATION='OPER',FORMULE=K3REF,NOM_PARA='K3REF'),
                      _F(OPERATION='OPER',FORMULE=GREF ,NOM_PARA='GREF'),
                      )
               )

# impression de chaque table
IMPR_TABLE(TABLE=CG)
IMPR_TABLE(TABLE=PK)


#-----------------------------------------------------------------------------------------------------------------------------
#                                 TESTS DES TABLES
#-----------------------------------------------------------------------------------------------------------------------------

# valeurs de ref pour les tests
k1ref = K1REF(0)
k2ref_0 = K2REF(0)
k3ref_90 = K3REF(90)


# TEST DE CALC_G
#---------------

# test de KI sur tout le fond de fissure
TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=0.055,           
           VALE_CALC=8.4116022407415E+05,
           VALE_REFE=K1REF(0),
           NOM_PARA='K1',
           TYPE_TEST='MAX',
           TABLE=CG,)

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=0.04,           
           VALE_CALC=8.2467134885892E+05,
           VALE_REFE=K1REF(0),
           NOM_PARA='K1',
           TYPE_TEST='MIN',
           TABLE=CG,)

# test de KII au premier point du fond (angle = 0)
# le signe n'est pas important, mais on ne peut pas tester |K2|
# il se trouve que le K2 de CALC_G est de signe oppose a celui de POST_K
TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=0.09,           
           VALE_CALC=8.6048423458242E+05,
           VALE_REFE=k2ref_0,
           NOM_PARA='K2',
           TABLE=CG,
           FILTRE=_F(NOM_PARA='ANGLE',
                     VALE=0.0,),
           )

# test de KIII au milieu du fond (angle = 90 avec + ou -0.5 degre)
# le signe n'est pas important, mais on ne peut pas tester |K3|
# il se trouve que le K3 de CALC_G est de signe oppose a celui de POST_K
TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=0.03,           
           VALE_CALC=6.7127146373538E+05,
           VALE_REFE=k3ref_90,
           NOM_PARA='K3',
           TABLE=CG,
           FILTRE=_F(CRITERE='ABSOLU',
                     PRECISION=0.5,
                     NOM_PARA='ANGLE',
                     VALE=90.0,),
           )

# TEST DE POST_K
#---------------

# test de KI sur tout le fond de fissure
TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=0.03,
           VALE_CALC=8.1416989152068E+05,
           VALE_REFE=k1ref,
           NOM_PARA='K1',
           TYPE_TEST='MAX',
           TABLE=PK,)

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=0.02,
           VALE_CALC=7.8741851960183E+05,
           VALE_REFE=k1ref,
           NOM_PARA='K1',
           TYPE_TEST='MIN',
           TABLE=PK,)

# test de KII au premier point du fond (angle = 0)
TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=0.02,
           VALE_CALC=9.2716042142343E+05,
           VALE_REFE=k2ref_0,
           NOM_PARA='K2',
           TABLE=PK,
           FILTRE=_F(NOM_PARA='ANGLE',
                     VALE=0.0,),
           )

# test de KIII au milieu du fond (angle = 90 avec + ou -0.5 degre)
# le signe n'est pas important, mais on ne peut pas tester |K3|
# il se trouve que le K3 de CALC_G est de signe oppose a celui de POST_K
TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=0.02,
           VALE_CALC=-6.4763901992612E+05,
           VALE_REFE=-k3ref_90,
           NOM_PARA='K3',
           TABLE=PK,
           FILTRE=_F(CRITERE='ABSOLU',
                     PRECISION=0.5,
                     NOM_PARA='ANGLE',
                     VALE=90.0,),
           )

#-----------------------------------------------------------------------------------------------------------------------------
#                                 TRACE DES COURBES
#-----------------------------------------------------------------------------------------------------------------------------

# courbe de G
C_G_REF=RECU_FONCTION(TABLE=CG,
                      PARA_X='ANGLE',
                      PARA_Y='GREF',)

C_G_CG=RECU_FONCTION(TABLE=CG,
                     PARA_X='ANGLE',
                     PARA_Y='G',)

C_G_PK=RECU_FONCTION(TABLE=PK,
                     PARA_X='ANGLE',
                     PARA_Y='G',)

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=30,
              COURBE=(_F(FONCTION=C_G_REF,
                         LEGENDE='G reference',
                         MARQUEUR=0,
                         COULEUR=1),
                      _F(FONCTION=C_G_CG,
                         LEGENDE='G CALC_G',
                         MARQUEUR=0,
                         COULEUR=2),
                      _F(FONCTION=C_G_PK,
                         LEGENDE='G POST_K1_K2_K3',
                         MARQUEUR=0,
                         COULEUR=3),
                       ),
              TITRE='Taux de restitution d energie',
              BORNE_X=(0.0,180,),
              BORNE_Y=(0.0,10,),
              GRILLE_X=20,
              GRILLE_Y=1.0,
              LEGENDE_X='angle (degre)',
              LEGENDE_Y='G (J.m\S-2\N)',);


# courbe de K1
C_K1_REF=RECU_FONCTION(TABLE=CG,
                       PARA_X='ANGLE',
                       PARA_Y='K1REF',)

C_K1_CG=RECU_FONCTION(TABLE=CG,
                      PARA_X='ANGLE',
                      PARA_Y='K1',)

C_K1_PK=RECU_FONCTION(TABLE=PK,
                      PARA_X='ANGLE',
                      PARA_Y='K1',)

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=31,
              COURBE=(_F(FONCTION=C_K1_REF,
                         LEGENDE='K1 reference',
                         MARQUEUR=0,
                         COULEUR=1),
                      _F(FONCTION=C_K1_CG,
                         LEGENDE='K1 CALC_G',
                         MARQUEUR=0,
                         COULEUR=2),
                      _F(FONCTION=C_K1_PK,
                         LEGENDE='K1 POST_K1_K2_K3',
                         MARQUEUR=0,
                         COULEUR=3),
                       ),
              TITRE='K1',
              BORNE_X=(0.0,180,),
              BORNE_Y=(0.0,1e6,),
              GRILLE_X=20,
              GRILLE_Y=1e5,
              LEGENDE_X='angle (degre)',
              LEGENDE_Y='KI (Pa.m\S-1/2\N)',)

# courbe de K2
C_K2_REF=RECU_FONCTION(TABLE=CG,
                       PARA_X='ANGLE',
                       PARA_Y='K2REF',)

C_K2_CG=RECU_FONCTION(TABLE=CG,
                      PARA_X='ANGLE',
                      PARA_Y='K2',)

C_K2_PK=RECU_FONCTION(TABLE=PK,
                      PARA_X='ANGLE',
                      PARA_Y='K2',)

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=32,
              COURBE=(_F(FONCTION=C_K2_REF,
                         LEGENDE='K2 reference',
                         MARQUEUR=0,
                         COULEUR=1),
                      _F(FONCTION=C_K2_CG,
                         LEGENDE='K2 CALC_G',
                         MARQUEUR=0,
                         COULEUR=2),
                      _F(FONCTION=C_K2_PK,
                         LEGENDE='K2 POST_K2_K2_K3',
                         MARQUEUR=0,
                         COULEUR=3),
                       ),
              TITRE='K2',
              BORNE_X=(0.0,180,),
              BORNE_Y=(-1e6,1e6,),
              GRILLE_X=20,
              GRILLE_Y=1e5,
              LEGENDE_X='angle (degre)',
              LEGENDE_Y='KII (Pa.m\S-1/2\N)',)

# courbe de K3
C_K3_REF=RECU_FONCTION(TABLE=CG,
                       PARA_X='ANGLE',
                       PARA_Y='K3REF',)

C_K3_CG=RECU_FONCTION(TABLE=CG,
                      PARA_X='ANGLE',
                      PARA_Y='K3',)

C_K3_PK=RECU_FONCTION(TABLE=PK,
                      PARA_X='ANGLE',
                      PARA_Y='K3',)

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=33,
              COURBE=(_F(FONCTION=C_K3_REF,
                         LEGENDE='K3 reference',
                         MARQUEUR=0,
                         COULEUR=1),
                      _F(FONCTION=C_K3_CG,
                         LEGENDE='K3 CALC_G',
                         MARQUEUR=0,
                         COULEUR=2),
                      _F(FONCTION=C_K3_PK,
                         LEGENDE='K3 POST_K3_K3_K3',
                         MARQUEUR=0,
                         COULEUR=3),
                       ),
              TITRE='K3',
              BORNE_X=(0.0,180,),
              BORNE_Y=(0.0,1e6,),
              GRILLE_X=20,
              GRILLE_Y=1e5,
              LEGENDE_X='angle (degre)',
              LEGENDE_Y='KIII (Pa.m\S-1/2\N)',)



FIN()

