# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

POURSUITE(CODE='OUI',)


# post-traitement de type 1 avec signal en fréquence


tmax = 10.24 # INST_FIN
pasdt = 0.02 # PAS_INST

# interpolation

linst = DEFI_LIST_REEL(DEBUT=0.,
                       INTERVALLE=_F(JUSQU_A=tmax - pasdt,
                                     PAS=pasdt),)

ACXCO = CALC_FONCTION(COMB=_F(FONCTION=ACCE_X, COEF=1.0,),
                      LIST_PARA=linst)

ACYCO = CALC_FONCTION(COMB=_F(FONCTION=ACCE_Y, COEF=1.0,),
                      LIST_PARA=linst)

ACZCO = CALC_FONCTION(COMB=_F(FONCTION=ACCE_Z, COEF=1.0,),
                     LIST_PARA=linst)


ACCE_XFR = CALC_FONCTION(FFT=_F(FONCTION=ACXCO, METHODE='PROL_ZERO',),)

ACCE_YFR = CALC_FONCTION(FFT=_F(FONCTION=ACYCO, METHODE='PROL_ZERO',),)

ACCE_ZFR = CALC_FONCTION(FFT=_F(FONCTION=ACZCO, METHODE='PROL_ZERO',),)


resgenfr = CALC_MISS(
    TYPE_RESU = 'TRAN_GENE',
    VERSION = 'V6.6',
    TABLE_SOL = tabsol,
    BASE_MODALE = BASMO,
    MATR_RIGI = MATRIGI,
    MATR_MASS = MATMASS,
    AMOR_REDUIT = l_amor,
    GROUP_MA_INTERF = 'SRADIER',

    PARAMETRE=_F(
        FREQ_MIN=dfc,
        FREQ_MAX=fmaxc,
        FREQ_PAS=dfc,
        TYPE='BINAIRE',
        Z0= -11.60,
        SURF='OUI',
        AUTO='OUI',COEF_OFFSET=3,
        # Valeurs en manuel :
        #ALGO = 'DEPL',
        #OFFSET_MAX=110,
        #OFFSET_NB=400,
        SPEC_MAX=0.12,
        SPEC_NB=16384,
    ),
    UNITE_RESU_IMPE=38,
    UNITE_RESU_FORC=28,

    MODELE         = MODELE,
    ACCE_X         = ACCE_XFR,
    ACCE_Y         = ACCE_YFR,
    ACCE_Z         = ACCE_ZFR,

    INFO=2,
)


# On va comparer HARM_GENE et TRAN_GENE pour signaux en fréquence
resgenhf = CALC_MISS(
    TYPE_RESU = 'HARM_GENE',
    VERSION = 'V6.6',
    TABLE_SOL = tabsol,
    BASE_MODALE = BASMO,
    MATR_RIGI = MATRIGI,
    MATR_MASS = MATMASS,
    AMOR_REDUIT = l_amor,
    GROUP_MA_INTERF = 'SRADIER',

    PARAMETRE=_F(
        FREQ_MIN=dfc,
        FREQ_MAX=fmaxc,
        FREQ_PAS=dfc,
        TYPE='BINAIRE',
        Z0= -11.60,
        SURF='OUI',
        AUTO='OUI',COEF_OFFSET=3,
        # Valeurs en manuel :
        #ALGO = 'DEPL',
        #OFFSET_MAX=110,
        #OFFSET_NB=400,
        SPEC_MAX=0.12,
        SPEC_NB=16384,
    ),
    UNITE_RESU_IMPE=38,
    UNITE_RESU_FORC=28,

    MODELE         = MODELE,
    ACCE_X         = ACCE_XFR,
    ACCE_Y         = ACCE_YFR,
    ACCE_Z         = ACCE_ZFR,

    INFO=2,
)
resgen0f = REST_SPEC_TEMP(RESU_GENE = resgenhf,
                                  METHODE = 'TRONCATURE',
                                  SYMETRIE = 'NON',
                                  TOUT_CHAM = 'OUI')


FIN()
