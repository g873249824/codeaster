# MODIF  DATE 10/10/2012   AUTEUR COURTOIS M.COURTOIS 
# TITRE  FISSURE SEMI-ELLIPTIQUE AVEC MILIEU INFINI
# sslv110e.para = tps_job 60 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# TEST SSLV110E (non documente)
# CALCUL DE G ET G LOCAL PAR LES METHODES 'LEGENDRE' ET 'LAGRANGE'
# PRESSION SUR LES LEVRES DE LA FISSURE (UNE SEULE LEVRE REPRESENTEE !)
#
#

DEBUT(CODE=_F(NOM='SSLV110E',NIV_PUB_WEB='INTERNET'),
      DEBUG=_F(SDVERI='OUI'),
      IGNORE_ALARM=('RUPTURE0_55','UTILITAI4_40'))

# on ignore les 2 alarmes'RUPTURE0_55' et 'UTILITAI4_40' car le but de ce cas test 
# est de tester CALC_G avec different type de charges (fcontion, constante, pression...)
# sans pour autant realiser un calcul mecanique avec chacune de ces charges.
# Ainsi, on realise un unique calcul mecanique et on fait plusieurs post-traitements.
# Dans chaque post-traitement, la charge est equivalente a celle utilisee dans le calcul
#
# --------------------------------------------------------------------

MA=LIRE_MAILLAGE(FORMAT='MED',  )

MO=AFFE_MODELE(  MAILLAGE=MA,
                    AFFE=_F(  TOUT = 'OUI',
                           PHENOMENE = 'MECANIQUE',
                           MODELISATION = '3D', ) )

MA=MODI_MAILLAGE( reuse=MA,   MAILLAGE=MA,
                        ORIE_PEAU_3D=_F(  GROUP_MA = 'GRPRES',  )
                      )

MAT=DEFI_MATERIAU( ELAS=_F(  E = 210000.,
                            NU = 0.3,    ))

CHMAT=AFFE_MATERIAU(  MAILLAGE=MA,
                       AFFE=_F(  TOUT = 'OUI',
                              MATER = MAT, ))

# ------------------------------------------------------------------
#    --- STRUCTURE EN APPUI SIMPLE AVEC PRESSION SUR LES LEVRES

CH=AFFE_CHAR_MECA(  MODELE=MO,DDL_IMPO=(
                     _F(  GROUP_NO = 'MACSYM',    DZ = 0.,  ),
                              _F(  GROUP_NO = 'ELISYM',    DX = 0.,  ),
                              _F(  GROUP_NO = 'GRNINF',    DY = 0.,  )),
                     PRES_REP=_F(  GROUP_MA = 'GRPRES',  PRES = 1.,  ) )

PRESF = FORMULE(NOM_PARA=('X','Y','Z'),VALE='1.')
FORCF = FORMULE(NOM_PARA=('X','Y','Z'),VALE='1.')

CHFONC=AFFE_CHAR_MECA_F(MODELE=MO,
                        PRES_REP=_F(GROUP_MA = 'GRPRES',
                                    PRES = PRESF))

CHFACER=AFFE_CHAR_MECA(MODELE=MO,
                       FORCE_FACE=_F(GROUP_MA = 'GRPRES',  FZ = 1.,))

CHFACEF=AFFE_CHAR_MECA_F(MODELE=MO,
                         FORCE_FACE=_F(GROUP_MA = 'GRPRES',
                                       FZ = FORCF,   )      )

# resolution avec une charge en pression constante
CHAMDEPL=MECA_STATIQUE(MODELE=MO,
                       CHAM_MATER=CHMAT,
                       EXCIT=_F( CHARGE = CH,  ))


#----------------------------------------------------------------------
#              post-traitement
#----------------------------------------------------------------------

FONDFISS=DEFI_FOND_FISS(MAILLAGE=MA,
                        SYME='OUI',
                        FOND_FISS=_F(GROUP_NO='FONFIS'),
                        LEVRE_SUP=_F(GROUP_MA='GRPRES'),
                        )

# on ne post-traite les resultat que pour la couronne 2
MODUF=DEFI_FONCTION(  NOM_PARA='ABSC',  VALE=( 0., 1.,     26.69, 1., ))
RINF=DEFI_FONCTION(  NOM_PARA='ABSC',  VALE=( 0., 0.1875, 26.69, 0.7812,))
RSUP=DEFI_FONCTION(  NOM_PARA='ABSC',  VALE=( 0., 0.375,  26.69, 1.5625,))

THETA=CALC_THETA(MODELE=MO,
                 FOND_FISS=FONDFISS,
                 THETA_3D=_F(TOUT = 'OUI',
                             MODULE_FO = MODUF,
                             R_INF_FO = RINF,
                             R_SUP_FO = RSUP,)
                  )

# post-traitement avec la charge du calcul (pression constante)
Gglob1=CALC_G(OPTION='CALC_G_GLOB',
              RESULTAT=CHAMDEPL,
              THETA=_F(THETA=THETA,
                       SYME='OUI',))

Gloc1=CALC_G(RESULTAT=CHAMDEPL,
             THETA=_F(FOND_FISS=FONDFISS,
                      R_SUP_FO=RSUP,
                      R_INF_FO=RINF))

# post-traitement avec une charge en force face constante
Gglob2=CALC_G(OPTION='CALC_G_GLOB',
              RESULTAT=CHAMDEPL,
              THETA=_F(THETA=THETA,
                       SYME='OUI'),
              EXCIT=_F(CHARGE=CHFACER))

Gloc2=CALC_G(RESULTAT=CHAMDEPL,
             THETA=_F(FOND_FISS=FONDFISS,
                      R_SUP_FO=RSUP,
                      R_INF_FO=RINF),
             EXCIT=_F(CHARGE=CHFACER))

# post-traitement avec une charge en force face 'fonction'
Gglob3=CALC_G(OPTION='CALC_G_GLOB',
              RESULTAT=CHAMDEPL,
              THETA=_F(THETA=THETA,
                       SYME='OUI'),
              EXCIT=_F(CHARGE=CHFACEF))

Gloc3=CALC_G(RESULTAT=CHAMDEPL,
             THETA=_F(FOND_FISS=FONDFISS,
                      R_SUP_FO=RSUP,
                      R_INF_FO=RINF),
             EXCIT=_F(CHARGE=CHFACEF))


#----------------------------------------------------------------------
#              TEST DE G global
#----------------------------------------------------------------------

Gglob_ref = 5.76e-3 / 4

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=1.E-2,
           VALE_CALC= 1.44905123E-03,
           VALE_REFE=1.4400000000000001E-3,
           NOM_PARA='G',
           TABLE=Gglob1,)

Gglob_cal = 1.449052E-03
# deuxieme test pour verif que la valeur que l'on cherche a reproduire n'a pas bouge
TEST_TABLE(
           VALE_CALC=1.4490519999999999E-3,
           
           NOM_PARA='G',
           TABLE=Gglob1,
           )

# dans la suite, on ne cherche pas a se comparer a la valeur analytique
# on fait juste une comparaison avec les resultats de la charge du calcul

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=9.9999999999999995E-07,
           VALE_CALC= 1.44905116E-03,
           VALE_REFE=1.4490519999999999E-3,
           NOM_PARA='G',
           TABLE=Gglob2,)

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=9.9999999999999995E-07,
           VALE_CALC= 1.44905116E-03,
           VALE_REFE=1.4490519999999999E-3,
           NOM_PARA='G',
           TABLE=Gglob3,)

#----------------------------------------------------------------------
#              TEST DE G(A)
#----------------------------------------------------------------------

Ga_ref = 7.16e-5

# premier test pour verif que l'on ne calcule pas n'importe quoi
TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.029999999999999999,
           VALE_CALC= 6.98286999E-05,
           VALE_REFE=7.1600000000000006E-05,
           NOM_PARA='G',
           TABLE=Gloc1,
           FILTRE=_F(NOM_PARA='NOEUD',
                     VALE_K='NO1099',),
           )

Ga_cal = 6.9828699868854E-05 
# deuxieme test pour verif que la valeur que l'on cherche a reproduire n'a pas bouge
TEST_TABLE(
           VALE_CALC=6.9828699868854002E-05,
           
           NOM_PARA='G',
           TABLE=Gloc1,
           FILTRE=_F(NOM_PARA='NOEUD',
                     VALE_K='NO1099',),
           )

# dans la suite, on ne cherche pas a se comparer a la valeur analytique
# on fait juste une comparaison avec les resultats de la charge du calcul

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=9.9999999999999995E-07,
           VALE_CALC= 6.98286832E-05,
           VALE_REFE=6.9828699868854002E-05,
           NOM_PARA='G',
           TABLE=Gloc2,
           FILTRE=_F(NOM_PARA='NOEUD',
                     VALE_K='NO1099',),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=9.9999999999999995E-07,
           VALE_CALC= 6.98286832E-05,
           VALE_REFE=6.9828699868854002E-05,
           NOM_PARA='G',
           TABLE=Gloc3,
           FILTRE=_F(NOM_PARA='NOEUD',
                     VALE_K='NO1099',),
           )

FIN()
#
