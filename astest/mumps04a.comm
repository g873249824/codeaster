# MODIF  DATE 07/10/2005   AUTEUR CIBHHPD L.SALMONA 
# TITRE VALIDATION DE MUMPS EN NON-SYMETRIQUE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F( NOM = 'MUMPS04A',NIV_PUB_WEB='INTERNET'))

# CE TEST EST UNE COPIE DE SSNV131B : ON FORCE L'USAGE DE MUMPS
#---------------------------------------------------------------------


MA=LIRE_MAILLAGE( )

# DEFINITION DU COMPORTEMENT DES MATERIAUX


ACIER=DEFI_MATERIAU(


                ELAS=_F(
                E = 200000.,
                NU = 0.),

                ECRO_LINE=_F(
                SY = 2000.,
                D_SIGM_EPSI = -50000.),

                NON_LOCAL=_F(
                LONG_CARA = 10.)
              )

MAT=AFFE_MATERIAU(

              MAILLAGE=MA,

                AFFE=_F(
                TOUT = 'OUI',
                MATER = ACIER)
              )

# CHOIX DU TYPE D''ELEMENTS FINIS


MO_MECA=AFFE_MODELE(

               MAILLAGE=MA,

                AFFE=_F(
                TOUT = 'OUI',
                PHENOMENE = 'MECANIQUE',
                MODELISATION = 'D_PLAN_GRAD_EPSI')
              )


# DEFINITION DU CHARGEMENT


RAMPE=DEFI_FONCTION(

                  NOM_PARA='INST',
                      VALE=(0., 0., 5., 5.,),
                PROL_DROITE='EXCLU',
               PROL_GAUCHE='EXCLU',
                     VERIF='CROISSANT'
              )

LIAISON=AFFE_CHAR_MECA(

                      MODELE=MO_MECA,

                DDL_IMPO=_F(
                GROUP_NO = 'BAS',
                DX = 0.,
                DY = 0.)
              )

TRACTION=AFFE_CHAR_MECA(

                      MODELE=MO_MECA,

                DDL_IMPO=_F(
                GROUP_NO = 'HAUT',
                DY = 0.01)
              )

# DISCRETISATION ET CALCUL


INSTANTS=DEFI_LIST_REEL(

                   DEBUT=0.,

                INTERVALLE=_F(
                JUSQU_A = 5.,
                NOMBRE = 5)
              )

EVOL=STAT_NON_LINE(    SOLVEUR=_F(METHODE='MUMPS',PCENT_PIVOT=200,),
                        CHAM_MATER=MAT,
                         INCREMENT=_F(
                LIST_INST = INSTANTS,
                NUME_INST_FIN = 2),
                            MODELE=MO_MECA,EXCIT=(
                             _F(
                CHARGE = LIAISON), _F(
                CHARGE = TRACTION,
                FONC_MULT = RAMPE)),
                         COMP_INCR=_F(
                RELATION = 'ENDO_FRAGILE',
                ITER_INTE_MAXI = 30),
                            NEWTON=_F(
                MATRICE = 'TANGENTE',
                PREDICTION = 'TANGENTE',
                REAC_INCR = 1),
                       CONVERGENCE=_F(
                RESI_GLOB_RELA = 1.E-4,
                ITER_GLOB_MAXI = 1,
                ARRET = 'OUI'),
                    LAGR_NON_LOCAL=_F(
                ITER_PRIM_MAXI = 10,
                ITER_DUAL_MAXI = 1,
                RESI_PRIM_ABSO = 1.E-7,
                RESI_DUAL_ABSO = 1.E-3)
              )

EVOL=STAT_NON_LINE( reuse=EVOL, SOLVEUR=_F(METHODE='MUMPS',PCENT_PIVOT=200,),
                        CHAM_MATER=MAT,
                         INCREMENT=_F(
                LIST_INST = INSTANTS,
                NUME_INST_FIN = 3),
                         ETAT_INIT=_F(
                EVOL_NOLI = EVOL,
                NUME_ORDRE = 2),
                            MODELE=MO_MECA,EXCIT=(
                             _F(
                CHARGE = LIAISON), _F(
                CHARGE = TRACTION,
                FONC_MULT = RAMPE)),
                         COMP_INCR=_F(
                ITER_INTE_MAXI = 30,
                RELATION = 'ENDO_FRAGILE'),
                            NEWTON=_F(
                MATRICE = 'TANGENTE',
                PREDICTION = 'TANGENTE',
                REAC_ITER = 1),
                       CONVERGENCE=_F(
                RESI_GLOB_RELA = 1.E-4,
                ITER_GLOB_MAXI = 1,
                ARRET = 'OUI'),
                    LAGR_NON_LOCAL=_F(
                ITER_PRIM_MAXI = 10,
                ITER_DUAL_MAXI = 1,
                RESI_PRIM_ABSO = 1.E-7,
                RESI_DUAL_ABSO = 1.E-3)
              )

TEST_RESU(RESU=(
              _F(
               REFERENCE = 'ANALYTIQUE',
               RESULTAT = EVOL,  NOM_CHAM = 'VARI_ELGA',  INST = 3.,
               MAILLE = 'M1',  POINT = 1,               NOM_CMP = 'V1',
               PRECISION = 1.E-3,
               VALE = 0.833333),
              _F(
               REFERENCE = 'ANALYTIQUE',
               RESULTAT = EVOL,   NOM_CHAM = 'SIEF_ELGA',  INST = 3.,
               MAILLE = 'M1',  POINT = 1,               NOM_CMP = 'SIYY',
               PRECISION = 1.E-3,
               VALE = 1000.))
            )

FIN()
