# TITRE CALCUL MODAL D'UNE PLAQUE RECTANGULAIRE SIMPLEMENT APPUYEE SUR TOUS SES BORDS
#
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

########################################################################

#           SOUS-STRUCTURATION CLASSIQUE

#           PLAQUE DECOUPEE EN 2 PARTIES

#           AVEC INTERFACES DE TYPE CRAIG-BAMPTON

########################################################################

#
#123678901234567890123456789012345678901234567890123456789012345678901
#
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
      DEBUG=_F(SDVERI='OUI'))

#
PRE_IDEAS()

MAILLA=LIRE_MAILLAGE( )

MODELE=AFFE_MODELE(  MAILLAGE=MAILLA,
                            AFFE=_F( GROUP_MA = 'CALCUL',
                                  PHENOMENE = 'MECANIQUE',
                                  MODELISATION = 'DKT'))

#
MATER=DEFI_MATERIAU(  ELAS=_F( E = 2.1E11,  NU = 0.30,  RHO = 7800.0))

#
CHAMAT=AFFE_MATERIAU(  MAILLAGE=MAILLA,
                              AFFE=_F( GROUP_MA = 'CALCUL',
                                    MATER = MATER))

#
PARAM=AFFE_CARA_ELEM(  MODELE=MODELE,
                            COQUE=_F( EPAIS = 0.01,
                                   GROUP_MA = 'CALCUL'))

#


########################################################################
#
#        PLAQUE APPUYEE-APPUYEE DECOUPEE EN 2 PARTIES
#   SOUS-STRUCTURATION CLASSIQUE - INTERFACES TYPE CRAIG-BAMPTON
#
########################################################################
#
#
# SOUS-STRUCTURE 1 APPUYEE-ENCASTREE - INTERFACE TYPE CRAIG-BAMPTON
#
CHARGE_1=AFFE_CHAR_MECA(  MODELE=MODELE,DDL_IMPO=(
               _F( GROUP_NO = 'BLOQUE', DX = 0.0, DY = 0.0, DZ = 0.0),
               _F( GROUP_NO = 'GAUCHE', DX = 0.0, DY = 0.0, DZ = 0.0,
                         DRX = 0.0, DRY = 0.0, DRZ = 0.0),
               _F( GROUP_NO = 'BAS', DX = 0.0, DY = 0.0, DZ = 0.0),
               _F( GROUP_NO = 'HAUT', DX = 0.0, DY = 0.0, DZ = 0.0)))

#
MERIME_1=CALC_MATR_ELEM(      MODELE=MODELE,
                                CHARGE=CHARGE_1,
                            CHAM_MATER=CHAMAT,
                             CARA_ELEM=PARAM,
                               OPTION='RIGI_MECA')

#
MEMAME_1=CALC_MATR_ELEM(      MODELE=MODELE,
                                CHARGE=CHARGE_1,
                            CHAM_MATER=CHAMAT,
                             CARA_ELEM=PARAM,
                               OPTION='MASS_MECA')

#
NUMDDL_1=NUME_DDL(  MATR_RIGI=MERIME_1)

#
RAID_1=ASSE_MATRICE(  MATR_ELEM=MERIME_1,
                           NUME_DDL=NUMDDL_1)

#
MASS_1=ASSE_MATRICE(  MATR_ELEM=MEMAME_1,
                           NUME_DDL=NUMDDL_1)

#
MODES_1=CALC_MODES(MATR_RIGI=RAID_1,
                   OPTION='PLUS_PETITE',
                   CALC_FREQ=_F(NMAX_FREQ=6,
                                ),
                   MATR_MASS=MASS_1,
                   )


#


# SOUS-STRUCTURE 2 ENCASTREE-APPUYEE - INTERFACE TYPE CRAIG-BAMPTON
#

CHARGE_2=AFFE_CHAR_MECA(  MODELE=MODELE,DDL_IMPO=(
               _F( GROUP_NO = 'BLOQUE', DX = 0.0, DY = 0.0, DZ = 0.0,
                         DRX = 0.0, DRY = 0.0, DRZ = 0.0),
               _F( GROUP_NO = 'GAUCHE', DX = 0.0, DY = 0.0, DZ = 0.0),
               _F( GROUP_NO = 'BAS', DX = 0.0, DY = 0.0, DZ = 0.0),
               _F( GROUP_NO = 'HAUT', DX = 0.0, DY = 0.0, DZ = 0.0)))

#
MERIME_2=CALC_MATR_ELEM(      MODELE=MODELE,
                                CHARGE=CHARGE_2,
                            CHAM_MATER=CHAMAT,
                             CARA_ELEM=PARAM,
                               OPTION='RIGI_MECA')

#
MEMAME_2=CALC_MATR_ELEM(      MODELE=MODELE,
                                CHARGE=CHARGE_2,
                            CHAM_MATER=CHAMAT,
                             CARA_ELEM=PARAM,
                               OPTION='MASS_MECA')

#
NUMDDL_2=NUME_DDL(  MATR_RIGI=MERIME_2)

#
RAID_2=ASSE_MATRICE(  MATR_ELEM=MERIME_2,
                           NUME_DDL=NUMDDL_2)

#
MASS_2=ASSE_MATRICE(  MATR_ELEM=MEMAME_2,
                           NUME_DDL=NUMDDL_2)

#
MODES_2=CALC_MODES(MATR_RIGI=RAID_2,
                   OPTION='PLUS_PETITE',
                   CALC_FREQ=_F(NMAX_FREQ=6,
                                ),
                   MATR_MASS=MASS_2,
                   )


#

#  DEFINITION DES INTERFACES
#
LINT1_CL=DEFI_INTERF_DYNA(   NUME_DDL=NUMDDL_1,
                         INTERFACE=_F( NOM = 'GAUCHE_1',
                                        TYPE = 'CRAIGB',
                             MASQUE = ('DX','DY','DRZ',),
                                        GROUP_NO = 'GAUCHE'))

#
LINT2_CL=DEFI_INTERF_DYNA(   NUME_DDL=NUMDDL_2,
                         INTERFACE=_F( NOM = 'BLOQUE_2',
                                        TYPE = 'CRAIGB',
                             MASQUE = ('DX','DY','DRZ',),
                                        GROUP_NO = 'BLOQUE'))

#   CALCUL DE LA SOLUTION STATIQUE
#

MODESTA1=MODE_STATIQUE(  MATR_RIGI=RAID_1,
                     MODE_STAT=_F( GROUP_NO = 'GAUCHE',
                      AVEC_CMP = ('DZ','DRX','DRY',)))

MODESTA2=MODE_STATIQUE(  MATR_RIGI=RAID_2,
                     MODE_STAT=_F( GROUP_NO = 'BLOQUE',
                      AVEC_CMP = ('DZ','DRX','DRY',)))

#  CALCUL DE LA BASE MODALE DES SOUS-STRUCTURES


BAMO1_CL=DEFI_BASE_MODALE( RITZ=(_F( MODE_INTF = MODESTA1,
                                      NMAX_MODE = 999), 
                                 _F( MODE_MECA = MODES_1),),
                           INTERF_DYNA=LINT1_CL,
                        NUME_REF=NUMDDL_1,
                        SOLVEUR=_F(METHODE='MUMPS'),)


#
BAMO2_CL=DEFI_BASE_MODALE( RITZ=( _F( MODE_MECA = MODES_2),
                          _F( MODE_INTF = MODESTA2,
                                    NMAX_MODE = 999)),
                           INTERF_DYNA=LINT2_CL,
                        NUME_REF=NUMDDL_2)


# CALCUL DES BASES AVEC OPTION DIAG_MASS

BAMO1_DM=DEFI_BASE_MODALE(DIAG_MASS=(_F(MODE_MECA=MODES_1,
                                      MODE_STAT=MODESTA1,),
                                   ),
                       );

BAMO2_DM=DEFI_BASE_MODALE(DIAG_MASS=(_F(MODE_MECA=MODES_2,
                                      MODE_STAT=MODESTA2,),
                                   ),
                       );


#  CALCUL DU MACRO-ELEMENT
#

MACEL1=MACR_ELEM_DYNA(  BASE_MODALE=BAMO1_CL,
                       MATR_MASS=MASS_1,
                       MATR_RIGI=RAID_1,)

#
MACEL2=MACR_ELEM_DYNA(  BASE_MODALE=BAMO2_CL,
                       MATR_MASS=MASS_2,
                       MATR_RIGI=RAID_2)

#
#   CALCUL SUR MODELE GENERALISE
#
MODEGE=DEFI_MODELE_GENE(SOUS_STRUC=(_F( NOM = 'CARRE1',
                                        MACR_ELEM_DYNA = MACEL1,
                                        ANGL_NAUT = (0., 0., 0.,),
                                        TRANS=(0.,0.,0.),),
                                    _F( NOM = 'CARRE2',
                                        MACR_ELEM_DYNA = MACEL2,
                                        ANGL_NAUT = (0., 0., 0.,),
                                        TRANS=(-1.,0.,0.),),),
                             LIAISON=_F( SOUS_STRUC_1 = 'CARRE1',
                                      SOUS_STRUC_2 = 'CARRE2',
                                      INTERFACE_1 = 'GAUCHE_1',
                                      INTERFACE_2 = 'BLOQUE_2'),
                               VERIF=_F( STOP_ERREUR = 'OUI',
                                      PRECISION = 1.E-6,
                                      CRITERE = 'RELATIF'))

#
#  NUMEROTATION DU PROBLEME GENERALISE
#
NUMEGE=NUME_DDL_GENE(  MODELE_GENE=MODEGE)

#
#  ASSEMBLAGE DES MATRICES RAIDEUR ET MASSE
#
MASGEN=ASSE_MATR_GENE(  NUME_DDL_GENE=NUMEGE,
                                  OPTION='MASS_GENE')

#
RIGGEN=ASSE_MATR_GENE(  NUME_DDL_GENE=NUMEGE,
                                  OPTION='RIGI_GENE')

#
#   CALCUL DES MODES PROPRES DE LA STRUCTURE GLOBALE
#
RESGEN=CALC_MODES(MATR_RIGI=RIGGEN,
                  OPTION='PLUS_PETITE',
                  CALC_FREQ=_F(NMAX_FREQ=6,
                               ),
                  MATR_MASS=MASGEN,
                  )


#
#  MEME CHOSE EN ELIMINANT LES EQUATIONS DE LIAISON
#
#  NUMEROTATION DU PROBLEME GENERALISE
#
NUGEEL=NUME_DDL_GENE(  MODELE_GENE=MODEGE,
                       METHODE='ELIMINE',)

#
#  ASSEMBLAGE DES MATRICES RAIDEUR ET MASSE
#
MAGEEL=ASSE_MATR_GENE(  NUME_DDL_GENE=NUGEEL,
                                  OPTION='MASS_GENE')

#
RIGEEL=ASSE_MATR_GENE(  NUME_DDL_GENE=NUGEEL,
                                  OPTION='RIGI_GENE')

#
#   CALCUL DES MODES PROPRES DE LA STRUCTURE GLOBALE
#
RESGEL=CALC_MODES(MATR_RIGI=RIGEEL,
                  OPTION='PLUS_PETITE',
                  CALC_FREQ=_F(NMAX_FREQ=6,
                               ),
                  MATR_MASS=MAGEEL,
                  )


#

#

#   CREATION DU MAILLAGE SQUELETTE DE LA STRUCTURE GLOBALE
#

SQUEL=DEFI_SQUELETTE(  MODELE_GENE=MODEGE,SOUS_STRUC=(
                            _F( NOM = 'CARRE1',
                                GROUP_MA = 'CALCUL',
                               ),
                            _F( NOM = 'CARRE2',
                                GROUP_MA = 'CALCUL',
                               ))
                       )

#
#   RESTITUTION SUR MAILLAGE SQUELETTE
#
MODGLO=REST_SOUS_STRUC(   RESU_GENE=RESGEN,
                             SQUELETTE=SQUEL,
                           TOUT_ORDRE='OUI',
                      TOUT_CHAM='OUI')

#
MODGLO=NORM_MODE( reuse=MODGLO,
                  MODE=MODGLO,
                  NORME='TRAN',
                  MODE_SIGNE=_F( NOEUD = 'NO616',
                                 NOM_CMP = 'DZ',
                                 SIGNE = 'POSITIF')
                )

#
MODGLO2=REST_SOUS_STRUC(   RESU_GENE=RESGEN,
                           SOUS_STRUC='CARRE1',
                           TOUT_ORDRE='OUI',
                            TOUT_CHAM='OUI')

#-- RESTITUTION AVEC LA METHODE 'ELIMINE'
MOGLOEL=REST_SOUS_STRUC(   RESU_GENE=RESGEL,
                           SOUS_STRUC='CARRE2',
                           TOUT_ORDRE='OUI',
                            TOUT_CHAM='OUI')
#
#
SQUELBIS=DEFI_SQUELETTE(  MODELE_GENE=MODEGE,
                              SQUELETTE=SQUEL,
                            RECO_GLOBAL=_F(  TOUT = 'OUI',
                                           DIST_REFE = 0.1)
                           )

#
#
MODGLBIS=REST_SOUS_STRUC(   SQUELETTE=SQUELBIS,
                               RESULTAT=MODGLO,
                            TOUT_ORDRE='OUI',
                             TOUT_CHAM='OUI'
                            )

MODGLBIS=NORM_MODE( reuse=MODGLBIS, MODE=MODGLBIS,
                        NORME='TRAN',

                        MODE_SIGNE=_F( NOEUD = 'NO616',
                                       NOM_CMP = 'DZ',
                                       SIGNE = 'POSITIF')
                   )


#
# COMPARAISON DE RESULTATS AVEC DES NOEUDS QUI ONT FUSIONNE
#
TEST_RESU(RESU=(_F(NUME_MODE=1,
                   RESULTAT=MODGLO,
                   NOM_CHAM='DEPL',
                   NOEUD='NO1',
                   NOM_CMP='DZ',
                   VALE_CALC=0.86602959150341,
                   CRITERE='RELATIF',
                   ),
                _F(NUME_MODE=1,
                   RESULTAT=MODGLBIS,
                   NOM_CHAM='DEPL',
                   NOEUD='NO1072',
                   NOM_CMP='DZ',
                   VALE_CALC=0.86602959150341,
                   CRITERE='RELATIF',
                   ),
                ),
          )

TEST_RESU(RESU=(_F(NUME_MODE=3,
                   RESULTAT=MODGLO,
                   NOM_CHAM='DEPL',
                   NOEUD='NO2',
                   NOM_CMP='DZ',
                   VALE_CALC=0.74720793064283,
                   CRITERE='RELATIF',
                   ),
                _F(NUME_MODE=3,
                   RESULTAT=MODGLBIS,
                   NOM_CHAM='DEPL',
                   NOEUD='NO1073',
                   NOM_CMP='DZ',
                   VALE_CALC=0.74720793064283,
                   CRITERE='RELATIF',
                   ),
                ),
          )

TEST_RESU(RESU=(_F(NUME_MODE=4,
                   RESULTAT=MODGLO,
                   NOM_CHAM='DEPL',
                   NOEUD='NO3',
                   NOM_CMP='DZ',
                   VALE_CALC=-0.95107179047988,
                   CRITERE='RELATIF',
                   ),
                _F(NUME_MODE=4,
                   RESULTAT=MODGLBIS,
                   NOM_CHAM='DEPL',
                   NOEUD='NO1074',
                   NOM_CMP='DZ',
                   VALE_CALC=-0.95107179047988,
                   CRITERE='RELATIF',
                   ),
                _F(NUME_MODE=4,
                   RESULTAT=MODGLO,
                   NOM_CHAM='DEPL',
                   NOEUD='NO1292',
                   NOM_CMP='DZ',
                   VALE_CALC=-0.78273296953165,
                   CRITERE='RELATIF',
                   ),
                _F(NUME_MODE=4,
                   RESULTAT=MODGLBIS,
                   NOM_CHAM='DEPL',
                   NOEUD='NO1292',
                   NOM_CMP='DZ',
                   VALE_CALC=-0.78273296953165,
                   CRITERE='RELATIF',
                   ),
                ),
          )

#

# VALIDATION DES DEFORMEES MODALES
# AVEC L'OPERATEUR MACR_LIGNE_COUPE, SELON DIFFERENTES LIGNES

from math import pi, sqrt
a = 2.            # longueur de la plaque
b = 1.5           # largeur
h = 0.01          # épaisseur
E = 2.1e11
nu = 0.3
gamma = 7800.*h   # masse surfacique



# VALEURS DE REFERENCE ANALYTIQUE
# LES COUPLES [i,j] SONT LE NOMBRE DE DEMI-ONDES LE LONG DU GRAND AXE
# ET DU PETIT AXE POUR CHAQUE DEFORMEE MODALE (DANS L'ORDRE CROISSANT
# DES MODES)
c_ij = [ [1,1], [2,1], [1,2], [3,1], [2,2], [3,2] ]


#  - FREQUENCES PROPRES ANALYTIQUES
f_an = []
for nm in range(0, len(c_ij)):
   i = float( c_ij[nm][0] )
   j = float( c_ij[nm][1] )
   lambda_2 = pi**2*(i**2 + j**2*(a/b)**2)
   f_an.append( lambda_2/(2*pi*a**2) * sqrt(E*h**3/(12*gamma*(1-nu**2))) )


# RECUPERATION DE LA DEFORMEE DU TROISIEME MODE, SUIVANT TROIS LIGNES DE COUPE
nb_points = 10
MLCDIAG3=MACR_LIGN_COUPE( RESULTAT= MODGLO,
                      NOM_CHAM= 'DEPL',
                      NUME_MODE= 3,
                      LIGN_COUPE=   _F( NB_POINTS= nb_points,
                                         COOR_ORIG= ( -1.5, -0.5 ),
                                         COOR_EXTR= (  0.5,  1. ), ),)

MLC_X3=MACR_LIGN_COUPE( RESULTAT= MODGLO,
                      NOM_CHAM= 'DEPL',
                      NUME_MODE= 3,
                      LIGN_COUPE=   _F( NB_POINTS= nb_points,
                                         COOR_ORIG= ( -1.5, 0.25 ),
                                         COOR_EXTR= (  0.5, 0.25 ), ),)

MLC_Y3=MACR_LIGN_COUPE( RESULTAT= MODGLO,
                      NOM_CHAM= 'DEPL',
                      NUME_MODE= 3,
                      LIGN_COUPE=   _F( NB_POINTS= nb_points,
                                         COOR_ORIG= ( -0.5, -0.5 ),
                                         COOR_EXTR= ( -0.5,  1. ), ),)


IMPR_TABLE( TABLE=MLCDIAG3 )

IMPR_TABLE( TABLE=MLC_X3 )

IMPR_TABLE( TABLE=MLC_Y3 )



# LECTURE DES VALEURS DE NON REGRESSION POUR LES TEST_*
# SUR LES DEFORMEES ET LES FREQUENCES PROPRES
INCLUDE(UNITE=38)



# VALIDATION DE LA DEFORMEE DU TROISIEME MODE
i = float( c_ij[3-1][0] )
j = float( c_ij[3-1][1] )

for np in range(0,nb_points) :
   # valeur analytique le long de la diagonale
   x = float(np) / (nb_points-1) * a
   y = float(np) / (nb_points-1) * b
   val_an = - sin(i*pi*x/a) * sin(j*pi*y/b)
   critere = 'RELATIF'
   if (val_an < 1.e-12):  # si valeur de référence très petite, il faut tester en absolu
      critere = 'ABSOLU'

   TEST_TABLE(
      TABLE=MLCDIAG3,
      NOM_PARA='DZ',
      FILTRE=(
         _F(NOM_PARA='ABSC_CURV', CRIT_COMP='EQ', VALE= sqrt(x**2 + y**2) )
      ),
      VALE_CALC=diag3_nonreg[np],
      VALE_REFE=val_an,
      REFERENCE='ANALYTIQUE',
      PRECISION=2.0e-2,
      CRITERE=critere,
      )

   # valeur analytique le long de la ligne milieu parallèle à Y
   x = a / 2.
   y = float(np) / (nb_points-1) * b
   val_an = - sin(i*pi*x/a) * sin(j*pi*y/b)
   critere = 'RELATIF'
   if (val_an < 1.e-12):  # si valeur de référence très petite, il faut tester en absolu
      critere = 'ABSOLU'

   TEST_TABLE(
      TABLE=MLC_Y3,
      NOM_PARA='DZ',
      FILTRE=(
         _F(NOM_PARA='ABSC_CURV', CRIT_COMP='EQ', VALE= y )
      ),
      VALE_CALC=y3_nonreg[np],
      VALE_REFE=val_an,
      REFERENCE='ANALYTIQUE',
      PRECISION=1.e-2,
      CRITERE=critere,
      )

   # valeur analytique le long de la ligne milieu parallèle à X : 0
TEST_TABLE(
      TABLE=MLC_X3,
      NOM_PARA='DZ',
      TYPE_TEST='SOMM_ABS',
      VALE_CALC=x3_nonreg,
      VALE_REFE=0.,
      REFERENCE='ANALYTIQUE',
      CRITERE='ABSOLU',
      )




# RECUPERATION DE LA DEFORMEE DU QUATRIEME MODE, SUIVANT TROIS LIGNES DE COUPE
nb_points = 10
MLCDIAG4=MACR_LIGN_COUPE( RESULTAT= MODGLO,
                      NOM_CHAM= 'DEPL',
                      NUME_ORDRE= 4,
                      LIGN_COUPE=   _F( NB_POINTS= nb_points,
                                         COOR_ORIG= ( -1.5, -0.5 ),
                                         COOR_EXTR= (  0.5,  1. ), ),)

MLC_X4=MACR_LIGN_COUPE( RESULTAT= MODGLO,
                      NOM_CHAM= 'DEPL',
                      NUME_ORDRE= 4,
                      LIGN_COUPE=   _F( NB_POINTS= nb_points,
                                         COOR_ORIG= ( -1.5, 0.25 ),
                                         COOR_EXTR= (  0.5, 0.25 ), ),)

MLC_Y4=MACR_LIGN_COUPE( RESULTAT= MODGLO,
                      NOM_CHAM= 'DEPL',
                      NUME_ORDRE= 4,
                      LIGN_COUPE=   _F( NB_POINTS= nb_points,
                                         COOR_ORIG= ( -0.5, -0.5 ),
                                         COOR_EXTR= ( -0.5,  1. ), ),)


IMPR_TABLE( TABLE=MLCDIAG4 )

IMPR_TABLE( TABLE=MLC_X4 )

IMPR_TABLE( TABLE=MLC_Y4 )


# VALIDATION DE LA DEFORMEE DU QUATRIEME MODE
i = c_ij[4-1][0]
j = c_ij[4-1][1]

for np in range(0,nb_points) :
   # valeur analytique le long de la diagonale
   x = float(np) / (nb_points-1) * a
   y = float(np) / (nb_points-1) * b
   val_an = sin(i*pi*x/a) * sin(j*pi*y/b)
   critere = 'RELATIF'
   if (val_an < 1.e-12):  # si valeur de référence très petite, il faut tester en absolu
      critere = 'ABSOLU'

   TEST_TABLE(
      TABLE=MLCDIAG4,
      NOM_PARA='DZ',
      FILTRE=(
         _F(NOM_PARA='ABSC_CURV', CRIT_COMP='EQ', VALE= sqrt(x**2 + y**2) )
      ),
      VALE_CALC=diag4_nonreg[np],
      VALE_REFE=val_an,
      REFERENCE='ANALYTIQUE',
      PRECISION=4.e-2,
      CRITERE=critere,
      )

   # valeur analytique le long de la ligne milieu parallèle à X
   x = float(np) / (nb_points-1) * a
   y = b / 2.
   val_an = sin(i*pi*x/a) * sin(j*pi*y/b)
   critere = 'RELATIF'
   if (val_an < 1.e-12):  # si valeur de référence très petite, il faut tester en absolu
      critere = 'ABSOLU'

   TEST_TABLE(
      TABLE=MLC_X4,
      NOM_PARA='DZ',
      FILTRE=(
         _F(NOM_PARA='ABSC_CURV', CRIT_COMP='EQ', VALE= x )
      ),
      VALE_CALC=x4_nonreg[np],
      VALE_REFE=val_an,
      REFERENCE='ANALYTIQUE',
      PRECISION=4.e-2,
      CRITERE=critere,
      )


   # valeur analytique le long de la ligne milieu parallèle à Y
   x = a / 2.
   y = float(np) / (nb_points-1) * b
   val_an = sin(i*pi*x/a) * sin(j*pi*y/b)
   critere = 'RELATIF'
   if (val_an < 1.e-12):  # si valeur de référence très petite, il faut tester en absolu
      critere = 'ABSOLU'

   TEST_TABLE(
      TABLE=MLC_Y4,
      NOM_PARA='DZ',
      FILTRE=(
         _F(NOM_PARA='ABSC_CURV', CRIT_COMP='EQ', VALE= y )
      ),
      VALE_CALC=y4_nonreg[np],
      VALE_REFE=val_an,
      REFERENCE='ANALYTIQUE',
      PRECISION=1.e-2,
      CRITERE=critere,
      )



# VALIDATION DES FREQUENCES PROPRES
TEST_RESU(RESU=(_F(PARA='FREQ',
                   NUME_MODE=1,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=MODGLO,
                   VALE_CALC=f_nonreg[0],
                   VALE_REFE=f_an[0],
                   CRITERE='RELATIF',
                   PRECISION=5.e-3,),
                _F(PARA='FREQ',
                   NUME_MODE=2,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=MODGLO,
                   VALE_CALC=f_nonreg[1],
                   VALE_REFE=f_an[1],
                   CRITERE='RELATIF',
                   PRECISION=5.e-3,),
                _F(PARA='FREQ',
                   NUME_MODE=3,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=MODGLO,
                   VALE_CALC=f_nonreg[2],
                   VALE_REFE=f_an[2],
                   CRITERE='RELATIF',
                   PRECISION=5.e-3,),
                _F(PARA='FREQ',
                   NUME_MODE=4,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=MODGLO,
                   VALE_CALC=f_nonreg[3],
                   VALE_REFE=f_an[3],
                   CRITERE='RELATIF',
                   PRECISION=5.e-3,),
                _F(PARA='FREQ',
                   NUME_MODE=5,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=MODGLO,
                   VALE_CALC=f_nonreg[4],
                   VALE_REFE=f_an[4],
                   CRITERE='RELATIF',
                   PRECISION=5.e-3,),
                ),
          )



# ON TESTE DEUX VALEURS DE DEPLACEMENT POUR VALIDER L'OPTION DIAG_MASS DE DEFI_BASE_MODALE

TEST_RESU(RESU=(_F(NUME_MODE=99,
                   RESULTAT=BAMO1_DM,
                   NOM_CHAM='DEPL',
                   NOEUD='N22',
                   NOM_CMP='DZ',
                   VALE_CALC=1.1640440451176,

                   CRITERE='RELATIF',
                   ),
                _F(NUME_MODE=99,
                   RESULTAT=BAMO2_DM,
                   NOM_CHAM='DEPL',
                   NOEUD='N22',
                   NOM_CMP='DZ',
                   VALE_CALC=-2.4977605189562002E-4,

                   CRITERE='RELATIF',
                   ),
                ),
          )


FIN()
#
