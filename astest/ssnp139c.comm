# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================


DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),)

# DEFINITION DES LOIS DE COMPORTEMENT DE LA DCB ET DE LA FISSURE
loi_ela='ELAS'
loi_czm='CZM_LIN_REG'

# INSTANT FINAL ET VALEUR DU DEPL FINAL
tfin=10
dep_f=1.1

# NOMBRES DE PAS PAR INSTANT ET NOMBRE D'ARCHIVAGE
nbpas = 2*tfin
nbarch = tfin

# PARAMETRES MECANIQUES DE LA LOI CZM (valeurs tests)
tenac=0.259/2
sigc=35
dc=2*tenac/sigc

# PARAMETRES NUMERIQUES DE LA LOI CZM
pen = 1.E-5

# PARAMETRES DE LA LOI ELASTIQUE (valeurs tests)
young = 200000
nnuu = 0.3


PRE_GMSH()

MA  =  LIRE_MAILLAGE()

MA  =  DEFI_GROUP(
    reuse  = MA,
    MAILLAGE = MA,
    CREA_GROUP_MA = (

# LINES
     _F(NOM = 'DCB_G',  GROUP_MA = 'GM981'),
     _F(NOM = 'DCB_D',  GROUP_MA = 'GM982'),
     _F(NOM = 'DCB_JH', GROUP_MA = 'GM983'),
     _F(NOM = 'DCB_JB', GROUP_MA = 'GM984'),
     _F(NOM = 'DCB_HG', GROUP_MA = 'GM985'),
     _F(NOM = 'DCB_HD', GROUP_MA = 'GM986'),
     _F(NOM = 'DCB_BG', GROUP_MA = 'GM987'),

# SURFACES
     _F(NOM = 'DCB1'  ,  GROUP_MA = 'GM988'),
     _F(NOM = 'DCB2'  ,  GROUP_MA = 'GM989'),
     _F(NOM = 'DCBJ'  ,  GROUP_MA = 'GM990'),
   ),

    CREA_GROUP_NO = (
     _F(NOM = 'DCB_G',  GROUP_MA = 'GM981'),
     _F(NOM = 'NO_7',   GROUP_MA = 'GM954'),


  )
)


MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_FISSURE=_F(GROUP_MA='DCBJ'),
                 )

MO=AFFE_MODELE(

                MAILLAGE=MA,
                AFFE= (
                _F(
                        GROUP_MA = ('DCB1','DCB2','DCB_G'),
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'D_PLAN'
                     ),
                _F(
                        GROUP_MA = 'DCBJ',
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'PLAN_JOINT'
                       ),
                 ))


MATE=DEFI_MATERIAU(
     ELAS=_F(
             E =  young,
             NU = nnuu),
     RUPT_FRAG = _F(
                     GC        = tenac,
                     SIGM_C    = sigc,
                     PENA_ADHERENCE = pen,
                    ))


CM=AFFE_MATERIAU(
               MAILLAGE=MA,
               AFFE=_F(
                       GROUP_MA = ('DCB1','DCB2','DCBJ'),
                       MATER = MATE),
              )


# CHARGEMENTS

SYMETRIE = AFFE_CHAR_MECA(
  MODELE = MO,
  FACE_IMPO = ( _F(GROUP_MA='DCB_JB',DY = 0))
 )

TRACTION = AFFE_CHAR_MECA(
 MODELE = MO,
  DDL_IMPO = (_F(GROUP_NO = 'NO_7'   ,DX = 0)),
  FACE_IMPO= (_F(GROUP_MA = 'DCB_G'  ,DY = 1 ),
            ))

# LISTES D'INSTANT ET D'ARCHIVAGE

deb=0.0
L_INST=DEFI_LIST_REEL(DEBUT   = deb,
     INTERVALLE=(
      #_F( JUSQU_A = 0,        NOMBRE = 1 ),
      _F( JUSQU_A = tfin  ,   NOMBRE = nbpas ),

      ))

INS_ARCH=DEFI_LIST_REEL(DEBUT   = deb,
     INTERVALLE=(
      #_F( JUSQU_A = 0,        NOMBRE = 1 ),
      _F( JUSQU_A = tfin  ,   NOMBRE = nbarch),

      ))

# DEFINITION DE L'EVOLUTION DU CHARGEMENT                )
FCT_E = DEFI_FONCTION(
  NOM_PARA = 'INST',
  VALE     = (-1,0 ,  0,0,   tfin ,dep_f ),
  
                )
DEFLIST =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = L_INST ),
                        ECHEC=_F(
                  ACTION       = 'DECOUPE',
                  SUBD_METHODE = 'MANUEL',
                  SUBD_PAS  = 5,
                  SUBD_PAS_MINI = 1.E-10,
                  SUBD_NIVEAU=10,
                                 ))

  
# CALCUL ELASTIQUE
U_ELAS=STAT_NON_LINE( INFO=1,
  MODELE     = MO,
  CHAM_MATER = CM,
  EXCIT      = (
                 _F(CHARGE = SYMETRIE),
                 _F(CHARGE = TRACTION,FONC_MULT = FCT_E),
               ),
  COMPORTEMENT  = (
                _F(RELATION = loi_ela,  GROUP_MA = ('DCB1','DCB2')),
                _F(RELATION = loi_czm , GROUP_MA = 'DCBJ'),
                ),
  INCREMENT  = _F(LIST_INST = DEFLIST,
                  INST_FIN = tfin,
                  ),
  NEWTON     = _F(MATRICE    = 'TANGENTE'  , REAC_ITER=1),
  CONVERGENCE = _F(
                   RESI_GLOB_RELA = 1.E-6,
                   ITER_GLOB_MAXI = 8,
                  ),
  ARCHIVAGE = _F(LIST_INST     = INS_ARCH),
  SOLVEUR=_F(METHODE='MUMPS',MATR_DISTRIBUEE='OUI'),

  )


# POST_TRAITEMENT

U_ELAS = CALC_CHAMP(reuse = U_ELAS,
               RESULTAT = U_ELAS,
               FORCE='FORC_NODA',
               TOUT = 'OUI',
               )

# INTERPOLATION NODALE DES CHAMPS AUX PG

F_ELAS = POST_RELEVE_T(
 ACTION = _F(
   INTITULE     = 'FORCE_G',
   OPERATION    = 'EXTRACTION',
   GROUP_NO        = 'DCB_G',
   NOM_CHAM     = 'FORC_NODA',
   RESULTANTE   = ('DX','DY'),
   RESULTAT     =  U_ELAS,
   TOUT_ORDRE   = 'OUI',
    ))


D_ELAS = POST_RELEVE_T(
 ACTION = _F(
   INTITULE     = 'DEPLY',
   OPERATION    = 'EXTRACTION',
   GROUP_NO        = 'NO_7',
   NOM_CHAM     = 'DEPL',
   NOM_CMP   = ('DX','DY'),
   RESULTAT     =  U_ELAS,
   TOUT_ORDRE   = 'OUI',
    ))


# POST TRAITEMENT DE LA LONGUEUR DE FISSURE COHESIVE

L_CZM_E = POST_CZM_FISS(RESULTAT = U_ELAS, 
                      OPTION='LONGUEUR', 
                      GROUP_MA='DCBJ', 
                      POINT_ORIG = (0.0 , 0.0),
                      VECT_TANG  = (1.0 , 0.0))
IMPR_TABLE(TABLE=L_CZM_E);

# TESTS DE LA LONGUEUR DE FISSURE COHESIVE A PARTIR DE LA SOLUTION APPROCHEE POUTRE
# epaisseur de la poutre
epai = 1.0
# hauteur de la poutre
haut = 6.0
# Force a l'instant final
forc_f = 8.936982493002
# complaisance a l'instant final a partir de la force et du deplacement
comp=dep_f/forc_f
# moment d'inercie
iner = epai*(haut**3)/12.0
# longueur analytique de la fissure en fonction de la complaisance
l_ana=(3.0*comp*young*iner)**(1./3.)

TEST_TABLE(
           REFERENCE = 'ANALYTIQUE',
           VALE_CALC = 108.5,
           VALE_REFE = l_ana,
           NOM_PARA  = 'LONG_FIS',
           TABLE = L_CZM_E,
           PRECISION = 3.E-2,
           FILTRE = _F(NOM_PARA='INST',
                     VALE=10.0,),
           )

# TESTS DE NON REGRESSION SUR LA TABLE LONGUEUR DE FISSURE
TEST_TABLE(
           VALE_CALC=1.5577350269189,
           NOM_PARA='LONG_COH',
           TABLE=L_CZM_E,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=3.0,),
           )


# AUTRES TESTS RESU
TEST_TABLE(
           VALE_CALC=3.7501830421875,
           NOM_PARA='DY',
           TABLE=F_ELAS,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=3.0,),
           )

TEST_TABLE(
           VALE_CALC = forc_f,
           NOM_PARA='DY',
           TABLE=F_ELAS,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=10.0,),
           )


IMPR_TABLE(TABLE = D_ELAS);
IMPR_TABLE(TABLE = F_ELAS);

# TESTS DES VALEURS AU POINTS DE GAUSS
IMPR_RESU(FORMAT='RESULTAT',RESU=(_F(RESULTAT=U_ELAS,
                                     NOM_CHAM='VARI_ELGA',
                                     INST=tfin,
                                     MAILLE=('M9788','M9789','M9790','M9791','M9792'),
                                     NOM_CMP=('V3','V7'))))



FIN(FORMAT_HDF='OUI')
