# TITRE FISSURE DEBOUCHANTE DANS UNE PLAQUE 3D DE LARGEUR FINIE AVEC X-FEM
# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),
      DEBUG=_F(SDVERI='OUI'),
      IGNORE_ALARM=('MODELE1_63'))

# <MODELE1_63> : DANS UN MODELE, IL EXISTE DES ELEMENTS DE TYPE "BORD" 
#                  QUI N'ONT PAS DE VOISIN AVEC RIGIDITE
#                  LE MODELE PROVOQUANT CES ALARMES NE SERT QU'A LA VISUALISATION

# MODELISATION B : X-FEM FISSURE COINCIDENTE - TRACTION (FACE SUP)

#----------------------------------------------
#                MAILLAGE : hexa_5_30_50.mgib
#----------------------------------------------

MAILLAG1=LIRE_MAILLAGE(FORMAT='MED',INFO=1,);

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO=_F(GROUP_MA='VOL',),);

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO=_F(GROUP_MA='SURFSUP',),);
                    
                    
#----------------------------------------------
#                   MODELE ET FISSURE
#----------------------------------------------

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAG1,
                     AFFE=(_F(GROUP_MA=('VOL',),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D',),
                           _F(GROUP_MA=('SURFINF','SURFSUP',),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D',),),);

MAILLAG1=MODI_MAILLAGE(reuse =MAILLAG1,
                       MAILLAGE=MAILLAG1,
                       ORIE_PEAU_3D=_F(GROUP_MA=('SURFSUP','SURFINF',),),
                       );

# PARAMETRES DE LA FISSURE : 0 < a < 6.5 -> influt sur le choix Rsup !
#                            b = 10.
a=5.
b=10.
#LN=FORMULE(NOM_PARA=('X','Y','Z'),VALE='Z-15.');
#LT=FORMULE(NOM_PARA=('X','Y','Z'),VALE='b-a-Y');
             
FISS=DEFI_FISS_XFEM(MAILLAGE=MAILLAG1,
                    INFO=1,
#                    DEFI_FISS=_F(FONC_LT=LT,FONC_LN=LN,),
                    DEFI_FISS=_F(
                                 FORM_FISS = 'DEMI_PLAN',
                                 PFON      =(0. , 5. ,15.),
                                 NORMALE   =(0. , 0. , 1.),
                                 DTAN      =(0. ,-1. , 0.)),);
                   
MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,FISSURE=FISS,INFO=1,);


#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

E=205000.0E6
nu=0.
rho=7800.
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,RHO=rho,),);

CHAMPMAT=AFFE_MATERIAU(MAILLAGE=MAILLAG1,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER,
                                ),
                             );

#----------------------------------------------
#                   CHARGEMENTS
#----------------------------------------------

PRES=-1.E6
CH1=AFFE_CHAR_MECA(MODELE=MODELEK,
                   DDL_IMPO=(_F(NOEUD='N3751',DX=0.0,DY=0.0,DZ=0.0,),
                             _F(NOEUD='N9276',DZ=0.0,),
                             _F(NOEUD='N3760',DX=0.0,DZ=0.0,),),);

CH2=AFFE_CHAR_MECA(MODELE=MODELEK,
                   PRES_REP=_F(GROUP_MA=('SURFSUP','SURFINF',),PRES=PRES,),);

#----------------------------------------------
#                   RESOLUTION
#----------------------------------------------

RESU=MECA_STATIQUE(MODELE=MODELEK,
                   CHAM_MATER=CHAMPMAT,
                   EXCIT=(_F(CHARGE=CH1),
                          _F(CHARGE=CH2),
                          ),
                   ) 

#------------------------------------------------------------------------
# POST-TRAITEMENT : CALCUL DES SIFS PAR LA METHODE ENERGETIQUE AVEC X-FEM
#------------------------------------------------------------------------

# TEST AVEC PLUSIEURS COURONNES
if a > 4  :
  RI=[2. , 0.666 , 1. , 1. , 1. , 2.1]
  RS=[4. , 1.666 , 2. , 3. , 4. , 3.9]
else :
  RI=[0.666 , 1.]
  RS=[1.666 , 2.]


nbc=len(RI)
SIF = [None]*nbc
GLO = [None]*nbc

for i in range(0,nbc) :

   SIF[i]=CALC_G(RESULTAT=RESU,
                 OPTION='CALC_K_G',
                 THETA=_F(FISSURE=FISS,
                          R_INF=RI[i],
                          R_SUP=RS[i],),
                 LISSAGE=_F(LISSAGE_THETA='LAGRANGE',
                            LISSAGE_G='LAGRANGE',),);

   IMPR_TABLE(TABLE=SIF[i],);
   GLO[i]=CALC_G(RESULTAT=RESU,
                 THETA=_F(FISSURE=FISS,
                          R_INF=RI[i],
                          R_SUP=RS[i],),
                 LISSAGE=_F(LISSAGE_THETA='LAGRANGE',
                            LISSAGE_G='LAGRANGE',),);

   IMPR_TABLE(TABLE=GLO[i],);

# SOLUTION ANALYTIQUE (chaboche p.53)
coef=(pi*a)/(2.*b)
fab=sqrt(tan(coef)/coef)*(0.752+0.37*(1.-sin(coef))**3+2.02*a/b)/cos(coef)
K1REF=-PRES*sqrt(pi*a)*fab
GREF = (1-nu**2)/E*K1REF**2

if a==2 :
   prec = 0.003
else :
   prec=0.01

VAL_CALC = [1.1108477442547E+07 ,
            1.1098754633019E+07 ,
            602.41166430594     ,
            599.85557765217     ,
            1.1116814321051E+07 ,
            1.1107064569369E+07 ,
            603.33676458511     ,
            600.68125431338     ,
            1.1112268060269E+07 ,
            1.1102592933453E+07 ,
            602.83032762143     ,
            600.23993385588     ,
            1.1110118834116E+07 ,
            1.1100417994084E+07 ,
            602.59352042261     ,
            600.01994511197     ,
            1.1109740981788E+07 ,
            1.1100034066497E+07 ,
            602.55120251387     ,
            599.98368190119     ,
            1.1108461335861E+07 ,
            1.1098739233641E+07 ,
            602.40989896494     ,
            599.85393231401     ];

for i in range(0,nbc) :
   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='K1',
              TYPE_TEST='MAX',
              VALE_CALC=VAL_CALC[i*4+0], VALE_REFE=K1REF,    
              CRITERE='RELATIF',
              PRECISION=prec,    
              REFERENCE='ANALYTIQUE',);

   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='K1',
              TYPE_TEST='MIN',
              VALE_CALC=VAL_CALC[i*4+1], VALE_REFE=K1REF,    
              CRITERE='RELATIF',
              PRECISION=prec,    
              REFERENCE='ANALYTIQUE',);
              
   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='G_IRWIN',
              TYPE_TEST='MAX',
              VALE_CALC=VAL_CALC[i*4+2], VALE_REFE=GREF,    
              CRITERE='RELATIF',
              PRECISION=2.5*prec,    
              REFERENCE='ANALYTIQUE',);

   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='G_IRWIN',
              TYPE_TEST='MIN',
              VALE_CALC=VAL_CALC[i*4+3], VALE_REFE=GREF,    
              CRITERE='RELATIF',
              PRECISION=2.5*prec,    
              REFERENCE='ANALYTIQUE',);

GLeg=CALC_G(RESULTAT=RESU,
            THETA=_F(FISSURE=FISS,
                     R_INF=RI[0],
                     R_SUP=RS[0],),
            LISSAGE=_F(DEGRE =1,),);

IMPR_TABLE(TABLE=GLeg)
 
TEST_TABLE(TABLE=GLeg,
           NOM_PARA='G',
           TYPE_TEST='MAX',
           VALE_CALC=602.92418216993, 
           VALE_REFE=GREF,    
           CRITERE='RELATIF',
           PRECISION=0.02,    
           REFERENCE='ANALYTIQUE',);

TEST_TABLE(TABLE=GLeg,
           NOM_PARA='G',
           TYPE_TEST='MIN',
           VALE_CALC=602.79485432092, 
           VALE_REFE=GREF,    
           CRITERE='RELATIF',
           PRECISION=0.02,    
           REFERENCE='ANALYTIQUE',);
           
GLagr=CALC_G(RESULTAT=RESU,
             THETA=_F(FISSURE=FISS,
                      R_INF=RI[0],
                      R_SUP=RS[0],),
             LISSAGE=_F(LISSAGE_THETA='LAGRANGE',
                        LISSAGE_G='LAGRANGE'))

IMPR_TABLE(TABLE=GLagr)

TEST_TABLE(TABLE=GLagr,
           NOM_PARA='G',
           TYPE_TEST='MAX',
           VALE_CALC=603.93711840023, 
           VALE_REFE=GREF,    
           CRITERE='RELATIF',
           PRECISION=0.02,    
           REFERENCE='ANALYTIQUE')

TEST_TABLE(TABLE=GLagr,
           NOM_PARA='G',
           TYPE_TEST='MIN',
           VALE_CALC=601.56534174494, 
           VALE_REFE=GREF,    
           CRITERE='RELATIF',
           PRECISION=0.02,    
           REFERENCE='ANALYTIQUE')

#------------------------------------------------------------------------
# POST-TRAITEMENT : CALCUL DES SIFS AVEC POST_K1_K2_K3
#------------------------------------------------------------------------

PK=POST_K1_K2_K3(FISSURE = FISS,
                 RESULTAT  = RESU,
                 NB_NOEUD_COUPE = 6,
                 )

IMPR_TABLE(TABLE = PK)

TEST_TABLE( TABLE=PK,
            NOM_PARA='K1',
            FILTRE=_F(NOM_PARA = 'NUM_PT',  
                      VALE_I = 1,  ),
            VALE_CALC=1.1298569976555E+07, 
            VALE_REFE=K1REF,    
            PRECISION=0.05,    
            REFERENCE='ANALYTIQUE' )


#------------------------------------------------------------------------
# POST-TRAITEMENT : MAILLAGE FISSURE
#------------------------------------------------------------------------

MA_VISU=POST_MAIL_XFEM(MODELE = MODELEK)

TABDEP=POST_RELEVE_T(ACTION=_F(INTITULE='DEPLE',
                               GROUP_NO='VOL',
                               RESULTAT=RESU,
                               NOM_CHAM='DEPL',
                               NUME_ORDRE=1,
                               NOM_CMP='DX',
                               OPERATION='EXTRACTION',),);

# TEST DE NON REGRESSION PAR RAPPORT A LA VERSION 8.2.14

DXREF=4.7430e+03
DYREF=4.74300e+04
DZREF=1.42289996944e+05
PREC=1.e-10

TEST_TABLE(TABLE=TABDEP,
           NOM_PARA='COOR_X',
           TYPE_TEST='SOMM_ABS',
           VALE_CALC=DXREF,
           CRITERE='RELATIF',
           
           )

TEST_TABLE(TABLE=TABDEP,
           NOM_PARA='COOR_Y',
           TYPE_TEST='SOMM_ABS',
           VALE_CALC=DYREF,
           CRITERE='RELATIF',
           
           )

TEST_TABLE(TABLE=TABDEP,
           NOM_PARA='COOR_Z',
           TYPE_TEST='SOMM_ABS',
           VALE_CALC=DZREF,
           CRITERE='RELATIF',
           
           )


#------------------------------------------------------------------------
# POST-TRAITEMENT DES DEPLACEMENTS, CONTRAINTES ET DEFORMATIONS POUR VISU
#------------------------------------------------------------------------

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_VISU,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='3D')) 

RES_VISU=POST_CHAM_XFEM(MODELE_VISU = MOD_VISU,
                        RESULTAT = RESU)

MAT_VISU=AFFE_MATERIAU(MAILLAGE=MA_VISU,
                       AFFE=_F(TOUT = 'OUI',
                               MATER=ACIER))

RES_VISU=CALC_CHAMP(reuse =RES_VISU,
                    RESULTAT=RES_VISU,
                    CHAM_MATER=MAT_VISU,
                    DEFORMATION='EPSI_ELGA',
                    )

IMPR_RESU(FORMAT='MED',RESU=_F(RESULTAT=RES_VISU))

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   TYPE_TEST='SOMM_ABS',
                   RESULTAT=RES_VISU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   VALE_CALC=5.0894436126433E-04,                  
                   CRITERE='ABSOLU',
                   ),
                _F(NUME_ORDRE=1,
                   TYPE_TEST='SOMM_ABS',
                   RESULTAT=RES_VISU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   VALE_CALC=1.694474332454,                   
                   CRITERE='ABSOLU',
                   ),
                _F(NUME_ORDRE=1,
                   TYPE_TEST='SOMM_ABS',
                   RESULTAT=RES_VISU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DZ',
                   VALE_CALC=1.2530880070064,                   
                   CRITERE='ABSOLU',
                   ),
                ),
          )

FIN()
