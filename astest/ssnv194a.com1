POURSUITE(CODE=_F(NOM='SSNV194A'),);

NB_GRAINS=10

# Calcul des min et max 


CUBE=DEFI_GROUP(reuse =CUBE,
              MAILLAGE=CUBE,
              CREA_GROUP_MA=_F(TOUT='OUI',NOM='ALL'),)

MAX_SI=POST_ELEM(  
                   MINMAX=_F(NOM_CHAM='SIEF_ELGA',
                                NOM_CMP=('SIXX','SIYY','SIZZ'),
                                TOUT='OUI',RESULTAT=SOLNL,))

IMPR_TABLE(TABLE=MAX_SI)

TEST_TABLE(TABLE=MAX_SI,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=TFIN,),
           NOM_PARA='MAX_SIXX',
           VALE=221.57,
           REFERENCE='AUTRE_ASTER',);

VIMAX=CREA_CHAMP( OPERATION='EXTR',
                   TYPE_CHAM='ELGA_VARI_R',
                   RESULTAT=SOLNL,
                   NOM_CHAM='VARI_ELGA',
                   TYPE_MAXI='MAXI',
                   TYPE_RESU='VALE',
                 ) ;

IMPR_RESU(RESU=_F(CHAM_GD=VIMAX,VALE_MAX='OUI',VALE_MIN='OUI'))

MAX_VI=POST_ELEM(  
                   MINMAX=_F(NOM_CHAM='VARI_ELGA',
                   CHAM_GD=VIMAX, MODELE=TROISD,
                                NOM_CMP=('V1','V2','V3'),
                                TOUT='OUI'),)

IMPR_TABLE(TABLE=MAX_VI)

TEST_TABLE(TABLE=MAX_VI,
           NOM_PARA='MIN_V3',
           VALE=9.33308E-04,
           REFERENCE='AUTRE_ASTER',);


MAX_EP=POST_ELEM( 
                   MINMAX=_F(NOM_CHAM='EPSP_ELGA',RESULTAT=SOLNL,
                                NOM_CMP=('EPXX','EPYY','EPZZ'),
                                GROUP_MA='ALL'),)

IMPR_TABLE(TABLE=MAX_EP)

TEST_TABLE(TABLE=MAX_EP,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=TFIN,),
           NOM_PARA='MIN_EPZZ',
           VALE=9.33308E-04,
           REFERENCE='AUTRE_ASTER',);



MAX_DE1=POST_ELEM(  
                   MINMAX=_F(NOM_CHAM='DEPL',RESULTAT=SOLNL,
                                TOUT='OUI',
                                NOM_CMP=('DY','DZ'),
                                NUME_ORDRE=1),)


TEST_TABLE(TABLE=MAX_DE1,
           NOM_PARA='MIN_DY',
           VALE=-3.0E-04,
           REFERENCE='NON_REGRESSION',);

TEST_TABLE(TABLE=MAX_DE1,
           NOM_PARA='MAX_DZ',
           VALE=1.0E-03,
           REFERENCE='NON_REGRESSION',);

MAX_DE2=POST_ELEM(  
                   MINMAX=_F(NOM_CHAM='DEPL',RESULTAT=SOLNL,
                                TOUT='OUI',
                                NOM_CMP=('DX'),
                                NUME_ORDRE=1),)

TEST_TABLE(TABLE=MAX_DE2,
           NOM_PARA='MIN_DX',
           VALE=-3.0E-04,
           REFERENCE='NON_REGRESSION',);


IMPR_RESU(RESU=_F(RESULTAT=SOLNL,VALE_MIN='OUI',VALE_MAX='OUI',NOM_CHAM='DEPL',NOM_CMP=('DX','DY','DZ'),))

IMPR_RESU(RESU=_F(RESULTAT=SOLNL,VALE_MIN='OUI',VALE_MAX='OUI',NOM_CHAM='SIEF_ELGA',NOM_CMP=('SIXX','SIYY','SIZZ')))

IMPR_RESU(RESU=_F(RESULTAT=SOLNL,VALE_MIN='OUI',VALE_MAX='OUI',NOM_CHAM='EPSP_ELGA',NOM_CMP=('EPXX','EPYY','EPZZ'),))

IMPR_RESU(RESU=_F(RESULTAT=SOLNL,VALE_MIN='OUI',VALE_MAX='OUI',NOM_CHAM='VARI_ELGA',NOM_CMP=('V1','V2','V3'),))


# Calcul des moyennes 

INT_SI=POST_ELEM(  RESULTAT=SOLNL,
                   INTEGRALE=_F(NOM_CHAM='SIEF_ELGA',
                                NOM_CMP=('SIXX','SIYY','SIZZ'),
                                TOUT='OUI'),)

IMPR_TABLE(TABLE=INT_SI)

INT_EP=POST_ELEM(  RESULTAT=SOLNL,
                   INTEGRALE=_F(NOM_CHAM='EPSP_ELGA',
                                NOM_CMP=('EPXX','EPYY','EPZZ'),
                                TOUT='OUI'),)

IMPR_TABLE(TABLE=INT_EP)

# --------  VALIDATION DE POST_ELEM/MINMAX  CHAM_NO  ---------------- #
'''
MAX_DE=POST_ELEM(  
                   MINMAX=_F(NOM_CHAM='DEPL',RESULTAT=SOLNL,
                                NOM_CMP=('DX','DY','DZ'),
                                TOUT='OUI'),)

IMPR_TABLE(TABLE=MAX_DE)


TEST_TABLE(TABLE=MAX_DE,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=TFIN,),
           NOM_PARA='MAX_DZ',
           VALE=5.00000E-03,
           REFERENCE='AUTRE_ASTER',);
'''
# --------  VALIDATION DE POST_ELEM/INTEGRALE  CHAM_NO  -------------- #

INT1EPX=POST_ELEM(  RESULTAT=SOLNL,
                    INTEGRALE=(_F(NOM_CHAM='EPSP_ELGA',
                                NOM_CMP=('EPXX'),
                                TOUT='OUI'),
                              _F(NOM_CHAM='EPSP_ELNO',
                                NOM_CMP=('EPXX'),
                                TOUT='OUI'),
                              _F(NOM_CHAM='EPSP_NOEU',
                                NOM_CMP=('EPXX'),
                                TOUT='OUI'),),)
TEST_TABLE(TABLE=INT1EPX,
           FILTRE=(_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=9,),
                   _F(NOM_PARA='NOM_CHAM',
                     VALE_K='EPSP_ELGA',),),
           NOM_PARA='INTE_EPXX',
           VALE=-1.39355E-03,
           REFERENCE='NON_REGRESSION',);

TEST_TABLE(TABLE=INT1EPX,
           FILTRE=(_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=9,),
                   _F(NOM_PARA='NOM_CHAM',
                     VALE_K='EPSP_ELNO',),),
           NOM_PARA='INTE_EPXX',
           VALE=-1.39355E-03,
           REFERENCE='NON_REGRESSION',);

TEST_TABLE(TABLE=INT1EPX,
           FILTRE=(_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=9,),
                   _F(NOM_PARA='NOM_CHAM',
                     VALE_K='EPSP_NOEU',),),
           NOM_PARA='INTE_EPXX',
           VALE=-1.39352E-03,
           REFERENCE='NON_REGRESSION',);


CH1=CREA_CHAMP(OPERATION = 'EXTR',TYPE_CHAM='ELGA_EPSI_R',NOM_CHAM  = 'EPSP_ELGA',
               RESULTAT  = SOLNL, NUME_ORDRE=9,);

CH2=CREA_CHAMP(TYPE_CHAM = 'ELGA_NEUT_R', OPERATION = 'ASSE',MODELE = TROISD, PROL_ZERO = 'OUI',
                  ASSE = _F(TOUT='OUI',
                            CHAM_GD = CH1, 
                            NOM_CMP=('EPXX','EPYY','EPZZ','EPXY','EPXZ','EPYZ'),
                            NOM_CMP_RESU =('X1','X2','X3','X4','X5','X6'),),) 

CH3=CREA_CHAMP(OPERATION = 'DISC', TYPE_CHAM = 'NOEU_NEUT_R',
                 CHAM_GD=CH2, MODELE = TROISD, PROL_ZERO = 'OUI',);

CH4=CREA_CHAMP(TYPE_CHAM = 'NOEU_EPSI_R', OPERATION = 'ASSE',MODELE = TROISD, PROL_ZERO = 'OUI',
                  ASSE = _F(TOUT='OUI',
                            CHAM_GD = CH3, 
                            NOM_CMP_RESU=('EPXX','EPYY','EPZZ','EPXY','EPXZ','EPYZ'),
                            NOM_CMP =('X1','X2','X3','X4','X5','X6'),),) 

INT2EPX=POST_ELEM(  CHAM_GD=CH4,
                    CHAM_MATER=MAT,
                    MODELE=TROISD,
                    INTEGRALE=_F( NOM_CMP='EPXX',TOUT='OUI'),)

TEST_TABLE(TABLE=INT2EPX,
           NOM_PARA='INTE_EPXX',
           VALE=-1.39352E-03,
           REFERENCE='AUTRE_ASTER',)


# ---------  VALIDATION DE POST_ELEM/VOLUMOGRAMME   ------------------ #


# --- CHAMP NOEU ---
 
def masque(X1):
    val=0.
    if (-3.041313578E-03<=X1<-2.023665544E-03):
      val=100.
    else:
      val=0.
    return val

MASQ = FORMULE(NOM_PARA=('X1'),VALE='masque(X1)')

CHFON=CREA_CHAMP(OPERATION='AFFE',
                 TYPE_CHAM='NOEU_NEUT_F',
                 MODELE=TROISD,
                 AFFE=(_F( TOUT='OUI', NOM_CMP = 'X1', VALE_F = MASQ),
                      )
                );
CHEXT=CREA_CHAMP(OPERATION = 'EXTR',TYPE_CHAM='NOEU_EPSI_R',NOM_CHAM  = 'EPSP_NOEU',
               RESULTAT  = SOLNL, NUME_ORDRE=10,);


CHNEXT=CREA_CHAMP(TYPE_CHAM = 'NOEU_NEUT_R', OPERATION = 'ASSE',MODELE = TROISD, PROL_ZERO = 'OUI',
                  ASSE = _F(TOUT='OUI',
                            CHAM_GD = CHEXT, 
                            NOM_CMP='EPXX',
                            NOM_CMP_RESU ='X1',),) 


CHEVA=CREA_CHAMP(OPERATION='EVAL',
                 TYPE_CHAM='NOEU_NEUT_R',
                 CHAM_F=CHFON,
                 CHAM_PARA=CHNEXT);


INTVOL=POST_ELEM( CHAM_GD=CHEVA,
                  CHAM_MATER=MAT,
                  MODELE=TROISD,
                  INTEGRALE=_F( NOM_CMP='X1',TOUT='OUI'),)

TEST_TABLE(TABLE=INTVOL,
           NOM_PARA='INTE_X1',
           VALE=29.7245,PRECISION=0.01,
           REFERENCE='AUTRE_ASTER',);

# --- CHAMP ELGA ---

def masque2(X1):
    val=0.
    if (-3.69933E-03<=X1<-2.45001E-03):
      val=100.
    else:
      val=0.
    return val

MASQ2 = FORMULE(NOM_PARA=('X1'),VALE='masque2(X1)')

CHFON2=CREA_CHAMP(OPERATION='AFFE',
                 TYPE_CHAM='ELGA_NEUT_F',
                 MODELE=TROISD,PROL_ZERO='OUI',
                 AFFE=(_F( TOUT='OUI', NOM_CMP = 'X1', VALE_F = MASQ2),
                      )
                );

CHEXT2=CREA_CHAMP(OPERATION = 'EXTR',TYPE_CHAM='ELGA_EPSI_R',NOM_CHAM  = 'EPSP_ELGA',
               RESULTAT  = SOLNL, NUME_ORDRE=10,);

CHNEX2=CREA_CHAMP(TYPE_CHAM = 'ELGA_NEUT_R', OPERATION = 'ASSE',MODELE = TROISD, PROL_ZERO = 'OUI',
                  ASSE = _F(TOUT='OUI',
                            CHAM_GD = CHEXT2, 
                            NOM_CMP=('EPXX'),
                            NOM_CMP_RESU =('X1'),),),

CHEVA2=CREA_CHAMP(OPERATION='EVAL',
                 TYPE_CHAM='ELGA_NEUT_R',
                 CHAM_F=CHFON2,
                 CHAM_PARA=CHNEX2);

CHEVA3=CREA_CHAMP(TYPE_CHAM = 'ELGA_NEUT_R', OPERATION = 'ASSE',MODELE = TROISD, PROL_ZERO = 'OUI',
                  ASSE = _F(TOUT='OUI',
                            CHAM_GD = CHEVA2, 
                            NOM_CMP=('X1'),
                            NOM_CMP_RESU =('X1'),),),


INTVO2=POST_ELEM( CHAM_GD=CHEVA3,
                  CHAM_MATER=MAT,
                  MODELE=TROISD,
                  INTEGRALE=_F( NOM_CMP='X1',TOUT='OUI'),)


TEST_TABLE(TABLE=INTVO2,
           NOM_PARA='INTE_X1',
           VALE=21.5824,
           REFERENCE='AUTRE_ASTER',);


VEPXX=POST_ELEM(MODELE=TROISD,
                RESULTAT=SOLNL,
                NUME_ORDRE=10,
                VOLUMOGRAMME=(_F(NOM_CHAM='EPSP_ELGA',
                                 NOM_CMP=('EPXX'),
                                 TOUT='OUI'),
                              _F(NOM_CHAM='EPSP_ELNO',
                                 NOM_CMP=('EPXX'),
                                 TOUT='OUI'),
                              _F(NOM_CHAM='EPSP_NOEU',
                                 NOM_CMP=('EPXX'),
                                 TOUT='OUI'),),)

TEST_TABLE(TABLE=VEPXX,
           FILTRE=(_F(NOM_PARA='NOM_CHAM',
                      VALE_K='EPSP_ELGA',),
                   _F(NOM_PARA='INTERVALLE',
                      VALE_I=5,),),
           NOM_PARA='DISTRIBUTION',
           VALE=32.5959,
           REFERENCE='NON_REGRESSION',);

TEST_TABLE(TABLE=VEPXX,
           FILTRE=(_F(NOM_PARA='NOM_CHAM',
                      VALE_K='EPSP_ELNO',),
                   _F(NOM_PARA='INTERVALLE',
                      VALE_I=5,),),
           NOM_PARA='DISTRIBUTION',
           VALE=32.5959,
           REFERENCE='NON_REGRESSION',);

TEST_TABLE(TABLE=VEPXX,
           FILTRE=(_F(NOM_PARA='NOM_CHAM',
                      VALE_K='EPSP_NOEU',),
                   _F(NOM_PARA='INTERVALLE',
                      VALE_I=5,),),
           NOM_PARA='DISTRIBUTION',
           VALE=28.0375,
           REFERENCE='NON_REGRESSION',);

CSIXX=CREA_CHAMP(TYPE_CHAM='ELGA_SIEF_R',
                 OPERATION='EXTR',
                 RESULTAT=SOLNL,NUME_ORDRE=10,
                 NOM_CHAM='SIEF_ELGA');

VSIXX=POST_ELEM(MODELE=TROISD,
                CHAM_MATER=MAT,
                CHAM_GD=CSIXX,
                VOLUMOGRAMME=_F(NOM_CMP=('SIXX'),
                                TYPE_MAILLE='3D',
                                TOUT='OUI'),)

TEST_TABLE(TABLE=VSIXX,
           FILTRE=(_F(NOM_PARA='CHAM_GD',
                      VALE_K='CSIXX',),
                   _F(NOM_PARA='INTERVALLE',
                      VALE_I=3,),),
           NOM_PARA='DISTRIBUTION',
           VALE=64.6,
           REFERENCE='NON_REGRESSION',);

# -------------------------------------------------------------------- #


INS=[None]*NB_GRAINS
EPS=[None]*NB_GRAINS
INSX=[None]*NB_GRAINS
EPSX=[None]*NB_GRAINS
COMX=[None]*NB_GRAINS
INSY=[None]*NB_GRAINS
EPSY=[None]*NB_GRAINS
COMY=[None]*NB_GRAINS
INSZ=[None]*NB_GRAINS
EPSZ=[None]*NB_GRAINS
COMZ=[None]*NB_GRAINS
FSX=[None]*NB_GRAINS
FSY=[None]*NB_GRAINS
FSZ=[None]*NB_GRAINS
FEX=[None]*NB_GRAINS
FEY=[None]*NB_GRAINS
FEZ=[None]*NB_GRAINS

for IP in range (NB_GRAINS):
  print 'GM'+str(IP+1)
  
  INS[IP]=POST_ELEM( RESULTAT=SOLNL,
                   INTEGRALE=_F(NOM_CHAM='SIEF_ELGA',
                                NOM_CMP=('SIXX','SIYY','SIZZ'),
                                GROUP_MA = 'GM'+str(IP+1),
				),)
  EPS[IP]=POST_ELEM( RESULTAT=SOLNL,
                   INTEGRALE=_F(NOM_CHAM='EPSI_ELGA',
                                NOM_CMP=('EPXX','EPYY','EPZZ'),
                                GROUP_MA = 'GM'+str(IP+1),
				),)
  INSX[IP]=CALC_TABLE(TABLE=INS[IP], 
                 ACTION=(_F(OPERATION ='EXTR',
		            NOM_PARA=('INST','INTE_SIXX'),),),)

  EPSX[IP]=CALC_TABLE(TABLE=EPS[IP], 
                 ACTION=(_F(OPERATION ='EXTR',
                            NOM_PARA=('INST','INTE_EPXX'),),),)

  COMX[IP]=CALC_TABLE(TABLE=EPSX[IP], 
                 ACTION=(_F(OPERATION ='COMB',TABLE=INSX[IP],NOM_PARA='INST',),),)

  INSY[IP]=CALC_TABLE(TABLE=INS[IP], 
                 ACTION=(_F(OPERATION ='EXTR',
                            NOM_PARA=('INST','INTE_SIYY'),),),)

  EPSY[IP]=CALC_TABLE(TABLE=EPS[IP], 
                 ACTION=(_F(OPERATION ='EXTR',
                           NOM_PARA=('INST','INTE_EPYY'),),),)

  COMY[IP]=CALC_TABLE(TABLE=EPSY[IP], 
                 ACTION=(_F(OPERATION ='COMB',TABLE = INSY[IP], NOM_PARA='INST',),),)

  INSZ[IP]=CALC_TABLE(TABLE=INS[IP], 
                 ACTION=(_F(OPERATION ='EXTR',
                            NOM_PARA=('INST','INTE_SIZZ'),),),)

  EPSZ[IP]=CALC_TABLE(TABLE=EPS[IP], 
                 ACTION=(_F(OPERATION ='EXTR',
                            NOM_PARA=('INST','INTE_EPZZ'),),),)

  COMZ[IP]=CALC_TABLE(TABLE=EPS[IP], 
                 ACTION=(_F(OPERATION ='COMB',TABLE = INS[IP], NOM_PARA='INST',),),)

  FSX[IP]=RECU_FONCTION(TABLE=COMX[IP],
                           PARA_X='INST',
                           PARA_Y='INTE_SIXX',);

  FSY[IP]=RECU_FONCTION(TABLE=COMY[IP],
                           PARA_X='INST',
                           PARA_Y='INTE_SIYY',);

  FSZ[IP]=RECU_FONCTION(TABLE=COMZ[IP],
                           PARA_X='INST',
                           PARA_Y='INTE_SIZZ',);

  FEX[IP]=RECU_FONCTION(TABLE=COMX[IP],
                           PARA_X='INST',
                           PARA_Y='INTE_EPXX',);
		       
  FEY[IP]=RECU_FONCTION(TABLE=COMY[IP],
                           PARA_X='INST',
                           PARA_Y='INTE_EPYY',);
		       
  FEZ[IP]=RECU_FONCTION(TABLE=COMZ[IP],
                           PARA_X='INST',
                           PARA_Y='INTE_EPZZ',);


motcles = {}
motcles['COURBE'] = []			 
for IP in range (NB_GRAINS):
   motcles['COURBE'].append(_F(FONC_X=FEX[IP], FONC_Y=FSX[IP]))
   motcles['COURBE'].append(_F(FONC_X=FEY[IP], FONC_Y=FSY[IP]))
   motcles['COURBE'].append(_F(FONC_X=FEZ[IP], FONC_Y=FSZ[IP]))

IMPR_FONCTION(FORMAT ='XMGRACE',PILOTE='POSTSCRIPT', UNITE = 24, **motcles);

FIN () ;

