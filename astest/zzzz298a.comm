# TITRE : VALIDATION INFORMATIQUE DE POST_K1_K2_K3
# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),IGNORE_ALARM=('POST0_24','RUPTURE0_46',),);

#----------------------------------------------
#                   MAILLAGE
#----------------------------------------------

MAILLAGE=LIRE_MAILLAGE(FORMAT='MED')

#----------------------------------------------
#                   MODELE 
#----------------------------------------------

MODELE=AFFE_MODELE(MAILLAGE=MAILLAGE,
                   AFFE=_F(TOUT='OUI',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='3D'))

MAILLAGE=MODI_MAILLAGE(reuse =MAILLAGE,
                       MAILLAGE=MAILLAGE,
                       ORIE_PEAU_3D=_F(GROUP_MA=('LEVSUP','SURFSUP','SURFINF','LEVINF')))

#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

#---
# 1. materiau constant
#---

ACIER=DEFI_MATERIAU(ELAS=_F(E=205000.E6,
                            NU=0.))

CHAMPMA=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                      MODELE=MODELE,
                      AFFE=_F(TOUT='OUI',
                              MATER=ACIER))

#---
# 2. materiau fonction de TEMP
#---

EFTEMP=DEFI_FONCTION(NOM_PARA='TEMP',
                     PROL_DROITE='CONSTANT',
                     PROL_GAUCHE='CONSTANT',
                     VALE=(0., 205000.E6,
                           1., 205000.E6),);

NUFTEMP=DEFI_FONCTION(NOM_PARA='TEMP',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',
                      VALE=(0., 0.,
                            1., 0.),);

ALPHA=DEFI_CONSTANTE(VALE=0.);

MATTEMP=DEFI_MATERIAU(ELAS_FO=_F(E=EFTEMP,
                                 NU=NUFTEMP,
                                 ALPHA=ALPHA,
                                 TEMP_DEF_ALPHA=20.0,))

CHTEMP=CREA_CHAMP(TYPE_CHAM='NOEU_TEMP_R',
                  MAILLAGE=MAILLAGE,
                  OPERATION='AFFE',
                  AFFE=_F(TOUT='OUI',
                          NOM_CMP='TEMP',
                          VALE=100.0),)

CHMATEMP=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       AFFE=_F(TOUT='OUI',
                               MATER=MATTEMP),
                       AFFE_VARC=_F(TOUT='OUI',
                                    CHAM_GD=CHTEMP,
                                    NOM_VARC='TEMP',
                                    VALE_REF=20,))

#---
# 3. materiau fonction de NEUT1
#---

EFNEUT=DEFI_FONCTION(NOM_PARA='NEUT1',
                     PROL_DROITE='CONSTANT',
                     PROL_GAUCHE='CONSTANT',
                     VALE=(0., 205000.E6,
                           1., 205000.E6),);

NUFNEUT=DEFI_FONCTION(NOM_PARA='NEUT1',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',
                      VALE=(0., 0.,
                            1., 0.),);

MATNEUT=DEFI_MATERIAU(ELAS_FO=_F(E=EFNEUT,
                                 NU=NUFNEUT))

CHNEUT=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                  MAILLAGE=MAILLAGE,
                  OPERATION='AFFE',
                  AFFE=_F(TOUT='OUI',
                          NOM_CMP='X1',
                          VALE=100.0),)

CHMANEUT=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       AFFE=_F(TOUT='OUI',
                               MATER=MATNEUT),
                       AFFE_VARC=_F(TOUT='OUI',
                                    CHAM_GD=CHNEUT,
                                    NOM_VARC='NEUT1'))

#----------------------------------------------
#                   CHARGEMENTS 
#----------------------------------------------

CHA1=AFFE_CHAR_MECA(MODELE=MODELE,
                    DDL_IMPO=_F(GROUP_MA='SURFINF',
                                DX=0.,
                                DY=0.,
                                DZ=0.))
                                
CHA2=AFFE_CHAR_MECA(MODELE=MODELE,
                    PRES_REP=_F(GROUP_MA='SURFSUP',
                                PRES=-1.E6))
                                    
#----------------------------------------------
#                   RESOLUTION
#----------------------------------------------

#---
# 1. sans variables de commande
#---

RESU=MECA_STATIQUE(MODELE=MODELE,
                   CHAM_MATER=CHAMPMA,              
                   EXCIT=(_F(CHARGE=CHA1),
                          _F(CHARGE=CHA2)))                   

#---
# 2. avec la variable de commande TEMP
#---

RESTEMP=MECA_STATIQUE(MODELE=MODELE,
                    CHAM_MATER=CHMATEMP,
                    EXCIT=(_F(CHARGE=CHA1),
                           _F(CHARGE=CHA2)))

#---
# 3. avec la variable de commande NEUT1
#---

RESNEUT=MECA_STATIQUE(MODELE=MODELE,
                    CHAM_MATER=CHMANEUT,
                    EXCIT=(_F(CHARGE=CHA1),
                           _F(CHARGE=CHA2)))

#----------------------------------------------
#                   POST-TRAITEMENT
#----------------------------------------------

FFISS = DEFI_FOND_FISS(MAILLAGE = MAILLAGE,
                        FOND_FISS=_F(GROUP_MA='FONFIS'),
                       LEVRE_SUP=_F(GROUP_MA='LEVSUP'),
                       LEVRE_INF=_F(GROUP_MA='LEVINF'))

#---
# 1. sans variables de commande
#---

TABK = POST_K1_K2_K3(FOND_FISS=FFISS,
                     RESULTAT=RESU,
                     ABSC_CURV_MAXI=0.065,
                     TYPE_MAILLAGE='LIBRE',
                    )

IMPR_TABLE(TABLE=TABK)

#---
# 2. avec la variable de commande TEMP
#---

TABKTEMP = POST_K1_K2_K3(FOND_FISS=FFISS,
                         RESULTAT=RESTEMP,
                         ABSC_CURV_MAXI=0.065,
                         TYPE_MAILLAGE='LIBRE',
                        )

IMPR_TABLE(TABLE=TABKTEMP)

#---
# 3. avec la variable de commande NEUT1
#---

TABKNEUT = POST_K1_K2_K3(FOND_FISS=FFISS,
                          RESULTAT=RESNEUT,
                          ABSC_CURV_MAXI=0.065,
                          TYPE_MAILLAGE='LIBRE',
                         )

IMPR_TABLE(TABLE=TABKNEUT)

#----------------------------------------------
#                   TEST
#----------------------------------------------

# rq : on doit avoir strictement les memes valeurs de non regression
#      avec TABK, TABKTEMP et TABKNEUT.

#---
# 1. sans variables de commande
#---

TEST_TABLE(
           VALE_CALC=212813.877395,
           NOM_PARA='K1',
           TABLE=TABK,
           FILTRE=_F(NOM_PARA='NUM_PT',
                     VALE_I=3,),
           )

# on verifie que l'on trouve la meme valeur pour les points 1 et 2
TEST_TABLE(VALE_CALC=212813.877395,
           NOM_PARA='K1',
           TABLE=TABK,
           FILTRE=_F(NOM_PARA='NUM_PT',
                     VALE_I=1,),
           )

TEST_TABLE(VALE_CALC=212813.877395,
           NOM_PARA='K1',
           TABLE=TABK,
           FILTRE=_F(NOM_PARA='NUM_PT',
                     VALE_I=2,),
           )

#---
# 2. avec la variable de commande TEMP
#---

TEST_TABLE(
           VALE_CALC=212813.877395,
           NOM_PARA='K1',
           TABLE=TABKTEMP,
           FILTRE=_F(NOM_PARA='NUM_PT',
                     VALE_I=3,),
           )

# on verifie que l'on trouve la meme valeur pour les points 1 et 2
TEST_TABLE(VALE_CALC=212813.877395,
           NOM_PARA='K1',
           TABLE=TABKTEMP,
           FILTRE=_F(NOM_PARA='NUM_PT',
                     VALE_I=1,),
           )

TEST_TABLE(VALE_CALC=212813.877395,
           NOM_PARA='K1',
           TABLE=TABKTEMP,
           FILTRE=_F(NOM_PARA='NUM_PT',
                     VALE_I=2,),
           )

#---
# 3. avec la variable de commande NEUT1
#---

TEST_TABLE(
           VALE_CALC=212813.877395,
           NOM_PARA='K1',
           TABLE=TABKNEUT,
           FILTRE=_F(NOM_PARA='NUM_PT',
                     VALE_I=3,),
           )

# on verifie que l'on trouve la meme valeur pour les points 1 et 2
TEST_TABLE(VALE_CALC=212813.877395,
           NOM_PARA='K1',
           TABLE=TABKNEUT,
           FILTRE=_F(NOM_PARA='NUM_PT',
                     VALE_I=1,),
           )

TEST_TABLE(VALE_CALC=212813.877395,
           NOM_PARA='K1',
           TABLE=TABKNEUT,
           FILTRE=_F(NOM_PARA='NUM_PT',
                     VALE_I=2,),
           )

FIN();
