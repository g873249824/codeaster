# MODIF  DATE 18/06/2012   AUTEUR CHEIGNON E.CHEIGNON 
# TITRE PROPAGATION D'UNE FISSURE X-FEM DEBOUCHANTE SOLLICITEE EN MODE I
# sslp320d.para = tps_job 150 mem_job 150Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# RESPONSABLE COLOMBO D.COLOMBO

# MODELISATION D: METHODE GEOMETRIQUE

DEBUT(CODE=_F(NOM='SSLP320D', NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'))


#----------------------------------------------
#                 MAILLAGE
#----------------------------------------------

MAILLAG1=LIRE_MAILLAGE(FORMAT='MED');

MAILLAG2=LIRE_MAILLAGE(UNITE=21, FORMAT='MED');

#Largeur de la plaque
W = 10.

#Nb de pas de propagation
NPAS = 15

#Pas de propagation
DA = 0.25 

#Rayons inferieur et superieur des couronnes d'integration pour CALC_G
RI = 0.5 
RS = 2. 

#RP
RP = 4.

#longueur de fissure initiale
xinit = 2.5 
yinit = 15. 

# Chargement de traction
PRES = -1.E6

#----------------------------------------------
#                   MODELE
#----------------------------------------------

MODEL = [None]*(NPAS+1)


MODEL[0]=AFFE_MODELE(MAILLAGE=MAILLAG1,
                      AFFE=(_F(GROUP_MA=('Surface',),
                               PHENOMENE='MECANIQUE',
                               MODELISATION='D_PLAN',),
                            _F(GROUP_MA=('LIG2','LIG4'),
                               PHENOMENE='MECANIQUE',
                               MODELISATION='D_PLAN',),),);

grille=DEFI_GRILLE(MAILLAGE=MAILLAG2);


NODEL=AFFE_MODELE(GRILLE=grille,
                      AFFE=(_F(GROUP_MA=('RECT',),
                               PHENOMENE='MECANIQUE',
                               MODELISATION='D_PLAN',),),);

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO=_F(GROUP_MA='Surface',),);

#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

E=205000.0E6
nu=0.
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,),);

CHAMPMA1=AFFE_MATERIAU(MAILLAGE=MAILLAG1,
                       MODELE=MODEL[0],
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER,
                                ),
                             );

#----------------------------------------------
#                   FISSURE
#----------------------------------------------

# PARAMETRES DE LA FISSURE

X0 = xinit
Y0 = yinit

LN=FORMULE(NOM_PARA=('X','Y'),VALE='Y-Y0');
LT=FORMULE(NOM_PARA=('X','Y'),VALE='X-X0');

FISS = [None]*(NPAS+1)

FISS[0]=DEFI_FISS_XFEM(MODELE=MODEL[0],
                       MODELE_GRILLE=NODEL,
                       DEFI_FISS=_F(FONC_LT=LT,FONC_LN=LN,),
                       );

#----------------------------------------------
#                   CHARGEMENTS
#----------------------------------------------
                     
CHRIG=AFFE_CHAR_MECA(MODELE=MODEL[0],
                      DDL_IMPO=( _F(GROUP_NO='P1', DY=0.0,),_F(GROUP_NO=('P4',), DX=0.0, DY=0.0)),
                      PRES_REP=_F(GROUP_MA=('LIG2','LIG4',),PRES=PRES,),
                                    );
                                    
#----------------------------------------------
#         PROPAGATION SUR 3 PAS DE TEMPS
#----------------------------------------------
afiss=[None]*(NPAS+1)
faW = [None]*(NPAS+1)
CHXFE = [None]*(NPAS+1)
K1REF = [None]*(NPAS+1)
RESU = [None]*(NPAS+1)
SIF = [None]*(NPAS+1)
LSN = [None]*(NPAS+1)
LST = [None]*(NPAS+1)
TAB = [None]*(NPAS+1)
afiss[0]=xinit

    
FOND1=FORMULE(NOM_PARA='NUME_ORDRE',
                VALE='0*NUME_ORDRE+1',);

for i in range(1,NPAS+1) :
    
    afiss[i]=xinit+i*DA
   
    MODEL[i]=MODI_MODELE_XFEM(MODELE_IN=MODEL[0],FISSURE=FISS[i-1],);

    
    RESU[i]=MECA_STATIQUE(MODELE=MODEL[i],
                         CHAM_MATER=CHAMPMA1,
                         EXCIT=(
                                _F(CHARGE=CHRIG,),),
                         INST=1.0,
                         SOLVEUR=_F(METHODE='MULT_FRONT',),
                         );
    
    SIF[i]=CALC_G(RESULTAT=RESU[i],
                         OPTION='CALC_K_G',
                         THETA=_F( FISSURE=FISS[i-1],
                                   R_INF=RI,
                                   R_SUP=RS,),
                         );
                         
    IMPR_TABLE(TABLE=SIF[i],);
 
#Formule de KI (ref. Tada Irwin)                
    faW[0]=1.12-0.231*((afiss[0]/W))+10.55*((afiss[0]/W)**2)-21.72*((afiss[0]/W)**3)+30.35*((afiss[0]/W)**4)
    K1REF[0]=-PRES*sqrt(pi*afiss[0])*faW[0]
    faW[i]=1.12-0.231*((afiss[i]/W))+10.55*((afiss[i]/W)**2)-21.72*((afiss[i]/W)**3)+30.35*((afiss[i]/W)**4)
    K1REF[i]=-PRES*sqrt(pi*afiss[i])*faW[i]

#Test de KI par rapport a KI theorique 
    TEST_TABLE(TABLE=SIF[i],
               NOM_PARA='K1',
               TYPE_TEST='MAX',
               VALE=K1REF[i-1],
               CRITERE='RELATIF',
               PRECISION=0.02,
               REFERENCE='ANALYTIQUE',);               
# Test de KII en pourcentage de KI theorique
    TEST_TABLE(TABLE=SIF[i],
               NOM_PARA='K2',
               TYPE_TEST='MAX',
               VALE=0,
               CRITERE='ABSOLU',
               PRECISION=(5*(10**(-3)))*K1REF[i-1],
               REFERENCE='AUTRE_ASTER',);   
    
    FISS[i] = CO('FISS_%d'%(i))              
    if ( i != NPAS+1 ) :
      PROPA_FISS(MODELE=MODEL[i],
                 FISSURE=_F(FISS_ACTUELLE=FISS[i-1],
                            FISS_PROPAGEE=FISS[i],
                            TABLE=SIF[i],),
                 METHODE_PROPA='GEOMETRIQUE',
                 LOI_PROPA=_F(LOI='PARIS',
                                   C=1.,
                                   M=1.,
                                   N=1.,
                                   MATER=ACIER,),
                 DA_MAX=DA,
                 RAYON=RP,
                 COMP_LINE =_F(COEF_MULT_MINI=0.,
                               COEF_MULT_MAXI=1.,),
                 );

#Test des coordonnees du fond de fissure y proche de yinit
#en developpement

#----------------------------------------------
#         EDITION DE FICHIERS MED
#----------------------------------------------
#
MAXFE = [None]*(NPAS+1)
MOVIS = [None]*(NPAS+1)
DEPL = [None]*(NPAS+1)


for i in range(1,NPAS+1) :
   MAXFE[i]=POST_MAIL_XFEM(MODELE=MODEL[i]);

   MOVIS[i]=AFFE_MODELE(MAILLAGE=MAXFE[i],
                         AFFE=_F(TOUT='OUI',
                                 PHENOMENE='MECANIQUE',
                                 MODELISATION='D_PLAN',),) 

   DEPL[i]=POST_CHAM_XFEM(
                          MODELE_VISU   = MOVIS[i],
                          RESULTAT=RESU[i],
                          );

#   DEFI_FICHIER(UNITE=30+i,);
#   IMPR_RESU(
#             FORMAT='MED',
#             UNITE=30+i,
#             RESU=_F(RESULTAT=DEPL[i],),);
             
FIN();
