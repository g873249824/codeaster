# coding=utf-8

###
### This file is generated automatically by SALOME v6.4.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
theStudy = salome.myStudy

import salome_notebook
notebook = salome_notebook.notebook
sys.path.insert( 0, r'/local00/Formations/ASTER_AVANCE')

import iparameters
ipar = iparameters.IParameters(salome.myStudy.GetCommonParameters("Interface Applicative", 1))

#Set up visual properties:
ipar.setProperty("AP_ACTIVE_VIEW", "VTKViewer_0_0")
ipar.setProperty("AP_WORKSTACK_INFO", "0000000100000000000000020100000001000003f6000000040000000200000002000000080000001a004f00430043005600690065007700650072005f0030005f00300000000102000000080000001a00560054004b005600690065007700650072005f0030005f00300000000202")
ipar.setProperty("AP_ACTIVE_MODULE", "Mesh")
ipar.setProperty("AP_SAVEPOINT_NAME", "GUI state: 1")
#Set up lists:
# fill list AP_VIEWERS_LIST
ipar.append("AP_VIEWERS_LIST", "OCCViewer_1")
ipar.append("AP_VIEWERS_LIST", "VTKViewer_2")
# fill list OCCViewer_1
ipar.append("OCCViewer_1", "OCC scene:2 - viewer:1")
ipar.append("OCCViewer_1", "scale=7.035314463051e+01*centerX=7.742817551594e+00*centerY=-1.245157425317e+00*projX=5.773502588272e-01*projY=-5.773502588272e-01*projZ=5.773502588272e-01*twist=0.000000000000e+00*atX=0.000000000000e+00*atY=0.000000000000e+00*atZ=0.000000000000e+00*eyeX=2.886751294136e+02*eyeY=-2.886751294136e+02*eyeZ=2.886751294136e+02*scaleX=1.000000000000e+00*scaleY=1.000000000000e+00*scaleZ=1.000000000000e+00*isVisible=1*size=20.00*gtIsVisible=0*gtDrawNameX=1*gtDrawNameY=1*gtDrawNameZ=1*gtNameX=X*gtNameY=Y*gtNameZ=Z*gtNameColorRX=255*gtNameColorGX=0*gtNameColorBX=0*gtNameColorRY=0*gtNameColorGY=255*gtNameColorBY=0*gtNameColorRZ=0*gtNameColorGZ=0*gtNameColorBZ=255*gtDrawValuesX=1*gtDrawValuesY=1*gtDrawValuesZ=1*gtNbValuesX=3*gtNbValuesY=3*gtNbValuesZ=3*gtOffsetX=2*gtOffsetY=2*gtOffsetZ=2*gtColorRX=255*gtColorGX=0*gtColorBX=0*gtColorRY=0*gtColorGY=255*gtColorBY=0*gtColorRZ=0*gtColorGZ=0*gtColorBZ=255*gtDrawTickmarksX=1*gtDrawTickmarksY=1*gtDrawTickmarksZ=1*gtTickmarkLengthX=5*gtTickmarkLengthY=5*gtTickmarkLengthZ=5")
# fill list VTKViewer_2
ipar.append("VTKViewer_2", "VTK scene:6 - viewer:1")
ipar.append("VTKViewer_2", """<?xml version="1.0"?>
<ViewState>
    <Position X="100.437" Y="-89.4869" Z="93.4369"/>
    <FocalPoint X="10" Y="0.95" Z="3"/>
    <ViewUp X="0" Y="0" Z="1"/>
    <ViewScale Parallel="9.34322" X="1" Y="1" Z="1"/>
    <DisplayCubeAxis Show="0"/>
    <GraduatedAxis Axis="X">
        <Title isVisible="1" Text="X" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="1" G="0" B="0"/>
        </Title>
        <Labels isVisible="1" Number="3" Offset="2" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="1" G="0" B="0"/>
        </Labels>
        <TickMarks isVisible="1" Length="5"/>
    </GraduatedAxis>
    <GraduatedAxis Axis="Y">
        <Title isVisible="1" Text="Y" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="0" G="1" B="0"/>
        </Title>
        <Labels isVisible="1" Number="3" Offset="2" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="0" G="1" B="0"/>
        </Labels>
        <TickMarks isVisible="1" Length="5"/>
    </GraduatedAxis>
    <GraduatedAxis Axis="Z">
        <Title isVisible="1" Text="Z" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="0" G="0" B="1"/>
        </Title>
        <Labels isVisible="1" Number="3" Offset="2" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="0" G="0" B="1"/>
        </Labels>
        <TickMarks isVisible="1" Length="5"/>
    </GraduatedAxis>
    <Trihedron isShown="1" Size="105"/>
</ViewState>
""")
# fill list AP_MODULES_LIST
ipar.append("AP_MODULES_LIST", "Geometry")
ipar.append("AP_MODULES_LIST", "Mesh")


###
### GEOM component
###

import GEOM
import geompy
import math
import SALOMEDS


geompy.init_geom(theStudy)

NO7 = geompy.MakeVertex(0, 0, 6)
B = geompy.MakeVertex(5, 2, 0)
C = geompy.MakeVertex(20, 0, 6)
D = geompy.MakeVertex(5, -0.1, 0)
DCB_1 = geompy.MakeBoxTwoPnt(NO7, B)
DCB_2 = geompy.MakeBoxTwoPnt(C, B)
DCB_J = geompy.MakeBoxTwoPnt(C, D)
DCB = geompy.MakePartition([NO7, DCB_1, DCB_2, DCB_J], [], [], [], geompy.ShapeType["SOLID"], 0, [], 0)
NO7_1 = geompy.CreateGroup(DCB, geompy.ShapeType["VERTEX"])
geompy.UnionIDs(NO7_1, [8])
DCB_GB = geompy.CreateGroup(DCB, geompy.ShapeType["EDGE"])
geompy.UnionIDs(DCB_GB, [6])
JOINT_B = geompy.CreateGroup(DCB, geompy.ShapeType["FACE"])
geompy.UnionIDs(JOINT_B, [69])
JOINT_H = geompy.CreateGroup(DCB, geompy.ShapeType["FACE"])
geompy.UnionIDs(JOINT_H, [38])
DCB_1_1 = geompy.CreateGroup(DCB, geompy.ShapeType["SOLID"])
geompy.UnionIDs(DCB_1_1, [2])
DCB_2_1 = geompy.CreateGroup(DCB, geompy.ShapeType["SOLID"])
geompy.UnionIDs(DCB_2_1, [36])
DCB_J_1 = geompy.CreateGroup(DCB, geompy.ShapeType["SOLID"])
geompy.UnionIDs(DCB_J_1, [60])
geompy.addToStudy( B, 'B' )
geompy.addToStudy( NO7, 'NO7' )
geompy.addToStudy( C, 'C' )
geompy.addToStudy( D, 'D' )
geompy.addToStudy( DCB_1, 'DCB_1' )
geompy.addToStudy( DCB_2, 'DCB_2' )
geompy.addToStudy( DCB_J, 'DCB_J' )
geompy.addToStudy( DCB, 'DCB' )
geompy.addToStudyInFather( DCB, NO7_1, 'NO7' )
geompy.addToStudyInFather( DCB, DCB_GB, 'DCB_GB' )
geompy.addToStudyInFather( DCB, JOINT_B, 'JOINT_B' )
geompy.addToStudyInFather( DCB, JOINT_H, 'JOINT_H' )
geompy.addToStudyInFather( DCB, DCB_1_1, 'DCB_1' )
geompy.addToStudyInFather( DCB, DCB_2_1, 'DCB_2' )
geompy.addToStudyInFather( DCB, DCB_J_1, 'DCB_J' )

### Store presentation parameters of displayed objects
import iparameters
ipar = iparameters.IParameters(theStudy.GetModuleParameters("Interface Applicative", "GEOM", 1))

#Set up entries:
# set up entry GEOM_2 (NO7) parameters
objId = geompy.getObjectID(NO7)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_3 (B) parameters
objId = geompy.getObjectID(B)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_4 (C) parameters
objId = geompy.getObjectID(C)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_5 (D) parameters
objId = geompy.getObjectID(D)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_6 (DCB_1) parameters
objId = geompy.getObjectID(DCB_1)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_7 (DCB_2) parameters
objId = geompy.getObjectID(DCB_2)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_8 (DCB_J) parameters
objId = geompy.getObjectID(DCB_J)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_9 (DCB) parameters
objId = geompy.getObjectID(DCB)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_9:10 (DCB_2) parameters
objId = geompy.getObjectID(DCB_2_1)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_9:11 (DCB_J) parameters
objId = geompy.getObjectID(DCB_J_1)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_9:5 (NO7) parameters
objId = geompy.getObjectID(NO7_1)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_9:6 (DCB_GB) parameters
objId = geompy.getObjectID(DCB_GB)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_9:7 (JOINT_B) parameters
objId = geompy.getObjectID(JOINT_B)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_9:8 (JOINT_H) parameters
objId = geompy.getObjectID(JOINT_H)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")
# set up entry GEOM_9:9 (DCB_1) parameters
objId = geompy.getObjectID(DCB_1_1)
ipar.setParameter(objId, "OCCViewer_0_Visibility", "On")
ipar.setParameter(objId, "OCCViewer_0_Color", "1:1:0")

###
### SMESH component
###

import smesh, SMESH, SALOMEDS

smesh.SetCurrentStudy(theStudy)
import StdMeshers
DCB_3 = smesh.Mesh(DCB)
Regular_1D = DCB_3.Segment()
Max_Size_1 = Regular_1D.MaxSize(0.5)
Quadrangle_2D = DCB_3.Quadrangle()
Hexa_3D = smesh.CreateHypothesis('Hexa_3D')
status = DCB_3.AddHypothesis(Hexa_3D)
isDone = DCB_3.Compute()
smeshObj_1 = DCB_3.GroupOnGeom(NO7_1,'NO7',SMESH.NODE)
NO7_2 = DCB_3.GroupOnGeom(NO7_1,'NO7',SMESH.NODE)
DCB_GB_1 = DCB_3.GroupOnGeom(DCB_GB,'DCB_GB',SMESH.EDGE)
DCB_GB_2 = DCB_3.GroupOnGeom(DCB_GB,'DCB_GB',SMESH.NODE)
JOINT_B_1 = DCB_3.GroupOnGeom(JOINT_B,'JOINT_B',SMESH.FACE)
JOINT_B_2 = DCB_3.GroupOnGeom(JOINT_B,'JOINT_B',SMESH.NODE)
JOINT_H_1 = DCB_3.GroupOnGeom(JOINT_H,'JOINT_H',SMESH.FACE)
JOINT_H_2 = DCB_3.GroupOnGeom(JOINT_H,'JOINT_H',SMESH.NODE)
DCB_1_2 = DCB_3.GroupOnGeom(DCB_1_1,'DCB_1',SMESH.VOLUME)
DCB_2_2 = DCB_3.GroupOnGeom(DCB_2_1,'DCB_2',SMESH.VOLUME)
DCB_J_2 = DCB_3.GroupOnGeom(DCB_J_1,'DCB_J',SMESH.VOLUME)
DCB_3.RemoveGroup( smeshObj_1 )
smesh.SetName(DCB_3, 'DCB')
DCB_3.ExportMED( r'/local00/Formations/ASTER_AVANCE/test_a.med', 0, SMESH.MED_V2_2, 1 )

## some objects were removed
aStudyBuilder = theStudy.NewBuilder()
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_1))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
## set object names
smesh.SetName(DCB_3.GetMesh(), 'DCB')
smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
smesh.SetName(Max_Size_1, 'Max Size_1')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(Hexa_3D, 'Hexa_3D')
smesh.SetName(NO7_2, 'NO7')
smesh.SetName(DCB_GB_1, 'DCB_GB')
smesh.SetName(DCB_GB_2, 'DCB_GB')
smesh.SetName(JOINT_B_1, 'JOINT_B')
smesh.SetName(JOINT_B_2, 'JOINT_B')
smesh.SetName(JOINT_H_1, 'JOINT_H')
smesh.SetName(JOINT_H_2, 'JOINT_H')
smesh.SetName(DCB_1_2, 'DCB_1')
smesh.SetName(DCB_2_2, 'DCB_2')
smesh.SetName(DCB_J_2, 'DCB_J')

### Store presentation parameters of displayed objects
import iparameters
ipar = iparameters.IParameters(theStudy.GetModuleParameters("Interface Applicative", "SMESH", 1))

#Set up entries:
# set up entry SMESH_3 (DCB) parameters
ipar.setParameter("SMESH_3", "VTKViewer_0_Visibility", "On")
ipar.setParameter("SMESH_3", "VTKViewer_0_Representation", "2")
ipar.setParameter("SMESH_3", "VTKViewer_0_IsShrunk", "0")
ipar.setParameter("SMESH_3", "VTKViewer_0_Entities", "e:1:f:1:v:1")
ipar.setParameter("SMESH_3", "VTKViewer_0_Colors", "surface:0:0.666667:1:backsurface:-100:edge:0:0.666667:1:node:1:0:0:outline:0:0.27451:0")
ipar.setParameter("SMESH_3", "VTKViewer_0_Sizes", "line:1:shrink:0.75")
ipar.setParameter("SMESH_3", "VTKViewer_0_PointMarker", "std:1:9")
ipar.setParameter("SMESH_3", "VTKViewer_0_Opacity", "1")
ipar.setParameter("SMESH_3", "VTKViewer_0_ClippingPlane", "Off")


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser(1)
  iparameters.getSession().restoreVisualState(1)
