# MODIF  DATE 29/09/2004   AUTEUR MJBHHPE J.L.FLEJOU 
# TITRE Calcul d'indicateur d'erreur en thermique lineaire
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================
# Calcul de l'indicateur d'erreur en thermique lineaire stationnaire (mur plan
# en tetra10) couplee avec un remaillage sur l'erreur totale via HOMARD.
# Cas test de non-regression informatique sur les options 'ERTH_ELEM_TEMP' 
# (valeurs par element de l'indicateur), 'ERTH_ELNO_ELEM' (valeurs aux noeuds
# par elements) et de leurs adherence avec le processus de remaillage.

#-------------------------------------------------------------------------------
#                            PREALABLES
#-------------------------------------------------------------------------------
DEBUT(CODE=_F( NOM = 'TPLL01J',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'))
# Concepts a chaque iteration
nbcalc = 3
M=[None]*(nbcalc+0)
MODE=[None]*nbcalc
MATE=[None]*nbcalc
CHA1=[None]*nbcalc
RESU=[None]*nbcalc

MATERI=DEFI_MATERIAU( THER=_F(  LAMBDA = 0.75, RHO_CP = 2.0))
#
M[1]=LIRE_MAILLAGE( )

#-------------------------------------------------------------------------------
#                     BOUCLE CALCUL INDICATEUR/REMAILLAGE
#-------------------------------------------------------------------------------
# En fait on fait nbcalc-1 iterations
for k in range(1,nbcalc):

# Affectation des materiaux/modele/chargement
   MATE[k]=AFFE_MATERIAU( MAILLAGE=M[k],
                AFFE=_F(  TOUT = 'OUI', MATER = MATERI) )
   MODE[k]=AFFE_MODELE( MAILLAGE=M[k],
                      AFFE=_F( TOUT = 'OUI', MODELISATION = '3D',
                                      PHENOMENE = 'THERMIQUE'))
   CHA1[k]=AFFE_CHAR_THER( MODELE=MODE[k],
             TEMP_IMPO=_F( GROUP_MA = 'F1INF',   TEMP = 100.),
             FLUX_REP=_F( GROUP_MA = 'FLUX',    FLUN = -1200.),
             ECHANGE=_F( GROUP_MA = 'ECHA',  COEF_H = 30., TEMP_EXT = 140.))

# Calcul thermique

   RESU[k]=THER_LINEAIRE( MODELE=MODE[k],
           CHAM_MATER=MATE[k], EXCIT=_F( CHARGE = CHA1[k]))

# Calcul de l'indicateur d'erreur
   RESU[k]=CALC_ELEM( reuse=RESU[k], 
              TOUT='OUI', 
               RESULTAT=RESU[k],
#              INFO=2,
              OPTION=('FLUX_ELNO_TEMP','ERTH_ELEM_TEMP','ERTH_ELNO_ELEM'))

   IMPR_RESU( FORMAT='MED', RESU=_F( RESULTAT = RESU[k]))

   if ( k < nbcalc-1 ) :
# Adaptation du maillage en se basant sur la composante ERTABS du champ
# ERTH_ELEM_TEMP de RESU[k]. Critere de raffinement = 2%.
# Ancien maillage: M[k]. Maillage raffine: M[k+1]
#
     M[k+1]=CO('M_%d' % (k+1))

     MACR_ADAP_MAIL(
                  ADAPTATION=_F( 
                       LIBRE = 'RAFFINEMENT',
                       MAILLAGE_N = M[k],
                       MAILLAGE_NP1 = M[k+1],
                       RESULTAT_N = RESU[k],
                       INDICATEUR = 'ERTH_ELEM_TEMP',
                       NUME_ORDRE = 0,
                       NOM_CMP_INDICA = 'ERTABS',
                       CRIT_RAFF_PE = 0.02,
                       NIVE_MAX = 5),
                 QUALITE='OUI',
                 INTERPENETRATION='NON' )

# Tests de non-regression de ERTH_ELEM_TEMP/ERTH_ELNO_TEMP et de la
# connection ASTER/HOMARD
TEST_RESU(RESU=(       
            _F( RESULTAT = RESU[1],          NUME_ORDRE = 0, 
                NOM_CHAM = 'ERTH_ELEM_TEMP', MAILLE = 'MA1', 
                POINT =1,                    PRECISION = 1.E-5,
                NOM_CMP = 'ERTREL',          REFERENCE='NON_REGRESSION',
                VALE = 4.1591876225226E-05,
                VERSION='V6.6',              CRITERE='RELATIF')))
TEST_RESU(RESU=(       
            _F( RESULTAT = RESU[1],          NUME_ORDRE = 0, 
                NOM_CHAM = 'ERTH_ELNO_ELEM', MAILLE = 'MA1',
                NOEUD = 'NO4',               PRECISION = 1.E-5,
                NOM_CMP = 'ERTREL',          REFERENCE='NON_REGRESSION',
                VALE = 4.1591876225226E-05,
                VERSION='V6.6',              CRITERE='RELATIF')))

# LE CODAGE DES NOMS DE NOEUDS ET DE MAILLES DANS LES FICHIERS MED EST EN BASE 36
# La maille M25 ==> MP
TEST_RESU(RESU=(       
            _F( RESULTAT = RESU[2],          NUME_ORDRE = 0, 
                NOM_CHAM = 'ERTH_ELEM_TEMP', MAILLE = 'MP', 
                POINT =1,
                NOM_CMP = 'ERTREL',          REFERENCE='NON_REGRESSION',
                VALE = 4.3627678192699E-05,  PRECISION = 1.E-5,
                VERSION='ASTER V7.1.9/HOMARD V6.6', CRITERE='RELATIF')))

FIN()
