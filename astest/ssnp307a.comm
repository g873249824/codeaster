# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET', ), DEBUG=_F(SDVERI='OUI'))


MAILLAGE  =  LIRE_MAILLAGE(FORMAT='MED')


MA         = CREA_MAILLAGE( MAILLAGE = MAILLAGE,
                            LINE_QUAD = _F(TOUT = 'OUI'),
                          );

TEMPS1     = DEFI_LIST_REEL( DEBUT=0.,
                             INTERVALLE=_F(JUSQU_A=3.0,
                             NOMBRE=6,)
                           )



MATER      = DEFI_MATERIAU( ELAS = _F(E  = 1.0,
                                      NU = 0.,
                                     ),
                            ECRO_LINE  = _F(SY = 0.01, D_SIGM_EPSI = 2.0),
                            NON_LOCAL  = _F(C_GRAD_VARI = 1.0)
                          )


CHMAT      = AFFE_MATERIAU(MAILLAGE=MA,
                           AFFE=_F(TOUT='OUI',
                                   MATER=MATER),);

COEF1      = DEFI_FONCTION( NOM_PARA    = 'INST',
                            PROL_DROITE = 'LINEAIRE',
                            VALE=( 0.0,  0.0,
                                   1.0,  1.0E-2,
                                   2.0,  1.25E-2,
                                   3.0,  2.0E-2)
                          )


MO         = AFFE_MODELE(MAILLAGE=MA,
                         AFFE=_F(TOUT='OUI',
                                 PHENOMENE='MECANIQUE',
                                 MODELISATION='D_PLAN_GVNO',
                                ),
                        );

#***********************************************************************
#    CHARGEMENT MECANIQUE POUR OBTENIR UNE SOLUTION HOMOGENE
#***********************************************************************

CH_U1  = AFFE_CHAR_CINE( MODELE    = MO,
                         MECA_IMPO = _F( GROUP_MA  = 'DRO',
                                         DX        =  1.,
                                         )
                        )

CH_U2  = AFFE_CHAR_CINE( MODELE    = MO,
                         MECA_IMPO = _F( GROUP_MA  = 'GAU',
                                         DX        =  0.,
                                         )
                        )

CH_U3  = AFFE_CHAR_CINE( MODELE    = MO,
                         MECA_IMPO = _F( GROUP_MA  = 'HAU',
                                         DY        =  0. )
                        )

CH_U4  = AFFE_CHAR_CINE( MODELE    = MO,
                         MECA_IMPO = _F( GROUP_MA  = 'BAS',
                                         DY        =  0. )
                        )

EVOL   = STAT_NON_LINE( MODELE     = MO,
                        CHAM_MATER = CHMAT,
                        EXCIT      = ( _F( CHARGE       = CH_U1,
                                           FONC_MULT    = COEF1),
                                       _F( CHARGE       = CH_U2),
                                       _F( CHARGE       = CH_U3),
                                       _F( CHARGE       = CH_U4),),
                        COMPORTEMENT  =   _F( TOUT           = 'OUI',
                                           RELATION       = 'ENDO_CARRE',
                                          ),
                        NEWTON     =   _F( MATRICE        = 'TANGENTE',
                                           REAC_ITER      = 1,),
                        CONVERGENCE=   _F( RESI_REFE_RELA = 1.E-6,
                                           SIGM_REFE      = 0.01,
                                           VARI_REFE      = 1.,
                                           ITER_GLOB_MAXI = 50,),
                        INCREMENT  =   _F( LIST_INST      = TEMPS1,),
                        AFFICHAGE  =   _F( INFO_RESIDU = 'OUI',)
                       )


#***********************************************************************
#    TEST COMPARAISON AVEC ENDOMMAGEMENT ANALYTIQUE
#***********************************************************************


TEST_RESU(RESU=_F(NUME_ORDRE=2,
                  RESULTAT=EVOL,
                  NOM_CHAM='DEPL',
                  NOEUD='N7',
                  NOM_CMP='DAMG',
                  VALE_CALC=0.0,
                  CRITERE='ABSOLU',

                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=4,
                  RESULTAT=EVOL,
                  NOM_CHAM='DEPL',
                  NOEUD='N7',
                  NOM_CMP='DAMG',
                  VALE_CALC=0.35999999999999999,

                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=6,
                  RESULTAT=EVOL,
                  NOM_CHAM='DEPL',
                  NOEUD='N7',
                  NOM_CMP='DAMG',
                  VALE_CALC=0.75,

                  ),
          )

FIN();
