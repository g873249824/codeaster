# TITRE COUPLAGE ASTER_HOMARD - PENTAEDRE
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# person_in_charge: gerald.nicolas at edf.fr
# Attention :ceci est un test de non regression et non pas d'evaluation
# de l'adaptation de maillage.
# . Information
# . Adaptation dans une boucle python
# . Cas 3D
# . Elements SEG3, TRIA6, QUAD8, PENTA15, puis TETRA10, PYRAM13
# . GROUP_NO, GROUP_MA
# . Avec ou sans mise a jour de champs
# . Champ de niveau
#
# option PAR_LOT='NON' indispensable pour la boucle
#
DEBUT(CODE=_F(NOM='ZZZZ121F', NIV_PUB_WEB='INTERNET', VISU_EFICAS='NON'), PAR_LOT='OUI', DEBUG=_F(SDVERI='OUI'), IMPR_MACRO='NON')
#
# 1. Declaration et dimensionnement a 10 du tableau M des concepts maillage
#    On affecte les valeurs a None (peu importe)
#
nb_mail_max = 4
#
_press_x = 1000.0;

_press0 = 0.e-14;
_press0 = 1.e-14;
#
M=[None]*10
#
# 2. Definition des materiaux
#
MATER_A0=DEFI_MATERIAU(
           ELAS=_F(  E = 300000., NU = 0.30, ALPHA = 15.E-6, RHO = 7700.,  ) )

MATER_A1=DEFI_MATERIAU(
           ELAS=_F(  E = 200000., NU = 0.30, ALPHA = 15.E-6, RHO = 7700.,  ) )

MATER_B0=DEFI_MATERIAU(
           ELAS=_F(  E = 500000., NU = 0.33, ALPHA = 15.E-6, RHO = 7700.,  ) )

MATER_B1=DEFI_MATERIAU(
           ELAS=_F(  E = 560000., NU = 0.33, ALPHA = 15.E-6, RHO = 7700.,  ) )

MATER_CD=DEFI_MATERIAU(
           ELAS=_F(  E = 100000., NU = 0.31, ALPHA = 16.E-6, RHO = 8300.,  ) )
#
# 3. Lecture du maillage
#
M[0]=LIRE_MAILLAGE(FORMAT='MED', )
#
# Creation d'un groupe pour le calcul de l'indicateur en quantite d'interet
M[0]=DEFI_GROUP(reuse =M[0],
                  MAILLAGE=M[0],
                  CREA_GROUP_MA=_F(NOM='CIBLE',
                                   OPTION='SPHERE',
                                   GROUP_NO_CENTRE='P',
                                   TYPE_MAILLE='3D',
                                   RAYON=0.001,),);
#
# Attention : le test d'interpenetration peut etre long (voir la documentation).
MACR_INFO_MAIL( MAILLAGE=M[0],
                QUALITE='OUI',
                INTERPENETRATION='OUI',
                CONNEXITE='OUI',
                TAILLE='OUI',
                PROP_CALCUL='OUI'
               )
#
# 4. Boucle sur num_mail :
#    A chaque iteration, calcul mecanique et raffinement du maillage.
#    Le maillage M[num_mail] produit par HOMARD a la fin de l iteration num_mail
#    est utilise a l iteration num_mail+1
#
for num_mail in range(nb_mail_max) :
#
# 4.1. Menage prealable
#
  if num_mail>0 :
    DETRUIRE(CONCEPT=(_F(NOM=(MODELE, CHMAT, CHAR, RESU, CHARDUAL, RESUDUAL, DEPL_P),)),INFO=1)
#
# 4.2. Modele mecanique
#
  MODELE = AFFE_MODELE( MAILLAGE=M[num_mail],
                        AFFE=_F( TOUT = 'OUI', PHENOMENE = 'MECANIQUE',
                                 MODELISATION = '3D', ) )
#
# 4.3. Le MODI_MAILLAGE n'est utile que la premiere fois, car HOMARD conserve
#      les orientations
#
  if num_mail==0 :
    M[num_mail] = MODI_MAILLAGE( reuse=M[num_mail],
                          MAILLAGE=M[num_mail],
                          ORIE_PEAU_3D=_F(GROUP_MA=('XMIN', 'XMAX',
                                                    'YMIN', 'YMAX',
                                                    'ZMIN', 'ZMAX',
                                                    'CL_1', 'CL_2',),)
                         )
#
# 4.4. MISE EN PLACE DES MATERIAUX
#
  CHMAT = AFFE_MATERIAU( MAILLAGE=M[num_mail],
                         AFFE=(
       _F(  GROUP_MA = 'A0',   MATER = MATER_A0,    ),
       _F(  GROUP_MA = 'A1',   MATER = MATER_A1,    ),
       _F(  GROUP_MA = 'B0',   MATER = MATER_B0,   ),
       _F(  GROUP_MA = 'B1',   MATER = MATER_B1,   ),
       _F(  GROUP_MA = ('C0', 'C1', 'D0', 'D1' ),   MATER = MATER_CD,    ),
                         ),)
#
# 4.5. Chargements
#
  PRES   = 12.3;
  PRES_0 = 1.E-14;
  CHAR = AFFE_CHAR_MECA(MODELE=MODELE,
                        FACE_IMPO = _F(GROUP_MA='CL_1',
                                        DX=0.,
                                        DY=0.,
                                        DZ=0.,),
                        PRES_REP=(_F(GROUP_MA='CL_2',
                                      PRES = _press_x,),
                                  _F(GROUP_MA=('XMIN', 'XMAX',
                                               'YMIN', 'YMAX',
                                               'ZMIN', 'ZMAX',),
                                      PRES=_press0,),),);
#
# 4.6. Resolution
#
  RESU = MECA_STATIQUE( MODELE=MODELE,
                        CHAM_MATER=CHMAT,
                        EXCIT=_F( CHARGE = CHAR, )
                      )
#
# 4.7. Deplacement au point de test

  titre = 'DEPL en P - %2d' %num_mail
  DEPL_P = POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                                INTITULE=titre,
                                RESULTAT=RESU,
                                NOM_CHAM='DEPL',
                                GROUP_NO='P',
                                TOUT_CMP='OUI',),);

  ##IMPR_TABLE(TABLE=DEPL_P,
            ##NOM_PARA=('INTITULE','NOM_CHAM','NOEUD','DX','DY','DZ',),);
#
  if num_mail < nb_mail_max-1 :
#
# 4.8. Calcul d'erreur
# 4.8.1. Erreur en residu
#
    RESU = CALC_ERREUR( reuse=RESU,
                        RESULTAT=RESU,
                        OPTION=('ERME_ELEM',),
                        EXCIT=_F(CHARGE=CHAR)
                        )
#
# 4.8.2. Erreur en quantite d'interet
# 4.8.2.1. Chargement
#
    CHARDUAL = AFFE_CHAR_MECA(MODELE=MODELE,
                          FORCE_INTERNE=_F(GROUP_MA='CIBLE',
                                          FX=1.0,),
                          FACE_IMPO = _F(GROUP_MA='CL_1',
                                          DX=0.,
                                          DY=0.,
                                          DZ=0.,),
                          PRES_REP=(_F(GROUP_MA='CL_2',
                                        PRES = _press0,),
                                    _F(GROUP_MA=('XMIN', 'XMAX',
                                                 'YMIN', 'YMAX',
                                                 'ZMIN', 'ZMAX',),
                                        PRES=_press0,),),);
#
# 4.8.2.2. Resolution
#
    RESUDUAL=MECA_STATIQUE( MODELE=MODELE,
                          CHAM_MATER=CHMAT,
                            EXCIT=_F(CHARGE=CHARDUAL,),);
#
#
# 4.8.2.3. Calcul d'erreur
#
    RESUDUAL = CALC_ERREUR( reuse=RESUDUAL,
                        RESULTAT=RESUDUAL,
                        OPTION=( 'ERME_ELEM', ),
                        EXCIT=_F(CHARGE=CHARDUAL,)
                        )
#
# 4.9. Calcul de l'estimateur d'erreur en quantite d'interet
#
    RESU=CALC_ERREUR(reuse =RESU,
                    RESULTAT=RESU,
                    OPTION=('QIRE_ELEM',),
                    RESU_DUAL=RESUDUAL,);
#
# 4.10. Adaptation du maillage de num_mail vers num_mail+1
#       IMPRESSIONS POUR CREER LA BASE DU CAS-TEST HOMARD pen_d2_poutre
#
    ##IMPR_RESU ( UNITE=90+num_mail, FORMAT='MED',
                ##RESU=_F(RESULTAT=RESU, NOM_CHAM='QIRE_ELEM', NOM_CMP='ERREST') ) ;
#
    if num_mail > 0 :
      DETRUIRE(CONCEPT=(_F(NOM=(NIVEAUCA, DIAMCA),)),INFO=1)
#
    M[num_mail+1]=CO('M_%d' % (num_mail+1))
#
    MACR_ADAP_MAIL( ADAPTATION='RAFFINEMENT',INFO=1,
                    MAILLAGE_N = M[num_mail],
                    MAILLAGE_NP1 = M[num_mail+1],
                    RESULTAT_N = RESU,
                    NOM_CHAM = 'QIRE_ELEM',
                    NOM_CMP='ERREST',
                    CRIT_RAFF_MS = 2.5,
                    ADD_CHAM=(_F(CHAM_GD=CO('NIVEAUCA'),
                                 CHAM_CAT='NIVEAU',),
                              _F(CHAM_GD=CO('DIAMCA'),
                                 CHAM_CAT='DIAMETRE',),),
                  )
    #IMPR_CO(CONCEPT=_F(NOM=NIVEAU)) ;
#
# 5. IMPRESSIONS POUR POST-TRAITEMENT
#
  ##IMPR_RESU ( UNITE=80+num_mail, FORMAT='MED',
              ##RESU=_F(RESULTAT=RESU, ),) ;
#
# 6. test de fin
#
#IMPR_CO(CONCEPT=_F(NOM=NIVEAUCA)) ;
#NIVEAU=CREA_CHAMP( OPERATION='ASSE',
                    #TYPE_CHAM='ELEM_ERRE_R',
                    #MODELE=MODELE,
                    #PROL_ZERO='OUI',
                    #ASSE=(_F( CHAM_GD = NIVEAUCA,
                              #TOUT='OUI',),),) ;
#IMPR_RESU ( RESU=_F( CHAM_GD=NIVEAU, ) ) ;
#TEST_RESU(CHAM_ELEM=( _F( CHAM_GD=NIVEAU,
                      #CRITERE = 'ABSOLU',
                      #PRECISION = 1.E-3,
                      #MAILLE='M43',
                      #NOM_CMP = 'X1',
                      #VALE = 1.5,
                      #REFERENCE = 'NON_DEFINI',
                      #VERSION='11.1.8',) ),
                   #),

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  GROUP_NO='P',
                  RESULTAT=RESU,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DX',
                  VALE_CALC=0.063361664246960,
                  CRITERE='RELATIF',
                  ),
          )

FIN( )
