# MODIF  DATE 26/09/2011   AUTEUR NISTOR I.NISTOR 
# TITRE SENSIBILITE EN DYNAMIQUE NON LINEAIRE (3D-VON-MISES ISOT LINEAIRE)
# sensd07a.para = tps_job 120 mem_job 64Mo liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# sensd07a.para = tps_job 120 mem_job 64Mo liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================

DEBUT( CODE=_F(  NOM = 'SENSD07A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),)

# ----------------------------------------------------------------------
#                 *-------------------------------*
#               /                               / !
#          J  /                            OPPOSE !
#           *-------------------------------*     !
#           !               !               !     !
#           !               !               !     !
#           !               !               !     !
#           !               * CENTRE        !     !
#           !               !               !     *
#           !               !               !   /  
#           !               !               ! /
#           *-------------------------------*
#       ORIGINE                              I
#
#              1   < X < 11
#             -1.5 < Y <  1.5
#              0.  < Z < 1.
#
# Calcul des derives des champs resulat par rapport a E, NU, D_SIGM_EPSI (=ET=Pente
# de la courbe de traction), SY (limite d'elasticite), et le chargement (FORCE_NODALE).
# Le modele integre de l'amortissement modal et et de l'amortissement proportionnel.
# Deux dyna_non_line s'enchaine pour tester la fonctionalite de reprise avec
# sensibilite. La solution de reference des sensibilites est calculee par differences
# finies, puis en non regresion. 
# On teste ensuite avec un chargement tel que le regime est lineaire, et on compare
# avec les resultats de DYNA_VIBRA(Calcul transitoire sur base physique).
# ----------------------------------------------------------------------
# Initialisations

I_DEBUT = 0.
I_FIN = 1.E-4

#nom_cham='ACCE'
nom_cham='VITE'
#nom_cham='DEPL'
cste_alpha=0.# cette valeur est nulle, sinon on ne peut pas verifier les resultats par differences finies, car 
# le choix a ete fait que les derivees par rapport a la raideur ne fassent pas intervenir la derivee par rapport a l amortissement
cste_beta=3.E-1
cste_dsde=2000.
cste_sigy=200.
coef_char=1.E7
epsilon=1.E-5

lis_amor = DEFI_LIST_REEL(VALE=(0.07 ),)
#
# 1. Definition des parametres sensibles
#
mot_cle =[     "E" ,    "NU" , "D_SIGM_EPSI",    "SY"      ,"FORCE_NODALE" ]
sensible=[   1.E5  ,    0.3  ,  cste_dsde   ,    cste_sigy,  100.*coef_char]
sensibl2=[   1.E5  ,    0.3  ,  cste_dsde   ,    cste_sigy,   100.]
mot_fact=['ELAS_FO','ELAS_FO','ECRO_LINE_FO','ECRO_LINE_FO','FORCE_NODALE']

n=len(sensible)
PS=[None]*n
PS2=[None]*n

for i in range(n):
  PS[i]=DEFI_PARA_SENSI(VALE=sensible[i])
  PS2[i]=DEFI_PARA_SENSI(VALE=sensibl2[i])
#
# 2. Definition de constantes
#

ALPHA=DEFI_CONSTANTE(VALE=cste_alpha,);
BETA=DEFI_CONSTANTE(VALE=cste_beta,);
FY=DEFI_CONSTANTE(VALE=30.*coef_char,);
FZ=DEFI_CONSTANTE(VALE=10.*coef_char,);

#
# 3. Prealable
#
PRE_GIBI()
MAILLAGE=LIRE_MAILLAGE( );

MAILLAGE=DEFI_GROUP(reuse=MAILLAGE,
                    MAILLAGE=MAILLAGE,
                    CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI'));

#
# 3.1. Modele
#
MO=AFFE_MODELE(MAILLAGE=MAILLAGE,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

#
# 3.2. Mise en place des materiaux
#
MAT=DEFI_MATERIAU(ELAS_FO=_F(E=PS[0],
                             RHO=2400. ,
                             NU=PS[1],
                             AMOR_ALPHA=ALPHA ,
                             AMOR_BETA=BETA,),
                  ECRO_LINE_FO=_F(D_SIGM_EPSI=PS[2],
                                 SY=PS[3],),);

#
# 3.3. Affectation des materiaux
#
CHMAT=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                    AFFE=_F(TOUT='OUI',MATER=MAT,),);

# 3.4. Chargements
#
CLIM=AFFE_CHAR_MECA(MODELE=MO,
                    DDL_IMPO=(_F(GROUP_NO='I',DX=0.0,DY=0.0,DZ=0.0),
                              _F(GROUP_MA='BORD_GAU',DX=0.0,DY=0.0,DZ=0.0)),);
#
CH=AFFE_CHAR_MECA_F(MODELE=MO,
                  FORCE_NODALE=(_F(GROUP_NO='OPPOSE',
                                   FX=PS[4],
                                   FY=FY,
                                   FZ=FZ))
                                   );

L_INST=DEFI_LIST_REEL(DEBUT=I_DEBUT,INTERVALLE=_F(JUSQU_A=I_FIN,NOMBRE=10))
L_INST1=DEFI_LIST_REEL(DEBUT=I_DEBUT,INTERVALLE=_F(JUSQU_A=I_FIN/2,NOMBRE=5))
L_INST2=DEFI_LIST_REEL(DEBUT=I_FIN/2,INTERVALLE=_F(JUSQU_A=I_FIN,NOMBRE=5))

#
# 3.5. Amortissement modal
#
MATELER=CALC_MATR_ELEM(MODELE=MO,OPTION='RIGI_MECA',
                       CHAM_MATER=CHMAT,    
                       CHARGE= CLIM)
MATELEM=CALC_MATR_ELEM(MODELE=MO,OPTION='MASS_MECA',
                       CHAM_MATER=CHMAT,
                       CHARGE= CLIM)                                   
NUM=NUME_DDL(MATR_RIGI=MATELER)
MATASSR=ASSE_MATRICE(MATR_ELEM=MATELER,NUME_DDL=NUM)
MATASSM=ASSE_MATRICE(MATR_ELEM=MATELEM,NUME_DDL=NUM)

MODE=MODE_ITER_SIMULT(  MATR_A=MATASSR,   MATR_B=MATASSM,
                    CALC_FREQ=_F( NMAX_FREQ = 10))


#
# 4. Calcul
#

FC=DEFI_FONCTION(NOM_PARA='INST',
                 PROL_DROITE='CONSTANT',
                 PROL_GAUCHE='CONSTANT',
                 VALE=(I_DEBUT,0.,I_FIN,1.,))

DYT=DYNA_NON_LINE(MODELE=MO,CHAM_MATER=CHMAT,
                   SENSIBILITE=tuple(PS),
                   AMOR_MODAL=_F(  MODE_MECA = MODE,  REAC_VITE = 'OUI',
                            LIST_AMOR = lis_amor),
                   COMP_INCR=_F(RELATION='VMIS_ISOT_LINE'),
                   EXCIT=(_F(FONC_MULT=FC,CHARGE=CH), 
                          _F( CHARGE = CLIM),),
                   INCREMENT=_F(LIST_INST=L_INST1,),
                   CONVERGENCE=_F(RESI_GLOB_RELA=1e-8,
                                  RESI_GLOB_MAXI = 2.E-7,
                                  ITER_GLOB_MAXI=1000,),
                   SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',
                                FORMULATION='DEPLACEMENT',),)
                            

DYT=DYNA_NON_LINE(reuse=DYT,
                   ETAT_INIT=_F(EVOL_NOLI=DYT),
                    MODELE=MO,CHAM_MATER=CHMAT,
                   SENSIBILITE=tuple(PS),
                   AMOR_MODAL=_F(  MODE_MECA = MODE,  REAC_VITE = 'OUI',
                            LIST_AMOR = lis_amor),
                   COMP_INCR=_F(RELATION='VMIS_ISOT_LINE'),
                   EXCIT=(_F(FONC_MULT=FC,CHARGE=CH), 
                          _F( CHARGE = CLIM),),
                   INCREMENT=_F(LIST_INST=L_INST2,),
                   CONVERGENCE=_F(RESI_GLOB_RELA=1e-8,
                                  RESI_GLOB_MAXI = 2.E-7,
                                  ITER_GLOB_MAXI=1000,),
                   SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',
                                FORMULATION='DEPLACEMENT',),)
                              

T_REF=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                      GROUP_NO=('OPPOSE'),
                      RESULTAT=DYT,
                      NOM_CHAM=nom_cham,
                      NUME_ORDRE=10,
                      NOM_CMP=('DX','DY','DZ'),
                      OPERATION='EXTRACTION',
                      ),);

TSREF=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                      GROUP_NO=('OPPOSE'),
                      RESULTAT=DYT,
                      NOM_CHAM=nom_cham,
                      NUME_ORDRE=10,
                      NOM_CMP=('DX','DY','DZ'),
                      OPERATION='EXTRACTION',
                      SENSIBILITE=tuple(PS),
                      ),);

#
# 5. Test par differences finies
#
MATD   = [None]*n
CHMATD = [None]*n
CHD    = [None]*n
DYTD   = [None]*n
T_DIF  = [None]*n
VERIDX = [None]*n
VERIDY = [None]*n
VERIDZ = [None]*n
TCOMDX = [None]*n
TCOMDY = [None]*n
TCOMDZ = [None]*n


for i in range(n):
  eps=[1.]*n
  eps[i]=1.0+epsilon
  MATD[i]=DEFI_MATERIAU(ELAS=_F(E=sensible[0]*eps[0],
                             RHO=2400. ,
                             NU=sensible[1]*eps[1],
                             AMOR_ALPHA =cste_alpha,
                             AMOR_BETA=cste_beta,),
                  ECRO_LINE=_F(D_SIGM_EPSI=sensible[2]*eps[2],
                                 SY=sensible[3]*eps[3],),
                                );

  CHMATD[i]=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       AFFE=_F(TOUT='OUI',MATER=MATD[i],),);

  CHD[i]=AFFE_CHAR_MECA(MODELE=MO,
                    FORCE_NODALE=(_F(GROUP_NO='OPPOSE',
                                     FX=sensible[4]*eps[4],
                                     FY=30.*coef_char,
                                     FZ=10.*coef_char))
                                   );

  DYTD[i]=DYNA_NON_LINE(MODELE=MO,CHAM_MATER=CHMATD[i],
                   AMOR_MODAL=_F(  MODE_MECA = MODE,  REAC_VITE = 'OUI',
                            LIST_AMOR = lis_amor),
                   COMP_INCR=_F(RELATION='VMIS_ISOT_LINE'),
                   EXCIT=(_F(FONC_MULT=FC,CHARGE=CHD[i]), 
                          _F( CHARGE = CLIM),),
                   INCREMENT=_F(LIST_INST=L_INST,),
                   CONVERGENCE=_F(RESI_GLOB_RELA=1e-8,
                                  RESI_GLOB_MAXI = 2.E-7,
                                  ITER_GLOB_MAXI=1000,),
                   SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',
                                   FORMULATION='DEPLACEMENT',),)
                            

  T_DIF[i]=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                                  GROUP_NO=('OPPOSE'),
                                  RESULTAT=DYTD[i],
                      NOM_CHAM=nom_cham,
                                   NUME_ORDRE=10,
                                  NOM_CMP=('DX','DY','DZ'),
                                  OPERATION='EXTRACTION',
                                  ),);

  VERIDX[i]=FORMULE(NOM_PARA=('DX_EPS', 'DX_REF', 'DXDPS'),
                   VALE='abs ((DX_EPS - DX_REF)/%e - DXDPS)' %(sensible[i]*epsilon))
  VERIDY[i]=FORMULE(NOM_PARA=('DY_EPS', 'DY_REF', 'DYDPS'),
                   VALE='abs ((DY_EPS - DY_REF)/%e - DYDPS)' %(sensible[i]*epsilon))
  VERIDZ[i]=FORMULE(NOM_PARA=('DZ_EPS', 'DZ_REF', 'DZDPS'),
                   VALE='abs ((DZ_EPS - DZ_REF)/%e - DZDPS)' %(sensible[i]*epsilon))

  TCOMDX[i]=CALC_TABLE(TABLE=TSREF,
                       SENSIBILITE=PS[i],
                       ACTION=(_F(OPERATION='RENOMME',
                                  NOM_PARA=('DX', 'DXDPS'),),
                               _F(OPERATION='COMB',
                                  TABLE=T_REF,
                                  NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                               _F(OPERATION='RENOMME',
                                  NOM_PARA=('DX', 'DX_REF'),),
                               _F(OPERATION='COMB',
                                  TABLE=T_DIF[i],
                                  NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                               _F(OPERATION='RENOMME',
                                  NOM_PARA=('DX', 'DX_EPS'),),
                               _F(OPERATION='OPER',
                                  NOM_PARA='DIFF',
                                  FORMULE=VERIDX[i]),
                               _F(OPERATION='EXTR',
                                  NOM_PARA=('NOEUD', 'NUME_ORDRE', 'INST', 'DXDPS', 'DIFF', 'DX_REF', 'DX_EPS'),),),
                           TITRE='Comparaison entre derivee / differences finies')

  
  TEST_TABLE(
     TABLE     = TCOMDX[i],
     NOM_PARA  = 'DIFF',
     TYPE_TEST = 'MAX',
     VALE      = 0.,
     CRITERE   = 'ABSOLU',
     PRECISION = 2.E-6,
     REFERENCE = 'AUTRE_ASTER',)

  TCOMDY[i]=CALC_TABLE(TABLE=TSREF,
                       SENSIBILITE=PS[i],
                       ACTION=(_F(OPERATION='RENOMME',
                                  NOM_PARA=('DY', 'DYDPS'),),
                               _F(OPERATION='COMB',
                                  TABLE=T_REF,
                                  NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                               _F(OPERATION='RENOMME',
                                  NOM_PARA=('DY', 'DY_REF'),),
                               _F(OPERATION='COMB',
                                  TABLE=T_DIF[i],
                                  NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                               _F(OPERATION='RENOMME',
                                  NOM_PARA=('DY', 'DY_EPS'),),
                               _F(OPERATION='OPER',
                                  NOM_PARA='DIFF',
                                  FORMULE=VERIDY[i]),
                               _F(OPERATION='EXTR',
                                  NOM_PARA=('NOEUD', 'NUME_ORDRE', 'INST', 'DYDPS', 'DIFF', 'DY_REF', 'DY_EPS'),),),
                           TITRE='Comparaison entre derivee / differences finies')

  TEST_TABLE(
     TABLE     = TCOMDY[i],
     NOM_PARA  = 'DIFF',
     TYPE_TEST = 'MAX',
     VALE      = 0.,
     CRITERE   = 'ABSOLU',
     PRECISION = 1.E-6,
     REFERENCE = 'AUTRE_ASTER',)

  TCOMDZ[i]=CALC_TABLE(TABLE=TSREF,
                       SENSIBILITE=PS[i],
                       ACTION=(_F(OPERATION='RENOMME',
                                  NOM_PARA=('DZ', 'DZDPS'),),
                               _F(OPERATION='COMB',
                                  TABLE=T_REF,
                                  NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                               _F(OPERATION='RENOMME',
                                  NOM_PARA=('DZ', 'DZ_REF'),),
                               _F(OPERATION='COMB',
                                  TABLE=T_DIF[i],
                                  NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                               _F(OPERATION='RENOMME',
                                  NOM_PARA=('DZ', 'DZ_EPS'),),
                               _F(OPERATION='OPER',
                                  NOM_PARA='DIFF',
                                  FORMULE=VERIDZ[i]),
                               _F(OPERATION='EXTR',
                                  NOM_PARA=('NOEUD', 'NUME_ORDRE', 'INST', 'DZDPS', 'DIFF', 'DZ_REF', 'DZ_EPS'),),),
                           TITRE='Comparaison entre derivee / differences finies')

  TEST_TABLE(
     TABLE     = TCOMDZ[i],
     NOM_PARA  = 'DIFF',
     TYPE_TEST = 'MAX',
     VALE      = 0.,
     CRITERE   = 'ABSOLU',
     PRECISION = 1.E-6,
     REFERENCE = 'AUTRE_ASTER',)

#
# 6. Test_Resu en dur
#
TEST_RESU(RESU=(
                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='DEPL',GROUP_NO= 'OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DX',   
                   VALE=(1.9342E-01),REFERENCE='NON_REGRESSION',VERSION='7.2.12'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='DEPL',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DX',
                   SENSIBILITE=PS_0, 
                   VALE=(-2.4739E-13),REFERENCE='NON_REGRESSION',VERSION='7.2.12'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='DEPL',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DY',
                   SENSIBILITE=PS_1,        
                   VALE=(-1.3969E-07),REFERENCE='NON_REGRESSION',VERSION='7.2.12'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='VITE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DZ',
                   SENSIBILITE=PS_2,        
                   VALE=(-5.9807E-09),REFERENCE='NON_REGRESSION',VERSION='7.2.12'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='VITE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DX',
                   SENSIBILITE=PS_3,        
                   VALE=(-1.5118E-06),REFERENCE='NON_REGRESSION',VERSION='7.2.12'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='ACCE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DY',
                   SENSIBILITE=PS_2,        
                   VALE=(-1.0214E-03),REFERENCE='NON_REGRESSION',VERSION='7.2.12'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='ACCE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DZ',
                   SENSIBILITE=PS_3,        
                   VALE=(-1.7587E-03),REFERENCE='NON_REGRESSION',VERSION='7.2.12'),

                ),)


# 7. VERIFICATION EN REGIME LINEAIRE (coef_char=1.)
#    VALEURS DE REFERENCES ISSUES DE DYNA_VIBRA
#
FY2=DEFI_CONSTANTE(VALE=30.,);
FZ2=DEFI_CONSTANTE(VALE=10.,);
CH2=AFFE_CHAR_MECA_F(MODELE=MO,
                  FORCE_NODALE=(_F(GROUP_NO='OPPOSE',
                                   FX=PS2[4],
                                   FY=FY2,
                                   FZ=FZ2))
                                   );

MAT2=DEFI_MATERIAU(ELAS_FO=_F(E=PS2[0],
                             RHO=2400. ,
                             NU=PS2[1],
                             AMOR_ALPHA=ALPHA ,
                             AMOR_BETA=BETA,),
                  ECRO_LINE_FO=_F(D_SIGM_EPSI=PS2[2],
                                 SY=PS2[3],),);

CHMAT2=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                    AFFE=_F(TOUT='OUI',MATER=MAT2,),);


DYL=DYNA_NON_LINE(MODELE=MO,CHAM_MATER=CHMAT2,
                   SENSIBILITE=tuple(PS2),
                   COMP_INCR=_F(RELATION='VMIS_ISOT_LINE'),
                   EXCIT=(_F(FONC_MULT=FC,CHARGE=CH2), 
                          _F( CHARGE = CLIM),),
                   INCREMENT=_F(LIST_INST=L_INST,),
                   CONVERGENCE=_F(RESI_GLOB_RELA=1.E-8,
                                  RESI_GLOB_MAXI = 2.E-7,
                                  ITER_GLOB_MAXI=1000,),
                   SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',
                                FORMULATION='DEPLACEMENT',),)
                             

TEST_RESU(RESU=(
                _F(RESULTAT=DYL,NUME_ORDRE=10,
                   NOM_CHAM='DEPL',GROUP_NO= 'OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DX',   
                   VALE=(1.9342E-08),REFERENCE='AUTRE_ASTER',VERSION='7.2.12'),

                _F(RESULTAT=DYL,NUME_ORDRE=10,
                   NOM_CHAM='VITE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DX',
                   SENSIBILITE=PS2[0],        
                   VALE=(-1.0577E-14),REFERENCE='AUTRE_ASTER',VERSION='7.2.12'),

                _F(RESULTAT=DYL,NUME_ORDRE=10,
                   NOM_CHAM='VITE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DY',
                   SENSIBILITE=PS2[1],        
                   VALE=(-4.4996E-10),REFERENCE='AUTRE_ASTER',VERSION='7.2.12'),

                _F(RESULTAT=DYL,NUME_ORDRE=10,
                   NOM_CHAM='VITE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-2,
                   NOM_CMP='DY',
                   SENSIBILITE=PS2[4],        
                   VALE=(-9.9810E-13),REFERENCE='AUTRE_ASTER',VERSION='7.2.12'),

                _F(RESULTAT=DYL,NUME_ORDRE=10,
                   NOM_CHAM='VITE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DZ',
                   SENSIBILITE=PS2[4],        
                   VALE=(2.3704E-12),REFERENCE='AUTRE_ASTER',VERSION='7.2.12'),
                 ))

FIN()

