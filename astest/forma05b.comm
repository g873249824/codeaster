# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

# MODELIDATION B : FEM 2D SANS SYMETRIE

# CE FICHIER EST LA VERSION CORRIGEE DU 1ER EXERCICE DES TPS
# POUR LA PREPARATION DES TPS, FOURNIR EGALEMENT UNE VERSION A TROUS DE CE FICHIER :
# - COMMENTER LA PRISE EN COMPTE DES ELEMENTS DE BARSOUM
# - REMPLACER LES PARAMETRES RSUP ET RSUP PAR UNE VALEUR BIDON (EX. : 999)
# - SUPPRIMER LES TEST_TABLE

MA=DEFI_MATERIAU(ELAS=_F(E=210000e6,
                         NU=0.3))

MAILLIN=LIRE_MAILLAGE(FORMAT='MED')


MAILLIN=MODI_MAILLAGE(reuse=MAILLIN,
                   MAILLAGE=MAILLIN,
                   ORIE_PEAU_2D=_F(GROUP_MA=('HAUT','BAS','LEV_SUP','LEV_INF')))

# Passage en quadratique
# PREF_NOEUD sert a definir le prefix du nom des noeuds milieux. Par defaut 
# c'est NS. Pour les gros maillages, il est preferable de mettre un prefix
# en une seule lettre. Z est libre donc on peut l'utiliser.
MAIL=CREA_MAILLAGE(MAILLAGE=MAILLIN,
                   LINE_QUAD=_F(TOUT='OUI',
                                PREF_NOEUD='Z'))
                                  
# Barsoum
MAIL=MODI_MAILLAGE(reuse=MAIL,
                   MAILLAGE=MAIL,
                   MODI_MAILLE=_F(OPTION='NOEUD_QUART',
                                  GROUP_NO_FOND='FRONT'))

MODE=AFFE_MODELE(MAILLAGE=MAIL,
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='MECANIQUE',
                         MODELISATION= 'D_PLAN'))
                         
MATE=AFFE_MATERIAU(MAILLAGE=MAIL,
                   AFFE=_F(TOUT='OUI',
                           MATER=MA))

CHAR=AFFE_CHAR_MECA(MODELE=MODE,
                    DDL_IMPO=(_F(GROUP_NO='HAUT_G',DY=0.,DX=0.),
                              _F(GROUP_NO='HAUT_D',DY=0.),),
                    PRES_REP=_F(GROUP_MA=('HAUT','BAS'),PRES=-10e6),
                    )

RESU=MECA_STATIQUE(MODELE=MODE,
                   CHAM_MATER=MATE,
                   EXCIT=_F(CHARGE=CHAR))

RESU=CALC_CHAMP(reuse=RESU,RESULTAT=RESU,CRITERES=('SIEQ_ELNO'),CONTRAINTE=('SIGM_ELNO'))


RESU=CALC_CHAMP(reuse =RESU,
             RESULTAT=RESU,
             CONTRAINTE='SIGM_NOEU',CRITERES='SIEQ_NOEU')

IMPR_RESU(FORMAT='MED',
          UNITE=80,
          RESU=_F(MAILLAGE=MAIL,
                  RESULTAT=RESU,
                  NOM_CHAM=('SIGM_NOEU','SIEQ_NOEU','DEPL')))

#----------------------------------------------------------------------------------
#                        fin du calcul mecanique
#----------------------------------------------------------------------------------

# post-traitements a completer
FISS=DEFI_FOND_FISS(MAILLAGE=MAIL,
                    SYME='NON',
                    FOND_FISS=_F(GROUP_NO='FRONT'),
                    LEVRE_SUP=_F(GROUP_MA='LEV_SUP'),
                    LEVRE_INF=_F(GROUP_MA='LEV_INF'),)

RSUP=0.005 * 5
RINF=0.005 * 2


# CALC_G
G=CALC_G(OPTION='CALC_G',
         RESULTAT=RESU,
         THETA=_F(FOND_FISS=FISS,
                  R_INF=RINF,
                  R_SUP=RSUP,
                  ),
         )

IMPR_TABLE(TABLE=G)

GK=CALC_G(OPTION='CALC_K_G',
          RESULTAT=RESU,
          THETA=_F(FOND_FISS=FISS,
                   R_INF=RINF,
                   R_SUP=RSUP,
                   ),
          )

IMPR_TABLE(TABLE=GK),


# POST_K1_K2_K3
K=POST_K1_K2_K3(RESULTAT=RESU,
                FOND_FISS=FISS,)

IMPR_TABLE(TABLE=K )

# tests sur G
Gref = 192

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=3.0000000000000001E-3,
           VALE_CALC=192.511256986,
           VALE_REFE=192,
           NOM_PARA='G',
           TABLE=G,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=3.0000000000000001E-3,
           VALE_CALC=192.511256986,
           VALE_REFE=192,
           NOM_PARA='G',
           TABLE=GK,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=3.0000000000000001E-3,
           VALE_CALC=192.527315126,
           VALE_REFE=192,
           NOM_PARA='G_IRWIN',
           TABLE=GK,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.012,
           VALE_CALC=193.008786982,
           VALE_REFE=192,
           NOM_PARA='G',
           TABLE=K,)

# tests sur K1
K1ref = 6.65e6

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=3.0000000000000001E-3,
           VALE_CALC=6665536.76861,
           VALE_REFE=6.650000E6,
           NOM_PARA='K1',
           TABLE=GK,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC=6673866.14366,
           VALE_REFE=6.650000E6,
           NOM_PARA='K1',
           TABLE=K,)

FIN()
