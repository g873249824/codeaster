# person_in_charge: gerald.nicolas at edf.fr
# TITRE COUPLAGE ASTER-HOMARD SUR UN CALCUL STAT_NON_LINE
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU
#
# A. Incontournables
#
# A.1. Nombre de calculs :
#      Dans tous les cas, le calcul a lieu de t=0 a t=480s.
#      . Pour le cas-test ASTER, on fera 4 calculs (et donc 3 adaptations)
#      . Passer a 32 calculs permet de produire une figure animee avec un
#      meilleur rendu des changements de maillage
#      Remarque : il faut que '480./nbre_calcul' soit un multiple de 'pas_de_temps'
#      On a donc droit a :
nbre_calcul = 1
nbre_calcul = 2
nbre_calcul = 4
nbre_calcul = 8
nbre_calcul = 16
nbre_calcul = 32
#
nbre_calcul = 4
T_final=480.
pas_de_temps = 3.
duree = T_final / nbre_calcul
T_test_resu = duree * 4.
#
# A.2. Discretisation temporelle
#
l_inst=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=T_final,PAS=pas_de_temps,),)

DEFLIST =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = l_inst),
                        ECHEC=_F(EVENEMENT     = 'ERREUR',
                                 ACTION        = 'DECOUPE',
                                 SUBD_METHODE  = 'AUTO',
                                 SUBD_PAS_MINI = 0.05),)
#
# A.3. Fonction du chargement
#
rampe=DEFI_FONCTION(NOM_PARA='INST',
                    VALE=(  0.0,   0.0,
                           60.0,   1.5E1,
                          120.0,   2.0E1,
                          180.0,   2.0E1,
                          240.0,   3.0E1,
                          300.0,   3.0E1,
                          360.0,   2.0E1,
                          420.0,   1.5E1,
                          T_final, 1.0E1,),
                    PROL_DROITE='CONSTANT',
                    PROL_GAUCHE='CONSTANT',)
#
###IMPR_FONCTION ( COURBE=_F(FONCTION=rampe,), FORMAT ='TABLEAU', )
###IMPR_FONCTION ( COURBE=_F(FONCTION=rampe,), FORMAT ='XMGRACE',PILOTE='POSTSCRIPT',UNITE=24, )
#
# A.4. Le materiau
#
acier=DEFI_MATERIAU(ELAS=_F(E=210000.0,NU=0.3,),
                    ECRO_LINE=_F(D_SIGM_EPSI=2.E3,  SY=235.))
#
# A.5. La fonction nulle
#
F0=DEFI_CONSTANTE(VALE=0.)
#
# B. La frontiere
#
maill_fr=LIRE_MAILLAGE(UNITE=19,FORMAT='MED',NOM_MED='maill_fr',INFO_MED=1)
#
MACR_INFO_MAIL( MAILLAGE=maill_fr,
                NOMBRE='OUI',
                QUALITE='OUI',
                TAILLE='OUI',
                CONNEXITE='OUI'
               )
#
#    On imprime ce maillage pour pouvoir l'utiliser dans le cas_test de HOMARD sfr_1d_poignee_d2
###IMPR_RESU(FORMAT='MED',RESU=_F(MAILLAGE=maill_fr),);
#
# C. Dimensionnement des tableaux des concepts maillage
#    On affecte les valeurs a None (peu importe)
#    Les tableaux de concepts n existent pas vu d aster a l execution.
#    accas renomme mode[num_calc] en mode_num_calc. attention : en cas de reprise, c est
#    le concept mode_num_calc qui est connu dans la base. De plus, il faut etre
#    vigilant a ne pas depasser les huit caracteres pour le nom du concept,
#    underscore num_calc compris.
#    Remarque : on pourrait choisir des concepts a usage unique que l'on detruit
#               a la fin de chaque sequence de calcul
#
Mad2=[None]*nbre_calcul
mode=[None]*nbre_calcul
chma=[None]*nbre_calcul
bloq=[None]*nbre_calcul
pres=[None]*nbre_calcul
resu=[None]*nbre_calcul
depl=[None]*nbre_calcul
#
# D. Lecture du maillage initial et passage en degre 2
#
Maill_d1=LIRE_MAILLAGE(FORMAT='MED',NOM_MED='maill_00',INFO_MED=1)
#
Mad2[0]=CREA_MAILLAGE( MAILLAGE = Maill_d1,LINE_QUAD = _F(TOUT='OUI'))
#
# E. Calcul des nbre_calcul situations
#
for num_calc in range(nbre_calcul):
#
# E.1. Modele mecanique
#
  mode[num_calc]=AFFE_MODELE(MAILLAGE=Mad2[num_calc],
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='MECANIQUE',
                         MODELISATION='C_PLAN',),);
#
# E.2. Le MODI_MAILLAGE n'est utile que la premiere fois, car HOMARD conserve
#      les orientations
#
  if ( num_calc == 0 ) :
#
    Mad2[num_calc]=MODI_MAILLAGE(reuse =Mad2[num_calc],
             MAILLAGE=Mad2[num_calc],
             ORIE_PEAU_2D=_F(GROUP_MA=( 'ENCASTR',
                                        'SUP_1', 'SUP_2', 'SUP_3', 'SUP_4', 'SUP_5', 'SUP_6', 'SUP_7', 'SUP_8',
                                        'INF_1', 'INF_2', 'INF_3', 'INF_4', 'INF_5', 'INF_6', 'INF_7', 'INF_8',
                                        'T1', 'T2', 'T3', 'T4',
                                        'U1', 'U2',
                                        'EXT',
                                        'PRES1', 'PRES2', ),),
             );
#
# E.3. Mise en place des materiaux
#
  chma[num_calc]=AFFE_MATERIAU(MAILLAGE=Mad2[num_calc],
                     AFFE=_F(GROUP_MA='SOLIDE',MATER=acier,),);
#
# E.4. Les chargements
#    Face          |         Chargement
# ------------------------------------------------------------
#  Laterale gauche | Deplacement nul
#  Superieure      | Contrainte imposee evoluant dans le temps
#  Reste           | Contrainte nulle
#
  bloq[num_calc]=AFFE_CHAR_MECA(MODELE=mode[num_calc],
                         FACE_IMPO=_F(GROUP_MA='ENCASTR',
                                      DX=0.0,
                                      DY=0.0,),);
  pres[num_calc]=AFFE_CHAR_MECA_F(MODELE=mode[num_calc],
                      PRES_REP=(_F(GROUP_MA=( 'SUP_1', 'SUP_2', 'SUP_3', 'SUP_4', 'SUP_5', 'SUP_6', 'SUP_7', 'SUP_8',
                                              'INF_1', 'INF_2', 'INF_3', 'INF_4', 'INF_5', 'INF_6', 'INF_7', 'INF_8',
                                              'T1', 'T2', 'T3', 'T4',
                                              'U1', 'U2',
                                              'EXT',
                                              'PRES2',),
                                    PRES=F0,),
                                _F(GROUP_MA=('PRES1',),PRES=rampe,),),);
#
# E.5. Calcul non-lineaire en Von Mises
#
  if ( num_calc == nbre_calcul - 1 ) :
    inst_fin = T_final
  else :
    inst_fin = (num_calc+1)*duree
#
# E.5.1. Au premier passage, on part d'un etat initial nul
# --------------------------------------------------------
  #if ( num_calc == 0 ) :
  if ( num_calc >= 0 ) :
#
    resu[num_calc]=STAT_NON_LINE(MODELE=mode[num_calc],
                        CHAM_MATER=chma[num_calc],
                        EXCIT=(_F(CHARGE=bloq[num_calc],),
                               _F(CHARGE=pres[num_calc],),),
                        NEWTON=_F(REAC_ITER=1),
                        CONVERGENCE=_F(
                                        ITER_GLOB_MAXI=20,
                                        ITER_GLOB_ELAS=25),
                        COMPORTEMENT=_F(RELATION='VMIS_ISOT_LINE',),
                        INCREMENT=_F(LIST_INST=DEFLIST,
                                     INST_FIN=inst_fin,),);
  #else :
  if ( num_calc > 0 ) :
#
# E.5.2. Aux passages suivants :
# ------------------------------
    DETRUIRE(INFO=1,CONCEPT = _F(NOM = (DEPL_N,),),);
    ##DETRUIRE(INFO=1,CONCEPT = _F(NOM = (DEPL_N, SIGMA_G,),),);
#
# E.6. Extraction du deplacement final
#
  if ( num_calc == nbre_calcul - 1 ) :
#
    depl[num_calc]=POST_RELEVE_T(ACTION=_F(INTITULE='deplacement au bord',
                                  GROUP_NO='A1',
                                  RESULTAT=resu[num_calc],
                                  NOM_CHAM='DEPL',
                                  TOUT_CMP='OUI',
                                  OPERATION='EXTRACTION',),);

    ###IMPR_TABLE(FORMAT_R='1PF14.7',TABLE=depl[num_calc],NOM_PARA=('INST','DX','DY',),)
    ###IMPR_TABLE(FORMAT='XMGRACE',PILOTE='POSTSCRIPT',UNITE=31,TABLE=depl[num_calc],NOM_PARA=('INST','DX',),)
    ###IMPR_TABLE(FORMAT='XMGRACE',PILOTE='POSTSCRIPT',UNITE=32,TABLE=depl[num_calc],NOM_PARA=('INST','DY',),)
    ###IMPR_TABLE(FORMAT='XMGRACE',UNITE=41,TABLE=depl[num_calc],NOM_PARA=('INST','DX',),MARQUEUR=0,)
    ###IMPR_TABLE(FORMAT='XMGRACE',UNITE=42,TABLE=depl[num_calc],NOM_PARA=('INST','DY',),MARQUEUR=0,)
#
# E.7. Adaptation du maillage de num_calc vers num_calc+1, sauf a la toute fin
#
  if ( num_calc < nbre_calcul - 1 ) :
#
# E.7.1. Calcul de l'indicateur d'erreur

    resu[num_calc]=CALC_ERREUR(reuse =resu[num_calc],
                      OPTION=('ERME_ELEM',),
                      RESULTAT=resu[num_calc],
                      INST=inst_fin,);
#
# E.7.2. Impression du resultat pour utilisation dans le cas_test de HOMARD sfr_1d_poignee_d2
#
    ##IMPR_RESU(FORMAT='MED',RESU=_F(RESULTAT=resu[num_calc],NOM_CHAM=('DEPL',),INST=inst_fin,),);
    ##IMPR_RESU(FORMAT='MED',RESU=_F(RESULTAT=resu[num_calc],NOM_CHAM=('SIEF_ELGA','VARI_ELGA',),INST=inst_fin,),);
    ##IMPR_RESU(FORMAT='MED',RESU=_F(RESULTAT=resu[num_calc],NOM_CHAM='ERME_ELEM',NOM_CMP='ERREST',INST=inst_fin,),);
#
# E.7.3. Adaptation vraie
#      ATTENTION : on est dans le cas particulier d une macro commande
#      avec un concept sortant nomme derriere un mot cle simple
#      ( MAILLAGE_NP1 ). Or les tableaux de concepts n existent pas vu
#      d aster a l execution. Accas renomme M[num_calc] en M_num_calc. Il faut donc
#      evaluer la chaine de caractere CO('M_i') avec i=num_calc+1
#      Le format %d indique qu il doit evaluer l entier num_calc+1 donne
#      derriere le deuxieme % (FORMAT C++)
#
    Mad2[num_calc+1]=CO('Mad2_%02d' % (num_calc+1))
#
    if num_calc <= 10 :
      seuil = 0.03
    elif num_calc <= 20 :
      seuil = 0.02
    else :
      seuil = 0.01
    MACR_ADAP_MAIL( ADAPTATION= 'RAFFINEMENT',  #Le maillage est raffine en fonction du champ
                    MAILLAGE_N = Mad2[num_calc],     #Maillage a adapter
                    MAILLAGE_NP1 = Mad2[num_calc+1], #Maillage issu de l adaptation
                    DIAM_MIN = 0.00025, # Diametre minimal de maille = 1/80eme du rayon des percages internes
                    RESULTAT_N = resu[num_calc], #Resultat contenant le champ de pilotage de l'adaptation
                    NOM_CHAM = 'ERME_ELEM',
                    NOM_CMP = 'ERREST' ,
                    INST=inst_fin,
                    CRIT_RAFF_PE = seuil, #Critere de raffinement defini par une proportion de mailles
                    MAILLAGE_FRONTIERE = maill_fr, #Maillage de la frontiere courbe a suivre
                    MAJ_CHAM = ( _F( CHAM_MAJ   = CO('DEPL_N',),
                                     TYPE_CHAM = 'NOEU_DEPL_R',
                                     RESULTAT=resu[num_calc], NOM_CHAM   = 'DEPL',
                                     INST=inst_fin,),
                               ),
                  )
#####a reprendre quand ECLA_PG sera implante dans HOMARD
                                 ###_F( CHAM_MAJ   = CO('SIGMA_G'),
                                     ###TYPE_CHAM  = 'ELGA_SIEF_R',
                                     ###RESULTAT=resu[num_calc], NOM_CHAM   = 'SIEF_ELGA',
                                     ###INST=inst_fin,),
                    #QUALITE='OUI',
                    #TAILLE='OUI'
#
# F. Tests de non regression
#    On met volontairement en dur le nom du concept resultat. Cela permet de tester
#    que le mecanisme de nommage automatique n'a pas ete degrade.
#
if ( nbre_calcul >= 4 ) :
  ###IMPR_RESU(FORMAT='MED',RESU=_F(RESULTAT=resu[num_calc],NOM_CHAM=('DEPL',),INST=inst_fin,),);
  TEST_RESU(RESU=(
       _F(  RESULTAT = resu_3,    INST=T_test_resu,
            NOM_CHAM = 'DEPL',    GROUP_NO = 'A1',
            CRITERE = 'RELATIF',
            NOM_CMP = 'DX',       VALE_CALC =-3.89702904498E-05 ,),
       _F(  RESULTAT = resu_3,    INST=T_test_resu,
            NOM_CHAM = 'DEPL',    GROUP_NO = 'A1',
            CRITERE = 'RELATIF',
            NOM_CMP = 'DY',       VALE_CALC =-0.00013954932828 ,))
          )
#
FIN()
