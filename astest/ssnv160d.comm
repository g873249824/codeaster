# MODIF  DATE 07/10/2005   AUTEUR CIBHHPD L.SALMONA 
# RESPONSABLE JOUMANA J. EL GHARIB
# TITRE TEST HYDROSTATIQUE  CAM_CLAY en AXISYMETRIQUE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
#

DEBUT(   CODE=_F( NOM = 'SSNV160D',NIV_PUB_WEB='INTERNET')   )

#
#

#   OPERATIONS SUR LE MAILLAGE
#
#


PRE_GIBI();

MAIL=LIRE_MAILLAGE();

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_NO=(_F(GROUP_MA='AB',),
                               _F(GROUP_MA='BC',),
                               _F(GROUP_MA='CD',),
                               _F(GROUP_MA='DA',),),);

MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=_F(TOUT='OUI',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='AXIS',),);
                           
MAIL = MODI_MAILLAGE(reuse=MAIL,
                     MAILLAGE=MAIL,
                     MODELE=MODELE,
                     ORIE_PEAU_2D=(_F(GROUP_MA='BC',),
                                   _F(GROUP_MA='CD',),),);                               
                           
####################################
############################################

#  LISTE DES INSTANTS DE CALCUL
#


LI1=DEFI_LIST_REEL(DEBUT=0.0,
                   INTERVALLE=(_F(JUSQU_A=100.0,
                                  NOMBRE=1,),
                               _F(JUSQU_A=600.0,
                                  NOMBRE=5,),
                               _F(JUSQU_A=1000.0,
                                  NOMBRE=4,),
                               _F(JUSQU_A=5000.0,
                                  NOMBRE=10,),
                               _F(JUSQU_A=8000.0,
                                  NOMBRE=30,),
                               _F(JUSQU_A=9000.0,
                                  NOMBRE=20,),
                               _F(JUSQU_A=1.E4,
                                  NOMBRE=20,),),);

############################################

#  CARACTERISTIQUES DU MATERIAU
#

MATER0=DEFI_MATERIAU(ELAS=_F(E=4.2000000E7,
                                 NU=0.285),);


MATER=DEFI_MATERIAU(ELAS=_F(E=4.2000000E7,
                            NU=0.285,
                            ALPHA=0,),
                    CAM_CLAY=_F(PORO=0.14,
                                LAMBDA=0.25,
                                KAPA=0.05,           
                                M=0.9,
                                PRES_CRIT=3.E5,
                                PA=1.E5,),);

CHM0=AFFE_MATERIAU(MAILLAGE=MAIL,
                  AFFE=_F(TOUT='OUI',
                          MATER=MATER0,),);

CHM=AFFE_MATERIAU(MAILLAGE=MAIL,
                      AFFE=_F(TOUT='OUI',
                              MATER=MATER,),);

############################################

#  CHARGEMENT
#

PRESS1=DEFI_FONCTION(NOM_PARA='INST',
                    NOM_RESU='PRESSION',
                    VALE=
                    (0.0,0.0,
                    100.0,100000.0),
                    PROL_DROITE='CONSTANT',
                    PROL_GAUCHE='EXCLU',);

PRESS2=DEFI_FONCTION(NOM_PARA='INST',
                    NOM_RESU='PRESSION',
                    VALE=
                    (0.0,0.0,
                    100.0,100000.0,
                    600.0,320000.0,
                    1000.0,350000.0,
                    5000.0,500000.0,
                    8000.0,800000.0,
                    9000.0,600000.0,
                    10000.0,100000.0),
                    PROL_DROITE='CONSTANT',
                    PROL_GAUCHE='EXCLU',);


############################################

#  CONDITIONS AUX LIMITES ET CHARGEMENT
#

CHA0=AFFE_CHAR_MECA(MODELE=MODELE,
                    DDL_IMPO=(_F(GROUP_NO='AB',
                                 DY=0.0,),
                              _F(GROUP_NO='DA',
                                 DX=0.0,),),);

CHA1=AFFE_CHAR_MECA_F(MODELE=MODELE,
                     PRES_REP =_F(GROUP_MA=('BC','CD'),
                                  PRES=PRESS1,),
                                  VERI_NORM='OUI');
                                  
CHA2=AFFE_CHAR_MECA_F(MODELE=MODELE,
                      PRES_REP=_F(GROUP_MA=('BC','CD'),
                                  PRES=PRESS2,),
                                  VERI_NORM='OUI');


                              
############################################

#  CALCUL ELASTIQUE NECESSAIRE 
#
                              
RESU1=STAT_NON_LINE(MODELE=MODELE,
                    CHAM_MATER=CHM0,
                    EXCIT=(_F(CHARGE=CHA0,),
                           _F(CHARGE=CHA1,),),
                    COMP_ELAS=_F(RELATION='ELAS',),
                    INCREMENT=_F(LIST_INST=LI1,
                                 INST_INIT=0.0,
                                 INST_FIN=1.E2,),
                    NEWTON=_F(MATRICE='ELASTIQUE',
                              REAC_ITER=20,),
                    CONVERGENCE=_F(ITER_GLOB_MAXI=10),
                    SOLVEUR=_F(METHODE='LDLT',),);

############################################
#
#  EXTRACTION DES CONTRAINTES
#

RES1=CREA_CHAMP(TYPE_CHAM='ELGA_SIEF_R',
                OPERATION='EXTR',
                RESULTAT=RESU1,
                NOM_CHAM='SIEF_ELGA',
                INST=100.0,);

#
############################################
#
#   CHARGE
#
RESU1=STAT_NON_LINE(reuse = RESU1,
                      MODELE=MODELE,
                      CHAM_MATER=CHM,
                      EXCIT=(_F(CHARGE=CHA0,),
                             _F(CHARGE=CHA2,),),
                      COMP_INCR=_F(RELATION='CAM_CLAY',
                                   ITER_INTE_MAXI=50,),
                      PARM_THETA=0.57,
                      ETAT_INIT=_F(SIGM=RES1,),
                      INCREMENT=_F(LIST_INST=LI1,
                                   INST_INIT=100.0,
                                   INST_FIN=8000.,),
                      NEWTON=_F(
                                MATRICE='TANGENTE',
                                REAC_ITER=2,
                                ),
                      CONVERGENCE=_F(ITER_GLOB_MAXI=40,
                                     RESI_GLOB_RELA=1.E-06,),
                      SOLVEUR=_F(METHODE='LDLT',),);
                      

############################################
#
#  DECHARGE 
#

RESU1=STAT_NON_LINE(reuse=RESU1,
                     MODELE=MODELE,
                     CHAM_MATER=CHM,
                      EXCIT=(_F(CHARGE=CHA0,),
                             _F(CHARGE=CHA2,),),
                      COMP_INCR=_F(RELATION='CAM_CLAY',
                                   ITER_INTE_MAXI=50,
                                   ITER_INTE_PAS=-10),
                      PARM_THETA=0.57,
                      ETAT_INIT=_F(EVOL_NOLI=RESU1,),
                      INCREMENT=_F(LIST_INST=LI1,
                                   INST_INIT= 8000.0,
                                    ),
                      NEWTON=_F(
                                PREDICTION='ELASTIQUE',
                                MATRICE='TANGENTE',
                                REAC_ITER=1,
                                ),
                      CONVERGENCE=_F(ITER_GLOB_MAXI=200,
                                     RESI_GLOB_RELA=1.E-06),
                      SOLVEUR=_F(METHODE='LDLT',),);


TDEP=(5000.,6500.,7000.,7500.,8000.,8500.,9000.,9500.)

RESU1=CALC_ELEM(  reuse=RESU1, 
                  OPTION=('SIEF_ELNO_ELGA',
                          'VARI_ELNO_ELGA',
                          'EPSI_ELNO_DEPL',
                          'EPSP_ELNO'),
                  RESULTAT=RESU1
                        )
RESU1=CALC_NO(  reuse=RESU1,
                OPTION=('SIEF_NOEU_ELGA','VARI_NOEU_ELGA',
                        'EPSI_NOEU_DEPL'),
                RESULTAT=RESU1 
                        )
#
#-------------------------
#    TEST_RESU 
#-------------------------

TEST_RESU(RESU=(

# DEFORMATION EPXX
                _F(    RESULTAT = RESU1,   
                       REFERENCE = 'ANALYTIQUE', 
                       GROUP_NO = 'C',      
                       NOM_CHAM = 'EPSI_NOEU_DEPL',    
                       NOM_CMP = 'EPXX',     
                       INST=5000.,  
                       PRECISION = 1.E-5,   
                       VALE = -2.30686E-02,        
                     ),

                _F(    RESULTAT = RESU1,    
                       REFERENCE = 'ANALYTIQUE', 
                       GROUP_NO = 'C',      
                       NOM_CHAM = 'EPSI_NOEU_DEPL',    
                       NOM_CMP = 'EPXX',     
                       INST=6000.,  
                       PRECISION = 1.E-5,   
                       VALE = -2.56819E-02,        
                     ),

                _F(    RESULTAT = RESU1,    
                       REFERENCE = 'ANALYTIQUE', 
                       GROUP_NO = 'C',      
                       NOM_CHAM = 'EPSI_NOEU_DEPL',    
                       NOM_CMP = 'EPXX',     
                       INST=6500.,  
                       PRECISION = 1.E-5,   
                       VALE = -3.14183E-02,        
                     ),

                _F(    RESULTAT = RESU1,    
                       REFERENCE = 'ANALYTIQUE', 
                       GROUP_NO = 'C',      
                       NOM_CHAM = 'EPSI_NOEU_DEPL',    
                       NOM_CMP = 'EPXX',     
                       INST=7000.,  
                       PRECISION = 1.E-5,   
                       VALE = -3.67294E-02,        
                     ),

                _F(    RESULTAT = RESU1,    
                       REFERENCE = 'ANALYTIQUE', 
                       GROUP_NO = 'C',      
                       NOM_CHAM = 'EPSI_NOEU_DEPL',    
                       NOM_CMP = 'EPXX',     
                       INST=7500.,  
                       PRECISION = 1.E-5,   
                       VALE = -4.16738E-02,        
                     ),

                _F(    RESULTAT = RESU1,    
                       REFERENCE = 'ANALYTIQUE', 
                       GROUP_NO = 'C',      
                       NOM_CHAM = 'EPSI_NOEU_DEPL',    
                       NOM_CMP = 'EPXX',     
                       INST=8000.,  
                       PRECISION = 1.E-5,   
                       VALE = -4.62991E-02,        
                     ),

                _F(    RESULTAT = RESU1,    
                       REFERENCE = 'ANALYTIQUE', 
                       GROUP_NO = 'C',      
                       NOM_CHAM = 'EPSI_NOEU_DEPL',    
                       NOM_CMP = 'EPXX',     
                       INST=9000.,  
                       PRECISION = 1.E-5,   
                       VALE = -4.21757E-02,        
                     ),

                _F(    RESULTAT = RESU1,    
                       REFERENCE = 'ANALYTIQUE', 
                       GROUP_NO = 'C',      
                       NOM_CHAM = 'EPSI_NOEU_DEPL',    
                       NOM_CMP = 'EPXX',     
                       INST=10000.,  
                       PRECISION = 1.E-5,   
                       VALE = -1.64938E-02,        
                     ),),),

FIN();
#
#
