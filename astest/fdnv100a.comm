# MODIF  DATE 29/11/2011   AUTEUR DURAND C.DURAND 
# TITRE  BALLOTTEMENT D UNE CUVE REMPLIE D EAU AVEC PAROI FLEXIBLE
# fdnv100a.para = tps_job 510 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT( CODE = _F( NOM = 'FDNV100A', NIV_PUB_WEB = 'INTERNET' ,
                  VISU_EFICAS='OUI',) );
#
#  Modelisation de la plaque flexible par COQUE_3D
#  Maillage_interface :  ASTER pour IFLUSTRU
#  DYNA_NON_LINE
#  Modele :              2D_FLUI_PESA, 3D_FLUIDE, FLUI_STRU, COQUE_3D
#  Materiau :            FLUIDE, SOLIDE
#  CL :                  DDL_IMPO, VITE_FACE
#
#
#
#-----------------------------------------------------------------------------------
#
#  CONVERSION DU MAILLAGE GIBI AU FORMAT ASTER
#
#-----------------------------------------------------------------------------------
#
PRE_GIBI();
#
MAILLA1=LIRE_MAILLAGE( );
#
MAILLA2=CREA_MAILLAGE(MAILLAGE=MAILLA1,
                      CREA_POI1=_F(NOM_GROUP_MA='POI1',
                                   GROUP_NO='Q',),);
#
#-----------------------------------------------------------------------------------
#
#  COMPLETION DU MAILLAGE
#
#-----------------------------------------------------------------------------------
#
MAILLA2=DEFI_GROUP(reuse =MAILLA2,
                   MAILLAGE=MAILLA2,
                   CREA_GROUP_NO=(_F(OPTION='PLAN',
                                     NOM='PLANBAS',
                                     POINT=(0.0,0.0,0.0,),
                                     VECT_NORMALE=(0.0,0.0,1.0,),
                                     PRECISION=0.001,),
                                  _F(GROUP_MA='PLAQUE',),
                                  _F(GROUP_MA='FOND',),
                                  _F(INTERSEC=('PLAQUE','PLANBAS',),
                                     NOM='FONDP',),
                                  _F(GROUP_MA='FONDS',),),
                   INFO=1,);
#
#-----------------------------------------------------------------------------------
#
#  AFFECTATION DES DIFFERENTS MODELES
#
#-----------------------------------------------------------------------------------
#
MODELE=AFFE_MODELE(MAILLAGE=MAILLA2,
                   VERIF='MAILLE',
                   AFFE=(_F(GROUP_MA='POI1',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_TR',),
                           _F(GROUP_MA=('SURFLIBR',),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='2D_FLUI_PESA',),
                         _F(GROUP_MA=('FLUID1','FLUID2','FACELATE',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D_FLUIDE',),
                         _F(GROUP_MA=('IFLUSTRU',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='FLUI_STRU',),
                         _F(GROUP_MA=('PLAQUE',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D',),
                         _F(GROUP_MA=('FONDS',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DKT',),),);
#
#-----------------------------------------------------------------------------------
#
#  DONNEES MATERIAUX ET CARACTERISTIQUES GEOMETRIQUES
#
#-----------------------------------------------------------------------------------
#
DURALU=DEFI_MATERIAU(ELAS=_F(E=62430000000.0,
                             NU=0.35,
                             RHO=2787.0,),);
#
DURALU2=DEFI_MATERIAU(ELAS=_F(E=62430000000000.0,
                             NU=0.35,
                             RHO=2.0,),);
#
EAU=DEFI_MATERIAU(FLUIDE=_F(RHO=1000.0,
                            CELE_R=1500.0,),);
#
CHMAT=AFFE_MATERIAU(MAILLAGE=MAILLA2,
                    AFFE=(_F(GROUP_MA=('FLUID1','FLUID2',
                    'FACELATE','SURFLIBR','IFLUSTRU',),
                             MATER=EAU,),
                          _F(GROUP_MA=('PLAQUE','POI1',),
                             MATER=DURALU,),
                          _F(GROUP_MA=('FONDS',),
                             MATER=DURALU2,),),);
#
CARAELEM=AFFE_CARA_ELEM(MODELE=MODELE,
                        DISCRET=(
                                _F(GROUP_MA='POI1',
                                   CARA='M_TR_D_N',
                                   VALE=(0.05896,3.21e-06,3.21e-06,
                                   3.21e-06,0.0,0.0,0.0,0.0,0.0,
                                   0.0,),),
                                _F(GROUP_MA='POI1',
                                   CARA='K_TR_D_N',
                                   VALE=(0.0,0.0,0.0,0.0,0.0,0.0,),),
),
                        COQUE=_F( GROUP_MA = 'FONDS',
                        EPAIS = 0.00001 ),);
#
TABL_MAS=POST_ELEM(MASS_INER= _F(GROUP_MA=('FLUID1','FLUID2','FACELATE','IFLUSTRU','PLAQUE','FONDS',)),
                   MODELE=MODELE, CHAM_MATER=CHMAT, CARA_ELEM=CARAELEM,);
#
#-----------------------------------------------------------------------------------
#
#  CONDITIONS LIMITES CHARGEMENT
#
#-----------------------------------------------------------------------------------
#
CONDLIM=AFFE_CHAR_MECA(MODELE=MODELE,
                       DDL_IMPO=(_F(GROUP_NO=('FONDS','FONDP',),
                                    DY=0.0,
                                    DZ=0.0,),),
                       VITE_FACE=_F(GROUP_MA='FACELATE',
                                    VNOR=0.0,),);
#
PESA=AFFE_CHAR_MECA(MODELE=MODELE,
                    PESANTEUR=_F(GRAVITE=9.81,
                                 DIRECTION=(0.,0.,-1.,),),);
#
FREQ = 1.7704;
#
LFONC=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=10.0,
                                   PAS=0.01,),);
#
FONC = FORMULE(NOM_PARA='INST',VALE='(0.001)*sin(2*pi*FREQ*INST)');
#
DEPLX=CALC_FONC_INTERP(FONCTION=FONC,
                       NOM_PARA='INST',
                       LIST_PARA=LFONC,);
#
CHARG_SE=AFFE_CHAR_MECA_F(MODELE=MODELE,
                          DDL_IMPO=_F(GROUP_NO=('FONDS','FONDP',),
                                      DX=DEPLX,),);
#
#-----------------------------------------------------------------------------------
#
#  INSTANTS DE CALCUL
#
#-----------------------------------------------------------------------------------
#
TPSFIN = 2.
#
LINST=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=(_F(JUSQU_A=TPSFIN,
                                    PAS=0.1,),),
                     INFO=1,);
#
LARCH=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=(_F(JUSQU_A=TPSFIN,
                                    PAS=0.2,),),);
#
LCAST=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=(_F(JUSQU_A=TPSFIN,
                                    PAS=0.2,),),);
#
L_OBS=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=(_F(JUSQU_A=TPSFIN,
                                    PAS=0.2,),),);
#
#-----------------------------------------------------------------------------------
#
#  CALCUL DES CONDITIONS INITIALES
#
#-----------------------------------------------------------------------------------
#
CONDSTA=AFFE_CHAR_MECA(MODELE=MODELE,
                       DDL_IMPO=(_F(GROUP_NO=('FONDS','FONDP',),
                                    DX=0.0,
                                    DY=0.0,
                                    DZ=0.0,),),
                       VITE_FACE=_F(GROUP_MA='FACELATE',
                                    VNOR=0.0,),);
#
MACRO_MATR_ASSE (MODELE = MODELE,
                  CHAM_MATER=CHMAT,
                  CARA_ELEM=CARAELEM,
                  CHARGE     = (CONDSTA, PESA,),
                  NUME_DDL   = CO('NUMSTA'),
                  SOLVEUR=_F(METHODE='MULT_FRONT',RENUM='METIS'),
                  MATR_ASSE=(
                   _F( MATRICE= CO('RIGSTA'), OPTION= 'RIGI_MECA'),
                   _F( MATRICE= CO('MASSTA'), OPTION= 'MASS_MECA'),
                            ),
                             );
#
RIGICOMB = COMB_MATR_ASSE(
         COMB_R=(
               _F( MATR_ASSE= RIGSTA, COEF_R= 1.),
               _F( MATR_ASSE= MASSTA, COEF_R= -0.001),
                ),
                         );
#
#-----------------------------------------------------------------------------------
#
#  CALCULS ELEMENTAIRES DU CHARGEMENT
#
#-----------------------------------------------------------------------------------
#
E_0    = CALC_VECT_ELEM(CARA_ELEM=CARAELEM, CHAM_MATER=CHMAT,
            OPTION='CHAR_MECA', CHARGE=(CONDSTA, PESA,),
                         );
#
#-----------------------------------------------------------------------------------
#
#  ASSEMBLAGE DU CHARGEMENT
#
#-----------------------------------------------------------------------------------
#
F_0      = ASSE_VECTEUR(VECT_ELEM= E_0    , NUME_DDL= NUMSTA  );
#
#-----------------------------------------------------------------------------------
#
#  ON RESOUT LE CAS DE CHARGE
#
#-----------------------------------------------------------------------------------
#
RIGICOMB = FACTORISER(reuse=RIGICOMB, MATR_ASSE= RIGICOMB,
                     STOP_SINGULIER= 'NON');
DEP0    = RESOUDRE(MATR= RIGICOMB, CHAM_NO=F_0);
#
VIT0    = CREA_CHAMP(   OPERATION='AFFE',
                        TYPE_CHAM='NOEU_DEPL_R',
                        PROL_ZERO='NON',
                        MODELE=MODELE,
                        AFFE=( _F( TOUT='OUI',
                                   NOM_CMP = ('DX', 'DY', 'DZ',),
                                   VALE = (  0.0,  0.0,  0.0,)),
                    ));
#
#-----------------------------------------------------------------------------------
#
#  CALCUL DYNAMIQUE NON LINEAIRE
#
#-----------------------------------------------------------------------------------
#
RESU=DYNA_NON_LINE(MODELE=MODELE,
                   CHAM_MATER=CHMAT,
                   CARA_ELEM=CARAELEM,
                   EXCIT=(_F(CHARGE=CONDLIM,),
                          _F(CHARGE=PESA,),
                          _F(CHARGE=CHARG_SE,),),
                   COMP_INCR=_F(RELATION='ELAS',
                                DEFORMATION='PETIT',
                                TOUT='OUI',),
                   ETAT_INIT=_F(INST_ETAT_INIT=0.0, DEPL=DEP0, VITE=VIT0, ),
                   INCREMENT=_F(LIST_INST=LINST,),
                   SCHEMA_TEMPS=_F(SCHEMA='HHT',ALPHA=-0.3,
                                FORMULATION='DEPLACEMENT',),
                   NEWTON=_F(REAC_INCR=1,
                             MATRICE='TANGENTE',
                             REAC_ITER=1,),
                   SOLVEUR=_F(STOP_SINGULIER='NON',),
                   CONVERGENCE=_F(RESI_GLOB_RELA=1e-06,
                                  ITER_GLOB_MAXI=10,
                                  ARRET='OUI',),
                   ARCHIVAGE=_F(LIST_INST=LARCH,),
                   OBSERVATION=(_F(NOM_CHAM='ACCE',
                                   NOM_CMP=('DX','DY','DZ',),
                                   LIST_INST=L_OBS,
                                   PRECISION=1e-06,
                                   GROUP_NO=('P6','P12',)),),
                   RECH_LINEAIRE=_F(),
                   );
#
#-----------------------------------------------------------------------------------
#
#  RESULTATS : TEST DE NON REGRESSION
#
#-----------------------------------------------------------------------------------
#
#   VALEURS DE REFERENCE : ATER 7.03.06 AlphaServer
#
TEST_RESU(  RESU=_F(  RESULTAT = RESU,   NOM_CHAM = 'DEPL',   INST = 0.8E0,
            NOEUD = 'N145', NOM_CMP = 'DX',  VALE = 5.1624169321991E-04,
            PRECISION = 5.E-6, REFERENCE = 'NON_REGRESSION'))
#
TEST_RESU(  RESU=_F(  RESULTAT = RESU,   NOM_CHAM = 'DEPL',   INST = 1.4E0,
            NOEUD = 'N145', NOM_CMP = 'DX',  VALE = 1.4970110314375E-04 ,
            PRECISION = 7.E-6, REFERENCE = 'NON_REGRESSION'))
#
TEST_RESU(  RESU=_F(  RESULTAT = RESU,   NOM_CHAM = 'DEPL',   INST = 2.E0,
            NOEUD = 'N145', NOM_CMP = 'DX',  VALE = -2.3927413131721E-04 ,
            PRECISION = 5.E-6,  REFERENCE = 'NON_REGRESSION'))
#
TEST_RESU(  RESU=_F(  RESULTAT = RESU,   NOM_CHAM = 'DEPL',   INST = 1.E0,
            NOEUD = 'N3119', NOM_CMP = 'DX',  VALE = -9.9736285773823E-04 ,
            PRECISION = 5.E-6, REFERENCE = 'NON_REGRESSION'))
#
TEST_RESU(  RESU=_F(  RESULTAT = RESU,   NOM_CHAM = 'DEPL',   INST = 1.6E0,
            NOEUD = 'N3119', NOM_CMP = 'DX',  VALE = -8.7855056121762E-04 ,
            PRECISION = 5.E-6, REFERENCE = 'NON_REGRESSION'))
#
TEST_RESU(  RESU=_F(  RESULTAT = RESU,   NOM_CHAM = 'DEPL',   INST = 2.E0,
            NOEUD = 'N3119', NOM_CMP = 'DX',  VALE = -2.3929161952584E-04 ,
              PRECISION = 5.E-6, REFERENCE = 'NON_REGRESSION'))
#
FIN();
