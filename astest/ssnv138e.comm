# TITRE VERSION POUTRE DE LA PLAQUE EN GRANDES ROTATIONS SSNV138A
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

# MODELISATION E : IDEM. MODELISATION D, AVEC CRITERE DE RE-DECOUPAGE BASE SUR UN EVENT-DRIVEN

DEBUT(CODE=_F(NOM='SSNV138E',NIV_PUB_WEB='INTERNET',VISU_EFICAS='OUI'),DEBUG=_F(SDVERI='OUI'))

MA=LIRE_MAILLAGE(FORMAT='MED',UNITE=17,);

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI',),);

MA_SECT=LIRE_MAILLAGE(FORMAT='MED',UNITE=18,);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(GROUP_MA='AB',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='POU_D_TGM',),);

MATE=DEFI_MATERIAU(ELAS=_F(E=12.0E+6,
                           NU=0.3,),);

GF=DEFI_GEOM_FIBRE(
   SECTION =_F(GROUP_FIBRE='SECF',
             GROUP_MA_SECT='SECT',
             MAILLAGE_SECT=MA_SECT,
            COOR_AXE_POUTRE=(0.,0.,),),)

COMPF=DEFI_COMPOR(GEOM_FIBRE=GF,MATER_SECT=MATE,
                  MULTIFIBRE=_F(GROUP_FIBRE='SECF',MATER=MATE, RELATION='ELAS',),
                     )


CH_MAT=AFFE_MATERIAU(MAILLAGE=MA,
                  AFFE=_F(TOUT='OUI',MATER=MATE,),
                  AFFE_COMPOR=_F(TOUT='OUI',COMPOR=COMPF),
                 );


CARA=AFFE_CARA_ELEM(MODELE=MO,
                    POUTRE=_F(GROUP_MA='AB',
                              SECTION='GENERALE',
                              CARA=('A','IY','IZ','AY','AZ','JX','JG',),
                              VALE=(0.1,0.00833333333333,8.33333333333e-05,1.2,1.2,0.00033333333333333,0.0,),),
                    ORIENTATION=_F(GROUP_MA='AB',
                                   CARA='ANGL_VRIL',
                                   VALE=0.0,),
                      GEOM_FIBRE=GF,
                      MULTIFIBRE=_F(GROUP_MA='AB',
                                   GROUP_FIBRE='SECF'),);

CL=AFFE_CHAR_MECA(MODELE=MO,
                  DDL_IMPO=(_F(GROUP_NO='PA',
                               DX=0.,
                               DY=0.,
                               DRX=0.,
                               DRY=0.,
                               DRZ=0.,),
                            _F(GROUP_NO='AB',
                               DZ=0.,),),);

MOMENT=AFFE_CHAR_MECA(MODELE=MO,
                      FORCE_NODALE=_F(GROUP_NO='PB',
                                      MZ=100.0,),);

MOMENT_F=DEFI_FONCTION(NOM_PARA='INST',
                       VALE=(0.0,0.0,10.0,10.0,),);

tfin = 6.0;


TEMPS=DEFI_LIST_REEL(DEBUT=0.,
                     INTERVALLE=(
                             _F( JUSQU_A =  0.005,   NOMBRE = 1),
                             _F( JUSQU_A =  0.3,   NOMBRE = 1),
                             _F( JUSQU_A =  0.6,   NOMBRE = 1),
                             _F( JUSQU_A =  1.0,   NOMBRE = 1),
                             _F( JUSQU_A =  3.0,   NOMBRE = 1),
                             _F( JUSQU_A =  6.0,   NOMBRE = 1),
                             ),
                           );

# gestion manuelle
DEFLIST = DEFI_LIST_INST(DEFI_LIST=_F(METHODE   ='MANUEL',
                                      LIST_INST = TEMPS, ),
                         ECHEC=(
                                _F(EVENEMENT='DELTA_GRANDEUR',
                                   VALE_REF=5.e-2,
                                   NOM_CHAM='DEPL',
                                   NOM_CMP ='DX',
                                   SUBD_NIVEAU=10),
                                _F(EVENEMENT='DELTA_GRANDEUR',
                                   VALE_REF=5.e-2,
                                   NOM_CHAM='DEPL',
                                   NOM_CMP ='DY'),
                               )
                         )


# gestion auto
# DEFLIST = DEFI_LIST_INST(DEFI_LIST=_F(METHODE   ='AUTO',
#                                       LIST_INST = TEMPS,
#                                       PAS_MINI  = 1.e-10),
#                          ADAPTATION=_F(PCENT_AUGM=50.0),
#                          )


RESO=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=CH_MAT,
                   CARA_ELEM=CARA,
                   EXCIT=(_F(CHARGE=CL,),
                          _F(CHARGE=MOMENT,
                             FONC_MULT=MOMENT_F,),),
                   COMP_INCR=_F(RELATION='MULTIFIBRE',DEFORMATION='GROT_GDEP',),
                   INCREMENT=_F(LIST_INST=DEFLIST,
                                INST_FIN=tfin,),
                   NEWTON=_F(MATRICE='TANGENTE',
                             REAC_ITER=1,),
                   );

U_CALC=RECU_FONCTION(RESULTAT=RESO,
                     TOUT_ORDRE='OUI',
                     NOM_CHAM='DEPL',
                     NOM_CMP='DX',
                     GROUP_NO='PB',);

V_CALC=RECU_FONCTION(RESULTAT=RESO,
                     TOUT_ORDRE='OUI',
                     NOM_CHAM='DEPL',
                     NOM_CMP='DY',
                     GROUP_NO='PB',);

DRZ_CAL=RECU_FONCTION(RESULTAT=RESO,
                      TOUT_ORDRE='OUI',
                      NOM_CHAM='DEPL',
                      NOM_CMP='DRZ',
                      GROUP_NO='PB',);

DRZ_CALC=CALC_FONCTION(COMB=_F(FONCTION=DRZ_CAL,
                               COEF=-1.0,),);
#Test sur la rotation autour de Z de l'extremite libre

TEST_FONCTION(VALEUR=_F(VALE_CALC=-0.300154577457,
                        VALE_REFE=-0.29999999999999999,
                        VALE_PARA=0.29999999999999999,
                        REFERENCE='ANALYTIQUE',
                        NOM_PARA='INST',
                        FONCTION=DRZ_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=-0.600239570384,
                        VALE_REFE=-0.59999999999999998,
                        VALE_PARA=0.59999999999999998,
                        REFERENCE='ANALYTIQUE',
                        NOM_PARA='INST',
                        FONCTION=DRZ_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=-1.00022468061,
                        VALE_REFE=-1.0,
                        VALE_PARA=1.0,
                        REFERENCE='ANALYTIQUE',
                        NOM_PARA='INST',
                        FONCTION=DRZ_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=-2.99715685808,
                        VALE_REFE=-3.0,
                        VALE_PARA=3.0,
                        REFERENCE='ANALYTIQUE',
                        NOM_PARA='INST',
                        FONCTION=DRZ_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=-5.98009676899,
                        VALE_REFE=-6.0,
                        VALE_PARA=6.0,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=5.0000000000000001E-3,
                        NOM_PARA='INST',
                        FONCTION=DRZ_CALC,),
              )

# REFERENCE ANALYTIQUE

TPS_CALC=DEFI_LIST_REEL(DEBUT=0.005,
                        INTERVALLE=_F(JUSQU_A=tfin,
                                      PAS=0.005,),);

U_REFE = FORMULE(VALE='10*(sin(INST)/INST-1)',
                 NOM_PARA='INST',);

V_REFE = FORMULE(VALE='10*(1-cos(INST))/INST',
                 NOM_PARA='INST',);

U_REF_FO=CALC_FONC_INTERP(FONCTION=U_REFE,
                          LIST_PARA=TPS_CALC,
                          PROL_GAUCHE='LINEAIRE',);

V_REF_FO=CALC_FONC_INTERP(FONCTION=V_REFE,
                          LIST_PARA=TPS_CALC,
                          PROL_GAUCHE='LINEAIRE',);
#Calcul des valeurs analytiques aux instants choisis
INST1 = 0.3;

U1 = 10*(sin(INST1)/INST1-1);

V1 = 10*(1-cos(INST1))/INST1;

INST2 = 0.6;

U2 = 10*(sin(INST2)/INST2-1);

V2 = 10*(1-cos(INST2))/INST2;

INST3 = 3.0;

U3 = 10*(sin(INST3)/INST3-1);

V3 = 10*(1-cos(INST3))/INST3;

INST4 = 6.0;

U4 = 10*(sin(INST4)/INST4-1);

V4 = 10*(1-cos(INST4))/INST4;

#Test sur le deplacement l'extremite libre

TEST_FONCTION(VALEUR=_F(VALE_CALC=-0.151368010518,
                        VALE_REFE=-0.14932644462201439,
                        CRITERE='RELATIF',
                        VALE_PARA=0.29999999999999999,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=0.02,
                        NOM_PARA='INST',
                        FONCTION=U_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=-0.592610242956,
                        VALE_REFE=-0.58929211008274307,
                        CRITERE='RELATIF',
                        VALE_PARA=0.59999999999999998,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=1.E-2,
                        NOM_PARA='INST',
                        FONCTION=U_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=-9.50845417666,
                        VALE_REFE=-9.5295999731337755,
                        CRITERE='RELATIF',
                        VALE_PARA=3.0,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=3.0000000000000001E-3,
                        NOM_PARA='INST',
                        FONCTION=U_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=-10.5047851621,
                        VALE_REFE=-10.465692496998209,
                        CRITERE='RELATIF',
                        VALE_PARA=6.0,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=5.0000000000000001E-3,
                        NOM_PARA='INST',
                        FONCTION=U_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=1.4891739511,
                        VALE_REFE=1.488783695813134,
                        CRITERE='RELATIF',
                        VALE_PARA=0.29999999999999999,
                        REFERENCE='ANALYTIQUE',
                        NOM_PARA='INST',
                        FONCTION=V_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=2.91093519417,
                        VALE_REFE=2.9110730848386948,
                        CRITERE='RELATIF',
                        VALE_PARA=0.59999999999999998,
                        REFERENCE='ANALYTIQUE',
                        NOM_PARA='INST',
                        FONCTION=V_CALC,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=6.64026000188,
                        VALE_REFE=6.6333083220014855,
                        CRITERE='RELATIF',
                        VALE_PARA=3.0,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=5.0000000000000001E-3,
                        NOM_PARA='INST',
                        FONCTION=V_CALC,),
              )

# a cet instant, la ref est proche de 0, un test en relatif n'a pas de sens
# il faudrait un test en relatif par rapport au depl max : (vcal - vref)/vmax < 1%
# on feinte en faisant un test en absolu avec une tolerance qui depend du depl max :
# (vcal - vref) < vmax * 1%
vmax = 7.
TEST_FONCTION(VALEUR=_F(VALE_CALC=0.106100198408,
                        VALE_REFE=0.066382855582723388,
                        CRITERE='ABSOLU',
                        VALE_PARA=6.0,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=0.070000000000000007,
                        NOM_PARA='INST',
                        FONCTION=V_CALC,),
              )

#Impression des valeurs et des graphes

IMPR_FONCTION(FORMAT='XMGRACE',
              COURBE=(_F(FONCTION=U_CALC,),
                      _F(FONCTION=V_CALC,),
                      _F(FONCTION=U_REF_FO,),
                      _F(FONCTION=V_REF_FO,
                         LIST_PARA=TEMPS,),),
              TITRE='DX et DY en fonction du pseudo-temps',);

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=30,
              COURBE=_F(FONCTION=DRZ_CALC,),
              TITRE='DRZ en fonction du pseudo-temps',);

IMPR_FONCTION(FORMAT='TABLEAU',
              COURBE=(_F(FONCTION=U_CALC,),
                      _F(FONCTION=V_CALC,),
                      _F(FONCTION=DRZ_CALC,),),
              UNITE=8,);

FIN();
