# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI'))

# MODELISATION C : VALIDATION SUR UN CALCUL MODAL FEM (TEST ORIGINAL : SDLS114A)

# DEFINITION DES PARAMETRES DU CALCUL
n_mode = 15
tau = 0.01
t_fin = 0.013
pas = 2.5E-7

M = LIRE_MAILLAGE(FORMAT='MED',);

M=DEFI_GROUP(reuse=M,
             MAILLAGE=M,
             CREA_GROUP_NO=(_F(OPTION = 'NOEUD_ORDO',
                               NOM = 'LEVSUP',
                               GROUP_MA = 'LEVSUP',),
                            _F(OPTION = 'NOEUD_ORDO',
                               NOM = 'LEVINF',
                               GROUP_MA = 'LEVINF',),
                            _F(NOM = 'COT_INF',
                               GROUP_MA = 'COT_INF',),),
            );

MO=AFFE_MODELE(MAILLAGE=M,
               AFFE=_F(TOUT = 'OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='C_PLAN',),
              );

M = MODI_MAILLAGE(reuse = M,
                  MAILLAGE = M,
                  MODI_MAILLE = _F(OPTION = 'NOEUD_QUART',
                                   GROUP_NO_FOND = 'PF',),
                 );

MA=DEFI_MATERIAU(ELAS=_F(E=200.0E+9,
                         NU=0.3,
                         ALPHA = 0.,
                         RHO=7800,),);

CM=AFFE_MATERIAU(MAILLAGE=M,
                 AFFE=_F(TOUT='OUI',
                         MATER=MA,
                         ),);

BLOCAGE=AFFE_CHAR_MECA(MODELE=MO,
                       DDL_IMPO=(_F(GROUP_MA='COT_SUP',
                                    DX = 0,),
                                 _F(GROUP_MA='COT_SUP',
                                    DY = 0,),),
                      );

CHAR=AFFE_CHAR_MECA(MODELE=MO,
                    FORCE_NODALE=_F(GROUP_NO='COT_INF',
                                  FX=-1000,),
                    );

RAMPE=DEFI_FONCTION(NOM_PARA='INST',
                    VALE=(0.0,0.0,
                          tau,1.0,
                          0.2, 1.0,),
                    PROL_DROITE='CONSTANT',
                    PROL_GAUCHE='LINEAIRE',);

#################################
#  CONSTRUCTION DES MATRICES
#################################

MRIGI=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                     MODELE=MO,
                     CHAM_MATER=CM,
                     CHARGE=BLOCAGE);

MMASSE=CALC_MATR_ELEM(OPTION='MASS_MECA',
                      MODELE=MO,
                      CHAM_MATER=CM,
                      CHARGE=BLOCAGE,);

MAMOR=CALC_MATR_ELEM(OPTION='AMOR_MECA',
                     MODELE=MO,
                     RIGI_MECA = MRIGI,
                     MASS_MECA = MMASSE,
                     CHAM_MATER=CM,
                     CHARGE=BLOCAGE,);

VCHA=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                    CHARGE =(BLOCAGE,CHAR),);

NUM=NUME_DDL(MODELE= MO,
             CHARGE=(BLOCAGE,CHAR),);

RIG_ASS=ASSE_MATRICE(MATR_ELEM=MRIGI,
                     NUME_DDL=NUM,);

MA_ASS=ASSE_MATRICE(MATR_ELEM=MMASSE,
                    NUME_DDL=NUM,);

AMO_ASS=ASSE_MATRICE(MATR_ELEM=MAMOR,
                    NUME_DDL=NUM,);

VE_ASS=ASSE_VECTEUR(VECT_ELEM=VCHA,
                    NUME_DDL=NUM,);


##################################
#  CALCUL DES MODES PROPRES ET DES K_MODAUX
##################################

MODE=CALC_MODES(MATR_RIGI=RIG_ASS,
                MATR_MASS=MA_ASS,
                CALC_FREQ=_F(NMAX_FREQ=n_mode,
                             ),
                )


MODE=NORM_MODE(reuse=MODE,
               MODE=MODE,
               NORME='MASS_GENE',);

FISS=DEFI_FOND_FISS(MAILLAGE=M, SYME='NON',
                    FOND_FISS=_F(GROUP_NO = 'PF',),
                    LEVRE_SUP=_F(GROUP_MA = 'LEVSUP'),
                    LEVRE_INF=_F(GROUP_MA = 'LEVINF'),
                   )

# VALEURS DE REF DE K1 SUR 5 PREMIERS MODES
# (VOIR SDLS114A)
K1_ref = [-1.90387E+10, -1.15558E+11, 7.96724E+10, -1.17741E+11, 1.70753E+11]
K1_reg = [-1.9038714866638E+10, -1.1555795319447E+11, 7.9672432337416E+10,
          -1.177406508046E+11, 1.7075333962439E+11 ]

# validation du mot-cle NUME_ORDRE
#-----------------------------------------

PK1 = POST_K1_K2_K3(RESULTAT=MODE,
                    FOND_FISS=FISS,
                    NUME_ORDRE=(1,2,3,4,5),);

IMPR_TABLE(TABLE=PK1)

for i in range(5) :
   TEST_TABLE(TABLE=PK1,
              NOM_PARA='K1',
              FILTRE=_F(NOM_PARA = 'NUME_ORDRE',
                        VALE_I = i+1),
              VALE_CALC=K1_reg[i],
              VALE_REFE=K1_ref[i],
              PRECISION=0.001,
              REFERENCE = 'AUTRE_ASTER')


# validation du mot-cle TOUT_MODE = 'OUI'
#-----------------------------------------

PK2 = POST_K1_K2_K3(RESULTAT=MODE,
                    FOND_FISS=FISS,
                    TOUT_MODE = 'OUI')

IMPR_TABLE(TABLE=PK2)

for i in range(5) :
   TEST_TABLE(TABLE=PK2,
              NOM_PARA='K1',
              FILTRE=_F(NOM_PARA = 'NUME_ORDRE',
                        VALE_I = i+1),
              VALE_CALC=K1_reg[i],
              VALE_REFE=K1_ref[i],
              PRECISION=0.001,
              REFERENCE = 'AUTRE_ASTER')


# validation du mot-cle NUME_MODE
#-----------------------------------------

PK3 = POST_K1_K2_K3(RESULTAT=MODE,
                    FOND_FISS=FISS,
                    NUME_MODE = 1)

IMPR_TABLE(TABLE=PK3)

for i in range(1) :
   TEST_TABLE(TABLE=PK3,
              NOM_PARA='K1',
              FILTRE=_F(NOM_PARA = 'NUME_ORDRE',
                        VALE_I = i+1),
              VALE_CALC=K1_reg[i],
              VALE_REFE=K1_ref[i],
              PRECISION=0.001,
              REFERENCE = 'AUTRE_ASTER')


# validation du mot-cle LIST_MODE
#-----------------------------------------

L_MODE = DEFI_LIST_ENTI(VALE = (1,2,3));

PK4 = POST_K1_K2_K3(RESULTAT=MODE,
                    FOND_FISS=FISS,
                    LIST_MODE = L_MODE)

IMPR_TABLE(TABLE=PK4)

for i in range(3) :
   TEST_TABLE(TABLE=PK4,
              NOM_PARA='K1',
              FILTRE=_F(NOM_PARA = 'NUME_ORDRE',
                        VALE_I = i+1),
              VALE_CALC=K1_reg[i],
              VALE_REFE=K1_ref[i],
              PRECISION=0.001,
              REFERENCE = 'AUTRE_ASTER')


# validation du mot-cle FREQ
#-----------------------------------------

PK5 = POST_K1_K2_K3(RESULTAT=MODE,
                    FOND_FISS=FISS,
                    FREQ = 3469.13,
                    CRITERE='ABSOLU',
                    PRECISION=1)

IMPR_TABLE(TABLE=PK5)

for i in range(1) :
   TEST_TABLE(TABLE=PK5,
              NOM_PARA='K1',
              FILTRE=_F(NOM_PARA = 'NUME_ORDRE',
                        VALE_I = i+1),
              VALE_CALC=K1_reg[i],
              VALE_REFE=K1_ref[i],
              PRECISION=0.001,
              REFERENCE = 'AUTRE_ASTER')


# validation du mot-cle LIST_FREQ
#-----------------------------------------

# liste avec plusieurs frequences
L_FREQ6 = DEFI_LIST_REEL(VALE=(3469.13, 12480.6, 13052.9 ))

PK6 = POST_K1_K2_K3(RESULTAT=MODE,
                    FOND_FISS=FISS,
                    LIST_FREQ = L_FREQ6,
                    CRITERE='ABSOLU',
                    PRECISION=1)

IMPR_TABLE(TABLE=PK6)

for i in range(3) :
   TEST_TABLE(TABLE=PK6,
              NOM_PARA='K1',
              FILTRE=_F(NOM_PARA = 'NUME_ORDRE',
                        VALE_I = i+1),
              VALE_CALC=K1_reg[i],
              VALE_REFE=K1_ref[i],
              PRECISION=0.001,
              REFERENCE = 'AUTRE_ASTER')

# liste avec une seule frequence
L_FREQ7 = DEFI_LIST_REEL(VALE=(3469.13, ))

PK7 = POST_K1_K2_K3(RESULTAT=MODE,
                    FOND_FISS=FISS,
                    LIST_FREQ = L_FREQ7,
                    CRITERE='ABSOLU',
                    PRECISION=1)

IMPR_TABLE(TABLE=PK7)

for i in range(1) :
   TEST_TABLE(TABLE=PK7,
              NOM_PARA='K1',
              FILTRE=_F(NOM_PARA = 'NUME_ORDRE',
                        VALE_I = i+1),
              VALE_CALC=K1_reg[i],
              VALE_REFE=K1_ref[i],
              PRECISION=0.001,
              REFERENCE = 'AUTRE_ASTER')

FIN();
