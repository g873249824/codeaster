
# COPYRIGHT (C) 1991 - 2013  EDF R&D                WWW.CODE-ASTER.ORG
#
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
# 1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# TITRE VALIDATION MONOCRISTAL LOI DD_CFC_IRRA MFRONT

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'));

import numpy as NP
from numpy.linalg import norm

# MATERIAU DEFINI POUR LE COMPORTEMENT  DD_CFC. Unites : MPa, mm, N

MU=80000. # MPa
NU=0.3
E=MU*2*(1.+NU)
TAU_F  = 80.
RHO_0  = 1.E5    # en mm**-2
RHOREF = 1.E6    # en mm**-2

N      = 20.
GAMMA0 = 1.E-3
ALPHA=0.35
BETA=2.54E-7     # 2.54 Angstrom

A      = 0.13
B      = 0.005
Y      = 2.5E-7  # 2.5 Angstrom

# variable adimensionnee, voir R5.03.11

ome_0=RHO_0*BETA*BETA

# variable adimensionnee, voir R5.03.11
ome_loop=7.4E13*BETA*BETA

PHI_VOIDS=1.e-3

ome_void =1.E3
PHI_LOOP =5.9E-6
ALP_VOID =0.
ALP_LOOP =0.1
ome_sat  =ome_loop*0.
PHI_SAT  =4.E-2
XI_IRRA  =10.
DZ_IRRA  =1.e7

MATER=DEFI_MATERIAU(ELAS=_F(E=E, NU=NU, ),
                      MONO_DD_CFC_IRRA=_F(TAU_F  = TAU_F,  # MPa
                                     Y      = Y      ,  # 2.5 Angstrom
                                     N      = N,
                                     GAMMA0 = GAMMA0,
                                     A      = A,
                                     B      = B,
                                     RHO_REF= RHOREF,    # en mm**-2
                                     ALPHA=ALPHA,
                                     BETA=BETA,          # 2.54 Angstrom
                                     H1      = 0.124,
                                     H2      = 0.625,
                                     H3      = 0.137,
                                     H4      = 0.122,
                                     H5      = 0.07,
                                     RHO_VOID =ome_void,
                                     PHI_LOOP =PHI_LOOP,
                                     ALP_VOID =ALP_VOID,
                                     ALP_LOOP =ALP_LOOP,
                                     RHO_SAT  =ome_sat ,
                                     PHI_SAT  =PHI_SAT ,
                                     XI_IRRA  =XI_IRRA ,
                                     DZ_IRRA  =DZ_IRRA ,
                                   ),);
G=E/2./(1.+NU)
MATFR=DEFI_MATERIAU(
                  ELAS=_F( E=E, NU=NU, ),
                  MonoDDCFC_Irra=_F(
                           YoungModulus1 = E ,
                           YoungModulus2 = E ,
                           YoungModulus3 = E,
                           PoissonRatio12 = NU,
                           PoissonRatio23 = NU,
                           PoissonRatio13 = NU,
                           ShearModulus12 = G,
                           ShearModulus23 = G,
                           ShearModulus13 = G,
                           tauf=  TAU_F,
                           y = Y,
                           pn = N,
                           gamma0 = GAMMA0,
                           a = A,
                           b = B,
                           rhoref = RHOREF,
                           alpha = ALPHA,
                           beta = BETA,
                           Mu = G,
                           RHO_VOID = ome_void,
                           PHI_LOOP = PHI_LOOP,
                           ALP_VOID = ALP_VOID,
                           ALP_LOOP = ALP_LOOP,
                           RHO_SAT = ome_sat ,
                           PHI_SAT = PHI_SAT ,
                           XI_IRRA = XI_IRRA ,
                           DZ_IRRA = DZ_IRRA ,
                           ),
                           )




LISTARCH=DEFI_LIST_REEL(DEBUT=0.0,
                       INTERVALLE=(
                                   _F(JUSQU_A=0.2,
                                      NOMBRE=100,),
                                   _F(JUSQU_A=1.,
                                      NOMBRE=100,),
                                  ),
                      );

LINSTDD=DEFI_LIST_REEL(DEBUT=0.0,
                       INTERVALLE=(
                                   _F(JUSQU_A=0.2,
                                      NOMBRE=100,),
                                   _F(JUSQU_A=1.,
                                      NOMBRE=100,),
                                  ),
                      );

LIS2DD=DEFI_LIST_INST(INFO=1,
                        DEFI_LIST=_F(LIST_INST=LINSTDD),
                        ECHEC=_F(SUBD_NIVEAU=20,
                                 SUBD_PAS=10),
                        );


# deformation imposee
E3=DEFI_FONCTION(NOM_PARA='INST',
                   VALE=(0.0,0.0,1.0,0.05),
                   PROL_DROITE='LINEAIRE',
                   PROL_GAUCHE='LINEAIRE',);


# densites de dislocation initiales : variables internes
nbvari=6 + 3 * 12 + (12 + 12) + 12 +  3
avari = NP.zeros(nbvari)

for i in range(12):
  avari[6+i*3]=ome_0

for i in range(12):
  avari[6+12*3+i]=ome_loop

for i in range(12):
  avari[6+12*4+i]=PHI_VOIDS

lvari=list(avari)

#rotation du repere
h=1
k=5
l=9

phi1=0
phi =NP.arccos(l / NP.sqrt( h*h + k*k + l*l) ) * 180. / pi
phi2=NP.arctan2( h / NP.sqrt( h*h + k*k ) , k / NP.sqrt( h*h + k*k ) )* 180. / pi
angles=(phi1, phi ,phi2)

COMPODDI=DEFI_COMPOR(MONOCRISTAL=_F(MATER=MATER,
                                    ECOULEMENT='MONO_DD_CFC_IRRA',
                                    ELAS='ELAS',
                                    FAMI_SYST_GLIS='OCTAEDRIQUE',
                                    ),
                                    );

# avec irradiation
IMPLAS=SIMU_POINT_MAT(INFO=1,
                      MATER=MATER,
                      MASSIF=_F(ANGL_EULER=angles),
                      COMPORTEMENT=(_F(RELATION='MONOCRISTAL',
                                    COMPOR=COMPODDI,
                                    ALGO_INTE='NEWTON_PERT',
                                    ITER_INTE_MAXI=100,
                                    TOUT='OUI',),),
                      INCREMENT=(_F(LIST_INST=LIS2DD,),),
                      NEWTON=(_F(REAC_ITER=1, PREDICTION='ELASTIQUE'),),
                      CONVERGENCE=(_F(ITER_GLOB_MAXI=100,),),
                      VARI_INIT=_F(VALE=lvari,
                                  ),
                      EPSI_IMPOSE=_F(EPZZ=E3,),
                      ARCHIVAGE=_F(LIST_INST=LISTARCH),
                       );

#IMPR_TABLE(TABLE=IMPLAS)

epsXXi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='EPXX',INTERPOL='LIN');
epsYYi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='EPYY',INTERPOL='LIN');
epsZZi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='EPZZ',INTERPOL='LIN');
epsXYi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='EPXY',INTERPOL='LIN');
epsXZi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='EPXZ',INTERPOL='LIN');
epsYZi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='EPYZ',INTERPOL='LIN');

sigXXi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='SIXX',INTERPOL='LIN');
sigYYi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='SIYY',INTERPOL='LIN');
sigZZi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='SIZZ',INTERPOL='LIN');
sigXYi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='SIXY',INTERPOL='LIN');
sigXZi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='SIXZ',INTERPOL='LIN');
sigYZi=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='SIYZ',INTERPOL='LIN');

rho1as=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='V7',INTERPOL='LIN');
rhl1as=RECU_FONCTION(TABLE=IMPLAS,PARA_X='INST',PARA_Y='V43',INTERPOL='LIN');

########################################################################################"

# MFRONT

# densites de dislocation initiales : variables internes
nbvari=6+36
avari = NP.zeros(nbvari)

for i in range(12):
  avari[6+i]=ome_0

for i in range(12):
  avari[6+12+i]=ome_loop

for i in range(12):
  avari[6+12*2+i]=PHI_VOIDS

lvari=list(avari)

IMPLMF=SIMU_POINT_MAT(INFO=1,
                      MATER=MATFR,
                      MASSIF=_F(ANGL_EULER=angles),
                      COMPORTEMENT=_F(RELATION='MonoDDCFC_Irra',
                        RESI_INTE_RELA=1e-12,
                        ITER_INTE_MAXI=100,
                        ),
                      INCREMENT=(_F(LIST_INST=LIS2DD,),),
                      NEWTON=(_F(REAC_ITER=1, PREDICTION='ELASTIQUE' ),),
                      CONVERGENCE=(_F(ITER_GLOB_MAXI=100,),),
                      VARI_INIT=_F(VALE=lvari,
                                  ),
                      EPSI_IMPOSE=_F(EPZZ=E3,),
                      ARCHIVAGE=_F(LIST_INST=LISTARCH),
                       );

#IMPR_TABLE(TABLE=IMPLMF)


epsXX=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='EPXX',INTERPOL='LIN');
epsYY=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='EPYY',INTERPOL='LIN');
epsZZ=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='EPZZ',INTERPOL='LIN');
epsXY=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='EPXY',INTERPOL='LIN');
epsXZ=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='EPXZ',INTERPOL='LIN');
epsYZ=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='EPYZ',INTERPOL='LIN');

sigXX=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='SIXX',INTERPOL='LIN');
sigYY=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='SIYY',INTERPOL='LIN');
sigZZ=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='SIZZ',INTERPOL='LIN');
sigXY=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='SIXY',INTERPOL='LIN');
sigXZ=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='SIXZ',INTERPOL='LIN');
sigYZ=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='SIYZ',INTERPOL='LIN');

rho1mf=RECU_FONCTION(TABLE=IMPLMF,PARA_X='INST',PARA_Y='V7',INTERPOL='LIN');


pilote=''
#pilote='INTERACTIF'

IMPR_FONCTION(
            FORMAT='XMGRACE',
            PILOTE=pilote,
            UNITE=29,
            LEGENDE_X='\\f{Symbol}e\\f{}\\s33',
            LEGENDE_Y='\\f{Symbol}s\\f{}\\s33 (MPa)',
            COURBE=(
            _F(FONC_X=epsZZ,FONC_Y=sigZZ, ),
            _F(FONC_X=epsZZi,FONC_Y=sigZZi, ),
            ),
            );

IMPR_FONCTION(
            FORMAT='XMGRACE',
            PILOTE=pilote,
            UNITE=29,
            LEGENDE_X='t',
            LEGENDE_Y='\\f{Symbol}r\\f{}\\s1 ',
            COURBE=(
            _F(FONCTION=rho1as, ),
            _F(FONCTION=rho1mf, ),
            ),
            );


# DIFF DES COURBES OBTENUES AVEC LES DEUX METHODES
DIF1=CALC_FONCTION(COMB=(
                          _F( FONCTION = sigZZ, COEF =  1.),
                          _F( FONCTION = sigZZi, COEF = -1.),
                          ) );

DIF2=CALC_FONCTION(COMB=(
                          _F( FONCTION = rho1as, COEF =  1.),
                          _F( FONCTION = rho1mf, COEF = -1.),
                          ) );

TDIF1=CREA_TABLE(FONCTION= _F(FONCTION = DIF1,PARA = ('INST','NEUT1')),);

TDIF2=CREA_TABLE(FONCTION= _F(FONCTION = DIF2,PARA = ('INST','NEUT1')),);

TREF1=CREA_TABLE(FONCTION= _F(FONCTION = sigZZi,PARA = ('INST','SIZZ')),);

TREF2=CREA_TABLE(FONCTION= _F(FONCTION = rho1as,PARA = ('INST','V7')),);


def ecart_relatif(diff, ref):
    if abs(ref) == 0 :
       err=diff
    else :
       err=diff/ref
    return err

TEST1=CALC_TABLE(TABLE=TDIF1,ACTION= _F(OPERATION='COMB',TABLE= TREF1, NOM_PARA ='INST'))

TEST2=CALC_TABLE(TABLE=TDIF2,ACTION= _F(OPERATION='COMB',TABLE= TREF2, NOM_PARA ='INST'))

ecarela1=FORMULE(NOM_PARA=('NEUT1','SIZZ'),VALE=("""ecart_relatif(NEUT1,SIZZ)"""))

ecarela2=FORMULE(NOM_PARA=('NEUT1','V7'),VALE=("""ecart_relatif(NEUT1,V7)"""))

TEST1=CALC_TABLE(TABLE=TEST1,reuse=TEST1,
ACTION= _F(OPERATION='OPER',FORMULE=ecarela1, NOM_PARA ='ECART')
)

TEST2=CALC_TABLE(TABLE=TEST2,reuse=TEST2,
ACTION= _F(OPERATION='OPER',FORMULE=ecarela2, NOM_PARA ='ECART')
)


TEST_TABLE(TABLE=TEST1,NOM_PARA='ECART',
FILTRE=_F(NOM_PARA='ECART',CRIT_COMP='MAXI_ABS'),
CRITERE='ABSOLU',REFERENCE='AUTRE_ASTER',
VALE_REFE=0.,PRECISION=1.E-8,VALE_CALC=2.6429991925282E-09)

TEST_TABLE(TABLE=TEST2,NOM_PARA='ECART',
FILTRE=_F(NOM_PARA='ECART',CRIT_COMP='MAXI_ABS'),
CRITERE='ABSOLU',REFERENCE='AUTRE_ASTER',
VALE_REFE=0.,PRECISION=1.E-8,VALE_CALC=-2.0217177646511E-09)




FIN()
