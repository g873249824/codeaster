
# COPYRIGHT (C) 1991 - 2013  EDF R&D                WWW.CODE-ASTER.ORG
#
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
# 1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
POURSUITE(CODE=_F(NOM='SDLL141E'), PAR_LOT='NON',DEBUG=_F(SDVERI='OUI'))


#-------------------------------------------------------------------------------
# 2 Validation des commandes  APPL_CINE_MATR et APPL_CINE_SCMB :
#--------------------------------------------------------

# 2.1 : rigidite et chargement :
#-------------------------------------------------
CHC2=AFFE_CHAR_CINE(MODELE=MODELE,
                    MECA_IMPO=_F(GROUP_NO='PALIER_A', DX=1.e-4, DY=0.,  DZ=0., DRX=0., DRY=0., DRZ=0. ),)

CHF2=AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO='PALIER_B', FX=1000. ),)

MEL2=CALC_MATR_ELEM( MODELE=MODELE, CHAM_MATER=CHMAT, CARA_ELEM=CARELEM, OPTION='RIGI_MECA')
NU2=NUME_DDL(MATR_RIGI=MEL2 )
RIGI2=ASSE_MATRICE(MATR_ELEM=MEL2,NUME_DDL=NU2, CHAR_CINE=CHC2)


VEL2=CALC_VECT_ELEM(OPTION='CHAR_MECA', CHARGE=CHF2, CHAM_MATER=CHMAT,)
VAS2=ASSE_VECTEUR(VECT_ELEM=VEL2, NUME_DDL=NU2,);


# 2.2 : resolution faite avec aster (reference) :
#-------------------------------------------------
VCIN2=CALC_CHAR_CINE(NUME_DDL=NU2,  CHAR_CINE=CHC2)
RIGI2=FACTORISER(reuse =RIGI2, MATR_ASSE=RIGI2,)
SOL2=RESOUDRE(MATR=RIGI2, CHAM_NO=VAS2, CHAM_CINE=VCIN2 )
TEST_RESU(CHAM_NO=_F(
                     NOM_CMP='DY',
                     GROUP_NO='PALIER_B',
                     CHAM_GD=SOL2,
                     VALE_CALC=-1.9790325934159999E-3,),
          )

# 2.3 : resolution faite avec python :
#-------------------------------------------------
RIGI2=APPL_CINE_MATR(reuse=RIGI2,MATR_ASSE=RIGI2)
VAS2=APPL_CINE_SCMB(reuse=VAS2,MATR=RIGI2,CHAM_NO=VAS2,CHAM_CINE=VCIN2)

import numpy.linalg as LA

RIGI2P=RIGI2.EXTR_MATR()
VAS2P=VAS2.sdj.VALE.get()
SOL2P=LA.solve(RIGI2P, VAS2P)

# TEST_RESU
# la valeur de DY(PALIER_B) se trouve a l'indice 110 dans .VALE :

TAB1=CREA_TABLE(LISTE=(_F(PARA='TEST',  TYPE_K='K8', LISTE_K='DY',),
                       _F(PARA='VALEUR',             LISTE_R=SOL2P[109]),),)


TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=1.0000000000000001E-09,
           VALE_CALC=-1.979032593E-03,
           VALE_REFE=-1.9790325934159999E-3,
           TOLE_MACHINE=1.0000000000000001E-09,
           NOM_PARA='VALEUR',
           TABLE=TAB1,
           FILTRE=_F(NOM_PARA='TEST',
                     VALE_K='DY',),
           )

FIN();
