# person_in_charge: jean-michel.proix at edf.fr
# TITRE EPROUVETTE ENTAILLEE EN GRANDES DEFORMATIONS GDEF_LOG
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='SSNA303B',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MAIL=LIRE_MAILLAGE(FORMAT='MED',);

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_NO=(_F(GROUP_MA='SYME',),
                               _F(GROUP_MA='EFFO',),
                               _F(GROUP_MA='LIG',),
                               _F(GROUP_MA='NOTCH',),),);

MO=AFFE_MODELE(MAILLAGE=MAIL,
               VERIF='MAILLE',
               AFFE=_F(GROUP_MA='STOT',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='AXIS_SI',),);

MA_EPR=DEFI_MATERIAU(ELAS=_F(E=200000.0,
                             NU=0.3,
                             ALPHA=0.0,),
                     ECRO_LINE=_F(D_SIGM_EPSI=20000.,
                                  SY=200.,),);

CM=AFFE_MATERIAU(MAILLAGE=MAIL,
                 AFFE=_F(TOUT='OUI',
                         MATER=MA_EPR,),);

CH=AFFE_CHAR_MECA(MODELE=MO,
                  DDL_IMPO=_F(GROUP_NO='LIG',
                              DY=0.0,),);

CHT=AFFE_CHAR_MECA(MODELE=MO,
                   DDL_IMPO=_F(GROUP_NO='EFFO',
                               DY=6.,),);
IFIN = 1.0;


FCT_R=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.0,0.0,
                          IFIN,1.0,
                          ),PROL_DROITE='EXCLU',PROL_GAUCHE='EXCLU',);

L_INST_R=DEFI_LIST_REEL(DEBUT=0.0,
                        INTERVALLE=_F(JUSQU_A=IFIN,
                                      NOMBRE=50,),);

L_ARCH_R=DEFI_LIST_REEL(DEBUT=0.0,
                        INTERVALLE=_F(JUSQU_A=IFIN,
                                      NOMBRE=50,),);


# DEUXIEME CALCUL : GDEF_LOG
# ------------------------------------------------------------

UL=STAT_NON_LINE(MODELE=MO,
                 CHAM_MATER=CM,
                 EXCIT=(_F(CHARGE=CH,),
                        _F(CHARGE=CHT,
                           FONC_MULT=FCT_R,),),
                 COMP_INCR=_F(RELATION='VMIS_ISOT_LINE',
                              DEFORMATION = 'GDEF_LOG',),
                 INCREMENT=_F(LIST_INST=L_INST_R,),
                 NEWTON=_F(REAC_INCR=1,
                           MATRICE='TANGENTE',
                           REAC_ITER=1,),
                 CONVERGENCE=_F(ITER_GLOB_MAXI=20,),
                 ARCHIVAGE=_F(LIST_INST=L_ARCH_R,),);

UL=CALC_CHAMP(reuse=UL,RESULTAT=UL,CONTRAINTE=('SIGM_ELNO'),VARI_INTERNE=('VARI_ELNO'))


UL=CALC_CHAMP(reuse =UL,
           RESULTAT=UL,
           FORCE='REAC_NODA',);


# PREMIER CALCUL : SIMO_MIEHE
# ------------------------------------------------------------

UR=STAT_NON_LINE(MODELE=MO,
                 CHAM_MATER=CM,
                 EXCIT=(_F(CHARGE=CH,),
                        _F(CHARGE=CHT,
                           FONC_MULT=FCT_R,),),
                 COMP_INCR=_F(RELATION='VMIS_ISOT_LINE',
                              DEFORMATION='SIMO_MIEHE',),
                 INCREMENT=_F(LIST_INST=L_INST_R,),
                 NEWTON=_F(REAC_INCR=1,
                           MATRICE='TANGENTE',
                           REAC_ITER=1,),
                 CONVERGENCE=_F(ITER_GLOB_MAXI=20,),
                 ARCHIVAGE=_F(LIST_INST=L_ARCH_R,),);

UR=CALC_CHAMP(reuse=UR,RESULTAT=UR,CONTRAINTE=('SIGM_ELNO'),VARI_INTERNE=('VARI_ELNO'))


UR=CALC_CHAMP(reuse =UR,
           RESULTAT=UR,
           FORCE='REAC_NODA',);
#-----------------------------------------------------------
# DEPOUILLEMENT DES RESULTATS
# ----------------------------------------------------------

CONTR_R=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                                INTITULE='Contraction diametrale',
                                RESULTAT=UR,
                                NOM_CHAM='DEPL',
                                GROUP_NO='NO_ENT',
                                NOM_CMP='DX',),);

EFFORT_R=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                                 INTITULE='force',
                                 RESULTAT=UR,
                                 NOM_CHAM='REAC_NODA',
                                 GROUP_NO='EFFO',
                                 RESULTANTE='DY',),);

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC= 6.61659675E+03,
           VALE_REFE=6616.5900000000001,
           NOM_PARA='DY',
           TABLE=EFFORT_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=5,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC=-0.084493226,
           VALE_REFE=-0.084500000000000006,
           NOM_PARA='DX',
           TABLE=CONTR_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=5,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC= 2.15415707E+04,
           VALE_REFE=2.154157E4,
           NOM_PARA='DY',
           TABLE=EFFORT_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=25,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC=-0.376658376,
           VALE_REFE=-0.37659999999999999,
           NOM_PARA='DX',
           TABLE=CONTR_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=25,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC= 3.38210257E+04,
           VALE_REFE=3.3821029999999999E4,
           NOM_PARA='DY',
           TABLE=EFFORT_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=50,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC=-0.825727666,
           VALE_REFE=-0.82599999999999996,
           NOM_PARA='DX',
           TABLE=CONTR_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=50,),
           )

CONTR_L=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                                INTITULE='Contraction diametrale',
                                RESULTAT=UL,
                                NOM_CHAM='DEPL',
                                GROUP_NO='NO_ENT',
                                NOM_CMP='DX',),);

EFFORT_L=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                                 INTITULE='force',
                                 RESULTAT=UL,
                                 NOM_CHAM='REAC_NODA',
                                 GROUP_NO='EFFO',
                                 RESULTANTE='DY',),);

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=1.E-2,
           VALE_CALC= 6.59686480E+03,
           VALE_REFE=6616.5900000000001,
           NOM_PARA='DY',
           TABLE=EFFORT_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=5,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=1.E-2,
           VALE_CALC=-0.085041571,
           VALE_REFE=-0.084500000000000006,
           NOM_PARA='DX',
           TABLE=CONTR_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=5,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=1.E-2,
           VALE_CALC= 2.13629549E+04,
           VALE_REFE=2.154157E4,
           NOM_PARA='DY',
           TABLE=EFFORT_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=25,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=0.02,
           VALE_CALC=-0.381447104,
           VALE_REFE=-0.37659999999999999,
           NOM_PARA='DX',
           TABLE=CONTR_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=25,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=0.029999999999999999,
           VALE_CALC= 3.31088713E+04,
           VALE_REFE=3.3821E4,
           NOM_PARA='DY',
           TABLE=EFFORT_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=50,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=0.040000000000000001,
           VALE_CALC=-0.857560748,
           VALE_REFE=-0.82599999999999996,
           NOM_PARA='DX',
           TABLE=CONTR_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=50,),
           )

IMPR_RESU(FORMAT='MED',
          RESU=(_F(RESULTAT=UL,),
                _F(RESULTAT=UR,),),);

FIN();
