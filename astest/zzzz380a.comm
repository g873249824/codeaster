# TITRE Validation de l'ajout de ddls fictifs pour les solveurs PETSc multigrille.

# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
      DEBUG=_F(SDVERI='OUI'), PAR_LOT='NON')

#===========================================================================
#  Principe du test :
#  ------------------
#  On resout un probleme mecanique assez simple comportant des conditions aux limites
#  de type LIAISON_MAIL.
#  La dualisation de ces conditions aux limites interdit l'utilisation des solveurs multigrille de PETCS
#  (a cause des ddls de Lagrange).
#
#  Il faut donc utiliser la fonctionnalite ELIM_LAGR='OUI'.
#  Mais le code, pour eliminer chaque ddl de Lagrange est oblige d'eliminer un ddl physique.
#  Au bout du compte, certains noeuds ont donc moins de ddls que les autres, ce qui empeche
#  theoriquement d'utiliser les solveurs multigrille.
#
#  Dans ce cas de figure, le code ajoute alors des ddls fictifs pour que tous les noeuds du modele
#  aient le meme nombre de ddls et que l'on puisse utiliser 'GAMG', 'BOOMER' et 'ML'
#
#  Ce test montre que cette strategie est interessante : le nombre d'iterations pour converger
#  est tres nettement diminue en ajoutant des ddls fictifs.
#
#===========================================================================


MATERI=DEFI_MATERIAU( ELAS=_F(  E = 0.75, NU =0.3))

PRE_GIBI()
MAIL=LIRE_MAILLAGE(FORMAT='ASTER', )

CHMAT=AFFE_MATERIAU(  MAILLAGE=MAIL,
                AFFE=_F(  TOUT = 'OUI', MATER = MATERI) )


MOME=AFFE_MODELE(  MAILLAGE=MAIL,
                      AFFE=_F( GROUP_MA=('CARR1','CARR2','BORD1','BORD2','BORD3','BORD4','BORD6',),
                      MODELISATION = 'D_PLAN', PHENOMENE = 'MECANIQUE'))

#------------------------------------------------------------------------------------
CHIMPO_D=AFFE_CHAR_MECA(  MODELE=MOME,
          DDL_IMPO=(
              _F( GROUP_MA = ('BORD6',),       DX = 0.,    ),
              _F( GROUP_NO = ('E'),            DY = 0.,    ),
          ),
          LIAISON_DDL=(
              _F( GROUP_NO  = ('A','E',), DDL = ('DY','DX',),
                  COEF_MULT = ( 1., 1.,), COEF_IMPO = 0.),
              _F( GROUP_NO  = ('C','E',), DDL = ('DY','DX',),
                  COEF_MULT = ( 1., 1.,), COEF_IMPO = 0.),
          ),
)
#------------------------------------------------------------------------------------


CHLIAI=AFFE_CHAR_MECA(  MODELE=MOME,
          LIAISON_MAIL=_F( GROUP_MA_ESCL = ('BORD5',),  GROUP_MA_MAIT='CARR1', ),
         )

CHNEUM=AFFE_CHAR_MECA(  MODELE=MOME,
          PRES_REP=(
             _F( GROUP_MA = ('BORD1','BORD2'),    PRES = 5.),
             _F( GROUP_MA = ('BORD3','BORD4'),    PRES = 6.),
         ))

LR8=DEFI_LIST_REEL(        DEBUT=0.,
       INTERVALLE=_F(    JUSQU_A = 10.0,   NOMBRE = 1)
                       )

# 0. MULT_FRONT :
#---------------
if 1 :
    U0=MECA_STATIQUE(  MODELE=MOME,   CHAM_MATER=CHMAT,
                      EXCIT=(
                         _F( CHARGE = CHIMPO_D),
                         _F( CHARGE = CHLIAI),
                         _F( CHARGE = CHNEUM),
                      ),
                      SOLVEUR=_F( METHODE = 'MULT_FRONT', )
                          )
    #IMPR_RESU(RESU=_F(RESULTAT=U0, NOM_CHAM='DEPL'))
    TB=CREA_TABLE(RESU=_F(RESULTAT=U0,GROUP_NO='B1',NOM_CHAM='DEPL',TOUT_CMP='OUI',INST=0.))
    vrefey=TB['DY',1]

    TEST_RESU(RESU=_F(RESULTAT=U0, INST=0., VALE_CALC=vrefey,
                   NOM_CHAM='DEPL', GROUP_NO='B1', NOM_CMP='DY',))


# Nombres max d'iterations :
#----------------------------
nbiter=[590,375,38,478]  # sans ddls fictifs
nbiter=[590,50,24,41]    # avec ddls fictifs
ico=-1


# 1. GMRES + LDLT_INC:
#-----------------------------------------
if 1 :
    ico +=1
    U1=MECA_STATIQUE(  MODELE=MOME, CHAM_MATER=CHMAT,
                      EXCIT=(
                         _F( CHARGE = CHIMPO_D),
                         _F( CHARGE = CHLIAI),
                         _F( CHARGE = CHNEUM),
                      ),
                      SOLVEUR=_F( METHODE = 'PETSC', ALGORITHME='GMRES', PRE_COND='LDLT_INC',
                                  RESI_RELA=1.e-8,NMAX_ITER=nbiter[ico], ELIM_LAGR='NON', )
                          )

    TEST_RESU(RESU=_F(RESULTAT=U1, INST=0., VALE_REFE=vrefey, REFERENCE='AUTRE_ASTER', PRECISION=1.e-4,
                   NOM_CHAM='DEPL', GROUP_NO='B1', NOM_CMP='DY',VALE_CALC=vrefey,TOLE_MACHINE=1.e-5))
    DETRUIRE(CONCEPT=_F(NOM=U1))


# 2. GMRES + ELIM_LAGR='OUI' +  BOOMER / ML / GAMG :
#---------------------------------------------------
for precond in ('GAMG','BOOMER', 'ML') :
    ico +=1
    U1=MECA_STATIQUE(  MODELE=MOME, CHAM_MATER=CHMAT,
                      EXCIT=(
                         _F( CHARGE = CHIMPO_D),
                         _F( CHARGE = CHLIAI),
                         _F( CHARGE = CHNEUM),
                      ),
                      SOLVEUR=_F( METHODE = 'PETSC', ALGORITHME='GMRES', PRE_COND=precond,
                                  RESI_RELA=1.e-8,NMAX_ITER=nbiter[ico], ELIM_LAGR='OUI')
                          )

    TEST_RESU(RESU=_F(RESULTAT=U1, INST=0., VALE_REFE=vrefey, REFERENCE='AUTRE_ASTER', PRECISION=1.e-4,
                   NOM_CHAM='DEPL', GROUP_NO='B1', NOM_CMP='DY',VALE_CALC=vrefey,TOLE_MACHINE=1.e-5))
    DETRUIRE(CONCEPT=_F(NOM=U1))





FIN()
#
