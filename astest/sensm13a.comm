# MODIF  DATE 14/11/2006   AUTEUR LEBOUVIER F.LEBOUVIER 
# RESPONSABLE F6BHHBO P.DEBONNIERES
# TITRE ETUDE  : ESSAI TRIAXIAL AVEC LE MODELE DE TYPE (3D)
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
#            CONFIGURATION MANAGEMENT OF EDF VERSION
#
DEBUT(CODE=_F( NOM = 'SENSM13A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),
          BASE=_F( FICHIER = 'GLOBALE',LONG_REPE = 15000),) 
#
#......................................................................
# ESSAI TRIAXIAL EN 3D
# PLASTICITE DRUCKER-PRAGER
# SENSIBILITE AUX PARAMETRES MATERIAU
#......................................................................
#
#
# 2. Definition du dictionnaire des parametres
#

mot_cle = [ "E", "NU", "ALPHA", "P_ULTM", "SY", "SY_ULTM" ]
sensible = [ 5800.0E6,  0.3,  0.33, 0.01, 2.57E6, 0.57E6 ]

#
# 3. Definition des parametres sensibles
#

n = len(sensible)

PS = [None]*n

for i in range(n):
  PS[i] = DEFI_PARA_SENSI(VALE = sensible[i])


#
# 4. Maillage
#

MAILLAGE = LIRE_MAILLAGE()

#
# 5. Modele
#

MODEMECA = AFFE_MODELE(MAILLAGE = MAILLAGE,
                       AFFE = _F(TOUT = 'OUI',
                                 PHENOMENE = 'MECANIQUE',
                                 MODELISATION = '3D')
                      )

MAILLAGE = MODI_MAILLAGE(reuse = MAILLAGE,
                         MAILLAGE = MAILLAGE,
                         ORIE_PEAU_3D = _F( GROUP_MA = ('HAUT',
                                                        'DEVANT',
                                                        'GAUCHE',
                                                        'BAS',
                                                        'DERRIERE',
                                                        'DROITE')
                                          )
                        )

#
# 6. Mise en place des materiaux
#

MAT = DEFI_MATERIAU(ELAS_FO = _F(E = PS[0],
                                 NU = PS[1]),
                    DRUCK_PRAGER_FO = _F(ECROUISSAGE = 'PARABOLIQUE',
                                         ALPHA = PS[2],
                                         P_ULTM = PS[3],
                                         SY = PS[4],
                                         SY_ULTM = PS[5])
                   );


#
# 7. Affectation des materiaux
#

MATEMAIL = AFFE_MATERIAU(MAILLAGE = MAILLAGE,
                         AFFE = _F(TOUT = 'OUI', MATER = MAT));

#
# 8. Chargements
#

TEMPS1 = DEFI_LIST_REEL(DEBUT = 0.,
                        INTERVALLE = _F(JUSQU_A = 1.0, NOMBRE = 1)
                       )
     
TEMPS2 = DEFI_LIST_REEL(DEBUT = 1.,
                        INTERVALLE = _F(JUSQU_A = 2.0, NOMBRE = 100)
                       )

PR_LATE = AFFE_CHAR_MECA(MODELE = MODEMECA,
                         PRES_REP = _F(GROUP_MA = ( 'DEVANT', 'DROITE'),
                                       PRES = 1.
                                      )
                        )

PR_V = AFFE_CHAR_MECA(MODELE = MODEMECA,
                      PRES_REP=_F(GROUP_MA = 'HAUT', PRES = 1.)
                     )

DEP_SYM = AFFE_CHAR_MECA(MODELE = MODEMECA,FACE_IMPO = (
                               _F(  GROUP_MA = 'BAS',      DZ = 0.,   ),
                               _F(  GROUP_MA = 'DERRIERE', DX = 0.,   ),
                               _F(  GROUP_MA = 'GAUCHE',   DY = 0.,   ))
                            )

DEP_V=AFFE_CHAR_MECA( MODELE    = MODEMECA,
                      FACE_IMPO = _F( GROUP_MA = 'HAUT', DZ = 1., )
                     )

COEF1 = DEFI_FONCTION(NOM_PARA = 'INST',
                      PROL_DROITE = 'CONSTANT',
                      VALE = (0.0, 0.0,
                              1.0, 2.0E6)
                     )

COEF2 = DEFI_FONCTION(NOM_PARA = 'INST',
                      PROL_DROITE = 'LINEAIRE',
                      PROL_GAUCHE = 'CONSTANT',
                      VALE = (1.0,  0.0,
                              2.0, -0.015)
                     )

#
# 9. Calcul
#

RES = STAT_NON_LINE(MODELE = MODEMECA,
                   CHAM_MATER = MATEMAIL,
                   EXCIT = (_F(CHARGE = PR_LATE, FONC_MULT = COEF1),
                            _F( CHARGE = DEP_SYM),
                            _F( CHARGE = DEP_V, FONC_MULT = COEF2)),
                   COMP_INCR = _F(RELATION = 'DRUCKER_PRAGER',
                                    RESI_INTE_RELA = 1.E-6,
                                    ITER_INTE_MAXI = 100,
                                    ITER_INTE_PAS  = -10,),
                   INCREMENT = _F(LIST_INST = TEMPS2),
                   NEWTON = _F(MATRICE = 'TANGENTE',
                               REAC_ITER = 1),
                   CONVERGENCE = _F(RESI_GLOB_RELA = 1.E-6,
                                    ITER_GLOB_MAXI = 100),
                   SENSIBILITE= tuple(PS),
                  )
RES=CALC_ELEM(reuse=RES,RESULTAT=RES,
              OPTION=('SIEF_ELNO_ELGA','VARI_ELNO_ELGA'),)

RES=CALC_ELEM(reuse=RES,RESULTAT=RES,
              OPTION=('SIEF_ELNO_ELGA','VARI_ELNO_ELGA'),
              SENSIBILITE=tuple(PS))

#
# Verification par differences finies (contraintes)
#

epsilon = 1.E-4
VERIF=[None]*n
MAT2=[None]*n
MATMA2=[None]*n
RES2=[None]*n
TBF=[None]*(n*14)
TBDI=[None]*(n*14)
TBSZ=[None]*(n*14)
TBFS=[None]*(n*14)

for i in range(n):
  eps = [1.]*n
  eps[i]=1.0 + epsilon

  MAT2[i] = DEFI_MATERIAU(ELAS = _F(E = sensible[0]*eps[0],
                                 NU = sensible[1]*eps[1]),
                       DRUCK_PRAGER = _F(ECROUISSAGE = 'PARABOLIQUE',
                                         ALPHA = sensible[2]*eps[2],
                                         P_ULTM = sensible[3]*eps[3],
                                         SY = sensible[4]*eps[4],
                                         SY_ULTM = sensible[5]*eps[5])
                      );

  MATMA2[i] = AFFE_MATERIAU(MAILLAGE = MAILLAGE,
                          AFFE = _F(TOUT = 'OUI', MATER = MAT2[i]));

  RES2[i] = STAT_NON_LINE(MODELE = MODEMECA,
                       CHAM_MATER = MATMA2[i],
                   EXCIT = (_F(CHARGE = PR_LATE, FONC_MULT = COEF1),
                            _F( CHARGE = DEP_SYM),
                            _F( CHARGE = DEP_V, FONC_MULT = COEF2)),
                       COMP_INCR = _F(RELATION = 'DRUCKER_PRAGER',
                                        RESI_INTE_RELA = 1.E-6,
                                        ITER_INTE_MAXI = 100,
                                        ITER_INTE_PAS  = -10,),
                       INCREMENT = _F(LIST_INST = TEMPS2),
                       NEWTON = _F(MATRICE = 'TANGENTE',
                                   REAC_ITER = 1),
                       CONVERGENCE = _F(RESI_GLOB_RELA = 1.E-6,
                                        ITER_GLOB_MAXI = 100)
                      );

  RES2[i] = CALC_ELEM(reuse=RES2[i],RESULTAT=RES2[i],OPTION='SIEF_ELNO_ELGA')

  VERIF[i]=FORMULE(NOM_PARA=('SIZZ_DIF', 'SIZZ_REF','SIZZ_SEN'),
              VALE='abs((SIZZ_DIF - SIZZ_REF)/%e - SIZZ_SEN)' %(sensible[i]*epsilon) )


  for j in [1, 5, 10, 15, 20, 30, 40, 45, 48, 49, 50, 51, 75, 100]:
    k=[1, 5, 10, 15, 20, 30, 40, 45, 48, 49, 50, 51, 75, 100].index(j)
    l=k+14*i


    TBF[l] = POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            NOEUD='NO1',
                            MAILLE='MA1',
                            RESULTAT=RES,
                            NOM_CHAM='SIEF_ELNO_ELGA',
                            NUME_ORDRE=j,
                            NOM_CMP='SIZZ',
                            OPERATION='EXTRACTION',),);


    TBDI[l] = POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            NOEUD='NO1',
                            MAILLE='MA1',
                            RESULTAT=RES2[i],
                            NOM_CHAM='SIEF_ELNO_ELGA',
                            NUME_ORDRE=j,
                            NOM_CMP='SIZZ',
                            OPERATION='EXTRACTION',),);

    TBFS[l] = POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            NOEUD='NO1',
                            MAILLE='MA1',
                            RESULTAT=RES,
                            NOM_CHAM='SIEF_ELNO_ELGA',
                            NUME_ORDRE=j,
                            NOM_CMP='SIZZ',
                            SENSIBILITE=PS[i],
                            OPERATION='EXTRACTION',),);

    TBSZ[l]=CALC_TABLE(TABLE=TBFS[l],
                        SENSIBILITE=PS[i],
                        ACTION=(_F(OPERATION='RENOMME',
                                   NOM_PARA=('SIZZ', 'SIZZ_SEN'),),
                                _F(OPERATION='COMB',
                                   TABLE=TBF[l],
                                   NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                                _F(OPERATION='RENOMME',
                                   NOM_PARA=('SIZZ', 'SIZZ_REF'),),
                                _F(OPERATION='COMB',
                                   TABLE=TBDI[l],
                                   NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                                _F(OPERATION='RENOMME',
                                   NOM_PARA=('SIZZ', 'SIZZ_DIF'),),
                                _F(OPERATION='OPER',
                                   NOM_PARA='DIFF',
                                   FORMULE= VERIF[i]),
                                _F(OPERATION='EXTR',
                                   NOM_PARA=('NOEUD', 'NUME_ORDRE', 'INST', 'DIFF', 'SIZZ_SEN','SIZZ_REF', 'SIZZ_DIF'),),
                             ),
                         TITRE='Comparaison entre derivee / differences finies')

    IMPR_TABLE(TABLE=TBSZ[l],)

# VERIFICATION POUR LES PARAMETRES SENSIBLES PS_0, PS_4 et PS_5
    if (i==0 or i==4 or i==5 ):
      TEST_TABLE(
        TABLE     = TBSZ[l],
        NOM_PARA  = 'DIFF',
        TYPE_TEST = 'MAX',
        VALE      = 0.,
        CRITERE   = 'ABSOLU',
        PRECISION = 5.E-5,
        REFERENCE = 'AUTRE_ASTER',)

# VERIFICATION POUR LE PARAMETRE SENSIBLE PS_1
    if i==1 :
      if j==1 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 2.330E-05,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-3,
          REFERENCE = 'AUTRE_ASTER',)
      if j==5 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 9.315E-05,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-4,
          REFERENCE = 'AUTRE_ASTER',)
      if j==10 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 5.287E-01,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.07,
          REFERENCE = 'AUTRE_ASTER',)
      if j==15 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 5.119E-01,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.04,
          REFERENCE = 'AUTRE_ASTER',)
      if j==20 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 5.260E-01,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.03,
          REFERENCE = 'AUTRE_ASTER',)
      if j==30 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 5.247E-01,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.04,
          REFERENCE = 'AUTRE_ASTER',)
      if j==40 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 4.821E-01,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.05,
          REFERENCE = 'AUTRE_ASTER',)
      if j==45 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 4.304E-01,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.02,
          REFERENCE = 'AUTRE_ASTER',)
      if j==48 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      =  4.475E-01,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.02,
          REFERENCE = 'AUTRE_ASTER',)
      if j==49 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 4.346E-01,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.02,
          REFERENCE = 'AUTRE_ASTER',)
      if j==50 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 4.843E-03,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.01,
          REFERENCE = 'AUTRE_ASTER',)
      if j==51 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 4.315E-03,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.01,
          REFERENCE = 'AUTRE_ASTER',)
      if j==75 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 4.036E-04,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-3,
          REFERENCE = 'AUTRE_ASTER',)
      if j==100 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 8.381E-04,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-3,
          REFERENCE = 'AUTRE_ASTER',)

# VERIFICATION POUR LE PARAMETRE SENSIBLE PS_2
    if i==2 :
      if j==1 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 0.,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-6,
          REFERENCE = 'AUTRE_ASTER',)
      if j==5 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 0.,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-6,
          REFERENCE = 'AUTRE_ASTER',)
      if j==10 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 1.258E+03,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==15 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 1.096E+03,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==20 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 9.588E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==30 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 7.532E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==40 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 6.289E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==45 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 5.938E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==48 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 5.807E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==49 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 5.775E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==50 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 7.209E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==51 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 7.209E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==75 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 7.209E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==100 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 7.209E+02,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)

# VERIFICATION POUR LE PARAMETRE SENSIBLE PS_3
    if i==3 :
      if j==1 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 0.,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-6,
          REFERENCE = 'AUTRE_ASTER',)
      if j==5 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 0.,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-6,
          REFERENCE = 'AUTRE_ASTER',)
      if j==10 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 1.554E+03,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==15 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 6.748E+03,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==20 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 1.0531E+04,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==30 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 1.4246E+04,
          CRITERE   = 'ABSOLU',
          PRECISION = 4.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==40 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 1.341E+04,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.5,
          REFERENCE = 'AUTRE_ASTER',)
      if j==45 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 1.148E+04,
          CRITERE   = 'ABSOLU',
          PRECISION = 4.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==48 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 9.873E+03,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==49 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 9.268E+03,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.,
          REFERENCE = 'AUTRE_ASTER',)
      if j==50 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 1.015E-01,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.1,
          REFERENCE = 'AUTRE_ASTER',)
      if j==51 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 9.499E-02,
          CRITERE   = 'ABSOLU',
          PRECISION = 0.1,
          REFERENCE = 'AUTRE_ASTER',)
      if j==75 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 1.863E-03,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-3,
          REFERENCE = 'AUTRE_ASTER',)
      if j==100 :
        TEST_TABLE(
          TABLE     = TBSZ[l],
          NOM_PARA  = 'DIFF',
          TYPE_TEST = 'MAX',
          VALE      = 8.381E-03,
          CRITERE   = 'ABSOLU',
          PRECISION = 1.E-2,
          REFERENCE = 'AUTRE_ASTER',)

    if j>=50 and (i==0 or i==1 or i == 3 or i == 4):
      TEST_RESU(RESU=(
         _F(  RESULTAT = RES,   NUME_ORDRE = j,
              NOM_CHAM = 'SIEF_ELGA', MAILLE = 'MA1', POINT = 1,
              CRITERE = 'ABSOLU', PRECISION = 1.E-5,
              NOM_CMP = 'SIZZ',   SENSIBILITE = PS[i],
              VALE = 0.0, REFERENCE = 'ANALYTIQUE' )))


#
# Verification par differences finies (plasticite)
#

VERI3=[None]*n
MAT3=[None]*n
MATMA3=[None]*n
RES3=[None]*n
TVF=[None]*(n*14)
TVDI=[None]*(n*14)
TV1=[None]*(n*14)
TVFS=[None]*(n*14)

for i in range(n):
  eps = [1.]*n
  eps[i]=1.0 + epsilon
  MAT3[i] = DEFI_MATERIAU(ELAS = _F(E = sensible[0]*eps[0],
                                 NU = sensible[1]*eps[1]),
                       DRUCK_PRAGER = _F(ECROUISSAGE = 'PARABOLIQUE',
                                         ALPHA = sensible[2]*eps[2],
                                         P_ULTM = sensible[3]*eps[3],
                                         SY = sensible[4]*eps[4],
                                         SY_ULTM = sensible[5]*eps[5])
                      );

  MATMA3[i] = AFFE_MATERIAU(MAILLAGE = MAILLAGE,
                          AFFE = _F(TOUT = 'OUI', MATER = MAT3[i]));

  RES3[i] = STAT_NON_LINE(MODELE = MODEMECA,
                       CHAM_MATER = MATMA3[i],
                       EXCIT = (_F(CHARGE = PR_LATE, FONC_MULT = COEF1),
                            _F( CHARGE = DEP_SYM),
                            _F( CHARGE = DEP_V, FONC_MULT = COEF2)),
                       COMP_INCR = _F(RELATION = 'DRUCKER_PRAGER',
                                        RESI_INTE_RELA = 1.E-6,
                                        ITER_INTE_MAXI = 100,
                                        ITER_INTE_PAS  = -10,),
                       INCREMENT = _F(LIST_INST = TEMPS2),
                       NEWTON = _F(MATRICE = 'TANGENTE',
                                   REAC_ITER = 1),
                       CONVERGENCE = _F(RESI_GLOB_RELA = 1.E-6,
                                        ITER_GLOB_MAXI = 100)
                      );

  RES3[i] = CALC_ELEM(reuse=RES3[i],RESULTAT=RES3[i],OPTION='VARI_ELNO_ELGA')

  VERI3[i] = FORMULE(NOM_PARA=('V1_DIF', 'V1_REF','V1_SEN'),
              VALE='abs((V1_DIF - V1_REF)/%f - V1_SEN)' %(sensible[i]*epsilon) )

  for j in [1, 5, 10, 15, 20, 30, 40, 45, 48, 49, 50, 51, 75, 100]:
    k=[1, 5, 10, 15, 20, 30, 40, 45, 48, 49, 50, 51, 75, 100].index(j)
    l=k+14*i


    TVF[l] = POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            NOEUD='NO1',
                            MAILLE='MA1',
                            RESULTAT=RES,
                            NOM_CHAM='VARI_ELNO_ELGA',
                            NUME_ORDRE=j,
                            NOM_CMP='V1',
                            OPERATION='EXTRACTION',),);

    TVDI[l] = POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            NOEUD='NO1',
                            MAILLE='MA1',
                            RESULTAT=RES3[i],
                            NOM_CHAM='VARI_ELNO_ELGA',
                            NUME_ORDRE=j,
                            NOM_CMP='V1',
                            OPERATION='EXTRACTION',),);

    TVFS[l] = POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            NOEUD='NO1',
                            MAILLE='MA1',
                            RESULTAT=RES,
                            NOM_CHAM='VARI_ELNO_ELGA',
                            NUME_ORDRE=j,
                            NOM_CMP='V1',
                            SENSIBILITE=PS[i],
                            OPERATION='EXTRACTION',),);

    TV1[l]=CALC_TABLE(TABLE=TVFS[l],
                        SENSIBILITE=PS[i],
                        ACTION=(_F(OPERATION='RENOMME',
                                   NOM_PARA=('V1', 'V1_SEN'),),
                                _F(OPERATION='COMB',
                                   TABLE=TVF[l],
                                   NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                                _F(OPERATION='RENOMME',
                                   NOM_PARA=('V1', 'V1_REF'),),
                                _F(OPERATION='COMB',
                                   TABLE=TVDI[l],
                                   NOM_PARA=('NUME_ORDRE', 'NOEUD'),),
                                _F(OPERATION='RENOMME',
                                   NOM_PARA=('V1', 'V1_DIF'),),
                                _F(OPERATION='OPER',
                                   NOM_PARA='DIFF',
                                   FORMULE= VERI3[i]),
                                _F(OPERATION='EXTR',
                                   NOM_PARA=('NOEUD', 'NUME_ORDRE', 'INST', 'DIFF', 'V1_SEN','V1_REF', 'V1_DIF'),),
                             ),
                         TITRE='Comparaison entre derivee / differences finies')

    IMPR_TABLE(TABLE=TV1[l],)

    TEST_TABLE(
        TABLE     = TV1[l],
        NOM_PARA  = 'DIFF',
        TYPE_TEST = 'MAX',
        VALE      = 0.,
        CRITERE   = 'ABSOLU',
        PRECISION = 1.E-5,
        REFERENCE = 'AUTRE_ASTER',)

    if j>=50 and (i==3 or i==4):
      TEST_RESU(RESU=(
         _F(  RESULTAT = RES,   NUME_ORDRE = j,
              NOM_CHAM = 'VARI_ELGA', MAILLE = 'MA1', POINT = 1,
              CRITERE = 'ABSOLU', PRECISION = 1.E-14,
              NOM_CMP = 'V1',   SENSIBILITE = PS[i],
              VALE = 0.0, REFERENCE = 'ANALYTIQUE' )))

FIN()
