# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: david.haboussa at edf.fr

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MAIL=LIRE_MAILLAGE(FORMAT='MED',);

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_NO=(_F(GROUP_MA='SYME',),
                               _F(GROUP_MA='EFFO',),
                               _F(GROUP_MA='LIG',),
                               _F(GROUP_MA='NOTCH',),),);

MO=AFFE_MODELE(MAILLAGE=MAIL,
               
               AFFE=_F(GROUP_MA='STOT',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='AXIS_SI',),);

MA_EPR=DEFI_MATERIAU(ELAS=_F(E=200000.0,
                             NU=0.3,
                             ALPHA=0.0,),
                     ECRO_LINE=_F(D_SIGM_EPSI=20000.,
                                  SY=200.,),);

CM=AFFE_MATERIAU(MAILLAGE=MAIL,
                 AFFE=_F(TOUT='OUI',
                         MATER=MA_EPR,),);

CH=AFFE_CHAR_MECA(MODELE=MO,
                  DDL_IMPO=_F(GROUP_NO='LIG',
                              DY=0.0,),);

CHT=AFFE_CHAR_MECA(MODELE=MO,
                   DDL_IMPO=_F(GROUP_NO='EFFO',
                               DY=6.,),);
IFIN = 1.0;


FCT_R=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.0,0.0,
                          IFIN,1.0,
                          ),PROL_DROITE='EXCLU',PROL_GAUCHE='EXCLU',);

L_INST_R=DEFI_LIST_REEL(DEBUT=0.0,
                        INTERVALLE=_F(JUSQU_A=IFIN,
                                      NOMBRE=50,),);

L_ARCH_R=DEFI_LIST_REEL(DEBUT=0.0,
                        INTERVALLE=_F(JUSQU_A=IFIN,
                                      NOMBRE=50,),);


# DEUXIEME CALCUL : GDEF_LOG
# ------------------------------------------------------------

UL=STAT_NON_LINE(MODELE=MO,
                 CHAM_MATER=CM,
                 EXCIT=(_F(CHARGE=CH,),
                        _F(CHARGE=CHT,
                           FONC_MULT=FCT_R,),),
                 COMPORTEMENT=_F(RELATION='VMIS_ISOT_LINE',
                              DEFORMATION = 'GDEF_LOG',),
                 INCREMENT=_F(LIST_INST=L_INST_R,),
                 NEWTON=_F(REAC_INCR=1,
                           MATRICE='TANGENTE',
                           REAC_ITER=1,),
                 CONVERGENCE=_F(ITER_GLOB_MAXI=20,),
                 ARCHIVAGE=_F(LIST_INST=L_ARCH_R,),);

UL=CALC_CHAMP(reuse=UL,RESULTAT=UL,CONTRAINTE=('SIGM_ELNO'),VARI_INTERNE=('VARI_ELNO'))


UL=CALC_CHAMP(reuse =UL,
           RESULTAT=UL,
           FORCE='REAC_NODA',);


# PREMIER CALCUL : SIMO_MIEHE
# ------------------------------------------------------------

UR=STAT_NON_LINE(MODELE=MO,
                 CHAM_MATER=CM,
                 EXCIT=(_F(CHARGE=CH,),
                        _F(CHARGE=CHT,
                           FONC_MULT=FCT_R,),),
                 COMPORTEMENT=_F(RELATION='VMIS_ISOT_LINE',
                              DEFORMATION='SIMO_MIEHE',),
                 INCREMENT=_F(LIST_INST=L_INST_R,),
                 NEWTON=_F(REAC_INCR=1,
                           MATRICE='TANGENTE',
                           REAC_ITER=1,),
                 CONVERGENCE=_F(ITER_GLOB_MAXI=20,),
                 ARCHIVAGE=_F(LIST_INST=L_ARCH_R,),);

UR=CALC_CHAMP(reuse=UR,RESULTAT=UR,CONTRAINTE=('SIGM_ELNO'),VARI_INTERNE=('VARI_ELNO'))


UR=CALC_CHAMP(reuse =UR,
           RESULTAT=UR,
           FORCE='REAC_NODA',);
#-----------------------------------------------------------
# DEPOUILLEMENT DES RESULTATS
# ----------------------------------------------------------

CONTR_R=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                                INTITULE='Contraction diametrale',
                                RESULTAT=UR,
                                NOM_CHAM='DEPL',
                                GROUP_NO='NO_ENT',
                                NOM_CMP='DX',),);

EFFORT_R=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                                 INTITULE='force',
                                 RESULTAT=UR,
                                 NOM_CHAM='REAC_NODA',
                                 GROUP_NO='EFFO',
                                 RESULTANTE='DY',),);

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC= 6.61659675E+03,
           VALE_REFE=6616.5900000000001,
           NOM_PARA='DY',
           TABLE=EFFORT_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=5,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC=-0.084493226,
           VALE_REFE=-0.084500000000000006,
           NOM_PARA='DX',
           TABLE=CONTR_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=5,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC= 2.15415707E+04,
           VALE_REFE=2.154157E4,
           NOM_PARA='DY',
           TABLE=EFFORT_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=25,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC=-0.376658376,
           VALE_REFE=-0.37659999999999999,
           NOM_PARA='DX',
           TABLE=CONTR_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=25,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC= 3.38210257E+04,
           VALE_REFE=3.3821029999999999E4,
           NOM_PARA='DY',
           TABLE=EFFORT_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=50,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=5.0000000000000001E-3,
           VALE_CALC=-0.825727666,
           VALE_REFE=-0.82599999999999996,
           NOM_PARA='DX',
           TABLE=CONTR_R,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=50,),
           )

CONTR_L=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                                INTITULE='Contraction diametrale',
                                RESULTAT=UL,
                                NOM_CHAM='DEPL',
                                GROUP_NO='NO_ENT',
                                NOM_CMP='DX',),);

EFFORT_L=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                                 INTITULE='force',
                                 RESULTAT=UL,
                                 NOM_CHAM='REAC_NODA',
                                 GROUP_NO='EFFO',
                                 RESULTANTE='DY',),);

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=1.E-2,
           VALE_CALC= 6.59686480E+03,
           VALE_REFE=6616.5900000000001,
           NOM_PARA='DY',
           TABLE=EFFORT_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=5,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=1.E-2,
           VALE_CALC=-0.085041571,
           VALE_REFE=-0.084500000000000006,
           NOM_PARA='DX',
           TABLE=CONTR_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=5,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=1.E-2,
           VALE_CALC= 2.13629549E+04,
           VALE_REFE=2.154157E4,
           NOM_PARA='DY',
           TABLE=EFFORT_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=25,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=0.02,
           VALE_CALC=-0.381447104,
           VALE_REFE=-0.37659999999999999,
           NOM_PARA='DX',
           TABLE=CONTR_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=25,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=0.029999999999999999,
           VALE_CALC= 3.31088713E+04,
           VALE_REFE=3.3821E4,
           NOM_PARA='DY',
           TABLE=EFFORT_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=50,),
           )

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=0.040000000000000001,
           VALE_CALC=-0.857560748,
           VALE_REFE=-0.82599999999999996,
           NOM_PARA='DX',
           TABLE=CONTR_L,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=50,),
           )

IMPR_RESU(FORMAT='MED',
          RESU=(_F(RESULTAT=UL,),
                _F(RESULTAT=UR,),),);

FIN();
