# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2019 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# CE TEST EST INSPIRE DE ZZZZ231A
# IL VALIDE LA BONNE EMISSION DE L'ERREUR CONTACT_93

import aster

DEBUT(CODE=_F(
              NIV_PUB_WEB='INTERNET',
              ),
      ERREUR=_F(ERREUR_F='EXCEPTION'),
      IGNORE_ALARM='SUPERVIS_1',
      PAR_LOT='NON',
      DEBUG=_F(SDVERI='OUI'))
# ALARME 'SUPERVIS_1' : PAR_LOT='NON' necessaire pour intercepter l'exception

import re
fmt_raison='-'*80+"""

   Exception interceptee
   Raison : %s

"""+'-'*80+'\n'

MA=LIRE_MAILLAGE(FORMAT='MED');

MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_PEAU_3D=_F(GROUP_MA=('ContVis','ContTrou')));

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI'));

ACIER=DEFI_MATERIAU(ELAS=_F(E=2.0E+11,
                            NU=0.3));

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=ACIER));

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D'));

ENCAST=AFFE_CHAR_MECA(MODELE=MO,
                      DDL_IMPO=_F(GROUP_MA='Base',
                                  LIAISON='ENCASTRE'));

ENCAST2=AFFE_CHAR_MECA(MODELE=MO,
                       DDL_IMPO=_F(GROUP_MA='Dimpo',
                                   LIAISON='ENCASTRE'));

Dimpo=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=_F(GROUP_MA='ContVis',
                                 DZ=-1));

CONT2 = DEFI_CONTACT(MODELE      = MO,
                   FORMULATION   = 'DISCRETE',
                   STOP_INTERP   = 'OUI',
                   ZONE=(
                        _F(
                            RESOLUTION   = 'NON',
                            GROUP_MA_MAIT='ContVis',
                            GROUP_MA_ESCL='ContTrou',
                         ),

                       ),
                  )


RAMPE=DEFI_FONCTION(NOM_PARA='INST',VALE=(0,0,
                          1,1,
                          2,2,
                          ),PROL_DROITE='LINEAIRE');

TPS=DEFI_LIST_REEL(DEBUT=0,
                   INTERVALLE=(_F(JUSQU_A=2,
                                  NOMBRE=1)));

is_ok = 0
try :
    RESU2=STAT_NON_LINE(MODELE=MO,
                        CHAM_MATER=CHMAT,
                        EXCIT=(_F(CHARGE=ENCAST),
                               _F(CHARGE=ENCAST2),
                               _F(CHARGE=Dimpo,
                                  FONC_MULT=RAMPE),
                               ),
                        CONTACT  = CONT2,
                        COMPORTEMENT=_F(RELATION='ELAS',
                                     DEFORMATION='PETIT'),
                        INCREMENT=_F(LIST_INST=TPS),
                        NEWTON=_F(REAC_INCR=1,
                                  MATRICE='TANGENTE',
                                  REAC_ITER=1),
                        SOLVEUR=_F(
                                   METHODE='MUMPS'),
                        CONVERGENCE=_F(RESI_GLOB_RELA=1.0E-6,
                                       ITER_GLOB_MAXI=10));

except aster.error as err:
   print(fmt_raison % str(err))
   # on verifie que l'erreur fatale est bien celle que l'on attendait :
   if err.id_message == "CONTACT_93":
      is_ok = 1

# TEST_RESU
TAB1=CREA_TABLE(LISTE=(_F(PARA='TEST',TYPE_K='K8',LISTE_K='VALEUR  '),
                       _F(PARA='BOOLEEN',LISTE_I=is_ok)))

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=1,
           VALE_REFE_I=1,
           NOM_PARA='BOOLEEN',
           TABLE=TAB1,
           FILTRE=_F(NOM_PARA='TEST',
                     VALE_K='VALEUR  ',),
           )

FIN();
