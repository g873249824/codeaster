# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# ======================================================================
#


DEBUT(PAR_LOT='OUI', CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))

# modules mecaniques [kPa]
K=516.2E6
G=238.2E6
# =>
YOUNG = 9.*K*G /(3.*K+G)
POISSON = (3.*K-2.*G) /(6.*K+2.*G)

print(('young=',YOUNG,' /// nu=',POISSON))

# pression de preconsolidation [en kPa]
PCO=50.E+3

#*******************************************************************
#
#                     INCREMENTS DE CHARGEMENT
#
#*******************************************************************

nb_inst =200
#depzz   =-.000001
epzz_max=.0003
depzz   =epzz_max/nb_inst
tfin    =100.


#***********************************************************************
#    ESSAI TRIAXIAL NON DRAINE CYCLIQUE
#***********************************************************************
SOL=DEFI_MATERIAU(ELAS=_F(E=YOUNG, NU=POISSON, ALPHA=0.),
                  MOHR_COULOMB=_F(
                            PHI      = 33.,
                            ANGDIL   = 27.,
                            COHESION = 1.0E+3,),);

TABTD = CO('TSIMU');

CALC_ESSAI_GEOMECA(INFO=1,
                   MATER=SOL,
                   COMPORTEMENT=_F(RELATION='MOHR_COULOMB',
                                ITER_INTE_PAS=20,),
                   CONVERGENCE=_F(RESI_GLOB_RELA = 1.E-10,
                                  ITER_GLOB_MAXI = 5,),
                   #
                   # Essai triaxial draine
                   ESSAI_TRIA_DR_M_D = _F(PRES_CONF   = PCO,
                                 EPSI_IMPOSE = epzz_max, 
                                 NB_INST     = nb_inst,
                                 TABLE_RESU  = TABTD),);

IMPR_TABLE(TABLE=TABTD);

# =============================================================================
#
#           TEST DES RESULTATS PAR RAPPORT A UNE SOLUTION ANALYTIQUE
#
# =============================================================================

# Calcul de la solution analytique
# ---------------------------------
from Contrib.essai_triaxial import Triaxial_DR

epzz,sizz,sixx,epsivp,epsidp, =\
                Triaxial_DR(K,G,33.,27.,1.e+3,-PCO,-depzz,-epzz_max)


TEST_TABLE(NOM_PARA='SIG_LAT', TABLE=TSIMU,
           FILTRE=_F(NOM_PARA ='EPS_AXI',
                     VALE     =3.E-4,
                     CRITERE  ='ABSOLU',
                     PRECISION=1e-7,),
           # Non-regression
           VALE_CALC=50000.,
           # Reference
           REFERENCE='ANALYTIQUE',
           VALE_REFE=-sixx[-1],);

TEST_TABLE(NOM_PARA='SIG_AXI', TABLE=TSIMU,
           FILTRE=_F(NOM_PARA ='EPS_AXI',
                     VALE     =3.E-4,
                     CRITERE  ='ABSOLU',
                     PRECISION=1e-7,),
           # Non-regression
           VALE_CALC=1.7328954160409E+05,
           # Reference
           REFERENCE='ANALYTIQUE',
           VALE_REFE=-sizz[-1],);

FIN();
