# MODIF  DATE 28/05/2004   AUTEUR LEBOUVIE F.LEBOUVIER 
# TITRE CALCUL DE MODULES EFFECTIFS EN PYTHON
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(NOM='SSLV140A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON',),PAR_LOT='NON');

CUBER=LIRE_MAILLAGE();

MO=AFFE_MODELE(MAILLAGE=CUBER,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

U2=DEFI_FONCTION(NOM_PARA='Y',
                 VALE=(0.0,0.0,1.0,1.0,),
                 PROL_DROITE='LINEAIRE',
                 PROL_GAUCHE='LINEAIRE',);

U3=DEFI_CONSTANTE(VALE=0.0,);

CHARGY=AFFE_CHAR_MECA_F(MODELE=MO,
                       DDL_IMPO=(_F(NOEUD='NO3',
                                    DX=U3,
                                    DY=U3,
                                    DZ=U3,),
                                 _F(GROUP_NO='FACEXZ1',
                                    DY=U3,),
                                 _F(NOEUD='NO7',
                                    DX=U3,),
                                 _F(GROUP_NO='FACEXZ2',
                                    DY=U2,),),);

MAT1=DEFI_MATERIAU(ELAS=_F(E=200000.0,
                           NU=0.3,),);

MAT2=DEFI_MATERIAU(ELAS=_F(E=100000.0,
                           NU=0.3,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=CUBER,
                    AFFE=(_F(GROUP_MA='MA1',
                             MATER=MAT1,),
                          _F(GROUP_MA='MA2',
                             MATER=MAT2,),),);

MESTY=MECA_STATIQUE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   EXCIT=_F(CHARGE=CHARGY,),);

MESTY=CALC_ELEM(reuse =MESTY,
               RESULTAT=MESTY,);

IMPR_RESU(RESU=_F(RESULTAT=MESTY,),);

CONTR=CREA_CHAMP(TYPE_CHAM='ELGA_SIEF_R',
                 OPERATION='EXTR',
                 RESULTAT=MESTY,
                 NOM_CHAM='SIEF_ELGA_DEPL',);

CHAMELG=CALC_CHAM_ELEM(MODELE=MO,
                       CHAM_MATER=CHMAT,
                       OPTION='COOR_ELGA',);
               
SIGY = CONTR.EXTR_COMP('SIYY',[],0)
POIDS=CHAMELG.EXTR_COMP('W',[],1)
nbval = len(SIGY.valeurs)
sigy=[None]*nbval
volume=0
for i in   range(nbval):
    poidg=POIDS.valeurs[i]   
    volume=volume+poidg
somme = 0
for i in   range(nbval):
    sigy[i]=SIGY.valeurs[i]
    poidg=POIDS.valeurs[i]
    somme = somme+sigy[i]*poidg

moduley=somme/volume    
print 'moyenne de SIGY', somme/volume
print 'volume total', volume



U1=DEFI_FONCTION(NOM_PARA='X',
                 VALE=(0.0,0.0,1.0,1.0,),
                 PROL_DROITE='LINEAIRE',
                 PROL_GAUCHE='LINEAIRE',);



CHARGX=AFFE_CHAR_MECA_F(MODELE=MO,
                       DDL_IMPO=(_F(NOEUD='NO3',
                                    DX=U3,
                                    DY=U3,
                                    DZ=U3,),
                                 _F(GROUP_NO='FACEZY1',
                                    DX=U3,),
#                                _F(GROUP_NO='FACEXY1',
#                                    DZ=U3,),
#                                _F(GROUP_NO='FACEXZ1',
#                                    DY=U3,),
                                 _F(NOEUD='NO1',
                                    DZ=U3,),
                                 _F(NOEUD='NO4',
                                    DZ=U3,),
                                 _F(NOEUD='NO10',
                                    DZ=U3,),
                                 _F(GROUP_NO='FACEZY2',
                                    DX=U1,),),);


MESTX=MECA_STATIQUE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   EXCIT=_F(CHARGE=CHARGX,),);

MESTX=CALC_ELEM(reuse =MESTX,
               RESULTAT=MESTX,);

IMPR_RESU(RESU=_F(RESULTAT=MESTX,),);

CONTR1=CREA_CHAMP(TYPE_CHAM='ELGA_SIEF_R',
                 OPERATION='EXTR',
                 RESULTAT=MESTX,
                 NOM_CHAM='SIEF_ELGA_DEPL',);

               
SIGX = CONTR1.EXTR_COMP('SIXX',[],0)

nbval = len(SIGX.valeurs)
sigx=[None]*nbval

somme = 0
for i in   range(nbval):
    sigx[i]=SIGX.valeurs[i]
    poidg=POIDS.valeurs[i]
    somme = somme+sigx[i]*poidg
    
modulex=somme/volume    
print 'moyenne de SIGX', somme/volume

SIGX1 = CONTR1.EXTR_COMP('SIXX',['MA1',],0)
print SIGX1.valeurs
nbval1 = len(SIGX1.valeurs)
sigx1=[None]*nbval1
POIDS1=CHAMELG.EXTR_COMP('W',['MA1',],1)
volume1=0
for i in   range(nbval1):
    poidg1=POIDS1.valeurs[i]   
    volume1=volume1+poidg1
somme1 = 0
for i in   range(nbval1):
    sigx1[i]=SIGX1.valeurs[i]
    poidg1=POIDS1.valeurs[i]
    somme1 = somme1+sigx1[i]*poidg1
    
print 'moyenne de SIGX1', somme1/volume1

TB1=CREA_TABLE(LISTE=(_F(LISTE_I=(1,2),
                         PARA='CAS'),
                      _F(LISTE_R=(moduley,modulex),
                         PARA='MODULE'))); 
IMPR_TABLE(TABLE=TB1)
                         
TEST_TABLE(TABLE=TB1,
           FILTRE=_F(NOM_PARA='CAS',
                     VALE_I=1),
           NOM_PARA='MODULE',
           REFERENCE='ANALYTIQUE',
           VALE=150000);

TEST_TABLE(TABLE=TB1,
           FILTRE=_F(NOM_PARA='CAS',
                     VALE_I=2),
           NOM_PARA='MODULE',
           REFERENCE='ANALYTIQUE',PRECISION=0.02,
           VALE=133333);

FIN();
