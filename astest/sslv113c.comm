# TITRE TEST DE L'ESTIMATEUR D'ERREUR EN QUANTITE D'INTERET
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# person_in_charge: josselin.delmas at edf.fr

DEBUT(CODE=_F(
              NIV_PUB_WEB='INTERNET',),
      DEBUG=_F(SDVERI='OUI',),);

MESH=LIRE_MAILLAGE(FORMAT='MED',);

MO=AFFE_MODELE(MAILLAGE=MESH,
               VERIF='MAILLE',
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='AXIS',),);

MESH=MODI_MAILLAGE(reuse =MESH,
                   MAILLAGE=MESH,
                   ORIE_PEAU_2D=_F(GROUP_MA=('GRMA1','GRMA2','GRMA3','GRMA4',),),);
##IMPR_RESU(
##FORMAT='MED',
##
##RESU=_F(MAILLAGE=MESH,),
##);


MA1=DEFI_MATERIAU(ELAS=_F(E=2.0,
                          NU=0.3,
                          ALPHA=0.0,),);

MA2=DEFI_MATERIAU(ELAS=_F(E=1.0,
                          NU=0.3,
                          ALPHA=0.0,),);

CM=AFFE_MATERIAU(MAILLAGE=MESH,
                 AFFE=(_F(GROUP_MA='DOM1',
                          MATER=MA1,),
                       _F(GROUP_MA='DOM2',
                          MATER=MA2,),),);

#-----------------------------------------------------------------------
#
#  RESOLUTION DU PROBLEME PRIMAL
#    =>ASSEMBLAGE DE L(.)
#    =>ASSEMBLAGE DE A(.,.)
#    =>RESOLUTION
#    =>CALCUL DE L'ESTIMATEUR EN RESIDU POUR LE PRIMAL
#
#-----------------------------------------------------------------------

CHARPRIM=AFFE_CHAR_MECA(MODELE=MO,
                        FACE_IMPO=(_F(GROUP_MA='GRMA1',
                                      DY=0.0,),
                                   _F(GROUP_MA='GRMA2',
                                      DY=0.91333,),),
                        FORCE_CONTOUR=(_F(GROUP_MA='GRMA3',
                                          FX=1.0,),
                                       _F(GROUP_MA='GRMA4',
                                          FX=-2.0,),),);

RESUPRIM=MECA_STATIQUE(MODELE=MO,
                       CHAM_MATER=CM,
                       EXCIT=_F(CHARGE=CHARPRIM,),);

RESUPRIM=CALC_ERREUR(reuse =RESUPRIM,
                   RESULTAT=RESUPRIM,
                   TOUT_ORDRE='OUI',
                   OPTION='ERME_ELEM',);

#-----------------------------------------------------------------------
#
#  RESOLUTION DU PROBLEME DUAL
#    =>ASSEMBLAGE DE Q(.)
#    =>ASSEMBLAGE DE A(.,.)
#    =>RESOLUTION
#    =>CALCUL DE L'ESTIMATEUR EN RESIDU POUR LE DUAL
#
#-----------------------------------------------------------------------

CHARDUAL=AFFE_CHAR_MECA(MODELE=MO,
                        FACE_IMPO=(_F(GROUP_MA='GRMA1',
                                      DY=0.0,),
                                   _F(GROUP_MA='GRMA2',
                                      DY=0.91333,),),
                        FORCE_CONTOUR=(_F(GROUP_MA='GRMA3',
                                          FX=0.0,),
                                       _F(GROUP_MA='GRMA4',
                                          FX=0.0,),),
                        FORCE_INTERNE=_F(TOUT='OUI',
                                         FX=1.0,),);

RESUDUAL=MECA_STATIQUE(MODELE=MO,
                       CHAM_MATER=CM,
                       EXCIT=_F(CHARGE=CHARDUAL,),);

RESUDUAL=CALC_ERREUR(reuse =RESUDUAL,
                   RESULTAT=RESUDUAL,
                   TOUT_ORDRE='OUI',
                   OPTION='ERME_ELEM',);

#-----------------------------------------------------------------------
#
#  CALCUL DE L'ESTIMATEUR D'ERREUR EN QUANTITE D'INTERET
#
#-----------------------------------------------------------------------

RESUPRIM=CALC_ERREUR(reuse =RESUPRIM,
                   RESULTAT=RESUPRIM,
                   OPTION=('QIRE_ELEM','QIRE_ELNO',),
                   RESU_DUAL=RESUDUAL,);

#-----------------------------------------------------------------------
#
#  TESTS DE NON REGRESSION
#
#-----------------------------------------------------------------------

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  POINT=1,
                  RESULTAT=RESUPRIM,
                  NOM_CHAM='ERME_ELEM',
                  NOM_CMP='ERREST',
                  VALE_CALC=0.015854340000000001,
                  
                  CRITERE='RELATIF',
                  MAILLE='M1',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  POINT=1,
                  RESULTAT=RESUPRIM,
                  NOM_CHAM='QIRE_ELEM',
                  NOM_CMP='ERREST',
                  VALE_CALC=-0.01064853,
                  
                  CRITERE='RELATIF',
                  MAILLE='M1',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  RESULTAT=RESUPRIM,
                  NOM_CHAM='QIRE_ELNO',
                  NOEUD='N1',
                  NOM_CMP='ERREST',
                  VALE_CALC=-2.5606039799999999E-4,
                  
                  CRITERE='RELATIF',
                  MAILLE='M4',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  PARA='ERREUR_QIRE',
                  RESULTAT=RESUPRIM,
                  VALE_CALC=0.012093681,
                  
                  CRITERE='RELATIF',
                  ),
          )

FIN();
