# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# person_in_charge: mathieu.courtois at edf.fr
# .comm : en PAR_LOT='OUI'
# .com1 : en PAR_LOT='NON'
# .com2 : THER_LINEAIRE en PAR_LOT='NON'
# .com3 : THER_LINEAIRE en PAR_LOT='OUI'

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
      PAR_LOT='OUI',
      IMPR_MACRO='OUI',)

def ma_macro_ops(self, TABLE, **kwargs):
    """Corps de la macro de test."""
    CREA_TABLE = self.get_cmd('CREA_TABLE')
    self.set_icmd(1)
    # on cree une table que l'on retourne soit sous le mot-cle TABLE,
    # soit en concept principal.
    self.DeclareOut('tabout', TABLE or self.sd)
    tabout = CREA_TABLE(LISTE=_F(PARA='NUME',
                                 LISTE_I=range(5),),)
    return 0

def ma_macro_prod(self, TABLE, **kwargs):
    """Declaration des concepts de sortie"""
    if TABLE:
        self.type_sdprod(TABLE, table_sdaster)
        return None
    return table_sdaster

MA_MACRO = MACRO(nom="MA_MACRO",
                 op=ma_macro_ops,
                 sd_prod=ma_macro_prod,
                 TABLE = SIMP(statut='f', typ=CO,),)

MA_MACRO(TABLE=CO('tabd'))
tabg = MA_MACRO()

IMPR_TABLE(TABLE=tabd,
           UNITE=6)

DETRUIRE(CONCEPT=_F(NOM=tabd),)

IMPR_TABLE(TABLE=tabg,
           UNITE=6)

DETRUIRE(CONCEPT=_F(NOM=tabg),)

FIN()
