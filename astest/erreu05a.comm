# person_in_charge: mathieu.courtois at edf.fr
# TITRE VERIFICATION DE LA RECUPERATION DES ERREURS FATALES DANS STAT_NON_LINE
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(
              NIV_PUB_WEB='INTERNET',
              VISU_EFICAS='OUI',),
      ERREUR=_F(ERREUR_F='EXCEPTION'),
PAR_LOT='NON',IGNORE_ALARM='SUPERVIS_1',DEBUG=_F(SDVERI='OUI'))
# ALARME 'SUPERVIS_1' : PAR_LOT necessaire pour intercepter l'exception


# fonctions valides sur l'intervalle t=[0 C, 5 C]
f_young=DEFI_FONCTION(NOM_PARA='TEMP',
                      VALE=(0., 200.e9, 5., 200.e9),)

f_nu=DEFI_FONCTION(NOM_PARA='TEMP',
                   VALE=(0., 0.3, 5., 0.3),)

f_alpha=DEFI_FONCTION(NOM_PARA='TEMP',
                      VALE=(0., 1.e-5, 5., 1.e-5),)

mat=DEFI_MATERIAU(ELAS_FO=_F(E=f_young,
                             NU=f_nu,
                             ALPHA=f_alpha,
                             TEMP_DEF_ALPHA=0.),)

mail=LIRE_MAILLAGE(FORMAT='MED',)

chtemp0=CREA_CHAMP(TYPE_CHAM='NOEU_TEMP_R',
                   OPERATION='AFFE',
                   MAILLAGE=mail,
                   AFFE=_F(TOUT='OUI',
                   NOM_CMP='TEMP',
                   VALE=0.),)

chtemp5=CREA_CHAMP(TYPE_CHAM='NOEU_TEMP_R',
                   OPERATION='AFFE',
                   MAILLAGE=mail,
                   AFFE=_F(TOUT='OUI',
                   NOM_CMP='TEMP',
                   VALE=10.),)

# evolution de temperature : T(0s)=0 C, T(10s)=10 C
evolT=CREA_RESU(OPERATION='AFFE',
                TYPE_RESU='EVOL_VARC',
                NOM_CHAM='TEMP',
                AFFE=(_F(CHAM_GD=chtemp0, INST=0.),
                      _F(CHAM_GD=chtemp5, INST=10.),),)

model=AFFE_MODELE(MAILLAGE=mail,
                  AFFE=_F(TOUT='OUI',
                         PHENOMENE='MECANIQUE',
                         MODELISATION='C_PLAN',),)

chmat=AFFE_MATERIAU(MAILLAGE=mail,
                    AFFE=_F(TOUT='OUI',
                            MATER=mat,),
                    AFFE_VARC=_F(NOM_VARC='TEMP',
                                 EVOL=evolT,
                                 VALE_REF=0.),)

char=AFFE_CHAR_MECA(MODELE=model,
                    DDL_IMPO=(_F(GROUP_MA='bas',
                                 DY=0.0,),
                              _F(GROUP_MA='gauche',
                                 DX=0.0,),),)

# le calcul sera donc possible ) t=0s et t=3s mais pas t=6s
l_inst=DEFI_LIST_REEL(VALE=(0., 3., 6.),)

inst=DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=l_inst,),)

try:
   resu=STAT_NON_LINE(MODELE=model,
                      CHAM_MATER=chmat,
                      EXCIT=_F(CHARGE=char,),
                      COMPORTEMENT=_F(RELATION='ELAS',),
                      INCREMENT=_F(LIST_INST=inst),)
except aster.error:
   # on verifiera l'etat de 'resu' dans la POURSUITE
   pass

resu = EXTR_RESU(RESULTAT=resu,ARCHIVAGE=_F(NUME_ORDRE=1))

FIN()
