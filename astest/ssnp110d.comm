# TITRE  FISSURE DE BORD EN ELASTOPLASTICITE DANS UNE PLAQUE
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

#            C: MODELISATION 2D X-FEM AVEC ELEMENTS LINEAIRES

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

relation = 'VMIS_ISOT_LINE',

MAILLAG2=LIRE_MAILLAGE(FORMAT='MED',)


#----------------------------------------
# epaisseur (suivant x)
lx = 16.

# largeur (suivant y)
ly = 50.


# nb element suivant la largeur
nx = 18.

# nb element suivant la hauteur
ny = 31.

# longueur de la fissure
a = 6
#----------------------------------------

# tailles des elements suivant x et y
hy = ly/ny
hx = lx/nx

# creation des noeuds servant a bloquer les modes rigides
MAILLAG2=DEFI_GROUP(reuse =MAILLAG2,
                 MAILLAGE=MAILLAG2,
                 CREA_GROUP_NO=(
                                 _F(NOM='A1',OPTION='ENV_SPHERE',POINT=(lx-a,      -hy/2.),PRECISION=1/(8.*ny),RAYON=1/(8.*ny)),
                                 _F(NOM='A2',OPTION='ENV_SPHERE',POINT=(lx-a,       hy/2.),PRECISION=1/(8.*ny),RAYON=1/(8.*ny)),
                                 _F(NOM='C1',OPTION='ENV_SPHERE',POINT=(lx-a-2*hx, -hy/2.),PRECISION=1/(8.*ny),RAYON=1/(8.*ny)),
                                 _F(NOM='C2',OPTION='ENV_SPHERE',POINT=(lx-a-2*hx,  hy/2.),PRECISION=1/(8.*ny),RAYON=1/(8.*ny)),
                                ),
                 );

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAG2,
                     AFFE=(_F(GROUP_MA=('SURFTOT'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='C_PLAN',
                              ),
                           _F(GROUP_MA=('LIG1','LIG3'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='C_PLAN',
                              )));


LN=FORMULE(NOM_PARA=('X','Y'),VALE='Y');
LT=FORMULE(NOM_PARA=('X','Y'),VALE='X');

FISS=DEFI_FISS_XFEM(MODELE=MODELEIN,
                    DEFI_FISS=_F(FONC_LT=LT,FONC_LN=LN),
                    );

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,
                         CONTACT='OUI',
                         FISSURE=FISS,
                         INFO=1);


CTXFEM = DEFI_CONTACT(MODELE         = MODELEK,
                      FORMULATION    = 'XFEM',
                      ITER_CONT_MAXI = 20,
                      ZONE=_F(
                             FISS_MAIT    = FISS,
                             INTEGRATION  = 'GAUSS',
                             ORDRE_INT    = 3,
                             CONTACT_INIT = 'OUI',
                             ALGO_CONT    = 'STANDARD',
                             COEF_CONT    = 100.,
                         ),
                   )

#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

MAT=DEFI_MATERIAU(ELAS=_F(E = 2.0601E5, NU = 0.3, ALPHA = 0.),
                  ECRO_LINE=_F(  D_SIGM_EPSI = 0.0, SY = 808.344)
                         )
CHAMPMA1=AFFE_MATERIAU(MAILLAGE=MAILLAG2,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT = 'OUI',
                                MATER=MAT,
                                ),
                             );

#----------------------------------------------------------
#                   CHARGEMENT
#----------------------------------------------------------

# blocage des modes rigides
CH=AFFE_CHAR_MECA(MODELE=MODELEK,
                  LIAISON_DDL=(
                               _F(GROUP_NO=('A1','A2'),DDL=('DX','DX'),COEF_MULT=(0.5,0.5),COEF_IMPO=0.),
                               _F(GROUP_NO=('A1','A2'),DDL=('DY','DY'),COEF_MULT=(0.5,0.5),COEF_IMPO=0.),
                               _F(GROUP_NO=('C1','C2'),DDL=('DY','DY'),COEF_MULT=(0.5,0.5),COEF_IMPO=0.),
                              ),
                  );

CHF=AFFE_CHAR_MECA(MODELE=MODELEK,
                   DDL_IMPO=(
                             _F(GROUP_MA='LIG1',DY = -1.),
                             _F(GROUP_MA='LIG3',DY =  1.),
                            ),
                   );

RAMPE=DEFI_FONCTION(  NOM_PARA='INST',
                        VALE=(0.,0.,0.1,0.1,0.2,0.0,0.3,-0.1),
                        PROL_DROITE='LINEAIRE'
                      )
#----------------------------------------------
#                   RESOLUTION
#----------------------------------------------
npas = 50
L_INST=DEFI_LIST_REEL(DEBUT=0.,
                      INTERVALLE=(
                                  _F( JUSQU_A = 0.1,  NOMBRE = npas),
                                  _F( JUSQU_A = 0.2,  NOMBRE = npas/2),
                                  _F( JUSQU_A = 0.3,  NOMBRE = npas),
                                  )
                        )

UTOT1=STAT_NON_LINE(MODELE=MODELEK,
                   CHAM_MATER=CHAMPMA1,
                   EXCIT=(
                          _F(CHARGE=CHF,FONC_MULT = RAMPE),
                          _F(CHARGE=CH),
                          ),
                   CONTACT = CTXFEM,
                       COMPORTEMENT=_F(
                                   RELATION = relation,
                                    DEFORMATION = 'PETIT'),
                   INCREMENT=_F(LIST_INST = L_INST),
                   CONVERGENCE=_F(RESI_GLOB_RELA = 1.E-5),
                   SOLVEUR=_F(   METHODE='MUMPS'),
                   NEWTON=_F(REAC_ITER=1,
                             MATRICE='TANGENTE',
                            ),
                   INFO=1);

#------------------------------------------------------------------------
# POST-TRAITEMENT : VISUALISATION DES DEPLACEMENTS
#------------------------------------------------------------------------

MA_XFEM=POST_MAIL_XFEM(MODELE        = MODELEK)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=(_F(TOUT='OUI',
                              PHENOMENE='MECANIQUE',
                              MODELISATION='C_PLAN')),
                              );

RES_XFEM=POST_CHAM_XFEM(MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT1,
                        )


DEPL_1 = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R',
                    NUME_ORDRE=npas,
                    OPERATION='EXTR',
                    RESULTAT = RES_XFEM,
                    NOM_CHAM='DEPL',
                   );

DEPL_2 = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R',
                    NUME_ORDRE=3*npas/2,
                    OPERATION='EXTR',
                    RESULTAT = RES_XFEM,
                    NOM_CHAM='DEPL',
                   );

MA_XFEM=DEFI_GROUP(reuse=MA_XFEM,
                   MAILLAGE=MA_XFEM,
                   CREA_GROUP_NO= _F(NOM = 'NTEST',
                                     OPTION='ENV_SPHERE',
                                     POINT=(-a, 0.),
                                     PRECISION=0.0001,
                                     RAYON=0.0001));

TABDEP_1= POST_RELEVE_T ( ACTION =_F(INTITULE  = 'DEPLACEMENT_FISSURE',
                                   GROUP_NO  = 'NTEST',
                                   CHAM_GD   = DEPL_1,
                                   NOM_CMP   = ( 'DX','DY'),
                                   OPERATION = 'EXTRACTION'));

TABDEP_2= POST_RELEVE_T ( ACTION =_F(INTITULE  = 'DEPLACEMENT_FISSURE',
                                   GROUP_NO  = 'NTEST',
                                   CHAM_GD   = DEPL_2,
                                   NOM_CMP   = ( 'DX','DY'),
                                   OPERATION = 'EXTRACTION'));

# CETTE VALEUR A ETE OBTENUE PAR LA MODELISATION A
DEPREF_1=9.8756898959655E-02;
# CETTE VALEUR EST DE NON REGRESSION
DEPREF_2=1.7771170448857E-02;

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='AUTRE_ASTER',
           PRECISION=0.04,
           VALE_CALC=-0.095328626,
           VALE_REFE=-0.098756898959655004,
           NOM_PARA='DY',
           TYPE_TEST='MIN',
           TABLE=TABDEP_1,)

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='AUTRE_ASTER',
           PRECISION=0.04,
           VALE_CALC=0.095318373,
           VALE_REFE=0.098756898959655004,
           NOM_PARA='DY',
           TYPE_TEST='MAX',
           TABLE=TABDEP_1,)

TEST_TABLE(CRITERE='RELATIF',
           VALE_CALC=-0.017771170448857,
           NOM_PARA='DY',
           TYPE_TEST='MIN',
           TABLE=TABDEP_2,
           )

TEST_TABLE(CRITERE='RELATIF',
           VALE_CALC=0.017757778886353,
           NOM_PARA='DY',
           TYPE_TEST='MAX',
           TABLE=TABDEP_2,
           )

# VALEUR DE NON REGRESSION  OBTENUE AVEC LA 10.01
VREF_1=1.2697828769295E-02
# VALEUR DE NON REGRESSION  OBTENUE AVEC LA 10.01.25
VREF_2=2.4507420622247E-02

TEST_RESU(RESU=(_F(INST=0.1,
                   POINT=10,
                   RESULTAT=UTOT1,
                   NOM_CHAM='VARI_ELGA',
                   NOM_CMP='V1',
                   VALE_CALC=0.012697828769295001,
                   MAILLE='M277',),
                _F(INST=0.14,
                   POINT=10,
                   RESULTAT=UTOT1,
                   NOM_CHAM='VARI_ELGA',
                   NOM_CMP='V1',
                   VALE_CALC=0.012697828769295001,
                   MAILLE='M277',),
                _F(INST=0.3,
                   POINT=10,
                   RESULTAT=UTOT1,
                   NOM_CHAM='VARI_ELGA',
                   NOM_CMP='V1',
                   VALE_CALC=0.024507420622246999,
                   MAILLE='M277',),
                ),
          )

FIN()
#
