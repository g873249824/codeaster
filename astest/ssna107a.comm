# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: philippe.de-bonnieres at edf.fr

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MA = LIRE_MAILLAGE(FORMAT='MED',);

MA = DEFI_GROUP(reuse =MA,
                MAILLAGE=MA,
                CREA_GROUP_NO =(
                       _F(GROUP_MA = 'DAB',),
                       _F(GROUP_MA = 'DCD',),
                        )
                )

MO = AFFE_MODELE( MAILLAGE =MA,
                  AFFE=_F(
                       TOUT ='OUI',
                       PHENOMENE = 'MECANIQUE',
                       MODELISATION = 'AXIS',)
                 )

MAT = DEFI_MATERIAU(
            ELAS=_F( E = 1., NU = 0.3, ALPHA = 0.),
            LEMAITRE=_F( N = 2.,UN_SUR_K = 1.,UN_SUR_M = 0.)
           )
CHMAT = AFFE_MATERIAU (MAILLAGE = MA,
                       AFFE =_F(TOUT='OUI',
                                MATER = MAT,
                                )
                       )

# DEFORMATION AXIALE IMPOSEE
# ON IMPOSE UN DEPLACEMENT EN DZ SUR LES FACES SUPERIEURES
# ET INFERIEURES DU CYLINDRE.


F_DEPL = DEFI_FONCTION (NOM_PARA = 'INST',
                        PROL_DROITE = 'CONSTANT',
                        PROL_GAUCHE = 'CONSTANT',
                        VALE =( 0.,  0.,
                                2.,  0.25,
                                4.,  0.25,),
                        )
F_MDEPL = DEFI_FONCTION (NOM_PARA = 'INST',
                        PROL_DROITE = 'CONSTANT',
                        PROL_GAUCHE = 'CONSTANT',
                        VALE =( 0.,  0.,
                                2.,  -0.25,
                                4.,  -0.25,),
                        )


CHAR = AFFE_CHAR_MECA_F (MODELE = MO,
                       DDL_IMPO=(
                              _F(GROUP_NO ='DCD',
                                   DY=F_DEPL),
                              _F(GROUP_NO ='DAB',
                                   DY=F_MDEPL),
                      ))


L_INST=DEFI_LIST_REEL(  DEBUT=0.0,
                        INTERVALLE=(
                        _F( PAS = 0.01,        JUSQU_A = 0.1),
                        _F( PAS = 0.02,        JUSQU_A = 0.3),
                        _F( PAS = 0.05,        JUSQU_A = 1.),
                        _F( PAS = 0.1,         JUSQU_A = 4.),
                                     )
                      )

RESU = STAT_NON_LINE (MODELE = MO,
                      CHAM_MATER = CHMAT,
                      EXCIT =(
                         _F( CHARGE = CHAR),),
                      COMPORTEMENT =_F(RELATION ='LEMAITRE',PARM_THETA = 0.5,
                                    ITER_INTE_MAXI = 1000),
                      INCREMENT =_F(LIST_INST =L_INST,  ),
                      NEWTON    =_F(
                                MATRICE ='TANGENTE',
                                REAC_ITER= 1),
                      CONVERGENCE=_F(
                                RESI_GLOB_RELA = 1.E-6,
                                ITER_GLOB_MAXI = 25)
                        )

RESU = CALC_CHAMP( reuse= RESU,
                  RESULTAT = RESU,
                   CONTRAINTE=('SIGM_ELNO'),)
RESU = CALC_CHAMP ( reuse= RESU,
                  RESULTAT = RESU,
                  CONTRAINTE='SIGM_NOEU',)

TEST_RESU(RESU=(_F(NUME_ORDRE=64,
                   GROUP_NO='B',
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   VALE_CALC=-0.210902506,
                   VALE_REFE=-0.2109,),
                _F(NUME_ORDRE=64,
                   GROUP_NO='B',
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU,
                   NOM_CHAM='SIGM_NOEU',
                   NOM_CMP='SIYY',
                   VALE_CALC=0.216164176,
                   VALE_REFE=0.21615999999999999,),
                _F(NUME_ORDRE=64,
                   GROUP_NO='B',
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU,
                   NOM_CHAM='SIGM_NOEU',
                   NOM_CMP='SIXX',
                   VALE_CALC= 4.82452910E-09,
                   VALE_REFE=0.0,
                   CRITERE='ABSOLU',),
                _F(NUME_ORDRE=64,
                   GROUP_NO='B',
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU,
                   NOM_CHAM='SIGM_NOEU',
                   NOM_CMP='SIZZ',
                   VALE_CALC= 4.82452898E-09,
                   VALE_REFE=0.0,
                   CRITERE='ABSOLU',),
                ),
          )

FIN()
