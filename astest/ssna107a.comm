# MODIF  DATE 13/01/2011   AUTEUR PELLET J.PELLET 
# RESPONSABLE F6BHHBO P.DEBONNIERES
# TITRE CYLINDRE CREUX VISCOPLASTICITE NON-LINEAIRE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='SSNA107A',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

PRE_GIBI()

MA = LIRE_MAILLAGE();

MA = DEFI_GROUP(reuse =MA,
                MAILLAGE=MA,
                CREA_GROUP_NO =(
                       _F(GROUP_MA = 'DAB',),
                       _F(GROUP_MA = 'DCD',),
                        )
                )

MO = AFFE_MODELE( MAILLAGE =MA,
                  AFFE=_F(
                       TOUT ='OUI',
                       PHENOMENE = 'MECANIQUE',
                       MODELISATION = 'AXIS',)
                 )

MAT = DEFI_MATERIAU(
            ELAS=_F( E = 1., NU = 0.3, ALPHA = 0.),
            LEMAITRE=_F( N = 2.,UN_SUR_K = 1.,UN_SUR_M = 0.)
           )
CHMAT = AFFE_MATERIAU (MAILLAGE = MA,
                       AFFE =_F(TOUT='OUI',
                                MATER = MAT,
                                )
                       )

# DEFORMATION AXIALE IMPOSEE
# ON IMPOSE UN DEPLACEMENT EN DZ SUR LES FACES SUPERIEURES
# ET INFERIEURES DU CYLINDRE.


F_DEPL = DEFI_FONCTION (NOM_PARA = 'INST',
                        PROL_DROITE = 'CONSTANT',
                        PROL_GAUCHE = 'CONSTANT',
                        VALE =( 0.,  0.,
                                2.,  0.25,
                                4.,  0.25,),
                        )
F_MDEPL = DEFI_FONCTION (NOM_PARA = 'INST',
                        PROL_DROITE = 'CONSTANT',
                        PROL_GAUCHE = 'CONSTANT',
                        VALE =( 0.,  0.,
                                2.,  -0.25,
                                4.,  -0.25,),
                        )


CHAR = AFFE_CHAR_MECA_F (MODELE = MO,
                       DDL_IMPO=(
                              _F(GROUP_NO ='DCD',
                                   DY=F_DEPL),
                              _F(GROUP_NO ='DAB',
                                   DY=F_MDEPL),
                      ))


L_INST=DEFI_LIST_REEL(  DEBUT=0.0,
                        INTERVALLE=(
                        _F( PAS = 0.01,        JUSQU_A = 0.1),
                        _F( PAS = 0.02,        JUSQU_A = 0.3),
                        _F( PAS = 0.05,        JUSQU_A = 1.),
                        _F( PAS = 0.1,         JUSQU_A = 4.),
                                     )
                      )

RESU = STAT_NON_LINE (MODELE = MO,
                      CHAM_MATER = CHMAT,
                      EXCIT =(
                         _F( CHARGE = CHAR),),
                      COMP_INCR =_F(RELATION ='LEMAITRE',PARM_THETA = 0.5,
                                    ITER_INTE_MAXI = 1000),
                      INCREMENT =_F(LIST_INST =L_INST,  ),
                      NEWTON    =_F(
                                MATRICE ='TANGENTE',
                                REAC_ITER= 1),
                      CONVERGENCE=_F(
                                RESI_GLOB_RELA = 1.E-6,
                                ITER_GLOB_MAXI = 25)
                        )

RESU = CALC_ELEM( reuse= RESU,
                  RESULTAT = RESU,
                  OPTION = 'SIEF_ELNO',)
RESU = CALC_NO ( reuse= RESU,
                  RESULTAT = RESU,
                  OPTION = 'SIEF_NOEU',)

TEST_RESU(
          RESU=(_F(RESULTAT = RESU,
                   NUME_ORDRE = 64,
                   NOM_CHAM ='DEPL',
                   GROUP_NO ='B',
                   NOM_CMP ='DX',
                   VALE= -0.2109,
                   REFERENCE='ANALYTIQUE'),
                _F(RESULTAT = RESU,
                   NUME_ORDRE = 64,
                   NOM_CHAM ='SIEF_NOEU',
                   GROUP_NO ='B',
                   NOM_CMP ='SIYY',
                   VALE= 0.21616,
                   REFERENCE='ANALYTIQUE'),
                _F(RESULTAT = RESU,
                   NUME_ORDRE = 64,
                   NOM_CHAM ='SIEF_NOEU',
                   GROUP_NO ='B',
                   NOM_CMP ='SIXX',
                   VALE= 0.,
                   CRITERE='ABSOLU',
                   REFERENCE='ANALYTIQUE'),
                _F(RESULTAT = RESU,
                   NUME_ORDRE = 64,
                   NOM_CHAM ='SIEF_NOEU',
                   GROUP_NO ='B',
                   NOM_CMP ='SIZZ',
                   VALE= 0.,
                   CRITERE='ABSOLU',
                   REFERENCE='ANALYTIQUE')

         ))




FIN()
