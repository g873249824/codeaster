# MODIF  DATE 05/03/2012   AUTEUR PELLET J.PELLET 
# TITRE FISSURE INCLINEE EN 2D AVEC X-FEM
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# ssnp138c.para = tps_job 300 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='SSNP138C',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'));


#*********************************************************
#                    GEOMETRIE
#                    *********
#     Parametres a modifier avec le maillage
#*********************************************************
#
# LARGEUR DE L EPROUVETTE SELON X
W = 0.2 ;
#
# HAUTEUR DE L EPROUVETTE SELON Y
H = 0.5 ;
#
# NOMBRE D ELEMENTS SELON X
NX = 100. ;
#
# NOMBRE D ELEMENTS SELON Y
NY = 100. ;
#
# precision
eps = sqrt((W/NX)**2+(H/NY)**2)

#*********************************************************

# LONGUEUR DE LA FISSURE
A = 0.04 ;

# PRESSION APPLIQUEE SUR LES FACES INFERIEURE ET SUPERIEURE
PRES=-1.e6

# DEFINITION DU MATERIAU
E   = 210E9;
nu  = 0.3;
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu),);

#*********************************************************

# ANGLES D INCLINAISON DE LA FISSURE (EN DEGRES)
alphaf = [0.,30.,60.] ;

# DEFINITION DES COURONNES POUR LE CALCUL DES SIF
RI=[0.1*A,   eps]
RS=[0.3*A, 3*eps]

#----------------------------------------------
#                MAILLAGE, MODELE INITIAL
#----------------------------------------------

#MAILLAGE=LIRE_MAILLAGE(INFO=1,FORMAT='MED',);

PRE_GIBI();

MAILLAGE=LIRE_MAILLAGE();

MAILLAGE=DEFI_GROUP( reuse =MAILLAGE,
                     MAILLAGE=MAILLAGE,
                     CREA_GROUP_NO=(_F(NOM='NA',OPTION='ENV_SPHERE',POINT=(-W/2.,0.),PRECISION=eps/4.,RAYON=eps/4.),
                                    _F(NOM='NB',OPTION='ENV_SPHERE',POINT=(+W/2.,0.),PRECISION=eps/4.,RAYON=eps/4.),
                                    _F(NOM='NC',OPTION='ENV_SPHERE',POINT=(0.,-H/2.),PRECISION=eps/4.,RAYON=eps/4.),
                                    _F(NOM='ND',OPTION='ENV_SPHERE',POINT=(0.,+H/2.),PRECISION=eps/4.,RAYON=eps/4.),
                                    ),
                      INFO=2 );
MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAGE,
                     AFFE= _F(GROUP_MA=('SURF','LIG1','LIG3'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='D_PLAN'));

MAILLAGE=MODI_MAILLAGE(reuse =MAILLAGE,
                       MAILLAGE=MAILLAGE,
                       ORIE_PEAU_2D=_F(GROUP_MA=('LIG1','LIG3',),),
                       );

#----------------------------------------------
#         DEBUT DE LA BOUCLE SUR LES ANGLES
#----------------------------------------------

nbcalc = len(alphaf)
alpha = [None]*nbcalc
#LN = [None]*nbcalc
#LT = [None]*nbcalc
FISS = [None]*nbcalc
MODELK = [None]*nbcalc
CHMA = [None]*nbcalc
CH = [None]*nbcalc
UTOT2 = [None]*nbcalc
UTOT2 = [None]*nbcalc

nbc=len(RI)
SIF_1 = [None]*(nbc*nbcalc)
SIF_2 = [None]*(nbc*nbcalc)
TG_1 = [None]*(nbc*nbcalc)

for i in range(nbcalc) :
#
# DEFINITION DES LEVEL SET
#
# on passe pas un string pour que l evaluation de la fonction se fasse a chaque pas
  alpha = str(eval('alphaf[i]*pi/180.'))

  FISS[i]=DEFI_FISS_XFEM(MODELE=MODELEIN,
                    DEFI_FISS=_F(
                                 FORM_FISS  = 'SEGMENT',
                                 PFON_ORIG  = (-A*cos(eval(alpha))/2,-A*sin(eval(alpha))/2, 0.),
                                 PFON_EXTR  = ( A*cos(eval(alpha))/2, A*sin(eval(alpha))/2, 0.),
                                 ),
                    TYPE_ENRI_FOND='GEOMETRIQUE',NB_COUCHES=3,
                    INFO=1);

  MODELK[i]=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,FISSURE=FISS[i],CRITERE=1.E-6,INFO=2);


  CHMA[i]=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       MODELE=MODELK[i],
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER,
                                ),
                             );
#
# CHARGEMENTS
#
  CH[i]=AFFE_CHAR_MECA(MODELE=MODELK[i],
                       LIAISON_XFEM='OUI',
                       DDL_IMPO=(_F(GROUP_NO=('NA','NB',),DY=0.),
                                 _F(GROUP_NO=('NC','ND',),DX=0.),
                                 ),
                       PRES_REP=_F(GROUP_MA=('LIG1','LIG3',),PRES=PRES,),
                       INFO=1,);
#
# RESOLUTION
#
  UTOT2[i]=MECA_STATIQUE(MODELE=MODELK[i],
                   CHAM_MATER=CHMA[i],SOLVEUR=_F(METHODE='MUMPS'),
                   EXCIT=_F(CHARGE=CH[i],),
                   INFO=1,);

#
# POST-TRAITEMENT : CALCUL DES SIFS
#

# SOLUTION ANALYTIQUE (handbook tada p42)
  fab=1.0+0.128*(A/W)-0.288*(A/W)**2+1.525*(A/W)**3
  K1REF=-PRES*sqrt(pi*A/2.)*fab*cos(eval(alpha))**2
  K2REF=-PRES*sqrt(pi*A/2.)*fab*cos(eval(alpha))*sin(eval(alpha))
  GREF = (1-nu**2)/E*(K1REF**2+K2REF**2)

  for j in range(0,nbc) :
    k = i*nbc + j
    SIF_1[k]=CALC_G(RESULTAT=UTOT2[i],
                   OPTION='CALC_K_G',
                   THETA=_F(FISSURE=FISS[i],
                            R_INF=RI[j],
                            R_SUP=RS[j],),
                   INFO=2);

    SIF_2[k]=CALC_G(RESULTAT=UTOT2[i],
                   OPTION='CALC_K_G',
                   THETA=_F(FISSURE=FISS[i],
                            NUME_FOND=2,
                            R_INF=RI[j],
                            R_SUP=RS[j],),
                   INFO=2);

    TG_1[k]=CALC_G(RESULTAT=UTOT2[i],
                   THETA=_F(FISSURE=FISS[i],
                            R_INF=RI[j],
                            R_SUP=RS[j],),
                   INFO=2);

    IMPR_TABLE(TABLE=SIF_1[k],);
    IMPR_TABLE(TABLE=SIF_2[k],);
    IMPR_TABLE(TABLE=TG_1[k],);

    TEST_TABLE(TABLE=SIF_1[k],
              NOM_PARA='K1',
              VALE=K1REF,
              CRITERE='RELATIF',
              PRECISION=0.02,
              REFERENCE='ANALYTIQUE',);

    TEST_TABLE(TABLE=SIF_2[k],
              NOM_PARA='K1',
              VALE=K1REF,
              CRITERE='RELATIF',
              PRECISION=0.02,
              REFERENCE='ANALYTIQUE',);

    TEST_TABLE(TABLE=TG_1[k],
              NOM_PARA='G',
              VALE=GREF,
              CRITERE='RELATIF',
              PRECISION=0.02,
              REFERENCE='ANALYTIQUE',);

    if K2REF != 0. :
      TEST_TABLE(TABLE=SIF_1[k],
              NOM_PARA='K2',
              VALE=K2REF,
              CRITERE='RELATIF',
              PRECISION=0.03,
              REFERENCE='ANALYTIQUE',);

      TEST_TABLE(TABLE=SIF_2[k],
              NOM_PARA='K2',
              VALE=K2REF,
              CRITERE='RELATIF',
              PRECISION=0.03,
              REFERENCE='ANALYTIQUE',);
    else :
      TEST_TABLE(TABLE=SIF_1[k],
              NOM_PARA='K2',
              VALE=K2REF,
              CRITERE='ABSOLU',
              PRECISION=K1REF/1000.,
              REFERENCE='ANALYTIQUE',);

      TEST_TABLE(TABLE=SIF_2[k],
              NOM_PARA='K2',
              VALE=K2REF,
              CRITERE='ABSOLU',
              PRECISION=K1REF/1000.,
              REFERENCE='ANALYTIQUE',);

#------------------------------------------------------------------------
# POST-TRAITEMENT : MAILLAGE FISSURE et DEPLACEMENTS POUR LE MAILLAGE FISSURE
#------------------------------------------------------------------------
i =0

MA_XFEM=POST_MAIL_XFEM(
                       MODELE        = MODELK[i],
                       INFO          = 2)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='D_PLAN',),)

RES_XFEM=POST_CHAM_XFEM(MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT2[i],
                        INFO          = 2)

RES_XFEM=CALC_ELEM(reuse =RES_XFEM,
                   RESULTAT=RES_XFEM,
                   OPTION=('SIEQ_ELGA','SIEQ_ELNO'));

RES_XFEM=CALC_CHAMP(reuse =RES_XFEM,
                 RESULTAT=RES_XFEM,
                 CRITERES='SIEQ_NOEU');

IMPR_RESU(FORMAT='GMSH',RESU=(_F(MAILLAGE=MA_XFEM,RESULTAT=RES_XFEM,NOM_CHAM='DEPL',NOM_CMP=('DX','DY')),
                              _F(RESULTAT=RES_XFEM,NOM_CHAM='SIEQ_NOEU',NOM_CMP='VMIS'),
                               ),  );

FIN();
