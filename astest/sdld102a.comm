# TITRE SOUS-STRUCTURATION TRANSITOIRE : SYSTEME MASSES-RESSORTS
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# CAS_TEST__: SDLD102A
#
# CE FICHIER DE COMMANDE CONTIENT LES INSTRUCTIONS POUR CALCULER LA
# REPONSE TRANSITOIRE D'UN SYSTEME COMPOSE DE 3 MASSES ET 4 RESSORTS
# SOUMIS A UNE FORCE CONSTANTE :
#      - PAR CALCUL DIRECT (CALCUL DE REFERENCE),
#      - PAR SOUS-STRUCTURATION DYNAMIQUE TRANSITOIRE.
# TROIS SCHEMAS D'INTEGRATION DE DYNA_VIBRA ('EULER',
# 'DEVOGE' ET 'NEWMARK'), AINSI QUE LA RESTITUTION SUR SQUELETTE
# ET SOUS-STRUCTURE SONT TESTES.
#

DEBUT(CODE=_F(
              NIV_PUB_WEB='INTERNET',),
      DEBUG=_F(SDVERI='OUI',),);

#

LIST_R=DEFI_LIST_REEL(DEBUT=0.,
                      INTERVALLE=_F(JUSQU_A=80.,
                                    NOMBRE=10,),);

#
########################################################################


#          CALCUL PAR SOUS-STRUCTURATION DYNAMIQUE TRANSITOIRE         #
########################################################################


#

PRE_IDEAS(UNITE_IDEAS=19,
          UNITE_MAILLAGE=21,);

#

MAILLA=LIRE_MAILLAGE(UNITE=21,);

#

MODELE=AFFE_MODELE(MAILLAGE=MAILLA,
                   AFFE=(_F(GROUP_MA='RESSORT',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_TR',),
                         _F(GROUP_NO='MASSE',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_T',),),);

#

PARAM=AFFE_CARA_ELEM(MODELE=MODELE,
                     DISCRET=(_F(CARA='K_TR_D_L',
                                 GROUP_MA='RESSORT',
                                 VALE=(1.,0.,0.,0.,0.,0.,),),
                               _F(CARA='M_TR_L',
                                  GROUP_MA='RESSORT',
                                  VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,),),
                              _F(CARA='M_T_D_N',
                                 GROUP_NO='MASSE',
                                 VALE=1.,),),);

#
# ----- DEFINITION DU CHARGEMENT

CHARGE_L=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=(_F(TOUT='OUI',
                                     DY=0.,
                                     DZ=0.,
                                     DRX=0.,
                                     DRY=0.,
                                     DRZ=0.,),
                                  _F(NOEUD='N1',
                                     DX=0.,),
                                  _F(NOEUD='N3',
                                     DX=0.,),),);

#

CHARTRAN=AFFE_CHAR_MECA(MODELE=MODELE,
                        FORCE_NODALE=_F(NOEUD='N2',
                                        FX=1.,),);

#
# ----- MATRICES ET VECTEURS ELEMENTS FINIS

MERIME_L=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                        MODELE=MODELE,
                        CARA_ELEM=PARAM,
                        CHARGE=CHARGE_L,);

#

MEMAME_L=CALC_MATR_ELEM(OPTION='MASS_MECA',
                        MODELE=MODELE,
                        CARA_ELEM=PARAM,
                        CHARGE=CHARGE_L,);

#

V_ELEM=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=CHARTRAN,);

#
# ----- NUMEROTATION DU PROBLEME ELEMENTS FINIS

NUMDDL_L=NUME_DDL(MATR_RIGI=MERIME_L,);

#
# ----- ASSEMBLAGE DES MATRICES ET VECTEURS

RAID_L=ASSE_MATRICE(MATR_ELEM=MERIME_L,
                    NUME_DDL=NUMDDL_L,);

#

MASS_L=ASSE_MATRICE(MATR_ELEM=MEMAME_L,
                    NUME_DDL=NUMDDL_L,);

#

V_ASSE=ASSE_VECTEUR(VECT_ELEM=V_ELEM,
                    NUME_DDL=NUMDDL_L,);

#
# ----- CALCUL DES MODES PROPRES DES SS

MODES_L=MODE_ITER_SIMULT(MATR_RIGI=RAID_L,
                         MATR_MASS=MASS_L,
                         CALC_FREQ=_F(NMAX_FREQ=1,),);


#
# ----- DEFINITION DES INTERFACES

LINT1_CL=DEFI_INTERF_DYNA(NUME_DDL=NUMDDL_L,
                          INTERFACE=_F(NOM='DROITE',
                                       TYPE='CRAIGB',
                                       NOEUD='N3',
                                       MASQUE=('DY','DZ','DRX','DRY','DRZ',),),);

#

LINT2_CL=DEFI_INTERF_DYNA(NUME_DDL=NUMDDL_L,
                          INTERFACE=_F(NOM='GAUCHE',
                                       TYPE='CRAIGB',
                                       NOEUD='N1',
                                       MASQUE=('DY','DZ','DRX','DRY','DRZ',),),);

#
# ----- CALCUL DE LA BASE MODALE DES SOUS-STRUCTURES

BAMO1_CL=DEFI_BASE_MODALE(CLASSIQUE=_F(INTERF_DYNA=LINT1_CL,
                                       MODE_MECA=MODES_L,
                                       NMAX_MODE=1,),);

#

BAMO2_CL=DEFI_BASE_MODALE(CLASSIQUE=_F(INTERF_DYNA=LINT2_CL,
                                       MODE_MECA=MODES_L,
                                       NMAX_MODE=1,),);

#
# ----- CALCUL DU MACRO-ELEMENT

MACEL1=MACR_ELEM_DYNA(BASE_MODALE=BAMO1_CL,);

MACEL2=MACR_ELEM_DYNA(BASE_MODALE=BAMO2_CL,);

#

IMPR_MACR_ELEM(MACR_ELEM_DYNA=MACEL1,
               FORMAT='IDEAS',);

#
# ----- CALCUL SUR MODELE GENERALISE DES SOUS-STRUCTURES

MODEGE=DEFI_MODELE_GENE(SOUS_STRUC=(_F(NOM='COTE1',
                                       MACR_ELEM_DYNA=MACEL1,
                                       ANGL_NAUT = (0., 0., 0.,),
                                       TRANS=(0.,0.,0.),),
                                    _F(NOM='COTE2',
                                       MACR_ELEM_DYNA=MACEL2,
                                       ANGL_NAUT = (0., 0., 0.,),
                                       TRANS=(0.2,0.,0.),),),
                        LIAISON=_F(SOUS_STRUC_1='COTE1',
                                   INTERFACE_1='DROITE',
                                   SOUS_STRUC_2='COTE2',
                                   INTERFACE_2='GAUCHE',),
                        VERIF=_F(STOP_ERREUR='OUI',
                                 PRECISION=1.E-6,
                                 CRITERE='RELATIF',),);

#
# ----- NUMEROTATION DU PROBLEME GENERALISE DES SOUS-STRUCTURES

NUMEGE=NUME_DDL_GENE(MODELE_GENE=MODEGE);

#
# ----- ASSEMBLAGE DES MATRICES ET VECTEURS

MASGEN=ASSE_MATR_GENE(NUME_DDL_GENE=NUMEGE,
                      OPTION='MASS_GENE',);

#

RIGGEN=ASSE_MATR_GENE(NUME_DDL_GENE=NUMEGE,
                      OPTION='RIGI_GENE',);

#

FGEN=ASSE_VECT_GENE(NUME_DDL_GENE=NUMEGE,
                    CHAR_SOUS_STRUC=_F(SOUS_STRUC='COTE1',
                                       VECT_ASSE=V_ASSE,),);

#---------------------------------------------------------------------
# TEST IMPR_GENE

DEFI_FICHIER(UNITE=38,
             FICHIER='./REPE_OUT/FGEN.gene',);

IMPR_GENE(UNITE=38,
          GENE=(_F(RESU_GENE=FGEN,
                   TOUT_CMP_GENE='OUI',),
                _F(RESU_GENE=FGEN,
                   NUME_CMP_GENE=1,
                   INFO_CMP_GENE='NON',),
                _F(RESU_GENE=FGEN,
                   NUME_CMP_GENE=(1,5,7,),
                   INFO_CMP_GENE='OUI',),),);

DEFI_FICHIER(ACTION='LIBERER',
             UNITE=38,);

TEST_FICHIER(FICHIER='./REPE_OUT/FGEN.gene',
             NB_VALE=24,
             VALE_CALC=27.175237,
             INFO=1,);

#---------------------------------------------------------------------
#
# ----- CALCUL DES MODES PROPRES DE LA STRUCTURE GLOBALE

RESGEN=MODE_ITER_SIMULT(MATR_RIGI=RIGGEN,
                        MATR_MASS=MASGEN,
                        CALC_FREQ=_F(OPTION='PLUS_PETITE',
                                     NMAX_FREQ=3,),
                        TITRE='CALCUL DES MODES PROPRES DE LA STRUCTURE GLOBALE',);


#IMPR_CO(CONCEPT=_F(NOM='RESGEN',),);

#---------------------------------------------------------------------
# TEST IMPR_GENE

DEFI_FICHIER(UNITE=37,
             FICHIER='./REPE_OUT/RESU.gene',);

IMPR_GENE(
          UNITE=37,
          GENE=(_F(RESU_GENE=RESGEN,
                   TOUT_CHAM='NON',
                   TOUT_PARA='OUI',
                   INFO_CMP_GENE='NON',),
                _F(RESU_GENE=RESGEN,
                   NUME_ORDRE=1,
                   NOM_PARA=('FREQ','MASS_GENE','RIGI_GENE',),
                   INFO_CMP_GENE='NON',
                   INFO_GENE='OUI',),
                _F(RESU_GENE=RESGEN,
                   NUME_ORDRE=1,
                   NUME_CMP_GENE=(1,3,),
                   NOM_PARA=('FREQ','MASS_GENE','RIGI_GENE',),
                   INFO_CMP_GENE='OUI',),),);

DEFI_FICHIER(ACTION='LIBERER',
             UNITE=37,);

TEST_FICHIER(FICHIER='./REPE_OUT/RESU.gene',
             NB_VALE=105,
             VALE_CALC=417.980381,
             INFO=1,);

#---------------------------------------------------------------------

SQUEL=DEFI_SQUELETTE(MODELE_GENE=MODEGE,
                     SOUS_STRUC=(_F(NOM='COTE1',
#                                    TOUT='OUI',
                                    GROUP_MA='RESSORT'
                                    ),
                                 _F(NOM='COTE2',
#                                    TOUT='OUI',
                                    GROUP_MA='RESSORT'
                                    ),),);

#

MODCOT=REST_SOUS_STRUC(RESU_GENE=RESGEN,
                       TOUT_ORDRE='OUI',
                       SOUS_STRUC='COTE1',);

#

MODGLO=REST_SOUS_STRUC(RESU_GENE=RESGEN,
                       TOUT_ORDRE='OUI',
                       SQUELETTE=SQUEL,);


#
# ----- NUME_GENE, MATRICES ET VECTEURS GENERALISES

PROJ_BASE(BASE=RESGEN,
          STOCKAGE='DIAG',
          NUME_DDL_GENE=CO('NUMEMODE'),
          MATR_ASSE_GENE=(_F(MATRICE=CO('RIGPRO'),
                             MATR_ASSE_GENE=RIGGEN,),
                          _F(MATRICE=CO('MASPRO'),
                             MATR_ASSE_GENE=MASGEN,),),
          VECT_ASSE_GENE=_F(VECTEUR=CO('VECPRO'),
                            VECT_ASSE_GENE=FGEN,),);

#
# ----- CALCULS TRANSITOIRES

TRANGEN1=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                        SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                         MATR_MASS=MASPRO,
                         MATR_RIGI=RIGPRO,
                         INCREMENT=_F(INST_INIT=0.,
                                      INST_FIN=82.,
                                      PAS=0.01,),
                         ARCHIVAGE=_F(PAS_ARCH=10,),
                         EXCIT=_F(VECT_ASSE_GENE=VECPRO,
                                  COEF_MULT=1.,),);

#

TRANGEN2=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                         SCHEMA_TEMPS=_F(SCHEMA='DEVOGE',),
                         MATR_MASS=MASPRO,
                         MATR_RIGI=RIGPRO,
                         INCREMENT=_F(INST_INIT=0.,
                                      INST_FIN=82.,
                                      PAS=0.01,),
                         ARCHIVAGE=_F(PAS_ARCH=10,),
                         EXCIT=_F(VECT_ASSE_GENE=VECPRO,
                                  COEF_MULT=1.,),);

#

TRANGEN3=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                         SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',),
                         MATR_MASS=MASPRO,
                         MATR_RIGI=RIGPRO,
                         INCREMENT=_F(INST_INIT=0.,
                                      INST_FIN=82.,
                                      PAS=0.01,),
                         ARCHIVAGE=_F(PAS_ARCH=10,),
                         EXCIT=_F(VECT_ASSE_GENE=VECPRO,
                                  COEF_MULT=1.,),);

#

TRANGEN4=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                         SCHEMA_TEMPS=_F(SCHEMA='ADAPT_ORDRE2',),
                         MATR_MASS=MASPRO,
                         MATR_RIGI=RIGPRO,
                         INCREMENT=_F(INST_INIT=0.,
                                      INST_FIN=82.,
# POUR AMELIORER LE TEMPS CPU ON A IMPOSE UN PAS_MAXI PLUS GRAND QUE PAS
                                      PAS_MAXI = 0.15,
                                      PAS=0.1,
                                      VITE_MIN='MAXI',
                                      NB_POIN_PERIODE=300,),
                         ARCHIVAGE=_F(PAS_ARCH=1,),
                         EXCIT=_F(VECT_ASSE_GENE=VECPRO,
                                  COEF_MULT=1.,),);

#

TRANGEN5=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                         SCHEMA_TEMPS=_F(SCHEMA='ADAPT_ORDRE2',),
                         MATR_MASS=MASGEN,
                         MATR_RIGI=RIGGEN,
                         INCREMENT=_F(INST_INIT=0.,
                                      INST_FIN=82.,
# POUR AMELIORER LE TEMPS CPU ON A IMPOSE UN PAS_MAXI PLUS GRAND QUE PAS
                                      PAS_MAXI = 0.2,
                                      PAS=0.1,
                                      VITE_MIN='MAXI',
                                      COEF_MULT_PAS=1.3,
                                      NB_POIN_PERIODE=300,
                                      NMAX_ITER_PAS = 300,),
                         ARCHIVAGE=_F(PAS_ARCH=1,),
                         EXCIT=_F(VECT_ASSE_GENE=FGEN,
                                  COEF_MULT=1.,),);

TRANGEN6=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                         SCHEMA_TEMPS=_F(SCHEMA='RUNGE_KUTTA_54',TOLERANCE=1.E-5),
                         MATR_MASS=MASPRO,
                         MATR_RIGI=RIGPRO,
                         INCREMENT=_F(INST_INIT=0.,
                                      INST_FIN=82.,
                                      PAS=0.1,),
                         ARCHIVAGE=_F(PAS_ARCH=1,),
                         EXCIT=_F(VECT_ASSE_GENE=VECPRO,
                                  COEF_MULT=1.,),);

TRANGEN7=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                         SCHEMA_TEMPS=_F(SCHEMA='RUNGE_KUTTA_32',TOLERANCE=1.E-4),
                         MATR_MASS=MASGEN,
                         MATR_RIGI=RIGGEN,
                         INCREMENT=_F(INST_INIT=0.,
                                      INST_FIN=82.,
                                      PAS=0.1,),
                         ARCHIVAGE=_F(PAS_ARCH=1,),
                         EXCIT=_F(VECT_ASSE_GENE=FGEN,
                                  COEF_MULT=1.,),);
#
#
# ----- VISUALISATION

DEBUG(SDVERI='OUI',);

TRAN1=REST_GENE_PHYS(RESU_GENE=TRANGEN1,
                     MODE_MECA=MODGLO,
                     LIST_INST=LIST_R,
                     INTERPOL='LIN',
                     TOUT_CHAM='OUI',
                     NOEUD='NO3',);

#

TRAN2=REST_GENE_PHYS(RESU_GENE=TRANGEN2,
                     MODE_MECA=MODGLO,
                     LIST_INST=LIST_R,
                     INTERPOL='LIN',
                     TOUT_CHAM='OUI',
                     NOEUD='NO3',);


#

TRAN3=REST_GENE_PHYS(RESU_GENE=TRANGEN3,
                     MODE_MECA=MODGLO,
                     LIST_INST=LIST_R,
                     INTERPOL='LIN',
                     TOUT_CHAM='OUI',
                     NOEUD='NO3',);

#

TRAN4=REST_GENE_PHYS(RESU_GENE=TRANGEN4,
                     MODE_MECA=MODGLO,
                     LIST_INST=LIST_R,
                     INTERPOL='LIN',
                     TOUT_CHAM='OUI',
                     NOEUD='NO3',);

TRAN6=REST_GENE_PHYS(RESU_GENE=TRANGEN6,
                     MODE_MECA=MODGLO,
                     LIST_INST=LIST_R,
                     INTERPOL='LIN',
                     TOUT_CHAM='OUI',
                     NOEUD='NO3',);

DEBUG(SDVERI='OUI',);

#

TRAN5=REST_SOUS_STRUC(RESU_GENE=TRANGEN5,
                      LIST_INST=LIST_R,
                      INTERPOL='LIN',
                      TOUT_CHAM='OUI',
                      NOEUD='NO3',
                      SQUELETTE=SQUEL,);

TRAN7=REST_SOUS_STRUC(RESU_GENE=TRANGEN7,
                      LIST_INST=LIST_R,
                      INTERPOL='LIN',
                      TOUT_CHAM='OUI',
                      NOEUD='NO3',
                      SQUELETTE=SQUEL,);

TRAN_SS=REST_GENE_PHYS(RESU_GENE=TRANGEN1,
                       MODE_MECA=MODCOT,
                       LIST_INST=LIST_R,
                       INTERPOL='LIN',
                       TOUT_CHAM='OUI',);

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN1,
                  NOM_CHAM='DEPL',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.414799297,
                  VALE_REFE=0.41699999999999998,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#
TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN1,
                  NOM_CHAM='VITE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=-0.429722374,
                  VALE_REFE=-0.43010999999999999,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN1,
                  NOM_CHAM='ACCE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.338227921,
                  VALE_REFE=0.33749000000000001,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN2,
                  NOM_CHAM='DEPL',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.417001882,
                  VALE_REFE=0.41699999999999998,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN2,
                  NOM_CHAM='VITE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=-0.430114977,
                  VALE_REFE=-0.43010999999999999,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN2,
                  NOM_CHAM='ACCE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.337492435,
                  VALE_REFE=0.33749000000000001,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN3,
                  NOM_CHAM='DEPL',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.417111186,
                  VALE_REFE=0.41699999999999998,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN3,
                  NOM_CHAM='VITE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=-0.430904499,
                  VALE_REFE=-0.43010999999999999,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN3,
                  NOM_CHAM='ACCE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.337629228,
                  VALE_REFE=0.33749000000000001,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN4,
                  NOM_CHAM='DEPL',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.417796517,
                  VALE_REFE=0.41699999999999998,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN4,
                  NOM_CHAM='VITE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=-0.429371977,
                  VALE_REFE=-0.43010999999999999,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN4,
                  NOM_CHAM='ACCE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.334477094,
                  VALE_REFE=0.33749000000000001,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN5,
                  NOM_CHAM='DEPL',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.417047395,
                  VALE_REFE=0.41699999999999998,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN5,
                  NOM_CHAM='VITE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=-0.429843930,
                  VALE_REFE=-0.43010999999999999,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN5,
                  NOM_CHAM='ACCE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.337032496,
                  VALE_REFE=0.33749000000000001,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN6,
                  NOM_CHAM='DEPL',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.4174278558597,
                  VALE_REFE=0.41699999999999998,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN6,
                  NOM_CHAM='VITE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=-0.42981550318907,
                  VALE_REFE=-0.43010999999999999,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN6,
                  NOM_CHAM='ACCE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.33595714629418,
                  VALE_REFE=0.33749000000000001,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )


TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN7,
                  NOM_CHAM='DEPL',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.41899666399227,
                  VALE_REFE=0.41699999999999998,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN7,
                  NOM_CHAM='VITE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=-0.42994931159192,
                  VALE_REFE=-0.43010999999999999,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN7,
                  NOM_CHAM='ACCE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.33059242521547,
                  VALE_REFE=0.33749000000000001,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=3.E-2,),
          )

#
########################################################################


#                           CALCUL DIRECT                              #
########################################################################


#

MAYA=LIRE_MAILLAGE(UNITE=20,);

#

MODEL=AFFE_MODELE(MAILLAGE=MAYA,
                  AFFE=(_F(GROUP_MA='RESSORT',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='DIS_TR',),
                        _F(GROUP_NO='MASSE',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='DIS_T',),),);

#

PARAME=AFFE_CARA_ELEM(MODELE=MODEL,
                      DISCRET=(_F(CARA='K_TR_D_L',
                                  GROUP_MA='RESSORT',
                                  VALE=(1.,0.,0.,0.,0.,0.,),),
                               _F(CARA='M_TR_L',
                                  GROUP_MA='RESSORT',
                                  VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,),),
                               _F(CARA='M_T_D_N',
                                  GROUP_NO='MASSE',
                                  VALE=1.,),),);

#

CONDLIM=AFFE_CHAR_MECA(MODELE=MODEL,
                       DDL_IMPO=(_F(TOUT='OUI',
                                    DY=0.,
                                    DZ=0.,
                                    DRX=0.,
                                    DRY=0.,
                                    DRZ=0.,),
                                 _F(NOEUD='NO1',
                                    DX=0.,),
                                 _F(NOEUD='NO5',
                                    DX=0.,),),);

#

CHA_TRAN=AFFE_CHAR_MECA(MODELE=MODEL,
                        FORCE_NODALE=_F(NOEUD='NO2',
                                        FX=1.,),);

#

K_ELEM=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                      MODELE=MODEL,
                      CARA_ELEM=PARAME,
                      CHARGE=CONDLIM,);

#

M_ELEM=CALC_MATR_ELEM(OPTION='MASS_MECA',
                      MODELE=MODEL,
                      CARA_ELEM=PARAME,
                      CHARGE=CONDLIM,);

#

F_ELEM=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=CHA_TRAN,);

#

NUMERO=NUME_DDL(MATR_RIGI=K_ELEM,);

#

K_ASSE=ASSE_MATRICE(MATR_ELEM=K_ELEM,
                    NUME_DDL=NUMERO,);

M_ASSE=ASSE_MATRICE(MATR_ELEM=M_ELEM,
                    NUME_DDL=NUMERO,);

F_ASSE=ASSE_VECTEUR(VECT_ELEM=F_ELEM,
                    NUME_DDL=NUMERO,);

#

MODYNA=MODE_ITER_SIMULT(MATR_RIGI=K_ASSE,
                        MATR_MASS=M_ASSE,
                        CALC_FREQ=_F(NMAX_FREQ=3,),);


# TEST DE L'OPTION 'PLUS_GRANDE'
MO_PG_SO=MODE_ITER_SIMULT(MATR_RIGI=K_ASSE,
                          MATR_MASS=M_ASSE,
                          CALC_FREQ=_F(OPTION='PLUS_GRANDE',),);

MO_PG_TD=MODE_ITER_SIMULT(MATR_RIGI=K_ASSE,
                          MATR_MASS=M_ASSE,
                          METHODE='TRI_DIAG',
                          CALC_FREQ=_F(OPTION='PLUS_GRANDE',),);

MO_PG_JA=MODE_ITER_SIMULT(MATR_RIGI=K_ASSE,
                          MATR_MASS=M_ASSE,
                          METHODE='JACOBI',
                          CALC_FREQ=_F(OPTION='PLUS_GRANDE',),);

MO_PG_QZ=MODE_ITER_SIMULT(MATR_RIGI=K_ASSE,
                          MATR_MASS=M_ASSE,
                          METHODE='QZ',
                          CALC_FREQ=_F(OPTION='PLUS_GRANDE',),);

freq_propres = [1.21812E-01, 2.25079E-01, 2.94080E-01]

TEST_RESU(RESU=(
                _F(RESULTAT = MODYNA,
                   PARA = 'FREQ',
                   CRITERE = 'RELATIF',
                   NUME_ORDRE = 1,
                   VALE_CALC = freq_propres[0]),
                _F(RESULTAT = MODYNA,
                   PARA = 'FREQ',
                   CRITERE = 'RELATIF',
                   NUME_ORDRE = 2,
                   VALE_CALC = freq_propres[1]),
                _F(RESULTAT = MODYNA,
                   PARA = 'FREQ',
                   CRITERE = 'RELATIF',
                   NUME_ORDRE = 3,
                   VALE_CALC = freq_propres[2]),
               ),)

TEST_RESU(RESU=(
                _F(RESULTAT = MO_PG_SO,
                   PARA = 'FREQ',
                   CRITERE = 'RELATIF',
                   NUME_ORDRE = 1,
                   VALE_CALC = freq_propres[2]),
                _F(RESULTAT = MO_PG_TD,
                   PARA = 'FREQ',
                   CRITERE = 'RELATIF',
                   NUME_ORDRE = 1,
                   VALE_CALC = freq_propres[2]),
                _F(RESULTAT = MO_PG_JA,
                   PARA = 'FREQ',
                   CRITERE = 'RELATIF',
                   NUME_ORDRE = 1,
                   VALE_CALC = freq_propres[2]),
                _F(RESULTAT = MO_PG_QZ,
                   PARA = 'FREQ',
                   CRITERE = 'RELATIF',
                   NUME_ORDRE = 1,
                   VALE_CALC = freq_propres[2]),
               ),)

#

PROJ_BASE(BASE=MODYNA,
          STOCKAGE='DIAG',
          MATR_ASSE_GENE=(_F(MATRICE=CO('K_PROJ'),
                             MATR_ASSE=K_ASSE,),
                          _F(MATRICE=CO('M_PROJ'),
                             MATR_ASSE=M_ASSE,),),
          VECT_ASSE_GENE=_F(VECTEUR=CO('F_PROJ'),
                            VECT_ASSE=F_ASSE,),);

#

TRANG1=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                       SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                       MATR_MASS=M_PROJ,
                       MATR_RIGI=K_PROJ,
                       INCREMENT=_F(INST_INIT=0.,
                                    INST_FIN=82.,
                                    PAS=0.01,),
                       ARCHIVAGE=_F(PAS_ARCH=10,),
                       EXCIT=_F(VECT_ASSE_GENE=F_PROJ,
                                COEF_MULT=1.,),);

#

TRANG2=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                       SCHEMA_TEMPS=_F(SCHEMA='DEVOGE',),
                       MATR_MASS=M_PROJ,
                       MATR_RIGI=K_PROJ,
                       INCREMENT=_F(INST_INIT=0.,
                                    INST_FIN=82.,
                                    PAS=0.01,),
                       ARCHIVAGE=_F(PAS_ARCH=10,),
                       EXCIT=_F(VECT_ASSE_GENE=F_PROJ,
                                COEF_MULT=1.,),);

#

TRANG3=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                       SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',),
                       MATR_MASS=M_PROJ,
                       MATR_RIGI=K_PROJ,
                       INCREMENT=_F(INST_INIT=0.,
                                    INST_FIN=82.,
                                    PAS=0.01,),
                       ARCHIVAGE=_F(PAS_ARCH=10,),
                       EXCIT=_F(VECT_ASSE_GENE=F_PROJ,
                                COEF_MULT=1.,),);

#

TRANG4=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                       SCHEMA_TEMPS=_F(SCHEMA='ADAPT_ORDRE2',),
                       MATR_MASS=M_PROJ,
                       MATR_RIGI=K_PROJ,
                       INCREMENT=_F(INST_INIT=0.,
                                    INST_FIN=82.,
# POUR AMELIORER LE TEMPS CPU ON A IMPOSE UN PAS_MAXI PLUS GRAND QUE PAS
                                    PAS_MAXI=0.15,
                                    PAS=0.1,
                                    VITE_MIN='NORM',
                                    NB_POIN_PERIODE=300,),
                       ARCHIVAGE=_F(PAS_ARCH=1,),
                       EXCIT=_F(VECT_ASSE_GENE=F_PROJ,
                                COEF_MULT=1.,),);

#

LISTEIMP=DEFI_LIST_REEL(DEBUT=0.,
                        INTERVALLE=_F(JUSQU_A=82.,
                                      NOMBRE=800,),);

#

PAS1=RECU_FONCTION(RESU_GENE=TRANG4,
                   LIST_INST=LISTEIMP,
                   INTERP_NUME='LIN',
                   NOM_CHAM='PTEM',
                   INTERPOL='LIN',);

IMPR_FONCTION(FORMAT='XMGRACE',
              PILOTE='POSTSCRIPT',
              UNITE=24,
              COURBE=_F(FONCTION=PAS1,),
              TITRE='PAS DE TEMPS (LOG)',);

#

RESULT1=REST_GENE_PHYS(RESU_GENE=TRANG1,
                       LIST_INST=LIST_R,
                       INTERPOL='LIN',
                       TOUT_CHAM='OUI',
                       NOEUD='NO3',);

#

RESULT2=REST_GENE_PHYS(RESU_GENE=TRANG2,
                       LIST_INST=LIST_R,
                       INTERPOL='LIN',
                       TOUT_CHAM='OUI',
                       NOEUD='NO3',);

#

RESULT3=REST_GENE_PHYS(RESU_GENE=TRANG3,
                       LIST_INST=LIST_R,
                       INTERPOL='LIN',
                       TOUT_CHAM='OUI',
                       NOEUD='NO3',);

#

RESULT4=REST_GENE_PHYS(RESU_GENE=TRANG4,
                       LIST_INST=LIST_R,
                       INTERPOL='LIN',
                       TOUT_CHAM='OUI',
                       NOEUD='NO3',);


#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=RESULT4,
                  NOM_CHAM='DEPL',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.417796517,
                  VALE_REFE=0.41699999999999998,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=RESULT4,
                  NOM_CHAM='VITE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=-0.429371977,
                  VALE_REFE=-0.43010999999999999,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=RESULT4,
                  NOM_CHAM='ACCE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.334477094,
                  VALE_REFE=0.33749000000000001,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

FIN();

#
