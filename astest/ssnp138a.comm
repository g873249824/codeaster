# MODIF  DATE 15/01/2008   AUTEUR GENIAUT S.GENIAUT 
# TITRE FISSURE INCLINEE EN 2D AVEC X-FEM
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(NOM='SSNP138A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'))


#*********************************************************
#                    GEOMETRIE
#                    *********
#     Parametres a modifier avec le maillage
#*********************************************************
#
# LARGEUR DE L EPROUVETTE SELON X
W = 0.2 ;
#
# HAUTEUR DE L EPROUVETTE SELON Y
H = 0.5 ;
#
# NOMBRE D ELEMENTS SELON X
NX = 100. ;
#
# NOMBRE D ELEMENTS SELON Y
NY = 100. ;
#
#*********************************************************

# LONGUEUR DE LA FISSURE
A = 0.04 ;

# ANGLE D INCLINAISON DE LA FISSURE
alpha = 45.*pi/180. ;

# PRESSION APPLIQUEE SUR LES FACES INFERIEURE ET SUPERIEURE
PRES=-1.e6

#----------------------------------------------
#                MAILLAGE 
#----------------------------------------------

PRE_GIBI();

MAILLAGE=LIRE_MAILLAGE(INFO=1,);

# precision
eps = sqrt((W/NX)**2+(H/NY)**2)

MAILLAGE=DEFI_GROUP( reuse =MAILLAGE,
                     MAILLAGE=MAILLAGE,
                     CREA_GROUP_NO=(_F(NOM='NA',OPTION='ENV_SPHERE',POINT=(-W/2.,0.),PRECISION=eps/4.,RAYON=eps/4.),
                                    _F(NOM='NB',OPTION='ENV_SPHERE',POINT=(+W/2.,0.),PRECISION=eps/4.,RAYON=eps/4.),
                                    _F(NOM='NC',OPTION='ENV_SPHERE',POINT=(0.,-H/2.),PRECISION=eps/4.,RAYON=eps/4.),
                                    _F(NOM='ND',OPTION='ENV_SPHERE',POINT=(0.,+H/2.),PRECISION=eps/4.,RAYON=eps/4.),
                                    ),
                      INFO=2 );

#----------------------------------------------
#                   MODELE ET FISSURE
#----------------------------------------------

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAGE,
                     AFFE= _F(GROUP_MA=('SURF','LIG1','LIG3'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='D_PLAN'));

MAILLAGE=MODI_MAILLAGE(reuse =MAILLAGE,
                       MAILLAGE=MAILLAGE,
                       ORIE_PEAU_2D=_F(GROUP_MA=('LIG1','LIG3',),),
                       );

# definition de la level set tangente
def LEVSETTAN(x,y) :
   if ( x * cos(alpha) + y * sin(alpha) ) >= 0. : return   (x * cos(alpha) + y * sin(alpha)) -  A/2.
   else :  return   (-x * cos(alpha) - y * sin(alpha)) -  A/2.

LN=FORMULE(NOM_PARA=('X','Y'),VALE='Y*cos(alpha)-X*sin(alpha)');
LT=FORMULE(NOM_PARA=('X','Y'),VALE='LEVSETTAN(X,Y)');

FISS=DEFI_FISS_XFEM(MODELE=MODELEIN,
                    DEFI_FISS=_F(FONC_LT=LT,FONC_LN=LN,),
                    GROUP_MA_ENRI='SURF',
                    RAYON_ENRI=A/10.,
                    INFO=1);

CHLN=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',OPERATION='EXTR',NOM_CHAM='LNNO',FISSURE=FISS,);                 
CHLT=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',OPERATION='EXTR',NOM_CHAM='LTNO',FISSURE=FISS,);

IMPR_RESU(FORMAT='GMSH',UNITE=83,RESU=_F(CHAM_GD=CHLT))

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,FISSURE=FISS,INFO=1,);

#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

E   = 210E9;
nu  = 0.3;
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu),);

CHAMPMA1=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER,
                                TEMP_REF=0.0,),
                             );

#----------------------------------------------
#                   CHARGEMENTS
#----------------------------------------------

CHXFEM=AFFE_CHAR_MECA(MODELE=MODELEK,LIAISON_XFEM='OUI',INFO=1,);

CHB=AFFE_CHAR_MECA(MODELE=MODELEK,
                   DDL_IMPO=(_F(GROUP_NO=('NA','NB',),DY=0.),
                             _F(GROUP_NO=('NC','ND',),DX=0.),),
                   );

CH1=AFFE_CHAR_MECA(MODELE=MODELEK,
                   PRES_REP=_F(GROUP_MA=('LIG1','LIG3',),PRES=PRES,),);

#----------------------------------------------
#                   RESOLUTION
#----------------------------------------------

L_INS1=DEFI_LIST_REEL(DEBUT=0.0,INTERVALLE=_F(JUSQU_A=1.0,NOMBRE=1,),);

UTOT1=STAT_NON_LINE(MODELE=MODELEK,
                   CHAM_MATER=CHAMPMA1,
                   EXCIT=(_F(CHARGE=CHXFEM,),
                          _F(CHARGE=CHB,),
                          _F(CHARGE=CH1,),),
                   COMP_ELAS=_F(RELATION='ELAS',
                                GROUP_MA='SURF',),
                   INCREMENT=_F(LIST_INST=L_INS1,
                                INST_FIN=1.0,),
                   NEWTON=_F(REAC_ITER=1,),
                   ARCHIVAGE=_F(CHAM_EXCLU='VARI_ELGA',),
                   INFO=1,);

#------------------------------------------------------------------------
# POST-TRAITEMENT : MAILLAGE FISSURE et DEPLACEMENTS POUR LE MAILLAGE FISSURE
#------------------------------------------------------------------------

MA_XFEM=POST_MAIL_XFEM(MAILLAGE_SAIN = MAILLAGE,
                       MODELE        = MODELEK,
                       INFO          = 2)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='D_PLAN',),) 

RES_XFEM=POST_CHAM_XFEM(MAILLAGE_SAIN = MAILLAGE,
                        MAILLAGE_FISS = MA_XFEM,
                        MODELE        = MODELEK,
                        MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT1,
                        NOM_CHAM      = ('DEPL','SIEF_ELGA'),
                        INFO          = 2)

RES_XFEM=CALC_ELEM(reuse =RES_XFEM,
                   RESULTAT=RES_XFEM,
                   OPTION=('EQUI_ELGA_SIGM','EQUI_ELNO_SIGM'));

RES_XFEM=CALC_NO(reuse =RES_XFEM,
                 RESULTAT=RES_XFEM,
                 OPTION=('EQUI_NOEU_SIGM'));

#IMPR_RESU(FORMAT='GMSH',RESU=(_F(RESULTAT=RES_XFEM,NOM_CHAM='DEPL',TYPE_CHAM='VECT_2D',NOM_CMP=('DX','DY')),
#                              _F(RESULTAT=RES_XFEM,NOM_CHAM='EQUI_NOEU_SIGM',NOM_CMP='VMIS'),
#                               ),  );

#----------------------------------------------------------------------
# POST-TRAITEMENT : CALCUL DES SIFS AVEC POST_K1_K2_K3
#------------------------------------------------------------------------

# PK=POST_K1_K2_K3(MODELISATION='D_PLAN',
#                  MAILLAGE=MAILLAGE,
#                  MATER=ACIER,
#                  FISSURE = FISS,
#                  RESULTAT  = UTOT1,
#                  ABSC_CURV_MAXI = 0.05,
# #                 NB_NOEUD_COUPE = 6,
#                  VECT_K1  = ( -sin(alpha), cos(alpha),0. ),
#                  )
# 
# IMPR_TABLE(TABLE = PK)


#------------------------------------------------------------------------
# POST-TRAITEMENT : CALCUL DES SIFS PAR LA METHODE ENERGETIQUE AVEC X-FEM
#------------------------------------------------------------------------

# TEST AVEC PLUSIEURS COURONNES
RI=[0.1*A,   eps]
RS=[0.3*A, 3*eps]

nbc=len(RI)
SIF_1 = [None]*(nbc)
SIF_2 = [None]*(nbc)


# SOLUTION ANALYTIQUE (handbook tada p42)

fab=1.0+0.128*(A/W)-0.288*(A/W)**2+1.525*(A/W)**3
#print ' ',-PRES*sqrt(pi*A/2.)*fab
K1REF=-PRES*sqrt(pi*A/2.)*fab*cos(alpha)**2
K2REF=-PRES*sqrt(pi*A/2.)*fab*cos(alpha)*sin(alpha)

for i in range(0,nbc) :

   SIF_1[i]=CALC_G(RESULTAT=UTOT1,
                   SYME_CHAR='SANS',
                   OPTION='CALC_K_G',
                   THETA=_F(FISSURE=FISS,
                            NUME_FOND=1,
                            R_INF=RI[i],
                            R_SUP=RS[i],),
                   INFO=1);

   SIF_2[i]=CALC_G(RESULTAT=UTOT1,
                   SYME_CHAR='SANS',
                   OPTION='CALC_K_G',
                   THETA=_F(FISSURE=FISS,
                            NUME_FOND=2,
                            R_INF=RI[i],
                            R_SUP=RS[i],),
                   INFO=1);

   IMPR_TABLE(TABLE=SIF_1[i],);
   IMPR_TABLE(TABLE=SIF_2[i],);

   TEST_TABLE(TABLE=SIF_1[i],
              NOM_PARA='K1',
              VALE=K1REF,
              CRITERE='RELATIF',
              PRECISION=0.01,
              REFERENCE='ANALYTIQUE',);

   TEST_TABLE(TABLE=SIF_1[i],
              NOM_PARA='K2',
              VALE=K2REF,
              CRITERE='RELATIF',
              PRECISION=0.015,
              REFERENCE='ANALYTIQUE',);

   TEST_TABLE(TABLE=SIF_2[i],
              NOM_PARA='K1',
              VALE=K1REF,
              CRITERE='RELATIF',
              PRECISION=0.01,
              REFERENCE='ANALYTIQUE',);

   TEST_TABLE(TABLE=SIF_2[i],
              NOM_PARA='K2',
              VALE=K2REF,
              CRITERE='RELATIF',
              PRECISION=0.015,
              REFERENCE='ANALYTIQUE',);

FIN();
