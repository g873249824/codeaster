# TITRE TEST DE DYNA_TRAN_EXPLI SUR UN SYSTEME MASSES-RESSORTS NON LINEAIRE
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

# ----------------------------------------------------------------------
# REPONSE D UN SYSTEME A UN DDL BUTANT CONTRE UNE PAROI FIXE
#
# CALCUL TRANSITOIRE SUR BASE MODALE AVEC DYNA_TRAN_EXPLI
#
# ----------------------------------------------------------------------
#
DEBUT(CODE=_F(NOM='SDND102C', NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' A CAUSE DU SUR-COUT CPU

MAILLAGE=LIRE_MAILLAGE()

#
# DESCRIPTION DES PAS DE CALCUL ET D ARCHIVAGE
#---------------------------------------------
L_INST=DEFI_LIST_REEL(  DEBUT=0.,
                         INTERVALLE=_F(  JUSQU_A = 0.5,  PAS = 0.001))

L_INST2=DEFI_LIST_REEL(  DEBUT=0.,
                         INTERVALLE=_F(  JUSQU_A = 0.5,  PAS = 0.001))

LISTIMP=DEFI_LIST_REEL(  DEBUT=0.001,
               INTERVALLE=_F(  JUSQU_A = 0.5,   PAS = 0.001))

#
# DESCRIPTION DE L'ACCELEROGRAMME
#--------------------------------
OMEGAA=2.*pi*10.

ACCE1 = FORMULE(NOM_PARA='INST',VALE='sin(OMEGAA*INST) ')
ACCELER1=CALC_FONC_INTERP( FONCTION=ACCE1,  LIST_PARA=L_INST,
                           NOM_PARA = 'INST',
                           PROL_DROITE='LINEAIRE',
                           PROL_GAUCHE='LINEAIRE',
                           NOM_RESU='ACCE',
                           INFO=1)

# MATERIAU
#
MAT_CHO=DEFI_MATERIAU(
              DIS_CONTACT=_F(  RIGI_NOR = 5.76E7,
                            DIST_1 = 0.4495,  JEU = 0.45) #J=5D-4
                        )

MATBID=DEFI_MATERIAU(
              ELAS=_F(  E = 1.E10,  NU = 0.3,  RHO = 0.)
                        )

#
CH_MAT=AFFE_MATERIAU(  MAILLAGE=MAILLAGE,AFFE=(
             _F(  GROUP_MA = 'RESSORT1',  MATER = MATBID),
             _F(  GROUP_MA = 'MASSES1',   MATER = MAT_CHO))
                     )


#
#=======================================================================
# 1/ ON ETUDIE LE SYSTEME A 1 DDL
#       ACCE_IMPO = ACCELER1 (SIN(OMEGAA*T)) EN X=0
#----------------------------------------------------------------------
#
# MODELISATION
#
MODELE=AFFE_MODELE(  MAILLAGE=MAILLAGE,AFFE=(
              _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_T',
                     GROUP_MA = 'RESSORT1'),
                   _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_T',
                     GROUP_MA = 'MASSES1'))
                    )

CON_LIM=AFFE_CHAR_MECA(  MODELE=MODELE,DDL_IMPO=(
               _F(  NOEUD = 'NO1',   DX = 0.,  DY = 0.,  DZ = 0.),
               _F(  GROUP_NO = ( 'MASSES1', ), DY = 0.,  DZ = 0.))
                       )

#
CARA_ELE=AFFE_CARA_ELEM(  MODELE=MODELE,
                          DISCRET=(_F(  CARA = 'K_T_D_L',  REPERE = 'GLOBAL', GROUP_MA = 'RESSORT1',
                                        VALE = (98696.,  0.,  0., )),
                                _F(  CARA = 'M_T_L',  REPERE = 'GLOBAL', GROUP_MA = 'RESSORT1',
                                        VALE = (0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,)),
                                   _F(  CARA = 'M_T_D_N',  GROUP_MA = 'MASSES1',
                                        VALE = 25.))
                         )

ASSEMBLAGE(  MODELE=MODELE,   CHARGE=CON_LIM,   CARA_ELEM=CARA_ELE,
                   NUME_DDL=CO("NUM"),
                 SOLVEUR=_F(  METHODE = 'LDLT',  RENUM = 'RCMK'),MATR_ASSE=(
                 _F(  MATRICE = CO("RIGIDITE"),  OPTION = 'RIGI_MECA'),
                           _F(  MATRICE = CO("MASSE"),     OPTION = 'MASS_MECA'))
               )



CHAM_NO=AFFE_CHAR_MECA(  MODELE=MODELE,
                PESANTEUR=_F(GRAVITE=1.,
                             DIRECTION=(-1., 0., 0.,),)
                        )

MODE=MODE_ITER_SIMULT(  MATR_RIGI=RIGIDITE,   MATR_MASS=MASSE,
                  METHODE='JACOBI',
                   OPTION='SANS',
                 CALC_FREQ=_F(  OPTION = 'BANDE',  FREQ = (1., 30., ))
                            )

MODE=NORM_MODE(reuse=MODE,  MODE=MODE,   NORME='MASS_GENE' )

# CALCUL DIRECT
# -------------

TRAN_DY=DYNA_NON_LINE(  MODELE=MODELE,
                CHAM_MATER=CH_MAT,   CARA_ELEM=CARA_ELE,
                MASS_DIAG='NON',
               AMOR_MODAL=_F(  MODE_MECA = MODE,  REAC_VITE = 'NON',
                            AMOR_REDUIT = 0.0),
               PROJ_MODAL=_F(MODE_MECA = MODE),
               EXCIT=(_F(  CHARGE = CON_LIM),
                      _F(  CHARGE = CHAM_NO,
                            FONC_MULT= ACCELER1 )),
               COMP_INCR=(
               _F(  RELATION = 'ELAS',
                           GROUP_MA = 'RESSORT1'),
               _F(  RELATION = 'DIS_CHOC',
                           GROUP_MA = 'MASSES1')),
               SCHEMA_TEMPS=_F(SCHEMA='DIFF_CENT',
                               FORMULATION='ACCELERATION',
                               STOP_CFL='NON',),
               SOLVEUR=_F(  METHODE = 'LDLT',  RENUM = 'RCMK'),
               NEWTON=_F(  REAC_ITER = 1),
               INCREMENT=_F(  LIST_INST = L_INST),
               ARCHIVAGE=_F(  LIST_INST = L_INST2),
                      )

NOA_DXDR = RECU_FONCTION( NOEUD= 'NO2',  NOM_CMP='DX' ,
                     NOM_CHAM='DEPL',
                     LIST_INST=LISTIMP,
                     PROL_DROITE=  'LINEAIRE',
                     PROL_GAUCHE= 'LINEAIRE',
                     RESULTAT=  TRAN_DY  );
NOA_DXVR = RECU_FONCTION( NOEUD= 'NO2' , NOM_CMP='DX' ,
                     NOM_CHAM='VITE',
                     LIST_INST=LISTIMP,
                     PROL_DROITE=  'LINEAIRE',
                     PROL_GAUCHE= 'LINEAIRE',
                     RESULTAT= TRAN_DY   );
NOA_DXAR = RECU_FONCTION( NOEUD= 'NO2',  NOM_CMP='DX' ,
                     NOM_CHAM='ACCE',
                     LIST_INST=LISTIMP,
                     PROL_DROITE=  'LINEAIRE',
                     PROL_GAUCHE= 'LINEAIRE',
                     RESULTAT=  TRAN_DY  );


TRAN_DY2=DYNA_NON_LINE(  MODELE=MODELE,
                CHAM_MATER=CH_MAT,   CARA_ELEM=CARA_ELE,
               AMOR_MODAL=_F(  MODE_MECA = MODE,  REAC_VITE = 'NON',
                            AMOR_REDUIT = 0.0),
               EXCIT=(_F(  CHARGE = CON_LIM),
                      _F(  CHARGE = CHAM_NO,
                            FONC_MULT= ACCELER1 )),
               COMP_INCR=(
               _F(  RELATION = 'ELAS',
                           GROUP_MA = 'RESSORT1'),
               _F(  RELATION = 'DIS_CHOC',
                           GROUP_MA = 'MASSES1')),
               SOLVEUR=_F(  METHODE = 'LDLT',  RENUM = 'RCMK'),
               INCREMENT=_F(  LIST_INST = L_INST),
               ARCHIVAGE=_F(  LIST_INST = L_INST2),
               SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',
                               FORMULATION='DEPLACEMENT',),
               CONVERGENCE=_F(  RESI_GLOB_RELA = 1.E-8,
                             ITER_GLOB_MAXI = 20),
               NEWTON=_F(  REAC_ITER = 1)
                      )


NOB_DXDR = RECU_FONCTION( NOEUD= 'NO2',  NOM_CMP='DX' ,
                     NOM_CHAM='DEPL',
                     LIST_INST=LISTIMP,
                     PROL_DROITE=  'LINEAIRE',
                     PROL_GAUCHE= 'LINEAIRE',
                     RESULTAT=  TRAN_DY2  );
NOB_DXVR = RECU_FONCTION( NOEUD= 'NO2' , NOM_CMP='DX' ,
                     NOM_CHAM='VITE',
                     LIST_INST=LISTIMP,
                     PROL_DROITE=  'LINEAIRE',
                     PROL_GAUCHE= 'LINEAIRE',
                     RESULTAT= TRAN_DY2   );
NOB_DXAR = RECU_FONCTION( NOEUD= 'NO2',  NOM_CMP='DX' ,
                     NOM_CHAM='ACCE',
                     LIST_INST=LISTIMP,
                     PROL_DROITE=  'LINEAIRE',
                     PROL_GAUCHE= 'LINEAIRE',
                     RESULTAT=  TRAN_DY2  );

IMPR_FONCTION(UNITE=25,
              FORMAT='AGRAF',
              COURBE=(
                    _F(FONCTION=NOA_DXDR, ),
                    _F(FONCTION=NOB_DXDR, ),
                    _F(FONCTION=NOA_DXVR, ),
                    _F(FONCTION=NOB_DXVR, ),
                    _F(FONCTION=NOA_DXAR, ),
                    _F(FONCTION=NOB_DXAR, ),
            )),

TEST_FONCTION(VALEUR=(_F(VALE_CALC=-1.565203E-4,
                         VALE_PARA=0.1,
                         FONCTION=NOA_DXDR,
                         ),
                      _F(VALE_CALC=-5.148320E-4,
                         VALE_PARA=0.2,
                         FONCTION=NOA_DXDR,
                         ),
                      _F(VALE_CALC=2.812914E-4,
                         VALE_PARA=0.3,
                         FONCTION=NOA_DXDR,
                         ),
                      _F(VALE_CALC=-4.493425E-4,
                         VALE_PARA=0.4,
                         FONCTION=NOA_DXDR,
                         ),
                      _F(VALE_CALC=-3.757078E-4,
                         VALE_PARA=0.5,
                         FONCTION=NOA_DXDR,
                         ),
                      ),
              )

FIN( )
