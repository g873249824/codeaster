# MODIF  DATE 10/10/2006   AUTEUR REZETTE C.REZETTE 
# RESPONSABLE F6BHHBO P.DEBONNIERES
# TITRE ESSAI DE TRACTION-CISAILLEMENT (VISCOELASTICITE CYRANO3)
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================

DEBUT(CODE=_F( NOM = 'SSNV111A',NIV_PUB_WEB='INTRANET'))

#......................................................................
# PLAQUE CARREE EN TRACTION CISAILLEMENT CALCUL 3D
# LOI DE FLUAGE DE L'EPRI
#......................................................................


M=LIRE_MAILLAGE( )

MO=AFFE_MODELE( 
            MAILLAGE=M,    VERIF='MAILLE',
           AFFE=_F( TOUT = 'OUI',PHENOMENE = 'MECANIQUE',MODELISATION = '3D')
           )

TEMPE=CREA_CHAMP( OPERATION='AFFE', TYPE_CHAM='NOEU_TEMP_R', MAILLAGE=M,
                          AFFE=_F(  TOUT = 'OUI', NOM_CMP = 'TEMP',
                                 VALE = 300.)
                       )

ACIER=DEFI_MATERIAU( 
                ELAS=_F( E = 195000., NU = 0.3, ALPHA = 0.),
           ZIRC_EPRI=_F( FLUX_PHI = 1.E+18,R_P = 100.,THETA_MAX = 1.0472)
           )

CM=AFFE_MATERIAU( 
            MAILLAGE=M,   
           AFFE=_F( TOUT = 'OUI',MATER = ACIER, TEMP_REF = 20.) )

P23=DEFI_FONCTION( 
           NOM_PARA='INST',PROL_DROITE='CONSTANT',PROL_GAUCHE='LINEAIRE',
           VALE=(0.0, 0.0, 0.00001, 23.275,)
           )

M23=DEFI_FONCTION( 
           NOM_PARA='INST',PROL_DROITE='CONSTANT',PROL_GAUCHE='LINEAIRE',
           VALE=(0.0, 0.0, 0.00001,-23.275,)
           )

M37M23=DEFI_FONCTION( 
           NOM_PARA='INST',PROL_DROITE='CONSTANT',PROL_GAUCHE='LINEAIRE',
           VALE=(0.0, 0.0, 0.00001,-61.075, )
           )

M37P23=DEFI_FONCTION( 
           NOM_PARA='INST',PROL_DROITE='CONSTANT',PROL_GAUCHE='LINEAIRE',
           VALE=(0.0, 0.0, 0.00001,-14.525, )
           )

CH1=AFFE_CHAR_MECA( 
            MODELE=MO,
             TEMP_CALCULEE=TEMPE,DDL_IMPO=(
           _F( NOEUD = 'NO4', DX = 0.,DY = 0.),
                    _F( NOEUD = 'NO8', DX = 0.,DY = 0.,DZ = 0.),
                    _F( NOEUD = 'NO2', DX = 0.),
                    _F( NOEUD = 'NO6', DX = 0.))
           )

CH2=AFFE_CHAR_MECA_F( 
            MODELE=MO,FORCE_NODALE=(
           _F( NOEUD = ('NO1', 'NO5',), FX = M37P23,  FY = M23),
                        _F( NOEUD = ('NO2', 'NO6',), FX = P23,     FY = P23),
                        _F( NOEUD = ('NO3', 'NO7',), FX = M37M23,  FY = M23),
                        _F( NOEUD = ('NO4', 'NO8',), FX = M23,     FY = P23))
                          )

L_INST=DEFI_LIST_REEL(  DEBUT=0.0,INTERVALLE=(
             _F( JUSQU_A = 0.00001,  NOMBRE = 1),
             _F( JUSQU_A = 0.1,      NOMBRE = 9),
             _F( JUSQU_A = 1.0,      NOMBRE = 20),
             _F( JUSQU_A = 31.0,     NOMBRE = 10))
           )

U=STAT_NON_LINE( 
                            MODELE=MO,
                        CHAM_MATER=CM,EXCIT=(
                             _F( 
                CHARGE = CH1), _F( 
                CHARGE = CH2)),
                         COMP_INCR=_F( PARM_THETA = 0.5,
                RELATION = 'ZIRC_EPRI',
                ITER_INTE_MAXI = 1000),
                         INCREMENT=_F( 
                LIST_INST = L_INST),
                            NEWTON=_F( 
                MATRICE = 'TANGENTE',
                REAC_ITER = 1),
                       CONVERGENCE=_F( 
                RESI_GLOB_MAXI = 1.E-4,
                ITER_GLOB_MAXI = 25)
              )

U=CALC_ELEM( reuse=U,
                            OPTION=(
                  'SIEF_ELNO_ELGA',  'VARI_ELNO_ELGA',),
                          RESULTAT=U,
              )

#

TEST_RESU(RESU=( 
           _F(  RESULTAT = U,              NUME_ORDRE = 40,
             PARA = 'INST',             VALE = 3.10000E+01),
           _F(  RESULTAT = U,              NUME_ORDRE = 40,
             PARA = 'ITER_GLOB',        VALE_I = 0,
             CRITERE = 'ABSOLU',         PRECISION = 8.),
           _F(  RESULTAT = U,              NUME_ORDRE = 40,
             CRITERE = 'ABSOLU',        PRECISION = 1.E-07,
             PARA = 'RESI_GLOB_RELA',   VALE = 0.),
           _F(  RESULTAT = U,              NUME_ORDRE = 40,
             CRITERE = 'ABSOLU',        PRECISION = 1.E-06,
             PARA = 'RESI_GLOB',        VALE = 0.),
           _F(  RESULTAT = U,              NUME_ORDRE = 40,
             CRITERE = 'ABSOLU',         PRECISION = 2.,
             PARA = 'ITER_LINE',        VALE_I = 0))
           )

U=CALC_ELEM(reuse=U,         RESULTAT=U,
                OPTION='EPSI_ELNO_DEPL')

U=CALC_ELEM(reuse=U,         RESULTAT=U,
                OPTION='EPSP_ELNO')

TEST_RESU(RESU=(

  _F( RESULTAT = U,NOM_CHAM = 'EPSP_ELNO',MAILLE = 'MA2',NOEUD = 'NO2',
        NUME_ORDRE = 30,NOM_CMP = 'EPXX',VALE = 4.533E-04),
  _F( RESULTAT = U,NOM_CHAM = 'EPSP_ELNO',MAILLE = 'MA2',NOEUD = 'NO2',
        NUME_ORDRE = 30,NOM_CMP = 'EPXY',VALE = 4.186E-04),
  _F( RESULTAT = U,NOM_CHAM = 'EPSP_ELNO',MAILLE = 'MA2',NOEUD = 'NO2',
        NUME_ORDRE = 40,NOM_CMP = 'EPXX',VALE = 6.484E-03),
  _F( RESULTAT = U,NOM_CHAM = 'EPSP_ELNO',MAILLE = 'MA2',NOEUD = 'NO2',
        NUME_ORDRE = 40,NOM_CMP = 'EPXY',VALE = 5.989E-03))

           )

FIN()
#
