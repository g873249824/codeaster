# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'),
      IGNORE_ALARM=('MODELE1_63'))

# <MODELE1_63> : DANS UN MODELE, IL EXISTE DES ELEMENTS DE TYPE "BORD" QUI N'ONT PAS DE VOISIN AVEC RIGIDITE
#  LE MODELE PROVOQUANT CES ALARMES NE SERT QU'A LA VISUALISATION

# MODELISATION M : PAREIL QUE MODELISATION L, AVEC ENRICHISSEMENT GEOMETRIQUE

#----------------------------------------------
#             MAILLAGE : hexa_3_11_31.mgib
#----------------------------------------------

MAILLAG1=LIRE_MAILLAGE(FORMAT='MED',INFO=1);


#----------------------------------------
# epaisseur (suivant x)
lx = 1.

# largeur (suivant y)
ly = 10.

# hauteur (suivant z)
lz = 30.


# nb element suivant la largeur
ny = 11.

# nb element suivant la hauteur
nz = 31.
#----------------------------------------


# tailles des elements suivant y et z
hy = ly/ny
hz = lz/nz

# creation des noeuds servant a bloquer les modes rigides
MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                 MAILLAGE=MAILLAG1,
                 CREA_GROUP_NO=(
                                 _F(NOM='A1',OPTION='ENV_SPHERE',POINT=(lx, 0., (lz-hz)/2.),PRECISION=1/(8.*nz),RAYON=1/(8.*nz)),
                                 _F(NOM='A2',OPTION='ENV_SPHERE',POINT=(lx, 0., (lz+hz)/2.),PRECISION=1/(8.*nz),RAYON=1/(8.*nz)),
                                 _F(NOM='B1',OPTION='ENV_SPHERE',POINT=(0., 0., (lz-hz)/2.),PRECISION=1/(8.*nz),RAYON=1/(8.*nz)),
                                 _F(NOM='B2',OPTION='ENV_SPHERE',POINT=(0., 0., (lz+hz)/2.),PRECISION=1/(8.*nz),RAYON=1/(8.*nz)),
                                 _F(NOM='C1',OPTION='ENV_SPHERE',POINT=(lx, 1.*hy, (lz-hz)/2.),PRECISION=1/(8.*nz),RAYON=1/(8.*nz)),
                                 _F(NOM='C2',OPTION='ENV_SPHERE',POINT=(lx, 1.*hy, (lz+hz)/2.),PRECISION=1/(8.*nz),RAYON=1/(8.*nz)),
                                ),
                 );


#----------------------------------------------
#                   MODELE ET FISSURE
#----------------------------------------------

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAG1,
                     AFFE=_F(GROUP_MA=('VOL','SURFGAU','SURFDRO','SURFFRO','SURFBAC','SURFINF','SURFSUP'),
                             PHENOMENE='MECANIQUE',
                             MODELISATION='3D'),
                    );

LN=FORMULE(NOM_PARA=('X','Y','Z'),VALE='Z-lz/2.');
LT=FORMULE(NOM_PARA=('X','Y','Z'),VALE='-Y+ly/2.');

FISS=DEFI_FISS_XFEM(MAILLAGE=MAILLAG1,
                    DEFI_FISS=_F(FONC_LT=LT,FONC_LN=LN),
                    TYPE_ENRI_FOND='GEOMETRIQUE',
                    RAYON_ENRI=2.,
                 );

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,INFO=2,
                 MAILLAGE=MAILLAG1,
                 CREA_GROUP_MA=(
                                _F(FISSURE=FISS,NOM='TTXF',
                                  OPTION='FISS_XFEM', TYPE_GROUP='XFEM'),
                                _F(FISSURE=FISS,NOM='COUP',
                                  OPTION='FISS_XFEM', TYPE_GROUP='FISSUREE'),
                                _F(FISSURE=FISS,NOM='CRAK',
                                  OPTION='FISS_XFEM', TYPE_GROUP='CRACKTIP'),
                                _F(FISSURE=FISS,NOM='HEAV',
                                  OPTION='FISS_XFEM', TYPE_GROUP='HEAVISIDE'),
                                _F(FISSURE=FISS,NOM='MIXT',
                                  OPTION='FISS_XFEM', TYPE_GROUP='MIXTE'),
                                _F(FISSURE=FISS,NOM='TTXF2D',TYPE_MAILLE='2D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='XFEM'),
                                _F(FISSURE=FISS,NOM='COUP2D',TYPE_MAILLE='2D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='FISSUREE'),
                                _F(FISSURE=FISS,NOM='CRAK2D',TYPE_MAILLE='2D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='CRACKTIP'),
                                _F(FISSURE=FISS,NOM='HEAV2D',TYPE_MAILLE='2D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='HEAVISIDE'),
                                _F(FISSURE=FISS,NOM='MIXT2D',TYPE_MAILLE='2D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='MIXTE'),
                                _F(FISSURE=FISS,NOM='TTXF3D',TYPE_MAILLE='3D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='XFEM'),
                                _F(FISSURE=FISS,NOM='COUP3D',TYPE_MAILLE='3D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='FISSUREE'),
                                _F(FISSURE=FISS,NOM='CRAK3D',TYPE_MAILLE='3D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='CRACKTIP'),
                                _F(FISSURE=FISS,NOM='HEAV3D',TYPE_MAILLE='3D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='HEAVISIDE'),
                                _F(FISSURE=FISS,NOM='MIXT3D',TYPE_MAILLE='3D',
                                  OPTION='FISS_XFEM', TYPE_GROUP='MIXTE'))
);
MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,INFO=2,
                 MAILLAGE=MAILLAG1,
                 CREA_GROUP_NO=(
                                _F(FISSURE=FISS,NOM='TTXF',
                                  OPTION='FISS_XFEM', TYPE_GROUP='XFEM'),
                                _F(FISSURE=FISS,NOM='CRAK',
                                  OPTION='FISS_XFEM', TYPE_GROUP='CRACKTIP'),
                                _F(FISSURE=FISS,NOM='HEAV',
                                  OPTION='FISS_XFEM', TYPE_GROUP='HEAVISIDE'),
                                _F(FISSURE=FISS,NOM='MIXT',
                                  OPTION='FISS_XFEM', TYPE_GROUP='MIXTE'))
);
MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,FISSURE=FISS,INFO=1);


#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

E=100.0E6
nu=0.
rho=7800.
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,RHO=rho));

CHAMPMA1=AFFE_MATERIAU(MAILLAGE=MAILLAG1,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER,
                                ),
                             );


#----------------------------------------------------------
#                   CHARGEMENT : CHAMP AUXILIAIRE MODE III
#----------------------------------------------------------

# blocage des modes rigides
CH=AFFE_CHAR_MECA(MODELE=MODELEK,
                  LIAISON_DDL=(
                               _F(GROUP_NO=('A1','A2'),DDL=('DX','DX'),COEF_MULT=(0.5,0.5),COEF_IMPO=0.),
                               _F(GROUP_NO=('A1','A2'),DDL=('DY','DY'),COEF_MULT=(0.5,0.5),COEF_IMPO=0.),
                               _F(GROUP_NO=('A1','A2'),DDL=('DZ','DZ'),COEF_MULT=(0.5,0.5),COEF_IMPO=0.),
                               _F(GROUP_NO=('B1','B2'),DDL=('DZ','DZ'),COEF_MULT=(0.5,0.5),COEF_IMPO=0.),
                               _F(GROUP_NO=('C1','C2'),DDL=('DX','DX'),COEF_MULT=(0.5,0.5),COEF_IMPO=0.),
                               _F(GROUP_NO=('C1','C2'),DDL=('DZ','DZ'),COEF_MULT=(0.5,0.5),COEF_IMPO=0.),
                              ),
                  );

# formule des coordonnees polaires dans la base locale au fond de fissure
R = FORMULE(NOM_PARA=('X','Y','Z'),VALE='sqrt((Y-5.)**2+(Z-15.)**2)');
T = FORMULE(NOM_PARA=('X','Y','Z'),VALE='atan2(Z-15.,-Y+5.)');

coef=1./sqrt(2.*pi)

# definition des contraintes analytiques SIG13 et SIG23
SIG13 = FORMULE(NOM_PARA=('X','Y','Z'),VALE='-1.*coef/sqrt(R(X,Y,Z))*sin(T(X,Y,Z)/2.)');
SIG23 = FORMULE(NOM_PARA=('X','Y','Z'),VALE='coef/sqrt(R(X,Y,Z))*cos(T(X,Y,Z)/2.)');

# definition des opposees des contraintes analytiques -SIG13 et -SIG23
OSIG13 = FORMULE(NOM_PARA=('X','Y','Z'),VALE='coef/sqrt(R(X,Y,Z))*sin(T(X,Y,Z)/2.)');
OSIG23 = FORMULE(NOM_PARA=('X','Y','Z'),VALE='-1.*coef/sqrt(R(X,Y,Z))*cos(T(X,Y,Z)/2.)');

# chargement correspondant a un mode III pur
CHF=AFFE_CHAR_MECA_F(MODELE=MODELEK,
                     FORCE_FACE=(
                                 _F(GROUP_MA='SURFGAU',FX=OSIG13),
                                 _F(GROUP_MA='SURFDRO',FX=SIG13),
                                 _F(GROUP_MA='SURFSUP',FX=OSIG23),
                                 _F(GROUP_MA='SURFINF',FX=SIG23),
                                 _F(GROUP_MA='SURFFRO',FZ=OSIG23,FY=SIG13),
                                 _F(GROUP_MA='SURFBAC',FZ=SIG23,FY=OSIG13),
                                ),
                      );


#----------------------------------------------
#                   RESOLUTION
#----------------------------------------------

UTOT1=MECA_STATIQUE(MODELE=MODELEK,
                   CHAM_MATER=CHAMPMA1,
                   EXCIT=(
                          _F(CHARGE=CHF),
                          _F(CHARGE=CH),
                          ),
                   SOLVEUR=_F(   
                            METHODE='MUMPS'),
                   INFO=1,
                   ); 
# -------------------------------------------------------------
#            POST-TRAITEMENT POUR LA VISUALISATION X-FEM
# -------------------------------------------------------------

MA_XFEM=POST_MAIL_XFEM(
                       MODELE        = MODELEK,
                       INFO          = 2)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D'))

RES_XFEM=POST_CHAM_XFEM(MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT1,
                        
                        INFO          = 2)

IMPR_RESU(FORMAT='GMSH',UNITE=81,RESU=_F(RESULTAT=RES_XFEM));

#------------------------------------------------------------------------
# POST-TRAITEMENT : CALCUL DES SIFS PAR LA METHODE ENERGETIQUE AVEC X-FEM
#------------------------------------------------------------------------

# TEST AVEC PLUSIEURS COURONNES
RI=[2. , 0.666 , 1. , 1. , 1. , 2.1]
RS=[4. , 1.666 , 2. , 3. , 4. , 3.9]

nbc=len(RI)
SIF = [None]*nbc

for i in range(0,nbc) :

   SIF[i]=CALC_G(RESULTAT=UTOT1,
                 OPTION='CALC_K_G',
                 THETA=_F(FISSURE=FISS,
                          R_INF=RI[i],
                          R_SUP=RS[i]),
                 LISSAGE=_F(LISSAGE_THETA='LAGRANGE',
                            LISSAGE_G='LAGRANGE'),
                 INFO=2);

   IMPR_TABLE(TABLE=SIF[i]);

# SOLUTION ANALYTIQUE (MODE III PUR)
K1REF=0.
K2REF=0.
K3REF=1.

prec_k3 = 0.03

VAL_CALC = [
0.000771724436918,
0.000771724436918,
-8.86195010807E-05,
-8.86195010807E-05,
0.99838002496,
0.99838002496,
0.000767298586107,
0.000767298586107,
-8.05958794086E-05,
-8.05958794086E-05,
0.998580905438,
0.998580905438,
0.000769122763554,
0.000769122763554,
-8.42669256436E-05,
-8.42669256436E-05,
0.998323893231,
0.998323893231,
0.000771059405231,
0.000771059405231,
-8.55242692237E-05,
-8.55242692237E-05,
0.998323526652,
0.998323526652,
0.000770857212464,
0.000770857212464,
-8.71686426011E-05,
-8.71686426011E-05,
0.99836131305,
0.99836131305,
0.000771749806606,
0.000771749806606,
-8.82592242967E-05,
-8.82592242967E-05,
0.998393555166,
0.998393555166,]
for i in range(0,nbc) :

   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='K1',
              TYPE_TEST='MAX',
              VALE_CALC=VAL_CALC[6*i+0], VALE_REFE=K1REF,    
              CRITERE='ABSOLU',
              PRECISION=0.02,    
              REFERENCE='ANALYTIQUE');

   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='K1',
              TYPE_TEST='MIN',
              VALE_CALC=VAL_CALC[6*i+1], VALE_REFE=K1REF,    
              CRITERE='ABSOLU',
              PRECISION=0.02,    
              REFERENCE='ANALYTIQUE');

   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='K2',
              TYPE_TEST='MAX',
              VALE_CALC=VAL_CALC[6*i+2], VALE_REFE=K2REF,    
              CRITERE='ABSOLU',
              PRECISION=0.02,    
              REFERENCE='ANALYTIQUE');

   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='K2',
              TYPE_TEST='MIN',
              VALE_CALC=VAL_CALC[6*i+3], VALE_REFE=K2REF,    
              CRITERE='ABSOLU',
              PRECISION=0.02,    
              REFERENCE='ANALYTIQUE');

   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='K3',
              TYPE_TEST='MAX',
              VALE_CALC=VAL_CALC[6*i+4], VALE_REFE=K3REF,    
              CRITERE='RELATIF',
              PRECISION=prec_k3,    
              REFERENCE='ANALYTIQUE');

   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='K3',
              TYPE_TEST='MIN',
              VALE_CALC=VAL_CALC[6*i+5], VALE_REFE=K3REF,    
              CRITERE='RELATIF',
              PRECISION=prec_k3,    
              REFERENCE='ANALYTIQUE');


FIN();
