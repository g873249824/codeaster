# MODIF  DATE 14/02/2006   AUTEUR MABBAS M.ABBAS 
# TITRE VALIDATION DE LA LOI HYPER-ELASTIQUE SUR UNE LANIERE - 3D
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================


DEBUT( CODE=_F(  NOM = 'SSNV189A',NIV_PUB_WEB='INTERNET') );

maillage=LIRE_MAILLAGE(VERI_MAIL=_F(APLAT=0.001,),);

maillage=DEFI_GROUP(reuse =maillage,
                    MAILLAGE=maillage,
                    CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI',),);

modmeca=AFFE_MODELE(MAILLAGE=maillage,
                    AFFE=_F(TOUT='OUI',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D',),);

elast=DEFI_MATERIAU(ELAS_HYPER=_F(C10=2.668,
                                C01=0.271,
                                C20=0.466,
                                K=2939,
                                RHO=1000.0,),);

chmat=AFFE_MATERIAU(MAILLAGE=maillage,
                    AFFE=_F(TOUT='OUI',
                            MATER=elast,),);

encastr=AFFE_CHAR_MECA(MODELE=modmeca,
                       DDL_IMPO=(_F(GROUP_MA='S4',
                                    DX=50,
                                    DY=0,
                                    DZ=0,),
                                 _F(GROUP_MA='S6',
                                    DX=0,
                                    DY=0,
                                    DZ=0,),),);

L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=2.0,
                                    NOMBRE=50,),);

l=DEFI_FONCTION(NOM_PARA='INST',
                VALE=(0.0,0.0,1.0,1.0,2.0,0.0),);

RESU=STAT_NON_LINE(MODELE=modmeca,
                   CHAM_MATER=chmat,
                   EXCIT=_F(CHARGE=encastr,
                            FONC_MULT=l,),
                   COMP_ELAS=_F(RELATION='ELAS_HYPER',
                                DEFORMATION='GREEN',
                                TOUT='OUI',),
                   INCREMENT=_F(LIST_INST=L_INST,
                                INST_FIN=2.0,
                                SUBD_PAS=10,
                                SUBD_PAS_MINI=1e-05,
                                COEF_SUBD_PAS_1=1.0,),
                   NEWTON=_F(PREDICTION='TANGENTE',
                             MATRICE='TANGENTE',
                             REAC_ITER=1,),
                   CONVERGENCE=_F(RESI_GLOB_RELA=1E-6,
                                  ITER_GLOB_MAXI=25,),
                   ARCHIVAGE=_F(PAS_ARCH=1,
                                ARCH_ETAT_INIT='OUI',),);

RESU=CALC_ELEM(reuse =RESU,
               MODELE=modmeca,
               CHAM_MATER=chmat,
               RESULTAT=RESU,
               OPTION=('EPSG_ELNO_DEPL','SIEF_ELNO_ELGA',),);
               


RESU=CALC_NO(reuse =RESU,
             RESULTAT=RESU,
             OPTION='FORC_NODA',
             MODELE=modmeca,
             CHAM_MATER=chmat,);

TAB_FORC=POST_RELEVE_T(ACTION=_F(INTITULE='FORCE',
                                 GROUP_NO='S4',
                                 RESULTAT=RESU,
                                 NOM_CHAM='FORC_NODA',
                                 LIST_INST=L_INST,
                                 RESULTANTE='DX',
                                 OPERATION='EXTRACTION',),);

IMPR_TABLE(TABLE=TAB_FORC)

TEST_TABLE( TABLE = TAB_FORC,
            FILTRE=_F(NOM_PARA='INST',
                       VALE=1.00000E+00,
                     ),
            NOM_PARA  = 'DX',
            VALE      = 1.20596E+03 ,
            REFERENCE = 'NON_REGRESSION',
            VERSION   = '8.2.7',
            PRECISION = 1E-5,      
)                       

TEST_TABLE( TABLE = TAB_FORC,
            FILTRE=_F(NOM_PARA='INST',
                       VALE=2.00000E+00,
                     ),
            NOM_PARA  = 'DX',
            VALE      = 7.84796E-11,
            REFERENCE = 'NON_REGRESSION',
            VERSION   = '8.2.7',
            PRECISION = 1E-5,      
) 

FIN();
