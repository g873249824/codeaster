# MODIF  DATE 14/01/2008   AUTEUR LEFEBVRE J-P.LEFEBVRE 
# RESPONSABLE PROIX J-M.PROIX
# TITRE  TEST LOI DE COMPORTEMENT 3D  VISC_ISOT_LINE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
#......................................................................


from Utilitai.veri_matr_tang import VERI_MATR_TANG

DEBUT(CODE=_F(NOM='COMP002F',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),);

#parametres vitesse de sollicitation
vitesse = 1.e-5

t_0 = 5.e-2/(8.0*vitesse)

# liste d'archivage
temps_ar=DEFI_LIST_REEL( VALE =[t_0*i for i in range(9)],)



#parmetres elastiques
YOUNG = 200000.0;
POISSON = 0.3;


#parametres loi ISOT_LINE 
SY = 437.0;
pente = 2024.74690664;

#parametres viscosite
SIGM_0=6176.                                              
EPSI_0=3.31131121483e13                                  
M=6.76                                                


# def des materiaux
ACIER = [None]*3
#unite en Pa
C_Pa = 1.e+6
YOUNG_Pa = YOUNG * C_Pa
pente_Pa = pente * C_Pa
SY_Pa = SY * C_Pa;
SIGM_0_Pa=SIGM_0 * C_Pa                                         


ACIER[0]=DEFI_MATERIAU(ELAS=_F(E=YOUNG_Pa,
                               NU=POISSON,
                               ALPHA=11.8e-6),
                    ECRO_LINE=_F(D_SIGM_EPSI=pente_Pa,
                                 SY=SY_Pa,),
                     VISC_SINH=_F(
                                   SIGM_0 = SIGM_0_Pa,
                                   EPSI_0 = EPSI_0,
                                   M      = M),
                                 );
#unite en MPa
ACIER[1]=DEFI_MATERIAU(ELAS=_F(E=YOUNG,
                               NU=POISSON,
                               ALPHA=11.8e-6),
                     VISC_SINH=_F(
                                   SIGM_0 = SIGM_0,
                                   EPSI_0 = EPSI_0,
                                   M      = M),
                    ECRO_LINE=_F(D_SIGM_EPSI=pente,
                                 SY=SY,),)


compor='VISC_ISOT_LINE'

INCLUDE(UNITE=92)

#Discretisation du calcul
Ncal = 7
N_pas = 4*[1] + [1, 5, 25, 125, 625, 3125]
N_cas = len(N_pas)

label_cal=['_Pa_','_Th_','_sym_','_rot_'] + 6* ['_N']
prec_ecart=4*[1.E-9] + [1.E-1] + (N_cas-5)*[3.E-2]   
prec_tgt=4.e-2

ch_param=['V1','VMIS','TRACE','SIXX','SIYY','SIZZ','SIXY','SIXZ','SIYZ']
ch_param2=['V1','VMIS','TRACE']

RESU=[None]*Ncal
R_SI=[None]*len(ch_param)
TMP_S=[None]

N_cas = len(N_pas)
#pointeur materiau
P_imat = [0] + [1] + (N_cas-2)*[1]
#pointeur deformation
P_idef = 2*[0] + [1] + [2] + (N_cas-4)*[0]
#pointeur Option thermique
P_opt_ther = ["NON", "OUI"] + (N_cas-2)*["NON"]
# conditions du calcul thermique
(inst_th, temp_th) = (3.0*t_0, 100.)

#Boucle sur l'ensemble des calculs
for i in range(Ncal):
        N = N_pas[i]
        imat = P_imat[i]
        idef = P_idef[i]
        eps_imp = V_EPS[idef]
        opt_ther = P_opt_ther[i]
        temps=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=(_F(JUSQU_A=t_0,NOMBRE=N,),
                                 _F(JUSQU_A=2.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=3.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=4.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=5.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=6.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=7.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=8.0*t_0,NOMBRE=N,),),);

#Resout le pb a deformation imposee
        RESU[i]=SIMU_POINT_MAT(
                   COMP_INCR=_F(RELATION=compor,DEFORMATION='SIMO_MIEHE'),
                   NEWTON=_F(MATRICE='TANGENTE',
                             REAC_ITER=1,),
                   CONVERGENCE=_F(ITER_GLOB_MAXI=10,),
                   MATER      = ACIER[imat],  
                   ARCHIVAGE = _F(ARCH_ETAT_INIT = 'OUI',LIST_INST = temps_ar),
                   INCREMENT=_F(LIST_INST=temps,),
                   EPSI_IMPOSE=_F(EPXX=eps_imp[0], EPYY=eps_imp[1], EPZZ=eps_imp[2],
                                  EPXY=eps_imp[3], EPXZ=eps_imp[4], EPYZ=eps_imp[5]),
                        );
        R_SI=RENOMME(i,N_pas,label_cal,ch_param,RESU,R_SI)

        DETRUIRE ( CONCEPT = _F (NOM = temps,),)
        
# TEST_RESU sur les erreurs relatives 
prec_zero=[1.E-10, 0.01, 0.01]

TEST_ECART(ch_param2,label_cal,N_pas,Ncal,ch_param,R_SI,prec_ecart,prec_zero)
                
for i in range(Ncal):
        IMPR_TABLE(TABLE=R_SI[i])
        




# Test de la matrice tangente sur le calcul le plus fin

i=Ncal-1
N = N_pas[i]                 
imat = P_imat[i]             
idef = P_idef[i]             
eps_imp = V_EPS[idef]   
opt_ther = P_opt_ther[i]     
Linst=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=(_F(JUSQU_A=t_0,NOMBRE=N,),
                                 _F(JUSQU_A=2.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=3.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=4.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=5.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=6.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=7.0*t_0,NOMBRE=N,),
                                 _F(JUSQU_A=8.0*t_0,NOMBRE=N,),),);

RESU_TGT=SIMU_POINT_MAT(
                   COMP_INCR=_F(RELATION=compor, DEFORMATION='SIMO_MIEHE',              
                                TYPE_MATR_TANG='VERIFICATION',
                                VALE_PERT_RELA=1.E-5,
                               ),
                   NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                   CONVERGENCE=_F(ITER_GLOB_MAXI=10,),
                   MATER      = ACIER[1],  
                   INCREMENT=_F(LIST_INST=Linst,),
                   EPSI_IMPOSE=_F(EPXX=eps_imp[0], EPYY=eps_imp[1], EPZZ=eps_imp[2],
                                  EPXY=eps_imp[3], EPXZ=eps_imp[4], EPYZ=eps_imp[5]),
                        );

DIFF_MAT=VERI_MATR_TANG()

IMPR_TABLE(TABLE=DIFF_MAT)

TEST_TABLE(TABLE=DIFF_MAT,
           NOM_PARA='MAT_DIFF',
           TYPE_TEST='MAX',
           VALE=0.,
           CRITERE='ABSOLU',
           PRECISION=prec_tgt,
           REFERENCE='ANALYTIQUE',);     

FIN()
