# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# person_in_charge: jacques.pellet at edf.fr

#-------------------------------------------------------------------------------------
# description du test :
#----------------------
#  Le maillage est un simple carre [0,1]X[0,1]. Le point C est en (1,1)
#
#  On lui impose de rester "solide" et de subir une translation de vecteur (-1,1)
#
#  La solution analytique est evidente :
#    - le point C : (1,1) -> (1,1) + (-1,1) = (0,2)
#                         => deplacement de C : (-1,1)
#
#---------------------------------------------------------------------------------------


DEBUT(  CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

# pour tester la commande COPIER/listr8_sdaster :
XXX0=DEFI_LIST_REEL(VALE=(0.,),)
LR8=COPIER(CONCEPT=XXX0)

# pour tester la commande COPIER/maillage_sdaster :
XXX1=LIRE_MAILLAGE(FORMAT='MED',)
MA=COPIER(CONCEPT=XXX1)

DEFI_GROUP(reuse=MA, MAILLAGE=MA, CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI',))

# pour tester la commande COPIER/modele_sdaster :
XXX2=AFFE_MODELE(MAILLAGE=MA, AFFE=_F( TOUT = 'OUI',  PHENOMENE = 'MECANIQUE', MODELISATION = 'D_PLAN') )
MO=COPIER(CONCEPT=XXX2)

MAT=DEFI_MATERIAU( ELAS=_F( E = 1.E+05,  NU = 0.3, RHO=9800.)  )
CHAM_MAT=AFFE_MATERIAU(MAILLAGE=MA,  AFFE=_F( TOUT = 'OUI', MATER = MAT) )


CHAR1=AFFE_CHAR_MECA( MODELE=MO, DDL_IMPO= _F(GROUP_MA = 'ABCD',
          DX=-1, DY=1,))

# pour tester la commande COPIER/evol_elas :
XXX3=MECA_STATIQUE( MODELE=MO, CHAM_MATER=CHAM_MAT, LIST_INST=LR8,
                    EXCIT=( _F(CHARGE = CHAR1),), OPTION='SANS')
RESU0=COPIER(CONCEPT=XXX3)

CALC_CHAMP(reuse=RESU0, RESULTAT=RESU0, CONTRAINTE='SIGM_ELNO')

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  GROUP_NO='C',
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU0,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DX',
                  VALE_CALC=-1.000000000,
                  VALE_REFE=-1.0,),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  GROUP_NO='C',
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU0,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  VALE_CALC=1.000000000,
                  VALE_REFE=1.0,),
          )



#--------------------------------------------------------------------------------------
# pour tester la commande COPIER pour les types : fonction, nappe, et table
# --------------------------------------------------------------------------------

# type : fonction
#----------------
XXX4=DEFI_FONCTION( NOM_PARA='X', VALE=(  0.,   1., 10.,  2., ))

TEST_FONCTION(VALEUR= _F(REFERENCE='ANALYTIQUE', VALE_REFE=1.5, VALE_CALC=1.5,
                         FONCTION=XXX4, NOM_PARA=('X',), VALE_PARA=(5.)))

FONC1=COPIER(CONCEPT=XXX4)
TEST_FONCTION(VALEUR= _F(REFERENCE='ANALYTIQUE', VALE_REFE=1.5, VALE_CALC=1.5,
                         FONCTION=FONC1, NOM_PARA=('X',), VALE_PARA=(5.)))

# type : nappe
#----------------
XXX5=DEFI_NAPPE( NOM_PARA='X', PROL_DROITE='EXCLU', PROL_GAUCHE='EXCLU',
                 PARA=(  0.5,   1., ), NOM_PARA_FONC='EPSI',
                 DEFI_FONCTION=(
                            _F(  PROL_DROITE = 'EXCLU', PROL_GAUCHE = 'EXCLU',
                                 VALE = (  0.,   25., 10.,  525., )),
                            _F(  PROL_DROITE = 'EXCLU', PROL_GAUCHE = 'EXCLU',
                                 VALE = ( 0.,    50.,  10.,   550., ))),
                 )

TEST_FONCTION(VALEUR= _F( REFERENCE='ANALYTIQUE', VALE_REFE=287.5, VALE_CALC=287.5,
                          FONCTION=XXX5, NOM_PARA=('X', 'EPSI'), VALE_PARA=(0.75, 5.)))

NAP1=COPIER(CONCEPT=XXX5)
TEST_FONCTION(VALEUR= _F( REFERENCE='ANALYTIQUE', VALE_REFE=287.5, VALE_CALC=287.5,
                          FONCTION=NAP1, NOM_PARA=('X', 'EPSI'), VALE_PARA=(0.75, 5.)))

# type : table
#----------------
XXX6=POST_RELEVE_T(ACTION=_F(INTITULE='DEPL', NOEUD='N1', RESULTAT=RESU0,
                           NOM_CHAM='DEPL',  NUME_ORDRE=1,
                           TOUT_CMP='OUI', OPERATION='EXTRACTION',))

TEST_TABLE(TABLE=XXX6, NOM_PARA='DX', VALE_CALC= -1.0,
           FILTRE=_F(NOM_PARA='NOEUD', VALE_K='N1',))

TAB1=COPIER(CONCEPT=XXX6)
TEST_TABLE(TABLE=TAB1, NOM_PARA='DX', VALE_CALC= -1.0,
           FILTRE=_F(NOM_PARA='NOEUD', VALE_K='N1',))

FIN();
