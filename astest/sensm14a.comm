# MODIF  DATE 20/03/2008   AUTEUR MAHFOUZ D.MAHFOUZ 
# RESPONSABLE F6BHHBO P.DEBONNIERES
# TITRE CAVITE 2D CALCUL DE SENSIBILITE (LOI DE DRUCKER-PRAGER)
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#            CONFIGURATION MANAGEMENT OF EDF VERSION
#
DEBUT(CODE=_F(NOM='SENSM14A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),)
#
#......................................................................
# CREUSEMENT D'UNE CAVITE CIRCULAIRE
# CALCUL 2D TIRE D'UN BENCHMARK MOMAS
# LOI DE DRUCKER-PRAGER (ECROUISSAGE LINEAIRE)
# SENSIBILITE AUX PARAMETRES MATERIAU
#......................................................................
#

#
#
# 1. Definition du dictionnaire des parametres
#

mot_cle = [ "E", "NU", "ALPHA", "P_ULTM", "SY", "H" ]
sensible = [ 5800.0E6,  0.3,  0.328, 1.225E-2, 2.11E6, 1.7E10 ]

#
# 2. Definition des parametres sensibles
#

n = len(sensible)
PS = [None]*n
for i in range(n):
  PS[i] = DEFI_PARA_SENSI(VALE = sensible[i]);

#
# 3. Maillage
#

PRE_GIBI();
MAILLAGE = LIRE_MAILLAGE();


#
# 4. Modele
#

MODEMECA = AFFE_MODELE(MAILLAGE = MAILLAGE,
                       AFFE = _F(TOUT = 'OUI',
                                 PHENOMENE = 'MECANIQUE',
                                 MODELISATION = 'D_PLAN')
                      );

MAILLAGE = MODI_MAILLAGE(reuse = MAILLAGE,
                         MAILLAGE = MAILLAGE,
                         ORIE_PEAU_2D = _F(GROUP_MA = ('HAUT',
                                                       'BAS',
                                                       'GAUCHE',
                                                       'CAVITE',
                                                       'DERECHA',
                                                      )
                                          ),
                         INFO = 1);

MAILLAGE = DEFI_GROUP(reuse = MAILLAGE,
                      MAILLAGE = MAILLAGE,
                      CREA_GROUP_NO = ( _F(GROUP_MA='ROCHE',),
                                        _F(GROUP_MA='DERECHA',),
                                        _F(GROUP_MA='GAUCHE',),
                                        _F(GROUP_MA='CAVITE',),
                                        _F(GROUP_MA='DIAGON',),
                                        _F(GROUP_MA='HAUT',),
                                        _F(GROUP_MA='BAS',),
                                        _F(NOM='DERECHM', DIFFE=('DERECHA', 'D4',),),
                                        _F(NOM='GAUCHM', DIFFE=('GAUCHE', 'G1',),),
                                        _F(NOM='BASM', DIFFE=('BAS', 'B1',),),
                                      )
                     );

#
# 5. Mise en place des materiaux
#

SOL = DEFI_MATERIAU(ELAS_FO = _F(E = PS[0],
                                 NU = PS[1],
                                 RHO = 2764.0,
                                ),
                    DRUCK_PRAGER_FO = _F(ECROUISSAGE = 'LINEAIRE',
                                         ALPHA = PS[2],
                                         P_ULTM = PS[3],
                                         SY = PS[4],
                                         H = PS[5])
                   );


#
# 6. Affectation des materiaux
#

MATEMAIL = AFFE_MATERIAU(MAILLAGE = MAILLAGE,
                         AFFE = _F(TOUT='OUI', MATER = SOL));

#
# 7. Chargements
#

TEMPS = DEFI_LIST_REEL(DEBUT = 0.0,
                       INTERVALLE = (_F(JUSQU_A = 1.000E5, NOMBRE = 1),
                                     _F(JUSQU_A = 1.500E6, NOMBRE = 2),),
                      );

COEF1 = DEFI_FONCTION(NOM_PARA = 'INST',
                      VALE = (0.0, 0.0,
                              1.0E5,  1.0,
                              1.50E6, 1.0, ),
                      PROL_DROITE = 'CONSTANT',);

COEF2 = DEFI_FONCTION(NOM_PARA = 'INST',
                      VALE = (0.0, 0.0,
                              1.0E5, 1.0,
                              1.50E6, 0.0, ),
                      PROL_DROITE = 'CONSTANT',);

FX = DEFI_FONCTION(NOM_PARA = 'X',
                   VALE = (0.0, 0.0,
                           3.0, 1.1E7,),
                  );

FY = DEFI_FONCTION(NOM_PARA = 'Y',
                   VALE = (0.0, 0.0,
                           3.0, 1.54E7,),
                  );

CALDEM = AFFE_CHAR_MECA(MODELE=MODEMECA,
                        DDL_IMPO=(_F(GROUP_NO=('GAUCHM',),
                                     DX=0.0,),
                                  _F(GROUP_NO='BASM',
                                     DY=0,),),);

CALDEP = AFFE_CHAR_MECA(MODELE=MODEMECA,
                        DDL_IMPO=(_F(GROUP_NO=('GAUCHE',),
                                     DX=0.0,),
                                  _F(GROUP_NO='BAS',
                                     DY=0,),),);

CALEXT = AFFE_CHAR_MECA(MODELE=MODEMECA,
                        PRES_REP=_F(GROUP_MA = 'DERECHA',
                                    PRES = 1.1E7,),);

CALHAU = AFFE_CHAR_MECA(MODELE=MODEMECA,
                        PRES_REP=_F(GROUP_MA = 'HAUT',
                                    PRES = 1.54E7,),);

FCAVITE = AFFE_CHAR_MECA_F(MODELE = MODEMECA,
                           FORCE_CONTOUR = _F(GROUP_MA = 'CAVITE',
                                              FX = FX,
                                              FY = FY,),
                          );

PRES_CAV = AFFE_CHAR_MECA(MODELE = MODEMECA,
                          PRES_REP = _F(GROUP_MA = 'CAVITE',
                                        PRES = 1.0E7,),
                         );

#
# 8. Calcul
#


RES=STAT_NON_LINE(MODELE=MODEMECA,
                  CHAM_MATER=MATEMAIL,
                  EXCIT=(_F(CHARGE=CALDEP,),
                         _F(CHARGE=FCAVITE,
                            FONC_MULT=COEF2),
                         _F(CHARGE=CALEXT,
                            FONC_MULT=COEF1),
                         _F(CHARGE=CALHAU,
                            FONC_MULT=COEF1),),
                  COMP_INCR=_F(RELATION='DRUCK_PRAGER',
                               RESI_INTE_RELA=1E-09,
                               ITER_INTE_MAXI=5,
                               ITER_INTE_PAS=10,),
                  INCREMENT=_F(LIST_INST=TEMPS,
                               SUBD_METHODE='UNIFORME',
                               SUBD_PAS=4,
                               SUBD_PAS_MINI=1,),
                  NEWTON=_F(MATRICE='TANGENTE',
                            REAC_ITER=1),
                  CONVERGENCE=_F(RESI_GLOB_RELA=1.E-09,
                                 ITER_GLOB_MAXI=20,),
                  SENSIBILITE=tuple(PS),)

RES=CALC_ELEM(reuse=RES,RESULTAT=RES,
              OPTION=('SIEF_ELNO_ELGA','VARI_ELNO_ELGA'),)

RES=CALC_ELEM(reuse=RES,RESULTAT=RES,
              OPTION=('SIEF_ELNO_ELGA','VARI_ELNO_ELGA'),
              SENSIBILITE=tuple(PS))

# extraction des derivees a tester
TNDX = POST_RELEVE_T(ACTION=_F(INTITULE='DX',
                               NOEUD = 'N1000',
                               RESULTAT = RES,
                               NOM_CHAM = 'DEPL',
                               NOM_CMP = 'DX',
                               SENSIBILITE=tuple(PS),
                               OPERATION = 'EXTRACTION'))

TNDY = POST_RELEVE_T(ACTION=_F(INTITULE='DY',
                               NOEUD = 'N1000',
                               RESULTAT = RES,
                               NOM_CHAM = 'DEPL',
                               NOM_CMP = 'DY',
                               SENSIBILITE=tuple(PS),
                               OPERATION = 'EXTRACTION'))

TNSIXX = POST_RELEVE_T(ACTION=_F(INTITULE='SIXX',
                                 NOEUD='N48',
                                 MAILLE='M90',
                                 RESULTAT=RES,
                                 NOM_CHAM='SIEF_ELNO_ELGA',
                                 NOM_CMP='SIXX',
                                 SENSIBILITE=tuple(PS),
                                 OPERATION='EXTRACTION',),)

TNSIYY = POST_RELEVE_T(ACTION=_F(INTITULE='SIYY',
                                 NOEUD='N48',
                                 MAILLE='M90',
                                 RESULTAT=RES,
                                 NOM_CHAM='SIEF_ELNO_ELGA',
                                 NOM_CMP='SIYY',
                                 SENSIBILITE=tuple(PS),
                                 OPERATION='EXTRACTION',),)

TNSIXY = POST_RELEVE_T(ACTION=_F(INTITULE='SIXY',
                                 NOEUD='N48',
                                 MAILLE='M90',
                                 RESULTAT=RES,
                                 NOM_CHAM='SIEF_ELNO_ELGA',
                                 NOM_CMP='SIXY',
                                 SENSIBILITE=tuple(PS),
                                 OPERATION='EXTRACTION',),)

TNSIZZ = POST_RELEVE_T(ACTION=_F(INTITULE='SIZZ',
                                 NOEUD='N48',
                                 MAILLE='M90',
                                 RESULTAT=RES,
                                 NOM_CHAM='SIEF_ELNO_ELGA',
                                 NOM_CMP='SIZZ',
                                 SENSIBILITE=tuple(PS),
                                 OPERATION='EXTRACTION',),)

TNVAR = POST_RELEVE_T(ACTION=_F(INTITULE='VAR1',
                                 NOEUD='N48',
                                 MAILLE='M90',
                                 RESULTAT=RES,
                                 NOM_CHAM='VARI_ELNO_ELGA',
                                 NOM_CMP='V1',
                                 SENSIBILITE=tuple(PS),
                                 OPERATION='EXTRACTION',),)

#
# 8.1 - Verification par differences finies
#
def estim(vm, vp, deltap):
   """Retourne l'estimation de la derivee
   """
   if deltap != 0.:
      res = (vp - vm) / deltap
   else:
      print vm, vp, deltap
      res = 0.
   return res

def ecart(diff, deriv):
   """
      Retourne l'ecart relatif entre les derivees si la reference est non nulle,
      la difference finie sinon.
   """
   if abs(deriv) > 1.e-3:
      res = abs(diff - deriv)/deriv
   else:
      res = deriv
   return res

VERIF = [None] * n
DCALC = [None] * n

SOL2   = [None]*n
SOL3   = [None]*n
MATMA2 = [None]*n
MATMA3 = [None]*n
RES2   = [None]*n
RES3   = [None]*n

TDXM   = [None]*n
TDYM   = [None]*n
TDXP   = [None]*n
TDYP   = [None]*n

TCDX   = [None]*n
TCDY   = [None]*n

TSIXXM = [None]*n
TSIYYM = [None]*n
TSIXYM = [None]*n
TSIZZM = [None]*n
TSIXXP = [None]*n
TSIYYP = [None]*n
TSIXYP = [None]*n
TSIZZP = [None]*n

TCSIXX = [None]*n
TCSIYY = [None]*n
TCSIXY = [None]*n
TCSIZZ = [None]*n

TVARM  = [None]*n
TVARP  = [None]*n
TCVAR  = [None]*n

epsilon = 1.E-4
tole = 1.e-2

for i in range(n):
  eps2 = [1.]*n
  eps3 = [1.]*n
  eps2[i]=1.0 + epsilon
  eps3[i]=1.0 - epsilon

  # deux formules pour garder dans la table l'estimation de la derivee
#   DCALC[i] = FORMULE(NOM_PARA=('VMOIN', 'VPLUS'),
#                      VALE='(VPLUS - VMOIN)/%f' % (2.*epsilon*sensible[i]))
  DCALC[i] = FORMULE(NOM_PARA=('VMOIN', 'VPLUS'),
                     VALE='estim(VMOIN, VPLUS, %f)' % (2.*epsilon*sensible[i]) )

  VERIF[i] = FORMULE(NOM_PARA=('DERIV', 'DCALC'),
                     VALE='ecart(DCALC, DERIV)')

  SOL2[i] = DEFI_MATERIAU(ELAS=_F(E=sensible[0]*eps2[0],
                                  NU=sensible[1]*eps2[1],
                                  RHO=2764.0,),
                          DRUCK_PRAGER=_F(ECROUISSAGE='LINEAIRE',
                                          ALPHA      =sensible[2]*eps2[2],
                                          P_ULTM     =sensible[3]*eps2[3],
                                          SY         =sensible[4]*eps2[4],
                                          H          =sensible[5]*eps2[5]),)

  SOL3[i] = DEFI_MATERIAU(ELAS=_F(E=sensible[0]*eps3[0],
                                  NU=sensible[1]*eps3[1],
                                  RHO=2764.0,),
                          DRUCK_PRAGER=_F(ECROUISSAGE='LINEAIRE',
                                          ALPHA      =sensible[2]*eps3[2],
                                          P_ULTM     =sensible[3]*eps3[3],
                                          SY         =sensible[4]*eps3[4],
                                          H          =sensible[5]*eps3[5]),)

  MATMA2[i] = AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                            AFFE=_F(TOUT='OUI',
                                    MATER = SOL2[i]))

  MATMA3[i] = AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                            AFFE=_F(TOUT='OUI',
                                    MATER = SOL3[i]))

  RES2[i] = STAT_NON_LINE(MODELE=MODEMECA,
                          CHAM_MATER=MATMA2[i],
                          EXCIT=(_F(CHARGE=CALDEP,),
                                 _F(CHARGE=FCAVITE,
                                    FONC_MULT=COEF2),
                                 _F(CHARGE=CALEXT,
                                    FONC_MULT=COEF1),
                                 _F(CHARGE=CALHAU,
                                    FONC_MULT=COEF1),),
                          COMP_INCR=_F(RELATION='DRUCK_PRAGER',
                                       RESI_INTE_RELA=1E-06,
                                       ITER_INTE_MAXI=5,
                                       ITER_INTE_PAS=10,),
                          INCREMENT=_F(LIST_INST=TEMPS,
                                       SUBD_METHODE='UNIFORME',
                                       SUBD_PAS=4,
                                       SUBD_PAS_MINI=1,),
                          NEWTON=_F(MATRICE='TANGENTE',
                                    REAC_ITER=1),
                          CONVERGENCE=_F(RESI_GLOB_RELA=1.E-06,
                                         ITER_GLOB_MAXI=20,),)

  RES3[i] = STAT_NON_LINE(MODELE=MODEMECA,
                          CHAM_MATER=MATMA3[i],
                          EXCIT=(_F(CHARGE=CALDEP,),
                                 _F(CHARGE=FCAVITE,
                                    FONC_MULT=COEF2),
                                 _F(CHARGE=CALEXT,
                                    FONC_MULT=COEF1),
                                 _F(CHARGE=CALHAU,
                                    FONC_MULT=COEF1),),
                          COMP_INCR=_F(RELATION='DRUCK_PRAGER',
                                       RESI_INTE_RELA=1E-06,
                                       ITER_INTE_MAXI=5,
                                       ITER_INTE_PAS=10,),
                          INCREMENT=_F(LIST_INST=TEMPS,
                                       SUBD_METHODE='UNIFORME',
                                       SUBD_PAS=4,
                                       SUBD_PAS_MINI=1,),
                          NEWTON=_F(MATRICE='TANGENTE',
                                    REAC_ITER=1),
                          CONVERGENCE=_F(RESI_GLOB_RELA=1.E-06,
                                         ITER_GLOB_MAXI=20,),)

  RES2[i]=CALC_ELEM(reuse=RES2[i],
                    RESULTAT=RES2[i],
                    OPTION=('SIEF_ELNO_ELGA','VARI_ELNO_ELGA'),)

  RES3[i]=CALC_ELEM(reuse=RES3[i],
                    RESULTAT=RES3[i],
                    OPTION=('SIEF_ELNO_ELGA','VARI_ELNO_ELGA'),)

  # extraction des valeurs en P - epsilon et P + epsilon
  TDXM[i] = POST_RELEVE_T(ACTION=_F(INTITULE='DX',
                                NOEUD = 'N1000',
                                RESULTAT = RES3[i],
                                NOM_CHAM = 'DEPL',
                                NOM_CMP = 'DX',
                                OPERATION = 'EXTRACTION'))
  TDXP[i] = POST_RELEVE_T(ACTION=_F(INTITULE='DX',
                                NOEUD = 'N1000',
                                RESULTAT = RES2[i],
                                NOM_CHAM = 'DEPL',
                                NOM_CMP = 'DX',
                                OPERATION = 'EXTRACTION'))

  TDYM[i] = POST_RELEVE_T(ACTION=_F(INTITULE='DY',
                                NOEUD = 'N1000',
                                RESULTAT = RES3[i],
                                NOM_CHAM = 'DEPL',
                                NOM_CMP = 'DY',
                                OPERATION = 'EXTRACTION'))
  TDYP[i] = POST_RELEVE_T(ACTION=_F(INTITULE='DY',
                                NOEUD = 'N1000',
                                RESULTAT = RES2[i],
                                NOM_CHAM = 'DEPL',
                                NOM_CMP = 'DY',
                                OPERATION = 'EXTRACTION'))

  TSIXXM[i] = POST_RELEVE_T(ACTION=_F(INTITULE='SIXX',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES3[i],
                                   NOM_CHAM='SIEF_ELNO_ELGA',
                                   NOM_CMP='SIXX',
                                   OPERATION='EXTRACTION',),)
  TSIXXP[i] = POST_RELEVE_T(ACTION=_F(INTITULE='SIXX',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES2[i],
                                   NOM_CHAM='SIEF_ELNO_ELGA',
                                   NOM_CMP='SIXX',
                                   OPERATION='EXTRACTION',),)

  TSIYYM[i] = POST_RELEVE_T(ACTION=_F(INTITULE='SIYY',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES3[i],
                                   NOM_CHAM='SIEF_ELNO_ELGA',
                                   NOM_CMP='SIYY',
                                   OPERATION='EXTRACTION',),)
  TSIYYP[i] = POST_RELEVE_T(ACTION=_F(INTITULE='SIYY',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES2[i],
                                   NOM_CHAM='SIEF_ELNO_ELGA',
                                   NOM_CMP='SIYY',
                                   OPERATION='EXTRACTION',),)

  TSIXYM[i] = POST_RELEVE_T(ACTION=_F(INTITULE='SIXY',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES3[i],
                                   NOM_CHAM='SIEF_ELNO_ELGA',
                                   NOM_CMP='SIXY',
                                   OPERATION='EXTRACTION',),)
  TSIXYP[i] = POST_RELEVE_T(ACTION=_F(INTITULE='SIXY',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES2[i],
                                   NOM_CHAM='SIEF_ELNO_ELGA',
                                   NOM_CMP='SIXY',
                                   OPERATION='EXTRACTION',),)

  TSIZZM[i] = POST_RELEVE_T(ACTION=_F(INTITULE='SIZZ',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES3[i],
                                   NOM_CHAM='SIEF_ELNO_ELGA',
                                   NOM_CMP='SIZZ',
                                   OPERATION='EXTRACTION',),)
  TSIZZP[i] = POST_RELEVE_T(ACTION=_F(INTITULE='SIZZ',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES2[i],
                                   NOM_CHAM='SIEF_ELNO_ELGA',
                                   NOM_CMP='SIZZ',
                                   OPERATION='EXTRACTION',),)

  TVARM[i] = POST_RELEVE_T(ACTION=_F(INTITULE='VAR1',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES3[i],
                                   NOM_CHAM='VARI_ELNO_ELGA',
                                   NOM_CMP='V1',
                                   OPERATION='EXTRACTION',),)
  TVARP[i] = POST_RELEVE_T(ACTION=_F(INTITULE='VAR1',
                                   NOEUD='N48',
                                   MAILLE='M90',
                                   RESULTAT=RES2[i],
                                   NOM_CHAM='VARI_ELNO_ELGA',
                                   NOM_CMP='V1',
                                   OPERATION='EXTRACTION',),)

  # table de comparaison pour les contraintes
  # Principe :
  # - On part de la table qui contient la derivee,
  # - on renomme la colonne de la derivee en DERIV,
  # - on fusionne avec la table de la valeur en p+epsilon,
  # - que l'on renomme en VPLUS,
  # - on insere la table avec la valeur en p-epsilon,
  # - que l'on renomma en VMOIN,
  # - on estime la derivee (VPLUS - VMOIN)/deltap = DCALC,
  # - on calcule l'ecart entre DCALC et DERIV (en relatif ou absolu),
  # - on limite les colonnes de la table.

  # comparaison DX
  TCDX[i]=CALC_TABLE(TABLE=TNDX,
                    SENSIBILITE=PS[i],
                    ACTION=(_F(OPERATION='RENOMME',
                                NOM_PARA=('DX', 'DERIV'),),
                             _F(OPERATION='COMB',
                                TABLE=TDXP[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('DX', 'VPLUS'),),
                             _F(OPERATION='COMB',
                                TABLE=TDXM[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('DX', 'VMOIN'),),
                             _F(OPERATION='OPER',
                                NOM_PARA='DCALC',
                                FORMULE=DCALC[i]),
                             _F(OPERATION='OPER',
                                NOM_PARA='DIFF',
                                FORMULE=VERIF[i]),
                             _F(OPERATION='EXTR',
                                NOM_PARA=('NOEUD','INST','VMOIN','VPLUS','DCALC','DERIV','DIFF'),),),)

  IMPR_TABLE(TABLE=TCDX[i])

  TEST_TABLE(TABLE=TCDX[i],
             NOM_PARA='DIFF',
             FILTRE=_F(NOM_PARA='DIFF',
                       CRIT_COMP='ABS_MAXI'),
             VALE=0.,
             CRITERE='ABSOLU',
             PRECISION=tole,
             REFERENCE='AUTRE_ASTER',)

  # comparaison DY
  TCDY[i]=CALC_TABLE(TABLE=TNDY,
                    SENSIBILITE=PS[i],
                    ACTION=(_F(OPERATION='RENOMME',
                                NOM_PARA=('DY', 'DERIV'),),
                             _F(OPERATION='COMB',
                                TABLE=TDYP[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('DY', 'VPLUS'),),
                             _F(OPERATION='COMB',
                                TABLE=TDYM[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('DY', 'VMOIN'),),
                             _F(OPERATION='OPER',
                                NOM_PARA='DCALC',
                                FORMULE=DCALC[i]),
                             _F(OPERATION='OPER',
                                NOM_PARA='DIFF',
                                FORMULE=VERIF[i]),
                             _F(OPERATION='EXTR',
                                NOM_PARA=('NOEUD','INST','VMOIN','VPLUS','DCALC','DERIV','DIFF'),),),)

  IMPR_TABLE(TABLE=TCDY[i])

  TEST_TABLE(TABLE=TCDY[i],
             NOM_PARA='DIFF',
             FILTRE=_F(NOM_PARA='DIFF',
                       CRIT_COMP='ABS_MAXI'),
             VALE=0.,
             CRITERE='ABSOLU',
             PRECISION=tole,
             REFERENCE='AUTRE_ASTER',)

  # comparaison SIXX
  TCSIXX[i]=CALC_TABLE(TABLE=TNSIXX,
                    SENSIBILITE=PS[i],
                    ACTION=(_F(OPERATION='RENOMME',
                                NOM_PARA=('SIXX', 'DERIV'),),
                             _F(OPERATION='COMB',
                                TABLE=TSIXXP[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('SIXX', 'VPLUS'),),
                             _F(OPERATION='COMB',
                                TABLE=TSIXXM[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('SIXX', 'VMOIN'),),
                             _F(OPERATION='OPER',
                                NOM_PARA='DCALC',
                                FORMULE=DCALC[i]),
                             _F(OPERATION='OPER',
                                NOM_PARA='DIFF',
                                FORMULE=VERIF[i]),
                             _F(OPERATION='EXTR',
                                NOM_PARA=('NOEUD','INST','VMOIN','VPLUS','DCALC','DERIV','DIFF'),),),)

  IMPR_TABLE(TABLE=TCSIXX[i])

  TEST_TABLE(TABLE=TCSIXX[i],
             NOM_PARA='DIFF',
             FILTRE=_F(NOM_PARA='DIFF',
                       CRIT_COMP='ABS_MAXI'),
             VALE=0.,
             CRITERE='ABSOLU',
             PRECISION=tole,
             REFERENCE='AUTRE_ASTER',)

  # comparaison SIYY
  TCSIYY[i]=CALC_TABLE(TABLE=TNSIYY,
                    SENSIBILITE=PS[i],
                    ACTION=(_F(OPERATION='RENOMME',
                                NOM_PARA=('SIYY', 'DERIV'),),
                             _F(OPERATION='COMB',
                                TABLE=TSIYYP[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('SIYY', 'VPLUS'),),
                             _F(OPERATION='COMB',
                                TABLE=TSIYYM[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('SIYY', 'VMOIN'),),
                             _F(OPERATION='OPER',
                                NOM_PARA='DCALC',
                                FORMULE=DCALC[i]),
                             _F(OPERATION='OPER',
                                NOM_PARA='DIFF',
                                FORMULE=VERIF[i]),
                             _F(OPERATION='EXTR',
                                NOM_PARA=('NOEUD','INST','VMOIN','VPLUS','DCALC','DERIV','DIFF'),),),)

  IMPR_TABLE(TABLE=TCSIYY[i])

  TEST_TABLE(TABLE=TCSIYY[i],
             NOM_PARA='DIFF',
             FILTRE=_F(NOM_PARA='DIFF',
                       CRIT_COMP='ABS_MAXI'),
             VALE=0.,
             CRITERE='ABSOLU',
             PRECISION=tole,
             REFERENCE='AUTRE_ASTER',)

  # comparaison SIXY
  TCSIXY[i]=CALC_TABLE(TABLE=TNSIXY,
                    SENSIBILITE=PS[i],
                    ACTION=(_F(OPERATION='RENOMME',
                                NOM_PARA=('SIXY', 'DERIV'),),
                             _F(OPERATION='COMB',
                                TABLE=TSIXYP[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('SIXY', 'VPLUS'),),
                             _F(OPERATION='COMB',
                                TABLE=TSIXYM[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('SIXY', 'VMOIN'),),
                             _F(OPERATION='OPER',
                                NOM_PARA='DCALC',
                                FORMULE=DCALC[i]),
                             _F(OPERATION='OPER',
                                NOM_PARA='DIFF',
                                FORMULE=VERIF[i]),
                             _F(OPERATION='EXTR',
                                NOM_PARA=('NOEUD','INST','VMOIN','VPLUS','DCALC','DERIV','DIFF'),),),)

  IMPR_TABLE(TABLE=TCSIXY[i])

  TEST_TABLE(TABLE=TCSIXY[i],
             NOM_PARA='DIFF',
             FILTRE=_F(NOM_PARA='DIFF',
                       CRIT_COMP='ABS_MAXI'),
             VALE=0.,
             CRITERE='ABSOLU',
             PRECISION=2.*tole,
             REFERENCE='AUTRE_ASTER',)

  # comparaison SIZZ
  TCSIZZ[i]=CALC_TABLE(TABLE=TNSIZZ,
                    SENSIBILITE=PS[i],
                    ACTION=(_F(OPERATION='RENOMME',
                                NOM_PARA=('SIZZ', 'DERIV'),),
                             _F(OPERATION='COMB',
                                TABLE=TSIZZP[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('SIZZ', 'VPLUS'),),
                             _F(OPERATION='COMB',
                                TABLE=TSIZZM[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('SIZZ', 'VMOIN'),),
                             _F(OPERATION='OPER',
                                NOM_PARA='DCALC',
                                FORMULE=DCALC[i]),
                             _F(OPERATION='OPER',
                                NOM_PARA='DIFF',
                                FORMULE=VERIF[i]),
                             _F(OPERATION='EXTR',
                                NOM_PARA=('NOEUD','INST','VMOIN','VPLUS','DCALC','DERIV','DIFF'),),),)

  IMPR_TABLE(TABLE=TCSIZZ[i])

  TEST_TABLE(TABLE=TCSIZZ[i],
             NOM_PARA='DIFF',
             FILTRE=_F(NOM_PARA='DIFF',
                       CRIT_COMP='ABS_MAXI'),
             VALE=0.,
             CRITERE='ABSOLU',
             PRECISION=tole,
             REFERENCE='AUTRE_ASTER',)

  # comparaison VAR
  TCVAR[i]=CALC_TABLE(TABLE=TNVAR,
                    SENSIBILITE=PS[i],
                    ACTION=(_F(OPERATION='RENOMME',
                                NOM_PARA=('V1', 'DERIV'),),
                             _F(OPERATION='COMB',
                                TABLE=TVARP[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('V1', 'VPLUS'),),
                             _F(OPERATION='COMB',
                                TABLE=TVARM[i],
                                NOM_PARA=('NOEUD','INST'),),
                             _F(OPERATION='RENOMME',
                                NOM_PARA=('V1', 'VMOIN'),),
                             _F(OPERATION='OPER',
                                NOM_PARA='DCALC',
                                FORMULE=DCALC[i]),
                             _F(OPERATION='OPER',
                                NOM_PARA='DIFF',
                                FORMULE=VERIF[i]),
                             _F(OPERATION='EXTR',
                                NOM_PARA=('NOEUD','INST','VMOIN','VPLUS','DCALC','DERIV','DIFF'),),),)

  IMPR_TABLE(TABLE=TCVAR[i])

  TEST_TABLE(TABLE=TCVAR[i],
             NOM_PARA='DIFF',
             FILTRE=_F(NOM_PARA='DIFF',
                       CRIT_COMP='ABS_MAXI'),
             VALE=0.,
             CRITERE='ABSOLU',
             PRECISION=tole,
             REFERENCE='AUTRE_ASTER',)

FIN()

