# TITRE TP ANALYSE MODALE TPAM1
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# person_in_charge: emmanuel.boyere at edf.fr
#
#-------------------------------------------------------------------
#                 CORRIGE TP ANALYSE MODAL N1
#                           MODES MULTIPLES
# OBJECTIF POUR LA BASE DE CAS-TESTS ASTER: MODAL GENERALISE REEL.
# INTERCOMPARAISON DES METHODES DE SOUS-ESPACES (SORENSEN, LANCZOS,
# JACOBI ET QZ).
#-------------------------------------------------------------------
# IMPORT PYTHON
#import os
#directory = "/home/xxx/ASTER/TP_MODAL/TPAM1/"

#-------------------------------------------------------------------
#                       CALCUL ASTER
#-------------------------------------------------------------------
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),
              IMPR_MACRO='OUI')

# LECTURE ET INFO MAILLAGE
MA=LIRE_MAILLAGE(INFO=2,VERI_MAIL=_F());
MA=DEFI_GROUP(reuse=MA,MAILLAGE=MA,
              CREA_GROUP_MA=_F(NOM ='TOUT',TOUT = 'OUI'))
# Attention : le test d'interpenetration peut etre long (voir la documentation).
MACR_INFO_MAIL(MAILLAGE=MA,
       QUALITE='OUI',
       INTERPENETRATION='OUI',
       CONNEXITE='OUI',
       TAILLE='OUI',
       PROP_CALCUL='OUI');

# MODELE ET CARACTERISTIQUES POUTRE
MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='POU_D_E',),);
CARELEM=AFFE_CARA_ELEM(MODELE=MO,
                       POUTRE=_F(GROUP_MA='TOUT',
                                 SECTION='RECTANGLE',
                                 CARA=('HY','HZ',),
                                 VALE=(0.05,0.05,),),);

# MATERIAU ET POIDS DU MODELE
MAT=DEFI_MATERIAU(ELAS=_F(E=2.10E11,
                          NU=0.3,
                          RHO=7800.0,),);
CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=MAT,),);
TABL_MAS=POST_ELEM(MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=CARELEM,
                   MASS_INER=_F(TOUT='OUI'));
IMPR_TABLE(TABLE=TABL_MAS);

# FIN DE LA QUESTION 0
#FIN();

# CL D'ENCASTREMENT
CH1=AFFE_CHAR_MECA(MODELE=MO,
                   DDL_IMPO=_F(NOEUD='A',
                               DX=0.0,
                               DY=0.0,
                               DZ=0.0,
                               DRX=0.0,
                               DRY=0.0,
                               DRZ=0.0,),);

#--------------------------------------------------------------------
# ANALYSE MODALE
# QUESTION 1: CALCUL SUR LES 10 OU 11 PLUS PETITES FREQUENCES

# ON LANCE LE CALCUL MODAL AVEC UNE SEULE COMMANDE, CALC_MODAL.
FREQ_0=CALC_MODAL(MODELE=MO,
                  CHAM_MATER=CHMAT,
                  CARA_ELEM=CARELEM,
                  CHARGE=CH1,
                  METHODE='TRI_DIAG',
#                 METHODE='SORENSEN',
                  CALC_FREQ=_F(OPTION='PLUS_PETITE',
#                              NMAX_FREQ=10,
                               NMAX_FREQ=11,
         ),);
 

#------- ON TESTE LA METHODE QZ ------------------------------------
# CALCULS DES MATRICES DE MASSE ET DE RIGIDITE

MELR1=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                     MODELE=MO,
                     CHAM_MATER=CHMAT,
                     CARA_ELEM=CARELEM,
                     CHARGE=CH1,);
MELM1=CALC_MATR_ELEM(OPTION='MASS_MECA',
                     MODELE=MO,
                     CHAM_MATER=CHMAT,
                     CARA_ELEM=CARELEM,
                     CHARGE=CH1,);
NUM1=NUME_DDL(MATR_RIGI=MELR1,);
MATASSR1=ASSE_MATRICE(MATR_ELEM=MELR1,
                      NUME_DDL=NUM1,);
MATASSM1=ASSE_MATRICE(MATR_ELEM=MELM1,
                      NUME_DDL=NUM1,);

# CALCUL DES MODES AVEC MODE_ITER_SIMULT



FREQ_01=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                        MATR_MASS=MATASSM1,
                        METHODE='QZ',
                        INFO=2,
                        CALC_FREQ=_F(OPTION='PLUS_PETITE',NMAX_FREQ=11,
                        ),);

FREQ_02=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                        MATR_MASS=MATASSM1,
                        METHODE='QZ',
                        INFO=2,
                        CALC_FREQ=_F(
                        OPTION='CENTRE',FREQ=2.59704E+03,NMAX_FREQ=11,
                        ),);

FREQ_03=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                        MATR_MASS=MATASSM1,
                        METHODE='QZ',
                        CALC_FREQ=_F(OPTION='TOUT',),);
TEST_RESU(RESU=_F(NUME_ORDRE=6,
                  PARA='FREQ',
                  RESULTAT=FREQ_01,
                  VALE_CALC=2597.040657041,
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=11,
                  PARA='FREQ',
                  RESULTAT=FREQ_02,
                  VALE_CALC=5769.9054933878997,
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  PARA='FREQ',
                  RESULTAT=FREQ_03,
                  VALE_CALC=167.63819422541999,
                  CRITERE='RELATIF',
                  ),
          )

# FIN DE LA QUESTION 1
#FIN();

# QUESTION 2: CALCUL BANDE AVEC LES QUATRES METHODES
FREQ_SOR=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                         MATR_MASS=MATASSM1,
                         METHODE='SORENSEN',
                         CALC_FREQ=_F(OPTION='BANDE',
                                      FREQ=(0.0,6000.0,),),
                         TITRE='METHODE DE SORENSEN',);

FREQ_SOR=NORM_MODE(reuse=FREQ_SOR,MODE=FREQ_SOR,NORME='EUCL',);
IMPR_RESU(RESU=_F(RESULTAT=FREQ_SOR,TOUT_PARA= 'OUI',TOUT_CHAM= 'NON'),);

FREQ_LAN=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                         MATR_MASS=MATASSM1,
                         METHODE='TRI_DIAG',
                         CALC_FREQ=_F(OPTION='BANDE',
                                      FREQ=(0.0,6000.0,),),
                         TITRE='METHODE DE LANCZOS',);

FREQ_LAN=NORM_MODE(reuse=FREQ_LAN,MODE=FREQ_LAN,NORME='EUCL',);
IMPR_RESU(RESU=_F(RESULTAT=FREQ_LAN,TOUT_PARA= 'OUI',TOUT_CHAM= 'NON'),);

FREQ_JAC=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                         MATR_MASS=MATASSM1,
                         METHODE='JACOBI',
                         OPTION='SANS',
                         VERI_MODE=_F(SEUIL=1e-05,),
                         CALC_FREQ=_F(OPTION='BANDE',
                                      FREQ=(0.0,6000.0,),),
                         TITRE='METHODE DE BATHE',);

FREQ_JAC=NORM_MODE(reuse=FREQ_JAC,MODE=FREQ_JAC,NORME='EUCL',);
IMPR_RESU(RESU=_F(RESULTAT=FREQ_JAC,TOUT_PARA= 'OUI',TOUT_CHAM= 'NON'),);

FREQ_QZ=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                         MATR_MASS=MATASSM1,
                         METHODE='QZ',
                         VERI_MODE=_F(SEUIL=1e-05,),
                         CALC_FREQ=_F(OPTION='BANDE',
                                      FREQ=(0.0,6000.0,),),
                         TITRE='METHODE QZ',);

FREQ_QZ=NORM_MODE(reuse=FREQ_QZ,MODE=FREQ_QZ,NORME='EUCL',);
IMPR_RESU(RESU=_F(RESULTAT=FREQ_QZ,TOUT_PARA= 'OUI',TOUT_CHAM= 'NON'),);

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  PARA='FREQ',
                  RESULTAT=FREQ_SOR,
                  VALE_CALC=167.63819422438999,
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=4,
                  PARA='FREQ',
                  RESULTAT=FREQ_LAN,
                  VALE_CALC=1050.6045040198001,
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=7,
                  PARA='FREQ',
                  RESULTAT=FREQ_JAC,
                  VALE_CALC=2942.3746290629001,
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=11,
                  PARA='FREQ',
                  RESULTAT=FREQ_QZ,
                  VALE_CALC=5769.9054933878997,
                  CRITERE='RELATIF',
                  ),
          )

FREQ_INV=MODE_ITER_INV(MATR_RIGI=MATASSR1,
                       MATR_MASS=MATASSM1,
                       CALC_FREQ=_F(OPTION='AJUSTE',
                                    FREQ=(0.0,6000.0,),),
                       TITRE='METHODE INVERSE',);

FREQ_INV=NORM_MODE(reuse =FREQ_INV,MODE=FREQ_INV,NORME='EUCL',);
IMPR_RESU(RESU=_F(RESULTAT=FREQ_INV,TOUT_CHAM='NON',TOUT_PARA='OUI',),);

# IMPRESSION FORMAT RESULTAT DES 2 PREMIERS VECTEURS PROPRES
IMPR_RESU(RESU=(_F(RESULTAT=FREQ_SOR,
                   NOM_CHAM='DEPL',
                   NUME_ORDRE=(1,2,),
                   NOM_CMP=('DY','DZ',),
                   IMPR_COOR='OUI',),
                _F(RESULTAT=FREQ_LAN,
                   NOM_CHAM='DEPL',
                   NUME_ORDRE=(1,2,),
                   NOM_CMP=('DY','DZ',),
                   IMPR_COOR='OUI',),
                _F(RESULTAT=FREQ_JAC,
                   NOM_CHAM='DEPL',
                   NUME_ORDRE=(1,2,),
                   NOM_CMP=('DY','DZ',),
                   IMPR_COOR='OUI',),
                _F(RESULTAT=FREQ_INV,
                   NOM_CHAM='DEPL',
                   NUME_ORDRE=(1,2,),
                   NOM_CMP=('DY','DZ',),
                   IMPR_COOR='OUI',),),);

# IMPRESSION FORMAT CASTEM DES MODES PROPRES
IMPR_RESU(FORMAT='CASTEM',UNITE=55,
          RESU=(
                _F(
                   MAILLAGE=MA,),
                _F(
                   RESULTAT=FREQ_SOR,),
                _F(
                   RESULTAT=FREQ_LAN,),
                _F(
                   RESULTAT=FREQ_JAC,),),);

# AFFICHAGE GIBI INTERACTIF VIA PYTHON
#os.system('cp %spost.dcas .' %directory)
#os.system('/logiciels/aster/outils/gibi2000.x post.dcas')

# FIN DE LA QUESTION 2.
#FIN();

# QUESTION 3: AFFICHAGE AGRAF INTERACTIF VIA PYTHON
#os.system('cp %smode.digr .' %directory)
#os.system('agraf mode.digr')

FIN();
