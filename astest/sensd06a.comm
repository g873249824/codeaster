# MODIF  DATE 17/05/2004   AUTEUR CIBHHBC M.LOPES 
# RESPONSABLE H.ANDRIAMBOLOLONA
# TITRE SENSIBILITE AUX MATERIAUX EN DYNAMIQUE LINEAIRE TRANSITOIRE ISOTROPE 2D
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT( CODE=_F(  NOM = 'SENSD06A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),
       PAR_LOT='NON' )
# ----------------------------------------------------------------------
#          J                               OPPOSE
#           *-------------------------------*
#           !               !               !
#           !               !               !
#           !               !               !
#           !               * CENTRE        !
#           !               !               !
#           !               !               !
#           !               !               !
#           *-------------------------------*
#       ORIGINE                              I
#
#              1   < X < 11
#             -1.5 < Y <  1.5
#
# Chargement par une force nodale au noeud OPPOSE sous forme non
# assemblee.
# Sensibilite simultanee materiaux et chargement 
# La solution de reference de sensibilite parvient 
# d'un calcul par differences finies.
# ----------------------------------------------------------------------
# Initialisations

I_DEBUT = 0.
I_FIN = 1.E-4

#      
# 1. Definition/memorisation des fonctions constantes
#
PS_UN=DEFI_CONSTANTE(VALE=1.0,);
MEMO_NOM_SENSI(NOM_UN=PS_UN);
#
PS_ZERO=DEFI_CONSTANTE(VALE=0.0,);
MEMO_NOM_SENSI(NOM_ZERO=PS_ZERO);

#
# 2. Definition des parametres sensibles
#
mot_cle =[    "E", "NU", "FX", "FY" ]
sensible=[ 3.6E10,  0.2,  10.,   3. ]
n=len(sensible)
PS=[None]*n

for i in range(n):
  PS[i]=DEFI_PARA_SENSI(VALE=sensible[i])
  MEMO_NOM_SENSI ( NOM=_F(NOM_SD=PS[i].nom,
                          PARA_SENSI=PS[i],
                          NOM_COMPOSE=PS_UN.nom ),);
#
# 3. Prealable
#
PRE_GIBI()
MAILLAGE=LIRE_MAILLAGE();
MAILLAGE=DEFI_GROUP(reuse=MAILLAGE,
                    MAILLAGE=MAILLAGE,
                    CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI'));

#
# 3.1. Modele
#
MO=AFFE_MODELE(MAILLAGE=MAILLAGE,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='C_PLAN',),);

#
# 3.2. Mise en place des materiaux
#
MAT=DEFI_MATERIAU(ELAS_FO=_F(E=PS[0],
                             RHO=2400.,
                             NU=PS[1],
                             ));
nf=2
n2=n-nf
MATS=[None]*n2
for i in range(n2):
  PSFONC=[PS_ZERO]*n2
  PSFONC[i]=PS_UN
  MATS[i]=DEFI_MATERIAU(ELAS_FO=_F(E=PSFONC[0],
                                   RHO=2400.,
                                   NU=PSFONC[1],
                                   ));
  MEMO_NOM_SENSI ( NOM=_F(NOM_SD='MAT',
                          PARA_SENSI=PS[i],
                          NOM_COMPOSE=MATS[i].nom,
                          MOT_CLE=mot_cle[i],
                          MOT_FACT='ELAS_FO',
                          VALEUR=PS[i].nom ),);
#
# 3.3. Affectation des materiaux
#
CHMAT=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                    AFFE=_F(TOUT='OUI',MATER=MAT,),);

CHMS=[None]*n2
for i in range(n2):
  CHMS[i]=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                        AFFE=_F(TOUT='OUI',MATER=MATS[i],),);
  MEMO_NOM_SENSI ( NOM=_F(NOM_SD='CHMAT',
                          PARA_SENSI=PS[i],
                          NOM_COMPOSE=CHMS[i].nom,
                          MOT_CLE='MATER',
                          MOT_FACT='AFFE',
                          VALEUR='MAT' ),);
#
# 3.4. Chargements
#
CLIM=AFFE_CHAR_MECA(MODELE=MO,
                    DDL_IMPO=(_F(GROUP_NO='ORIGINE',DX=0.0,DY=0.0),
                              _F(GROUP_MA='BORD_GAU',DX=0.0)),);
#
CH=AFFE_CHAR_MECA_F(MODELE=MO,
                    FORCE_NODALE=(_F(GROUP_NO='OPPOSE',
                                     FX=PS[2],
                                     FY=PS[3]))
                                     );

CHS=[None]*n
for i in range(n-nf,n):
  PSFONC=[PS_ZERO]*n
  PSFONC[i]=PS_UN
  CHS[i]=AFFE_CHAR_MECA_F(MODELE=MO,
                          FORCE_NODALE=(_F(GROUP_NO='OPPOSE',
                                           FX=PSFONC[2],
                                           FY=PSFONC[3]))
                                           );
  MEMO_NOM_SENSI ( NOM=_F(NOM_SD='CH',
                          PARA_SENSI=PS[i],
                          NOM_COMPOSE=CHS[i].nom,
                          MOT_CLE=mot_cle[i],
                          MOT_FACT='FORCE_NODALE',
                          VALEUR=PS[i].nom ),);
#
# 3.5 Premier membre
#

MATELER=CALC_MATR_ELEM(MODELE=MO,OPTION='RIGI_MECA',
                       CHAM_MATER=CHMAT,    
                       CHARGE=CLIM)

MATELEM=CALC_MATR_ELEM(MODELE=MO,
                       OPTION='MASS_MECA',
                       CHAM_MATER=CHMAT,
                       CHARGE=CLIM)                                   

NUM=NUME_DDL(MATR_RIGI=MATELER)

MATASSR=ASSE_MATRICE(MATR_ELEM=MATELER,NUME_DDL=NUM)

MATASSM=ASSE_MATRICE(MATR_ELEM=MATELEM,NUME_DDL=NUM)

FC=DEFI_FONCTION(NOM_PARA='INST',
                 PROL_DROITE='CONSTANT',
                 PROL_GAUCHE='CONSTANT',
                 VALE=(I_DEBUT,0.,I_FIN,1.,))

L_INST=DEFI_LIST_REEL(DEBUT=I_DEBUT,INTERVALLE=_F(JUSQU_A=I_FIN,NOMBRE=10))

#
# 4. Calcul
#
for i in range(n):
  MEMO_NOM_SENSI(NOM=_F(NOM_SD='DYT',
                        PARA_SENSI=PS[i],
                        NOM_COMPOSE=('DYT_'+PS[i].nom)),);

DYT=DYNA_LINE_TRAN(MODELE=MO,CHAM_MATER=CHMAT,
                   MATR_MASS=MATASSM,MATR_RIGI=MATASSR,
                   SENSIBILITE=tuple(PS),
                   EXCIT=(_F(FONC_MULT=FC,CHARGE=CH),), 
                   INCREMENT=_F(LIST_INST=L_INST,),
                   NEWMARK=_F(),)                              
#                   WILSON=_F(),)                              

DYT = CALC_ELEM(
                 reuse = DYT,
                 MODELE = MO,
                 RESULTAT = DYT,
                 CHAM_MATER = CHMAT,
                 EXCIT=(_F(FONC_MULT=FC,CHARGE=CH),),
                 OPTION = 'SIGM_ELNO_DEPL',
                 );

DYT = CALC_ELEM(
                 reuse = DYT,
                 MODELE = MO,
                 RESULTAT = DYT,
                 CHAM_MATER = CHMAT,
                 EXCIT=(_F(FONC_MULT=FC,CHARGE=CH),),
                 SENSIBILITE=tuple(PS),
                 OPTION = 'SIGM_ELNO_DEPL',
                 );

T_REF=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                              GROUP_NO=('OPPOSE'),
                              RESULTAT=DYT,
                              NOM_CHAM='DEPL',
                              NUME_ORDRE=10,
                              NOM_CMP='DY',
                              OPERATION='EXTRACTION',
                              FORMAT_C='REEL',
                              ),);

T_REFC=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                                GROUP_NO=('OPPOSE'),
                                NOM_CHAM='SIGM_ELNO_DEPL',
                                RESULTAT=DYT,
                                MAILLE ='M14',
                                NOM_CMP = 'SIXX',
                                OPERATION='EXTRACTION',
                                FORMAT_C='REEL',
                                NUME_ORDRE=10,
                                ),);

#IMPR_RESU(RESU=_F(FORMAT='RESULTAT',
#                  RESULTAT=DYT,),);
#
#IMPR_RESU(RESU=_F(FORMAT='RESULTAT',
#                  RESULTAT=DYT,
#                  SENSIBILITE=tuple(PS),),);
#
# 5. Test par differences finies
#
epsilon=1.E-3
for i in range(n):
  eps=[1.]*n
  eps[i]=1.0+epsilon
  MAT2=DEFI_MATERIAU(ELAS=_F(E=sensible[0]*eps[0],
                             RHO=2400.,
                             NU=sensible[1]*eps[1],
                             ))

  CH2=AFFE_CHAR_MECA(MODELE=MO,
                     FORCE_NODALE=(_F(GROUP_NO='OPPOSE',
                                      FX=sensible[2]*eps[2],
                                      FY=sensible[3]*eps[3]))
                                      );

  CHMAT2=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       AFFE=_F(TOUT='OUI',MATER=MAT2,),);

  MATELER2=CALC_MATR_ELEM(MODELE=MO,OPTION='RIGI_MECA',
                          CHAM_MATER=CHMAT2,    
                          CHARGE=CLIM)

  MATASSR2=ASSE_MATRICE(MATR_ELEM=MATELER2,NUME_DDL=NUM)

  DYT2=DYNA_LINE_TRAN(MODELE=MO,CHAM_MATER=CHMAT2,
                      MATR_MASS=MATASSM,MATR_RIGI=MATASSR2,
                      INCREMENT=_F(LIST_INST=L_INST,),
                      EXCIT=(_F(FONC_MULT=FC,CHARGE=CH2),),
                      NEWMARK=_F(),)

  T_DIF=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                                GROUP_NO=('OPPOSE'),
                                RESULTAT=DYT2,
                                NOM_CHAM='DEPL',
                                NUME_ORDRE=10,
                                NOM_CMP='DY',
                                OPERATION='EXTRACTION',
                                FORMAT_C='REEL',
                                ),);

  diff=(T_DIF['DY',1]-T_REF['DY',1])/(sensible[i]*epsilon)

  TEST_RESU(RESU=(
                  _F(RESULTAT=DYT,NUME_ORDRE=10,
                     NOM_CHAM='DEPL',GROUP_NO='OPPOSE',
                     CRITERE='RELATIF',PRECISION=1.E-3,
                     NOM_CMP='DY',SENSIBILITE=PS[i],
                     VALE=diff,
                     REFERENCE='AUTRE_ASTER')))

  DYT2 = CALC_ELEM(
                 reuse = DYT2,
                 MODELE = MO,
                 RESULTAT = DYT2,
                 CHAM_MATER = CHMAT2,
                 EXCIT=(_F(FONC_MULT=FC,CHARGE=CH2),),
                 OPTION = 'SIGM_ELNO_DEPL',
                 );

  T_DIFC=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                                GROUP_NO=('OPPOSE'),
                                RESULTAT=DYT2,
                                NOM_CHAM='SIGM_ELNO_DEPL',
                                NUME_ORDRE=10,
                                MAILLE ='M14',
                                NOM_CMP = 'SIXX',
                                OPERATION='EXTRACTION',
                                FORMAT_C='REEL',
                                ),);

  diffc=(T_DIFC['SIXX',1]-T_REFC['SIXX',1])/(sensible[i]*epsilon)

  TEST_RESU(RESU=(
                  _F(RESULTAT=DYT,NUME_ORDRE=10,
                     NOM_CHAM='SIGM_ELNO_DEPL',GROUP_NO='OPPOSE',
                     CRITERE='RELATIF',PRECISION=1.E-3,
                     MAILLE ='M14',
                     NOM_CMP='SIXX',SENSIBILITE=PS[i],
                     VALE=diffc,
                     REFERENCE='AUTRE_ASTER')))


  DETRUIRE(CONCEPT=_F(NOM=MAT2))
  DETRUIRE(CONCEPT=_F(NOM=CH2))
  DETRUIRE(CONCEPT=_F(NOM=CHMAT2))
  DETRUIRE(CONCEPT=_F(NOM=MATELER2))
  DETRUIRE(CONCEPT=_F(NOM=MATASSR2))
  DETRUIRE(CONCEPT=_F(NOM=DYT2))    
  DETRUIRE(CONCEPT=_F(NOM=T_DIF))
  DETRUIRE(CONCEPT=_F(NOM=T_DIFC))

#
# 6. Test_Resu en dur
#
DYTFX=DYNA_LINE_TRAN(MODELE=MO,CHAM_MATER=CHMAT,
                    MATR_MASS=MATASSM, MATR_RIGI=MATASSR,
                    INCREMENT=_F(LIST_INST=L_INST,),
                    EXCIT=( _F(FONC_MULT=FC,CHARGE=CHS_2),),
                    NEWMARK=_F(),)

DYTFX = CALC_ELEM(
                 reuse = DYTFX,
                 MODELE = MO,
                 RESULTAT = DYTFX,
                 CHAM_MATER = CHMAT,
                 EXCIT=( _F(FONC_MULT=FC,CHARGE=CHS_2),),
                 OPTION = 'SIGM_ELNO_DEPL',
                 );

DYTFY=DYNA_LINE_TRAN(MODELE=MO,CHAM_MATER=CHMAT,
                    MATR_MASS=MATASSM, MATR_RIGI=MATASSR,
                    INCREMENT=_F(LIST_INST=L_INST,),
                    EXCIT=( _F(FONC_MULT=FC,CHARGE=CHS_3),),
                    NEWMARK=_F(),)

DYTFY = CALC_ELEM(
                 reuse = DYTFY,
                 MODELE = MO,
                 RESULTAT = DYTFY,
                 CHAM_MATER = CHMAT,
                 EXCIT=( _F(FONC_MULT=FC,CHARGE=CHS_3),),
                 OPTION = 'SIGM_ELNO_DEPL',
                 );

OPPSXX = RECU_FONCTION(RESULTAT=DYTFX,
                     NOM_CHAM='SIGM_ELNO_DEPL',
                     MAILLE ='M14',
                     NOM_CMP = 'SIXX',
                     GROUP_NO='OPPOSE',
                     INTERPOL='LIN',);

OPPSYY = RECU_FONCTION(RESULTAT=DYTFY,
                     NOM_CHAM='SIGM_ELNO_DEPL',
                     MAILLE ='M14',
                     NOM_CMP = 'SIYY',
                     GROUP_NO='OPPOSE',
                     INTERPOL='LIN',);


#IMPR_COURBE(FICHIER='RESULTAT',
#            FORMAT='AGRAF',
#            COURBE=(
#                    _F(FONCTION=OPPSXX,),
#                    _F(FONCTION=OPPSYY,),
#                    ),);

TEST_RESU(RESU=(
                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='DEPL',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DX',   
                   VALE=(3.70E-10),REFERENCE='NON_REGRESSION',VERSION='7.1.3'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='VITE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DY',SENSIBILITE=PS_0,        
                   VALE=(-6.11E-17),REFERENCE='NON_REGRESSION',VERSION='7.1.3'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='ACCE',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DX',SENSIBILITE=PS_1,        
                   VALE=(3.35E-02),REFERENCE='NON_REGRESSION',VERSION='7.1.3'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='DEPL',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DX',SENSIBILITE=PS_2,        
                   VALE=(3.85E-11),REFERENCE='NON_REGRESSION',VERSION='7.1.3'),

                _F(RESULTAT=DYT,NUME_ORDRE=10,
                   NOM_CHAM='DEPL',GROUP_NO='OPPOSE',
                   CRITERE='RELATIF',PRECISION=5.E-3,
                   NOM_CMP='DY',SENSIBILITE=PS_3,        
                   VALE=(3.43E-11),REFERENCE='NON_REGRESSION',VERSION='7.1.3'),

                _F(RESULTAT = DYT,   NUME_ORDRE = 10,
                    SENSIBILITE=(PS_2),
                    NOM_CHAM = 'SIGM_ELNO_DEPL',   GROUP_NO = 'OPPOSE',
                    CRITERE = 'RELATIF', PRECISION = 5.E-3,MAILLE ='M14',
                    NOM_CMP = 'SIXX',    VALE = 3.29,
                    REFERENCE = 'NON_REGRESSION',VERSION='7.1.13'),

                _F(RESULTAT = DYT,   NUME_ORDRE = 10,
                    SENSIBILITE=(PS_3),
                    NOM_CHAM = 'SIGM_ELNO_DEPL',   GROUP_NO = 'OPPOSE',
                    CRITERE = 'RELATIF', PRECISION = 5.E-3,MAILLE ='M14',
                    NOM_CMP = 'SIYY',    VALE = 3.46,
                    REFERENCE = 'NON_REGRESSION',VERSION='7.1.13'),

                ),);

FIN()

