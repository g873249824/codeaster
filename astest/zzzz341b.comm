# TITRE VALIDATION DE LA PRESSION SUIVEUSE FONCTION DE L'ESPACE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(NOM='ZZZZ341B',NIV_PUB_WEB='INTERNET',VISU_EFICAS='OUI',),);

MAIL=LIRE_MAILLAGE();

MAIL=MODI_MAILLAGE(reuse =MAIL,
                   MAILLAGE=MAIL,
                   ORIE_PEAU_3D=_F(GROUP_MA='HAUT',),);

MA=DEFI_MATERIAU(ELAS=_F(E=210000000000.0,
                         NU=0.0,),);

MATE=AFFE_MATERIAU(MAILLAGE=MAIL,
                   AFFE=_F(TOUT='OUI',
                           MATER=MA,),);

MODE=AFFE_MODELE(MAILLAGE=MAIL,
                 AFFE=_F(
                         GROUP_MA=('VOL','HAUT',),
                         PHENOMENE='MECANIQUE',
                         MODELISATION='3D',),);

CLFIX=AFFE_CHAR_MECA(MODELE=MODE,
                     DDL_IMPO=_F(GROUP_MA='FIXE',
                                 DX=0.0,
                                 DY=0.0,
                                 DZ=0.0,),);

CLROT=AFFE_CHAR_MECA(MODELE=MODE,
                     DDL_IMPO=_F(GROUP_MA='BASCULE',
                                 DX=1.0,
                                 DY=0.0                  ,
                                 DZ=1.0,),);

pres=1.0E+10

# FONCTION NON CONSTANTE POUR TESTER UNE PRESSION FONCTION DE L'ESPACE
vpres=DEFI_FONCTION(NOM_PARA='X',
                    VALE=(
                         -0.1                       , 0.0 ,
                          0.0                       , pres,
                          1.0                       , pres,
                          1.1                       , 0,
                          1.2                       , pres,
                          2.1                       , pres,
                          2.2                       , 0.0 ,
                          ),
                    PROL_GAUCHE='EXCLU',
                    PROL_DROITE='CONSTANT',
                    );

PRES=AFFE_CHAR_MECA_F(MODELE=MODE,
                    PRES_REP=_F(GROUP_MA='HAUT',
                                PRES=vpres,),);

TPS=DEFI_LIST_REEL(DEBUT=0,
                   INTERVALLE=_F(JUSQU_A=3,
                                 NOMBRE=3,),);

FROT=DEFI_FONCTION(
                   NOM_PARA='INST',
                   VALE=(0,0,
                         1,0,
                         2,1,
                         3,1,
                         ),);

FPRE=DEFI_FONCTION(
                   NOM_PARA='INST',
                   VALE=(0,0,
                         1,1,
                         2,0,
                         3,1,
                         ),);

# RESI_GLOB_MAXI POUR INSTANT 2 (FORCES EXTERNES NULLES)
RESU=STAT_NON_LINE(MODELE=MODE,
                   CHAM_MATER=MATE,
                   EXCIT=(_F(CHARGE=CLFIX,),
                          _F(CHARGE=CLROT,
                             FONC_MULT=FROT,),
                          _F(CHARGE=PRES,
                             TYPE_CHARGE='SUIV',
                             FONC_MULT=FPRE,
                             ),),
                   COMP_ELAS=_F(RELATION='ELAS',
                                DEFORMATION='GROT_GDEP',
                                ),
                   NEWTON=_F(REAC_ITER=1,),
                   CONVERGENCE=_F(RESI_GLOB_MAXI=1.0E-4,
                                  ITER_GLOB_MAXI=20,),
                   INCREMENT=_F(LIST_INST=TPS,),);

RESU=CALC_CHAMP(reuse =RESU,
                RESULTAT=RESU,
                FORCE=('REAC_NODA',),);

RESRN=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                              INTITULE='RESRN',
                              RESULTAT=RESU,
                              NOM_CHAM='REAC_NODA',
                              GROUP_NO='VOL',
                              RESULTANTE=('DX','DY','DZ',),
                              ),);

IMPR_TABLE(TABLE=RESRN,);

# TEST EN CONFIGURATION DROITE, PRESSION SUIVANT DX
TEST_TABLE(TABLE=RESRN,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=1.0,),
           NOM_PARA='DX',
           VALE_REFE=0.0,
           REFERENCE='ANALYTIQUE',
           VALE_CALC=1.3877787807814E-07,
           CRITERE='ABSOLU',
           )
# TEST EN CONFIGURATION DROITE, PRESSION SUIVANT DZ
TEST_TABLE(TABLE=RESRN,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=1.0,),
           NOM_PARA='DZ',
           VALE_REFE=1.0E+10,
           REFERENCE='ANALYTIQUE',
           VALE_CALC=1.0E+10,
           )

# TEST EN CONFIGURATION TOURNEE, PRESSION SUIVANT DX
TEST_TABLE(TABLE=RESRN,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=3.0,),
           NOM_PARA='DX',
           VALE_REFE=pres,
           REFERENCE='ANALYTIQUE',
           VALE_CALC=pres,
           )
# TEST EN CONFIGURATION TOURNEE, PRESSION SUIVANT DZ
TEST_TABLE(TABLE=RESRN,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=3.0,),
           NOM_PARA='DZ',
           VALE_REFE=0.0,
           REFERENCE='ANALYTIQUE',
           VALE_CALC=-2.7755575615629E-07,
           TOLE_MACHINE=1.0E-5,
           CRITERE='ABSOLU',
           )

IMPR_RESU(FORMAT='MED',
          RESU=_F(RESULTAT=RESU,),);

FIN();
