# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2019 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#
# person_in_charge: mathieu.courtois at edf.fr
# .comm : en PAR_LOT='OUI'
# .com1 : en PAR_LOT='NON'
# .com2 : THER_LINEAIRE en PAR_LOT='NON'
# .com3 : THER_LINEAIRE en PAR_LOT='OUI'

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
      PAR_LOT='NON', IGNORE_ALARM='SUPERVIS_1',
      IMPR_MACRO='OUI',)

def ma_macro_ops(self, TABLE, **kwargs):
    """Corps de la macro de test."""
    CREA_TABLE = self.get_cmd('CREA_TABLE')
    self.set_icmd(1)
    # on crée une table que l'on retourne soit sous le mot-clé TABLE,
    # soit en concept principal.
    self.DeclareOut('tabout', TABLE or self.sd)
    tabout = CREA_TABLE(LISTE=_F(PARA='NUME',
                                 LISTE_I=list(range(5)),),)
    return 0

def ma_macro_prod(self, TABLE, **kwargs):
    """Déclaration des concepts de sortie"""
    if kwargs.get('__all__'):
        return ([None, table_sdaster], [None, table_sdaster])

    if TABLE:
        self.type_sdprod(TABLE, table_sdaster)
        return None
    return table_sdaster

MA_MACRO = MACRO(nom="MA_MACRO",
                 op=ma_macro_ops,
                 sd_prod=ma_macro_prod,
                 TABLE = SIMP(statut='f', typ=CO,),)

MA_MACRO(TABLE=CO('tabd'))
tabg = MA_MACRO()

IMPR_TABLE(TABLE=tabd,
           UNITE=6)

DETRUIRE(CONCEPT=_F(NOM=tabd),)

IMPR_TABLE(TABLE=tabg,
           UNITE=6)

DETRUIRE(CONCEPT=_F(NOM=tabg),)

FIN()
