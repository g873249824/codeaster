# MODIF  DATE 17/04/2012   AUTEUR DELMAS J.DELMAS 
#
# TITRE FATIGUE, AMPLITUDE VARIABLE, TEST  DES GRANDEURS EN CONTRAINTE
# sslv135p.para = tps_job 360 mem_job 600Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# tps_job 360 mem_job 600Mo ncpus 1 liste_test R
#
#----------------------------------------------------------------------
#    Cas test sslv135p : cube 3D
#                        Essai de chargement cyclique bi-axial
#                        criteres en formule
#----------------------------------------------------------------------
#        Unites : Newton , Millimetre , Seconde (N,MM,S,->Mpa)
#----------------------------------------------------------------------
#
#               y       a
#               I<------------->                     a = 10 mm
#                     Face1 (dessus)               S = 100 mm2
#               P1              P2
#               o--------------o
#              /I             /I
#        P5   / I        P6  / I
#            o--+-----------o  I
#            I  I   Face5   I  I  Face4
#  Face3     I  I (derri.)  I  I (cote d.)
# (cote g.)  I  I           I  I
#            I  I  P3       I  I P4
#            I  o-----------I--o      - x
#            I /            I /
#         P7 I/          P8 I/
#            o--------------o
#
#          /       Face2
#         z      (dessous)
#
#
#    CHARGEMENT     FX(T) <=> +      FY(T) <=> x
#
#            I
# 12.0E+4 N  I     +           
#            I
#            I  +     +            
#            I               *      
#           -I-----I-----I-----I--+--I-----> T
#            I  * 1s  *  2s       
# -2.0E+4 N  I     *       +   +
# -9.0E+4 N  I               +
#            I     
#            I
#
#
# A L'INSTANT 0S, FX(T) = 0.0 N  ET  FY(T) = 0.0 N
# A L'INSTANT 1S, FX(T) = 12.0E+4 N  ET  FY(T) = -2.0E+4 N
# A L'INSTANT 2S, FX(T) = 0.0 N  ET  FY(T) = 0.0 N
# A L'INSTANT 2.75S, FX(T) = -9.0E+4 N  ET  FY(T) = 1.5E+4 N
# A L'INSTANT 3.5S, FX(T) = 0.0 N  ET  FY(T) = 0.0 N
#

DEBUT(CODE=_F(NOM='sslv135p',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),
               IGNORE_ALARM=('PREPOST4_27'))
               
CUBE = LIRE_MAILLAGE(FORMAT='MED', )

CUBE=DEFI_GROUP(reuse = CUBE,
                ALARME='OUI',
                CREA_GROUP_NO=(_F(GROUP_MA='FACE1',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE2',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE3',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE4',
                                CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE5',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE6',
                                  CRIT_NOEUD='TOUS')),
                MAILLAGE=CUBE,
               );

CUBE=DEFI_GROUP(reuse = CUBE,
                ALARME='OUI',
                CREA_GROUP_MA=(_F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE1',
                                  NOM='FACE1_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE2',
                                  NOM='FACE2_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE3',
                                  NOM='FACE3_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE4',
                                  NOM='FACE4_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE5',
                                  NOM='FACE5_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE6',
                                  NOM='FACE6_3D')),
                MAILLAGE=CUBE,
               );

WHOL=DEFI_FONCTION(       NOM_PARA='SIGM',
                            INTERPOL='LOG',
                          PROL_DROITE='LINEAIRE',
                         PROL_GAUCHE='LINEAIRE',
                         VALE=(  138.,    1000000.,
                                 152.,     500000.,
                                 165.,     200000.,
                                 180.,     100000.,
                                 200.,      50000.,
                                 250.,      20000.,
                                 295.,      12000.,
                                 305.,      10000.,
                                 340.,       5000.,
                                 430.,       2000.,
                                 540.,       1000.,
                                 690.,        500.,
                                 930.,        200.,
                                1210.,        100.,
                                1590.,         50.,
                                2210.,         20.,
                                2900.,         10.,  )  )
#               _____________________________
#              I                             I
#              I     AMPLITUDE CONSTANTE     I
#              I_____________________________I
#

COEF   = DEFI_FONCTION ( NOM_PARA    ='INST',
                          PROL_DROITE  ='LINEAIRE',
                          PROL_GAUCHE ='LINEAIRE',
                          VALE        =( 0.,    0.,
                                         1.,  100.,
                                         2.,    0.,
                                         2.75, 75.,
                                         3.5,   0.,
                                        )
                       )

ACIER   = DEFI_MATERIAU   ( ELAS           =_F( E         = 200000.,
                                                NU        = .3,
                                                ALPHA     = 0. ),
                            ECRO_LINE=_F( SY=  900, D_SIGM_EPSI = 50000),
                            FATIGUE        =_F( WOHLER    = WHOL, ),
                          )


LINST = DEFI_LIST_REEL   ( DEBUT      =  0.,
                           INTERVALLE =_F (JUSQU_A= 3.5, NOMBRE = 28  )
                                         );

TROISD   = AFFE_MODELE    ( MAILLAGE   =    CUBE,
                            AFFE       =_F ( PHENOMENE    = 'MECANIQUE',
                                             MODELISATION = '3D',
                                             TOUT         = 'OUI'    ))

MAT   = AFFE_MATERIAU    ( MAILLAGE    =   CUBE,
                           AFFE        =_F ( TOUT       = 'OUI',
                                             MATER      = ACIER,
                                             ))

WHOL_F =   FORMULE(
           NOM_PARA=('NBRUP'),
           VALE=''' 4098.3*(NBRUP**(-0.2693)) '''
           )

# CHARGEMENT SELON LES 2 AXES X ET Y
# ----------------------------------
TR_CS  = AFFE_CHAR_MECA (
           MODELE       =  TROISD,
           FACE_IMPO    =(_F( GROUP_MA= 'FACE3' ,DX=0.),
                          _F( GROUP_MA= 'FACE2' ,DY=0.) ),
           DDL_IMPO     =(_F( GROUP_NO= 'P3' , DZ=0.) ),
           FORCE_FACE   =(_F( GROUP_MA= 'FACE4', FX=12),
                          _F( GROUP_MA= 'FACE1', FY=-8.)
                          )
                         );

# CALCUL AVEC STAT_NON_LINE
# -------------------------
SOL_NL = STAT_NON_LINE ( TITRE      =
                'TEST TRACTION-COMPRESSION ALTERNEE - PLAN CRITIQUE',
                        MODELE     =   TROISD,
                        CHAM_MATER =   MAT,
                        EXCIT      =_F ( CHARGE       = TR_CS,
                                         FONC_MULT    = COEF,
                                         TYPE_CHARGE  = 'FIXE_CSTE'),
                        COMP_INCR  =_F ( RELATION     = 'VMIS_CINE_LINE',
                                        DEFORMATION  = 'PETIT',
                                        TOUT         = 'OUI'    ),
                       INCREMENT  =_F ( LIST_INST    = LINST, ),
                       NEWTON     =_F(  MATRICE = 'TANGENTE',
                                        REAC_ITER = 1),
                       CONVERGENCE=_F(  RESI_REFE_RELA=1.,
                                        SIGM_REFE     =4.8E-3,
                                        ITER_GLOB_MAXI = 50),
                       SOLVEUR=_F(METHODE = 'MULT_FRONT'),
                                                         )
SOL_NL = CALC_ELEM( reuse    = SOL_NL,
                    RESULTAT = SOL_NL,
                    OPTION   = ('EPSI_ELGA',
                                'SIGM_ELNO',
                                'EPSI_ELNO',
                                'EPSP_ELGA',
                                'EPSP_ELNO')
                  )
                
SOL_NL = CALC_CHAMP( reuse    = SOL_NL,
                     RESULTAT = SOL_NL,
                     GROUP_MA = ('FACE1_3D', 'FACE2_3D', 'FACE3_3D', 'CUBE'),
                     CONTRAINTE='SIGM_NOEU',DEFORMATION=('EPSI_NOEU','EPSP_NOEU'),
                   )
                   
TABSIGM1=POST_RELEVE_T(ACTION=_F(INTITULE='SIGMA_XX',
                                NOEUD = 'N1',
                                RESULTAT=SOL_NL,
                                TOUT_ORDRE='OUI',
                                TOUT_CMP='OUI',
                                NOM_CHAM = 'SIGM_NOEU',
                                OPERATION='EXTRACTION',),);
IMPR_TABLE(TABLE=TABSIGM1);

TABEPS1=POST_RELEVE_T(ACTION=_F(INTITULE='EPS_XX',
                                NOEUD = 'N1',
                                RESULTAT=SOL_NL,
                                TOUT_ORDRE='OUI',
                                TOUT_CMP='OUI',
                                NOM_CHAM='EPSI_NOEU' ,
                                OPERATION='EXTRACTION',),);
IMPR_TABLE(TABLE=TABEPS1);

TABEPSP1=POST_RELEVE_T(ACTION=_F(INTITULE='EPSP_XX',
                                NOEUD = 'N1',
                                RESULTAT=SOL_NL,
                                TOUT_ORDRE='OUI',
                                TOUT_CMP='OUI',
                                NOM_CHAM='EPSP_NOEU' ,
                                OPERATION='EXTRACTION',),);
IMPR_TABLE(TABLE=TABEPSP1);

CRIT1 =   FORMULE(
           NOM_PARA=('SIPR1_1','SIPR1_2'),
           VALE= '''abs((SIPR1_1-SIPR1_2)/2)'''
           )

CRIT2 =   FORMULE(
           NOM_PARA=('SITN1_1','SITN1_2'),
           VALE= '''abs((SITN1_1-SITN1_2)/2)'''
           )

CRIT3 =   FORMULE(
           NOM_PARA=('SIPN1_1','SIPN1_2'),
           VALE= '''(SIPN1_1-SIPN1_2)/2'''
           )

CRIT4 =   FORMULE(
           NOM_PARA=('SIGEQ_1','SIGEQ_2'),
           VALE= '''(SIGEQ_1-SIGEQ_2)/2'''
           )

# TEST DU CRTIERE 1 AVEC 'DOMA_NOEUD' 
#          avec la FORMULE DE BASQUIN
#########################################NOEUD
FATNWF1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT1,
                           COURBE_GRD_VIE  = 'FORM_VIE',
                           FORMULE_VIE = WHOL_F,
                           PROJECTION    = 'UN_AXE'
                         )

TEST_RESU(CHAM_NO=(  _F( CHAM_GD = FATNWF1,
                            NOM_CMP = 'ENDO1',
                            NOEUD = 'N1',
                            REFERENCE = 'ANALYTIQUE',
                            PRECISION = 1.0E-5,
                            VALE = 1.0707149E-3 ),
                       )
              )

# TEST DU CRTIERE 1 AVEC 'DOMA_ELGA' 
#          avec la FORMULE DE BASQUIN
#########################################NOEUD
FATMWF1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                         OPTION        = 'DOMA_ELGA',
                         TYPE_CHARGE   = 'NON_PERIODIQUE',
                         MAILLAGE      = CUBE,
                         GROUP_MA      = ('CUBE'),
                         RESULTAT      = SOL_NL,
                         CHAM_MATER    = MAT,
                         CRITERE       = 'FORMULE_CRITERE',
                         FORMULE_GRDEQ   = CRIT1,
                         COURBE_GRD_VIE  = 'FORM_VIE',
                         FORMULE_VIE = WHOL_F,
                         PROJECTION    = 'UN_AXE'
                       )

TEST_RESU(CHAM_ELEM=( _F(CHAM_GD = FATMWF1,
                             NOM_CMP = 'ENDO1',
                             MAILLE = 'M60',
                             POINT = 3,
                             REFERENCE = 'ANALYTIQUE',
                             PRECISION = 1.0E-5,
                             VALE = 1.0707149E-3 ),
                          )
              )

# TEST DU CRTIERE 1 AVEC 'DOMA_NOEUD' 
#      par INTERPOLATION de la COURBE DE WOHLER
#########################################NOEUD
FATNW1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT1,
                           COURBE_GRD_VIE  = 'WOHLER',
                           PROJECTION    = 'UN_AXE'
                         )

TEST_RESU(CHAM_NO=(  _F( CHAM_GD = FATNW1,
                            NOM_CMP = 'ENDO1',
                            NOEUD = 'N1',
                            REFERENCE = 'ANALYTIQUE',
                            PRECISION = 2.0E-5,
                            VALE = 1.9212572E-3  ),
                       )
              )

# TEST DU CRTIERE 1 AVEC 'DOMA_ELGA'  
#      par INTERPOLATION de la COURBE DE WOHLER
#########################################NOEUD
FATMW1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                         OPTION        = 'DOMA_ELGA',
                         TYPE_CHARGE   = 'NON_PERIODIQUE',
                         MAILLAGE      = CUBE,
                         GROUP_MA      = ('CUBE'),
                         RESULTAT      = SOL_NL,
                         CHAM_MATER    = MAT,
                         CRITERE       = 'FORMULE_CRITERE',
                         FORMULE_GRDEQ   = CRIT1,
                         COURBE_GRD_VIE  = 'WOHLER',
                         PROJECTION    = 'UN_AXE'
                       )

TEST_RESU(CHAM_ELEM=( _F(CHAM_GD = FATMW1,
                             NOM_CMP = 'ENDO1',
                             MAILLE = 'M60',
                             POINT = 3,
                             REFERENCE = 'ANALYTIQUE',
                             PRECISION = 1.0E-5,
                             VALE = 1.9212572E-3  ),
                          )
              )

# TEST DU CRTIERE 2 AVEC 'DOMA_NOEUD'
#          avec la FORMULE DE BASQUIN
#########################################NOEUD
FATNWF2=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT2,
                           COURBE_GRD_VIE  = 'FORM_VIE',
                           FORMULE_VIE = WHOL_F,
                           PROJECTION    = 'UN_AXE'
                         )

TEST_RESU(CHAM_NO=(  _F( CHAM_GD = FATNWF2,
                            NOM_CMP = 'ENDO1',
                            NOEUD = 'N1',
                            REFERENCE = 'ANALYTIQUE',
                            PRECISION = 1.0E-5,
                            VALE = 1.0707149E-3 ),
                       )
              )

# TEST DU CRTIERE 2 AVEC 'DOMA_ELGA' 
#          avec la FORMULE DE BASQUIN
#########################################NOEUD
FATMWF2=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                         OPTION        = 'DOMA_ELGA',
                         TYPE_CHARGE   = 'NON_PERIODIQUE',
                         MAILLAGE      = CUBE,
                         GROUP_MA      = ('CUBE'),
                         RESULTAT      = SOL_NL,
                         CHAM_MATER    = MAT,
                         CRITERE       = 'FORMULE_CRITERE',
                         FORMULE_GRDEQ   = CRIT2,
                         COURBE_GRD_VIE  = 'FORM_VIE',
                         FORMULE_VIE = WHOL_F,
                         PROJECTION    = 'UN_AXE'
                       )

TEST_RESU(CHAM_ELEM=( _F(CHAM_GD = FATMWF2,
                             NOM_CMP = 'ENDO1',
                             MAILLE = 'M60',
                             POINT = 3,
                             REFERENCE = 'ANALYTIQUE',
                             PRECISION = 1.0E-5,
                             VALE = 1.0707149E-3 ),
                          )
              )

# TEST DU CRTIERE 2 AVEC 'DOMA_NOEUD'
#      par INTERPOLATION de la COURBE DE WOHLER
#########################################NOEUD
FATNW2=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT2,
                           COURBE_GRD_VIE  = 'WOHLER',
                           PROJECTION    = 'UN_AXE'
                         )

TEST_RESU(CHAM_NO=(  _F( CHAM_GD = FATNW2,
                            NOM_CMP = 'ENDO1',
                            NOEUD = 'N1',
                            REFERENCE = 'ANALYTIQUE',
                            PRECISION = 2.0E-5,
                            VALE = 1.9212572E-3 ),
                       )
              )

# TEST DU CRTIERE 2 AVEC 'DOMA_ELGA' 
#      par INTERPOLATION de la COURBE DE WOHLER
#########################################NOEUD
FATMW2=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                         OPTION        = 'DOMA_ELGA',
                         TYPE_CHARGE   = 'NON_PERIODIQUE',
                         MAILLAGE      = CUBE,
                         GROUP_MA      = ('CUBE'),
                         RESULTAT      = SOL_NL,
                         CHAM_MATER    = MAT,
                         CRITERE       = 'FORMULE_CRITERE',
                         FORMULE_GRDEQ   = CRIT2,
                         COURBE_GRD_VIE  = 'WOHLER',
                         PROJECTION    = 'UN_AXE'
                       )

TEST_RESU(CHAM_ELEM=( _F(CHAM_GD = FATMW2,
                             NOM_CMP = 'ENDO1',
                             MAILLE = 'M60',
                             POINT = 3,
                             REFERENCE = 'ANALYTIQUE',
                             PRECISION = 1.0E-5,
                             VALE = 1.9212572E-3 ),
                          )
              )

# TEST DU CRTIERE 3 AVEC 'DOMA_NOEUD' 
#          avec la FORMULE DE BASQUIN
#########################################NOEUD
FATN_WF3=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT3,
                           COURBE_GRD_VIE  = 'FORM_VIE',
                           FORMULE_VIE = WHOL_F,
                           PROJECTION    = 'UN_AXE'
                         )

TEST_RESU(CHAM_NO=(  _F( CHAM_GD = FATN_WF3,
                            NOM_CMP = 'ENDO1',
                            NOEUD = 'N1',
                            REFERENCE = 'ANALYTIQUE',
                            PRECISION = 1.0E-5,
                            VALE = 1.0707149E-3 ),
                       )
              )

# TEST DU CRTIERE 3 AVEC 'DOMA_NOEUD' 
#      par INTERPOLATION de la COURBE DE WOHLER
#########################################NOEUD
FATN_W3=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT3,
                           COURBE_GRD_VIE  = 'WOHLER',
                           PROJECTION    = 'UN_AXE'
                         )

TEST_RESU(CHAM_NO=(  _F( CHAM_GD = FATN_W3,
                            NOM_CMP = 'ENDO1',
                            NOEUD = 'N1',
                            REFERENCE = 'ANALYTIQUE',
                            PRECISION = 2.0E-5,
                            VALE = 1.9212572E-3 ),
                       )
              )

# TEST DU CRTIERE 4 'DOMA_NOEUD' 
#          avec la FORMULE DE BASQUIN
#########################################NOEUD
FATNWF4=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT4,
                           COURBE_GRD_VIE  = 'FORM_VIE',
                           FORMULE_VIE = WHOL_F,
                           PROJECTION    = 'UN_AXE'
                         )

TEST_RESU(CHAM_NO=(  _F( CHAM_GD = FATNWF4,
                            NOM_CMP = 'ENDO1',
                            NOEUD = 'N1',
                            REFERENCE = 'ANALYTIQUE',
                            PRECISION = 1.0E-5,
                            VALE = 4.287285E-3 ),
                       )
              )

# TEST DU CRTIERE 4 AVEC 'DOMA_ELGA' 
#          avec la FORMULE DE BASQUIN
#########################################NOEUD
FATMWF4=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                         OPTION        = 'DOMA_ELGA',
                         TYPE_CHARGE   = 'NON_PERIODIQUE',
                         MAILLAGE      = CUBE,
                         GROUP_MA      = ('CUBE'),
                         RESULTAT      = SOL_NL,
                         CHAM_MATER    = MAT,
                         CRITERE       = 'FORMULE_CRITERE',
                         FORMULE_GRDEQ   = CRIT4,
                         COURBE_GRD_VIE  = 'FORM_VIE',
                         FORMULE_VIE = WHOL_F,
                         PROJECTION    = 'UN_AXE'
                       )

TEST_RESU(CHAM_ELEM=( _F(CHAM_GD = FATMWF4,
                             NOM_CMP = 'ENDO1',
                             MAILLE = 'M60',
                             POINT = 3,
                             REFERENCE = 'ANALYTIQUE',
                             PRECISION = 1.0E-5,
                             VALE = 4.287285E-3 ),
                          )
              )

# TEST DU CRTIERE 4 'DOMA_NOEUD'
#      par INTERPOLATION de la COURBE DE WOHLER
#########################################NOEUD
FATNW4=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT4,
                           COURBE_GRD_VIE  = 'WOHLER',
                           PROJECTION    = 'UN_AXE'
                         )

TEST_RESU(CHAM_NO=(  _F( CHAM_GD = FATNW4,
                            NOM_CMP = 'ENDO1',
                            NOEUD = 'N1',
                            REFERENCE = 'ANALYTIQUE',
                            PRECISION = 2.0E-5,
                            VALE = 5.8175699E-3 ),
                       )
              )

# TEST DU CRTIERE 4 'DOMA_ELGA' 
#      par INTERPOLATION de la COURBE DE WOHLER
#########################################NOEUD
FATMW4=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                         OPTION        = 'DOMA_ELGA',
                         TYPE_CHARGE   = 'NON_PERIODIQUE',
                         MAILLAGE      = CUBE,
                         GROUP_MA      = ('CUBE'),
                         RESULTAT      = SOL_NL,
                         CHAM_MATER    = MAT,
                         CRITERE       = 'FORMULE_CRITERE',
                         FORMULE_GRDEQ   = CRIT4,
                         COURBE_GRD_VIE  = 'WOHLER',
                         PROJECTION    = 'UN_AXE'
                       )

TEST_RESU(CHAM_ELEM=( _F(CHAM_GD = FATMW4,
                             NOM_CMP = 'ENDO1',
                             MAILLE = 'M60',
                             POINT = 3,
                             REFERENCE = 'ANALYTIQUE',
                             PRECISION = 1.0E-5,
                             VALE = 5.8175699E-3 ),
                          )
              )
FIN( )
