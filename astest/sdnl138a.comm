# TITRE Modes propres de vibration d'un cadre auto-contraint
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
      DEBUG=_F( SDVERI     = 'OUI',),
)

# lecture du maillage
mail=LIRE_MAILLAGE(FORMAT='MED',);
#IMPR_RESU(UNITE=21,FORMAT='ASTER',RESU=_F(MAILLAGE=mail))

affect=AFFE_MODELE(
    MAILLAGE=mail,
    AFFE=(
        _F(GROUP_MA='Group_barre', PHENOMENE='MECANIQUE', MODELISATION='BARRE',),
        _F(GROUP_MA='Group_cable', PHENOMENE='MECANIQUE', MODELISATION='CABLE',),
    ),
)

# Caractéristique du câble
Cable_Aire = 5.026e-5
Cable_Rho  = 7800.0

# Définition du matériau CABLE
mat_cabl=DEFI_MATERIAU(
    ELAS=_F(E=2.1E+11, NU=0.3, ALPHA=1.0E-05,RHO=Cable_Rho),
    CABLE=_F(EC_SUR_E=0.0001,),
)

# Définition du matériau BARRE
mat_bar=DEFI_MATERIAU(
    ELAS=_F(E=2.1e+11, NU=0.3, ALPHA=0.0,RHO=7800.0),
)

# Affectation des caractéristiques élémentaires pour les barres et les cables
calbar=AFFE_CARA_ELEM(
    MODELE=affect,
    VERIF='MAILLE',
    BARRE=_F(GROUP_MA='Group_barre', SECTION='GENERALE', CARA='A', VALE=0.0001,),
    CABLE=_F(GROUP_MA='Group_cable', SECTION=Cable_Aire,N_INIT=5000.0,),
)

# Création des champs de température
ChZero=CREA_CHAMP(
    TYPE_CHAM='NOEU_TEMP_R',
    OPERATION='AFFE',
    MAILLAGE=mail,
    AFFE=(
        _F(TOUT='OUI', NOM_CMP='TEMP', VALE=0.0,),
    ),
)
tempstr=CREA_CHAMP(
    TYPE_CHAM='NOEU_TEMP_R',
    OPERATION='AFFE',
    MAILLAGE=mail,
    AFFE=(
        _F(TOUT='OUI', NOM_CMP='TEMP', VALE=0.0,),
        _F(GROUP_MA='Group_cable', NOM_CMP='TEMP', VALE=-200.0,),
    ),
)

Tfin = 1.0 ; NPas = 20
TPas    = Tfin / NPas
TMilieu = TPas*(NPas/2)

L_LIST=DEFI_LIST_REEL(
    DEBUT=0.0,
    INTERVALLE=_F(JUSQU_A=Tfin, PAS=TPas,),
)

tempresu=CREA_RESU(
    OPERATION='AFFE',
    TYPE_RESU='EVOL_THER',
    NOM_CHAM='TEMP',
    AFFE=(
        _F(CHAM_GD=ChZero,  INST=0.0,),
        _F(CHAM_GD=tempstr, INST=Tfin,),
    ),
)

CTM=AFFE_MATERIAU(
    MAILLAGE=mail,
    MODELE=affect,
    AFFE=(
        _F(GROUP_MA='Group_barre', MATER=mat_bar,),
        _F(GROUP_MA='Group_cable', MATER=mat_cabl,),
    ),
    AFFE_VARC=_F(TOUT='OUI',NOM_VARC='TEMP', EVOL=tempresu, NOM_CHAM='TEMP', VALE_REF=0,),
)


LIAISON=AFFE_CHAR_MECA(
    MODELE=affect,
    DDL_IMPO=(
        _F(GROUP_NO='GN4', DY=0.0, DZ=0.0,),
        _F(GROUP_NO='GN3', DX=0.0, DY=0.0, DZ=0.0),
        _F(GROUP_NO=('GN1','GN2'),  DZ=0.0,),
    ),
)

RESU=STAT_NON_LINE(
    MODELE=affect,
    CHAM_MATER=CTM,
    CARA_ELEM=calbar,
    EXCIT=_F(CHARGE=LIAISON,),
    COMPORTEMENT=(
        _F(GROUP_MA = 'Group_cable', RELATION = 'CABLE', DEFORMATION = 'GROT_GDEP'),
        _F(GROUP_MA = 'Group_barre', RELATION = 'ELAS'),
    ),
    INCREMENT=_F(LIST_INST=L_LIST),
    NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
    CONVERGENCE=_F(
        ITER_GLOB_MAXI=15,
        RESI_REFE_RELA=1.0E-06 , 
        EFFORT_REFE = 1.0,
        MOMENT_REFE = 1.0,
    ),
    SOLVEUR=_F(METHODE='LDLT',),
)

"""
IMPR_RESU(FORMAT='RESULTAT',
    RESU=_F(RESULTAT=RESU,NOM_CHAM=('DEPL','SIEF_ELGA',), INST=(TMilieu,Tfin), ),
)
"""

Instant = [TMilieu,Tfin]
ForceN  = [6.171050459855E+03, 1.23452954376E+04]

ModesCalc={
0: (6.27962E+01, 6.29083E+01, 6.29458E+01, 6.29626E+01, 6.29626E+01, 6.29626E+01,),
1: (8.85701E+01, 8.88995E+01, 8.90065E+01, 8.90541E+01, 8.90541E+01, 8.90541E+01,),
}

for ii in range(len(Instant)):
    itemps = Instant[ii]
    print "Instant   %d " % itemps
    # Matrice elementaire de rigidite
    MELRIG=CALC_MATR_ELEM(
        OPTION='RIGI_MECA',
        MODELE=affect, CHAM_MATER=CTM, CARA_ELEM=calbar,
        CHARGE=LIAISON, INST=itemps,
    )
    # Numerotation des equations du systeme
    NUMDDL=NUME_DDL(MATR_RIGI=MELRIG,)
    # Matrice assemblee de rigidite
    MASRIG=ASSE_MATRICE(MATR_ELEM=MELRIG, NUME_DDL=NUMDDL,)
    #
    # Prise en compte de la precontrainte au niveau elementaire
    VASFO=CREA_CHAMP(
        TYPE_CHAM='ELGA_SIEF_R', OPERATION='EXTR', NOM_CHAM='SIEF_ELGA',
        RESULTAT=RESU, INST= itemps,
    )
    DEPL=CREA_CHAMP(
        TYPE_CHAM='NOEU_DEPL_R', OPERATION='EXTR', NOM_CHAM='DEPL',
        RESULTAT=RESU, INST= itemps,
    )
    # Matrice elementaire de rigidite geometrique
    MELGEO=CALC_MATR_ELEM(
        OPTION='RIGI_GEOM',
        MODELE=affect, CARA_ELEM=calbar, CHAM_MATER=CTM,
        SIEF_ELGA=VASFO, DEPL = DEPL, INST=itemps,
    )
    # Matrice assemblee de rigidite geometrique
    MASGEO=ASSE_MATRICE(MATR_ELEM=MELGEO, NUME_DDL=NUMDDL,)
    #
    #
    MASTOT=COMB_MATR_ASSE(
        COMB_R=(
            _F(MATR_ASSE=MASRIG, COEF_R=1.0,),
            _F(MATR_ASSE=MASGEO, COEF_R=1.0,),
        ),
    )
    # Prise en compte des masses
    MELMAS=CALC_MATR_ELEM(
        OPTION='MASS_MECA',
        MODELE=affect, CARA_ELEM=calbar, CHAM_MATER=CTM,
        CHARGE=LIAISON, INST=itemps,
    )
    # Matrice assemblee de masse
    MASMAS=ASSE_MATRICE(MATR_ELEM=MELMAS, NUME_DDL=NUMDDL,)
    #
    # Calcul modal avec precontrainte
    VIBRA = CALC_MODES(
        TYPE_RESU='DYNAMIQUE', MATR_RIGI=MASTOT, MATR_MASS=MASMAS,
        OPTION='PLUS_PETITE',
        CALC_FREQ=_F(NMAX_FREQ = 10,),
        VERI_MODE= _F(STOP_ERREUR='NON', PREC_SHIFT=1.0E-04,),
    )
    VIBRA =NORM_MODE(reuse=VIBRA, MODE=VIBRA, NORME ='TRAN',)
    #
    FreqTheo = (ForceN[ii]/(Cable_Aire*Cable_Rho))**0.5/2.0
    motclf = {}
    motclf['RESU'] = []
    for ifreq in range(len(ModesCalc[ii])):
        motclf['RESU'].append(
            _F( PARA='FREQ', NUME_MODE=ifreq+1, REFERENCE='ANALYTIQUE',
                RESULTAT=VIBRA,
                VALE_CALC=ModesCalc[ii][ifreq], VALE_REFE= FreqTheo,
                CRITERE='RELATIF', PRECISION=0.50E-2,),
            )
    #
    TEST_RESU(**motclf)
    #
    DETRUIRE(INFO=1,
        CONCEPT= (
            _F(NOM=MELRIG),   _F(NOM=NUMDDL), _F(NOM=MASRIG) ,
            _F(NOM=VASFO),   _F(NOM=DEPL),
            _F(NOM=MELGEO),  _F(NOM=MASGEO), _F(NOM=VIBRA),
            _F(NOM=MELMAS),  _F(NOM=MASMAS), _F(NOM=MASTOT),
        ),
    )

FIN()
