# TITRE ROTOR FISSURE TOURNANT SOUMIS A UN MOMENT DE FLEXION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# person_in_charge: mohamed.torkhani at edf.fr
#

DEBUT( CODE=_F(NIV_PUB_WEB='INTERNET'),
      IGNORE_ALARM=('MODELISA4_9',) )

tfin = 1.;
fmax=250.

pas = 1e-05;

YOUNG = 210.e9;

DIAM = .8;
LONG = (2.0 * DIAM);
I = (((((pi * DIAM) * DIAM) * DIAM) * DIAM) / 64.0);
PEN = YOUNG*I/2/LONG


coef=10000.
raidmax = coef*PEN


MAIL1=LIRE_MAILLAGE(FORMAT='MED',);

MAIL1=DEFI_GROUP(reuse =MAIL1,
              MAILLAGE=MAIL1,
              CREA_GROUP_NO=(_F(GROUP_MA=('ROTOR',),),),)

MODELE=AFFE_MODELE(MAILLAGE=MAIL1,
                   AFFE=(_F(GROUP_MA='ROTOR',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='POU_D_E',),
                         _F(GROUP_MA='FIS',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_TR',),),);

ACIER=DEFI_MATERIAU(ELAS=_F(E=YOUNG,
                            NU=0.3,
                            RHO=7800.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL1,
                    AFFE=_F(GROUP_MA='ROTOR',
                            MATER=ACIER,),);

CARELEM=AFFE_CARA_ELEM(MODELE=MODELE,
                       POUTRE=_F(GROUP_MA='ROTOR',
                                 SECTION='CERCLE',
                                 CARA='R',
                                 VALE=(DIAM / 2.0),),
                       DISCRET=(_F(CARA='K_TR_D_L',
                                  GROUP_MA='FIS',
                                  VALE=(raidmax,raidmax,raidmax,raidmax,raidmax,raidmax,),),
                                _F(CARA='M_TR_D_L', GROUP_MA='FIS', VALE=(0,0,0,0)),
                               ),
                       );

CARELEF=AFFE_CARA_ELEM(MODELE=MODELE,
                       POUTRE=_F(GROUP_MA='ROTOR',
                                 SECTION='CERCLE',
                                 CARA='R',
                                 VALE=(DIAM / 2.0),),
                       DISCRET=(_F(CARA='K_TR_D_L',
                                  GROUP_MA='FIS',
                                  VALE=(raidmax,raidmax,raidmax,raidmax,0,0,),),
                                _F(CARA='M_TR_D_L', GROUP_MA='FIS', VALE=(0,0,0,0)),
                               ),
                       );

BLOQUAGE=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=(_F(GROUP_NO='PAL_G',
                                     DX=0.,
                                     DY=0.,
                                     DZ=0.,
                                     DRX=0.,
                                     DRY=0.,
                                     DRZ=0.,),
                                  _F(GROUP_NO='PAL_D',
                                     DRX=0.,),),);


ASSEMBLAGE(MODELE=MODELE,
                CHAM_MATER=CHMAT,
                CARA_ELEM=CARELEM,
                CHARGE=BLOQUAGE,
                NUME_DDL=CO('NUD'),
                MATR_ASSE=(_F(MATRICE=CO('RIGIAS'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSAS'),
                              OPTION='MASS_MECA',),),);

MODES=CALC_MODES(MATR_RIGI=RIGIAS,
                 VERI_MODE=_F(STURM='NON',
                              ),
                 OPTION='BANDE',
                 CALC_FREQ=_F(FREQ=(-1,fmax,),
                              ),
                 MATR_MASS=MASSAS,
                 )

CHA_FY=AFFE_CHAR_MECA(MODELE=MODELE,
                      FORCE_NODALE=_F(
                                      GROUP_NO='PAL_D',
                                      MY=-1.,),);

CHA_FZ=AFFE_CHAR_MECA(MODELE=MODELE,
                      FORCE_NODALE=_F(
                        GROUP_NO='PAL_D',
          MZ=0.,),);

ASSEMBLAGE(MODELE=MODELE,
                CHAM_MATER=CHMAT,
                CARA_ELEM=CARELEF,
                CHARGE=BLOQUAGE,
                NUME_DDL=NUD,
                MATR_ASSE=(_F(MATRICE=CO('RIGIAF'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSAF'),
                              OPTION='MASS_MECA',),
                           _F(MATRICE=CO('AMORAF'),
                              OPTION='AMOR_MECA',),
                           _F(MATRICE=CO('GYOMAF'),
                              OPTION='MECA_GYRO',),
                           ),
                VECT_ASSE=(_F(VECTEUR=CO("VASFY"),
                              OPTION='CHAR_MECA',
                              CHARGE=CHA_FY),
                           _F(VECTEUR=CO("VASFZ"),
                              OPTION='CHAR_MECA',
                              CHARGE=CHA_FZ),
                           ),);

RIGYEL=CALC_MATR_ELEM(OPTION='RIGI_GYRO',
                      MODELE=MODELE,
                      CHAM_MATER=CHMAT,
                      CARA_ELEM=CARELEF,);

RIGYAF=ASSE_MATRICE(MATR_ELEM=RIGYEL,
                   NUME_DDL=NUD,);

MODFF=CALC_MODES(MATR_RIGI=RIGIAF,
                 VERI_MODE=_F(STURM='NON',
                              SEUIL=1.E-4,
                              ),
                 OPTION='BANDE',
                 CALC_FREQ=_F(FREQ=(-1,fmax,),
                              ),
                 MATR_MASS=MASSAF,
                 )


MODEF=EXTR_MODE(FILTRE_MODE=_F(MODE=MODFF, NUME_MODE=(1,2,), ),);


BMOD=DEFI_BASE_MODALE(RITZ=_F(MODE_MECA=(MODEF,MODES,),),
                      NUME_REF=NUD,);


PROJ_BASE(  BASE=BMOD,
            STOCKAGE='PLEIN',
            MATR_ASSE_GENE=(
             _F(
                             MATRICE = CO("MASSEGEN"),
                             MATR_ASSE = MASSAF),
             _F(
                             MATRICE = CO("RIGIDGEN"),
                             MATR_ASSE = RIGIAF)),
             )


F_K1=LIRE_FONCTION(UNITE=38,
                  NOM_PARA='ABSC',
    INDIC_PARA=[1,1],
    INDIC_RESU=[1,2],
                  PROL_DROITE="LINEAIRE",
                  PROL_GAUCHE="LINEAIRE",
    INTERPOL='LIN')

F_KP1=LIRE_FONCTION(UNITE=38,
                  NOM_PARA='ABSC',
    INDIC_PARA=[1,1],
    INDIC_RESU=[1,3],
                  PROL_DROITE="LINEAIRE",
                  PROL_GAUCHE="LINEAIRE",
    INTERPOL='LIN')

F_K=CALC_FONCTION(COMB=(_F(FONCTION=F_K1, COEF=PEN)))
F_KP=CALC_FONCTION(COMB=(_F(FONCTION=F_KP1, COEF=PEN)))

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=29,
       COURBE=(_F(FONCTION=F_K,MARQUEUR=0),
               _F(FONCTION=F_KP,MARQUEUR=0),),)


RAMP=DEFI_FONCTION(NOM_PARA='INST',
                   VALE=(0,0,
                         0.2,1,
                         10,1,
                         ),);


PROJ_BASE(  BASE=BMOD,
            STOCKAGE='PLEIN',
            MATR_ASSE_GENE=(
             _F(
                             MATRICE = CO("MASGEN"),
                             MATR_ASSE = MASSAF),
             _F(
                             MATRICE = CO("RIGGEN"),
                             MATR_ASSE = RIGIAF),
             _F(
                             MATRICE = CO("GYOGEN"),
                             MATR_ASSE = GYOMAF),
             _F(
                             MATRICE = CO("AMOGEN"),
                             MATR_ASSE = AMORAF),
             _F(
                             MATRICE = CO("RGYGEN"),
                             MATR_ASSE = RIGYAF),),
             VECT_ASSE_GENE=(
                            _F( VECTEUR = CO("VAGFZ"), VECT_ASSE = VASFZ,),
                            _F( VECTEUR = CO("VAGFY"), VECT_ASSE = VASFY,),
             ))


OM=FORMULE(VALE='-10.*pi',
            NOM_PARA='INST',);

PHI=FORMULE(VALE='-10.*pi*INST+0.',
             NOM_PARA='INST',);

TRANGEN = DYNA_VIBRA   (     MATR_MASS=MASGEN,   
                             MATR_RIGI=RIGGEN,
                             VITESSE_VARIABLE='OUI',
                             MATR_GYRO=GYOGEN,
                             VITE_ROTA=OM,
                             BASE_CALCUL ='GENE',
                             TYPE_CALCUL ='TRAN',
                             SCHEMA_TEMPS=_F(SCHEMA='EULER'),
                             AMOR_MODAL= _F(AMOR_REDUIT=.5),
                             INCREMENT=_F(  INST_INIT = 0.,  INST_FIN = tfin, PAS = pas, VERI_PAS='NON'),
                             EXCIT=(
                                    _F(VECT_ASSE_GENE=VAGFZ,FONC_MULT=RAMP,),
                                    _F(VECT_ASSE_GENE=VAGFY,FONC_MULT=RAMP,),
                                    ),
                             ROTOR_FISS =  _F(
                                                GROUP_NO_G = 'FISS_G',
                                                GROUP_NO_D = 'FISS_D',
                                                ANGL_ROTA=PHI,
                                                K_PHI=F_K,
                                                DK_DPHI=F_KP,)
                             )

DEPN4Z=RECU_FONCTION(RESU_GENE=TRANGEN,
                      NOM_CHAM='DEPL',
                      NOM_CMP='DZ',
                      NOEUD='N4',);

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=31,
              COURBE=(
                      _F(FONCTION=DEPN4Z, MARQUEUR=0,),
              ))


TEST_FONCTION(VALEUR=(_F(VALE_CALC=4.83088061479e-09,
                         VALE_REFE=4.52765E-09,
                         VALE_PARA=0.9,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=0.1,
                         FONCTION=DEPN4Z,),
                      _F(VALE_CALC=1.84420269199e-09,
                         VALE_REFE=1.77757E-09,
                         VALE_PARA=1.0,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=0.1,
                         FONCTION=DEPN4Z,),
                      ),
              )

FIN();
