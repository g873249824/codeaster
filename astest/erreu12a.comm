# TITRE VALIDATION DE CONTACT_INIT ET DECOUPE
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='ERREU12A',
              NIV_PUB_WEB='INTERNET',
              VISU_EFICAS='NON'),
      ERREUR=_F(ERREUR_F='EXCEPTION',),
      IGNORE_ALARM='SUPERVIS_1',
      PAR_LOT='NON')
# ALARME 'SUPERVIS_1' : PAR_LOT='NON' necessaire pour intercepter l'exception

import re
fmt_raison='-'*80+"""

   Exception interceptee
   Raison : %s

"""+'-'*80+'\n'

MA0 = LIRE_MAILLAGE(FORMAT='MED',)

MA=CREA_MAILLAGE(MAILLAGE=MA0,
                 HEXA20_27=_F(TOUT='OUI'),
                 );

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT = 'OUI',
                       PHENOMENE = 'MECANIQUE',
                       MODELISATION = '3D'),)

MA = MODI_MAILLAGE(reuse=MA,
                   MAILLAGE=MA,
                   ORIE_PEAU_3D=_F(GROUP_MA = ('C_TOP','C_BOT',),),
                   )


MAT=DEFI_MATERIAU(ELAS=_F(E = 200000.,
                          NU = 0.3,),
                  ECRO_LINE=_F(D_SIGM_EPSI = 2000.,
                               SY = 10.,),
                  )

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=(_F(TOUT = 'OUI',  MATER = MAT,),),
                    )

CHBLO = AFFE_CHAR_MECA(MODELE=MO,
                       DDL_IMPO=(_F(GROUP_MA =('F_TOP') ,DX=0, DY=0, ),
                                 _F(GROUP_MA =('F_BOT') ,DX=0, DY=0, DZ=0.0),
                                 ),
                      )

CHFORCE = AFFE_CHAR_MECA (MODELE=MO,
                          FORCE_FACE = _F(GROUP_MA='F_TOP',
                                          FZ=-1000.0,),);

CHCO1=DEFI_CONTACT(MODELE        = MO,
                  FORMULATION    = 'CONTINUE',
                  ALGO_RESO_GEOM = 'POINT_FIXE',
                  REAC_GEOM      = 'SANS',
                  ALGO_RESO_CONT = 'POINT_FIXE',
                  ZONE=(
                        _F(
                          GROUP_MA_MAIT = 'C_TOP',
                          GROUP_MA_ESCL = 'C_BOT',
                          CONTACT_INIT  = 'INTERPENETRE',
                         ),
                       ),
                  )

LIST=DEFI_LIST_REEL(DEBUT=0.,
                    INTERVALLE=_F(JUSQU_A = 1.,NOMBRE = 1)
                    )

DEFLIST = DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=LIST,),
                         ECHEC=_F(SUBD_NIVEAU=2),);

RAMPE = DEFI_FONCTION (NOM_PARA='INST',
                       VALE=(0,0,1,1,),);

is_ok = 0
try :
   SOL1 = STAT_NON_LINE(INFO=1,
                        MODELE=MO,
                        CHAM_MATER=CHMAT,
                        EXCIT=(_F(CHARGE = CHBLO),
                               _F(CHARGE = CHFORCE,FONC_MULT=RAMPE,),
                              ),
                        NEWTON=_F(REAC_ITER=1,),
                        CONTACT = CHCO1,
                        COMPORTEMENT = _F(RELATION = 'VMIS_ISOT_LINE'),
                        INCREMENT = _F(LIST_INST = DEFLIST,),
                        CONVERGENCE = _F(ITER_GLOB_MAXI=2,),
                        )
except aster.error,err:
   print fmt_raison % str(err)
   # on verifie que l'erreur fatale est bien celle que l'on attendait :
   if err.id_message == "MECANONLINE9_7":
      is_ok = 1

# TEST_RESU
TAB1=CREA_TABLE(LISTE=(_F(PARA='TEST',TYPE_K='K8',LISTE_K='VALEUR  '),
                       _F(PARA='BOOLEEN',LISTE_I=is_ok)))

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=1,
           VALE_REFE_I=1,
           NOM_PARA='BOOLEEN',
           TABLE=TAB1,
           FILTRE=_F(NOM_PARA='TEST',
                     VALE_K='VALEUR  ',),
           )

FIN()
