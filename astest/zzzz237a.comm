# TITRE VALIDATION DU MOT-CLE LIAISON_UNILATER PAR UNE CONDITION PORTANT SUR DES DEPLACEMENTS
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='ZZZZ237A',NIV_PUB_WEB='INTERNET',),
      IGNORE_ALARM=('APPARIEMENT_1'),
              DEBUG=_F(SDVERI='OUI'))

# ALARME APPARIEMENT_1: TEST DU NON APPARIEMENT (CF FICHE 18979)
# NORMAL DANS CE TEST: ON VERIFIE TOLE_APPA et TOLE_PROJ_EXT
# L'ALARME SE DECLENCHE -> CES DEUX FONCTIONNALITES SONT OK

MA=LIRE_MAILLAGE(FORMAT='MED',);

# IMPR_RESU(FORMAT='ASTER',
#           UNITE=21,
#           RESU=_F(MAILLAGE=MA,),);

MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_PEAU_2D=_F(GROUP_MA=('AB','BC','CD','DA','EF','FG','GH','HE',),),);

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI',),);

MAT_DUR=DEFI_MATERIAU(ELAS=_F(E=2.0e+16,
                              NU=0.3,),);

MAT_MOU=DEFI_MATERIAU(ELAS=_F(E=2.0e+9,
                              NU=0.3,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=(_F(GROUP_MA='ABCD',
                             MATER=MAT_MOU,),
                          _F(GROUP_MA='EFGH',
                             MATER=MAT_DUR,),
                             ),);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=(_F(GROUP_MA=('ABCD','EFGH',),
                        PHENOMENE='MECANIQUE',
                        MODELISATION='D_PLAN',),
                     _F(GROUP_MA=('K1','K2',),
                        PHENOMENE='MECANIQUE',
                        MODELISATION='2D_DIS_T',),),);

CAR_DIS=AFFE_CARA_ELEM(MODELE=MO,
                       DISCRET_2D=_F(REPERE='LOCAL',
                                     CARA='K_T_D_L',
                                     GROUP_MA=('K1','K2',),
                                     VALE=(10,10,),),);

BLOC_DIS=AFFE_CHAR_CINE(MODELE=MO,
                        MECA_IMPO=_F(GROUP_NO=('R1','R2',),
                                    DX=0,
                                    DY=0,
                                    #DZ=0,
                                    ),);

BLOCAGE=AFFE_CHAR_CINE(MODELE=MO,
                       MECA_IMPO=_F(GROUP_MA='FG',
                                    DX=0,
                                    DY=0,
                                    #DZ=0,
                                    ),);

# FORCE=AFFE_CHAR_MECA(MODELE=MO,
#                      FORCE_CONTOUR=_F(GROUP_MA='AB',
#                                       FY=-2.5,),);

DEPL=AFFE_CHAR_CINE(MODELE=MO,
                    MECA_IMPO=_F(GROUP_NO='CD',
                                DY=-1.0,),);

CONT = DEFI_CONTACT(MODELE      = MO,
                   FORMULATION  = 'DISCRETE',
                   REAC_GEOM    = 'AUTOMATIQUE',
                   ZONE=(
                        _F(
                             GROUP_MA_MAIT='HE',
                             GROUP_MA_ESCL='AB',
                             VECT_MAIT = 'FIXE',
                             MAIT_FIXE = (0,1,0),
                         ),

                       ),
                  )


F_FORC=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.0,0.0,
                           1.0,1.0,
                           ),PROL_DROITE='LINEAIRE');

L_TPS=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=20.0,
                                   NOMBRE=20,),);

RESU0=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   CARA_ELEM=CAR_DIS,
                   EXCIT=(_F(CHARGE=BLOCAGE,),
                          _F(CHARGE=DEPL,
                             FONC_MULT=F_FORC,),
                          _F(CHARGE=BLOC_DIS,),
                          ),
                   CONTACT  = CONT,
                   COMP_INCR=_F(RELATION='ELAS',),
                   INCREMENT=_F(LIST_INST=L_TPS,),
                   SOLVEUR=_F(SYME='OUI',),
                   );


RESU=STAT_NON_LINE(MODELE=MO,
                 CHAM_MATER=CHMAT,
                 CARA_ELEM=CAR_DIS,
                 EXCIT=(_F(CHARGE=BLOCAGE,),
                        _F(CHARGE=DEPL,
                           FONC_MULT=F_FORC,),
                        _F(CHARGE=BLOC_DIS,),
                        ),
                 CONTACT  = CONT,
                 NEWTON=_F(REAC_ITER=1,PREDICTION='DEPL_CALCULE',EVOL_NOLI=RESU0),
                 COMP_INCR=_F(RELATION='ELAS',),
                 INCREMENT=_F(LIST_INST=L_TPS,),
                 SOLVEUR=_F(SYME='OUI',),
                 );

RESU=CALC_CHAMP(reuse =RESU,
                RESULTAT=RESU,
                FORCE=('FORC_NODA','REAC_NODA',),
             );

T_DEP_BA=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                             INTITULE='Deplacements EFGH',
                             RESULTAT=RESU,
                             NOM_CHAM='DEPL',
                             INST=20.0,
                             GROUP_NO='EFGH',
                             TOUT_CMP='OUI',),);

IMPR_TABLE(TABLE=T_DEP_BA,);

T_DEP_HA=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                             INTITULE='Deplacements ABCD',
                             RESULTAT=RESU,
                             NOM_CHAM='DEPL',
                             INST=20.0,
                             GROUP_NO='ABCD',
                             TOUT_CMP='OUI',),);

IMPR_TABLE(TABLE=T_DEP_HA,);

T_FN_BAS=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                             INTITULE='Forces nodales EFGH',
                             RESULTAT=RESU,
                             NOM_CHAM='FORC_NODA',
                             INST=20.0,
                             GROUP_NO='EFGH',
                             TOUT_CMP='OUI',),);

IMPR_TABLE(TABLE=T_FN_BAS,);

T_FN_HAU=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                             INTITULE='Forces nodales ABCD',
                             RESULTAT=RESU,
                             NOM_CHAM='FORC_NODA',
                             INST=20.0,
                             GROUP_NO='ABCD',
                             TOUT_CMP='OUI',),);

IMPR_TABLE(TABLE=T_FN_HAU,);

# T_RN=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
#                              INTITULE='Reactions nodales',
#                              RESULTAT=RESU,
#                              NOM_CHAM='REAC_NODA',
#                              TOUT='OUI',
#                              GROUP_NO=('ABCD','K1','K2','EFGH',),
#                              TOUT_CMP='OUI',),);
#
# IMPR_TABLE(TABLE=T_RN,);

T_CONT=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                               INTITULE='Forces de contact',
                               RESULTAT=RESU,
                               NOM_CHAM='VALE_CONT',
                               INST=20.0,
                               GROUP_NO='AB',
                               TOUT_CMP='OUI',),);

IMPR_TABLE(TABLE=T_CONT,);

# IMPR_RESU(FORMAT='RESULTAT',
#           RESU=_F(RESULTAT=RESU,
#                   NOM_CHAM='VALE_CONT',),);

# TEST DE CALCUL OPTION FORC_NODA_ELEM

SIGM = CREA_CHAMP(TYPE_CHAM = 'ELGA_SIEF_R',
                  OPERATION = 'EXTR',
                  RESULTAT  = RESU,
                  NOM_CHAM  = 'SIEF_ELGA',
                  INST      = 20.0,);

VARI = CREA_CHAMP(TYPE_CHAM = 'ELGA_VARI_R',
                  OPERATION = 'EXTR',
                  RESULTAT  = RESU,
                  NOM_CHAM  ='VARI_ELGA',
                  INST      = 20.0,);

DEPL0 = CREA_CHAMP(TYPE_CHAM = 'NOEU_DEPL_R',
                  OPERATION = 'EXTR',
                  RESULTAT  = RESU,
                  NOM_CHAM  ='DEPL',
                  INST      = 19.0,);

DEPL1 = CREA_CHAMP(TYPE_CHAM = 'NOEU_DEPL_R',
                  OPERATION = 'EXTR',
                  RESULTAT  = RESU,
                  NOM_CHAM  ='DEPL',
                  INST      = 20.0,);

DU = CREA_CHAMP(OPERATION='ASSE',
                   MODELE=MO,
                   TYPE_CHAM='NOEU_DEPL_R',
                   ASSE=(_F(CHAM_GD=DEPL1,
                            TOUT='OUI',
                            CUMUL='OUI',
                            COEF_R=1.),
                         _F(CHAM_GD=DEPL0,
                            TOUT='OUI',
                            CUMUL='OUI',
                            COEF_R=-1.),
                        ))

TABFORC = CALCUL(OPTION    = 'FORC_NODA_ELEM',
              MODELE    = MO,
              CARA_ELEM = CAR_DIS,
              CHAM_MATER= CHMAT,
              SIGM      = SIGM,
              VARI      = VARI,
              DEPL      = DEPL1,
              INCR_DEPL = DU,
              EXCIT     =(_F(CHARGE=BLOCAGE,),
                          _F(CHARGE=DEPL,
                             FONC_MULT=F_FORC,),
                          _F(CHARGE=BLOC_DIS,),),
              COMP_INCR =_F(RELATION='ELAS',),
              INCREMENT =_F(LIST_INST=L_TPS,
                           NUME_ORDRE=20),
              );

FORC=EXTR_TABLE(TYPE_RESU='VECT_ELEM_DEPL_R',
                 TABLE=TABFORC,
                 NOM_PARA='NOM_SD',
                 FILTRE=_F(NOM_PARA='NOM_OBJET',
                           VALE_K='FORC_NODA_ELEM'),)

NUME = NUME_DDL(MODELE = MO);

VECT = ASSE_VECTEUR(VECT_ELEM = FORC,
                    NUME_DDL  = NUME,);

#--------------------------
# TESTS DES RESULTATS     #
#--------------------------

# TESTS ANALTIQUES
# ----------------

TEST_RESU(RESU=_F(GROUP_NO='A',
                  INST=20.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  VALE_CALC=-9.14285676E-07,
                  VALE_REFE=0.0,
                  CRITERE='ABSOLU',),
          )

TEST_RESU(RESU=_F(GROUP_NO='B',
                  INST=20.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  VALE_CALC=-9.14285664E-07,
                  VALE_REFE=0.0,
                  CRITERE='ABSOLU',),
          )

# NON REGRESSION
# --------------

TEST_RESU(RESU=_F(GROUP_NO='A',
                  INST=20.0,
                  RESULTAT=RESU,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DX',
                  VALE_REFE=-4.28571,
                  VALE_CALC=-4.28571,
                  PRECISION=1.E-3,
                  REFERENCE='ANALYTIQUE',
                  ),
          )

TEST_RESU(RESU=_F(GROUP_NO='B',
                  INST=20.0,
                  RESULTAT=RESU,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DX',
                  VALE_REFE=4.28571,
                  VALE_CALC=4.28571,
                  PRECISION=1.E-3,
                  REFERENCE='ANALYTIQUE',
                  ),
          )

TEST_RESU(RESU=_F(GROUP_NO='A',
                  INST=20.0,
                  RESULTAT=RESU,
                  NOM_CHAM='FORC_NODA',
                  NOM_CMP='DY',
                  VALE_REFE=2.1978E10,
                  VALE_CALC=2.1978E10,
                  PRECISION=1.E-3,
                  REFERENCE='ANALYTIQUE',
                  ),
          )

TEST_RESU(RESU=_F(GROUP_NO='B',
                  INST=20.0,
                  RESULTAT=RESU,
                  NOM_CHAM='FORC_NODA',
                  NOM_CMP='DY',
                  VALE_REFE=2.1978E10,
                  VALE_CALC=2.1978E10,
                  PRECISION=1.E-3,
                  REFERENCE='ANALYTIQUE',
                  ),
          )

TEST_RESU(CHAM_NO=_F(
                     NOM_CMP='DY',
                     GROUP_NO='A',
                     CHAM_GD=VECT,
                     VALE_REFE=2.1978E10,
                     VALE_CALC=2.1978E10,
                     PRECISION=1.E-3,
                     REFERENCE='ANALYTIQUE',
                  ),
          )

TEST_RESU(CHAM_NO=_F(
                     NOM_CMP='DY',
                     GROUP_NO='B',
                     CHAM_GD=VECT,
                     VALE_REFE=2.1978E10,
                     VALE_CALC=2.1978E10,
                     PRECISION=1.E-3,
                     REFERENCE='ANALYTIQUE',
                  ),
          )

#--------------------------

IMPR_RESU(FORMAT='MED',
          RESU=_F(MAILLAGE=MA,
                  RESULTAT=RESU,
                  TOUT='OUI',),);

# Validation de CREA_CHAMP / COMB en "reentrant" :
# --------------------------------------------------
U=CREA_CHAMP(OPERATION='EXTR', TYPE_CHAM='NOEU_DEPL_R', NOM_CHAM='DEPL', RESULTAT=RESU,INST=20.0,INFO=1)
U=CREA_CHAMP(reuse = U, OPERATION='COMB', INFO=1, TYPE_CHAM='NOEU_DEPL_R',
                COMB=(_F(CHAM_GD=U, COEF_R=1.),
                      _F(CHAM_GD=U,COEF_R=1.),),)
TEST_RESU(CHAM_NO=_F(
                     NOM_CMP='DX',
                     GROUP_NO='B',
                     CHAM_GD=U,
                     VALE_CALC=8.5714281834518999,),
          )

#--------------------------

# Validation de TOLE_APPA en FORMULATION 'DISCRETE' et 'CONTINUE'

CONT_TA = DEFI_CONTACT(MODELE      = MO,
                   FORMULATION  = 'DISCRETE',
                   REAC_GEOM    = 'AUTOMATIQUE',
                   ZONE=(
                        _F(
                             GROUP_MA_MAIT='HE',
                             GROUP_MA_ESCL='AB',
                             TOLE_APPA=+1.0,
                         ),

                       ),
                  )

CONTC_TA = DEFI_CONTACT(MODELE      = MO,
                   FORMULATION  = 'CONTINUE',
                   ALGO_RESO_CONT = 'NEWTON',
                   ALGO_RESO_GEOM = 'NEWTON',
                   ZONE=(
                        _F(
                             GROUP_MA_MAIT='HE',
                             GROUP_MA_ESCL='AB',
                             TOLE_APPA=+1.0,
                         ),

                       ),
                  )

RESU_TA=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   CARA_ELEM=CAR_DIS,
                   EXCIT=(_F(CHARGE=BLOCAGE,),
                          _F(CHARGE=DEPL,
                             FONC_MULT=F_FORC,),
                          _F(CHARGE=BLOC_DIS,),
                          ),
                   CONTACT  = CONT_TA,
                   COMP_INCR=_F(RELATION='ELAS',),
                   INCREMENT=_F(LIST_INST=L_TPS,),
                #   CONVERGENCE=_F(RESI_GLOB_MAXI=1.0E-6,),
                   SOLVEUR=_F(SYME='OUI',),
                   );

RESUC_TA=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   CARA_ELEM=CAR_DIS,
                   EXCIT=(_F(CHARGE=BLOCAGE,),
                          _F(CHARGE=DEPL,
                             FONC_MULT=F_FORC,),
                          _F(CHARGE=BLOC_DIS,),
                          ),
                   CONTACT  = CONTC_TA,
                   COMP_INCR=_F(RELATION='ELAS',),
                   INCREMENT=_F(LIST_INST=L_TPS,),
                 #  CONVERGENCE=_F(RESI_GLOB_MAXI=1.0E-6,),
                   NEWTON=_F(REAC_ITER=1),
                   SOLVEUR=_F(SYME='OUI',),
                   );


# TESTS ANALTIQUES
# ----------------

TEST_RESU(RESU=_F(GROUP_NO='A',
                  INST=20.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU_TA,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  VALE_CALC=-20.0,
                  VALE_REFE=-20.0,
                  CRITERE='ABSOLU',),
          )

TEST_RESU(RESU=_F(GROUP_NO='B',
                  INST=20.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU_TA,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  VALE_CALC=-20.0,
                  VALE_REFE=-20.0,
                  CRITERE='ABSOLU',),
          )

TEST_RESU(RESU=_F(GROUP_NO='A',
                  INST=20.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESUC_TA,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  VALE_CALC=-20.0,
                  VALE_REFE=-20.0,
                  CRITERE='ABSOLU',),
          )

TEST_RESU(RESU=_F(GROUP_NO='B',
                  INST=20.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESUC_TA,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  VALE_CALC=-20.0,
                  VALE_REFE=-20.0,
                  CRITERE='ABSOLU',),
          )

FIN();
