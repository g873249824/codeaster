# TITRE COMPARAISON AVEC LA SOLUTION ANALYTIQUE D'UNE PLAQUE (DKT) EN TRACTION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))
RHO  = 2500.E0
EP   = 0.1
HA  = 1.0

EY  = 4.3880E10
NU  = 0.

LONG = 1.0
LARG = 1.0
C0   = sqrt(EY/RHO)
K    = 3.1416/8.0 * LONG

FREQ = K*C0
Q0   = 1.0E-4

F0   = EY*Q0*K * EP * cos(K*LONG)

XN = LONG/3.0
VIT0 = FREQ*Q0* sin(K* 0.0)
VIT1 = FREQ*Q0* sin(K* XN)
VIT2 = FREQ*Q0* sin(K* 2*XN)
VITF = FREQ*Q0* sin(K* LONG)


TMAX = 1.2E-3
DT = 3.0E-5

MAIL=LIRE_MAILLAGE(FORMAT='MED',);

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_NO=(_F(GROUP_MA='A1A2',),
                               _F(GROUP_MA='A4A3' ,),
                               _F(GROUP_MA='A2A4' ,),
                               _F(GROUP_MA='A3A1' ,),
                               _F(GROUP_MA='M1' ,),
                               _F(GROUP_MA='M2' ,),
                             ),);

MOD1=AFFE_MODELE(MAILLAGE=MAIL,
                AFFE=_F(GROUP_MA = 'A1A2',
                        PHENOMENE='MECANIQUE',
                        MODELISATION='BARRE',),);

MAT=DEFI_MATERIAU(
                  ELAS = _F(
                             E    =  EY,
                             NU   =  NU,
                             RHO  = RHO,
                         AMOR_ALPHA=0.0000001, AMOR_BETA=0.0001,
                           ),
                 );

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=(_F(TOUT='OUI',MATER=MAT,),),
                    );

CELE1=AFFE_CARA_ELEM(MODELE=MOD1,
                        BARRE=_F(  GROUP_MA = 'A1A2',
                                   SECTION = 'RECTANGLE',
                                   CARA = ( 'HZ',  'HY',  ),
                                   VALE = (  EP,    HA,   )),
                                   );

COND_L1=AFFE_CHAR_MECA(MODELE=MOD1,
                        DDL_IMPO=(
                                  _F(GROUP_NO='A1',
                                     DX=0.0,
                                     ),
                                  _F(GROUP_NO='A1A2',
                                     DY=0.0,
                                     DZ=0.0,
                                     ),
                                  ),
                     FORCE_NODALE = _F(
                                      GROUP_NO = 'A2',
                                      FX       = 1.0*HA
                                      )
                       );

ffonc = FORMULE (
                  NOM_PARA = 'INST',
                  VALE = ''' F0*sin(FREQ*INST) '''
                  )

INST1=DEFI_LIST_REEL(DEBUT=0.0,INTERVALLE=(
                          _F(JUSQU_A = TMAX,PAS = DT),
                      ),);

chf1  = CALC_FONC_INTERP (
                          FONCTION   = ffonc,
                          LIST_PARA  = INST1,
                          PROL_DROITE = 'CONSTANT',
                          PROL_GAUCHE = 'CONSTANT',
                          )
NN1  = int(TMAX/DT)

VIT_INI = CREA_CHAMP(MAILLAGE=MAIL,
                    OPERATION='AFFE',
                    TYPE_CHAM='NOEU_DEPL_R',
                    AFFE=(
                          _F(TOUT     = 'OUI',
                             NOM_CMP  = ('DX','DY','DZ'),
                             VALE     = (0.,0.,0.),),
                          _F(GROUP_NO = 'M1',
                             NOM_CMP  = 'DX',
                             VALE     = VIT1,),
                          _F(GROUP_NO = 'M2',
                             NOM_CMP  = 'DX',
                             VALE     = VIT2,),
                          _F(GROUP_NO = 'A2',
                             NOM_CMP  = 'DX',
                             VALE     = VITF,),
                          )
                     )

DTARC=10.*DT
LARCH = DEFI_LIST_REEL(DEBUT=0.0,INTERVALLE=(
                          _F(JUSQU_A = TMAX,PAS = DTARC),
                      ),);

# Liste d'observation pour le premier calcul coupee en deux
LOBS1a = DEFI_LIST_REEL(DEBUT=0.0,INTERVALLE=(
                          _F(JUSQU_A = TMAX/2,PAS = DTARC),
                      ),);

LOBS1b = DEFI_LIST_REEL(DEBUT=TMAX/2,INTERVALLE=(
                          _F(JUSQU_A = TMAX,PAS = DTARC),
                      ),);

RIGIELEM=CALC_MATR_ELEM(  MODELE=MOD1,       OPTION='RIGI_MECA',
                        CHAM_MATER=CHMAT, CARA_ELEM=CELE1,
                        CHARGE=COND_L1,);

MASSELEM=CALC_MATR_ELEM(  MODELE=MOD1,  OPTION='MASS_MECA',
                         CHAM_MATER=CHMAT, CARA_ELEM=CELE1,
                         CHARGE=COND_L1,);

AMORELEM=CALC_MATR_ELEM(  MODELE=MOD1,       OPTION='AMOR_MECA',
                        RIGI_MECA=RIGIELEM, MASS_MECA=MASSELEM,
                        CHAM_MATER=CHMAT, CARA_ELEM=CELE1,
                        CHARGE=COND_L1,);

EFFOELEM=CALC_VECT_ELEM(  OPTION='CHAR_MECA',
                          CHAM_MATER=CHMAT, CARA_ELEM=CELE1,
                            CHARGE=COND_L1)

NUMEROTA=NUME_DDL(  MATR_RIGI=RIGIELEM,
                      METHODE='LDLT',
                     RENUM='SANS')

MATRRIGI=ASSE_MATRICE(  MATR_ELEM=RIGIELEM,  NUME_DDL=NUMEROTA )

MATRMASS=ASSE_MATRICE(  MATR_ELEM=MASSELEM,  NUME_DDL=NUMEROTA )

MATRAMOR=ASSE_MATRICE(  MATR_ELEM=AMORELEM,  NUME_DDL=NUMEROTA )

VECTASS=ASSE_VECTEUR(  VECT_ELEM=EFFOELEM,  NUME_DDL=NUMEROTA )

# Calcul explicite MASS_DIAG = NON
RESU1 = DYNA_NON_LINE(
                       MODELE=MOD1,
                       CHAM_MATER= CHMAT,
                       CARA_ELEM = CELE1,
                       MASS_DIAG='NON',
                       COMPORTEMENT=_F(
                                    RELATION ='ELAS',     ),
                       INCREMENT=_F( LIST_INST = INST1,
                                     PRECISION =1.E-1,
                                     INST_FIN=TMAX/2,
                                     ),
                       EXCIT=(   _F( CHARGE = COND_L1,
                                     FONC_MULT = chf1,),
                             ),
                       SCHEMA_TEMPS=_F(SCHEMA='DIFF_CENT',
                                      FORMULATION='ACCELERATION',),
                       ETAT_INIT = _F(
                                       VITE = VIT_INI,
                                      ),
                       ARCHIVAGE=_F(LIST_INST=LARCH,),
                       OBSERVATION=(_F(NOM_CHAM='DEPL',
                                       NOM_CMP='DX',
                                       EVAL_CHAM='VALE',
                                       LIST_INST= LOBS1a,
                                       NOEUD='N1'),),


                     );

# Calcul explicite MASS_DIAG = NON
# On coupe le DYNA_NON_LINE en deux et on fait une reprise
# pour tester la bonne construction de la table d'observation
RESU1 = DYNA_NON_LINE( reuse=RESU1,
                       MODELE=MOD1,
                       CHAM_MATER= CHMAT,
                       CARA_ELEM = CELE1,
                       MASS_DIAG='NON',
                       COMPORTEMENT=_F(
                                    RELATION ='ELAS',     ),
                       INCREMENT=_F( LIST_INST = INST1,
                                     PRECISION =1.E-1),
                       EXCIT=(   _F( CHARGE = COND_L1,
                                     FONC_MULT = chf1,),
                             ),
                       SCHEMA_TEMPS=_F(SCHEMA='DIFF_CENT',
                                      FORMULATION='ACCELERATION',),
                       ETAT_INIT = _F(
                                       EVOL_NOLI = RESU1,
                                      ),
                       ARCHIVAGE=_F(LIST_INST=LARCH,),
                       OBSERVATION=(_F(NOM_CHAM='DEPL',
                                       NOM_CMP='DX',
                                       EVAL_CHAM='VALE',
                                       LIST_INST= LOBS1b,
                                       NOEUD='N1'),),
                     );

# Calcul explicite MASS_DIAG = OUI
RESU2 = DYNA_NON_LINE(
                       MODELE=MOD1,
                       CHAM_MATER= CHMAT,
                       CARA_ELEM = CELE1,
                       MASS_DIAG='OUI',
                       COMPORTEMENT=_F(
                                    RELATION ='ELAS',     ),
                       INCREMENT=_F( LIST_INST = INST1,
                                     PRECISION =1.E-1),
                       EXCIT=(   _F( CHARGE = COND_L1,
                                     FONC_MULT = chf1,),
                             ),
                       SCHEMA_TEMPS=_F(SCHEMA='DIFF_CENT',
                                      FORMULATION='ACCELERATION',),
                       ETAT_INIT = _F(
                                       VITE = VIT_INI,
                                      ),
                       ARCHIVAGE=_F(LIST_INST=LARCH,),
                       OBSERVATION=(_F(NOM_CHAM='DEPL',
                                       NOM_CMP='DX',
                                       EVAL_CHAM='VALE',
                                       LIST_INST= LARCH,
                                       NOEUD='N1'),),
                     );

# Calcul explicite MASS_DIAG = NON
RESU3 = DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='PHYS',
                            MATR_MASS=MATRMASS, MATR_RIGI=MATRRIGI,
                            MATR_AMOR=MATRAMOR,
                            SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',),
                            EXCIT=_F(  VECT_ASSE = VECTASS,
                                    FONC_MULT = chf1),
                            ETAT_INIT=_F(VITE=VIT_INI),
                            INCREMENT=_F( INST_INIT = 0.,
                                       INST_FIN = TMAX, PAS = DT),
                            ARCHIVAGE=_F(  LIST_INST = LARCH))

# --------------------- TESTS -------------------------
# ANALYTIQUES
UXRES = Q0*sin(K*LONG)*sin(FREQ*TMAX)
TEST_RESU(RESU=(_F(INST=1.2E-3,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU1,
                   NOM_CHAM='DEPL',
                   NOEUD='N2',
                   NOM_CMP='DX',
                   VALE_CALC= 3.51995724E-05,
                   VALE_REFE=3.5195652396428836E-05,
                   PRECISION=5.0E-4,),
                _F(INST=1.2E-3,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=RESU2,
                   NOM_CHAM='DEPL',
                   NOEUD='N2',
                   NOM_CMP='DX',
                   VALE_CALC= 3.52808306E-05,
                   VALE_REFE=3.5195652396428836E-05,
                   PRECISION=5.0E-3,),
                ),
          )

# NON-REGRESSION
# VERIFICATION DE LA BONNE CONSTRUCTION DE LA TABLE D'OBSERVATION

TAB_OBS = RECU_TABLE (CO = RESU1,
                      NOM_TABLE = 'OBSERVATION');

IMPR_TABLE(TABLE=TAB_OBS);


TEST_TABLE(CRITERE='ABSOLU',
           VALE_REFE=0.,
           VALE_CALC=0.,
           REFERENCE='ANALYTIQUE',
           NOM_PARA='VALE',
           TABLE=TAB_OBS,
           FILTRE=(_F(CRIT_COMP='EQ',
                      NOM_PARA='INST',
                      VALE=3.E-4,),
                   _F(NOM_PARA='NOM_OBSERVATION',
                      VALE_K='OBSERVATION_1',),
                   ),
           )

TEST_TABLE(CRITERE='ABSOLU',
           VALE_REFE=0.,
           VALE_CALC=0.,
           REFERENCE='ANALYTIQUE',
           NOM_PARA='VALE',
           TABLE=TAB_OBS,
           FILTRE=(_F(CRIT_COMP='EQ',
                      NOM_PARA='INST',
                      VALE=9.E-4,),
                   _F(NOM_PARA='NOM_OBSERVATION',
                      VALE_K='OBSERVATION_1',),
                   ),
           )

RESU4=CALC_CHAMP(RESULTAT=RESU3,CARA_ELEM=CELE1,ENERGIE=('ECIN_ELEM'))


TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  POINT=1,
                  RESULTAT=RESU4,
                  NOM_CHAM='ECIN_ELEM',
                  NOM_CMP='TOTALE',
                  VALE_CALC=0.091038669129169,
                  VALE_REFE=0.0910387,
                  REFERENCE='ANALYTIQUE',
                  PRECISION=5.0E-3,
                  CRITERE='RELATIF',
                  MAILLE='M21',),
          )

FIN();
