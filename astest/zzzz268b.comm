# TITRE VALIDATION DE POST_BORDET EN 2D ET 3D
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================


DEBUT(CODE=_F(  NOM = 'ZZZZ268B',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),
      # MODELISA4_80 : presence de GROUP_MA ou GROUP_NO vides.
      IGNORE_ALARM=('MODELISA4_80',))


MA = LIRE_MAILLAGE()

##########################################################
# MATERIAU
##########################################################
ACIER=DEFI_MATERIAU(ELAS=_F(E=300000.0,
                            NU=0.,),
                    ECRO_LINE=_F(D_SIGM_EPSI=0.0,
                                 SY=300.0,),
                    );


CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=ACIER,),
                         );


##########################################################
# MODELE
##########################################################
MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=(
                     _F(TOUT='OUI',
                        PHENOMENE='MECANIQUE',
                        MODELISATION='3D',),),
                      );


##########################################################
# INSTANTS DE CALCUL ET D'ARCHIVAGE
##########################################################
INST=DEFI_LIST_REEL(DEBUT=0.,
                    INTERVALLE=_F(JUSQU_A=10.0,
                                  PAS=1.,),);
INSTANTS=DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=INST),
                        ECHEC=_F(EVENEMENT     = 'ERREUR',
                                 ACTION        = 'DECOUPE',
                                 SUBD_METHODE  = 'MANUEL',
                                 SUBD_PAS      = 4,
                                 SUBD_NIVEAU   = 4,),);
##########################################################
# CHARGEMENT
##########################################################

CLIM=AFFE_CHAR_MECA(MODELE=MO,

                    DDL_IMPO=(_F(GROUP_NO='BAS',
                                 DZ=0.),
                              _F(GROUP_NO='GAUCHE',
                                 DY=0.),
                              _F(GROUP_NO='AVANT',
                                 DX=0.),
                              ),
                                 );

TRAC=AFFE_CHAR_MECA(MODELE=MO,
                    DDL_IMPO=_F(GROUP_NO='HAUT',
                                    DZ=.001,),);

# Pour tester la possibilite de creer des charges "vides" :
# Les 2 charges suivantes sont "vides" car les groupes sont vides
CHVID1=AFFE_CHAR_MECA(MODELE=MO, DDL_IMPO=_F(GROUP_MA=('GMVID1','GMVID2') , DZ=.001,),);
CHVID2=AFFE_CHAR_MECA(MODELE=MO, DDL_IMPO=_F(GROUP_NO=('GNVID1','GNVID2') , DZ=.001,),);


CMULT=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.0,0.0,
                          1.0,1.0,
                          ),PROL_DROITE='LINEAIRE',);


##########################################################
# CALCUL
##########################################################
EVOL=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   EXCIT=(_F(CHARGE=TRAC,
                            FONC_MULT=CMULT,
                            TYPE_CHARGE='FIXE_CSTE',),
                          _F(CHARGE=CHVID1,),
                          _F(CHARGE=CHVID2,),
                          _F(CHARGE=CLIM,),),
                   COMP_INCR=_F(RELATION='VMIS_ISOT_LINE',
                                TOUT='OUI',),
                   INCREMENT=_F(LIST_INST=INSTANTS,
                                INST_FIN=10.0,),
                   NEWTON=_F(REAC_INCR=1,
                             REAC_ITER=1,),
                   CONVERGENCE=_F(RESI_GLOB_RELA=0.000001,
                                  ITER_GLOB_MAXI=20,),
                   ARCHIVAGE=_F(LIST_INST=INST),);

##########################################################
# POST-TRAITEMENT POUR CALCUL DE BORDET
##########################################################
SIGY1=DEFI_FONCTION(NOM_PARA='TEMP',VALE=(0.,00.,
                         100.,1000.,
                         ),PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',);

SIGY2=DEFI_FONCTION(NOM_PARA='TEMP',VALE=(0.,00.,
                         100.,500.,
                         ),PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',);


SIGY=DEFI_NAPPE(NOM_PARA='EPSI',
                PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                PARA=(0.0005,0.001),
                FONCTION=(SIGY1,SIGY2),);

TEMP=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.,0.,10.,100.),
                    PROL_DROITE='LINEAIRE',PROL_GAUCHE='CONSTANT',);

SIGREF=DEFI_FONCTION(NOM_PARA='TEMP',VALE=(0.,200.,
                         100.,300.,
                         ),PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',);


BORDET=POST_BORDET(
            TOUT='OUI',
            INST=5,
            PROBA_NUCL='OUI',
            PARAM=_F(M=22.,
                     SIG_CRIT=250,
                     SEUIL_REFE=300.,
                     VOLU_REFE=1.,
                     SIGM_REFE=SIGREF,
                     SEUIL_CALC=SIGY,
                     DEF_PLAS_REFE=0.001,
                     ),
            RESULTAT=EVOL,
            TEMP=TEMP,
             )

# --COMPARAISON AVEC L'ANALYTIQUE--
#
TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-3,
           VALE_CALC=211.744623474,
           VALE_REFE=211.745,
           NOM_PARA='SIG_BORDET',
           TABLE=BORDET,
           FILTRE=_F(CRIT_COMP='EQ',
                     NOM_PARA='INST',
                     VALE=2.0,),
           )

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-3,
           VALE_CALC=215.646843711,
           VALE_REFE=215.63999999999999,
           NOM_PARA='SIG_BORDET',
           TABLE=BORDET,
           FILTRE=_F(CRIT_COMP='EQ',
                     NOM_PARA='INST',
                     VALE=3.0,),
           )

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-3,
           VALE_CALC=217.762188699,
           VALE_REFE=217.75,
           NOM_PARA='SIG_BORDET',
           TABLE=BORDET,
           FILTRE=_F(CRIT_COMP='EQ',
                     NOM_PARA='INST',
                     VALE=5.0,),
           )

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-3,
           VALE_CALC=0.350203245,
           VALE_REFE=0.34999999999999998,
           NOM_PARA='PROBA_BORDET',
           TABLE=BORDET,
           FILTRE=_F(CRIT_COMP='EQ',
                     NOM_PARA='INST',
                     VALE=2.0,),
           )

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-3,
           VALE_CALC=0.215171653,
           VALE_REFE=0.215,
           NOM_PARA='PROBA_BORDET',
           TABLE=BORDET,
           FILTRE=_F(CRIT_COMP='EQ',
                     NOM_PARA='INST',
                     VALE=3.0,),
           )

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=3.0000000000000001E-3,
           VALE_CALC=0.046833881,
           VALE_REFE=0.046699999999999998,
           NOM_PARA='PROBA_BORDET',
           TABLE=BORDET,
           FILTRE=_F(CRIT_COMP='EQ',
                     NOM_PARA='INST',
                     VALE=5.0,),
           )

FIN();
