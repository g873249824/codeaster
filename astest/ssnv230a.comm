# TITRE : VALIDATION DU COMPORTEMENT DES ACIERS 300 SOUS CHARGEMENTS THERMIQUE ET D'IRRADIATION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#
#  VALIDATION ELEMENTAIRE SUR UN ELEMENT 3D DE LA LOI DE COMPORTEMENT
#

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'))

MAIL=LIRE_MAILLAGE();

MODEL=AFFE_MODELE(
   MAILLAGE=MAIL,
   AFFE=_F(TOUT='OUI', PHENOMENE='MECANIQUE', MODELISATION='3D',),
);

# DEFINITION DU MATERIAU
YOUNG1 = FORMULE(NOM_PARA='TEMP', VALE='210000.0 - 30.0*TEMP', );
NU1    = FORMULE(NOM_PARA='TEMP', VALE='0.30 + 5.0E-05*TEMP', );
ALPHA1 = FORMULE(NOM_PARA='TEMP', VALE='1.0E-06*(15.0+2.0E-03*TEMP)',);
R021   = FORMULE(NOM_PARA=('TEMP','IRRA',),
    VALE='(270.0-0.65*TEMP+0.001*TEMP**2)*(4.0-3.0*exp(-IRRA/3.0))', );

RM1 = FORMULE(NOM_PARA=('TEMP','IRRA',),
    VALE='''R021(TEMP,IRRA)+((600.0-1.5*TEMP+0.010*TEMP**2)
            -(270.00-0.65*TEMP+0.001*TEMP**2))*0.50*
            (0.005-0.0020*(1.0-exp(-IRRA/8.0))+exp(-IRRA/3.0))''', );

EU1 = FORMULE(NOM_PARA=('TEMP','IRRA',),
    VALE='''log(1.0+((60.0-0.15*TEMP+0.0007*TEMP**2)*exp(-IRRA))*1.0E-02)''', );

TEM=DEFI_LIST_REEL(
   DEBUT=0.0,
   INTERVALLE=_F(JUSQU_A=400.0, PAS=40.0,),
)

# POUR VALIDER LES DEUX METHODES ON INTERPOLE SEULEMENT UNE PARTIE
# DES PARAMETRES MATERIAUX
YOUNG=CALC_FONC_INTERP(FONCTION=YOUNG1,LIST_PARA=TEM,
   PROL_GAUCHE='CONSTANT',
   PROL_DROITE='CONSTANT',
);
NU=CALC_FONC_INTERP(FONCTION=NU1,LIST_PARA=TEM,
   PROL_GAUCHE='CONSTANT',
   PROL_DROITE='CONSTANT',
);
ALPHA=CALC_FONC_INTERP(FONCTION=ALPHA1,LIST_PARA=TEM,
   PROL_GAUCHE='CONSTANT',
   PROL_DROITE='CONSTANT',
);

UN   =DEFI_CONSTANTE(VALE = 1.0)

IRRA_0=CREA_CHAMP(TYPE_CHAM='NOEU_IRRA_R', OPERATION='AFFE', MAILLAGE=MAIL,
   AFFE=_F( TOUT='OUI', NOM_CMP='IRRA', VALE=0.0,),
);

IRRA_1=CREA_CHAMP(TYPE_CHAM='NOEU_IRRA_R', OPERATION='AFFE', MAILLAGE=MAIL,
   AFFE=_F( TOUT='OUI', NOM_CMP='IRRA', VALE=140.0,),);

IRRA=CREA_RESU(
   OPERATION='AFFE',
   TYPE_RESU='EVOL_VARC',
   NOM_CHAM='IRRA',
   AFFE=(
      _F(CHAM_GD=IRRA_0, INST=   0.0,),
      _F(CHAM_GD=IRRA_0, INST= 100.0,),
      _F(CHAM_GD=IRRA_1, INST= 200.0,),
   ),
);

ACIER=DEFI_MATERIAU(
   ELAS_FO=_F(E=YOUNG, NU=NU, ALPHA=ALPHA, TEMP_DEF_ALPHA=0., ),
   IRRAD3M=_F(R02=R021, RM=RM1, EPSI_U=EU1, AI0=3.00E-6, ETAI_S=1000.0,
              RG0=0.0020, ZETA_F=UN, ALPHA=1.0, PHI0=45.0, KAPPA=0.8, ZETA_G=UN,
              TOLER_ET = 0.1E-02),
);


CL=AFFE_CHAR_MECA(
   MODELE=MODEL,
   DDL_IMPO=(
      _F(GROUP_MA='FACE1', DX=0.0, DY=0.0, DZ=0.0),
      _F(GROUP_MA='FACE2', DX=0.0, DY=0.0),
   ),
);

TEMP_0=CREA_CHAMP(TYPE_CHAM='NOEU_TEMP_R', OPERATION='AFFE', MAILLAGE=MAIL,
   AFFE=_F(TOUT='OUI', NOM_CMP='TEMP', VALE=0.0,),
);

TEMP_1=CREA_CHAMP(TYPE_CHAM='NOEU_TEMP_R', OPERATION='AFFE', MAILLAGE=MAIL,
   AFFE=_F(TOUT='OUI', NOM_CMP='TEMP', VALE=400.0,),
);

TEMPE=CREA_RESU(
   OPERATION='AFFE',
   TYPE_RESU='EVOL_THER',
   NOM_CHAM='TEMP',
   AFFE=(
      _F(CHAM_GD=TEMP_0, INST=   0.0,),
      _F(CHAM_GD=TEMP_1, INST= 100.0,),
      _F(CHAM_GD=TEMP_1, INST= 200.0,),
   ),
);

# AFFECTATION DU CHAMP DE MATERIAU ET DES VARIABLES DE COMMANDE
CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
   AFFE=_F(TOUT='OUI', MATER=ACIER,),
   AFFE_VARC=(_F(TOUT='OUI', EVOL=IRRA, NOM_VARC='IRRA',),
              _F(TOUT='OUI', EVOL =TEMPE,  NOM_VARC='TEMP', VALE_REF=0.0),),
);


# CALCUL AVEC STAT_NON_LINE. VALIDATION DE LA MATRICE TANGENTE EN 3D AINSI
# QUE DU REDECOUPAGE AUTOMATIQUE DU PAS DE TEMPS.
# LE NOMBRE D ITERATION INTERNE EST IMPORTANT CAR IL PERMET DE CALCULER
# AUSSI LES PARAMETRES MATERIAUX DE LA PARTIE PLASTIQUE DE LA LOI
LISTE1=DEFI_LIST_REEL(DEBUT=0.,
   INTERVALLE=(_F(JUSQU_A = 100.0, NOMBRE=    5,),
               _F(JUSQU_A = 110.0, NOMBRE=   40,),
               _F(JUSQU_A = 200.0, NOMBRE=  180,),
              ),
);

DEFLIST1 =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = LISTE1),
                        ECHEC=_F(ACTION        = 'DECOUPE',
                                 SUBD_METHODE  = 'MANUEL',
                                 SUBD_NIVEAU=5,),)

STAT1=STAT_NON_LINE(
   MODELE=MODEL,
   CHAM_MATER=CHMAT,
   EXCIT= _F(CHARGE=CL,),
   CONVERGENCE=_F(ITER_GLOB_MAXI=15),
   COMPORTEMENT=(
      _F(DEFORMATION='PETIT', TOUT='OUI',
         ALGO_INTE='NEWTON_RELI',
         RELATION='IRRAD3M',ITER_INTE_PAS = 0, ITER_INTE_MAXI = 120,
         RESI_INTE_RELA=1.0E-09,
      ),
   ),
   NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,REAC_INCR=1),
   INCREMENT=_F(LIST_INST=DEFLIST1,),
);


# LISTE D'INSTANT DIFFERENTE
LISTE2=DEFI_LIST_REEL(DEBUT=0.,
   INTERVALLE=(_F(JUSQU_A = 100.0, NOMBRE=    5,),
               _F(JUSQU_A = 110.0, NOMBRE=   10,),
               _F(JUSQU_A = 200.0, NOMBRE=   90,),
              ),
);

DEFLIST2 =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = LISTE2),
                        ECHEC=_F(ACTION        = 'DECOUPE',
                                 SUBD_METHODE  = 'MANUEL',
                                 SUBD_NIVEAU   = 7,),)


STAT2=STAT_NON_LINE(
   MODELE=MODEL,
   CHAM_MATER=CHMAT,
   EXCIT=(
      _F(CHARGE=CL,),
   ),
   CONVERGENCE=_F(ITER_GLOB_MAXI=15),
   COMPORTEMENT=(
      _F(DEFORMATION='PETIT', TOUT='OUI',
         ALGO_INTE='NEWTON_RELI',
         RELATION='IRRAD3M',ITER_INTE_PAS = 0, ITER_INTE_MAXI = 120,
         RESI_INTE_RELA=1.0E-09,
      ),
   ),
   NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,REAC_INCR=1),
   INCREMENT=_F(LIST_INST=DEFLIST2),
);


# Valeurs de references
itps  = 0; icha  = 1; icmp  = 2; irefe = 3; icrit = 4; iprec = 5
REFER1= [
#   INST   NOM_CHAM      NOM_CMP  VALE
   ( 20.0 , 'SIEF_ELGA' , 'SIYY' , -222.67959881162 , ),
   (100.0 , 'SIEF_ELGA' , 'SIYY' , -202.67037648379 , ),
   (200.0 , 'SIEF_ELGA' , 'SIYY' , -444.44707804246 , ),

   (100.0 , 'VARI_ELGA' , 'V1'   ,  0.011247909027557 , ),

   (110.0 , 'VARI_ELGA' , 'V2'   ,  1455.2463113286 , ),
   (200.0 , 'VARI_ELGA' , 'V2'   ,  42668.66550501  , ),

   (200.0 , 'VARI_ELGA' , 'V4'   ,  0.063333333333333 , ),

   (110.0 , 'VARI_ELGA' , 'V3'   ,  1.3657389339857E-03 , ),
   (200.0 , 'VARI_ELGA' , 'V3'   ,  0.12500599651503    , ),
]


REFER2= [
#   INST   NOM_CHAM      NOM_CMP  VALE
   ( 20.0 , 'SIEF_ELGA' , 'SIYY' , -222.67959881162 , ),
   (100.0 , 'SIEF_ELGA' , 'SIYY' , -202.67037648379 , ),
   (200.0 , 'SIEF_ELGA' , 'SIYY' , -444.4432383318  , ),

   (100.0 , 'VARI_ELGA' , 'V1'   ,  0.011247909027557 , ),

   (110.0 , 'VARI_ELGA' , 'V2'   ,  1456.1956253586 , ),
   (200.0 , 'VARI_ELGA' , 'V2'   ,  42668.670465942 , ),

   (200.0 , 'VARI_ELGA' , 'V4'   ,  0.063333333333333   , ),

   (110.0 , 'VARI_ELGA' , 'V3'   ,  1.3685868760758E-03 , ),
   (200.0 , 'VARI_ELGA' , 'V3'   ,  0.12500601139783    , ),
]

for ii in range(len(REFER1)):
   TEST_RESU(
      RESU= _F(RESULTAT=STAT1, INST=REFER1[ii][itps], MAILLE='M1', POINT=1,
               NOM_CHAM=REFER1[ii][icha], NOM_CMP=REFER1[ii][icmp],
               VALE_CALC=REFER1[ii][irefe],),
   )

for ii in range(len(REFER2)):
   TEST_RESU(
      RESU= _F(RESULTAT=STAT2, INST=REFER2[ii][itps], MAILLE='M1', POINT=1,
               NOM_CHAM=REFER2[ii][icha], NOM_CMP=REFER2[ii][icmp],
               VALE_CALC=REFER2[ii][irefe],),
   )

FIN();
