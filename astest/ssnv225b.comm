# MODIF  DATE 18/06/2012   AUTEUR PROIX J-M.PROIX 
# TITRE VALIDATION LOI HAYHURST IMPLICITE SUR ESSAI DE FLUAGE
# ssnv225b.para = tps_job 300 mem_job 128Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(NOM='SSNV225B',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'));


#########################################################
######### DEFINITION DES PARAMETRES MATERIAUX ###########
#########################################################

#temperature de travail en degres celsius
Tdegc=600;

#ATTENTION : f en h-1 et non en %/h
feps=5.2e7;
Qeps=3e5;
aK = -3.3e-2;
bK = 38.5;
fA = 9e4;
QA = 2e5;
f0 = 3.5e-2;
Q0 = -4.85e4;

########################################
######### DEFINITION DU CHARGEMENT #####
########################################

#niveau de contrainte nominal
sigmap = 160;


#  temps final
tref=4000;

#######################################################

#quelques calculs intermediaires
ep0val=feps*exp(-Qeps/(8.314*(Tdegc+273.)));
Kcoef=aK*(Tdegc+273.)+bK;
A0 = fA*exp(-QA/(8.314*(Tdegc+273.)));
sig0val = f0*exp(-Q0/(8.314*(Tdegc+273.)));


MAT=DEFI_MATERIAU(ELAS=_F(E=145000.0,
                          NU=0.3,
                                 ALPHA=1e-5,),
                   HAYHURST=_F(EPS0=ep0val,
                               K=Kcoef,
                               H1=30000.0,
                               H2=-280.,
                               DELTA1=1.0,
                               DELTA2=0.0,
                               H1ST=0.33,
                               H2ST=1.0,
                               KC=0.0,
                               BIGA = A0,
                               SIG0 = sig0val,
                               ALPHAD = 0.5,),);


char=DEFI_FONCTION(NOM_PARA='INST',VALE=(0,0,
                         0.2,sigmap,
                         100000000,sigmap,
                         ),);


lalist=DEFI_LIST_REEL(DEBUT=0,
                      INTERVALLE=(_F(JUSQU_A=tref,
                                    NOMBRE=500,
                                   #  NOMBRE=100,
                                     ),),);
                                     
listtps = DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=lalist,),                          
                         ECHEC=_F(SUBD_NIVEAU=10,
                                  SUBD_METHODE='MANUEL',
                                  SUBD_PAS=10,
                                  EVENEMENT='ERREUR',
                                  SUBD_PAS_MINI=0.0,
                                  ACTION='DECOUPE'),
                                  )
                                     
listarch=DEFI_LIST_REEL(DEBUT=0,
                      INTERVALLE=(_F(JUSQU_A=tref,NOMBRE=100,),),); 

                                     
soluce=SIMU_POINT_MAT(MATER=MAT,INFO=1,
                     SIGM_IMPOSE=_F(SIYY=char),
                     SUPPORT='ELEMENT',
                     COMP_INCR=_F(RELATION='HAYHURST',
                                  DEFORMATION='GDEF_LOG',
                                  ALGO_INTE='NEWTON_PERT',
                                  ),
                     INCREMENT=_F(LIST_INST=listtps,),
                     NEWTON=_F(REAC_ITER=1,
                               PREDICTION='EXTRAPOLE',
                               ),
                     CONVERGENCE=_F(ITER_GLOB_MAXI=20),
                     ARCHIVAGE=_F(LIST_INST=listarch,),
                     );

epsYY=RECU_FONCTION(TABLE=soluce,
                   PARA_X='INST',
                   PARA_Y='EPYY',
                   INTERPOL='LIN');

endo=RECU_FONCTION(TABLE=soluce,
                   PARA_X='INST',
                   PARA_Y='V11',
                   INTERPOL='LIN');

IMPR_FONCTION(
            FORMAT='XMGRACE',
            COURBE=(_F(FONCTION=epsYY,
                       COULEUR= 0,
                       LEGENDE= 'EPYY',),),
            UNITE=36,
            TITRE='Espilon = f(INST)');

IMPR_FONCTION(
            FORMAT='XMGRACE',
            COURBE=(_F(FONCTION=endo,
                        COULEUR= 0,
                        LEGENDE= 'endo',),),
            UNITE=35,
            TITRE='endo = f(INST)');


#fluage secondaire
tsec=2000
TEST_FONCTION(VALEUR=_F(FONCTION=epsYY,
                        NOM_PARA='INST',
                        VALE_PARA=tsec,
                        VALE_REFE=2.12490E-02,
                        REFERENCE='NON_REGRESSION',),);

TEST_FONCTION(VALEUR=_F(FONCTION=endo,
                        NOM_PARA='INST',
                        VALE_PARA=tsec,
                        VALE_REFE=3.23452E-02,
                        REFERENCE='NON_REGRESSION',),);

# fluage tertiaire
tter=4000
TEST_FONCTION(VALEUR=_F(FONCTION=epsYY,
                        NOM_PARA='INST',
                        VALE_PARA=tter,
                        VALE_REFE=5.24015E-02,
                        REFERENCE='NON_REGRESSION',),);

TEST_FONCTION(VALEUR=_F(FONCTION=endo,
                        NOM_PARA='INST',
                        VALE_PARA=tter,
                        VALE_REFE=6.82559E-02,
                        REFERENCE='NON_REGRESSION',),);

IMPR_TABLE(TABLE=soluce)

depsdt = CALC_FONCTION( DERIVE=_F( FONCTION= epsYY ),)

IMPR_FONCTION(
            FORMAT='XMGRACE',
            COURBE=(_F(FONCTION=depsdt,
                        COULEUR= 0,
                        LEGENDE= 'depsdt',),),
            UNITE=38,
            TITRE='depsdt = f(INST)');

tvit = 1520.


TEST_FONCTION(VALEUR=_F(FONCTION=depsdt,
                        NOM_PARA='INST',
                        VALE_PARA=tvit,
                        VALE_REFE=6.737E-6,
                        REFERENCE='NON_REGRESSION',),);
                        
FIN();

