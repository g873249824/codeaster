# TITRE : CONDITIONS DE DIRCIHLET SUR DES ELEMENTS XFEM
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
#       CAS_TEST SSNV245D: 3D, ELEMENTS H20, XFEM

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))
              
#----------------------------------------------
#                   MAILLAGE
#----------------------------------------------
# precision
n = 1000.0;

# dimensions de la structure
lx = 1.0;
ly = 5.0;

MAILLAG1=LIRE_MAILLAGE(FORMAT='MED',INFO=1,);

MAILLAG2=CREA_MAILLAGE(MAILLAGE  = MAILLAG1,
                       LINE_QUAD = _F(TOUT='OUI'),
                      );

MAILLAG2=DEFI_GROUP(reuse =MAILLAG2,
                    MAILLAGE=MAILLAG2,
                    CREA_GROUP_NO=(_F(GROUP_MA='VOL'),
                                   _F(GROUP_MA='Face_inf'),
                                   _F(GROUP_MA='Face_sup'),
                                   _F(GROUP_MA='Face_lat1'),
                                   _F(GROUP_MA='Face_lat2'),
                                   _F(GROUP_MA='Face_lat3'),
                                   _F(GROUP_MA='Face_lat4'),
                                  ),
                    INFO=2,
                   );

#----------------------------------------------
#                   MODELE ET FISSURE
#----------------------------------------------

MO=AFFE_MODELE(MAILLAGE=MAILLAG2,
               AFFE=_F(GROUP_MA='VOL',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),
              );

LS_N=FORMULE(NOM_PARA=('X','Y','Z'),VALE='Z-2.5');

FISS=DEFI_FISS_XFEM(MAILLAGE=MAILLAG2,
                    TYPE_DISCONTINUITE='INTERFACE',
                    DEFI_FISS=_F(FONC_LN=LS_N,),
                    INFO=1,
                   );

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MO,
                         FISSURE=FISS,
                         INFO=1,
                        );

#----------------------------------------------
#                   MATERIAU
#----------------------------------------------
UNM3 = DEFI_CONSTANTE(VALE = 1.0E-3,);

ZERO = DEFI_CONSTANTE(VALE = 0.0,);

KINT = DEFI_CONSTANTE(VALE = 1.01937E-19,);

SOL  = DEFI_MATERIAU(ELAS      = _F(E           = 5800.0E6,
                                    NU          = 0.,
                                    ALPHA       = 0.0,),
                    );

CHAMPMAT=AFFE_MATERIAU(MAILLAGE=MAILLAG2,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT='OUI',
                               MATER=SOL,
                              ),
                      );

#IMPR_RESU(RESU=_F(MAILLAGE=MAILLAG2,),)

#----------------------------------------------
#                   CHARGEMENTS
#----------------------------------------------

#     3
#    ---
#   |   |
#   |   |
#   |   |
# 4 |   | 2
#   |   |
#   |   |
#   |   |
#    ---
#     1

def depx(x,y,z) :
   if z > 2.5:           return  -0.01*(z-5.0)**2
   if z < 2.5:           return  0.01*z**2



def depn(x,y,z) :
   return 0.

def depy(x,y,z) :
   if z > 2.5:           return  0.01*(5.0-z)
   if z < 2.5:           return  -0.01*z


DEPL_X = FORMULE(VALE='depx(X,Y,Z)',
                  NOM_PARA=('X','Y','Z'),);
DEPL_N = FORMULE(VALE='depn(X,Y,Z)',
                  NOM_PARA=('X','Y','Z'),);
DEPL_Z = FORMULE(VALE='depy(X,Y,Z)',
                  NOM_PARA=('X','Y','Z'),);

CH=AFFE_CHAR_MECA_F(MODELE=MODELEK,
                  DDL_IMPO=(
                            _F(TOUT='OUI', DZ=DEPL_Z,),
                           ),
                  INFO=2,
                 );

CH2=AFFE_CHAR_MECA_F(MODELE=MODELEK,
                    DDL_IMPO=(_F(GROUP_NO='Face_lat2',DX=DEPL_X,),
                             ),
                    INFO=2,
                   );

CH3=AFFE_CHAR_MECA_F(MODELE=MODELEK,
                    DDL_IMPO=(_F(GROUP_NO='Face_lat4',DX=DEPL_N,),
                             ),
                    INFO=2,
                   );

CH4=AFFE_CHAR_MECA_F(MODELE=MODELEK,
                    DDL_IMPO=(_F(TOUT='OUI',DY=DEPL_N,),
                             ),
                    INFO=2,
                   );

#----------------------------------------------
#                   RESOLUTION
#----------------------------------------------

MULT=DEFI_FONCTION(NOM_PARA='INST',
                   PROL_DROITE='CONSTANT',
                   PROL_GAUCHE='CONSTANT',
                   VALE=( 0.0,  0.0,
                          3.0,  1.0,)
                  )

L_INS=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=3.0,NOMBRE=1,),
                    );

UTOT1=STAT_NON_LINE(MODELE      = MODELEK,
                    CHAM_MATER  = CHAMPMAT,
                    EXCIT       = (_F(CHARGE = CH   ),
                                   _F(CHARGE = CH2   ),
                                   _F(CHARGE = CH3   ),
                                   _F(CHARGE = CH4   ),
                                   ),
                    COMPORTEMENT   = _F(RELATION       = 'ELAS',
                                        RESI_INTE_RELA = 1.E-6,
                                        ITER_INTE_PAS  = -10,
                                        ITER_INTE_MAXI = 100,
                                       ),
                    NEWTON      = _F(MATRICE   = 'TANGENTE',
                                     REAC_ITER = 1, 
                                    ),
                    CONVERGENCE = _F(RESI_GLOB_RELA = 1.E-6,
                                     ITER_GLOB_MAXI = 100,    
                                    ),
                    INCREMENT   = _F(LIST_INST = L_INS,),
                    INFO=2,
                   )

# -------------------------------------------------------------   
#            POST-TRAITEMENT POUR LA VISUALISATION X-FEM   
# -------------------------------------------------------------   

MA_XFEM=POST_MAIL_XFEM(MODELE = MODELEK)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=(_F(TOUT='OUI',
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D',),),
                    );  

RES_X1=POST_CHAM_XFEM(MODELE_VISU = MOD_VISU,
                      RESULTAT    = UTOT1,
                     );


#MODELIN=AFFE_MODELE(MAILLAGE=MA_XFEM,
#                    AFFE=_F(TOUT='OUI',
#                            PHENOMENE='MECANIQUE',
#                            MODELISATION='3D',
#                           ),
#                   );
#IMPR_RESU(FORMAT='MED',
#  UNITE=80,
#  RESU= (_F(MAILLAGE=MA_XFEM,
#                    RESULTAT = RES_X1,
#                    NOM_CHAM = ('DEPL',),
#                    NOM_CMP  = ('DX','DY','DZ'),
#                   ),
#                ),
#         )


# -------------------------------------------------------------   
#            TEST_TABLE
# -------------------------------------------------------------   

DEP1=POST_RELEVE_T(ACTION=_F(INTITULE='DEPLE',
                             GROUP_NO=('NFISSU',),
                             RESULTAT=RES_X1,
                             NOM_CHAM='DEPL',
                             NUME_ORDRE=1,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

#IMPR_TABLE(TABLE=DEP1,);

DEP1P = CALC_TABLE(TABLE = DEP1,
                   ACTION = (_F(OPERATION = 'FILTRE',
                                NOM_PARA  = 'NOEUD',
                                CRIT_COMP = 'REGEXP',
                                VALE_K    = 'N[^P]',
                               ),
                            ),
                  );


DEP1M = CALC_TABLE(TABLE = DEP1,
                   ACTION = (_F(OPERATION = 'FILTRE',
                                NOM_PARA  = 'NOEUD',
                                CRIT_COMP = 'REGEXP',
                                VALE_K    = 'N[^M]',
                               ),
                            ),
                  );

#IMPR_TABLE(TABLE=DEP1P,);

#IMPR_TABLE(TABLE=DEP1M,);

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-5,
           VALE_CALC=-0.02499999,
           VALE_REFE=-2.5E-02,
           NOM_PARA='DZ',
           TYPE_TEST='MIN',
           TABLE=DEP1P,)

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-5,
           VALE_CALC=0.02499999,
           VALE_REFE=2.5E-02,
           NOM_PARA='DZ',
           TYPE_TEST='MAX',
           TABLE=DEP1M,)

DEP2 = CALC_TABLE(TABLE = DEP1,
                   ACTION = (_F(OPERATION = 'FILTRE',
                                NOM_PARA  = 'NOEUD',
                                VALE_K    = 'NP67',
                               ),
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-5,
           VALE_CALC=-0.06249995,
           VALE_REFE=-6.25E-2,
           NOM_PARA='DX',
           TABLE=DEP2,)

DEP3 = CALC_TABLE(TABLE = DEP1,
                   ACTION = (_F(OPERATION = 'FILTRE',
                                NOM_PARA  = 'NOEUD',
                                VALE_K    = 'NM55',
                               ),
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-5,
           VALE_CALC=0.06249995,
           VALE_REFE=6.25E-2,
           NOM_PARA='DX',
           TABLE=DEP3,)

FIN();
