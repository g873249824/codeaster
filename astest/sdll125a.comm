# MODIF  DATE 22/12/2009   AUTEUR TORKHANI M.TORKHANI 
# RESPONSABLE TORKHANI M.TORKHANI
# TITRE DIAGRAMME DE CAMPBELL D'UNE LIGNE D'ARBRE SIMPLIFIEE
# sdll125a.para = tps_job 300 mem_job 128Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2009  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# CAS_TEST__:SDLL125A
#

DEBUT(CODE=_F(NOM='SDLL125A', NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),
      DEBUG=_F(SDVERI='OUI'),);

mail=LIRE_MAILLAGE();

# ---------------------
# DEFINITION DU MATERIAU
# ---------------------
acier=DEFI_MATERIAU(ELAS=_F(E=2.e11,
                            NU=0.3,
                            RHO=7800,),);

# ---------------------
# AFFECTATION DU MODELE
# ---------------------
modele=AFFE_MODELE(MAILLAGE=mail,
                   AFFE=(_F(GROUP_MA='ROTOR',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='POU_D_T',),
                         _F(GROUP_MA=('DISQ1','DISQ2','PALIER1','PALIER2'),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_TR',),),);

# -----------------------
# AFFECTATION DU MATERIAU
# -----------------------
chmat=AFFE_MATERIAU(MAILLAGE=mail,
                    AFFE=_F(GROUP_MA='ROTOR',
                            MATER=acier,),);

# --------------------------------
# DEF DES SECTIONS et des RAIDEURS
# --------------------------------
cara=AFFE_CARA_ELEM(MODELE=modele,
                    POUTRE=(_F(GROUP_MA='SA1',
                              SECTION='CERCLE',
                              CARA='R',
                              VALE=0.02,),
                            _F(GROUP_MA='SA2',
                              SECTION='CERCLE',
                              CARA=('R','EP'),
                              VALE=(0.035,0.03,),),
                            _F(GROUP_MA='SA3',
                              SECTION='CERCLE',
                              CARA=('R','EP'),
                              VALE=(0.02,0.015,),),),
                    DISCRET=(_F(CARA='M_TR_D_N',
                                GROUP_MA='DISQ1',
                                VALE=(3.50E+00,7.00E-03, 
                                3.50E-03,3.50E-03,0,0,0,0,0,0,),),
                             _F(CARA='M_TR_D_N',
                                GROUP_MA='DISQ2',
                                VALE=(3.00E+00,6.00E-03, 
                                3.00E-03,3.00E-03,0,0,0,0,0,0,),),
                             _F(GROUP_MA='PALIER1',
                                   CARA='K_TR_N',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   8.0E7,   6.0E7,   0.,
                                   0.,   0.,   0.,   1.0E7,   1.0E8,   0.,   0.,   0.,   0.,   0.,
                                   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                   0.,   0.,   0.,   0.,   0.,   0.,),),
                             _F(GROUP_MA='PALIER1',
                                   CARA='A_TR_N',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   8.0E3,   3.0E3,   0.,
                                   0.,   0.,   0.,   3.0E3,   1.2E4,   0.,   0.,   0.,   0.,   0.,
                                   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                   0.,   0.,   0.,   0.,   0.,   0.,),),
                             _F(GROUP_MA='PALIER2',
                                   CARA='K_TR_N',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   5.0E7,   4.0E7,   0.,
                                   0.,   0.,   0.,   2.0E6,   7.0E7,   0.,   0.,   0.,   0.,   0.,
                                   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                   0.,   0.,   0.,   0.,   0.,   0.,),),
                             _F(GROUP_MA='PALIER2',
                                   CARA='A_TR_N',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   6.0E3,   1.5E3,   0.,
                                   0.,   0.,   0.,   1.5E3,   8.0E3,   0.,   0.,   0.,   0.,   0.,
                                   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                   0.,   0.,   0.,   0.,   0.,   0.,),),
                           )
                        );

# ------------------
# CONDITIONS AUX LIMITES
# ------------------
blocage=AFFE_CHAR_MECA(MODELE=modele,
                        DDL_IMPO=(_F(GROUP_NO=('PALIER1',),
                                     DX=0,
                                     ),))
                                    
# --------------------------------
#MATRICES ASSEMBLEES K, M
# --------------------------------
MACRO_MATR_ASSE(MODELE=modele,
                CHAM_MATER=chmat,
                CARA_ELEM=cara,
                CHARGE=blocage,
                NUME_DDL=CO('NUMEDDL'),
                MATR_ASSE=(_F(MATRICE=CO('RIGIDITE'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSE'),
                              OPTION='MASS_MECA',),
                           _F(MATRICE=CO('AMOR'),
                              OPTION='AMOR_MECA',),),);
                              
              

GYELEM=CALC_MATR_ELEM(OPTION='MECA_GYRO',
                      MODELE=modele,
                      CHAM_MATER=chmat,
                      CARA_ELEM=cara,);

GYASS=ASSE_MATRICE(MATR_ELEM=GYELEM,
                   NUME_DDL=NUMEDDL,);

DEBV=0.0;
FINV=60000;
PASV = 5000.0;
VIT=Numeric.arange(DEBV,FINV+1,PASV);
nbF=20;
nbF_camp=10;
nbV=len(VIT);

# --------------------------------------------------------------
# APPEL MACRO DE CALCUL DES FREQUENCES ET DES MODES EN ROTATION
# --------------------------------------------------------------

L_VITROT=[VIT[ii]*pi/30. for ii in range(nbV)];
Methode = 'QZ'
#Methode = 'SORENSEN'

l_mod=CALC_MODE_ROTATION(MATR_A =RIGIDITE,
                 MATR_B   =MASSE, 
                 MATR_AMOR=AMOR, 
                 MATR_GYRO =GYASS, 
                 VITE_ROTA =L_VITROT,
                 METHODE  =Methode,
                 CALC_FREQ=_F(OPTION='PLUS_PETITE',NMAX_FREQ=nbF),
                 VERI_MODE=_F(STOP_ERREUR='NON'));

IMPR_TABLE(TABLE=l_mod);

lmod=[None]*nbV
for ii in range(0,nbV):
   lmod[ii]=EXTR_TABLE(TYPE_RESU='MODE_MECA',
                       TABLE=l_mod,
                       NOM_PARA='NOM_SD',
                       FILTRE=_F(NOM_PARA='NUME_VITE',VALE_I=ii),);
   IMPR_RESU(FORMAT='RESULTAT',
             RESU=_F(RESULTAT=lmod[ii],
                     NOM_PARA=('NUME_MODE','FREQ','OMEGA2'),
                     FORM_TABL='OUI'),)

#VITESSE DE ROTATION OMEGA=0
TEST_RESU(RESU=(
          _F( RESULTAT = lmod[0], PARA = 'FREQ',
                CRITERE = 'RELATIF', PRECISION = 1.E-3,
                NUME_ORDRE = 1,  VALE = 2.16210E+02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[0], PARA = 'AMOR_REDUIT',
                CRITERE = 'RELATIF', PRECISION = 1.E-3,
                NUME_ORDRE = 1,  VALE = 4.7697E-02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[0], PARA = 'FREQ',
                CRITERE = 'RELATIF', PRECISION = 1.E-3,
                NUME_ORDRE = 2,  VALE = 2.63521E+02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[0], PARA = 'AMOR_REDUIT',
                CRITERE = 'RELATIF', PRECISION = 5.E-3,
                NUME_ORDRE = 2,  VALE = 7.8851E-02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[0], PARA = 'FREQ',
                CRITERE = 'RELATIF', PRECISION = 1.E-3,
                NUME_ORDRE = 3,  VALE = 3.8321E+02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[0], PARA = 'AMOR_REDUIT',
                CRITERE = 'RELATIF', PRECISION = 1.4E-2,
                NUME_ORDRE = 3,  VALE = 5.0144E-02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[0], PARA = 'FREQ',
                CRITERE = 'RELATIF', PRECISION = 1.E-3,
                NUME_ORDRE = 4,  VALE = 4.3964E+02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[0], PARA = 'AMOR_REDUIT',
                CRITERE = 'RELATIF', PRECISION = 1.E-2,
                NUME_ORDRE = 4,  VALE = 6.0227E-02, REFERENCE='AUTRE_ASTER',),
            ),)

#VITESSE DE ROTATION OMEGA=60000
TEST_RESU(RESU=(
          _F( RESULTAT = lmod[12], PARA = 'FREQ',
                CRITERE = 'RELATIF', PRECISION = 1.E-3,
                NUME_ORDRE = 1,  VALE = 1.8537E+02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[12], PARA = 'AMOR_REDUIT',
                CRITERE = 'RELATIF', PRECISION = 1.1E-3,
                NUME_ORDRE = 1,  VALE = -5.1713E-02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[12], PARA = 'FREQ',
                CRITERE = 'RELATIF', PRECISION = 1.E-3,
                NUME_ORDRE = 2,  VALE = 2.9602E+02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[12], PARA = 'AMOR_REDUIT',
                CRITERE = 'RELATIF', PRECISION = 5.E-3,
                NUME_ORDRE = 2,  VALE = 1.5571E-01, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[12], PARA = 'FREQ',
                CRITERE = 'RELATIF', PRECISION = 1.E-3,
                NUME_ORDRE = 3,  VALE = 3.2472E+02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[12], PARA = 'AMOR_REDUIT',
                CRITERE = 'RELATIF', PRECISION = 7.E-2,
                NUME_ORDRE = 3,  VALE = 1.5749E-03, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[12], PARA = 'FREQ',
                CRITERE = 'RELATIF', PRECISION = 1.2E-3,
                NUME_ORDRE = 4,  VALE = 4.7254E+02, REFERENCE='AUTRE_ASTER',),
          _F( RESULTAT = lmod[12], PARA = 'AMOR_REDUIT',
                CRITERE = 'RELATIF', PRECISION = 1.E-3,
                NUME_ORDRE = 4,  VALE = 1.5968E-01, REFERENCE='AUTRE_ASTER',),
            ),)

#TYPE DE PRECESSION (1 SOMME, 2 PLUS GRANDE ORBITE)
typ_prec =1
#TYPE DE SUIVI, (0 SANS_TRI, 1 TRI_PREC, 2 TRI_FORM_MOD)
typ_tri=2

# UNITES DES FICHIERS DE SORTIE DES TRACES
unit_fle = 29;
unit_tor = 28; 
uniy_lon = 27;
unit_tot = 26;
unit_int = 25;
nomfic   = 'intersec.txt'

L_S=[1.0, 1.0];
# ---------------------------------------------------
# APPEL MACRO PERMETTANT DE TRACER LE DIAGRAMME DE CAMPBELL
# ---------------------------------------------------
IMPR_DIAG_CAMPBELL(MAILLAGE   =mail, 
                 MODES      =l_mod,
                 NFREQ_camp =nbF_camp,
                 TYP_PREC   =typ_prec, 
                 TYP_TRI    =typ_tri,
                 UNIT_FLE   = unit_fle,
                 UNIT_TOR   = unit_tor, 
                 UNIT_LON   = uniy_lon, 
                 UNIT_TOT   = unit_tot,
                 UNIT_INT   = unit_int,
                 L_S        = L_S);

FIN();

