# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2020 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#

#       RESOLUTION D UN LAPLACIEN DANS UNE LAME DE

#FLUIDE+CALCUL D'UNE MATR_ASSE_GENE DE MASSE AJOUTEE POUR

#                        DEUX CYLINDRES

#                          COAXIAUX

#                       FAIT DE D_PLAN

#                          CALCUL 2D

#                      CALCUL MODAL EN EAU

#                       CAS TEST FDLV101A

#

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),
      IGNORE_ALARM=('MODELE1_63','MODELE1_64'))

# <MODELE1_63> : DANS UN MODELE, IL EXISTE DES ELEMENTS DE TYPE "BORD" QUI N'ONT PAS DE VOISIN AVEC RIGIDITE
# <MODELE1_64> : DANS UN MODELE, IL N'Y A AUCUN ELEMENT AVEC AVEC RIGIDITE
#  LE MODELE PROVOQUANT CES ALARMES EST UN MODELE D'INTERFACE


MAYA=LIRE_MAILLAGE(FORMAT='MED', )

EAU=DEFI_MATERIAU( THER=_F( LAMBDA = 1., RHO_CP = 1000.))

ACIER=DEFI_MATERIAU( ELAS=_F( RHO = 7800.,  NU = 0.3, E = 2.E11))

CHAMMAT1=AFFE_MATERIAU(  MAILLAGE=MAYA,AFFE=(
                       _F( GROUP_MA = 'FLUIDE', MATER = EAU),
                       _F( GROUP_MA = 'INTERFAC', MATER = EAU))   )

CHAMMAT2=AFFE_MATERIAU(  MAILLAGE=MAYA,AFFE=(
                       _F( GROUP_MA = 'CYLINDRE', MATER = ACIER),
                       _F( GROUP_MA = 'CYLEXT', MATER = ACIER))    )

FLUIDE1=AFFE_MODELE( MAILLAGE=MAYA,AFFE=(
                     _F( GROUP_MA = 'FLUIDE',
                MODELISATION = 'PLAN',  PHENOMENE = 'THERMIQUE'),
                     _F( GROUP_MA = 'INTERFAC',
                MODELISATION = 'PLAN',  PHENOMENE = 'THERMIQUE'))   )

INTERF1=AFFE_MODELE( MAILLAGE=MAYA,
                     AFFE=_F( GROUP_MA = 'INTERFAC',
                MODELISATION = 'PLAN',  PHENOMENE = 'THERMIQUE')   )

STRUCT=AFFE_MODELE( MAILLAGE=MAYA,AFFE=(
                     _F( GROUP_MA = 'CYLINDRE',
                MODELISATION = 'D_PLAN',  PHENOMENE = 'MECANIQUE'),
                     _F( GROUP_MA = 'CYLEXT',
                MODELISATION = 'D_PLAN',  PHENOMENE = 'MECANIQUE'),
                     _F( GROUP_MA = 'RESSORT',
                MODELISATION = '2D_DIS_T',  PHENOMENE = 'MECANIQUE'),
                     _F( GROUP_MA = 'RESSOREX',
                MODELISATION = '2D_DIS_T',  PHENOMENE = 'MECANIQUE'))
                          )

CHARGE=AFFE_CHAR_THER( MODELE=FLUIDE1,
                    TEMP_IMPO=_F( GROUP_NO = 'TEMPIMPO', TEMP = 0.)  )

CHAMPCAR=AFFE_CARA_ELEM( MODELE=STRUCT,
                         DISCRET_2D=(_F( GROUP_MA = 'RESSORT', CARA = 'K_T_D_N',
                                         VALE = (1.E7, 1.E7, )),
                                     _F( GROUP_MA = 'RESSORT', CARA = 'M_T_D_N',
                                         VALE = (0.0, )),
                                     _F( GROUP_MA = 'RESSOREX', CARA = 'K_T_D_N',
                                         VALE = (5.E6, 5.E6, )),
                                     _F( GROUP_MA = 'RESSOREX', CARA = 'M_T_D_N',
                                         VALE = (0.0, ))))

CHARGS=AFFE_CHAR_MECA( MODELE=STRUCT,DDL_IMPO=(
                   _F( GROUP_NO = 'ACCROCHE', DY = 0.),
                   _F( GROUP_NO = 'ACCREXT',  DY = 0.))    )

MEL_KSTR=CALC_MATR_ELEM( MODELE=STRUCT,
                               CARA_ELEM=CHAMPCAR,
                              CHAM_MATER=CHAMMAT2,  OPTION='RIGI_MECA',
                               CHARGE=(CHARGS, )
                               )

MEL_MSTR=CALC_MATR_ELEM( MODELE=STRUCT,
                               CARA_ELEM=CHAMPCAR,
                              CHAM_MATER=CHAMMAT2,  OPTION='MASS_MECA',
                               CHARGE=CHARGS       )

NUSTR=NUME_DDL(MATR_RIGI=MEL_KSTR)

MATASKS=ASSE_MATRICE( MATR_ELEM=MEL_KSTR,  NUME_DDL=NUSTR)

MATASMS=ASSE_MATRICE( MATR_ELEM=MEL_MSTR,  NUME_DDL=NUSTR)

MODES=CALC_MODES(MATR_RIGI=MATASKS,
                 OPTION='PLUS_PETITE',
                 CALC_FREQ=_F(NMAX_FREQ=2,
                              ),
                 MATR_MASS=MATASMS,
                 )

IMPR_RESU(FORMAT='MED',
          VERSION_MED='4.0.0',
          RESU=_F(RESULTAT=MODES,
                  NOM_PARA=('AMOR_REDUIT', 'FREQ',),
                  NOM_CHAM='DEPL'),)

NUMGEN=NUME_DDL_GENE(       BASE=MODES,
                             STOCKAGE='PLEIN'    )

MACRO_MATR_AJOU(MAILLAGE=MAYA,
                  GROUP_MA_FLUIDE='FLUIDE',
                  GROUP_MA_INTERF='INTERFAC',
                  FLUIDE=_F( RHO = 1000.),
                  INFO=2,
                  MODELISATION='PLAN',
                  DDL_IMPO=_F( GROUP_NO = 'TEMPIMPO',
                            PRES_FLUIDE = 0.),
                  MATR_MASS_AJOU=CO("MASSAJ"),
                  MODE_MECA=MODES,
                  NUME_DDL_GENE=NUMGEN)

MATRAJ=CALC_MATR_AJOU( MODELE_FLUIDE=FLUIDE1,
                         MODELE_INTERFACE=INTERF1,
                        OPTION='MASS_AJOU',
                         NUME_DDL_GENE=NUMGEN,
                        CHARGE=CHARGE,
                        CHAM_MATER=CHAMMAT1,
                        MODE_MECA=MODES)

MGENE=PROJ_MATR_BASE(  BASE=MODES,
                            NUME_DDL_GENE=NUMGEN,
                            MATR_ASSE=MATASMS      )

RIGGEN=PROJ_MATR_BASE(  BASE=MODES,
                             NUME_DDL_GENE=NUMGEN,
                             MATR_ASSE=MATASKS     )

MASTOT=COMB_MATR_ASSE( COMB_R=(  _F( MATR_ASSE = MGENE,
                                      COEF_R = 1.),
                                     _F( MATR_ASSE = MATRAJ,
                                      COEF_R = 1.)))

MODHUMI=CALC_MODES(MATR_RIGI=RIGGEN,
                   OPTION='PLUS_PETITE',
                   CALC_FREQ=_F(NMAX_FREQ=2,
                                ),
                   MATR_MASS=MASTOT,
                   )

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MODHUMI,
                   VALE_CALC=1.6958084013848,
                   VALE_REFE=1.696,
                   PRECISION=1.E-3,
                   REFERENCE='ANALYTIQUE',
                   CRITERE='RELATIF',
                   ),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MODHUMI,
                   VALE_CALC=4.1247255996963,
                   VALE_REFE=4.128,
                   PRECISION=1.E-3,
                   REFERENCE='ANALYTIQUE',
                   CRITERE='RELATIF',
                   ),
                ),
          )

# Test de CALC_MODES multi-bandes avec des matrices généralisées
MODHUMIM = CALC_MODES( MATR_RIGI = RIGGEN,
                       MATR_MASS = MASTOT,
                       OPTION    ='BANDE',
                       CALC_FREQ =_F( FREQ = (1., 2., 5.) ),
                      )

MODEAU=REST_GENE_PHYS(RESU_GENE=MODHUMIM,
                      MODE_MECA=MODES,
                      NOM_CHAM='DEPL')

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MODEAU,
                   VALE_CALC=1.6958084013848,
                   VALE_REFE=1.696,
                   PRECISION=1.E-3,
                   REFERENCE='ANALYTIQUE',
                   CRITERE='RELATIF',
                   ),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MODEAU,
                   VALE_CALC=4.1247255996963,
                   VALE_REFE=4.128,
                   PRECISION=1.E-3,
                   REFERENCE='ANALYTIQUE',
                   CRITERE='RELATIF',
                   ),
                ),
          )

FIN()
#
