# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET', VISU_EFICAS='NON'),
      ERREUR=_F(ERREUR_F='EXCEPTION',), IGNORE_ALARM='SUPERVIS_1', PAR_LOT='NON')
# ALARME 'SUPERVIS_1' : PAR_LOT='NON' nécessaire pour intercepter l'exception

from Utilitai.Utmess import MessageLog
import re
fmt_raison='-'*80+"""

   Exception interceptee
   Raison : %s

"""+'-'*80+'\n'


# Lecture des maillages
MA=LIRE_MAILLAGE(UNITE=20, FORMAT='ASTER',);
#
MSec22a=LIRE_MAILLAGE(UNITE=22, FORMAT='ASTER',)  # Pas la bonne section caractéristiques <=0
MSec22b=LIRE_MAILLAGE(UNITE=82, FORMAT='MED',)    # La bonne section

is_11 = 0
is_12 = 0
is_13 = 0
is_86 = 0
#
# Alarmes  POUTRE0_12 et POUTRE0_13
TSec22b=MACR_CARA_POUTRE(
    MAILLAGE=MSec22b, TABLE_CARA='OUI', GROUP_MA_BORD='Bord', NOM='TAB22b', NOEUD='N1',)
#
# POUTRE0_11  doit être émise ou pas suivant la machine
try:
    TSec22a=MACR_CARA_POUTRE(
        MAILLAGE=MSec22a, TABLE_CARA='OUI', GROUP_MA_BORD='BORDLIB', NOM='TAB22a', NOEUD='N1',)
except aster.error,err:
    print fmt_raison % str(err)
    # on vérifie que l'erreur fatale est bien celle que l'on attendait :
    if err.id_message == "POUTRE0_11": is_11 = 1

# ==================================================================================================
# Utilisation des sections pour vérification du déplacement et de la rotation
#
MODELE=AFFE_MODELE(MAILLAGE=MA,
    AFFE=_F(GROUP_MA=('GrSect22',), PHENOMENE='MECANIQUE', MODELISATION='POU_D_TGM',),)
#
# --------------------------------------------------------------------------------------------------
# cas n°1 : on ne tourne pas et on ne déplace pas la section
GF_1=DEFI_GEOM_FIBRE(
    SECTION=(
        _F(GROUP_FIBRE='GrFib22', TOUT_SECT='OUI', MAILLAGE_SECT=MSec22b,
           COOR_AXE_POUTRE = (0.0, 0.0),
        ),
    ),
)
# On se fait arrêter par "MODELISA8_6" car dans GF_1 la section n'est pas dans le repère principal
try:
    CARA1=AFFE_CARA_ELEM(
        MODELE=MODELE,
        GEOM_FIBRE=GF_1,
        POUTRE=(
            _F(SECTION='GENERALE', GROUP_MA='GrSect22', TABLE_CARA=TSec22b, NOM_SEC='TAB22b',),),
        MULTIFIBRE=(
            _F(GROUP_FIBRE='GrFib22', GROUP_MA = ('GrSect22',),),
        ),
    )
except aster.error,err:
    print fmt_raison % str(err)
    # on vérifie que l'erreur fatale est bien celle que l'on attendait :
    if err.id_message == "MODELISA8_6": is_86 = 1


# Alarme POUTRE0_12
# Alarme POUTRE0_13
infos = MessageLog.get_info_alarm()
for alr in infos:
    if (alr[0] == 'POUTRE0_12'): is_12 = alr[1]
    if (alr[0] == 'POUTRE0_13'): is_13 = alr[1]

#
# --------------------------------------------------------------------------------------------------
# cas n°2 : on tourne et on déplace la section
GF_2=DEFI_GEOM_FIBRE(
    SECTION=(
        _F(GROUP_FIBRE='GrFib22', TOUT_SECT='OUI', MAILLAGE_SECT=MSec22b,
           COOR_AXE_POUTRE = (0.0, 6.532536e-02), ANGLE=-90.0,
        ),
    ),
)
# Ca passe car tout est bien fait dans GF_2
CARA2=AFFE_CARA_ELEM(
    MODELE=MODELE,
    GEOM_FIBRE=GF_2,
    POUTRE=(
        _F(SECTION='GENERALE', GROUP_MA='GrSect22', TABLE_CARA=TSec22b, NOM_SEC='TAB22b',),),
    MULTIFIBRE=(
        _F(GROUP_FIBRE='GrFib22', GROUP_MA = ('GrSect22',),),
    ),
)

#
# ==================================================================================================
# TEST_RESU
TAB1=CREA_TABLE(
    LISTE=(
        _F(PARA='TEST',TYPE_K='K8',LISTE_K=('VAL11','VAL13','VAL12','VAL86'),),
        _F(PARA='BOOLEEN',LISTE_I=(is_11,is_13,is_12,is_86 ),),
    ),
)

TEST_TABLE(TABLE=TAB1,
    REFERENCE='ANALYTIQUE', VALE_CALC_I=is_11, VALE_REFE_I=is_11, NOM_PARA='BOOLEEN',
    FILTRE=_F(NOM_PARA='TEST', VALE_K='VAL11',), )

TEST_TABLE(TABLE=TAB1,
    REFERENCE='ANALYTIQUE', VALE_CALC_I=is_12, VALE_REFE_I=is_12, NOM_PARA='BOOLEEN',
    FILTRE=_F(NOM_PARA='TEST', VALE_K='VAL12',), )

TEST_TABLE(TABLE=TAB1,
    REFERENCE='ANALYTIQUE', VALE_CALC_I=is_13, VALE_REFE_I=is_13, NOM_PARA='BOOLEEN',
    FILTRE=_F(NOM_PARA='TEST', VALE_K='VAL13',), )

TEST_TABLE(TABLE=TAB1,
    REFERENCE='ANALYTIQUE', VALE_CALC_I=1, VALE_REFE_I=1, NOM_PARA='BOOLEEN',
    FILTRE=_F(NOM_PARA='TEST', VALE_K='VAL86',), )

FIN()
