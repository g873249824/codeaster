# MODIF  DATE 26/09/2011   AUTEUR NISTOR I.NISTOR 
# TITRE SENSIBILITE AUX MATERIAUX EN DYNAMIQUE HARMONIQUE ISOTROPE 3D
# sensd02a.para = tps_job 60 mem_job 32Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# ======================================================================
DEBUT(CODE=_F(NOM='SENSD02A', NIV_PUB_WEB='INTERNET', VISU_EFICAS='NON'), DEBUG=_F(SDVERI='NON'))
# ----------------------------------------------------------------------
#                 *-------------------------------*
#               /                               / !
#          J  /                            OPPOSE !
#           *-------------------------------*     !
#           !               !               !     !
#           !               !               !     !
#           !               !               !     !
#           !               * CENTRE        !     !
#           !               !               !     *
#           !               !               !   /
#           !               !               ! /
#           *-------------------------------*
#       ORIGINE                              I
#
#              1   < X < 11
#             -1.5 < Y <  1.5
#              0.  < Z < 1.
#
# Chargement par une force nodale au noeud OPPOSE calcule
# avec CALC_VECT_ELEM et un ASSE_VECTEUR
# Calcul des derives des champs resulat par rapport a E et NU
# La solution de reference de sensibilite parvient
# d'un calcul par differences finies.
# ----------------------------------------------------------------------
#
# 2. Definition des parametres sensibles
#
mot_cle =[   "E", "NU" ]
sensible=[3.6E10,  0.2 ]

n=len(sensible)
PS=[None]*n


for i in range(n):
  PS[i]=DEFI_PARA_SENSI(VALE=sensible[i])

ALPHA=DEFI_PARA_SENSI(VALE=2.E-3,);
BETA=DEFI_PARA_SENSI(VALE=3.E-1,);

#
# 3. Prealable
#
PRE_GIBI()
MAILLAGE=LIRE_MAILLAGE(VERI_MAIL=_F(VERIF='OUI'),);

MAILLAGE=DEFI_GROUP(reuse=MAILLAGE,
                    MAILLAGE=MAILLAGE,
                    CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI'));

#
# 3.1. Modele
#
MO=AFFE_MODELE(MAILLAGE=MAILLAGE,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='3D',),);

#
# 3.2. Mise en place des materiaux
#
MAT= DEFI_MATERIAU( ELAS_FO = _F( E = PS[0] ,
                             RHO = 2400. ,
                             NU = PS[1],
                             AMOR_ALPHA = ALPHA ,
                             AMOR_BETA = BETA ,));
#
# 3.3. Affectation des materiaux
#
CHMAT=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       AFFE=_F(TOUT='OUI',MATER=MAT,),);

#
# 3.4. Chargements
#
CLIM=AFFE_CHAR_MECA(MODELE=MO,
                    DDL_IMPO=(_F(GROUP_NO='I', DX=0.0,DY=0.0,DZ=0.0),
                              _F(GROUP_MA='BORD_GAU',DX=0.0,DY=0.0,DZ=0.0)),);
#
CH=AFFE_CHAR_MECA(MODELE=MO,
                    FORCE_NODALE=(_F(GROUP_NO='OPPOSE',
                                     FX=100.,
                                     FY=30.,
                                     FZ=10.))
                                       );

VECT=CALC_VECT_ELEM(  CHARGE=CH,         OPTION='CHAR_MECA' )


# 3.5 Premier membre
#

MATELER=CALC_MATR_ELEM(  MODELE=MO,           OPTION='RIGI_MECA',
                             CHAM_MATER=CHMAT ,
                             CHARGE= CLIM    )

MATELEM=CALC_MATR_ELEM(  MODELE=MO,           OPTION='MASS_MECA',
                             CHAM_MATER=CHMAT ,
                             CHARGE= CLIM    )

MATELEC=CALC_MATR_ELEM(  MODELE=MO,           OPTION='AMOR_MECA',
                             RIGI_MECA=MATELER,    MASS_MECA=MATELEM,
                             CHAM_MATER=CHMAT,
                             CHARGE= CLIM   )
# 3.6 Assemblage

NUM=NUME_DDL(  MATR_RIGI=MATELER  )

MATASSR=ASSE_MATRICE(  MATR_ELEM=MATELER,    NUME_DDL=NUM  )

MATASSM=ASSE_MATRICE(  MATR_ELEM=MATELEM,    NUME_DDL=NUM  )

MATASSC=ASSE_MATRICE(  MATR_ELEM=MATELEC,    NUME_DDL=NUM  )


VECTASS=ASSE_VECTEUR(  VECT_ELEM=VECT,   NUME_DDL=NUM  )

LIFREQ=DEFI_LIST_REEL(DEBUT=10., INTERVALLE=_F( JUSQU_A = 40., NOMBRE = 2))

#
# 4. Calcul
#

DYH=DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='PHYS',
                           MODELE=MO, CHAM_MATER=CHMAT,
                           MATR_MASS=MATASSM, MATR_RIGI=MATASSR,
                           MATR_AMOR=MATASSC,   LIST_FREQ=LIFREQ,
                           TOUT_CHAM='OUI',
                           SENSIBILITE=tuple(PS),
                           EXCIT=_F(  COEF_MULT = 1.,VECT_ASSE = VECTASS)
#                         EXCIT=(_F( COEF_MULT_C = 1.+0.j, CHARGE = CH),)
                     )

T_REF_R=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            GROUP_NO=('OPPOSE'),
                            RESULTAT=DYH,
                            NOM_CHAM='DEPL',
                            NUME_ORDRE=1,
                            NOM_CMP='DY',
                            OPERATION='EXTRACTION',
                               FORMAT_C='REEL',
                               ),);
TSREF_R=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            SENSIBILITE=tuple(PS),
                            GROUP_NO=('OPPOSE'),
                            RESULTAT=DYH,
                            NOM_CHAM='DEPL',
                            NUME_ORDRE=1,
                            NOM_CMP='DY',
                            OPERATION='EXTRACTION',
                               FORMAT_C='REEL',
                               ),);

T_REF_I=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            GROUP_NO=('OPPOSE'),
                            RESULTAT=DYH,
                            NOM_CHAM='DEPL',
                            NUME_ORDRE=1,
                            NOM_CMP='DY',
                            OPERATION='EXTRACTION',
                               FORMAT_C='IMAG',
                               ),);
TSREF_I=POST_RELEVE_T(ACTION=_F(INTITULE='SENSIBILITE',
                            SENSIBILITE=tuple(PS),
                            GROUP_NO=('OPPOSE'),
                            RESULTAT=DYH,
                            NOM_CHAM='DEPL',
                            NUME_ORDRE=1,
                            NOM_CMP='DY',
                            OPERATION='EXTRACTION',
                               FORMAT_C='IMAG',
                               ),);
IMPR_TABLE(TABLE=T_REF_R)
IMPR_TABLE(TABLE=TSREF_R,SENSIBILITE=tuple(PS))
IMPR_TABLE(TABLE=T_REF_R)
IMPR_TABLE(TABLE=TSREF_I,SENSIBILITE=tuple(PS))
FIN()

