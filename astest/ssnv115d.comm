# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#             SELON OZ
#=======================================================================
#

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MATERI_1=DEFI_MATERIAU( ELAS=_F(  E = 2000.,        NU = 0.3000),
#                      ECRO_LINE:( D_SIGM_EPSI:10.5E+4, SY:55.E+2) );
                       ECRO_LINE=_F(  D_SIGM_EPSI = 200.,    SY = 100.E+0) )

MAILLA_1=LIRE_MAILLAGE(FORMAT='MED',   )

MAILLA_1=DEFI_GROUP( reuse=MAILLA_1,   MAILLAGE=MAILLA_1,
  CREA_GROUP_MA=_F(  NOM = 'TOUT', TOUT = 'OUI'))

CH_MAT_1=AFFE_MATERIAU(  MAILLAGE=MAILLA_1,
                            AFFE=_F(  TOUT = 'OUI',   MATER = MATERI_1) )

MODELE_1=AFFE_MODELE(  MAILLAGE=MAILLA_1, 
                     AFFE=_F( TOUT = 'OUI', MODELISATION = 'COQUE_3D',
                                PHENOMENE = 'MECANIQUE') )

CINEMATI=AFFE_CHAR_MECA(MODELE=MODELE_1,DDL_IMPO=(
                _F( GROUP_NO = 'DEFPLN', DRY = 0., DRX = 0., DZ = 0.),
                _F( GROUP_NO = 'DEFPLM', DRY = 0., DRX = 0.),
                _F( GROUP_NO = 'AB',    DX = 0., DY = 0., DRZ = 0.),
                _F( GROUP_NO = 'AB',    DRX = 0.,DRY = 0.,DZ = 0.))
           )

CHARGE_1=AFFE_CHAR_MECA(MODELE=MODELE_1,FORCE_NODALE=(
         _F( GROUP_NO = 'C',       FX = 0.083333333333),
         _F( GROUP_NO = 'D',       FX = 0.083333333333),
         _F( GROUP_NO = 'E',       FX = 0.333333333333))
           )

CHARGE_2=AFFE_CHAR_MECA(MODELE=MODELE_1,
          FORCE_ARETE=_F( MAILLE = 'MA000009',   FX = 5.)
           )

CARAC__1=AFFE_CARA_ELEM(   MODELE=MODELE_1,
                           COQUE=_F(COQUE_NCOU=3,
       GROUP_MA = 'TOUT',
     EPAIS = 0.050,
                                       A_CIS = 0.83333333333333) )

RAMPE=DEFI_FONCTION(  NOM_PARA='INST',
            PROL_GAUCHE='LINEAIRE', PROL_DROITE='LINEAIRE',
            VALE=(0.0,0.0,1.0,1.0,) )

L_INST=DEFI_LIST_REEL(  DEBUT=0.0,
                INTERVALLE=_F( JUSQU_A = 1.,   NOMBRE = 10)
                                                   )

U=STAT_NON_LINE(
                            MODELE=MODELE_1,
                        CHAM_MATER=CH_MAT_1,
                         CARA_ELEM=CARAC__1,EXCIT=(
                             _F(
                CHARGE = CINEMATI), _F(
                CHARGE = CHARGE_1,
                FONC_MULT = RAMPE)),
                         COMPORTEMENT=_F(
                RELATION = 'VMIS_ISOT_LINE',
                ITER_INTE_MAXI = 30,
               ),
                         INCREMENT=_F(
                LIST_INST = L_INST,
                NUME_INST_FIN = 3),
                            NEWTON=_F(
                MATRICE = 'TANGENTE',
                REAC_ITER = 1),
                       CONVERGENCE=_F(
                RESI_GLOB_RELA = 1.E-6,
                ITER_GLOB_MAXI = 10),
                     RECH_LINEAIRE=_F(
                ITER_LINE_MAXI = 3,
                RESI_LINE_RELA = 1.E-5)
              )

U=STAT_NON_LINE( reuse=U,
                            MODELE=MODELE_1,
                        CHAM_MATER=CH_MAT_1,
                         CARA_ELEM=CARAC__1,EXCIT=(
                             _F(
                CHARGE = CINEMATI), _F(
                CHARGE = CHARGE_1,
                FONC_MULT = RAMPE)),
                         COMPORTEMENT=_F(
                RELATION = 'VMIS_ISOT_LINE',
                ITER_INTE_MAXI = 30,
               ),
                         ETAT_INIT=_F(
                EVOL_NOLI = U,
                NUME_ORDRE = 3),
                         INCREMENT=_F(
                LIST_INST = L_INST,
                NUME_INST_FIN = 10),
                            NEWTON=_F(
                MATRICE = 'TANGENTE',
                REAC_ITER = 1),
                       CONVERGENCE=_F(
                RESI_GLOB_RELA = 1.E-6,
                ITER_GLOB_MAXI = 10),
                     RECH_LINEAIRE=_F(
                ITER_LINE_MAXI = 3,
                RESI_LINE_RELA = 1.E-5)
              )

V=STAT_NON_LINE(
                            MODELE=MODELE_1,
                        CHAM_MATER=CH_MAT_1,
                         CARA_ELEM=CARAC__1,EXCIT=(
                             _F(
                CHARGE = CINEMATI), _F(
                CHARGE = CHARGE_2,
                FONC_MULT = RAMPE)),
                         COMPORTEMENT=_F(
                RELATION = 'VMIS_ISOT_LINE',
                ITER_INTE_MAXI = 30,
               ),
                         INCREMENT=_F(
                LIST_INST = L_INST,
                NUME_INST_FIN = 3),
                            NEWTON=_F(
                MATRICE = 'TANGENTE',
                REAC_ITER = 1),
                       CONVERGENCE=_F(
                RESI_GLOB_RELA = 1.E-6,
                ITER_GLOB_MAXI = 10),
                     RECH_LINEAIRE=_F(
                ITER_LINE_MAXI = 3,
                RESI_LINE_RELA = 1.E-5)
              )

V=STAT_NON_LINE( reuse=V,
                            MODELE=MODELE_1,
                        CHAM_MATER=CH_MAT_1,
                         CARA_ELEM=CARAC__1,EXCIT=(
                             _F(
                CHARGE = CINEMATI), _F(
                CHARGE = CHARGE_2,
                FONC_MULT = RAMPE)),
                         COMPORTEMENT=_F(
                RELATION = 'VMIS_ISOT_LINE',
                ITER_INTE_MAXI = 30,
               ),
                         ETAT_INIT=_F(
                EVOL_NOLI = U,
                NUME_ORDRE = 3),
                         INCREMENT=_F(
                LIST_INST = L_INST,
                NUME_INST_FIN = 10),
                            NEWTON=_F(
                MATRICE = 'TANGENTE',
                REAC_ITER = 1),
                       CONVERGENCE=_F(
                RESI_GLOB_RELA = 1.E-6,
                ITER_GLOB_MAXI = 10),
                     RECH_LINEAIRE=_F(
                ITER_LINE_MAXI = 3,
                RESI_LINE_RELA = 1.E-5)
              )

TEST_RESU(RESU=(_F(NUME_ORDRE=10,
                   GROUP_NO='X',
                   RESULTAT=U,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   VALE_CALC=0.027622720962858,
                   VALE_REFE=0.02743,
                   REFERENCE='NON_DEFINI',
                   PRECISION=1.E-2,),
                _F(NUME_ORDRE=10,
                   GROUP_NO='X',
                   RESULTAT=U,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   VALE_CALC=-0.280655786,
                   VALE_REFE=-0.28039999999999998,
                   REFERENCE='NON_DEFINI',
                   PRECISION=1.E-2,),
                ),
          )

TEST_RESU(RESU=(_F(NUME_ORDRE=10,
                   GROUP_NO='X',
                   RESULTAT=V,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   VALE_CALC=0.027622721395722,
                   VALE_REFE=0.02743,
                   REFERENCE='NON_DEFINI',
                   PRECISION=1.E-2,),
                _F(NUME_ORDRE=10,
                   GROUP_NO='X',
                   RESULTAT=V,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   VALE_CALC=-0.280655793,
                   VALE_REFE=-0.28039999999999998,
                   REFERENCE='NON_DEFINI',
                   PRECISION=1.E-2,),
                ),
          )

#

#---------------------------------------------------------------------
FIN()
#
