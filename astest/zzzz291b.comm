# MODIF  DATE 10/10/2012   AUTEUR COURTOIS M.COURTOIS 
# TITRE VALIDATION DE POST_ELEM NORME EN 2D
# zzzz291b.para = tps_job 60 mem_job 256Mo ncpus 1 liste_test R
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
import math
DEBUT(CODE=_F( NOM = 'ZZZZ291B',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),PAR_LOT='NON',);
#=======================================================================
#
# Ce test purement informatique sert a valider la programmation relative
# au mot-cle facteur NORME de l'operateur POST_ELEM en 2D
#
#  GEOMETRIE : CUBE 'ABCD' : A(-0.5,-0.5), B(0.5,-0.5),
#                            C(0.5,0.5), D(-0.5,0.5)
#
#  MAILLAGE : NOMBRE DE NOEUDS   : 123
#             NOMBRE DE MAILLES  : 244
#                      SEG2        32
#                      TRIA3       212
#
# ======================================================================


MA=LIRE_MAILLAGE( FORMAT='MED',INFO=2);

MOTH=AFFE_MODELE(  MAILLAGE=MA,
                   AFFE=_F(  TOUT = 'OUI',
                             PHENOMENE = 'THERMIQUE',
                             MODELISATION = 'PLAN') )

MAT1=DEFI_MATERIAU(    ELAS=_F( E      = 1.2,
                                NU     = 0.3,
                                RHO    = 7800.,
                                ALPHA  = 1.2),
                       THER=_F( RHO_CP = 1.4,
                                LAMBDA = 0.8) )

CHMAT=AFFE_MATERIAU(  MAILLAGE=MA,
                      AFFE=_F(  TOUT = 'OUI',MATER = MAT1,),)

CL=AFFE_CHAR_THER( MODELE=MOTH,
                   TEMP_IMPO=_F( GROUP_MA = 'GAUCHE', TEMP = 0.),
                   FLUX_REP =_F( GROUP_MA = 'DROITE', FLUN = -4.),)


RESU=THER_LINEAIRE( MODELE=MOTH, CHAM_MATER=CHMAT, EXCIT=_F(  CHARGE = CL) )
RESU=CALC_CHAMP(reuse=RESU,RESULTAT=RESU,THERMIQUE=('FLUX_ELGA','FLUX_ELNO'))


# Extraction des champs (TEMP, FLUX)

TEMP0=CREA_CHAMP(OPERATION='EXTR',
                 TYPE_CHAM='NOEU_TEMP_R',
                 NOM_CHAM='TEMP',
                 NUME_ORDRE=0,
                 RESULTAT=RESU);

FLUX0=CREA_CHAMP(OPERATION='EXTR',
                 TYPE_CHAM='ELGA_FLUX_R',
                 NOM_CHAM='FLUX_ELGA',
                 NUME_ORDRE=0,
                 RESULTAT=RESU);

FLUX1=CREA_CHAMP(OPERATION='EXTR',
                 TYPE_CHAM='ELNO_FLUX_R',
                 NOM_CHAM='FLUX_ELNO',
                 NUME_ORDRE=0,
                 RESULTAT=RESU);


# Formule

FNORM1=FORMULE(VALE = 'TEMP*TEMP',NOM_PARA=('TEMP'));
FNORM2=FORMULE(VALE = 'FLUX*FLUX + FLUY*FLUY',NOM_PARA=('FLUX','FLUY'));


# Creation des champs de fonctions

TMPF0=CREA_CHAMP(OPERATION='AFFE',
                 TYPE_CHAM='NOEU_NEUT_F',
                 MAILLAGE=MA,
                 AFFE=_F( GROUP_MA='TRIA',
                          NOM_CMP = 'X1',
                          VALE_F = FNORM1),
                );
TMPF1=CREA_CHAMP(OPERATION='AFFE',
                 TYPE_CHAM='ELGA_NEUT_F',
                 MODELE=MOTH,PROL_ZERO='OUI',
                 AFFE=_F( GROUP_MA='TRIA',
                          NOM_CMP = 'X1',
                          VALE_F = FNORM2),
                );

TMPF2=CREA_CHAMP(OPERATION='AFFE',
                 TYPE_CHAM='ELNO_NEUT_F',
                 MODELE=MOTH,PROL_ZERO='OUI',
                 AFFE=_F( GROUP_MA='TRIA',
                          NOM_CMP = 'X1',
                          VALE_F = FNORM2),
                );

# Evaluation des valeurs du champ

TEMP00=CREA_CHAMP(OPERATION='EVAL',
                 TYPE_CHAM='NOEU_NEUT_R',
                 CHAM_F=TMPF0,
                 CHAM_PARA=TEMP0);

TEMP11=CREA_CHAMP(OPERATION='EVAL',
                 TYPE_CHAM='ELGA_NEUT_R',
                 CHAM_F=TMPF1,
                 CHAM_PARA=FLUX0);

TEMP22=CREA_CHAMP(OPERATION='EVAL',
                 TYPE_CHAM='ELNO_NEUT_R',
                 CHAM_F=TMPF2,
                 CHAM_PARA=FLUX1);


#  Integration de chaque champ

Norme00=POST_ELEM(MODELE=MOTH,
                  CHAM_GD=TEMP00,
                  INTEGRALE=_F(NOM_CHAM='TEMP',NOM_CMP='X1',GROUP_MA='TRIA',),);

Norme11=POST_ELEM(MODELE=MOTH,
                  CHAM_GD=TEMP11,
                  INTEGRALE=_F(NOM_CHAM='FLUX_ELGA', NOM_CMP='X1',GROUP_MA='TRIA',),);

Norme22=POST_ELEM(MODELE=MOTH,
                  CHAM_GD=TEMP22,
                  INTEGRALE=_F(NOM_CHAM='FLUX_ELNO', NOM_CMP='X1', GROUP_MA='TRIA',),);


# calcul de la norme (reference):

Norm00=math.sqrt(Norme00['INTE_X1',1]);

Norm11=math.sqrt(Norme11['INTE_X1',1]);

Norm22=math.sqrt(Norme22['INTE_X1',1]);


# calcul de la norme directement par POST_ELEM

TB3 = POST_ELEM(NORME=_F(TYPE_NORM='L2',
                         GROUP_MA='TRIA',
                         CHAM_GD=TEMP0,
                         MODELE=MOTH),)


TB4 = POST_ELEM(NORME=_F(TYPE_NORM='L2',
                         GROUP_MA='TRIA',
                         CHAM_GD=FLUX0,
                         MODELE=MOTH),)


TB5 = POST_ELEM(NORME=_F(TYPE_NORM='L2',
                         GROUP_MA='TRIA',
                         CHAM_GD=FLUX1,
                         MODELE=MOTH),)

#  tests
#  =====

# champ TEMP
TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=3.0000000000000001E-3,
           VALE_CALC=2.886751346,
           VALE_REFE=2.8930699787093457,
           NOM_PARA='VALE_NORM',
           TABLE=TB3,)

# champ FLUX_ELGA
TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=9.9999999999999995E-07,
           VALE_CALC=4.000000000,
           VALE_REFE=3.9999999999999947,
           NOM_PARA='VALE_NORM',
           TABLE=TB4,)

# champ FLUX_ELGA
TEST_TABLE(REFERENCE='AUTRE_ASTER',
           PRECISION=9.9999999999999995E-07,
           VALE_CALC=4.000000000,
           VALE_REFE=3.9999999999999942,
           NOM_PARA='VALE_NORM',
           TABLE=TB5,)

FIN();




