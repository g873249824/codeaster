# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),ERREUR=_F(ERREUR_F='EXCEPTION',),);

MPa = 1000000.0;


MAILLAGE=LIRE_MAILLAGE(FORMAT="ASTER",    UNITE=20 )

MODELE=AFFE_MODELE(INFO=1,
                 MAILLAGE=MAILLAGE,AFFE=(
                     _F(  GROUP_MA = ('CUBE',),
                            PHENOMENE = 'MECANIQUE',
                            MODELISATION = '3D'),
                            ) )

BETON = DEFI_MATERIAU(ELAS=_F(
                    E = 30000*MPa,
                    NU = 0.3,
                    RHO = 2500,
                   ),
                  );

CHMATER=AFFE_MATERIAU(
                   MAILLAGE=MAILLAGE,AFFE=(
                       _F(  GROUP_MA = ('CUBE',),
                              MATER = BETON),
                              )
                              )

BLOQ=AFFE_CHAR_MECA(
                      MODELE=MODELE,DDL_IMPO=(
                    _F(  GROUP_NO='ENCAST',
                               DX = 0.,
                               DY = 0.,
                               DZ = 0.,
                               ),
                               ),)
TRAC=AFFE_CHAR_MECA(
                      MODELE=MODELE,DDL_IMPO=(
                    _F(  GROUP_NO='TRAC',
                               DZ = 0.01,
                               ),
                               ),)



PLATEAU=DEFI_FONCTION(NOM_PARA='INST',
                     VALE=(0.0,   1.0,
                           1e-1,  1.0,
                           ),
                     PROL_DROITE='CONSTANT',
                     PROL_GAUCHE='CONSTANT',
                     );


U_EPX1 = CALC_EUROPLEXUS(
   MODELE = MODELE,
   CHAM_MATER = CHMATER,
   COMPORTEMENT =(_F(
                  RELATION = 'ELAS',
                  GROUP_MA='CUBE',
                 ),
              ),
   EXCIT=(_F(CHARGE=TRAC,FONC_MULT=PLATEAU),
          _F(CHARGE=BLOQ,),),
   LANCEMENT ='OUI',
   CALCUL = _F(TYPE_DISCRETISATION  ='UTIL',
               INST_INIT = 0,
               INST_FIN  = 0.01,
               NMAX = 1000,
               PASFIX = 1E-5,
               ),
   ARCHIVAGE   = _F(PAS_INST=0.01,),
   );


U_EPX2 = CALC_EUROPLEXUS(
   VERSION_EUROPLEXUS = 'DEV',
   ETAT_INIT=_F(RESULTAT=U_EPX1,CONTRAINTE='OUI',EQUILIBRE='NON', VITESSE = 'OUI', 
                ),
   COMPORTEMENT =(_F(
                  RELATION = 'ELAS',
                  GROUP_MA='CUBE',
                 ),
              ),
   EXCIT=(_F(CHARGE=TRAC,FONC_MULT=PLATEAU),
          _F(CHARGE=BLOQ,),),
   LANCEMENT ='OUI',
   CALCUL = _F(TYPE_DISCRETISATION  ='UTIL',
               INST_INIT = 0.01,
               INST_FIN  = 0.02,
               NMAX = 1000,
               PASFIX = 1E-5,
               ),
   ARCHIVAGE   = _F(PAS_INST=0.01,),
   );


U_EPX3 = CALC_EUROPLEXUS(
   MODELE = MODELE,
   CHAM_MATER = CHMATER,
   COMPORTEMENT =(_F(
                  RELATION = 'ELAS',
                  GROUP_MA='CUBE',
                 ),
              ),
   EXCIT=(_F(CHARGE=TRAC,FONC_MULT=PLATEAU),
          _F(CHARGE=BLOQ,),),
   LANCEMENT ='OUI',
   CALCUL = _F(TYPE_DISCRETISATION  ='UTIL',
               INST_INIT = 0,
               INST_FIN  = 0.02,
               NMAX = 2000,
               PASFIX = 1E-5,
               ),
   ARCHIVAGE   = _F(PAS_INST=0.01,),
   );

IMPR_RESU(FORMAT="RESULTAT",RESU=_F(RESULTAT=U_EPX1,NOM_CHAM=('DEPL',),))
IMPR_RESU(FORMAT="RESULTAT",RESU=_F(RESULTAT=U_EPX2,))
IMPR_RESU(FORMAT="RESULTAT",RESU=_F(RESULTAT=U_EPX3,NOM_CHAM=('DEPL',),))


# REFERENCE : CALCUL D'UN TRAIT

TEST_RESU(RESU=(_F(INST=0.02,
                   RESULTAT=U_EPX3,
                   NOM_CHAM='DEPL',
                   NOEUD='N8',
                   NOM_CMP='DX',
                   VALE_CALC=2.50230296487024E-03,
                   ),
                _F(INST=0.02,
                   RESULTAT=U_EPX3,
                   NOM_CHAM='VITE',
                   NOEUD='N5',
                   NOM_CMP='DY',
                   VALE_CALC=-1.64605199800359E+01,
                   ),
                ),
            )
            
# VALIDATION ETAT INITIAL DYNAMIQUE
TEST_RESU(RESU=(_F(INST=0.02,
                   RESULTAT=U_EPX2,
                   NOM_CHAM='DEPL',
                   NOEUD='N8',
                   NOM_CMP='DX',
                   VALE_CALC=2.50230296487024E-03,
                   VALE_REFE=2.50230296487024E-03,
                   REFERENCE = 'AUTRE_ASTER',
                   ),
                _F(INST=0.02,
                   RESULTAT=U_EPX2,
                   NOM_CHAM='VITE',
                   NOEUD='N5',
                   NOM_CMP='DY',
                   VALE_CALC=-1.64605199800359E+01,
                   VALE_REFE=-1.64605199800359E+01,
                   REFERENCE = 'AUTRE_ASTER',
                   ),
                ),
            )


FIN()
