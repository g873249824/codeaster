# TITRE TREMPE D UN BARREAU INFINI A SECTION CARREE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='MTLP100A', NIV_PUB_WEB='INTERNET'),
      BASE=_F(FICHIER='GLOBALE', LONG_REPE=7000),
      DEBUG=_F(SDVERI='OUI'),);

# DEFINITION DES CARACTERISTIQUES DU MATERIAU

TRCMNDA=DEFI_TRC(HIST_EXP=(

 _F( VALE = (
-3.497E-03,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  8.005E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.970E+02,
 7.554E-01,  0.000E+00,  0.000E+00,  6.676E+02,
 7.850E-01,  1.000E-02,  0.000E+00,  6.625E+02,
 7.950E-01,  2.352E-02,  0.000E+00,  6.590E+02,
 7.950E-01,  1.950E-01,  0.000E+00,  6.150E+02,
 7.950E-01,  2.050E-01,  0.000E+00,  6.099E+02,
      )),
 _F( VALE = (
-4.403E-03,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.981E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.945E+02,
 7.321E-01,  0.000E+00,  0.000E+00,  6.650E+02,
 7.600E-01,  1.000E-02,  0.000E+00,  6.600E+02,
 7.700E-01,  2.435E-02,  0.000E+00,  6.564E+02,
 7.700E-01,  1.900E-01,  0.000E+00,  6.150E+02,
 7.700E-01,  2.000E-01,  0.000E+00,  6.100E+02,
 7.700E-01,  2.000E-01,  0.000E+00,  4.800E+02,
 7.700E-01,  2.000E-01,  1.000E-02,  4.600E+02,
 7.700E-01,  2.000E-01,  2.000E-02,  4.500E+02,
 7.700E-01,  2.000E-01,  3.000E-02,  4.300E+02,
      )),
 _F( VALE = (
-5.542E-03,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.956E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.920E+02,
 7.277E-01,  0.000E+00,  0.000E+00,  6.622E+02,
 7.540E-01,  1.000E-02,  0.000E+00,  6.575E+02,
 7.640E-01,  2.523E-02,  0.000E+00,  6.539E+02,
 7.640E-01,  1.890E-01,  0.000E+00,  6.150E+02,
 7.640E-01,  1.990E-01,  0.000E+00,  6.103E+02,
 7.640E-01,  1.990E-01,  0.000E+00,  5.665E+02,
 7.640E-01,  1.990E-01,  1.000E-02,  4.900E+02,
 7.640E-01,  1.990E-01,  2.700E-02,  4.250E+02,
 7.640E-01,  1.990E-01,  3.700E-02,  3.485E+02,
      )),
 _F( VALE = (
-6.977E-03,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.927E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.890E+02,
 7.163E-01,  0.000E+00,  0.000E+00,  6.595E+02,
 7.410E-01,  1.000E-02,  0.000E+00,  6.550E+02,
 7.510E-01,  2.622E-02,  0.000E+00,  6.513E+02,
 7.510E-01,  1.870E-01,  0.000E+00,  6.150E+02,
 7.510E-01,  1.970E-01,  0.000E+00,  6.105E+02,
 7.510E-01,  1.970E-01,  0.000E+00,  5.347E+02,
 7.510E-01,  1.970E-01,  1.000E-02,  4.900E+02,
 7.510E-01,  1.970E-01,  4.200E-02,  4.185E+02,
 7.510E-01,  1.970E-01,  5.200E-02,  3.738E+02,
      )),
 _F( VALE = (
-8.784E-03,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.897E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.860E+02,
 7.039E-01,  0.000E+00,  0.000E+00,  6.568E+02,
 7.270E-01,  1.000E-02,  0.000E+00,  6.525E+02,
 7.370E-01,  2.728E-02,  0.000E+00,  6.488E+02,
 7.370E-01,  1.840E-01,  0.000E+00,  6.150E+02,
 7.370E-01,  1.940E-01,  0.000E+00,  6.107E+02,
 7.370E-01,  1.940E-01,  0.000E+00,  5.218E+02,
 7.370E-01,  1.940E-01,  1.000E-02,  4.900E+02,
 7.370E-01,  1.940E-01,  5.900E-02,  4.120E+02,
 7.370E-01,  1.940E-01,  6.900E-02,  3.802E+02,
      )),
 _F( VALE = (
-1.106E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.873E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.835E+02,
 6.924E-01,  0.000E+00,  0.000E+00,  6.541E+02,
 7.140E-01,  1.000E-02,  0.000E+00,  6.500E+02,
 7.240E-01,  2.853E-02,  0.000E+00,  6.462E+02,
 7.240E-01,  1.810E-01,  0.000E+00,  6.150E+02,
 7.240E-01,  1.910E-01,  0.000E+00,  6.109E+02,
 7.240E-01,  1.910E-01,  0.000E+00,  5.158E+02,
 7.240E-01,  1.910E-01,  1.000E-02,  4.900E+02,
 7.240E-01,  1.910E-01,  7.500E-02,  4.060E+02,
 7.240E-01,  1.910E-01,  8.500E-02,  3.802E+02,
      )),
 _F( VALE = (
-1.392E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.849E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.810E+02,
 6.800E-01,  0.000E+00,  0.000E+00,  6.514E+02,
 7.000E-01,  1.000E-02,  0.000E+00,  6.475E+02,
 7.100E-01,  3.000E-02,  0.000E+00,  6.436E+02,
 7.100E-01,  1.780E-01,  0.000E+00,  6.150E+02,
 7.100E-01,  1.880E-01,  0.000E+00,  6.111E+02,
 7.100E-01,  1.880E-01,  0.000E+00,  5.121E+02,
 7.100E-01,  1.880E-01,  1.000E-02,  4.900E+02,
 7.100E-01,  1.880E-01,  9.200E-02,  3.995E+02,
 7.100E-01,  1.880E-01,  1.020E-01,  3.774E+02,
      )),
 _F( VALE = (
-1.753E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.819E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.780E+02,
 6.685E-01,  0.000E+00,  0.000E+00,  6.486E+02,
 6.870E-01,  1.000E-02,  0.000E+00,  6.450E+02,
 6.970E-01,  3.161E-02,  0.000E+00,  6.411E+02,
 6.970E-01,  1.750E-01,  0.000E+00,  6.150E+02,
 6.970E-01,  1.850E-01,  0.000E+00,  6.114E+02,
 6.970E-01,  1.850E-01,  0.000E+00,  5.098E+02,
 6.970E-01,  1.850E-01,  1.000E-02,  4.900E+02,
 6.970E-01,  1.850E-01,  1.080E-01,  3.930E+02,
 6.970E-01,  1.850E-01,  1.180E-01,  3.732E+02,
      )),
 _F( VALE = (
-2.206E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.790E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.750E+02,
 6.561E-01,  0.000E+00,  0.000E+00,  6.459E+02,
 6.730E-01,  1.000E-02,  0.000E+00,  6.425E+02,
 6.830E-01,  3.369E-02,  0.000E+00,  6.385E+02,
 6.830E-01,  1.730E-01,  0.000E+00,  6.150E+02,
 6.830E-01,  1.830E-01,  0.000E+00,  6.116E+02,
 6.830E-01,  1.830E-01,  0.000E+00,  5.082E+02,
 6.830E-01,  1.830E-01,  1.000E-02,  4.900E+02,
 6.830E-01,  1.830E-01,  1.240E-01,  3.865E+02,
 6.830E-01,  1.830E-01,  1.340E-01,  3.683E+02,
      )),
 _F( VALE = (
-2.777E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.766E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.725E+02,
 6.447E-01,  0.000E+00,  0.000E+00,  6.431E+02,
 6.600E-01,  1.000E-02,  0.000E+00,  6.400E+02,
 6.700E-01,  3.609E-02,  0.000E+00,  6.359E+02,
 6.700E-01,  1.700E-01,  0.000E+00,  6.150E+02,
 6.700E-01,  1.800E-01,  0.000E+00,  6.119E+02,
 6.700E-01,  1.800E-01,  0.000E+00,  5.069E+02,
 6.700E-01,  1.800E-01,  1.000E-02,  4.900E+02,
 6.700E-01,  1.800E-01,  1.400E-01,  3.800E+02,
 6.700E-01,  1.800E-01,  1.500E-01,  3.631E+02,
      )),
 _F( VALE = (
-3.497E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.742E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.700E+02,
 6.218E-01,  0.000E+00,  0.000E+00,  6.407E+02,
 6.370E-01,  1.000E-02,  0.000E+00,  6.375E+02,
 6.470E-01,  3.630E-02,  0.000E+00,  6.333E+02,
 6.470E-01,  1.500E-01,  0.000E+00,  6.150E+02,
 6.470E-01,  1.600E-01,  0.000E+00,  6.118E+02,
 6.470E-01,  1.600E-01,  0.000E+00,  5.089E+02,
 6.470E-01,  1.600E-01,  1.000E-02,  4.950E+02,
 6.470E-01,  1.600E-01,  1.830E-01,  3.750E+02,
 6.470E-01,  1.600E-01,  1.930E-01,  3.611E+02,
      )),
 _F( VALE = (
-4.402E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.714E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.670E+02,
 5.999E-01,  0.000E+00,  0.000E+00,  6.381E+02,
 6.140E-01,  1.000E-02,  0.000E+00,  6.350E+02,
 6.240E-01,  3.841E-02,  0.000E+00,  6.306E+02,
 6.240E-01,  1.400E-01,  0.000E+00,  6.150E+02,
 6.240E-01,  1.500E-01,  0.000E+00,  6.119E+02,
 6.240E-01,  1.500E-01,  0.000E+00,  5.126E+02,
 6.240E-01,  1.500E-01,  1.000E-02,  5.000E+02,
 6.240E-01,  1.500E-01,  2.160E-01,  3.700E+02,
 6.240E-01,  1.500E-01,  2.260E-01,  3.574E+02,
      )),
 _F( VALE = (
-5.542E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.685E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.640E+02,
 5.781E-01,  0.000E+00,  0.000E+00,  6.354E+02,
 5.910E-01,  1.000E-02,  0.000E+00,  6.325E+02,
 6.010E-01,  4.104E-02,  0.000E+00,  6.280E+02,
 6.010E-01,  1.300E-01,  0.000E+00,  6.150E+02,
 6.010E-01,  1.400E-01,  0.000E+00,  6.121E+02,
 6.010E-01,  1.400E-01,  0.000E+00,  5.167E+02,
 6.010E-01,  1.400E-01,  1.000E-02,  5.050E+02,
 6.010E-01,  1.400E-01,  2.490E-01,  3.650E+02,
 6.010E-01,  1.400E-01,  2.590E-01,  3.533E+02,
      )),
 _F( VALE = (
-6.977E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.662E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.615E+02,
 5.569E-01,  0.000E+00,  0.000E+00,  6.326E+02,
 5.680E-01,  1.000E-02,  0.000E+00,  6.300E+02,
 5.780E-01,  4.614E-02,  0.000E+00,  6.253E+02,
 5.780E-01,  1.250E-01,  0.000E+00,  6.150E+02,
 5.780E-01,  1.350E-01,  0.000E+00,  6.124E+02,
 5.780E-01,  1.350E-01,  0.000E+00,  5.212E+02,
 5.780E-01,  1.350E-01,  1.000E-02,  5.100E+02,
 5.780E-01,  1.350E-01,  2.770E-01,  3.600E+02,
 5.780E-01,  1.350E-01,  2.870E-01,  3.488E+02,
      )),
 _F( VALE = (
-8.784E-02,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.639E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.590E+02,
 5.358E-01,  0.000E+00,  0.000E+00,  6.298E+02,
 5.450E-01,  1.000E-02,  0.000E+00,  6.275E+02,
 5.550E-01,  5.326E-02,  0.000E+00,  6.226E+02,
 5.550E-01,  1.200E-01,  0.000E+00,  6.150E+02,
 5.550E-01,  1.300E-01,  0.000E+00,  6.127E+02,
 5.550E-01,  1.300E-01,  0.000E+00,  5.255E+02,
 5.550E-01,  1.300E-01,  1.000E-02,  5.150E+02,
 5.550E-01,  1.300E-01,  3.050E-01,  3.600E+02,
 5.550E-01,  1.300E-01,  3.150E-01,  3.495E+02,
      )),
 _F( VALE = (
-1.106E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.611E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.560E+02,
 5.122E-01,  0.000E+00,  0.000E+00,  6.275E+02,
 5.220E-01,  1.000E-02,  0.000E+00,  6.250E+02,
 5.320E-01,  5.094E-02,  0.000E+00,  6.199E+02,
 5.320E-01,  9.000E-02,  0.000E+00,  6.150E+02,
 5.320E-01,  1.000E-01,  0.000E+00,  6.125E+02,
 5.320E-01,  1.000E-01,  0.000E+00,  5.292E+02,
 5.320E-01,  1.000E-01,  1.000E-02,  5.200E+02,
 5.320E-01,  1.000E-01,  3.580E-01,  3.600E+02,
 5.320E-01,  1.000E-01,  3.680E-01,  3.508E+02,
      )),
 _F( VALE = (
-1.392E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.583E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.530E+02,
 4.904E-01,  0.000E+00,  0.000E+00,  6.248E+02,
 4.990E-01,  1.000E-02,  0.000E+00,  6.225E+02,
 5.090E-01,  5.626E-02,  0.000E+00,  6.172E+02,
 5.090E-01,  7.500E-02,  0.000E+00,  6.150E+02,
 5.090E-01,  8.500E-02,  0.000E+00,  6.127E+02,
 5.090E-01,  8.500E-02,  0.000E+00,  5.335E+02,
 5.090E-01,  8.500E-02,  1.000E-02,  5.250E+02,
 5.090E-01,  8.500E-02,  3.960E-01,  3.600E+02,
 5.090E-01,  8.500E-02,  4.060E-01,  3.515E+02,
      )),
 _F( VALE = (
-1.753E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.561E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.505E+02,
 4.671E-01,  0.000E+00,  0.000E+00,  6.225E+02,
 4.760E-01,  1.000E-02,  0.000E+00,  6.200E+02,
 4.849E-01,  5.000E-02,  0.000E+00,  6.150E+02,
 4.860E-01,  5.240E-02,  0.000E+00,  6.144E+02,
 4.860E-01,  6.000E-02,  0.000E+00,  6.125E+02,
 4.860E-01,  6.000E-02,  0.000E+00,  5.378E+02,
 4.860E-01,  6.000E-02,  1.000E-02,  5.300E+02,
 4.860E-01,  6.000E-02,  4.440E-01,  3.600E+02,
 4.860E-01,  6.000E-02,  4.540E-01,  3.522E+02,
      )),
 _F( VALE = (
-2.206E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.539E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.480E+02,
 4.445E-01,  0.000E+00,  0.000E+00,  6.200E+02,
 4.530E-01,  1.000E-02,  0.000E+00,  6.175E+02,
 4.572E-01,  3.000E-02,  0.000E+00,  6.150E+02,
 4.615E-01,  4.000E-02,  0.000E+00,  6.125E+02,
 4.630E-01,  4.000E-02,  0.000E+00,  6.116E+02,
 4.630E-01,  4.000E-02,  0.000E+00,  5.423E+02,
 4.630E-01,  4.000E-02,  1.000E-02,  5.350E+02,
 4.630E-01,  4.000E-02,  4.870E-01,  3.600E+02,
 4.630E-01,  4.000E-02,  4.970E-01,  3.527E+02,
      )),
 _F( VALE = (
-2.777E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.511E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.450E+02,
 4.350E-01,  0.000E+00,  0.000E+00,  6.150E+02,
 4.450E-01,  0.000E+00,  0.000E+00,  6.089E+02,
 4.450E-01,  0.000E+00,  0.000E+00,  5.467E+02,
 4.450E-01,  0.000E+00,  1.000E-02,  5.400E+02,
 4.450E-01,  0.000E+00,  5.450E-01,  3.600E+02,
 4.450E-01,  0.000E+00,  5.550E-01,  3.533E+02,
      )),
 _F( VALE = (
-3.497E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.489E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.420E+02,
 3.800E-01,  0.000E+00,  0.000E+00,  6.150E+02,
 3.900E-01,  0.000E+00,  0.000E+00,  6.081E+02,
 3.900E-01,  0.000E+00,  0.000E+00,  5.513E+02,
 3.900E-01,  0.000E+00,  1.000E-02,  5.450E+02,
 3.900E-01,  0.000E+00,  6.000E-01,  3.600E+02,
 3.900E-01,  0.000E+00,  6.100E-01,  3.537E+02,
      )),
 _F( VALE = (
-4.402E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.473E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.395E+02,
 3.200E-01,  0.000E+00,  0.000E+00,  6.180E+02,
 3.300E-01,  0.000E+00,  0.000E+00,  6.102E+02,
 3.300E-01,  0.000E+00,  0.000E+00,  5.558E+02,
 3.300E-01,  0.000E+00,  1.000E-02,  5.500E+02,
 3.300E-01,  0.000E+00,  6.600E-01,  3.600E+02,
 3.300E-01,  0.000E+00,  6.700E-01,  3.542E+02,
      )),
 _F( VALE = (
-5.542E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.460E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.370E+02,
 2.700E-01,  0.000E+00,  0.000E+00,  6.200E+02,
 2.800E-01,  0.000E+00,  0.000E+00,  6.110E+02,
 2.800E-01,  0.000E+00,  0.000E+00,  5.606E+02,
 2.800E-01,  0.000E+00,  1.000E-02,  5.550E+02,
 2.800E-01,  0.000E+00,  7.100E-01,  3.600E+02,
 2.800E-01,  0.000E+00,  7.200E-01,  3.544E+02,
      )),
 _F( VALE = (
-6.977E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.444E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.340E+02,
 2.200E-01,  0.000E+00,  0.000E+00,  6.250E+02,
 2.300E-01,  0.000E+00,  0.000E+00,  6.146E+02,
 2.300E-01,  0.000E+00,  0.000E+00,  5.602E+02,
 2.300E-01,  0.000E+00,  1.000E-02,  5.550E+02,
 2.300E-01,  0.000E+00,  7.600E-01,  3.600E+02,
 2.300E-01,  0.000E+00,  7.700E-01,  3.548E+02,
      )),
 _F( VALE = (
-8.784E-01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.436E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.310E+02,
 1.700E-01,  0.000E+00,  0.000E+00,  6.300E+02,
 1.800E-01,  0.000E+00,  0.000E+00,  6.174E+02,
 1.800E-01,  0.000E+00,  0.000E+00,  5.599E+02,
 1.800E-01,  0.000E+00,  1.000E-02,  5.550E+02,
 1.800E-01,  0.000E+00,  8.100E-01,  3.600E+02,
 1.800E-01,  0.000E+00,  8.200E-01,  3.551E+02,
      )),
 _F( VALE = (
-1.106E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.380E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.200E+02,
 1.100E-01,  0.000E+00,  0.000E+00,  6.300E+02,
 1.200E-01,  0.000E+00,  0.000E+00,  6.120E+02,
 1.200E-01,  0.000E+00,  0.000E+00,  5.595E+02,
 1.200E-01,  0.000E+00,  1.000E-02,  5.550E+02,
 1.200E-01,  0.000E+00,  8.700E-01,  3.600E+02,
 1.200E-01,  0.000E+00,  8.800E-01,  3.555E+02,
      )),
 _F( VALE = (
-1.392E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  7.200E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  7.000E+02,
 6.000E-02,  0.000E+00,  0.000E+00,  6.500E+02,
 7.000E-02,  0.000E+00,  0.000E+00,  6.300E+02,
 7.000E-02,  0.000E+00,  0.000E+00,  5.592E+02,
 7.000E-02,  0.000E+00,  1.000E-02,  5.550E+02,
 7.000E-02,  0.000E+00,  9.200E-01,  3.640E+02,
 7.000E-02,  0.000E+00,  9.300E-01,  3.598E+02,
      )),
 _F( VALE = (
-1.753E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  6.850E+02,
 1.000E-02,  0.000E+00,  0.000E+00,  6.750E+02,
 2.000E-02,  0.000E+00,  0.000E+00,  6.700E+02,
 3.000E-02,  0.000E+00,  0.000E+00,  6.600E+02,
 3.000E-02,  0.000E+00,  0.000E+00,  5.589E+02,
 3.000E-02,  0.000E+00,  1.000E-02,  5.550E+02,
 3.000E-02,  0.000E+00,  9.600E-01,  3.680E+02,
 3.000E-02,  0.000E+00,  9.700E-01,  3.641E+02,
      )),
 _F( VALE = (
-2.206E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  5.587E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  5.550E+02,
 0.000E+00,  0.000E+00,  9.900E-01,  3.720E+02,
 0.000E+00,  0.000E+00,  1.000E+00,  3.683E+02,
      )),
 _F( VALE = (
-2.777E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  5.536E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  5.500E+02,
 0.000E+00,  0.000E+00,  9.900E-01,  3.760E+02,
 0.000E+00,  0.000E+00,  1.000E+00,  3.724E+02,
      )),
 _F( VALE = (
-3.497E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  5.458E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  5.425E+02,
 0.000E+00,  0.000E+00,  9.900E-01,  3.800E+02,
 0.000E+00,  0.000E+00,  1.000E+00,  3.767E+02,
      )),
 _F( VALE = (
-4.402E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  5.383E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  5.350E+02,
 0.000E+00,  0.000E+00,  9.200E-01,  3.840E+02,
 0.000E+00,  0.000E+00,  9.300E-01,  3.807E+02,
      )),
 _F( VALE = (
-5.542E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  5.309E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  5.275E+02,
 0.000E+00,  0.000E+00,  8.300E-01,  3.880E+02,
 0.000E+00,  0.000E+00,  8.400E-01,  3.846E+02,
      )),
 _F( VALE = (
-6.977E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  5.235E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  5.200E+02,
 0.000E+00,  0.000E+00,  7.400E-01,  3.920E+02,
 0.000E+00,  0.000E+00,  7.500E-01,  3.885E+02,
      )),
 _F( VALE = (
-8.784E+00,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  5.088E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  5.050E+02,
 0.000E+00,  0.000E+00,  5.900E-01,  3.960E+02,
 0.000E+00,  0.000E+00,  6.000E-01,  3.922E+02,
      )),
 _F( VALE = (
-1.106E+01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  4.942E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  4.900E+02,
 0.000E+00,  0.000E+00,  4.400E-01,  4.000E+02,
 0.000E+00,  0.000E+00,  4.500E-01,  3.958E+02,
      )),
 _F( VALE = (
-1.392E+01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  4.804E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  4.750E+02,
 0.000E+00,  0.000E+00,  2.900E-01,  4.000E+02,
 0.000E+00,  0.000E+00,  3.000E-01,  3.946E+02,
      )),
 _F( VALE = (
-1.753E+01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  4.692E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  4.600E+02,
 0.000E+00,  0.000E+00,  1.400E-01,  4.000E+02,
 0.000E+00,  0.000E+00,  1.500E-01,  3.908E+02,
      )),
 _F( VALE = (
-2.206E+01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  4.540E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  4.450E+02,
 0.000E+00,  0.000E+00,  1.100E-01,  4.000E+02,
 0.000E+00,  0.000E+00,  1.200E-01,  3.910E+02,
      )),
 _F( VALE = (
-2.778E+01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  4.400E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  4.300E+02,
 0.000E+00,  0.000E+00,  7.000E-02,  4.000E+02,
 0.000E+00,  0.000E+00,  8.000E-02,  3.900E+02,
      )),
 _F( VALE = (
-3.497E+01,  1.100E+01,  8.563E+00, -2.760E-02,
 1.220E-04, -2.955E-07,  3.402E-10, -1.517E-13,
 0.000E+00,  0.000E+00,  0.000E+00,  8.360E+02,
 0.000E+00,  0.000E+00,  0.000E+00,  4.270E+02,
 0.000E+00,  0.000E+00,  1.000E-02,  4.150E+02,
 0.000E+00,  0.000E+00,  3.500E-02,  4.000E+02,
 0.000E+00,  0.000E+00,  4.500E-02,  3.880E+02,
      ))),
   TEMP_MS=_F(
    SEUIL = 4.500E-01,
    AKM = -3.125E+01,
    BKM = 1.406E+01,
    TPLM = -3.497E+00)
   )

ACIER=DEFI_MATERIAU(THER=_F(LAMBDA=33.5,
                            RHO_CP=5260000.0,),
                    META_ACIER=_F(TRC=TRCMNDA,
                                  AR3=830.0,
                                  ALPHA=-0.0306,
                                  MS0=400.0,
                                  AC1=724.0,
                                  AC3=846.0,
                                  TAUX_1=0.034,
                                  TAUX_3=0.034,),
                    DURT_META=_F(F1_DURT=200.0,
                                 F2_DURT=200.0,
                                 F3_DURT=300.0,
                                 F4_DURT=400.0,
                                 C_DURT=100.0,),);

MAIL=LIRE_MAILLAGE(FORMAT='MED',);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(TOUT='OUI',
                            MATER=ACIER,),);

MOTH=AFFE_MODELE(MAILLAGE=MAIL,
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='THERMIQUE',
                         MODELISATION='PLAN',),);

TIMPO=DEFI_FONCTION(NOM_PARA='INST',
                    NOM_RESU='TEMP',
                    VALE=(0.0,700.0,200.0,900.0,),
                    PROL_DROITE='LINEAIRE',
                    PROL_GAUCHE='LINEAIRE',);

CHTH1=AFFE_CHAR_THER_F(MODELE=MOTH,
                       TEMP_IMPO=_F(TOUT='OUI',
                                    TEMP=TIMPO,),);

CHTH2=AFFE_CHAR_THER(MODELE=MOTH,
                     ECHANGE=_F(GROUP_MA='GRMA3',
                                COEF_H=1675.0,
                                TEMP_EXT=15.0,),);

LR8=DEFI_LIST_REEL(DEBUT=0.0,
                   INTERVALLE=(_F(JUSQU_A=200.0,
                                  NOMBRE=40,),
                               _F(JUSQU_A=240.0,
                                  NOMBRE=40,),
                               _F(JUSQU_A=410.0,
                                  NOMBRE=85,),),);

PHASINIT=CREA_CHAMP(TYPE_CHAM='CART_VAR2_R',
                    OPERATION='AFFE',
                    MAILLAGE=MAIL,
                    AFFE=_F(TOUT='OUI',
                            NOM_CMP=('V1','V2','V3','V4','V5',),
                            VALE=(0.7,0.0,0.3,0.0,0.0,),),);

TEMPE=THER_LINEAIRE(MODELE=MOTH,
                    CHAM_MATER=CHMAT,
                    EXCIT=_F(CHARGE=CHTH1,),
                    INCREMENT=_F(LIST_INST=LR8,
                                 NUME_INST_FIN=40,),
                    ETAT_INIT=_F(VALE=700.0,),
                    SOLVEUR=_F(METHODE='LDLT',
                               RENUM='RCMK',),
                    PARM_THETA=0.57,);

TEMPE=CALC_META(reuse =TEMPE,
                MODELE=MOTH,
                CHAM_MATER=CHMAT,
                RESULTAT=TEMPE,
                ETAT_INIT=_F(META_INIT_ELNO=PHASINIT,),
                COMP_INCR=_F(RELATION='ACIER',
                             TOUT='OUI',),
                OPTION='META_ELNO',);

TEMPE=CALC_META(reuse =TEMPE,
                RESULTAT=TEMPE,
                OPTION='DURT_ELNO',);

TEMPE1=EXTR_RESU(RESULTAT=TEMPE,
                 ARCHIVAGE=_F(INST=(0.0,200.0,),),);

TEMPE1=THER_LINEAIRE(reuse =TEMPE1,
                     MODELE=MOTH,
                     CHAM_MATER=CHMAT,
                     EXCIT=_F(CHARGE=CHTH2,),
                     INCREMENT=_F(LIST_INST=LR8,
                                  NUME_INST_INIT=40,),
                     ETAT_INIT=_F(EVOL_THER=TEMPE,
                                  NUME_ORDRE=40,),
                     SOLVEUR=_F(METHODE='LDLT',
                                RENUM='RCMK',),
                     PARM_THETA=0.57,);

TEMPE1=CALC_META(reuse =TEMPE1,
                 MODELE=MOTH,
                 CHAM_MATER=CHMAT,
                 RESULTAT=TEMPE1,
                 ETAT_INIT=_F(EVOL_THER=TEMPE1,
                              INST_INIT=200.0,),
                 COMP_INCR=_F(RELATION='ACIER',
                              TOUT='OUI',),
                 OPTION=('META_ELNO','DURT_ELNO',),);

TEST_RESU(RESU=(_F(INST=300.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE1,
                   NOM_CHAM='META_ELNO',
                   NOEUD='N66',
                   NOM_CMP='V3',
                   VALE_CALC=0.621941571,
                   VALE_REFE=0.62629999999999997,
                   CRITERE='ABSOLU',
                   PRECISION=5.0000000000000001E-3,
                   MAILLE='M19',),
                _F(INST=300.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE1,
                   NOM_CHAM='META_ELNO',
                   NOEUD='N70',
                   NOM_CMP='V3',
                   VALE_CALC=0.235328883,
                   VALE_REFE=0.2581,
                   CRITERE='ABSOLU',
                   PRECISION=0.029999999999999999,
                   MAILLE='M19',),
                _F(INST=410.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE1,
                   NOM_CHAM='META_ELNO',
                   NOEUD='N39',
                   NOM_CMP='V3',
                   VALE_CALC=0.772011613,
                   VALE_REFE=0.79900000000000004,
                   CRITERE='ABSOLU',
                   PRECISION=0.029999999999999999,
                   MAILLE='M13',),
                _F(INST=410.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE1,
                   NOM_CHAM='META_ELNO',
                   NOEUD='N39',
                   NOM_CMP='V4',
                   VALE_CALC=0.225935272,
                   VALE_REFE=0.1996,
                   CRITERE='ABSOLU',
                   PRECISION=0.029999999999999999,
                   MAILLE='M13',),
                _F(INST=410.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE1,
                   NOM_CHAM='META_ELNO',
                   NOEUD='N66',
                   NOM_CMP='V4',
                   VALE_CALC=0.375714542,
                   VALE_REFE=0.3715,
                   CRITERE='ABSOLU',
                   PRECISION=5.0000000000000001E-3,
                   MAILLE='M19',),
                _F(INST=410.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE1,
                   NOM_CHAM='META_ELNO',
                   NOEUD='N70',
                   NOM_CMP='V4',
                   VALE_CALC=0.760129855,
                   VALE_REFE=0.73740000000000006,
                   CRITERE='ABSOLU',
                   PRECISION=0.050000000000000003,
                   MAILLE='M19',),
                _F(INST=30.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE,
                   NOM_CHAM='DURT_ELNO',
                   NOEUD='N1',
                   NOM_CMP='HV',
                   VALE_CALC=223.642786885,
                   VALE_REFE=223.643,
                   CRITERE='ABSOLU',
                   PRECISION=5.0000000000000001E-3,
                   MAILLE='M1',),
                _F(INST=140.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE,
                   NOM_CHAM='DURT_ELNO',
                   NOEUD='N1',
                   NOM_CMP='HV',
                   VALE_CALC=106.429672131,
                   VALE_REFE=106.43000000000001,
                   CRITERE='ABSOLU',
                   PRECISION=5.0000000000000001E-3,
                   MAILLE='M1',),
                _F(INST=300.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE1,
                   NOM_CHAM='DURT_ELNO',
                   NOEUD='N1',
                   NOM_CMP='HV',
                   VALE_CALC=100.000000000,
                   VALE_REFE=100.0,
                   CRITERE='ABSOLU',
                   PRECISION=5.0000000000000001E-3,
                   MAILLE='M1',),
                _F(INST=410.0,
                   REFERENCE='NON_DEFINI',
                   RESULTAT=TEMPE1,
                   NOM_CHAM='DURT_ELNO',
                   NOEUD='N1',
                   NOM_CMP='HV',
                   VALE_CALC=309.622340595,
                   VALE_REFE=309.00999999999999,
                   CRITERE='ABSOLU',
                   PRECISION=0.69999999999999996,
                   MAILLE='M1',),
                ),
          )

FIN();

#-----------------------------------------------------------------------
#
# Ceci est une copie du programme DEFITRC permettant de produire la
#   commande DEFI_TRC a partir des diagrammes TRC. La syntaxe produite
#   est compatible avec les versions 9 et 10.
#   On retrouve ce programme dans le fichier mtlp100a.66
#
#-----------------------------------------------------------------------
#
#      PROGRAM DEFITRC
#C.......................................................................
#C.  CONSTRUCTION D UN T.R.C. MINIMAL --> CORPS DE LA COMMANDE DEFI_TRC .
#C.......................................................................
#      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
#      DIMENSION Z1(40),Z2(40),Z3(40),T(40),EPS(40)
#      CHARACTER*20 NOMTRC
#      CHARACTER*12 TOTO1,TOTO2,TOTO3,TOTO4,TOTO5
#      CHARACTER*1  VIRGULE
#      NFIRES=12
#      VIRGULE=','
#10    WRITE(6,*)'******************************************************'
#      WRITE(6,*)'SAISIE DES HISTOIRES THERMO-METALLURGIQUES DONT ON A'
#      WRITE(6,*)'  LA CONNAISSANCE EXPERIMENTALE POUR UN ACIER DONNE'
#      WRITE(6,*)'******************************************************'
#      WRITE(6,*)
#      WRITE(6,*)'    ENTREZ LE NOM DE L''ACIER '
#      WRITE(6,*)'(8 CARACTERES ALPHABETIQUES MAXI)'
#      READ(5,999)NOMTRC
#C      CALL LXMIN(NOMTRC)
#      NOMTRC=NOMTRC(1:8)//' = DEFI_TRC('
#      WRITE(6,*)
#      WRITE(6,*)'ENTREZ LA VALEUR DE LA TEMPERATURE AR3'
#      READ(5,*)AR3
#      WRITE(6,*)'  ENTREZ LA VALEUR DE LA TEMPERATURE EN DESSOUS DE '
#      WRITE(6,*)'LAQUELLE TOUTES LES TRANSFORMATIONS SONT FINIES (TMIN)'
#      READ(5,*)TMIN
#      WRITE(6,*)
#      WRITE(6,*)'LA SAISIE SE FAIT PAR ENSEMBLE D''HISTOIRES'
#      WRITE(6,*)
#      WRITE(6,*)'UN ENSEMBLE D''HISTOIRES EST CARACTERISE PAR :'
#      WRITE(6,*)
#      WRITE(6,*)'1 - LE NOMBRE D''HISTOIRES QUI LE COMPOSE'
#      WRITE(6,*)
#      WRITE(6,*)'2 - LES COEFFICIENTS A, B, C, D, E ET F DU POLYNOME'
#      WRITE(6,*)'    D''ORDRE 5 :A+BT+CT2+DT3+ET4+FT5 APPROXIMANT LA'
#      WRITE(6,*)'    LA COURBE PILOTE DE REFROIDISSEMENT F(T) TELLE '
#      WRITE(6,*)'    QUE : t(T)=exp(F(T)-F(700)-LN(Tp(700)*F''(700)))'
#      WRITE(6,*) '   OU Tp EST LA DERIVEE DE T(t) et F'' celle de F(T)'
#      WRITE(6,*)
#      WRITE(6,*)'3 - LA VALEUR DU PARAMETRE D''EQUIVALENCE TEMPS-'
#      WRITE(6,*)'    TEMPERATURE D''AUSTENITISATION P'
#      WRITE(6,*)
#      WRITE(6,*)'4 - LES VALEURS DE MS0 ET ALPHA'
#      WRITE(6,*)'    OU POUR L''ENSEMBLE DE CES HISTOIRES, MS0 EST LA'
#      WRITE(6,*)'    TEMPERATURE DE DEBUT DE TRANSFORMATION MARTENSI-'
#      WRITE(6,*)'    TIQUE LORSQUE CELLE CI EST TOTALE'
#      WRITE(6,*)'    ET ALPHA LE COEFFICIENT POSITIF DE LA LOI DE'
#      WRITE(6,*)'    KOISTINEN-MARBURGER : ZM = 1-EXP(-ALPHA*(MS0-T))'
#      WRITE(6,*)' -----------------------------------------------------'
#      WRITE(6,*)' !!!!!!!!!!!!!!!!!!  ATTENTION !!!!!!!!!!!!!!!!!!!!!!!'
#      WRITE(6,*)'  LA PREMIERE HISTOIRE SAISIE DOIT ETRE LA PLUS LENTE'
#      WRITE(6,*)'      C''EST A DIRE LA PLUS PROCHE DE L''EQUILIBRE'
#      WRITE(6,*)'         ET LA DERNIERE DOIT ETRE LA PLUS RAPIDE '
#      WRITE(6,*)' !!!!!!!!!!!!!!!!!!  ATTENTION !!!!!!!!!!!!!!!!!!!!!!!'
#      WRITE(6,*)' -----------------------------------------------------'
#      WRITE(6,*)' '
#      WRITE(6,*)'ENTREZ LE NOMBRE D''ENSEMBLE QUE VOUS VOULEZ SAISIR'
#      READ(5,*)NBE
#      WRITE(6,*)'ATTENTION ! VOUS ALLEZ SAISIR', NBE
#      WRITE(6,*)'ENSEMBLES D''HISTOIRES THERMO-METALLURGIQUES'
#      WRITE(6,*)'                                             OK --> 0'
#      READ(5,*)IOK
#      IF (IOK.NE.0) THEN
#        GOTO 10
#      ENDIF
#      WRITE(NFIRES,999) NOMTRC
#      WRITE(NFIRES,*)'HIST_EXP=('
#20    CONTINUE
#      DO 1000 IE=1,NBE
#        WRITE(6,*)'1 - DONNER LE NOMBRE D''HISTOIRE DE L''ENSEMBLE',IE
#        READ(5,*)NBHT
#        WRITE(6,*)'2 - DEFINITION DE LA COURBE PILOTE DE'
#        WRITE(6,*)'    REFROIDISSEMENT F(T) TELLE QUE : '
#        WRITE(6,*)'t(T)=exp(F(T)-F(700)-LN(Tp(700)*F''(700)))'
#        WRITE(6,*)
#        WRITE(6,*)' ENTREZ LES COEEFICIENTS A, B, C, D, E, F '//
#     &            'DU POLYNOME'
#        WRITE(6,*)' D''ORDRE 5 : A+BT+CT2+DT3+ET4+FT5 APPROXIMANT F(T)'
#        READ(5,*)A,B,C,D,E,F
#        WRITE(6,*)'3 - ENTREZ LA VALEUR DU PARAMETRE D''EQUIVALENCE'
#        WRITE(6,*)'       TEMPS-TEMPERATURE D''AUSTENITISATION P'
#        READ(5,*)P
#        WRITE(6,*)'4 - ENTREZ LES VALEURS DE MS0 ET ALPHA'
#        READ(5,*)MS0,ALPHA
#        WRITE(6,*)'ATTENTION ! VOUS ALLEZ SAISIR', NBHT
#        WRITE(6,*)'HISTOIRES THERMO-METALLURGIQUES'
#        WRITE(6,*)
#        WRITE(6,*)'DONT LA COURBE PILOTE DE REFROIDISSEMENT EST TELLE'
#        WRITE(6,*)'QUE : A EGALE',A
#        WRITE(6,*)'      B EGALE',B
#        WRITE(6,*)'      C EGALE',C
#        WRITE(6,*)'      D EGALE',D
#        WRITE(6,*)'      E EGALE',E
#        WRITE(6,*)'      F EGALE',F
#        WRITE(6,*)
#        WRITE(6,*)'ET POUR LESQUELLES :   P EGALE',P
#        WRITE(6,*)'                   : MS0 EGALE',MS0
#        WRITE(6,*)'                ET ALPHA EGALE',ALPHA
#        WRITE(6,*)
#        WRITE(6,*)'SI VOUS ETES D''ACCORD --> 0'
#        WRITE(6,*)'                 SINON --> 1'
#        READ(5,*)IOK
#        IF (IOK.NE.0) THEN
#          GOTO 20
#        ENDIF
#        WRITE(6,*)'****************************************************'
#        WRITE(6,*)'ATTENTION ! LA PROPORTION MINIMALE SIGNIFICATIVE DE'
#        WRITE(6,*)'PRESENCE D''UN CONSTITUANT A L''AMBIANTE EST DE 0.03'
#        WRITE(6,*)'****************************************************'
#        WRITE(6,*)
#        DO 500 NUH=1,NBHT
#30        WRITE(6,*)'HISTOIRE NUMERO', NUH
#          WRITE(6,*)
#          WRITE(6,*)'ENTREZ LA VALEUR DE TPOINT 700'
#          READ(5,*)TP700
#          IF(TP700.GE.0.)THEN
#            WRITE(6,*)'TPOINT 700 DOIT ETRE NEGATIF'
#            WRITE(6,*)
#            GOTO 30
#          ENDIF
# 40       WRITE(6,*)'ENTREZ LES PROPORTIONS FINALES DE FERRITE (ZFF)'
#          WRITE(6,*)' PERLITE (ZFP) BAINITE (ZFB) POUR L''HISTOIRE',NUH
#          WRITE(6,*)
#          READ(5,*)ZFF,ZFP,ZFB
#          IF((ZFF.LT.0.).OR.(ZFF.GT.1.))THEN
#            WRITE(6,*)'ZFF DOIT ETRE COMPRIS ENTRE 0 ET 1'
#            GOTO 40
#          ENDIF
#          IF((ZFP.LT.0.).OR.(ZFP.GT.1.))THEN
#            WRITE(6,*)'ZFP DOIT ETRE COMPRIS ENTRE 0 ET 1'
#            GOTO 40
#          ENDIF
#          IF((ZFB.LT.0.).OR.(ZFB.GT.1.))THEN
#            WRITE(6,*)'ZFB DOIT ETRE COMPRIS ENTRE 0 ET 1'
#            GOTO 40
#          ENDIF
#          SZF=ZFF+ZFP+ZFB
#          IF((SZF.LT.0.).OR.(SZF.GT.1.))THEN
#            WRITE(6,*)'LA SOMME DES ZF DOIT ETRE COMPRISE ENTRE 0 ET 1'
#            GOTO 40
#          ENDIF
#50        WRITE(6,*)'ENTREE DES TEMPERATURES DE DEBUT ET DE FIN'
#          WRITE(6,*)'   DE TRANSFORMATION POUR L''HISTOIRE',NUH
#          WRITE(6,*)
#          N=0
#          IF(ZFF.GT.0.029)THEN
#            WRITE(6,*)'ENTREZ LES TEMPERATURES DE DEBUT'
#            WRITE(6,*)'  ET DE FIN DE TRANSFORMATION'
#            WRITE(6,*)'    FERRITIQUE TDF ET TFF'
#            READ(5,*)TDF,TFF
#            IF((TDF.GT.AR3).OR.(TDF.LT.TMIN))THEN
#              N=1
#            ENDIF
#            IF((TFF.GT.AR3).OR.(TFF.LT.TMIN))THEN
#              N=1
#            ENDIF
#          ELSE
#            TDF=0.
#            TPZF=0.
#          ENDIF
#          IF(ZFP.GT.0.029) THEN
#            WRITE(6,*)'ENTREZ LES TEMPERATURES DE DEBUT'
#            WRITE(6,*)'  ET DE FIN DE TRANSFORMATION'
#            WRITE(6,*)'     PERLITIQUE TDP ET TFP'
#            READ(5,*)TDP,TFP
#            IF((TDP.GT.AR3).OR.(TDP.LT.TMIN))THEN
#              N=1
#            ENDIF
#            IF((TFP.GT.AR3).OR.(TFP.LT.TMIN))THEN
#              N=1
#            ENDIF
#          ELSE
#            TDP=0.
#            TPZP=0.
#          ENDIF
#          IF(ZFB.GT.0.029) THEN
#            WRITE(6,*)'ENTREZ LES TEMPERATURES DE DEBUT'
#            WRITE(6,*)'  ET DE FIN DE TRANSFORMATION'
#            WRITE(6,*)'    BAINITIQUE TDB ET TFB'
#            READ(5,*) TDB,TFB
#            IF((TDB.GT.AR3).OR.(TDB.LT.TMIN))THEN
#              N=1
#            ENDIF
#            IF((TFB.GT.AR3).OR.(TFB.LT.TMIN))THEN
#              N=1
#            ENDIF
#          ELSE
#            TDB=0.
#            TPZB=0.
#          ENDIF
#          IF(N.EQ.1)THEN
#            WRITE(6,*)'ATTENTION ! IL EST IMPERATIF DE NE SAISIR QUE'
#            WRITE(6,*)'DES TEMPERATURES COMPRISES ENTRE AR3 ET TMIN '
#            GOTO 50
#          ENDIF
#C VALIDATION DE L'HISTOIRE CONSIDEREE
#          WRITE(6,*)
#     &   'VALIDEZ-VOUS L HISTOIRE NUMERO (OUI=0 NON=1)',NUH
#          WRITE(6,*)
#          WRITE(6,*)'TPOINT A 700 DEGRES'
#          WRITE(6,1)TP700
#          WRITE(6,*)
#          WRITE(6,*)'    ZFF   ,    TDF   ,    TFF'
#          IF(ZFF.GT.0.029)THEN
#            WRITE(6,3)ZFF,TDF,TFF
#          ELSE
#            WRITE(6,1)ZFF
#          ENDIF
#          WRITE(6,*)'    ZFP   ,    TDP   ,    TFP'
#          IF(ZFP.GT.0.029)THEN
#            WRITE(6,3)ZFP,TDP,TFP
#          ELSE
#            WRITE(6,1)ZFP
#          ENDIF
#          WRITE(6,*)'    ZFB   ,    TDB   ,    TFB'
#          IF(ZFB.GT.0.029)THEN
#            WRITE(6,3)ZFB,TDB,TFB
#          ELSE
#            WRITE(6,1)ZFB
#          ENDIF
#          READ(5,*)V
#          IF(V.NE.0.) THEN
#            GOTO 30
#          ENDIF
#C CONSTRUCTION DE LA SUITE DES TEMPERATURES DE L HISTOIRE COMPLETE
#          K=1
#          T(K)=AR3
#          IF(ZFF.GT.0.029)THEN
#            DZF=ZFF-0.02
#            TPZF=(TDF-TFF)/DZF
#            T(K+1)=TDF+2.*TPZF*0.01
#            T(K+2)=TDF
#            T(K+3)=TFF
#            T(K+4)=TFF-2.*TPZF*0.01
#            K=K+4
#          ENDIF
#          IF(ZFP.GT.0.029)THEN
#            DZP=ZFP-0.02
#            TPZP=(TDP-TFP)/DZP
#            T(K+1)=TDP+2.*TPZP*0.01
#            J=K
#100         IF(T(K+1).GT.T(J))THEN
#              J=J-1
#              GOTO 100
#            ENDIF
#            IF(J.LT.(K))THEN
#C             ECRITURE DU PT K+1 APRES LE PT J
#              TS=T(K+1)
#              DO 110 I=K+1,J+2,-1
#                T(I)=T(I-1)
#110           CONTINUE
#              T(J+1)=TS
#            ENDIF
#            T(K+2)=TDP
#            J=K+1
#120         IF(T(K+2).GT.T(J))THEN
#              J=J-1
#              GOTO 120
#            ENDIF
#            IF(J.LT.(K+1))THEN
#C             ECRITURE DU PT K+2 APRES LE PT J
#              TS=T(K+2)
#              DO 130 I=K+2,J+2,-1
#                T(I)=T(I-1)
#130           CONTINUE
#              T(J+1)=TS
#            ENDIF
#            T(K+3)=TFP
#            J=K+2
#140         IF(T(K+3).GT.T(J))THEN
#              J=J-1
#              GOTO 140
#            ENDIF
#            IF(J.LT.(K+2))THEN
#C             ECRITURE DU PT K+3 APRES LE PT J
#              TS=T(K+3)
#              DO 150 I=K+3,J+1,-1
#                T(I)=T(I-1)
#150           CONTINUE
#              T(J+1)=TS
#            ENDIF
#            T(K+4)=TFP-2.*TPZP*0.01
#            J=K+3
#160         IF(T(K+4).GT.T(J))THEN
#              J=J-1
#              GOTO 160
#            ENDIF
#            IF(J.LT.(K+3))THEN
#C             ECRITURE DU PT K+4 APRES LE PT J
#              IF(T(J+1).EQ.T(J))THEN
#                K=K-1
#              ENDIF
#              TS=T(K+4)
#              DO 170 I=K+4,J+2,-1
#                T(I)=T(I-1)
#170           CONTINUE
#              T(J+1)=TS
#            ENDIF
#            K=K+4
#          ENDIF
#          IF(ZFB.GT.0.029)THEN
#            DZ=ZFB-0.02
#            TPZB=(TDB-TFB)/DZ
#            T(K+1)=TDB+2.*TPZB*0.01
#            J=K
#180         IF(T(K+1).GT.T(J))THEN
#              J=J-1
#              GOTO 180
#            ENDIF
#            IF(J.LT.(K))THEN
#C             ECRITURE DU PT K+1 APRES LE PT J
#              TS=T(K+1)
#              DO 190 I=K+1,J+2,-1
#                T(I)=T(I-1)
#190           CONTINUE
#              T(J+1)=TS
#            ENDIF
#            T(K+2)=TDB
#            J=K+1
#200         IF(T(K+2).GT.T(J))THEN
#              J=J-1
#              GOTO 200
#            ENDIF
#            IF(J.LT.(K+1))THEN
#C             ECRITURE DU PT K+2 APRES LE PT J
#              TS=T(K+2)
#              DO 210 I=K+2,J+2,-1
#                T(I)=T(I-1)
#210           CONTINUE
#              T(J+1)=TS
#            ENDIF
#            T(K+3)=TFB
#            J=K+2
#220         IF(T(K+3).GT.T(J))THEN
#              J=J-1
#              GOTO 220
#            ENDIF
#            IF(J.LT.(K+2))THEN
#C             ECRITURE DU PT K+3 APRES LE PT J
#              TS=T(K+3)
#              DO 230 I=K+3,J+2,-1
#                T(I)=T(I-1)
#230           CONTINUE
#              T(J+1)=TS
#            ENDIF
#            T(K+4)=TFB-2.*TPZB*0.01
#            J=K+3
#240         IF(T(K+4).GT.T(J))THEN
#              J=J-1
#              GOTO 240
#            ENDIF
#            IF(J.LT.(K+3))THEN
#C             ECRITURE DU PT K+4 APRES LE PT J
#              TS=T(K+4)
#              DO 250 I=K+4,J+2,-1
#                T(I)=T(I-1)
#250           CONTINUE
#              T(J+1)=TS
#            ENDIF
#            K=K+4
#          ENDIF
#C RETRAIT DES TEMPERATURES EGALES POUR L'HISTOIRE
#          NBT=K
#          DO 310 I=K-1,1,-1
#            EPS(I)=T(I)-T(I+1)
#            EPSI=0.5
#            IF(EPS(I).LT.EPSI)THEN
#              NBT=NBT-1
#              DO 300 L=I,NBT
#                T(L)=T(L+1)
# 300          CONTINUE
#            ENDIF
# 310      CONTINUE
#C CONSTRUCTION DES Z1 ASSOCIES AUX TEMPERATURES DE L'HISTOIRE
#          Z1(1)=0.
#          Z2(1)=0.
#          Z3(1)=0.
#          T11=TDF+2.*TPZF*0.01
#          T12=TDF
#          T13=TFF
#          T14=TFF-2.*TPZF*0.01
#          DO 330 K=2,NBT
#            IF(T(K).GE.T11)THEN
#              Z1(K)=0.
#            ELSE
#              IF(T(K).GE.T12)THEN
#                Z1(K)=0.01*(T(K)-T11)/(T12-T11)
#              ELSE
#                IF(T(K).GE.T13)THEN
#                  Z1(K)=0.01-(T(K)-T12)/TPZF
#                ELSE
#                  IF(T(K).GE.T14)THEN
#                    Z1(K)=ZFF+0.01*((T(K)-T13)/(T14-T13)-1.)
#                  ELSE
#                    Z1(K)=ZFF
#                  ENDIF
#                ENDIF
#              ENDIF
#            ENDIF
#330       CONTINUE
#C CONSTRUCTION DES Z2 ASSOCIES AUX TEMPERATURES DE L'HISTOIRE
#          T21=TDP+2.*TPZP*0.01
#          T22=TDP
#          T23=TFP
#          T24=TFP-2.*TPZP*0.01
#          DO 340 K=2,NBT
#            IF(T(K).GE.T21)THEN
#              Z2(K)=0.
#            ELSE
#              IF(T(K).GE.T22)THEN
#                Z2(K)=0.01*(T(K)-T21)/(T22-T21)
#              ELSE
#                IF(T(K).GE.T23)THEN
#                  Z2(K)=0.01-(T(K)-T22)/TPZP
#                ELSE
#                  IF(T(K).GE.T24)THEN
#                    Z2(K)=ZFP+0.01*((T(K)-T23)/(T24-T23)-1.)
#                  ELSE
#                    Z2(K)=ZFP
#                  ENDIF
#                ENDIF
#              ENDIF
#            ENDIF
#340       CONTINUE
#C CONSTRUCTION DES Z3 ASSOCIES AUX TEMPERATURES DE L'HISTOIRE
#          T31=TDB+2.*TPZB*0.01
#          T32=TDB
#          T33=TFB
#          T34=TFB-2.*TPZB*0.01
#          IF((T34.LT.TFM).OR.(T34.LT.250.D0))THEN
#            T34=TFB-1.5*TPZB*0.01
#          ENDIF
#          DO 350 K=2,NBT
#            IF(T(K).GE.T31)THEN
#              Z3(K)=0.
#            ELSE
#              IF(T(K).GE.T32)THEN
#                Z3(K)=0.01*(T(K)-T31)/(T32-T31)
#              ELSE
#                IF(T(K).GE.T33)THEN
#                  Z3(K)=0.01-(T(K)-T32)/TPZB
#                ELSE
#                  IF(T(K).GE.T34)THEN
#                    Z3(K)=ZFB+0.01*((T(K)-T33)/(T34-T33)-1.)
#                  ELSE
#                    Z3(K)=ZFB
#                  ENDIF
#                ENDIF
#              ENDIF
#            ENDIF
#350       CONTINUE
#C ECRITURE DE L'HISTOIRE DISCRETISEE DANS LE FICHIER NFIRES
#          WRITE(NFIRES,*)'_F(VALE=('
#          WRITE(NFIRES,4)TP700,VIRGULE,P,VIRGULE,A,VIRGULE,B,VIRGULE
#          WRITE(NFIRES,4)C,VIRGULE,D,VIRGULE,E,VIRGULE,F,VIRGULE
#          DO 400 K=1,NBT
#            WRITE(NFIRES,4)Z1(K),VIRGULE,Z2(K),VIRGULE,Z3(K),
#     &                          VIRGULE,T(K),VIRGULE
# 400      CONTINUE
#        WRITE(NFIRES,*)'                   ),'
#        WRITE(NFIRES,*)'             ),'
# 500    CONTINUE
#1000  CONTINUE
#        WRITE(NFIRES,*)'          ),'
#      WRITE(6,*)'******************************************************'
#      WRITE(6,*)'DEFINITION DE LA VARIATION DE MS EN FONCTION DE '
#      WRITE(6,*)'                 ZF + ZP+ ZB '
#      WRITE(6,*)'******************************************************'
#      WRITE(6,*)
#      WRITE(6,*)'POUR UNE VALEUR DONNEE DE P (I.E. POUR DES CONDITIONS'
#      WRITE(6,*)'  D''AUSTENITISATION DONNEES), ON CONSIDERE QUE LA '
#      WRITE(6,*)'TEMPERATURE DE DEBUT DE TRANSFORMATION MARTENSITIQUE'
#      WRITE(6,*)'MS DIMINUE LORSQUE ZF+ZP+ZB DEPASSE UN CERTAIN SEUIL'
#      WRITE(6,*)'  ON A AINSI POUR CHAQUE VALEUR DE P UNE FONCTION : '
#      WRITE(6,*)
#      WRITE(6,*)'MS=MS0                      SI (ZF+ZP+ZB) < SEUIL'
#      WRITE(6,*)'MS=MS0+AKM*(ZF+ZP+ZB)+BKM   SINON'
#      WRITE(6,*)
#      WRITE(6,*)'IL FAUT DE PLUS DEFINIR LA VITESSE DE REFROIDISSEMEMT'
#      WRITE(6,*)'MINIMALE TPLM POUR LAQUELLE IL Y A FORMATION PARTIELLE'
#      WRITE(6,*)'DE MARTENSITE'
#      WRITE(6,*)
#      WRITE(6,*)'ENTREZ LE NOMBRE DE LOI DE VARIATION DE MS EN FONCTION'
#      WRITE(6,*)'      DE (ZF+ZP+ZB) QUE VOUS VOULEZ SAISIR :'
#      READ(5,*)NBTRC
#        WRITE(NFIRES,*)'TEMP_MS=('
#      DO 3000 NUTRC=1,NBTRC
#2000    WRITE(6,*)'ENTREZ LA VALEUR DE P, DU SEUIL DES COEFFICIENTS'
#        WRITE(6,*)'AKM ET BKM ET DE TPLM POUR LA LOI ',NUTRC
#        READ(5,*)P,SEUIL,AKM,BKM,TPLM
#        WRITE(6,*)'VALIDEZ-VOUS LA LOI',NUTRC
#        WRITE(6,*)'TELLE QUE :     P = ',P
#        WRITE(6,*)'            SEUIL = ',SEUIL
#        WRITE(6,*)'              AKM = ',AKM
#        WRITE(6,*)'              BKM = ',BKM
#        WRITE(6,*)'             TPLM = ',BKM
#        WRITE(6,*)'OUI ---> 0'
#        READ(5,*)IOK
#        IF (IOK.NE.0) THEN
#          GOTO 2000
#        ENDIF
#        WRITE(NFIRES,*)'         _F('
#        TOTO1='        P ='
#        TOTO2='    SEUIL ='
#        TOTO3='      AKM ='
#        TOTO4='      BKM ='
#        TOTO5='     TPLM ='
#        WRITE(NFIRES,998)TOTO1,P,VIRGULE
#        WRITE(NFIRES,998)TOTO2,SEUIL,VIRGULE
#        WRITE(NFIRES,998)TOTO3,AKM,VIRGULE
#        WRITE(NFIRES,998)TOTO4,BKM,VIRGULE
#        WRITE(NFIRES,998)TOTO5,TPLM,VIRGULE
#        WRITE(NFIRES,*)'            ),'
#        WRITE(NFIRES,*)'         ),'
#        WRITE(NFIRES,*)'                    );'
#3000  CONTINUE
#   1  FORMAT(1(1PD10.3,1X))
#   3  FORMAT(3(1PD10.3,1X))
#   4  FORMAT(4(1PD10.3,1A,1X))
# 998  FORMAT(1A12,1PD10.3,1A,1X)
# 999  FORMAT(1A20)
#C.......................................................................
#C.    AUTEURS  : F.W                                DATE     : 17.02.92.
#C.......................................................................
#      END
#      SUBROUTINE LXMIN(CHAINE)
#      CHARACTER*(*)     CHAINE
#C     ------------------------------------------------------------------
#C      TRANSFORME LES MAJUSCULES EN MINUSCULES
#C      ROUTINE(S) FORTRAN UTILISEES :        CHAR    ICHAR   LEN
#C     ------------------------------------------------------------------
#      INTEGER      MXCHAR,LONG,FIRST
#      PARAMETER  ( MXCHAR=255 )
#      CHARACTER*1  CLASS(0:MXCHAR)
#      CHARACTER*28 MINUS, MAJOR
#      SAVE         CLASS, FIRST
#      DATA FIRST/0/
#      DATA MINUS/'abcdefghijklmnopqrstuvwxyzee'/
#      DATA MAJOR/'ABCDEFGHIJKLMNOPQRSTUVWXYZEE'/
#      IF ( FIRST.EQ.0 ) THEN
#C        INITIALISATION DES TABLES DE CONVERSION
#         FIRST = 1
#         DO 10 I = 0, MXCHAR
#            CLASS(I) = CHAR(I)
# 10      CONTINUE
#         DO 20 I = 1 , 28
#            CLASS(ICHAR(MAJOR(I:I))) = CLASS(ICHAR(MINUS(I:I)))
# 20      CONTINUE
#      ENDIF
#      LONG = LEN(CHAINE)
#      DO 100 ILONG = 1, LONG
#         CHAINE(ILONG:ILONG) = CLASS(ICHAR(CHAINE(ILONG:ILONG)))
# 100  CONTINUE
#      END
