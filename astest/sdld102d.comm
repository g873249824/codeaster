# TITRE SOUS-STRUCTURATION TRANSITOIRE : SYSTEME MASSES-RESSORTS
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#
# CE FICHIER DE COMMANDE CONTIENT LES INSTRUCTIONS POUR CALCULER LA
# REPONSE TRANSITOIRE D'UN SYSTEME COMPOSE DE 3 MASSES ET 4 RESSORTS
# SOUMIS A UNE FORCE CONSTANTE :
#      - PAR CALCUL DIRECT (CALCUL DE REFERENCE),
#      - PAR SOUS-STRUCTURATION DYNAMIQUE TRANSITOIRE.
# TROIS SCHEMAS D'INTEGRATION DE DYNA_VIBRA ('EULER',
# 'DEVOGE' ET 'NEWMARK'), AINSI QUE LA RESTITUTION SUR SQUELETTE
# ET SOUS-STRUCTURE SONT TESTES.
#

DEBUT(CODE=_F(
              NIV_PUB_WEB='INTERNET',),
      DEBUG=_F(SDVERI='OUI',),);

#

LIST_R=DEFI_LIST_REEL(DEBUT=0.,
                      INTERVALLE=_F(JUSQU_A=80.,
                                    NOMBRE=100,),);

#
########################################################################


#          CALCUL PAR SOUS-STRUCTURATION DYNAMIQUE TRANSITOIRE         #
########################################################################


#

PRE_IDEAS(UNITE_IDEAS=19,
          UNITE_MAILLAGE=21,);

#

MAILLA0=LIRE_MAILLAGE(UNITE=21,);

#
MAILLA=CREA_MAILLAGE(MAILLAGE=MAILLA0,
    CREA_POI1=(
        _F(NOM_GROUP_MA='MASSE',   GROUP_NO='MASSE', ),
    ),
)

MODELE=AFFE_MODELE(MAILLAGE=MAILLA,
                   AFFE=(_F(GROUP_MA='RESSORT',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_TR',),
                         _F(GROUP_MA='MASSE',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_T',),),);

#

PARAM=AFFE_CARA_ELEM(MODELE=MODELE,
                     DISCRET=(_F(CARA='K_TR_D_L',
                                 GROUP_MA='RESSORT',
                                 VALE=(1.,0.,0.,0.,0.,0.,),),
                               _F(CARA='M_TR_L',
                                  GROUP_MA='RESSORT',
                                  VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                        0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,),),
                              _F(CARA='M_T_D_N',
                                 GROUP_MA='MASSE',
                                 VALE=1.,),),);

#
# ----- DEFINITION DU CHARGEMENT

CHARGE_L=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=(_F(TOUT='OUI',
                                     DY=0.,
                                     DZ=0.,
                                     DRX=0.,
                                     DRY=0.,
                                     DRZ=0.,),
                                  _F(NOEUD='N1',
                                     DX=0.,),
                                  _F(NOEUD='N3',
                                     DX=0.,),),);

#

CHARTRAN=AFFE_CHAR_MECA(MODELE=MODELE,
                        FORCE_NODALE=_F(NOEUD='N2',
                                        FX=1.,),);

#
# ----- MATRICES ET VECTEURS ELEMENTS FINIS

MERIME_L=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                        MODELE=MODELE,
                        CARA_ELEM=PARAM,
                        CHARGE=CHARGE_L,);

#

MEMAME_L=CALC_MATR_ELEM(OPTION='MASS_MECA',
                        MODELE=MODELE,
                        CARA_ELEM=PARAM,
                        CHARGE=CHARGE_L,);

#

V_ELEM=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=CHARTRAN,);

#
# ----- NUMEROTATION DU PROBLEME ELEMENTS FINIS

NUMDDL_L=NUME_DDL(MATR_RIGI=MERIME_L,);

# ----- ASSEMBLAGE DES MATRICES ET VECTEURS

RAID_L=ASSE_MATRICE(MATR_ELEM=MERIME_L,
                    NUME_DDL=NUMDDL_L,);

#

MASS_L=ASSE_MATRICE(MATR_ELEM=MEMAME_L,
                    NUME_DDL=NUMDDL_L,);

#

V_ASSE=ASSE_VECTEUR(VECT_ELEM=V_ELEM,
                    NUME_DDL=NUMDDL_L,);

#
# ----- CALCUL DES MODES PROPRES DES SS

MODES_L=CALC_MODES(MATR_RIGI=RAID_L,
                   MATR_MASS=MASS_L,
                   CALC_FREQ=_F(NMAX_FREQ=1,
                                ),
                   )


MODES_L=NORM_MODE(reuse=MODES_L,
                  MODE=MODES_L,
                  NORME='MASS_GENE',);

#
# ----- DEFINITION DES INTERFACES

LINT1_CL=DEFI_INTERF_DYNA(NUME_DDL=NUMDDL_L,
                          INTERFACE=_F(NOM='DROITE',
                                       TYPE='CRAIGB',
                                       NOEUD='N3',
                                       MASQUE=('DY','DZ','DRX','DRY','DRZ',),),);

#

LINT2_CL=DEFI_INTERF_DYNA(NUME_DDL=NUMDDL_L,
                          INTERFACE=_F(NOM='GAUCHE',
                                       TYPE='CRAIGB',
                                       NOEUD='N1',
                                       MASQUE=('DY','DZ','DRX','DRY','DRZ',),),);

#
# ----- CALCUL DE LA BASE MODALE DES SOUS-STRUCTURES

BAMO1_CL=DEFI_BASE_MODALE(CLASSIQUE=_F(INTERF_DYNA=LINT1_CL,
                                       MODE_MECA=MODES_L,
                                       NMAX_MODE=1,),);
#

BAMO2_CL=DEFI_BASE_MODALE(CLASSIQUE=_F(INTERF_DYNA=LINT2_CL,
                                       MODE_MECA=MODES_L,
                                       NMAX_MODE=1,),);

#
# ----- CALCUL DU MACRO-ELEMENT

MACEL1=MACR_ELEM_DYNA(BASE_MODALE=BAMO1_CL,);

MACEL2=MACR_ELEM_DYNA(BASE_MODALE=BAMO2_CL,);

#

IMPR_MACR_ELEM(MACR_ELEM_DYNA=MACEL1,
               FORMAT='IDEAS',);

#
# ----- CALCUL SUR MODELE GENERALISE DES SOUS-STRUCTURES

MODEGE=DEFI_MODELE_GENE(SOUS_STRUC=(_F(NOM='COTE1',
                                       MACR_ELEM_DYNA=MACEL1,
                                       ANGL_NAUT = (0., 0., 0.,),
                                       TRANS=(0.,0.,0.),),
                                    _F(NOM='COTE2',
                                       MACR_ELEM_DYNA=MACEL2,
                                       ANGL_NAUT = (0., 0., 0.,),
                                       TRANS=(0.2,0.,0.),),),
                        LIAISON=_F(SOUS_STRUC_1='COTE1',
                                   INTERFACE_1='DROITE',
                                   SOUS_STRUC_2='COTE2',
                                   INTERFACE_2='GAUCHE',),
                        VERIF=_F(STOP_ERREUR='OUI',
                                 PRECISION=1.E-6,
                                 CRITERE='RELATIF',),);

#
# ----- NUMEROTATION DU PROBLEME GENERALISE DES SOUS-STRUCTURES

NUMEGE=NUME_DDL_GENE(MODELE_GENE=MODEGE,METHODE='ELIMINE',STOCKAGE='PLEIN');


#
# ----- ASSEMBLAGE DES MATRICES ET VECTEURS

MASGEN=ASSE_MATR_GENE(NUME_DDL_GENE=NUMEGE,
                      OPTION='MASS_GENE',);

#

RIGGEN=ASSE_MATR_GENE(NUME_DDL_GENE=NUMEGE,
                      OPTION='RIGI_GENE',);

#

FGEN=ASSE_VECT_GENE(NUME_DDL_GENE=NUMEGE,
                    CHAR_SOUS_STRUC=_F(SOUS_STRUC='COTE1',
                                       VECT_ASSE=V_ASSE,),);

#---------------------------------------------------------------------
#
# ----- CALCUL DES MODES PROPRES DE LA STRUCTURE GLOBALE

RESGEN=CALC_MODES(MATR_RIGI=RIGGEN,
                  OPTION='PLUS_PETITE',
                  CALC_FREQ=_F(NMAX_FREQ=3,
                               ),
                  TITRE='CALCUL DES MODES PROPRES DE LA STRUCTURE GLOBALE',
                  MATR_MASS=MASGEN,
                  )


#---------------------------------------------------------------------

SQUEL=DEFI_SQUELETTE(MODELE_GENE=MODEGE,
                     SOUS_STRUC=(_F(NOM='COTE1',
                                    GROUP_MA='RESSORT'
                                    ),
                                 _F(NOM='COTE2',
                                    GROUP_MA='RESSORT'
                                    ),),);

#

MODCOT=REST_SOUS_STRUC(RESU_GENE=RESGEN,
                       TOUT_ORDRE='OUI',
                       SOUS_STRUC='COTE1',);
#

MODGLO=REST_SOUS_STRUC(RESU_GENE=RESGEN,
                       TOUT_ORDRE='OUI',
                       SQUELETTE=SQUEL,);

#
# ----- NUMEROTATION DU PROBLEME GENERALISE

NUMEMODE=NUME_DDL_GENE(BASE=RESGEN,
                       STOCKAGE='DIAG',);

#
# ----- MATRICES ET VECTEURS GENERALISES

MASPRO=PROJ_MATR_BASE(BASE=RESGEN,
                      NUME_DDL_GENE=NUMEMODE,
                      MATR_ASSE_GENE=MASGEN,);

#

RIGPRO=PROJ_MATR_BASE(BASE=RESGEN,
                      NUME_DDL_GENE=NUMEMODE,
                      MATR_ASSE_GENE=RIGGEN,);


VECPRO=PROJ_VECT_BASE(BASE=RESGEN,
                      NUME_DDL_GENE=NUMEMODE,
                      VECT_ASSE_GENE=FGEN,);

# ----- CALCULS TRANSITOIRES

TRANGEN1=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                         SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                         MATR_MASS=MASPRO,
                         MATR_RIGI=RIGPRO,
                         INCREMENT=_F(INST_INIT=0.,
                                      INST_FIN=82.,
                                      PAS=0.01,),
                         ARCHIVAGE=_F(PAS_ARCH=1,),
                         EXCIT=_F(VECT_ASSE_GENE=VECPRO,
                                  COEF_MULT=1.,),);


# ----- VISUALISATION

DEBUG(SDVERI='OUI',);

TRAN1=REST_GENE_PHYS(RESU_GENE=TRANGEN1,
                     MODE_MECA=MODGLO,
                     LIST_INST=LIST_R,
                     INTERPOL='LIN',
                     TOUT_CHAM='OUI',
                     NOEUD='NO3',);

# CAS RAJOUTES POUR LA COUVERTURE DE CODE
TRAN11=REST_SOUS_STRUC(RESU_GENE=TRANGEN1,
                       MODE_MECA=MODGLO,
                       SQUELETTE=SQUEL,
                       LIST_INST=LIST_R,
                       INTERPOL='LIN',
                       TOUT_CHAM='OUI',);

TRAN_SS=REST_GENE_PHYS(RESU_GENE=TRANGEN1,
                       MODE_MECA=MODCOT,
                       LIST_INST=LIST_R,
                       INTERPOL='LIN',
                       TOUT_CHAM='OUI',);


TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN1,
                  NOM_CHAM='DEPL',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.414799297365,
                  VALE_REFE=0.41699999999999998,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN1,
                  NOM_CHAM='VITE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=-0.429722374471,
                  VALE_REFE=-0.43010999999999999,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

#

TEST_RESU(RESU=_F(INST=80.0,
                  RESULTAT=TRAN1,
                  NOM_CHAM='ACCE',
                  NOEUD='NO3',
                  NOM_CMP='DX',
                  VALE_CALC=0.338227920865,
                  VALE_REFE=0.33749000000000001,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=1.E-2,),
          )

FIN();
