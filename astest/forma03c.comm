# MODIF  DATE 06/02/2013   AUTEUR COURTOIS M.COURTOIS 
# RESPONSABLE ABBAS M.ABBAS
# TITRE ENONCE FORMATION PLAQUE TROUEE EN TRACTION EN PLASTICITE - CHARGE LIMITE
# forma03c.para = tps_job 120 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='FORMA03C',
              NIV_PUB_WEB='INTERNET',
VISU_EFICAS='OUI',),DEBUG=_F(SDVERI='OUI'))

# LECTURE DU MAILLAGE
MAIL=LIRE_MAILLAGE(FORMAT='MED',);

MAIL=MODI_MAILLAGE(reuse =MAIL,
                   MAILLAGE=MAIL,
                   ORIE_PEAU_2D=_F(GROUP_MA='haut',),);

# AFFECTATION DU MODELE (CONTRAINTES PLANES)
MODE=AFFE_MODELE(MAILLAGE=MAIL,
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='MECANIQUE',
                         MODELISATION='C_PLAN',),);

# COURBE DE TRACTION
CTRAC = LIRE_FONCTION(UNITE=21,
                      NOM_PARA='EPSI',
                      PROL_DROITE='CONSTANT',)

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=29,
              COURBE=_F(FONCTION=CTRAC,),
              TITRE='Courbe de traction',
              LEGENDE_X='Deformation',
              LEGENDE_Y='Contrainte (MPa)',);


# DEFINITION DU MATERIAU
ACIER =DEFI_MATERIAU(ELAS=_F(E=200000.0,
                         NU=0.3,),
                 TRACTION=_F(SIGM=CTRAC,),);

CHMATE=AFFE_MATERIAU(MAILLAGE=MAIL,
                     AFFE=_F(TOUT='OUI',
                             MATER=ACIER,),);

# CONDITIONS DE SYMETRIE (QUART DE PLAQUE)
CHSYME=AFFE_CHAR_CINE(MODELE=MODE,
                      MECA_IMPO=(_F(GROUP_MA='bas',
                                 DY=0.0,),
                                 _F(GROUP_MA='gauche',
                                 DX=0.0,),),
                                );

# CHARGEMENT EN FORCE
CHFORC=AFFE_CHAR_MECA(MODELE=MODE,
                      FORCE_CONTOUR=_F(GROUP_MA='haut',
                                       FY=1.,),);

# RAMPE APPLICATION CHARGEMENT
RAMPE=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.0,0.0,
                           1000.0,1000.0,
                           ),);



########################################################################
#
# PREMIER CALCUL : RECHERCHE MANUELLE DE LA CHARGE LIMITE
#
########################################################################

# DISCRETISATION EN TEMPS
TFIN  = 243.0;
L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=(_F(JUSQU_A=TFIN,
                                     NOMBRE=10,),
                                  ),);

DEFLIST =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = L_INST,),
                        ECHEC=_F(EVENEMENT='ERREUR',
                                 ACTION='DECOUPE',),)

# CALCUL
RESUNL=STAT_NON_LINE(MODELE=MODE,
                     CHAM_MATER=CHMATE,
                     EXCIT=(_F(CHARGE=CHSYME,),
                            _F(CHARGE=CHFORC,
                               FONC_MULT=RAMPE,),),
                     COMP_INCR=_F(RELATION='VMIS_ISOT_TRAC',),
                     INCREMENT=_F(LIST_INST=DEFLIST,
                                  INST_FIN=TFIN,
                                  ),
                     NEWTON=_F(REAC_ITER=1,),
                     );


########################################################################
#
# PREMIER CALCUL : RECHERCHE MANUELLE DE LA CHARGE LIMITE
#
# EXEMPLE DE GESTION DE LA LISTE AUTOMATIQUE
#
########################################################################

# DISCRETISATION EN TEMPS
TFIN  = 243.0;

# EN GESTION AUTOMATIQUE, ON IMPOSE SEULEMENT LE 1ER PAS DE TEMPS
DEFAUTO=DEFI_LIST_INST(DEFI_LIST=_F(METHODE='AUTO',
                                     VALE=(0., 50., TFIN),
                                     PAS_MINI=1.e-6,
                                     PAS_MAXI=100.)
                      )

# CALCUL
RESUAU=STAT_NON_LINE(MODELE=MODE,
                     CHAM_MATER=CHMATE,
                     EXCIT=(_F(CHARGE=CHSYME,),
                            _F(CHARGE=CHFORC,
                               FONC_MULT=RAMPE,),),
                     COMP_INCR=_F(RELATION='VMIS_ISOT_TRAC',),
                     INCREMENT=_F(LIST_INST=DEFAUTO,
                                  INST_FIN=TFIN,
                                  ),
                     NEWTON=_F(REAC_ITER=1,),
                     );

########################################################################
#
# POST-TRAITEMENTS STANDARDS
#
########################################################################

# INTERPOLATION DES CONTRAINTES AUX NOEUDS
RESUNL=CALC_CHAMP(reuse=RESUNL,RESULTAT=RESUNL,CONTRAINTE=('SIGM_ELNO'))


RESUNL=CALC_CHAMP(reuse =RESUNL,
               RESULTAT=RESUNL,
               CONTRAINTE='SIGM_NOEU');

# INTERPOLATION DES VARIABLES INTERNES AUX NOEUDS
RESUNL=CALC_CHAMP(reuse=RESUNL,RESULTAT=RESUNL,VARI_INTERNE=('VARI_ELNO'))


RESUNL=CALC_CHAMP(reuse =RESUNL,
               RESULTAT=RESUNL,
               VARI_INTERNE='VARI_NOEU',);

########################################################################
#
# IMPRESSION DES RESULTATS
#
########################################################################

IMPR_RESU(FORMAT='MED',
          RESU=_F(RESULTAT=RESUNL,),);

#########################################################################
#
# DEUXIEME CALCUL : CALCUL AVEC PILOTAGE
#
########################################################################

# DISCRETISATION EN TEMPS
TFINPI  = 6.0;
L_INST2=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=(_F(JUSQU_A=TFINPI,
                                     NOMBRE=10,),
                                  ),);

DEFLIST2 =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = L_INST2,),
                        ECHEC=_F(EVENEMENT='ERREUR',
                                 ACTION='DECOUPE',),)

# CALCUL

RESUPI=STAT_NON_LINE(MODELE=MODE,
                     CHAM_MATER=CHMATE,
                     EXCIT=(_F(CHARGE=CHSYME,),
                            _F(CHARGE=CHFORC,
                               TYPE_CHARGE='FIXE_PILO',),),
                     COMP_INCR=_F(RELATION='VMIS_ISOT_TRAC',),
                     INCREMENT=_F(LIST_INST=DEFLIST2,
                                  INST_FIN=TFINPI,),
                     NEWTON=_F(REAC_ITER=1,),
                     PILOTAGE=_F(TYPE='DDL_IMPO',
                                 COEF_MULT=1.0,
                                 GROUP_NO='G',
                                 NOM_CMP='DY',),
                     );


########################################################################
#
# POST-TRAITEMENTS STANDARDS
#
########################################################################

# INTERPOLATION DES CONTRAINTES AUX NOEUDS
RESUPI=CALC_CHAMP(reuse=RESUPI,RESULTAT=RESUPI,CONTRAINTE=('SIGM_ELNO'))


RESUPI=CALC_CHAMP(reuse =RESUPI,
               RESULTAT=RESUPI,
               CONTRAINTE='SIGM_NOEU');

# INTERPOLATION DES VARIABLES INTERNES AUX NOEUDS
RESUPI=CALC_CHAMP(reuse=RESUPI,RESULTAT=RESUPI,VARI_INTERNE=('VARI_ELNO'))


RESUPI=CALC_CHAMP(reuse =RESUPI,
               RESULTAT=RESUPI,
               VARI_INTERNE='VARI_NOEU',);


########################################################################
#
# COURBE FORCE APPLIQUEE  EN FONCTION DU TEMPS (ETA_PILOTAGE)
#
########################################################################


ETA_PILO=RECU_FONCTION(RESULTAT=RESUPI,

                       NOM_PARA_RESU='ETA_PILOTAGE',);

IMPR_FONCTION(FORMAT='TABLEAU',
              COURBE=_F(FONCTION=ETA_PILO,),
              UNITE=8,);

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=81,
              COURBE=_F(FONCTION=ETA_PILO,),
              TITRE=' Fy(ETA_PILOTAGE) fonction du temps',
              LEGENDE_X='Temps',
              LEGENDE_Y='ETA_PILOTAGE',);

########################################################################
#
# IMPRESSION DES RESULTATS
#
########################################################################

IMPR_RESU(FORMAT='MED',
          RESU=_F(RESULTAT=RESUPI,),);

# TESTS - CALCUL SANS PILOTAGE
TEST_RESU(RESU=_F(GROUP_NO='G',
                  INST=243.0,
                  RESULTAT=RESUNL,
                  NOM_CHAM='SIGM_NOEU',
                  NOM_CMP='SIYY',
                  VALE_CALC=243.04100195057001,
                  ),
          )

TEST_RESU(RESU=_F(GROUP_NO='G',
                  INST=243.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESUNL,
                  NOM_CHAM='SIGM_NOEU',
                  NOM_CMP='SIYY',
                  VALE_CALC=243.041001951,
                  VALE_REFE=243.0,
                  PRECISION=2.9999999999999997E-4,),
          )

# TESTS - CALCUL AVEC PILOTAGE
TEST_RESU(RESU=_F(GROUP_NO='G',
                  INST=6.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESUPI,
                  NOM_CHAM='SIGM_NOEU',
                  NOM_CMP='SIYY',
                  VALE_CALC=243.550235619,
                  VALE_REFE=243.0,
                  PRECISION=3.0000000000000001E-3,),
          )

TEST_RESU(RESU=_F(GROUP_NO='G',
                  INST=6.0,
                  REFERENCE='AUTRE_ASTER',
                  RESULTAT=RESUPI,
                  NOM_CHAM='SIGM_NOEU',
                  NOM_CMP='SIYY',
                  VALE_CALC=243.550235619,
                  VALE_REFE=243.04100195057001,
                  PRECISION=3.0000000000000001E-3,),
          )

TEST_RESU(RESU=_F(GROUP_NO='G',
                  INST=6.0,
                  RESULTAT=RESUPI,
                  NOM_CHAM='SIGM_NOEU',
                  NOM_CMP='SIYY',
                  VALE_CALC=243.55023561960999,
                  ),
          )

TEST_FONCTION(VALEUR=_F(VALE_CALC=243.516211248,
                        VALE_REFE=243.0,
                        VALE_PARA=6.0,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=3.0000000000000001E-3,
                        FONCTION=ETA_PILO,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=243.51621,
                        VALE_PARA=6.0,
                        FONCTION=ETA_PILO,
                        ),
              )

FIN();
