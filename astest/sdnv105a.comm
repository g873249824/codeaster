# MODIF  DATE 25/01/2011   AUTEUR PELLET J.PELLET 
# TITRE ROCKING OF A 2D BLOCK RESTING ON A GROUND TABLE
# sdnv105a.para = tps_job 3000 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# RESPONSABLE ABBAS M.ABBAS
# ASTER version 8.3 CALCULATION
# MODELLING WITH DUALISED LAGRANGE CONTACT METHOD
# THE GROUND TABLE IS EXPLICITLY MODELLED
# COMMAND FILE RENEWED SEPTEMBER 2006 BY FV
#

DEBUT(CODE=_F(NOM='SDNV105a',
              NIV_PUB_WEB='INTERNET',
              VISU_EFICAS='OUI',),);
# PHYSICAL PARAMETERS
mu_frot = 0.9;

g = 9.81;

# NUMERICAL-INTEGRATION PARAMETERS

n_iter_max = 40;

pre_glo = 8.e-03;

pre_rel = 1.e-06;

a_HHT_ch = -0.20;
# NEWMARK modified mean acceleration scheme

# TIME-INTEGRATION PARAMETERS
T000 = 0.0;

pas_gro = 0.0025;

pas_fin = 1.e-05;

# ARCHIVING TIME-PARAMETRER (sub-multiple)
pas_arch = 0.0025;

# CHARACTERISTICS COLLISION INSTANTS (multiple of pas_fin)
# AROUND ANALYTICAL RIGID-BODY COLLISION INSTANTS :
# 0.0539034, 0.134478, 0.194700, 0.23971, 0.27335
# 0.05565, 0.1403, 0.20956, 0.2639, 0.3081
TC0P = 0.0025;

TC1M = 0.0525;

TC1P = 0.0575;

TC2M = 0.1400;

TC2P = 0.1450;

TC3M = 0.2050;

TC3P = 0.2125;

TC4M = 0.2575;

TC4P = 0.2650;

TC5M = 0.2975;

TC5P = 0.3075;

TFIN = 0.33;




#TC0P = 0.0025;

#TC1M = 0.0525;

#TC1P = 0.0575;

#TC2M = 0.1350;

#TC2P = 0.1425;

#TC3M = 0.2025;
#
#TC3P = 0.2125;

#TC4M = 0.2550;

#TC4P = 0.2625;

#TC5M = 0.2950;

#TC5P = 0.3025;

#TFIN = 0.33;

#
# instant list applied to block setting under self-weight :
# -1.95 s ->0. s

L_INST_p=DEFI_LIST_REEL(DEBUT=-1.95,
                        INTERVALLE=_F(JUSQU_A=T000,
                                      PAS=0.0075,),);
#instant list applied to releasing from non-vertical position

L_INST=DEFI_LIST_REEL(DEBUT=T000,
                      INTERVALLE=_F(JUSQU_A=1.0,
                                    PAS=pas_gro,),);
#instant list applied to collisions

L_INST_c=DEFI_LIST_REEL(DEBUT=T000,
                        INTERVALLE=_F(JUSQU_A=1.0,
                                      PAS=pas_fin,),);
#instant list applied to archiving

L_INST_A=DEFI_LIST_REEL(DEBUT=T000,
                        INTERVALLE=_F(JUSQU_A=1.0,
                                      PAS=pas_arch,),);
#ACCE = FORMULE(REEL = '''(REEL:INST) = 2*SIN(OMEGA*INST)''');

########################################################
# BLOCK HEIGHT : 800  mm ==> omega_po = 0.12951315
# BLOC HEIGHT : 8000 mm ==> omega_po = 0.04286625
# excitation circular frequency : omega = omega_po * nu
# excitation amplitude : a_x = 9.81 * alpha_x
#
#OMEGA = 2.*pi*10.;

#ACCE = FORMULE(VALE='2*sin(OMEGA*INST)',
#               NOM_PARA='INST',);

#ACCE1=CALC_FONC_INTERP(FONCTION=ACCE,
#                       LIST_PARA=L_INST,
#                       NOM_PARA='INST',
#                       PROL_DROITE='LINEAIRE',
#                       PROL_GAUCHE='LINEAIRE',);
#
#VITE = FORMULE(REEL = '''(REEL:INST) = -2*COS(OMEGA*INST)/OMEGA''');

#VITE = FORMULE(VALE='-2*cos(OMEGA*INST)/OMEGA',
#               NOM_PARA='INST',);

#VITE1=CALC_FONC_INTERP(FONCTION=VITE,
#                       LIST_PARA=L_INST,
#                       NOM_PARA='INST',
#                       PROL_DROITE='LINEAIRE',
#                       PROL_GAUCHE='LINEAIRE',);
#
#DEPL = FORMULE(REEL = '''(REEL:INST) = 2*SIN(OMEGA*INST)/(OMEGA**2)''');

#DEPL = FORMULE(VALE='2*sin(OMEGA*INST)/(OMEGA**2)',
#               NOM_PARA='INST',);

#DEPL1=CALC_FONC_INTERP(FONCTION=DEPL,
#                       LIST_PARA=L_INST,
#                       NOM_PARA='INST',
#                       PROL_DROITE='LINEAIRE',
#                       PROL_GAUCHE='LINEAIRE',);
#
########################################################

PRE_GIBI();

MA=LIRE_MAILLAGE();

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=(_F(GROUP_MA='C1O1',
                                NOM='C1O1',),
                             _F(GROUP_MA='CTGROUND',
                                NOM='CTGROUND',),
                             _F(GROUP_MA='BLOCK',
                                NOM='BLOCK',),),);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(GROUP_MA=('GROUN','BLOCK',),
                       PHENOMENE='MECANIQUE',
                       MODELISATION='C_PLAN',),);

MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_PEAU_2D=_F(GROUP_MA=('CONBAS','CONHAUT',),),
# mot-cle disparu de la version NEW8.3.xx
#                 MODELE=MO,);
                 );

IMPR_RESU(MODELE=MO,
          FORMAT='GMSH',
          UNITE=21,
          RESU=_F(MAILLAGE=MA,),);

#

Table=DEFI_MATERIAU(ELAS=_F(E=1e+14,
                            NU=0.3,
                            RHO=2500.0,
                            AMOR_ALPHA=0.0016,
                            AMOR_BETA=0.0,),);

graphite=DEFI_MATERIAU(ELAS=_F(E=600000000000.0,
                               NU=0.2,
                               RHO=1450.0,
                               AMOR_ALPHA=0.0001,
#                         with AMOR_ALPHA=0.001, rocking does not work !
                               AMOR_BETA=0.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    MODELE=MO,
                    AFFE=(_F(GROUP_MA='GROUN',
                             MATER=Table,),
                          _F(GROUP_MA='BLOCK',
                             MATER=graphite,),),);

# BOUNDARY conditions

CL_fix_t=AFFE_CHAR_MECA(MODELE=MO,
                        DDL_IMPO=(_F(GROUP_NO='S1',
                                     DX=0.0,),
                                  _F(GROUP_NO='CTGROUND',
                                     #DX=0.0,
                                     DY=0.0,),),);

CL_fix_b=AFFE_CHAR_MECA(MODELE=MO,
                        DDL_IMPO=_F(GROUP_NO='O1',
                                    DX=0.0,),);

ini_lach=AFFE_CHAR_MECA(MODELE=MO,
                        DDL_IMPO=(_F(GROUP_NO='O1',
                                     DX=0.0,),
                                  _F(GROUP_NO='C1',
                                     DX=-0.008,),),);
CHA_conp=DEFI_CONTACT(MODELE=MO,
                      FORMULATION   = 'DISCRETE',
                      FROTTEMENT    = 'COULOMB',
                      REAC_GEOM     = 'CONTROLE',
                      NB_ITER_GEOM  = 2,
                      ZONE=_F(
                          GROUP_MA_MAIT  = 'CONBAS',
                          GROUP_MA_ESCL  = 'CONHAUT',
                          TOLE_PROJ_EXT  = 10000.0,
                          APPARIEMENT    = 'NODAL',
                          ALGO_CONT      = 'LAGRANGIEN',
                          ALGO_FROT      = 'LAGRANGIEN',
                          COULOMB        = 0.0,
                        ) ,
                      )

CHA_cont=DEFI_CONTACT(MODELE=MO,
                      FORMULATION   = 'DISCRETE',
                      FROTTEMENT    = 'COULOMB',
                      REAC_GEOM     = 'CONTROLE',
                      NB_ITER_GEOM  = 2,
                      ZONE=_F(
                          GROUP_MA_MAIT  = 'CONBAS',
                          GROUP_MA_ESCL  = 'CONHAUT',
                          TOLE_PROJ_EXT  = 10000.0,
                          APPARIEMENT    = 'NODAL',
                          ALGO_CONT      = 'LAGRANGIEN',
                          ALGO_FROT      = 'LAGRANGIEN',
                          COULOMB        = mu_frot,
                        ) ,
                      )

# SELF WEIGHT

ramp_pes=DEFI_FONCTION(NOM_PARA='INST',
                       VALE=(-1.95,0.0,-1.65,1.0,0.0,1.0,),
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

CHA_pes=AFFE_CHAR_MECA(MODELE=MO,
PESANTEUR=_F(GRAVITE=9.81,
                                     DIRECTION=(0.,-1.,0.,),),
                       );
# SELF WEIGHT CALCULATION

u_pesa=DYNA_NON_LINE(MODELE=MO, CHAM_MATER=CHMAT,
                     EXCIT=(_F(CHARGE=CHA_pes,
                               FONC_MULT=ramp_pes,),
                            _F(CHARGE=CL_fix_b,),
                            _F(CHARGE=CL_fix_t,),),
                     CONTACT=CHA_conp,
                     COMP_INCR=_F(RELATION='ELAS',
                                  DEFORMATION='GROT_GDEP',
                                  ALGO_C_PLAN='ANALYTIQUE',),
                     INCREMENT=_F(LIST_INST=L_INST_p,
                                  INST_FIN=-0.825,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.3, ),
                     NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                     SOLVEUR=_F(SYME='OUI',
                                METHODE='LDLT',),
                     CONVERGENCE=_F(RESI_GLOB_MAXI=0.002,
                                    RESI_GLOB_RELA=1.e-06,
                                    ITER_GLOB_MAXI=n_iter_max,
                                    ARRET='OUI',),
                     INFO=1,);
#

DY_C1_pe=RECU_FONCTION(RESULTAT=u_pesa, TOUT_ORDRE='OUI',
                       NOM_CHAM='DEPL', NOM_CMP='DY',
                       GROUP_NO='C1',
                       NOM_PARA='INST',
                       PROL_DROITE='CONSTANT', PROL_GAUCHE='CONSTANT',
                       );

DY_C1_pl = INFO_FONCTION(MAX = _F(FONCTION=DY_C1_pe,),);
# IMPR_TABLE(TABLE=DY_C1_pl,);
TEST_TABLE(TABLE=DY_C1_pl, NOM_PARA='DY', TYPE_TEST = 'MAX',
           VALE=0.00, PRECISION = 0.00000001, CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=DY_C1_pl, NOM_PARA='DY', TYPE_TEST = 'MIN',
           VALE=0.00, PRECISION = 0.00000001, CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',);


#DY_C1_pe=RECU_FONCTION(RESULTAT=u_pesa,
#                       NOM_CHAM='DEPL',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='C1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#VY_O1_pe=RECU_FONCTION(RESULTAT=u_pesa,
#                       NOM_CHAM='VITE',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='O1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#DY_S1_pe=RECU_FONCTION(RESULTAT=u_pesa,
#                       NOM_CHAM='DEPL',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='S1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#VY_C1_pe=RECU_FONCTION(RESULTAT=u_pesa,
#                       NOM_CHAM='VITE',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='C1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#IMPR_FONCTION(FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=DY_O1_pe,
#                         LEGENDE='O1 vertical displacement',
#                         STYLE=1,
#                         COULEUR=1,
#                         MARQUEUR=1,),
#                      _F(FONCTION=VY_O1_pe,
#                         LEGENDE='O1 vertical velocity',
#                         STYLE=1,
#                         COULEUR=2,),
#                      _F(FONCTION=DY_C1_pe,
#                         LEGENDE='C1 vertical displacement',
#                         STYLE=1,
#                         COULEUR=2,),
#                      _F(FONCTION=VY_C1_pe,
#                         LEGENDE='C1 vertical velocity',
#                         STYLE=1,
#                         COULEUR=2,),
#                      _F(FONCTION=DY_S1_pe,
#                         LEGENDE='S1 vertical displacement',
#                         STYLE=1,
#                         COULEUR=2,),
#                      ),
#              UNITE=8,
#              SEPARATEUR=';',);

##IMPR_RESU(RESU=_F(MAILLAGE=MA,
##RESULTAT=u_pesa,
##NOM_CHAM='DEPL',
##TOUT_ORDRE='OUI',
##TOUT_CMP='OUI',),);

# FRONTAL COLLISION CALCULATION
# Not ready


# initial non-vertical position leaning CALCULATION

ramp_ila=DEFI_FONCTION(NOM_PARA='INST',
                       VALE=(-1.95,0.0,-1.2,0.0,-1.1,0.005,
                             -1.0,0.1,-0.8,0.3,-0.5,1.0,0.0,1.0,),
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

u_ini_la=DYNA_NON_LINE(MODELE=MO, CHAM_MATER=CHMAT,
#u_ini_la=STAT_NON_LINE(MODELE=MO,
                       EXCIT=(_F(CHARGE=CHA_pes,
                                 FONC_MULT=ramp_pes,),
                              _F(CHARGE=CL_fix_t,),
                              _F(CHARGE=ini_lach,
                                 FONC_MULT=ramp_ila,),),
                       CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_pesa,
                                    INST=-1.05, PRECISION=1.e-05,),
                       INCREMENT=_F(LIST_INST=L_INST_p,
                                    INST_FIN=T000,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.6, ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(ARRET='NON',
                                      RESI_GLOB_MAXI=0.0001,
                                      RESI_GLOB_RELA=1.e-05,
                                      ITER_GLOB_MAXI=20,),);

#DY_O1_il=RECU_FONCTION(RESULTAT=u_ini_la,
#                       NOM_CHAM='DEPL',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='O1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#VY_O1_il=RECU_FONCTION(RESULTAT=u_ini_la, GROUP_NO='O1',
#                       NOM_CHAM='VITE', NOM_CMP='DY',
#                       TOUT_ORDRE='OUI', NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#DX_C1_il=RECU_FONCTION(RESULTAT=u_ini_la,
#                       NOM_CHAM='DEPL',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DX',
#                       GROUP_NO='C1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#DY_S1_il=RECU_FONCTION(RESULTAT=u_ini_la,
#                       NOM_CHAM='DEPL',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='S1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#IMPR_FONCTION(UNITE=8,FORMAT='TABLEAU', SEPARATEUR=';',
#              COURBE=(
#                      _F(FONCTION=DX_C1_il,
#                         LIST_PARA=L_INST_p,
#                         LEGENDE='C1 horizontal displacement',
#                         STYLE=1,),
#                      _F(FONCTION=DY_O1_il,
#                         LIST_PARA=L_INST_p,
#                         LEGENDE='O1 vertical displacement',
#                         STYLE=1,),
#                      _F(FONCTION=DY_S1_il,
#                         LIST_PARA=L_INST_p,
#                         LEGENDE='S1 vertical velocity',
#                         STYLE=1,),
#                      _F(FONCTION=VY_O1_il,
#                         LIST_PARA=L_INST_p,),),
#              );

#T_en_ila=POST_ELEM(ENER_POT=_F(GROUP_MA='BLOCK',),
#                   MODELE=MO,
#                   CHAM_MATER=CHMAT,
#                   RESULTAT=u_ini_la,);

#IMPR_TABLE(TABLE=T_en_ila,
#           FORMAT='TABLEAU',
#           UNITE=8,
#           NOM_PARA=('INST','TOTALE',),);

#T_ci_ila=POST_ELEM(ENER_CIN=_F(GROUP_MA='BLOCK',),
#                   MODELE=MO,
#                   CHAM_MATER=CHMAT,
#                   RESULTAT=u_ini_la,);

#IMPR_TABLE(TABLE=T_ci_ila,
#           FORMAT='TABLEAU',
#           UNITE=8,
#           NOM_PARA=('INST','TOTALE',),);

#####
# FREE rocking from non-vertical position CALCULATION

# Initial state before release
Ini_depl = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='EXTR',
                      RESULTAT=u_ini_la, NOM_CHAM='DEPL',
                      INST=0.0,);
Ini_vite = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='EXTR',
                      RESULTAT=u_ini_la, NOM_CHAM='VITE',
                      INST=0.0,);
Ini_vit0 = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='ASSE',
                      MODELE=MO,
                      ASSE=_F(TOUT='OUI',
                              CHAM_GD=Ini_vite, COEF_R=0.0,),);

#

u_lacher=DYNA_NON_LINE(MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                       CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(DEPL = Ini_depl,
                                    VITE = Ini_vit0,),
#                       ETAT_INIT=_F(EVOL_NOLI=u_ini_la,
#                                    INST=0.0,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC0P,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),

                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.1, ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC0P, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC1M,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = 0., ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC1M, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC1P,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = a_HHT_ch, ),
#                      NEWMARK=_F(ALPHA=0.5,DELTA=0.5,),
# This choice gives spurious results, not during the collision step,
# but during the following free rocking step,
# though proposed sometimes by several authors
# That is why, the alpha-HHT choice seems better.
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC1P, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC2M,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0., ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                            ),
                            CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC2M, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC2P,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                      SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = a_HHT_ch, ),
                      NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC2P, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC3M,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0., ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC3M, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC3P,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = a_HHT_ch, ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC3P, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC4M,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0., ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC4M, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC4P,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = a_HHT_ch, ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC4P, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC5M,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0., ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC5M, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC5P,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = a_HHT_ch, ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO, CHAM_MATER=CHMAT,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=CL_fix_t,),
                              ),
                              CONTACT=CHA_cont,
                       COMP_INCR=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    ALGO_C_PLAN='ANALYTIQUE',),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC5P, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TFIN,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     MODI_EQUI='NON',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0., ),
                       NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
                       SOLVEUR=_F(SYME='OUI',
                                  METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

# # # # # # # # # # # #
# POST-TREATMENT
# # # # # # # # # # # #

u_lacher=CALC_ELEM(reuse =u_lacher,

                   RESULTAT=u_lacher,
                   TOUT_ORDRE='OUI',
                   TYPE_OPTION='TOUTES',
                   OPTION='SIEF_ELNO',);

u_lacher=CALC_NO(reuse =u_lacher,
                 RESULTAT=u_lacher,
                 TOUT_ORDRE='OUI',
                 OPTION='FORC_NODA',
                           );

#B_tr_ext=POST_ELEM(TRAV_EXT=_F(),
#                   RESULTAT=u_lacher,
#                   TOUT_ORDRE='OUI',);

#B_en_ela=POST_ELEM(ENER_ELAS=_F(GROUP_MA='BLOCK',),
#                   MODELE=MO, CHAM_MATER=CHMAT,
#                   RESULTAT=u_lacher,);

#G_en_kin=POST_ELEM(ENER_CIN=_F(GROUP_MA='GROUN',),
#                   MODELE=MO, CHAM_MATER=CHMAT,
#                   RESULTAT=u_lacher,);

B_en_kin=POST_ELEM(ENER_CIN=_F(GROUP_MA='BLOCK',),
                   MODELE=MO, CHAM_MATER=CHMAT,
                   RESULTAT=u_lacher,);

#B_ma_ine=POST_ELEM(MASS_INER=_F(GROUP_MA='BLOCK',
#                                ORIG_INER=(0.0,0.0,0.0,),),
#                   MODELE=MO, CHAM_MATER=CHMAT,);

# Displacements

DY_O1_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O1',
                       NOM_CHAM='DEPL', NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

DX_O1_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O1',
                       NOM_CHAM='DEPL', NOM_CMP='DX',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

DX_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
                       NOM_CHAM='DEPL', NOM_CMP='DX',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

DY_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
                       NOM_CHAM='DEPL', NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

DX_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
                       NOM_CHAM='DEPL', NOM_CMP='DX',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

DY_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
                       NOM_CHAM='DEPL', NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

# Velocities
VX_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
                       NOM_CHAM='VITE', NOM_CMP='DX',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

VY_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
                       NOM_CHAM='VITE', NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

VX_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
                       NOM_CHAM='VITE', NOM_CMP='DX',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

VY_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
                       NOM_CHAM='VITE', NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

VY_O1_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O1',
                       NOM_CHAM='VITE', NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

# Corners conditions (sticking, sliding)

#VC_O=POST_RELEVE_T(ACTION=_F(INTITULE='VC_O',
#                             GROUP_NO='O',
#                             RESULTAT=u_lacher,
#                             NOM_CHAM='VALE_CONT',
#                             TOUT_ORDRE='OUI',
#                             NOM_CMP=('CONT'),
#                             OPERATION='EXTRACTION',),);

#VC_A=POST_RELEVE_T(ACTION=_F(INTITULE='VC_A',
#                             GROUP_NO='A',
#                             RESULTAT=u_lacher,
#                             NOM_CHAM='VALE_CONT',
#                             TOUT_ORDRE='OUI',
#                             NOM_CMP=('CONT'),
#                             OPERATION='EXTRACTION',),);

# Corners reactions

RN_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
                      NOM_CHAM='VALE_CONT', NOM_CMP='RN',
                      TOUT_ORDRE='OUI', NOM_PARA='INST',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',);

RX_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
                      NOM_CHAM='VALE_CONT', NOM_CMP='RX',
                      TOUT_ORDRE='OUI', NOM_PARA='INST',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',);

RN_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
                      NOM_CHAM='VALE_CONT', NOM_CMP='RN',
                      TOUT_ORDRE='OUI', NOM_PARA='INST',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',);

RX_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
                      NOM_CHAM='VALE_CONT', NOM_CMP='RX',
                      TOUT_ORDRE='OUI', NOM_PARA='INST',
                     PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',);

# Printing Displacements

IMPR_FONCTION(UNITE = 8,
              FORMAT='TABLEAU', SEPARATEUR=';',
              COURBE=(_F(FONCTION=DX_O_la,
                         LEGENDE='horizontal displacement at O',
                        ),
                      _F(FONCTION=DY_O_la,
                         LEGENDE='vertical displacement at O',
                        ),
                      _F(FONCTION=DX_A_la,
                         LEGENDE='horizontal displacement at A',
                        ),
                      _F(FONCTION=DY_A_la,
                         LEGENDE='vertical displacement at A',
                        ),
                     ),);
#IMPR_FONCTION(UNITE = 29,
#              FORMAT='XMGRACE',
#              COURBE=(_F(FONCTION=DX_O_la,
#                         LEGENDE='horizontal displacement at O',
#                        ),
#                      _F(FONCTION=DY_O_la,
#                         LEGENDE='vertical displacement at O',
#                        ),
#                      _F(FONCTION=DX_A_la,
#                         LEGENDE='horizontal displacement at A',
#                        ),
#                      _F(FONCTION=DY_A_la,
#                         LEGENDE='vertical displacement at A',
#                        ),
#                     ),);
#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU', SEPARATEUR=';',
#              COURBE=(_F(FONCTION=DX_O1_la,
#                         LEGENDE='horizontal displacement at O1',
#                        ),
#                      _F(FONCTION=DY_O1_la,
#                         LEGENDE='vertical displacement at O1',
#                        ),
#                      ),);

# Printing Velocities
#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU', SEPARATEUR=';',
#              COURBE=(_F(FONCTION=VX_O_la,
#                         LEGENDE='horizontal velocity at O',
#                        ),
#                      _F(FONCTION=VY_O_la,
#                         LEGENDE='vertical velocity at O',
#                        ),
#                      _F(FONCTION=VX_A_la,
#                         LEGENDE='horizontal velocity at A',
#                        ),
#                      _F(FONCTION=VY_A_la,
#                         LEGENDE='vertical velocity at A',
#                        ),
#                     ),);
#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU', SEPARATEUR=';',
#              COURBE=(_F(FONCTION=VY_O1_la,
#                         LEGENDE='vertical velocity at O1',
#                     ),),
#              );
# Printing Corners reactions

#IMPR_FONCTION(FORMAT='TABLEAU', SEPARATEUR=';',
#              COURBE=(_F(FONCTION=RN_O_la,),
#                      _F(FONCTION=RX_O_la,),
#                      _F(FONCTION=RN_A_la,),
#                      _F(FONCTION=RX_A_la,),),
#              UNITE=8,
#              );

# Printing Energies

#IMPR_TABLE(TABLE=B_tr_ext, FORMAT='TABLEAU', UNITE=8,
#           NOM_PARA=('INST','TRAV_ELAS','TRAV_REEL',),
#          );

#IMPR_TABLE(TABLE=B_en_ela, FORMAT='TABLEAU', UNITE=8,
#           NOM_PARA=('INST','TOTALE',),
#           );

#IMPR_TABLE(TABLE=G_en_kin, FORMAT='TABLEAU', UNITE=8,
#           NOM_PARA=('INST','TOTALE',),
#           );

IMPR_TABLE(TABLE=B_en_kin, FORMAT='TABLEAU', UNITE=8,
           NOM_PARA=('INST','TOTALE',),
           );

# Printing Corners conditions (sticking, sliding)

#IMPR_TABLE(TABLE=VC_O, FORMAT='TABLEAU', UNITE=8,
#           NOM_PARA=('INST','CONT',),
#           );

#IMPR_TABLE(TABLE=VC_A, FORMAT='TABLEAU', UNITE=8,
#           NOM_PARA=('INST','CONT',),
#           );

#IMPR_RESU(FORMAT='GMSH', UNITE= 37,
#          MODELE=MO,
#          RESU=_F(
#                  MAILLAGE=MA,
#                  RESULTAT=u_lacher,
#                  NOM_CHAM='DEPL',
#                  NUME_ORDRE= (5, 15, 25, 35, 45, 55, 65, 75, 85, 95,
#                             105,115,125,135,145,155,165,175,185,195,
#                             205,215,225,235,245,255,265,275,285,295,
#                             305,315,325,335,345,355,365,375,385,395,
#                             405,415,425,435,445,455,465,475,485,495,
#                             505,515,525,535,545,555,565,575,585,595,
#                             605,615,625,635,645,655,665,675,685,695,
#                             705,715,725,735,745,755,765,775,785,795,
#                             805,815,825,835,845,855,865,875,885,895,
#                             905,915,925,935,945,955,965,975,985,995,
#                   1005,1015,1025,1035,1045,1055,1065,1075,1085,1095,
#                   1105,1115,1125,1135,1145,1155,1165,1175,1185,1195,
#                   1205,1215,1225,1235,1245,1255,1265,1275,1285,1295,
#                   1305,1315,1325,1335,1345,1355,1365,1375,1385,1395,
#                             ),
#                  TOUT_CMP='OUI',
#                  ),);

# # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Printing and checking some extrema and other values
# # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Remark : first values : comparison with rigid body model
#          second values : comparison with estimated
#                           restitution coefficient
#

DY_O_max = INFO_FONCTION(MAX = _F(FONCTION=DY_O_la,),);

TEST_TABLE(TABLE=DY_O_max, NOM_PARA='DY', TYPE_TEST = 'MIN',
           VALE= 0.0000, PRECISION = 0.001, CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=DY_O_max, NOM_PARA='DY', TYPE_TEST = 'MAX',
           VALE= 0.002011, PRECISION = 0.42, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=DY_O_max, NOM_PARA='DY', TYPE_TEST = 'MAX',
           VALE= 0.002247, PRECISION = 0.27, REFERENCE='ANALYTIQUE',);


DY_A_max = INFO_FONCTION(MAX = _F(FONCTION=DY_A_la,),);

TEST_TABLE(TABLE=DY_A_max, NOM_PARA='DY', TYPE_TEST = 'MIN',
           VALE= 0.0000, PRECISION = 0.001, CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=DY_A_max, NOM_PARA='DY', TYPE_TEST = 'MAX',
           VALE= 0.00360, PRECISION = 0.001, REFERENCE='ANALYTIQUE',);

# # #

VY_O_min = INFO_FONCTION(MAX = _F(FONCTION=VY_O_la,),);


VY_O_tab = CREA_TABLE(FONCTION=_F(FONCTION=VY_O_la),);
VY_O_mi2 = RECU_FONCTION(TABLE=VY_O_tab, PARA_X='INST', PARA_Y='DY',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.17,),),);
VY_O_ti2 = CREA_TABLE(FONCTION=_F(FONCTION=VY_O_mi2),);


TEST_TABLE(TABLE=VY_O_ti2, NOM_PARA='DY', TYPE_TEST = 'MIN',
           VALE=-0.0646, PRECISION = 0.035, REFERENCE='NON_REGRESSION',
           VERSION = '8.02',);


VY_A_min = INFO_FONCTION(MAX = _F(FONCTION=VY_A_la,),);


# # # # # # # # # # # # # # # #
# Vertical reactions

RN_O_max = INFO_FONCTION(MAX = _F(FONCTION=RN_O_la,),);
TEST_TABLE(TABLE=RN_O_max, NOM_PARA='RN', TYPE_TEST = 'MIN',
           VALE= 0.0000, PRECISION = 0.001, CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',);

RN_O_lat = CREA_TABLE(FONCTION=_F(FONCTION=RN_O_la),);
RN_O_ma0 = RECU_FONCTION(TABLE=RN_O_lat, PARA_X='INST', PARA_Y='RN',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='LT',
                                   VALE=0.05,),
                                 _F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.01,),),);
RN_O_mat = CREA_TABLE(FONCTION=_F(FONCTION=RN_O_ma0),);
TEST_TABLE(TABLE=RN_O_mat, NOM_PARA='RN', TYPE_TEST = 'MAX',
           VALE= 3580., PRECISION = 0.01, REFERENCE='ANALYTIQUE',);


RN_A_max = INFO_FONCTION(MAX = _F(FONCTION=RN_A_la,),);
TEST_TABLE(TABLE=RN_A_max, NOM_PARA='RN', TYPE_TEST = 'MIN',
           VALE= 0.0000, PRECISION = 0.001, CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',);

RN_A_lat = CREA_TABLE(FONCTION=_F(FONCTION=RN_A_la),);
RN_A_ma0 = RECU_FONCTION(TABLE=RN_A_lat, PARA_X='INST', PARA_Y='RN',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='LT',
                                   VALE=0.12,),
                                 _F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.06,),),
                         );
RN_A_mat = CREA_TABLE(FONCTION=_F(FONCTION=RN_A_ma0),);
TEST_TABLE(TABLE=RN_A_mat, NOM_PARA='RN', TYPE_TEST = 'MAX',
           VALE= 3580., PRECISION = 0.01, REFERENCE='ANALYTIQUE',);

# Horizontal reactions

RX_O_lat = CREA_TABLE(FONCTION=_F(FONCTION=RX_O_la),);
RX_O_ma0 = RECU_FONCTION(TABLE=RX_O_lat, PARA_X='INST', PARA_Y='RX',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='LT',
                                   VALE=0.05,),
                                 _F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.01,),),);

RX_O_mat = CREA_TABLE(FONCTION=_F(FONCTION=RX_O_ma0),);



RX_A_lat = CREA_TABLE(FONCTION=_F(FONCTION=RX_A_la),);
RX_A_ma0 = RECU_FONCTION(TABLE=RX_A_lat, PARA_X='INST', PARA_Y='RX',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='LT',
                                   VALE=0.12,),
                                 _F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.06,),),
                         );
RX_A_mat = CREA_TABLE(FONCTION=_F(FONCTION=RX_A_ma0),);
# Suppression en attendant Event-driven (fiche 9332)
#TEST_TABLE(TABLE=RX_A_mat, NOM_PARA='RX', TYPE_TEST = 'MAX',
#           VALE= 1150., PRECISION = 0.01, REFERENCE='ANALYTIQUE',);

# # # # # # # # # # # # # # # #
# Percussions

FN_A_1 = RECU_FONCTION(TABLE=RN_A_lat, PARA_X='INST', PARA_Y='RN',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='GT',
                                    VALE=0.05440,),
                                 _F(NOM_PARA='INST', CRIT_COMP='LT',
                                    VALE=0.05450,),),
                         );
FX_A_1 = RECU_FONCTION(TABLE=RX_A_lat, PARA_X='INST', PARA_Y='RX',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='GT',
                                    VALE=0.05440,),
                                 _F(NOM_PARA='INST', CRIT_COMP='LT',
                                    VALE=0.05450,),),
                         );
PN_A_1 = CALC_FONCTION(INTEGRE=_F(FONCTION=FN_A_1,),);
PX_A_1 = CALC_FONCTION(INTEGRE=_F(FONCTION=FX_A_1,),);


TEST_FONCTION(VALEUR=_F (FONCTION=PN_A_1,NOM_PARA='INST',
                         VALE_PARA=0.05449, VALE_REFE=48.73,
                         PRECISION = 0.20, REFERENCE='ANALYTIQUE',),);

# Suppression en attendant Event-driven (fiche 9332)
#TEST_FONCTION(VALEUR=_F (FONCTION=PX_A_1,NOM_PARA='INST',
#                         VALE_PARA=0.05449, VALE_REFE=15.65,
#                         PRECISION = 0.30, REFERENCE='ANALYTIQUE',),);

# # # # # # # # # # # # # # # # # # # # # #
# Kinetic energies and collisions instants
# # # # # # # # # # # # # # # # # # # # # #
#

TEST_TABLE(TABLE=B_en_kin, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=7.37398, PRECISION = 0.4, REFERENCE='ANALYTIQUE',);

B_en_km1 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),);
B_en_kt1 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_km1),);

TEST_TABLE(TABLE=B_en_kt1, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.05440978, PRECISION = 0.01, REFERENCE='ANALYTIQUE',);


B_en_k_2 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='INST',
                                   CRIT_COMP='GT',
                                   VALE=0.1,),);
B_en_t_2 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_k_2),);

TEST_TABLE(TABLE=B_en_t_2, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=4.1192, PRECISION = 0.17, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_t_2, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=4.6021, PRECISION = 0.080, REFERENCE='ANALYTIQUE',);

B_en_f_2 = RECU_FONCTION(TABLE=B_en_t_2, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),);
B_en_kt2 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_f_2),);

TEST_TABLE(TABLE=B_en_kt2, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.13574, PRECISION = 0.05, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_kt2, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.13820, PRECISION = 0.05, REFERENCE='ANALYTIQUE',);

B_en_k_3 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='INST',
                                   CRIT_COMP='GT',
                                   VALE=0.15,),);
B_en_t_3 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_k_3),);
TEST_TABLE(TABLE=B_en_t_3, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=2.3010, PRECISION = 0.26, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_t_3, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=2.8722, PRECISION = 0.07, REFERENCE='ANALYTIQUE',);

B_en_f_3 = RECU_FONCTION(TABLE=B_en_t_3, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),);
B_en_kt3 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_f_3),);
TEST_TABLE(TABLE=B_en_kt3, NOM_PARA='INST',
           VALE=0.19653, PRECISION = 0.08, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_kt3, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.20272, PRECISION = 0.05, REFERENCE='ANALYTIQUE',);

#

B_en_k_4 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='INST',
                                   CRIT_COMP='GT',
                                   VALE=0.22,),
                         );
B_en_t_4 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_k_4),);
TEST_TABLE(TABLE=B_en_t_4, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=1.2854, PRECISION = 0.47, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_t_4, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=1.7925, PRECISION = 0.07, REFERENCE='ANALYTIQUE',);

B_en_f_4 = RECU_FONCTION(TABLE=B_en_t_4, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),
                         );
B_en_kt4 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_f_4),);
TEST_TABLE(TABLE=B_en_kt4, NOM_PARA='INST',
           VALE=0.24196, PRECISION = 0.10, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_kt4, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.25240, PRECISION = 0.05, REFERENCE='ANALYTIQUE',);

B_en_k_5 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='INST',
                                   CRIT_COMP='GT',
                                   VALE=0.28,),
                         );
B_en_t_5 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_k_5),);
TEST_TABLE(TABLE=B_en_t_5, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=0.7180, PRECISION = 0.67, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_t_5, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=1.1187, PRECISION = 0.09, REFERENCE='ANALYTIQUE',);

B_en_f_5 = RECU_FONCTION(TABLE=B_en_t_5, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),
                         );
B_en_kt5 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_f_5),);
TEST_TABLE(TABLE=B_en_kt5, NOM_PARA='INST',
           VALE=0.27592, PRECISION = 0.15, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_kt5, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.29065, PRECISION = 0.06, REFERENCE='ANALYTIQUE',);


FIN();
