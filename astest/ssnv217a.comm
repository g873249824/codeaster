# TITRE CUBE EN TRACTION SIMPLE ET COMPRESSION AVEC LA LOI ENDO_ORTH_BETON
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='SSNV217A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='OUI'),DEBUG=_F(SDVERI='OUI'))

MA=LIRE_MAILLAGE(FORMAT='MED',);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

BETON=DEFI_MATERIAU(ELAS=_F(E=32000000000.0,
                            NU=0.2,
                            RHO=2400.0,),
                    ENDO_ORTH_BETON=_F(K0=300.0,
                                       K1=10500000.0,
                                       ECROB=1000.0,
                                       ECROD=60000.0,),);

MOMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=BETON,),);

BLOQX=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=_F(GROUP_MA='bloc_x',
                                 DX=0.0,),);

BLOQY=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=_F(GROUP_MA='bloc_y',
                                 DY=0.0,),);

BLOQZ=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=_F(GROUP_MA='bloc_z',
                                 DZ=0.0,),);

DEP_X=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=_F(GROUP_MA='depl_x',
                                 DX=0.0025,),);

DEP_Y=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=_F(GROUP_MA='depl_y',
                                 DY=0.0025,),);

DEP_Z=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=_F(GROUP_MA='depl_z',
                                 DZ=0.0025,),);

DEP_X_2=AFFE_CHAR_MECA(MODELE=MO,
                       DDL_IMPO=_F(GROUP_MA='depl_x',
                                   DX=0.0,),);

DEP_Y_2=AFFE_CHAR_MECA(MODELE=MO,
                       DDL_IMPO=_F(GROUP_MA='depl_y',
                                   DY=0.0,),);

DEP_Z_2=AFFE_CHAR_MECA(MODELE=MO,
                       DDL_IMPO=_F(GROUP_MA='depl_z',
                                   DZ=0.0,),);

FONC_X=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.0,0.0,
                           1.0,1.0,
                           ),PROL_DROITE='CONSTANT',);

FONC_Y=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.0,0.0,
                           1.0,0.0,
                           2.0,1.0,
                           ),PROL_DROITE='CONSTANT',);

FONC_Z=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.0,0.0,
                           2.0,0.0,
                           2.5,0.5,
                           3.0,0.0,
                           4.0,-60.0,
                           ),PROL_DROITE='CONSTANT',);

L_TPS=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=4.0,
                                   NOMBRE=40,),);

L_ARCH=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=4.0,
                                    NOMBRE=40,),);

L_INST=DEFI_LIST_INST(DEFI_LIST=_F(METHODE='MANUEL',
                                   LIST_INST=L_TPS,),
                      ECHEC=_F(SUBD_PAS=10,
                               SUBD_NIVEAU=5,),);

U=STAT_NON_LINE(MODELE=MO,
                CHAM_MATER=MOMAT,
                EXCIT=(_F(CHARGE=DEP_X,
                          FONC_MULT=FONC_X,),
                       _F(CHARGE=BLOQX,),
                       _F(CHARGE=BLOQY,),
                       _F(CHARGE=BLOQZ,),
                       _F(CHARGE=DEP_Y_2,),
                       _F(CHARGE=DEP_Z_2,),),
                COMP_INCR=_F(RELATION='ENDO_ORTH_BETON',
                             ITER_INTE_PAS=-5,),
                INCREMENT=_F(LIST_INST=L_INST,
                             INST_INIT=0.0,
                             INST_FIN=1.0,),
                ARCHIVAGE=_F(LIST_INST=L_ARCH,),
                NEWTON=_F(REAC_ITER=1,),
                ENERGIE=_F(),
);

U=STAT_NON_LINE(reuse =U,
                MODELE=MO,
                CHAM_MATER=MOMAT,
                EXCIT=(_F(CHARGE=DEP_Y,
                          FONC_MULT=FONC_Y,),
                       _F(CHARGE=BLOQX,),
                       _F(CHARGE=BLOQY,),
                       _F(CHARGE=BLOQZ,
                          TYPE_CHARGE='FIXE_CSTE',),
                       _F(CHARGE=DEP_X_2,),),
                COMP_INCR=_F(RELATION='ENDO_ORTH_BETON',
                             ITER_INTE_PAS=-5,),
                ETAT_INIT=_F(EVOL_NOLI=U,),
                INCREMENT=_F(LIST_INST=L_INST,
                             INST_INIT=1.0,
                             INST_FIN=2.0,),
                ARCHIVAGE=_F(LIST_INST=L_ARCH,),
                NEWTON=_F(REAC_ITER=1,),
                ENERGIE=_F(),
);

U=STAT_NON_LINE(reuse =U,
                MODELE=MO,
                CHAM_MATER=MOMAT,
                EXCIT=(_F(CHARGE=DEP_Z,
                          FONC_MULT=FONC_Z,),
                       _F(CHARGE=BLOQX,),
                       _F(CHARGE=BLOQY,),
                       _F(CHARGE=BLOQZ,),
                       _F(CHARGE=DEP_X_2,),
                       _F(CHARGE=DEP_Y_2,),),
                COMP_INCR=_F(RELATION='ENDO_ORTH_BETON',
                             ITER_INTE_PAS=-5,),
                ETAT_INIT=_F(EVOL_NOLI=U,),
                INCREMENT=_F(LIST_INST=L_INST,
                             INST_INIT=2.0,
                             INST_FIN=4.0,),
                ARCHIVAGE=_F(LIST_INST=L_ARCH,),
                NEWTON=_F(REAC_ITER=1,),
                ENERGIE=_F(),
);

TEST_RESU(RESU=_F(NUME_ORDRE=2,
                  POINT=1,
                  RESULTAT=U,
                  NOM_CHAM='VARI_ELGA',
                  NOM_CMP='V1',
                  VALE_CALC=0.86689832,
                  TOLE_MACHINE=1.E-3,
                  MAILLE='M19',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=10,
                  POINT=1,
                  RESULTAT=U,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SIXX',
                  VALE_CALC=8888.8888999999999,
                  TOLE_MACHINE=1.E-3,
                  MAILLE='M19',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=12,
                  POINT=1,
                  RESULTAT=U,
                  NOM_CHAM='VARI_ELGA',
                  NOM_CMP='V2',
                  VALE_CALC=0.85897367999999996,
                  TOLE_MACHINE=1.E-3,
                  MAILLE='M19',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=20,
                  POINT=1,
                  RESULTAT=U,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SIYY',
                  VALE_CALC=8333.2067000000006,
                  TOLE_MACHINE=1.E-3,
                  MAILLE='M19',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=22,
                  POINT=1,
                  RESULTAT=U,
                  NOM_CHAM='VARI_ELGA',
                  NOM_CMP='V3',
                  VALE_CALC=0.86689832,
                  TOLE_MACHINE=1.E-3,
                  MAILLE='M19',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=25,
                  POINT=1,
                  RESULTAT=U,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SIZZ',
                  VALE_CALC=2.4072934399999998E4,
                  TOLE_MACHINE=1.E-3,
                  MAILLE='M19',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=31,
                  POINT=1,
                  RESULTAT=U,
                  NOM_CHAM='VARI_ELGA',
                  NOM_CMP='V7',
                  VALE_CALC=0.89161999999999997,
                  TOLE_MACHINE=1.E-3,
                  MAILLE='M19',),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=40,
                  POINT=1,
                  RESULTAT=U,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SIZZ',
                  VALE_CALC=-5.3333332999999996E5,
                  TOLE_MACHINE=1.E-3,
                  MAILLE='M19',),
          )

# Validation croisee des calculs d'energie :
#-------------------------------------------
ENER1=RECU_TABLE(CO=U,NOM_TABLE='PARA_CALC',);
#IMPR_TABLE(TABLE=ENER1)


U=CALC_CHAMP(reuse = U, FORCE='FORC_NODA', RESULTAT=U, );
ENER2 = POST_ELEM( RESULTAT = U, TRAV_EXT = _F(),)
#IMPR_TABLE(TABLE=ENER2)

# On se sert de ENER1 comme reference pour ENER2 :
TEST_TABLE(CRITERE='RELATIF',
           VALE_CALC=503.91043140284,
           
           NOM_PARA='TRAV_EXT',
           TABLE=ENER1,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=1.0,),
           )

TEST_TABLE(CRITERE='RELATIF',
           VALE_CALC=524.44797530353003,
           
           NOM_PARA='TRAV_EXT',
           TABLE=ENER1,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=2.0,),
           )

TEST_TABLE(CRITERE='RELATIF',
           VALE_CALC=2.4841796608591999E5,
           
           NOM_PARA='TRAV_EXT',
           TABLE=ENER1,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=4.0,),
           )

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='AUTRE_ASTER',
           PRECISION=9.9999999999999995E-07,
           VALE_CALC=503.910431403,
           VALE_REFE=503.91043140284,
           NOM_PARA='TRAV_REEL',
           TABLE=ENER2,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=1.0,),
           )

# A cause du "reuse", il faut cumuler ce que l'on trouve dans ENER1 :
X2=503.91043140284 + 524.44797530353
TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='AUTRE_ASTER',
           PRECISION=1.5E-06,
           VALE_CALC= 1.02835716E+03,
           VALE_REFE=1028.35840670637,
           NOM_PARA='TRAV_REEL',
           TABLE=ENER2,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=2.0,),
           )

# A cause du "reuse", il faut cumuler ce que l'on trouve dans ENER1 :
X3=503.91043140284 + 524.44797530353 + 2.4841796608592E+05
TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='AUTRE_ASTER',
           PRECISION=9.9999999999999995E-07,
           VALE_CALC= 2.49446323E+05,
           VALE_REFE=2.4944632449262636E5,
           NOM_PARA='TRAV_REEL',
           TABLE=ENER2,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=4.0,),
           )

FIN();
