# MODIF  DATE 17/07/2007   AUTEUR PELLET J.PELLET 
# TITRE VALIDATION DE LA LOI D ENDOMMAGEMENT FRAGILE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# A GRADIENT
# RESPONSABLE  gjbhhel E.LORENTZ
#
DEBUT(CODE=_F(NOM='SSNL125A', NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))


# -----------------------------------------------------
#                 MAILLAGE ET MODELE
# -----------------------------------------------------

PRE_GMSH()
MA_L  =  LIRE_MAILLAGE()

MA = CREA_MAILLAGE(
  MAILLAGE = MA_L,
  LINE_QUAD = _F(TOUT = 'OUI')
  )

DEFI_GROUP(reuse  = MA,
  MAILLAGE = MA,
  CREA_GROUP_MA = (
    _F(NOM = 'S_H',    GROUP_MA = 'GM1'),
    _F(NOM = 'S_B',    GROUP_MA = 'GM2'),
    _F(NOM = 'P_B',    GROUP_MA = 'GM3'),
    _F(NOM = 'AXE',    GROUP_MA = 'GM4'),
    _F(NOM = 'MATIERE',UNION = ('S_H','S_B')),
    ),
  CREA_GROUP_NO = (
    _F(GROUP_MA = 'MATIERE'),
    )
  )

MO = AFFE_MODELE(
  MAILLAGE = MA,
  AFFE     = _F(
    GROUP_MA     = 'MATIERE',
    PHENOMENE    = 'MECANIQUE',
    MODELISATION = 'AXIS_GRAD_VARI'
    )
  )



# -----------------------------------------------------
#                  PARAMETRES MATERIAU
# -----------------------------------------------------

FRAG = DEFI_MATERIAU(
  ELAS       = _F(E = 2.E4,  NU = 0.),
  ECRO_LINE  = _F(SY= 2, D_SIGM_EPSI = -2.E4),
  NON_LOCAL  = _F(LONG_CARA = 26**0.5 )
  )


CHMAT = AFFE_MATERIAU(
  MAILLAGE = MA,
  AFFE = (
    _F(GROUP_MA = 'MATIERE', MATER = FRAG),
    )
  )




# -----------------------------------------------------
#                DISCRETISATION EN TEMPS
# -----------------------------------------------------

INSTANTS = DEFI_LIST_REEL(
  DEBUT      = 0,
  INTERVALLE = (
    _F(JUSQU_A = 1.414E-4, NOMBRE =1),
    _F(JUSQU_A = 1.732E-4, NOMBRE =1),
    _F(JUSQU_A = 2.000E-4, NOMBRE =1),
    )
  )

RAMPE = DEFI_FONCTION(
  NOM_PARA = 'INST',
  VALE = (0,0, 1,1)
  )

# -----------------------------------------------------
#                    CHARGEMENT
# -----------------------------------------------------

ZERO = DEFI_CONSTANTE(
  VALE = 0
  )

PROFIL = DEFI_FONCTION(
  NOM_PARA = 'Y',
  VALE     = (-5,0, 0,0, 10,10),
  PROL_GAUCHE = 'CONSTANT',
  PROL_DROITE = 'LINEAIRE'
  )

CINE = AFFE_CHAR_MECA_F(
  MODELE = MO,
  DDL_IMPO = _F(GROUP_NO = 'MATIERE', DX = ZERO, DY = PROFIL)
  )



# -----------------------------------------------------
#                CALCUL NON LINEAIRE
# -----------------------------------------------------


EVOL = STAT_NON_LINE(
  MODELE = MO,
  CHAM_MATER = CHMAT,
  EXCIT = (
    _F(CHARGE = CINE, FONC_MULT = RAMPE),
    ),
  COMP_INCR = _F(
    RELATION    = 'ENDO_FRAGILE',
    DEFORMATION = 'PETIT'
    ),
  INCREMENT = _F(
    LIST_INST = INSTANTS,
    ),
  NEWTON = _F(
    MATRICE = 'TANGENTE',
    REAC_INCR = 1,
    REAC_ITER = 1
    ),
  CONVERGENCE = _F(
    ITER_GLOB_MAXI = 20,
    RESI_REFE_RELA=1.e-6,
    SIGM_REFE=1.,
    VARI_REFE=1.,
    ),
  )



# -----------------------------------------------------
#    EXTRAPOLATION DES VARIABLES INTERNES AUX NOEUDS
# -----------------------------------------------------


EVOL = CALC_ELEM (reuse = EVOL,
  RESULTAT   = EVOL,
  OPTION     = 'VARI_ELNO_ELGA'
  )


EVOL = CALC_NO (reuse = EVOL,
  RESULTAT = EVOL,
  OPTION   = 'VARI_NOEU_ELGA'
   )


# -----------------------------------------------------
#     EXTRACTION DES RESULTATS EN Y = -1 ET Y = 1
# -----------------------------------------------------



RESU=MACR_LIGN_COUPE( RESULTAT   = EVOL,
                      NOM_CHAM   = 'VARI_NOEU_ELGA',
                      LIGN_COUPE = _F( NB_POINTS = 2,
                                       COOR_ORIG = (0,-1),
                                       COOR_EXTR = (0, 1), )
                    )


# -----------------------------------------------------
#      COMPARAISON AVEC LES VALEURS DE REFERENCE
# -----------------------------------------------------


TEST_TABLE(
  REFERENCE = 'ANALYTIQUE',
  VALE      = 0.0251,
  PRECISION = 0.01,
  TABLE     = RESU,
  NOM_PARA  = 'V1',
  FILTRE = (
    _F(NOM_PARA = 'INST'  , VALE = 1.414E-4),
    _F(NOM_PARA = 'COOR_Y', VALE = -1),
    ),
  )

TEST_TABLE(
  REFERENCE = 'ANALYTIQUE',
  VALE      = 0.3437,
  PRECISION = 0.01,
  TABLE     = RESU,
  NOM_PARA  = 'V1',
  FILTRE = (
    _F(NOM_PARA = 'INST'  , VALE = 1.414E-4),
    _F(NOM_PARA = 'COOR_Y', VALE = 1),
    ),
  )

TEST_TABLE(
  REFERENCE = 'ANALYTIQUE',
  VALE      = 0.1106,
  PRECISION = 0.01,
  TABLE     = RESU,
  NOM_PARA  = 'V1',
  FILTRE = (
    _F(NOM_PARA = 'INST'  , VALE = 1.732E-4),
    _F(NOM_PARA = 'COOR_Y', VALE = -1),
    ),
  )

TEST_TABLE(
  REFERENCE = 'ANALYTIQUE',
  VALE      = 0.6045,
  PRECISION = 0.01,
  TABLE     = RESU,
  NOM_PARA  = 'V1',
  FILTRE = (
    _F(NOM_PARA = 'INST'  , VALE = 1.732E-4),
    _F(NOM_PARA = 'COOR_Y', VALE = 1),
    ),
  )

TEST_TABLE(
  REFERENCE = 'ANALYTIQUE',
  VALE      = 0.1877,
  PRECISION = 0.01,
  TABLE     = RESU,
  NOM_PARA  = 'V1',
  FILTRE = (
    _F(NOM_PARA = 'INST'  , VALE = 2.E-4),
    _F(NOM_PARA = 'COOR_Y', VALE = -1),
    ),
  )

TEST_TABLE(
  REFERENCE = 'ANALYTIQUE',
  VALE      = 0.7897,
  PRECISION = 0.01,
  TABLE     = RESU,
  NOM_PARA  = 'V1',
  FILTRE = (
    _F(NOM_PARA = 'INST'  , VALE = 2.E-4),
    _F(NOM_PARA = 'COOR_Y', VALE = 1),
    ),
  )


FIN()
