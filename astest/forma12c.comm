# MODIF  DATE 31/05/2011   AUTEUR NISTOR I.NISTOR 
# TITRE TP DYNAMIQUE LINEAIRE
# forma12c.para = tps_job 180 mem_job 60Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# RESPONSABLE BOYERE E.BOYERE
#-----------------------------------------------------------------------
#

DEBUT(CODE=_F(NOM ='FORMA12C',NIV_PUB_WEB='INTERNET'))

MAIL=LIRE_MAILLAGE(UNITE=20,
                   FORMAT='MED',);

MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=_F(TOUT='OUI',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='3D',),);

BA=DEFI_MATERIAU(ELAS=_F(E=2E10,
                         NU=.2,
                         RHO=2500.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(TOUT='OUI',
                            MATER=BA,),);

BLOCAGE=AFFE_CHAR_MECA(MODELE=MODELE,
                       DDL_IMPO=_F(GROUP_MA='Enca',
                                   DX=0.0,
                                   DY=0.0,
                                   DZ=0.0,),);

MACRO_MATR_ASSE(MODELE=MODELE,
                CHAM_MATER=CHMAT,
                CHARGE=BLOCAGE,
                NUME_DDL=CO('NUMEDDL'),
                MATR_ASSE=(_F(MATRICE=CO('RIGIDITE'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSE'),
                              OPTION='MASS_MECA',),),);

MODES=MODE_ITER_SIMULT(MATR_A=RIGIDITE,
                       MATR_B=MASSE,
                       CALC_FREQ=_F(OPTION='PLUS_PETITE',
                                    NMAX_FREQ=20,),);

omega = 25.0;

ex = 0.3;

mb = 500.0;

Balourd = ((mb * (((2 * pi) * omega) ** 2)) * ex);

r = 0.5;

surf = (pi * (r ** 2));


FOSA=AFFE_CHAR_MECA(MODELE=MODELE,
                    PRES_REP=_F(GROUP_MA='Moteur',
                                PRES=(Balourd / surf),),);


FOEL=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                    CHARGE=FOSA,);

FOAS=ASSE_VECTEUR(VECT_ELEM=FOEL,
                  NUME_DDL=NUMEDDL,);


MACRO_PROJ_BASE(BASE=MODES,
                MATR_ASSE_GENE=(_F(MATRICE=CO('MAGENE'),
                                   MATR_ASSE=MASSE,),
                                _F(MATRICE=CO('GEGENE'),
                                   MATR_ASSE=RIGIDITE,),),
                VECT_ASSE_GENE=_F(VECTEUR=CO('FOGENE'),
                                  VECT_ASSE=FOAS,),);

sin25 = FORMULE(VALE='sin(2*pi*omega *INST)',
                NOM_PARA='INST',);



DYNASAN=DYNA_TRAN_MODAL(MATR_MASS=MAGENE,
                        MATR_RIGI=GEGENE,
                        SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                        INCREMENT=_F(INST_FIN=1.0,
                                     PAS=1.E-4,),
                        EXCIT=_F(VECT_ASSE=FOGENE,
                                 FONC_MULT=sin25,),);



DEPMOSA=RECU_FONCTION(RESU_GENE=DYNASAN,
                      NOM_CHAM='DEPL',
                      NOM_CMP='DZ',
                      GROUP_NO='Mom',);


IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=29,
              COURBE=(
                      _F(FONCTION=DEPMOSA,
                         MARQUEUR=0,),))

TEST_FONCTION(VALEUR=(_F(FONCTION=DEPMOSA,
                         VALE_PARA=.91,
                         VALE_REFE=0.0001811803,
                         REFERENCE='NON_REGRESSION',),))

FIN();
