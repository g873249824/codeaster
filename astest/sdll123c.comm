# COPYRIGHT (C) 1991 - 2017  EDF R&D                WWW.CODE-ASTER.ORG
#
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
# 1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
#
# ======================================================================
# ======================================================================
# CAS_TEST__:SDLL123C
#

import aster_core
import numpy as NP
import numpy.linalg as LA

def EXTR_MATR(matrrr,option) :
# fonction permettant de recuperer les matrices assemblees au format numpy
# attention a l'espace memoire

# construction des vecteurs jeveux
                nommatr=matrrr.nom
                lenm=len(nommatr)
                nommatr=nommatr+' '*(8-lenm+1)
                vectrav=nommatr+'          .REFA        '
                nom=aster.getvectjev(vectrav)
                nomnume=nom[1]
                typm=nom[8]
                lenm=len(nomnume)
                nomnume=nomnume[0:9]

                nvar=nommatr+'          .VALM'
                nadia=nomnume+'     .SMOS.SMDI        '
                nnuml=nomnume+'     .SMOS.SMHC        '
                nrtt=nomnume+'     .NUME.DELG        '
                nrtt2=nomnume+'     .NUME.DEEQ        '

                var=aster.getcolljev(nvar)
                adia=aster.getvectjev(nadia)
                numl=aster.getvectjev(nnuml)
                rtt=aster.getvectjev(nrtt)
                rtt2=aster.getvectjev(nrtt2)

                valr=var[1]
                if (option==1):
                  valr2=var[1]
                if (option==2):
                  valr2=var[2]

                vc=len(rtt)
                ddltot=0
                nnddl=[0]
                tryy=0

# calc nbre de ddl au total et vect contenant le nbre de ddl pr chaque noeud (ex : barre =3, poutre=6...)
                for jj in range(0,vc):
                        if (rtt2[2*jj+1]==1) and (tryy==1):
                                if (tryy==1):
                                        nnddl=nnddl+[0]
                                        tryy=0
                        if (rtt2[2*jj+1]>0) :
                                ddltot=ddltot+1
                                nnddl[len(nnddl)-1]=nnddl[len(nnddl)-1]+1
                                tryy=1
                nnddl=nnddl+[0]
                ddlag=(vc-ddltot)//2
                ddlphy=ddltot-ddlag
                indint=[None]*ddlphy

# contruction du vect contenant les indices des ddls non lagr et non nuls
                gg=0
                tt=0
                pp=0
                limm=nnddl[pp]
                vecc=[1]*limm
                ste=limm
                for ii in range(0,vc):
                        if (rtt2[2*ii+1]<0):
                                if (rtt[ii]==-1):
                                        varr=-1*rtt2[2*ii+1]-1
                                        vecc[varr]=0
                                ste=limm
                        if (rtt2[2*ii+1]>0) and (ste==limm):

                                for hh in range(0,limm):
                                        if (vecc[hh]==1):
                                                indint[gg]=ii+hh
                                                gg=gg+1
                                        vecc[hh]=1
                                ste=0
                                pp=pp+1
                                limm=nnddl[pp-1]
                                vecc=[1]*limm
                        if (rtt2[2*ii+1]>0) and (ste<limm):
                                ste=ste+1

# construction de la matrice complete ddl lag compris (cette etape peut etre fusionnee avec la suivante mais ca devient complique)
                lon=len(adia)
                valeu=NP.zeros([lon,lon])
                opi=0
                indc=0
                indl=0
                for ii in range(0,lon):
                        if (ii==0):
                                opi=adia[ii]
                        else:
                                opi=adia[ii]-adia[ii-1]
                        for jj in range(0, opi):
                                if (ii==0):
                                        indc=jj
                                        indd=numl[indc]-1
                                else:
                                        indc=adia[ii-1]+jj
                                        indd=numl[indc]-1
                                valeu[indd][ii]=valr[indc]
                                if (ii!=indd):
                                  valeu[ii][indd]=valr2[indc]
                matrig=valeu

# elimination des ddl de lagrange et des ddl nuls
                rig11=NP.zeros([ddlphy,ddlphy])
                for ii in range(0,ddlphy):
                        for jj in range(0,ddlphy):
                                rig11[ii][jj]=matrig[indint[ii]][indint[jj]]
                return rig11

DEBUT( CODE=_F(NIV_PUB_WEB='INTERNET'),
       PAR_LOT='NON', DEBUG=_F(SDVERI='OUI'))
aster_core.matfpe(-1)

nddl=15*6-42

MAIL=LIRE_MAILLAGE(FORMAT="ASTER",)

MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=(_F(GROUP_MA='ROTOR',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='POU_D_E',),
                         _F(GROUP_MA=('GM11A','GM1AB','GM21A','GM21AB','PALIER_A','PALIER_B'),
                           PHENOMENE='MECANIQUE',
                           MODELISATION='DIS_TR',),
                         )
                       )

ACIER=DEFI_MATERIAU(ELAS=_F(E=2.1E9,
                            NU=0.3,
                            RHO=318.31,),);



CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=(_F(GROUP_MA='ROTOR',
                            MATER=ACIER,),))

CARELEM=AFFE_CARA_ELEM(INFO=1,
                       POUTRE=_F(GROUP_MA='ROTOR',
                                 SECTION='CERCLE',
                                 VALE=0.1,
                                 CARA='R',),
                       DISCRET=(_F(GROUP_MA='PALIER_A',
                                   CARA='M_TR_N',
                                   SYME='NON',
                                   VALE = ( 5.0,   0.,   0.,   0.,   0.,   0.,  0.,   5.0,   0.,   0.,
                                    0.,   0.,   0.,   0.,   5.0,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,),
                                   ),
                                _F(GROUP_MA='PALIER_A',
                                   CARA='K_TR_N',
                                   SYME='NON',
                                   VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.),
                                   ),
                                _F(GROUP_MA='PALIER_A',
                                   CARA='A_TR_N',
                                   SYME='NON',
                                   VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.),
                                   ),
                                _F(GROUP_MA='PALIER_B',
                                   CARA='M_TR_N',
                                   SYME='NON',
                                   VALE = ( 5.0,   0.,   0.,   0.,   0.,   0.,  0.,   5.0,   0.,   0.,
                                    0.,   0.,   0.,   0.,   5.0,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,),
                                   ),
                                _F(GROUP_MA='PALIER_B',
                                   CARA='K_TR_N',
                                   SYME='NON',
                                   VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.),
                                   ),
                                _F(GROUP_MA='PALIER_B',
                                   CARA='A_TR_N',
                                   SYME='NON',
                                   VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
                                         0.,0.,0.,0.,0.,0.),
                                   ),
                                _F(GROUP_MA='GM11A',
                                   CARA='K_TR_L',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   1000.0,   0.,   0.,   0.,   0.,   0.,   -1000.0,
                                    0.,   0.,   0.,   0.,   0.,   0.,   4000.0,   0.,   0.,   0.,
                                    0.,   0.,   -4000.0,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   -1000.0,   0.,   0.,   0.,   0.,
                                    0.,   1000.0,   0.,   0.,   0.,   0.,   0.,   0.,   -4000.0,   0.,
                                    0.,   0.,   0.,   0.,   4000.0,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,),
                                   ),
                                _F(GROUP_MA='GM21A',
                                   CARA='K_TR_L',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   1000.0,   0.,   0.,   0.,   0.,   0.,   -1000.0,
                                    0.,   0.,   0.,   0.,   0.,   0.,   4000.0,   0.,   0.,   0.,
                                    0.,   0.,   -4000.0,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   -1000.0,   0.,   0.,   0.,   0.,
                                    0.,   1000.0,   0.,   0.,   0.,   0.,   0.,   0.,   -4000.0,   0.,
                                    0.,   0.,   0.,   0.,   4000.0,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,),
                                   ),
                                _F(GROUP_MA='GM11A',
                                   CARA='A_TR_L',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   40.0,   0.,   0.,   0.,   0.,   0.,   -40.0,
                                    0.,   0.,   0.,   0.,   0.,   0.,   40.0,   0.,   0.,   0.,
                                    0.,   0.,   -40.0,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   -40.0,   0.,   0.,   0.,   0.,
                                    0.,   40.0,   0.,   0.,   0.,   0.,   0.,   0.,   -40.0,   0.,
                                    0.,   0.,   0.,   0.,   40.0,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,),
                                   ),
                                _F(GROUP_MA='GM21A',
                                   CARA='A_TR_L',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   40.0,   0.,   0.,   0.,   0.,   0.,   -40.0,
                                    0.,   0.,   0.,   0.,   0.,   0.,   40.0,   0.,   0.,   0.,
                                    0.,   0.,   -40.0,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   -40.0,   0.,   0.,   0.,   0.,
                                    0.,   40.0,   0.,   0.,   0.,   0.,   0.,   0.,   -40.0,   0.,
                                    0.,   0.,   0.,   0.,   40.0,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,),
                                   ),
                                _F(GROUP_MA='GM1AB',
                                   CARA='K_TR_L',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   1.E12,   0.,   0.,   0.,   0.,   0.,   -1.E12,
                                    0.,   0.,   0.,   0.,   0.,   0.,   1.E12,   0.,   0.,   0.,
                                    0.,   0.,   -1.E12,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   -1.E12,   0.,   0.,   0.,   0.,
                                    0.,   1.E12,   0.,   0.,   0.,   0.,   0.,   0.,   -1.E12,   0.,
                                    0.,   0.,   0.,   0.,   1.E12,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,),
                                   ),
                                _F(GROUP_MA='GM21AB',
                                   CARA='K_TR_L',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   1.E12,   0.,   0.,   0.,   0.,   0.,   -1.E12,
                                    0.,   0.,   0.,   0.,   0.,   0.,   1.E12,   0.,   0.,   0.,
                                    0.,   0.,   -1.E12,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   -1.E12,   0.,   0.,   0.,   0.,
                                    0.,   1.E12,   0.,   0.,   0.,   0.,   0.,   0.,   -1.E12,   0.,
                                    0.,   0.,   0.,   0.,   1.E12,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,),
                                   ),
                                _F(GROUP_MA='GM1AB',
                                   CARA='A_TR_L',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,),
                                   ),
                                _F(GROUP_MA='GM21AB',
                                   CARA='A_TR_L',
                                   SYME='NON',
                                   VALE = ( 0.,   0.,   0.,   0.,   0.,   0.,  0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
                                    0.,   0.,   0.,   0.,),
                                   ),
                                   ),
                       MODELE=MODELE,
                       );

BLOQUAGE=AFFE_CHAR_MECA(MODELE=MODELE,
                       DDL_IMPO=(
                                 _F(GROUP_NO=('MASSIF_A','MASSIF_B'),
                                    DX=0, DY=0, DRZ=0,
                                    DZ=0, DRX=0, DRY=0,
                                    ),
                                 _F(GROUP_NO=('PALIER_A','PALIER_B'),
                                    DX=0, DRY=0, DRX=0, DRZ=0,
                                    ),
                                 _F(GROUP_MA=('ROTOR'),
                                    DX=0, DRX=0
                                    ),
                          ))



ASSEMBLAGE(MODELE=MODELE,
                CHAM_MATER=CHMAT,
                CARA_ELEM=CARELEM,
                CHARGE=BLOQUAGE,
                NUME_DDL=CO('NUMEDDL'),
                MATR_ASSE=(_F(MATRICE=CO('RIGIDITE'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSE'),
                              OPTION='MASS_MECA',),
                           _F(MATRICE=CO('GYASS'),
                              OPTION='MECA_GYRO',),
                           _F(MATRICE=CO('AMOR'),
                              OPTION='AMOR_MECA',),),);

######################################
# TEST GENERALISE REEL NON SYM
######################################
sym='oui'
# TEST SORENSEN + QZ + PYTHON EN GENERALISE REEL SYM
option=1
MATK=RIGIDITE
MATM=MASSE

# CALCUL VIA SORENSEN
MG_SO=CALC_MODES(INFO=1,
                 MATR_RIGI=MATK,
                 VERI_MODE=_F(PREC_SHIFT=5.0E-3,
                              STOP_ERREUR='NON',
                              STURM='OUI',
                              SEUIL=1.0E-06,
                              ),
                 OPTION='CENTRE',
                 CALC_FREQ=_F(NMAX_FREQ=10,
                              FREQ=10.,
                              ),
                 MATR_MASS=MATM,
                 SOLVEUR_MODAL=_F(METHODE='SORENSEN',
                                  ),
                 )
# CALCUL VIA QZ
MG_QZ=CALC_MODES(INFO=1,
                 MATR_RIGI=MATK,
                 VERI_MODE=_F(PREC_SHIFT=5.0E-3,
                              STOP_ERREUR='NON',
                              STURM='OUI',
                              SEUIL=1.0E-05,
                              ),
                 OPTION='CENTRE',
                 CALC_FREQ=_F(NMAX_FREQ=10,
                              FREQ=10.,
                              ),
                 MATR_MASS=MATM,
                 SOLVEUR_MODAL=_F(METHODE='QZ',
                                  ),
                 )

# CALCUL VIA PYTHON
rigF=MATK.EXTR_MATR()
masF=MATM.EXTR_MATR()

#-----------------------------------------------------#
#--                                                 --#
#-- Elimination des degres de libertes de Lagranges --#
#--                                                 --#
#--        c.f. doc R4.06.02   - section 2.5        --#
#--        + commentaires dans sdll123a.comm        --#
#--                                                 --#
#-----------------------------------------------------#

nom_nume='NUMEDDL'
Nume=aster.getvectjev(nom_nume.ljust(8)+'      .NUME.DELG        ' )
ind_lag1=[]
ind_nolag=[]

for i1 in range(len(Nume)) :
  if Nume[i1] > -0.5 :
    ind_nolag.append(i1)
  if (Nume[i1] < -0.5) & (Nume[i1] > -1.5):
    ind_lag1.append(i1)

nlag1=len(ind_lag1)
nnolag=len(ind_nolag)

Z=NP.zeros((nnolag-nlag1,nnolag))
C=NP.vstack((rigF[ind_lag1][:,ind_nolag],Z))
Q,R = NP.linalg.qr(NP.transpose(C))

dR=[]
for i1 in range(len(R)) :
  dR.append(NP.abs(R[i1,i1]))

mdR=NP.max(dR)
indz=[]
for i1 in range(len(R)) :
  if NP.abs(R[i1,i1]) <= mdR*1.e-16 :
    indz.append(i1)

mas=NP.dot(NP.transpose(Q[:][:,indz]),NP.dot(masF[ind_nolag][:,ind_nolag],Q[:][:,indz]))
rig=NP.dot(NP.transpose(Q[:][:,indz]),NP.dot(rigF[ind_nolag][:,ind_nolag],Q[:][:,indz]))

#-- Fin elimination

variante=2
# variante 1: K-1*M U = 1/lambda  * U
if (variante==1) :
  masI=LA.inv(rig)
  HPRIME=NP.dot(masI,mas)
  frequence=LA.eigvals(HPRIME)
  fr=list(frequence)
  i=0
  for vp in fr:
     i=i+1
     if (abs(vp)==0) :
       print i,'infinity'
     else       :
       vp1=(1/vp)
       if (sym=='oui') :
         vp1r=sqrt(abs(vp1))/2/pi
         print i,vp1r
       else :
         vp1r=sqrt(abs(vp1.real))/2/pi
         vp1i=0.5*vp1.imag/vp1.real
         print i,vp1r,vp1i

else :
# variante 2 : M-1*K U = lambda * U
  masI=LA.inv(mas)
  HPRIME=NP.dot(masI,rig)
  frequence=LA.eigvals(HPRIME)
  fr=list(frequence)
  i=0
  for vp in fr:
     i=i+1
     if (abs(vp)==0) :
       print i,'zero'
     else       :
       vp1=vp
       if (sym=='oui') :
         vp1r=sqrt(abs(vp1))/2/pi
         print i,vp1r
       else :
         vp1r=sqrt(abs(vp1.real))/2/pi
         vp1i=0.5*vp1.imag/vp1.real
         print i,vp1r,vp1i

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MG_SO,
                   VALE_CALC=2.2506766727183,
                   CRITERE='ABSOLU',
                   ),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MG_SO,
                   VALE_CALC=3.898455090,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MG_SO,
                   VALE_CALC=4.500671166,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MG_SO,
                   VALE_CALC=7.796741564,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MG_QZ,
                   VALE_CALC=2.2506766824595,
                   CRITERE='ABSOLU',
                   ),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MG_QZ,
                   VALE_CALC=3.898455090,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MG_QZ,
                   VALE_CALC=4.500671166,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MG_QZ,
                   VALE_CALC=7.796741564,
                   CRITERE='RELATIF',),
                ),
          )

OM=124.14*pi/30.

GYOM=COMB_MATR_ASSE(COMB_R=(_F(MATR_ASSE=GYASS, COEF_R=OM,),
                            _F(MATR_ASSE=AMOR, COEF_R=1.,),))

######################################
# TEST QUADRATIQUE REEL NON SYM
######################################
# TEST SORENSEN + QZ + PYTHON EN QUADRATIQUE REEL SYM
option=2
MATK1=RIGIDITE
MATM1=MASSE
MATC1=GYOM

# CALCUL VIA SORENSEN (APPROCHE COMPLEXE, REELLE ET IMAGINAIRE)
MQ_SO=CALC_MODES(INFO=1,
                 MATR_RIGI=MATK1,
                 VERI_MODE=_F(PREC_SHIFT=5.0E-3,
                              STOP_ERREUR='NON',
                              STURM='OUI',
                              SEUIL=1.0E-06,
                              ),
                 OPTION='CENTRE',
                 CALC_FREQ=_F(NMAX_FREQ=10,
                              FREQ=10.,
                              ),
                 MATR_AMOR=MATC1,
                 MATR_MASS=MATM1,
                 SOLVEUR_MODAL=_F(APPROCHE='COMPLEXE',
                                  METHODE='SORENSEN',
                                  ),
                 )
MQ_SOR=CALC_MODES(INFO=1,
                  MATR_RIGI=MATK1,
                  VERI_MODE=_F(PREC_SHIFT=5.0E-3,
                               STOP_ERREUR='NON',
                               STURM='OUI',
                               SEUIL=1.0E-06,
                               ),
                  OPTION='CENTRE',
                  CALC_FREQ=_F(NMAX_FREQ=10,
                               FREQ=10.,
                               ),
                  MATR_AMOR=MATC1,
                  MATR_MASS=MATM1,
                  SOLVEUR_MODAL=_F(APPROCHE='REEL',
                                   METHODE='SORENSEN',
                                   ),
                  )
MQ_SOI=CALC_MODES(INFO=1,
                  MATR_RIGI=MATK1,
                  VERI_MODE=_F(PREC_SHIFT=5.0E-3,
                               STOP_ERREUR='NON',
                               STURM='OUI',
                               SEUIL=1.0E-06,
                               ),
                  OPTION='CENTRE',
                  CALC_FREQ=_F(NMAX_FREQ=10,
                               FREQ=10.,
                               ),
                  MATR_AMOR=MATC1,
                  MATR_MASS=MATM1,
                  SOLVEUR_MODAL=_F(APPROCHE='IMAG',
                                   METHODE='SORENSEN',
                                   ),
                  )
# CALCUL VIA QZ
MQ_QZ=CALC_MODES(INFO=1,
                 MATR_RIGI=MATK1,
                 VERI_MODE=_F(PREC_SHIFT=5.0E-3,
                              STOP_ERREUR='NON',
                              STURM='OUI',
                              SEUIL=1.0E-04,
                              ),
                 OPTION='CENTRE',
                 CALC_FREQ=_F(NMAX_FREQ=10,
                              FREQ=10.,
                              ),
                 MATR_AMOR=MATC1,
                 MATR_MASS=MATM1,
                 SOLVEUR_MODAL=_F(METHODE='QZ',
                                  ),
                 )

# CALCUL VIA PYTHON
rigF=MATK1.EXTR_MATR()
masF=MATM1.EXTR_MATR()
amorF=MATC1.EXTR_MATR()

#-----------------------------------------------------#
#--                                                 --#
#-- Elimination des degres de libertes de Lagranges --#
#--                                                 --#
#-----------------------------------------------------#

nom_nume='NUMEDDL'
Nume=aster.getvectjev(nom_nume.ljust(8)+'      .NUME.DELG        ' )
ind_lag1=[]
ind_nolag=[]

for i1 in range(len(Nume)) :
  if Nume[i1] > -0.5 :
    ind_nolag.append(i1)
  if (Nume[i1] < -0.5) & (Nume[i1] > -1.5):
    ind_lag1.append(i1)

nlag1=len(ind_lag1)
nnolag=len(ind_nolag)

Z=NP.zeros((nnolag-nlag1,nnolag))
C=NP.vstack((rigF[ind_lag1][:,ind_nolag],Z))
Q,R = NP.linalg.qr(NP.transpose(C))

dR=[]
for i1 in range(len(R)) :
  dR.append(NP.abs(R[i1,i1]))

mdR=NP.max(dR)
indz=[]
for i1 in range(len(R)) :
  if NP.abs(R[i1,i1]) <= mdR*1.e-16 :
    indz.append(i1)

mas=NP.dot(NP.transpose(Q[:][:,indz]),NP.dot(masF[ind_nolag][:,ind_nolag],Q[:][:,indz]))
rig=NP.dot(NP.transpose(Q[:][:,indz]),NP.dot(rigF[ind_nolag][:,ind_nolag],Q[:][:,indz]))
amor=NP.dot(NP.transpose(Q[:][:,indz]),NP.dot(amorF[ind_nolag][:,ind_nolag],Q[:][:,indz]))

#-- Fin elimination

variante=1
if (variante==1) :
  masI=LA.inv(mas)
  HPRIME=NP.zeros((nddl*2,nddl*2))
  HPRIME[0:nddl,0:nddl]=NP.dot(amor,masI)
  HPRIME[0:nddl,nddl:2*nddl]=NP.dot(rig,masI)
  HPRIME[nddl:2*nddl,0:nddl]=-NP.identity(nddl)
  frequence=LA.eigvals(HPRIME)
  fr=list(frequence)
  i=0
  for vp in fr:
     i=i+1
     if (abs(vp)==0) :
       print i,'zero'
     else       :
       vp1r=vp.real
       vp1i=vp.imag/2/pi
       print i,vp1i,-vp1r/abs(vp)

aster_core.matfpe(+1)

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MQ_SO,
                   VALE_CALC=2.158833229,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=1,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SO,
                   VALE_CALC=0.282804405,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MQ_SO,
                   VALE_CALC=3.398241080,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=2,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SO,
                   VALE_CALC=0.489807890,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MQ_SO,
                   VALE_CALC=4.455562667,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SO,
                   VALE_CALC=0.141337902,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MQ_SO,
                   VALE_CALC=7.560508154,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=4,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SO,
                   VALE_CALC=0.244970756,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MQ_SOR,
                   VALE_CALC=2.158833229,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=1,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SOR,
                   VALE_CALC=0.282804405,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MQ_SOR,
                   VALE_CALC=3.398241080,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=2,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SOR,
                   VALE_CALC=0.489807890,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MQ_SOR,
                   VALE_CALC=4.455562667,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SOR,
                   VALE_CALC=0.141337902,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MQ_SOR,
                   VALE_CALC=7.560508154,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=4,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SOR,
                   VALE_CALC=0.244970756,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MQ_SOI,
                   VALE_CALC=2.158833229,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=1,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SOI,
                   VALE_CALC=0.282804405,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MQ_SOI,
                   VALE_CALC=3.398241080,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=2,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SOI,
                   VALE_CALC=0.489807890,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MQ_SOI,
                   VALE_CALC=4.4555627882186,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SOI,
                   VALE_CALC=0.14133789883954,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MQ_SOI,
                   VALE_CALC=7.560508154,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=4,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_SOI,
                   VALE_CALC=0.244970756,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MQ_QZ,
                   VALE_CALC=3.3982410946971,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=2,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_QZ,
                   VALE_CALC=0.48980784865854,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MQ_QZ,
                   VALE_CALC=4.4555628025656,
                   CRITERE='RELATIF',),
                _F(NUME_ORDRE=3,
                   PARA='AMOR_REDUIT',
                   RESULTAT=MQ_QZ,
                   VALE_CALC=0.14133791158692,
                   CRITERE='RELATIF',),
                ),
          )

del EXTR_MATR
del rig,mas,amor,masI,HPRIME,frequence,fr
del MATK,MATM,MATK1,MATM1,MATC1
FIN()
