# TITRE TEST DE LA LOI JOINT_MECA_RUPT SUR LES ELEMENTS DE JOINT HEXA8
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='OUI'),PAR_LOT='OUI',IGNORE_ALARM=('MODELISA4_9',),DEBUG=_F(SDVERI='OUI'))
# ON IGNORE LES ALARMES SUR LA MAILLE DE JOINT DEGENERE (AVEC DES NOEUDS CONFONDUS)

# INSTANT FINAL (IL FAUT AVOIR UN MULTIPLE DE 4)
insfin=4*15

# REGULARISATION NORMALE DE LA COURBE FORCE-DEPLACEMENT
k_n=1.E12
# REGULARISATION TANGENTIELLE DE LA COURBE FORCE-DEPLACEMENT
k_t=2*k_n
# FORCE DE CHARGEMENT MAXIMALE (RESISTANCE A LA TRACTION)
sigma_max=1.E5

# REGULARISATION D'ENDOMMAGEMENT TANGENTIELE
# 0 => RUPTURE TANGENTIEL IMEDIATEMENT APRES L'OUVERTURE
# 1 => RUPTURES TANGENTIEL ET NORMALE SIMULTANEES
# 2 => PAS D'ENDOMMAGEMENT TANGENTIEL
alpha=1.5

# PARAMETRE DE LISSAGE DE RUPTURE FRAGILE
# 0 - PENTE INFINIE (RUPTURE ABRUPTE)
# 1 - PENTE DE CHARGEMENT
# \INFINITY - PENTE ZERO (RUPTURE A L'INFINI)
pena_rupture=0.5

# PENALISATION EN COMPRESSION(>0)
# 0 - PENTE NUL (INTERPENETRATION SANS RESISTANCE, NON PHYSIQUE)
# 1 - PENTE DE CHARGEMENT
# \INFINITY - PENTE INFINI (PAS D'INTERPENETRATION)
pena_contact=3.

# PARAMETRES PHYSIQUES
young=3.E12
poiss=0.0

# PARAMETRES D'AUTOMATISATION
# PARAMETRE DE L'INCLINAISON DE JOINT (NE PAS MODIFIER, LIE AU MAILLAGE)
angle=30./180*pi
L_cube=1.
# L'OUVERTURE ELASTIQUE DU JOINT + CUBE
delta_elas = sigma_max/k_n + sigma_max*L_cube/young
# L'OUVERTURE MAXIMALE DU JOINT A LA RUPTURE
delta_max=(1.+pena_rupture)*sigma_max/k_n
# L'OUVERTURE CORRESPONDANTE A L'ENDOMMAGEMENT PARTIEL
beta=0.2
delta_endo=beta*delta_elas+(1-beta)*delta_max

# OUVERTURE PARTIEL DE JOINT POUR LE TEST EN MODE2
delta_joint=(1.+beta*pena_rupture)*sigma_max/k_n
# OUVERTURE EN GLISSEMENT POUR LE TEST EN MODE2
delta_max_tan=delta_max
# VERIFICATION D'ABSENCE DE SNAP-BACK GLOBAL (DELTA_MAX>DELTA_ELAS)
#AAA
assert(young > L_cube*k_n/pena_rupture)

MA=LIRE_MAILLAGE()

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=(_F(NOEUD=('NO2','NO4', 'NO10', 'NO8'),
                                NOM='DROITE',),
                              _F(NOEUD=('NO1','NO3', 'NO9', 'NO7'),
                                NOM='GAUCHE',),
                               ),);

IMPR_RESU(FORMAT  = 'GMSH',RESU=_F(MAILLAGE=MA),UNITE=19)

MO=AFFE_MODELE(

                MAILLAGE=MA,
                VERIF='MAILLE',

                AFFE= (
                _F(
                   MAILLE = 'CUBE',
                   PHENOMENE = 'MECANIQUE',
                   MODELISATION = '3D'
                     ),
                 _F(
                   MAILLE = 'CUBEDEG',
                   PHENOMENE = 'MECANIQUE',
                   MODELISATION = '3D_JOINT'
                   )
                 )
              )


# MATERIAU ELASTIQUE
MAT_CUB=DEFI_MATERIAU(ELAS=_F(
                              E   = young,
                              NU  = poiss),)

# MATERIAU JOINT
MAT_JOI=DEFI_MATERIAU(
                  JOINT_MECA_RUPT=_F(K_N=k_n,
                                   K_T=k_t,
                                   SIGM_MAX=sigma_max,
                                   PENA_RUPTURE=pena_rupture,
                                   ALPHA=alpha,
                                   PENA_CONTACT=pena_contact
                          ),)


CM=AFFE_MATERIAU(MAILLAGE=MA,
                 AFFE=(
                      _F(MAILLE='CUBE', MATER = MAT_CUB),
                      _F(MAILLE='CUBEDEG', MATER = MAT_JOI))
                 );

# ENCASTREMENT D'UNE DES LEVRES DU JOINT
LIAISON=AFFE_CHAR_MECA(
  MODELE=MO,
  FACE_IMPO= (
    _F(MAILLE='GAUCHE2', DX=0, DY=0, DZ=0),
    )
  )

###################################################################################
#----------------------------------------------------------------------------------
# CALCUL AVEC CHARGEMENT EN MODE I PURE
#----------------------------------------------------------------------------------
###################################################################################


# CHARGEMENT MODE I PUR
TRAC_1=AFFE_CHAR_MECA(
  MODELE=MO,
  FACE_IMPO= (
    _F(MAILLE='DROITE', DX=cos(angle), DY= sin(angle), DZ=0),
    )
  )

# CREATION DE LISTE D'INSTANT
L_INST=DEFI_LIST_REEL(VALE=range(insfin+1))

# LISTE D'INSTANTS POUR LES TESTS DE RESULTATS
linst=[0,insfin/4,insfin/2,3*insfin/4,insfin]
FCT=DEFI_FONCTION(NOM_PARA='INST',VALE=(linst[0], 0.,
                                        linst[1], delta_elas,              # TRACTION ELASTIQUE
                                        linst[2], delta_endo,              # TRACTION JUSQU'A ENDOMMAGEMENT PARTIEL
                                        linst[3], -delta_elas,             # DECHARGEMENT COMPRESSION
                                        linst[4], delta_max*0.99999999),   # TRACTION JUSQU'A LA RUPTURE QUASI-COMPLETE
                  PROL_DROITE='LINEAIRE',);


U_1=STAT_NON_LINE(
  SOLVEUR=_F(METHODE='MUMPS',),
  MODELE     = MO,
  CHAM_MATER = CM,
  EXCIT      = (
    _F(CHARGE = LIAISON , ),
    _F(CHARGE = TRAC_1, FONC_MULT = FCT),
  ),
  COMPORTEMENT  = (
          _F(RELATION = 'JOINT_MECA_RUPT',
             MAILLE = 'CUBEDEG', ),
          _F(RELATION = 'ELAS',
             MAILLE = 'CUBE',),
          ),
  INCREMENT  = _F(LIST_INST = L_INST, INST_INIT=0,INST_FIN = insfin),
  CONVERGENCE= _F(ITER_GLOB_MAXI = 20),
  NEWTON     = _F(MATRICE = 'TANGENTE', REAC_ITER=1),
  )


#----------------------------------------------------------------------------------
# POST TRAITEMENT MODE I PURE
#-----------------------------------------------------------------------------------

# CALCUL DE LA FORCE NODALE
U_1=CALC_CHAMP(reuse =U_1,
            RESULTAT=U_1,
            FORCE='FORC_NODA',


            );

# VECTEUR-FORCE NODALE RESULTANTE : (F_X,F_Y)
TFORCE=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                               INTITULE='F_PILOTE',
                               RESULTAT=U_1,
                               NOM_CHAM='FORC_NODA',
                               TOUT_ORDRE='OUI',
                               GROUP_NO='DROITE',
                               RESULTANTE=('DX','DY'),),);


# PROJECTEUR SUR LA NORMALE
PNOR = FORMULE(VALE='DX*cos(angle)+DY*sin(angle)',
              NOM_PARA=('DX','DY',),);

# INSERTION D'UNE COLONNE AVEC LA PROJECTION NORMALE DE LA FORCE NODALE
TFORCE=CALC_TABLE(reuse =TFORCE,
                  TABLE=TFORCE,
                  ACTION=_F(OPERATION='OPER',
                            FORMULE=PNOR,
                            NOM_PARA='F_N',),);

# DEPLACEMENT DU NOEUD EN_HAUT
TDELTA_N=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                              INTITULE='DEPL',
                              RESULTAT=U_1,
                              NOM_CHAM='DEPL',
                              TOUT_ORDRE='OUI',
                              GROUP_NO='TOUTSEUL',
                              NOM_CMP=('DX','DY',),),);

# INSERTION D'UNE COLONNE AVEC LA PROJECTION NORMALE DE DEPLACEMENT
TDELTA_N=CALC_TABLE(reuse =TDELTA_N,
                    TABLE=TDELTA_N,
                    ACTION=_F(OPERATION='OPER',
                            FORMULE=PNOR,
                            NOM_PARA='U_N',),);

#----------------------------------------------------------------------------------
# IMPRESSION DE RESULTAT CALCUL MODE I PURE
#-----------------------------------------------------------------------------------



# IMPRESSION LA FORCE NODALE NORMALE
IMPR_TABLE(TABLE=TFORCE);

# IMPRESSION DE L'OUVERTURE NORMALE
IMPR_TABLE(TABLE=TDELTA_N);

# LA MANIPULATION POUR IMPRIMER LA COURBE FORCE-DEPLACEMENT AU FORMAT XMGRACE
FN=RECU_FONCTION(TABLE=TFORCE,
                  PARA_X='INST',
                  PARA_Y='F_N',);

DN=RECU_FONCTION(TABLE=TDELTA_N,
                  PARA_X='INST',
                  PARA_Y='U_N',);

IMPR_FONCTION(FORMAT='TABLEAU',
              COURBE=_F(FONC_X=DN,
                        FONC_Y=FN,
                        LEGENDE='Force Deplacement',),
             );
## EN MODE INTERACTIF SEULEMENT
#IMPR_FONCTION(FORMAT='XMGRACE',
#              PILOTE='INTERACTIF',
#              COURBE=_F(FONC_X=DN,
#                        FONC_Y=FN,
#                        LEGENDE='F(U)',),
#              LEGENDE_X='\\xd\\s\\0n',
#              LEGENDE_Y='F\\sn',
#              TITRE='mode I avec charge-decharge',
#              );


#----------------------------------------------------------------------------------
# TESTS CALCUL MODE I PURE
#-----------------------------------------------------------------------------------

# COURBE FORCE-DEPLACEMENT JOINT+CUBE EST TESTEE :
# VALEUR DE CHARGEMENT MAXIMALE  (SIGMA_MAX)
# VALEUR A ENDOMMAGEMENT PARTIEL (PENA_RUPTURE)
# VALEUR EN PENETRATION          (PENA_CONTACT)
# COMPLETEMENT CASSE
sigma_endo = (delta_endo-sigma_max*(1.+pena_rupture)/k_n)/(L_cube/young-pena_rupture/k_n)
sigma_pena = -sigma_max*pena_contact*(young+L_cube*k_n)/(young+L_cube*k_n*pena_contact)

TEST_FONCTION(VALEUR=(_F(VALE_CALC=100000.0,
                         VALE_REFE=sigma_max,
                         VALE_PARA=linst[1],
                         REFERENCE='ANALYTIQUE',
                         NOM_PARA='INST',
                         FONCTION=FN,),
                      _F(VALE_CALC=20000.0,
                         VALE_REFE=sigma_endo,
                         VALE_PARA=linst[2],
                         REFERENCE='ANALYTIQUE',
                         NOM_PARA='INST',
                         FONCTION=FN,),
                      _F(VALE_CALC=-200000.0,
                         VALE_REFE=sigma_pena,
                         VALE_PARA=linst[3],
                         REFERENCE='ANALYTIQUE',
                         NOM_PARA='INST',
                         FONCTION=FN,),
                      _F(VALE_CALC=0.00900000000573,
                         VALE_REFE=0.,
                         CRITERE='ABSOLU',
                         VALE_PARA=linst[4],
                         REFERENCE='ANALYTIQUE',
                         PRECISION=sigma_max*1e-3,
                         NOM_PARA='INST',
                         FONCTION=FN,),
                      ),
              )
###################################################################################
#----------------------------------------------------------------------------------
# CALCUL AVEC CHARGEMENT EN MODE II AVEC UNE OUVERTURE PARTIELLE
#----------------------------------------------------------------------------------
###################################################################################


# LIST D'INSTANTS POUR LES TESTS DE RESULTATS EN MODE2
linst2=[0, insfin/4, insfin/2, 3*insfin/4, insfin]
# VALEUR DE COMPRESSION PARTIELLE
delta_joint5=delta_joint/5

# CHARGEMENT MODE II EN MAINTENANT UNE OUVERTURE NORMALE PARTIELLE
F2DX=DEFI_FONCTION(NOM_PARA='INST',VALE=( 0.,0.,
                                        linst2[1],delta_joint*cos(angle),                           # OUVERTURE NORMALE
                                        linst2[2],delta_joint*cos(angle)-delta_max_tan*sin(angle),  # OUVERTURE TANGENTIEL
                                        linst2[3],delta_joint5*cos(angle)-delta_max_tan*sin(angle),# COMPRESSION PARTIEL
                                        linst2[4],delta_joint5*cos(angle)                          # FERMETURE TANGENTIEL
                                        ),
                  PROL_DROITE='LINEAIRE',);
F2DY=DEFI_FONCTION(NOM_PARA='INST',VALE=( 0.,0.,
                                        linst2[1],delta_joint*sin(angle),                           # OUVERTURE NORMALE
                                        linst2[2],delta_joint*sin(angle)+delta_max_tan*cos(angle),  # OUVERTURE TANGENTIEL
                                        linst2[3],delta_joint5*sin(angle)+delta_max_tan*cos(angle),# COMPRESSION PARTIEL
                                        linst2[4],delta_joint5*sin(angle)                          # FERMETURE TANGENTIEL
                                        ),
                  PROL_DROITE='LINEAIRE',);
F2DZ=DEFI_FONCTION(NOM_PARA='INST',VALE=( 0.,0., # FONCTION = 0
                                          1.,0.
                                        ),
                  PROL_DROITE='LINEAIRE',);

TRAC_2=AFFE_CHAR_MECA_F(MODELE=MO,
                      DDL_IMPO=(_F(GROUP_NO='GAUCHE',
                                    DX=F2DX,
                                    DY=F2DY,
                                    DZ=F2DZ),
                                 ),
                      );


#----------------------------------------------------------------------------------
# CALCUL AVEC CHARGEMENT EN MODE II AVEC UNE OUVERTURE PARTIELLE
#-----------------------------------------------------------------------------------

U_2=STAT_NON_LINE(
  SOLVEUR=_F(METHODE='MUMPS',),
  MODELE     = MO,
  CHAM_MATER = CM,
  EXCIT      = (
    _F(CHARGE = LIAISON , ),
    _F(CHARGE = TRAC_2, ),
  ),
  COMPORTEMENT  = (
          _F(RELATION = 'JOINT_MECA_RUPT',
             MAILLE = 'CUBEDEG', ),
          _F(RELATION = 'ELAS',
             MAILLE = 'CUBE',),
          ),
  INCREMENT  = _F(LIST_INST = L_INST, INST_INIT=0,INST_FIN = insfin),
  CONVERGENCE= _F(ITER_GLOB_MAXI = 20),
  NEWTON     = _F(MATRICE = 'TANGENTE', REAC_ITER=1),
  )




#----------------------------------------------------------------------------------
# TESTS CALCUL MODE II AVEC UNE OUVERTURE PARTIELLE
#-----------------------------------------------------------------------------------


F_DY_2=RECU_FONCTION( RESULTAT=U_2,
              NOM_CHAM='DEPL',NOM_CMP='DY',GROUP_NO='TOUTSEUL')
T_DY_2=CREA_TABLE(FONCTION=_F(FONCTION=F_DY_2))
IMPR_TABLE(TABLE=T_DY_2)


F_SIGN_2=RECU_FONCTION( RESULTAT=U_2, NOM_CHAM = 'SIEF_ELGA',
          NOM_CMP = 'SIGN',
          MAILLE  = 'CUBEDEG',POINT=1)
T_SIGN_2=CREA_TABLE(FONCTION=_F(FONCTION=F_SIGN_2))
IMPR_TABLE(TABLE=T_SIGN_2)


F_SITX_2=RECU_FONCTION( RESULTAT=U_2, NOM_CHAM = 'SIEF_ELGA',
          NOM_CMP = 'SITX',
          MAILLE  = 'CUBEDEG',POINT=2)
T_SITX_2=CREA_TABLE(FONCTION=_F(FONCTION=F_SITX_2))
IMPR_TABLE(TABLE=T_SITX_2)

F_SITY_2=RECU_FONCTION( RESULTAT=U_2, NOM_CHAM = 'SIEF_ELGA',
          NOM_CMP = 'SITY',
          MAILLE  = 'CUBEDEG',POINT=1)
T_SITY_2=CREA_TABLE(FONCTION=_F(FONCTION=F_SITY_2))
IMPR_TABLE(TABLE=T_SITY_2)

# TEST SIGMA_NORMAL
TEST_RESU(RESU=_F(INST=linst2[2],
                  REFERENCE='ANALYTIQUE',
                  POINT=1,
                  RESULTAT=U_2,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SIGN',
                  VALE_CALC= 8.00000000E+04,
                  VALE_REFE=sigma_max*(1.-beta),
                  MAILLE='CUBEDEG',),
          )

# LCT - LONGEUR CRITIQUE TANGENTIELLE
LCT = delta_max*tan(alpha*pi/4.)

# TEST SIGMA_TAN ENDOMAGEMENT PARTIEL
# PENTE TANGENTIEL ENDOMMAGEE POUR DELTA_JOINT
k_t_endo = k_t*(1-delta_joint/LCT)
TEST_RESU(RESU=_F(INST=linst2[2],
                  REFERENCE='ANALYTIQUE',
                  POINT=2,
                  RESULTAT=U_2,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SITX',
                  VALE_CALC= 2.08873016E+05,
                  VALE_REFE=k_t_endo*delta_max_tan,
                  MAILLE='CUBEDEG',),
          )


# TEST SIGMA_TAN ENDOMAGEMENT PARTIEL (DANS LA ZONE ELASTIQUE)
# CAS DE FIGURE OU LA LOI TANGENTIELLE INCREMENTALE EST ACTIVEE
# LA SOLUTION ANALYTIQUE N'EST PLUS TRIVIALE
TEST_RESU(RESU=_F(INST=linst2[3],
                  POINT=1,
                  RESULTAT=U_2,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SITX',
                  VALE_CALC = 2.0887301627792E+05,
                  MAILLE='CUBEDEG',),
          )

# TEST SIGMA_TAN ENDOMAGEMENT PARTIEL DANS LA DIRECTION TRANSVERSE
# PENTE TANGENTIEL ENDOMMAGEE POUR delta_joint5
TEST_RESU(RESU=_F(INST=linst2[3],
                  REFERENCE='ANALYTIQUE',
                  POINT=1,
                  RESULTAT=U_2,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SITY',
                  VALE_CALC= 1.14940945E-14,
                  VALE_REFE=0.0,
                  CRITERE='ABSOLU',
                  MAILLE='CUBEDEG',),
          )

# TEST VARIABLES INTERNES
# V1 : SEUIL, PLUS GRANDE NORME DU SAUT
# V2 : INDICATEUR DE DISSIPATION (0 : NON, 1 : OUI)
# V3 : INDICATEUR D'ENDOMMAGEMENT NORMAL (0 : SAIN, 1: ENDOM, 2: CASSE)
# V4 : POURCENTAGE D'ENDOMMAGEMENT NORMAL
# V5 : INDICATEUR D'ENDOMMAGEMENT TANGENTIEL (0:SAIN, 1:ENDOM, 2:CASSE)
# V6 : POURCENTAGE D'ENDOMMAGEMENT TANGENTIEL
# V7 A V9 : VALEURS DU SAUT
# V10: EPAISSEUR DU JOINT CLAVE
TEST_RESU (
  RESU = (
    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V1',
      VALE_REFE = delta_joint,
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC= 1.10000000E-07,
      ),
    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V2',
      VALE_REFE = 0,
      CRITERE   = 'ABSOLU',
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC= 0.00000000E+00,
      ),
    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V3',
      VALE_REFE = 1,
      CRITERE   = 'ABSOLU',
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC=1.000000000,
      ),

    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V4',
      VALE_REFE = beta,
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC=0.200000000,
      ),
    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V5',
      VALE_REFE = 1,
      CRITERE   = 'ABSOLU',
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC=1.000000000,
      ),
    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V6',
      VALE_REFE = delta_joint5/LCT,
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC=0.060751322,
      ),
    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V7',
      VALE_REFE = delta_joint5,
      CRITERE   = 'ABSOLU',
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC= 2.20000000E-08,
      ),
    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V8',
      VALE_REFE = delta_max_tan,
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC= 1.50000000E-07,
      ),
    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V9',
      VALE_REFE = 0.,
      CRITERE   = 'ABSOLU',
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC=-2.53926414E-25,
      ),
    _F(
      REFERENCE = 'ANALYTIQUE',
      RESULTAT  = U_2,
      NOM_CHAM  = 'VARI_ELGA',
      NOM_CMP   = 'V10',
      VALE_REFE = 0.,
      CRITERE   = 'ABSOLU',
      MAILLE    = 'CUBEDEG',
      POINT     = 1,
      INST      = linst2[3],
      VALE_CALC= 0.00000000E+00,
      ),
    )
  )
###################################################################################
#----------------------------------------------------------------------------------
# CALCUL AVEC CHARGEMENT EN MODE III AVEC UNE OUVERTURE PARTIELLE
#----------------------------------------------------------------------------------
###################################################################################


# LIST D'INSTANTS POUR LES TESTS DE RESULTATS EN MODE3
linst3=[0, insfin/4, insfin/2, 3*insfin/4, insfin]
# VALEUR POUR LA COMPRESSION PARTIELLE
delta_joint9=delta_joint/9
# CHARGEMENT MODE II EN MAINTENANT UNE OUVERTURE NORMALE PARTIELLE
F3DX=DEFI_FONCTION(NOM_PARA='INST',VALE=( 0.,0.,
                                        linst3[1],delta_joint*cos(angle),   # OUVERTURE NORMALE
                                        linst3[2],delta_joint*cos(angle),   # MODE3 ALLEZ
                                        linst3[3],delta_joint9*cos(angle), # COMPRESSION NORMALE PARTIEL
                                        linst3[4],delta_joint9*cos(angle)  # MODE3 RETOUR
                                        ),
                  PROL_DROITE='LINEAIRE',);
F3DY=DEFI_FONCTION(NOM_PARA='INST',VALE=( 0.,0.,
                                        linst3[1],delta_joint*sin(angle),  # OUVERTURE NORMALE
                                        linst3[2],delta_joint*sin(angle),  # MODE3 ALLEZ
                                        linst3[3],delta_joint9*sin(angle),# COMPRESSION PARTIEL
                                        linst3[4],delta_joint9*sin(angle) # MODE3 RETOUR
                                        ),
                  PROL_DROITE='LINEAIRE',);
F3DZ=DEFI_FONCTION(NOM_PARA='INST',VALE=( 0.,0.,
                                          linst3[2], -delta_max_tan, # OUVERTURE TANGENTIEL MODE3 ALLEZ
                                          linst3[4],  delta_max_tan  # FERMETURE TANGENTIEL MODE3 RETOUR
                                        ),
                  PROL_DROITE='LINEAIRE',);

TRAC_3=AFFE_CHAR_MECA_F(MODELE=MO,
                      DDL_IMPO=(_F(GROUP_NO='GAUCHE',
                                    DX=F3DX,
                                    DY=F3DY,
                                    DZ=F3DZ),
                                 ),
                      );


#----------------------------------------------------------------------------------
# CALCUL AVEC CHARGEMENT EN MODE III AVEC UNE OUVERTURE PARTIELLE
#-----------------------------------------------------------------------------------

U_3=STAT_NON_LINE(
  SOLVEUR=_F(METHODE='MUMPS',),
  MODELE     = MO,
  CHAM_MATER = CM,
  EXCIT      = (
    _F(CHARGE = LIAISON , ),
    _F(CHARGE = TRAC_3, ),
  ),
  COMPORTEMENT  = (
          _F(RELATION = 'JOINT_MECA_RUPT',
             MAILLE = 'CUBEDEG', ),
          _F(RELATION = 'ELAS',
             MAILLE = 'CUBE',),
          ),
  INCREMENT  = _F(LIST_INST = L_INST, INST_INIT=0,INST_FIN = insfin),
  CONVERGENCE= _F(ITER_GLOB_MAXI = 20),
  NEWTON     = _F(MATRICE = 'TANGENTE', REAC_ITER=1),
  )




#----------------------------------------------------------------------------------
# TESTS CALCUL MODE III AVEC UNE OUVERTURE PARTIELLE
#-----------------------------------------------------------------------------------


F_DY_3=RECU_FONCTION( RESULTAT=U_3,
              NOM_CHAM='DEPL',NOM_CMP='DY',GROUP_NO='TOUTSEUL')
T_DY_3=CREA_TABLE(FONCTION=_F(FONCTION=F_DY_3))
IMPR_TABLE(TABLE=T_DY_3)


F_SIGN_3=RECU_FONCTION( RESULTAT=U_3, NOM_CHAM = 'SIEF_ELGA',
          NOM_CMP = 'SIGN',
          MAILLE  = 'CUBEDEG',POINT=1)
T_SIGN_3=CREA_TABLE(FONCTION=_F(FONCTION=F_SIGN_3))
IMPR_TABLE(TABLE=T_SIGN_3)


F_SITX_3=RECU_FONCTION( RESULTAT=U_3, NOM_CHAM = 'SIEF_ELGA',
          NOM_CMP = 'SITX',
          MAILLE  = 'CUBEDEG',POINT=2)
T_SITX_3=CREA_TABLE(FONCTION=_F(FONCTION=F_SITX_3))
IMPR_TABLE(TABLE=T_SITX_3)

# TEST SIGMA_NORMAL
TEST_RESU(RESU=_F(INST=linst3[2],
                  REFERENCE='ANALYTIQUE',
                  POINT=1,
                  RESULTAT=U_3,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SIGN',
                  VALE_CALC= 8.00000000E+04,
                  VALE_REFE=sigma_max*(1.-beta),
                  MAILLE='CUBEDEG',),
          )

# LCT - LONGEUR CRITIQUE TANGENTIELLE
LCT = delta_max*tan(alpha*pi/4.)

# TEST SIGMA_TAN ENDOMAGEMENT PARTIEL
# CAS DE FIGURE OU LA LOI TANGENTIELLE INCREMENTALE EST ACTIVEE
# LA SOLUTION ANALYTIQUE N'EST PLUS TRIVIALE
TEST_RESU(RESU=_F(INST=linst3[2],
                  POINT=2,
                  RESULTAT=U_3,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SITY',
                  VALE_CALC=-2.301359791464E+05,
                  MAILLE='CUBEDEG',),
          )

# TEST SIGMA_TAN ENDOMAGEMENT PARTIEL
# CAS DE FIGURE OU LA LOI TANGENTIELLE INCREMENTALE EST ACTIVEE
# LA SOLUTION ANALYTIQUE N'EST PLUS TRIVIALE
TEST_RESU(RESU=_F(INST=linst3[4],
                  POINT=1,
                  RESULTAT=U_3,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SITY',
                  VALE_CALC=3.1181275714916E+05,
                  MAILLE='CUBEDEG',),
          )

# TEST SIGMA_TAN ENDOMAGEMENT PARTIEL DANS LA DIRECTION TRANSVERSE
TEST_RESU(RESU=_F(INST=linst3[4],
                  REFERENCE='ANALYTIQUE',
                  POINT=1,
                  RESULTAT=U_3,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SITX',
                  VALE_CALC= 4.65891911E-11,
                  VALE_REFE=0.0,
                  CRITERE='ABSOLU',
                  MAILLE='CUBEDEG',),
          )

#IMPR_RESU(FORMAT='GMSH',RESU=(_F(RESULTAT=U_1,NOM_CHAM='DEPL',TYPE_CHAM='VECT_3D',NOM_CMP=('DX','DY','DZ')))),
#IMPR_RESU(FORMAT='GMSH',RESU=(_F(RESULTAT=U_2,NOM_CHAM='DEPL',TYPE_CHAM='VECT_3D',NOM_CMP=('DX','DY','DZ')))),
#IMPR_RESU(FORMAT='GMSH',RESU=(_F(RESULTAT=U_3,NOM_CHAM='DEPL',TYPE_CHAM='VECT_3D',NOM_CMP=('DX','DY','DZ')))),
FIN()
