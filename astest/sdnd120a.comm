# MODIF  DATE 28/09/2004   AUTEUR DURAND C.DURAND 
# TITRE LACHER D'UNE MASSE AVEC DISPOSITIF ANTI SISMIQUE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================
# CAS_TEST__:SDND120A
DEBUT(CODE=_F( NOM = 'SDND120A',NIV_PUB_WEB='INTERNET') )

#
MAILLAGE=LIRE_MAILLAGE( )

#
MODELE=AFFE_MODELE(  MAILLAGE=MAILLAGE,AFFE=(
              _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_T',
                     GROUP_MA = 'RESSORTS'),
                   _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_T',
                     GROUP_NO = ( 'MASSES1', 'MASSES2',)))
                    )

#
M=25.

K=1.E+10

CARA_ELE=AFFE_CARA_ELEM(  MODELE=MODELE,DISCRET=(
      _F( GROUP_MA = 'RESSORTS',  CARA = 'K_T_D_L',  VALE = (K, K, K,)),
      _F( GROUP_NO = 'MASSES1',  CARA = 'M_T_D_N',  VALE = M),
      _F( GROUP_NO = 'MASSES2',  CARA = 'M_T_D_N',  VALE = M))
                         )

#
CON_LIM=AFFE_CHAR_MECA(  MODELE=MODELE,DDL_IMPO=(
              _F(  GROUP_NO = 'ENCBICHO',    DX = 0.,  DY = 0.,  DZ = 0.),
              _F(  GROUP_NO = ( 'MASSES1', 'MASSES2',), DY = 0.,  DZ = 0.))
                       )

#
MACRO_MATR_ASSE(  MODELE=MODELE,  CHARGE=(CON_LIM, ),
                  CARA_ELEM=CARA_ELE,
                   NUME_DDL=CO("NUMEDDL"),MATR_ASSE=(
                 _F(  MATRICE = CO("RIGIDITE"),  OPTION = 'RIGI_MECA'),
                           _F(  MATRICE = CO("MASSE"),  OPTION = 'MASS_MECA'))
               )

#
MODE_MEC=MODE_ITER_SIMULT(  MATR_A=RIGIDITE,   MATR_B=MASSE,
          
                 CALC_FREQ=_F(  OPTION = 'BANDE',
          
                      FREQ = (3000., 3500.,))
                           )

#
# CALCUL DES MODES STATIQUES AUX POINTS D'ANCRAGE:
#-------------------------------------------------
MODE_STA=MODE_STATIQUE(  MATR_RIGI=RIGIDITE,   MATR_MASS=MASSE,
                           INFO=1,
                          MODE_STAT=_F(  TOUT = 'OUI', AVEC_CMP = 'DX') )

L_INST=DEFI_LIST_REEL(  DEBUT=0.,
                        INTERVALLE=_F(  JUSQU_A = 2., PAS = 0.0001) )

#
# DESCRIPTION DES ACCELEROGRAMMES:
#---------------------------------
OMEGAA=2.*pi*1.

ACCE1 = FORMULE(NOM_PARA='INST',VALE='-0.66*sin(OMEGAA*INST) ')
ACCELER1=CALC_FONC_INTERP( FONCTION=ACCE1, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                               PROL_DROITE='LINEAIRE',
                              PROL_GAUCHE='LINEAIRE',
                               NOM_RESU='ACCE',
                             INFO=1)

#
# INTEGRATION DES ACCELEROGRAMMES:
#---------------------------------

VITE1 = FORMULE(NOM_PARA='INST',VALE='0.66*cos(OMEGAA*INST)/OMEGAA ')
VITESSE1=CALC_FONC_INTERP( FONCTION=VITE1, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                       PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      NOM_RESU='VITE',
                     INFO=1)

DEPL1 = FORMULE(NOM_PARA='INST',VALE='0.66*sin(OMEGAA*INST)/(OMEGAA**2)')
DEPLACE1=CALC_FONC_INTERP( FONCTION=DEPL1, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                       PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      NOM_RESU='DEPL',
                     INFO=1)

ACCE2 = FORMULE(NOM_PARA='INST',VALE='0.*INST ')
ACCELER2=CALC_FONC_INTERP( FONCTION=ACCE2, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                       PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      NOM_RESU='ACCE',
                     INFO=1)

#
VITE2 = FORMULE(NOM_PARA='INST',VALE='0.*INST ')
VITESSE2=CALC_FONC_INTERP( FONCTION=VITE2, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                       PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      NOM_RESU='VITE',
                     INFO=1)

DEPL2 = FORMULE(NOM_PARA='INST',VALE='0.*INST ')
DEPLACE2=CALC_FONC_INTERP( FONCTION=DEPL2, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                       PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      NOM_RESU='DEPL',
                     INFO=1)

#
MULT_X1=CALC_CHAR_SEISME(  MATR_MASS=MASSE,   DIRECTION=( 1., 0., 0.,),
                             MODE_STAT=MODE_STA,    NOEUD='NO1' )

MULT_X2=CALC_CHAR_SEISME(  MATR_MASS=MASSE,   DIRECTION=( 1., 0., 0.,),
                             MODE_STAT=MODE_STA,   NOEUD='NO11' )

#
# PROJECTION DES MATRICES MET K SUR LA BASE MODALE
#-------------------------------------------------
MACRO_PROJ_BASE(BASE=MODE_MEC,MATR_ASSE_GENE=(
                _F( MATRICE = CO("MASS_GEN"),  MATR_ASSE = MASSE),
                _F( MATRICE = CO("RIGI_GEN"),  MATR_ASSE = RIGIDITE)),VECT_ASSE_GENE=(
                _F( VECTEUR = CO("VECT_X1"),  VECT_ASSE = MULT_X1),
                _F( VECTEUR = CO("VECT_X2"),  VECT_ASSE = MULT_X2))
               )

#
# CALCUL TRANSITOIRE PAR SUPERPOSITION MODALE
# -------------------------------------------
TRAN_GE=DYNA_TRAN_MODAL(  MASS_GENE=MASS_GEN,   RIGI_GENE=RIGI_GEN,
                  METHODE='EULER',
                MODE_STAT=MODE_STA,
               INCREMENT=_F( INST_INIT = 0.,  INST_FIN = 1.,  PAS = 1.25E-5),EXCIT=(
                _F(  VECT_GENE = VECT_X1,  
                       MULT_APPUI = 'OUI',
                       DIRECTION = ( 1., 0., 0.,), NOEUD = 'NO1',
                       ACCE = ACCELER1,
                       VITE = VITESSE1,  DEPL = DEPLACE1),
                _F(  VECT_GENE = VECT_X2,  ACCE = ACCELER2,
                       MULT_APPUI = 'OUI',
                       DIRECTION = ( 1., 0., 0.,), NOEUD = 'NO11',
                       VITE = VITESSE2,  DEPL = DEPLACE2)),
                ARCHIVAGE=_F(  PAS_ARCH = 80),
                ANTI_SISM=_F(  NOEUD_1 = 'NO2',
                            NOEUD_2 = 'NO12',
                            RIGI_K1 = 6.E+06,
                            RIGI_K2 = 0.53E+06,
                            SEUIL_FX = 1200.,
                            C = 0.07E+05,
                            PUIS_ALPHA = 0.2,
                            DX_MAX = 0.03),
                    INFO=2
                          )

#
LISTIMP=DEFI_LIST_REEL(  DEBUT=0.,
                INTERVALLE=_F(  JUSQU_A = 0.998, PAS = 2.E-3))

# RECUPERATION DES DEPL ABSOLUS CALCULES
#----------------------------------------
NO2_DX_A=RECU_FONCTION(  NOEUD='NO2',  NOM_CMP='DX',  NOM_CHAM='DEPL',
                            RESU_GENE=TRAN_GE,    INFO=2,
                          MULT_APPUI='OUI',      INTERP_NUME='LIN',
                           LIST_INST=LISTIMP,   INTERPOL='LIN', 
                            TITRE='ACCELERATION ABSOLUE AU NOEUD NO2'
                        )

MAX_NO2A=CALC_FONCTION( MAX=_F( FONCTION = NO2_DX_A))

RMS_NO2A=CALC_FONCTION(RMS=_F(  FONCTION = NO2_DX_A,
                               METHODE = 'TRAPEZE',
                               CRITERE = 'ABSOLU',
                                PRECISION = 1.E-6)
                         )

TEST_TABLE( TABLE=MAX_NO2A,FILTRE=(
            _F( NOM_PARA = 'FONCTION', VALE_K = 'NO2_DX_A'),
            _F( NOM_PARA = 'INST', VALE = 2.5E-1)),
             NOM_PARA='MAXI',
              PRECISION=0.01,
             VALE=1.67E-2 )

TEST_TABLE( TABLE=RMS_NO2A,FILTRE=(
            _F( NOM_PARA = 'FONCTION', VALE_K = 'NO2_DX_A'),
            _F( NOM_PARA = 'METHODE', VALE_K = 'TRAPEZE')),
             NOM_PARA='RMS',
              PRECISION=0.01,
             VALE=1.18E-2 )

#
#RECUPERATION DES DEPL RELATIFS CALCULES
#----------------------------------------
NO2_DX_R=RECU_FONCTION(  NOEUD='NO2',  NOM_CMP='DX',  NOM_CHAM='DEPL',
                            RESU_GENE=TRAN_GE,    INFO=2,
                          INTERP_NUME='LIN',
                           LIST_INST=LISTIMP,   INTERPOL='LIN' )

MAX_NO2R=CALC_FONCTION( MAX=_F( FONCTION = NO2_DX_R))

RMS_NO2R=CALC_FONCTION(RMS=_F(  FONCTION = NO2_DX_R,
                               METHODE = 'TRAPEZE',
                               CRITERE = 'ABSOLU',
                                PRECISION = 1.E-6)
                         )

TEST_TABLE( TABLE=MAX_NO2R,FILTRE=(
            _F( NOM_PARA = 'FONCTION', VALE_K = 'NO2_DX_R'),
            _F( NOM_PARA = 'INST', VALE = 7.1E-1)),
             NOM_PARA='MAXI',
              PRECISION=0.013,
             VALE=1.266E-6 )

TEST_TABLE( TABLE=RMS_NO2R,FILTRE=(
            _F( NOM_PARA = 'FONCTION', VALE_K = 'NO2_DX_R'),
            _F( NOM_PARA = 'METHODE', VALE_K = 'TRAPEZE')),
             NOM_PARA='RMS',
              PRECISION=0.013,
             VALE=7.7975E-7 )

#
FCHOC=RECU_FONCTION(   RESU_GENE=TRAN_GE,
                        NOEUD_CHOC='NO2',    INFO=2, 
                       PARA_X='INST',  PARA_Y='FN' )

MAXFCHOC=CALC_FONCTION( MAX=_F( FONCTION = FCHOC) )

RMSFCHOC=CALC_FONCTION(RMS=_F(  FONCTION = FCHOC,
                               METHODE = 'TRAPEZE',
                               CRITERE = 'ABSOLU',
                                PRECISION = 1.E-6)
                         )

TEST_TABLE( TABLE=RMSFCHOC,FILTRE=(
            _F( NOM_PARA = 'FONCTION', VALE_K = 'FCHOC'),
            _F( NOM_PARA = 'METHODE', VALE_K = 'TRAPEZE')),
             NOM_PARA='RMS',
              PRECISION=0.01,
             VALE=7.9123E+3 )

TEST_TABLE( TABLE=MAXFCHOC,FILTRE=(
            _F( NOM_PARA = 'FONCTION', VALE_K = 'FCHOC'),
            _F( NOM_PARA = 'INST', VALE = 2.1E-1)),
             NOM_PARA='MAXI',
              PRECISION=0.01,
             VALE=1.266E+4 )

FIN()
#
