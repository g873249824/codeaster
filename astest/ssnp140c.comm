# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI'))

# LECTURE DU MAILLAGE
MAIL=LIRE_MAILLAGE(FORMAT='MED',);

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_NO=_F(GROUP_MA='34',),);

# AFFECTATION DU MODELE SUR LE MAILLAGE
MODE=AFFE_MODELE(MAILLAGE=MAIL,
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='MECANIQUE',
                         MODELISATION='D_PLAN',),);

# DEFINITION DES PARAMETRES DE LA LOI DE COMPORTEMENT
MA=DEFI_MATERIAU(ELAS=_F(E=20000.,
                         NU=0.,),
                 ECRO_LINE=_F(D_SIGM_EPSI=-2000.,
                              SY=2.,),);

# AFFECTATION DU MATERIAU SUR L ENSEMBLE DU MAILLAGE
MATE=AFFE_MATERIAU(MAILLAGE=MAIL,
                   AFFE=_F(TOUT='OUI',
                           MATER=MA,),);

# CONDITIONS AUX LIMITES ET CHARGEMENTS
CHAR=AFFE_CHAR_MECA(MODELE=MODE,
                    DDL_IMPO=(_F(GROUP_MA='12',
                                  DY=0.0,),
                               _F(GROUP_MA='45',
                                  DX=0.0,),),);

CHAR2=AFFE_CHAR_MECA(MODELE=MODE,
                     DDL_IMPO=_F(GROUP_MA='34',
                                  DY=0.3,),);

F_DEPL=DEFI_FONCTION(NOM_PARA    = 'INST',
                     VALE        = (0,0, 1,1),
                     PROL_DROITE = 'LINEAIRE',);

# DISCRETISATION EN TEMPS
TFIN = 0.005

L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=TFIN,
                                    NOMBRE=50,),);

DEFLIST = DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = L_INST,),);


# Result from Newton-Raphson method
FX=LIRE_FONCTION(     UNITE=25,NOM_PARA        ='INST',PROL_DROITE='CONSTANT',
                 PROL_GAUCHE='CONSTANT')



# RESOLUTION AVEC LA METHODE IMPL-EX
RESUIE=STAT_NON_LINE(MODELE=MODE,
                     CHAM_MATER=MATE,
                     EXCIT=(_F(CHARGE=CHAR,),
                            _F(CHARGE=CHAR2, FONC_MULT=F_DEPL,),),
                     COMPORTEMENT=_F(RELATION='ENDO_FRAGILE',),
                     INCREMENT=_F(LIST_INST=DEFLIST,
                                  INST_FIN=TFIN,),
                     METHODE = 'IMPLEX'
);

# EXTRACTION DE LA COURBE FORCE APPLIQUEE EN FONCTION DU TEMPS
RESUIE=CALC_CHAMP(reuse =RESUIE,
               RESULTAT=RESUIE,
               FORCE='FORC_NODA');

FORCIE=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                               INTITULE='FORCE',
                               RESULTAT=RESUIE,
                               NOM_CHAM='FORC_NODA',
                               GROUP_NO='34',
                               RESULTANTE='DY',),);


FXIE=RECU_FONCTION(TABLE=FORCIE,
                   PARA_X='INST',
                   PARA_Y='DY',
                   INTERPOL='LIN',
                   PROL_DROITE='CONSTANT',
                   PROL_GAUCHE='CONSTANT');

# DIFF DES COURBES OBTENUES AVEC LES DEUX METHODES
DIFF=CALC_FONCTION(COMB=(
                          _F( FONCTION = FX, COEF =  1.),
                          _F( FONCTION = FXIE, COEF = -1.),
                          ) );

TEST_FONCTION(VALEUR=(_F(VALE_CALC=0.0,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=2.0000000000000002E-05,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.E-6,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=0.0,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=4.0000000000000003E-05,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.E-6,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=0.0,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=6.0000000000000002E-05,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.E-6,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=0.0,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=8.0000000000000007E-05,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.E-6,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=0.0,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=1.E-4,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.E-6,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=0.0,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=1.6000000000000001E-4,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.E-6,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=0.0,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=2.0000000000000001E-4,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.E-6,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=2.22044604925e-16,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=2.9999999999999997E-4,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.E-6,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-4.4408920985e-16,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=4.0000000000000002E-4,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.E-6,
                         FONCTION=DIFF,),
                      ),
              )

# CALCUL DU CRITERE DES MOINDRES CARRES ENTRE LES DEUX COURBES
# ON INTEGRE LA DIFF DES DEUX COURBES ET ON SOMME LES TERMES
INT=CALC_FONCTION(INTEGRE=(
                          _F( FONCTION = DIFF,),
                          ) );

TEST_FONCTION(VALEUR=_F(FONCTION=INT,
                        VALE_PARA=5.e-3,
                        VALE_CALC=1.33957649E-03))

TINT=CREA_TABLE(FONCTION= _F(FONCTION = INT,
                             PARA = ('INST','DY')),);

TEST_TABLE(TABLE=TINT,
           VALE_CALC=1.3611918E-03,
           NOM_PARA='DY',
           TYPE_TEST='MAX',)

FIN();
