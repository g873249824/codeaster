# TITRE : VARIATION TEMPERATURE DANS LE COMPORTEMENT 'ELAS' ISOTROPE
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# TRANSVERSE SOUS COMP_INCR
# ======================================================================
#         MATERIAU ISOTROPE TRANSVERSE (avec valeur isotrope)
# CAS-TEST DE REFERENCE : SSLS101E
#=====================================================================


DEBUT(CODE=_F(NOM='COMP008M',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU


TINF1=45
TSUP1=65.
T1=50
TR1=T1 + ( ( TSUP1 + TINF1 - ( 2. * T1 ) ) / 6. )

TINF2=70.
TSUP2=90.
T2=75.
TR2=T2 + ( ( TSUP2 + TINF2 - ( 2. * T2 ) ) / 6. )

TINF3=95.
TSUP3=115
T3=100.
TR3=T3 + ( ( TSUP3 + TINF3 - ( 2. * T3 ) ) / 6. )

TREF = TR1
T0   = TR1
Tmax = TR3

ZERO =DEFI_CONSTANTE(VALE=0.0);

UN   =DEFI_CONSTANTE(VALE=1.0);

#===========================================================
#                  RELATION = 'ELAS'
#===========================================================
#
# INITIALISATIONS


compor='ELAS'


E1=1.
E2=1.1
E3=1.2

# Module de cisaillement isotrope: G = E/2/(1+NU)
G1=E1/2
G2=E2/2
G3=E3/2

YOUN_L=DEFI_FONCTION(  NOM_PARA='TEMP',
                       VALE=( TR1, E1,  TR2, E2,  TR3, E3, )  )

ALPHA1=DEFI_FONCTION(NOM_PARA='TEMP',
                     VALE=(TR1, 1.0E-5,
                           TR2, 1.5E-5,
                           TR3, 2.0E-5
                           ),);

ALPHA2=DEFI_FONCTION(NOM_PARA='TEMP',
                     VALE=(TR1, 1.0E-5,
                           TR2, 1.5E-5,
                           TR3, 2.0E-5
                           ),);

MCISA_2=DEFI_FONCTION(  NOM_PARA='TEMP',
                   VALE=( TR1, G1,  TR2, G2,  TR3, G3, )  )

MATERI=DEFI_MATERIAU(  ELAS_ISTR_FO=_F(E_L   = YOUN_L,
                                       E_N   = YOUN_L,
                                       NU_LN = ZERO,
                                       NU_LT = ZERO,
                                       G_LN  = MCISA_2,
                                       TEMP_DEF_ALPHA = TREF,
                                       ALPHA_L = ALPHA1,
                                       ALPHA_N = ALPHA2,),
                    );

tfin = 1.

NCAL = 5
LMAT2  = [None]*(NCAL)
time=0.
for i in range(NCAL):
    timem = time
    time = timem + tfin/NCAL
    Ti = T0 + time/tfin * (Tmax - T0)
    Tm = T0 + timem/tfin * (Tmax - T0)
    LMAT2[i]=DEFI_MATERIAU(ELAS_ISTR=_F(E_L     = YOUN_L(Ti),
                                        E_N     = YOUN_L(Ti),
                                        NU_LN   = 0.,
                                        NU_LT   = 0.,
                                        G_LN    = MCISA_2(Ti),
                                        ALPHA_L = 0.,
                                        ALPHA_N = 0.,),
                                );

############################################################################
# MACRO pour test thermoplastique

tabresu=TEST_COMPOR(SUPPORT='ELEMENT',
              MATER=MATERI,COMP_INCR=_F(RELATION=compor),
              LIST_MATER=LMAT2,ALPHA=ALPHA1,YOUNG=YOUN_L,TEMP_INIT=T0,TEMP_FIN=Tmax,
              NEWTON=_F(REAC_ITER=1),
              NB_VARI=0,)

IMPR_TABLE(TABLE=tabresu)

FIN();
