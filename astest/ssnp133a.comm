# MODIF  DATE 07/10/2008   AUTEUR PELLET J.PELLET 
# TITRE TEST DES ELEMENTS DE JOINT 2D SUR UNE PLAQUE TROUE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F( NOM = 'SSNP133A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),PAR_LOT = 'OUI')


tfin=100
nbpas = 100
nbpas_arch = 100
c_mult_pilo = 10

# LA TENACITE DEFINIE ICI CORRESPOND A LA MOITIE DE LA TENACITE DE LA PLAQUE EN ENTIER.
tenac = 0.1
sigc=3
sc=0.001
pena_adhe=sc/(tenac/sigc)
pena_cont=0.9


PRE_GMSH()
MA_1 = LIRE_MAILLAGE()

MA_2 = CREA_MAILLAGE(
  MAILLAGE = MA_1,
  LINE_QUAD = _F(GROUP_MA = ('GM5','GM4','GM2','GM3') )
  )

MA_2 = DEFI_GROUP(reuse = MA_2,
       MAILLAGE = MA_2,
       CREA_GROUP_MA = (
          _F(NOM = 'FACE_SUP', GROUP_MA = 'GM4'),
          _F(NOM = 'MATIERE' , GROUP_MA = 'GM5'),
          _F(NOM = 'SYME_HG' , GROUP_MA = 'GM22'),
          _F(NOM = 'SYME_HD' , GROUP_MA = 'GM23'),
        ),
       CREA_GROUP_NO = (
          _F(NOM = 'FACE_SUP', GROUP_MA = 'GM4'),       
          _F(NOM = 'RIG_1',    GROUP_MA = 'GM1'),
          _F(
            NOM           = 'SYME_HD',
            GROUP_MA      = 'GM23',
            OPTION        = 'NOEUD_ORDO',
            GROUP_NO_ORIG = 'GM26',
            ),
          _F(
            NOM           = 'SYME_BD',
            GROUP_MA      = 'GM13',
            OPTION        = 'NOEUD_ORDO',
            GROUP_NO_ORIG = 'GM16',
            ),
          _F(
            NOM           = 'SYME_HG',
            GROUP_MA      = 'GM22',
            OPTION        = 'NOEUD_ORDO',
#            GROUP_NO_ORIG = 'GM27',
            GROUP_NO_ORIG = 'GM28',
            ),
          _F(
            NOM           = 'SYME_BG',
            GROUP_MA      = 'GM12',
            OPTION        = 'NOEUD_ORDO',
#            GROUP_NO_ORIG = 'GM17',
            GROUP_NO_ORIG = 'GM18',
            ),
          _F(
            NOM           = 'FACE_G',
            GROUP_MA      = 'GM2',
            ),
          _F(
            NOM           = 'FACE_D',
            GROUP_MA      = 'GM3',
            ),
         )
       )
       
# ATTENTION ON CREE LES DEUX TRAJETS DE FISSURES POTENTIELLES AVEC DES ELEMENTS DE JOINT 
# DE TELLE SORTE QUE CES DERNIERS AIENT UNE NUM LOCALE DANS LE SENS TRIGONOMETRIQUE.
# LE GROUP_NO_1 PORTE LES NUM LOCALES 1 ET 2, LE GROUP_NO_2 PORTE LES NUM LOCALES 4 ET 3. 
       
MA = CREA_MAILLAGE(
  MAILLAGE   = MA_2,
  CREA_FISS = (
    _F(NOM='JOINT_D', GROUP_NO_1='SYME_BD', GROUP_NO_2='SYME_HD', PREF_MAILLE='MJD'),
    _F(NOM='JOINT_G', GROUP_NO_1='SYME_BG', GROUP_NO_2='SYME_HG', PREF_MAILLE='MJG'),    
    )
  )
  
MA = DEFI_GROUP(reuse = MA,
  MAILLAGE      = MA,
  CREA_GROUP_MA = _F(NOM = 'JOINT', UNION = ('JOINT_G', 'JOINT_D') ),
  CREA_GROUP_NO = _F(NOM = 'JOINT', GROUP_MA = 'JOINT'),  
  )

          
BETON = DEFI_MATERIAU(
  ELAS      = _F (E=20000., NU=0.2),
  RUPT_FRAG = _F(
    GC     = tenac,
    SIGM_C = sigc,
    PENA_ADHERENCE=pena_adhe,
    PENA_CONTACT=pena_cont,
    ),
  )

CHMAT = AFFE_MATERIAU(
          MAILLAGE = MA,
          AFFE = _F(
          GROUP_MA = ('MATIERE','JOINT'),
          MATER    =  BETON
        )
      )


MO = AFFE_MODELE(
       MAILLAGE = MA,
       AFFE = (
         _F(
           GROUP_MA     = ('MATIERE','FACE_SUP'),
           PHENOMENE    = 'MECANIQUE',
           MODELISATION = 'D_PLAN'),
         _F(
           GROUP_MA     = 'JOINT',
           PHENOMENE    = 'MECANIQUE',
           MODELISATION = 'PLAN_JOINT'),
           ))


RIGIDE = AFFE_CHAR_MECA(
  MODELE   = MO,
  DDL_IMPO = _F(GROUP_NO='RIG_1', DX = 0)
  ) 

RACCORD = AFFE_CHAR_MECA(
  MODELE = MO,
  LIAISON_MAIL = (
    _F(
      GROUP_NO_ESCL = 'FACE_D',
      GROUP_MA_MAIT = 'JOINT_D'),
    _F(
      GROUP_NO_ESCL = 'FACE_G',
      GROUP_MA_MAIT = 'JOINT_G'),
    ))


SYMETRIE = AFFE_CHAR_MECA(
  MODELE        = MO,
  LIAISON_GROUP = (
    _F(
      GROUP_NO_1 = 'SYME_BG',
      GROUP_NO_2 = 'SYME_HG',
      DDL_1 = 'DX',
      DDL_2 = 'DX',
      COEF_MULT_1 =  1.,
      COEF_MULT_2 = -1.,
      COEF_IMPO   =  0.
      ),
    _F(
      GROUP_NO_1 = 'SYME_BG',
      GROUP_NO_2 = 'SYME_HG',
      DDL_1 = 'DY',
      DDL_2 = 'DY',
      COEF_MULT_1 = 1.,
      COEF_MULT_2 = 1.,
      COEF_IMPO   = 0.
      ),
    _F(
      GROUP_NO_1 = 'SYME_BD',
      GROUP_NO_2 = 'SYME_HD',
      DDL_1 = 'DX',
      DDL_2 = 'DX',
      COEF_MULT_1 =  1.,
      COEF_MULT_2 = -1.,
      COEF_IMPO   =  0.
      ),
    _F(
      GROUP_NO_1 = 'SYME_BD',
      GROUP_NO_2 = 'SYME_HD',
      DDL_1 = 'DY',
      DDL_2 = 'DY',
      COEF_MULT_1 = 1.,
      COEF_MULT_2 = 1.,
      COEF_IMPO   = 0.
      ),
    )
  )
             

TRACTION = AFFE_CHAR_MECA(
  MODELE = MO,
  FORCE_CONTOUR = _F(GROUP_MA = 'FACE_SUP', FY =  1),
  )

  
INSTANTS = DEFI_LIST_REEL(
  DEBUT = 0.,
  INTERVALLE = (
    _F(JUSQU_A =  tfin, NOMBRE = nbpas),
    )
  )

INS_ARCH = DEFI_LIST_REEL(
  DEBUT = 0.,
  INTERVALLE = (
    _F(JUSQU_A =  tfin, NOMBRE = nbpas_arch),
    )
  )


EVOL = STAT_NON_LINE(
  MODELE = MO,
  CHAM_MATER = CHMAT,
  EXCIT = (
    _F(CHARGE = RIGIDE),
    _F(CHARGE = SYMETRIE),
    _F(CHARGE = RACCORD),
    _F(CHARGE = TRACTION, TYPE_CHARGE = 'FIXE_PILO')
    ),
  COMP_INCR = (
    _F(RELATION = 'ELAS'      , GROUP_MA = 'MATIERE'),
    _F(RELATION = 'CZM_EXP_REG', GROUP_MA = 'JOINT'  ),
    ),    
  INCREMENT  = _F(LIST_INST = INSTANTS, 
    INST_FIN = tfin,
    SUBD_METHODE='UNIFORME',
    SUBD_PAS  = 10,
    SUBD_NIVEAU = 10,
    SUBD_PAS_MINI = 1.55E-8
                 ),    
  PILOTAGE  = _F (
    TYPE           = 'PRED_ELAS',
    GROUP_MA       = 'JOINT',
    COEF_MULT      = c_mult_pilo,
    ETA_PILO_MIN   = 0.00001,
    ETA_PILO_R_MIN = 0,
    PROJ_BORNES    = 'NON'
    ),

  RECH_LINEAIRE = _F (
    ITER_LINE_MAXI = 0,
    RESI_LINE_RELA = 0.8,
    RHO_MIN        = -2,
    RHO_MAX        = 2,
    RHO_EXCL       = 1.E-2
    ),
    
  NEWTON  = _F(
    MATRICE   = 'TANGENTE',
    REAC_ITER = 1,
    ),
  CONVERGENCE = _F(
    RESI_GLOB_MAXI = 1.E-4,
    ITER_GLOB_MAXI = 20,
    ),
  ARCHIVAGE = _F(
    ARCH_ETAT_INIT = 'OUI',
    LIST_INST = INS_ARCH
    )
  ) 



EVOL = CALC_NO(reuse = EVOL,
  MODELE = MO,
  CHAM_MATER = CHMAT,
  RESULTAT = EVOL,
  OPTION = 'FORC_NODA',
  GROUP_MA='MATIERE'
  )


# DEPLACEMENT DU NOEUD RIG_1
U_RIG1 = POST_RELEVE_T(
 ACTION = _F(
   INTITULE     = 'DEPL',
   OPERATION    = 'EXTRACTION',   
   GROUP_NO     = 'RIG_1',
   NOM_CHAM     = 'DEPL',
   NOM_CMP      = 'DY',
   RESULTAT     =  EVOL,
   TOUT_ORDRE   = 'OUI',
    )) 

# FORCE PILOTE RESULTANTE DANS LA DIRECTION Y:
FPILO = POST_RELEVE_T(
 ACTION = _F(
   INTITULE     = 'F_PILOTE',
   OPERATION    = 'EXTRACTION',   
   GROUP_NO     = 'FACE_SUP',
   NOM_CHAM     = 'FORC_NODA',
   RESULTANTE   = 'DY',
   RESULTAT     =  EVOL,
   TOUT_ORDRE   = 'OUI',
    )) 


#-------------------------------------------------

TEST_RESU (
  RESU = (
    _F(
      REFERENCE = 'NON_REGRESSION',
      RESULTAT  = EVOL,
      NOM_CHAM  = 'DEPL',
      NOM_CMP   = 'DY',
      VALE      = 1.51334586E-01,
      GROUP_NO  = 'RIG_1',
      INST      = 10
      ),
    )
  )
  
TEST_TABLE(TABLE=FPILO,
           FILTRE=(_F(NOM_PARA='INST',
                      VALE=10,),),
           NOM_PARA='DY',
           VALE=1.693118506E+03,
           REFERENCE='NON_REGRESSION')
  
#-------------------------------------------------
TEST_RESU (
  RESU = (
    _F(
      REFERENCE = 'NON_REGRESSION',
      RESULTAT  = EVOL,
      NOM_CHAM  = 'DEPL',
      NOM_CMP   = 'DY',
      VALE      = 1.33955349E-01,
      GROUP_NO  = 'RIG_1',
      INST      = 30
      ),
    )
  )
  
TEST_TABLE(TABLE=FPILO,
           FILTRE=(_F(NOM_PARA='INST',
                      VALE=30,),),
           NOM_PARA='DY',
           VALE=1.34814567530E+03,
           REFERENCE='NON_REGRESSION')
  
#-------------------------------------------------
    
TEST_RESU (
  RESU = (
    _F(
      REFERENCE = 'NON_REGRESSION',
      RESULTAT  = EVOL,
      NOM_CHAM  = 'DEPL',
      NOM_CMP   = 'DY',
      VALE      = 1.33603276E-01,
      GROUP_NO  = 'RIG_1',
      INST      = 60
      ),
    )
  )
  
TEST_TABLE(TABLE=FPILO,
           FILTRE=(_F(NOM_PARA='INST',
                      VALE=60,),),
           NOM_PARA='DY',
           VALE=1.09292306696E+03,
           REFERENCE='NON_REGRESSION')
#-------------------------------------------------
    
TEST_RESU (
  RESU = (
    _F(
      REFERENCE = 'NON_REGRESSION',
      RESULTAT  = EVOL,
      NOM_CHAM  = 'DEPL',
      NOM_CMP   = 'DY',
      VALE      = 7.67797848E-02,
      GROUP_NO  = 'RIG_1',
      INST      = 95
      ),
    )
  )
  
TEST_TABLE(TABLE=FPILO,
           FILTRE=(_F(NOM_PARA='INST',
                      VALE=95,),),
           NOM_PARA='DY',
           VALE=5.04231714892E+02,
           REFERENCE='NON_REGRESSION')



IMPR_TABLE(TABLE = U_RIG1)
IMPR_TABLE(TABLE = FPILO)


FIN()


