# -*- coding: utf-8 -*-
# person_in_charge: jean-michel.proix at edf.fr
# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

young=215.e9
poisson=0.3

MATF=DEFI_MATERIAU(
                    ELAS=_F(E=young, NU=poisson),
                    SVenantKirchhoff=_F(
                                YoungModulus = young,
                                PoissonRatio = poisson,
                    ) )



LINST=DEFI_LIST_REEL(              DEBUT=0.,INTERVALLE=(
                              _F( JUSQU_A = 1, NOMBRE = 10),))

LSUB=DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=LINST),
                        ECHEC=_F(SUBD_NIVEAU=2,
                                 SUBD_PAS=2,),
                                 )
EPSI0=0.2
FXX=1+EPSI0

F1=DEFI_FONCTION(NOM_PARA='INST',
                   VALE=(0.0,1.0,1.,FXX),
                   PROL_DROITE='LINEAIRE',
                   PROL_GAUCHE='LINEAIRE',);

F2=DEFI_FONCTION(NOM_PARA='INST',
                   VALE=(0.0,1.0,1.,1.),
                   PROL_DROITE='LINEAIRE',
                   PROL_GAUCHE='LINEAIRE',);

ZERO=DEFI_CONSTANTE(VALE=0.)


SOLMF=SIMU_POINT_MAT( MATER=MATF, INFO=1,
                COMPORTEMENT=_F(RELATION='SVenantKirchhoff',
                                DEFORMATION='SIMO_MIEHE',
                                RESI_INTE_RELA=1.e-8,
                        ),
                INCREMENT=_F(  LIST_INST = LSUB),
                NEWTON=_F(REAC_ITER = 1, ),
                      GRAD_IMPOSE= _F(F11=F1,
                                      F22=F2,
                                      F33=F2,
                                      F12=ZERO,
                                      F13=ZERO,
                                      F21=ZERO,
                                      F23=ZERO,
                                      F31=ZERO,
                                      F32=ZERO,
                                   ),
                     )

IMPR_TABLE(TABLE=SOLMF)

# comparaison solution analytique cf. castemsaintvenantkirchhoffelasticity-uniaxialloading-2-3D.mtest


la=poisson*young/((1+poisson)*(1-2*poisson))
mu=young/(1+poisson)*0.5

SXXref=FXX*(la+2*mu)*(FXX**2-1)/2
SYYref=la*(FXX**2-1)/(2*FXX)

TEST_TABLE(FILTRE=_F(NOM_PARA='INST',VALE=1.),
                   TABLE=SOLMF,
                   NOM_PARA='SIXX',
                   VALE_CALC=76407692307.7,
                   VALE_REFE=SXXref,
                   REFERENCE='ANALYTIQUE',
)
TEST_TABLE(FILTRE=_F(NOM_PARA='INST',VALE=1.),
                   TABLE=SOLMF,
                   NOM_PARA='SIYY',
                   VALE_CALC=22740384615.4,
                   VALE_REFE=SYYref,
                   REFERENCE='ANALYTIQUE',
)
TEST_TABLE(FILTRE=_F(NOM_PARA='INST',VALE=1.),
                   TABLE=SOLMF,
                   NOM_PARA='SIZZ',
                   VALE_CALC=22740384615.4,
                   VALE_REFE=SYYref,
                   REFERENCE='ANALYTIQUE',
)





FIN()
