# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MAILET=LIRE_MAILLAGE(FORMAT='MED',UNITE=20,);

MAILET=DEFI_GROUP(reuse =MAILET,
                  MAILLAGE=MAILET,
                  CREA_GROUP_NO=_F(GROUP_MA='AB',
                                   NOM='AB',),);

#

MODELE=AFFE_MODELE(MAILLAGE=MAILET,
                   AFFE=_F(TOUT='OUI',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='D_PLAN',),);

#

MATER=DEFI_MATERIAU(ELAS=_F(E=2.0E11,
                            NU=0.0,
                            RHO=7800.0,),);

#

CHAMPMAT=AFFE_MATERIAU(MAILLAGE=MAILET,
                       AFFE=_F(TOUT='OUI',
                               MATER=MATER,),);

#

CHARGE=AFFE_CHAR_MECA(MODELE=MODELE,
                      ROTATION=_F(VITESSE = 3000.,
                                  AXE= (0.,0.,1.,),
                                  CENTRE=(10.,10.,0.),),
                      DDL_IMPO=_F(GROUP_NO='AB',
                                  DX=0.,
                                  DY=0.,),);

#

RIGIELEM=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                        MODELE=MODELE,
                        CHAM_MATER=CHAMPMAT,
                        CHARGE=CHARGE,);

#

INELEM=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=CHARGE,
                      CHAM_MATER=CHAMPMAT,);

#

NUMEROTA=NUME_DDL(MATR_RIGI=RIGIELEM,);

#

ELAS=ASSE_MATRICE(MATR_ELEM=RIGIELEM,
                  NUME_DDL=NUMEROTA,);

#

INERTIE=ASSE_VECTEUR(VECT_ELEM=INELEM,
                     NUME_DDL=NUMEROTA,);

#

ELAS=FACTORISER(reuse =ELAS,
                MATR_ASSE=ELAS,);

#

DEP1=RESOUDRE(MATR=ELAS,
              CHAM_NO=INERTIE,);

#

TEST_RESU(CHAM_NO=(_F(REFERENCE='ANALYTIQUE',
                      NOM_CMP='DX',
                      GROUP_NO='P',
                      PRECISION=1.E-3,
                      
                      CHAM_GD=DEP1,
                      VALE_CALC=0.010341436,
                      VALE_REFE=0.010341446000000001,),
                   _F(REFERENCE='ANALYTIQUE',
                      NOM_CMP='DY',
                      GROUP_NO='P',
                      PRECISION=1.E-3,
                      
                      CHAM_GD=DEP1,
                      VALE_CALC=0.010341436,
                      VALE_REFE=0.010341446000000001,),
                   ),
          )

FIN();

#
