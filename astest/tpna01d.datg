### This file is generated by SALOME automatically by dump python functionality
### of GEOM component

import geompy
import math

def RebuildData(theStudy):
	geompy.init_geom(theStudy)
	global FACE_INT, D, A, B, Y, OY, Face, FACE_EXT, Revolution_1, Wire_1, O, C
	O = geompy.MakeVertex(0, 0, 0)
	A = geompy.MakeVertex(0.3, 0, 0)
	B = geompy.MakeVertex(0.391, 0, 0)
	C = geompy.MakeVertex(0.391, 0.1, 0)
	D = geompy.MakeVertex(0.3, 0.1, 0)
	Wire_1 = geompy.MakeSketcher("Sketcher:F 0.3 0:TT 0.391 0:TT 0.391 0.1:TT 0.3 0.1:TT 0.3 0", [0, 0, 0, 0, 0, 1, 1, 0, -0])
	Face = geompy.MakeFaceWires([Wire_1], 1)
	Y = geompy.MakeVertex(0, 10, 0)
	OY = geompy.MakeVector(O, Y)
	Revolution_1 = geompy.MakeRevolution(Face, OY, -180*math.pi/180.0)
	listSubShapeIDs = geompy.SubShapeAllIDs(Revolution_1, geompy.ShapeType["FACE"])
	listSubShapeIDs = geompy.SubShapeAllIDs(Revolution_1, geompy.ShapeType["FACE"])
	FACE_EXT = geompy.CreateGroup(Revolution_1, geompy.ShapeType["FACE"])
	geompy.UnionIDs(FACE_EXT, [13])
	Revolution_1 = geompy.GetMainShape(FACE_EXT)
	FACE_INT = geompy.CreateGroup(Revolution_1, geompy.ShapeType["FACE"])
	geompy.UnionIDs(FACE_INT, [27])
	Revolution_1 = geompy.GetMainShape(FACE_INT)
	geompy.addToStudy( O, "O" )
	geompy.addToStudy( A, "A" )
	geompy.addToStudy( B, "B" )
	geompy.addToStudy( C, "C" )
	geompy.addToStudy( D, "D" )
	geompy.addToStudy( Wire_1, "Wire_1" )
	geompy.addToStudy( Face, "Face" )
	geompy.addToStudy( Y, "Y" )
	geompy.addToStudy( OY, "OY" )
	geompy.addToStudy( Revolution_1, "Revolution_1" )
	geompy.addToStudyInFather( Revolution_1, FACE_EXT, "FACE_EXT" )
	geompy.addToStudyInFather( Revolution_1, FACE_INT, "FACE_INT" )
	pass
### This file is generated by SALOME automatically by dump python functionality of SMESH component

import salome, SMESH
import smesh

## import GEOM dump file ## 
import string, os, sys, re
sys.path.insert( 0, os.path.dirname(__file__) )
exec("from "+re.sub("SMESH$","GEOM",__name__)+" import *")


def RebuildData(theStudy):
	aFilterManager = smesh.smesh.CreateFilterManager()
	smesh.smesh.SetCurrentStudy(theStudy)
	import StdMeshers
	import NETGENPlugin
	pattern = smesh.GetPattern()
	smeshObj_1 = smesh.Mesh(Revolution_1)
	Regular_1D = smeshObj_1.Segment()
	Automatic_length_1 = Regular_1D.AutomaticLength(0.2)
	Quadrangle_2D = smeshObj_1.Quadrangle()
	Hexa_3D = smeshObj_1.Hexahedron()
	isDone = smeshObj_1.Compute()
	smeshObj_1.ConvertToQuadratic( 0 )
	smeshObj_2 = smeshObj_1.Group(FACE_INT)
	smeshObj_3 = smeshObj_1.Group(FACE_EXT)
	smeshObj_1.ExportMED( '/home/durand/ASTER/thermique/tpna01b/tpna01b.mail.med', 0, SMESH.MED_V2_2 )
	smeshObj_1.ExportMED( '/home/durand/ASTER/thermique/tpna01b/tpna01b.mail.med', 0, SMESH.MED_V2_2 )
	smeshObj_1.ConvertFromQuadratic()
	smeshObj_1.ConvertToQuadratic( 0 )
	smeshObj_1.ExportMED( '/home/durand/ASTER/thermique/tpna01b/tpna01b.mail.med', 0, SMESH.MED_V2_2 )
	smeshObj_1.ExportMED( '/home/durand/ASTER/thermique/tpna01b/tpna01b.mail.med', 0, SMESH.MED_V2_2 )
	smeshObj_1.ExportMED( '/home/durand/ASTER/thermique/tpna01b/tpna01b.mail.med', 0, SMESH.MED_V2_2 )
	smeshObj_1.ExportMED( '/home/durand/restit/test/tpna01b.med', 0, SMESH.MED_V2_2 )
	smeshObj_1.RemoveGroup( smeshObj_3 )
	smeshObj_1.RemoveGroup( smeshObj_2 )
	status = smeshObj_1.RemoveHypothesis(Hexa_3D)
	status = smeshObj_1.RemoveHypothesis(Quadrangle_2D)
	status = smeshObj_1.RemoveHypothesis(Regular_1D)
	status = smeshObj_1.RemoveHypothesis(Automatic_length_1)
	Automatic_length_2 = smesh.smesh.CreateHypothesis('AutomaticLength', 'libStdMeshersEngine.so')
	Automatic_length_2.SetFineness( 0.2 )
	Mesh_1 = smesh.Mesh(Revolution_1)
	status = Mesh_1.AddHypothesis(Automatic_length_2)
	status = Mesh_1.AddHypothesis(Regular_1D)
	MEFISTO_2D = Mesh_1.Triangle()
	Length_From_Edges_2D_Hyp_for_Triangulator__1 = MEFISTO_2D.LengthFromEdges()
	Tetrahedron_Netgen = Mesh_1.Tetrahedron(algo=smesh.NETGEN)
	isDone = Mesh_1.Compute()
	FACE_INT_1 = Mesh_1.Group(FACE_INT)
	FACE_EXT_1 = Mesh_1.Group(FACE_EXT)
	Mesh_1.ExportMED( '/home/durand/ASTER/thermique/tpna01d/tpna01d.mail.med', 0, SMESH.MED_V2_2 )
	isDone = Mesh_1.Compute()
	Automatic_length_2.SetFineness( 0.41 )
	isDone = Mesh_1.Compute()
	Mesh_1.ExportMED( '/home/durand/ASTER/thermique/tpna01d/tpna01d.mail.med', 0, SMESH.MED_V2_2 )
	Automatic_length_2.SetFineness( 0.62 )
	isDone = Mesh_1.Compute()
	Mesh_1.ExportMED( '/home/durand/ASTER/thermique/tpna01d/tpna01d.mail.med', 0, SMESH.MED_V2_2 )
	Mesh_1.ExportMED( '/home/durand/ASTER/thermique/tpna01d/tpna01d.mail.med', 0, SMESH.MED_V2_2 )
	Mesh_1.ExportMED( '/home/durand/ASTER/thermique/tpna01d/tpna01d.mail.med', 0, SMESH.MED_V2_2 )
	Mesh_1.ExportMED( '/home/durand/ASTER/thermique/tpna01d/tpna01d.mail.med', 0, SMESH.MED_V2_2 )

	## some objects were removed
	aStudyBuilder = theStudy.NewBuilder()
	SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_1.GetMesh()))
	if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
	SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_2))
	if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
	SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_3))
	if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
	## set object names  
	isGUIMode = 1
	if isGUIMode and salome.sg.hasDesktop():
		smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
		smesh.SetName(Automatic_length_1, 'Automatic length_1')
		smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
		smesh.SetName(Hexa_3D.GetAlgorithm(), 'Hexa_3D')
		smesh.SetName(Automatic_length_2, 'Automatic length_2')
		smesh.SetName(Mesh_1.GetMesh(), 'Mesh_1')
		smesh.SetName(MEFISTO_2D.GetAlgorithm(), 'MEFISTO_2D')
		smesh.SetName(Length_From_Edges_2D_Hyp_for_Triangulator__1, 'Length From Edges (2D Hyp. for Triangulator)_1')
		smesh.SetName(Tetrahedron_Netgen.GetAlgorithm(), 'Tetrahedron (Netgen)')
		smesh.SetName(FACE_INT_1, 'FACE_INT')
		smesh.SetName(FACE_EXT_1, 'FACE_EXT')

		salome.sg.updateObjBrowser(0)

	pass
