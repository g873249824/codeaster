# MODIF  DATE 13/01/2011   AUTEUR PELLET J.PELLET 
# TITRE ROCKING OF A 2D BLOCK RESTING ON A GROUND TABLE
# sdnv105b.para = tps_job 900 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# RESPONSABLE ABBAS M.ABBAS
# ASTER version 8.3 CALCULATION
# MODELLING WITH LOCALISED SPRING STIFFNESS
# THE GROUND TABLE IS NOT EXPLICITLY MODELLED
# COMMAND FILE ADDED OCTOBER 2006 BY FV

DEBUT(CODE=_F(NOM='sdnv105b',
              NIV_PUB_WEB='INTERNET',
              VISU_EFICAS='OUI',),);

# PHYSICAL PARAMETERS
mu_frot = 0.9;

g = 9.81;

# NUMERICAL-INTEGRATION PARAMETERS

n_iter_max = 15;

pre_glo = 1e-03;

pre_rel = 1e-06;

a_HHT_ch = -0.2;
a_HHT_c0 = -0.10;

# TIME-INTEGRATION PARAMETERS
T000 = 0.0;

pas_gro = 0.00125;
#pas_gro = 0.0025;
#pas_fin = 1.e-05;
pas_fin = 2.5e-05;

# ARCHIVING TIME-PARAMETRER (sub-multiple)
pas_arch = 0.0025;

# CHARACTERISTICS COLLISION INSTANTS (multiple of pas_fin)
# AROUND ANALYTICAL COLLISION INSTANTS :
# 0.05565, 0.1403, 0.20956, 0.2639, 0.3081

TC0P = 0.0025;
#
TC1M = 0.05375;
#TC1M = 0.0525;
#TC1P = 0.0575;
TC1P = 0.05875;
TC2M = 0.13375;
#TC2M = 0.1400;
TC2P = 0.14500;
#TC2P = 0.1450;
TC3M = 0.19250;
#TC3M = 0.2075;
TC3P = 0.20250;
#TC3P = 0.2125;
TC4M = 0.23250;
#TC4M = 0.2600;
TC4P = 0.24250;
#TC4P = 0.2650;
TC5M = 0.26500;
#TC5M = 0.3025;
TC5P = 0.27500;
#TC5P = 0.3075;
TFIN = 0.28500;
#
#instant list applied to block setting under self-weight :
# -1.95 s ->0. s

L_INST_p=DEFI_LIST_REEL(DEBUT=-1.95,
                        INTERVALLE=_F(JUSQU_A=T000,
                                      PAS=0.0075,),);
#instant list applied to releasing from non-vertical position

L_INST=DEFI_LIST_REEL(DEBUT=T000,
                      INTERVALLE=_F(JUSQU_A=1.0,
                                    PAS=pas_gro,),);
#instant list applied to collisions

L_INST_c=DEFI_LIST_REEL(DEBUT=T000,
                        INTERVALLE=_F(JUSQU_A=1.0,
                                      PAS=pas_fin,),);
#instant list applied to archiving

L_INST_A=DEFI_LIST_REEL(DEBUT=T000,
                        INTERVALLE=_F(JUSQU_A=1.0,
                                      PAS=pas_arch,),);
#ACCE = FORMULE(REEL = '''(REEL:INST) = 2*SIN(OMEGA*INST)''');

########################################################
# BLOCK HEIGHT : 800  mm ==> omega_po = 0.12951315
# BLOC HEIGHT : 8000 mm ==> omega_po = 0.04286625
# excitation circular frequency : omega = omega_po * nu
# excitation ampitude : a_x = 9.81 * alpha_x
#
#OMEGA = 2.*pi*10.;

#ACCE = FORMULE(VALE='2*sin(OMEGA*INST)',
#               NOM_PARA='INST',);

#ACCE1=CALC_FONC_INTERP(FONCTION=ACCE,
#                       LIST_PARA=L_INST,
#                       NOM_PARA='INST',
#                       PROL_DROITE='LINEAIRE',
#                       PROL_GAUCHE='LINEAIRE',);
#
#VITE = FORMULE(REEL = '''(REEL:INST) = -2*COS(OMEGA*INST)/OMEGA''');

#VITE = FORMULE(VALE='-2*cos(OMEGA*INST)/OMEGA',
#               NOM_PARA='INST',);

#VITE1=CALC_FONC_INTERP(FONCTION=VITE,
#                       LIST_PARA=L_INST,
#                       NOM_PARA='INST',
#                       PROL_DROITE='LINEAIRE',
#                       PROL_GAUCHE='LINEAIRE',);
#
#DEPL = FORMULE(REEL = '''(REEL:INST) = 2*SIN(OMEGA*INST)/(OMEGA**2)''');

#DEPL = FORMULE(VALE='2*sin(OMEGA*INST)/(OMEGA**2)',
#               NOM_PARA='INST',);

#DEPL1=CALC_FONC_INTERP(FONCTION=DEPL,
#                       LIST_PARA=L_INST,
#                       NOM_PARA='INST',
#                       PROL_DROITE='LINEAIRE',
#                       PROL_GAUCHE='LINEAIRE',);
#
########################################################

PRE_GIBI();

MA=LIRE_MAILLAGE();

# POINT ELEMENT DEFINTION TO APPLY SPRINGS

MA_poi=CREA_MAILLAGE(MAILLAGE=MA,
                     CREA_POI1=(_F(NOM_GROUP_MA='O',
                                   GROUP_NO='O',),
                                _F(NOM_GROUP_MA='A',
                                   GROUP_NO='A',),
                                _F(NOM_GROUP_MA='O1',
                                   GROUP_NO='O1',),),);

MA_poi=DEFI_GROUP(reuse =MA_poi,
                  MAILLAGE=MA_poi,
                  CREA_GROUP_NO=(_F(GROUP_MA='C1O1',
                                    NOM='C1O1',),
                                 _F(GROUP_MA='CTGROUND',
                                    NOM='CTGROUND',),),);

MO=AFFE_MODELE(MAILLAGE=MA_poi,
               AFFE=(_F(GROUP_MA='BLOCK',
                        PHENOMENE='MECANIQUE',
                        MODELISATION='C_PLAN',),
                     _F(GROUP_MA=('O','A','O1',),
                        PHENOMENE='MECANIQUE',
                        MODELISATION='DIS_T',),),);

MA_poi=MODI_MAILLAGE(reuse =MA_poi,
                     MAILLAGE=MA_poi,
                     ORIE_PEAU_2D=_F(GROUP_MA='CONHAUT',),
# mot-cle disparu de la version NEW8.3.xx
#                    MODELE=MO,);
                     );

IMPR_RESU(MODELE=MO,
          FORMAT='GMSH',
          UNITE=21,
          RESU=_F(MAILLAGE=MA_poi,),);

Table=DEFI_MATERIAU(ELAS=_F(E=1e+14,
                            NU=0.3,
                            RHO=2500.0,
                            AMOR_ALPHA=0.001,
                            AMOR_BETA =0.0,),);

graphite=DEFI_MATERIAU(ELAS=_F(E=600000000000.0,
                               NU=0.2,
                               RHO=1450.0,
                               AMOR_ALPHA=0.0001,
                               AMOR_BETA =0.0,),);

# SPRING STIFFNESS DEFINITION

ressorts=DEFI_MATERIAU(DIS_CONTACT=_F(RIGI_NOR=30000000000.0,
                                      RIGI_TAN=10000000.0,
#                                     AMOR_NOR=10000.,
                                      AMOR_NOR=9000000.,
                                      AMOR_TAN=10000.,
                                      COULOMB=0.9,
                                      JEU=0.0,),);

ressmou=DEFI_MATERIAU(DIS_CONTACT=_F(RIGI_NOR=30000000.0,
                                     RIGI_TAN=100000000.0,
                                     AMOR_NOR=1.0,
                                     COULOMB=0.9,
                                     JEU=0.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MA_poi,
                    MODELE=MO,
                    AFFE=(_F(GROUP_MA=('O','A','O1',),
                             MATER=ressorts,),
                          _F(GROUP_MA='BLOCK',
                             MATER=graphite,),),);

CHMAMOU=AFFE_MATERIAU(MAILLAGE=MA_poi,
                      MODELE=MO,
                      AFFE=(_F(GROUP_MA=('O','A','O1',),
                               MATER=ressmou,),
                            _F(GROUP_MA='BLOCK',
                               MATER=graphite,),),);

# DEFINITION of the discrete element initial stiffness/damping
# DEFINITION of the discrete element local frame
# obstacle being in the -y direction
cara_dis=AFFE_CARA_ELEM(MODELE=MO,
                        DISCRET=(_F(GROUP_MA=('O','A','O1',),
                                    CARA='K_T_D_N',
                                    VALE=(30000000000.0,10000000.0,0.0,),),
                                 _F(GROUP_MA=('O','A','O1',),
                                    CARA='A_T_D_N',
                                    VALE=(0.1,0.1,0.0,),),),
                        ORIENTATION=_F(GROUP_MA=('O','A','O1',),
                                       CARA='VECT_X_Y',
                                       VALE=(0.0,-1.0,0.0,1.0,0.0,0.0,),),);
# BOUNDARY conditions

blocage=AFFE_CHAR_MECA(MODELE=MO,
                       DDL_IMPO=_F(GROUP_MA=('O','A','O1',),
                                   DZ=0.0,),
                                   );

ini_lach=AFFE_CHAR_MECA(MODELE=MO, DDL_IMPO=(
                                  _F(GROUP_NO='O',
                                     DX=0.0,),
                                  _F(GROUP_NO='C1',
                                     DX=-0.008,),),);
# SELF WEIGHT

ramp_pes=DEFI_FONCTION(NOM_PARA='INST',
                       VALE=(-1.95,0.0,-1.65,1.0,0.0,1.0,),
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

CHA_pes=AFFE_CHAR_MECA(MODELE=MO,
                       PESANTEUR=_F(GRAVITE=-9.81,
                                    DIRECTION=(0.0,1.0,0.0,),),);
# SELF WEIGHT CALCULATION

u_pesa=DYNA_NON_LINE(MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                     EXCIT=(_F(CHARGE=CHA_pes,
                               FONC_MULT=ramp_pes,),
                            _F(CHARGE=blocage,),),
                     COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                     INCREMENT=_F(LIST_INST=L_INST_p,
                                  INST_FIN=-0.825,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.30, MODI_EQUI='NON',),
                     NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                     SOLVEUR=_F(METHODE='LDLT',),
                     CONVERGENCE=_F(RESI_GLOB_MAXI=0.0002,
                                    RESI_GLOB_RELA=1e-06,
                                    ITER_GLOB_MAXI=n_iter_max,
                                    ARRET='OUI',),
                     INFO=1,);
#

#u_pesa=CALC_ELEM(reuse =u_pesa,
#
#
#
#                   RESULTAT=u_pesa,
#                   TOUT_ORDRE='OUI',
#                   TYPE_OPTION='TOUTES',
#                   OPTION='SIEF_ELNO',);

#IMPR_RESU(FORMAT='RESULTAT', RESU=(_F(RESULTAT=u_pesa)));

#IMPR_RESU(
#          FORMAT='RESULTAT',
#          RESU=(_F(RESULTAT=u_pesa,
#                  NOM_CHAM='DEPL',
#                  NOM_CMP=('DX','DY',),
#                  TOUT_ORDRE='OUI',
#                  INST=(-1.5,-1.0,),
#                  GROUP_NO=('O','A','O1',),
#                  FORM_TABL = 'EXCEL',),
#               _F(RESULTAT=u_pesa,
#                  NOM_CHAM='SIEF_ELGA',
#                  NOM_CMP=('N','VY',),
#                  TOUT_ORDRE='OUI',
#                  INST=(-1.5,-1.0,),
#                  GROUP_MA=('O','A','O1',),
#                  FORM_TABL = 'EXCEL',
#                  ),),);

#DY_O1_pe=RECU_FONCTION(RESULTAT=u_pesa,
#                       NOM_CHAM='DEPL',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='O1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#VY_O1_pe=RECU_FONCTION(RESULTAT=u_pesa,
#                       NOM_CHAM='VITE',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='O1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);


#IMPR_FONCTION(FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=DY_O1_pe,
#                         LEGENDE='O1 vertical displacement',
#                         STYLE=1,
#                         COULEUR=1,
#                         MARQUEUR=1,),
#                      _F(FONCTION=VY_O1_pe,
#                         LEGENDE='O1 vertical velocity',
#                         STYLE=1,
#                         COULEUR=2,),
#                      ),
#              UNITE=8,
#              SEPARATEUR=';',);


#IMPR_RESU(MODELE=MO,
#          UNITE=36,
#          FORMAT='GMSH',
#          RESU=_F(MAILLAGE=MA_poi,
#                  RESULTAT=u_pesa,
#                  NOM_CHAM='DEPL',
#                  TOUT_ORDRE='OUI',
#                  ),);

# initial non-vertical leaning CALCULATION

ramp_ila=DEFI_FONCTION(NOM_PARA='INST',
                       VALE=(-1.95,0.0,-1.2,0.0,-1.1,0.005,
                             -1.0,0.1,-0.8,0.3,-0.5,1.0,0.0,1.0,),
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

u_ini_la=DYNA_NON_LINE(MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
#u_ini_la=STAT_NON_LINE(MODELE=MO,
                       EXCIT=(_F(CHARGE=CHA_pes,
                                 FONC_MULT=ramp_pes,),
                              _F(CHARGE=blocage,),
                              _F(CHARGE=ini_lach,
                                 FONC_MULT=ramp_ila,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                     DEFORMATION='GROT_GDEP',
                                     ALGO_C_PLAN='ANALYTIQUE',
                                     GROUP_MA='BLOCK',),
                                  _F(RELATION='DIS_CHOC',
                                     GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_pesa,
                                    INST=-1.05, PRECISION=1.e-05,),
                       INCREMENT=_F(LIST_INST=L_INST_p,
                                    INST_FIN=T000,),
                     SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.6, MODI_EQUI='NON',),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(ARRET='NON',
                                      RESI_GLOB_MAXI=0.0001,
                                      RESI_GLOB_RELA=1e-05,
                                      ITER_GLOB_MAXI=30,),);

#u_ini_la=CALC_ELEM(reuse =u_ini_la,
#
#
#
#                   RESULTAT=u_ini_la,
#                   TOUT_ORDRE='OUI',
#                   TYPE_OPTION='TOUTES',
#                   OPTION='SIEF_ELNO',);

#IMPR_RESU(FORMAT='RESULTAT', RESU=(_F(RESULTAT=u_ini_la)));

#IMPR_RESU(
#          FORMAT='RESULTAT',
#          RESU=(_F(RESULTAT=u_ini_la,
#                  NOM_CHAM='DEPL',
#                  NOM_CMP=('DX','DY',),
#                  TOUT_ORDRE='OUI',
#                  INST=(-1.0,0.0,),
#                  GROUP_NO=('O','A','O1',),
#                  FORM_TABL = 'EXCEL',),
#               _F(RESULTAT=u_ini_la,
#                  NOM_CHAM='SIEF_ELGA',
#                  NOM_CMP=('N','VY',),
#                  TOUT_ORDRE='OUI',
#                  INST=(-1.0,0.0,),
#                  GROUP_MA=('O','A','O1',),
#                  FORM_TABL = 'EXCEL',
#                  ),),);

#DY_O1_il=RECU_FONCTION(RESULTAT=u_ini_la,
#                       NOM_CHAM='DEPL',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='O1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#VY_O1_il=RECU_FONCTION(RESULTAT=u_ini_la,
#                       NOM_CHAM='VITE',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DY',
#                       GROUP_NO='O1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#DX_C1_il=RECU_FONCTION(RESULTAT=u_ini_la,
#                       NOM_CHAM='DEPL',
#                       TOUT_ORDRE='OUI',
#                       NOM_CMP='DX',
#                       GROUP_NO='C1',
#                       NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#IMPR_FONCTION(FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=DX_C1_il,
#                         LIST_PARA=L_INST_p,
#                         LEGENDE='C1 horizontal displacement',
#                         STYLE=1,),
#                      _F(FONCTION=DY_O1_il,
#                         LIST_PARA=L_INST_p,
#                         LEGENDE='O1 vertical displacement',
#                         STYLE=1,),
#                      _F(FONCTION=VY_O1_il,
#                         LIST_PARA=L_INST_p,
#                         LEGENDE='O1 vertical velocity',
#                         STYLE=1,),),
#              UNITE=8,
#              SEPARATEUR=';',);

#T_en_ela=POST_ELEM(ENER_POT=_F(GROUP_MA='BLOCK',),
#                   MODELE=MO,
#                   CARA_ELEM=cara_dis,
#                   CHAM_MATER=CHMAT,
#                   RESULTAT=u_ini_la,);

#IMPR_TABLE(TABLE=T_en_ela,
#           FORMAT='TABLEAU',
#           UNITE=8,
#           NOM_PARA=('INST','TOTALE',),);

#
#T_en_cin=POST_ELEM(ENER_CIN=_F(OPTION='MASS_MECA',
#                               GROUP_MA='BLOCK',),
#                   MODELE=MO,
#                   CARA_ELEM=cara_dis,
#                   CHAM_MATER=CHMAT,
#                   RESULTAT=u_ini_la,
#                   TOUT_ORDRE='OUI',);

#IMPR_TABLE(TABLE=T_en_cin,
#           FORMAT='TABLEAU',
#           UNITE=8,
#           NOM_PARA=('INST','TOTALE',),);

#IMPR_RESU(MODELE=MO,
#          UNITE=37,
#          FORMAT='GMSH',
#          RESU=_F(MAILLAGE=MA_poi,
#                  RESULTAT=u_ini_la,
#                  NOM_CHAM='DEPL',
#                  TOUT_ORDRE='OUI',
#                  ),);

#DETRUIRE (CONCEPT = _F (NOM = T_en_ela,) ,INFO=1, );
#DETRUIRE (CONCEPT = _F (NOM = T_en_cin,) ,INFO=1, );

# FREE rocking from non-vertical position CALCULATION

# Initial state before release
Ini_depl = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='EXTR',
                      RESULTAT=u_ini_la, NOM_CHAM='DEPL',
                      INST=0.0,);
Ini_vite = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='EXTR',
                      RESULTAT=u_ini_la, NOM_CHAM='VITE',
                      INST=0.0,);
Ini_vit0 = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='ASSE',
                      MODELE=MO,
                      ASSE=_F(TOUT='OUI',
                              CHAM_GD=Ini_vite, COEF_R=0.0,),);

#

u_lacher=DYNA_NON_LINE(MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(DEPL = Ini_depl,
                                    VITE = Ini_vit0,),
#                       ETAT_INIT=_F(EVOL_NOLI=u_ini_la,
#                                    INST=0.0,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC0P,),
#                        ARCHIVAGE=_F(LIST_INST=L_INST_A,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.1, MODI_EQUI='NON',),
                       NEWTON=_F(MATRICE='TANGENTE',
                                 REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC0P, PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC1M,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.0, ),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC1M,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC1P,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA=a_HHT_c0,MODI_EQUI='NON',),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);


u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC1P,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC2M,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.0, ),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC2M,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC2P,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = a_HHT_c0, MODI_EQUI='NON',),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC2P,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC3M,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.0,),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC3M,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC3P,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA=a_HHT_c0, MODI_EQUI='OUI',),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC3P,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC4M,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.0,),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC4M,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC4P,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA=a_HHT_c0, MODI_EQUI='OUI',),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC4P,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TC5M,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.0, ),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC5M,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST_c,
                                    INST_FIN=TC5P,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA=a_HHT_c0, MODI_EQUI='OUI',),
#                      HHT=_F(ALPHA=-0.3, MODI_EQUI='NON',),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='OUI',),);

u_lacher=DYNA_NON_LINE(reuse =u_lacher,
                       MODELE=MO,CHAM_MATER=CHMAT,CARA_ELEM=cara_dis,
                       EXCIT=(_F(CHARGE=CHA_pes,),
                              _F(CHARGE=blocage,),),
                       COMP_INCR=(_F(RELATION='ELAS',
                                   DEFORMATION='GROT_GDEP',
                                   ALGO_C_PLAN='ANALYTIQUE',
                                   GROUP_MA='BLOCK',),
                                _F(RELATION='DIS_CHOC',
                                   GROUP_MA=('O','A','O1',),),),
                       ETAT_INIT=_F(EVOL_NOLI=u_lacher,
                                    INST=TC5P,
                                    PRECISION=1e-07,),
                       INCREMENT=_F(LIST_INST=L_INST,
                                    INST_FIN=TFIN,),
                       SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.0, ),
                       NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                       SOLVEUR=_F(METHODE='LDLT',),
                       CONVERGENCE=_F(RESI_GLOB_MAXI=pre_glo,
                                      RESI_GLOB_RELA=pre_rel,
                                      ITER_GLOB_MAXI=n_iter_max,
                                      ARRET='NON',),);

u_lacher=CALC_ELEM(reuse =u_lacher,


                   RESULTAT=u_lacher, TOUT_ORDRE='OUI',
                   TYPE_OPTION='TOUTES',
                   OPTION='SIEF_ELNO',);

u_lacher=CALC_NO(reuse =u_lacher,


                 RESULTAT=u_lacher,
                 TOUT_ORDRE='OUI',
                 OPTION='FORC_NODA',);

#T_tr_ext=POST_ELEM(TRAV_EXT=_F(),
#                   RESULTAT=u_lacher,
#                   TOUT_ORDRE='OUI',);

#T_en_ela=POST_ELEM(ENER_ELAS=_F(GROUP_MA='BLOCK',),
#                   MODELE=MO,
#                  CHAM_MATER=CHMAT, CARA_ELEM=cara_dis,
#                  RESULTAT=u_lacher,);


B_en_kin=POST_ELEM(ENER_CIN=_F(GROUP_MA='BLOCK',),
                   MODELE=MO, CHAM_MATER=CHMAT,
                   CARA_ELEM=cara_dis, RESULTAT=u_lacher,);

#T_ma_ine=POST_ELEM(MASS_INER=_F(GROUP_MA='BLOCK',
#                                ORIG_INER=(0.0,0.0,0.0,),),
#                   MODELE=MO,
#                   CARA_ELEM=cara_dis, CHAM_MATER=CHMAT,);

# Displacements
#DY_O1_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O1',
#                       NOM_CHAM='DEPL', NOM_CMP='DY',
#                       TOUT_ORDRE='OUI', NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

#DX_O1_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O1',
#                       NOM_CHAM='DEPL', NOM_CMP='DX',
#                       TOUT_ORDRE='OUI', NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);
#
#DX_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
#                       NOM_CHAM='DEPL', NOM_CMP='DX',
#                       TOUT_ORDRE='OUI', NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

DY_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
                       NOM_CHAM='DEPL', NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

#DX_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
#                       NOM_CHAM='DEPL', NOM_CMP='DX',
#                       TOUT_ORDRE='OUI', NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

DY_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
                       NOM_CHAM='DEPL', NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

# Velocities
#VX_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
#                       NOM_CHAM='VITE', NOM_CMP='DX',
#                       TOUT_ORDRE='OUI', NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

VY_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='A',
                       NOM_CHAM='VITE',NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

#VX_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
#                       NOM_CHAM='VITE', NOM_CMP='DX',
#                       TOUT_ORDRE='OUI', NOM_PARA='INST',
#                       PROL_DROITE='CONSTANT',
#                       PROL_GAUCHE='CONSTANT',);

VY_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_NO='O',
                       NOM_CHAM='VITE', NOM_CMP='DY',
                       TOUT_ORDRE='OUI', NOM_PARA='INST',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',);

# Corners reactions

RN_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_MA='O',
                      POINT=1,
                      NOM_CHAM='SIEF_ELGA', NOM_CMP='N',
                      TOUT_ORDRE='OUI', NOM_PARA='INST',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',);

RX_O_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_MA='O',
                      POINT=1,
                      NOM_CHAM='SIEF_ELGA', NOM_CMP='VY',
                      TOUT_ORDRE='OUI', NOM_PARA='INST',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',);

RN_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_MA='A',
                      POINT=1,
                      NOM_CHAM='SIEF_ELGA', NOM_CMP='N',
                      TOUT_ORDRE='OUI', NOM_PARA='INST',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',);

RX_A_la=RECU_FONCTION(RESULTAT=u_lacher, GROUP_MA='A',
                      POINT=1,
                      NOM_CHAM='SIEF_ELGA', NOM_CMP='VY',
                      TOUT_ORDRE='OUI', NOM_PARA='INST',
                      PROL_DROITE='CONSTANT',
                      PROL_GAUCHE='CONSTANT',);


# Displacements
#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=DX_O_la,
#                         LEGENDE='deplacement horizontal de O',
#                     ),),
#              );

#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=DY_O_la,
#                         LEGENDE='deplacement vertical de  O', ),),
#              );

#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=DX_A_la,
#                         LEGENDE='deplacement horizontal de A',
#                     ),),
#              );

#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=DY_A_la,
#                         LEGENDE='deplacement vertical de A', ),),
#              );

#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=DX_O1_la,
#                         LEGENDE='deplacement horizontal de O1',
#                     ),),
#              );

#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=DY_O1_la,
#                         LEGENDE='deplacement vertical de O1',
#                     ),),
#              );
# Velocities
#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=VX_O_la,
#                         LEGENDE='vitesse horizontale de O',
#                     ),),
#              );
#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=VY_O_la,
#                         LEGENDE='vitesse verticale de O', ),),
#              );
#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=VX_A_la,
#                         LEGENDE='vitesse horizontale de A', ),),
#              );
#IMPR_FONCTION(UNITE = 8,
#              FORMAT='TABLEAU',
#              COURBE=(_F(FONCTION=VY_A_la,
#                         LEGENDE='vitesse verticale de A', ),),
#              );

#IMPR_TABLE(TABLE=T_tr_ext,
#           NOM_PARA=('INST','TRAV_ELAS','TRAV_REEL',),
#          );

#IMPR_TABLE(TABLE=T_en_ela,
#           NOM_PARA=('INST','TOTALE',),
#           );

IMPR_TABLE(TABLE=B_en_kin, FORMAT='TABLEAU', UNITE=8,
           NOM_PARA=('INST','TOTALE',),
           );
################################################


# # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Printing and checking some extrema and other values
# # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Remark : first values : comparison with rigid body model
#          second values : comparison with estimated
#                           restitution coefficient
#
DY_O_max = INFO_FONCTION(MAX = _F(FONCTION=DY_O_la,),);

TEST_TABLE(TABLE=DY_O_max, NOM_PARA='DY', TYPE_TEST = 'MIN',
           VALE= 0.0000, PRECISION = 0.005, CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=DY_O_max, NOM_PARA='DY', TYPE_TEST = 'MAX',
           VALE= 0.002011, PRECISION = 0.25, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=DY_O_max, NOM_PARA='DY', TYPE_TEST = 'MAX',
           VALE= 0.002247, PRECISION = 0.35, REFERENCE='ANALYTIQUE',);

DY_A_max = INFO_FONCTION(MAX = _F(FONCTION=DY_A_la,),);

TEST_TABLE(TABLE=DY_A_max, NOM_PARA='DY', TYPE_TEST = 'MIN',
           VALE= 0.0000, PRECISION = 0.001, CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=DY_A_max, NOM_PARA='DY', TYPE_TEST = 'MAX',
           VALE= 0.00360, PRECISION = 0.01, REFERENCE='ANALYTIQUE',);

# # #

VY_O_min = INFO_FONCTION(MAX = _F(FONCTION=VY_O_la,),);

TEST_TABLE(TABLE=VY_O_min, NOM_PARA='DY', TYPE_TEST = 'MIN',
           VALE=-0.09983, PRECISION = 0.150, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=VY_O_min, NOM_PARA='DY', TYPE_TEST = 'MIN',
           VALE=-0.10552, PRECISION = 0.200, REFERENCE='ANALYTIQUE',);

VY_O_tab = CREA_TABLE(FONCTION=_F(FONCTION=VY_O_la),);
VY_O_mi2 = RECU_FONCTION(TABLE=VY_O_tab, PARA_X='INST', PARA_Y='DY',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.17,),),);
VY_O_ti2 = CREA_TABLE(FONCTION=_F(FONCTION=VY_O_mi2),);
#TEST_TABLE(TABLE=VY_O_ti2, NOM_PARA='DY', TYPE_TEST = 'MIN',
#           VALE=-0.074614, PRECISION = 0.32, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=VY_O_ti2, NOM_PARA='DY', TYPE_TEST = 'MIN',
#           VALE=-0.08336, PRECISION = 0.40, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=VY_O_ti2, NOM_PARA='DY', TYPE_TEST = 'MIN',
#           VALE=-0.0646, PRECISION = 0.01, REFERENCE='NON_REGRESSION',
#           VERSION = '8.02',);

VY_A_min = INFO_FONCTION(MAX = _F(FONCTION=VY_A_la,),);

TEST_TABLE(TABLE=VY_A_min, NOM_PARA='DY', TYPE_TEST = 'MIN',
           VALE=-0.13357, PRECISION = 0.01, REFERENCE='ANALYTIQUE',);

# # # # # # # # # # # # # # # #
# Vertical reactions

RN_O_lat = CREA_TABLE(FONCTION=_F(FONCTION=RN_O_la),);
RN_O_ma0 = RECU_FONCTION(TABLE=RN_O_lat, PARA_X='INST', PARA_Y='N',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='LT',
                                   VALE=0.05,),
                                 _F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.01,),),);
RN_O_mat = CREA_TABLE(FONCTION=_F(FONCTION=RN_O_ma0),);
TEST_TABLE(TABLE=RN_O_mat, NOM_PARA='N', TYPE_TEST = 'MAX',
           VALE= 3580., PRECISION = 0.01, REFERENCE='ANALYTIQUE',);

RN_A_lat = CREA_TABLE(FONCTION=_F(FONCTION=RN_A_la),);
RN_A_ma0 = RECU_FONCTION(TABLE=RN_A_lat, PARA_X='INST', PARA_Y='N',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='LT',
                                   VALE=0.12,),
                                 _F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.06,),),
                         );
RN_A_mat = CREA_TABLE(FONCTION=_F(FONCTION=RN_A_ma0),);
TEST_TABLE(TABLE=RN_A_mat, NOM_PARA='N', TYPE_TEST = 'MAX',
           VALE= 3580., PRECISION = 0.01, REFERENCE='ANALYTIQUE',);

# Horizontal reactions

RX_O_lat = CREA_TABLE(FONCTION=_F(FONCTION=RX_O_la),);
RX_O_ma0 = RECU_FONCTION(TABLE=RX_O_lat, PARA_X='INST', PARA_Y='VY',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='LT',
                                   VALE=0.05,),
                                 _F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.01,),),);

RX_O_mat = CREA_TABLE(FONCTION=_F(FONCTION=RX_O_ma0),);
TEST_TABLE(TABLE=RX_O_mat, NOM_PARA='VY', TYPE_TEST = 'MIN',
           VALE=-1150., PRECISION = 0.010, REFERENCE='ANALYTIQUE',);


RX_A_lat = CREA_TABLE(FONCTION=_F(FONCTION=RX_A_la),);
RX_A_ma0 = RECU_FONCTION(TABLE=RX_A_lat, PARA_X='INST', PARA_Y='VY',
                         FILTRE=(_F(NOM_PARA='INST', CRIT_COMP='LT',
                                   VALE=0.12,),
                                 _F(NOM_PARA='INST', CRIT_COMP='GT',
                                   VALE=0.07,),),
                         );
RX_A_mat = CREA_TABLE(FONCTION=_F(FONCTION=RX_A_ma0),);
TEST_TABLE(TABLE=RX_A_mat, NOM_PARA='VY', TYPE_TEST = 'MAX',
           VALE= 1150., PRECISION = 0.11, REFERENCE='ANALYTIQUE',);


# # # # # # # # # # # # # # # # # # # # # #
# Kinetic energies and collisions instants
# # # # # # # # # # # # # # # # # # # # # #
#

TEST_TABLE(TABLE=B_en_kin, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=7.37398, PRECISION = 0.015, REFERENCE='ANALYTIQUE',);

B_en_km1 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),);
B_en_kt1 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_km1),);

TEST_TABLE(TABLE=B_en_kt1, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.05440978, PRECISION = 0.01, REFERENCE='ANALYTIQUE',);
#

B_en_k_2 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='INST',
                                   CRIT_COMP='GT',
                                   VALE=0.1,),);
B_en_t_2 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_k_2),);

TEST_TABLE(TABLE=B_en_t_2, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=4.1192, PRECISION = 0.3, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_t_2, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
           VALE=4.6021, PRECISION = 0.35, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=B_en_t_2, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=4.74, PRECISION = 0.005, REFERENCE='NON_REGRESSION',
#           VERSION = '8.02',);

B_en_f_2 = RECU_FONCTION(TABLE=B_en_t_2, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),);
B_en_kt2 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_f_2),);

TEST_TABLE(TABLE=B_en_kt2, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.13574, PRECISION = 0.08, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_kt2, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.13820, PRECISION = 0.1, REFERENCE='ANALYTIQUE',);

#

B_en_k_3 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='INST',
                                   CRIT_COMP='GT',
                                   VALE=0.15,),);
B_en_t_3 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_k_3),);
#TEST_TABLE(TABLE=B_en_t_3, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=2.3010, PRECISION = 0.06, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=B_en_t_3, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=2.8722, PRECISION = 0.26, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=B_en_t_3, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=2.81, PRECISION = 0.02, REFERENCE='NON_REGRESSION',
#           VERSION = '8.02',);

B_en_f_3 = RECU_FONCTION(TABLE=B_en_t_3, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),);
B_en_kt3 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_f_3),);
TEST_TABLE(TABLE=B_en_kt3, NOM_PARA='INST',
           VALE=0.19653, PRECISION = 0.02, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_kt3, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.20272, PRECISION = 0.05, REFERENCE='ANALYTIQUE',);

#
B_en_k_4 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='INST',
                                   CRIT_COMP='GT',
                                   VALE=0.22,),
                         );
B_en_t_4 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_k_4),);
#TEST_TABLE(TABLE=B_en_t_4, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=1.2854, PRECISION = 0.18, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=B_en_t_4, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=1.7925, PRECISION = 0.40, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=B_en_t_4, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=1.73, PRECISION = 0.02, REFERENCE='NON_REGRESSION',
#          VERSION = '8.02',);

B_en_f_4 = RECU_FONCTION(TABLE=B_en_t_4, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),
                         );
B_en_kt4 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_f_4),);
#TEST_TABLE(TABLE=B_en_kt4, NOM_PARA='INST',
#           VALE=0.24196, PRECISION = 0.05, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=B_en_kt4, NOM_PARA='INST', TYPE_TEST = 'MIN',
#           VALE=0.25240, PRECISION = 0.10, REFERENCE='ANALYTIQUE',);

#

B_en_k_5 = RECU_FONCTION(TABLE=B_en_kin, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='INST',
                                   CRIT_COMP='GT',
                                   VALE=0.26,),
                         );
B_en_t_5 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_k_5),);
#TEST_TABLE(TABLE=B_en_t_5, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=0.7180, PRECISION = 0.22, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=B_en_t_5, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=1.1187, PRECISION = 0.50, REFERENCE='ANALYTIQUE',);
#TEST_TABLE(TABLE=B_en_t_5, NOM_PARA='TOTALE', TYPE_TEST = 'MAX',
#           VALE=1.104, PRECISION = 0.02, REFERENCE='NON_REGRESSION',
#           VERSION = '8.02',);

B_en_f_5 = RECU_FONCTION(TABLE=B_en_t_5, PARA_X='INST', PARA_Y='TOTALE',
                         FILTRE=_F(NOM_PARA='TOTALE',
                                   CRIT_COMP='MAXI',),
                         );
B_en_kt5 = CREA_TABLE(FONCTION=_F(FONCTION=B_en_f_5),);
TEST_TABLE(TABLE=B_en_kt5, NOM_PARA='INST',
           VALE=0.27592, PRECISION = 0.04, REFERENCE='ANALYTIQUE',);
TEST_TABLE(TABLE=B_en_kt5, NOM_PARA='INST', TYPE_TEST = 'MIN',
           VALE=0.29065, PRECISION = 0.09, REFERENCE='ANALYTIQUE',);

#

################################################

IMPR_RESU(FORMAT='GMSH', UNITE= 37,
          MODELE=MO,
          RESU=_F(
                  MAILLAGE=MA_poi,
                  RESULTAT=u_lacher,
                  NOM_CHAM='DEPL',
                  TOUT_ORDRE='OUI',
#                 TOUT_CMP='OUI',
                  ),);

FIN();


######################################################
