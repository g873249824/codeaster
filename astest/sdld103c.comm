# TITRE SYSTEME MASSES-RESSORTS LINEAIRE MULTI-SUPPORTE (TRANSLATION)
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# ----------------------------------------------------------------------
# SYSTEME 3 MASSES, 4 RESSORTS ENCASTRES-ENCASTRES SOUMIS A DES
# ACCE_IMPO DIFFERENTES (STRUCTURE MULTI-SUPPORTEE) 
# AVEC UTILISATION DE MACR_SPECTRE
#    ACCE_IMPO = ACCELER1 (A.T*T) EN Z=0 (NO1) ET
#    ACCE_IMPO = ACCELER2 (0) EN Z=4 (NO5)
# ----------------------------------------------------------------------
# REF: PAS DE REF BIBLIO MAIS CALCUL ANALYTIQUE
# ----------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),
          BASE=_F( FICHIER = 'GLOBALE',  LONG_REPE = 20000))

MAILLAGE=LIRE_MAILLAGE( )

MAILLAGE=DEFI_GROUP(reuse=MAILLAGE,
                    MAILLAGE=MAILLAGE,
                    CREA_GROUP_NO=_F( NOM='GROUP_NO_GN5',
                                      NOEUD=('NO5',),),);

MODELE=AFFE_MODELE(MAILLAGE=MAILLAGE,
                   AFFE=(_F(PHENOMENE = 'MECANIQUE',
                            MODELISATION = 'DIS_T',
                            GROUP_MA = 'GROUP_MA_RESSORT'),
                         _F(PHENOMENE = 'MECANIQUE',
                            MODELISATION = 'DIS_T',
                            GROUP_NO = 'GROUP_NO_MASSES')));

#
CARA_ELE=AFFE_CARA_ELEM(  MODELE=MODELE,DISCRET=(
                _F(  CARA = 'K_T_D_L',  REPERE = 'GLOBAL',
                     GROUP_MA = 'GROUP_MA_RESSORT',
                     VALE = (10000., 0., 10000., )),
                _F(  CARA = 'M_T_L',  REPERE = 'GLOBAL',
                     GROUP_MA = 'GROUP_MA_RESSORT',
                     VALE = (0., 0., 0., 0., 0., 0., 0., 0., 0.,
                             0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., )),
                _F(  CARA = 'M_T_D_N',  GROUP_NO = 'GROUP_NO_MASSES',  VALE = 10.)));

#
CON_LIM=AFFE_CHAR_MECA(  MODELE=MODELE,DDL_IMPO=(
# ------------ LES DEPL_IMPO SONT DEFINIS DANS LE REPERE GLOBAL
               _F(  GROUP_NO = 'GROUP_NO_ENCASTRE',  DX = 0.,  DY = 0.,  DZ = 0.),
               _F(  GROUP_NO = 'GROUP_NO_MASSES',    DY = 0.,  DZ = 0.)));

#
ASSEMBLAGE(MODELE=MODELE,   
           CHARGE=CON_LIM,   
           CARA_ELEM=CARA_ELE,
           NUME_DDL=CO("NUMEDDL"),
           MATR_ASSE=(_F(MATRICE = CO("RIGIDITE"),
                         OPTION = 'RIGI_MECA'),
                      _F(MATRICE = CO("MASSE"),     
                         OPTION = 'MASS_MECA')))

#
# CALCUL DES MODES AVEC BLOCAGE DES ANCRAGES:
#---------------------------------------------
MODE_MEC=CALC_MODES(MATR_RIGI=RIGIDITE,
                    OPTION='AJUSTE',
                    CALC_FREQ=_F(FREQ=(3.8,7.,9.3,),
                                 ),
                    MATR_MASS=MASSE,
                    )

MODE_MEC=NORM_MODE(reuse=MODE_MEC,  
                   MODE=MODE_MEC,   
                   NORME='MASS_GENE' )

#
# CALCUL DES MODES STATIQUES AUX POINTS D ANCRAGE:
#-------------------------------------------------
MODE_STA=MODE_STATIQUE(MATR_RIGI=RIGIDITE,   MATR_MASS=MASSE,
                       MODE_STAT=(_F(  NOEUD = 'NO1', AVEC_CMP = 'DX'),
                                  _F(  NOEUD = 'NO5', AVEC_CMP = 'DX') ))

#
# DESCRIPTION DES PAS DES FONCTIONS:
#-----------------------------------
L_INST=DEFI_LIST_REEL(DEBUT=0.,
                      INTERVALLE=_F(JUSQU_A = 1., PAS = 0.0001) )
L_FREQ=DEFI_LIST_REEL(VALE=(0.10,0.20,0.30,0.41,0.52))

#
# DESCRIPTION DES ACCELEROGRAMMES:
#---------------------------------
ACCE1 = FORMULE(NOM_PARA='INST',VALE='2.E+05*INST**2')
ACCELER1=CALC_FONC_INTERP(FONCTION=ACCE1, 
                          LIST_PARA=L_INST,
                          NOM_PARA = 'INST',
                          PROL_DROITE='LINEAIRE',
                          PROL_GAUCHE='LINEAIRE',
                          NOM_RESU='ACCE')

ACCE2 = FORMULE(NOM_PARA='INST',VALE='0.*INST ')
ACCELER2=CALC_FONC_INTERP(FONCTION=ACCE2,
                          LIST_PARA=L_INST,
                          NOM_PARA = 'INST',
                          PROL_DROITE='LINEAIRE',
                          PROL_GAUCHE='LINEAIRE',
                          NOM_RESU='ACCE')

#
# INTEGRATION DES ACCELEROGRAMMES:
#---------------------------------
VITE1 = FORMULE(NOM_PARA='INST',VALE='(2.E+05*INST**3)/3.')
VITESSE1=CALC_FONC_INTERP(FONCTION=VITE1, 
                          LIST_PARA=L_INST,
                          NOM_PARA='INST',
                          PROL_DROITE='LINEAIRE',
                          PROL_GAUCHE='LINEAIRE',
                          NOM_RESU='VITE')

DEPL1 = FORMULE(NOM_PARA='INST',VALE='(2.E+05*INST**4)/12.')
DEPLACE1=CALC_FONC_INTERP(FONCTION=DEPL1, 
                          LIST_PARA=L_INST,
                          NOM_PARA='INST',
                          PROL_DROITE='LINEAIRE',
                          PROL_GAUCHE='LINEAIRE',
                          NOM_RESU='DEPL')

VITE2 = FORMULE(NOM_PARA='INST',VALE='0.*INST')
VITESSE2=CALC_FONC_INTERP(FONCTION=VITE2, LIST_PARA=L_INST,
                          NOM_PARA='INST',
                          PROL_DROITE='LINEAIRE',
                          PROL_GAUCHE='LINEAIRE',
                          NOM_RESU='VITE')

DEPL2 = FORMULE(NOM_PARA='INST',VALE='0.*INST')
DEPLACE2=CALC_FONC_INTERP(FONCTION=DEPL2, LIST_PARA=L_INST,
                          NOM_PARA='INST',
                          PROL_DROITE='LINEAIRE',
                          PROL_GAUCHE='LINEAIRE',
                          NOM_RESU='DEPL')

#
# DEFINITIONS DES SUPPPORTS
# ---------------------------------------------------------
# EN MONO APPUI
MULT_X=CALC_CHAR_SEISME(MATR_MASS=MASSE,MONO_APPUI = 'OUI',
                         DIRECTION=( 1., 0., 0.,), )
# EN MULTI APPUI
MULT_X1=CALC_CHAR_SEISME(MATR_MASS=MASSE,   
                         DIRECTION=( 1., 0., 0.,),
                         MODE_STAT=MODE_STA,   
                         NOEUD='NO1', )
MULT_X2=CALC_CHAR_SEISME(MATR_MASS=MASSE,   
                         DIRECTION=( 1., 0., 0.,),
                         MODE_STAT=MODE_STA,
                         NOEUD='NO5' )

#
# PROJECTION DES MATRICES M ET K SUR LA BASE MODALE
# EN MONO_APPUI
#---------------------------------------------------
PROJ_BASE(BASE=MODE_MEC,
          STOCKAGE='DIAG',
          MATR_ASSE_GENE=(_F( MATRICE = CO("MASSMONO"), MATR_ASSE = MASSE),
                          _F( MATRICE = CO("RIGIMONO"), MATR_ASSE = RIGIDITE)),
          VECT_ASSE_GENE=(_F( VECTEUR = CO("VECT_X"), VECT_ASSE = MULT_X),))

# EN MULTI-APPUI
#---------------------------------------------------
PROJ_BASE(BASE=MODE_MEC,
          STOCKAGE='DIAG',
          MATR_ASSE_GENE=(_F( MATRICE = CO("MASSMULT"), MATR_ASSE = MASSE),
                          _F( MATRICE = CO("RIGIMULT"), MATR_ASSE = RIGIDITE)),
          VECT_ASSE_GENE=(_F( VECTEUR = CO("VECT_X1"), VECT_ASSE = MULT_X1),
                          _F( VECTEUR = CO("VECT_X2"), VECT_ASSE = MULT_X2)))

#
# ON ETUDIE LA STRUCTURE EN FAUX MULTI-APPUI:
#    ACCE_IMPO = ACCELER1 (A.T*T) EN Z=0 (NO1) ET
#    EN Z=4 (NO5)
#----------------------------------------------------------
#
# CALCUL TRANSITOIRE PAR SUPERPOSITION MODALE EN MONO-APPUI
# -------------------------------------------
TRANMONO=DYNA_VIBRA(TYPE_CALCUL='TRAN',
                    BASE_CALCUL='GENE',
                    MATR_MASS=MASSMONO,   
                    MATR_RIGI=RIGIMONO,
                    SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                    EXCIT=(_F(VECT_ASSE_GENE=VECT_X,  
                              FONC_MULT = ACCELER1,),),
                    INCREMENT=_F(  LIST_INST=L_INST,),)

#
# SANS LA MACRO MACR_SPECTRE
# ----------------------------------------------
RESPHYA=REST_GENE_PHYS(RESU_GENE=TRANMONO,
                       LIST_INST=L_INST,
                       NOM_CHAM='ACCE_ABSOLU',
                       ACCE_MONO_APPUI=ACCELER1,
                       DIRECTION=( 1., 0., 0., ))
#
L_INST1=DEFI_LIST_REEL(DEBUT=0.,
                      INTERVALLE=_F(JUSQU_A = 1., PAS = 0.1) )
#
PGP_MOA= POST_GENE_PHYS(RESU_GENE=TRANMONO,
                        MODE_MECA=MODE_MEC,
                          OBSERVATION=(
                                      _F(LIST_INST=L_INST1,
                                         NOM_CHAM = 'ACCE_ABSOLU',
                                         ACCE_MONO_APPUI=ACCELER1,
                                         DIRECTION=( 1., 0., 0., ),
                                         NOM_CMP = 'DX',
                                         NOEUD = ('NO2'),),
                                      _F(LIST_INST=L_INST1,
                                         NOM_CHAM = 'ACCE',
                                         NOM_CMP = 'DX',
                                         NOEUD = ('NO2'),),
                        ),)
#IMPR_TABLE(TABLE=PGP_MOA)

TEST_TABLE(
           VALE_CALC=199743.313821,
           TABLE=PGP_MOA,
           NOM_PARA='VALE_R',
           FILTRE=(_F(NOM_PARA='INST', VALE=1.,),
                   _F(NOM_PARA='NOM_CHAM', VALE_K='ACCE_ABSOLU',),
                   _F(NOM_PARA='NOEUD', VALE_K='NO2',),
                   _F(NOM_PARA='NOM_CMP', VALE_K='DX',),
                  ),
           )

TEST_TABLE(
           VALE_CALC=-256.686178727,
           TABLE=PGP_MOA,
           NOM_PARA='VALE_R',
           FILTRE=(_F(NOM_PARA='INST', VALE=1.,),
                   _F(NOM_PARA='NOM_CHAM', VALE_K='ACCE',),
                   _F(NOM_PARA='NOEUD', VALE_K='NO2',),
                   _F(NOM_PARA='NOM_CMP', VALE_K='DX',),
                  ),
           )


# 1. RECUPERATION DES ACCELERATIONS ABSOLUES CALCULEES
# ----------------------------------------------
AN2MONO=RECU_FONCTION(NOEUD='NO2',  
                       NOM_CMP='DX',   
                       NOM_CHAM='ACCE_ABSOLU',
                       RESULTAT=RESPHYA,
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',
                       TOUT_ORDRE='OUI',
                       INTERPOL='LIN')

AN3MONO=RECU_FONCTION(NOEUD='NO3',
                       NOM_CMP='DX',
                       NOM_CHAM='ACCE_ABSOLU',
                       RESULTAT=RESPHYA,
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT', 
                       TOUT_ORDRE='OUI',
                       INTERPOL='LIN')

AN4MONO=RECU_FONCTION(NOEUD='NO4',
                       NOM_CMP='DX',
                       NOM_CHAM='ACCE_ABSOLU',
                       RESULTAT=RESPHYA,
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',
                       TOUT_ORDRE='OUI',
                       INTERPOL='LIN')
#
# 2. CALCUL DES SRO RELATIFS AUX ACCELERATIONS ABSOLUES AUX NOEUDS 
# -----------------------------------------------------------

AN2SRMO=CALC_FONCTION(SPEC_OSCI=_F(FONCTION=AN2MONO,
                                AMOR_REDUIT=0.05,
                                LIST_FREQ=L_FREQ,
                                NORME=9.81,),);
AN3SRMO=CALC_FONCTION(SPEC_OSCI=_F(FONCTION=AN3MONO,
                                AMOR_REDUIT=0.05,
                                LIST_FREQ=L_FREQ,
                                NORME=9.81,),);
AN4SRMO=CALC_FONCTION(SPEC_OSCI=_F(FONCTION=AN4MONO,
                                AMOR_REDUIT=0.05,
                                LIST_FREQ=L_FREQ,
                                NORME=9.81,),);
#
# 3. CALCUL DE L'ENVELOPPE DES SRO 
# -----------------------------------------------------------
ENVEMO=CALC_FONCTION(ENVELOPPE=_F(FONCTION=(AN2SRMO,AN3SRMO,AN4SRMO,),
                                CRITERE='SUP',),);
#
# 4. IMPRESSION 
# -----------------------------------------------------------
IMPR_FONCTION(FORMAT='TABLEAU',
              COURBE=(_F(FONCTION=ENVEMO,),),
              UNITE=8,);

#
# ON ETUDIE LA STRUCTURE EN FAUX MULTI-APPUI:
#    ACCE_IMPO = ACCELER1 (A.T*T) EN Z=0 (NO1) ET
#    EN Z=4 (NO5)
#----------------------------------------------------------
#
# CALCUL TRANSITOIRE PAR SUPERPOSITION MODALE EN MONO-APPUI
# -------------------------------------------
TRANMOMU=DYNA_VIBRA(TYPE_CALCUL='TRAN',
                    BASE_CALCUL='GENE',
                    MATR_MASS=MASSMULT,   
                    MATR_RIGI=RIGIMULT,
                    SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                    MODE_STAT=MODE_STA,
                    EXCIT=(_F(VECT_ASSE_GENE=VECT_X1,  
                              ACCE = ACCELER1,
                              VITE=VITESSE1,
                              DEPL = DEPLACE1,
                              MULT_APPUI = 'OUI',
                              DIRECTION = ( 1., 0., 0.,), 
                              NOEUD = 'NO1',),
                           _F(VECT_ASSE_GENE=VECT_X2,  
                              ACCE = ACCELER1,
                              VITE=VITESSE1,
                              DEPL = DEPLACE1,
                              MULT_APPUI = 'OUI',
                              DIRECTION = ( 1., 0., 0.,), 
                              NOEUD = 'NO5',),),
                    INCREMENT=_F(  LIST_INST=L_INST,),)

# AVEC LA MACRO MACR_SPECTRE
# ----------------------------------------------
# 1. RECUPERATION DES ACCELERATIONS ABSOLUES CALCULEES
# ----------------------------------------------
TBMACMO=MACR_SPECTRE(MAILLAGE=MAILLAGE,
                      RESU=_F(RESU_GENE=TRANMOMU,),
                      PLANCHER=(_F(NOEUD=('NO2','NO3','NO4'),NOM='P_MONO'),),
                      LIST_FREQ=L_FREQ,
                      NOM_CHAM='ACCE',
                      CALCUL='ABSOLU',
                      NORME = 9.81,
                      AMOR_SPEC=(0.05),
                      MULT_APPUI='OUI',)
#
# 2. IMPRESSION 
# -----------------------------------------------------------
IMPR_TABLE(TABLE=TBMACMO)


TEST_FONCTION(VALEUR=(_F(VALE_REFE=642.3320216389,
                         VALE_CALC=642.3320216389,
                         VALE_PARA=(0.1,0.05),
                         PRECISION=1E-4,
                         REFERENCE='AUTRE_ASTER',
                         NOM_PARA=('FREQ','AMOR'),
                         FONCTION=ENVEMO,),
                      _F(VALE_REFE=5103.162478220,
                         VALE_CALC=5103.162478220,
                         VALE_PARA=(0.3,0.05),
                         PRECISION=1E-4,
                         REFERENCE='AUTRE_ASTER',
                         NOM_PARA=('FREQ','AMOR'),
                         FONCTION=ENVEMO,),
                      _F(VALE_REFE=11996.56524432,
                         VALE_CALC=11996.56524432,
                         VALE_PARA=(0.52,0.05),
                         PRECISION=1E-4,
                         REFERENCE='AUTRE_ASTER',
                         NOM_PARA=('FREQ','AMOR'),
                         FONCTION=ENVEMO,),))

TEST_TABLE(REFERENCE='AUTRE_ASTER',
               VALE_REFE=642.3320216389,
               VALE_CALC=642.33202163891,
               PRECISION=1E-4,
               NOM_PARA='eH_0_P_MONO',
               TABLE=TBMACMO,
               FILTRE=_F(NOM_PARA='FREQ',
                         VALE=0.1,),)
TEST_TABLE(REFERENCE='AUTRE_ASTER',
               VALE_REFE=5103.162478220,
               VALE_CALC=5103.1624782199,
               PRECISION=1E-4,
               NOM_PARA='eH_0_P_MONO',
               TABLE=TBMACMO,
               FILTRE=_F(NOM_PARA='FREQ',
                         VALE=0.3,),)
TEST_TABLE(REFERENCE='AUTRE_ASTER',
               VALE_REFE=11996.56524432,
               VALE_CALC=11996.565244318,
               PRECISION=1E-4,
               NOM_PARA='eH_0_P_MONO',
               TABLE=TBMACMO,
               FILTRE=_F(NOM_PARA='FREQ',
                         VALE=0.52,),)

#
# ON ETUDIE LA STRUCTURE EN VRAI MULTI-APPUI:
#    ACCE_IMPO = ACCELER1 (A.T*T) EN Z=0 (NO1) ET
#    ACCE_IMPO = ACCELER2 (0) EN Z=4 (NO5)
#----------------------------------------------------------
# CALCUL TRANSITOIRE PAR SUPERPOSITION MODALE
# -------------------------------------------
TRANMULT=DYNA_VIBRA(TYPE_CALCUL='TRAN',
                    BASE_CALCUL='GENE',
                    MATR_MASS=MASSMULT,   
                    MATR_RIGI=RIGIMULT,
                    SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                    MODE_STAT=MODE_STA,
                    EXCIT=(_F(VECT_ASSE_GENE=VECT_X1,  
                              ACCE = ACCELER1,
                              VITE = VITESSE1,
                              DEPL = DEPLACE1,
                              MULT_APPUI = 'OUI',
                              DIRECTION = ( 1., 0., 0.,), 
                              NOEUD = 'NO1',),
                           _F(VECT_ASSE_GENE=VECT_X2,
                              ACCE = ACCELER2,
                              VITE = VITESSE2,
                              DEPL = DEPLACE2,
                              MULT_APPUI = 'OUI',
                              DIRECTION = ( 1., 0., 0.,),
                              NOEUD = 'NO5',)),
                    INCREMENT=_F(  LIST_INST=L_INST,),)

#
PGP_MUA= POST_GENE_PHYS(RESU_GENE=TRANMULT,
                          OBSERVATION=( 
                                      _F(LIST_INST=L_INST1,
                                         NOM_CHAM = 'ACCE_ABSOLU',
                                         NOM_CMP = 'DX',
                                         NOEUD = ('NO2'),),
                                      _F(LIST_INST=L_INST1,
                                         NOM_CHAM = 'VITE_ABSOLU',
                                         NOM_CMP = 'DX',
                                         NOEUD = ('NO2'),),
                                      _F(LIST_INST=L_INST1,
                                         NOM_CHAM = 'DEPL_ABSOLU',
                                         NOM_CMP = 'DX',
                                         NOEUD = ('NO2'),),
                           ),)
#IMPR_TABLE(TABLE=PGP_MUA)

TEST_TABLE(
           VALE_CALC=149858.610679,
           TABLE=PGP_MUA,
           NOM_PARA='VALE_R',
           FILTRE=(_F(NOM_PARA='INST', VALE=1.,),
                   _F(NOM_PARA='NOM_CHAM', VALE_K='ACCE_ABSOLU',),
                   _F(NOM_PARA='NOEUD', VALE_K='NO2',),
                   _F(NOM_PARA='NOM_CMP', VALE_K='DX',),
                  ),
           )

TEST_TABLE(
           VALE_CALC=49641.2499759,
           TABLE=PGP_MUA,
           NOM_PARA='VALE_R',
           FILTRE=(_F(NOM_PARA='INST', VALE=1.,),
                   _F(NOM_PARA='NOM_CHAM', VALE_K='VITE_ABSOLU',),
                   _F(NOM_PARA='NOEUD', VALE_K='NO2',),
                   _F(NOM_PARA='NOM_CMP', VALE_K='DX',),
                  ),
           )

TEST_TABLE(
           VALE_CALC=12325.2097699,
           TABLE=PGP_MUA,
           NOM_PARA='VALE_R',
           FILTRE=(_F(NOM_PARA='INST', VALE=1.,),
                   _F(NOM_PARA='NOM_CHAM', VALE_K='DEPL_ABSOLU',),
                   _F(NOM_PARA='NOEUD', VALE_K='NO2',),
                   _F(NOM_PARA='NOM_CMP', VALE_K='DX',),
                  ),
           )

#
# AVEC LA MACRO MACR_SPECTRE
# ----------------------------------------------
#
# 1. RECUPERATION DES ACCELERATIONS ABSOLUES CALCULEES
# ----------------------------------------------
TBMACMU=MACR_SPECTRE(MAILLAGE=MAILLAGE,
                      RESU=_F(RESU_GENE=TRANMULT,),
                      PLANCHER=(_F(NOEUD=('NO2','NO3','NO4'),NOM='P_MULT'),),
                      LIST_FREQ=L_FREQ,
                      NOM_CHAM='ACCE',
                      CALCUL='ABSOLU',
                      NORME = 9.81,
                      AMOR_SPEC=(0.05),
                      MULT_APPUI='OUI',)
#
# 2. IMPRESSION 
# -----------------------------------------------------------
IMPR_TABLE(TABLE=TBMACMU)

TEST_TABLE(REFERENCE='AUTRE_ASTER',
               VALE_REFE=483.6543659482,
               VALE_CALC=483.65436594822,
               PRECISION=1E-4,
               NOM_PARA='eH_0_P_MULT',
               TABLE=TBMACMU,
               FILTRE=_F(NOM_PARA='FREQ',
                         VALE=0.1,),)
TEST_TABLE(REFERENCE='AUTRE_ASTER',
               VALE_REFE=3840.043857283,
               VALE_CALC=3840.0438572825,
               PRECISION=1E-4,
               NOM_PARA='eH_0_P_MULT',
               TABLE=TBMACMU,
               FILTRE=_F(NOM_PARA='FREQ',
                         VALE=0.3,),)
TEST_TABLE(REFERENCE='AUTRE_ASTER',
               VALE_REFE=9016.620116294,
               VALE_CALC=9016.6201162936,
               PRECISION=1E-4,
               NOM_PARA='eH_0_P_MULT',
               TABLE=TBMACMU,
               FILTRE=_F(NOM_PARA='FREQ',
                         VALE=0.52,),)

FIN()
#
