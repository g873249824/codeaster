# MODIF  DATE 21/10/2008   AUTEUR BOYERE E.BOYERE 
# TITRE CALCUL D'UNE LIGNE D'ARBRE AVEC TROIS DISQUES
# shll102a.para = tps_job 60 mem_job 128Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# CALCUL HARMONIQUE
# REFERENCE : ROTORDYNAMICS, PREDICTION IN ENGINEERING
#             M. LALANNE, G. FERRARIS - WILEY, pp 68-75
DEBUT(CODE=_F(NOM='SHLL102A',NIV_PUB_WEB='INTERNET'),
      PAR_LOT='NON',DEBUG=_F(SDVERI='OUI'),)

from Numeric import *
from LinearAlgebra import *

import os


def ellipse(modx,mody,thetx,thety) :
    thetx=thetx*pi/180.
    thety=thety*pi/180.
    num = modx**2*sin(2*thetx) + mody**2*sin(2*thety)
    denum = modx**2*cos(2*thetx) + mody**2*cos(2*thety)
    if abs(denum) < 1e-33 :
       maxdemiaxe = 0.
    else :
       T=.5*arctan(-num/denum)
       ux1 = modx*cos(T+thetx)
       uy1 = mody*cos(T+thety)
       ux2 = modx*cos(T+thetx+pi/2.)
       uy2 = mody*cos(T+thety+pi/2.)
       ax1 = sqrt(ux1**2+uy1**2)
       ax2 = sqrt(ux2**2+uy2**2)
       maxdemiaxe = max(ax1,ax2)
    return maxdemiaxe



# MISE EN DONNEES

INCLUDE(UNITE=66)


MAIL=LIRE_MAILLAGE();

MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=(_F(GROUP_MA='ROTOR',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='POU_D_T',),
                         _F(GROUP_MA=('PALIER_A','PALIER_E','DISQUE1','DISQUE2','DISQUE3',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_TR',),),);

ACIER=DEFI_MATERIAU(ELAS=_F(E=2.0E11,
                            NU=0.3,
                            RHO=7800.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(GROUP_MA='ROTOR',
                            MATER=ACIER,),);

CARELEM=AFFE_CARA_ELEM(MODELE=MODELE,
                       POUTRE=_F(GROUP_MA='ROTOR',
                                 SECTION='CERCLE',
                                 CARA='R',
                                 VALE=.05,),
                       DISCRET=(_F(CARA='K_TR_D_N',
                                   GROUP_MA='PALIER_A',
                                   VALE=(0.,5.E7,7.E7,0.,0.,0.,),),
                                _F(CARA='K_TR_D_N',
                                   GROUP_MA='PALIER_E',
                                   VALE=(0.,5.E7,7.E7,0.,0.,0.,),),
                                _F(CARA='A_TR_D_N',
                                   GROUP_MA='PALIER_A',
                                   VALE=(0.,500.,700.,0.,0.,0.,),),
                                _F(CARA='A_TR_D_N',
                                   GROUP_MA='PALIER_E',
                                   VALE=(0.,500.,700.,0.,0.,0.,),),
                                _F(CARA='M_TR_D_N',
                                   GROUP_MA='DISQUE1',
                                   VALE=(14.580130,0.1232021,0.06463858,0.06463858,0.,0.,0.,0.,0.,0.,),),
                                _F(CARA='M_TR_D_N',
                                   GROUP_MA='DISQUE2',
                                   VALE=(45.945793,0.97634809,0.4977460,0.4977460,0.,0.,0.,0.,0.,0.,),),
                                _F(CARA='M_TR_D_N',
                                   GROUP_MA='DISQUE3',
                                   VALE=(55.134951,1.1716177,0.6023493,0.6023493,0.,0.,0.,0.,0.,0.,),),),);

# CONDITIONS AUX LIMITES 

BLOQUAGE=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=(_F(GROUP_NO='PALIER_A',
                                    DX=0.0,
                                    ),
                                  _F(GROUP_MA='ROTOR',
                                    DRX=0.0,
                                    ),));

#MATRICES ASSEMBLEES K, M

MACRO_MATR_ASSE(MODELE=MODELE,
                CHAM_MATER=CHMAT,
                CARA_ELEM=CARELEM,
                CHARGE=BLOQUAGE,
                NUME_DDL=CO('NUMEDDL'),
                MATR_ASSE=(_F(MATRICE=CO('RIGIDITE'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSE'),
                              OPTION='MASS_MECA',),
                           _F(MATRICE=CO('GYRO'),
                              OPTION='MECA_GYRO',),
                           _F(MATRICE=CO('AMOR'),
                              OPTION='AMOR_MECA',),),);


[d,rig]=EXTR_MATR(RIGIDITE,1)
[d,mas]=EXTR_MATR(MASSE,1)
[d,amor]=EXTR_MATR(AMOR,1)
[d,gyro]=EXTR_MATR(GYRO,1)

nddl=rig.shape[0]

print "D"
print len(d)
i=0
for ddd in d:
   print i,ddd
   i=i+1
print "\n"


MODES=MODE_ITER_SIMULT(MATR_A=RIGIDITE,
                       MATR_B=MASSE,
                       CALC_FREQ=_F(OPTION='BANDE',
                                    FREQ=(0.,1000.,),),);




OM=25000./60.*2*pi

AGYRO=COMB_MATR_ASSE(COMB_R=(_F(MATR_ASSE=GYRO,
                                  COEF_R=OM,),
                               _F(MATR_ASSE=AMOR,
                                  COEF_R=1.0,),),);


balou = 0.0002;



FUN=DEFI_CONSTANTE(VALE=1.0,);

tourdeb=0.01
pastour=100.
tours=array([3620.5,3798.3,10018.,11281.,16787.,24418.,26611.],Float)
nbtour=tours.shape[0]
MODY51=zeros(nbtour,Float)
MODZ51=zeros(nbtour,Float)
PHAY51=zeros(nbtour,Float)
PHAZ51=zeros(nbtour,Float)



print "\n"
F=zeros([nddl,1],Complex)
reponsy=zeros([nbtour,1],Complex)
reponsz=zeros([nbtour,1],Complex)


i=0
for NTRIM in tours:

  FREQ=NTRIM/60.
  OM = ((FREQ * 2) * pi );
  print 'nbtour ', NTRIM

  malou = balou * OM**2
  print 'malou ', malou
  F[25]= malou
  F[26]= malou*1j
   

  AMOGYRO=COMB_MATR_ASSE(COMB_R=(_F(MATR_ASSE=GYRO,
                                  COEF_R=OM,),
                               _F(MATR_ASSE=AMOR,
                                  COEF_R=1.0,),),);

  [d,amogyro]=EXTR_MATR(AMOGYRO,1)
  masho = rig - OM**2 * mas + 1j*OM*amogyro

  repons=solve_linear_equations(masho,F)
  reponsy[i]=repons[25]
  reponsz[i]=repons[26]



  bal_FY=AFFE_CHAR_MECA(MODELE=MODELE,
                      FORCE_NODALE=_F(GROUP_NO='N_51',
                                      FY=(balou * (OM ** 2)),),);

  bal_FZ=AFFE_CHAR_MECA(MODELE=MODELE,
                      FORCE_NODALE=_F(GROUP_NO='N_51',
                                      FZ=(balou * (OM ** 2)),),);

  bal_FYe=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                       CHARGE=bal_FY,);

  bal_FZe=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                       CHARGE=bal_FZ,);

  bal_Yass=ASSE_VECTEUR(VECT_ELEM=bal_FYe,
                      NUME_DDL=NUMEDDL,);

  bal_Zass=ASSE_VECTEUR(VECT_ELEM=bal_FZe,
                      NUME_DDL=NUMEDDL,);


  DHAM=DYNA_LINE_HARM(MATR_MASS=MASSE,
                    MATR_RIGI=RIGIDITE,
                    MATR_AMOR=AMOGYRO,
                    FREQ=FREQ,
                    EXCIT=(_F(VECT_ASSE=bal_Yass,
                              FONC_MULT=FUN,
                              PHAS_DEG=0.0,),
                           _F(VECT_ASSE=bal_Zass,
                              FONC_MULT=FUN,
                              PHAS_DEG=90.0,),
                           ),
                              );

# NOEUD 51 : DISQUE 2
  DZ_N51=RECU_FONCTION(RESULTAT=DHAM,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DZ',
                   GROUP_NO='N_51',);

  DY_N51=RECU_FONCTION(RESULTAT=DHAM,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='N_51',);


  IMPR_FONCTION(FORMAT='TABLEAU',
              UNITE=6,
              COURBE=_F(FONCTION=DZ_N51))

  MOD_Z_51=CALC_FONCTION(EXTRACTION=_F(FONCTION=DZ_N51,
                                     PARTIE='MODULE',),);

  MOD_Y_51=CALC_FONCTION(EXTRACTION=_F(FONCTION=DY_N51,
                                     PARTIE='MODULE',),);

  PHA_Z_51=CALC_FONCTION(EXTRACTION=_F(FONCTION=DZ_N51,
                                     PARTIE='PHASE',),);

  PHA_Y_51=CALC_FONCTION(EXTRACTION=_F(FONCTION=DY_N51,
                                     PARTIE='PHASE',),);

  TABMODY=CREA_TABLE(FONCTION=_F(FONCTION=MOD_Y_51, ))
  TABMODZ=CREA_TABLE(FONCTION=_F(FONCTION=MOD_Z_51, ))
  TABPHAY=CREA_TABLE(FONCTION=_F(FONCTION=PHA_Y_51, ))
  TABPHAZ=CREA_TABLE(FONCTION=_F(FONCTION=PHA_Z_51, ))


  MODY51[i]=TABMODY['DY',1]
  MODZ51[i]=TABMODZ['DZ',1]
  PHAY51[i]=TABPHAY['DY',1]
  PHAZ51[i]=TABPHAZ['DZ',1]


  i=i+1


  DETRUIRE(CONCEPT=_F(NOM=DHAM))
  DETRUIRE(CONCEPT=_F(NOM=bal_FY))
  DETRUIRE(CONCEPT=_F(NOM=bal_FYe))
  DETRUIRE(CONCEPT=_F(NOM=bal_Yass))
  DETRUIRE(CONCEPT=_F(NOM=bal_FZ))
  DETRUIRE(CONCEPT=_F(NOM=bal_FZe))
  DETRUIRE(CONCEPT=_F(NOM=bal_Zass))
  DETRUIRE(CONCEPT=_F(NOM=AMOGYRO))
  DETRUIRE(CONCEPT=_F(NOM=DY_N51))
  DETRUIRE(CONCEPT=_F(NOM=DZ_N51))
  DETRUIRE(CONCEPT=_F(NOM=MOD_Y_51))
  DETRUIRE(CONCEPT=_F(NOM=PHA_Y_51))
  DETRUIRE(CONCEPT=_F(NOM=MOD_Z_51))
  DETRUIRE(CONCEPT=_F(NOM=PHA_Z_51))
  DETRUIRE(CONCEPT=_F(NOM=TABMODY))
  DETRUIRE(CONCEPT=_F(NOM=TABMODZ))
  DETRUIRE(CONCEPT=_F(NOM=TABPHAY))
  DETRUIRE(CONCEPT=_F(NOM=TABPHAZ))

print "\n"

print 'AMPLITUDE SUR LE DISQUE 2'

elli1=zeros([nbtour+1,1],Float)
i=0
for NTRIM in tours:
    dax=ellipse(MODY51[i],MODZ51[i],PHAY51[i],PHAZ51[i])
    print ("%f %e " %(NTRIM,dax))
    elli1[i]=dax
    i=i+1

print "\n"

print 'AMPLITUDE SUR LE DISQUE 2 (python)'

elli2=zeros([nbtour+1,1],Float)
freqi=zeros([nbtour+1,1],Float)

i=0
for NTRIM in tours:
    mody=sqrt(reponsy[i]*conjugate(reponsy[i]))
    rody=mody.real
    angy=0.0
    if reponsy[i].real>1e-30:
       angy=arctan(reponsy[i].imag/reponsy[i].real)*180/pi
    modz=sqrt(reponsz[i]*conjugate(reponsz[i]))
    rodz=modz.real
    angz=0.0
    if reponsz[i].real>1e-30:
       angz=arctan(reponsz[i].imag/reponsz[i].real)*180/pi
    dax=ellipse(rody,rodz,angy,angz)
    freqi[i]=NTRIM/60.
    elli2[i]=dax
    print ("%f %e " %(NTRIM,elli2[i]))
    i=i+1


ELLI1=CREA_TABLE(
        LISTE=(
               _F(LISTE_R=(freqi[0][0],freqi[1][0],freqi[2][0],freqi[3][0],
                           freqi[4][0],freqi[5][0],freqi[6][0]),PARA='FREQ'),
               _F(LISTE_R=(elli1[0][0],elli1[1][0],elli1[2][0],elli1[3][0],
                           elli1[4][0],elli1[5][0],elli1[6][0]),PARA='DEPL'),
              ))


ELLI2=CREA_TABLE(
        LISTE=(
               _F(LISTE_R=(freqi[0][0],freqi[1][0],freqi[2][0],freqi[3][0],
                           freqi[4][0],freqi[5][0],freqi[6][0]),PARA='FREQ'),
               _F(LISTE_R=(elli2[0][0],elli2[1][0],elli2[2][0],elli2[3][0],
                           elli2[4][0],elli2[5][0],elli2[6][0]),PARA='DEPL'),
              ))


TEST_TABLE(TABLE=ELLI2, NOM_PARA='DEPL', VALE=.938E-3,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 3620.5/60.,),),
           PRECISION=1.,
           REFERENCE='SOURCE_EXTERNE',)

TEST_TABLE(TABLE=ELLI2, NOM_PARA='DEPL', VALE=.210E-2,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 3798.3/60.,),),
           PRECISION=1.,
           REFERENCE='SOURCE_EXTERNE',)

TEST_TABLE(TABLE=ELLI2, NOM_PARA='DEPL', VALE=.499E-4,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 10018./60.,),),
           PRECISION=2.,
           REFERENCE='SOURCE_EXTERNE',)

TEST_TABLE(TABLE=ELLI2, NOM_PARA='DEPL', VALE=.130E-3,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 11281./60.,),),
           PRECISION=1.,
           REFERENCE='SOURCE_EXTERNE',)

#TEST_TABLE(TABLE=ELLI2, NOM_PARA='DEPL', VALE=.421E-5,
#           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 16787./60.,),),
#           PRECISION=1.E-2,
#           REFERENCE='SOURCE_EXTERNE',)

#TEST_TABLE(TABLE=ELLI2, NOM_PARA='DEPL', VALE=.684E-4,
#           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 24418./60.,),),
#           PRECISION=14.E-2,
#           REFERENCE='SOURCE_EXTERNE',)

#TEST_TABLE(TABLE=ELLI2, NOM_PARA='DEPL', VALE=.311E-4,
#           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 26611./60.,),),
#           PRECISION=9.E-2,
#           REFERENCE='SOURCE_EXTERNE',)



TEST_TABLE(TABLE=ELLI1, NOM_PARA='DEPL', VALE=.938E-3,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 3620.5/60.,),),
           PRECISION=.92,
           REFERENCE='SOURCE_EXTERNE',)

TEST_TABLE(TABLE=ELLI1, NOM_PARA='DEPL', VALE=.210E-2,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 3798.3/60.,),),
           PRECISION=.91,
           REFERENCE='SOURCE_EXTERNE',)

TEST_TABLE(TABLE=ELLI1, NOM_PARA='DEPL', VALE=.499E-4,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 10018./60.,),),
           PRECISION=.52,
           REFERENCE='SOURCE_EXTERNE',)

TEST_TABLE(TABLE=ELLI1, NOM_PARA='DEPL', VALE=.130E-3,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 11281./60.,),),
           PRECISION=.56,
           REFERENCE='SOURCE_EXTERNE',)

TEST_TABLE(TABLE=ELLI1, NOM_PARA='DEPL', VALE=.421E-5,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 16787./60.,),),
           PRECISION=.18,
           REFERENCE='SOURCE_EXTERNE',)

TEST_TABLE(TABLE=ELLI1, NOM_PARA='DEPL', VALE=.684E-4,
           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 24418./60.,),),
           PRECISION=.24,
           REFERENCE='SOURCE_EXTERNE',)

#TEST_TABLE(TABLE=ELLI1, NOM_PARA='DEPL', VALE=.311E-4,
#           FILTRE=( _F(  NOM_PARA = 'FREQ', VALE = 26611./60.,),),
#           PRECISION=.09,
#           REFERENCE='SOURCE_EXTERNE',)

FIN();
