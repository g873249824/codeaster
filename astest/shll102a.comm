# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# CALCUL HARMONIQUE
# REFERENCE : ROTORDYNAMICS, PREDICTION IN ENGINEERING
#             M. LALANNE, G. FERRARIS - WILEY, pp 68-75
import aster
import numpy as NP
import numpy.linalg as LA

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
      PAR_LOT='NON',DEBUG=_F(SDVERI='OUI'),)


def ellipse(modx,mody,thetx,thety) :
    thetx=thetx*pi/180.
    thety=thety*pi/180.
    num = modx**2*sin(2*thetx) + mody**2*sin(2*thety)
    denum = modx**2*cos(2*thetx) + mody**2*cos(2*thety)
    if abs(denum) < 1e-33 :
       maxdemiaxe = 0.
    else :
       T=.5*atan(-num/denum)
       ux1 = modx*cos(T+thetx)
       uy1 = mody*cos(T+thety)
       ux2 = modx*cos(T+thetx+pi/2.)
       uy2 = mody*cos(T+thety+pi/2.)
       ax1 = sqrt(ux1**2+uy1**2)
       ax2 = sqrt(ux2**2+uy2**2)
       maxdemiaxe = max(ax1,ax2)
    return maxdemiaxe



# MISE EN DONNEES

INCLUDE(UNITE=66)


MAIL=LIRE_MAILLAGE(FORMAT="ASTER",);

MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=(_F(GROUP_MA='ROTOR',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='POU_D_T',),
                         _F(GROUP_MA=('PALIER_A','PALIER_E','DISQUE1','DISQUE2','DISQUE3',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_TR',),),);

ACIER=DEFI_MATERIAU(ELAS=_F(E=2.0E11,
                            NU=0.3,
                            RHO=7800.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(GROUP_MA='ROTOR',
                            MATER=ACIER,),);

CARELEM=AFFE_CARA_ELEM(INFO=2,
                       MODELE=MODELE,
                       POUTRE=_F(GROUP_MA='ROTOR',
                                 SECTION='GENERALE',
                                 CARA=('A','IY','IZ',
                                       'AY','AZ','JX',
                                       'RY','RZ','RT',),
                                 VALE=(7.85398E-03,4.90874E-06,4.90874E-06,
                                       1.11111E+00,1.11111E+00,9.81748E-06,
                                       5.00000E-02,5.00000E-02,5.00000E-02,),),
                       DISCRET=(_F(CARA='K_TR_D_N',
                                   GROUP_MA='PALIER_A',
                                   VALE=(0.,5.E7,7.E7,0.,0.,0.,),),
                                _F(CARA='M_TR_D_N',
                                   GROUP_MA='PALIER_A',
                                   VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,),),
                                _F(CARA='K_TR_D_N',
                                   GROUP_MA='PALIER_E',
                                   VALE=(0.,5.E7,7.E7,0.,0.,0.,),),
                                _F(CARA='M_TR_D_N',
                                   GROUP_MA='PALIER_E',
                                   VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,),),
                                _F(CARA='A_TR_D_N',
                                   GROUP_MA='PALIER_A',
                                   VALE=(0.,500.,700.,0.,0.,0.,),),
                                _F(CARA='A_TR_D_N',
                                   GROUP_MA='PALIER_E',
                                   VALE=(0.,500.,700.,0.,0.,0.,),),
                                _F(CARA='M_TR_D_N',
                                   GROUP_MA='DISQUE1',
                                   VALE=(14.580130,0.1232021,0.06463858,0.06463858,0.,0.,0.,0.,0.,0.,),),
                                _F(CARA='M_TR_D_N',
                                   GROUP_MA='DISQUE2',
                                   VALE=(45.945793,0.97634809,0.4977460,0.4977460,0.,0.,0.,0.,0.,0.,),),
                                _F(CARA='M_TR_D_N',
                                   GROUP_MA='DISQUE3',
                                   VALE=(55.134951,1.1716177,0.6023493,0.6023493,0.,0.,0.,0.,0.,0.,),),),);

# CONDITIONS AUX LIMITES

BLOQUAGE=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=(_F(GROUP_NO='PALIER_A',
                                    DX=0.0,
                                    ),
                                  _F(GROUP_MA='ROTOR',
                                    DRX=0.0,
                                    ),));

#MATRICES ASSEMBLEES K, M



ASSEMBLAGE(MODELE=MODELE,
                CHAM_MATER=CHMAT,
                CARA_ELEM=CARELEM,
                CHARGE=BLOQUAGE,
                NUME_DDL=CO('NUMEDDL'),
                MATR_ASSE=(_F(MATRICE=CO('RIGIDITE'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSE'),
                              OPTION='MASS_MECA',),
                           _F(MATRICE=CO('GYRO'),
                              OPTION='MECA_GYRO',),
                           _F(MATRICE=CO('AMOR'),
                              OPTION='AMOR_MECA',),),);

[d,rig]=EXTR_MATR(RIGIDITE,1)
[d,mas]=EXTR_MATR(MASSE,1)
[d,amor]=EXTR_MATR(AMOR,1)
[d,gyro]=EXTR_MATR(GYRO,1)

nddl=rig.shape[0]

print "D"
print len(d)
i=0
for ddd in d:
   print i,ddd
   i=i+1
print "\n"


MODES=CALC_MODES(MATR_RIGI=RIGIDITE,
                 OPTION='BANDE',
                 CALC_FREQ=_F(FREQ=(0.,1000.,),
                              ),
                 MATR_MASS=MASSE,
                 )


balou = 0.0002;



FUN=DEFI_CONSTANTE(VALE=1.0,);

tourdeb=0.01
pastour=100.
tours=NP.array([3620.5,3798.3,10018.,11281.,16787.,24418.,26611.])
nbtour=tours.shape[0]
MODYDIS2=NP.zeros(nbtour)
MODZDIS2=NP.zeros(nbtour)
PHAYDIS2=NP.zeros(nbtour)
PHAZDIS2=NP.zeros(nbtour)



print "\n"
F=NP.zeros([nddl,1], complex)
reponsy=NP.zeros([nbtour,1], complex)
reponsz=NP.zeros([nbtour,1], complex)


i=0
for NTRIM in tours:

  FREQ=NTRIM/60.
  OM = ((FREQ * 2) * pi );
  print 'nbtour ', NTRIM

  malou = balou * OM**2
  F[25]= malou
  F[26]= -malou*1j


  AMOGYRO=COMB_MATR_ASSE(COMB_R=(_F(MATR_ASSE=GYRO,
                                  COEF_R=OM,),
                               _F(MATR_ASSE=AMOR,
                                  COEF_R=1.0,),),);

  [d,amogyro]=EXTR_MATR(AMOGYRO,1)
  masho = rig - OM**2 * mas + 1j*OM*amogyro

  repons=LA.solve(masho,F)
  reponsy[i]=repons[25]
  reponsz[i]=repons[26]



  bal_FY=AFFE_CHAR_MECA(MODELE=MODELE,
                      FORCE_NODALE=_F(GROUP_NO='N_DIS2',
                                      FY=(balou * (OM ** 2)),),);

  bal_FZ=AFFE_CHAR_MECA(MODELE=MODELE,
                      FORCE_NODALE=_F(GROUP_NO='N_DIS2',
                                      FZ=(balou * (OM ** 2)),),);
  bal_FYe=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                       CHARGE=bal_FY,);

  bal_FZe=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                       CHARGE=bal_FZ,);

  bal_Yass=ASSE_VECTEUR(VECT_ELEM=bal_FYe,
                      NUME_DDL=NUMEDDL,);

  bal_Zass=ASSE_VECTEUR(VECT_ELEM=bal_FZe,
                      NUME_DDL=NUMEDDL,);


  DHAM=DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='PHYS',
                    MATR_MASS=MASSE,
                    MATR_RIGI=RIGIDITE,
                    MATR_AMOR=AMOGYRO,
                    FREQ=FREQ,
                    EXCIT=(_F(VECT_ASSE=bal_Yass,
                              FONC_MULT=FUN,
                              PHAS_DEG=0.0,),
                           _F(VECT_ASSE=bal_Zass,
                              FONC_MULT=FUN,
                              PHAS_DEG=-90.0,),
                           ),
                              );

# DISQUE 2
  DZ_DIS2=RECU_FONCTION(RESULTAT=DHAM,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DZ',
                   GROUP_NO='N_DIS2',);

  DY_DIS2=RECU_FONCTION(RESULTAT=DHAM,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='N_DIS2',);



  MOD_Z_D2=CALC_FONCTION(EXTRACTION=_F(FONCTION=DZ_DIS2,
                                     PARTIE='MODULE',),);

  MOD_Y_D2=CALC_FONCTION(EXTRACTION=_F(FONCTION=DY_DIS2,
                                     PARTIE='MODULE',),);

  PHA_Z_D2=CALC_FONCTION(EXTRACTION=_F(FONCTION=DZ_DIS2,
                                     PARTIE='PHASE',),);

  PHA_Y_D2=CALC_FONCTION(EXTRACTION=_F(FONCTION=DY_DIS2,
                                     PARTIE='PHASE',),);
  IMPR_FONCTION(FORMAT='TABLEAU',
              UNITE=8,
              COURBE=(_F(FONCTION=DY_DIS2),
                      _F(FONCTION=DZ_DIS2),
                      _F(FONCTION=MOD_Y_D2),
                      _F(FONCTION=PHA_Y_D2),
                      _F(FONCTION=MOD_Z_D2),
                      _F(FONCTION=PHA_Z_D2),))



  TABMODY=CREA_TABLE(FONCTION=_F(FONCTION=MOD_Y_D2, ))
  TABMODZ=CREA_TABLE(FONCTION=_F(FONCTION=MOD_Z_D2, ))
  TABPHAY=CREA_TABLE(FONCTION=_F(FONCTION=PHA_Y_D2, ))
  TABPHAZ=CREA_TABLE(FONCTION=_F(FONCTION=PHA_Z_D2, ))


  MODYDIS2[i]=TABMODY['DY',1]
  MODZDIS2[i]=TABMODZ['DZ',1]
  PHAYDIS2[i]=TABPHAY['DY',1]
  PHAZDIS2[i]=TABPHAZ['DZ',1]


  i=i+1


  DETRUIRE(CONCEPT=_F(NOM=DHAM))
  DETRUIRE(CONCEPT=_F(NOM=bal_FY))
  DETRUIRE(CONCEPT=_F(NOM=bal_FYe))
  DETRUIRE(CONCEPT=_F(NOM=bal_Yass))
  DETRUIRE(CONCEPT=_F(NOM=bal_FZ))
  DETRUIRE(CONCEPT=_F(NOM=bal_FZe))
  DETRUIRE(CONCEPT=_F(NOM=bal_Zass))
  DETRUIRE(CONCEPT=_F(NOM=AMOGYRO))
  DETRUIRE(CONCEPT=_F(NOM=DY_DIS2))
  DETRUIRE(CONCEPT=_F(NOM=DZ_DIS2))
  DETRUIRE(CONCEPT=_F(NOM=MOD_Y_D2))
  DETRUIRE(CONCEPT=_F(NOM=PHA_Y_D2))
  DETRUIRE(CONCEPT=_F(NOM=MOD_Z_D2))
  DETRUIRE(CONCEPT=_F(NOM=PHA_Z_D2))
  DETRUIRE(CONCEPT=_F(NOM=TABMODY))
  DETRUIRE(CONCEPT=_F(NOM=TABMODZ))
  DETRUIRE(CONCEPT=_F(NOM=TABPHAY))
  DETRUIRE(CONCEPT=_F(NOM=TABPHAZ))



elli1=NP.zeros([nbtour+1,1])
i=0
for NTRIM in tours:
    dax=ellipse(MODYDIS2[i],MODZDIS2[i],PHAYDIS2[i],PHAZDIS2[i])
    elli1[i]=dax
    i=i+1



elli2=NP.zeros([nbtour+1,1])
freqi=NP.zeros([nbtour+1,1])

i=0
for NTRIM in tours:
    mody=NP.sqrt(reponsy[i]*NP.conjugate(reponsy[i]))
    angy=NP.arctan2(reponsy[i].imag,reponsy[i].real)*180/NP.pi
    modz=NP.sqrt(reponsz[i]*NP.conjugate(reponsz[i]))
    angz=NP.arctan2(reponsz[i].imag,reponsz[i].real)*180/NP.pi
    dax=ellipse(mody.real,modz.real,angy,angz)
    freqi[i]=NTRIM/60.
    elli2[i]=dax
    i=i+1


ELLI1=CREA_TABLE(
        LISTE=(
               _F(LISTE_R=(freqi[0][0],freqi[1][0],freqi[2][0],freqi[3][0],
                           freqi[4][0],freqi[5][0],freqi[6][0]),PARA='FREQ'),
               _F(LISTE_R=(elli1[0][0],elli1[1][0],elli1[2][0],elli1[3][0],
                           elli1[4][0],elli1[5][0],elli1[6][0]),PARA='DEPL'),
              ))


ELLI2=CREA_TABLE(
        LISTE=(
               _F(LISTE_R=(freqi[0][0],freqi[1][0],freqi[2][0],freqi[3][0],
                           freqi[4][0],freqi[5][0],freqi[6][0]),PARA='FREQ'),
               _F(LISTE_R=(elli2[0][0],elli2[1][0],elli2[2][0],elli2[3][0],
                           elli2[4][0],elli2[5][0],elli2[6][0]),PARA='DEPL'),
              ))


TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           VALE_CALC= 9.37618695E-04,
           VALE_REFE=9.3800000000000003E-4,
           NOM_PARA='DEPL',
           TABLE=ELLI2,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=60.341666666666669,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=2.E-3,
           VALE_CALC= 2.09600145E-03,
           VALE_REFE=2.0999999999999999E-3,
           NOM_PARA='DEPL',
           TABLE=ELLI2,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=63.305,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           VALE_CALC= 4.99210668E-05,
           VALE_REFE=4.99E-05,
           NOM_PARA='DEPL',
           TABLE=ELLI2,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=166.96666666666667,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=2.E-3,
           VALE_CALC= 1.30254414E-04,
           VALE_REFE=1.2999999999999999E-4,
           NOM_PARA='DEPL',
           TABLE=ELLI2,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=188.01666666666668,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=2.E-3,
           VALE_CALC= 4.20421543E-06,
           VALE_REFE=4.2100000000000003E-06,
           NOM_PARA='DEPL',
           TABLE=ELLI2,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=279.78333333333336,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=2.E-3,
           VALE_CALC= 6.83004173E-05,
           VALE_REFE=6.8399999999999996E-05,
           NOM_PARA='DEPL',
           TABLE=ELLI2,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=406.96666666666664,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=0.02,
           VALE_CALC= 3.06661921E-05,
           VALE_REFE=3.1099999999999997E-05,
           NOM_PARA='DEPL',
           TABLE=ELLI2,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=443.51666666666665,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           VALE_CALC= 9.37618695E-04,
           VALE_REFE=9.3800000000000003E-4,
           NOM_PARA='DEPL',
           TABLE=ELLI1,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=60.341666666666669,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=2.E-3,
           VALE_CALC= 2.09600145E-03,
           VALE_REFE=2.0999999999999999E-3,
           NOM_PARA='DEPL',
           TABLE=ELLI1,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=63.305,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           VALE_CALC= 4.99210668E-05,
           VALE_REFE=4.99E-05,
           NOM_PARA='DEPL',
           TABLE=ELLI1,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=166.96666666666667,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=2.E-3,
           VALE_CALC= 1.30254414E-04,
           VALE_REFE=1.2999999999999999E-4,
           NOM_PARA='DEPL',
           TABLE=ELLI1,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=188.01666666666668,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=2.E-3,
           VALE_CALC= 4.20421543E-06,
           VALE_REFE=4.2100000000000003E-06,
           NOM_PARA='DEPL',
           TABLE=ELLI1,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=279.78333333333336,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=2.E-3,
           VALE_CALC= 6.83004173E-05,
           VALE_REFE=6.8399999999999996E-05,
           NOM_PARA='DEPL',
           TABLE=ELLI1,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=406.96666666666664,),
           )

TEST_TABLE(REFERENCE='SOURCE_EXTERNE',
           PRECISION=0.02,
           VALE_CALC= 3.06661921E-05,
           VALE_REFE=3.1099999999999997E-05,
           NOM_PARA='DEPL',
           TABLE=ELLI1,
           FILTRE=_F(NOM_PARA='FREQ',
                     VALE=443.51666666666665,),
           )

FIN();
