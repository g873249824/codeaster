# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2020 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#       CAS-TEST SDNV103D (3D), METHODE CONTINUE

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
           DEBUG=_F(SDVERI='OUI'))


MA=LIRE_MAILLAGE(FORMAT='MED', )

MA=DEFI_GROUP(reuse=MA,MAILLAGE=MA,
              CREA_GROUP_NO=_F( TOUT_GROUP_MA = 'OUI'),
              )

MODE=AFFE_MODELE(
            MAILLAGE=MA,
            
            AFFE=(
_F( TOUT='OUI',
               PHENOMENE = 'MECANIQUE',
               MODELISATION = ('AXIS')),
           _F( TOUT='OUI',
               PHENOMENE = 'MECANIQUE',
               MODELISATION = ('AXIS_SI',)),),);

MA=MODI_MAILLAGE( reuse=MA,
             MAILLAGE=MA,
             ORIE_PEAU_2D=_F(  GROUP_MA = ('SZZ', 'RIGID')),
             INFO=2);

ACIER=DEFI_MATERIAU(
                ELAS=_F( E = 117.E3, NU = 0.35,  RHO = 8.930E-9),
                ECRO_LINE=_F(D_SIGM_EPSI = 100., SY = 400.));

CHMAT = AFFE_MATERIAU(
            MAILLAGE=MA,
            AFFE=(
              _F( GROUP_MA = ('VOL','VOL_RIG'), MATER = ACIER),),
                        );

CH=AFFE_CHAR_MECA(
            MODELE=MODE,
            DDL_IMPO=(
             _F( GROUP_MA = 'RIGID',      DX = 0., DY = 0.,),
             _F( GROUP_MA = 'VOL_RIG',    DX = 0., DY = 0.),
             _F( GROUP_MA = 'AXE',        DX = 0.),
             ),
               );

CH2 = DEFI_CONTACT(MODELE         = MODE,
                   FORMULATION    = 'CONTINUE',
                   FROTTEMENT     = 'COULOMB',
                    ALGO_RESO_CONT = 'NEWTON',
                    ALGO_RESO_GEOM = 'NEWTON',
                    ALGO_RESO_FROT = 'NEWTON',
                    #ADAPT_COEF     = 'OUI',
                   ZONE        =_F(
                              GROUP_MA_MAIT='RIGID',
                              GROUP_MA_ESCL='SZZ',
                              COULOMB = 0.25,
                                 ),
                   )

VIT_0=CREA_CHAMP( OPERATION='AFFE',
                  TYPE_CHAM='NOEU_DEPL_R',

                  MODELE=MODE,
                  AFFE=(
                     _F(TOUT='OUI',
                        NOM_CMP = ('DX', 'DY', 'LAGS_C', 'LAGS_F1'),
                        VALE = (  0.0,  0.0,  0.0,  0.0,)),
                     _F(TOUT='OUI',
                        NOM_CMP = ('DX', 'DY'),
                        VALE = (  0.0,  -227000.,)),
                     _F(GROUP_NO = 'VOL_RIG',
                        NOM_CMP = ('DX', 'DY'),
                        VALE = (  0.0,  0.0,   )),
                     _F(GROUP_NO = 'RIGID',
                        NOM_CMP = ('DX', 'DY'),
                        VALE = (  0.0,  0.0, )),
                    ));


# AVEC DETECTION DE COLLISION

NPAS_IMPA   = 31
IFIN        = +2.0E-5


temps2=DEFI_LIST_REEL(DEBUT=-1.E-5,
                      INTERVALLE=(_F(JUSQU_A=IFIN,
                                     NOMBRE=NPAS_IMPA,),
                                   ),);



liste2=DEFI_LIST_INST(  DEFI_LIST=_F(LIST_INST = temps2,),
                          ECHEC    =(
                            _F(
                               EVENEMENT        = 'ERREUR',
                               ACTION           = 'DECOUPE',
                               SUBD_METHODE     = 'MANUEL',
                               SUBD_PAS         = 3,
                              ),
                             _F(
                               EVENEMENT        = 'COLLISION',
                               ACTION           = 'DECOUPE',
                               SUBD_METHODE     = 'AUTO',
                               SUBD_INST = 1.7E-8,
                               SUBD_DUREE    = 1.5E-6,
                              ),
                          ),
                        )

RESU2=DYNA_NON_LINE(MODELE=MODE,SOLVEUR=_F(METHODE='MULT_FRONT'),
                   CHAM_MATER=CHMAT,
                   EXCIT=_F(CHARGE=CH,
                            ),
                   CONTACT = CH2,
                   ETAT_INIT=_F(VITE = VIT_0,
                                ),
                   COMPORTEMENT=_F(RELATION='VMIS_ISOT_LINE',
                                DEFORMATION='SIMO_MIEHE',
                                TOUT='OUI',),
                   INCREMENT=_F(LIST_INST=liste2,
                                ),
                  SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                     FORMULATION='DEPLACEMENT',
                                     ALPHA = -0.6,
                                ),
                  NEWTON=_F(   REAC_INCR=1,
                                MATRICE='TANGENTE',
                                REAC_ITER=1,),
                   CONVERGENCE=_F(RESI_GLOB_MAXI=1.E-6,
                                  ITER_GLOB_MAXI=30,
                                  ARRET='OUI',),
                   );

#
### POST-TRAITEMENTS
#

CONTB1_2=POST_RELEVE_T(ACTION = _F(GROUP_NO='B1',
                                 INTITULE = 'MESSAGE',
                                 RESULTAT = RESU2,
                                 TOUT_CMP='OUI',
                                 NOM_CHAM   = 'CONT_NOEU',
                                 OPERATION = 'EXTRACTION'))

VITEA2_2=POST_RELEVE_T(ACTION=_F(INTITULE='VITE EN A2',
                                GROUP_NO= 'A2',
                                RESULTAT=RESU2,
                                NOM_CHAM='VITE',
                                NOM_CMP='DY',
                                OPERATION='EXTRACTION',),);

DEPLA1_2=POST_RELEVE_T(ACTION=_F(INTITULE='DEPL EN A1',
                                GROUP_NO= 'A1',
                                RESULTAT=RESU2,
                                NOM_CHAM='DEPL',
                                NOM_CMP='DY',
                                OPERATION='EXTRACTION',),);

DEPLB1_2=POST_RELEVE_T(ACTION=_F(INTITULE='DEPL EN B1',
                                GROUP_NO= 'B1',
                                RESULTAT=RESU2,
                                NOM_CHAM='DEPL',
                                NOM_CMP='DY',
                                OPERATION='EXTRACTION',),);


#####################################################
# TESTS DE DEPLACEMENTS, VITESSES ET ACCELERATIONS
#####################################################

TEST_RESU(RESU=(_F(GROUP_NO='B1',
                   INST=2.0E-05,
                   RESULTAT=RESU2,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   VALE_CALC=1.76774925723,
                   CRITERE='RELATIF',
                   ),
                _F(GROUP_NO='A2',
                   INST=2.0E-05,
                   RESULTAT=RESU2,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   VALE_CALC=-6.73449613267,
                   CRITERE='RELATIF',
                   ),
                _F(GROUP_NO='B1',
                   INST=2.0E-05,
                   RESULTAT=RESU2,
                   NOM_CHAM='VITE',
                   NOM_CMP='DX',
                   VALE_CALC=79430.9941376,
                   CRITERE='RELATIF',
                   ),
                _F(GROUP_NO='A2',
                   INST=2.0E-05,
                   RESULTAT=RESU2,
                   NOM_CHAM='VITE',
                   NOM_CMP='DY',
                   VALE_CALC=-207946.60951,
                   CRITERE='RELATIF',
                   ),
                ),
          )

#####################################################
# TESTS SUR LA VALEUR DU JEU ET DU FROTTEMENT
#####################################################



TEST_TABLE(CRITERE='RELATIF',
           VALE_CALC=0.084079533045,
           NOM_PARA='JEU',
           TABLE=CONTB1_2,
           FILTRE=_F(PRECISION=1.E-10,
                     NOM_PARA='INST',
                     VALE=2.0E-05,),
           )

TEST_TABLE(CRITERE='ABSOLU',
           VALE_CALC=0.,
           NOM_PARA='R',
           TABLE=CONTB1_2,
           FILTRE=_F(PRECISION=1.E-10,
                     NOM_PARA='INST',
                     VALE=2.0E-05,),
           )

#
### COURBES
#

F_DY_2=RECU_FONCTION( RESULTAT=RESU2,
                      NOM_CHAM='DEPL',
                      GROUP_NO='A1',
                      NOM_CMP='DY',);
IMPR_FONCTION(FORMAT='XMGRACE',
          UNITE=41,
          COURBE=(
       _F(FONCTION=F_DY_2),),);



F_VY_2=RECU_FONCTION( RESULTAT=RESU2,
                      NOM_CHAM='VITE',
                      GROUP_NO='A1',
                      NOM_CMP='DY',);
IMPR_FONCTION(FORMAT='XMGRACE',
          UNITE=42,
          COURBE=(
       _F(FONCTION=F_VY_2),),);


FIN()
