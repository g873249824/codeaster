# TITRE PROPAGATION PLANE D UNE FISSURE 3D SE DIVISANT ET FUSIONNANT AVEC X-FEM
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# person_in_charge: daniele.colombo at ifpen.fr

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),)

# METHODE FMM

#  MAILLAGE 10X10
SIF10=CREA_TABLE(LISTE=(_F(LISTE_R=(1.,1.,1.,1.,1.,1.,1.,1.,1.,1.),PARA='K1'),
                        _F(LISTE_R=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.),PARA='K2'),
                        _F(LISTE_R=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.),PARA='K3'),
                        _F(LISTE_R=(1.,1.,1.,1.,1.,1.,1.,1.,1.,1.),PARA='G'),
                        _F(LISTE_R=(1.,1.,1.,1.,1.,1.,1.,1.,1.,1.),PARA='G_IRWIN'),
                        _F(LISTE_I=(1,1,1,1,1,1,1,1,1,1),PARA='NUME_FOND'),
                        _F(LISTE_I=(1,1,1,1,1,1,1,1,1,1),PARA='NUME_ORDRE'),
                        _F(LISTE_I=(1,2,3,4,5,6,7,8,9,10),PARA='NUM_PT'),))

#  MAILLAGE 40X40
SIF40=CREA_TABLE(LISTE=(_F(LISTE_R=(1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.),PARA='K1'),
                        _F(LISTE_R=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.),PARA='K2'),
                        _F(LISTE_R=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.),PARA='K3'),
                        _F(LISTE_R=(1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.),PARA='G'),
                        _F(LISTE_R=(1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.),PARA='G_IRWIN'),
                        _F(LISTE_I=(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4),PARA='NUME_FOND'),
                        _F(LISTE_I=(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),PARA='NUME_ORDRE'),
                        _F(LISTE_I=(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10),PARA='NUM_PT'),))

#----------------------------------------------
#                 MAILLAGE
#----------------------------------------------

nbcalc = 3

MeshSEB=LIRE_MAILLAGE(INFO=1,FORMAT='MED', UNITE=20,);

#----------------------------------------------
#                   MODELE
#----------------------------------------------

ModSEB=AFFE_MODELE(MAILLAGE=MeshSEB,
                   AFFE=(_F(
                                GROUP_MA='Vol',
                               PHENOMENE='MECANIQUE',
                               MODELISATION='3D',),),);

#----------------------------------------------
#                 GRILLE
#----------------------------------------------

MaiGril=LIRE_MAILLAGE(FORMAT='MED', UNITE=41,
                      INFO_MED=1,);

Grille=DEFI_GRILLE(MAILLAGE=MaiGril);

#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

E=70656
nu=0.34
Alu=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,),);

#----------------------------------------------
#              FISSURE INITIALE
#----------------------------------------------

a0 = 4.0

FISS = [None]*nbcalc

FISS[0]=DEFI_FISS_XFEM(MAILLAGE=MeshSEB,
                       MAILLAGE_GRILLE=Grille,
                       GROUP_MA_ENRI='Vol',
                       DEFI_FISS=_F(
                                  FORM_FISS='DEMI_PLAN',
                                  PFON=(30.,4.,5.),
                                  NORMALE=(0.,0.,1.),
                                  DTAN=(0.,1.,0.),
                       ),);

#----------------------------------------------
#                  PROPAGATION
#----------------------------------------------

# Nombre refinement Homard
infit=2

MODX = [None]*nbcalc
LSN = [None]*nbcalc
LST = [None]*nbcalc
Mod = [None]*nbcalc
CHERR=[None]*infit
MeshH = [None]*nbcalc
ModH = [None]*nbcalc
FISSH = [None]*nbcalc
LSNH = [None]*nbcalc
LSTH = [None]*nbcalc
MeH = [None]*infit
LSNHT = [None]*infit
LSTHT = [None]*infit


# AVANCE IMPOSEE
da=12.0

RI = 0.2
RS = 1.0

rayon_raff = 2.0*RS
rayon_deraff = rayon_raff+1.0*da
rayon_calcG_fitt = rayon_raff+da

# Levelset au debut de la propagation
LSN[0]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                  OPERATION='EXTR',
                  FISSURE=FISS[0],
                  NOM_CHAM='LNNO',);
LST[0]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                  OPERATION='EXTR',
                  FISSURE=FISS[0],
                  NOM_CHAM='LTNO',);

CHERR[0] = RAFF_XFEM(FISSURE=FISS[0])

for i in range(nbcalc) :

   LSNHT[0] = LSN[i]
   LSTHT[0] = LST[i]

   for j in range(infit) :

      if (j == 0) :
         if ( i == 0 ):
            MeH[0] = MeshSEB
         else:
            MeH[0] = MeshH[i-1]

      if ( j < infit-1 ):

         MeH[j+1]=CO('MeH_%d'%(j+1))
         LSNHT[j+1]=CO('LSNHT_%d'%(j+1))
         LSTHT[j+1]=CO('LSTHT_%d'%(j+1))
         CHERR[j+1]=CO('CHERR_%d' % (j+1))

         MACR_ADAP_MAIL(ADAPTATION='RAFF_DERA',
                        MAILLAGE_N=MeH[j],
                        MAILLAGE_NP1=MeH[j+1],
                        CHAM_GD=CHERR[j],
                        USAGE_CMP='RELATIF',
                        CRIT_RAFF_ABS=-1*rayon_raff,
                        CRIT_DERA_ABS=-1*rayon_deraff,
                        NIVE_MAX=infit,
                     MAJ_CHAM=(_F(TYPE_CHAM='NOEU_NEUT_R',
                                  CHAM_GD  = LSNHT[j],
                                  CHAM_MAJ = LSNHT[j+1]),
                               _F(TYPE_CHAM='NOEU_NEUT_R',
                                  CHAM_GD  = LSTHT[j],
                                  CHAM_MAJ = LSTHT[j+1]),
                               _F(TYPE_CHAM='NOEU_NEUT_R',
                                  CHAM_GD  = CHERR[j],
                                  CHAM_MAJ = CHERR[j+1]),),
                       );

      else:

         MeshH[i]=CO('MeshH_%d'%(i))
         LSNH[i]=CO('LSNH_%d'%(i))
         LSTH[i]=CO('LSTH_%d'%(i))

         MACR_ADAP_MAIL(ADAPTATION='RAFF_DERA',
                        MAILLAGE_N=MeH[j],
                        MAILLAGE_NP1=MeshH[i],
                        CHAM_GD=CHERR[infit-1],
                        USAGE_CMP='RELATIF',
                        CRIT_RAFF_ABS=-1*rayon_raff,
                        CRIT_DERA_ABS=-1*rayon_deraff,
                        NIVE_MAX=infit,
                        MAJ_CHAM=(_F(CHAM_GD=LSNHT[j],
                                     TYPE_CHAM='NOEU_NEUT_R',
                                     CHAM_MAJ=LSNH[i],),
                                  _F(CHAM_GD=LSTHT[j],
                                     TYPE_CHAM='NOEU_NEUT_R',
                                     CHAM_MAJ=LSTH[i],),),
                       );

         ModH[i] = AFFE_MODELE(MAILLAGE=MeshH[i],
                               AFFE=(_F(
                               GROUP_MA='Vol',
                               PHENOMENE='MECANIQUE',
                               MODELISATION='3D',),),);

         FISSH[i] = DEFI_FISS_XFEM(MAILLAGE=MeshH[i],
                                   FISS_GRILLE=FISS[i],
                                   DEFI_FISS=_F(CHAM_NO_LSN=LSNH[i],
                                                CHAM_NO_LST=LSTH[i],),
                                   GROUP_MA_ENRI='Vol',);

   DETRUIRE(CONCEPT=_F(NOM=CHERR[0],))

   for j in range(1,infit) :
      DETRUIRE(CONCEPT=_F(NOM=MeH[j],))
      DETRUIRE(CONCEPT=_F(NOM=LSNHT[j],))
      DETRUIRE(CONCEPT=_F(NOM=LSTHT[j],))
      DETRUIRE(CONCEPT=_F(NOM=CHERR[j],))

# STEP 2: CRACKED REFINED MODEL

   MODX[i]=MODI_MODELE_XFEM(MODELE_IN=ModH[i],FISSURE=FISSH[i],INFO=1,);

# STEP 3: CRACK PROPAGATION ON THE REFINED MODEL

   if ( i != (nbcalc-1) ) :

      FISS[i+1] = CO('FISS_%d'%(i+1))

      if ( i == 1 ) :
         PROPA_FISS(MODELE=MODX[i],
                 FISSURE=_F(FISS_ACTUELLE=FISSH[i],
                            FISS_PROPAGEE=FISS[i+1],
                            NB_POINT_FOND=(10,10,10,10),
                            TABLE=SIF40,
                           ),                                
                 METHODE_PROPA='UPWIND',
                 DA_MAX=da,
                 ZONE_MAJ='TOUT',
                 LOI_PROPA=_F(LOI='PARIS',
                              C=1.,
                              M=3.,
                              MATER=Alu),
                 RAYON=4.5,
                 COMP_LINE=_F(COEF_MULT_MINI=0.,
                              COEF_MULT_MAXI=1.,),
                 CRIT_ANGL_BIFURCATION = 'PLAN',
                 INFO=0,
               );

      else:

         PROPA_FISS(MODELE=MODX[i],
                 FISSURE=_F(FISS_ACTUELLE=FISSH[i],
                            FISS_PROPAGEE=FISS[i+1],
                            NB_POINT_FOND=10,
                            TABLE=SIF10,
                           ),
                 METHODE_PROPA='UPWIND',
                 DA_MAX=da,
                 ZONE_MAJ='TOUT',
                 LOI_PROPA=_F(LOI='PARIS',
                              C=1.,
                              M=3.,
                              MATER=Alu),
                 RAYON=4.5,
                 COMP_LINE=_F(COEF_MULT_MINI=0.,
                              COEF_MULT_MAXI=1.,),
                 CRIT_ANGL_BIFURCATION = 'PLAN',
                 INFO=0,
               );

      LSN[i+1]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                        OPERATION='EXTR',
                        FISSURE=FISS[i+1],
                        NOM_CHAM='LNNO',);
      LST[i+1]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                        OPERATION='EXTR',
                        FISSURE=FISS[i+1],
                        NOM_CHAM='LTNO',);

      CHERR[0] = RAFF_XFEM(FISSURE=FISS[i+1])
      DETRUIRE(CONCEPT=_F(NOM=MODX[i],))
      DETRUIRE(CONCEPT=_F(NOM=ModH[i],))

#----------------------------------------------
#         POST TRAITEMENT
#----------------------------------------------

# FISS[1]

# RECUPERATION DE LA TABLE CONTENANT LE NOMBRE DE FONDS DE FISSURE
NB_FOND1=RECU_TABLE(CO=FISS[1],NOM_TABLE='NB_FOND_FISS')

# RECUPERATION DE LA TABLE DES COORDONNEES DES FONDS DE FISSURE
TB_FOND1=RECU_TABLE(CO=FISS[1],NOM_TABLE='FOND_FISS')

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=4,
           VALE_REFE_I=4,
           NOM_PARA='NOMBRE',
           TYPE_TEST='MAX',
           TABLE=NB_FOND1,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-2,
           VALE_CALC=16.0000000007,
           VALE_REFE=16.0,
           NOM_PARA='COOR_Y',
           TYPE_TEST='MAX',
           TABLE=TB_FOND1,)

# FISS[2]

# RECUPERATION DE LA TABLE CONTENANT LE NOMBRE DE FONDS DE FISSURE
NB_FOND2=RECU_TABLE(CO=FISS[2],NOM_TABLE='NB_FOND_FISS')

# RECUPERATION DE LA TABLE DES COORDONNEES DES FONDS DE FISSURE
TB_FOND2=RECU_TABLE(CO=FISS[2],NOM_TABLE='FOND_FISS')

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=1,
           VALE_REFE_I=1,
           NOM_PARA='NOMBRE',
           TYPE_TEST='MAX',
           TABLE=NB_FOND2,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC=28.0,
           VALE_REFE=28.0,
           NOM_PARA='COOR_Y',
           TYPE_TEST='MAX',
           TABLE=TB_FOND2,)

FIN();
