# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# MODELISATION 3D   (10 MAILLES HEXA20)
#======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))

MA=LIRE_MAILLAGE(FORMAT="ASTER",)

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(MAILLE='M1',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='DKT',),
                     )

CAEL=AFFE_CARA_ELEM(MODELE=MO,
                    COQUE=_F(MAILLE='M1',
                             EPAIS=1.,),
                    )

ACIER=DEFI_MATERIAU(ELAS=_F(E=30000.0E6,
                            NU=0.2,),
                    BETON_REGLE_PR=_F(D_SIGM_EPSI=-10000.0E6,
                                       SYT=3.0E6,
                                       SYC=30.0E6,
                                       EPSC=1.E-3,
                                       N=2.),)

MATER=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(MAILLE='M1',
                            MATER=ACIER,),)

CHAR0=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=(_F(NOEUD=('N1','N2','N3','N4',),
                                  DZ=0.0,
                                  DRX=0.0,
                                  DRY=0.0,
                                  DRZ=0.0,),
                               _F(NOEUD='N1',
                                  DX=0.0,
                                  DY=0.0,),
                               _F(NOEUD='N2',
                                  DX=0.0,),
                               _F(NOEUD='N4',
                                  DY=0.0,),
                                  ),)

CHAR=AFFE_CHAR_MECA(MODELE=MO,
                    DDL_IMPO=(_F(NOEUD=('N2','N3',),
                                 DY=-1.0,),
                              _F(NOEUD=('N3','N4',),
                                 DX=0.1,),),)

INST=DEFI_LIST_REEL(DEBUT=0.0,
                    INTERVALLE=(_F(JUSQU_A=1.0,
                                   NOMBRE=1,),
                                _F(JUSQU_A=10.0,
                                   NOMBRE=90,),),)

RAMPE1=DEFI_FONCTION(NOM_PARA='INST',
                     VALE=( 0.0 , 0.0000,
                            1.0 , 0.0001,
                            10. , 0.0020,),)

RESU=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=MATER,
                   CARA_ELEM=CAEL,
                   EXCIT=(_F(CHARGE=CHAR0,),
                          _F(CHARGE=CHAR,
                             FONC_MULT=RAMPE1,),),
                   COMPORTEMENT=_F(RELATION='BETON_REGLE_PR',
                                MAILLE='M1',),
                   INCREMENT=_F(LIST_INST=INST,),
                   NEWTON=_F(REAC_ITER=1,),)

RESU=CALC_CHAMP(reuse =RESU,



               RESULTAT=RESU,
               TOUT_ORDRE='OUI',
               TOUT='OUI',
                CONTRAINTE=('EFGE_ELNO'),)

RESU=CALC_CHAMP(reuse =RESU,
             RESULTAT=RESU,
             FORCE=('FORC_NODA','REAC_NODA'),


             )

TEST_RESU(RESU=_F(INST=4.5999999999999996,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU,
                  NOM_CHAM='FORC_NODA',
                  NOEUD='N4',
                  NOM_CMP='DX',
                  VALE_CALC= 1.29000000E+06,
                  VALE_REFE=1.290000E6,
                  CRITERE='RELATIF',
                  PRECISION=9.9999999999999995E-07,),
          )

TEST_RESU(RESU=_F(INST=4.5999999999999996,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU,
                  NOM_CHAM='FORC_NODA',
                  NOEUD='N2',
                  NOM_CMP='DY',
                  VALE_CALC=-1.47060000E+07,
                  VALE_REFE=-1.4706000E7,
                  CRITERE='RELATIF',
                  PRECISION=9.9999999999999995E-07,),
          )

TEST_RESU(RESU=_F(INST=10.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU,
                  NOM_CHAM='FORC_NODA',
                  NOEUD='N4',
                  NOM_CMP='DX',
                  VALE_CALC= 1.00000000E+06,
                  VALE_REFE=1.E6,
                  CRITERE='RELATIF',
                  PRECISION=9.9999999999999995E-07,),
          )

TEST_RESU(RESU=_F(INST=10.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU,
                  NOM_CHAM='FORC_NODA',
                  NOEUD='N2',
                  NOM_CMP='DY',
                  VALE_CALC=-1.50000000E+07,
                  VALE_REFE=-1.5000000E7,
                  CRITERE='RELATIF',
                  PRECISION=9.9999999999999995E-07,),
          )
# même calcul en matrice sécante
# cet ajout n'est volontairement pas décrit dans la doc

RESU_SEC=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=MATER,
                   CARA_ELEM=CAEL,
                   EXCIT=(_F(CHARGE=CHAR0,),
                          _F(CHARGE=CHAR,
                             FONC_MULT=RAMPE1,),),
                   COMPORTEMENT=_F(RELATION='BETON_REGLE_PR',
                                MAILLE='M1',),
                   INCREMENT=_F(LIST_INST=INST,),
                   NEWTON=_F(REAC_ITER_ELAS=1, PAS_MINI_ELAS=100),)

RESU_SEC=CALC_CHAMP(reuse =RESU_SEC,



               RESULTAT=RESU_SEC,
               TOUT_ORDRE='OUI',
               TOUT='OUI',
                CONTRAINTE=('EFGE_ELNO'),)

RESU_SEC=CALC_CHAMP(reuse =RESU_SEC,
             RESULTAT=RESU_SEC,
             FORCE=('FORC_NODA','REAC_NODA'),


             )

TEST_RESU(RESU=_F(INST=4.5999999999999996,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU_SEC,
                  NOM_CHAM='FORC_NODA',
                  NOEUD='N4',
                  NOM_CMP='DX',
                  VALE_CALC= 1.29000000E+06,
                  VALE_REFE=1.290000E6,
                  CRITERE='RELATIF',
                  PRECISION=9.9999999999999995E-07,),
          )

TEST_RESU(RESU=_F(INST=4.5999999999999996,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU_SEC,
                  NOM_CHAM='FORC_NODA',
                  NOEUD='N2',
                  NOM_CMP='DY',
                  VALE_CALC=-1.47060000E+07,
                  VALE_REFE=-1.4706000E7,
                  CRITERE='RELATIF',
                  PRECISION=9.9999999999999995E-07,),
          )

TEST_RESU(RESU=_F(INST=10.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU_SEC,
                  NOM_CHAM='FORC_NODA',
                  NOEUD='N4',
                  NOM_CMP='DX',
                  VALE_CALC= 1.00000000E+06,
                  VALE_REFE=1.E6,
                  CRITERE='RELATIF',
                  PRECISION=9.9999999999999995E-07,),
          )

TEST_RESU(RESU=_F(INST=10.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=RESU_SEC,
                  NOM_CHAM='FORC_NODA',
                  NOEUD='N2',
                  NOM_CMP='DY',
                  VALE_CALC=-1.50000000E+07,
                  VALE_REFE=-1.5000000E7,
                  CRITERE='RELATIF',
                  PRECISION=9.9999999999999995E-07,),
          )


FIN()
