# TITRE FLAMBEMENT NON LINEAIRE POUTRE EN L
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

# ON VERIFIE AUSSI L'INTER-OPERABILITE DU CALCUL MODAL DE CRIT_STAB
# AVEC LES TROIS SOLVEURS DIRECTS DISPONIBLES: LDLT, MULT_FRONT ET MUMPS

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))

mail=LIRE_MAILLAGE();

modele=AFFE_MODELE(MAILLAGE=mail,
                   AFFE=_F(TOUT='OUI',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='POU_D_E',),);

cara_pou=AFFE_CARA_ELEM(MODELE=modele,
                        POUTRE=_F(GROUP_MA='POUT',
                                  SECTION='RECTANGLE',
                                  CARA=('HY','HZ',),
                                  VALE=(30.0,0.6,),),);

alu=DEFI_MATERIAU(ELAS=_F(E=71240,
                          NU=0.3,),);

ch_mat=AFFE_MATERIAU(MAILLAGE=mail,
                     AFFE=_F(TOUT='OUI',
                             MATER=alu,),);

encast=AFFE_CHAR_MECA(MODELE=modele,
                      DDL_IMPO=_F(GROUP_NO='A',
                                  DX=0.0,
                                  DY=0.0,
                                  DZ=0.0,
                                  DRX=0.0,
                                  DRY=0.0,
                                  DRZ=0.0,),);

fonc=DEFI_FONCTION(NOM_PARA='INST',
                   VALE=(0.0,0.0,1.0,1.0,),);

list0=DEFI_LIST_REEL(DEBUT=0.0,
                    INTERVALLE=_F(JUSQU_A=1.0,
                                  NOMBRE=10,),);
list=DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = list0,),
                    ECHEC=_F(EVENEMENT='INSTABILITE',ACTION='CONTINUE',),);


effort=AFFE_CHAR_MECA(MODELE=modele,
                      FORCE_NODALE=_F(GROUP_NO='C',
                                      FX=1,),);

res=STAT_NON_LINE(MODELE=modele,
                  CHAM_MATER=ch_mat,
                  CARA_ELEM=cara_pou,
                  EXCIT=(_F(CHARGE=encast,),
                         _F(CHARGE=effort,
                            FONC_MULT=fonc,),),
                  COMPORTEMENT=_F(RELATION='ELAS',
                               DEFORMATION='PETIT',),
                  INCREMENT=_F(LIST_INST=list,),
                  NEWTON=_F(MATRICE='TANGENTE',),
                  CRIT_STAB=_F(CHAR_CRIT=(-2.,0.),),
                  );

TEST_RESU(RESU=_F(PARA='CHAR_CRIT',
                  INST=1.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=res,
                  VALE_CALC=-1.086655673,
                  VALE_REFE=-1.0880000000000001,
                  PRECISION=0.02,),
          )

effort2=AFFE_CHAR_MECA(MODELE=modele,
                      FORCE_NODALE=_F(GROUP_NO='C',
                                      FX=-1,),);

res2L=STAT_NON_LINE(MODELE=modele,
                  CHAM_MATER=ch_mat,
                  CARA_ELEM=cara_pou,
                  EXCIT=(_F(CHARGE=encast,),
                         _F(CHARGE=effort2,
                            FONC_MULT=fonc,),),
                  COMPORTEMENT=_F(RELATION='ELAS',
                               DEFORMATION='PETIT',),
                  INCREMENT=_F(LIST_INST=list,),
                  NEWTON=_F(MATRICE='TANGENTE',),
                  SOLVEUR=_F(METHODE='LDLT'),
                  CRIT_STAB=_F(CHAR_CRIT=(-1., 0.),),
                  );

res2F=STAT_NON_LINE(MODELE=modele,
                  CHAM_MATER=ch_mat,
                  CARA_ELEM=cara_pou,
                  EXCIT=(_F(CHARGE=encast,),
                         _F(CHARGE=effort2,
                            FONC_MULT=fonc,),),
                  COMPORTEMENT=_F(RELATION='ELAS',
                               DEFORMATION='PETIT',),
                  INCREMENT=_F(LIST_INST=list,),
                  NEWTON=_F(MATRICE='TANGENTE',),
                  SOLVEUR=_F(METHODE='MULT_FRONT'),
                  CRIT_STAB=_F(CHAR_CRIT=(-1., 0.),),
                  );
res2M=STAT_NON_LINE(MODELE=modele,
                  CHAM_MATER=ch_mat,
                  CARA_ELEM=cara_pou,
                  EXCIT=(_F(CHARGE=encast,),
                         _F(CHARGE=effort2,
                            FONC_MULT=fonc,),),
                  COMPORTEMENT=_F(RELATION='ELAS',
                               DEFORMATION='PETIT',),
                  INCREMENT=_F(LIST_INST=list,),
                  NEWTON=_F(MATRICE='TANGENTE',),
                  SOLVEUR=_F(METHODE='MUMPS'),
                  CRIT_STAB=_F(CHAR_CRIT=(-1., 0.),),
                  );
TEST_RESU(RESU=(_F(PARA='CHAR_CRIT',
                   INST=1.0,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=res2L,
                   VALE_CALC=-0.679830918,
                   VALE_REFE=-0.68000000000000005,
                   PRECISION=0.02,),
                _F(PARA='CHAR_CRIT',
                   INST=1.0,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=res2F,
                   VALE_CALC=-0.679830918,
                   VALE_REFE=-0.68000000000000005,
                   PRECISION=0.02,),
                _F(PARA='CHAR_CRIT',
                   INST=1.0,
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=res2M,
                   VALE_CALC=-0.679830918,
                   VALE_REFE=-0.68000000000000005,
                   PRECISION=0.02,),
                ),
          )

FIN();
