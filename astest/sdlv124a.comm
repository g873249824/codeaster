# MODIF  DATE 08/11/2005   AUTEUR CIBHHLV L.VIVAN 
# TITRE PAVE SOUS PRESSION SINUS COMPARAISON ENTRE TRANSITOIRE ET HARMONIQUE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
import Numeric
from Numeric import size,asarray

DEBUT(CODE=_F( NOM = 'SDLV124A',NIV_PUB_WEB='INTERNET'),
      PAR_LOT='NON');

# Definition des parametres de l'excitation sinusoidale
freq=1500.0
periode=1.0/freq
pas=periode/100.0

# definition du sinus
SINOMEGT = FORMULE(NOM_PARA='INST',VALE='sin(2*Numeric.pi*freq*INST)')

# construction de l'excitation
LIEXCIT=DEFI_LIST_REEL(DEBUT=0.,
                       INTERVALLE=_F(JUSQU_A = 102.0*periode, PAS = pas) )


#######################################################
# DEBUT CLASSIQUE D'UNE ETUDE
#######################################################

MAYA=LIRE_MAILLAGE();
                    
MAYA=DEFI_GROUP(reuse=MAYA,
                MAILLAGE=MAYA,
                CREA_GROUP_NO=_F(NOEUD='N994',
                                 NOM='TOTO',),);
                                   
MODEL=AFFE_MODELE(MAILLAGE=MAYA,
                  AFFE=_F(TOUT='OUI',
                          PHENOMENE='MECANIQUE',
                          MODELISATION='3D',),);

MAYA=MODI_MAILLAGE(reuse=MAYA,
                     MAILLAGE=MAYA,
                      ORIE_PEAU_3D=_F(GROUP_MA=('GM1',
                      'GM2','GM3','GM4','GM5','GM6'),),
                      MODELE=MODEL,);

ACIER=DEFI_MATERIAU(ELAS=_F(E=180000000000.0,
                            NU=0.3,
                            RHO=7800.0,
                            AMOR_ALPHA=3.E-5,
                            AMOR_BETA=0.001,
                            ),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAYA,
                    AFFE=_F(GROUP_MA=('GM7',),
                            MATER=ACIER,),);

CHARLAGR=AFFE_CHAR_MECA(MODELE=MODEL,
                      DDL_IMPO=_F(GROUP_MA=('GM1','GM2','GM3','GM4',),
                                  DX=0.0,
                                  DY=0.0,
                                  DZ=0.0,),);

PRES=AFFE_CHAR_MECA(MODELE=MODEL,
                     PRES_REP=_F(GROUP_MA='GM5',
                                     PRES=1.0E5,),);
                                     
KELEM=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                     MODELE=MODEL,
                     CHAM_MATER=CHMAT,
                     CHARGE=CHARLAGR,
                     );

MELEM=CALC_MATR_ELEM(OPTION='MASS_MECA',
                     MODELE=MODEL,
                     CHARGE=CHARLAGR,
                     CHAM_MATER=CHMAT,);

CELEM=CALC_MATR_ELEM(OPTION='AMOR_MECA',
                     MODELE=MODEL,
                     CHAM_MATER=CHMAT,
                     CHARGE=CHARLAGR,
                     RIGI_MECA=KELEM,
                     MASS_MECA=MELEM);

FELEM=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                     CHARGE=PRES,);
                     
NUME=NUME_DDL(MATR_RIGI=KELEM,
              METHODE='MULT_FRONT',
              RENUM='METIS',);

KASS=ASSE_MATRICE(MATR_ELEM=KELEM,
                  NUME_DDL=NUME,
                  );

MASS=ASSE_MATRICE(MATR_ELEM=MELEM,
                  NUME_DDL=NUME,
                  );

CASS=ASSE_MATRICE(MATR_ELEM=CELEM,
                  NUME_DDL=NUME,
                  );

FASS=ASSE_VECTEUR(VECT_ELEM=FELEM,
                  NUME_DDL=NUME,);

MODES=MODE_ITER_SIMULT(MATR_A=KASS,
                       MATR_B=MASS,
                       CALC_FREQ=_F(
                       NMAX_FREQ=15,),
                       VERI_MODE=_F(STOP_ERREUR='OUI',
                                    STURM='OUI',),);
               

#######################################################
# DEFINITION DES LISTES D'INSTANTS POUR CALCUL TEMPOREL
#######################################################
LISTTM=DEFI_LIST_REEL(DEBUT=0.0*periode,
                       INTERVALLE=_F(JUSQU_A=100.0*periode,
                                     PAS=pas,),);

LISTRD=DEFI_LIST_REEL(DEBUT=(98.0)*periode+pas,
                       INTERVALLE=_F(JUSQU_A=(100.0)*periode,
                                     PAS=pas,),);

# Creation de la liste des pas d'archivage
archsize=size(LISTRD.Valeurs())
archfin=size(LISTTM.Valeurs())
archinit=archfin-archsize

LISTARCH=DEFI_LIST_ENTI(DEBUT=archinit,
                       INTERVALLE=_F(JUSQU_A=archfin,
                                     PAS=1,),);

#######################################################
# CALCUL DYNAMIQUE TEMPOREL SUR BASE PHYSIQUE
#######################################################

DYNATRAN=DYNA_LINE_TRAN(NEWMARK=_F(),
                       MATR_MASS=MASS,
                       MATR_RIGI=KASS,
                       MATR_AMOR=CASS,
                       EXCIT=_F(VECT_ASSE=FASS,
                                    FONC_MULT = SINOMEGT,
                        ),
                       INCREMENT=_F(LIST_INST = LISTTM),
                       ARCHIVAGE=_F(LIST_ARCH=LISTARCH,
                                    ),
                                    );

DYNATRAN=CALC_ELEM(reuse =DYNATRAN,
               MODELE=MODEL,
               CHAM_MATER=CHMAT,
               RESULTAT=DYNATRAN,
               MAILLE = 'M1145',
                LIST_INST = LISTRD,
                PRECISION=1.E-6,
               CRITERE='ABSOLU',
               OPTION=(
                        'SIEF_ELGA_DEPL',
                        'SIEF_ELNO_ELGA',
                        'SIGM_ELNO_DEPL',
                         'EPSI_ELNO_DEPL',
                         'EPSI_ELGA_DEPL',
                         'EPOT_ELEM_DEPL',
                         'ECIN_ELEM_DEPL',
                         'ENEL_ELGA',
                         'ENEL_ELNO_ELGA',
                       ),
               );
               

#######################################################
# PROJECTION SUR BASE MODALE DES MATRICES ET VECTEURS
#######################################################
NUMDIAG=NUME_DDL_GENE(BASE=MODES,
                      STOCKAGE='DIAG',);

KDIAG=PROJ_MATR_BASE(BASE=MODES,
                     NUME_DDL_GENE=NUMDIAG,
                     MATR_ASSE=KASS,);

MDIAG=PROJ_MATR_BASE(BASE=MODES,
                     NUME_DDL_GENE=NUMDIAG,
                     MATR_ASSE=MASS,);

CDIAG=PROJ_MATR_BASE(BASE=MODES,
                     NUME_DDL_GENE=NUMDIAG,
                     MATR_ASSE=CASS,);

FDIAG=PROJ_VECT_BASE(BASE=MODES,
                    NUME_DDL_GENE=NUMDIAG,
                    VECT_ASSE=FASS,);


#######################################################
# CALCUL HARMONIQUE SUR BASE PHYSIQUE
#######################################################
DYNHASS=DYNA_LINE_HARM(MATR_MASS=MASS,
                    MATR_RIGI=KASS,
                    MATR_AMOR=CASS,
                    FREQ=freq,
                    EXCIT=_F(VECT_ASSE=FASS,
                             COEF_MULT=1.,),
                             );
                             
DYNHASS=CALC_ELEM(reuse =DYNHASS,
               MODELE=MODEL,
               CHAM_MATER=CHMAT,
               MAILLE = 'M1145',
               RESULTAT=DYNHASS,
               TOUT_ORDRE='OUI',
               CRITERE='ABSOLU',
               OPTION=(
                        'SIEF_ELGA_DEPL',
                        'SIEF_ELNO_ELGA',
                        'SIGM_ELNO_DEPL',
                         'EPSI_ELNO_DEPL',
                         'EPSI_ELGA_DEPL',
                         'EPOT_ELEM_DEPL',
                         'ECIN_ELEM_DEPL',
                         'ENEL_ELGA',
                         'ENEL_ELNO_ELGA',
                       ),
          );


#######################################################
# CALCUL HARMONIQUE SUR BASE MODALE
#######################################################
DYNHGEN=DYNA_LINE_HARM(MATR_MASS=MDIAG,
                    MATR_RIGI=KDIAG,
                    MATR_AMOR=CDIAG,
                    FREQ=freq,
                    EXCIT=_F(VECT_ASSE=FDIAG,
                             COEF_MULT=1.,),
                             );


#######################################################
# CALCUL DYNAMIQUE TEMPOREL SUR BASE MODALE
#######################################################
DYNTGEN=DYNA_TRAN_MODAL(  METHODE='NEWMARK',
                           MASS_GENE=MDIAG,  
                           RIGI_GENE=KDIAG,
                           AMOR_GENE=CDIAG,
                           EXCIT=_F(VECT_GENE = FDIAG,
                                    FONC_MULT = SINOMEGT,
                                    ),
                             INCREMENT=
                              _F( 
                               INST_INIT = 0.0*periode,
                               INST_FIN = 100.0*periode,
                               PAS = pas),
                             );

DYNTPHY=REST_BASE_PHYS(RESU_GENE=DYNTGEN,    
                       PRECISION=1.E-7,
                       LIST_INST=LISTRD,
                       NOM_CHAM=('DEPL','VITE','ACCE'),
                       INTERPOL='LIN',
                                 );

DYNTPHY=CALC_ELEM(reuse =DYNTPHY,
               MODELE=MODEL,
               CHAM_MATER=CHMAT,
               RESULTAT=DYNTPHY,
                LIST_INST = LISTRD,
                PRECISION=1.E-6,
               CRITERE='ABSOLU',
               MAILLE = 'M1145',
               OPTION=(
                        'SIEF_ELGA_DEPL',
                        'SIEF_ELNO_ELGA',
                        'SIGM_ELNO_DEPL',
                         'EPSI_ELNO_DEPL',
                         'EPSI_ELGA_DEPL',
                         'EPOT_ELEM_DEPL',
                         'ECIN_ELEM_DEPL',
                         'ENEL_ELGA',
                         'ENEL_ELNO_ELGA',
                       ),
               );
               

DYNHPHY=REST_BASE_PHYS(RESU_GENE=DYNHGEN,
                       NOM_CHAM=('DEPL','VITE','ACCE'),
                       FREQ=freq,);


DYNHPHY=CALC_ELEM(reuse =DYNHPHY,
               MODELE=MODEL,
               CHAM_MATER=CHMAT,
               
               RESULTAT=DYNHPHY,
               TOUT_ORDRE='OUI',
               MAILLE = 'M1145',
               CRITERE='ABSOLU',
               OPTION=(
                        'SIEF_ELGA_DEPL',
                        'SIEF_ELNO_ELGA',
                        'SIGM_ELNO_DEPL',
                         'EPSI_ELNO_DEPL',
                         'EPSI_ELGA_DEPL',
                         'EPOT_ELEM_DEPL',
                         'ECIN_ELEM_DEPL',
                         'ENEL_ELGA',
                         'ENEL_ELNO_ELGA',
                       ),
                     );



#########################################################
# RECUPERATION DES DEPLACEMENTS EN UN POINT DES RESULTATS
# PHYSIQUES
#########################################################

# resultats temporels
DTX1=RECU_FONCTION (RESULTAT = DYNATRAN,
                    NOM_CMP = 'DX',
                    NOEUD = 'N433',
                    NOM_CHAM = 'DEPL',
                    TOUT_ORDRE = 'OUI',
                    );

DTX2=RECU_FONCTION (   RESULTAT = DYNTPHY,
                          NOM_CMP = 'DX',
                          NOEUD = 'N433',
                          NOM_CHAM = 'DEPL',
                          TOUT_ORDRE = 'OUI',
                          );

# resultats harmonique
DHX1=RECU_FONCTION (   RESULTAT = DYNHASS,
                      NOM_CMP = 'DX',
                      NOEUD = 'N433',
                      NOM_CHAM = 'DEPL',
                      TOUT_ORDRE = 'OUI');

DHX2=RECU_FONCTION (   RESULTAT = DYNHPHY,
                      NOM_CMP = 'DX',
                      NOEUD = 'N433',
                      NOM_CHAM = 'DEPL',
                      TOUT_ORDRE = 'OUI');
                                            
# CALCUL DE LA VALEUR MAX SUR N PERIODE
DHX11=CALC_FONCTION(EXTRACTION=_F(FONCTION=DHX1,PARTIE='MODULE'),);
DHX21=CALC_FONCTION(EXTRACTION=_F(FONCTION=DHX2,PARTIE='MODULE'),);

DTX11=CALC_FONCTION(ABS=_F(FONCTION=DTX1),);
DTX21=CALC_FONCTION(ABS=_F(FONCTION=DTX2),);

DTX111=INFO_FONCTION(MAX=_F(FONCTION=DTX11));                      
DTX211=INFO_FONCTION(MAX=_F(FONCTION=DTX21));                      

valtmp1=DTX111.EXTR_TABLE();
valtmp2=DTX211.EXTR_TABLE();

test1=valtmp1.Array('INST','DX')[1][1]
test2=valtmp2.Array('INST','DX')[1][1]

# TEST DE LA VALEUR HARMONIQUE / VALEUR TEMPORELLE
TEST_FONCTION(VALEUR=_F(FONCTION=DHX11,
                        NOM_PARA='FREQ',
                        VALE_PARA=freq,
                        VALE_REFE=test1,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=0.01)
              );

# TEST DES VALEURS HARMONIQUES GENERALISEES / PHYSIQUE
TEST_FONCTION(VALEUR=(
                     _F(FONCTION=DHX21,
                        NOM_PARA='FREQ',
                        VALE_PARA=DHX11.Absc(),
                        VALE_REFE=DHX11.Ordo(),
                        REFERENCE='ANALYTIQUE',
                        PRECISION=0.01),
                        ),
              );


#########################################################
# RECUPERATION DE LA CONTRAINTE AUX POINTS DE GAUSS  
# EN UNE MAILLE DES RESULTATS PHYSIQUES
#########################################################

SIT1=RECU_FONCTION (RESULTAT = DYNATRAN,
                    NOM_CMP = 'SIXX',
                    MAILLE = 'M1145',
                    POINT=1,
                    NOM_CHAM = 'SIEF_ELGA_DEPL',
                    TOUT_ORDRE = 'OUI',
                    );
                      
SIH1=RECU_FONCTION (RESULTAT = DYNHASS,
                    NOM_CMP = 'SIXX',
                    MAILLE = 'M1145',
                    POINT=1,
                    NOM_CHAM = 'SIEF_ELGA_DEPL',
                    TOUT_ORDRE = 'OUI');
                      
# CALCUL DE LA VALEUR MAX SUR N PERIODE
SIH11=CALC_FONCTION(EXTRACTION=_F(FONCTION=SIH1,PARTIE='MODULE'),);

SIT11=CALC_FONCTION(ABS=_F(FONCTION=SIT1),);
SIT111=INFO_FONCTION(MAX=_F(FONCTION=SIT11));                      

valtmp3=SIT111.EXTR_TABLE();

test3=valtmp3.Array('INST','SIXX')[1][1]

# TEST DE LA VALEUR HARMONIQUE / VALEUR TEMPORELLE
TEST_FONCTION(VALEUR=_F(FONCTION=SIH11,
                        NOM_PARA='FREQ',
                        VALE_PARA=freq,
                        VALE_REFE=test3,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=0.01)
              );

#########################################################
# RECUPERATION DE LA CONTRAINTE AUX NOEUDS  
# EN UNE MAILLE DES RESULTATS PHYSIQUES
#########################################################

SET1=RECU_FONCTION (RESULTAT = DYNATRAN,
                    NOM_CMP = 'SIXX',
                    MAILLE = 'M1145',
                    NOEUD='N627',
                    NOM_CHAM = 'SIEF_ELNO_ELGA',
                    TOUT_ORDRE = 'OUI',
                    );
                      
SEH1=RECU_FONCTION (RESULTAT = DYNHASS,
                    NOM_CMP = 'SIXX',
                    MAILLE = 'M1145',
                    NOEUD='N627',
                    NOM_CHAM = 'SIEF_ELNO_ELGA',
                    TOUT_ORDRE = 'OUI');
                      
# CALCUL DE LA VALEUR MAX SUR N PERIODE
SEH11=CALC_FONCTION(EXTRACTION=_F(FONCTION=SEH1,PARTIE='MODULE'),);

SET11=CALC_FONCTION(ABS=_F(FONCTION=SET1),);
SET111=INFO_FONCTION(MAX=_F(FONCTION=SET11));                      

valtmp4=SET111.EXTR_TABLE();

test4=valtmp4.Array('INST','SIXX')[1][1]

# TEST DE LA VALEUR HARMONIQUE / VALEUR TEMPORELLE
TEST_FONCTION(VALEUR=_F(FONCTION=SEH11,
                        NOM_PARA='FREQ',
                        VALE_PARA=freq,
                        VALE_REFE=test4,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=0.01)
              );

#########################################################
# RECUPERATION DE LA DEFORMATION AUX NOEUDS  
# EN UNE MAILLE DES RESULTATS PHYSIQUES
#########################################################

EPT1=RECU_FONCTION (RESULTAT = DYNATRAN,
                    NOM_CMP = 'EPXX',
                    MAILLE = 'M1145',
                    NOEUD='N627',
                    NOM_CHAM = 'EPSI_ELNO_DEPL',
                    TOUT_ORDRE = 'OUI',
                    );
                      
EPH1=RECU_FONCTION (RESULTAT = DYNHASS,
                    NOM_CMP = 'EPXX',
                    MAILLE = 'M1145',
                    NOEUD='N627',
                    NOM_CHAM = 'EPSI_ELNO_DEPL',
                    TOUT_ORDRE = 'OUI');
                      
# CALCUL DE LA VALEUR MAX SUR N PERIODE
EPH11=CALC_FONCTION(EXTRACTION=_F(FONCTION=EPH1,PARTIE='MODULE'),);

EPT11=CALC_FONCTION(ABS=_F(FONCTION=EPT1),);
EPT111=INFO_FONCTION(MAX=_F(FONCTION=EPT11));                      

valtmp5=EPT111.EXTR_TABLE();

test5=valtmp5.Array('INST','EPXX')[1][1]

# TEST DE LA VALEUR HARMONIQUE / VALEUR TEMPORELLE
TEST_FONCTION(VALEUR=_F(FONCTION=EPH11,
                        NOM_PARA='FREQ',
                        VALE_PARA=freq,
                        VALE_REFE=test5,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=0.01)
              );

#########################################################
# RECUPERATION DE LA DEFORMATION AUX NOEUDS  
# EN UNE MAILLE DES RESULTATS PHYSIQUES
#########################################################

EGT1=RECU_FONCTION (RESULTAT = DYNATRAN,
                    NOM_CMP = 'EPXX',
                    MAILLE = 'M1145',
                    POINT=1,
                    NOM_CHAM = 'EPSI_ELGA_DEPL',
                    TOUT_ORDRE = 'OUI',
                    );
                      
EGH1=RECU_FONCTION (RESULTAT = DYNHASS,
                    NOM_CMP = 'EPXX',
                    MAILLE = 'M1145',
                    POINT=1,
                    NOM_CHAM = 'EPSI_ELGA_DEPL',
                    TOUT_ORDRE = 'OUI');
                      
# CALCUL DE LA VALEUR MAX SUR N PERIODE
EGH11=CALC_FONCTION(EXTRACTION=_F(FONCTION=EGH1,PARTIE='MODULE'),);

EGT11=CALC_FONCTION(ABS=_F(FONCTION=EGT1),);
EGT111=INFO_FONCTION(MAX=_F(FONCTION=EGT11));                      

valtmp6=EGT111.EXTR_TABLE();

test6=valtmp6.Array('INST','EPXX')[1][1]

# TEST DE LA VALEUR HARMONIQUE / VALEUR TEMPORELLE
TEST_FONCTION(VALEUR=_F(FONCTION=EGH11,
                        NOM_PARA='FREQ',
                        VALE_PARA=freq,
                        VALE_REFE=test6,
                        REFERENCE='ANALYTIQUE',
                        PRECISION=0.01)
              );

FIN();
