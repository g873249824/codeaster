# TITRE TP DYNAMIQUE LINEAIRE - CORRECTION STATIQUE
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# person_in_charge: emmanuel.boyere at edf.fr
#-----------------------------------------------------------------------
#

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

tfin = 0.5;

pa = 0.002;

fc = 15.0;

om = ((2.0 * pi) * fc);

E = 200.E9;

rho = 8000.0;

nu = 0.3;


MAIL=LIRE_MAILLAGE(UNITE=20,
                   FORMAT='MED',);

MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=_F(GROUP_MA='VOL',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='3D',),);

MAT=DEFI_MATERIAU(ELAS=_F(E=E,
                          NU=nu,
                          RHO=rho,),)

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(GROUP_MA='VOL',
                            MATER=MAT,),);

TAMAS=POST_ELEM(MASS_INER=_F(TOUT='OUI',),
                MODELE=MODELE,
                CHAM_MATER=CHMAT,);

IMPR_TABLE(TABLE=TAMAS,);

BLOCAGE=AFFE_CHAR_MECA(MODELE=MODELE,
                       DDL_IMPO=_F(GROUP_MA='ENCAS',
                                   LIAISON='ENCASTRE',),);

ASSEMBLAGE(MODELE=MODELE,
           CHAM_MATER=CHMAT,
           CHARGE=BLOCAGE,
           NUME_DDL=CO('NUMEDDL'),
           MATR_ASSE=(_F(MATRICE=CO('RIGIDITE'),
                         OPTION='RIGI_MECA',),
                      _F(MATRICE=CO('MASSE'),
                         OPTION='MASS_MECA',),),);

MODES=CALC_MODES(MATR_RIGI=RIGIDITE,
                 OPTION='BANDE',
                 CALC_FREQ=_F(FREQ=(0,50.0,),
                              ),
                 MATR_MASS=MASSE,
                 )

MODES=NORM_MODE(reuse =MODES,
                MODE=MODES,
                NORME='MASS_GENE',);

MODEE=EXTR_MODE(FILTRE_MODE=_F(MODE=MODES,
                               FREQ_MIN=0.0,
                               FREQ_MAX=100.0,),
                IMPRESSION=_F(CUMUL='OUI',),);

MODEF=EXTR_MODE(FILTRE_MODE=_F(MODE=MODES,
                               FREQ_MIN=0.0,
                               FREQ_MAX=(4.0 * fc),),
                IMPRESSION=_F(CUMUL='OUI',),);

GRAV=AFFE_CHAR_MECA(MODELE=MODELE,
                    PESANTEUR=_F(GRAVITE=300.,
                                 DIRECTION=(-1.,0,1,),),);

PESELEM=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                       CHARGE=GRAV,
                       CHAM_MATER=CHMAT,);

PESA=ASSE_VECTEUR(VECT_ELEM=PESELEM,
                  NUME_DDL=NUMEDDL,);

PROJ_BASE(BASE=MODEF,
          STOCKAGE='DIAG',
          MATR_ASSE_GENE=(_F(MATRICE=CO('MASPRO'),
                             MATR_ASSE=MASSE,),
                          _F(MATRICE=CO('RIGPRO'),
                             MATR_ASSE=RIGIDITE,),),
          VECT_ASSE_GENE=_F(VECTEUR=CO('PESPRO'),
                            VECT_ASSE=PESA,),);

CORGRA=MACRO_ELAS_MULT(MODELE=MODELE,
                       CHAM_MATER=CHMAT,
                       CHAR_MECA_GLOBAL=BLOCAGE,
                       CAS_CHARGE=_F(NOM_CAS='grav',
                                     CHAR_MECA=GRAV,),);

sinom = FORMULE(VALE='sin(om*INST)',
                NOM_PARA='INST',);

dsinom = FORMULE(VALE='om*cos(om*INST)',
                 NOM_PARA='INST',);

d2sinom = FORMULE(VALE='-om**2*sin(om*INST)',
                  NOM_PARA='INST',);

TRANGENE= DYNA_VIBRA(TYPE_CALCUL='TRAN', BASE_CALCUL='GENE',
                     SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',),
                     MATR_MASS=MASPRO,
                     MATR_RIGI=RIGPRO,
                     VITE_ROTA=0.0,
                     INCREMENT=_F(PAS=pa,
                                  INST_FIN=tfin,),
                     EXCIT=_F(VECT_ASSE_GENE=PESPRO,
                              FONC_MULT=sinom,
                              CORR_STAT='OUI',
                              D_FONC_DT=dsinom,
                              D_FONC_DT2=d2sinom,),
                     MODE_CORR=CORGRA,);


DEPLPDZ=RECU_FONCTION(RESU_GENE=TRANGENE,
                      NOM_CHAM='DEPL',
                      NOM_CMP='DZ',
                      GROUP_NO='P',);

DEPLPDZc=RECU_FONCTION(RESU_GENE=TRANGENE,
                       NOM_CHAM='DEPL',
                       NOM_CMP='DZ',
                       GROUP_NO='P',
                       CORR_STAT='OUI',);

DEPLPDX=RECU_FONCTION(RESU_GENE=TRANGENE,
                      NOM_CHAM='DEPL',
                      NOM_CMP='DX',
                      GROUP_NO='P',)

DEPLPDXc=RECU_FONCTION(RESU_GENE=TRANGENE,
                       NOM_CHAM='DEPL',
                       NOM_CMP='DX',
                       GROUP_NO='P',
                       CORR_STAT='OUI',);

IMPR_FONCTION(FORMAT='XMGRACE',
              COURBE=(_F(FONCTION=DEPLPDZ,
                         MARQUEUR=0,),
                      _F(FONCTION=DEPLPDZc,
                         MARQUEUR=0,),))

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=30,
              COURBE=(_F(FONCTION=DEPLPDX,
                         MARQUEUR=0,),
                      _F(FONCTION=DEPLPDXc,
                         MARQUEUR=0,),))


TEST_FONCTION(VALEUR=(_F(
                         FONCTION=DEPLPDZc,
                         VALE_PARA=0.05,
                         VALE_CALC=0.14737789061041

                      )))

TEST_FONCTION(VALEUR=(_F(
                         FONCTION=DEPLPDXc,
                         VALE_PARA=0.05,
                         VALE_CALC=1.587087698170E-04
                       )))

FIN();
