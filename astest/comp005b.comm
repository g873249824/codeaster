# TITRE VALIDATION DE LA MODELISATION D_PLAN_GRAD_VARI
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================


DEBUT(CODE=_F(NOM='COMP005B', NIV_PUB_WEB='INTERNET', VISU_EFICAS='NON'), DEBUG=_F(SDVERI='OUI'))


MA_L  =  LIRE_MAILLAGE();


MA_Q = CREA_MAILLAGE(
  MAILLAGE = MA_L,
  LINE_QUAD = _F(TOUT = 'OUI')
  )


L_INST = DEFI_LIST_REEL (
              DEBUT=0.0,
              INTERVALLE=(_F(JUSQU_A=2.00,NOMBRE=20),
                          ));





F_TEMP=DEFI_FONCTION(
                NOM_PARA='INST',
                NOM_RESU='TEMP',
              PROL_DROITE='CONSTANT',
                    VALE=(
               0.,    20.,
               1.,   120.,
               2.,   220.,
               )
             )




U_COMP=DEFI_FONCTION(NOM_PARA='INST',
                     VALE=(0.,0.,2.,5.e-3),
                     PROL_DROITE='CONSTANT');


F_DIFF = FORMULE(NOM_PARA=('SIXX','SIXX_L'),VALE='(SIXX-SIXX_L)/SIXX')

MO=[None]*2
C_RIG=[None]*2
CHR_C=[None]*2
CHP_T=[None]*2
TEMP=[None]*2
CHP_M=[None]*2

MA=[MA_Q,MA_L];


modelisation=['D_PLAN_GRAD_VARI','D_PLAN'];

METAL2 = DEFI_MATERIAU(
  ELAS       = _F(E = 1.E5,
                  NU = 0.3,
                  ALPHA=1.E-5
                  ),
  BETON_ECRO_LINE  = _F(SYT= 100., D_SIGM_EPSI = -1.E4),
  NON_LOCAL  = _F(C_GRAD_VARI = 2.8e-02,PENA_LAGR=1000.*2.8e-02)
  )

for i in range(0,len(modelisation)):



  CHP_T[i]=CREA_CHAMP( OPERATION='AFFE', TYPE_CHAM='NOEU_TEMP_F',
               MAILLAGE=MA[i],
                   AFFE=_F(
               TOUT = 'OUI',
               NOM_CMP = 'TEMP',
               VALE_F = F_TEMP)
             )


  TEMP[i]=CREA_RESU(
               OPERATION='AFFE', TYPE_RESU='EVOL_THER',
                NOM_CHAM='TEMP',
                 AFFE=_F(
               LIST_INST = L_INST,
               CHAM_GD = CHP_T[i])
             )


  CHP_M[i]=AFFE_MATERIAU(MAILLAGE=MA[i],
                    AFFE_VARC = (_F(TOUT='OUI',
                                  EVOL =TEMP[i],
                                  NOM_VARC='TEMP',
                                  VALE_REF=20.0)),
                     AFFE=_F(TOUT='OUI',
                             MATER=METAL2));

  MO[i]=AFFE_MODELE(MAILLAGE=MA[i],
              AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION=modelisation[i],
                       ),
                       );

  C_RIG[i] = AFFE_CHAR_MECA(
                               MODELE = MO[i],
                               DDL_IMPO = (
               _F(GROUP_MA = 'BLOX',DX = 0),
               _F(GROUP_MA = 'BLOY',DY = 0),
               ),
           );

  CHR_C[i] = AFFE_CHAR_MECA( MODELE = MO[i],
                        DDL_IMPO = _F(GROUP_MA='TIRX', DX= 1.),
                       );

U=[None]*2
SIG=[None]*2
TAB_E=[None]*2
TAB_S=[None]*2
TG_E=[None]*2

for i in range(0,len(modelisation)):


  U[i]=STAT_NON_LINE(MODELE=MO[i],
            CHAM_MATER=CHP_M[i],
            EXCIT=(_F(CHARGE=CHR_C[i],
                     FONC_MULT=U_COMP),
                   _F(CHARGE=C_RIG[i]),
                   ),
            COMP_INCR=_F(RELATION='ENDO_ISOT_BETON'),
            INCREMENT=_F(LIST_INST=L_INST,
                         INST_FIN=2.,
                         ),
            NEWTON=_F(MATRICE='TANGENTE',
                      REAC_ITER=1,
                      ),
            SOLVEUR = _F(METHODE='MUMPS', SYME='OUI'),
            CONVERGENCE=_F(ITER_GLOB_MAXI=50,
                           RESI_GLOB_RELA=1.e-7,
                          ),
       );



  U[i]=CALC_CHAMP(reuse=U[i],RESULTAT=U[i],CONTRAINTE=('SIGM_ELNO'),VARI_INTERNE=('VARI_ELNO'))




  U[i] = CALC_CHAMP(
              reuse = U[i],

              RESULTAT  =U[i],
              CONTRAINTE='SIGM_NOEU',VARI_INTERNE='VARI_NOEU',FORCE='FORC_NODA',
              );



  SIG[i]=RECU_FONCTION(RESULTAT=U[i],
                                 MAILLE='MJ',
                                 NOM_CHAM='SIEF_ELGA',
                                 NOM_CMP='SIXX',
                              POINT=1,
                       );


  TAB_E[i]=POST_RELEVE_T(
           ACTION=
                _F(INTITULE='DEFO',
                 GROUP_NO='NO_POST',
                 RESULTAT=U[i],
                 NOM_CHAM='DEPL',
                 NOM_CMP=('DX'),
                 OPERATION='EXTRACTION'));

  TAB_S[i]=POST_RELEVE_T(
           ACTION=
                _F(INTITULE='DEFO',
                 GROUP_NO='NO_POST',
                 RESULTAT=U[i],
                 NOM_CHAM='SIGM_NOEU',
                 NOM_CMP=('SIXX'),
                 OPERATION='EXTRACTION'));

  TG_E[i]=RECU_FONCTION(TABLE=TAB_E[i],
                  PARA_X='INST',
                  PARA_Y='DX',
                  PROL_DROITE='CONSTANT',
                  PROL_GAUCHE='CONSTANT');

  if i==1 :

    DIFF=CALC_TABLE(TABLE=TAB_S[i],
                    TITRE = ' ',
                    ACTION=(
                            _F(OPERATION='FILTRE',NOM_PARA='INST',CRIT_COMP='GT',VALE=0.),
                            _F(OPERATION='RENOMME',NOM_PARA=('SIXX','SIXX_L')),
                            _F(OPERATION='COMB',TABLE=TAB_S[i-1],NOM_PARA='INST'),
                            _F(OPERATION='OPER',FORMULE=F_DIFF,NOM_PARA='DIFF'),
                            ),
                    );




IMPR_TABLE(TABLE=DIFF);

TEST_TABLE(CRITERE='ABSOLU',
           VALE_CALC=0.0,
           TOLE_MACHINE=1.E-3,
           NOM_PARA='DIFF',
           TABLE=DIFF,
           FILTRE=_F(CRIT_COMP='MAXI_ABS',
                     NOM_PARA='DIFF',),
           )

FIN();
