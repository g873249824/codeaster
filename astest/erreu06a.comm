# MODIF  DATE 10/10/2012   AUTEUR COURTOIS M.COURTOIS 
# TITRE TEST SERVANT A VERIFIER LE FONCTIONNEMENT DU NAN DANS ASTER
# erreu06a.para = tps_job 60 mem_job 256Mo ncpus 1 liste_test D
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
#------------------------------------------------------
DEBUT(CODE=_F(NOM='ERREU06A',NIV_PUB_WEB='INTERNET', VISU_EFICAS='NON'),
      ERREUR=_F(ERREUR_F='EXCEPTION',),
      PAR_LOT='NON',
     )

import re
fmt_raison='-'*80+"""

   Exception interceptee
   Raison : %s

"""+'-'*80+'\n'

is_ok = 0

try:
   TEST_RESU(TEST_NAN='OUI',)
except aster.error,err:
   print fmt_raison % str(err)
   # on verifie que l'erreur fatale est bien celle que l'on attendait :
   if err.id_message == "DVP_2":
      is_ok = 1

# TEST_RESU
TAB2=CREA_TABLE(LISTE=(_F(PARA='TEST',TYPE_K='K8',LISTE_K='VALEUR  ',),
                       _F(PARA='BOOLEEN',LISTE_I=is_ok,),),)

TEST_TABLE(TABLE=TAB2,
           FILTRE=_F(NOM_PARA='TEST',VALE_K='VALEUR  ',),
           NOM_PARA='BOOLEEN',
           VALE_CALC_I=1,
           VALE_REFE_I=1,
           REFERENCE='ANALYTIQUE',)

FIN()
