# MODIF  DATE 01/12/2008   AUTEUR COURTOIS M.COURTOIS 
# TITRE VALIDATION DU SOLVEUR MUMPS EN PARALLELE AVEC MATRICE CENTRALISEE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

#########################################################################
#
#   MODELISATION A : CUBE HEXA8 / 210131 DDLs / 8090562 NNZ
#   ON TESTE LES DIFFERENTES VARIANTES DE MUMPS (CENTRALISEE/DISTRIBUEE
#   PAR MAILLE ET PAR SOUS-DOMAINES, EN INFLUANT SUR L'EQUILIBRAGE
#   DE CHARGE VIA LES MOT-CLES CHARGE_PROC0_MA/SD ET SUR LE CARACTERE
#   IN_CORE/OUT_OF_CORE).
#   WARNING: EN PARALLELE, PAS PLUS DE 21 PROC SINON MODIFIER LE NOMBRE
#   DE SOUS-DOMAINES (NB_PART ET DIST_PROC0 DU 3.1/3.2).
#   PARALLELE: VALEUR CONSEILLEE 8 PROCS
#########################################################################
#
# Choix du solveur
solveur = 'MUMPS';
#
# Pourcentage de memoire supplementaire que peut s'allouer MUMPS
# Rappel :
# --------------------------------------------------------------#
#                                                               #
#         JEVEUX          'DISPO'==>UTILISABLE PAR MUMPS        #
#  I-------------------I----------------------------------I     #
#    mem_aster*MEM/100        (1-mem_aster)*MEM/100             #
#                                                               #
#    ou MEM est la memoire totale indiquee dans ASTK            #
#                                                               #
# --------------------------------------------------------------#
#  Dans cette memoire 'DISPO', MUMPS decide qu'il aura besoin   #
#  de XX, le parametre mem_pivot autorise MUMPS a en prendre    #
#  (1+mem_pivot/100)*XX                                         #
# --------------------------------------------------------------#
mem_pivot = 15;
#
# Choix de la methode de renumeration
meth_renum = 'METIS';
#
# Mode verbeux 1/2
niv_info = 2
#
DEBUT(CODE=_F( NOM = 'MUMPS05A',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

PRE_GIBI();

# pour obtenir un maillage quadratique :
#----------------------------------------
# MA1=LIRE_MAILLAGE( )
# MA=CREA_MAILLAGE(MAILLAGE=MA1,LINE_QUAD=_F(TOUT='OUI'))

# pour obtenir un maillage lineaire :
#----------------------------------------
MA=LIRE_MAILLAGE();

MAT=DEFI_MATERIAU(ELAS=_F(E=1.E+05,
                          NU=0.3,),);

CHAM_MAT=AFFE_MATERIAU(MAILLAGE=MA,
                       AFFE=_F(TOUT='OUI',
                               MATER=MAT,),);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(GROUP_MA=('BLOC','COTE_B','COTE_H',),
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

CHARF=AFFE_CHAR_MECA(MODELE=MO,
                     FORCE_FACE=_F(GROUP_MA='COTE_H',
                                   FZ=1.E+4,),);

CHARD=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=(_F(GROUP_NO='A',
                                  DX=0.,
                                  DY=0.,),
                               _F(GROUP_NO='B',
                                  DY=0.,),
                               _F(GROUP_MA='COTE_B',
                                  DZ=0.,),),);

TPS=DEFI_LIST_REEL(DEBUT=0.0,
                   INTERVALLE=_F(JUSQU_A=1,
                                 NOMBRE=1,),);

# 1.1 : AVEC CHARGE DUALISEE ET MUMPS CENTRALISE
#-----------------------------------------------

MECAC=MECA_STATIQUE(INFO=niv_info,
                     MODELE=MO,
                     CHAM_MATER=CHAM_MAT,
                     EXCIT=(_F(CHARGE=CHARF,),
                            _F(CHARGE=CHARD,),),
                     OPTION='SANS',
                     SOLVEUR=_F(METHODE=solveur,
                                RENUM=meth_renum,
                                RESI_RELA=-1.0,
                                PCENT_PIVOT=mem_pivot,
                                PARALLELISME='CENTRALISE',
                                OUT_OF_CORE='OUI',
                                ),);

TEST_RESU(RESU=_F(RESULTAT=MECAC,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DZ',
                  GROUP_NO='D',
                  VALE=0.1,
                  REFERENCE='ANALYTIQUE',),);

TEST_RESU(RESU=_F(RESULTAT=MECAC,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DX',
                  GROUP_NO='D',
                  VALE=0.0,
                  CRITERE='ABSOLU',
                  PRECISION=1e-08,
                  REFERENCE='ANALYTIQUE',),);

# 2.1 : AVEC CHARGE DUALISEE ET MUMPS DISTRIBUE PAR MAILLES
#       EQUILIBRAGE DE CHARGE AUTOMATIQUE
#----------------------------------------------------------

MECAD1=MECA_STATIQUE(INFO=niv_info,
                     MODELE=MO,
                     CHAM_MATER=CHAM_MAT,
                     EXCIT=(_F(CHARGE=CHARF,),
                            _F(CHARGE=CHARD,),),
                     OPTION='SANS',
                     SOLVEUR=_F(METHODE=solveur,
                                RENUM=meth_renum,
                                RESI_RELA=-1.0,
                                PCENT_PIVOT=mem_pivot,
                                PARALLELISME='DISTRIBUE_MD',
                                CHARGE_PROC0_MA=0,
                                OUT_OF_CORE='NON',
                                ),);

TEST_RESU(RESU=_F(RESULTAT=MECAD1,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DZ',
                  GROUP_NO='D',
                  VALE=0.1,
                  REFERENCE='ANALYTIQUE',),);

TEST_RESU(RESU=_F(RESULTAT=MECAD1,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DX',
                  GROUP_NO='D',
                  VALE=0.0,
                  CRITERE='ABSOLU',
                  PRECISION=1e-08,
                  REFERENCE='ANALYTIQUE',),);

# 2.2 : AVEC CHARGE DUALISEE ET MUMPS DISTRIBUE PAR MAILLES
#       EQUILIBRAGE DE CHARGE FORCE POUR SOULAGER LE PROC 0
#----------------------------------------------------------

MECAD2=MECA_STATIQUE(INFO=niv_info,
                     MODELE=MO,
                     CHAM_MATER=CHAM_MAT,
                     EXCIT=(_F(CHARGE=CHARF,),
                            _F(CHARGE=CHARD,),),
                     OPTION='SANS',
                     SOLVEUR=_F(METHODE=solveur,
                                RENUM=meth_renum,
                                RESI_RELA=-1.0,
                                PCENT_PIVOT=mem_pivot,
                                PARALLELISME='DISTRIBUE_MD',
                                CHARGE_PROC0_MA=70,
                                OUT_OF_CORE='OUI',
                                ),);

TEST_RESU(RESU=_F(RESULTAT=MECAD2,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DZ',
                  GROUP_NO='D',
                  VALE=0.1,
                  REFERENCE='ANALYTIQUE',),);

TEST_RESU(RESU=_F(RESULTAT=MECAD2,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DX',
                  GROUP_NO='D',
                  VALE=0.0,
                  CRITERE='ABSOLU',
                  PRECISION=1e-08,
                  REFERENCE='ANALYTIQUE',),);

# 3.1 : AVEC CHARGE DUALISEE ET MUMPS DISTRIBUE PAR SOUS-DOMAINES
#       EQUILIBRAGE DE CHARGE AUTOMATIQUE
#----------------------------------------------------------
SDFETI = DEFI_PART_FETI(
                MODELE=MO,
                NB_PART=24,
                EXCIT=(_F(CHARGE=CHARF,),_F(CHARGE=CHARD,),),
                METHODE='KMETIS',
                NOM_GROUP_MA='SD',);
MECAD3=MECA_STATIQUE(INFO=niv_info,
                     MODELE=MO,
                     CHAM_MATER=CHAM_MAT,
                     EXCIT=(_F(CHARGE=CHARF,),
                            _F(CHARGE=CHARD,),),
                     OPTION='SANS',
                     SOLVEUR=_F(METHODE=solveur,
                                RENUM=meth_renum,
                                RESI_RELA=-1.0,
                                PCENT_PIVOT=mem_pivot,
                                PARALLELISME='DISTRIBUE_SD',
                                CHARGE_PROC0_SD=0,
                                PARTITION=SDFETI,
                                OUT_OF_CORE='NON',
                                ),);

TEST_RESU(RESU=_F(RESULTAT=MECAD3,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DZ',
                  GROUP_NO='D',
                  VALE=0.1,
                  REFERENCE='ANALYTIQUE',),);

TEST_RESU(RESU=_F(RESULTAT=MECAD3,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DX',
                  GROUP_NO='D',
                  VALE=0.0,
                  CRITERE='ABSOLU',
                  PRECISION=1e-08,
                  REFERENCE='ANALYTIQUE',),);

# 3.2 : AVEC CHARGE DUALISEE ET MUMPS DISTRIBUE PAR MAILLES
#       EQUILIBRAGE DE CHARGE FORCE POUR SOULAGER LE PROC 0
#----------------------------------------------------------

MECAD4=MECA_STATIQUE(INFO=niv_info,
                     MODELE=MO,
                     CHAM_MATER=CHAM_MAT,
                     EXCIT=(_F(CHARGE=CHARF,),
                            _F(CHARGE=CHARD,),),
                     OPTION='SANS',
                     SOLVEUR=_F(METHODE=solveur,
                                RENUM=meth_renum,
                                RESI_RELA=-1.0,
                                PCENT_PIVOT=mem_pivot,
                                PARALLELISME='DISTRIBUE_SD',
                                CHARGE_PROC0_SD=2,
                                PARTITION=SDFETI,
                                OUT_OF_CORE='OUI',
                                ),);

TEST_RESU(RESU=_F(RESULTAT=MECAD4,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DZ',
                  GROUP_NO='D',
                  VALE=0.1,
                  REFERENCE='ANALYTIQUE',),);

TEST_RESU(RESU=_F(RESULTAT=MECAD4,
                  NUME_ORDRE=1,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DX',
                  GROUP_NO='D',
                  VALE=0.0,
                  CRITERE='ABSOLU',
                  PRECISION=1e-08,
                  REFERENCE='ANALYTIQUE',),);
FIN();
