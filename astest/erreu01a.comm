# TITRE POUR TESTER DES EMISSIONS DE MESSAGES D'ERREUR
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#------------------------------------------------------
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET', VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'),
      ERREUR=_F(ERREUR_F='EXCEPTION',),
      PAR_LOT='NON',)

import re
fmt_raison='-'*80+"""

   Exception interceptee
   Raison : %s

"""+'-'*80+'\n'

MAIL=LIRE_MAILLAGE( )

DEFI_GROUP(reuse=MAIL,
           MAILLAGE=MAIL,
           CREA_GROUP_MA=_F(NOM='TOUT', TOUT='OUI'),)

MOD=AFFE_MODELE(MAILLAGE=MAIL,
                AFFE=_F(TOUT='OUI',
                PHENOMENE='MECANIQUE',
                MODELISATION='2D_BARRE'),)

MATER=DEFI_MATERIAU(ELAS=_F(E=2.E11,
                            NU=0.3,),)

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(TOUT='OUI',
                            MATER=MATER,),)

CARBA=AFFE_CARA_ELEM(MODELE=MOD,
                     BARRE=_F(GROUP_MA='TOUT',
                              SECTION='GENERALE',
                              CARA=('A',), VALE=(5.E-4,),),)

CH1=AFFE_CHAR_MECA(MODELE=MOD,
                   ROTATION= _F(VITESSE=1.0,
                                AXE=(0.0,1.0,0.0),),)
CH2=AFFE_CHAR_MECA(MODELE=MOD,
                   ROTATION= _F(VITESSE=1.0,
                                AXE=(0.0,1.0,0.0),),
                   DDL_IMPO=_F(TOUT='OUI',
                               DX=0.,
                               DY=0.),)


# 1) message de la routine CALCUL pour dire qu'un calcul elementaire n'est pas encore programme :
#----------------------------------------------------------------------------------------------
is_ok = 0
try :
    UELAS=MECA_STATIQUE(MODELE=MOD,
                        CHAM_MATER=CHMAT,
                        CARA_ELEM=CARBA,
                        EXCIT=_F(CHARGE=CH2),
                        INST=1.)
except aster.error,err:
   print fmt_raison % str(err)
   # on verifie que l'erreur fatale est bien celle que l'on attendait :
   if err.id_message == "CALCULEL_30":
      is_ok = 1

# TEST_RESU
TAB1=CREA_TABLE(LISTE=(_F(PARA='TEST',TYPE_K='K8',LISTE_K='VALEUR  ',),
                       _F(PARA='BOOLEEN',LISTE_I=is_ok,),),)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=1,
           VALE_REFE_I=1,
           NOM_PARA='BOOLEEN',
           TABLE=TAB1,
           FILTRE=_F(NOM_PARA='TEST',
                     VALE_K='VALEUR  ',),
           )

DETRUIRE(CONCEPT=_F(NOM=(UELAS, TAB1),),)


# 2) message de la routine PRERES pour dire qu'une matrice est singuliere :
#----------------------------------------------------------------------------------------------
is_ok = 0
try :
    UELAS=MECA_STATIQUE(MODELE=MOD,
                        CHAM_MATER=CHMAT,
                        CARA_ELEM=CARBA,
                        EXCIT=_F(CHARGE=CH1),
                        INST=1.)
except aster.error,err:
   print fmt_raison % str(err)
   # on verifie que l'erreur fatale est bien celle que l'on attendait :
   if err.id_message == "FACTOR_11":
      is_ok = 1

# TEST_RESU
TAB1=CREA_TABLE(LISTE=(_F(PARA='TEST',TYPE_K='K8',LISTE_K='VALEUR  ',),
                       _F(PARA='BOOLEEN',LISTE_I=is_ok,),),)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=1,
           VALE_REFE_I=1,
           NOM_PARA='BOOLEEN',
           TABLE=TAB1,
           FILTRE=_F(NOM_PARA='TEST',
                     VALE_K='VALEUR  ',),
           )

DETRUIRE(CONCEPT=_F(NOM=(UELAS, TAB1),),)

FIN()
