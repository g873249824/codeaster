# TITRE FISSURE DEBOUCHANTE DANS UNE PLAQUE 3D DE LARGEUR FINIE AVEC X-FEM
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# 

DEBUT(CODE=_F(NOM='SSNV185K',NIV_PUB_WEB='INTERNET',
          VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'));

# MODELISATION K : X-FEM MULTI-FISSURE - TRACTION

MAILLAG1=LIRE_MAILLAGE(FORMAT='MED',INFO=1);

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO= (
                             _F(GROUP_MA='VOL'),
                             _F(
                                NOM = 'POINT1',
                                OPTION = 'ENV_SPHERE',
                                POINT  = (0.0,0.0,0.0),
                                RAYON = 1E-5,
                                PRECISION = 2E-5,
                                ),
                             _F(
                                NOM = 'POINT2',
                                OPTION = 'ENV_SPHERE',
                                POINT  = (1.0,0.0,0.0),
                                RAYON = 1E-5,
                                PRECISION = 2E-5,
                                ),
                                    )

                    );


MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO=_F(GROUP_MA='SURFSUP'));

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO= _F(
                                NOM = 'ORIG',
                                OPTION = 'ENV_SPHERE',
                                POINT  = (0.0,0.0,0.0),
                                RAYON = 1E-3,
                                PRECISION = 2E-3,
                                ));

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO= _F(
                                      NOM = 'SURFMED',
                                      OPTION = 'PLAN',
                                      GROUP_NO_CENTRE  = 'ORIG',
                                      VECT_NORMALE = (0.0,0.0,1.0),
                                      PRECISION = 1E-3,
                                      ));

#----------------------------------------------
#                   MODELE ET FISSURE
#----------------------------------------------

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAG1,
                     AFFE=(_F(GROUP_MA=('VOL'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D'),
                           _F(GROUP_MA=('SURFINF','SURFSUP'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D')));

MAILLAG1=MODI_MAILLAGE(reuse =MAILLAG1,
                       MAILLAGE=MAILLAG1,
                       ORIE_PEAU_3D=_F(GROUP_MA=('SURFSUP','SURFINF')),
                       );

# PARAMETRES DE LA FISSURE : 0 < a < 6.5 -> influt sur le choix Rsup !
#                            b = 10.
a=3.
b=10.
LN1=FORMULE(NOM_PARA=('X','Y','Z'),VALE='Z-15.');
LT1=FORMULE(NOM_PARA=('X','Y','Z'),VALE='b-a-Y');

LN2=FORMULE(NOM_PARA=('X','Y','Z'),VALE='Z+15.');
LT2=FORMULE(NOM_PARA=('X','Y','Z'),VALE='b-a-Y');

FISS1=DEFI_FISS_XFEM(MODELE=MODELEIN,
                    DEFI_FISS=_F(FONC_LT=LT1,FONC_LN=LN1),
                    );

FISS2=DEFI_FISS_XFEM(MODELE=MODELEIN,
                    DEFI_FISS=_F(FONC_LT=LT2,FONC_LN=LN2),
                    );


MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,FISSURE=(FISS1,FISS2),INFO=1);


#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

E=205000.0E6
nu=0.
rho=7800.
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,RHO=rho));

CHAMPMA1=AFFE_MATERIAU(MAILLAGE=MAILLAG1,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER),
                             );

#----------------------------------------------
#                   CHARGEMENTS
#----------------------------------------------

PRES=-1.E6

CH1=AFFE_CHAR_MECA(MODELE=MODELEK,
                   DDL_IMPO=(
                               _F(GROUP_NO='SURFMED',
                                    DZ=0.0,
                                  ),
                  _F(GROUP_NO='POINT2',DX=0.0,DY=0.0),
                              _F(GROUP_NO='POINT1',DX=0.0,DY=0.0),
                    ),
              );

CH2=AFFE_CHAR_MECA(MODELE=MODELEK,
                   PRES_REP=_F(GROUP_MA=('SURFSUP','SURFINF'),PRES=PRES));

#----------------------------------------------
#                   RESOLUTION
#----------------------------------------------

UTOT1=MECA_STATIQUE(MODELE=MODELEK,
                   CHAM_MATER=CHAMPMA1,
                   EXCIT=(
                          _F(CHARGE=CH1),
                          _F(CHARGE=CH2),
                          ),
                   SOLVEUR=_F(   
                            METHODE='MUMPS'),
                   INFO=1,
                   ); 
#------------------------------------------------------------------------
# POST-TRAITEMENT : CALCUL DES SIFS PAR LA METHODE ENERGETIQUE AVEC X-FEM
#------------------------------------------------------------------------

# TEST AVEC PLUSIEURS COURONNES
if a > 4  :
  RI=[2. , 0.666 , 1. , 1. , 1. , 2.1]
  RS=[4. , 1.666 , 2. , 3. , 4. , 3.9]
else :
  RI=[0.666 , 1.]
  RS=[1.666 , 2.]


nbc=len(RI)
SIF1 = [None]*nbc

for i in range(0,nbc) :

   SIF1[i]=CALC_G(RESULTAT=UTOT1,
                 OPTION='CALC_K_G',
                 THETA=_F(FISSURE=FISS1,
                          R_INF=RI[i],
                          R_SUP=RS[i]),
                 LISSAGE=_F(LISSAGE_THETA='LAGRANGE',
                            LISSAGE_G='LAGRANGE'));

   IMPR_TABLE(TABLE=SIF1[i]);

SIF2 = [None]*nbc

for i in range(0,nbc) :

   SIF2[i]=CALC_G(RESULTAT=UTOT1,
                 OPTION='CALC_K_G',
                 THETA=_F(FISSURE=FISS2,
                          R_INF=RI[i],
                          R_SUP=RS[i]),
                 LISSAGE=_F(LISSAGE_THETA='LAGRANGE',
                            LISSAGE_G='LAGRANGE'));

   IMPR_TABLE(TABLE=SIF2[i]);


# SOLUTION ANALYTIQUE (chaboche p.53)
coef=(pi*a)/(2.*b)
fab=sqrt(tan(coef)/coef)*(0.752+0.37*(1.-sin(coef))**3+2.02*a/b)/cos(coef)
K1REF=-PRES*sqrt(pi*a)*fab

if a==2 :
   prec = 0.003
else :
   prec=0.10

VAL_CALC = [4.9248239045459E+06 ,
            4.9046465038066E+06 ,
            4.9409389581577E+06 ,
            4.9206910532772E+06  ,
            4.9248566022439E+06 ,
            4.9046792874304E+06 ,
            4.9409391829379E+06 ,
            4.9206913641271E+06  ]
ct = -1
for i in range(0,nbc) :
   ct = ct+1
   TEST_TABLE(TABLE=SIF1[i],
              NOM_PARA='K1',
              TYPE_TEST='MAX',
              VALE_CALC=VAL_CALC[ct], 
              VALE_REFE=K1REF,
              CRITERE='RELATIF',
              PRECISION=prec,    
              REFERENCE='ANALYTIQUE');
   ct = ct+1
   TEST_TABLE(TABLE=SIF1[i],
              NOM_PARA='K1',
              TYPE_TEST='MIN',
              VALE_CALC=VAL_CALC[ct],
              VALE_REFE=K1REF,
              CRITERE='RELATIF',
              PRECISION=prec,    
              REFERENCE='ANALYTIQUE');

for i in range(0,nbc) :
   ct = ct+1
   TEST_TABLE(TABLE=SIF2[i],
              NOM_PARA='K1',
              TYPE_TEST='MAX',
              VALE_CALC=VAL_CALC[ct], 
              VALE_REFE=K1REF,
              CRITERE='RELATIF',
              PRECISION=prec,    
              REFERENCE='ANALYTIQUE');
   ct = ct+1
   TEST_TABLE(TABLE=SIF2[i],
              NOM_PARA='K1',
              TYPE_TEST='MIN',
              VALE_CALC=VAL_CALC[ct], 
              VALE_REFE=K1REF,
              CRITERE='RELATIF',
              PRECISION=prec,    
              REFERENCE='ANALYTIQUE');

# -------------------------------------------------------------
#            POST-TRAITEMENT POUR LA VISUALISATION X-FEM
# -------------------------------------------------------------

MA_XFEM=POST_MAIL_XFEM(
                       MODELE        = MODELEK,
                       INFO          = 2)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D'))

RES_XFEM=POST_CHAM_XFEM(MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT1,
                        
                        INFO          = 2)

#IMPR_RESU(FORMAT='GMSH',UNITE=81,RESU=_F(RESULTAT=RES_XFEM));

FIN();
