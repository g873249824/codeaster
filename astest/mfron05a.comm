# -*- coding: utf-8 -*-
# person_in_charge: david.haboussa at edf.fr
# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

import os

os.system("mfront --obuild hayi01a.mfront --interface=aster")
os.system("cp src/libAsterBehaviour.so Hayhurstimplicit.so")

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'));


#temperature de travail en degres celsius
Tdegc=600;

#ATTENTION : f en h-1 et non en %/h
feps=5.2e7;
Qeps=3e5;
aK = -3.3e-2;
bK = 38.5;
fA = 9e4;
QA = 2e5;
f0 = 3.5e-2;
Q0 = -4.85e4;

########################################
######### DEFINITION DU CHARGEMENT #####
########################################

#niveau de contrainte nominal
sigmap = 160;


#  temps final
tref=4000;

#######################################################

#quelques calculs intermediaires
ep0val=feps*exp(-Qeps/(8.314*(Tdegc+273.)));
Kcoef=aK*(Tdegc+273.)+bK;
A0 = fA*exp(-QA/(8.314*(Tdegc+273.)));
sig0val = f0*exp(-Q0/(8.314*(Tdegc+273.)));
h1=30000.
h2=-280.
H1star=0.33
H2star=1.0

#alphaD=0.18439
alphaD=0.5
delta1=1.0
delta2=0.


MATFRONT=DEFI_MATERIAU(
                      ELAS=_F(E=145000., NU=0.3,ALPHA=1e-5,),
                      MFRONT=_F( LISTE_COEF = (145000. , 0.3, Kcoef,ep0val,sig0val,h1,h2,H1star,H2star,A0,alphaD,delta1,delta2,0.,),),
                      )


char=DEFI_FONCTION(NOM_PARA='INST',VALE=(0,0,
                         0.2,sigmap,
                         100000000,sigmap,
                         ),);


lalist=DEFI_LIST_REEL(DEBUT=0,
                      INTERVALLE=(_F(JUSQU_A=tref,
                                     NOMBRE=500,),),);

listtps = DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=lalist,),
                         ECHEC=_F(SUBD_NIVEAU=10,
                                  SUBD_METHODE='MANUEL',
                                  SUBD_PAS=10,
                                  EVENEMENT='ERREUR',
                                  SUBD_PAS_MINI=0.0,
                                  ACTION='DECOUPE'),
                                  )

listarch=DEFI_LIST_REEL(DEBUT=0,
                      INTERVALLE=(_F(JUSQU_A=tref,NOMBRE=100,),),);

soluce=SIMU_POINT_MAT(MATER=MATFRONT,INFO=1,
                     SIGM_IMPOSE=_F(SIYY=char,),
                     COMPORTEMENT=_F(RELATION='MFRONT',
                                     NOM_ROUTINE='asterimplicithayhurst',
                                     LIBRAIRIE='Hayhurstimplicit.so',
                                     DEFORMATION='GDEF_LOG',
                                   #  RESI_INTE_RELA=1.E-8,
                                  ),
                     SUPPORT='ELEMENT',
                     INCREMENT=_F(LIST_INST=listtps,),
                     NEWTON=_F(REAC_ITER=1,PREDICTION='EXTRAPOLE'),
                     ARCHIVAGE=_F(LIST_INST=listarch),
                     );

epsYY=RECU_FONCTION(TABLE=soluce,
                   PARA_X='INST',
                   PARA_Y='EPYY',
                   INTERPOL='LIN');

# d est la 7eme variable interne
endo=RECU_FONCTION(TABLE=soluce,
                   PARA_X='INST',
                   PARA_Y='V7',
                   INTERPOL='LIN');


#fluage secondaire comparasion s ssnv225a
tsec=2000
TEST_FONCTION(VALEUR=_F(VALE_CALC=0.02089498,
                        VALE_REFE=0.020968,
                        REFERENCE='AUTRE_ASTER',
                        PRECISION=0.01,
                        VALE_PARA=2000,
                        NOM_PARA='INST',
                        FONCTION=epsYY,
                        ),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=0.03217489,
                        VALE_REFE=0.03230,
                        REFERENCE='AUTRE_ASTER',
                        VALE_PARA=2000,
                        PRECISION=0.01,
                        NOM_PARA='INST',
                        FONCTION=endo,
                        ),
              )

# fluage tertiaire
tter=4000
TEST_FONCTION(VALEUR=_F(VALE_CALC=0.05057481603012,
                        VALE_REFE=0.05093,
                        REFERENCE='AUTRE_ASTER',
                        PRECISION=0.04,
                        VALE_PARA=4000,
                        NOM_PARA='INST',
                        FONCTION=epsYY,
                        ),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=0.06792744,
                        VALE_REFE=0.06808,
                        REFERENCE='AUTRE_ASTER',
                        PRECISION=0.005,
                        VALE_PARA=4000,
                        NOM_PARA='INST',
                        FONCTION=endo,
                        ),
              )


depsdt = CALC_FONCTION( DERIVE=_F( FONCTION= epsYY ),)


tvit = 1520.

TEST_FONCTION(VALEUR=_F(VALE_CALC=6.640910E-06,
                        VALE_REFE=6.653918E-06,
                        REFERENCE='AUTRE_ASTER',
                        PRECISION=0.015,
                        VALE_PARA=1520.0,
                        NOM_PARA='INST',
                        FONCTION=depsdt,
                        ),
              )

IMPR_FONCTION(
            FORMAT='XMGRACE',
            COURBE=(_F(FONCTION=epsYY,
                       COULEUR= 0,
                       LEGENDE= 'EPYY',),),
            UNITE=38,
            TITRE='Espilon = f(INST)');

IMPR_FONCTION(
            FORMAT='XMGRACE',
            COURBE=(_F(FONCTION=endo,
                        COULEUR= 0,
                        LEGENDE= 'endo',),),
            UNITE=39,
            TITRE='endo = f(INST)');

IMPR_FONCTION(
            FORMAT='XMGRACE',
            COURBE=(_F(FONCTION=depsdt,
                        COULEUR= 0,
                        LEGENDE= 'depsdt',),),
            UNITE=40,
            TITRE='depsdt = f(INST)');

FIN();
