# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(
              NIV_PUB_WEB='INTERNET',),PAR_LOT='NON');

MA=LIRE_MAILLAGE(FORMAT='MED',);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),
               DISTRIBUTION=_F(METHODE='MAIL_DISPERSE',),
               );

MAT=DEFI_MATERIAU(ELAS=_F(E=202702.7,
                          NU=0.3,),
                  THER=_F(LAMBDA=2.7,
                          RHO_CP=0.3,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=MAT,),);

CHA1=AFFE_CHAR_MECA(MODELE=MO,
                    DDL_IMPO=(_F(GROUP_NO='GRNO1',
                                 DZ=0.0,),
                              _F(GROUP_NO='GRNO8',
                                 DY=0.0,),),);

CHA2=AFFE_CHAR_CINE(MODELE=MO,
                    MECA_IMPO=_F(GROUP_NO='GRNO7',
                                 DX=0.0,
                                 DY=0.01,),);
#Calcul de référence 
RESREF=MECA_STATIQUE(MODELE=MO,
                    CHAM_MATER=CHMAT,
                    EXCIT=(_F(CHARGE=CHA1,),
                           _F(CHARGE=CHA2,),),
                    SOLVEUR=_F(METHODE='MUMPS',),);
TREF=POST_RELEVE_T(  ACTION=_F(  INTITULE = 'UREF', NOEUD =('NO2958','NO2974'), OPERATION = 'EXTRACTION',
                     RESULTAT = RESREF, NUME_ORDRE=1, NOM_CHAM='DEPL', NOM_CMP = ('DX','DY'), ));

MEL=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                   MODELE=MO,
                   CHAM_MATER=CHMAT,
                   CHARGE=CHA1,);

NU=NUME_DDL(MATR_RIGI=MEL,);   

VECAS=CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R',
                 NUME_DDL=NU,
                 OPERATION='AFFE',
                 MAILLAGE=MA,
                 AFFE=_F(TOUT='OUI',
                         NOM_CMP=('DX','DY','DZ',),
                         VALE=(0.,0.,0.,),),);

MATAS=ASSE_MATRICE(MATR_ELEM=MEL,
                   NUME_DDL=NU,
                   CHAR_CINE=CHA2,);

VCINE=CALC_CHAR_CINE(NUME_DDL=NU,
                     CHAR_CINE=CHA2,);

MATAS=FACTORISER(reuse =MATAS, MATR_ASSE=MATAS, METHODE='PETSC', PRE_COND='LDLT_SP',);

VECAS=RESOUDRE(reuse =VECAS,
               MATR=MATAS,
               CHAM_NO=VECAS,
               CHAM_CINE=VCINE,
               ALGORITHME='GCR',);
TEST_RESU(CHAM_NO=(_F(CHAM_GD=VECAS,
                      NOEUD='NO2958',
                      NOM_CMP='DY',
                      VALE_CALC=0.01,
                      VALE_REFE=TREF['DY',1],
                      PRECISION=1.E-06,
                      REFERENCE='AUTRE_ASTER',),
                   _F(CHAM_GD=VECAS,
                      NOEUD='NO2974',
                      NOM_CMP='DX',
                      VALE_CALC=0.00430057955025,
                      VALE_REFE=TREF['DX',2],
                      PRECISION=1.E-06,
                      REFERENCE='AUTRE_ASTER',),
                   _F(CHAM_GD=VECAS,
                      NOEUD='NO2974',
                      NOM_CMP='DY',
                      VALE_CALC=0.00928897503726,
                      VALE_REFE=TREF['DY',2],
                      PRECISION=1.E-06,
                      REFERENCE='AUTRE_ASTER',),
                       ),);


# Validation de FACTORISER / PETSC / LDLT_INC  :
#-----------------------------------------------
MATAS2=ASSE_MATRICE(MATR_ELEM=MEL,
                   NUME_DDL=NU,
                   CHAR_CINE=CHA2,);
MATAS2=FACTORISER( reuse=MATAS2, MATR_ASSE=MATAS2, METHODE='PETSC', PRE_COND='LDLT_INC',);

VECA2=RESOUDRE(MATR=MATAS2, MATR_PREC=MATAS2,
               CHAM_NO=VECAS,
               CHAM_CINE=VCINE,
               ALGORITHME='GMRES',);

TEST_RESU(CHAM_NO=(_F(CHAM_GD=VECA2,
                      NOEUD='NO2958',
                      NOM_CMP='DY',
                      VALE_CALC=0.0099999998941,
                      VALE_REFE=TREF['DY',1],
                      PRECISION=1.E-06,
                      REFERENCE='AUTRE_ASTER',)))

FIN();
