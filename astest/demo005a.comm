# MODIF  DATE 14/10/2008   AUTEUR REZETTE C.REZETTE 
#
# TITRE : Cylindre mince sous pression hydrostatique
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#         ------------------------------------------

# Notes:
#  - Les commentaires sont precedes du signe #
#  - Une meme commande peut se suivre sur plusieurs lignes


# Commande obligatoire pour commencer
# -----------------------------------

DEBUT(CODE=_F(NOM='DEMO005A', NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))


# Lecture du maillage
# ------------------
# Le maillage est fourni au format GMSH

PRE_GMSH() ;

# Lecture du maillage dans le fichier de maillage et creation du concept mail
# contenant le maillage au format Aster

mail = LIRE_MAILLAGE  ( ) ;


# Definition des groupes
# ----------------------
# Definition des groupes de mailles a partir de ceux crees dans GMSH

mail=DEFI_GROUP(reuse =mail,
               MAILLAGE=mail,
               CREA_GROUP_MA=(_F(NOM='APPUI',
                           GROUP_MA='GM11',),
                              _F(NOM='LDF',
                           GROUP_MA='GM13',),
                              _F(NOM='LFA',
                           GROUP_MA='GM14',),
                              _F(NOM='ND_A',
                           GROUP_MA='GM1',),
                              _F(NOM='ND_B',
                           GROUP_MA='GM2',),
                              _F(NOM='ND_C',
                           GROUP_MA='GM3',),
                              _F(NOM='ND_D',
                           GROUP_MA='GM4',),
                              ),
# Definition des groupes de noeuds a partir des groupes de mailles
               CREA_GROUP_NO=(_F(GROUP_MA='ND_A',),
                              _F(GROUP_MA='ND_B',),
                              _F(GROUP_MA='ND_C',),
                              _F(GROUP_MA='ND_D',),
                              ),
               );


# Definition du modele
# --------------------
# - Un modele est un concept contenant les types d'elements finis utiles au
#   calcul,
# - Il associe a toutes les mailles du maillage des elements finis mecaniques
#   axisymetriques.


modl=AFFE_MODELE(MAILLAGE=mail,
                AFFE=_F(TOUT='OUI',
                        PHENOMENE='MECANIQUE',
                        MODELISATION='AXIS',),);


# Definition du materiau
# ----------------------
# Les caracteristiques de chaque materiau constituant le maillage sont fournies:
#   - module d'young,
#   - coefficient de poisson.

acier=DEFI_MATERIAU(ELAS=_F(E=210000000000.0,
                            NU=0.3,),);

# Affectation du materiau sur le maillage
# ---------------------------------------
# Ici le materiau est le meme pour tout le maillage. Sinon on pourrait affecter
# des materiaux differents sur des groupes de mailles.

chmat=AFFE_MATERIAU(MAILLAGE=mail,
                    AFFE=_F(TOUT='OUI',
                            MATER=acier,),);

# Definition des conditions aux limites
# -------------------------------------
# Les conditions aux limites peuvent porter sur des noeuds, des groupes de noeuds,
# des mailles ou des groupes de mailles
# Ici les noeuds du groupe de mailles APPUI (mailles de bord) sont affectees de
# la condition: DY = 0 ce qui signifie "deplacement suivant y" nul.

clim=AFFE_CHAR_MECA(MODELE=modl,
                FACE_IMPO=_F(GROUP_MA='APPUI',
                            DY=0,),);

# Definition du chargement:
# -------------------------
#  Pression fonction de y
# Les fonctions sont definies point par point (variation affine entre deux points
# par defaut)
# Ici la pression varie entre
#     20000 Pa pour y=0
#  et     0 Pa pour y=L

f_y=DEFI_FONCTION(NOM_PARA='Y',
                  VALE=(0.0,20000.0,
                        4.0,0.0,),);

# Affectation du chargement
# -------------------------
# Affectation de la pression (fonction de y) sur le bord compose des groupes
# de mailles LFA LDF

charg=AFFE_CHAR_MECA_F(MODELE=modl,
           PRES_REP=_F(GROUP_MA=('LFA','LDF',),
                       PRES=f_y,),);

# Resolution
# ----------
# Commande globale de resolution des problemes statiques en thermo elasticite
# lineaire
# on definit le champ de materiau
# on definit les chargements

res1=MECA_STATIQUE(
                   MODELE=modl,
                   CHAM_MATER=chmat,
                   EXCIT=(_F(CHARGE=charg,),
                        _F(CHARGE=clim,),),);

# Calcul des contraintes
# ----------------------
# reuse=res1 signifie que l'on "enrichi" le concept res1: le champ de contraintes
# sera stocke en plus du champ de deplacements
# le nom 'SIGM_ELNO_DEPL' signifie "contraintes calculees aux noeuds de chaque
# element a partir des deplacements

res1=CALC_ELEM(reuse=res1,
               MODELE = modl,
               CHAM_MATER=chmat,
               RESULTAT=res1,
               OPTION='SIGM_ELNO_DEPL',);


# Impression des resultats aux points A B C D
# -------------------------------------------
# Impression des resultats au format texte des deplacements aux noeuds
# correspondant au point A

IMPR_RESU(MODELE=modl,
          RESU=_F(RESULTAT=res1,
                  GROUP_MA='ND_A',),);

# Impression des resultats au format texte des deplacements aux noeuds
# correspondant au point B

IMPR_RESU(MODELE=modl,
          RESU=_F(RESULTAT=res1,
                  GROUP_MA='ND_B',),);

IMPR_RESU(MODELE=modl,
          RESU=_F(RESULTAT=res1,
                 GROUP_MA='ND_C',),);
IMPR_RESU(MODELE=modl,
          RESU=_F(RESULTAT=res1,
                  GROUP_MA='ND_D',),);

# Impression des resultats au format texte deplacement/contraintes sur tout
# le maillage

IMPR_RESU(MODELE=modl,
          RESU=_F(RESULTAT=res1,),);


# Impression des resultats pour une visualisation avec GMSH

IMPR_RESU(MODELE=modl,UNITE=37,FORMAT='GMSH',
          RESU=_F(RESULTAT=res1,NOM_CHAM='DEPL',),);

# Verification des resultats (Test de non-regression)
#
# Verification du deplacement suivant x et y au point A

TEST_RESU(RESU=(
                _F( RESULTAT = res1,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_A',
                    NOM_CMP  = 'DX',
                    VALE     = 4.68143E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                )
          )
# Verification du deplacement suivant x et y au point B

TEST_RESU(RESU=(
                _F( RESULTAT = res1,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_B',
                    NOM_CMP  = 'DX',
                    VALE     = 4.65280E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                )
          )
# Verification du deplacement suivant x et y au point C

TEST_RESU(RESU=(
                _F( RESULTAT = res1,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_C',
                    NOM_CMP  = 'DX',
                    VALE     =1.20218E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                _F( RESULTAT = res1,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_C',
                    NOM_CMP  = 'DY',
                    VALE     = -2.63963E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                )
          )

# Verification du deplacement suivant x et y au point D

TEST_RESU(RESU=(
                _F( RESULTAT = res1,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_D',
                    NOM_CMP  = 'DX',
                    VALE     =3.31016E-09,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                _F( RESULTAT = res1,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_D',
                    NOM_CMP  = 'DY',
                    VALE     = -2.81696E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                )
          )



# =================================================================
#  validation du mot-cle GROUP_MA_SURF de l'operateur MODI_MAILLAGE 
# ================================================================= 
# 
# Le fichier de maillage d'unite 38 contient une maille de 'bord'
# encastree entre 2 mailles surfaciques:
# cette maille de bord est volontairement mal-orientee afin de
# mettre en evidence MODI_MAILLAGE/GROUP_MA_SURF.
# On a oriente les noeuds de cette maille de sorte que
# la normale soit entrante et non sortante(par rapport a la matiere).
#
# La maille surfacique situee 'a l'exterieure' (groupe_ma 'EXT')
# est telle que la normale soit sortante : ceci implique une 
# reorientation car par convention les normales des mailles de peau
# doivent etre sortantes pour appliquer une pression.
#
# maille de bord (groupe 'BORD') M18  : N34  N33
# maille surfacique exterieure (groupe 'EXT') M137: N127  N33   N34 
#
#                   |
#                   |
#                  N34-------N122
#                  /|        |
#                 / |        |
#        'EXT'=> /  |        |  <='INT'
#               /   |        |
#         N127 /----|--------|
#                  N33      N126
#                   |
#                   |
# Remarque: si la reorientation n'est pas effectuee, AFFE_CHAR_MECA
# detecte que le groupe 'BORD' est mal-oriente et interrompt l'execution
# d'Aster.
#
MA2=LIRE_MAILLAGE(UNITE=38);

# on verifie que l'on a reordonne l'ordre des noeuds
# de la maille du groupe 'BORD'
MA2=MODI_MAILLAGE(reuse=MA2,
                 MAILLAGE=MA2,
                 ORIE_PEAU_2D=_F(GROUP_MA=('BORD'),
                                 GROUP_MA_SURF=('INT'),),)  

MA22=CREA_MAILLAGE(MAILLAGE=MA2,
             RESTREINT=_F(
                GROUP_MA=('ND_D','ND_C','ND_B','ND_A','LFA','LDF','APPUI','GM21'),
                GROUP_NO=('ND_D','ND_C','ND_B','ND_A'),),)

modl2=AFFE_MODELE(MAILLAGE=MA22,
                AFFE=_F(TOUT='OUI',
                        PHENOMENE='MECANIQUE',
                        MODELISATION='AXIS',),);

clim2=AFFE_CHAR_MECA(MODELE=modl2,
                FACE_IMPO=_F(GROUP_MA='APPUI',
                            DY=0,),);

charg2=AFFE_CHAR_MECA_F(MODELE=modl2,
           PRES_REP=_F(GROUP_MA=('LFA','LDF',),
                       PRES=f_y,),);

chmat2=AFFE_MATERIAU(MAILLAGE=MA22,
                    AFFE=_F(TOUT='OUI',
                            MATER=acier,),);

res2=MECA_STATIQUE(
                   MODELE=modl2,
                   CHAM_MATER=chmat2,
                   EXCIT=(_F(CHARGE=charg2,),
                        _F(CHARGE=clim2,),),);


TEST_RESU(RESU=(
                _F( RESULTAT = res2,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_A',
                    NOM_CMP  = 'DX',
                    VALE     = 4.68143E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                )
          )

TEST_RESU(RESU=(
                _F( RESULTAT = res2,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_B',
                    NOM_CMP  = 'DX',
                    VALE     = 4.65280E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                )
          )

TEST_RESU(RESU=(
                _F( RESULTAT = res2,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_C',
                    NOM_CMP  = 'DX',
                    VALE     =1.20218E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                _F( RESULTAT = res2,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_C',
                    NOM_CMP  = 'DY',
                    VALE     = -2.63963E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                )
          )

TEST_RESU(RESU=(
                _F( RESULTAT = res2,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_D',
                    NOM_CMP  = 'DX',
                    VALE     =3.31016E-09,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                _F( RESULTAT = res2,
                    NOM_CHAM = 'DEPL',
                    GROUP_NO = 'ND_D',
                    NOM_CMP  = 'DY',
                    VALE     = -2.81696E-06,
                    NUME_ORDRE = 1,
                    REFERENCE='NON_REGRESSION',
                    VERSION  ='8.1.0'
                  ),
                )
          )


# Commande obligatoire pour clore une execution
# ---------------------------------------------

FIN();
