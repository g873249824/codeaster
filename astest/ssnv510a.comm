# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# tps_job 30 mem_job 128Mo ncpus 1 liste_test R

#
# CE TEST VALIDE LES ELEMENTS XFEM D_PLAN MULTI-HEAVISIDE EN CONTACT HPP
#

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'));

MAILLAG=LIRE_MAILLAGE(FORMAT="ASTER",INFO=1);

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAG,
                     AFFE=(_F(GROUP_MA=('SURF','LH','LG'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='D_PLAN')));

LN1 = FORMULE(VALE='Y-0.5',
              NOM_PARA=['X', 'Y'],)
LN2 = FORMULE(VALE='Y-1.5',
              NOM_PARA=['X', 'Y'],)
LN3 = FORMULE(VALE='Y-2.5',
              NOM_PARA=['X', 'Y'],)
LN4 = FORMULE(VALE='Y-3.5',
              NOM_PARA=['X', 'Y'],)

FISS1=DEFI_FISS_XFEM(MAILLAGE=MAILLAG,
                     TYPE_DISCONTINUITE='INTERFACE',
                     DEFI_FISS=_F(FONC_LN=LN1),
                     INFO=1);
FISS2=DEFI_FISS_XFEM(MAILLAGE=MAILLAG,
                     TYPE_DISCONTINUITE='INTERFACE',
                     DEFI_FISS=_F(FONC_LN=LN2),
                     INFO=1);
FISS3=DEFI_FISS_XFEM(MAILLAGE=MAILLAG,
                     TYPE_DISCONTINUITE='INTERFACE',
                     DEFI_FISS=_F(FONC_LN=LN3),
                     INFO=1);
FISS4=DEFI_FISS_XFEM(MAILLAGE=MAILLAG,
                     TYPE_DISCONTINUITE='INTERFACE',
                     DEFI_FISS=_F(FONC_LN=LN4),
                     INFO=1);

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,
                         FISSURE=(FISS1,FISS2,FISS3,FISS4),
                         CONTACT='STANDARD',
                         INFO=1);

CTXFEM = DEFI_CONTACT(MODELE         = MODELEK,
                      FORMULATION    = 'XFEM',
                      REAC_GEOM='CONTROLE',
                      NB_ITER_GEOM = 1,
                      ITER_CONT_MAXI = 10,ELIM_ARETE     = 'ELIM',
                      ZONE = (_F(
                                 INTEGRATION   = 'NOEUD',
                                 CONTACT_INIT  = 'OUI',
                                 GLISSIERE     = 'NON',
                                 FISS_MAIT     = FISS1,
                              ),
                              _F(
                                 INTEGRATION   = 'NOEUD',
                                 CONTACT_INIT  = 'OUI',
                                 GLISSIERE     = 'NON',
                                 FISS_MAIT     = FISS2,
                              ),
                             _F(
                                 INTEGRATION   = 'NOEUD',
                                 CONTACT_INIT  = 'OUI',
                                 GLISSIERE     = 'NON',
                                 FISS_MAIT     = FISS3,
                              ),
                             _F(
                                INTEGRATION   = 'NOEUD',
                                 CONTACT_INIT  = 'OUI',
                                 GLISSIERE     = 'NON',
                                 FISS_MAIT     = FISS4,
                              ),
                            ),
                    );


E=100.0E6
nu=0.0
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,
                            NU=nu,
                            RHO=7800.0));

CHAMPMAT=AFFE_MATERIAU(MAILLAGE=MAILLAG,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT='OUI',
                                MATER=ACIER));

def pression(y) :
   if y >=3.5 : return 40e6
   if y < 3.5 and y >= 2.5 : return 30e6
   if y < 2.5 and y >= 1.5 : return 20e6
   if y < 1.5 and y >= 0.5 : return 10e6
   if y < 0.5 : return 0

PRESSION = FORMULE(VALE='pression(Y)',
                   pression=pression,
                   NOM_PARA='Y',)

def depx(y) :
   return y/5

def depy(y) :
   return 0

CH1=AFFE_CHAR_MECA_F(MODELE=MODELEK,
                     PRES_REP=(_F(GROUP_MA='LG',PRES = PRESSION)));

CH2=AFFE_CHAR_MECA(MODELE=MODELEK,
                   DDL_IMPO=(_F(GROUP_MA='LD',DX=0,H1X=0,H2X=0,H3X=0,H4X=0),
                             _F(GROUP_MA='LB',DY=0)),
                   PRES_REP=(_F(GROUP_MA='LH',PRES = 10e6)));

L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=1.0,
                                    NOMBRE=1));

UTOT1=STAT_NON_LINE(MODELE=MODELEK,INFO=1,
                    CHAM_MATER=CHAMPMAT,
                    CONTACT = CTXFEM,
                    EXCIT=(_F(CHARGE=CH1),
                           _F(CHARGE=CH2)),
                    COMPORTEMENT=_F(RELATION='ELAS',
                                 GROUP_MA='SURF'),
                    INCREMENT=_F(LIST_INST=L_INST),
                    SOLVEUR=_F(METHODE='MUMPS',
   ),
                    NEWTON=_F(REAC_ITER=1),
                    CONVERGENCE=_F(ARRET='OUI',RESI_GLOB_RELA=1E-14),
                    ARCHIVAGE=_F(CHAM_EXCLU='VARI_ELGA'),
                    );

#-----------------------------------------------------------
#             POST-TRAITEMENT POUR LA VISUALISATION
#-----------------------------------------------------------

MA_XFEM=POST_MAIL_XFEM(MODELE=MODELEK);


MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(GROUP_MA='SURF',
                     PHENOMENE='MECANIQUE',
                     MODELISATION='D_PLAN',
                ))

RES_XFEM=POST_CHAM_XFEM(MODELE_VISU  = MOD_VISU,
                        RESULTAT        = UTOT1)

TABDEP=POST_RELEVE_T(ACTION=_F(INTITULE='DEPLACEMENT SUR LES LEVRES',
                               RESULTAT=RES_XFEM,
                               NOM_CHAM='DEPL',
                               INST=1.0,
                               GROUP_NO=('NFISSU'),
                               TOUT_CMP='OUI',
                               OPERATION='EXTRACTION'));

depl_y = FORMULE(VALE='DY+COOR_Y/10',
                 NOM_PARA=['DY', 'COOR_Y'],)

TABDEP = CALC_TABLE(reuse = TABDEP,
                     TABLE = TABDEP,
                     ACTION=(_F(OPERATION='TRI',
                               NOM_PARA='COOR_Y',
                               ORDRE='CROISSANT'),
                             _F(OPERATION = 'OPER',
                                NOM_PARA  = 'DY-DY',
                                FORMULE = depl_y)));

# FILTRE SUR LES NOMS DES NOEUDS POUR NE GARDER QUE LES NP (COTE MAITRE)

depl_p = FORMULE(VALE='DX+depx(COOR_Y+0.5)*(COOR_X-2)/2',
                 depx=depx,
                 NOM_PARA=['DX', 'COOR_X', 'COOR_Y'],)

TABDEPP = CALC_TABLE(TABLE = TABDEP,
                     ACTION =(_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'NOEUD',
                                 CRIT_COMP = 'REGEXP',
                                 VALE_K    = 'NP'),
                              _F(OPERATION = 'OPER',
                                 NOM_PARA  = 'DX-DXP',
                                 FORMULE = depl_p),
                              _F(OPERATION = 'EXTR',
                                 NOM_PARA=('NOEUD','INST','COOR_X','COOR_Y','DX','DY','DX-DXP','DY-DY'))));

IMPR_TABLE(TABLE=TABDEPP,
           TRI=_F(NOM_PARA = ('COOR_Y','COOR_X'),
                  ORDRE ='CROISSANT'));

# FILTRE SUR LES NOMS DES NOEUDS POUR NE GARDER QUE LES NM (COTE ESCLAVE)

depl_m = FORMULE(VALE='DX+depx(COOR_Y-0.5)*(COOR_X-2)/2',
                 depx=depx,
                 NOM_PARA=['DX', 'COOR_X', 'COOR_Y'],)

TABDEPM = CALC_TABLE(TABLE = TABDEP,
                     ACTION =(_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'NOEUD',
                                 CRIT_COMP = 'REGEXP',
                                 VALE_K    = 'NM'),
                              _F(OPERATION = 'OPER',
                                 NOM_PARA  = 'DX-DXM',
                                 FORMULE = depl_m),
                              _F(OPERATION = 'EXTR',
                                 NOM_PARA=('NOEUD','INST','COOR_X','COOR_Y','DX','DY','DX-DXM','DY-DY'))));

IMPR_TABLE(TABLE=TABDEPM,
           TRI=_F(NOM_PARA = ('COOR_Y','COOR_X'),
                  ORDRE ='CROISSANT'));

# solution analytique :
#    - deplacement
def ux(X,Y): 
    return (2.-X)*pression(Y)/E

def uy(X,Y): 
    return -Y*1.e7/E

UX = FORMULE(VALE='ux(X,Y)',
             ux=ux,
             NOM_PARA=['X', 'Y'],)
UY = FORMULE(VALE='uy(X,Y)',
             uy=uy,
             NOM_PARA=['X', 'Y'],)

#    - contraintes
def Sxx(X,Y):
    return -pression(Y)

def Syy(X,Y):
    return -1.e7

SXX = FORMULE(VALE='Sxx(X,Y)',
              Sxx=Sxx,
              NOM_PARA=['X', 'Y'],)
SYY = FORMULE(VALE='Syy(X,Y)',
              Syy=Syy,
              NOM_PARA=['X', 'Y'],)

# calcul de l'erreur en terme de norme en energie
Scal=CREA_CHAMP(OPERATION='EXTR',
                TYPE_CHAM='ELGA_SIEF_R',
                RESULTAT=UTOT1,
                NOM_CHAM='SIEF_ELGA',
                NUME_ORDRE=1)

tabNRJ=POST_ERREUR(OPTION='ENER_RELA',
                   CHAM_GD=Scal,
                   MODELE=MODELEK,
                   DEFORMATION='PETIT',
                   CHAM_MATER=CHAMPMAT,
                   GROUP_MA='SURF',
                   SIXX=SXX,
                   SIYY=SYY)

IMPR_TABLE(TABLE=tabNRJ)

# calcul de l'erreur en terme de norme L2 du deplacement
Ucal=CREA_CHAMP(OPERATION='EXTR',
                TYPE_CHAM='NOEU_DEPL_R',
                RESULTAT=UTOT1,
                NOM_CHAM='DEPL',
                NUME_ORDRE=1)

tabL2=POST_ERREUR(OPTION='DEPL_RELA',
                  CHAM_GD=Ucal,
                  MODELE=MODELEK,
                  GROUP_MA='SURF',
                  DX=UX,
                  DY=UY)

IMPR_TABLE(TABLE=tabL2)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-13,
           VALE_CALC=5.98132654517E-15,
           VALE_REFE=0.0,
           NOM_PARA='DX-DXP',
           TYPE_TEST='SOMM_ABS',
           TABLE=TABDEPP,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-13,
           VALE_CALC=8.00748356511E-15,
           VALE_REFE=0.0,
           NOM_PARA='DY-DY',
           TYPE_TEST='SOMM_ABS',
           TABLE=TABDEPP,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-13,
           VALE_CALC=5.83938853378E-15,
           VALE_REFE=0.0,
           NOM_PARA='DX-DXM',
           TYPE_TEST='SOMM_ABS',
           TABLE=TABDEPM,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-13,
           VALE_CALC=9.0552565446E-15,
           VALE_REFE=0.0,
           NOM_PARA='DY-DY',
           TYPE_TEST='SOMM_ABS',
           TABLE=TABDEPM,)

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           VALE_CALC=26000000.0,
           VALE_REFE=2.6e+7,
           NOM_PARA='REFERENCE',
           FILTRE=_F(NOM_PARA='GROUP_MA',
                     VALE_K='TOTAL'),
           TABLE=tabNRJ,
           );

TEST_TABLE(CRITERE='ABSOLU',
           VALE_CALC=1.10953900807E-15,
           NOM_PARA='ERREUR RELATIVE',
           FILTRE=_F(NOM_PARA='GROUP_MA',
                     VALE_K='TOTAL'),
           TABLE=tabNRJ,
           );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           VALE_CALC=1.00664459137,
           VALE_REFE=1.00664459137,
           NOM_PARA='REFERENCE',
           FILTRE=_F(NOM_PARA='GROUP_MA',
                     VALE_K='TOTAL'),
           TABLE=tabL2,
           );

TEST_TABLE(CRITERE='ABSOLU',
           VALE_CALC=8.0629940352E-16,
           NOM_PARA='ERREUR RELATIVE',
           FILTRE=_F(NOM_PARA='GROUP_MA',
                     VALE_K='TOTAL'),
           TABLE=tabL2,
           );

FIN();
