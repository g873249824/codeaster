# coding=utf-8

###
### This file is generated automatically by SALOME v6.4.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
theStudy = salome.myStudy

import salome_notebook
notebook = salome_notebook.notebook
sys.path.insert( 0, r'/home/C29256/DATA/source/restitution/cas-tests/rep_test')

import iparameters
ipar = iparameters.IParameters(salome.myStudy.GetCommonParameters("Interface Applicative", 1))

#Set up visual properties:
ipar.setProperty("AP_ACTIVE_VIEW", "VTKViewer_0_0")
ipar.setProperty("AP_WORKSTACK_INFO", "000000010000000000000002010000000100000588000000040000000100000001000000080000001a00560054004b005600690065007700650072005f0030005f00300000000102")
ipar.setProperty("AP_ACTIVE_MODULE", "Mesh")
ipar.setProperty("AP_SAVEPOINT_NAME", "GUI state: 1")
#Set up lists:
# fill list AP_VIEWERS_LIST
ipar.append("AP_VIEWERS_LIST", "VTKViewer_1")
# fill list VTKViewer_1
ipar.append("VTKViewer_1", "VTK scene:1 - viewer:1")
ipar.append("VTKViewer_1", """<?xml version="1.0"?>
<ViewState>
    <Position X="6.09441" Y="-6.09441" Z="6.09441"/>
    <FocalPoint X="0" Y="0" Z="0"/>
    <ViewUp X="0" Y="0" Z="1"/>
    <ViewScale Parallel="0.707107" X="1" Y="1" Z="1"/>
    <DisplayCubeAxis Show="0"/>
    <GraduatedAxis Axis="X">
        <Title isVisible="1" Text="X" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="1" G="0" B="0"/>
        </Title>
        <Labels isVisible="1" Number="3" Offset="2" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="1" G="0" B="0"/>
        </Labels>
        <TickMarks isVisible="1" Length="5"/>
    </GraduatedAxis>
    <GraduatedAxis Axis="Y">
        <Title isVisible="1" Text="Y" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="0" G="1" B="0"/>
        </Title>
        <Labels isVisible="1" Number="3" Offset="2" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="0" G="1" B="0"/>
        </Labels>
        <TickMarks isVisible="1" Length="5"/>
    </GraduatedAxis>
    <GraduatedAxis Axis="Z">
        <Title isVisible="1" Text="Z" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="0" G="0" B="1"/>
        </Title>
        <Labels isVisible="1" Number="3" Offset="2" Font="0" Bold="0" Italic="0" Shadow="0">
            <Color R="0" G="0" B="1"/>
        </Labels>
        <TickMarks isVisible="1" Length="5"/>
    </GraduatedAxis>
    <Trihedron isShown="1" Size="105"/>
</ViewState>
""")
# fill list AP_MODULES_LIST
ipar.append("AP_MODULES_LIST", "Mesh")


###
### GEOM component
###

import GEOM
import geompy
import math
import SALOMEDS


geompy.init_geom(theStudy)

FACE = geompy.MakeFaceHW(1, 1, 1)
[X_NEG,Y_NEG,Y_POS,X_POS] = geompy.ExtractShapes(FACE, geompy.ShapeType["EDGE"], True)
[geomObj_1] = geompy.SubShapes(FACE, [7])
[POINT] = geompy.SubShapes(FACE, [9])
geompy.addToStudy( FACE, 'FACE' )
geompy.addToStudyInFather( FACE, X_NEG, 'X_NEG' )
geompy.addToStudyInFather( FACE, Y_NEG, 'Y_NEG' )
geompy.addToStudyInFather( FACE, Y_POS, 'Y_POS' )
geompy.addToStudyInFather( FACE, X_POS, 'X_POS' )
geompy.addToStudyInFather( FACE, POINT, 'POINT' )

### Store presentation parameters of displayed objects
import iparameters
ipar = iparameters.IParameters(theStudy.GetModuleParameters("Interface Applicative", "GEOM", 1))


###
### SMESH component
###

import smesh, SMESH, SALOMEDS

smesh.SetCurrentStudy(theStudy)
import BLSURFPlugin
import StdMeshers
smeshObj_1 = smesh.Mesh(FACE)
BLSURF = smeshObj_1.Triangle(algo=smesh.BLSURF)
BLSURF_Parameters_1 = BLSURF.Parameters()
BLSURF_Parameters_1.SetPhySize( 0.2 )
isDone = smeshObj_1.Compute()
smeshObj_2 = smeshObj_1.GroupOnGeom(X_NEG,'X_NEG',SMESH.EDGE)
smeshObj_3 = smeshObj_1.GroupOnGeom(Y_NEG,'Y_NEG',SMESH.EDGE)
smeshObj_4 = smeshObj_1.GroupOnGeom(Y_POS,'Y_POS',SMESH.EDGE)
smeshObj_5 = smeshObj_1.GroupOnGeom(X_POS,'X_POS',SMESH.EDGE)
smeshObj_6 = smeshObj_1.GroupOnGeom(FACE,'FACE',SMESH.FACE)
smeshObj_7 = smeshObj_1.GroupOnGeom(smeshObj_8,'POINT',SMESH.NODE)
Maillage_regle = smesh.Mesh(FACE)
Regular_1D = Maillage_regle.Segment()
Local_Length_1 = Regular_1D.LocalLength(0.2)
Local_Length_1.SetPrecision( 1e-07 )
Quadrangle_2D = Maillage_regle.Quadrangle()
X_NEG_1 = Maillage_regle.GroupOnGeom(X_NEG,'X_NEG',SMESH.EDGE)
Y_NEG_1 = Maillage_regle.GroupOnGeom(Y_NEG,'Y_NEG',SMESH.EDGE)
Y_POS_1 = Maillage_regle.GroupOnGeom(Y_POS,'Y_POS',SMESH.EDGE)
X_POS_1 = Maillage_regle.GroupOnGeom(X_POS,'X_POS',SMESH.EDGE)
FACE_1 = Maillage_regle.GroupOnGeom(FACE,'FACE',SMESH.FACE)
smeshObj_9 = Maillage_regle.GroupOnGeom(smeshObj_8,'POINT',SMESH.NODE)
isDone = Maillage_regle.Compute()
smesh.SetName(smeshObj_1, 'Mesh_1')
smeshObj_1.ExportMED( r'/home/C29256/DATA/source/restitution/cas-tests/ssls138/ssls138a.mmed.med', 0, SMESH.MED_V2_2, 1 )
smeshObj_1.ConvertToQuadratic( 1 )
smesh.SetName(smeshObj_1, 'Mesh_1')
smeshObj_1.ExportMED( r'/home/C29256/DATA/source/restitution/cas-tests/ssls138/ssls138c.mmed.med', 0, SMESH.MED_V2_2, 1 )
smesh.SetName(Maillage_regle, 'Mesh_2')
Maillage_regle.ExportMED( r'/home/C29256/DATA/source/restitution/cas-tests/ssls138/ssls138b.mmed.med', 0, SMESH.MED_V2_2, 1 )
Maillage_regle.ConvertToQuadratic( 1 )
smesh.SetName(Maillage_regle, 'Mesh_2')
Maillage_regle.ExportMED( r'/home/C29256/DATA/source/restitution/cas-tests/ssls138/ssls138d.mmed.med', 0, SMESH.MED_V2_2, 1 )
smeshObj_7.SetColor( SALOMEDS.Color( 0, 0.666667, 1 ))
smeshObj_1.RemoveGroup( smeshObj_7 )
Maillage_regle.RemoveGroup( smeshObj_9 )
smeshObj_10 = smeshObj_1.GroupOnGeom(POINT,'POINT',SMESH.NODE)
POINT_1 = Maillage_regle.GroupOnGeom(POINT,'POINT',SMESH.NODE)
POINT_1.SetColor( SALOMEDS.Color( 0, 0.666667, 1 ))
[ smeshObj_2, smeshObj_3, smeshObj_4, smeshObj_5, smeshObj_6, smeshObj_10 ] = smeshObj_1.GetGroups()
[ smeshObj_2, smeshObj_3, smeshObj_4, smeshObj_5, smeshObj_6, smeshObj_10 ] = smeshObj_1.GetGroups()
Maillage_regle.ConvertFromQuadratic()
smesh.SetName(smeshObj_1, 'Mesh_1')
smeshObj_1.ExportMED( r'/home/C29256/DATA/source/restitution/cas-tests/rep_test/ssls138a.med', 0, SMESH.MED_V2_2, 1 )
Maillage_regle.ConvertToQuadratic( 1 )
smesh.SetName(smeshObj_1, 'Mesh_1')
smeshObj_1.ExportMED( r'/home/C29256/DATA/source/restitution/cas-tests/rep_test/ssls138c.med', 0, SMESH.MED_V2_2, 1 )
smeshObj_1.ConvertFromQuadratic()
smesh.SetName(Maillage_regle, 'Mesh_2')
Maillage_regle.ExportMED( r'/home/C29256/DATA/source/restitution/cas-tests/rep_test/ssls138b.med', 0, SMESH.MED_V2_2, 1 )
smeshObj_1.ConvertToQuadratic( 1 )
smesh.SetName(Maillage_regle, 'Mesh_2')
Maillage_regle.ExportMED( r'/home/C29256/DATA/source/restitution/cas-tests/rep_test/ssls138d.med', 0, SMESH.MED_V2_2, 1 )
smeshObj_1.RemoveGroup( smeshObj_6 )
smeshObj_1.RemoveGroup( smeshObj_5 )
smeshObj_1.RemoveGroup( smeshObj_4 )
smeshObj_1.RemoveGroup( smeshObj_3 )
smeshObj_1.RemoveGroup( smeshObj_2 )
smeshObj_1.RemoveGroup( smeshObj_10 )
status = smeshObj_1.RemoveHypothesis(BLSURF)
status = smeshObj_1.RemoveHypothesis(BLSURF_Parameters_1)
smeshObj_1.ConvertFromQuadratic()

## some objects were removed
aStudyBuilder = theStudy.NewBuilder()
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_1.GetMesh()))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_2))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_3))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_4))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_5))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_6))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_7))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_8))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_9))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = theStudy.FindObjectIOR(theStudy.ConvertObjectToIOR(smeshObj_10))
if SO is not None: aStudyBuilder.RemoveObjectWithChildren(SO)
## set object names
smesh.SetName(BLSURF.GetAlgorithm(), 'BLSURF')
smesh.SetName(BLSURF_Parameters_1, 'BLSURF Parameters_1')
smesh.SetName(Maillage_regle.GetMesh(), 'Maillage_regle')
smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
smesh.SetName(Local_Length_1, 'Local Length_1')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(X_NEG_1, 'X_NEG')
smesh.SetName(Y_NEG_1, 'Y_NEG')
smesh.SetName(Y_POS_1, 'Y_POS')
smesh.SetName(X_POS_1, 'X_POS')
smesh.SetName(FACE_1, 'FACE')
smesh.SetName(POINT_1, 'POINT')

### Store presentation parameters of displayed objects
import iparameters
ipar = iparameters.IParameters(theStudy.GetModuleParameters("Interface Applicative", "SMESH", 1))

#Set up entries:
# set up entry SMESH_4 (Maillage_regle) parameters
ipar.setParameter("SMESH_4", "VTKViewer_0_Visibility", "On")
ipar.setParameter("SMESH_4", "VTKViewer_0_Representation", "2")
ipar.setParameter("SMESH_4", "VTKViewer_0_IsShrunk", "0")
ipar.setParameter("SMESH_4", "VTKViewer_0_Entities", "e:1:f:1:v:1")
ipar.setParameter("SMESH_4", "VTKViewer_0_Colors", "surface:0:0.666667:1:backsurface:-100:edge:0:0.666667:1:node:1:0:0:outline:0:0.27451:0")
ipar.setParameter("SMESH_4", "VTKViewer_0_Sizes", "line:1:shrink:0.75")
ipar.setParameter("SMESH_4", "VTKViewer_0_PointMarker", "std:1:9")
ipar.setParameter("SMESH_4", "VTKViewer_0_Opacity", "1")
ipar.setParameter("SMESH_4", "VTKViewer_0_ClippingPlane", "Off")

###
### PARAVIS component
###


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser(1)
  iparameters.getSession().restoreVisualState(1)
