# -*- coding: iso-8859-1 -*-

###
### This file is generated automatically by SALOME v6.4.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
theStudy = salome.myStudy

import salome_notebook
notebook = salome_notebook.notebook

###
### GEOM component
###

import GEOM
import geompy
import math
import SALOMEDS


geompy.init_geom(theStudy)

Face_1 = geompy.MakeFaceHW(1, 1, 1)
geompy.TranslateDXDYDZ(Face_1, 0.5, 0.5, 0)
Face_2 = geompy.MakeTranslation(Face_1, 1, 0, 0)
TOUT = geompy.MakeFuse(Face_1, Face_2)
HAUT = geompy.CreateGroup(TOUT, geompy.ShapeType["EDGE"])
geompy.UnionIDs(HAUT, [9, 18])
BAS = geompy.CreateGroup(TOUT, geompy.ShapeType["EDGE"])
geompy.UnionIDs(BAS, [7, 14])
DROITE = geompy.CreateGroup(TOUT, geompy.ShapeType["EDGE"])
geompy.UnionIDs(DROITE, [16])
GAUCHE = geompy.CreateGroup(TOUT, geompy.ShapeType["EDGE"])
geompy.UnionIDs(GAUCHE, [4])
FACE_1 = geompy.CreateGroup(TOUT, geompy.ShapeType["FACE"])
geompy.UnionIDs(FACE_1, [2])
FACE_2 = geompy.CreateGroup(TOUT, geompy.ShapeType["FACE"])
geompy.UnionIDs(FACE_2, [12])
geompy.addToStudy( Face_1, 'Face_1' )
geompy.addToStudy( Face_2, 'Face_2' )
geompy.addToStudy( TOUT, 'TOUT' )
geompy.addToStudyInFather( TOUT, HAUT, 'HAUT' )
geompy.addToStudyInFather( TOUT, BAS, 'BAS' )
geompy.addToStudyInFather( TOUT, DROITE, 'DROITE' )
geompy.addToStudyInFather( TOUT, GAUCHE, 'GAUCHE' )
geompy.addToStudyInFather( TOUT, FACE_1, 'FACE_1' )
geompy.addToStudyInFather( TOUT, FACE_2, 'FACE_2' )

###
### SMESH component
###

import smesh, SMESH, SALOMEDS

smesh.SetCurrentStudy(theStudy)
import StdMeshers

TOUT_M = smesh.Mesh(TOUT)

Regular_1D_1 = TOUT_M.Segment(geom=FACE_1)
Nb_Segments_1 = Regular_1D_1.NumberOfSegments(1)
Nb_Segments_1.SetDistrType( 0 )
Quadrangle_2D = TOUT_M.Quadrangle(algo=smesh.QUADRANGLE,geom=FACE_1)
Quadrangle_Parameters_1 = Quadrangle_2D.QuadrangleParameters(StdMeshers.QUAD_STANDARD)

Regular_1D_2 = TOUT_M.Segment(geom=FACE_2)
status = TOUT_M.AddHypothesis(Nb_Segments_1,FACE_2)
MEFISTO_2D = TOUT_M.Triangle(algo=smesh.MEFISTO,geom=FACE_2)
Length_From_Edges_1 = MEFISTO_2D.LengthFromEdges()

isDone = TOUT_M.Compute()

TOUT_M.ConvertToQuadratic( 1 )

HAUT_M = TOUT_M.GroupOnGeom(HAUT,'HAUT',SMESH.EDGE)
BAS_M = TOUT_M.GroupOnGeom(BAS,'BAS',SMESH.EDGE)
DROITE_M = TOUT_M.GroupOnGeom(DROITE,'DROITE',SMESH.EDGE)
GAUCHE_M = TOUT_M.GroupOnGeom(GAUCHE,'GAUCHE',SMESH.EDGE)
FACE_1_M = TOUT_M.GroupOnGeom(FACE_1,'FACE_1',SMESH.FACE)
FACE_2_M = TOUT_M.GroupOnGeom(FACE_2,'FACE_2',SMESH.FACE)

TOUT_M.ExportMED( r'/tmp/zzzz319a.med', 0, SMESH.MED_V2_2, 1 )

## set object names
smesh.SetName(TOUT_M.GetMesh(), 'TOUT')
smesh.SetName(Regular_1D_1.GetAlgorithm(), 'Regular_1D_1')
smesh.SetName(Regular_1D_2.GetAlgorithm(), 'Regular_1D_2')
smesh.SetName(Nb_Segments_1, 'Nb. Segments_1')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(Quadrangle_Parameters_1, 'Quadrangle Parameters_1')
smesh.SetName(MEFISTO_2D.GetAlgorithm(), 'MEFISTO_2D')
smesh.SetName(Length_From_Edges_1, 'Length From Edges')
smesh.SetName(HAUT_M, 'HAUT')
smesh.SetName(BAS_M, 'BAS')
smesh.SetName(DROITE_M, 'DROITE')
smesh.SetName(GAUCHE_M, 'GAUCHE')
smesh.SetName(FACE_1_M, 'FACE_1')
smesh.SetName(FACE_2_M, 'FACE_2')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser(1)
