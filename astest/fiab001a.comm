# MODIF  DATE 04/04/2006   AUTEUR CIBHHLV L.VIVAN 
# RESPONSABLE GNICOLAS G.NICOLAS
# TITRE ANALYSE FIABILISTE - EXEMPLE DE COUPLAGE AVEC MEFISTO
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
#
# Preliminaire :
# Ce cas-test est un cas de validation du couplage entre Code_ASTER et
# le logiciel fiabiliste MEFISTO. Il peut servir d'exemple pour
# la realisation d'une etude fiabiliste mais n'est en aucun cas une
# evaluation de cette technique.
#
# Description du cas :
# Le fonctionnement nominal correspond au lancement du calcul
# deterministe avec les valeurs moyennes pour les 5 parametres :
#       PA moyen = 1000.
#       PB moyen = 8000.
#       E1 moyen = 430000.
#       E2 moyen = 380000.
#       E3 moyen = 130000.
# Ces conditions nominales entrainent dans le coin bas-gauche de la
# structure une contrainte de composante SIXX = -2.6795397166E+05
#
# Pour les besoins du cas-test, on declare que la structure est en mode
# de defaillance quand la valeur absolue de cette contrainte est
# superieure a la valeur nominale. Par exemple, quand on depasse une
# valeur absolue de 2.71E5. Autrement dit, il faut declarer un seuil de
# -2.71E+5 et dire que c'est un minimum a ne pas franchir.
#
# Quelques remarques :
# . Le jeu de commandes deterministe associe (dans le .38) a ete
#   cree en donnant aux parametres sensibles leurs valeurs moyennes. En
#   fait, on peut mettre n'importe quoi ! En effet, les calculs seront
#   effectues a partir de valeurs deduites des lois des parametres
#   definis ci-apres. On a mis les valeurs moyennes car c'est ainsi
#   que le calcul deterministe avait ete mis au point et rien n'a ete
#   change.
# . Le seuil de defaillance est ici tres proche du fonctionnement
#   nominal. C'est volontaire pour avoir tres peu d'iteration dans la
#   recherche du point de conception par MEFISTO et avoir ainsi un
#   cas-test rapide. Mais cela n'a aucun interet physique.
# 
DEBUT(CODE=_F(NOM='FIAB001A',NIV_PUB_WEB='INTRANET'),PAR_LOT='OUI');
#
RESUFIAB = MACR_FIABILITE(
              INFO=1,
              MESS_ASTER = 'DERNIER',
              LOGICIEL = 'MEFISTO',
              VERSION='V3_2',
              UNITE_ESCL = 38,
              RECH_PT_CONCEPT='OUI',
              SEUIL=-2.71E+05,
              SEUIL_TYPE = 'MINIMUM',
              VARIABLE=(
                       _F(NOM='E1',
                          LOI='NORMALE',
                          GRADIENT='NON',
                          INCREMENT=0.5,
                          VALE_MOY=430000.0,
                          ECART_TYPE=2000.0,
                          POINT_REF=431000.0,),
                       _F(NOM='E2',
                          LOI='NORMALE',
                          GRADIENT='NON',
                          INCREMENT=0.5,
                          VALE_MOY=380000.0,
                          ECART_TYPE=2000.0,
                          POINT_INI=381400.0,),
                       _F(NOM='E3',
                          LOI='NORMALE',
                          GRADIENT='OUI',
                          VALE_MOY=130000.0,
                          ECART_TYPE=1000.0,),
                        _F(NOM='PA',
                          LOI='NORMALE',
                          GRADIENT='OUI',
                          VALE_MOY=1000.0,
                          ECART_TYPE=100.0,
                          POINT_INI=1050.0,),
                       _F(NOM='PB',
                          LOI='NORMALE',
                          GRADIENT='OUI',
                          VALE_MOY=8000.0,
                          ECART_TYPE=150.0,
                          POINT_INI=8110.0,
                          POINT_REF=8080.0,),
                       ),
              T_SPHERE = 'NON',
           );
#
# Le retour de la macro est un concept de type LISTR8. On le transforme
# en une fonction pour le test de non regression.
###IMPR_CO(CO=RESUFIAB) ;
#
LR_BIDON = DEFI_LIST_REEL ( VALE = ( 1. ) , );
###IMPR_CO(CO=LR_BIDON) ;
#
R_FIAB = DEFI_FONCTION ( NOM_PARA  = 'INST',
                         VALE_PARA = LR_BIDON,
                         VALE_FONC = RESUFIAB,
                         INFO = 1 );
#
TEST_FONCTION ( VALEUR =_F( FONCTION  = R_FIAB,
                            PRECISION = 1.E-6,
                            VALE_PARA = 1.,
                            REFERENCE = 'ANALYTIQUE',
                            VALE_REFE = 0.,
                            CRITERE   = 'ABSOLU',
                          ),
              ) ;
#
FIN();
