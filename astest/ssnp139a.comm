# MODIF  DATE 15/01/2013   AUTEUR DELMAS J.DELMAS 
# TITRE POUTRE DCB 2D PLASTIQUE AVEC ELEMENTS D'INTERFACE EN CHARGEMENT MONOTONE : LOI CZM_OUV_MIX
# ssnp139a.para = tps_job 400 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================


DEBUT(CODE=_F( NOM = 'SSNP139A',NIV_PUB_WEB='INTERNET'))


# DEFINITION DES LOIS DE COMPORTEMENT DE LA DCB ET DE LA FISSURE
loi_vol='VMIS_ISOT_LINE'
loi_czm='CZM_OUV_MIX'

# INSTANT FINAL ET VALEUR DU DEPL FINAL
tfin=10
depl_f=3.5

# NOMBRES DE PAS PAR INSTANT ET NOMBRE D'ARCHIVAGE
nbpas = 2*tfin
nbarch = tfin

# PARAMETRES MECANIQUES DE LA LOI CZM (valeurs tests)
tenac=0.259/2
sigc=35
dc=2*tenac/sigc

# PARAMETRES NUMERIQUES DE LA LOI CZM
ri_gli=10
pen_lag=100

# PARAMETRES DE LA LOI ELASTOPLASTIQUE (valeurs tests)
young = 200000
nnuu = 0.3
splas = 30
ecrou = 3577


PRE_GMSH()
MA0  =  LIRE_MAILLAGE()

MA = CREA_MAILLAGE(MAILLAGE  = MA0, LINE_QUAD = _F(TOUT='OUI'))

MA  =  DEFI_GROUP(
    reuse  = MA,
    MAILLAGE = MA,
    CREA_GROUP_MA = (

# LINES
     _F(NOM = 'DCB_G',  GROUP_MA = 'GM981'),
     _F(NOM = 'DCB_D',  GROUP_MA = 'GM982'),
     _F(NOM = 'DCB_JH', GROUP_MA = 'GM983'),
     _F(NOM = 'DCB_JB', GROUP_MA = 'GM984'),
     _F(NOM = 'DCB_HG', GROUP_MA = 'GM985'),
     _F(NOM = 'DCB_HD', GROUP_MA = 'GM986'),
     _F(NOM = 'DCB_BG', GROUP_MA = 'GM987'),

# SURFACES
     _F(NOM = 'DCB1'  ,  GROUP_MA = 'GM988'),
     _F(NOM = 'DCB2'  ,  GROUP_MA = 'GM989'),
     _F(NOM = 'DCBJ'  ,  GROUP_MA = 'GM990'),
   ),

    CREA_GROUP_NO = (
     _F(NOM = 'DCB_G',  GROUP_MA = 'GM981'),
     _F(NOM = 'NO_7',   GROUP_MA = 'GM954'),


  )
)


MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_FISSURE=_F(GROUP_MA='DCBJ'),
                 )

MO=AFFE_MODELE(

                MAILLAGE=MA,
                AFFE= (
                _F(
                        GROUP_MA = ('DCB1','DCB2','DCB_G'),
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'D_PLAN'
                     ),
                _F(
                        GROUP_MA = 'DCBJ',
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'PLAN_INTERFACE'
                       ),
                 ))


# DEFINITION DE LA POSITION DE LA FISSURE DANS LE REPERE GLOBAL
ORIEN_FI=AFFE_CARA_ELEM(MODELE=MO,
                     MASSIF=(_F(GROUP_MA='DCBJ',ANGL_REP=(90, 0 ,0))));


MATE=DEFI_MATERIAU(
     ELAS=_F(
             E =  young,
             NU = nnuu),
     ECRO_LINE=_F(
                  D_SIGM_EPSI=ecrou,
                  SY=splas),
     RUPT_FRAG = _F(
                     GC        = tenac,
                     SIGM_C    = sigc,
                     PENA_LAGR = pen_lag,
                     RIGI_GLIS = ri_gli,
                    ))


CM=AFFE_MATERIAU(
               MAILLAGE=MA,
               AFFE=_F(
                       GROUP_MA = ('DCB1','DCB2','DCBJ'),
                       MATER = MATE),
              )


# CHARGEMENTS

SYMETRIE = AFFE_CHAR_MECA(
  MODELE = MO,
  FACE_IMPO = ( _F(GROUP_MA='DCB_JB',DY = 0))
 )

TRACTION = AFFE_CHAR_MECA(
 MODELE = MO,
  DDL_IMPO = (_F(GROUP_NO = 'NO_7'   ,DX = 0)),
  FACE_IMPO= (_F(GROUP_MA = 'DCB_G'  ,DY = 1 ),
            ))

# LISTES D'INSTANT ET D'ARCHIVAGE

deb=-0.1
L_INST=DEFI_LIST_REEL(DEBUT   = deb,
     INTERVALLE=(
      _F( JUSQU_A = 0,        NOMBRE = 1 ),
      _F( JUSQU_A = tfin  ,   NOMBRE = nbpas ),

      ))

INS_ARCH=DEFI_LIST_REEL(DEBUT   = deb,
     INTERVALLE=(
      _F( JUSQU_A = 0,        NOMBRE = 1 ),
      _F( JUSQU_A = tfin  ,   NOMBRE = nbarch),

      ))

# DEFINITION DE L'EVOLUTION DU CHARGEMENT
FCT_MON = DEFI_FONCTION(
  NOM_PARA = 'INST',
  VALE     = (-1,0 ,  0,0,   tfin ,depl_f ),
                )

DEFLIST =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST =L_INST ),
                        ECHEC=_F(
                  ACTION       = 'DECOUPE',
                  SUBD_METHODE = 'MANUEL',
                  SUBD_PAS  = 5,
                  SUBD_PAS_MINI = 1.E-10,
                  SUBD_NIVEAU=10,
                                 ))

# CALCUL
# LES SYSTEMES LINEAIRES SONT DIFFICILES A RESOUDRE.
# ON DEVERROUILLE LA DETECTION DE SINGULARITE. LE PROCESSUS DE NEWTON
# CORRIGE LES EVENTUELLES DERIVES.
U=STAT_NON_LINE( INFO=1,
  MODELE     = MO,
  CHAM_MATER = CM,
  CARA_ELEM  = ORIEN_FI,
  EXCIT      = (
                 _F(CHARGE = SYMETRIE),
                 _F(CHARGE = TRACTION,
                    FONC_MULT = FCT_MON),
               ),
  COMP_INCR  = (
                _F(RELATION = loi_vol,  GROUP_MA = ('DCB1','DCB2')),
                _F(RELATION = loi_czm ,    GROUP_MA = 'DCBJ'),
                ),
  INCREMENT  = _F(LIST_INST = DEFLIST,
                  INST_FIN = tfin,
                  ),
  NEWTON     = _F(MATRICE    = 'TANGENTE'  , REAC_ITER=1),
  CONVERGENCE = _F(
                   RESI_REFE_RELA = 1.E-6,
                   SIGM_REFE      = sigc,
                   DEPL_REFE      = dc,
                   ITER_GLOB_MAXI = 8,
                  ),
  SOLVEUR = _F(METHODE = 'MUMPS'),
  ARCHIVAGE = _F(
     LIST_INST     = INS_ARCH
    )
  )

# POST_TRAITEMENT

U = CALC_CHAMP(reuse = U,
               RESULTAT = U,
               FORCE='FORC_NODA',
               TOUT = 'OUI',
               )
               
# INTERPOLATION NODALE DES CHAMPS AUX PG  
U=CALC_CHAMP(reuse =U,
             RESULTAT=U,
             VARI_INTERNE='VARI_ELNO',
             CONTRAINTE='SIEF_ELNO',
             GROUP_MA='DCBJ'
             );

U=CALC_CHAMP(
             reuse =U,
             RESULTAT=U,
             VARI_INTERNE='VARI_NOEU',
             CONTRAINTE='SIEF_NOEU',
             GROUP_MA='DCBJ'
             );

FORC = POST_RELEVE_T(
 ACTION = _F(
   INTITULE     = 'FORCE_G',
   OPERATION    = 'EXTRACTION',
   GROUP_NO        = 'DCB_G',
   NOM_CHAM     = 'FORC_NODA',
   RESULTANTE   = ('DX','DY'),
   RESULTAT     =  U,
   TOUT_ORDRE   = 'OUI',
    ))
DEPLA = POST_RELEVE_T(
 ACTION = _F(
   INTITULE     = 'DEPLY',
   OPERATION    = 'EXTRACTION',
   GROUP_NO        = 'NO_7',
   NOM_CHAM     = 'DEPL',
   NOM_CMP   = ('DX','DY'),
   RESULTAT     =  U,
   TOUT_ORDRE   = 'OUI',
    ))


# TESTS RESU

TEST_TABLE(
           VALE_CALC=3.7160114000000002,
           TOLE_MACHINE=1.E-3,
           NOM_PARA='DY',
           TABLE=FORC,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=3.0,),
           )

TEST_TABLE(
           VALE_CALC=4.0367141100000001,
           TOLE_MACHINE=1.E-3,
           NOM_PARA='DY',
           TABLE=FORC,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=5.0,),
           )

TEST_TABLE(
           VALE_CALC=4.5900151200000003,
           TOLE_MACHINE=1.E-3,
           NOM_PARA='DY',
           TABLE=FORC,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=10.0,),
           )

# TESTS DE QUANTITES LOCALES AUX PG
TEST_RESU(RESU=_F(INST=10,
                  POINT=2,
                  RESULTAT=U,
                  NOM_CHAM='VARI_ELGA',
                  NOM_CMP='V7',
                  VALE_CALC=3.8705561473717E-03,
                  TOLE_MACHINE=1.E-6,
                  MAILLE='M9788',),
          )
          
TEST_RESU(RESU=_F(INST=10,
                  POINT=2,
                  RESULTAT=U,
                  NOM_CHAM='SIEF_ELGA',
                  NOM_CMP='SIGN',
                  VALE_CALC=16.693315519188,
                  TOLE_MACHINE=1.E-6,
                  MAILLE='M9788',),
          )
          
# TESTS DES EXTRAPOLATIONS NODALES
TEST_RESU(RESU=_F(INST=10,
                  RESULTAT=U,
                  NOM_CHAM='VARI_NOEU',
                  NOM_CMP='V7',
                  VALE_CALC=4.8093409300539E-03,
                  TOLE_MACHINE=1.E-6,
                  NOEUD='N137'
                  ),
          )
          
TEST_RESU(RESU=_F(INST=10,
                  RESULTAT=U,
                  NOM_CHAM='SIEF_NOEU',
                  NOM_CMP='SIGN',
                  VALE_CALC=12.253117222718,
                  TOLE_MACHINE=1.E-6,
                  NOEUD='N137'
                  ),
          )

IMPR_TABLE(TABLE = DEPLA);
IMPR_TABLE(TABLE = FORC);
IMPR_RESU(FORMAT='RESULTAT',RESU=(_F(RESULTAT=U,
                                     NOM_CHAM='VARI_ELGA',
                                     INST=tfin,
                                     MAILLE=('M9788','M9789','M9790','M9791','M9792'),
                                     NOM_CMP=('V3','V7'))))


FIN(FORMAT_HDF='OUI')
