# MODIF  DATE 26/09/2011   AUTEUR TRAN V-X.TRAN 
#
# TITRE FATIGUE, AMPLITUDE VARIABLE, TEST DU CRITERE en FORMULE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# QUI SE RETROUVE le critere de FATESOCI_MODI_AV 
#
# sslv135m.para = tps_job 160 mem_job 800Mo ncpus 1 liste_test S
#----------------------------------------------------------------------
#    Cas test sslv135m : cube 3D
#                        Essai de chargement cyclique bi-axial
#                        critere en formule
#----------------------------------------------------------------------
#        Unites : Newton , Millimetre , Seconde (N,MM,S,->Mpa)
#----------------------------------------------------------------------
#
#               y       a
#               I<------------->                     a = 10 mm
#                     Face1                                    2
#                   (dessus)                         S = 100 mm
#               P1              P2
#               o--------------o
#              /I             /I
#        P5   / I        P6  / I             
#            o--+-----------o  I 
#            I  I   Face5   I  I  Face4      
#  Face3     I  I (derri.)  I  I (cote d.)   
# (cote g.)  I  I           I  I             
#            I  I  P3       I  I P4          
#            I  o-----------I--o      - x    
#            I /            I /              
#         P7 I/          P8 I/               
#            o--------------o                
#                                            
#          /       Face2
#         z      (dessous)
#
#
#    CHARGEMENT     FX(T) <=> +      FY(T) <=> x
#
#            I 
#            I                 x                       x
#            I 
#   1.0E+4 N I     +        x     x        +        x     x
#            I  +     +        3s    4s +     +             
#           -I-----I-----I-----I-----I-----I-----I-----I-----I----> T 
#            I    1s    2s  +     +                 +     +
#            I  x     x        +        x     x        +
#            I                  
#  -2.0E+4 N I     x                       x
#            I 
#
#
# L'AMPLITUDE DE FX(T) = 2.0E+4 N, SA VALEUR MOYENNE = 0.0
# L'AMPLITUDE DE FY(T) = 4.0E+4 N, SA VALEUR MOYENNE = 0.0
#
# A L'INSTANT 0S, FX(T) = 0.0 N  ET  FY(T) = 0.0 N
# A L'INSTANT 1S, FX(T) = 1.0E+4 N  ET  FY(T) = -2.0E+4 N
# A L'INSTANT 2S, FX(T) = 0.0 N  ET  FY(T) = 0.0 N
# A L'INSTANT 3S, FX(T) = -1.0E+4 N  ET  FY(T) = 2.0E+4 N
# A L'INSTANT 4S, FX(T) = 0.0 N  ET  FY(T) = 0.0 N
# PUIS NOUS REPETONS UNE SECONDE FOIS CE CYCLE DE CHARGEMENT.
#
#----------------------------------------------------------------------
#
# DANS CE CAS TEST NOUS TESTONS LE CRITERE EN FORMULE AUX POINTS
# DE GAUSS ET AUX NOEUDS
#----------------------------------------------------------------------
#
#
# REMARQUE : 
# LA PRESENCE DE VALEURS DE REFERENCE MULTIPLES DANS CE CAS-TEST S'EXPLIQUE
# PAR L'EXISTENCE DE 2 PLANS CRITIQUES, DONC 2 VECTEURS NORMAUX POUR UNE 
# VALEUR DE DOMMAGE MAX. AUTREMENT DIT, LE DOMMAGE MAX EST ASSOCIE A 2 PLANS.
#
#
DEBUT( CODE =_F( NOM = 'sslv135m', NIV_PUB_WEB = 'INTRANET' ,
 VISU_EFICAS='NON'),);

CUBE = LIRE_MAILLAGE( )

CUBE=DEFI_GROUP(reuse = CUBE,
                ALARME='OUI',
                CREA_GROUP_NO=(_F(GROUP_MA='FACE1',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE2',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE3',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE4',
                                CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE5',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE6',
                                  CRIT_NOEUD='TOUS')),
                MAILLAGE=CUBE,
               );

CUBE=DEFI_GROUP(reuse = CUBE,
                ALARME='OUI',
                CREA_GROUP_MA=(_F(OPTION='APPUI', 
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE1',
                                  NOM='FACE1_3D'),
                               _F(OPTION='APPUI', 
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE2',
                                  NOM='FACE2_3D'),
                               _F(OPTION='APPUI', 
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE3',
                                  NOM='FACE3_3D'),
                               _F(OPTION='APPUI', 
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE4',
                                  NOM='FACE4_3D'),
                               _F(OPTION='APPUI', 
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE5',
                                  NOM='FACE5_3D'),
                               _F(OPTION='APPUI', 
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE6',
                                  NOM='FACE6_3D')),
                MAILLAGE=CUBE,
               );

MANCOF=DEFI_FONCTION( NOM_PARA='EPSI',
                      INTERPOL='LOG',
                      PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE', 
                      VALE=(  0.00226,    5800000.,
                              0.00230,    4600000.,
                              0.00250,     239284.,
                              0.00270,     149535.,
                              0.00300,      73544.,
                              0.00350,      33821.,
                              0.00600,       2850.,
                              0.00850,       1068.,
                              0.01000,        562.,
                              1.00000,          1.,  )  )

#               _____________________________
#              I                             I
#              I      AMPLITUDE VARIABLE     I
#              I_____________________________I
#

COEF   = DEFI_FONCTION ( NOM_PARA    ='INST',
                          PROL_DROITE  ='LINEAIRE',
                          PROL_GAUCHE ='LINEAIRE',
                          VALE        =( 0.,    0.,
                                         1.,  100.,
                                         2.,    0.,
                                         3., -100.,
                                         4.,    0.,
                                         5.,  100.,
                                         6.,    0.,
                                         7., -100.,
                                         8.,    0.,
                                        )
                       )

ACIER   = DEFI_MATERIAU   ( ELAS           =_F( E        = 200000.,
                                                NU       = 0.3,
                                                ALPHA    = 0.0 ),
                            FATIGUE        =_F( MANSON_COFFIN = MANCOF, ),
                          )

LINST = DEFI_LIST_REEL   ( DEBUT      =  0.,
                           INTERVALLE =_F (JUSQU_A= 8.0, NOMBRE = 16  )
                                         );

TROISD   = AFFE_MODELE    ( MAILLAGE   =    CUBE,
                            AFFE       =_F ( PHENOMENE    = 'MECANIQUE',
                                             MODELISATION = '3D',
                                             TOUT         = 'OUI'    ))

MAT   = AFFE_MATERIAU    ( MAILLAGE    =   CUBE,
                           AFFE        =_F ( TOUT       = 'OUI',
                                             MATER      = ACIER,
                            ))                 
                                             
# POUR RETROUVER LE CRITERE FATESOCI_MODI_AV   
# POUR LE CHARGEMENT VARIBALE, LE CRITER EST DEFINIT SUR UN SOUS-CYCLE ELEMENTAIRE
# APRES AVOIR COMPTE PAR LA METHODE RAINFLOW DLA CISSION PROJETEE
# CETTE CRITERE EST APPLIQUEE POUR TROUVER LE PLAN SUR LAQUELLE LE SOMMANGE EST MAXIMAL
# ON NOTE QUE LE SOUS-CYCLE CONSISTE 2 POINTS: 1 ET 2                                            
CRIT_FAT =   FORMULE(
           NOM_PARA=('EPSPR_1','EPSPR_2','SIGN_1','SIGN_2'),
           VALE=''' 1.5*( abs(EPSPR_1-EPSPR_2)/2.0 * (1+ max(0,SIGN_1, SIGN_2) )) '''
           )

           
MANCO1=   FORMULE(
           NOM_PARA=('NBRUP'),
           VALE=''' 0.2*(NBRUP**(-0.1619)) '''
           )
                      
###MANCO2 EST UNE FONCTION TABULEE DE WHOL_F
###ON LANCE WHOL_Fb POUR OBTENIR LES VALEURS DE REFERENCE DE ENDO
           
MANCO2=DEFI_FONCTION( NOM_PARA='EPSI',
                      INTERPOL='LOG',
                      PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE', 
                      VALE=(  0.0160705597376903,   5800000,
                              0.0166851264640102,   4600000,
                              0.0269267460278808,    239284,
                              0.0290562208232061,    149535,
                              0.0325938750521422,     73544,
                              0.03696193596605  ,     33821,
                              0.0551684284730705,      2850,
                              0.0646702157543039,      1068,
                              0.0717542593793769,       562,
                              0.2               ,        1.,         )  )
                              
# CHARGEMENT SELON LES 2 AXES X ET Y
# ----------------------------------

TR_CS  = AFFE_CHAR_MECA (
           MODELE       =  TROISD,
           FACE_IMPO    =(_F( GROUP_MA= 'FACE3' ,DX=0.),
                          _F( GROUP_MA= 'FACE2' ,DY=0.) ),
           DDL_IMPO     =(_F( GROUP_NO= 'P3'    ,DZ=0.) ),
           FORCE_FACE   =(_F( GROUP_MA= 'FACE4', FX=1.),
                          _F( GROUP_MA= 'FACE1', FY=-2.) )
                         );

# CALCUL AVEC STAT_NON_LINE
# -------------------------

SOL_NL = STAT_NON_LINE ( TITRE      =
                'TEST TRACTION-COMPRESSION ALTERNEE - FATESOCI_MODI_AV',
                        MODELE     =   TROISD,
                        CHAM_MATER =   MAT,
                        EXCIT      =_F ( CHARGE       = TR_CS,
                                         FONC_MULT    = COEF,
                                         TYPE_CHARGE  = 'FIXE_CSTE'),
                        COMP_ELAS  =_F ( RELATION     = 'ELAS',
                                         DEFORMATION  = 'PETIT',
                                         TOUT         = 'OUI'    ),
                        INCREMENT  =_F ( LIST_INST    = LINST, ),
                        NEWTON     =_F ( MATRICE      = 'ELASTIQUE',
                                         REAC_INCR    = 0 ))

SOL_NL = CALC_ELEM( reuse    = SOL_NL,
                    RESULTAT = SOL_NL,
                    OPTION   = ('EPSI_ELGA',
                                'SIEF_ELNO',
                                'EPSI_ELNO')
                  )

SOL_NL = CALC_NO( reuse    = SOL_NL,
                  RESULTAT = SOL_NL,
                  TOUT = 'OUI',
                  GROUP_MA = ('FACE1_3D', 'FACE2_3D', 'FACE3_3D'),
                  OPTION   = ('SIEF_NOEU','EPSI_NOEU')
                )


# CALCUL DE LA FATIGUE SUR LES FACES 1, 2 ET 3 DE LA STRUCTURE AUX NOEUDS
# -----------------------------------------------------------------------
                    
F_NLNO0=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                       OPTION        = 'DOMA_NOEUD',
                       TYPE_CHARGE   = 'NON_PERIODIQUE',
                       RESULTAT      = SOL_NL,
                       CHAM_MATER    = MAT,
                       GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                       MAILLAGE      = CUBE,
                       CRITERE       = 'FORMULE_CRITERE',
                       FORMULE_GRDEQ   = CRIT_FAT,
                       COURBE_GRD_VIE  = 'MANSON_C',
                       PROJECTION    = 'UN_AXE',
                     )

F_NLNO1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                       OPTION        = 'DOMA_NOEUD',
                       TYPE_CHARGE   = 'NON_PERIODIQUE',
                       RESULTAT      = SOL_NL,
                       CHAM_MATER    = MAT,
                       GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                       MAILLAGE      = CUBE,
                       CRITERE       = 'FORMULE_CRITERE',
                       FORMULE_GRDEQ   = CRIT_FAT,
                       COURBE_GRD_VIE  = 'FORM_VIE',
                       FORMULE_VIE     = MANCOF,
                       PROJECTION    = 'UN_AXE',
                     )

F_NLNO2=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                       OPTION        = 'DOMA_NOEUD',
                       TYPE_CHARGE   = 'NON_PERIODIQUE',
                       RESULTAT      = SOL_NL,
                       CHAM_MATER    = MAT,
                       GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                       MAILLAGE      = CUBE,
                       CRITERE       = 'FORMULE_CRITERE',
                       FORMULE_GRDEQ   = CRIT_FAT,
                       COURBE_GRD_VIE  = 'FORM_VIE',
                       FORMULE_VIE     = MANCO1,
                       PROJECTION    = 'UN_AXE',
                     )                     

TEST_RESU(CHAM_NO=( _F( CHAM_GD = F_NLNO0,
                        NOM_CMP = 'VNM1X',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = (-4.3837114678908E-01,4.3837114678908E-01),),
                    _F( CHAM_GD = F_NLNO0,
                        NOM_CMP = 'VNM1Y',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = 8.9879404629917E-01 ),
                    _F( CHAM_GD = F_NLNO0,
                        NOM_CMP = 'VNM1Z',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = 6.1232339957368E-17,
                        CRITERE = 'ABSOLU' ),
                    _F( CHAM_GD = F_NLNO0,
                        NOM_CMP = 'ENDO1',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = 1.6823455707218E-01 ),
                     )
            )

TEST_RESU(CHAM_NO=( _F( CHAM_GD = F_NLNO1,
                        NOM_CMP = 'VNM1X',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = (-4.3837114678908E-01,4.3837114678908E-01),),
                    _F( CHAM_GD = F_NLNO1,
                        NOM_CMP = 'VNM1Y',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = 8.9879404629917E-01 ),
                    _F( CHAM_GD = F_NLNO1,
                        NOM_CMP = 'VNM1Z',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = 6.1232339957368E-17,
                        CRITERE = 'ABSOLU' ),
                    _F( CHAM_GD = F_NLNO1,
                        NOM_CMP = 'ENDO1',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = 1.6823455707218E-01 ),
                     )
            )

TEST_RESU(CHAM_NO=( _F( CHAM_GD = F_NLNO2,
                        NOM_CMP = 'VNM1X',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = (-4.3837114678908E-01,4.3837114678908E-01),),
                    _F( CHAM_GD = F_NLNO2,
                        NOM_CMP = 'VNM1Y',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = 8.9879404629917E-01 ),
                    _F( CHAM_GD = F_NLNO2,
                        NOM_CMP = 'VNM1Z',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 1.0E-10,
                        VERSION = '8.01.14',
                        VALE = 6.1232339957368E-17,
                        CRITERE = 'ABSOLU' ),
                    _F( CHAM_GD = F_NLNO2,
                        NOM_CMP = 'ENDO1',
                        NOEUD = 'N1',
                        REFERENCE = 'AUTRE_ASTER',
                        PRECISION = 4.0E-10,
                        VALE = 0.61422410176668 ),
                     )
            )
            
# CALCUL DE LA FATIGUE SUR L'ENSEMBLE DE LA STRUCTURE AUX POINTS DE GAUSS
# -----------------------------------------------------------------------

MAT2   = AFFE_MATERIAU    ( MAILLAGE    =   CUBE,
                           AFFE        =_F ( TOUT       = 'OUI',
                                             MATER      = ACIER,
                                             ))

FATI_NL0=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                      OPTION        = 'DOMA_ELGA',
                      TYPE_CHARGE   = 'NON_PERIODIQUE',
                      MAILLAGE      = CUBE,
                      GROUP_MA      = ('CUBE'),
                      RESULTAT      = SOL_NL,
                      CHAM_MATER    = MAT2,
                      CRITERE       = 'FORMULE_CRITERE',
                      FORMULE_GRDEQ   = CRIT_FAT,
                      COURBE_GRD_VIE  = 'MANSON_C',
                      PROJECTION    = 'UN_AXE',
                    )

FATI_NL1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                      OPTION        = 'DOMA_ELGA',
                      TYPE_CHARGE   = 'NON_PERIODIQUE',
                      MAILLAGE      = CUBE,
                      GROUP_MA      = ('CUBE'),
                      RESULTAT      = SOL_NL,
                      CHAM_MATER    = MAT2,
                      CRITERE       = 'FORMULE_CRITERE',
                      FORMULE_GRDEQ   = CRIT_FAT,
                      COURBE_GRD_VIE  = 'FORM_VIE',
                      FORMULE_VIE     = MANCOF,
                      PROJECTION    = 'UN_AXE',
                    )

FATI_NL2=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                      OPTION        = 'DOMA_ELGA',
                      TYPE_CHARGE   = 'NON_PERIODIQUE',
                      MAILLAGE      = CUBE,
                      GROUP_MA      = ('CUBE'),
                      RESULTAT      = SOL_NL,
                      CHAM_MATER    = MAT2,
                      CRITERE       = 'FORMULE_CRITERE',
                      FORMULE_GRDEQ   = CRIT_FAT,
                      COURBE_GRD_VIE  = 'FORM_VIE',
                      FORMULE_VIE     = MANCO1,
                      PROJECTION    = 'UN_AXE',
                    )
                                        
TEST_RESU(CHAM_ELEM=( _F( CHAM_GD = FATI_NL0,
                          NOM_CMP = 'VNM1X',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = (-4.3837114678908E-01,4.3837114678908E-01),),
                      _F( CHAM_GD = FATI_NL0,
                          NOM_CMP = 'VNM1Y',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = 8.9879404629917E-01 ),
                      _F( CHAM_GD = FATI_NL0,
                          NOM_CMP = 'VNM1Z',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = 6.1232339957368E-17,
                          CRITERE = 'ABSOLU' ),
                      _F( CHAM_GD = FATI_NL0,
                          NOM_CMP = 'ENDO1',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = 1.6823455707218E-01 ),
                       )
            )

TEST_RESU(CHAM_ELEM=( _F( CHAM_GD = FATI_NL1,
                          NOM_CMP = 'VNM1X',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = (-4.3837114678908E-01,4.3837114678908E-01),),
                      _F( CHAM_GD = FATI_NL1,
                          NOM_CMP = 'VNM1Y',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = 8.9879404629917E-01 ),
                      _F( CHAM_GD = FATI_NL1,
                          NOM_CMP = 'VNM1Z',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = 6.1232339957368E-17,
                          CRITERE = 'ABSOLU' ),
                      _F( CHAM_GD = FATI_NL1,
                          NOM_CMP = 'ENDO1',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = 1.6823455707218E-01 ),
                       )
            )
            
TEST_RESU(CHAM_ELEM=( _F( CHAM_GD = FATI_NL2,
                          NOM_CMP = 'VNM1X',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = (-4.3837114678908E-01,4.3837114678908E-01),),
                      _F( CHAM_GD = FATI_NL2,
                          NOM_CMP = 'VNM1Y',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = 8.9879404629917E-01 ),
                      _F( CHAM_GD = FATI_NL2,
                          NOM_CMP = 'VNM1Z',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 1.0E-10,
                          VERSION = '8.01.14',
                          VALE = 6.1232339957368E-17,
                          CRITERE = 'ABSOLU' ),
                      _F( CHAM_GD = FATI_NL2,
                          NOM_CMP = 'ENDO1',
                          MAILLE = 'M60',
                          POINT = 3,
                          REFERENCE = 'AUTRE_ASTER',
                          PRECISION = 4.0E-10,
                          VALE = 0.61422410176668
                                                  ),
                       )
            )   
         
FIN( )
