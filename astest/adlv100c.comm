# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#
#      PISTON COUPLE A UNE COLONNE DE FLUIDE
#                CAS AXIS
#              CAS TEST ADLV100C
#

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

PRE_IDEAS()

MAYA=LIRE_MAILLAGE( )

EAU=DEFI_MATERIAU( FLUIDE=_F( RHO = 1000.,  CELE_R = 1400.))

AIR=DEFI_MATERIAU( FLUIDE=_F( RHO = 1.2,    CELE_R = 340.))

ACIER=DEFI_MATERIAU( ELAS=_F( RHO = 7800.,  NU = 0.3,  E = 2.E+11))

CHAMPMAT=AFFE_MATERIAU(  MAILLAGE=MAYA,AFFE=(
                       _F( GROUP_MA = ('EAU',  'COUPLEAU',),  MATER = EAU),
                       _F( GROUP_MA = ('AIR',  'COUPLAIR',),  MATER = AIR),
                       _F( GROUP_MA = 'PISTON',             MATER = ACIER))
                            )

COLONNE=AFFE_MODELE( MAILLAGE=MAYA,AFFE=(
                  _F( GROUP_MA = ('EAU',  'AIR',),
                  MODELISATION = 'AXIS_FLUIDE',  PHENOMENE = 'MECANIQUE'),
                  _F( GROUP_MA = ('COUPLAIR',  'COUPLEAU',),
                  MODELISATION = 'AXIS_FLUI_STRU', PHENOMENE = 'MECANIQUE'),
                  _F( GROUP_MA = 'PISTON',
                  MODELISATION = 'AXIS',     PHENOMENE = 'MECANIQUE'))
                          )

SURFLIBR=AFFE_CHAR_MECA( MODELE=COLONNE,
#             DDL_IMPO:(GROUP_NO:NOEUSURF  PRES:0.  PHI:0.));
#  -- POUR TESTER LIAISON_UNIF :
              DDL_IMPO=_F( NOEUD = 'N19',  PRES = 0.,  PHI = 0.),
              LIAISON_UNIF=_F( GROUP_NO = 'NOEUSURF', DDL = ('PRES','PHI',)))

GUIDAGE=AFFE_CHAR_MECA( MODELE=COLONNE,
                    DDL_IMPO=_F( GROUP_NO = 'NOEUPIST',  DX = 0.))

MATELE_K=CALC_MATR_ELEM( MODELE=COLONNE,
                              CHAM_MATER=CHAMPMAT,  OPTION='RIGI_MECA',
                              CHARGE=(SURFLIBR,  GUIDAGE,))

MATELE_M=CALC_MATR_ELEM( MODELE=COLONNE,
                              CHAM_MATER=CHAMPMAT,  OPTION='MASS_MECA',
                              CHARGE=(SURFLIBR, GUIDAGE,))

NUM=NUME_DDL( MATR_RIGI=MATELE_K)

MATASK=ASSE_MATRICE( MATR_ELEM=MATELE_K,  NUME_DDL=NUM)

MATASM=ASSE_MATRICE( MATR_ELEM=MATELE_M,  NUME_DDL=NUM)

MODES=CALC_MODES( OPTION='BANDE',
                  MATR_RIGI=MATASK,
                  MATR_MASS=MATASM,
                  CALC_FREQ=_F( FREQ = (5., 100.) ),
                 )


MASSES=POST_ELEM(
                             MODELE=COLONNE,
                         CHAM_MATER=CHAMPMAT,
                          MASS_INER=_F(
                                      TOUT = 'OUI')
                     )

TEST_TABLE(
           VALE_CALC=1.9249323599999999,
           NOM_PARA='MASSE',
           TABLE=MASSES,)

TEST_TABLE(
           VALE_CALC=0.095131889999999997,
           
           NOM_PARA='CDG_Z',
           TABLE=MASSES,)

TEST_TABLE(
           VALE_CALC=2.406165E-3,
           
           NOM_PARA='IZ_G',
           TABLE=MASSES,)

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  PARA='FREQ',
                  RESULTAT=MODES,
                  VALE_CALC=13.827701314,
                  VALE_REFE=13.82,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=5.0000000000000001E-3,),
          )

FIN()
#
