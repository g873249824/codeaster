# MODIF  DATE 30/07/2012   AUTEUR LEFEBVRE J-P.LEFEBVRE 
# TITRE TEST DE LA COMMANDE EXEC_LOGICIEL STANDARD ET GENERATION DE MAILLAGE
# zzzz141a.para = tps_job 60 mem_job 256Mo ncpus 1 liste_test R
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='ZZZZ141A', NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),IMPR_MACRO='OUI',)


EXEC_LOGICIEL(LOGICIEL='ls -la')


EXEC_LOGICIEL(LOGICIEL='pwd',
              MACHINE_DISTANTE=_F(SSH_ADRESSE  = 'localhost',
                                  SSH_PORT     = 22,),);


EXEC_LOGICIEL(SALOME=_F(CHEMIN_SCRIPT   = './fort.18',
                        SALOME_PORT     = 2810,
                        SALOME_RUNAPPLI = 'echo /chemin-salome/runAppli ',),      # Remplacer par le chemin vers runAppli dans Salome
              INFO=2);


EXEC_LOGICIEL(SALOME=_F(CHEMIN_SCRIPT   = './fort.18',
                        SALOME_HOST     = 'localhost',
                        SALOME_PORT     = 2811,
                        FICHIERS_ENTREE = [ './fort.91', './fort.92' ],           # Remplacer par les chemins vers les fichiers de donnees du script Salome
                        FICHIERS_SORTIE = [ './fort.98', './fort.99' ],           # Remplacer par les chemins vers les lesquels les fichiers generes par le script Salome seront recopies
                        SALOME_RUNAPPLI = 'echo /aster/outils/runSalomeScript',   # Remplacer par le chemin vers runAppli dans Salome
                        NOM_PARA = [ 'CHOIX', 'STUDY' ],                          # Champs qui seront remplaces
                        VALE     = [ 'DEPL', "''" ],),                            # Valeur des champs
              INFO=2);


EXEC_LOGICIEL(SALOME=_F(CHEMIN_SCRIPT='./Python/Templates/salomeGetStudies.py',
                        SALOME_HOST     = 'localhost',
                        SALOME_PORT     = 2810,
                        FICHIERS_SORTIE = [ './fort.99' ],                        # Remplacer par les chemins vers les lesquels les fichiers generes par le script Salome seront recopies
                        SALOME_RUNAPPLI = 'echo /aster/outils/runSalomeScript',), # Remplacer par le chemin vers runAppli dans Salome
              INFO=2);



EXEC_LOGICIEL(MAILLAGE=_F(FORMAT='GMSH',
                          UNITE_GEOM=16,
                          UNITE=19,
                          MAILLAGE=CO('magmsh'),),
              # sur l'AlphaServer, gmsh 1.44 (!) retourne un code retour 1...
              CODE_RETOUR_MAXI=1,
              INFO=1)

EXEC_LOGICIEL(MAILLAGE=_F(FORMAT='SALOME',
                          UNITE_GEOM=17,
                          UNITE=21,
                          MAILLAGE=CO('mamed'),),
              ARGUMENT='cube.mmed',
              INFO=1)

EXEC_LOGICIEL(MAILLAGE=_F(FORMAT='GIBI',
                          UNITE_GEOM=14,
                          UNITE=20,
                          MAILLAGE=CO('magibi'),),
              INFO=1)

# ----------------------------------------------------------------------------
# TEST_TABLE toujours ok pour l'AGLA
# En cas d'erreur, le code retour de la commande doit arreter l'execution.
tab1 = CREA_TABLE(LISTE=(_F(PARA='TEST',
                            TYPE_K='K8',
                            LISTE_K='VALEUR  ',),
                         _F(PARA='BOOLEEN',
                            LISTE_I=1,),),)

TEST_TABLE(TABLE=tab1,
           FILTRE=_F(NOM_PARA='TEST',
                     VALE_K='VALEUR  ',),
           NOM_PARA='BOOLEEN',
           VALE_I=1,
           PRECISION=1.e-3,
           CRITERE='ABSOLU',
           REFERENCE='NON_REGRESSION',
           VERSION='8.3.10',)

FIN()
