# MODIF  DATE 06/07/2004   AUTEUR CIBHHLV L.VIVAN 
# RESPONSABLE MABBAS M.ABBAS
#
# TITRE AILETTE FISSUREE AVEC CONTACT
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

##############################################################################################
# Ce fichier demontre les possibilites de couplage entre Python (et tous ses outils annexes)
# et Code_Aster
##############################################################################################

##############################################################################################
# Outils Python utilises
#  - Numeric Python: module permettant des operations numeriques de haut niveau.
#     Dans cet exemple, on utilise les transformeee de Fourier rapides (FFT)
#     integres dans le package mais il FAUT l'installer
#  - Gnuplot: module permettant de creer des graphiques sur le logicel libre GNUPLOT
##############################################################################################

##############################################################################################
#
# Ce fichier de commande genere quatre types de resultats:
# 1/ Le fichier resu standard d'ASTER (ailette.resu)
# 2/ Un fichier post-processing au format 'universel' I-DEAS (ailette.unv)
# 3/ Un fichier post-processing au format GMSH (le nom doit etre precise dans la variable 
#     <fichier_GMSH>)
# 4/ Trois courbes au format GNUPLOT (dont les noms doivent etre precises dans les variables
#     <fichier_GNUPLOT1>,<fichier_GNUPLOT2>,<fichier_GNUPLOT3> )
#    Il faut noter que le troisieme fichier GNUPLOT permet de generer un fichier postscript
#   dont le nom doit etre precise dans la variable <fichier_PS>
#
### GMSH
#
# On peut choisir de lancer GMSH en mode interactif (a preciser par la variable 
# <launch_GMSH>). Dans ce cas, ne pas oublier de renseigner la variable <executable_GMSH> sur
# l'emplacement de l'executable GMSH.
#
### GNUPLOT
#
# On peut aussi demander a executer GNUPLOT en mode interactif (variable <launch_GNUPLOT>)
# Si GNUPLOT n'est pas en mode interactif, le fichier postscript ne sera pas genere et il 
# faudra executer GNUPLOT avec le troisieme fichier <fichier_GNUPLOT3> en parametre.
#
##############################################################################################

##############################################################################################
#
# DEBUT
#
##############################################################################################

#=============================================================================================
# Variables globales
#=============================================================================================

# Executer GMSH: 1=OUI, 0=NON
launch_GMSH      = 0

# Emplacement de l'executable gmsh
executable_GMSH  = "/home/mabbas/GMSH/gmsh-batch"

# Executer GNUPLOT en interactif: 1=OUI, 0=NON
launch_GNUPLOT   = 0

#=============================================================================================
# Unites logiques
#=============================================================================================
# Unites logiques pour sortie GNUPLOT (si mode non interactif)
unite_GNUPLOT1 = 38
unite_GNUPLOT2 = 39
unite_GNUPLOT3 = 40

# Unite logique pour sortie POSTSCRIPT
unite_PS       = 41

# Unite logique pour sortie GMSH
unite_GMSH       = 37

# Nom du fichier GMSH
fichier_GMSH     = "depl.pos"

#=============================================================================================
# Importation des modules Python
#=============================================================================================

import Gnuplot
from Numeric import *
from FFT import *
import os
import shutil
from Macro.recal import EXTRACT

##############################################################################################
#
# ETUDE ASTER
#
##############################################################################################

#=============================================================================================
# Preparation du calcul
#=============================================================================================

DEBUT(CODE=_F(  NOM = 'SDNS02A',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),PAR_LOT='NON');

# Lecture du maillage
MA=LIRE_MAILLAGE(VERI_MAIL=_F(VERIF='NON',),);

# Definition du modele: probleme mecanique en contraintes planes
MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='C_PLAN',
                       ),);

# Re-orientation du maillage de peau
MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_PEAU_2D=(_F(GROUP_MA='L3',),
                               _F(GROUP_MA='L4',),),
                 MODELE=MO,);

# Definition du materiau
MAT=DEFI_MATERIAU(ELAS=_F(E=8.E3,
                          NU=0.29999999999999999,
                          RHO=7800.0,),);

# Affectation du materiau au maillage
CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=MAT,),);
                            
#=============================================================================================
# Conditions limites
#=============================================================================================
# Deplacement impose sur L1
CHCAS1=AFFE_CHAR_MECA(MODELE=MO,
                      DDL_IMPO=_F(GROUP_MA='L1',
                                  DX=0.5,
                                  DY=0.0,
                                  ),);
                                  
# Definition du contact au niveau de la fissure
CHCONT=AFFE_CHAR_MECA(MODELE=MO,
                     CONTACT=_F(GROUP_MA_MAIT='L3',
                                GROUP_MA_ESCL='L4',
                                SANS_GROUP_NO='F2',
                                REAC_GEOM="AUTOMATIQUE"),
                                )

#=============================================================================================
# Chargement
#=============================================================================================

fin = 500.
n = 50


# Chargement: definition de la fonction sinusoidale                                

FREQ = 0.01;

LINST=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=fin,
                                   NOMBRE =n,),);

FONC = FORMULE(REEL = '''(REEL:INST) = SIN(2.*PI*FREQ*INST)''');

FMULT = CALC_FONC_INTERP(FONCTION=FONC,
                       LIST_PARA=LINST,
                       NOM_PARA = 'INST',
                      );

#=============================================================================================
# Calcul
#=============================================================================================

# Definition de l'archivage des resultats
LARCH=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=fin,
                                   NOMBRE =n,),);

# Avec contact (CHCONT)
RESU=DYNA_NON_LINE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                  EXCIT=(_F(CHARGE=CHCAS1,
                            FONC_MULT=FMULT,),
                         _F(CHARGE=CHCONT)
                          ),
                   COMP_INCR=_F(RELATION='ELAS',
                                TOUT='OUI',),
                   INCREMENT=_F(LIST_INST=LINST,
                                SUBD_PAS=3,
                                SUBD_PAS_MINI=1.E-3,),
                   HHT=_F(ALPHA=0.0,),
                   NEWTON=_F(REAC_INCR=0,
                             PREDICTION='ELASTIQUE',
                             REAC_ITER=0,),
                   SOLVEUR=_F(METHODE='MULT_FRONT',
                              RENUM='METIS',),
                   CONVERGENCE=_F(RESI_GLOB_RELA=1.E-05,
                                  ITER_GLOB_MAXI=20,),
                   ARCHIVAGE=_F(LIST_INST=LARCH,
                                ARCH_ETAT_INIT='OUI',),);

# Sortie d'un fichier universel (unv) IDEAS
DEFI_FICHIER(FICHIER='IDEASMAIL',UNITE=30)
IMPR_RESU(FORMAT='IDEAS', VERSION=5, UNITE=30,
          RESU=_F(MAILLAGE=MA,
                  RESULTAT=RESU, ),);
DEFI_FICHIER(ACTION='LIBERER',UNITE=30 )  

# Sans contact
RESU2=DYNA_NON_LINE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                  EXCIT=(_F(CHARGE=CHCAS1,
                            FONC_MULT=FMULT,),
                          ),
                   COMP_INCR=_F(RELATION='ELAS',
                                TOUT='OUI',),
                   INCREMENT=_F(LIST_INST=LINST,
                                SUBD_PAS=3,
                                SUBD_PAS_MINI=1.E-3,),
                   HHT=_F(ALPHA=0.0,),
                   NEWTON=_F(REAC_INCR=0,
                             PREDICTION='ELASTIQUE',
                             REAC_ITER=0,),
                   SOLVEUR=_F(METHODE='MULT_FRONT',
                              RENUM='METIS',),
                   CONVERGENCE=_F(RESI_GLOB_RELA=1.E-05,
                                  ITER_GLOB_MAXI=20,),
                   ARCHIVAGE=_F(LIST_INST=LARCH,
                                ARCH_ETAT_INIT='OUI',),);


#=============================================================================================
# Resultats du cas avec contact
#=============================================================================================

IMPR_RESU(RESU=_F(RESULTAT=RESU,
                  NOM_CHAM='DEPL',
                  GROUP_NO='A4',
                  INST=500),);

IMPR_RESU(RESU=_F(RESULTAT=RESU,
                  NOM_CHAM='VITE',
                  GROUP_NO='A4',
                  INST=500),);

TEST_RESU(RESU=(
                 _F(RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='A4',
                   VALE=1.77227E-01,
                   INST=500,
                   REFERENCE='NON_REGRESSION',
                   VERSION='7.1.07',),
                _F(RESULTAT=RESU,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='A4',
                   VALE=4.34778E-02,
                   INST=500,
                   REFERENCE='NON_REGRESSION',
                   VERSION='7.2.2',),
  
                 _F(RESULTAT=RESU,
                   NOM_CHAM='VITE',
                   NOM_CMP='DX',
                   GROUP_NO='A4',
                   VALE=8.46964E-02,
                   INST=500,
                   REFERENCE='NON_REGRESSION',
                   VERSION='7.1.07',),
                _F(RESULTAT=RESU,
                   NOM_CHAM='VITE',
                   NOM_CMP='DY',
                   GROUP_NO='A4',
                   VALE=5.65116E-03,
                   INST=500,
                   REFERENCE='NON_REGRESSION',
                   VERSION='7.1.07',),                   
                   ),);

#=============================================================================================
# Resultats du cas sans contact
#=============================================================================================

TEST_RESU(RESU=(
                 _F(RESULTAT=RESU2,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='A4',
                   VALE=-2.53360E-01,
                   INST=500,
                   REFERENCE='NON_REGRESSION',
                   VERSION='7.1.07',),
                _F(RESULTAT=RESU2,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='A4',
                   VALE=-4.11685E-02,
                   INST=500,
                   REFERENCE='NON_REGRESSION',
                   VERSION='7.1.07',),
  
                 _F(RESULTAT=RESU2,
                   NOM_CHAM='VITE',
                   NOM_CMP='DX',
                   GROUP_NO='A4',
                   VALE=4.06656E-02,
                   INST=500,
                   REFERENCE='NON_REGRESSION',
                   VERSION='7.1.07',),
                _F(RESULTAT=RESU2,
                   NOM_CHAM='VITE',
                   NOM_CMP='DY',
                   GROUP_NO='A4',
                   VALE=8.02242E-03,
                   INST=500,
                   REFERENCE='NON_REGRESSION',
                   VERSION='7.1.07',),                   
                   ),);

IMPR_RESU(RESU=_F(RESULTAT=RESU2,
                  NOM_CHAM='DEPL',
                  GROUP_NO='A4',
                  INST=500,),);                  


IMPR_RESU(RESU=_F(RESULTAT=RESU2,
                  NOM_CHAM='VITE',
                  GROUP_NO='A4',
                  INST=500,),); 

##############################################################################################
#
# POST-TRAITEMENT
#
##############################################################################################

#=============================================================================================
# GMSH
#=============================================================================================

# Creation d'un fichier de sortie au format GMSH  

# Ouverture de l'unite logique FORTRAN 
DEFI_FICHIER(FICHIER='POST',UNITE=unite_GMSH )

# # Eriture du resultat
# IMPR_RESU(MODELE=MO, FORMAT='GMSH', UNITE=unite_GMSH, 
#           RESU=_F(NOM_CHAM='DEPL',
#                   RESULTAT=RESU,),);
# Eriture du resultat
IMPR_RESU( MODELE=MO, FORMAT='GMSH', UNITE=unite_GMSH, 
           RESU=_F(MAILLAGE=MA,),);
# Fermeture de l'unite logique FORTRAN
DEFI_FICHIER(ACTION='LIBERER',UNITE=unite_GMSH )


# Lancement de GMSH
if launch_GMSH == 1:
   # Penser a avoir le fichier_GMSH dans le bon repertoire pour lancer GMSH !
   # Copie du fichier fort.55 vers fichier_GMSH. C'est ce fichier qui pourra etre 
   # ouvert avec GMSH 
   os.system('cp fort.'+str(unite_GMSH)+' '+fichier_GMSH)

   # On peut aussi utiliser
   #shutil.copyfile('fort.+'+`Unite_GMSH`,Fichier_GMSH);
   os.system(executable_GMSH+' '+fichier_GMSH)

#=============================================================================================
# Passage d'ASTER a Numeric Python
#=============================================================================================

# Extraction pour le cas avec contact
TAB=POST_RELEVE_T(ACTION=_F(INTITULE='DEPLA',
                            GROUP_NO='A4',
                            TOUT_CMP='OUI',
                            RESULTAT=RESU,
                            NOM_CHAM='DEPL',
                            TOUT_ORDRE='OUI',
                            OPERATION='EXTRACTION',),);

DEPLX = EXTRACT(TAB , 'INST' , 'DY')

# Extraction pour le cas sans contact
TAB2=POST_RELEVE_T(ACTION=_F(INTITULE='DEPLA',
                            GROUP_NO='A4',
                            TOUT_CMP='OUI',
                            RESULTAT=RESU2,
                            NOM_CHAM='DEPL',
                            TOUT_ORDRE='OUI',
                            OPERATION='EXTRACTION',),);

DEPLX2 = EXTRACT(TAB2 , 'INST' , 'DY')

#=============================================================================================
# Calcul des transformees de Fourier
#=============================================================================================

FFT_DEPL  = fft(DEPLX[:,1])
PUISS     = FFT_DEPL*conjugate(FFT_DEPL)

FFT_DEPL2 = fft(DEPLX2[:,1])
PUISS2    = FFT_DEPL2*conjugate(FFT_DEPL2)

#=============================================================================================
# GNUPLOT
#=============================================================================================

fichier_GNUPLOT1 = "fort."+str(unite_GNUPLOT1);
fichier_GNUPLOT2 = "fort."+str(unite_GNUPLOT2);
fichier_GNUPLOT3 = "fort."+str(unite_GNUPLOT3);
fichier_PS       = "fort."+str(unite_PS);                             

if launch_GNUPLOT == 0:
        graphe1 = Gnuplot.Gnuplot(fichier_GNUPLOT1)
else:
        graphe1 = Gnuplot.Gnuplot(persist=1)

# Preferences gestion du passage des donnees de Python a Gnuplot
Gnuplot.GnuplotOpts.prefer_inline_data=1

graphe1('set data style lines')
graphe1('set grid')


# Trace 1 (deplacements)
graphe1.plot(Gnuplot.Data(DEPLX,title='Deplacement avec contact'),
            Gnuplot.Data(DEPLX2,title='Deplacement sans contact'))


if launch_GNUPLOT == 1:
        raw_input('\n\nAppuyer sur une touche pour continuer...\n\n')
                    
# Trace 2 (FFT des deplacements)
if launch_GNUPLOT == 0:
        graphe2 = Gnuplot.Gnuplot(fichier_GNUPLOT2)
else:
        graphe2 = Gnuplot.Gnuplot(persist=1)

graphe2('set data style lines')
graphe2('set grid')


graphe2.plot(Gnuplot.Data(transpose(array([arange(n/2)/fin,
                                          PUISS.real[0:n/2]])),
                         title='FFT_DEPL avec contact'),
            Gnuplot.Data(transpose(array([arange(n/2)/fin,
                                          PUISS2.real[0:n/2]])),
                         title='FFT_DEPL sans contact'))

                    
# Sortie des courbes GNUPLOT en Postscript
if launch_GNUPLOT == 0:
        graphe3 = Gnuplot.Gnuplot(fichier_GNUPLOT3)
else:
        graphe3 = Gnuplot.Gnuplot(persist=1)

graphe3('set data style lines')
graphe3('set grid')
graphe3('set terminal postscript color')
graphe3('set output "'+fichier_PS+'" ')
graphe3.plot(Gnuplot.Data(DEPLX,title='Deplacement avec contact'),
            Gnuplot.Data(DEPLX2,title='Deplacement sans contact'))
graphe3.plot(Gnuplot.Data(transpose(array([arange(n/2)/fin,
                                          PUISS.real[0:n/2]])),
                         title='FFT_DEPL avec contact'),
            Gnuplot.Data(transpose(array([arange(n/2)/fin,
                                          PUISS2.real[0:n/2]])),
                         title='FFT_DEPL sans contact'))





FIN();
