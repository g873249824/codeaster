# TITRE ESSAI DE TRACTION D UNE PLAQUE TROUEE AVEC LA METHODE IMPLEX
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI'))

# LECTURE DU MAILLAGE
MAIL=LIRE_MAILLAGE(FORMAT='MED',);

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_NO=_F(GROUP_MA='34',),);

# AFFECTATION DU MODELE SUR LE MAILLAGE
MODE=AFFE_MODELE(MAILLAGE=MAIL,
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='MECANIQUE',
                         MODELISATION='D_PLAN',),);

# DEFINITION DES PARAMETRES DE LA LOI DE COMPORTEMENT
MA=DEFI_MATERIAU(ELAS=_F(E=70,
                         NU=0.2,),
                 ECRO_LINE=_F(D_SIGM_EPSI=2.170542,
                              SY=0.24,),);

# AFFECTATION DU MATERIAU SUR L ENSEMBLE DU MAILLAGE
MATE=AFFE_MATERIAU(MAILLAGE=MAIL,
                   AFFE=_F(TOUT='OUI',
                           MATER=MA,),);

# CONDITIONS AUX LIMITES ET CHARGEMENTS
CHAR=AFFE_CHAR_MECA(MODELE=MODE,
                    DDL_IMPO=(_F(GROUP_MA='12',
                                  DY=0.0,),
                               _F(GROUP_MA='45',
                                  DX=0.0,),),);

CHAR2=AFFE_CHAR_MECA(MODELE=MODE,
                     DDL_IMPO=_F(GROUP_MA='34',
                                  DY=0.3,),);

F_DEPL=DEFI_FONCTION(NOM_PARA    = 'INST',
                     VALE        = (0,0, 1,1),
                     PROL_DROITE = 'LINEAIRE',);

# DISCRETISATION EN TEMPS
TFIN = 1.0;

L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=TFIN,
                                    NOMBRE=50,),);

DEFLIST = DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = L_INST,),);

IARCH = DEFI_LIST_REEL(
  DEBUT = 0.,
  INTERVALLE = (
    _F(JUSQU_A =  TFIN, NOMBRE = 25),
    )
  )

# RESOLUTION AVEC LA METHODE ITERATIVE DE NEWTON-RAPHSON
RESUNL=STAT_NON_LINE(MODELE=MODE,
                     CHAM_MATER=MATE,
                     EXCIT=(_F(CHARGE=CHAR,),
                            _F(CHARGE=CHAR2,
                               FONC_MULT=F_DEPL,),),
                     CONVERGENCE=_F(ITER_GLOB_MAXI=25),
                     COMPORTEMENT=_F(RELATION='VMIS_ISOT_LINE',),
                     INCREMENT=_F(LIST_INST=DEFLIST,
                                  INST_FIN=TFIN,),
                     NEWTON=_F(REAC_ITER=1,),);

# EXTRACTION DE LA COURBE FORCE APPLIQUEE EN FONCTION DU TEMPS
RESUNL=CALC_CHAMP(reuse =RESUNL,
               RESULTAT=RESUNL,
               FORCE='FORC_NODA');

FORC=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                             INTITULE='FORCE',
                             RESULTAT=RESUNL,
                             NOM_CHAM='FORC_NODA',
                             GROUP_NO='34',
                             RESULTANTE='DY',),);

FX=RECU_FONCTION(TABLE=FORC,
                 PARA_X='INST',
                 PARA_Y='DY',
                 INTERPOL='LIN',
                 PROL_DROITE='CONSTANT',
                 PROL_GAUCHE='CONSTANT');

# RESOLUTION AVEC LA METHODE IMPL-EX
RESUIE=STAT_NON_LINE(MODELE=MODE,
                     CHAM_MATER=MATE,
                     EXCIT=(_F(CHARGE=CHAR,),
                            _F(CHARGE=CHAR2, FONC_MULT=F_DEPL,),),
                     COMPORTEMENT=_F(RELATION='VMIS_ISOT_LINE',),
                     INCREMENT=_F(LIST_INST=DEFLIST,
                                  INST_FIN=TFIN,),
                     METHODE = 'IMPLEX',
                     ARCHIVAGE = _F(LIST_INST= IARCH),
);

# EXTRACTION DE LA COURBE FORCE APPLIQUEE EN FONCTION DU TEMPS
RESUIE=CALC_CHAMP(reuse =RESUIE,
               RESULTAT=RESUIE,
               FORCE='FORC_NODA');

FORCIE=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                               INTITULE='FORCE',
                               RESULTAT=RESUIE,
                               NOM_CHAM='FORC_NODA',
                               GROUP_NO='34',
                               RESULTANTE='DY',),);

FXIE=RECU_FONCTION(TABLE=FORCIE,
                   PARA_X='INST',
                   PARA_Y='DY',
                   INTERPOL='LIN',
                   PROL_DROITE='CONSTANT',
                   PROL_GAUCHE='CONSTANT');

# DIFF DES COURBES OBTENUES AVEC LES DEUX METHODES
DIFF=CALC_FONCTION(COMB=(
                          _F( FONCTION = FX, COEF =  1.),
                          _F( FONCTION = FXIE, COEF = -1.),
                          ) );

TEST_FONCTION(VALEUR=(_F(VALE_CALC=0.0,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.040000000000000001,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=9.9999999999999995E-07,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-0.000565856185452,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.080000000000000002,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=5.6999999999999998E-4,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-0.00500015233082,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.12,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=5.1000000000000004E-3,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-0.00895122810039,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.16,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=8.9999999999999993E-3,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-0.0294154198527,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.20000000000000001,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=0.029999999999999999,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-0.00126786955284,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.32000000000000001,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.2999999999999999E-3,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-0.00056339261269,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.40000000000000002,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=5.6400000000000005E-4,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-0.000160995064821,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.59999999999999998,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=1.6100000000000001E-4,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-9.43465332592e-05,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.80000000000000004,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=9.4400000000000004E-05,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-8.69697596493e-05,
                         VALE_REFE=0.0,
                         CRITERE='ABSOLU',
                         VALE_PARA=1.0,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=8.7000000000000001E-05,
                         FONCTION=DIFF,),
                      ),
              )

# CALCUL DU CRITERE DES MOINDRES CARRES ENTRE LES DEUX COURBES
# ON INTEGRE LA DIFF DES DEUX COURBES ET ON SOMME LES TERMES
INT=CALC_FONCTION(INTEGRE=(
                          _F( FONCTION = DIFF,),
                          ) );

TINT=CREA_TABLE(FONCTION= _F(FONCTION = DIFF,
                             PARA = ('INST','DY')),);

TEST_TABLE(
           VALE_CALC=0.082413281462864002,
           NOM_PARA='DY',
           TYPE_TEST='SOMM_ABS',
           TABLE=TINT,
           )

FIN();
