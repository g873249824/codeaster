# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='NON'));

mesh=LIRE_MAILLAGE(FORMAT='MED',);

mesh=MODI_MAILLAGE(reuse =mesh,
                   MAILLAGE=mesh,
                   ORIE_PEAU_3D=_F(GROUP_MA='S_e',),);

# Define the material
steel=DEFI_MATERIAU(
          ELAS=     _F(E= 210000., NU = 0.3),
          ECRO_LINE=_F(D_SIGM_EPSI=100., SY=100.,),
          )

chmat=AFFE_MATERIAU(MAILLAGE=mesh,
                    AFFE=_F(TOUT='OUI',
                            MATER=steel,),);
# Mechanic model
model=AFFE_MODELE(MAILLAGE=mesh,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

# Boundary condition
chg_b=AFFE_CHAR_CINE(MODELE=model,
                      MECA_IMPO=_F(GROUP_MA='S_inf',
                                 DX=0,DY=0.0,DZ=0),
                     );

chg_p=AFFE_CHAR_MECA(MODELE=model,
                     PRES_REP=_F(GROUP_MA='S_e',
                                 PRES = 1000,),
                    )

# Time discretization
list_t=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=10.0,
                                    PAS=1.0,),);

list_i=DEFI_LIST_INST(METHODE='MANUEL', DEFI_LIST=_F(LIST_INST=list_t,),);

rampe=DEFI_FONCTION(NOM_PARA='INST',VALE=(0.0,0.0,
                                          10.,1.,
                   ),);

####################################################################################################
#
# Calcul complet de référence
#
####################################################################################################

stnl=STAT_NON_LINE(MODELE=model,
                   CHAM_MATER=chmat,
                   EXCIT=(_F(CHARGE=chg_b,),
                          _F(CHARGE=chg_p,FONC_MULT=rampe),
                         ),
                   INCREMENT=_F(LIST_INST=list_i,),
                   COMPORTEMENT=_F(RELATION='VMIS_ISOT_LINE',),)

stnl=CALC_CHAMP(reuse=stnl,
                RESULTAT=stnl,
                CONTRAINTE='SIEF_NOEU',);

# Valeurs de référence (calcul complet) - HORS RID
TEST_RESU(RESU=(
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N7',
                   NOM_CMP='DX',
                   VALE_CALC=-0.208992921588,
                   ),
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N7',
                   NOM_CMP='DY',
                   VALE_CALC=-0.208992921588,
                   ),
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N7',
                   NOM_CMP='DZ',
                   VALE_CALC=0.547254495773,
                   ),
                ),
          );

TEST_RESU(RESU=(
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N2',
                   NOM_CMP='SIXX',
                   VALE_CALC=13992.3974341,
                   ),
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N2',
                   NOM_CMP='SIYY',
                   VALE_CALC=13992.3974341,
                   ),
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N2',
                   NOM_CMP='SIZZ',
                   VALE_CALC=14047.6477194,
                   ),
                ),
          );

# Valeurs de référence (calcul complet) - Dans RID
TEST_RESU(RESU=(
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N27',
                   NOM_CMP='DX',
                   VALE_CALC=0.0696319525128,
                   ),
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N27',
                   NOM_CMP='DY',
                   VALE_CALC=0.199062276741,
                   ),
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N27',
                   NOM_CMP='DZ',
                   VALE_CALC=0.529606351907,
                   ),
                ),
          );

TEST_RESU(RESU=(
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N23',
                   NOM_CMP='SIXX',
                   VALE_CALC=13300.4780377,
                   ),
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N23',
                   NOM_CMP='SIYY',
                   VALE_CALC=13300.3220671,
                   ),
                _F(RESULTAT=stnl,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N23',
                   NOM_CMP='SIZZ',
                   VALE_CALC=13368.1442621,
                   ),
                ),
          );


####################################################################################################
#
# Calcul hyper-réduit
#
####################################################################################################

# Récupère base primal
base_p=LIRE_RESU(TYPE_RESU  = 'MODE_EMPI',
                 FORMAT     = 'MED',
                 MODELE     = model,
                 UNITE      = 70,
                 FORMAT_MED =_F(NOM_CHAM_MED = 'base_p__DEPL',
                                NOM_CHAM     = 'DEPL',),
                 TOUT_ORDRE = 'OUI',);

# Récupère base duale
base_d=LIRE_RESU(TYPE_RESU  = 'MODE_EMPI',
                 FORMAT     = 'MED',
                 MODELE     = model,
                 UNITE      = 71,
                 FORMAT_MED = _F(NOM_CHAM_MED = 'base_d__SIEF_NOEU',
                                 NOM_CHAM     = 'SIEF_NOEU',),
                 TOUT_ORDRE = 'OUI',);

# Define HROM
mesh=DEFI_GROUP(reuse=mesh,
                MAILLAGE=mesh,
                CREA_GROUP_MA=_F(NOM='S_e_rid',
                               INTERSEC=('RID','S_e',),),);

mesh=DEFI_GROUP(reuse=mesh,
                MAILLAGE=mesh,
                CREA_GROUP_MA=_F(NOM='S_inf_rid',
                                 INTERSEC=('RID','S_inf',),),);

# Mechanic model
model_r=AFFE_MODELE(MAILLAGE=mesh,
               AFFE=_F(GROUP_MA='RID',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

# Boundary condition
chg_b_r=AFFE_CHAR_CINE(MODELE=model_r,
                      MECA_IMPO=_F(GROUP_MA='S_inf_rid',
                                 DX=0,DY=0.0,DZ=0),
                     );

chg_p_r=AFFE_CHAR_MECA(MODELE=model_r,
                     PRES_REP=_F(GROUP_MA='S_e_rid',
                                 PRES = 1000,),
                    )
# Calcul hyper-réduit
redu=STAT_NON_LINE(MODELE=model_r,
                   CHAM_MATER=chmat,
                   EXCIT=(_F(CHARGE=chg_b_r,),
                          _F(CHARGE=chg_p_r,FONC_MULT=rampe),
                         ),
                   INCREMENT=_F(LIST_INST=list_i,),
                    METHODE='MODELE_REDUIT',
                   MODELE_REDUIT=_F(
                    REAC_ITER=1,
                    BASE_PRIMAL     = base_p,
                    DOMAINE_REDUIT  = 'OUI',
                    GROUP_NO_INTERF = 'INF',
                    ),
                   COMPORTEMENT=_F(RELATION='VMIS_ISOT_LINE',),)

redu=CALC_CHAMP(reuse=redu,
                RESULTAT=redu,
                CONTRAINTE='SIEF_NOEU',);

# Test calcul hyper-réduit/complet - Dans RID
TEST_RESU(RESU=(
                _F(RESULTAT=redu,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N27',
                   NOM_CMP='DX',
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=0.0696319525128,
                   VALE_CALC=0.0695351164226,
                   PRECISION = 0.0015
                   ),
                _F(RESULTAT=redu,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N27',
                   NOM_CMP='DY',
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=0.199062276741,
                   VALE_CALC=0.198459188339,
                   PRECISION=0.0035
                   ),
                _F(RESULTAT=redu,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N27',
                   NOM_CMP='DZ',
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=0.529606351907,
                   VALE_CALC=0.528530484536,
                   PRECISION=0.0025
                   ),
                ),
          );

TEST_RESU(RESU=(
                _F(RESULTAT=redu,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N23',
                   NOM_CMP='SIXX',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=13275.5982813,
                   VALE_REFE=13300.4780377,
                   PRECISION=0.002
                   ),
                _F(RESULTAT=redu,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N23',
                   NOM_CMP='SIYY',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=13275.368448,
                   VALE_REFE=13300.3220671,
                   PRECISION=0.002
                   ),
                _F(RESULTAT=redu,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N23',
                   NOM_CMP='SIZZ',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=13343.5824913,
                   VALE_REFE=13368.1442621,
                   PRECISION=0.002
                   ),
                ),
          );



coor_red=RECU_TABLE(CO=redu,NOM_TABLE='COOR_REDUIT',);

IMPR_TABLE(TABLE=coor_red)

IMPR_RESU(FORMAT='MED', UNITE=80,RESU=_F(RESULTAT=stnl),)
IMPR_RESU(FORMAT='MED', UNITE=81,RESU=_F(RESULTAT=redu),)

####################################################################################################
#
# Reconstruction des déplacements "à la main"
#
####################################################################################################


# Reconstruction du champ de déplacements "à la main"
MODE1 = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='EXTR', RESULTAT=base_p, NOM_CHAM='DEPL',NUME_ORDRE=1);
MODE2 = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='EXTR', RESULTAT=base_p, NOM_CHAM='DEPL',NUME_ORDRE=2);

# Valeurs extraites de la table COOR_REDUIT
comb1 = -2.70288E+00
comb2 = -5.63804E-03

U=CREA_CHAMP( OPERATION='COMB',
                   TYPE_CHAM='NOEU_DEPL_R',
                   COMB=(_F(CHAM_GD=MODE1,COEF_R=comb1),
                         _F(CHAM_GD=MODE2,COEF_R=comb2),),)

# Test reconstruction du champ de déplacements "à la main" - Dans RID
TEST_RESU(CHAM_NO=(
                _F(CHAM_GD=U,
                   NOEUD='N7',
                   NOM_CMP='DX',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=-0.208713620881,
                   VALE_REFE=-0.208992921588,
                   PRECISION=0.0015
                   ),
                _F(CHAM_GD=U,
                   NOEUD='N7',
                   NOM_CMP='DY',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=-0.208713620881,
                   VALE_REFE=-0.208992921588,
                   PRECISION=0.0015
                   ),
                _F(CHAM_GD=U,
                   NOEUD='N7',
                   NOM_CMP='DZ',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=0.546765629825,
                   VALE_REFE=0.529606351907,
                   PRECISION=0.033
                   ),
                ),
          );



####################################################################################################
#
# Reconstruction des contraintes "à la main"
#
####################################################################################################


# Reconstruction du champ de déplacements "à la main"
MODE1s = CREA_CHAMP(TYPE_CHAM='NOEU_SIEF_R', OPERATION='EXTR', RESULTAT=base_d, NOM_CHAM='SIEF_NOEU',NUME_ORDRE=1);
MODE2s = CREA_CHAMP(TYPE_CHAM='NOEU_SIEF_R', OPERATION='EXTR', RESULTAT=base_d, NOM_CHAM='SIEF_NOEU',NUME_ORDRE=2);
MODE3s = CREA_CHAMP(TYPE_CHAM='NOEU_SIEF_R', OPERATION='EXTR', RESULTAT=base_d, NOM_CHAM='SIEF_NOEU',NUME_ORDRE=3);

# Valeurs extraites de la table COOR_REDUIT
comb1 = -108950.59263472102  
comb2 = -15280.860912969722  
comb3 =   20485.486855804837

SIEF=CREA_CHAMP( OPERATION='COMB',
                   TYPE_CHAM='NOEU_SIEF_R',
                   COMB=(_F(CHAM_GD=MODE1s,COEF_R=comb1),
                         _F(CHAM_GD=MODE2s,COEF_R=comb2),
                         _F(CHAM_GD=MODE3s,COEF_R=comb3),
),)


TEST_RESU(CHAM_NO=(
                _F(CHAM_GD=SIEF,
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=13992.3974341,
                   NOEUD='N2',
                   NOM_CMP='SIXX',
                   VALE_CALC=13897.2753496,
                   PRECISION = 0.007
                   ),
                _F(CHAM_GD=SIEF,
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=13992.3974341,
                   NOEUD='N2',
                   NOM_CMP='SIYY',
                   VALE_CALC=13897.2753496,
                   PRECISION = 0.007
                   ),
                _F(CHAM_GD=SIEF,
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=14047.6477194,
                   NOEUD='N2',
                   NOM_CMP='SIZZ',
                   VALE_CALC=15399.0484373,
                   PRECISION = 0.097
                   ),
                ),
          );




####################################################################################################
#
# Reconstruction du résultat complet par Gappy-POD
#
####################################################################################################


# Gappy-POD (reconstruction tout domine)
reduR = REST_REDUIT_COMPLET(
    MODELE           = model,
    RESULTAT_REDUIT  = redu, 
    BASE_PRIMAL      = base_p,
    BASE_DUAL        = base_d,
    INFO             = 2,
)

# Test calcul hyper-réduit après reconstruction/complet - Dans RID
TEST_RESU(RESU=(
                _F(RESULTAT=reduR,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N27',
                   NOM_CMP='DX',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=0.0695351164226,
                   VALE_REFE=0.0696319525128,
                   PRECISION=0.0015
                   ),
                _F(RESULTAT=reduR,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N27',
                   NOM_CMP='DY',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=0.198459188339,
                   VALE_REFE=0.199062276741,
                   PRECISION=0.0035
                   ),
                _F(RESULTAT=reduR,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N27',
                   NOM_CMP='DZ',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=0.528530484536,
                   VALE_REFE=0.529606351907,
                   PRECISION=0.0025
                   ),
                ),
          );

TEST_RESU(RESU=(
                _F(RESULTAT=reduR,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N23',
                   NOM_CMP='SIXX',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=13550.9523017,
                   VALE_REFE=13300.4780377,
                   PRECISION=0.019
                   ),
                _F(RESULTAT=reduR,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N23',
                   NOM_CMP='SIYY',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=13549.7558537,
                   VALE_REFE=13300.3220671,
                   PRECISION=0.019
                   ),
                _F(RESULTAT=reduR,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N23',
                   NOM_CMP='SIZZ',
                   REFERENCE='AUTRE_ASTER',
                   VALE_CALC=14431.8619623,
                   VALE_REFE=13368.1442621,
                   PRECISION=0.08
                   ),
                ),
          );

# Test calcul hyper-réduit après reconstruction/complet - Hors RID
TEST_RESU(RESU=(
                _F(RESULTAT=reduR,
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=-0.208992921588,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N7',
                   NOM_CMP='DX',
                   VALE_CALC=-0.208713731675,
                   PRECISION = 0.0015
                   ),
                _F(RESULTAT=reduR,
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=-0.208992921588,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N7',
                   NOM_CMP='DY',
                   VALE_CALC=-0.208713731675,
                   PRECISION = 0.0015
                   ),
                _F(RESULTAT=reduR,
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=0.529606351907,
                   NUME_ORDRE= 10,
                   NOM_CHAM='DEPL',
                   NOEUD='N7',
                   NOM_CMP='DZ',
                   VALE_CALC=0.546765920277,
                   PRECISION = 0.033
                   ),
                ),
          );

TEST_RESU(RESU=(
                _F(RESULTAT=reduR,
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=13992.3974341,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N2',
                   NOM_CMP='SIXX',
                   VALE_CALC=13897.2753496,
                   PRECISION = 0.007,
                   ),
                _F(RESULTAT=reduR,
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=13992.3974341,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N2',
                   NOM_CMP='SIYY',
                   VALE_CALC=13897.2753496,
                   PRECISION = 0.007,
                   ),
                _F(RESULTAT=reduR,
                   REFERENCE='AUTRE_ASTER',
                   VALE_REFE=14047.6477194,
                   NUME_ORDRE= 10,
                   NOM_CHAM='SIEF_NOEU',
                   NOEUD='N2',
                   NOM_CMP='SIZZ',
                   VALE_CALC=15399.0484373,
                   PRECISION = 0.097
                   ),
                ),
          );

FIN()
