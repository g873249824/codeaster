# TITRE LACHER D'UN SIMPLE MASSE-RESSORT
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

from numpy import math

DEBUT(CODE=_F(NOM='SDLD34A',
              NIV_PUB_WEB='INTERNET',
VISU_EFICAS='OUI',),DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU

# MISE EN DONNEES
tfin = 3.0;

pdt = 0.01;

k = (((0.5 * pi) * 2.0) ** 2);

m = 1.0;

dinit = 1.0;

ainit = (-(k) / m);


MAIL=LIRE_MAILLAGE();

MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=_F(GROUP_MA='GROUP_MA_N',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='DIS_T',),);

ACIER=DEFI_MATERIAU(ELAS=_F(E=2.0E11,
                            NU=0.3,
                            RHO=7800.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(GROUP_MA='GROUP_MA_N',
                            MATER=ACIER,),);

CARELEM=AFFE_CARA_ELEM(MODELE=MODELE,
                       DISCRET=(_F(CARA='K_T_D_N',
                                   GROUP_MA='GROUP_MA_N',
                                   VALE=(k,0.,0.,),),
                                _F(CARA='M_T_D_N',
                                   GROUP_MA='GROUP_MA_N',
                                   VALE=m,),),);

# CONDITIONS AUX LIMITES

BLOQUAGE=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=_F(GROUP_NO='GROUP_NO_N',
                                    DY=0.,
                                    DZ=0.,),);

#MATRICES ASSEMBLEES K, M

ASSEMBLAGE(MODELE=MODELE,
                CHAM_MATER=CHMAT,
                CARA_ELEM=CARELEM,
                CHARGE=BLOQUAGE,
                NUME_DDL=CO('NUMEDDL'),
                MATR_ASSE=(_F(MATRICE=CO('RIGIDITE'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MASSE'),
                              OPTION='MASS_MECA',),
                           _F(MATRICE=CO('MASDIAG'),
                              OPTION='MASS_MECA_DIAG',),),);

LINST=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=tfin,
                                   PAS=pdt,),);

DEPLINI=CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R',
                   NUME_DDL=NUMEDDL,
                   OPERATION='AFFE', PROL_ZERO='OUI',
                   MODELE=MODELE,
                   AFFE=_F(GROUP_NO='GROUP_NO_N',
                           NOM_CMP='DX',
                           VALE=dinit,),);

TRANSI=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='PHYS',
                      MODELE=MODELE,
                      MATR_MASS=MASSE,
                      MATR_RIGI=RIGIDITE,
                      SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',),
                      ETAT_INIT=_F(DEPL=DEPLINI,),
                      SOLVEUR=_F(METHODE='LDLT',),
#                      INCREMENT=_F(LIST_INST=LINST,),);
                      INCREMENT=_F(PAS=pdt,
                                   INST_FIN=tfin,),);

DX_DIS2=RECU_FONCTION(RESULTAT=TRANSI,
                      NOM_CHAM='DEPL',
                      NOM_CMP='DX',
                      GROUP_NO='GROUP_NO_N',);

TRANSIV=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='PHYS',
                      MODELE=MODELE,
                      MATR_MASS=MASSE,
                      MATR_RIGI=RIGIDITE,
                      TITRE='VITESSE DE LA MASSE A T = 1.5S',
                      SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',),
                      ETAT_INIT=_F(DEPL=DEPLINI,),
                      SOLVEUR=_F(METHODE='LDLT',),
                      INCREMENT=_F(PAS=pdt,
                                   INST_FIN=tfin,),
                      ARCHIVAGE=_F(INST=1.5,
                                   CHAM_EXCLU=('DEPL','ACCE'),
                                   CRITERE='ABSOLU',
                                   PRECISION=1E-6,),
                      INFO=1,);

VX_DIS2=RECU_FONCTION(RESULTAT=TRANSIV,
                      NOM_CHAM='VITE',
                      NOM_CMP='DX',
                      GROUP_NO='GROUP_NO_N',);

TRANSX=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='PHYS',
                      MODELE=MODELE,
                      MATR_MASS=MASDIAG,
                      MATR_RIGI=RIGIDITE,
                      SCHEMA_TEMPS=_F(SCHEMA='DIFF_CENTRE',),
                      ETAT_INIT=_F(DEPL=DEPLINI,),
                      SOLVEUR=_F(METHODE='LDLT',),
                      INCREMENT=_F(PAS=pdt,
                                   INST_FIN=tfin,),
                      INFO=2,);

DXXDIS2=RECU_FONCTION(RESULTAT=TRANSX,
                      NOM_CHAM='DEPL',
                      NOM_CMP='DX',
                      GROUP_NO='GROUP_NO_N',);

MODES=MODE_ITER_SIMULT(MATR_RIGI=RIGIDITE,
                       MATR_MASS=MASSE,
                       METHODE='QZ',
                       CALC_FREQ=_F(OPTION='TOUT',),);

MODES_G=MODE_ITER_SIMULT(TYPE_RESU='GENERAL',
                         MATR_A=RIGIDITE,
                         MATR_B=MASSE,
                         METHODE='QZ',
                         CALC_CHAR_CRIT=_F(OPTION='TOUT',),);

# FREQUENCE PROPRE
f0 = sqrt( k/m ) / (2*math.pi)
# VALEUR PROPRE CORRESPONDANTE
vp0 = (2*math.pi * f0)**2

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MODES,
                   VALE_CALC=f0,
                   CRITERE='RELATIF',
                  ),
                _F(NUME_ORDRE=1,
                   PARA='CHAR_CRIT',
                   RESULTAT=MODES_G,
                   VALE_CALC=vp0,
                   CRITERE='RELATIF',
                  ),
               ),
          )


PROJ_BASE(BASE=MODES,
                STOCKAGE='DIAG',
                MATR_ASSE_GENE=(_F(MATRICE=CO('MAGE'),
                                   MATR_ASSE=MASSE,),
                                _F(MATRICE=CO('RIGE'),
                                   MATR_ASSE=RIGIDITE,),),
                VECT_ASSE_GENE=_F(VECTEUR=CO('DIGE'),
                                  TYPE_VECT='DEPL',
                                  VECT_ASSE=DEPLINI,),);

TRANSMO=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                        SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                        MATR_MASS=MAGE,
                        MATR_RIGI=RIGE,
                        ETAT_INIT=_F(DEPL=DIGE,),
                        INCREMENT=_F(INST_FIN=tfin,
                                     PAS=pdt,),);

DXGEDIS2=RECU_FONCTION(RESU_GENE=TRANSMO,
                       NOM_CHAM='DEPL',
                       NOM_CMP='DX',
                       GROUP_NO='GROUP_NO_N',);

DXGEMO=RECU_FONCTION(RESU_GENE=TRANSMO,
                     NOM_CHAM='DEPL',
                     NUME_CMP_GENE=1,)

TRANSMOV=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                        SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                        MATR_MASS=MAGE,
                        MATR_RIGI=RIGE,
                        ETAT_INIT=_F(DEPL=DIGE,),
                        INCREMENT=_F(LIST_INST=LINST,
                                     NUME_FIN=300,),
                        ARCHIVAGE=_F(INST=1.5,
                                     CRITERE='ABSOLU',
                                     PRECISION=1E-6,),);

IMPR_GENE(GENE=_F(RESU_GENE=TRANSMOV,
                  NOM_CHAM='VITE',
                  NUME_CMP_GENE=1,
                  TOUT_INST=('OUI'),),);

VXGEDIS2=RECU_FONCTION(RESU_GENE=TRANSMOV,
                       NOM_CHAM='VITE',
                       NOM_CMP='DX',
                       GROUP_NO='GROUP_NO_N',);


TEST_FONCTION(VALEUR=(_F(VALE_CALC=0.999999866513,
                         VALE_REFE=1,
                         VALE_PARA=2,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=9.9999999999999995E-07,
                         FONCTION=DX_DIS2,),
                      _F(VALE_CALC=0.999999966611,
                         VALE_REFE=1,
                         VALE_PARA=2,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=9.9999999999999995E-07,
                         FONCTION=DXXDIS2,),
                      _F(VALE_CALC=0.999995906947,
                         VALE_REFE=1,
                         VALE_PARA=2,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=1.E-4,
                         FONCTION=DXGEDIS2,),
                      _F(VALE_CALC=0.999995906947,
                         VALE_REFE=1,
                         VALE_PARA=2,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=1.E-4,
                         FONCTION=DXGEMO,),
                      _F(VALE_CALC=3.1415924177,
                         VALE_REFE=3.1415926535897931,
                         VALE_PARA=1.5,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=9.9999999999999995E-07,
                         FONCTION=VX_DIS2,),
                      _F(VALE_CALC=3.14198024478,
                         VALE_REFE=3.1415926535897931,
                         VALE_PARA=1.5,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=1.E-3,
                         FONCTION=VXGEDIS2,),
                      ),
              )

IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=29,
              COURBE=(_F(FONCTION=DX_DIS2,
                         MARQUEUR=0,),
                      _F(FONCTION=DXXDIS2,
                         MARQUEUR=0,),
                      _F(FONCTION=DXGEDIS2,
                         MARQUEUR=0,),
                      _F(FONCTION=DXGEMO,
                         MARQUEUR=0,),),);

FIN();
