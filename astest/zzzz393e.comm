# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MA0=LIRE_MAILLAGE(FORMAT='MED')

MA=CREA_MAILLAGE(
               MAILLAGE=MA0,
               CREA_MAILLE=(_F(NOM = 'G1X',
                               GROUP_MA = 'GF1',
                               PREF_MAILLE = 'B',
                              ),
                            _F(NOM = 'G2X',
                               GROUP_MA = 'GF2',
                               PREF_MAILLE = 'B',
                              ),
                            _F(NOM = 'G3X',
                               GROUP_MA = 'GF3',
                               PREF_MAILLE = 'B',
                              ),
                            ),
                           )

DEFI_GROUP(reuse=MA, 
           MAILLAGE=MA, 
           CREA_GROUP_MA=_F(UNION=('G1X', 'G2X', 'G3X'), NOM='GRILLE'),
          )

BETON=DEFI_MATERIAU(ELAS=_F(E = 1.E9,NU = 0.3,),)

MATAF=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=(_F(TOUT = 'OUI',
                             MATER = BETON,)))

#-----------------------------------------------------------------------

MODX=AFFE_MODELE(MAILLAGE=MA,     
                  AFFE=(_F(GROUP_MA = 'COQ3D',
                           PHENOMENE = 'MECANIQUE',
                           MODELISATION = '3D',),
                        _F(GROUP_MA = 'GRILLE',
                           PHENOMENE = 'MECANIQUE',
                           MODELISATION = 'GRILLE_MEMBRANE',),
                        )
                )

#-----------------------------------------------------------------------

CARX=AFFE_CARA_ELEM(MODELE=MODX,
                    GRILLE=(_F(GROUP_MA = 'GRILLE',
                              SECTION = .2,
                              ANGL_REP = (0.0, 0.0,),
                              ),),)


#-----------------------------------------------------------------------

def escalier(x):
    if x< 0.:
        return 0.
    if x<=1.:
        return 1.
    elif x<=2.:
        return 2.
    elif x<=3.:
        return 3
    else:
        return 0.

EXX_X=FORMULE(NOM_PARA = ('X','INST'),
            VALE     = '1.E-3*escalier(X)*INST',)
 

#-----------------------------------------------------------------------

BLOCX=AFFE_CHAR_MECA(MODELE=MODX,
                    DDL_IMPO=(_F(GROUP_NO = ('ENCAST',),
                                 DX = 0., DY=0., DZ = 0., 
                                 ),
                             ),
            )

PEPSIRX=AFFE_CHAR_MECA(MODELE=MODX,
                      PRE_EPSI = (_F(GROUP_MA = 'G1X',
                                  EXX     = 1E-3,),
                                  _F(GROUP_MA = 'G2X',
                                  EXX     = 1E-3*2,),
                                  _F(GROUP_MA = 'G3X',
                                  EXX     = 1E-3*3,),
                                  )
            )

PEPSIFX=AFFE_CHAR_MECA_F(MODELE=MODX,
                      PRE_EPSI = _F(GROUP_MA = 'GRILLE',
                                  EXX     = EXX_X,
                                  )

            )

#-----------------------------------------------------------------------

ZLIST=DEFI_LIST_REEL(   DEBUT=0.,
             INTERVALLE=_F( JUSQU_A = 1.0,  NOMBRE = 1, )
           )
FF=DEFI_FONCTION(NOM_PARA='INST',
                     VALE=(0.0,    0.0,
                           2.,   2.),
                     )

#-----------------------------------------------------------------------
CALC_R_X=STAT_NON_LINE(MODELE=MODX,
                       CHAM_MATER=MATAF,
                       CARA_ELEM=CARX,
                       EXCIT=(_F(CHARGE = BLOCX,),
                              _F(CHARGE = PEPSIRX, FONC_MULT=FF),
                          ),
                    COMPORTEMENT=_F(RELATION = 'ELAS',),
                    INCREMENT=_F(LIST_INST = ZLIST,),
                   )

CALC_F_X=STAT_NON_LINE(MODELE=MODX,
                       CHAM_MATER=MATAF,
                       CARA_ELEM=CARX,
                       EXCIT=(_F(CHARGE = BLOCX,),
                              _F(CHARGE = PEPSIFX,),
                          ),
                    COMPORTEMENT=_F(RELATION = 'ELAS',),
                    INCREMENT=_F(LIST_INST = ZLIST,),
                   )


#-----------------------------------------------------------------------
TEST_RESU(RESU=(_F(GROUP_NO='FLX',
                   CRITERE='RELATIF',
                   INST = 1.0,
                   NOM_CMP='DX',
                   RESULTAT=CALC_R_X,
                   NOM_CHAM='DEPL',
                   VALE_CALC=-0.00235783307917,
                   ),
               ),
          )

TEST_RESU(RESU=(_F(GROUP_NO='FLX',
                   CRITERE='RELATIF',
                   INST = 1.0,
                   REFERENCE='AUTRE_ASTER',
                   NOM_CMP='DX',
                   RESULTAT=CALC_F_X,
                   NOM_CHAM='DEPL',
                   VALE_CALC=-0.00235783307917,
                   VALE_REFE=-0.00235783307917,
                   ),
               ),
          )


FIN()
#
