# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#

# Test for DEFI_DOMAINE_REDUIT

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI'));

# Read the mesh
mesh=LIRE_MAILLAGE(FORMAT='MED',);

# Thermic model
model=AFFE_MODELE(MAILLAGE=mesh,
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='THERMIQUE',
                         MODELISATION='3D',),);

base_p=LIRE_RESU(TYPE_RESU  = 'MODE_EMPI',
                 FORMAT     = 'MED',
                 MODELE     = model,
                 UNITE      = 70,
                 FORMAT_MED =_F(NOM_CHAM_MED = 'base_p__TEMP',
                                NOM_CHAM     = 'TEMP',),
                 TOUT_ORDRE = 'OUI',);


base_d=LIRE_RESU(TYPE_RESU  = 'MODE_EMPI',
                 FORMAT     = 'MED',
                 MODELE     = model,
                 UNITE      = 71,
                 FORMAT_MED = _F(NOM_CHAM_MED = 'base_d__FLUX_NOEU',
                                 NOM_CHAM     = 'FLUX_NOEU',),
                 TOUT_ORDRE = 'OUI',);

TEST_RESU(MAILLAGE = _F(MAILLAGE    = mesh,
                        CARA        = 'NB_GROUP_MA',
                        REFERENCE   = 'ANALYTIQUE',
                        CRITERE     = 'ABSOLU',
                        VALE_REFE_I = 2,
                        VALE_CALC_I = 2,)
          )

mesh=DEFI_DOMAINE_REDUIT(reuse=mesh,INFO=2,
            MAILLAGE=mesh,
            BASE_PRIMAL=base_p,
            BASE_DUAL=base_d,
            NOM_DOMAINE='RID',
            GROUP_NO_INTERF='INF',);

IMPR_RESU(FORMAT='MED', UNITE = 80, RESU=_F(MAILLAGE = mesh))

TEST_RESU(MAILLAGE = _F(MAILLAGE    = mesh,
                        CARA        = 'NB_GROUP_MA',
                        REFERENCE   = 'ANALYTIQUE',
                        CRITERE     = 'ABSOLU',
                        VALE_REFE_I = 3,
                        VALE_CALC_I = 3)
          )

TEST_RESU(MAILLAGE = _F(MAILLAGE    = mesh,
                        CARA        = 'NB_GROUP_NO',
                        REFERENCE   = 'ANALYTIQUE',
                        CRITERE     = 'ABSOLU',
                        VALE_REFE_I = 1,
                        VALE_CALC_I = 1,)
          )

TEST_RESU(MAILLAGE = _F(MAILLAGE    = mesh,
                        CARA        = 'NB_MA_GROUP_MA',
                        NOM_GROUP_MA= 'RID',
                        REFERENCE   = 'ANALYTIQUE',
                        CRITERE     = 'ABSOLU',
                        VALE_REFE_I = 65,
                        VALE_CALC_I = 65,)
          )

TEST_RESU(MAILLAGE = _F(MAILLAGE    = mesh,
                        CARA        = 'NB_NO_GROUP_NO',
                        NOM_GROUP_NO= 'INF',
                        REFERENCE   = 'ANALYTIQUE',
                        CRITERE     = 'ABSOLU',
                        VALE_REFE_I = 26,
                        VALE_CALC_I = 26,)
          )

FIN();
