
# TITRE VIBRATION D'UNE POUTRE AVEC PRE-CONTRAINTES (PETIT MAILLAGE)
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#CAS_TEST__: SDLL101A
#=======================================================================
# SDLL101A                 COMMANDES                             5/02/91
# VIBRATION D'UNE POUTRE ELANCEE SOUS TENSION
# CAS TEST DIT DE LA CORDE A PIANO
# MODELISATION : 'POU_D_T'
# CHARGEMENT   : ON FAIT 4 CAS DE CHARGE (0., 10., 100., 1000.)
#=======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MA=LIRE_MAILLAGE();

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_MA=_F(NOM='TOUT',
                               TOUT='OUI',),);

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='POU_D_T',),);

CARAELEM=AFFE_CARA_ELEM(MODELE=MO,
                        POUTRE=_F(GROUP_MA='TOUT',
                                  SECTION='CERCLE',
                                  CARA=('R','EP',),
                                  VALE=(0.005,0.005,),),);

MAT=DEFI_MATERIAU(ELAS=_F(E=200000000000.0,
                          NU=0.3,
                          RHO=7800.0,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=MAT,),);

CH=AFFE_CHAR_MECA(MODELE=MO,
                  DDL_IMPO=(_F(TOUT='OUI',
                               DZ=0.0,
                               DRX=0.0,
                               DRY=0.0,),
                            _F(NOEUD='A',
                               DX=0.0,
                               DY=0.0,),
                            _F(NOEUD='B',
                               DY=0.0,),),);

MELR=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                    MODELE=MO,
                    CHAM_MATER=CHMAT,
                    CARA_ELEM=CARAELEM,
                    CHARGE=CH,);

MELM=CALC_MATR_ELEM(OPTION='MASS_MECA',
                    MODELE=MO,
                    CHAM_MATER=CHMAT,
                    CARA_ELEM=CARAELEM,
                    CHARGE=CH,);

NUM=NUME_DDL(MATR_RIGI=MELR,);

MATASSR=ASSE_MATRICE(MATR_ELEM=MELR,
                     NUME_DDL=NUM,);

MATASSM=ASSE_MATRICE(MATR_ELEM=MELM,
                     NUME_DDL=NUM,);
# RESOLUTION STATIQUE ------------------------------------------------
#
# DEFINITION DES 4 CHARGEMENTS

C_0=AFFE_CHAR_MECA(MODELE=MO,
                   FORCE_NODALE=_F(NOEUD='B',
                                   FX=0.0,),);

C_10=AFFE_CHAR_MECA(MODELE=MO,
                    FORCE_NODALE=_F(NOEUD='B',
                                    FX=10.0,),);

C_100=AFFE_CHAR_MECA(MODELE=MO,
                     FORCE_NODALE=_F(NOEUD='B',
                                     FX=100.0,),);

C_1000=AFFE_CHAR_MECA(MODELE=MO,
                      FORCE_NODALE=_F(NOEUD='B',
                                      FX=1000.0,),);

# ON RESOUD LES 4 CAS DE CHARGES

DEP=MACRO_ELAS_MULT(MODELE=MO,
                    CHAM_MATER=CHMAT,
                    CARA_ELEM=CARAELEM,
                    CHAR_MECA_GLOBAL=CH,
                    CAS_CHARGE=(_F(NOM_CAS='CHARGE1',
                                   CHAR_MECA=C_0,),
                                _F(NOM_CAS='CHARGE2',
                                   CHAR_MECA=C_10,),
                                _F(NOM_CAS='CHARGE3',
                                   CHAR_MECA=C_100,),
                                _F(NOM_CAS='CHARGE4',
                                   CHAR_MECA=C_1000,),),);
#---------------------------------------------------------------------
#
# RESOLUTION DYNAMIQUE -----------------------------------------------
#
# PRISE EN COMPTE DES PRECONTRAINTES AU NIVEAU ELEMENTAIRE

DEP=CALC_CHAMP(reuse=DEP,RESULTAT=DEP,CONTRAINTE=('SIEF_ELGA'))


S_0=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELGA_SIEF_R',
RESULTAT=DEP, NUME_ORDRE=1,
                         NOM_CHAM='SIEF_ELGA' )

S_10=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELGA_SIEF_R',
RESULTAT=DEP, NUME_ORDRE=2,
                         NOM_CHAM='SIEF_ELGA' )

S_100=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELGA_SIEF_R',
RESULTAT=DEP, NUME_ORDRE=3,
                         NOM_CHAM='SIEF_ELGA' )

S_1000=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELGA_SIEF_R',
RESULTAT=DEP, NUME_ORDRE=4,
                         NOM_CHAM='SIEF_ELGA' )
#

MEG_0=CALC_MATR_ELEM(OPTION='RIGI_GEOM',
                     MODELE=MO,
                     CARA_ELEM=CARAELEM,
                     SIEF_ELGA=S_0,);

MEG_10=CALC_MATR_ELEM(OPTION='RIGI_GEOM',
                      MODELE=MO,
                      CARA_ELEM=CARAELEM,
                      SIEF_ELGA=S_10,);

MEG_100=CALC_MATR_ELEM(OPTION='RIGI_GEOM',
                       MODELE=MO,
                       CARA_ELEM=CARAELEM,
                       SIEF_ELGA=S_100,);

MEG_1000=CALC_MATR_ELEM(OPTION='RIGI_GEOM',
                        MODELE=MO,
                        CARA_ELEM=CARAELEM,
                        SIEF_ELGA=S_1000,);
#

MAR_0=ASSE_MATRICE(MATR_ELEM=MEG_0,
                   NUME_DDL=NUM,);

MAR_10=ASSE_MATRICE(MATR_ELEM=MEG_10,
                    NUME_DDL=NUM,);

MAR_100=ASSE_MATRICE(MATR_ELEM=MEG_100,
                     NUME_DDL=NUM,);

MAR_1000=ASSE_MATRICE(MATR_ELEM=MEG_1000,
                      NUME_DDL=NUM,);
#
# CALCUL MODAL AVEC PRECONTRAINTE NULLE

MATASSR1=COMB_MATR_ASSE(COMB_R=(_F(MATR_ASSE=MATASSR,
                                   COEF_R=1.0,),
                                _F(MATR_ASSE=MAR_0,
                                   COEF_R=1.0,),),);

MD_0=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                      MATR_MASS=MATASSM,
                      METHODE='TRI_DIAG',
                      CALC_FREQ=_F(OPTION='PLUS_PETITE',
                                   NMAX_FREQ=5,),);

#
# CALCUL MODAL AVEC PRECONTRAINTE F = 10 N.

MATASSR1=COMB_MATR_ASSE(reuse =MATASSR1,
                        COMB_R=(_F(MATR_ASSE=MATASSR,
                                   COEF_R=1.0,),
                                _F(MATR_ASSE=MAR_10,
                                   COEF_R=1.0,),),);

MD_10=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                       MATR_MASS=MATASSM,
                       METHODE='TRI_DIAG',
                       CALC_FREQ=_F(OPTION='PLUS_PETITE',
                                    NMAX_FREQ=5,),);

#
# CALCUL MODAL AVEC PRECONTRAINTE F = 100 N.

MATASSR1=COMB_MATR_ASSE(reuse =MATASSR1,
                        COMB_R=(_F(MATR_ASSE=MATASSR,
                                   COEF_R=1.0,),
                                _F(MATR_ASSE=MAR_100,
                                   COEF_R=1.0,),),);

MD_100=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                        MATR_MASS=MATASSM,
                        METHODE='TRI_DIAG',
                        CALC_FREQ=_F(OPTION='PLUS_PETITE',
                                     NMAX_FREQ=5,),);

#
# CALCUL MODAL AVEC PRECONTRAINTE F = 1000 N.

MATASSR1=COMB_MATR_ASSE(reuse =MATASSR1,
                        COMB_R=(_F(MATR_ASSE=MATASSR,
                                   COEF_R=1.0,),
                                _F(MATR_ASSE=MAR_1000,
                                   COEF_R=1.0,),),);

MD_1000=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                         MATR_MASS=MATASSM,
                         METHODE='TRI_DIAG',
                         CALC_FREQ=_F(OPTION='PLUS_PETITE',
                                      NMAX_FREQ=5,),);

#
# VERIFICATION DES RESULTATS

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MD_0,
                   VALE_CALC=4.971120645933,
                   VALE_REFE=4.9713000000000003,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MD_0,
                   VALE_CALC=19.882806576799,
                   VALE_REFE=19.885100000000001,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MD_0,
                   VALE_CALC=44.731582078197,
                   VALE_REFE=44.741399999999999,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MD_0,
                   VALE_CALC=79.518984428322,
                   VALE_REFE=79.540300000000002,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=5,
                   PARA='FREQ',
                   RESULTAT=MD_0,
                   VALE_CALC=124.26740249985,
                   VALE_REFE=124.2818,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                ),
          )

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MD_10,
                   VALE_CALC=5.072696403535,
                   VALE_REFE=5.0728,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MD_10,
                   VALE_CALC=19.9851606423,
                   VALE_REFE=19.987400000000001,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MD_10,
                   VALE_CALC=44.834085601039,
                   VALE_REFE=44.843899999999998,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MD_10,
                   VALE_CALC=79.621534970231,
                   VALE_REFE=79.642899999999997,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=5,
                   PARA='FREQ',
                   RESULTAT=MD_10,
                   VALE_CALC=124.36995263909,
                   VALE_REFE=124.3844,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                ),
          )

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MD_100,
                   VALE_CALC=5.9088174567078,
                   VALE_REFE=5.9089999999999998,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MD_100,
                   VALE_CALC=20.883785160961,
                   VALE_REFE=20.885999999999999,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MD_100,
                   VALE_CALC=45.746282906092,
                   VALE_REFE=45.756100000000004,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MD_100,
                   VALE_CALC=80.538614017129,
                   VALE_REFE=80.560000000000002,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=5,
                   PARA='FREQ',
                   RESULTAT=MD_100,
                   VALE_CALC=125.28912668819,
                   VALE_REFE=125.30370000000001,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                ),
          )

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MD_1000,
                   VALE_CALC=11.257569590209,
                   VALE_REFE=11.2577,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MD_1000,
                   VALE_CALC=28.344150188014,
                   VALE_REFE=28.3462,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MD_1000,
                   VALE_CALC=54.027715741904,
                   VALE_REFE=54.036999999999999,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MD_1000,
                   VALE_CALC=89.192283041234,
                   VALE_REFE=89.213399999999993,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                _F(NUME_ORDRE=5,
                   PARA='FREQ',
                   RESULTAT=MD_1000,
                   VALE_CALC=134.1348784573,
                   VALE_REFE=134.15110000000001,
                   REFERENCE = 'ANALYTIQUE',
                   PRECISION=1.E-3,),
                ),
          )

#

FIN();
#
