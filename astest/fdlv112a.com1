# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2019 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#
# FLUIDES INCOMPRESSIBLES - MASSES AJOUTEES - CALCUL FREQUENTIEL - HARM GENE


POURSUITE(CODE='OUI',DEBUG=_F(SDVERI='OUI'),PAR_LOT='NON',
      IGNORE_ALARM='SUPERVIS_1')


#On passe les signaux en frequentiel pour tester la macro en frequentiel
F_ACC_X0=CALC_FONCTION(FFT=_F(FONCTION=ACC_X, METHODE='COMPLET',),);
F_ACC_Y0=CALC_FONCTION(FFT=_F(FONCTION=ACC_Y, METHODE='COMPLET',),);
F_ACC_Z0=CALC_FONCTION(FFT=_F(FONCTION=ACC_Z, METHODE='COMPLET',),);

FREQ,AA,BB=F_ACC_X0.Valeurs()
FREQ=FREQ[0:int((len(FREQ)+1)/2)]
LFREQ=DEFI_LIST_REEL(VALE=FREQ,);

F_ACC_X=CALC_FONC_INTERP(LIST_PARA=LFREQ,
                       FONCTION=F_ACC_X0,);

F_ACC_Y=CALC_FONC_INTERP(LIST_PARA=LFREQ,
                       FONCTION=F_ACC_Y0,);

F_ACC_Z=CALC_FONC_INTERP(LIST_PARA=LFREQ,
                       FONCTION=F_ACC_Z0,);

#------------------------------------------
#          calcul standard
#------------------------------------------
DYNGENF=DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='GENE',
                       MATR_MASS=MASTOT2,
                       MATR_RIGI=RIGGEN2,
                AMOR_MODAL=_F(AMOR_REDUIT=0.050000000000000003,),
                LIST_FREQ=LFREQ,
                       EXCIT=(
                             _F(VECT_ASSE_GENE=CHARGENX,
                                 FONC_MULT_C=F_ACC_X,),
                              _F(VECT_ASSE_GENE=CHARGENY,
                                 FONC_MULT_C=F_ACC_Y,),
                              _F(VECT_ASSE_GENE=CHARGENZ,
                                 FONC_MULT_C=F_ACC_Z,),
                          ),);


#On récupère les accelerations du calcul du calcul dynamique DYNGENF 'HARM_GENE'
f_a_x=RECU_FONCTION(RESU_GENE=DYNGENF,
                    NOM_CHAM='ACCE',
                    NOM_CMP='DX',
                    NOEUD='NO2815',);

f_a_y=RECU_FONCTION(RESU_GENE=DYNGENF,
                    NOM_CHAM='ACCE',
                    NOM_CMP='DY',
                    NOEUD='NO2815',);

f_a_z=RECU_FONCTION(RESU_GENE=DYNGENF,
                            NOM_CHAM='ACCE',
                            NOM_CMP='DZ',
                            NOEUD='NO2815',);

f_Abs_x=CALC_FONCTION(INTERPOL='LIN',
                    COMB_C=(_F(FONCTION=f_a_x,
                               COEF_C=1,),
                            _F(FONCTION=F_ACC_X,
                               COEF_C=1,),),);

f_Abs_y=CALC_FONCTION(INTERPOL='LIN',
                    COMB_C=(_F(FONCTION=f_a_y,
                               COEF_C=1,),
                            _F(FONCTION=F_ACC_Y,
                               COEF_C=1,),),);

f_Abs_z=CALC_FONCTION(INTERPOL='LIN',
                    COMB_C=(_F(FONCTION=f_a_z,
                               COEF_C=1,),
                            _F(FONCTION=F_ACC_Z,
                               COEF_C=1,),),);



#------------------------------------------------------------------------------------
#          Calculs préalable à l'utilisation de la macro commande
#------------------------------------------------------------------------------------

FDYNGENX=DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='GENE',
                       MATR_MASS=MASTOT2,
                       MATR_RIGI=RIGGEN2,
                AMOR_MODAL=_F(AMOR_REDUIT=0.050000000000000003,),
                LIST_FREQ=LFREQ,
                       EXCIT=(
                             _F(VECT_ASSE_GENE=CHARGENX,
                                 FONC_MULT_C=F_ACC_X,),
                          ),);


FDYNGENY=DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='GENE',
                       MATR_MASS=MASTOT2,
                       MATR_RIGI=RIGGEN2,
                AMOR_MODAL=_F(AMOR_REDUIT=0.050000000000000003,),
                LIST_FREQ=LFREQ,
                       EXCIT=(
                              _F(VECT_ASSE_GENE=CHARGENY,
                                 FONC_MULT_C=F_ACC_Y,),
                          ),);


FDYNGENZ=DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='GENE',
                       MATR_MASS=MASTOT2,
                       MATR_RIGI=RIGGEN2,
                AMOR_MODAL=_F(AMOR_REDUIT=0.050000000000000003,),
                LIST_FREQ=LFREQ,
                       EXCIT=(
                              _F(VECT_ASSE_GENE=CHARGENZ,
                                 FONC_MULT_C=F_ACC_Z,),
                          ),);


C_FREQ=CALC_TRANSFERT(NOM_CHAM='ACCE',
                    RESULTAT_X=FDYNGENX,
                    RESULTAT_Y=FDYNGENY,
                    RESULTAT_Z=FDYNGENZ,
                    REPERE='RELATIF',
                    ENTREE=_F(NOEUD='NO1996',),
                    SORTIE=_F(NOEUD='NO2815',),
                    ENTRAINEMENT=_F(DX=F_ACC_X,
                                     DY=F_ACC_Y,
                                     DZ=F_ACC_Z,
                                    ),
                    SIGNAL=_F(MESURE_X=f_Abs_x,
                              MESURE_Y=f_Abs_y,
                              MESURE_Z=f_Abs_z,
                              TYPE_RESU='HARMONIQUE',
                              TABLE_RESU=CO("TABLE00"),),
                              );

TEST_TABLE(REFERENCE='AUTRE_ASTER',
          VALE_CALC=6.26351677499,
          VALE_REFE=6.26352E+00,
          NOM_PARA='Re_FX',
          TABLE=TABLE00,
          FILTRE=_F(NOM_PARA='FREQ',
                    VALE=1.09726E+01,),
          )
TEST_TABLE(REFERENCE='AUTRE_ASTER',
          VALE_CALC=8.87646265273,
          VALE_REFE=8.87646E+00,
          NOM_PARA='Im_FX',
          TABLE=TABLE00,
          FILTRE=_F(NOM_PARA='FREQ',
                    VALE=1.09726E+01,),
          )

TEST_FONCTION(VALEUR=_F(VALE_CALC_C=(6.263458+8.874698j),
                        VALE_REFE_C=(6.26352+8.87646j),
                        VALE_PARA=1.09726E+01,NOM_PARA='FREQ',
                        REFERENCE='AUTRE_ASTER',
                        FONCTION=F_ACC_X,),
              )

FIN()
