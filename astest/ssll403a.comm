# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# ENCASTREE-LIBRE
#======================================================================
#
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

#
MA=LIRE_MAILLAGE(FORMAT="ASTER",  )

MA=DEFI_GROUP(  reuse=MA, MAILLAGE=MA,
                       CREA_GROUP_MA=_F(  NOM = 'TOTAL',
                                       TOUT = 'OUI',
                                      )
                     )

#
MO=AFFE_MODELE(   MAILLAGE=MA,
                        AFFE=_F( TOUT = 'OUI',
                              PHENOMENE = 'MECANIQUE',
                              MODELISATION = 'POU_D_E',
                             )
                    )

#
MATR=DEFI_MATERIAU(    ELAS=_F( E = 2.E11,
                                NU = 0.3,
                                RHO = 7800.,
                               )
                      )

#
CHMAT=AFFE_MATERIAU(    MAILLAGE=MA,
                              AFFE=_F( TOUT = 'OUI',
                                    MATER = MATR,
                                   )
                      )

#
CAREL=AFFE_CARA_ELEM(     MODELE=MO,
                           POUTRE=_F( SECTION = 'RECTANGLE',
                                   CARA = ('HY', 'HZ', ),
                                   GROUP_MA = 'TOTAL',
                                   VALE = (0.01, 0.01, ),
                                  )
                       )

#
COND_LIM=AFFE_CHAR_MECA(      MODELE=MO,DDL_IMPO=(
                              _F( NOEUD = 'N1',
                                        DX = 0.,
                                        DY = 0.,
                                        DZ = 0.,
                                        DRX = 0.,
                                        DRZ = 0.,
                                        DRY = 0.,
                                       ),
                              _F( TOUT = 'OUI',
                                        DY = 0.,
                                        DRZ = 0.,
                                       ))
                          )

#
# ------ CALCUL DE LA MATRICE DE RAIDEUR -------------------------------
#
MELR=CALC_MATR_ELEM(        MODELE=MO,
                               CHARGE=COND_LIM,
                            CARA_ELEM=CAREL,
                           CHAM_MATER=CHMAT,
                              OPTION='RIGI_MECA'
                       )

#
NUM=NUME_DDL(    MATR_RIGI=MELR )

#
MATASSR=ASSE_MATRICE(    MATR_ELEM=MELR,
                            NUME_DDL=NUM
                       )

#
# ------ RESOLUTION STATIQUE , CHARGEMENT = PESANTEUR-------------------
#
PESANT=AFFE_CHAR_MECA(       MODELE=MO,
                           PESANTEUR=_F(GRAVITE=9.81,
                                        DIRECTION=( 0., 0., -1.,),)
                        )

STAT=MECA_STATIQUE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   CARA_ELEM=CAREL,
                   EXCIT=(_F(CHARGE=COND_LIM,),
                          _F(CHARGE=PESANT,),),);
#
# ------ PRECONTRAINTE DUE AU POIDS PROPRE -----------------------------
#

PREC=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELGA_SIEF_R',
                    RESULTAT=STAT, NUME_ORDRE=1,
                    NOM_CHAM='SIEF_ELGA' ),

#
MERG=CALC_MATR_ELEM(        MODELE=MO,
                           CARA_ELEM=CAREL,
                              OPTION='RIGI_GEOM',
                           SIEF_ELGA=PREC
                      )

#
MARG=ASSE_MATRICE(   MATR_ELEM=MERG,
                        NUME_DDL=NUM
                    )

#
MD_0=CALC_MODES(MATR_RIGI=MATASSR,
                TYPE_RESU='MODE_FLAMB',
                MATR_RIGI_GEOM=MARG,
                CALC_CHAR_CRIT=_F(NMAX_CHAR_CRIT=5,
                                  ),
                SOLVEUR_MODAL=_F(MODE_RIGIDE='NON',
                                 METHODE='TRI_DIAG',
                                 ),
                )


#
TEST_RESU(RESU=_F(PARA='CHAR_CRIT',
                  NUME_MODE=5,
                  RESULTAT=MD_0,
                  VALE_CALC=-170.004856678,
                  VALE_REFE=-170.70099999999999,
                  REFERENCE='NON_DEFINI',
                  PRECISION=1.E-2,),
          )

#
FIN( )
#
#
