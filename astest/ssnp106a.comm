# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2019 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# Macro-command: CALC_BT
# Test 1.1: Trimmed wall plane stresses

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI'));

# ----------------------------------------------------------------#
# Model definition
# ----------------------------------------------------------------#

MESH = LIRE_MAILLAGE(FORMAT = 'MED',
                     INFO = 2,
                     UNITE = 20)

MESH = DEFI_GROUP(reuse = MESH,
                  CREA_GROUP_MA = _F(NOM = 'tutte',
                                   TOUT = 'OUI'),
                  MAILLAGE = MESH)


MODEL = AFFE_MODELE(AFFE = _F(GROUP_MA = 'tutte',
                              MODELISATION = ('C_PLAN', ),
                              PHENOMENE = 'MECANIQUE'),
                      MAILLAGE = MESH)

BETON = DEFI_MATERIAU(ELAS = _F(E = 2100000000.0,
                                 NU = 0.2))

ACIER = DEFI_MATERIAU(ELAS = _F(E = 21000000000.0,
                                 NU = 0.3))

MATERI = AFFE_MATERIAU(AFFE = _F(MATER = (BETON, ),
                               TOUT = 'OUI'),
                       MODELE = MODEL)

# ----------------------------------------------------------------#
# Boundary conditions and loads
# ----------------------------------------------------------------#

BC = AFFE_CHAR_MECA(DDL_IMPO = (_F(GROUP_NO = ('SUP_1', ),
                                  LIAISON = 'ENCASTRE'),
                               _F(DY = 0.0,
                                  GROUP_NO = ('SUP_2', ))),
                     FORCE_NODALE = (_F(FY = -3000000.0,
                                     GROUP_NO = 'LOAD_1'),
                                   ),
                     MODELE = MODEL);

LINST = DEFI_LIST_REEL(DEBUT = 0.,
                     INTERVALLE = _F(JUSQU_A = 1.,NOMBRE = 2))

FMULT = DEFI_FONCTION(NOM_PARA = 'INST',
                    VALE = (0., 0.,
                          1., 1.,),
                    PROL_DROITE = 'LINEAIRE',);

# ----------------------------------------------------------------#
# Static solution
# ----------------------------------------------------------------#

RESU = MECA_STATIQUE(CHAM_MATER = MATERI,
                     EXCIT = _F(CHARGE = BC,
                                FONC_MULT = FMULT),
                     MODELE = MODEL,
                     LIST_INST = LINST
                       )


# --------------------------------------------------------------------------#
# Strut and tie model with the "section" method or the topological method
# --------------------------------------------------------------------------#
STM_TOPO = CALC_BT(RESULTAT = RESU,
              RESU_BT = CO('RES_TOPO'),
              INST = 1.,
              DDL_IMPO=(_F(GROUP_NO = 'SUP_1',
                           DX = 0,
                           DY = 0),
                    _F(GROUP_NO= 'SUP_2',
                           DY = 0)
                  ),
              FORCE_NODALE=_F(
                        GROUP_NO = 'LOAD_1',
                        FY=-3000000.0
                         ),
              BETON = BETON,
              ACIER = ACIER,
              GROUP_MA_EXT = 'SKIN1',
              GROUP_MA_INT = 'SKIN2',
              SCHEMA = 'TOPO',
              SIGMA_C = 35000000,
              SIGMA_Y = 500000000,
              PAS_X = 0.05 ,
              PAS_Y = 0.05,
              TOLE_BASE = 0.26,
              NMAX_ITER = 200,
              RESI_RELA_TOPO = 0.00001,
              RESI_RELA_SECTION = 0.000001,
              CRIT_SECTION = 0.5,
              CRIT_ELIM = 0.5,
              SECTION_MINI = 1e-6,
              LONGUEUR_MAX = 7,
              INIT_ALEA = 0,
              );


STM_SEC = CALC_BT(RESULTAT = RESU,
              RESU_BT = CO('RES_SEC'),
              INST = 1.,
              DDL_IMPO=(_F(GROUP_NO = 'SUP_1',
                           DX = 0,
                           DY = 0),
                    _F(GROUP_NO= 'SUP_2',
                           DY = 0)
                  ),
              FORCE_NODALE=_F(
                        GROUP_NO = 'LOAD_1',
                        FY=-3000000.0
                         ),
              BETON = BETON,
              ACIER = ACIER,
              GROUP_MA_EXT = 'SKIN1',
              GROUP_MA_INT = 'SKIN2',
              SCHEMA = 'SECTION',
              SIGMA_C = 35000000,
              SIGMA_Y = 500000000,
              PAS_X = 0.05 ,
              PAS_Y = 0.05,
              TOLE_BASE = 0.26,
              NMAX_ITER = 200,
              RESI_RELA_SECTION = 0.000001,
              CRIT_SECTION = 0.5,
              SECTION_MINI = 1e-6,
              LONGUEUR_MAX = 7,
              );


# ----------------------------------------------------------------#
# Print results
# ----------------------------------------------------------------#

#IMPR_TABLE(
          #TABLE = STM_TOPO,
          #UNITE = 36
        #)

#IMPR_TABLE(
          #TABLE = STM_SEC,
          #UNITE = 35
        #)

#IMPR_RESU(
           #FORMAT = 'MED',
           #RESU   = (_F(RESULTAT = RESU ),
                    #_F(RESULTAT = RES_TOPO ),
                    #_F(RESULTAT = RES_SEC )),
           #UNITE  = 80
           #)

# ----------------------------------------------------------------#
# Non-regression test
# ----------------------------------------------------------------#


TEST_TABLE(VALE_CALC   =  -6.46235E-01,
           NOM_PARA = 'N',
           TABLE = STM_SEC,
           FILTRE = _F(NOM_PARA = 'L',
                       VALE = 6.55000E+00,),
           );

TEST_TABLE(VALE_CALC   = 1.00000E-06,
           NOM_PARA = 'A',
           TABLE = STM_SEC,
           FILTRE = _F(NOM_PARA = 'L',
                       VALE = 6.55000E+00,),
           );

TEST_TABLE(VALE_CALC   = 4.50000E-01,
           NOM_PARA = 'COORD_X NOEUD_I',
           TABLE = STM_SEC,
           FILTRE = _F(NOM_PARA = 'L',
                       VALE = 6.55000E+00,),
           );


TEST_TABLE(VALE_CALC   = -492021.6589721441,
           NOM_PARA = 'N',
           TABLE = STM_TOPO,
           FILTRE = _F(NOM_PARA = 'L',
                       VALE = 3.35894E+00,),
           );

TEST_TABLE(VALE_CALC   = 1.40577616849e-02,
           NOM_PARA = 'A',
           TABLE = STM_TOPO,
           FILTRE = _F(NOM_PARA = 'L',
                       VALE = 3.35894E+00,),
           );

TEST_TABLE(VALE_CALC   = 2.50000E-01,
           NOM_PARA = 'COORD_X NOEUD_I',
           TABLE = STM_TOPO,
           FILTRE = _F(NOM_PARA = 'L',
                       VALE = 3.35894E+00,),
           );

FIN()
