# TITRE BLOC DECOUPE PAR TROIS INTERFACES SE BRANCHANT SEQUENTIELLEMENT AVEC X-FEM
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

# double jonction en F, C_PLAN, TRIA3

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI'));

MAILLAG=LIRE_MAILLAGE(FORMAT='MED',INFO=1,);


MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAG,
                     AFFE=(_F(GROUP_MA=('SURF',),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='C_PLAN',),),);

LN1=FORMULE(NOM_PARA=('X','Y'),VALE='Y-1-0.5*X');

FISS1=DEFI_FISS_XFEM(MAILLAGE=MAILLAG,
                    TYPE_DISCONTINUITE='INTERFACE',
                    DEFI_FISS=_F(FONC_LN=LN1,),
                    INFO=1,);

LN2=FORMULE(NOM_PARA=('X','Y'),VALE='X');

FISS2=DEFI_FISS_XFEM(MAILLAGE=MAILLAG,
                    TYPE_DISCONTINUITE='INTERFACE',
                    DEFI_FISS=_F(FONC_LN=LN2,),
                    JONCTION=_F(FISSURE=(FISS1,),POINT=(0,-5)),
                    INFO=1,);

LN3=FORMULE(NOM_PARA=('X','Y'),VALE='Y');
FISS3=DEFI_FISS_XFEM(MAILLAGE=MAILLAG,
                    TYPE_DISCONTINUITE='INTERFACE',
                    DEFI_FISS=_F(FONC_LN=LN3,),
                    JONCTION=_F(FISSURE=(FISS2,),POINT=(5,0)),
                    INFO=1,);

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,
                         FISSURE=(FISS1,FISS2,FISS3,),
                         INFO=1,);


E=100.0E6
nu=0.3
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,
                            NU=nu,
                            RHO=7800.0,),);

CHAMPMAT=AFFE_MATERIAU(MAILLAGE=MAILLAG,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT=('OUI',),
                                MATER=ACIER,
                                ),);

def depx(x,y) :
   if y < 0.5*x+1 and x<0:   return  -0.25
   if y > 0.5*x+1:           return  -0.5
   if y < 0.5*x+1 and y > 0: return  0.75
   if y < 0 and x > 0:       return  1
   return 0.

def depy(x) :
   return 0.

DEPL_X = FORMULE(VALE='depx(X,Y)',
                  NOM_PARA=('X','Y',),);
DEPL_Y = FORMULE(VALE='depy(X)',
                  NOM_PARA=('X',),);

CH1=AFFE_CHAR_MECA_F(MODELE=MODELEK,
                   DDL_IMPO=(_F(GROUP_MA=('LD','LG'),DX= DEPL_X,DY= DEPL_Y),),
                   INFO=1,);

UTOT1=MECA_STATIQUE(MODELE=MODELEK,
                   CHAM_MATER=CHAMPMAT,
                   EXCIT=(
                          _F(CHARGE=CH1),
                          ),
                   INFO=1,
                   ); 
#-----------------------------------------------------------
#             POST-TRAITEMENT POUR LA VISUALISATION
#-----------------------------------------------------------

MA_XFEM=POST_MAIL_XFEM(MODELE=MODELEK);

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                     PHENOMENE='MECANIQUE',
                     MODELISATION='C_PLAN',),)

RES_XFEM=POST_CHAM_XFEM(MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT1,)

#----------------------------------------------
#                   POST RELEVE
#----------------------------------------------

DEP=POST_RELEVE_T(ACTION=_F(INTITULE='DEPLE',
                                 GROUP_NO=('NFISSU',),
                                 RESULTAT=RES_XFEM,
                                 NOM_CHAM='DEPL',
                                 TOUT_CMP='OUI',NUME_ORDRE=1,
                                 OPERATION='EXTRACTION',),);
DEP = CALC_TABLE(TABLE = DEP,
                 reuse = DEP,
                 ACTION =_F(OPERATION = 'EXTR',
                            NOM_PARA=('NOEUD','COOR_X','COOR_Y','DX','DY'),),);

DEPP = CALC_TABLE(TABLE = DEP,
                     ACTION =(_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'NOEUD',
                                 CRIT_COMP = 'REGEXP',
                                 VALE_K    = 'NP',),),);
DEPPGX = CALC_TABLE(TABLE = DEPP,
                      ACTION =(_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_X',
                                 CRIT_COMP = 'GT',
                                 VALE      =  0.2,),
                               _F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_Y',
                                 CRIT_COMP = 'LT',
                                 VALE      =  0.2,),),);
DEPPLX = CALC_TABLE(TABLE = DEPP,
                      ACTION =_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_X',
                                 CRIT_COMP = 'LT',
                                 VALE      =  -0.2,),);
#DEPPGY = CALC_TABLE(TABLE = DEPP,
#                      ACTION =(_F(OPERATION = 'FILTRE',
#                                 NOM_PARA  = 'COOR_Y',
#                                 CRIT_COMP = 'GT',
#                                 VALE      =  0.2,),
#                               _F(OPERATION = 'FILTRE',
#                                 NOM_PARA  = 'COOR_X',
#                                 CRIT_COMP = 'EQ',
#                                 VALE      =  0,),),);
DEPPLY = CALC_TABLE(TABLE = DEPP,
                      ACTION =(_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_Y',
                                 CRIT_COMP = 'LT',
                                 VALE      =  -0.2,),
                               _F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_X',
                                 CRIT_COMP = 'EQ',
                                 VALE      =  0,),),);

DEPM = CALC_TABLE(TABLE = DEP,
                     ACTION =_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'NOEUD',
                                 CRIT_COMP = 'REGEXP',
                                 VALE_K    = 'NM',),);

DEPMGX = CALC_TABLE(TABLE = DEPM,
                      ACTION =(_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_X',
                                 CRIT_COMP = 'GT',
                                 VALE      =  0.02,),
                               _F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_Y',
                                 CRIT_COMP = 'LT',
                                 VALE      =  0.2,),),);
DEPMLX = CALC_TABLE(TABLE = DEPM,
                      ACTION =_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_X',
                                 CRIT_COMP = 'LT',
                                 VALE      =  -0.02,),);

DEPMGY = CALC_TABLE(TABLE = DEPM,
                      ACTION =_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_Y',
                                 CRIT_COMP = 'GT',
                                 VALE      =  1.02,),);

DEPMLY = CALC_TABLE(TABLE = DEPM,
                      ACTION =(_F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_Y',
                                 CRIT_COMP = 'LT',
                                 VALE      =  0.98,),
                               _F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_X',
                                 CRIT_COMP = 'EQ',
                                 VALE      =  0,),
                               _F(OPERATION = 'FILTRE',
                                 NOM_PARA  = 'COOR_Y',
                                 CRIT_COMP = 'NE',
                                 CRITERE   = 'ABSOLU',
                                 PRECISION = 2E-2,
                                 VALE      =  0,),),);

# Definition des zones

DEPZON=[None]*5

DEPZON[1] = CALC_TABLE(TABLE = DEPMLX,
                    ACTION =_F(OPERATION = 'COMB',
                               TABLE=DEPMLY,),);
DEPZON[2] = DEPPLX
DEPZON[3] = CALC_TABLE(TABLE = DEPMGY,
                    ACTION =(
                             #_F(OPERATION = 'COMB',
                             #  TABLE=DEPPGY,),
                             _F(OPERATION = 'COMB',
                               TABLE=DEPPGX,),),);
DEPZON[4] = CALC_TABLE(TABLE = DEPMGX,
                    ACTION =_F(OPERATION = 'COMB',
                               TABLE=DEPPLY,),);

#----------------------------------------------
#                   TEST TABLE
#----------------------------------------------

vale = [0,-0.25,-0.5,0.75,1]
preci = 10e-14

VALE_CALC=[
 -0.25000000000000,
 -0.24999999999999,
 -7.7461781657364E-15,
 1.0820337681405E-16,
 -0.50000000000000,
 -0.50000000000000,
 -2.2963402013243E-16,
 8.5968250952592E-17,
 0.75000000000000,
 0.75000000000001,
 -6.5349235664611E-15,
 3.4282472693992E-16,
 1.0,
 1.0,
 -4.4555778150546E-16,
 1.0798653637956E-16,
]

for i in [1,2,3,4]: #Boucle sur les zones

  IMPR_TABLE(TABLE=DEPZON[i],);

  TEST_TABLE(TABLE=DEPZON[i],
             NOM_PARA='DX',
             TYPE_TEST='MIN',
             VALE_CALC=VALE_CALC[(i-1)*4+0], VALE_REFE=vale[i],
             CRITERE='RELATIF',
             PRECISION=preci, 
             REFERENCE='ANALYTIQUE',);
  TEST_TABLE(TABLE=DEPZON[i],
             NOM_PARA='DX',
             TYPE_TEST='MAX',
             VALE_CALC=VALE_CALC[(i-1)*4+1], VALE_REFE=vale[i],
             CRITERE='RELATIF',
             PRECISION=preci, 
             REFERENCE='ANALYTIQUE',);
  TEST_TABLE(TABLE=DEPZON[i],
             NOM_PARA='DY',
             TYPE_TEST='MIN',
             VALE_CALC=VALE_CALC[(i-1)*4+2], VALE_REFE=0,
             CRITERE='ABSOLU',
             PRECISION=preci, 
             REFERENCE='ANALYTIQUE',);
  TEST_TABLE(TABLE=DEPZON[i],
             NOM_PARA='DY',
             TYPE_TEST='MAX',
             VALE_CALC=VALE_CALC[(i-1)*4+3], VALE_REFE=0,
             CRITERE='ABSOLU',
             PRECISION=preci, 
             REFERENCE='ANALYTIQUE',);

FIN();
