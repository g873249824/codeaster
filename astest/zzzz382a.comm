# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
      IGNORE_ALARM=('CALCCHAMP_6',),);

import numpy as NP
tours=NP.array([ 750.0,])

MAIL=LIRE_MAILLAGE(FORMAT="ASTER",INFO=2,);

MODELE=AFFE_MODELE(MAILLAGE=MAIL,
                   AFFE=(_F(TOUT='OUI',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='POU_D_T',),),);
                
HP45=DEFI_MATERIAU(ELAS=(_F(E=2.085e+11,
                            NU=0.3,
                            RHO=7800.0,),),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=(_F(TOUT='OUI',MATER=HP45,),),);
                             
nbT=len(tours)
CEK=[None]*nbT
CEM=[None]*nbT

for i, nbTour in enumerate(tours):
    CEK[i]=AFFE_CARA_ELEM(MODELE=MODELE,
                          POUTRE=(_F(MAILLE='M1',
                                     SECTION='CERCLE',
                                     VARI_SECT='CONSTANT',
                                     CARA=('R','EP'),
                                     VALE=(0.265,0.265,),),
                                  _F(MAILLE='M2',
                                     SECTION='CERCLE',
                                     VARI_SECT='CONSTANT',
                                     CARA=('R','EP'),
                                     VALE=(0.265,0.265,),),),);
                                        
for i, nbTour in enumerate(tours):
    CEM[i]=AFFE_CARA_ELEM(MODELE=MODELE,
                          POUTRE=(_F(MAILLE='M1',
                                     SECTION='CERCLE',
                                     VARI_SECT='CONSTANT',
                                     CARA=('R','EP'),
                                     VALE=(0.265,0.265,),),
                                  _F(MAILLE='M2',
                                     SECTION='CERCLE',
                                     VARI_SECT='CONSTANT',
                                     CARA=('R','EP'),
                                     VALE=(0.265,0.265,),),),);
                                        
BCR=AFFE_CHAR_MECA(MODELE=MODELE,
                   DDL_IMPO=(_F(GROUP_NO='NOEU3',DRY=0.0,DRX=0.0,DRZ=0.0,DZ=0.0,),
                             _F(GROUP_NO='NOEU2',DX=0.,DY=0.,),
                             _F(GROUP_NO='NOEU1',DRY=0.0,DRX=0.0,DRZ=0.0,DZ=0.0,DX=0.0,DY=0.0,),),);

Ke=[None]*nbT
NDDL=[None]*nbT
K=[None]*nbT
Me=[None]*nbT
M=[None]*nbT
                   
for j,NTRIM in enumerate(tours):
    Ke[j]=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                         MODELE=MODELE,
                         CHAM_MATER=CHMAT,
                         CARA_ELEM=CEK[j],
                         CHARGE=BCR,);

    NDDL[j]=NUME_DDL(MATR_RIGI=Ke[j],);

    K[j]=ASSE_MATRICE(MATR_ELEM=Ke[j],
                      NUME_DDL=NDDL[j],);

    Me[j]=CALC_MATR_ELEM(OPTION='MASS_MECA',
                      MODELE=MODELE,
                      CHAM_MATER=CHMAT,
                      CARA_ELEM=CEM[j],
                      CHARGE=BCR,);

    M[j]=ASSE_MATRICE(MATR_ELEM=Me[j],
                      NUME_DDL=NDDL[j],);

Ae=[None]*nbT
A=[None]*nbT

for j,NTRIM in enumerate(tours):
    FREQ=NTRIM/60.
    OM=(FREQ * 2) * 3.1415

    Ae[j]=CALC_MATR_ELEM(OPTION='AMOR_MECA',
                         MODELE=MODELE,
                         CHAM_MATER=CHMAT,
                         CARA_ELEM=CEK[j],
                         RIGI_MECA=Ke[j],
                         MASS_MECA=Me[j],);

    A[j]=ASSE_MATRICE(MATR_ELEM=Ae[j],
                      NUME_DDL=NDDL[j],);

Ge=[None]*nbT
G=[None]*nbT
RGe=[None]*nbT
RG=[None]*nbT

for j,NTRIM in enumerate(tours):
    FREQ=NTRIM/60.
    OM=(FREQ * 2) * 3.1415

    Ge[j]=CALC_MATR_ELEM(OPTION='MECA_GYRO',
                         MODELE=MODELE,
                         CHAM_MATER=CHMAT,
                         CARA_ELEM=CEM[j],
                         CHARGE=BCR,);

    G[j]=ASSE_MATRICE(MATR_ELEM=Ge[j],NUME_DDL=NDDL[j],);

    RGe[j]=CALC_MATR_ELEM(OPTION='RIGI_GYRO',
                          MODELE=MODELE,
                          CHAM_MATER=CHMAT,
                          CARA_ELEM=CEM[j],);

    RG[j]=ASSE_MATRICE(MATR_ELEM=RGe[j],NUME_DDL=NDDL[j]);

GOM=[None]*nbT

for j,NTRIM in enumerate(tours):
    FREQ=NTRIM/60.
    OM=(FREQ * 2) * 3.1415

    GOM[j]=COMB_MATR_ASSE(COMB_R=(_F(MATR_ASSE=G[j],COEF_R=OM,),
                                  _F(MATR_ASSE=A[j],COEF_R=1,),),);

K2=ASSE_MATRICE(MATR_ELEM=Ke[0],NUME_DDL=NDDL[0],);
M2=ASSE_MATRICE(MATR_ELEM=Me[0],NUME_DDL=NDDL[0],);

BASEAP=CALC_MODES(MATR_RIGI=K2,
                  MATR_MASS=M2,
                  VERI_MODE=_F(STOP_ERREUR='NON',),
                  OPTION='PLUS_PETITE',
                  CALC_FREQ=_F(NMAX_FREQ=(2,),),);

MDST1=MODE_STATIQUE(MATR_RIGI=K2,MATR_MASS=M[0],
                    MODE_STAT=_F(NOEUD='N2',AVEC_CMP=('DX','DY'),),
                    SOLVEUR=_F(RENUM='METIS',
                               STOP_SINGULIER='NON',
                               NPREC=8,
                               METHODE='MULT_FRONT',),);


BASET=DEFI_BASE_MODALE(RITZ=(_F(MODE_MECA=(BASEAP,MDST1,),
                                NMAX_MODE=(999,2,),),),
                       NUME_REF=NDDL[0],
                       INFO=2,);

NUMGE=NUME_DDL_GENE(BASE=BASET,STOCKAGE='PLEIN',);

MG=[None]*nbT
KG=[None]*nbT
CG=[None]*nbT
MODG=[None]*nbT
MODP=[None]*nbT

for j,NTRIM in enumerate(tours):
    MG[j]=PROJ_MATR_BASE(BASE=BASET,MATR_ASSE=M[j],NUME_DDL_GENE=NUMGE,);
    KG[j]=PROJ_MATR_BASE(BASE=BASET,MATR_ASSE=K[j],NUME_DDL_GENE=NUMGE,);
    CG[j]=PROJ_MATR_BASE(BASE=BASET,MATR_ASSE=GOM[j],NUME_DDL_GENE=NUMGE,);
    
    MODG[j]=CALC_MODES(SOLVEUR_MODAL=_F(METHODE='QZ',),
                       MATR_RIGI=KG[j],
                       MATR_MASS=MG[j],
                       MATR_AMOR=CG[j],
                       VERI_MODE=_F(STOP_ERREUR='NON',),
                       OPTION='PLUS_PETITE',
                       CALC_FREQ=_F(NMAX_FREQ=12,),);

    MODP[j]=REST_GENE_PHYS(RESU_GENE=MODG[j],TOUT_CHAM='OUI',TOUT_ORDRE='OUI',);

vale = [ 5.73636463754074E+09, 5.72513726818827E+09, 9.28565159059657E+09, 9.28609959440268E+09 ]
                
CHA=[None]*nbT
for j,NTRIM in enumerate(tours):
    CHA[j]=CALC_CHAMP(RESULTAT=MODP[j],ENERGIE='EPOT_ELEM',);

    TEST_RESU(RESU=_F(NUME_ORDRE=j+1,
                      MAILLE='M2',
                      REFERENCE='NON_DEFINI',
                      RESULTAT=CHA[j],
                      NOM_CHAM='EPOT_ELEM',
                      NOM_CMP='TOTALE',
                      VALE_CALC=vale[j],
                      VALE_REFE=vale[j],),)

FIN();
