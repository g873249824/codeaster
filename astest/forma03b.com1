
# COPYRIGHT (C) 1991 - 2013  EDF R&D                WWW.CODE-ASTER.ORG
#
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
# 1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
POURSUITE(CODE=_F(NOM='FORMA03B'))

TFIN  = 230.0;

########################################################################
#
# POST-TRAITEMENT: VALEURS MAXI DES CONTRAINTES EQUIVALENTES ET DES
#                  VARIABLES INTERNES
#
########################################################################

# CONTRAINTES EQUIVALENTES AUX POINTS DE GAUSS
RESUNL=CALC_CHAMP(reuse=RESUNL,RESULTAT=RESUNL,CRITERES=('SIEQ_ELGA'))


IMPR_RESU(MODELE=MODE,
          RESU=(_F(RESULTAT=RESUNL,
                   NOM_CHAM='SIEQ_ELGA',
                   VALE_MAX='OUI',),
                _F(RESULTAT=RESUNL,
                   NOM_CHAM='VARI_ELGA',
                   VALE_MAX='OUI',),),);

########################################################################
#
# POST-TRAITEMENT: COURBE SIYY AU POINT G EN FONCTION DU DEPLACEMENT
#
########################################################################

# EXTRACTION VALEURS
DYG=RECU_FONCTION(RESULTAT=RESUNL,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  GROUP_NO='G',);

SYG=RECU_FONCTION(RESULTAT=RESUNL,
                  NOM_CHAM='SIGM_NOEU',
                  NOM_CMP='SIYY',
                  GROUP_NO='G',);

# COURBES AVEC XMGRACE
IMPR_FONCTION(FORMAT='XMGRACE',
              UNITE=81,
              BORNE_X   = ( 0.,2.5),
              BORNE_Y   = ( 0.,250.),
              GRILLE_X  = 0.5,
              GRILLE_Y  = 50.,
              COURBE=_F(FONC_X=DYG,
                        FONC_Y=SYG,),
              TITRE='SigmaYY en fonction de DY au point G ',
              LEGENDE_X='Deplacement DY au point G',
              LEGENDE_Y='Contraine SIGMAYY',);

########################################################################
#
# POST-TRAITEMENT: CONTRAINTES SUR LA LIGNE DU BAS
#
########################################################################

# EXTRACTION VALEURS
SIGBAS=MACR_LIGN_COUPE(RESULTAT=RESUNL,
                       NOM_CHAM='SIGM_ELNO',
                       LIGN_COUPE=_F(NB_POINTS=30,
                                     COOR_ORIG=(10,0,),
                                     COOR_EXTR=(100,0,),),);

# IMPRESSION TABLE
IMPR_TABLE(TABLE=SIGBAS,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=TFIN,),
           NOM_PARA=('ABSC_CURV','SIYY',),);

########################################################################
#
# POST-TRAITEMENT: CONTRAINTES SUR LE BORD DU TROU EN ELASTICITE
#
########################################################################


TELAS = 10.0

# CREATION DU CHEMIN
CERCLE=INTE_MAIL_2D(MAILLAGE=MAIL,
                    DEFI_CHEMIN=_F(GROUP_MA='trou',),);

# EXTRACTION VALEURS
STHETA=POST_RELEVE_T(ACTION=_F(INTITULE='STHETA',
                               CHEMIN=CERCLE,
                               RESULTAT=RESUNL,
                               NOM_CHAM='SIGM_ELNO',
                               INST=TELAS,
                               NOM_CMP=('SIXX','SIYY','SIXY',),
                               REPERE='POLAIRE',
                               OPERATION='EXTRACTION',),);
# IMPRESSION DE LA TABLE
IMPR_TABLE( UNITE=8,
            TABLE=STHETA,
            FORMAT='TABLEAU',);

# RECUPERATION DE LA FONCTION SIYY = F(ABSC_CURV)
STCALC=RECU_FONCTION(TABLE=STHETA,
                     PARA_X='ABSC_CURV',
                     PARA_Y='SIYY',
                     INTERPOL='LIN',
                     PROL_DROITE='CONSTANT',
                     PROL_GAUCHE='CONSTANT',);


# RESULTAT ANALYTIQUE
R = 10.0;
STTA = FORMULE(NOM_PARA='S',VALE='TELAS*(1.+2.*cos(2.*S/R))');
SMAX = pi/2*R

LISABS=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=SMAX,
                                    NOMBRE=30,),);

STTAC=CALC_FONC_INTERP(FONCTION=STTA,NOM_PARA='S',
                       NOM_RESU='ANALYTIC',
                       LIST_PARA=LISABS,
                       INTERPOL='LIN',);

# COMPARAISON ANALYTIQUE/NUMERIQUE
IMPR_FONCTION(FORMAT    = 'XMGRACE',
              UNITE     = 82,
              LEGENDE_X = 'Abscisse curviligne',
              LEGENDE_Y = 'Contraine Sigma Theta-Theta',
              BORNE_X   = ( 0.,20.),
              BORNE_Y   = (-10., 40.),
              GRILLE_X  = 5.,
              GRILLE_Y  = 10.,
              TITRE     = "Sigma Theta-Theta le long de larc de cercle",
              COURBE    = (_F(FONCTION = STCALC,
                              LEGENDE  = 'Aster',
                              MARQUEUR = 2,
                              STYLE    = 1),
                           _F(FONCTION = STTAC ,
                              LEGENDE = 'Analytique',
                              MARQUEUR = 1,
                              STYLE    = 1),
                          )
            )


########################################################################
#
# POST-TRAITEMENT: COURBE FORCE RESULTANTE EN HAUT EN FONCTION
#                  DU DEPLACEMENT
#
########################################################################

# CALCUL DES FORCES NODALES
RESUNL=CALC_CHAMP(reuse =RESUNL,
               RESULTAT=RESUNL,
               FORCE='FORC_NODA',
               );

# EXTRACTION VALEURS
DYG2=RECU_FONCTION(RESULTAT=RESUNL,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DY',
                  GROUP_NO='G',);

# CREATION DU CHEMIN
LH=INTE_MAIL_2D(MAILLAGE=MAIL,
                DEFI_CHEMIN=_F(GROUP_MA='haut',),);

FHAUT=POST_RELEVE_T(ACTION=_F(INTITULE='F_HAUT',
                              CHEMIN=LH,
                              RESULTAT=RESUNL,
                              NOM_CHAM='FORC_NODA',
                              RESULTANTE=('DX','DY','DZ',),
                              OPERATION='EXTRACTION',),);


F_FY_G=RECU_FONCTION(TABLE=FHAUT,
                     PARA_X='INST',
                     PARA_Y='DY',
                     INTERPOL='LIN',);

# COURBES AVEC XMGRACE
IMPR_FONCTION(FORMAT    = 'XMGRACE',
              UNITE     = 83,
              LEGENDE_X = 'Déplacement DY au point G',
              LEGENDE_Y = 'Résultante FY sur FG',
              BORNE_X   = ( 0.,2.5),
              BORNE_Y   = ( 0.,25000.),
              GRILLE_X  = 0.5,
              GRILLE_Y  = 5000.,
              TITRE     = "Resultante de Fy(FG) fonction de Dy(G)",
              COURBE    = (_F(FONC_X = DYG2,
                             FONC_Y = F_FY_G,),),);


FIN();
