# TITRE METHODE DES SOLUTIONS MANUFACTUREES : CONTACT GRANDES DEFORMATIONS 3D
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),
      DEBUG=_F(SDVERI='OUI'),
      IGNORE_ALARM=('CALCULEL2_63',),);

#================================================================================================
# Definition des caracteristiques du materiau
#================================================================================================
E=1;
NU=0.;

#================================================================================================
# Calcul de la solution de reference
#================================================================================================

INCLUDE(UNITE=38)

#================================================================================================
# Debut du modele
#================================================================================================


Mail=LIRE_MAILLAGE(FORMAT='MED',);

Mail=MODI_MAILLAGE(reuse=Mail,
                    MAILLAGE=Mail,
                    ORIE_PEAU_3D=(_F(GROUP_MA='ESCLAVE'),
                                  _F(GROUP_MA='BORDX'),
                                  _F(GROUP_MA='BORDMX'),
                                  _F(GROUP_MA='BORDY'),
                                  _F(GROUP_MA='BORDMY'),
                                  )
                            );


#Definition du materiau cas isotrope
acier=DEFI_MATERIAU(ELAS=_F(E=E, NU=NU,),);

#Definition du transitoire
LINST=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=(
                                 _F(JUSQU_A=1., NOMBRE=1,),
                     ),);

RAMPE=DEFI_FONCTION(NOM_PARA='INST',
                    VALE=(0.0, 0.0,
                          1.,  1.0,),
                    PROL_DROITE='LINEAIRE',
                    PROL_GAUCHE='LINEAIRE',);



# Correspondance Modele Maillage
modl=AFFE_MODELE(MAILLAGE=Mail,
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='MECANIQUE',
                         MODELISATION='3D',),
                 );
## Affectation du materiau
chmat=AFFE_MATERIAU(MAILLAGE=Mail,
                    AFFE=_F(TOUT='OUI',
                            MATER=acier,),
                   );


# affectation des conditions limites
Dirich=AFFE_CHAR_CINE_F(MODELE=modl,
                       MECA_IMPO=_F(GROUP_MA='HAUT', DX=FUx, DY=FUy, DZ=FUz,),
                        );

Neumann=AFFE_CHAR_MECA_F(MODELE=modl,
                        FORCE_FACE=(_F(GROUP_MA='BORDX',   FX=FsurfXx,  FY=FsurfXy,  FZ=FsurfXz,),
                                    _F(GROUP_MA='BORDMX',  FX=FsurfmXx, FY=FsurfmXy, FZ=FsurfmXz,),
                                    _F(GROUP_MA='BORDY',   FX=FsurfYx,  FY=FsurfYy,  FZ=FsurfYz,),
                                    _F(GROUP_MA='BORDMY',  FX=FsurfmYx, FY=FsurfmYy, FZ=FsurfmYz,),
                                    _F(GROUP_MA='ESCLAVE', FX=FsurfTx,  FY=FsurfTy,  FZ=FsurfTz,),
                                      ),
                          );

ForceInt=AFFE_CHAR_MECA_F(MODELE=modl,
                          FORCE_INTERNE=_F(GROUP_MA='VOLUME', FX=Fvolx, FY=Fvoly, FZ=Fvolz,),
                         );

# affectation des conditions limites
Contact=DEFI_CONTACT(MODELE=modl,
                     FORMULATION='CONTINUE',
                     ALGO_RESO_GEOM = 'NEWTON',
                     ALGO_RESO_CONT = 'NEWTON',
                     ZONE=_F(GROUP_MA_MAIT=('MAITRE',),
                             GROUP_MA_ESCL=('ESCLAVE',),
                             INTEGRATION='GAUSS',
                             ORDRE_INT=4,                                ),
                       );

BlocEscl=AFFE_CHAR_CINE(MODELE=modl,
                        MECA_IMPO=_F(GROUP_MA='MAITRE',
                                     DX=0,DY=0,DZ=0,),
                       );

EVOLNOLI=STAT_NON_LINE(MODELE=modl,
                       CHAM_MATER=chmat,
                       COMPORTEMENT=_F(RELATION='ELAS',
                                    DEFORMATION='GROT_GDEP',
                                    TOUT='OUI',),
                       INCREMENT=_F(LIST_INST=LINST,),
                       NEWTON=_F(REAC_ITER=1,),
                       CONVERGENCE=_F(ITER_GLOB_MAXI=100,RESI_GLOB_RELA=1.e-8),
                       CONTACT=Contact,
                       EXCIT=(_F(CHARGE=Neumann,  FONC_MULT=RAMPE),
                              _F(CHARGE=Dirich,   FONC_MULT=RAMPE),
                              _F(CHARGE=ForceInt, FONC_MULT=RAMPE),
                              _F(CHARGE=BlocEscl,),
                              ),
                       );

# ========================================================================================
#          Creation de la solution analytique
# ========================================================================================

CHXN=CREA_CHAMP(OPERATION='EXTR', TYPE_CHAM='NOEU_GEOM_R',
                NOM_CHAM='GEOMETRIE', MAILLAGE=Mail, INFO=1);

TEMP1=CREA_CHAMP(OPERATION='AFFE',
                 TYPE_CHAM='NOEU_NEUT_F',
                 MAILLAGE=Mail,
                 AFFE=(_F( GROUP_MA='VOLUME', NOM_CMP='X1', VALE_F=FUx),
                       _F( GROUP_MA='VOLUME', NOM_CMP='X2', VALE_F=FUy),
                       _F( GROUP_MA='VOLUME', NOM_CMP='X3', VALE_F=FUz),
                      ),);

TEMP2=CREA_CHAMP(OPERATION='EVAL',
                 TYPE_CHAM='NOEU_NEUT_R',
                 CHAM_F=TEMP1,
                 CHAM_PARA=CHXN);

Uana=CREA_CHAMP(OPERATION='ASSE',
                TYPE_CHAM='NOEU_DEPL_R',
                MAILLAGE=Mail,
                ASSE=(_F(GROUP_MA='VOLUME',
                         CHAM_GD=TEMP2,
                         NOM_CMP='X1',
                         NOM_CMP_RESU='DX',),
                      _F(GROUP_MA='VOLUME',
                         CHAM_GD=TEMP2,
                         NOM_CMP='X2',
                         NOM_CMP_RESU='DY',),
                      _F(GROUP_MA='VOLUME',
                         CHAM_GD=TEMP2,
                         NOM_CMP='X3',
                         NOM_CMP_RESU='DZ',)
                      ));


# ========================================================================================
#          Calcul de l'erreur DIFF=Uana - Ucalc
# ========================================================================================

Ucalc=CREA_CHAMP(OPERATION='EXTR',
                 INST=1.,
                 NOM_CHAM='DEPL' , TYPE_CHAM='NOEU_DEPL_R',
                 RESULTAT=EVOLNOLI ,);


DIFF=CREA_CHAMP(OPERATION='ASSE', TYPE_CHAM='NOEU_DEPL_R',MODELE=modl,

                ASSE=(_F(GROUP_MA='VOLUME', CHAM_GD=Ucalc,CUMUL='OUI',COEF_R=+1.,NOM_CMP='DX',NOM_CMP_RESU='DX',),
                      _F(GROUP_MA='VOLUME', CHAM_GD=Uana, CUMUL='OUI',COEF_R=-1.,NOM_CMP='DX',NOM_CMP_RESU='DX',),
                      _F(GROUP_MA='VOLUME', CHAM_GD=Ucalc,CUMUL='OUI',COEF_R=+1.,NOM_CMP='DY',NOM_CMP_RESU='DY',),
                      _F(GROUP_MA='VOLUME', CHAM_GD=Uana, CUMUL='OUI',COEF_R=-1.,NOM_CMP='DY',NOM_CMP_RESU='DY',),
                      _F(GROUP_MA='VOLUME', CHAM_GD=Ucalc,CUMUL='OUI',COEF_R=+1.,NOM_CMP='DZ',NOM_CMP_RESU='DZ',),
                      _F(GROUP_MA='VOLUME', CHAM_GD=Uana, CUMUL='OUI',COEF_R=-1.,NOM_CMP='DZ',NOM_CMP_RESU='DZ',),
                      ),);



# ========================================================================================
#          Verifications
# ========================================================================================

TEST_RESU(CHAM_NO=_F(
                     TYPE_TEST='SOMM_ABS',
                     CHAM_GD=DIFF,
                     VALE_CALC=0.0393685021236,
                     ),
          )

IMPR_RESU(FORMAT='MED',
          RESU=(_F(CHAM_GD=DIFF,),
                _F(CHAM_GD=Uana,),
                _F(CHAM_GD=Ucalc,),
               ),
          );


FIN();
