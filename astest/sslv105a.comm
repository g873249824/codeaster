# TITRE RAIDISSEMENT CENTRIFUGE D'UNE POUTRE EN ROTATION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================


DEBUT(CODE=_F(NOM='SSLV105A', NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))

#
#
#         PRE_IDEAS();
#
#

MAILET=LIRE_MAILLAGE(FORMAT='MED',  UNITE=20)

#
#

MODELE=AFFE_MODELE(   MAILLAGE=MAILET,
                         AFFE=_F( TOUT = 'OUI', PHENOMENE = 'MECANIQUE',
                        MODELISATION = '3D'))

#
#
MATER=DEFI_MATERIAU(  ELAS=_F( E = 2.0E11,  NU = 0.0,  RHO = 7800.0))

#
#
CHAMPMAT=AFFE_MATERIAU(  MAILLAGE=MAILET,
                      AFFE=_F( TOUT = 'OUI',MATER = MATER))

#
#
CHARGE=AFFE_CHAR_MECA(  MODELE=MODELE,
                         DDL_IMPO=_F( GROUP_NO = 'PIED', DX = 0.0, DY = 0.0,
                         DZ = 0.0),
                         ROTATION=_F(VITESSE= 3000.,
                                     AXE = (1.,0.,-1.,),),);

#
#
RIGIELEM=CALC_MATR_ELEM(  MODELE=MODELE,  CHARGE=CHARGE,
                         CHAM_MATER=CHAMPMAT,
                         OPTION='RIGI_MECA')

#
#
ROTELEM=CALC_MATR_ELEM(  MODELE=MODELE,  CHARGE=CHARGE,
                         CHAM_MATER=CHAMPMAT,
                         OPTION='RIGI_ROTA')

#
#
INELEM=CALC_VECT_ELEM( OPTION='CHAR_MECA',
                         CHAM_MATER=CHAMPMAT,
                         CHARGE=CHARGE)

#
#
NUMEROTA=NUME_DDL(   MATR_RIGI=RIGIELEM)

#
#
ELAS=ASSE_MATRICE(MATR_ELEM=RIGIELEM,NUME_DDL=NUMEROTA)

#
#
INERTIE=ASSE_VECTEUR( VECT_ELEM=INELEM,
                           NUME_DDL=NUMEROTA)

#
#
RIGIRO=ASSE_MATRICE(MATR_ELEM=ROTELEM,NUME_DDL=NUMEROTA)

#
#
RAID=COMB_MATR_ASSE(COMB_R=(_F( MATR_ASSE = ELAS,COEF_R = 1.),
                           _F( MATR_ASSE = RIGIRO,COEF_R = 1.)))

#
#
RAID=FACTORISER( reuse=RAID,  MATR_ASSE=RAID)

DEP1=RESOUDRE(   MATR=RAID,
                  CHAM_NO=INERTIE)

#
#
TEST_RESU(CHAM_NO=(_F(NOM_CMP='DX',
                      GROUP_NO='TEST',
                      CHAM_GD=DEP1,
                      REFERENCE='ANALYTIQUE',
                      VALE_REFE=8.75E-3,
                      VALE_CALC=8.7512221014631E-3,
                      PRECISION=1.E-3,),
                   _F(NOM_CMP='DY',
                      GROUP_NO='TEST',
                      CHAM_GD=DEP1,
                      REFERENCE='ANALYTIQUE',
                      VALE_REFE=8.75E-3,
                      VALE_CALC=8.7510234473553E-3,
                      PRECISION=1.E-3,),
                   _F(NOM_CMP='DZ',
                      GROUP_NO='TEST',
                      CHAM_GD=DEP1,
                      REFERENCE='ANALYTIQUE',
                      VALE_REFE=8.75E-3,
                      VALE_CALC=8.7508775359685E-3,
                      PRECISION=1.E-3,),
                   ),
          )

#
FIN()
#
