
# COPYRIGHT (C) 1991 - 2013  EDF R&D                WWW.CODE-ASTER.ORG
#
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
# 1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
POURSUITE(CODE=_F(NOM = 'SSNP15A',), PAR_LOT='NON')

# TEST de l'utilisation des methodes LIST_xxx sur les concepts resultat

import numpy as NP

para = U.LIST_PARA()
var = U.LIST_VARI_ACCES()
ch = U.LIST_CHAMPS()
ncmp = U.LIST_NOM_CMP()

# test des numeros d'ordre
nbord = len(var['NUME_ORDRE'])
print nbord
print var['NUME_ORDRE']
assert var['NUME_ORDRE'] == range(0, nbord), var['NUME_ORDRE']

# test parametre de type K8
smo = set(para['MODELE'])
assert len(smo) == 1, smo                 # modele unique
mo = list(smo)[0]
assert mo.strip() == 'MO', "valeur inattendue : %s" % mo
assert len(mo) == 8, "longueur inattendue : %d" % len(mo)


# test parametre de type R
val_inst = NP.array(para['INST'])
dt = val_inst[1:len(val_inst)] - val_inst[0:-1]
assert min(dt) > 0., dt                   # croissance des pas de temps

FIN()
