# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#
POURSUITE(CODE='OUI', PAR_LOT='NON')

# TEST de l'utilisation des methodes LIST_xxx sur les concepts resultat

import numpy as NP

para = U.LIST_PARA()
var = U.LIST_VARI_ACCES()
ch = U.LIST_CHAMPS()
ncmp = U.LIST_NOM_CMP()

# test des numeros d'ordre
nbord = len(var['NUME_ORDRE'])
print(nbord)
print(var['NUME_ORDRE'])
assert var['NUME_ORDRE'] == list(range(0, nbord)), var['NUME_ORDRE']

# test parametre de type K8
smo = set(para['MODELE'])
assert len(smo) == 1, smo                 # modele unique
mo = list(smo)[0]
assert mo.strip() == 'MO', "valeur inattendue : %s" % mo
assert len(mo) == 8, "longueur inattendue : %d" % len(mo)


# test parametre de type R
val_inst = NP.array(para['INST'])
dt = val_inst[1:len(val_inst)] - val_inst[0:-1]
assert min(dt) > 0., dt                   # croissance des pas de temps

FIN()
