# MODIF  DATE 10/10/2012   AUTEUR COURTOIS M.COURTOIS 
# TITRE VALIDATION DE LA MODELISATION GVNO + LOI ENDO_CARRE EN AXIS
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# ssna119a.para = tps_job 20 mem_job 512Mo ncpus 1 liste_test R

DEBUT(CODE=_F(NOM='SSNA119A', NIV_PUB_WEB='INTERNET', VISU_EFICAS='NON'), DEBUG=_F(SDVERI='OUI'))

E       = 3.E8
NU      = 0.2
Sy      = 3.E4
D       = 0.5
wy      = 0.5*Sy**2/E
C       = wy*D**2

MAILLAGE  = LIRE_MAILLAGE(FORMAT='MED')


MA        = CREA_MAILLAGE( MAILLAGE = MAILLAGE,
                            LINE_QUAD = _F(TOUT = 'OUI'),
                          );
                    
MO        = AFFE_MODELE(MAILLAGE = MA,
                        AFFE=_F(TOUT='OUI',
                                PHENOMENE='MECANIQUE',
                                MODELISATION='AXIS_GVNO',),);


BETON     = DEFI_MATERIAU(ELAS      = _F(E = E, NU = NU), 
                          ECRO_LINE = _F(SY = Sy, D_SIGM_EPSI = 2.0),
                          NON_LOCAL = _F(C_GRAD_VARI = C),
                          )         

CHMAT     = AFFE_MATERIAU(MAILLAGE = MA,
                          AFFE = _F(TOUT = 'OUI',
                                    MATER    =  BETON),)

EFFORT    = AFFE_CHAR_MECA(MODELE = MO,
                           DDL_IMPO = (_F(GROUP_MA = 'Haut', DY =  0.3), 
                                       _F(GROUP_MA = 'Bas',  DY = -0.3), 
                                       )
                           );
                           
BLOCAGE    = AFFE_CHAR_MECA(MODELE = MO,
                            DDL_IMPO = (_F(GROUP_NO = 'Center', DX =  0.), 
                                       )
                           );                           

F_EFFORT  = DEFI_FONCTION(NOM_PARA    = 'INST',
                          VALE        = (0., 0., 1. ,1.225e-4),
                          PROL_DROITE = 'LINEAIRE',
                          )  

INSTANTS  = DEFI_LIST_REEL(DEBUT = 6.,
                           INTERVALLE = (_F(JUSQU_A = 7., NOMBRE = 2),)
                           )                      
                                                      
TEMPS     = DEFI_LIST_INST(DEFI_LIST = _F(LIST_INST = INSTANTS),
                           ECHEC     = _F(ACTION='DECOUPE',
                                          SUBD_METHODE='MANUEL',
                                          SUBD_NIVEAU=2,
                                          SUBD_PAS=3,
                                          )                          
                           );                           
                                                      
EVOL      = STAT_NON_LINE(MODELE = MO,
                          CHAM_MATER = CHMAT,
                          EXCIT = (_F(CHARGE = EFFORT, FONC_MULT = F_EFFORT),   
                                   _F(CHARGE = BLOCAGE,),                 
                                   ),                       
                          COMP_INCR = _F(RELATION = 'ENDO_CARRE',
                                         DEFORMATION = 'PETIT',
                                         ),
                          INCREMENT = _F(LIST_INST = TEMPS,
                                         INST_FIN  = 7.,
                                         ),
                          NEWTON  = _F(MATRICE   = 'TANGENTE',
                                       REAC_ITER = 1,
                                       ),
                          CONVERGENCE = _F(RESI_GLOB_RELA = 1.e-6,),                          
                          SOLVEUR=_F( ),
                          ARCHIVAGE = _F(LIST_INST=INSTANTS),
                                         AFFICHAGE = _F(INFO_RESIDU = 'OUI',)
                          );    
                    
                          
#***********************************************************************
#    TEST COMPARAISON AVEC ENDOMMAGEMENT EN NON_REGRESSION
#*********************************************************************** 

                                         
TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  GROUP_NO='No_test',
                  RESULTAT=EVOL,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DAMG',
                  VALE_CALC=0.048250000000000001,
                  TOLE_MACHINE=1.E-4,
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=2,
                  GROUP_NO='No_test',
                  RESULTAT=EVOL,
                  NOM_CHAM='DEPL',
                  NOM_CMP='DAMG',
                  VALE_CALC=0.23794000000000001,
                  TOLE_MACHINE=1.E-4,
                  ),
          )

FIN();
