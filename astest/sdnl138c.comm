# TITRE Modes propres de vibration d'un cadre auto-contraint
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
      DEBUG=_F( SDVERI     = 'OUI',),
)

# lecture du maillage
mail=LIRE_MAILLAGE(FORMAT='MED',);

affect=AFFE_MODELE(
    MAILLAGE=mail,
    AFFE=(
        _F(GROUP_MA='Group_barre', PHENOMENE='MECANIQUE', MODELISATION='BARRE',),
        _F(GROUP_MA='Group_cable', PHENOMENE='MECANIQUE', MODELISATION='CABLE',),
    ),
)

# Caractéristique du câble
Cable_Aire = 5.026e-5
Cable_Rho  = 7800.0

# Définition du matériau CABLE
mat_cabl=DEFI_MATERIAU(
    ELAS=_F(E=2.1E+11, NU=0.3, ALPHA=1.0E-05,RHO=Cable_Rho),
    CABLE=_F(EC_SUR_E=0.0001,),
)

# Définition du matériau BARRE
mat_bar=DEFI_MATERIAU(
    ELAS=_F(E=2.1e+11, NU=0.3, ALPHA=0.0,RHO=7800.0),
)

# Affectation des caractéristiques élémentaires pour les barres et les cables
calbar=AFFE_CARA_ELEM(
    MODELE=affect,
    VERIF='MAILLE',
    BARRE=_F(GROUP_MA='Group_barre', SECTION='GENERALE', CARA='A', VALE=0.0001,),
    CABLE=_F(GROUP_MA='Group_cable', SECTION=Cable_Aire,N_INIT=5000.0),
)

# Création des champs de température
ChZero=CREA_CHAMP(
    TYPE_CHAM='NOEU_TEMP_R',
    OPERATION='AFFE',
    MAILLAGE=mail,
    AFFE=(
        _F(TOUT='OUI', NOM_CMP='TEMP', VALE=0.0,),
    ),
)
tempetr1=CREA_CHAMP(
    TYPE_CHAM='NOEU_TEMP_R',
    OPERATION='AFFE',
    MAILLAGE=mail,
    AFFE=(
        _F(TOUT='OUI', NOM_CMP='TEMP', VALE=0.0,),
        _F(GROUP_MA='Group_cable', NOM_CMP='TEMP', VALE=-200.0,),
    ),
)

tempetr2=CREA_CHAMP(
    TYPE_CHAM='NOEU_TEMP_R',
    OPERATION='AFFE',
    MAILLAGE=mail,
    AFFE=(
        _F(TOUT='OUI', NOM_CMP='TEMP', VALE=0.0,),
        _F(GROUP_MA='Group_cable', NOM_CMP='TEMP', VALE=-200.25,),
    ),
)


Tfin = 1.0 ; NPas = 20
TPas    = Tfin / NPas
TMilieu = TPas*(NPas/2)

L_LIST=DEFI_LIST_REEL(
    DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A=Tfin,     PAS=TPas,),
        _F(JUSQU_A=Tfin+1.0, NOMBRE=1,),
    ),
)


tempresu=CREA_RESU(
    OPERATION='AFFE',
    TYPE_RESU='EVOL_THER',
    NOM_CHAM='TEMP',
    AFFE=(
        _F(CHAM_GD=ChZero,  INST=0.0,),
        _F(CHAM_GD=tempetr1, INST=Tfin,),
        _F(CHAM_GD=tempetr2, INST=Tfin+1.0,),
    ),
)

CTM=AFFE_MATERIAU(
    MAILLAGE=mail,
    MODELE=affect,
    AFFE=(
        _F(GROUP_MA='Group_barre', MATER=mat_bar,),
        _F(GROUP_MA='Group_cable', MATER=mat_cabl,),
    ),
    AFFE_VARC=_F(TOUT='OUI',NOM_VARC='TEMP', EVOL=tempresu, NOM_CHAM='TEMP', VALE_REF=0,),
)


LIAISON=AFFE_CHAR_MECA(
    MODELE=affect,
    DDL_IMPO=(
        _F(GROUP_NO='GN4', DY=0.0, DZ=0.0,),
        _F(GROUP_NO='GN3', DX=0.0, DY=0.0, DZ=0.0),
        _F(GROUP_NO=('GN1','GN2'),  DZ=0.0,),
    ),
)

RESU=STAT_NON_LINE(
    MODELE=affect,
    CHAM_MATER=CTM,
    CARA_ELEM=calbar,
    EXCIT=_F(CHARGE=LIAISON,),
    COMPORTEMENT=(
        _F(GROUP_MA = 'Group_cable', RELATION = 'CABLE', DEFORMATION = 'GROT_GDEP'),
        _F(GROUP_MA = 'Group_barre', RELATION = 'ELAS'),
    ),
    INCREMENT=_F(LIST_INST=L_LIST),
    NEWTON=_F(MATRICE='TANGENTE', REAC_ITER=1,),
    CONVERGENCE=_F(
        ITER_GLOB_MAXI=15,
        RESI_REFE_RELA=1.0E-06 ,        
EFFORT_REFE = 1.0,
        MOMENT_REFE = 1.0,
    ),
    SOLVEUR=_F(METHODE='LDLT',),
)

"""
IMPR_RESU(FORMAT='RESULTAT',
    RESU=_F(RESULTAT=RESU,NOM_CHAM=('DEPL','SIEF_ELGA',), INST=(TMilieu,Tfin,Tfin+1.0), ),
)
"""

Temps1 = Tfin
Temps2 = Tfin+1.0

NUDDL = NUME_DDL(MODELE=affect, CHARGE=(LIAISON),)

U1=CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='EXTR',
    RESULTAT=RESU, NOM_CHAM='DEPL', INST=Temps1, INFO=1,)

U2=CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='EXTR',
    RESULTAT=RESU, NOM_CHAM='DEPL', INST=Temps2, INFO=1,)

DU=CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R', OPERATION='ASSE',
    NUME_DDL=NUDDL, MAILLAGE=mail,
    ASSE=(
        _F(TOUT='OUI', CHAM_GD=U2, CUMUL='OUI', COEF_R=1.0,),
        _F(TOUT='OUI', CHAM_GD=U1, CUMUL='OUI', COEF_R=-1.0,),
    ),
)

SIGP1=CREA_CHAMP(TYPE_CHAM='ELGA_SIEF_R', OPERATION='EXTR',
    RESULTAT=RESU, NOM_CHAM='SIEF_ELGA', INST=Temps1, INFO=1,)

VARIP1=CREA_CHAMP(TYPE_CHAM='ELGA_VARI_R', OPERATION='EXTR',
    RESULTAT=RESU, NOM_CHAM='VARI_ELGA', INST=Temps1, INFO=1,)

L_LIST2 = DEFI_LIST_REEL(
    DEBUT=Temps1,
    INTERVALLE=_F(JUSQU_A=Temps2, NOMBRE=1,),
)

CONT=CALCUL(
    OPTION=('COMPORTEMENT','FORC_INTE_ELEM','MATR_TANG_ELEM'),
    MODELE=affect,
    CHAM_MATER=CTM,
    CARA_ELEM=calbar,
    EXCIT=_F(CHARGE=LIAISON),
    COMPORTEMENT=(
        _F(GROUP_MA = 'Group_cable', RELATION = 'CABLE', DEFORMATION = 'GROT_GDEP'),
        _F(GROUP_MA = 'Group_barre', RELATION = 'ELAS'),
    ),
    INCREMENT=_F(LIST_INST=L_LIST2,NUME_ORDRE=1),
    DEPL=U1,
    INCR_DEPL=DU,
    SIGM=SIGP1,
    VARI=VARIP1,
    INFO=1,
)

# Extraction de la rigidite elementaire
MATR=EXTR_TABLE(TYPE_RESU='MATR_ELEM_DEPL_R',
    TABLE=CONT, NOM_PARA='NOM_SD',
    FILTRE=_F(NOM_PARA='NOM_OBJET', VALE_K='MATR_TANG_ELEM'),
)

# Calcul des masses elementaires
MATM=CALC_MATR_ELEM(OPTION='MASS_MECA',
        MODELE=affect, CARA_ELEM=calbar, CHAM_MATER=CTM,
        CHARGE=LIAISON, INST=Temps2,
)

# Assemblage
MATASM=ASSE_MATRICE(MATR_ELEM=MATM, NUME_DDL=NUDDL,);
MATASR=ASSE_MATRICE(MATR_ELEM=MATR, NUME_DDL=NUDDL,);
# Calcul des modes propres avec precontrainte
MODET = CALC_MODES(
    TYPE_RESU='DYNAMIQUE', MATR_RIGI=MATASR, MATR_MASS=MATASM,
    OPTION='PLUS_PETITE',
    CALC_FREQ=_F(NMAX_FREQ = 10,),
    VERI_MODE= _F(STOP_ERREUR='NON', PREC_SHIFT=1.0E-04,),
)
#
ModesCalc=(8.85312E+01, 8.88603E+01, 8.89670E+01, 8.90146E+01, 8.90146E+01, 8.90146E+01,)
motclf={}
motclf['RESU'] = []
for ifreq in range(len(ModesCalc)):
    motclf['RESU'].append(
        _F( PARA='FREQ', NUME_MODE=ifreq+1,  RESULTAT=MODET,
            VALE_CALC=ModesCalc[ifreq], )
    )

TEST_RESU(**motclf)

FIN()
