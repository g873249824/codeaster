# TITRE RECALAGE MODAL PAR DIAGONALISATION DES MATRICES GENERALISEES
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
import numpy as NP

# Pour des raisons de performances, on force SDVERI='NON'.
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON',),
      PAR_LOT='NON',
      IGNORE_ALARM='SUPERVIS_1', #PAR_LOT = NON a cause de EXTR_TABLE
      DEBUG=_F(SDVERI='NON'));

import numpy as NP

# le modele "experimental"

EP=0.5
MP=50000.


#PRE_GIBI(UNITE_GIBI=23);

PRE_IDEAS(UNITE_IDEAS=21,UNITE_MAILLAGE=20,);

MAILEXP2=LIRE_MAILLAGE(UNITE=20,);

MODEXP=AFFE_MODELE(MAILLAGE=MAILEXP2,
                  AFFE=(_F(GROUP_MA = 'TOUT_ELT',
                          PHENOMENE='MECANIQUE',
                          MODELISATION='DST',),
                        _F(GROUP_MA = 'MASS',
                          PHENOMENE='MECANIQUE',
                          MODELISATION='DIS_T',),

                          ),);

#
#---------------------------------------------------------------------
#                     CARACTERISTIQUES ELEMENTAIRES
#---------------------------------------------------------------------

CAREXP=AFFE_CARA_ELEM(MODELE=MODEXP,
                        COQUE=_F(GROUP_MA='SURF',
                                 EPAIS=EP,),
                        DISCRET=( _F(  GROUP_MA = 'MASS',
                                     CARA = 'M_T_D_N',
                                     VALE = MP,),
                                  _F(  GROUP_MA = 'MASS',
                                     CARA = 'K_T_D_N',
                                     VALE = (0.,0.,0.,),)
                        ));


#

ACIER=DEFI_MATERIAU(ELAS=_F(E=2.E11,
                            NU=0.3,
                            RHO=7800.,),);
#

MATEX=AFFE_MATERIAU(MAILLAGE=MAILEXP2,
                  AFFE=_F(TOUT='OUI',
                          MATER=ACIER,),);
#


KELEXP=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                     MODELE=MODEXP,
                     CHAM_MATER=MATEX,
                     CARA_ELEM=CAREXP,
                     );

MELEXP=CALC_MATR_ELEM(OPTION='MASS_MECA',
                     MODELE=MODEXP,
                     CHAM_MATER=MATEX,
                     CARA_ELEM=CAREXP,
                     );


NUMEXP=NUME_DDL(MATR_RIGI=KELEXP,

                );

KASSEXP=ASSE_MATRICE(MATR_ELEM=KELEXP,
                  NUME_DDL=NUMEXP,);

MASSEXP=ASSE_MATRICE(MATR_ELEM=MELEXP,
                  NUME_DDL=NUMEXP,);


# creation de la sd_mode_meca avec les modes experimentaux


MODMES=LIRE_RESU(TYPE_RESU='MODE_MECA',
                 FORMAT='IDEAS',
                 MODELE=MODEXP,
                 UNITE=21,
                 NOM_CHAM='DEPL',
                 MATR_RIGI =KASSEXP,
                 MATR_MASS =MASSEXP,
                 FORMAT_IDEAS=_F(NOM_CHAM='DEPL',
                                 NUME_DATASET=55,
                                 RECORD_6=(1,2,3,8,2,6,),
                                 POSI_ORDRE=(7,4,),
                                 POSI_NUME_MODE=(7,4),
                                 POSI_FREQ=(8,1,),
                                 POSI_MASS_GENE=(8,2),
                                 POSI_AMOR_GENE=(8,3),
                                 NOM_CMP=('DX','DY','DZ','DRX','DRY','DRZ'),),
                 TOUT_ORDRE='OUI',);

nb_modes_mes = 8


#********************************
# CREATION MODELE SUPPORT POUR L'EXPANSION DE LA MESURE
#********************************


EP=0.5
MP=50000.

# le modele support exact correspond a EP=0.5 et MP=50000
# on peut simuler eventuellement une incertitude sur le modele support
#EP=0.48
#MP=48000.

PRE_GIBI(UNITE_GIBI=22,UNITE_MAILLAGE=23,);

MAIL1=LIRE_MAILLAGE(UNITE=23,VERI_MAIL=_F(VERIF='OUI',),);


MAIL1=DEFI_GROUP(reuse=MAIL1,
                 MAILLAGE=MAIL1,
                 CREA_GROUP_NO=_F(
                                  NOM='NO_MA',
                                  OPTION='ENV_SPHERE',
                                  POINT=(2.0,3.0),
                                  RAYON=0.1,
                                  PRECISION=0.1,
                                  ),)

MAIL1=DEFI_GROUP(reuse =MAIL1,
                   MAILLAGE=MAIL1,
                   CREA_GROUP_NO=_F(GROUP_MA='BORDS',
                                    NOM='BORDS',),);

MAIL2= CREA_MAILLAGE(MAILLAGE=MAIL1,
                     CREA_POI1 =(_F(NOM_GROUP_MA = 'MASS',
                                GROUP_NO = 'NO_MA'),
                                )
                     )


MODEL=AFFE_MODELE(MAILLAGE=MAIL2,
                  AFFE=(_F(GROUP_MA = 'TOUT_ELT',
                          PHENOMENE='MECANIQUE',
                          MODELISATION='DST',),
                        _F(GROUP_MA = 'MASS',
                          PHENOMENE='MECANIQUE',
                          MODELISATION='DIS_T',),

                          ),);

#
#---------------------------------------------------------------------
#                     CARACTERISTIQUES ELEMENTAIRES
#---------------------------------------------------------------------

CARA_ELE=AFFE_CARA_ELEM(MODELE=MODEL,
                        COQUE=_F(GROUP_MA='SURF',
                                 EPAIS=EP,),
                        DISCRET=( _F(  GROUP_MA = 'MASS',
                                     CARA = 'M_T_D_N',
                                     VALE = MP,),
                                  _F(  GROUP_MA = 'MASS',
                                     CARA = 'K_T_D_N',
                                     VALE = (0.,0.,0.,),)
                        ),);


#---------------------------------------------------------------------
#                     CARACTERISTIQUES MATERIAUX
#---------------------------------------------------------------------

ACIER2=DEFI_MATERIAU(ELAS=_F(E=2.E11,
                            NU=0.3,
                            RHO=7800.0,),);
#

MAT=AFFE_MATERIAU(MAILLAGE=MAIL2,
                  AFFE=_F(GROUP_MA='SURF',
                          MATER=ACIER2,),);

#---------------------------------------------------------------------
#                   CHARGEMENT
#---------------------------------------------------------------------
CHAR = AFFE_CHAR_MECA(MODELE=MODEL,
                   DDL_IMPO=_F(GROUP_NO='BORDS',
                    DX=0.,  DY=0. , DZ=0.,
                    DRX=0., DRY=0., DRZ=0.,))

#---------------------------------------------------------------------
#                     RESOLUTION
#---------------------------------------------------------------------

M_EL_RIG=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                        MODELE=MODEL,
                        CHAM_MATER=MAT,
                        CARA_ELEM=CARA_ELE,
                        CHARGE=CHAR,
                        );

M_EL_MAS=CALC_MATR_ELEM(OPTION='MASS_MECA',
                        MODELE=MODEL,
                        CHAM_MATER=MAT,
                        CARA_ELEM=CARA_ELE,
                        CHARGE=CHAR,
                        );

NU=NUME_DDL(MATR_RIGI=M_EL_RIG,);

M_AS_RIG=ASSE_MATRICE(MATR_ELEM=M_EL_RIG,
                      NUME_DDL=NU,);

M_AS_MAS=ASSE_MATRICE(MATR_ELEM=M_EL_MAS,
                      NUME_DDL=NU,);
#
#nombre de frequences
nb_modes = 8

MODES=CALC_MODES(MATR_RIGI=M_AS_RIG,
                 VERI_MODE=_F(STOP_ERREUR='NON',
                              ),
                 OPTION='PLUS_PETITE',
                 CALC_FREQ=_F(NMAX_FREQ=nb_modes,
                              ),
                 MATR_MASS=M_AS_MAS,
                 SOLVEUR_MODAL=_F(METHODE='SORENSEN',
                                  ),
                 )

#on effectue une expansion des modes identifies

PROJ=PROJ_MESU_MODAL(MODELE_CALCUL=_F(MODELE=MODEL,
                                      BASE=MODES,),
                     MODELE_MESURE=_F(MODELE=MODEXP,
                                      MESURE=MODMES,
                                      NOM_CHAM='DEPL',),
                     );


MODET=REST_GENE_PHYS(RESU_GENE=PROJ,
                   TOUT_ORDRE='OUI',
                   NOM_CHAM   ='DEPL');

IMPR_RESU(FORMAT='IDEAS',UNITE=38,
          RESU=_F(RESULTAT =MODET,));

# les termes extra-diagonaux des matrices generalisees nuls
nextra = int(nb_modes*(nb_modes-1)/2)
l_zero = []
for i in range(nextra):
    l_zero.append(0.0)

EXTRA=CREA_TABLE(LISTE=(_F(PARA='ORDRE',LISTE_I=range(nextra),),
                          _F(PARA='EXTRA',LISTE_R=l_zero,),
                       ),);

extra = EXTRA.EXTR_TABLE().Array('ORDRE','EXTRA')

TFREQ=RECU_TABLE(CO=MODMES,
                    NOM_PARA='FREQ');

freq = TFREQ.EXTR_TABLE().Array('NUME_ORDRE','FREQ')



parametres =[['EP__',0.15,0.1,1.0],['MP__',3.0E4,2.E4,7.E4]]

calcul = [ ['TF','NUME_ORDRE','FREQ'],
           ['TEXTRA_K','ORDRE','EXTRA'],
           ['TEXTRA_M','ORDRE','EXTRA'],
         ]

experience= [ NP.array(freq),
              NP.array(extra),
              NP.array(extra),
            ]

poids =NP.array([nextra*1., 1.0,1.0,])

#mode de lancement : INCLUSION (car mode etendu dans fort.38)
#on garde les memes noms de concept dans le fichier esclave
DETRUIRE(CONCEPT=_F(NOM=(MAIL1,MAIL2,MODEL,CARA_ELE,ACIER2,MAT,CHAR,M_EL_RIG,M_EL_MAS,NU,M_AS_RIG,M_AS_MAS,MODET),),)


RESU=MACR_RECAL(
         UNITE_ESCL       = 3,
         RESU_EXP         = experience,
         LIST_PARA        = parametres,
         RESU_CALC        = calcul,
         LIST_POIDS       = poids,
         UNITE_RESU       = 91,
         PARA_DIFF_FINI   = 1.e-3,
         CALCUL_ESCLAVE=_F(
               LANCEMENT  = 'INCLUSION',
                           ),
     )


# On cree une liste bidon pour pouvoir
# definir une fonction testable par TEST_RESU
BIDON=DEFI_LIST_REEL(DEBUT=1.,
                     INTERVALLE=_F(JUSQU_A = 2., NOMBRE=1));

OPTIM=DEFI_FONCTION(NOM_PARA='INST',
                    VALE_PARA=BIDON,
                    VALE_FONC=RESU);


TEST_FONCTION(VALEUR=(_F(VALE_CALC=0.503058789631,
                         VALE_REFE=0.5,
                         VALE_PARA=1.0,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=1.E-2,
                         FONCTION=OPTIM,),
                      _F(VALE_CALC=48223.4026415,
                         VALE_REFE=50000.,
                         VALE_PARA=2.0,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=4.E-2,
                         FONCTION=OPTIM,),
                      ),
              )

FIN();
