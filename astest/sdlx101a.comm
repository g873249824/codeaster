# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),);

MAIL=LIRE_MAILLAGE(FORMAT='MED',);

INCLUDE(UNITE=11,);

INCLUDE(UNITE=12,);

INCLUDE(UNITE=13,);

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_NO=_F(GROUP_MA=('SRADIER'),),);

CH_CLDYN=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=_F(GROUP_NO=('SRADIER'),
                                    DX=0.0,
                                    DY=0.0,
                                    DZ=0.0,
                                    DRX=0.0,
                                    DRY=0.0,
                                    DRZ=0.0,),);

RIGIELEM=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                        MODELE=MODELE,
                        CHARGE=CH_CLDYN,
                        CHAM_MATER=MATER,
                        CARA_ELEM = ELEM);

MASELEM=CALC_MATR_ELEM(OPTION='MASS_MECA',
                       MODELE=MODELE,
                       CHARGE=CH_CLDYN,
                        CHAM_MATER=MATER,
                       CARA_ELEM = ELEM);

NUM_DYN=NUME_DDL(MATR_RIGI=RIGIELEM,);

MATMASS=ASSE_MATRICE(MATR_ELEM=MASELEM,
                     NUME_DDL=NUM_DYN,);

MATRIGI=ASSE_MATRICE(MATR_ELEM=RIGIELEM,
                     NUME_DDL=NUM_DYN,);


#
#-----------------------------------------
#      calcul des masses
#-----------------------------------------
#
#
#
# MASSES = POST_ELEM (
#                        MODELE     = MODELE,
#                        INFO       = 1,
#                        CHAM_MATER = MATER,
#                        CARA_ELEM  = ELEM,
#                        MASS_INER  = _F(TOUT ='OUI',),
#                      ) ;
#
#
# ----------------------------------------------------------
# calcul des modes propres par bandes successives
# ----------------------------------------------------------
#
#
#
MOD_DYN=CALC_MODES(MATR_RIGI=MATRIGI,
                   VERI_MODE=_F(STURM='LOCAL',
                                ),
                   OPTION='BANDE',
                   CALC_FREQ=_F(FREQ=(0.1,4.,5.,6.,7.,8.,9.,10.,11.,12.,),
                                ),
                   MATR_MASS=MATMASS,
                   FILTRE_MODE=_F(CRIT_EXTR='MASS_EFFE_UN',
                                  SEUIL=1.E-3,),
                   NORM_MODE=_F(INFO=1,
                                NORME='TRAN_ROTA',),
                   )


CH_CLSTA=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=_F(GROUP_NO=('PO'),
                                    DX=0.0,
                                    DY=0.0,
                                    DZ=0.0,
                                    DRX=0.0,
                                    DRY=0.0,
                                    DRZ=0.0,),
                        LIAISON_SOLIDE=_F(GROUP_NO=('SRADIER'),),);

STARIELE=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                        MODELE=MODELE,
                        CHARGE=CH_CLSTA,
                        CHAM_MATER=MATER,
                        CARA_ELEM = ELEM);

STAMAELE=CALC_MATR_ELEM(OPTION='MASS_MECA',
                        MODELE=MODELE,
                        CHARGE=CH_CLSTA,
                        CHAM_MATER=MATER,
                        CARA_ELEM = ELEM);

NUM_STA=NUME_DDL(MATR_RIGI=STARIELE,);

MASSETAT=ASSE_MATRICE(MATR_ELEM=STAMAELE,
                      NUME_DDL=NUM_STA,);

RIGISTAT=ASSE_MATRICE(MATR_ELEM=STARIELE,
                      NUME_DDL=NUM_STA,);

MOD_STA=MODE_STATIQUE(MATR_RIGI=RIGISTAT,
                      MATR_MASS=MASSETAT,
                      MODE_STAT=_F(GROUP_NO='PO',
                                  TOUT_CMP='OUI',),);

BASMO=DEFI_BASE_MODALE(RITZ=(_F(MODE_MECA=MOD_DYN,),
                             _F(NMAX_MODE=6,
                                MODE_INTF=MOD_STA,),),
                       NUME_REF=NUM_DYN,);

#-----------------------------
#
#    DEFI_FONCTION : UL 31
#    ACCELEROGRAMME : ACC1.C2
#
#-----------------------------
#
#    DEFI_FONCTION : UL 32
#    ACCELEROGRAMME : ACC2.C2
#
#-----------------------------
#
#    DEFI_FONCTION : UL 33
#    ACCELEROGRAMME : ACC3.C2
#
#
listinst = DEFI_LIST_REEL(DEBUT=0.0,
             INTERVALLE=_F(JUSQU_A=20.47, PAS=0.01),
                          );

INCLUDE(UNITE=31,);
#
#


ACCE_X=CALC_FONCTION(COMB=_F(FONCTION=ACCE1,
                             COEF=9.8100000000000005,),
                     LIST_PARA=listinst);
#
#
#


INCLUDE(UNITE=32,);
#
#


ACCE_Y=CALC_FONCTION(COMB=_F(FONCTION=ACCE2,
                             COEF=9.8100000000000005,),
                     LIST_PARA=listinst);
#
#
#


INCLUDE(UNITE=33,);
#
#


ACCE_Z=CALC_FONCTION(COMB=_F(FONCTION=ACCE3,
                             COEF=6.54,),
                     LIST_PARA=listinst);


FIN()
