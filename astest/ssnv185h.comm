# TITRE FISSURE DEBOUCHANTE DANS UNE PLAQUE 3D DE LARGEUR FINIE AVEC XFEM
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='SSNV185H',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'))

# MODELISATION H : X-FEM INCLINEE - TRACTION (FACE SUP)

#---------------------------------------------------------
#                   PARAMETRES
#---------------------------------------------------------

#*********************************************************
#                    GEOMETRIE
#                    *********
#     Parametres a modifier avec le maillage
#*********************************************************
#
# EPAISSEUR DE L EPROUVETTE SELON X
B = 1. ;
#
# DEMI-LONGUEUR DE L EPROUVETTE SELON Y
W = 5. ;
#
# DEMI-LONGUEUR DE L EPROUVETTE SELON Z
L = 15. ;
#
# NOMBRE D ELEMENTS SELON X
NX = 5. ;
#
# NOMBRE D ELEMENTS SELON Z
NZ = 51. ;
#
#*********************************************************

# LONGUEUR DE LA FISSURE
A = 2.5 ;

# ANGLE D INCLINAISON DE LA FISSURE
ALPHA = 45.*pi/180. ;

# COURONNES POUR LE CALCUL DES SIF
# entre 0 et 1, ensuite ramene entre 0 et A*cos(ALPHA)
RI = [ 0.1 , 0.2  , 0.4  , 0.1 , 0.3 , 0.4 ]
RS = [ 1.  , 1.   , 1.  ,  0.7 , 0.7 , 0.8 ]

# PROPRIETES DE L ACIER UTILISE
E   = 1.E6;
nu  = 0.;
rho = 7800.0;

# PRESSION APPLIQUEE SUR LES FACES INFERIEURE ET SUPERIEURE
PRES=-1.E6

#---------------------------------------------------------
#       MAILLAGE : pave maille regulierement en HEXA
#                 ( nombre impair delements selon z )
#---------------------------------------------------------

MAILLAG1=LIRE_MAILLAGE(FORMAT='MED',INFO=1);

LARX = B/NX;
LARZ = 2*L/NZ;
PRECIS = 1.E-6;
VX     = [    1.  ,   0. ,     0.     ]
VY     = [    0.  ,   1. ,     0.     ]
VZ     = [    0.  ,   0. ,     1.     ]
PT0    = [    0.  ,   0.  ,    0.     ]
PT1    = [    0.  , 2.*W  , L-LARZ/2. ]
PT1S   = [    0.  , 2.*W  , L+LARZ/2. ]
PT2    = [    B   , 2.*W  , L-LARZ/2. ]
PT2S   = [    B   , 2.*W  , L+LARZ/2. ]

MAILLAG1=DEFI_GROUP( reuse =MAILLAG1,
                     MAILLAGE=MAILLAG1,
                     CREA_GROUP_NO=( _F(NOM='NOEUD1',
                                        OPTION='ENV_SPHERE',
                                        POINT=PT1,
                                        PRECISION=PRECIS,
                                        RAYON=PRECIS),
                                     _F(NOM='NOEUD1S',
                                        OPTION='ENV_SPHERE',
                                        POINT=PT1S,
                                        PRECISION=PRECIS,
                                        RAYON=PRECIS),
                                     _F(NOM='NOEUD2',
                                        OPTION='ENV_SPHERE',
                                        POINT=PT2,
                                        PRECISION=PRECIS,
                                        RAYON=PRECIS),
                                     _F(NOM='NOEUD2S',
                                        OPTION='ENV_SPHERE',
                                        POINT=PT2S,
                                        PRECISION=PRECIS,
                                        RAYON=PRECIS),
                                     _F(NOM='SURFGAU',
                                        OPTION='PLAN',
                                        POINT=PT0,
                                        VECT_NORMALE=VY,
                                        PRECISION=PRECIS),
                                    ),
                      INFO=1);

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO=_F(GROUP_MA='VOL'));

#---------------------------------------------------------
#                   MODELE ET FISSURE
#---------------------------------------------------------

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAG1,
                     AFFE=(_F(GROUP_MA=('VOL'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D'),
                           _F(GROUP_MA=('SURFINF','SURFSUP'),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D')));

MAILLAG1=MODI_MAILLAGE(reuse =MAILLAG1,
                       MAILLAGE=MAILLAG1,
                       ORIE_PEAU_3D=_F(GROUP_MA=('SURFSUP','SURFINF')),
                       );

LN=FORMULE(NOM_PARA=('X','Y','Z'),
           VALE='(Z-L)*cos(ALPHA)-Y*sin(ALPHA)');
LT=FORMULE(NOM_PARA=('X','Y','Z'),
           VALE='(Z-L-A*sin(ALPHA))*sin(ALPHA)+(Y-A*cos(ALPHA))*cos(ALPHA)');

XFONI = 0. ;
YFONI = A*cos(ALPHA) ;
ZFONI = L+A*sin(ALPHA) ;
XORI = 0. ;
YORI = 0. ;
ZORI = 0. ;
XVECT = 0. ;
YVECT = sin(ALPHA) ;
ZVECT = -cos(ALPHA) ;

FISS=DEFI_FISS_XFEM(MODELE=MODELEIN,
                    DEFI_FISS=_F(FONC_LT=LT,FONC_LN=LN),
                    INFO=1,
                    );

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,FISSURE=FISS,INFO=1);


#---------------------------------------------------------
#                   MATERIAU
#---------------------------------------------------------

ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,RHO=rho));

CHAMPMA1=AFFE_MATERIAU(MAILLAGE=MAILLAG1,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER),
                             );

#---------------------------------------------------------
#                   CHARGEMENTS
#---------------------------------------------------------

CHRIG1=AFFE_CHAR_MECA(MODELE=MODELEK,
                      LIAISON_DDL=(_F(GROUP_NO=( 'NOEUD1' , 'NOEUD1S'),DDL=('DX' ,'DX'),COEF_MULT=(1.0,1.0), COEF_IMPO=0.0),
                                   _F(GROUP_NO=( 'NOEUD1' , 'NOEUD1S'),DDL=('DZ' ,'DZ'),COEF_MULT=(1.0,1.0), COEF_IMPO=0.0),
                                   _F(GROUP_NO=( 'NOEUD2' , 'NOEUD2S'),DDL=('DZ' ,'DZ'),COEF_MULT=(1.0,1.0), COEF_IMPO=0.0),
                                   ));

CHRIG2=AFFE_CHAR_MECA(MODELE=MODELEK,
                         DDL_IMPO=( _F(GROUP_NO='SURFGAU', DY=0.0),
                                  ));


CHPRES=AFFE_CHAR_MECA(MODELE=MODELEK,
                      PRES_REP=_F(GROUP_MA=('SURFSUP','SURFINF'),PRES=PRES));

#---------------------------------------------------------
#                   RESOLUTION
#---------------------------------------------------------

UTOT1=MECA_STATIQUE(MODELE=MODELEK,
                   CHAM_MATER=CHAMPMA1,
                   EXCIT=(
                          _F(CHARGE=CHRIG1),
                          _F(CHARGE=CHRIG2),
                          _F(CHARGE=CHPRES),
                          ),
                   SOLVEUR=_F(   
                            METHODE='MUMPS',
                            PRETRAITEMENTS='SANS'),
                   INFO=1,
                   ); 
#------------------------------------------------------------------------
# POST-TRAITEMENT : CALCUL DES SIFS PAR LA METHODE ENERGETIQUE AVEC X-FEM
#------------------------------------------------------------------------

nbc=len(RI)

SIF = [None]*(nbc+1)

for i in range(0,nbc) :

   RI[i]=RI[i]*A*cos(ALPHA)
   RS[i]=RS[i]*A*cos(ALPHA)

   SIF[i]=CALC_G(RESULTAT=UTOT1,
                 OPTION='CALC_K_G',
                 THETA=_F(FISSURE=FISS,
                          R_INF=RI[i],
                          R_SUP=RS[i]),
                 LISSAGE=_F(LISSAGE_THETA='LAGRANGE',
                            LISSAGE_G='LAGRANGE'),
                 INFO=2);

   IMPR_TABLE(TABLE=SIF[i]);

# SOLUTION ANALYTIQUE (Fracture Mechanics T.L. ANDERS0N p.63,91)

K1_K2 = cos(ALPHA)/sin(ALPHA);
BETAREF = 2*atan(0.25*(K1_K2-sqrt((K1_K2)**2.+8.))) ;

VAL_CALC = [ -0.98243589435200  ,
             -0.98309398477105  ,
             -0.98229138333901  ,
             -0.98295036174383  ,
             -0.98191923043652  ,
             -0.98258241935367  ,
             -0.98241862588096  ,
             -0.98307737592484  ,
             -0.98135155770161  ,
             -0.98202228723184  ,
             -0.98167822080998  ,
             -0.98234275397188  ]
             
for i in range(0,nbc) :
   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='BETA',
              TYPE_TEST='MAX',
              VALE_CALC=VAL_CALC[2*i+0], VALE_REFE=BETAREF,
              CRITERE='RELATIF',
              PRECISION=0.061,    
              REFERENCE='ANALYTIQUE');

   TEST_TABLE(TABLE=SIF[i],
              NOM_PARA='BETA',
              TYPE_TEST='MIN',
              VALE_CALC=VAL_CALC[2*i+1], VALE_REFE=BETAREF,
              CRITERE='RELATIF',
              PRECISION=0.061,    
              REFERENCE='ANALYTIQUE');


# -------------------------------------------------------------
#            POST-TRAITEMENT POUR LA VISUALISATION X-FEM
# -------------------------------------------------------------

MA_XFEM=POST_MAIL_XFEM(
                       MODELE        = MODELEK,
                       INFO          = 2)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D'))

RES_XFEM=POST_CHAM_XFEM(MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT1,
                        
                        INFO          = 2)

#IMPR_RESU(FORMAT='GMSH',UNITE=81,RESU=_F(RESULTAT=RES_XFEM));



FIN();
