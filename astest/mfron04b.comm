# -*- coding: utf-8 -*-
# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================


import os


# PAR_LOT='NON' a cause dela procedure qui calcule les repÃ¨res locaux
# on pourrait en faire une macro

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),PAR_LOT='NON');

MAIL=LIRE_MAILLAGE(UNITE=20,
                   FORMAT='MED',);

MAIL=MODI_MAILLAGE(reuse =MAIL,
                   MAILLAGE=MAIL,
                   ORIE_PEAU_3D=_F(GROUP_MA=('FACE_INT','FACE_SUP',),),);

# PARTIES THERMIQUE ET METALLURGIQUE
# TEMPERATURE DE 700 DEGRES PARTOUT DANS LE TUBE
# ET CONSTANTE AU COURS DU TEMPS
# A CETTE TEMPERATURE PAS DE TRANSFORMATION

ZIRCALOY=DEFI_MATERIAU(THER=_F(RHO_CP = 2000000.0, LAMBDA = 9999.9),
                        META_ZIRC=_F(
                                  TDEQ = 809.,   K = 1.135E-2,   N = 2.187,
                                  T1C = 831. , T2C=0.,
                                  QSR_K = 14614.,AC = 1.58E-4,  M = 4.7,
                                  T1R=949.1, T2R=0.,AR = -5.725,  BR = 0.05))

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(TOUT = 'OUI',MATER = ZIRCALOY))

MOTH=AFFE_MODELE(MAILLAGE=MAIL,
                 AFFE=_F(TOUT = 'OUI',
                         MODELISATION = '3D',
                         PHENOMENE = 'THERMIQUE'))

TFONC=DEFI_FONCTION(NOM_PARA='INST',
                    NOM_RESU='TEMP',
                    VALE=( 0. ,    700.0,
                           100.,   700.,),
                    PROL_GAUCHE='CONSTANT',
                    PROL_DROITE='CONSTANT',)

TIMPO=CREA_CHAMP(OPERATION='AFFE',
                 TYPE_CHAM='NOEU_TEMP_F',
                 MAILLAGE=MAIL,
                 AFFE=_F(TOUT = 'OUI',
                         NOM_CMP = 'TEMP',
                         VALE_F = TFONC))

L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=(
                      _F(JUSQU_A=1.1,NOMBRE = 10),
                      _F(JUSQU_A=100.,NOMBRE = 10),),)

PHASINIT=CREA_CHAMP(OPERATION='AFFE',
                    TYPE_CHAM='CART_VAR2_R',
                    MAILLAGE=MAIL,
                    AFFE=_F(TOUT = 'OUI',
                            NOM_CMP = ('V1', 'V2', 'V3','V4'),
                            VALE = ( 1.0, 0.0, 20.,0.)))

TEMPE=CREA_RESU(OPERATION='AFFE',
                TYPE_RESU='EVOL_THER',
                NOM_CHAM='TEMP',
                AFFE=_F(CHAM_GD = TIMPO,
                        LIST_INST = L_INST))

TEMPE=CALC_META(reuse=TEMPE,
                MODELE=MOTH,
                CHAM_MATER=CHMAT,
                RESULTAT=TEMPE,
                ETAT_INIT=_F( META_INIT_ELNO = PHASINIT),
                COMPORTEMENT=_F(RELATION = 'ZIRC',
                             TOUT = 'OUI'),
                OPTION='META_ELNO',);

# cf. hsnv134b

MATF=DEFI_MATERIAU( 
                  ELAS_META=_F(E = 80000.,
                               NU = 0.35,
                               F_ALPHA = 0.,
                               C_ALPHA = 0.,
                               PHASE_REFE = 'FROID',
                               EPSF_EPSC_TREF = 0.,),
                               
                  META_LEMA_ANI=_F(
                            F1_A=2.39,    F2_A=0.22,     C_A=9.36,
                            F1_M=0.0,    F2_M=0.77E-04, C_M=0.99E-04,
                            F1_N=4.39,    F2_N=2.96,     C_N=6.11,
                            F1_Q=19922.8, F2_Q=21023.7,  C_Q=6219.,
                            F_MRR_RR=1,             C_MRR_RR=1.,
                            F_MTT_TT=1,              C_MTT_TT=1.,
                            F_MZZ_ZZ=1.,                 C_MZZ_ZZ=1.,
                            F_MRT_RT=0.75,               C_MRT_RT=0.75,
                            F_MRZ_RZ=0.75,               C_MRZ_RZ=0.75,
                            F_MTZ_TZ=0.75,               C_MTZ_TZ=0.75,),
                            
                  AnisoLemaitre=_F( 
                           YoungModulus  =80000.,    
                           PoissonRatio  =0.35, 
                           a_0  =2.39,       ## F1_A  
                           a_1  =0.22,       ## F2_A   
                           a_2  =9.36,       ## C_A
                           m_0  =0.0,        ## F1_M
                           m_1  =0.77E-04,   ## F2_M
                           m_2  =0.99E-04,   ## C_M
                           pn_0 =4.39,       ## F1_N
                           pn_1 =2.96,       ## F2_N
                           pn_2 =6.11,       ## C_N
                           Q_0 =19922.8,     ## F1_Q
                           Q_1 =21023.7,     ## F2_Q,  
                           Q_2 =6219.,       ## C_Q
                           M1_0 =0.4414,     ## F_M11          
                           M1_1 =0.714,      ## F_M22     
                           M1_2 =1.,         ## F_M33  
                           M1_3 =0.75,       ## F_M12
                           M1_4 =0.75,       ## F_M13
                           M1_5 =0.75,       ## F_M23        
                           M3_0 =1.,         ## C_M11
                           M3_1 =1.,         ## C_M22
                           M3_2 =1.,         ## C_M33
                           M3_3 =0.75,       ## C_M12    
                           M3_4 =0.75,       ## C_M13  
                           M3_5 =0.75,       ## C_M23
                            ),)

                            
CMF=AFFE_MATERIAU(MAILLAGE=MAIL,
                  AFFE=_F( TOUT = 'OUI', MATER = MATF ),
                  AFFE_VARC=(_F(TOUT='OUI',
                                EVOL=TEMPE,
                                NOM_VARC='M_ZIRC',
                                NOM_CHAM='META_ELNO'),
                             _F(TOUT='OUI',
                                EVOL=TEMPE,
                                VALE_REF=700.,
                                NOM_VARC='TEMP',
                                NOM_CHAM='TEMP'),))
                            
MO=AFFE_MODELE(MAILLAGE=MAIL,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE ='MECANIQUE',
                       MODELISATION ='3D'))

CH_L=AFFE_CHAR_MECA(MODELE=MO,
                    FACE_IMPO=(_F(GROUP_MA='FACE_INF',DNOR=0.,),
                               _F(GROUP_MA='FACE_X0',DNOR=0.,),
                               _F(GROUP_MA='FACE_Y0',DNOR=0.,),),
                    #LIAISON_UNIF=_F(GROUP_MA='FACE_SUP',DDL='DZ',),
                    );

# ON MET UNE PRESSION INTERNE ET L EFFET DE FOND
RINT = 4.118;
REXT = 4.746;
COEF = ((RINT * RINT) / ((REXT * REXT) - (RINT * RINT)));

CHPC=AFFE_CHAR_MECA(MODELE=MO,
                    PRES_REP=(_F(GROUP_MA='FACE_INT',PRES=1.,),
                              _F(GROUP_MA='FACE_SUP',PRES=-COEF,),),);

FMULT=DEFI_FONCTION(NOM_PARA='INST',
                    VALE=(0.0,0.0,
                          1.1,7.5,
                          100.0,9.5,),
                    PROL_DROITE='CONSTANT',
                    PROL_GAUCHE='CONSTANT',);




import numpy as NP

def provec(x,y):
   z=NP.zeros(3)
   z[0]=x[1]*y[2]-x[2]*y[1]
   z[1]=x[2]*y[0]-x[0]*y[2]
   z[2]=x[0]*y[1]-x[1]*y[0]
   return z

def norm(x):
   tmp = NP.sqrt(NP.dot(x,x))
   return tmp

def ProjAxe(point, centre, axe):
    # Calcul de la projection M de P sur l'axe de vecteur u=VectAxe passant par A=OrigAxe
    # Pour tout point M de l axe
    # on pose :  AM = k .  u donc
    # xm=k.dx+xa ; ym=k.dy+ya ; zm=k.dz+za
    # la distance MP**2 = (xm-xp)**2+(ym-yp)**2+(zm-zp)**2= a.k**2+b.k+c 
    # MP**2 est minimum si M est la projection de P sur l axe, donc
    #  en -b/2a, pour k = kmin
    #              dx(xp-xa)+dy(yp-ya)+dz(zp-za)      u.AP
    # kmin = ------------------------------------- = ------
    #                       dx**2+dy**2+dz**2         u.u
    # ensuite on a un vecteur MP (axe 1 du repere local), et u (axe 3)
    # on calcule v = u ^ MP => repere local : MP, v u
    OrigAxe=NP.array(centre)
    VectAxe=NP.array(axe)
    P=NP.array(point)
    norm2=NP.dot(VectAxe,VectAxe)
    AP=NP.array(P)-NP.array(OrigAxe)
    kmin = NP.dot(VectAxe,AP) / norm2
    M= kmin * VectAxe + OrigAxe
    MP = P - M
    v = provec(VectAxe,MP)
    repere=NP.zeros((3,3))
    repere[0]=MP/norm(MP)
    repere[1]=v/norm(v)
    repere[2]=VectAxe/norm(VectAxe)
    return M, repere


def ANGLENAUT(repere):

    #   Calcule les angles nautiques correspondant
    #   au 3 axes de repere

   import copy
   
   # expression des coordonnees globales des 3 vecteurs de base locale
   x=NP.array([1.,0.,0.])
   y=NP.array([0.,1.,0.])
   z=NP.array([0.,0.,1.])

   xg=repere[0]
   yg=repere[1]
   zg=repere[2]

   # calcul des angles nautiques
   x1=copy.copy(xg)
   # x1 projection de xg sur la plan xy, non norme
   x1[2]=0.
   # produit scalaire X xg
   COSA=x1[0]/norm(x1)
   #produit vectoriel X xg
   SINA=x1[1]/norm(x1)
   ar=NP.arctan2(SINA,COSA)
   alpha=ar*180.0/NP.pi

   COSB=norm(x1)
   SINB=-xg[2]
   beta=NP.arctan2(SINB,COSB)*180.0/NP.pi

   P2=NP.zeros((3,3))
   P2[0,0]=NP.cos(ar)
   P2[1,0]=NP.sin(ar)
   P2[1,1]=NP.cos(ar)
   P2[0,1]=-NP.sin(ar)
   y1=NP.dot(P2,y)
   y1n=y1/norm(y1)

   # calcul de gamma
   COSG=NP.dot(y1n,yg)
   SING=NP.dot(xg,provec(y1n,yg))
   gamma=NP.arctan2(SING,COSG)*180.0/NP.pi

   PGL=NP.zeros((3,3))
   PGL[0,0] = COSB*COSA
   PGL[1,0] = SING*SINB*COSA - COSG*SINA
   PGL[2,0] = SING*SINA + COSG*SINB*COSA
   PGL[0,1] = COSB*SINA
   PGL[1,1] = COSG*COSA + SING*SINB*SINA
   PGL[2,1] = COSG*SINB*SINA - COSA*SING
   PGL[0,2] = -SINB
   PGL[1,2] = SING*COSB
   PGL[2,2] = COSG*COSB
   pgl=NP.transpose(PGL)
   #print 'Matrice P (Nautiques)= \n ',pgl
   #print ' '
   xgl=NP.dot(pgl,x)
   ygl=NP.dot(pgl,y)
   zgl=NP.dot(pgl,z)

   return alpha,beta,gamma

# test
#OrigAxe=NP.array([0,0,0])
#VectAxe=NP.array([0,-1,1])
#P=NP.array([0,10,10])
#M, repere = ProjAxe(P, OrigAxe, VectAxe)
#print "Point projete=", M
#print "repere local=",repere
#alpha,beta,gamma = ANGLENAUT(repere)
#print "alpha,beta,gamma=",alpha,beta,gamma



def ANGLE_CYL(GROUP_MA,MAILLAGE,CENTRE,AXE,LISTE_CARA,**args):
  """
     Produit une liste de commandes pour orienter les Ã©lÃ©ments par AFFE_CARA_ELEM/MASSIF
  """
  import numpy as NP
  import copy
  # On recupere la connectivite, les noms des mailles,
  # les coordonnees et le groupes de mailles GROUP_MA
  coordo=MAILLAGE.sdj.COORDO.VALE.get()
  connex=MAILLAGE.sdj.CONNEX.get()
  nommai=MAILLAGE.sdj.NOMMAI.get()
  groupma=MAILLAGE.sdj.GROUPEMA.get()[GROUP_MA.ljust(24)]
  # On met en forme les coordonnees : matrice 3 colonnes
  coordo=NP.reshape(coordo,[len(coordo)/3,3])
  # On recupere chacune des coordonnees
  X=coordo[:,0]
  Y=coordo[:,1]
  Z=coordo[:,2]
  # On boucle sur les mailles du groupe de mailles GROUP_MA
  vec=NP.zeros(3)
  vex=NP.array([1.,0,0])
  for ima in groupma:
      lnoeud=connex[ima]
      # ATTENTION : dans Python, les tableaux commencent a 0
      # mais dans la connectivite, les noeuds commencent a 1!
      un=NP.ones(len(lnoeud),dtype='int')
      lnoeud=lnoeud-un
      xg=NP.mean(X[lnoeud])
      yg=NP.mean(Y[lnoeud])
      zg=NP.mean(Z[lnoeud])
      
      P=NP.array([xg,yg,zg])
      M, repere = ProjAxe(P, CENTRE, AXE)

      #print "Point projete=", M
      #print "repere local=",repere
      
      alpha,beta,gamma = ANGLENAUT(repere)

      # Meme remarque que precedemment sur les listes Python
      nom_maille=nommai[ima-1]
      mon_dico={}
      mon_dico["MAILLE"]=nom_maille
      mon_dico["ANGL_REP"]=(alpha,beta,gamma)

      LISTE_CARA.append(mon_dico)

  return LISTE_CARA
  
DEFI_GROUP(reuse =MAIL,MAILLAGE=MAIL,CREA_GROUP_MA=_F(NOM='MATIERE', TOUT='OUI', TYPE_MAILLE='3D',));

LISTE_ANGLES=[]
LISTE_CARA=[]

Centre=(34.746,0.,4.746)

Axe=(1.,0.,0.)

LISTE_ANGLES = ANGLE_CYL(GROUP_MA='MATIERE',MAILLAGE=MAIL,CENTRE=Centre,AXE=Axe,LISTE_CARA=LISTE_CARA)

ORIEN=AFFE_CARA_ELEM(MODELE=MO,MASSIF=LISTE_ANGLES)

DEFI_FICHIER(UNITE=81, FICHIER='REPE_OUT/caraelem.med')
IMPR_RESU(CONCEPT=_F(CARA_ELEM=ORIEN),FORMAT='MED',UNITE=81)
DEFI_FICHIER(UNITE=81, ACTION='LIBERER')

UMF=STAT_NON_LINE(MODELE=MO, CARA_ELEM=ORIEN,
                CHAM_MATER=CMF,
                EXCIT=(_F(CHARGE = CHPC,FONC_MULT = FMULT),
                       _F(CHARGE = CH_L),),
                       
                COMPORTEMENT=_F(RELATION='AnisoLemaitre',
                         RESI_INTE_RELA=1e-10,
                        ),
                             
               INCREMENT=_F(LIST_INST = L_INST,),
               NEWTON=_F(MATRICE = 'TANGENTE',
                         REAC_ITER = 1),
               CONVERGENCE=_F(RESI_GLOB_RELA = 1.E-6,
                              ITER_GLOB_MAXI = 30))


VFP=CALC_CHAMP( RESULTAT=UMF,  DEFORMATION='EPSI_NOEU',CONTRAINTE='SIGM_NOEU');


VFP_C=MODI_REPERE(RESULTAT=VFP,
                INST=100.,
                MODI_CHAM=(_F(
                              TYPE_CHAM='TENS_3D',
                              NOM_CHAM='SIGM_NOEU',
                              NOM_CMP=('SIXX','SIYY','SIZZ','SIXY','SIXZ','SIYZ',),),
                           _F(
                              TYPE_CHAM='TENS_3D',
                              NOM_CHAM='EPSI_NOEU',
                              NOM_CMP=('EPXX','EPYY','EPZZ','EPXY','EPXZ','EPYZ',),),),
                REPERE='CYLINDRIQUE',
                AFFE=_F( ORIGINE=Centre,
                        AXE_Z=Axe,
                        GROUP_NO=('NA','NB'),),
                        );

# NA (CE NOEUD SE SITUE A L INTERIEUR DU TUBE EN Y=0)
# TEST DES TROIS DEFORMATIONS ET DES TROIS CONTRAINTES
# COMPARAISON AVEC LA SOLUTION ZMAT

TEST_RESU(RESU=(_F(NUME_ORDRE=20,
                   GROUP_NO='NA',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='SIGM_NOEU',
                   NOM_CMP='SIXX',
                   VALE_CALC=-9.81117926114,
                   VALE_REFE=-9.4420000000000002,
                   CRITERE='ABSOLU',
                   PRECISION=0.5,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NA',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='SIGM_NOEU',
                   NOM_CMP='SIZZ',
                   VALE_CALC=60.2601670975,
                   VALE_REFE=60.225999999999999,
                   CRITERE='ABSOLU',
                   PRECISION=0.5,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NA',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='SIGM_NOEU',
                   NOM_CMP='SIYY',
                   VALE_CALC=26.6413287649,
                   VALE_REFE=26.795000000000002,
                   CRITERE='ABSOLU',
                   PRECISION=0.5,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NA',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='EPSI_NOEU',
                   NOM_CMP='EPXX',
                   VALE_CALC=-0.010046136802,
                   VALE_REFE=-9.4959699999999994E-3,
                   CRITERE='ABSOLU',
                   PRECISION=7.E-4,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NA',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='EPSI_NOEU',
                   NOM_CMP='EPZZ',
                   VALE_CALC=0.0141663681521,
                   VALE_REFE=0.0135633,
                   CRITERE='ABSOLU',
                   PRECISION=7.E-4,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NA',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='EPSI_NOEU',
                   NOM_CMP='EPYY',
                   VALE_CALC=-0.00383114266282,
                   VALE_REFE=-3.7769000000000001E-3,
                   CRITERE='ABSOLU',
                   PRECISION=1.E-4,),
                ),
          )

# NB (CE NOEUD SE SITUE A L EXTERIEUR DU TUBE EN Y=0)
# TEST DES TROIS DEFORMATIONS ET DES TROIS CONTRAINTES
# COMPARAISON AVEC LA SOLUTION ZMAT

TEST_RESU(RESU=(_F(NUME_ORDRE=20,
                   GROUP_NO='NB',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='SIGM_NOEU',
                   NOM_CMP='SIXX',
                   VALE_CALC=-0.316252490237,
                   VALE_REFE=0.032821500000000003,
                   CRITERE='ABSOLU',
                   PRECISION=0.5,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NB',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='SIGM_NOEU',
                   NOM_CMP='SIZZ',
                   VALE_CALC=64.2810210801,
                   VALE_REFE=64.198999999999998,
                   CRITERE='ABSOLU',
                   PRECISION=0.5,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NB',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='SIGM_NOEU',
                   NOM_CMP='SIYY',
                   VALE_CALC=30.6137459576,
                   VALE_REFE=30.771000000000001,
                   CRITERE='ABSOLU',
                   PRECISION=0.5,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NB',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='EPSI_NOEU',
                   NOM_CMP='EPXX',
                   VALE_CALC=-0.00708292751297,
                   VALE_REFE=-6.5860900000000002E-3,
                   CRITERE='ABSOLU',
                   PRECISION=6.E-4,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NB',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='EPSI_NOEU',
                   NOM_CMP='EPZZ',
                   VALE_CALC=0.0112687289962,
                   VALE_REFE=0.0107189,
                   CRITERE='ABSOLU',
                   PRECISION=6.E-4,),
                _F(NUME_ORDRE=20,
                   GROUP_NO='NB',
                   REFERENCE='SOURCE_EXTERNE',
                   RESULTAT=VFP_C,
                   NOM_CHAM='EPSI_NOEU',
                   NOM_CMP='EPYY',
                   VALE_CALC=-0.00383113205364,
                   VALE_REFE=-3.7769000000000001E-3,
                   CRITERE='ABSOLU',
                   PRECISION=1.E-4,),
                ),
          )
          

         
         
FIN()
