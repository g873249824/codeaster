# TITRE BASCULE D'UN MODELE DE POUTRE A UN MODELE 3D EN DYNAMIQUE
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(
              NIV_PUB_WEB='INTERNET',
              VISU_EFICAS='OUI',),);


_OMEGA = 6.4;
Fx=-100;

#Choix de l'amortissement numerique pour le modeles de reference 1D, 3D et 1D-3D
alpha=0.25;

FSIN = FORMULE(VALE='sin((INST)*_OMEGA)',
               NOM_PARA='INST',);
Ti=0;
Tf=3.0;
Tb=2.0;

dt=0.0015;

Tb_1=Tb-dt;
Tb_2=Tb+dt;

ModRef=LIRE_MAILLAGE(UNITE=20,);

ModRef=DEFI_GROUP(reuse =ModRef,
                MAILLAGE=ModRef,
                CREA_GROUP_MA=_F(NOM='AllNode',
                                 TOUT='OUI',),
                CREA_GROUP_NO=_F(GROUP_MA='AllNode',),);


MOD3D=AFFE_MODELE(MAILLAGE=ModRef,
                   AFFE=(_F(GROUP_MA='AllNode',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D',),),);

MATER=DEFI_MATERIAU(ELAS=_F(E=2.E11,
                            NU=0.3,
                            RHO=7800.,),);

RefMAT=AFFE_MATERIAU(MAILLAGE=ModRef,
                    AFFE=_F(TOUT='OUI',
                            MATER=MATER,),);

Cond3D=AFFE_CHAR_MECA(MODELE=MOD3D,
                       DDL_IMPO=(_F(GROUP_NO=('A1','A2',),
                                   DX=0,
                                   DY=0,
                                   DZ=0,),
                                _F(GROUP_NO='BLC',
                                   DY=0,),
                                        ),);

ASSEMBLAGE(MODELE=MOD3D,
                CHAM_MATER=RefMAT,
                CHARGE=Cond3D,
                NUME_DDL=CO('NUME3D'),
                MATR_ASSE=(_F(MATRICE=CO('K3D'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('M3D'),
                              OPTION='MASS_MECA',),),);

Charg3D=AFFE_CHAR_MECA(MODELE=MOD3D,
                      FORCE_NODALE=_F(GROUP_NO='NFR',
                                      FX=Fx,),);

For3D=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                        CHARGE=Charg3D,);

F3Dass=ASSE_VECTEUR(VECT_ELEM=For3D,
                    NUME_DDL=NUME3D,);

LIST3D=DEFI_LIST_REEL(DEBUT=Ti,
                    INTERVALLE=(_F(JUSQU_A=Tb_1,
                                   PAS=10*dt,),
                                _F(JUSQU_A=Tb,
                                   PAS=dt,),
                                _F(JUSQU_A=Tb_2,
                                   PAS=dt,),
                                _F(JUSQU_A=Tf,
                                   PAS=10*dt,),
                                ),);

Ref3D=DYNA_LINE_TRAN(MODELE=MOD3D,
                   CHAM_MATER=RefMAT,
                   MATR_MASS=M3D,
                   MATR_RIGI=K3D,
                   SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',
                                  GAMMA=0.5+alpha,
                                  BETA=(1+alpha)**2/4,),
                   EXCIT=_F(VECT_ASSE=F3Dass,
                            FONC_MULT=FSIN,),
                   INCREMENT=_F(LIST_INST=LIST3D,),);

T3D=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                            INTITULE='NdR',
                            RESULTAT=Ref3D,
                            NOM_CHAM='DEPL',
                            GROUP_NO='NdR',
                            NOM_CMP=('DX'),),);

Ux3D=RECU_FONCTION(TABLE=T3D,
                  PARA_X='INST',
                  PARA_Y='DX',);

TEST_FONCTION(VALEUR=_F(VALE_CALC=-0.0003234620,
                        VALE_REFE=-0.000326636,
                        VALE_PARA=2.2115,
                        REFERENCE='AUTRE_ASTER',
                        PRECISION=7.E-2,
                        FONCTION=Ux3D,),
              )

TEST_FONCTION(VALEUR=_F(VALE_CALC=0.0003232088,
                        VALE_REFE=0.000326380,
                        REFERENCE='AUTRE_ASTER',
                        VALE_PARA=2.7065,
                        PRECISION=7.E-2,
                        FONCTION=Ux3D,
                        ),
              )

FIN();
