# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

from math import *

# Closed-form solution

T0   = 0.0
w    = 2.0
tmax = 1.0
Tmax = T0*exp(-w*tmax) + (1-exp(-w*tmax))/w

SOURCE = DEFI_FONCTION(       # s(T) = 2 - 2*w * T
  NOM_PARA    = 'TEMP',
  VALE        = (0,2, 1,2-2*w),
  PROL_DROITE = 'LINEAIRE',
  PROL_GAUCHE = 'LINEAIRE',
  )


# Usual data setting

LAMBDA = DEFI_CONSTANTE(VALE = 0)
RHO_CP = DEFI_CONSTANTE(VALE = 2)

FAKE_MAT = DEFI_MATERIAU(
  THER_NL = _F(LAMBDA=LAMBDA, RHO_CP=RHO_CP),
  )

MESH = LIRE_MAILLAGE(FORMAT = 'MED')

MAT_FLD = AFFE_MATERIAU(
  MAILLAGE = MESH,
  AFFE     = _F(GROUP_MA = 'BULK', MATER = FAKE_MAT),
  )

MODEL = AFFE_MODELE(
  MAILLAGE = MESH,
  AFFE     = _F(GROUP_MA='BULK',PHENOMENE='THERMIQUE',MODELISATION='3D'),
  )

# Non linear heating source

HEATING = AFFE_CHAR_THER_F(
  MODELE  = MODEL,
  SOUR_NL = _F(GROUP_MA='BULK', SOUR=SOURCE),
  )


# Initial temperature field

INI_TEMP = CREA_CHAMP(
  OPERATION ='AFFE',
  TYPE_CHAM ='NOEU_TEMP_R',
  MAILLAGE  = MESH,
  AFFE      =_F(TOUT='OUI', NOM_CMP='TEMP', VALE=T0),
  )


# Computation

TIME = DEFI_LIST_REEL(
  DEBUT      =  0.0,
  INTERVALLE = (
    _F(JUSQU_A = tmax, NOMBRE = 100),
    ),
  )

EVOL = THER_NON_LINE(
  MODELE      = MODEL,
  INCREMENT   = _F(LIST_INST = TIME),
  CHAM_MATER  = MAT_FLD,
  EXCIT       = (
    _F(CHARGE = HEATING),
    ),
  ETAT_INIT   = _F(CHAM_NO = INI_TEMP),
  CONVERGENCE = _F(RESI_GLOB_MAXI = 1.E-9),
  NEWTON      = _F(REAC_ITER = 1),
  )


# Result checking (middle of the rod)

TEST_RESU(RESU=_F(GROUP_NO='PROBE',
                  INST=1.0,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=EVOL,
                  NOM_CHAM='TEMP',
                  NOM_CMP='TEMP',
                  VALE_CALC=0.432147394,
                  VALE_REFE=0.43233235838169365,),
          )

FIN()
