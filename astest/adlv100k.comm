# MODIF  DATE 10/10/2012   AUTEUR COURTOIS M.COURTOIS 
# TITRE PISTON COUPLE A UNE COLONNE DE FLUIDE
# adlv100k.para = tps_job 60 mem_job 256Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# AVEC ELEMENTS TRIA3 ET SEG2
# VALIDATION INDEPENDANTE PAR LMS_NT (J.P.ROSSION)
#
DEBUT(CODE=_F(NOM='ADLV100K',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

PRE_IDEAS()

#
MA=LIRE_MAILLAGE()

MO=AFFE_MODELE(
        MAILLAGE=MA,AFFE=(
        _F( GROUP_MA = ('triaeau', 'triaair',),
                   MODELISATION = '2D_FLUIDE', PHENOMENE = 'MECANIQUE'),
        _F( GROUP_MA = ('lineau', 'linair',),
                   MODELISATION = '2D_FLUI_STRU', PHENOMENE = 'MECANIQUE'),
        _F( GROUP_MA = 'triapist',
                   MODELISATION = 'D_PLAN', PHENOMENE = 'MECANIQUE'))
         )

#
# PROPRIETES MECANIQUES
#
AIR=DEFI_MATERIAU(
          FLUIDE=_F( RHO = 1.2,
              CELE_R = 340.0)
         )

EAU=DEFI_MATERIAU(
          FLUIDE=_F( RHO = 1000.,
              CELE_R = 1400.0)
         )

ACIER=DEFI_MATERIAU(
          ELAS=_F( RHO = 7800.,
            NU = 0.3,
                E = 2.E+11)
         )

CHM=AFFE_MATERIAU(
        MAILLAGE=MA,AFFE=(
        _F( GROUP_MA = ('triaeau', 'lineau',),
            MATER = EAU),
        _F( GROUP_MA = ('triaair', 'linair',),
            MATER = AIR),
        _F( GROUP_MA = 'triapist',
            MATER = ACIER))
         )

#
# CONDITIONS AUX LIMITES
#
SURFLIBR=AFFE_CHAR_MECA(
        MODELE=MO,
        DDL_IMPO=_F( GROUP_NO = 'surflib',
                  PRES = 0., PHI = 0.)
         )

GUIDAGE=AFFE_CHAR_MECA(
        MODELE=MO,
        DDL_IMPO=_F( GROUP_NO = 'noeudpis',
                  DY = 0.)
         )

#
# MATRICES ELEMENTAIRES
#
MK=CALC_MATR_ELEM(
         OPTION='RIGI_MECA',
         MODELE=MO,
         CHAM_MATER=CHM,
         CHARGE=(SURFLIBR, GUIDAGE,)
        )

MM=CALC_MATR_ELEM(
         OPTION='MASS_MECA',
         MODELE=MO,
         CHAM_MATER=CHM,
         CHARGE=(SURFLIBR, GUIDAGE,)
        )

NDDL=NUME_DDL(
         MATR_RIGI=MK
        )

#
# ASSEMBLAGE
#
MATK=ASSE_MATRICE(
         MATR_ELEM=MK,
         NUME_DDL=NDDL
        )

MATM=ASSE_MATRICE(
         MATR_ELEM=MM,
         NUME_DDL=NDDL
        )

#
# CALCUL DES MODES
#
MODES=MODE_ITER_INV(  MATR_RIGI=MATK,
                        MATR_MASS=MATM,
                        CALC_FREQ=_F( OPTION = 'AJUSTE',
                                   FREQ = (10., 20.,))
                         )

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  PARA='FREQ',
                  RESULTAT=MODES,
                  VALE_CALC=13.827699766,
                  VALE_REFE=13.8285,
                  REFERENCE='NON_DEFINI',
                  CRITERE='RELATIF',
                  PRECISION=5.0000000000000001E-3,),
          )

FIN()
#
