#
# TITRE TEST DE NON REGRESSION DU MODELE DE ROUSSELIER
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# EN VERSIONS LOCALE ET NON LOCALE (
# ESSAI TRACTION UNE MAILLE QUAD8
# MODELISATION D_PLAN_SI  / D_PLAN_INCO

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))

# REM : POUR ASSURER LA PERTINENCE DU TEST AVEC LA MODELISATION
# INCO, ON UTILISE UN MAILLAGE CONTENANT PLUSIEURS MAILLES.
# EN EFFET, CES ELEMENTS NE PASSENT PAS LE PATCH TEST SUR UN ELEMENT
# UNIQUE, CAD QUE  PLUSIEURS SOLUTIONS EXISTENT : ON OBSERVE ALORS UNE
# GRANDE SENSIBILITE DE LA SOLUTION OBTENUE PAR RAPPORT AU SOLVEUR
# UTILISE

MA=LIRE_MAILLAGE(FORMAT='MED');

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_MA=_F(NOM= 'ESSAI', TOUT='OUI'),
              CREA_GROUP_NO=(_F(GROUP_MA='AB',),
                             _F(GROUP_MA='DA',),
                             _F(GROUP_MA='CD',),),);

MO_NLG=AFFE_MODELE(MAILLAGE=MA,
                   AFFE=_F(TOUT='OUI',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='D_PLAN_INCO_UPGB',),);

TRACT= DEFI_FONCTION(
  NOM_PARA = 'EPSI',
  VALE = (
    0.002,   400,
    1.002,  2400),
  PROL_DROITE = 'LINEAIRE');

ACIER = DEFI_MATERIAU(ELAS       = _F(E = 200000,  NU = 0.3),
                      TRACTION   = _F(SIGM = TRACT),
                      ROUSSELIER = _F(D = 2,  SIGM_1 = 500,  PORO_INIT = 0.01),
                      NON_LOCAL  = _F(C_GONF=1,),);

CHP_MAT=AFFE_MATERIAU(MAILLAGE=MA,
                      AFFE=_F(TOUT='OUI',
                              MATER=ACIER,),);

L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=(_F(JUSQU_A=1.5,
                                     NOMBRE=50,),),);

U_CHAR=DEFI_FONCTION(NOM_PARA='INST',
                     VALE=(0.0,0.0,1.5,1.5),
                     PROL_DROITE='CONSTANT',);

CHA_NLG=AFFE_CHAR_MECA(MODELE=MO_NLG,
                      DDL_IMPO=(_F(GROUP_NO='AB',DY=0.0,),
                                _F(GROUP_NO='A',DX=0.0,),
                                _F(GROUP_NO='CD',DY=1.0,),),);

# LES SYSTEMES LINEAIRES SONT DIFFICILES A RESOUDRE.
# ON DEVERROUILLE LA DETECTION DE SINGULARITE. LE PROCESSUS DE NEWTON
# CORRIGE LES EVENTUELLES DERIVES.
U_NLG=STAT_NON_LINE(MODELE=MO_NLG,
                CHAM_MATER=CHP_MAT,
                EXCIT=_F(CHARGE=CHA_NLG,
                         FONC_MULT=U_CHAR,),
                COMPORTEMENT=_F(RELATION='ROUSSELIER',
                                DEFORMATION='SIMO_MIEHE',
                                RESI_INTE_RELA=1.E-06,
                                ITER_INTE_MAXI=15,),
                INCREMENT=_F(LIST_INST=L_INST,),
                NEWTON=_F(MATRICE='TANGENTE',
                          REAC_ITER=1,),
                SOLVEUR=_F(METHODE='MUMPS',
                           NPREC=-1,),
                CONVERGENCE=_F(RESI_REFE_RELA=1.E-4,
                               SIGM_REFE = 500 ,
                               EPSI_REFE = 1),);

TEST_RESU(RESU=(_F(INST=0.93,
                   TYPE_TEST='MAX',
                   RESULTAT=U_NLG,
                   NOM_CHAM='SIEF_ELGA',
                   NOM_CMP='SIYY',
                   VALE_CALC=942.70737512,
                   TOLE_MACHINE=3.E-6,), #EF qui ne respecte pas la lbb
                _F(INST=0.93,
                   TYPE_TEST='MAX',
                   RESULTAT=U_NLG,
                   NOM_CHAM='SIEF_ELGA',
                   NOM_CMP='SIZZ',
                   VALE_CALC=135.670388305,
                   TOLE_MACHINE=2.E-5,),#EF qui ne respecte pas la lbb
                _F(INST=0.93,
                   TYPE_TEST='MAX',
                   RESULTAT=U_NLG,
                   NOM_CHAM='VARI_ELGA',
                   NOM_CMP='V1',
                   VALE_CALC=0.629860989615,
                   TOLE_MACHINE=3.E-6,),#EF qui ne respecte pas la lbb
                _F(INST=0.93,
                   TYPE_TEST='MAX',
                   RESULTAT=U_NLG,
                   NOM_CHAM='VARI_ELGA',
                   NOM_CMP='V2',
                   VALE_CALC=0.224931038687,
                   TOLE_MACHINE=8.E-6,),),);#EF qui ne respecte pas la lbb

TEST_RESU(RESU=(_F(INST=1.5,
                   TYPE_TEST='MAX',
                   RESULTAT=U_NLG,
                   NOM_CHAM='SIEF_ELGA',
                   NOM_CMP='SIYY',
                   VALE_CALC=721.692146856,
                   TOLE_MACHINE=4.E-6,),#EF qui ne respecte pas la lbb
                _F(INST=1.5,
                   TYPE_TEST='MIN',
                   RESULTAT=U_NLG,
                   NOM_CHAM='SIEF_ELGA',
                   NOM_CMP='SIYY',
                   VALE_CALC=721.685377578,
                   TOLE_MACHINE=4.E-6,),),);#EF qui ne respecte pas la lbb

FIN();
