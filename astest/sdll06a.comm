# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#  SFM.VPCS  SDLL06 / A
#  REPONSE TRANSITOIRE D'UN POTEAU ENCASTRE-LIBRE
#  SOUS ACCELERATION IMPOSEE
#  1 RESSORT  1 MASSE  --   K = 3.942E+7   M = 43.8E+3
# ----------------------------------------------------------------------
#
DEBUT( CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI') )

MAILLAG0=LIRE_MAILLAGE(FORMAT='MED', )

MAILLAGE=CREA_MAILLAGE(MAILLAGE=MAILLAG0,
    CREA_POI1=(
        _F(NOM_GROUP_MA='MASSES',   GROUP_NO = 'MASSES',),
        _F(NOM_GROUP_MA='N02',  NOEUD = 'N02',),
    ),
)

MODELE=AFFE_MODELE(  MAILLAGE=MAILLAGE,AFFE=(
                _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_TR',
                       GROUP_MA = 'LIAI_NOE'),
                     _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_TR',
                       GROUP_MA = 'MASSES'))                    )

#
CARA_ELE=AFFE_CARA_ELEM(  MODELE=MODELE,DISCRET=(
                _F(  GROUP_MA = 'N02',  CARA = 'M_TR_D_N',
                          VALE = ( 43.8E+3, 0., 0., 0., 0., 0.,
                                  0., 0., 0., 0., )),
                _F(  GROUP_MA = 'N02',  CARA = 'K_TR_D_N',
                          VALE = ( 0., 0., 0., 0., 0., 0., )),
                        _F(  GROUP_MA = 'RLN_1',  CARA = 'K_TR_D_L',
                          VALE = ( 0., 3.942E+7, 0., 0., 0., 0., ),
                          REPERE = 'LOCAL')) )

#
CON_LIM=AFFE_CHAR_MECA( MODELE=MODELE,DDL_IMPO=(
               _F(  GROUP_NO = 'ENCASTRE',  DX = 0.,  DY = 0.,  DZ = 0.,
                                              DRX = 0.,  DRY = 0.,  DRZ = 0.),
                        _F(  GROUP_NO = 'DY',   DY = 0.),
                        _F(  GROUP_NO = 'DZ',   DZ = 0.),
                        _F(  GROUP_NO = 'DRX',  DRX = 0.),
                        _F(  GROUP_NO = 'DRY',  DRY = 0.),
                        _F(  GROUP_NO = 'DRZ',  DRZ = 0.))    )

#
RIGI_ELE=CALC_MATR_ELEM(  MODELE=MODELE,  OPTION='RIGI_MECA',
                            CARA_ELEM=CARA_ELE,  CHARGE=CON_LIM   )

MASS_ELE=CALC_MATR_ELEM( MODELE=MODELE,  OPTION='MASS_MECA',
                            CARA_ELEM=CARA_ELE,  CHARGE=CON_LIM   )

NUMEDDL=NUME_DDL(  MATR_RIGI=RIGI_ELE )

RIGIDITE=ASSE_MATRICE(  MATR_ELEM=RIGI_ELE,  NUME_DDL=NUMEDDL  )

MASSE=ASSE_MATRICE(  MATR_ELEM=MASS_ELE,  NUME_DDL=NUMEDDL  )

#
# CALCUL DES MODES AVEC BLOCAGE DES ANCRAGES:
#---------------------------------------------
MODE_MEC=CALC_MODES(MATR_RIGI=RIGIDITE,
                    OPTION='PROCHE', SOLVEUR=_F(METHODE='MULT_FRONT'),
                    CALC_FREQ=_F(FREQ=( 4.77,),
                                 ),
                    TITRE='CAS TEST &CODE   COMMANDE &COMMANDE SANS L_TX !!',
                    MATR_MASS=MASSE,
                    )


#
# DESCRIPTION DE L ACCELEROGRAMMES:
#---------------------------------
ACCELERO=DEFI_FONCTION(  NOM_PARA='INST',  NOM_RESU='ACCE',
                           VALE=( 0., 0.,  0.025, 9.81,  0.05, 0.,  10., 0., )
                        )

#
MONO_X=CALC_CHAR_SEISME(   MATR_MASS=MASSE,   DIRECTION=( 1., 0., 0.,),
                  TITRE=( 'CAS TEST &CODE &RL COMMANDE &COMMANDE', ),
                 MONO_APPUI='OUI'                     )

#
# PROJECTION DES MATRICES M ET K SUR LA BASE MODALE
#---------------------------------------------------
PROJ_BASE( BASE=MODE_MEC,
           STOCKAGE='DIAG',
           MATR_ASSE_GENE=(
          _F(  MATRICE = CO("MASS_GEN"),  MATR_ASSE = MASSE),
          _F(  MATRICE = CO("RIGI_GEN"),  MATR_ASSE = RIGIDITE)),
          VECT_ASSE_GENE=_F(  VECTEUR = CO("VECT_X"),  VECT_ASSE = MONO_X,
                              TYPE_VECT='FORC')
         )

#
# CALCUL TRANSITOIRE PAR SUPERPOSITION MODALE
# -------------------------------------------
TRAN_GEN=DYNA_VIBRA(TYPE_CALCUL='TRAN',BASE_CALCUL='GENE',
                    MATR_MASS=MASS_GEN,   MATR_RIGI=RIGI_GEN,
                    SCHEMA_TEMPS=_F(SCHEMA='DIFF_CENTRE',),
             TITRE=( ' CAS TEST &CODE &RL COMMANDE &COMMANDE', ),
                     EXCIT=_F(VECT_ASSE_GENE = VECT_X,  FONC_MULT = ACCELERO),
                     INCREMENT=_F( INST_INIT = 0.,  INST_FIN = 0.15,
                                 PAS = 0.0005)  )

#
# RESTITUTION DU DEPLACEMENT RELATIF
# ----------------------------------
L_RECU=DEFI_LIST_REEL(  DEBUT=0.,
                      INTERVALLE=_F(  JUSQU_A = 0.1,  PAS = 0.001) )

RESUR=REST_GENE_PHYS(  RESU_GENE=TRAN_GEN, NOEUD='N02',
                       INTERPOL='LIN',   LIST_INST=L_RECU,
                       NOM_CHAM='DEPL',
                      )

# RECUPERATION DES DEPLACEMENTS RELATIFS CALCULES
# -----------------------------------------------
N02DXR=RECU_FONCTION(  NOEUD='N02',  NOM_CMP='DX',   NOM_CHAM='DEPL',
                       RESULTAT=RESUR  )

#
# CALCUL ANALYTIQUE DES DEPLACEMENTS
# ----------------------------------

OMEGA=sqrt(3.942E7/43.8E+3)

# CALCUL ANALYTIQUE DU DEPLACEMENT RELATIF
# ----------------------------------------
T0=0.025

P0=9.81

P2=- P0/OMEGA

#
# --- T<T0=0.025 ---
XRN1a = FORMULE(VALE='P2/(OMEGA*T0)*(INST-sin(OMEGA*INST)/OMEGA)',
                P2=P2,
                OMEGA=OMEGA,
                T0=T0,
                NOM_PARA='INST',)

L_RECU1=DEFI_LIST_REEL(  DEBUT=0.,
                      INTERVALLE=_F(  JUSQU_A = 0.025, PAS = 0.001) )

XR1='XRN1'

XRN1=CALC_FONC_INTERP(      FONCTION=XRN1a,
                            NOM_RESU=XR1,   LIST_PARA=L_RECU1,
                            NOM_PARA = 'INST', )

# --- T0<T<2.T0 ---
XRN2a = FORMULE(VALE="""
P2/(OMEGA*T0)*(2*T0-INST+(2*sin(OMEGA*(INST-T0))-sin(OMEGA*INST))
                    /OMEGA)
        """,
                P2=P2,
                OMEGA=OMEGA,
                T0=T0,
                NOM_PARA='INST',)

L_RECU2=DEFI_LIST_REEL(  DEBUT=0.025,
                      INTERVALLE=_F(  JUSQU_A = 0.05, PAS = 0.001) )

XR2='XRN2'

XRN2=CALC_FONC_INTERP(      FONCTION=XRN2a,
                            NOM_RESU=XR2,   LIST_PARA=L_RECU2,
                            NOM_PARA = 'INST', )

# --- T>2.T0 ---
XRN3a = FORMULE(VALE="""
P2/(OMEGA*OMEGA*T0)
           *(2*sin(OMEGA*(INST-T0))-sin(OMEGA*(INST-2*T0))
                 -sin(OMEGA*INST))
        """,
                P2=P2,
                OMEGA=OMEGA,
                T0=T0,
                NOM_PARA='INST',)

L_RECU3=DEFI_LIST_REEL(  DEBUT=0.05,
                      INTERVALLE=_F(  JUSQU_A = 0.1, PAS = 0.001) )

XR3='XRN3'

XRN3=CALC_FONC_INTERP(      FONCTION=XRN3a,
                            NOM_RESU=XR3,   LIST_PARA=L_RECU3,
                            NOM_PARA = 'INST', )

#
# COMPARAISON DES RESULTATS NUMERIQUES/ RESULTATS ANALYTIQUES
# -----------------------------------------------------------

TEST_FONCTION(VALEUR=(_F(VALE_CALC=-6.49464794257e-05,
                         VALE_REFE=XRN1a(0.01),
                         CRITERE='ABSOLU',
                         VALE_PARA=1.E-2,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=1.6999999999999999E-07,
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00021826789303,
                         VALE_REFE=XRN1a(0.015),
                         CRITERE='ABSOLU',
                         VALE_PARA=0.014999999999999999,
                         REFERENCE='ANALYTIQUE',
                         PRECISION=2.3999999999999998E-07,
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.000513564437982,
                         VALE_REFE=XRN1a(0.02),
                         VALE_PARA=0.02,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.000880599476627,
                         VALE_REFE=XRN1a(0.024),
                         VALE_PARA=0.024,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.0011145446406,
                         VALE_REFE=XRN1a(0.026),
                         VALE_PARA=0.025999999999999999,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00167908345934,
                         VALE_REFE=XRN2a(0.03),
                         VALE_PARA=0.029999999999999999,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00252313040136,
                         VALE_REFE=XRN2a(0.035),
                         VALE_PARA=0.035000000000000003,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00345738926303,
                         VALE_REFE=XRN2a(0.04),
                         VALE_PARA=0.040000000000000001,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00441191919531,
                         VALE_REFE=XRN2a(0.045),
                         VALE_PARA=0.044999999999999998,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00514280698371,
                         VALE_REFE=XRN2a(0.049),
                         VALE_PARA=0.049000000000000002,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00548510583596,
                         VALE_REFE=XRN3a(0.051),
                         VALE_PARA=0.050999999999999997,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00610941809808,
                         VALE_REFE=XRN3a(0.055),
                         VALE_PARA=0.055,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00676530517286,
                         VALE_REFE=XRN3a(0.060),
                         VALE_PARA=0.059999999999999998,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00726925523509,
                         VALE_REFE=XRN3a(0.065),
                         VALE_PARA=0.065000000000000002,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00760995044099,
                         VALE_REFE=XRN3a(0.070),
                         VALE_PARA=0.070000000000000007,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00777973936755,
                         VALE_REFE=XRN3a(0.075),
                         VALE_PARA=0.074999999999999997,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00777480885016,
                         VALE_REFE=XRN3a(0.080),
                         VALE_PARA=0.080000000000000002,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      _F(VALE_CALC=-0.00759526961968,
                         VALE_REFE=XRN3a(0.085),
                         VALE_PARA=0.085000000000000006,
                         REFERENCE='ANALYTIQUE',
                         FONCTION=N02DXR,),
                      ),
              )

FIN( )
#
