# MODIF  DATE 17/01/2012   AUTEUR SELLENET N.SELLENET 
# TITRE PLAQUE MINCE VRILLEE OU FLECHIE
# ssls27b.para = tps_job 60 mem_job 64Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT( CODE=_F(  NOM = 'SSLS27B',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

E=1.0E11

NU=0.25

H=5.E-2

MATER=DEFI_MATERIAU( ELAS=_F(E=E,
                             NU=NU,) )

MAILL=LIRE_MAILLAGE(FORMAT='MED',  )

MAILL=DEFI_GROUP( reuse=MAILL,   MAILLAGE=MAILL,
  CREA_GROUP_MA=_F(  NOM = 'TOUT', TOUT = 'OUI'))

CHMAT=AFFE_MATERIAU(  MAILLAGE=MAILL,
                         AFFE=_F(  TOUT = 'OUI', MATER = MATER) )

MOD=AFFE_MODELE(  MAILLAGE=MAILL,
                       AFFE=_F(  TOUT = 'OUI',     MODELISATION = 'DST',
                              PHENOMENE = 'MECANIQUE')  )

CARAC=AFFE_CARA_ELEM(  MODELE=MOD,
                          COQUE=_F(
       GROUP_MA = 'TOUT',
  EPAIS = H) )

CHARG=AFFE_CHAR_MECA( MODELE=MOD,
                          DDL_IMPO=_F(  GROUP_NO = ('AD',),
                                     DX = 0.,  DY = 0.,  DZ = 0.,
                                     DRX = 0.,  DRY = 0.,  DRZ = 0.) )

# ---------------------------------------------------------------------
# FORCES DE SENS OPPOSEES  PERPENDICULAIRES A LA PLAQUE

CHARG1=AFFE_CHAR_MECA( MODELE=MOD,FORCE_NODALE=(
              _F(  GROUP_NO = 'B',   FZ = -1.),
                           _F(  GROUP_NO = 'C',   FZ = 1.))  )

# ---------------------------------------------------------------------
# FORCES DE MEME SENS PERPENDICULAIRES A LA PLAQUE
#         S(FZ)=2

CHARG2=AFFE_CHAR_MECA( MODELE=MOD,FORCE_NODALE=(
              _F(  GROUP_NO = 'B',   FZ = 1.),
                           _F(  GROUP_NO = 'C',   FZ = 1.))  )

# ---------------------------------------------------------------------

RESU1 = MECA_STATIQUE(MODELE=MOD,
                      CARA_ELEM=CARAC,
                      CHAM_MATER=CHMAT,
                      EXCIT=(_F(CHARGE=CHARG,),
                             _F(CHARGE=CHARG1,),),
                      )

RESU1 = CALC_NO(reuse=RESU1,
                RESULTAT=RESU1,
                OPTION='FORC_NODA',)

FORC1=POST_RELEVE_T(ACTION=(_F(OPERATION='EXTRACTION',
                                  INTITULE='Reactions',
                                  RESULTAT=RESU1,
                                  NOM_CHAM='FORC_NODA',
                                  GROUP_NO=('AD',),
                                  POINT=(0,0,0,),
                                  RESULTANTE=('DX','DY','DZ',),
                                  MOMENT    =('DRX','DRY','DRZ',),),),)

IMPR_TABLE(TABLE=FORC1)
# ---------------------------------------------------------------------

RESU2 = MECA_STATIQUE(MODELE=MOD,
                      CARA_ELEM=CARAC,
                      CHAM_MATER=CHMAT,
                      EXCIT=(_F(CHARGE=CHARG,),
                             _F(CHARGE=CHARG2,),),
                      )

RESU2 = CALC_NO(reuse=RESU2,
                RESULTAT=RESU2,
                OPTION='FORC_NODA',)

FORC2=POST_RELEVE_T(ACTION=(_F(OPERATION='EXTRACTION',
                                  INTITULE='Reactions',
                                  RESULTAT=RESU2,
                                  NOM_CHAM='FORC_NODA',
                                  GROUP_NO=('AD',),
                                  POINT=(0,0,0,),
                                  RESULTANTE=('DX','DY','DZ',),
                                  MOMENT    =('DRX','DRY','DRZ',),),),)

IMPR_TABLE(TABLE=FORC2)

# ---------------------------------------------------------------------

#

TEST_RESU(RESU=(
            _F(  RESULTAT = RESU1, NOM_CHAM='DEPL',  INST=0.0, CRITERE = 'RELATIF',   PRECISION = 5.E-3,
              NOEUD = 'N13', REFERENCE = 'ANALYTIQUE', NOM_CMP = 'DZ', VALE = -3.537E-6),
            _F(  RESULTAT = RESU1, NOM_CHAM='DEPL',  INST=0.0,   CRITERE = 'ABSOLU',   PRECISION = 1.E-12,
              NOEUD = 'N39', REFERENCE = 'ANALYTIQUE', NOM_CMP = 'DZ', VALE = 0.0),
            _F(  RESULTAT = RESU1, NOM_CHAM='DEPL',  INST=0.0,  CRITERE = 'RELATIF',   PRECISION = 5.E-3,
              NOEUD = 'N65', REFERENCE = 'ANALYTIQUE', NOM_CMP = 'DZ', VALE = 3.537E-6),
#
            _F(  RESULTAT = RESU2, NOM_CHAM='DEPL',  INST=0.0,  CRITERE = 'RELATIF',   PRECISION = 1.E-2,
              NOEUD = 'N13', REFERENCE = 'ANALYTIQUE', NOM_CMP = 'DZ', VALE = 1.1059E-3),
            _F(  RESULTAT = RESU2, NOM_CHAM='DEPL',  INST=0.0,  CRITERE = 'RELATIF',   PRECISION = 1.E-2,
              NOEUD = 'N39', REFERENCE = 'ANALYTIQUE', NOM_CMP = 'DZ', VALE = 1.1059E-3),
            _F(  RESULTAT = RESU2, NOM_CHAM='DEPL',  INST=0.0,  CRITERE = 'RELATIF',   PRECISION = 1.E-2,
             NOEUD = 'N65', REFERENCE = 'ANALYTIQUE', NOM_CMP = 'DZ', VALE = 1.1059E-3))
             )

TEST_TABLE(TABLE=FORC2,
           NOM_PARA='RESULT_Z',
           VALE=-2,
           CRITERE='RELATIF',
           PRECISION=1.0E-8,
           REFERENCE = 'ANALYTIQUE',)
TEST_TABLE(TABLE=FORC2,
           NOM_PARA='MOMENT_X',
           VALE=0,
           CRITERE='ABSOLU',
           PRECISION=1.0E-8,
           REFERENCE = 'ANALYTIQUE',)
TEST_TABLE(TABLE=FORC2,
           NOM_PARA='MOMENT_Y',
           VALE=24,
           CRITERE='RELATIF',
           PRECISION=1.0E-8,
           REFERENCE = 'ANALYTIQUE',)


TEST_TABLE(TABLE=FORC1,
           NOM_PARA='RESULT_Z',
           VALE=0,
           CRITERE='ABSOLU',
           PRECISION=1.0E-8,
           REFERENCE = 'ANALYTIQUE',)
TEST_TABLE(TABLE=FORC1,
           NOM_PARA='MOMENT_X',
           VALE=-1,
           CRITERE='RELATIF',
           PRECISION=1.0E-8,
           REFERENCE = 'ANALYTIQUE',)
TEST_TABLE(TABLE=FORC1,
           NOM_PARA='MOMENT_Y',
           VALE=0,
           CRITERE='ABSOLU',
           PRECISION=1.0E-8,
           REFERENCE = 'ANALYTIQUE',)


FIN()
#
