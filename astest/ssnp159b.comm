# MODIF  DATE 30/07/2012   AUTEUR LEFEBVRE J-P.LEFEBVRE 
#  TITRE TRACTION PLASTIQUE GRANDES DEFORMATIONS AXI CALCUL DES ENERGIES ELASTIQUES
# ssnp159b.para = tps_job 60 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# ssnp159b.para = tps_job 60 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NOM='SSNP159B',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MA=LIRE_MAILLAGE()

MO=AFFE_MODELE(    MAILLAGE=MA,
                   VERIF='MAILLE',
                   AFFE=_F(  TOUT = 'OUI',
                             PHENOMENE = 'MECANIQUE',
                             MODELISATION = 'AXIS')
                       )


ACIER=DEFI_MATERIAU(
                   ELAS=_F(
                   E = 200000.,
                   NU = 0.3,),
                   ECRO_LINE=_F(D_SIGM_EPSI=2000,
                                SY=1000,)
             )

L_INST=DEFI_LIST_REEL(
              DEBUT=0.0,INTERVALLE=(
                                   _F(  JUSQU_A = 2.00, NOMBRE = 20),)
             )


F_CHAR=DEFI_FONCTION(
                NOM_PARA='INST',
                PROL_DROITE='CONSTANT',
                    VALE=(
                          0.,   0.,
                          2.,  290,
                          )
                  )

CHR_LIAI=AFFE_CHAR_MECA(  MODELE=MO,DDL_IMPO=(
                                  _F(  NOEUD = 'NO1',  DY = 0.),
                                  _F(  NOEUD = 'NO2',  DY = 0.))
                          )

CHR_TRAC=AFFE_CHAR_MECA(  MODELE=MO,
                          FACE_IMPO=_F(  MAILLE = 'MA2',  DY = 1.)
                          )

CHP_MATL=AFFE_MATERIAU(   MAILLAGE=MA,
                          AFFE=_F(  TOUT = 'OUI',
                                    MATER = ACIER,),
                       )
                       
 ###################################################           
#CALCUL ET TEST EN PETITES DEFORMATIONS 
PT=STAT_NON_LINE(
                  MODELE=MO,
                  CHAM_MATER=CHP_MATL,
                  EXCIT=(_F(CHARGE = CHR_LIAI),
                        _F(CHARGE = CHR_TRAC,
                           FONC_MULT = F_CHAR,
                           TYPE_CHARGE = 'DIDI')),
                  COMP_INCR=_F(RELATION = 'VMIS_ISOT_LINE',
                               DEFORMATION = 'PETIT'),
                  INCREMENT=_F(LIST_INST = L_INST),
                  NEWTON=_F(MATRICE = 'TANGENTE',
                            REAC_ITER = 1),
                  CONVERGENCE=_F(RESI_GLOB_RELA = 1.E-6,
                                 ITER_GLOB_MAXI = 50),
                  RECH_LINEAIRE=_F(ITER_LINE_MAXI = 0)
              )

ENERPT=POST_ELEM(ENER_ELAS=_F(TOUT='OUI'),
                 RESULTAT=PT,
                 );

TEST_RESU(RESU=(  _F(
               RESULTAT = PT,  NOM_CHAM = 'DEPL',  INST = 2.,
               NOEUD = 'NO3',   NOM_CMP = 'DY',
               PRECISION = 1.E-2,
               VALE = 290.),
              _F(
               RESULTAT = PT,   NOM_CHAM = 'SIEF_ELGA',  INST = 2.,
               MAILLE = 'MA1',  POINT = 1,   NOM_CMP = 'SIYY',
               PRECISION = 1.E-2,
               VALE = 1570.),
              _F(
               RESULTAT = PT,     NOM_CHAM = 'VARI_ELGA',  INST = 2.,
               MAILLE = 'MA1',  POINT = 1,   NOM_CMP = 'V1',
               PRECISION = 1.5E-2,
               VALE = 0.282))
             )
TEST_TABLE(TABLE=ENERPT,
           FILTRE=(_F(NOM_PARA='INST',
                      VALE=2.0,),),
           NOM_PARA='TOTALE',
           VALE=3.08E9,
           PRECISION=0.05,
           REFERENCE='ANALYTIQUE',);                       
###################################################           
#CALCUL ET TEST AVEC LES DEFORMATIONS GDEF_LOG
LOG=STAT_NON_LINE(
                  MODELE=MO,
                  CHAM_MATER=CHP_MATL,
                  EXCIT=(_F(CHARGE = CHR_LIAI),
                        _F(CHARGE = CHR_TRAC,
                           FONC_MULT = F_CHAR,
                           TYPE_CHARGE = 'DIDI')),
                  COMP_INCR=_F(RELATION = 'VMIS_ISOT_LINE',
                               DEFORMATION = 'GDEF_LOG'),
                  INCREMENT=_F(LIST_INST = L_INST),
                  NEWTON=_F(MATRICE = 'TANGENTE',
                            REAC_ITER = 1),
                  CONVERGENCE=_F(RESI_GLOB_RELA = 1.E-6,
                                 ITER_GLOB_MAXI = 50),
                  RECH_LINEAIRE=_F(ITER_LINE_MAXI = 0)
              )

ENELOG=POST_ELEM(ENER_ELAS=_F(TOUT='OUI'),
                 RESULTAT=LOG,
                 );

TEST_RESU(RESU=(  _F(
               RESULTAT = LOG,  NOM_CHAM = 'DEPL',  INST = 2.,
               NOEUD = 'NO3',   NOM_CMP = 'DY',
               PRECISION = 1.E-2,
               VALE = 290.),
              _F(
               RESULTAT = LOG,   NOM_CHAM = 'SIEF_ELGA',  INST = 2.,
               MAILLE = 'MA1',  POINT = 1,   NOM_CMP = 'SIYY',
               PRECISION = 1.E-2,
               VALE = 1495.),
              _F(
               RESULTAT = LOG,     NOM_CHAM = 'VARI_ELGA',  INST = 2.,
               MAILLE = 'MA1',  POINT = 1,   NOM_CMP = 'V1',
               PRECISION = 1.5E-2,
               VALE = 0.2475))
             )
TEST_TABLE(TABLE=ENELOG,
           FILTRE=(_F(NOM_PARA='INST',
                      VALE=2.0,),),
           NOM_PARA='TOTALE',
           VALE=2.81E9,
           PRECISION=0.05,
           REFERENCE='ANALYTIQUE',);                       

###################################################           
#CALCUL ET TEST AVEC LES DEFORMATIONS DE SIMO_MIEHE
SM=STAT_NON_LINE(
                  MODELE=MO,
                  CHAM_MATER=CHP_MATL,
                  EXCIT=(_F(CHARGE = CHR_LIAI),
                        _F(CHARGE = CHR_TRAC,
                           FONC_MULT = F_CHAR,
                           TYPE_CHARGE = 'DIDI')),
                  COMP_INCR=_F(RELATION = 'VMIS_ISOT_LINE',
                               DEFORMATION = 'SIMO_MIEHE'),
                  INCREMENT=_F(LIST_INST = L_INST),
                  NEWTON=_F(MATRICE = 'TANGENTE',
                            REAC_ITER = 1),
                  CONVERGENCE=_F(RESI_GLOB_RELA = 1.E-6,
                                 ITER_GLOB_MAXI = 50),
                  RECH_LINEAIRE=_F(ITER_LINE_MAXI = 0)
              )

ENERSM=POST_ELEM(ENER_ELAS=_F(TOUT='OUI'),
                 RESULTAT=SM,
                 );

TEST_RESU(RESU=(  _F(
               RESULTAT = SM,  NOM_CHAM = 'DEPL',  INST = 2.,
               NOEUD = 'NO3',   NOM_CMP = 'DY',
               PRECISION = 1.E-2,
               VALE = 290.),
              _F(
               RESULTAT = SM,   NOM_CHAM = 'SIEF_ELGA',  INST = 2.,
               MAILLE = 'MA1',  POINT = 1,   NOM_CMP = 'SIYY',
               PRECISION = 1.E-2,
               VALE = 1495.),
              _F(
               RESULTAT = SM,     NOM_CHAM = 'VARI_ELGA',  INST = 2.,
               MAILLE = 'MA1',  POINT = 1,   NOM_CMP = 'V1',
               PRECISION = 1.5E-2,
               VALE = 0.2475))
             )
TEST_TABLE(TABLE=ENERSM,
           FILTRE=(_F(NOM_PARA='INST',
                      VALE=2.0,),),
           NOM_PARA='TOTALE',
           VALE=3.095E9,
           PRECISION=0.05,
           REFERENCE='ANALYTIQUE',);
FIN(  )
#
