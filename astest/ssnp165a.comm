# TITRE ELASTIC RING AND BLOCK
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
      DEBUG=_F(SDVERI='OUI'),);

################
### MAILLAGE ###
################

MA=LIRE_MAILLAGE(FORMAT = 'MED',);
                       
MA=MODI_MAILLAGE(reuse =MA,
                 MAILLAGE=MA,
                 ORIE_PEAU_2D=(_F(GROUP_MA='SCO1',),
                               _F(GROUP_MA='SCO2',),),);

##############
### MODELE ###
##############

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='D_PLAN',),);
#################
### MATERIAUX ###
#################

BASUP=DEFI_MATERIAU(ELAS=_F(E=1.0E5,
                             NU=0.3,
                             RHO=2.7E-5,),                             
                    ECRO_LINE=_F(D_SIGM_EPSI=9.0E4,
                                 SY=10.E100,),);

BAINF=DEFI_MATERIAU(ELAS=_F(E=1.0E3,
                             NU=0.3,
                             RHO=2.7E-5,),                             
                    ECRO_LINE=_F(D_SIGM_EPSI=9.0E2,
                                 SY=10.E100,),);

BLOCK=DEFI_MATERIAU(ELAS=_F(E=3.0E2,
                             NU=0.3,
                             RHO=2.7E-5,),                             
                    ECRO_LINE=_F(D_SIGM_EPSI=10.0,
                                 SY=10.E100,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                      MODELE=MO,
                      AFFE=(_F(GROUP_MA='BASUP',
                               MATER=BASUP,),
                            _F(GROUP_MA='BAINF',
                               MATER=BAINF,),
                            _F(GROUP_MA='BLOC',
                               MATER=BLOCK,),),);

########################
### CHARGEMENT ET CL ###
########################

CHA1=AFFE_CHAR_MECA(MODELE=MO,
                    DDL_IMPO=(_F(GROUP_MA='SU1',
                                 DX=0.0,
                                 DY=0.0,),
                              _F(GROUP_MA='DEPL',
                                 DX=0.0,
                                 DY=-90.0,),),);

RAMPE=DEFI_FONCTION(NOM_PARA='INST',
                    VALE=(0.0,0.0,
                          1.0,1.0,),
                          PROL_DROITE='LINEAIRE',
                          PROL_GAUCHE='LINEAIRE',);

###############
### CONTACT ###
###############
           
NGENE=DEFI_CONTACT(MODELE=MO,
                   FORMULATION='CONTINUE',
                   FROTTEMENT='SANS',
                   LISSAGE ='OUI',
                   RESI_GEOM = 1.0E-3,                            
                   ZONE=_F(GROUP_MA_MAIT='SCO2',
                           GROUP_MA_ESCL='SCO1',
                           SANS_GROUP_NO='SANS',
                           ALGO_CONT='STANDARD',
                           COEF_CONT = 1.0e2,),);

######################
### LISTE INSTANTS ###
######################

L_INST=DEFI_LIST_REEL(DEBUT=0.,
                      INTERVALLE=(_F(JUSQU_A=1.,
                                     NOMBRE=20,),),);

LINST=DEFI_LIST_INST(DEFI_LIST=_F(METHODE='MANUEL',
                                  LIST_INST=L_INST,),
                     ECHEC=_F(SUBD_PAS=5,
                              SUBD_NIVEAU=5,),);

##################
### RESOLUTION ###
##################

RESU=DYNA_NON_LINE(MODELE=MO,
                   CHAM_MATER=CHMAT,
                   EXCIT=_F(CHARGE=CHA1,
                            FONC_MULT=RAMPE,),
                   CONTACT=NGENE,
                   COMPORTEMENT=_F(RELATION='VMIS_ISOT_LINE',
                                   DEFORMATION='GDEF_LOG',),
                   INCREMENT=_F(LIST_INST=LINST,),
                   SCHEMA_TEMPS=_F(SCHEMA='HHT',
                                   FORMULATION='DEPLACEMENT',),
                   NEWTON=_F(PREDICTION='TANGENTE',
                             MATRICE='TANGENTE',
                             REAC_ITER=1,),
                   ARCHIVAGE=_F(LIST_INST=L_INST,),);

#######################
### POST-TRAITEMENT ###
#######################

RESU=CALC_CHAMP(reuse=RESU,
                RESULTAT=RESU,
                FORCE=('FORC_NODA','REAC_NODA'),
                CRITERES='SIEQ_NOEU');

IMPR_RESU(UNITE=80,
          FORMAT='MED',
          RESU=_F(RESULTAT=RESU,),);

##################
### VALIDATION ###
##################

TEST_RESU(RESU=(_F(RESULTAT=RESU,
                   INST=0.40,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PA',
                   CRITERE='ABSOLU',
                   VALE_CALC=0.,),
                _F(RESULTAT=RESU,
                   INST=0.60,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PA',
                   CRITERE='ABSOLU',
                   VALE_CALC=0.,),
                _F(RESULTAT=RESU,
                   INST=0.80,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PA',
                   CRITERE='ABSOLU',
                   VALE_CALC=0.,),
                _F(RESULTAT=RESU,
                   INST=0.90,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PA',
                   CRITERE='ABSOLU',
                   VALE_CALC=0.,),
                _F(RESULTAT=RESU,
                   INST=1.00,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PA',
                   CRITERE='ABSOLU',
                   VALE_CALC=0.,),
                _F(RESULTAT=RESU,
                   INST=0.40,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PA',
                   VALE_CALC=-4.295737968863,),
                _F(RESULTAT=RESU,
                   INST=0.60,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PA',
                   VALE_CALC=-2.4839188294921,),
                _F(RESULTAT=RESU,
                   INST=0.80,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PA',
                   VALE_CALC=0.44247313270242,),
                _F(RESULTAT=RESU,
                   INST=0.90,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PA',
                   VALE_CALC=0.14755178273664,),
                _F(RESULTAT=RESU,
                   INST=1.00,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PA',
                   VALE_CALC=0.19822616823475,),
                _F(RESULTAT=RESU,
                   INST=0.40,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PA',
                   VALE_CALC=-37.922571929222,),
                _F(RESULTAT=RESU,
                   INST=0.60,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PA',
                   VALE_CALC=-16.786908188484,),
                _F(RESULTAT=RESU,
                   INST=0.80,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PA',
                   VALE_CALC=0.,),
                _F(RESULTAT=RESU,
                   INST=0.90,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PA',
                   VALE_CALC=0.,),
                _F(RESULTAT=RESU,
                   INST=1.00,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PA',
                   VALE_CALC=0.,),
                _F(RESULTAT=RESU,
                   INST=0.40,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PB',
                   CRITERE='ABSOLU',
                   VALE_CALC=0.18530046237768,),
                _F(RESULTAT=RESU,
                   INST=0.60,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PB',
                   CRITERE='ABSOLU',
                   VALE_CALC=0.30575199743889,),
                _F(RESULTAT=RESU,
                   INST=0.80,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PB',
                   CRITERE='ABSOLU',
                   VALE_CALC=0.79762611678093,),
                _F(RESULTAT=RESU,
                   INST=0.90,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PB',
                   CRITERE='ABSOLU',
                   VALE_CALC=-0.086458242932074,),
                _F(RESULTAT=RESU,
                   INST=1.00,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   GROUP_NO='PB',
                   CRITERE='ABSOLU',
                   VALE_CALC=0.32176232082026,),
                _F(RESULTAT=RESU,
                   INST=0.40,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PB',
                   VALE_CALC=-0.063226225961819,),
                _F(RESULTAT=RESU,
                   INST=0.60,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PB',
                   VALE_CALC=-5.2568343588364,),
                _F(RESULTAT=RESU,
                   INST=0.80,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PB',
                   VALE_CALC=-11.91722705506,),
                _F(RESULTAT=RESU,
                   INST=0.90,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PB',
                   VALE_CALC=-3.9988675149066,),
                _F(RESULTAT=RESU,
                   INST=1.00,
                   NOM_CHAM='DEPL',
                   NOM_CMP='DY',
                   GROUP_NO='PB',
                   VALE_CALC=-6.9324085244842,),
                _F(RESULTAT=RESU,
                   INST=0.40,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PB',
                   VALE_CALC=0.,),
                _F(RESULTAT=RESU,
                   INST=0.60,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PB',
                   VALE_CALC=-61.92762466997,),
                _F(RESULTAT=RESU,
                   INST=0.80,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PB',
                   VALE_CALC=-156.55610037034,),
                _F(RESULTAT=RESU,
                   INST=0.90,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PB',
                   VALE_CALC=-64.136609280395,),
                _F(RESULTAT=RESU,
                   INST=1.00,
                   NOM_CHAM='DEPL',
                   NOM_CMP='LAGS_C',
                   GROUP_NO='PB',
                   VALE_CALC=-89.156511065351,),),);

# Validation for not-paired node
TEST_RESU(RESU=(_F(NOEUD='N9',
                   INST=0.1,
                   RESULTAT=RESU,
                   NOM_CHAM='CONT_NOEU',
                   NOM_CMP='CONT',
                   VALE_CALC=-1,
                   ),),)

FIN();
