# MODIF  DATE 10/10/2012   AUTEUR COURTOIS M.COURTOIS 
#
# TITRE VALIDATION DE STANLEY
# RESPONSABLE ASSIRE A.ASSIRE
# zzzz216a.para = tps_job 60 mem_job 256Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#
#
#*********************************************************
#
#  CAS TEST DE VALIDATION DE STANLEY
#
#  CE CAS TEST A POUR OBJECTIF DE VERIFIER QUE LES CMDES ASTER
#  GENEREES PAR STANLEY SONT SYNTAXIQUEMENT CORRECTES.
#  CE CAS TEST S'INSPIRE DE FORMA01C
#  SEUL LE CALCUL MECANIQUE EST CONSERVE .
#  MODELISATION MASSIF LINEAIRE
#
#*********************************************************
#
#        TUYAUTERIE COMPORTANT UN COUDE
#     MODELISATION PAR DES ELEMENTS MASSIFS
# zzzz216a.para = tps_job 60 mem_job 256Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
DEBUT(CODE=_F(NOM='ZZZZ216A',NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI'))

MAIL=LIRE_MAILLAGE(FORMAT='MED',);

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_NO=(_F(GROUP_MA='EFOND',),
                               _F(GROUP_MA='SURFINT',),
                               _F(GROUP_MA='SURFEXT',),
                               _F(GROUP_MA='ENCAST',),
                               _F(OPTION='PLAN',
                                  NOM='PLANY',
                                  POINT=(3.6,3.6,0.0,),
                                  VECT_NORMALE=(0.0,1.0,0.0,),
                                  PRECISION=0.001,),
                               _F(OPTION='ENV_CYLINDRE',
                                  NOM='REXT',
                                  POINT=(3.6,3.6,0.0,),
                                  RAYON=0.2,
                                  VECT_NORMALE=(1.0,0.0,0.0,),
                                  PRECISION=0.001,),
                               _F(INTERSEC=('EFOND','PLANY','REXT',),
                                  NOM='PB',),),);
#
# DEFINITION DES ELEMENTS FINIS UTILISES POUR LE CALCUL MECANIQUE
#

MODMECA=AFFE_MODELE(MAILLAGE=MAIL,
                    AFFE=_F(TOUT='OUI',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D',),);
# ORIENTATION DES NORMALES AUX COQUES RENTRANTES DANS LE TUYAU
#

MAIL=MODI_MAILLAGE(reuse =MAIL,
                   MAILLAGE=MAIL,
                   ORIE_PEAU_3D=(_F(GROUP_MA='SURFINT',GROUP_MA_VOLU='V'),
                                 _F(GROUP_MA='EFOND',),),)


#
# DEFINITION DU MATERIAU
#

MAT=DEFI_MATERIAU(ELAS=_F(E=204000000000.0,
                          NU=0.3,
                          ALPHA=1.092e-05,),);

CHM=AFFE_MATERIAU(MAILLAGE=MAIL,
                  AFFE=_F(TOUT='OUI',
                          MATER=MAT,),);
#
# CAS DE CHARGE MECANIQUE  1 FORCE   2 PRESSION
REXT = 0.2;

EPTUB = 0.02;

FYTOT = 100000.0;

RINT = (REXT - EPTUB);

SINT = (pi * (RINT * RINT));

SEXT = (pi * (REXT * REXT));

SFON = (SEXT - SINT);

FYREP = (FYTOT / SFON);


CHARG1=AFFE_CHAR_MECA(MODELE=MODMECA,
                      DDL_IMPO=(_F(GROUP_MA='ENCAST',
                                   DX=0.0,
                                   DY=0.0,
                                   DZ=0.0,),
                                _F(GROUP_MA='SYMETRIE',
                                   DZ=0.0,),),
                      FORCE_FACE=_F(GROUP_MA='EFOND',
                                    FY=FYREP,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAIL,
                    AFFE=_F(TOUT='OUI',
                            MATER=MAT,),);

RESU1=MECA_STATIQUE(MODELE=MODMECA,
                    CHAM_MATER=CHMAT,
                    EXCIT=_F(CHARGE=CHARG1,),);



#
#**************************************************************
#
#  VALIDATION DE STANLEY
#  CALCUL DE CHAMPS AUX NOEUDS PAR ELEMENTS
#
#  WARNING: S'IL Y A DES ERREURS PRODUITES DANS LES LIGNES
#  QUI SUIVENT, PENSER A METTRE A JOUR STANLEY APRES CORRECTION
#**************************************************************
#

RESU1=CALC_CHAMP(reuse =RESU1,
                RESULTAT=RESU1,
                CONTRAINTE='SIGM_ELNO',);


#
#**************************************************************
#
#  VALIDATION DE STANLEY
#  CALCUL DE CHAMPS AUX NOEUDS
#
#  WARNING: S'IL Y A DES ERREURS PRODUITES DANS LES LIGNES
#  QUI SUIVENT, PENSER A METTRE A JOUR STANLEY APRES CORRECTION
#**************************************************************

RESU1=CALC_CHAMP(reuse =RESU1,
              RESULTAT=RESU1,
              CONTRAINTE='SIGM_NOEU',
              );


#
#**************************************************************
#
#  VALIDATION DE STANLEY
#  CALCUL DE CHAMPS  AUX POINTS DE GAUSS
#  EN ECLATANT VIA ECLA_PG
#
#  WARNING: S'IL Y A DES ERREURS PRODUITES DANS LES LIGNES
#  QUI SUIVENT, PENSER A METTRE A JOUR STANLEY APRES CORRECTION
#**************************************************************
#


MAILSTAN=CREA_MAILLAGE(ECLA_PG=_F(MODELE=MODMECA,
                                  SHRINK=0.9,
                                  TAILLE_MIN=0.0,
                                  NOM_CHAM='SIEF_ELGA',),
                       INFO=1,);

RESUSTAN=CREA_RESU(OPERATION='ECLA_PG',
                   TYPE_RESU='EVOL_ELAS',
                   ECLA_PG=_F(
                   NOM_CHAM='SIEF_ELGA',
                   MODELE_INIT=MODMECA,
                   GROUP_MA='V',
                   RESU_INIT=RESU1,
                   MAILLAGE=MAILSTAN,
                   PRECISION=0.001,
                   CRITERE='RELATIF',),);
#
#**************************************************************
#
#  VALIDATION DE STANLEY
#  AFFICHAGE DES RESULTATS SOUS GMSH
#
#  WARNING: S'IL Y A DES ERREURS PRODUITES DANS LES LIGNES
#  QUI SUIVENT, PENSER A METTRE A JOUR STANLEY APRES CORRECTION
#**************************************************************
#

DEFI_FICHIER(UNITE=55,
             FICHIER='./REPE_OUT/stanl01a.55',);

IMPR_RESU(FORMAT='GMSH',
          UNITE=55,
          RESU=_F(MAILLAGE=MAILSTAN,
                  RESULTAT=RESUSTAN,
                  NOM_CMP='SIXY',),);

DEFI_FICHIER(ACTION='LIBERER',
             UNITE=55,);

#
# TEST NON REGRESSION
#
TEST_FICHIER(FICHIER='./REPE_OUT/stanl01a.55',
             NB_VALE= 204833,
             VALE_CALC_K='a828fcdcdc224d816aa231090c8f89e4',
             INFO=1,);

#
#**************************************************************
#
#  VALIDATION DE STANLEY
#  POST TRAITEMENT AVEC XMGrace
#
#  LE POST TRAITEMENT S'EFFECTUE SUR UN CHEMIN EXISTANT (L1)
#
#  ON REPRODUIT ICI LA SEQUENCE DE COMMANDES PRODUITE
#  LORS D'UN POST TRAITEMENT SUR UN CHEMIN AVEC XMGrace
#
#  WARNING: S'IL Y A DES ERREURS PRODUITES DANS LES LIGNES
#  QUI SUIVENT, PENSER A METTRE A JOUR STANLEY APRES CORRECTION
#**************************************************************
#

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_MA=_F(NOM='CHEMIN',
                                 GROUP_MA='L1',),);

MODXM=AFFE_MODELE(MAILLAGE=MAIL,
                  AFFE=_F(GROUP_MA='CHEMIN',
                          PHENOMENE='MECANIQUE',
                          MODELISATION='BARRE',),);

RESUXM=PROJ_CHAMP(METHODE='COLLOCATION',
                  RESULTAT=RESU1,
                  MODELE_1=MODMECA,
                  MODELE_2=MODXM,
                  NOM_CHAM='SIGM_NOEU',);

MAIL=DEFI_GROUP(reuse =MAIL,
                MAILLAGE=MAIL,
                CREA_GROUP_NO=_F(OPTION='NOEUD_ORDO',
                                 NOM='OR1',
                                 GROUP_MA='CHEMIN',),);

POSTXM=POST_RELEVE_T(ACTION=_F(INTITULE='TB_GRACE',
                               GROUP_NO='OR1',
                               RESULTAT=RESUXM,
                               NOM_CHAM='SIGM_NOEU',
                               TOUT_CMP='OUI',
                               MOYE_NOEUD='OUI',
                               OPERATION='EXTRACTION',),);


TEST_TABLE(
           VALE_CALC=-2.0923588980471998E7,
           TOLE_MACHINE=1.E-3,
           NOM_PARA='SIXY',
           TYPE_TEST='MAX',
           TABLE=POSTXM,
           )

FIN();

