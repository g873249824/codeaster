# MODIF  DATE 18/01/2011   AUTEUR PROIX J-M.PROIX 
# RESPONSABLE PROIX J-M.PROIX
# TITRE : VARIATION TEMPERATURE DANS LE COMPORTEMENT 'ELAS' ISOTROPE sous COMP_INCR
# comp008a.para = tps_job 120 mem_job 64Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
#         MATERIAU ISOTROPE
# CAS-TEST DE REFERENCE : SSLS101E
#===================================================================== 

DEBUT(CODE=_F(NOM='COMP008A',NIV_PUB_WEB='INTERNET'),PAR_LOT='NON')

import numpy as N

MATER  = [None]*20
RESU   = [None]*20

TINF1=45
TSUP1=65.
T1=50
TR1=T1 + ( ( TSUP1 + TINF1 - ( 2. * T1 ) ) / 6. )

TINF2=70.
TSUP2=90.
T2=75.
TR2=T2 + ( ( TSUP2 + TINF2 - ( 2. * T2 ) ) / 6. )

TINF3=95.
TSUP3=115
T3=100.
TR3=T3 + ( ( TSUP3 + TINF3 - ( 2. * T3 ) ) / 6. )

TREF = TR1
T0   = TR1
Tmax = TR3

epsi = 1.E-10

ZERO =DEFI_CONSTANTE(VALE=0.0);

UN   =DEFI_CONSTANTE(VALE=1.0);

#=========================================================== 
#                  RELATION = 'ELAS'
#===========================================================
# 
# INITIALISATIONS

tmax = 1.

NCAL = 5

compor='ELAS'

#======================================================================
#               MATERIAU  FONCTION  DE  LA  TEMPERATURE
#======================================================================

E1=1.
E2=1.1
E3=1.2

 
YOUN=DEFI_FONCTION(  NOM_PARA='TEMP',
                     PROL_DROITE='LINEAIRE',
                     PROL_GAUCHE='LINEAIRE',
                     VALE=( TR1, E1,  TR2, E2,  TR3, E3, )  )

  
ALPH=DEFI_FONCTION(NOM_PARA='TEMP',VALE=(TR1, 1.0E-5,
                                         TR2, 1.5E-5,
                                         TR3, 2.0E-5,
                                         ),);

MATERI=DEFI_MATERIAU(ELAS_FO=_F(E=YOUN,
                                NU=ZERO,
                                TEMP_DEF_ALPHA=TREF,
                                ALPHA=ALPH,),
                                );

L_INST=DEFI_LIST_REEL(DEBUT=0.,
                      INTERVALLE=(_F(JUSQU_A=1.,
                                     NOMBRE=NCAL,),
                                     ),
                      );

TIMP=DEFI_FONCTION(NOM_PARA='INST',  NOM_RESU='TEMP',
                   VALE=(  0. , T0, 1. , Tmax)
                   )

U=SIMU_POINT_MAT(COMP_INCR=_F(RELATION=compor,),
                 MATER=MATERI,
                 SUPPORT='ELEMENT',
                   AFFE_VARC=(
                   _F(  NOM_VARC='TEMP',
                        VALE_FONC=TIMP,
                        VALE_REF=TREF),
                        ),
                 INCREMENT=_F(LIST_INST=L_INST,),
                 NEWTON=_F(PREDICTION='ELASTIQUE',
                           MATRICE='TANGENTE',
                           REAC_ITER=1,),
                 EPSI_IMPOSE=_F(EPXX=ZERO,),
                 INFO=1,);

IMPR_TABLE(TABLE=U,);


SXM = 0.
EXM = 0.

time = 0.


for i in range(NCAL):
          
          timem = time 
          
          time = timem + tmax/NCAL
            
          Ti = T0 + time/tmax * (Tmax - T0)
          
          Tm = T0 + timem/tmax * (Tmax - T0)
          
          # deformation mecanique imposee correspondant a la deformation thermique du premier calcul
          
          epsimp =DEFI_CONSTANTE(VALE=-ALPH(Ti)*(Ti - TREF));

          print 'i=',i, ' instant=', time, ' Temperature=',Ti
          
          # variation des coef du comportement avec la temperature
          # correction eventuelle des valeurs initiales du temps ti 
          
          if i > 0 :
             SXM = SXM *(YOUN(Ti)/YOUN(Tm))
             
          MATER[i]=DEFI_MATERIAU(ELAS =_F(E=YOUN(Ti), NU=0., ALPHA=0.),
                                );

          list = DEFI_LIST_REEL(DEBUT=timem,
                      INTERVALLE=(_F(JUSQU_A=time,NOMBRE=1,),),);
                                     
          RESU[i]=SIMU_POINT_MAT(COMP_INCR=_F(RELATION=compor,),
                                 MATER=MATER[i],
                                 SUPPORT='ELEMENT',
                                 INCREMENT=_F(LIST_INST = list, ),
                                 NEWTON=_F( PREDICTION='ELASTIQUE',
                                             MATRICE='TANGENTE',
                                             REAC_ITER=1,),
                                 EPSI_IMPOSE=_F(EPXX=epsimp),
                                 SIGM_INIT=_F(SIXX=SXM),
                                 EPSI_INIT=_F(EPXX=EXM, EPYY=0.,EPZZ=0.,EPXY=0.,
                                 EPXZ=0.,EPYZ=0.),
                                 INFO=1,);
                                 
          # recuperation des valeurs initiales du futur pas de temps dans la table resultat
          
          EXM = RESU[i]['EPXX',1]
             
          SXM = RESU[i]['SIXX',1]
          
          #IMPR_TABLE(TABLE=RESU[i]);
          
          DETRUIRE ( CONCEPT =  _F (NOM =epsimp),);
          DETRUIRE ( CONCEPT =  _F (NOM =list),);
          
          TEST_TABLE(TABLE=RESU[i],
                     NOM_PARA='VMIS',VALE=U['VMIS',i+1],
                     FILTRE=_F(NOM_PARA='INST',VALE=time),
                     REFERENCE='AUTRE_ASTER',);

          TEST_TABLE(TABLE=RESU[i],
                     NOM_PARA='TRACE',VALE=U['TRACE',i+1],
                     FILTRE=_F(NOM_PARA='INST',VALE=time),
                     REFERENCE='AUTRE_ASTER',);
FIN();
