# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# CAS D'UN FOND FERME CIRCULAIRE AVEC SYMETRIE DE LA FISSURE

import aster

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),PAR_LOT='NON',DEBUG=_F(SDVERI='OUI'))

M=LIRE_MAILLAGE(FORMAT='MED',)

FISS0=DEFI_FOND_FISS(MAILLAGE=M,
                   FOND_FISS=_F(TYPE_FOND='FERME',
                                GROUP_MA = 'LFF',
                                NOEUD_ORIG = 'N49',
                                MAILLE_ORIG = 'M3233',),
                   SYME='OUI',
                   LEVRE_SUP=_F(GROUP_MA = 'LEVINF',)
                  )


basefond0=FISS0.sdj.BASEFOND.get()

ndfon=[]
# listes des composantes des vecteurs normaux au plan de la fissure
vnorX=[]
vnorY=[]
vnorZ=[]
# listes des composantes des vecteurs de direction de propagation de
# la fissure
vdirX=[]
vdirY=[]
vdirZ=[]

for i in range(0,len(basefond0)/6):
  ndfon.append(i+1)
  vnorX.append(basefond0[6*i])
  vnorY.append(basefond0[6*i+1])
  vnorZ.append(basefond0[6*i+2])
  vdirX.append(basefond0[6*i+3])
  vdirY.append(basefond0[6*i+4])
  vdirZ.append(basefond0[6*i+5])

TABL0=CREA_TABLE(LISTE=(_F(LISTE_I=ndfon,PARA='ND_FOND'),
                        _F(LISTE_R=vnorX,PARA='VNORX'),
                        _F(LISTE_R=vnorY,PARA='VNORY') ,
                        _F(LISTE_R=vnorZ,PARA='VNORZ'),
                        _F(LISTE_R=vdirX,PARA='VDIRX'),
                        _F(LISTE_R=vdirY,PARA='VDIRY') ,
                        _F(LISTE_R=vdirZ,PARA='VDIRZ'),
                        ),);

# Calcul des valeurs analytiques des vecteurs de direction de
# propagation de fissure :
# Comme la fissure est un cercle ayant pour centre, l'origine du repere:
# les valeurs analytiques des vecteurs de direction de
# propagation de la fissure sont les coordonnees des noeuds du fond

vdirX_ana=[]
vdirY_ana=[]
vdirZ_ana=[]

# Noms des noeuds du maillage
t_noms_noeuds_maillage = aster.getvectjev('M'.ljust(8)+'.NOMNOE')
l_noms_noeuds_maillage = list(t_noms_noeuds_maillage)

l_numeros_noeuds_fissure = []
# Noms des noeuds du fond
l_noms_noeuds_fissure=FISS0.sdj.FOND_NOEU.get()

for i in range(0,len(ndfon)):
  nom = l_noms_noeuds_fissure[i]
  index = l_noms_noeuds_maillage.index(nom)
  l_numeros_noeuds_fissure.append(index)

  coor=aster.getvectjev('M'.ljust(8)+'.COORDO    .VALE        ',
                    l_numeros_noeuds_fissure[i]*3,3)
  norme=sqrt( coor[0]**2+coor[1]**2+coor[2]**2 )

  vdirX_ana.append(coor[0]/norme)
  vdirY_ana.append(coor[1]/norme)
  vdirZ_ana.append(coor[2]/norme)

VALE_CALC=[
1.7453283658984E-03,-6.109479332222E-17,-0.99999847691329,0.99999844722046,-1.3944936280514E-17,1.7622589700578E-03,
1.7453283401115E-03,-1.7189983753674E-04,-0.99999846213853,0.99518319621595,-0.098016989592780,1.7537732376056E-03,
1.7117923707433E-03,-3.4049667292713E-04,-0.99999847691329,0.98078375745991,-0.19509001908387,1.7622589700579E-03,
1.6782563507925E-03,-5.0909349825598E-04,-0.99999846213853,0.95693886409054,-0.29028423083685,1.7537732376056E-03,
1.6124731547649E-03,-6.6790824966628E-04,-0.99999847691329,0.92387809793005,-0.38268283814209,1.7622589700579E-03,
1.5466899110895E-03,-8.2672298134018E-04,-0.99999846213853,0.88191990807563,-0.47139601188312,1.7537732376057E-03,
1.4511874997342E-03,-9.6965248693799E-04,-0.99999847691329,0.83146832121354,-0.55556937034150,1.7622589700579E-03,
1.3556850454969E-03,-1.112581963883E-03,-0.99999846213853,0.77300926457975,-0.63439230855465,1.7537732376056E-03,
1.2341335229239E-03,-1.234133522924E-03,-0.99999847691329,0.70710568320560,-0.70710568320560,1.7622589700578E-03,
1.1125819638828E-03,-1.355685045497E-03,-0.99999846213853,0.63439230855465,-0.77300926457975,1.7537732376056E-03,
9.6965248693783E-04,-1.4511874997342E-03,-0.99999847691329,0.55556937034151,-0.83146832121354,1.7622589700578E-03,
8.2672298134001E-04,-1.5466899110895E-03,-0.99999846213853,0.47139601188312,-0.88191990807563,1.7537732376056E-03,
6.6790824966614E-04,-1.612473154765E-03,-0.99999847691329,0.38268283814209,-0.92387809793005,1.7622589700579E-03,
5.0909349825587E-04,-1.6782563507926E-03,-0.99999846213853,0.29028423083685,-0.95693886409054,1.7537732376057E-03,
3.4049667292732E-04,-1.7117923707434E-03,-0.99999847691329,0.19509001908387,-0.98078375745991,1.7622589700579E-03,
1.7189983753724E-04,-1.7453283401115E-03,-0.99999846213853,0.098016989592780,-0.99518319621595,1.7537732376057E-03,
3.0764237098811E-16,-1.7453283658984E-03,-0.99999847691329,-1.3247689466488E-16,-0.99999844722046,1.7622589700579E-03,
-1.7189983753662E-04,-1.7453283401115E-03,-0.99999846213853,-0.098016989592780,-0.99518319621595,1.7537732376056E-03,
-3.40496672927E-04,-1.7117923707433E-03,-0.99999847691329,-0.19509001908387,-0.98078375745991,1.7622589700578E-03,
-5.0909349825586E-04,-1.6782563507925E-03,-0.99999846213853,-0.29028423083685,-0.95693886409054,1.7537732376056E-03,
-6.6790824966615E-04,-1.6124731547649E-03,-0.99999847691329,-0.38268283814209,-0.92387809793005,1.7622589700578E-03,
-8.2672298134006E-04,-1.5466899110895E-03,-0.99999846213853,-0.47139601188312,-0.88191990807563,1.7537732376056E-03,
-9.6965248693787E-04,-1.4511874997342E-03,-0.99999847691329,-0.55556937034150,-0.83146832121354,1.7622589700578E-03,
-1.1125819638829E-03,-1.3556850454969E-03,-0.99999846213853,-0.63439230855465,-0.77300926457975,1.7537732376055E-03,
-1.2341335229239E-03,-1.2341335229239E-03,-0.99999847691329,-0.70710568320560,-0.70710568320560,1.7622589700578E-03,
-1.3556850454969E-03,-1.1125819638828E-03,-0.99999846213853,-0.77300926457975,-0.63439230855465,1.7537732376055E-03,
-1.4511874997341E-03,-9.6965248693783E-04,-0.99999847691329,-0.83146832121354,-0.55556937034151,1.7622589700577E-03,
-1.5466899110894E-03,-8.2672298134001E-04,-0.99999846213853,-0.88191990807563,-0.47139601188312,1.7537732376055E-03,
-1.6124731547649E-03,-6.6790824966614E-04,-0.99999847691329,-0.92387809793005,-0.38268283814209,1.7622589700578E-03,
-1.6782563507925E-03,-5.0909349825587E-04,-0.99999846213853,-0.95693886409054,-0.29028423083685,1.7537732376056E-03,
-1.7117923707434E-03,-3.4049667292701E-04,-0.99999847691329,-0.98078375745991,-0.19509001908387,1.7622589700578E-03,
-1.7453283401115E-03,-1.7189983753662E-04,-0.99999846213853,-0.99518319621595,-0.098016989592780,1.7537732376056E-03,
-1.7453283658984E-03,6.1325186287277E-17,-0.99999847691329,-0.99999844722046,1.3944936280514E-16,1.7622589700578E-03,
-1.7453283401115E-03,1.7189983753674E-04,-0.99999846213853,-0.99518319621595,0.098016989592780,1.7537732376056E-03,
-1.7117923707433E-03,3.4049667292713E-04,-0.99999847691329,-0.98078375745991,0.19509001908387,1.7622589700579E-03,
-1.6782563507925E-03,5.0909349825598E-04,-0.99999846213853,-0.95693886409054,0.29028423083685,1.7537732376056E-03,
-1.6124731547649E-03,6.6790824966628E-04,-0.99999847691329,-0.92387809793005,0.38268283814209,1.7622589700579E-03,
-1.5466899110895E-03,8.2672298134018E-04,-0.99999846213853,-0.88191990807563,0.47139601188312,1.7537732376057E-03,
-1.4511874997342E-03,9.6965248693799E-04,-0.99999847691329,-0.83146832121354,0.55556937034150,1.7622589700579E-03,
-1.3556850454969E-03,1.112581963883E-03,-0.99999846213853,-0.77300926457975,0.63439230855465,1.7537732376056E-03,
-1.2341335229239E-03,1.234133522924E-03,-0.99999847691329,-0.70710568320560,0.70710568320560,1.7622589700578E-03,
-1.1125819638828E-03,1.355685045497E-03,-0.99999846213853,-0.63439230855465,0.77300926457975,1.7537732376056E-03,
-9.6965248693783E-04,1.4511874997342E-03,-0.99999847691329,-0.55556937034151,0.83146832121354,1.7622589700578E-03,
-8.2672298134001E-04,1.5466899110895E-03,-0.99999846213853,-0.47139601188312,0.88191990807563,1.7537732376056E-03,
-6.6790824966614E-04,1.612473154765E-03,-0.99999847691329,-0.38268283814209,0.92387809793005,1.7622589700579E-03,
-5.0909349825587E-04,1.6782563507926E-03,-0.99999846213853,-0.29028423083685,0.95693886409054,1.7537732376057E-03,
-3.4049667292732E-04,1.7117923707434E-03,-0.99999847691329,-0.19509001908387,0.98078375745991,1.7622589700579E-03,
-1.7189983753724E-04,1.7453283401115E-03,-0.99999846213853,-0.098016989592780,0.99518319621595,1.7537732376057E-03,
-3.0787276395317E-16,1.7453283658984E-03,-0.99999847691329,1.3944936280514E-17,0.99999844722046,1.7622589700579E-03,
1.7189983753662E-04,1.7453283401115E-03,-0.99999846213853,0.098016989592780,0.99518319621595,1.7537732376056E-03,
3.40496672927E-04,1.7117923707433E-03,-0.99999847691329,0.19509001908387,0.98078375745991,1.7622589700578E-03,
5.0909349825586E-04,1.6782563507925E-03,-0.99999846213853,0.29028423083685,0.95693886409054,1.7537732376056E-03,
6.6790824966615E-04,1.6124731547649E-03,-0.99999847691329,0.38268283814209,0.92387809793005,1.7622589700578E-03,
8.2672298134005E-04,1.5466899110895E-03,-0.99999846213853,0.47139601188312,0.88191990807563,1.7537732376056E-03,
9.6965248693787E-04,1.4511874997342E-03,-0.99999847691329,0.55556937034151,0.83146832121354,1.7622589700578E-03,
1.1125819638829E-03,1.3556850454969E-03,-0.99999846213853,0.63439230855465,0.77300926457975,1.7537732376055E-03,
1.2341335229239E-03,1.2341335229239E-03,-0.99999847691329,0.70710568320560,0.70710568320560,1.7622589700577E-03,
1.3556850454969E-03,1.1125819638828E-03,-0.99999846213853,0.77300926457975,0.63439230855465,1.7537732376055E-03,
1.4511874997341E-03,9.6965248693782E-04,-0.99999847691329,0.83146832121354,0.55556937034150,1.7622589700577E-03,
1.5466899110894E-03,8.2672298134001E-04,-0.99999846213853,0.88191990807563,0.47139601188312,1.7537732376055E-03,
1.6124731547649E-03,6.6790824966614E-04,-0.99999847691329,0.92387809793005,0.38268283814209,1.7622589700578E-03,
1.6782563507925E-03,5.0909349825587E-04,-0.99999846213853,0.95693886409054,0.29028423083685,1.7537732376056E-03,
1.7117923707434E-03,3.4049667292701E-04,-0.99999847691329,0.98078375745991,0.19509001908387,1.7622589700578E-03,
1.7453283401115E-03,1.7189983753662E-04,-0.99999846213853,0.99518319621595,0.098016989592780,1.7537732376056E-03,
1.7453283658984E-03,-6.109479332222E-17,-0.99999847691329,0.99999844722046,-1.3944936280514E-17,1.7622589700578E-03
]

# Quand la fissure est definie avec un plan de symetrie,
# le vecteur de direction de propagation appartient au plan de
# la levre.
# Or,la levre definie n'est pas plane. Donc, la precision des
# resultats est alteree suivant l'axe Z pour vdir et comme
# la normale au plan de la fissure est calculee a partir de vdir,
# la precision de vnorx et/ou de vnory l'est egalement.

for i in range(0,len(ndfon)):

   if abs(vnorX[i])>=1.e-3:
     prec= 1.8e-3
   else :
     prec= 1.e-3

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VNORX',
              VALE_CALC=VALE_CALC[i*6+0],
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              PRECISION=prec,
              REFERENCE='ANALYTIQUE' )

   if abs(vnorY[i])>=1.e-3:
     prec= 1.8e-3
   else :
     prec= 1.e-3

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VNORY',
              VALE_CALC=VALE_CALC[i*6+1],
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              PRECISION=prec,
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VNORZ',
              VALE_CALC=VALE_CALC[i*6+2],
              VALE_REFE=-1.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VDIRX',
              VALE_CALC=VALE_CALC[i*6+3],
              VALE_REFE=vdirX_ana[i],
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VDIRY',
              VALE_CALC=VALE_CALC[i*6+4],
              VALE_REFE=vdirY_ana[i],
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VDIRZ',
              VALE_CALC=VALE_CALC[i*6+5],
              VALE_REFE=vdirZ_ana[i],
              CRITERE='ABSOLU',
              PRECISION=1.8e-3,
              REFERENCE='ANALYTIQUE' )

FIN();
