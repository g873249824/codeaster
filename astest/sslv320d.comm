# TITRE PROPAGATION PLANE D UNE FISSURE 3D SE DIVISANT ET FUSIONNANT AVEC X-FEM
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# person_in_charge: daniele.colombo at ifpen.fr

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),IGNORE_ALARM=('HOMARD0_9'),
      DEBUG=_F(SDVERI='OUI'),)

# ON IGNORE L'ALARM HOMARD0_9 CAR ON SAIT BIEN CE QU'ON FAIT ;-)

# METHODE MAILLAGE

# NUMBER OF PROPAGATION STEPS
nbcalc = 3
# INITIAL CRACK LENGTH
a0 = 4.0

Mod = [None]*(nbcalc+1)
FISS = [None]*(nbcalc+1)
MaFi = [None]*(nbcalc+1)
MATOT = [None]*(nbcalc+1)
LSN = [None]*(nbcalc+1)
LST = [None]*(nbcalc+1)

MeshH = [None]*(nbcalc+1)
ModH = [None]*(nbcalc+1)
FISSH = [None]*(nbcalc+1)
LSNH = [None]*(nbcalc+1)
LSTH = [None]*(nbcalc+1)

MODX = [None]*(nbcalc+1)

# UN FOND
SIF=CREA_TABLE(LISTE=(_F(LISTE_R=(1.,1.),PARA='K1'),
                        _F(LISTE_R=(0.,0.),PARA='K2'),
                        _F(LISTE_R=(0.,0.),PARA='K3'),
                        _F(LISTE_R=(1.,1.),PARA='G'),
                        _F(LISTE_R=(1.,1.),PARA='G_IRWIN'),
                        _F(LISTE_I=(1,1),PARA='NUME_FOND'),
                        _F(LISTE_I=(1,1),PARA='NUME_ORDRE'),
                        _F(LISTE_I=(1,2),PARA='NUM_PT'),
                        _F(LISTE_R=(0.,30.),PARA='ABSC_CURV'),))

# QUATRE FONDS
SIF4=CREA_TABLE(LISTE=(_F(LISTE_R=(1.,1.,1.,1.,1.,1.,1.,1.),PARA='K1'),
                       _F(LISTE_R=(0.,0.,0.,0.,0.,0.,0.,0.),PARA='K2'),
                       _F(LISTE_R=(0.,0.,0.,0.,0.,0.,0.,0.),PARA='K3'),
                       _F(LISTE_R=(1.,1.,1.,1.,1.,1.,1.,1.),PARA='G'),
                       _F(LISTE_R=(1.,1.,1.,1.,1.,1.,1.,1.),PARA='G_IRWIN'),
                       _F(LISTE_I=(1,1,2,2,3,3,4,4),PARA='NUME_FOND'),
                       _F(LISTE_I=(1,1,1,1,1,1,1,1),PARA='NUME_ORDRE'),
                       _F(LISTE_I=(1,2,1,2,1,2,1,2),PARA='NUM_PT'),
                       _F(LISTE_R=(0.,15.,0.,15.,0.,15.,0.,15.),PARA='ABSC_CURV'),))

#----------------------------------------------
#                 MAILLAGE
#----------------------------------------------

MA=LIRE_MAILLAGE(INFO=1,
                 FORMAT='MED',);


#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

E=70656
nu=0.34
Alu=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,),);


#----------------------------------------------
#              FISSURE INITIALE
#----------------------------------------------

MaFi[0]=CO('MaFi_0')
MATOT[0]=CO('MATOT_0')
PROPA_FISS(METHODE_PROPA='INITIALISATION',
           MAIL_STRUC=MA,
           MAIL_FISS = MaFi[0],
           MAIL_TOTAL = MATOT[0],
           FORM_FISS='DEMI_PLAN',
           GROUP_MA_FISS='FISS',
           GROUP_MA_FOND='FOND',
           INFO=1,
           POINT_ORIG = (0., a0, 5.),
           POINT_EXTR = (30., a0, 5.),
           DTAN = (0., 1., 0.),
           NB_POINT_FOND=10,
           );

#----------------------------------------------
#                   MODELE
#----------------------------------------------

Mod=AFFE_MODELE(MAILLAGE=MATOT[0],
                AFFE=(_F(
                         GROUP_MA='Vol',
                         PHENOMENE='MECANIQUE',
                         MODELISATION='3D',),),);

#----------------------------------------------
#           CREATION DES LEVEL SET
#----------------------------------------------

FISS[0]=DEFI_FISS_XFEM(MAILLAGE=MATOT[0],
                       DEFI_FISS=_F(GROUP_MA_FISS='FISS_'+str(0),
                                    GROUP_MA_FOND='FOND_'+str(0)),
                        );


LSN[0]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                  OPERATION='EXTR',
                  FISSURE=FISS[0],
                  NOM_CHAM='LNNO',);
LST[0]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                  OPERATION='EXTR',
                  FISSURE=FISS[0],
                  NOM_CHAM='LTNO',);

#----------------------------------------------
#                  PROPAGATION
#----------------------------------------------

# AVANCEE IMPOSEE
da=12.0

L_INS1=DEFI_LIST_REEL(DEBUT=0.0,INTERVALLE=_F(JUSQU_A=3.0,NOMBRE=3,),);
RI = 0.2
RS = 1.0

# NUMBER OF REFINEMENT STEPS BY HOMARD
infit = 2
rayon_raff = 2.0*RS
rayon_deraff = rayon_raff+1.0*da
rayon_calcG_fitt = rayon_raff+da

MeH = [None]*(infit+1)
LSNHT = [None]*(infit+1)
LSTHT = [None]*(infit+1)
CHERR = [None]*(infit+1)

NBFOND=[1,2,1]

for i in range(nbcalc) :

#  STEP 1: MESH REFINEMENT

   for j in range(infit) :

      if (j == 0) :
         LSNHT[0] = LSN[i]
         LSTHT[0] = LST[i]
         CHERR[0] = RAFF_XFEM(FISSURE=FISS[i])

# creation des listes des groupes surfaciques et lineiques correspondants a la fissure
         list_FISS = []
         list_FOND = []
         for k in range(i+1) :
           list_FISS.append('FISS_'+str(k))
           list_FOND.append('FOND_'+str(k))
           for l in range(NBFOND[i]) :
             list_FOND.append('FD_'+str(k)+'_'+str(l)) 
# destruction des groupes surfaciques et lineiques correspondants a la fissure
         MATOT[i]=DEFI_GROUP(reuse=MATOT[i],
                             MAILLAGE=MATOT[i],
                             DETR_GROUP_MA=(_F(NOM=list_FISS),
                                            _F(NOM=list_FOND),),);
         MeH[0] =MATOT[i]

      MeH[j+1]=CO('MeH_%d'%(j+1))
      LSNHT[j+1]=CO('LSNHT_%d'%(j+1))
      LSTHT[j+1]=CO('LSTHT_%d'%(j+1))
      CHERR[j+1]=CO('CHERR_%d'%(j+1))

      MACR_ADAP_MAIL(ADAPTATION='RAFF_DERA',
                     MAILLAGE_N=MeH[j],
                     MAILLAGE_NP1=MeH[j+1],
                     CHAM_GD=CHERR[j],
                     USAGE_CMP='RELATIF',
                     CRIT_RAFF_ABS=-1*rayon_raff,
                     CRIT_DERA_ABS=-1*rayon_deraff,
                     NIVE_MAX=infit,
                     MAJ_CHAM=(_F(CHAM_GD=LSNHT[j],
                                  TYPE_CHAM='NOEU_NEUT_R',
                                  CHAM_MAJ=LSNHT[j+1],),
                               _F(CHAM_GD=LSTHT[j],
                                  TYPE_CHAM='NOEU_NEUT_R',
                                  CHAM_MAJ=LSTHT[j+1],),
                               _F(CHAM_GD=CHERR[j],
                                  TYPE_CHAM='NOEU_NEUT_R',
                                  CHAM_MAJ=CHERR[j+1],),),
                     ); 
 
   MeshH[i] = ASSE_MAILLAGE(MAILLAGE_1 = MeH[j+1],
                            MAILLAGE_2 = MaFi[i],
                            OPERATION='SUPERPOSE')    

   ModH[i] = AFFE_MODELE(MAILLAGE=MeshH[i],
                         AFFE=(_F(
                         GROUP_MA='Vol',
                         PHENOMENE='MECANIQUE',
                         MODELISATION='3D',),),);

   FISSH[i] = DEFI_FISS_XFEM(MAILLAGE=MeshH[i],
                             DEFI_FISS=_F(GROUP_MA_FISS='FISS_'+str(i),
                                          GROUP_MA_FOND='FOND_'+str(i)),
                             GROUP_MA_ENRI='Vol',)

   LSNH[i]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                       OPERATION='EXTR',
                       FISSURE=FISSH[i],
                       NOM_CHAM='LNNO',);
   LSTH[i]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                       OPERATION='EXTR',
                       FISSURE=FISSH[i],
                       NOM_CHAM='LTNO',);

   for j in range(0,infit+1) :
      DETRUIRE(CONCEPT=_F(NOM=MeH[j],))
      DETRUIRE(CONCEPT=_F(NOM=LSNHT[j],))
      DETRUIRE(CONCEPT=_F(NOM=LSTHT[j],))
      DETRUIRE(CONCEPT=_F(NOM=CHERR[j],))


#  STEP 2: RESOLUTION OF THE REFINED MODEL

   MatRaf=AFFE_MATERIAU(MAILLAGE=MeshH[i],
                        MODELE=ModH[i],
                        AFFE=_F(GROUP_MA='Vol',
                                MATER=Alu,),);

   MODX[i]=MODI_MODELE_XFEM(MODELE_IN=ModH[i],FISSURE=FISSH[i],INFO=1,);


   DETRUIRE(CONCEPT=_F(NOM=MatRaf,),INFO=1,)



# STEP 3: CRACK PROPAGATION ON THE REFINED MODEL

   MATOT[i+1]=CO('MATOT_%d'%(i+1));
   MaFi[i+1]=CO('MaFi_%d'%(i+1));

   if ( i == 1 ) :
      PROPA_FISS(
                 METHODE_PROPA='MAILLAGE',
                 MAIL_STRUC = MA,
                 MAIL_TOTAL = MATOT[i+1],
                 ITERATION = i+1,
                 FISSURE=_F(FISS_ACTUELLE=FISSH[i],
                            MAIL_ACTUEL =  MaFi[i],
                            MAIL_PROPAGE = MaFi[i+1],
                            TABLE=SIF4,),
                 DA_MAX=da,
                 LOI_PROPA=_F(LOI='PARIS',
                              C=3.,
                              M=1.1E-8,
                              MATER=Alu),
                 COMP_LINE=_F(COEF_MULT_MINI=0.,
                              COEF_MULT_MAXI=1.,),
                 CRIT_ANGL_BIFURCATION = 'PLAN',
                 INFO=1,);

   else :

      PROPA_FISS(
                 METHODE_PROPA='MAILLAGE',
                 MAIL_STRUC = MA,
                 MAIL_TOTAL = MATOT[i+1],
                 ITERATION = i+1,
                 FISSURE=_F(FISS_ACTUELLE=FISSH[i],
                            MAIL_ACTUEL =  MaFi[i],
                            MAIL_PROPAGE = MaFi[i+1],
                            TABLE=SIF,),
                 DA_MAX=da,
                 LOI_PROPA=_F(LOI='PARIS',
                              C=3.,
                              M=1.1E-8,
                              MATER=Alu),
                 COMP_LINE=_F(COEF_MULT_MINI=0.,
                              COEF_MULT_MAXI=1.,),
                 CRIT_ANGL_BIFURCATION = 'PLAN',
                 INFO=1,);
      
   DETRUIRE(CONCEPT=_F(NOM=Mod,)); 
   Mod=AFFE_MODELE(MAILLAGE=MATOT[i+1],
                   AFFE=_F(GROUP_MA='Vol',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='3D',),);

   if ( i < nbcalc-1 ) :
      FISS[i+1]=DEFI_FISS_XFEM(MAILLAGE=MATOT[i+1],
                               DEFI_FISS=_F(GROUP_MA_FISS='FISS_'+str(i+1),
                                            GROUP_MA_FOND='FOND_'+str(i+1)),
                               );

      
      LSN[i+1]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                          OPERATION='EXTR',
                          FISSURE=FISS[i+1],
                          NOM_CHAM='LNNO',);
      LST[i+1]=CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                          OPERATION='EXTR',
                          FISSURE=FISS[i+1],
                          NOM_CHAM='LTNO',);

#----------------------------------------------
#         POST TRAITEMENT
#----------------------------------------------

# FISS[1]

# RECUPERATION DE LA TABLE CONTENANT LE NOMBRE DE FONDS DE FISSURE
NB_FOND1=RECU_TABLE(CO=FISS[1],NOM_TABLE='NB_FOND_FISS')

# RECUPERATION DE LA TABLE DES COORDONNEES DES FONDS DE FISSURE
TB_FOND1=RECU_TABLE(CO=FISS[1],NOM_TABLE='FOND_FISS')

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=4,
           VALE_REFE_I=4,
           NOM_PARA='NOMBRE',
           TYPE_TEST='MAX',
           TABLE=NB_FOND1,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-2,
           VALE_CALC=16.000000000,
           VALE_REFE=16.0,
           NOM_PARA='COOR_Y',
           TYPE_TEST='MAX',
           TABLE=TB_FOND1,)

# FISS[2]

# RECUPERATION DE LA TABLE CONTENANT LE NOMBRE DE FONDS DE FISSURE
NB_FOND2=RECU_TABLE(CO=FISS[2],NOM_TABLE='NB_FOND_FISS')

# RECUPERATION DE LA TABLE DES COORDONNEES DES FONDS DE FISSURE
TB_FOND2=RECU_TABLE(CO=FISS[2],NOM_TABLE='FOND_FISS')

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=1,
           VALE_REFE_I=1,
           NOM_PARA='NOMBRE',
           TYPE_TEST='MAX',
           TABLE=NB_FOND2,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-2,
           VALE_CALC=28.000000000,
           VALE_REFE=28.0,
           NOM_PARA='COOR_Y',
           TYPE_TEST='MAX',
           TABLE=TB_FOND2,)

FIN();
