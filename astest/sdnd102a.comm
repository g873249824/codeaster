# TITRE TEST DU MULTI-APPUIS SUR UN SYSTEME MASSES-RESSORTS NON LINEAIRE
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# ----------------------------------------------------------------------
# COMPARAISON DE LA REPONSE D'UN SYSTEME A UN DDL BUTANT CONTRE UNE
# PAROI FIXE ET CELLE DE DEUX SYSTEMES A UN DDL , L'UN SOUMIS A GAMMA,
#  L'AUTRE SOUMIS A -GAMMA, POUVANT BUTER L'UN CONTRE L'AUTRE
#
# ----------------------------------------------------------------------
# REF: PAS DE REF BIBLIO MAIS CALCUL ANALYTIQUE
# ----------------------------------------------------------------------

DEBUT(CODE=_F( NOM = 'SDND102A',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MAILLAGE=LIRE_MAILLAGE( )

MAILLA2=LIRE_MAILLAGE(  UNITE=19 )

MODELE=AFFE_MODELE(  MAILLAGE=MAILLAGE,AFFE=(
              _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_T',
                     GROUP_MA = 'RESSORT'),
                   _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_T',
                     GROUP_NO = 'MASSES'))
                    )

BICHOC=AFFE_MODELE(  MAILLAGE=MAILLA2,AFFE=(
              _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_T',
                     GROUP_MA = 'RESSORTS'),
                   _F(  PHENOMENE = 'MECANIQUE', MODELISATION = 'DIS_T',
                     GROUP_NO = ( 'MASSES1', 'MASSES2',)))
                    )

#
CARA_ELE=AFFE_CARA_ELEM(  MODELE=MODELE,DISCRET=(
           _F(  CARA = 'K_T_D_L',  REPERE = 'GLOBAL', GROUP_MA = 'RESSORT',
                     VALE = (98696., 0., 0., )),
           _F(  CARA = 'M_T_L',  REPERE = 'GLOBAL', GROUP_MA = 'RESSORT',
                     VALE = (0.,0.,0.,0.,0.,0.,0.,0.,0.,
                     0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,)),
                   _F(  CARA = 'M_T_D_N',  GROUP_NO = 'MASSES', VALE = 25.))
                         )

CARA_BIC=AFFE_CARA_ELEM(  MODELE=BICHOC,DISCRET=(
           _F(  CARA = 'K_T_D_L',  REPERE = 'GLOBAL', GROUP_MA = 'RESSORTS',
                     VALE = (98696., 0., 0., )),
           _F(  CARA = 'M_T_L',  REPERE = 'GLOBAL', GROUP_MA = 'RESSORTS',
                     VALE = (0.,0.,0.,0.,0.,0.,0.,0.,0.,
                     0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,)),
                   _F(  CARA = 'M_T_D_N',  GROUP_NO = 'MASSES1', VALE = 25.),
                   _F(  CARA = 'M_T_D_N',  GROUP_NO = 'MASSES2', VALE = 25.))
                         )

#
CON_LIM=AFFE_CHAR_MECA(  MODELE=MODELE,DDL_IMPO=(
#   LES DEPL_IMPO SONT DEFINIS DANS LE REPERE GLOBAL --
              _F(  GROUP_NO = 'ENCASTRE',  DX = 0.,  DY = 0.,  DZ = 0.),
              _F(  GROUP_NO = 'MASSES', DY = 0.,  DZ = 0.))
                       )

CL_BICHO=AFFE_CHAR_MECA(  MODELE=BICHOC,DDL_IMPO=(
              _F(  GROUP_NO = 'ENCBICHO',    DX = 0.,  DY = 0.,  DZ = 0.),
              _F(  GROUP_NO = ( 'MASSES1', 'MASSES2',), DY = 0.,  DZ = 0.))
                       )

#
ASSEMBLAGE(  MODELE=MODELE,   CHARGE=CON_LIM,   CARA_ELEM=CARA_ELE,
                   NUME_DDL=CO("NUMEDDL"),MATR_ASSE=(
                 _F(  MATRICE = CO("RIGIDITE"),  OPTION = 'RIGI_MECA'),
                           _F(  MATRICE = CO("MASSE"),  OPTION = 'MASS_MECA'))
               )

ASSEMBLAGE(  MODELE=BICHOC,   CHARGE=CL_BICHO,   CARA_ELEM=CARA_BIC,
                   NUME_DDL=CO("NUMDDLC"),MATR_ASSE=(
                 _F(  MATRICE = CO("RIGI_BIC"),  OPTION = 'RIGI_MECA'),
                           _F(  MATRICE = CO("MASS_BIC"), OPTION = 'MASS_MECA'))
               )

#
# CALCUL DES MODES AVEC BLOCAGE DES ANCRAGES:
#---------------------------------------------
MODE_MEC=MODE_ITER_SIMULT(  MATR_RIGI=RIGIDITE,   MATR_MASS=MASSE )


MODE_MEC=NORM_MODE(reuse=MODE_MEC,  MODE=MODE_MEC,   NORME='MASS_GENE' )

MODE_BIC=MODE_ITER_SIMULT(  MATR_RIGI=RIGI_BIC,   MATR_MASS=MASS_BIC,
                  METHODE='JACOBI',
                   OPTION='SANS',
                 CALC_FREQ=_F(  OPTION = 'BANDE',  FREQ = (1., 10., ))
                            )

MODE_BIC=NORM_MODE(reuse=MODE_BIC,  MODE=MODE_BIC,   NORME='MASS_GENE' )

#
# CALCUL DES MODES STATIQUES AUX POINTS D'ANCRAGE:
#-------------------------------------------------
MODE_STA=MODE_STATIQUE(  MATR_RIGI=RIGIDITE,   MATR_MASS=MASSE,
                          MODE_STAT=_F(  TOUT = 'OUI', AVEC_CMP = 'DX') )

MSTA_BIC=MODE_STATIQUE(  MATR_RIGI=RIGI_BIC,   MATR_MASS=MASS_BIC,
                          MODE_STAT=_F(  TOUT = 'OUI', AVEC_CMP = 'DX') )

#
# DESCRIPTION DES PAS DE CALCUL
#------------------------------
L_INST=DEFI_LIST_REEL(  DEBUT=0.,
                           INTERVALLE=_F(  JUSQU_A = 1., PAS = 0.0001) )

#
# DESCRIPTION DES ACCELEROGRAMMES:
#---------------------------------
OMEGAA=2.*pi*10.

ACCE1 = FORMULE(NOM_PARA='INST',VALE='sin(OMEGAA*INST) ')
ACCELER1=CALC_FONC_INTERP( FONCTION=ACCE1, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                               PROL_DROITE='LINEAIRE',
                              PROL_GAUCHE='LINEAIRE',
                               NOM_RESU='ACCE'       )

ACCE2 = FORMULE(NOM_PARA='INST',VALE='- sin(OMEGAA*INST) ')
ACCELER2=CALC_FONC_INTERP( FONCTION=ACCE2, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                               PROL_DROITE='LINEAIRE',
                              PROL_GAUCHE='LINEAIRE',
                               NOM_RESU='ACCE'       )

#
# INTEGRATION DES ACCELEROGRAMMES:
#---------------------------------

VITE1 = FORMULE(NOM_PARA='INST',VALE='-cos(OMEGAA*INST)/OMEGAA ')
VITESSE1=CALC_FONC_INTERP( FONCTION=VITE1, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                       PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      NOM_RESU='VITE'       )

DEPL1 = FORMULE(NOM_PARA='INST',VALE='-sin(OMEGAA*INST)/(OMEGAA**2) ')
DEPLACE1=CALC_FONC_INTERP( FONCTION=DEPL1, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                       PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      NOM_RESU='DEPL'       )

#
VITE2 = FORMULE(NOM_PARA='INST',VALE='cos(OMEGAA*INST)/OMEGAA ')
VITESSE2=CALC_FONC_INTERP( FONCTION=VITE2, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                       PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      NOM_RESU='VITE'       )

DEPL2 = FORMULE(NOM_PARA='INST',VALE='sin(OMEGAA*INST)/(OMEGAA**2) ')
DEPLACE2=CALC_FONC_INTERP( FONCTION=DEPL2, LIST_PARA=L_INST,
NOM_PARA = 'INST',
                       PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      NOM_RESU='DEPL'       )

#
#=======================================================================
# 1/ ON ETUDIE LE SYSTEME A 1 DDL
#       ACCE_IMPO = ACCELER1 (SIN(OMEGAA*T)) EN X=0
#----------------------------------------------------------------------
#
MONO_X=CALC_CHAR_SEISME(  MATR_MASS=MASSE,   DIRECTION=( 1., 0., 0.,),
                              MONO_APPUI='OUI' )

#
# PROJECTION DES MATRICES MET K SUR LA BASE MODALE
#-------------------------------------------------
PROJ_BASE(BASE=MODE_MEC,
          STOCKAGE='DIAG',
          MATR_ASSE_GENE=(
          _F( MATRICE = CO("MASS_GEN"), MATR_ASSE = MASSE),
          _F( MATRICE = CO("RIGI_GEN"), MATR_ASSE = RIGIDITE)),
          VECT_ASSE_GENE=_F( VECTEUR = CO("VECT_X"), VECT_ASSE = MONO_X)
         )

#
# DEFINITION DE L'OBSTACLE
# LIMITE LES DEPLACEMENTS EN X ABSOLU (Z LOCAL)
#-----------------------------------------------
MUR=DEFI_OBSTACLE(   TYPE='PLAN_Z' )

#
TRAN_GE1=DYNA_VIBRA( TYPE_CALCUL='TRAN',
                     BASE_CALCUL='GENE',
                 MATR_MASS=MASS_GEN,   MATR_RIGI=RIGI_GEN,
                SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                AMOR_MODAL=_F(AMOR_REDUIT=0.07,),
                MODE_STAT=MODE_STA,
               EXCIT=_F(  VECT_ASSE_GENE = VECT_X,  ACCE = ACCELER1,
                       VITE = VITESSE1,  DEPL = DEPLACE1,
                       MULT_APPUI = 'OUI',
                       DIRECTION = ( 1., 0., 0.,),
                       NOEUD = 'NO1'),
# CONDITION DE CHOC D'UN NOEUD PAR RAPPORT A UN OBSTACLE
# IMMOBILE DANS LE REFERENTIEL ABSOLU
               CHOC=_F(  GROUP_NO_1 = 'MASSES',
                      OBSTACLE = MUR,
                      INTITULE = 'NO2/MUR',
                      ORIG_OBST = ( -1., 0., 0., ),
                      NORM_OBST = (0., 0., 1.,),
                      JEU = 1.1005,
                      RIGI_NOR = 5.76E7,
                      AMOR_NOR = 0.,
                      RIGI_TAN = 0.,
                      FROTTEMENT='COULOMB',
                      COULOMB = 0.0),
                INCREMENT=_F( INST_INIT = 0.,  INST_FIN = 1.,  PAS = 0.0002),
               ARCHIVAGE=_F(  PAS_ARCH = 8)
                          )

#
#=======================================================================
# 2/ ON ETUDIE LE SYSTEME A 2 DDL
#       ACCE_IMPO = ACCELER1 (SIN(OMEGAA*T)) EN X=0 NO1
#       ACCE_IMPO = ACCELER2 (-SIN(OMEGAA*T)) EN X=1 NO11
#----------------------------------------------------------------------
#
MULT_X1=CALC_CHAR_SEISME(  MATR_MASS=MASS_BIC,  DIRECTION=( 1., 0., 0.,),
                             MODE_STAT=MSTA_BIC,   NOEUD='NO1' )

MULT_X2=CALC_CHAR_SEISME(  MATR_MASS=MASS_BIC,   DIRECTION=( 1., 0., 0.,),
                             MODE_STAT=MSTA_BIC,   NOEUD='NO11' )

#
# PROJECTION DES MATRICES MET K SUR LA BASE MODALE
#-------------------------------------------------
PROJ_BASE(BASE=MODE_BIC,MATR_ASSE_GENE=(
          _F( MATRICE = CO("MGEN_BIC"), MATR_ASSE = MASS_BIC),
          _F( MATRICE = CO("RGEN_BIC"), MATR_ASSE = RIGI_BIC)),VECT_ASSE_GENE=(
          _F( VECTEUR = CO("VECT_X1"), VECT_ASSE = MULT_X1),
          _F( VECTEUR = CO("VECT_X2"), VECT_ASSE = MULT_X2))
         )

#
# DEFINITION DE L'OBSTACLE ENTRE DEUX POINTS
# LIMITE LES DEPLACEMENTS EN X ABSOLU (Z LOCAL)
#-----------------------------------------------
GRILLE=DEFI_OBSTACLE(   TYPE='BI_PLAN_Z' )

#
TRAN_GE2=DYNA_VIBRA(  TYPE_CALCUL='TRAN',
                     BASE_CALCUL='GENE',
                     MATR_MASS=MGEN_BIC,   MATR_RIGI=RGEN_BIC,
                 SCHEMA_TEMPS=_F(SCHEMA='EULER',),
                 AMOR_MODAL=_F(AMOR_REDUIT=( 0.07,  0.07, ),),
                 MODE_STAT=MSTA_BIC,
                EXCIT=(
                _F(  VECT_ASSE_GENE = VECT_X1,  ACCE = ACCELER1,
                       MULT_APPUI = 'OUI',
                       DIRECTION = ( 1., 0., 0.,), NOEUD = 'NO1',
                       VITE = VITESSE1, DEPL = DEPLACE1),
                _F(  VECT_ASSE_GENE = VECT_X2,  ACCE = ACCELER2,
                       MULT_APPUI = 'OUI',
                       DIRECTION = ( 1., 0., 0.,), NOEUD = 'NO11',
                       VITE = VITESSE2, DEPL = DEPLACE2)),
# CONDITION DE CHOC ENTRE LE NOEUD 2 ET LE NOEUD 12
# TEST SUR LA DIFFERENCE DES DEPLACEMENTS ABSOLUS
                CHOC=_F(  GROUP_NO_1 = 'MASSES1',
                       GROUP_NO_2 = 'MASSES2',
                       OBSTACLE = GRILLE,
                       INTITULE = 'NO2/NO12',
                       NORM_OBST = (0., 0., 1.,),
                       DIST_1 = 0.4495,
                       DIST_2 = 0.4495,
                       RIGI_NOR = 2.88E7,
                       AMOR_NOR = 0.,
                       RIGI_TAN = 0.,
                       FROTTEMENT='COULOMB',
                       COULOMB = 0.),
                 INCREMENT=_F( INST_INIT = 0.,  INST_FIN = 1.,  PAS = 0.00025),
                ARCHIVAGE=_F(  PAS_ARCH = 8)
                )

#
# RESTITUTION DES DEPLACEMENTS SUR LA BASE PHYSIQUE
# -------------------------------------------------
LISTIMP=DEFI_LIST_REEL(  DEBUT=0.,
                    INTERVALLE=_F(  JUSQU_A = 1.,  NOMBRE = 500))

RESUA1=REST_GENE_PHYS(  RESU_GENE=TRAN_GE1,
                          LIST_INST=LISTIMP,
                          INTERPOL='LIN',
                          NOM_CHAM='DEPL',
                         MULT_APPUI='OUI'
                       )

RESUR1=REST_GENE_PHYS(  RESU_GENE=TRAN_GE1,
                          LIST_INST=LISTIMP,
                          INTERPOL='LIN',
                          NOM_CHAM='DEPL',
                       )

#
# RECUPERATION DES DEPL ABSOLUS CALCULES
#----------------------------------------
NO2_DXA=RECU_FONCTION(  NOEUD='NO2',  NOM_CMP='DX',  NOM_CHAM='DEPL',
                           RESULTAT=RESUA1,
                           LIST_INST=LISTIMP,   INTERPOL='LIN' )

NO2_DX_A=RECU_FONCTION(  NOEUD='NO2',  NOM_CMP='DX',  NOM_CHAM='DEPL',
                            RESU_GENE=TRAN_GE2,
                          MULT_APPUI='OUI',        INTERP_NUME='LIN',
                           LIST_INST=LISTIMP,   INTERPOL='LIN' )

#
# RECUPERATION DES DEPL RELATIFS CALCULES
#----------------------------------------
NO2_DX_R=RECU_FONCTION(  NOEUD='NO12',  NOM_CMP='DX',  NOM_CHAM='DEPL',
                            RESU_GENE=TRAN_GE2,
                          INTERP_NUME='LIN',
                           LIST_INST=LISTIMP,   INTERPOL='LIN' )

NO2_DXR=RECU_FONCTION(  NOEUD='NO2',  NOM_CMP='DX',  NOM_CHAM='DEPL',
                           RESULTAT=RESUR1,
                           LIST_INST=LISTIMP,   INTERPOL='LIN' )

#
# TESTS
#------
DIFF=CALC_FONCTION(COMB=(
               _F(  FONCTION = NO2_DX_A,  COEF = 1.),
               _F(  FONCTION = NO2_DXA,   COEF = -1.))
                    )

TEST_FONCTION(VALEUR=(_F(VALE_CALC=5.89E-07,
                         VALE_REFE=0.0,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=3.0E-05,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.1,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-1.89E-06,
                         VALE_REFE=0.0,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=3.0E-05,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.3,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=-1.56E-07,
                         VALE_REFE=0.0,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=3.0E-05,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.5,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=1.82E-06,
                         VALE_REFE=0.0,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=3.0E-05,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.7,
                         FONCTION=DIFF,),
                      _F(VALE_CALC=1.72E-06,
                         VALE_REFE=0.0,
                         REFERENCE='AUTRE_ASTER',
                         PRECISION=3.0E-05,
                         CRITERE='ABSOLU',
                         VALE_PARA=1.0,
                         FONCTION=DIFF,),
                      ),
              )

TEST_FONCTION(VALEUR=(_F(VALE_CALC=-3.5808200000000002E-4,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.05,
                         FONCTION=NO2_DX_A,),
                      _F(VALE_CALC=-1.22321E-4,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.156,
                         FONCTION=NO2_DX_A,),
                      _F(VALE_CALC=-1.8876E-4,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.25,
                         FONCTION=NO2_DX_A,),
                      _F(VALE_CALC=-1.89772E-4,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.4,
                         FONCTION=NO2_DX_A,),
                      _F(VALE_CALC=-6.84454E-05,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.5,
                         FONCTION=NO2_DX_A,),
                      _F(VALE_CALC=-1.11982E-4,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.8,
                         FONCTION=NO2_DX_A,),
                      _F(VALE_CALC=-1.20103E-4,
                         CRITERE='ABSOLU',
                         VALE_PARA=0.9,
                         FONCTION=NO2_DX_A,),
                      _F(VALE_CALC=-1.07178E-4,
                         CRITERE='ABSOLU',
                         VALE_PARA=1.0,
                         FONCTION=NO2_DX_A,),
                      ),
              )

#
FIN()
#
