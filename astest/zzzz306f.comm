# TITRE VALIDATION DE PROJ_CHAMP / METHODE='ECLA_PG' (ROUTINES ECLA2D ET ECLA3D)
# ======================================================================
# COPYRIGHT (C) 1991 - 2015  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# ==============================================================================
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'),)

#----------------------------------------------------------------------------------
# L'OBJECTIF DE CE TEST EST DE VALIDER LA PROGRAMMATION DES ROUTINES
# ECLA2D.F ET ECLA3D.F POUR TOUS LES SCHEMAS DE POINTS DE GAUSS DISPONIBLES.
#
# POUR CELA, ON CREE UN CHAMP 'ELGA' ANALYTIQUE ET ON VERIFIE QU'APRES PROJECTION
# DE CE CHAMP DU MAILLAGE SUR LUI MEME, LES VALEURS RESTENT IDENTIQUES.
#
# MODELISATION F : XFEM
#   TETRAEDRE / FPG12
#
#----------------------------------------------------------------------------------

MAILLAGE = LIRE_MAILLAGE( )

MODELE   = AFFE_MODELE(  MAILLAGE =    MAILLAGE, INFO=2,
           AFFE= _F( MAILLE='M1', PHENOMENE = 'MECANIQUE', MODELISATION = '3D', ))

LN=FORMULE(NOM_PARA=('X','Y','Z'),VALE='Z-0.5');

FISS=DEFI_FISS_XFEM(MAILLAGE=MAILLAGE,
                    TYPE_DISCONTINUITE='INTERFACE',
                    DEFI_FISS=_F(FONC_LN=LN),
                    INFO=1);

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELE,
                         FISSURE=(FISS),
                         INFO=1);

SIGXX = FORMULE(VALE='2.*(X+0.2) + 5.*(Y+1.2)*(Y+1.2) + 7.3*(Z+1.85)', NOM_PARA=('X','Y','Z'),);
CHXN=CREA_CHAMP(TYPE_CHAM='NOEU_GEOM_R', OPERATION='EXTR',
                MAILLAGE=MAILLAGE, NOM_CHAM='GEOMETRIE',);
CHXG=CREA_CHAMP(TYPE_CHAM='ELGA_GEOM_R', OPERATION='DISC',
                MODELE=MODELE, CHAM_GD=CHXN,);

SIEFINI1=CREA_CHAMP(TYPE_CHAM='ELGA_NEUT_F', OPERATION='AFFE', MODELE=MODELE, PROL_ZERO='OUI',
                    AFFE=_F(TOUT='OUI', NOM_CMP=('X1',), VALE_F=(SIGXX,),),);

SIEFINI2=CREA_CHAMP(TYPE_CHAM='ELGA_NEUT_R', OPERATION='EVAL', CHAM_F=SIEFINI1, CHAM_PARA=CHXG,);

CH1=CREA_CHAMP(TYPE_CHAM='ELGA_SIEF_R', OPERATION='ASSE', MODELE=MODELE, PROL_ZERO='OUI',
                    ASSE=_F(TOUT='OUI', CHAM_GD=SIEFINI2, NOM_CMP=('X1',), NOM_CMP_RESU=('SIXX',),),);

CH2=PROJ_CHAMP(CHAM_GD=CH1,MODELE_1=MODELE, MODELE_2=MODELEK,METHODE='AUTO', PROL_ZERO='OUI')

IMPR_RESU(RESU=_F(CHAM_GD=CH1,NOM_CMP='SIXX',),)
IMPR_RESU(RESU=_F(CHAM_GD=CH2,NOM_CMP='SIXX',),)


# 1.1 TEST_RESU POUR TETRAEDRE / XFEM90 :
#----------------------------------------

# test de la valeur calculée au seul PG de l'élément FEM
TEST_RESU(CHAM_ELEM=(_F(
                        POINT=1,
                        NOM_CMP='SIXX',
                        MAILLE='M1',
                        CHAM_GD=CH1,
                        VALE_CALC=26.7425,),
                     ),
          )

# test des valeurs calculées aux 60 PG de la famille X-FEM
# reelement utilises, sur les 90 disponibles
# Rq : on projette un champ défini sur un seul PG, on obtient
#      donc un champ constant = C
# On a donc :
#    somme(cmp) = 60*C
#    max(cmp) = C
TEST_RESU(CHAM_ELEM=(
                     _F(
                        REFERENCE='AUTRE_ASTER',
                        CHAM_GD=CH2,
                        TYPE_TEST='SOMM',
                        VALE_CALC=1604.55,
                        VALE_REFE=1604.55,),
                     _F(
                        REFERENCE='AUTRE_ASTER',
                        CHAM_GD=CH2,
                        TYPE_TEST='MAX',
                        VALE_CALC=2.67425000000000E+01,
                        VALE_REFE=26.7425,),
                     ),
          )

FIN()
