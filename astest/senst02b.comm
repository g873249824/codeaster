# MODIF  DATE 21/02/2011   AUTEUR ABBAS M.ABBAS 
# RESPONSABLE O.BOITEAU
# TITRE Sensibilite par rapport a la temperature et au flux imposes
# senst02b.para = tps_job 60 mem_job 32Mo ncpus 1 liste_test R
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
#
#
# ======================================================================
# et au flux normal impose en thermique non-lineaire transitoire lumpe
#
DEBUT(CODE=_F(NOM='SENST02B',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='NON'))
#
#  On note T1=1+0.1*INST, T2=1+0.2*INST, T3=1+0.3*INST ET T4=1+0.4*INST
#
#          J    BORD_SU1       BORD_SU2     OPPOSE TEMP_IMPO: 200*T1
#           *-------------------------------*
#           !               !               !
#           !               !  SOURCE:10*T4 !
#           !               !               !
#  BORD_GAU !    MOITIE1    *   MOITIE2     ! BORD_DRO
# COEF_H:   !               !               ! FLUX_REP=-120
#   30*T3   !            CENTRE             !
# T_EXT:    !               !               !
#  140*T3   *-------------------------------*
#       ORIGINE   BORD_IN1     BORD_IN2     I
#       TEMP_IMPO: 100
#
#    TRANSITOIRE T DE 0 A 10 PAR PAS DE 5
#              1   < X < 11
#             -1.5 < Y <  1.5
#        55 NOEUDS, 28 SEG2 ET 80 TRIA3
#
# On calcule les sensibilites par rapport a la temperature imposee a
# l'origine (PS1) et par rapport au flux normal impose sur le bord droit
# (PS2) de deux manieres differentes: par differences finies (via des
# variables et operateurs PYTHON) et de maniere numerique (via l'option
# idoine de THER_NON_LINE). La deuxieme strategie est evidemment celle qui
# est preconisee (plus rapide, plus commode a utiliser, plus robuste...)
# mais, dans un cas test aussi tordu que celui-ci, elle est la seule voie
# de validation possible.
# On teste l'ecart, pour ces deux derivees, entre la valeur obtenue en
# resolvant le probleme derive et la valeur par differences finies. Et ce,
# en tous les instants du transitoire (via la boucle PYTHON) et pour les
# trois points I, CENTRE et J.
# DETAILS:
#   * La difference finie est une difference centree requierant 3 calculs,
#     avec un epsilon EPSA=1.e-1.
#   * L'ecart qui est teste est un ecart relatif par rapport a la valeur par
#     differences finies.
#
# 2. Definition des parametres sensibles et des autres parametres
#
PS1=DEFI_PARA_SENSI(VALE=100.0,);
PS2=DEFI_PARA_SENSI(VALE=-120.0,);

EPSA=1.E-1;
A1=100.0;
A2=200.0;
A3=30.0;
A4=140.0;
A5=-120.0;
A6=10.0;

PS1P = FORMULE(NOM_PARA='INST',VALE='100.+EPSA');
PS1M = FORMULE(NOM_PARA='INST',VALE='100.-EPSA');
PS2P = FORMULE(NOM_PARA='INST',VALE='-120.+EPSA');
PS2M = FORMULE(NOM_PARA='INST',VALE='-120.-EPSA');
T_OPP = FORMULE(NOM_PARA='INST',VALE=' A2*(1.+0.1*INST)');
COEFH = FORMULE(NOM_PARA='INST',VALE=' A3*(1.+0.3*INST)');
TEMPE = FORMULE(NOM_PARA='INST',VALE=' A4*(1.+0.3*INST)');
SOURF = FORMULE(NOM_PARA='INST',VALE=' A6*(1.+0.4*INST)');
#
# 3. Prealable
#
MAILLAGE=LIRE_MAILLAGE();
#
# 3.1. Mise en place des materiaux
#
LAMB = DEFI_CONSTANTE(VALE=0.75);
RHO=DEFI_FONCTION(NOM_PARA='TEMP',
                           VALE=( -1.00E+3, 2.00E+0,
                                   1.00E+3, 2.00E+0,),
                           PROL_DROITE='LINEAIRE', PROL_GAUCHE='LINEAIRE')
MAT=DEFI_MATERIAU(THER_NL=_F(  LAMBDA = LAMB, RHO_CP = RHO));
MATEPLAN=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       AFFE=_F(TOUT='OUI',MATER=MAT));
#
# 3.2. Modele
#
MODEPLAN=AFFE_MODELE(MAILLAGE=MAILLAGE,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='THERMIQUE',
                             MODELISATION='PLAN_DIAG'));
#
# 3.3. Chargements non sensibles (echange/source/temp_impo)
#
CH_0=AFFE_CHAR_THER_F(MODELE=MODEPLAN,
             ECHANGE=_F(GROUP_MA='BORD_GAU',
                        COEF_H=COEFH,TEMP_EXT=TEMPE),
             SOURCE=_F(TOUT = 'OUI',SOUR=SOURF),
             TEMP_IMPO=_F(GROUP_NO='OPPOSE',TEMP=T_OPP));
#
# 3.4. Chargements sensibles (temp_impo/flux normal)
#
CH_1=AFFE_CHAR_THER_F(MODELE=MODEPLAN,
                      TEMP_IMPO=_F(GROUP_NO='ORIGINE',TEMP=PS1));
#
CH_2=AFFE_CHAR_THER_F(MODELE=MODEPLAN,
                      FLUX_REP=_F(GROUP_MA='BORD_DRO',FLUN=PS2));
#
# 3.4 Chargements translates pour differences finies
#
CH_1M=AFFE_CHAR_THER_F(MODELE=MODEPLAN,
                      TEMP_IMPO=_F(GROUP_NO='ORIGINE',TEMP=PS1M));
CH_1P=AFFE_CHAR_THER_F(MODELE=MODEPLAN,
                      TEMP_IMPO=_F(GROUP_NO='ORIGINE',TEMP=PS1P));
CH_2M=AFFE_CHAR_THER_F(MODELE=MODEPLAN,
                      FLUX_REP=_F(GROUP_MA='BORD_DRO',FLUN=PS2M));
CH_2P=AFFE_CHAR_THER_F(MODELE=MODEPLAN,
                      FLUX_REP=_F(GROUP_MA='BORD_DRO',FLUN=PS2P));
#
# 4.1. Calcul standard + 2 calculs de sensibilite
#

LR8=DEFI_LIST_REEL(DEBUT=0.,INTERVALLE=_F(JUSQU_A = 10.,NOMBRE=2));

RETH=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=MATEPLAN,
                   INCREMENT=_F(LIST_INST = LR8),
                   ETAT_INIT=_F(STATIONNAIRE = 'OUI'),
                   EXCIT=(_F(CHARGE=CH_0,),_F(CHARGE=CH_1,),
                          _F(CHARGE=CH_2,)),
                   SENSIBILITE=(PS1,PS2));
#
# 4.2. Calculs pour evaluer les differences finies
#
RETH1M=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=MATEPLAN,
                   INCREMENT=_F(LIST_INST = LR8),
                   ETAT_INIT=_F(STATIONNAIRE = 'OUI'),
                   EXCIT=(_F(CHARGE=CH_0),_F(CHARGE=CH_1M),
                          _F(CHARGE=CH_2)));
RETH1P=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=MATEPLAN,
                   INCREMENT=_F(LIST_INST = LR8),
                   ETAT_INIT=_F(STATIONNAIRE = 'OUI'),
                   EXCIT=(_F(CHARGE=CH_0),_F(CHARGE=CH_1P),
                          _F(CHARGE=CH_2)));
RETH2M=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=MATEPLAN,
                   INCREMENT=_F(LIST_INST = LR8),
                   ETAT_INIT=_F(STATIONNAIRE = 'OUI'),
                   EXCIT=(_F(CHARGE=CH_0),_F(CHARGE=CH_1),
                          _F(CHARGE=CH_2M)));
RETH2P=THER_NON_LINE(MODELE=MODEPLAN,
                   CHAM_MATER=MATEPLAN,
                   INCREMENT=_F(LIST_INST = LR8),
                   ETAT_INIT=_F(STATIONNAIRE = 'OUI'),
                   EXCIT=(_F(CHARGE=CH_0),_F(CHARGE=CH_1),
                          _F(CHARGE=CH_2P)));
#
# 4.3. Releve des temperatures (ou sensibilite de temperature)
#
RLTH=POST_RELEVE_T(ACTION=(_F(RESULTAT = RETH,
                              INTITULE='TEMPERATURE',
                              NOM_CHAM='TEMP',
                              OPERATION='EXTRACTION',
                              GROUP_NO=('I','CENTRE','J'),
                              NOM_CMP=('TEMP'),),
                           )
                   );

RLTH=POST_RELEVE_T(reuse=RLTH,
                   ACTION=(_F(RESULTAT = RETH,
                              INTITULE='TEMPERATURE',
                              NOM_CHAM='TEMP',
                              OPERATION='EXTRACTION',
                              GROUP_NO=('I','CENTRE','J'),
                              NOM_CMP=('TEMP'),
                              SENSIBILITE=(PS1,PS2),
                           ))
                  );
#
# 4.3. Releve des temperatures (pour les differences finies
#

RLTH1M=POST_RELEVE_T(ACTION=_F(RESULTAT = RETH1M,
                   INTITULE='TEMPERATURE',
                   NOM_CHAM='TEMP',
                   OPERATION='EXTRACTION',
                   GROUP_NO=('I','CENTRE','J'),
                   NOM_CMP=('TEMP')));
RLTH1P=POST_RELEVE_T(ACTION=_F(RESULTAT = RETH1P,
                   INTITULE='TEMPERATURE',
                   NOM_CHAM='TEMP',
                   OPERATION='EXTRACTION',
                   GROUP_NO=('I','CENTRE','J'),
                   NOM_CMP=('TEMP')));
RLTH2M=POST_RELEVE_T(ACTION=_F(RESULTAT = RETH2M,
                   INTITULE='TEMPERATURE',
                   NOM_CHAM='TEMP',
                   OPERATION='EXTRACTION',
                   GROUP_NO=('I','CENTRE','J'),
                   NOM_CMP=('TEMP')));
RLTH2P=POST_RELEVE_T(ACTION=_F(RESULTAT = RETH2P,
                   INTITULE='TEMPERATURE',
                   NOM_CHAM='TEMP',
                   OPERATION='EXTRACTION',
                   GROUP_NO=('I','CENTRE','J'),
                   NOM_CMP=('TEMP')));

#
# 5. Calcul de l'ecart entre la derivee et la difference finie
#

VERIF = FORMULE(NOM_PARA=('TEMP_M', 'TEMP_P', 'DTEMP'),
                 VALE='abs((TEMP_P - TEMP_M)/(2.*EPSA) - DTEMP)')

# 5.1. Pour PS1
# renomme les temperatures en T+ et T-

T1moins = CALC_TABLE(
   TABLE=RLTH1M,
   ACTION=_F(OPERATION='RENOMME', NOM_PARA=('TEMP', 'TEMP_M')),)
T1plus = CALC_TABLE(
   TABLE=RLTH1P,
   ACTION=_F(OPERATION='RENOMME', NOM_PARA=('TEMP', 'TEMP_P')),)
T1res = CALC_TABLE(
   TABLE=RLTH,
   SENSIBILITE=PS1,
   ACTION=(_F(OPERATION='RENOMME', NOM_PARA=('TEMP', 'DTEMP')),
           _F(OPERATION='COMB', TABLE=T1moins, NOM_PARA=('NOEUD','INST'),),
           _F(OPERATION='COMB', TABLE=T1plus,  NOM_PARA=('NOEUD','INST'),),
           _F(OPERATION='OPER', NOM_PARA='DIFF', FORMULE=VERIF),
           _F(OPERATION='EXTR', NOM_PARA=('NOEUD','INST','DTEMP','DIFF','TEMP_M','TEMP_P'),),
),)

IMPR_TABLE(TABLE=T1res,
           UNITE=6,)

TEST_TABLE(
   TABLE     = T1res,
   NOM_PARA  = 'DIFF',
   TYPE_TEST = 'MAX',
   VALE      = 0.,
   CRITERE   = 'ABSOLU',
   PRECISION = 1.E-8,
   REFERENCE = 'AUTRE_ASTER',
)

# 5.2. Pour PS2
# renomme les temperatures en T+ et T-
T2moins = CALC_TABLE(
   TABLE=RLTH2M,
   ACTION=_F(OPERATION='RENOMME', NOM_PARA=('TEMP', 'TEMP_M')),)
T2plus = CALC_TABLE(
   TABLE=RLTH2P,
   ACTION=_F(OPERATION='RENOMME', NOM_PARA=('TEMP', 'TEMP_P')),)
T2res = CALC_TABLE(
   TABLE=RLTH,
   SENSIBILITE=PS2,
   ACTION=(_F(OPERATION='RENOMME', NOM_PARA=('TEMP', 'DTEMP')),
           _F(OPERATION='COMB', TABLE=T2moins, NOM_PARA=('NOEUD','INST'),),
           _F(OPERATION='COMB', TABLE=T2plus,  NOM_PARA=('NOEUD','INST'),),
           _F(OPERATION='OPER', NOM_PARA='DIFF', FORMULE=VERIF),
           _F(OPERATION='EXTR', NOM_PARA=('NOEUD','INST','DTEMP','DIFF','TEMP_M','TEMP_P'),),
),)

IMPR_TABLE(TABLE=T2res,
           UNITE=6,)

TEST_TABLE(
   TABLE     = T2res,
   NOM_PARA  = 'DIFF',
   TYPE_TEST = 'MAX',
   VALE      = 0.,
   CRITERE   = 'ABSOLU',
   PRECISION = 1.E-8,
   REFERENCE = 'AUTRE_ASTER',
)

FIN()

