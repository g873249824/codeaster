# MODIF  DATE 25/01/2011   AUTEUR MACOCCO K.MACOCCO 
# TITRE EPROUVETTE AVEC FISSURE CENTRALE XFEM
# ssnv192a.para = tps_job 130 mem_job 512Mo mem_aster 50 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================


DEBUT(CODE=_F(NOM='SSNV192A', NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),DEBUG=_F(SDVERI='OUI'))

#----------------------------------------------
#                   PARAMETRES
#----------------------------------------------

#**********************************************
#    GEOMETRIE (A modifier avec le maillage)
#
# EPAISSEUR DE L EPROUVETTE SELON X
B = 1. ;
# DEMI-LONGUEUR DE L EPROUVETTE SELON Y
W = 5. ;
# DEMI-LONGUEUR DE L EPROUVETTE SELON Z
L = 10. ;
#**********************************************

#*********************************************************
#          BLOCAGE DES MODES RIGIDES ET SYMETRIE
#
# PRECISION POUR LES CREA_GROUP_NO
PRECIS = 1.E-5;
#
# LONGUEUR D ARETE AUTOUR DES NOEUDS A BLOQUER
#  (inutile si blocage = 1)
LAR = 2.;
#
blocage = 1;
#
# blocage=1 :
#  Le nombre d elements exterieur selon z est pair
#  On bloque les ddls sur trois noeuds
#
# blocage=2 :
#  Le nombre d elements exterieur selon z est impair
#  On bloque trois noeuds par rapport a leurs symetriques
#*********************************************************

# DEMI-LONGUEUR DE LA FISSURE CENTRALE
A = 1. ;

# ANGLE D INCLINAISON DE LA FISSURE CENTRALE
ALPHA = 0.*pi/180. ;

# COURONNES POUR LE CALCUL DES SIF
RI = [ 0.1 , 0.2 , 0.3 , 0.1 , 0.1 , 0.2 ];
RS = [ 0.2 , 0.3 , 0.4 , 0.3 , 0.4 , 0.4 ];

# PROPRIETES DE L ACIER UTILISE
E   = 1.E6;
nu  = 0.;
rho = 7800.0;


# COEFFICIENT DE FROTTEMENT
COULOM = 0. ;

# ACTIVATION DE L ALGO_LAGR DE DEFI_FISS_XFEM
ALGOLAG='NON' ;

#************************************************************
#  PRESSION APPLIQUEE SUR LES FACES INFERIEURE ET SUPERIEURE
#
fonction = 0;
# fonction=0 : la pression PRES est constante
# fonction=1 : la pression PRES est une fonction de l espace
#
PRES = -1.;
FCTPRES = FORMULE(NOM_PARA=('X','Y','Z'),VALE='PRES*Y');
#************************************************************


#----------------------------------------------
#                   MAILLAGE
#----------------------------------------------

PRE_GIBI();

MAILLAG1=LIRE_MAILLAGE(INFO=1,);

if blocage == 1 :
   PT1 = [ 0. , -W , 0. ]
   PT2 = [ 0. ,  W , 0. ]
   PT3 = [ B  , -W , 0. ]
elif blocage == 2 :
   PT1 = [ 0. , -W , -LAR/2 ]
   PT2 = [ 0. ,  W , -LAR/2 ]
   PT3 = [ B  , -W , -LAR/2 ]
   PT1S = [ 0. , -W , LAR/2 ]
   PT2S = [ 0. ,  W , LAR/2 ]
   PT3S = [ B  , -W , LAR/2 ]

MAILLAG1=DEFI_GROUP( reuse =MAILLAG1,
                     MAILLAGE=MAILLAG1,
                     CREA_GROUP_NO=( _F(NOM='NOEUD1',
                                        OPTION='ENV_SPHERE',
                                        POINT=PT1,
                                        PRECISION=PRECIS,
                                        RAYON=PRECIS),
                                     _F(NOM='NOEUD2',
                                        OPTION='ENV_SPHERE',
                                        POINT=PT2,
                                        PRECISION=PRECIS,
                                        RAYON=PRECIS),
                                     _F(NOM='NOEUD3',
                                        OPTION='ENV_SPHERE',
                                        POINT=PT3,
                                        PRECISION=PRECIS,
                                        RAYON=PRECIS),
                                    ),
                      INFO=1, );

if blocage == 2 :
   MAILLAG1=DEFI_GROUP( reuse =MAILLAG1,
                        MAILLAGE=MAILLAG1,
                        CREA_GROUP_NO=( _F(NOM='NOEUD1S',
                                           OPTION='ENV_SPHERE',
                                           POINT=(PT1S[0],PT1S[1],PT1S[2]),
                                           PRECISION=PRECIS,
                                           RAYON=PRECIS),
                                        _F(NOM='NOEUD2S',
                                           OPTION='ENV_SPHERE',
                                           POINT=(PT2S[0],PT2S[1],PT2S[2]),
                                           PRECISION=PRECIS,
                                           RAYON=PRECIS),
                                        _F(NOM='NOEUD3S',
                                           OPTION='ENV_SPHERE',
                                           POINT=(PT3S[0],PT3S[1],PT3S[2]),
                                           PRECISION=PRECIS,
                                           RAYON=PRECIS),
                                       ),
                      INFO=1, );

#----------------------------------------------
#                   MODELE
#----------------------------------------------

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAG1,
                     AFFE=(_F(GROUP_MA=('VOL','SURFSUP','SURFINF',),
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D',),
                           ),
                     );

MAILLAG1=MODI_MAILLAGE(reuse =MAILLAG1,
                       MAILLAGE=MAILLAG1,
                       ORIE_PEAU_3D=_F(GROUP_MA=('SURFSUP','SURFINF',),),
                       );

#----------------------------------------------
#                   FISSURE
#----------------------------------------------

LN = FORMULE(VALE='Z*cos(ALPHA)-Y*sin(ALPHA)',
             NOM_PARA=('X','Y','Z',),);
LT = FORMULE(VALE='abs(Z*sin(ALPHA)+Y*cos(ALPHA))-A',
             NOM_PARA=('X','Y','Z',),);

XFONI = 0. ;
YFONI = -A*cos(ALPHA) ;
ZFONI = -A*sin(ALPHA) ;
XORI = B/2. ;
YORI = 0. ;
ZORI = 0. ;
XVECT = 0. ;
YVECT = -sin(ALPHA) ;
ZVECT = cos(ALPHA) ;

FISS=DEFI_FISS_XFEM(MODELE=MODELEIN,
                    DEFI_FISS=_F(FONC_LT=LT,
                                 FONC_LN=LN,),
                    ORIE_FOND=_F(PFON_INI=(XFONI, YFONI, ZFONI,),
                                 VECT_ORIE=(XVECT, YVECT, ZVECT,),
                                 POINT_ORIG=(XORI, YORI, ZORI,),),
                     INFO=1,);


#----------------------------------------------
#               MODELE FISSURE
#----------------------------------------------

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,
                         FISSURE=FISS,
                         INFO=1,);

CHXFEM=AFFE_CHAR_MECA(MODELE=MODELEK,
                      LIAISON_XFEM='OUI',
                      INFO=1,);

#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

ACIER=DEFI_MATERIAU(ELAS=_F(E=E,
                            NU=nu,
                            RHO=rho,),);

CHAMPMA1=AFFE_MATERIAU(MAILLAGE=MAILLAG1,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT='OUI',
                               MATER=ACIER,
                               ),);

#----------------------------------------------
#         BLOCAGE DES MODES RIGIDES
#----------------------------------------------

if blocage == 1 :
   CHRIGI=AFFE_CHAR_MECA(MODELE=MODELEK,
                         DDL_IMPO=( _F(GROUP_NO='NOEUD1',
                                       DX=0.0,
                                       DY=0.0,
                                       DZ=0.0,),
                                    _F(GROUP_NO='NOEUD2',
                                       DX=0.0,
                                       DZ=0.0,),
                                    _F(GROUP_NO='NOEUD3',
                                       DZ=0.0,),   ), );

elif blocage == 2 :
   CHRIGI=AFFE_CHAR_MECA(MODELE=MODELEK,
                         LIAISON_DDL=(_F(GROUP_NO=('NOEUD1','NOEUD1S',),
                                         DDL=('DX','DX',),
                                         COEF_MULT=(1.0,1.0),
                                         COEF_IMPO=0.0,),
                                      _F(GROUP_NO=('NOEUD1','NOEUD1S',),
                                         DDL=('DY','DY',),
                                         COEF_MULT=(1.0,1.0),
                                         COEF_IMPO=0.0,),
                                      _F(GROUP_NO=('NOEUD1','NOEUD1S',),
                                         DDL=('DZ','DZ',),
                                         COEF_MULT=(1.0,1.0),
                                         COEF_IMPO=0.0,),

                                      _F(GROUP_NO=('NOEUD2','NOEUD2S',),
                                         DDL=('DX','DX',),
                                         COEF_MULT=(1.0,1.0),
                                         COEF_IMPO=0.0,),
                                      _F(GROUP_NO=('NOEUD2','NOEUD2S',),
                                         DDL=('DZ','DZ',),
                                         COEF_MULT=(1.0,1.0),
                                         COEF_IMPO=0.0,),

                                      _F(GROUP_NO=('NOEUD3','NOEUD3S',),
                                         DDL=('DZ','DZ',),
                                         COEF_MULT=(1.0,1.0),
                                         COEF_IMPO=0.0,), ), );

#----------------------------------------------
#              CHARGEMENT
#----------------------------------------------
if fonction == 0 :
   CHPRES=AFFE_CHAR_MECA(MODELE=MODELEK,
                         PRES_REP=_F(GROUP_MA=('SURFSUP','SURFINF',),
                                     PRES=PRES,),
                         );
elif fonction == 1 :
   CHPRES=AFFE_CHAR_MECA_F(MODELE=MODELEK,
                           PRES_REP=_F(GROUP_MA=('SURFSUP','SURFINF',),
                                       PRES=FCTPRES,),
                           );

#----------------------------------------------
#                   RESOLUTION
#----------------------------------------------

L_INS1=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=3.0,
                                    NOMBRE=3,),);

RESU1=STAT_NON_LINE(MODELE=MODELEK,
                    CHAM_MATER=CHAMPMA1,
                    EXCIT=(_F(CHARGE=CHXFEM,),
                           _F(CHARGE=CHRIGI,),
                           _F(CHARGE=CHPRES,),),
                    COMP_ELAS=_F(RELATION='ELAS',
                                 GROUP_MA='VOL',),
                    INCREMENT=_F(LIST_INST=L_INS1,
                                 INST_FIN=1.0,),
                    NEWTON=_F(REAC_ITER=1,),
                    SOLVEUR=_F(METHODE='MUMPS',PCENT_PIVOT=10,

                               RESI_RELA=-1.,),
                    ARCHIVAGE=_F(CHAM_EXCLU='VARI_ELGA',),
                    INFO=1,);

#------------------------------------------------------------------------
# POST-TRAITEMENT : CALCUL DES SIFS PAR LA METHODE ENERGETIQUE AVEC X-FEM
#------------------------------------------------------------------------

n=len(RI)
SIF1 = [None]*n
SIF2 = [None]*n

for i in range(0,n) :
   SIF1[i]=CALC_G(RESULTAT=RESU1,
               OPTION='CALC_K_G',
               THETA=_F( FISSURE=FISS,
                         R_INF=RI[i],
                         R_SUP=RS[i],
                        ),
               LISSAGE=_F( LISSAGE_THETA='LAGRANGE',
                           LISSAGE_G='LAGRANGE',
                           DEGRE=4,),
               INFO=2,);

   IMPR_TABLE(TABLE=SIF1[i],);

   SIF2[i]=CALC_G(RESULTAT=RESU1,
               OPTION='CALC_K_G',
               THETA=_F( FISSURE=FISS,
                         R_INF=RI[i],
                         R_SUP=RS[i],
                         NUME_FOND=2,),
               LISSAGE=_F( LISSAGE_THETA='LAGRANGE',
                           LISSAGE_G='LAGRANGE',
                           DEGRE=4,),
               INFO=2,);

   IMPR_TABLE(TABLE=SIF2[i],);


# SOLUTION ANALYTIQUE
P=abs(PRES)*(B*2*W)
FAW = sqrt(pi*A/(4*W*cos(pi*A/(2*W))))*(1-0.025*(A/W)**2.+0.06*(A/W)**4.);
K1REF =  P/(B*sqrt(W))*FAW;

# FISSURE 1
for i in range(0,n) :
   TEST_TABLE(TABLE=SIF1[i],
              NOM_PARA='K1',
              TYPE_TEST='MIN',
              VALE=K1REF,
              CRITERE='RELATIF',
              PRECISION=0.03,
              REFERENCE='ANALYTIQUE',);
   TEST_TABLE(TABLE=SIF1[i],
              NOM_PARA='K1',
              TYPE_TEST='MAX',
              VALE=K1REF,
              CRITERE='RELATIF',
              PRECISION=0.03,
              REFERENCE='ANALYTIQUE',);

# FISSURE 2
for i in range(0,n) :
   TEST_TABLE(TABLE=SIF2[i],
              NOM_PARA='K1',
              TYPE_TEST='MIN',
              VALE=K1REF,
              CRITERE='RELATIF',
              PRECISION=0.03,
              REFERENCE='ANALYTIQUE',);
   TEST_TABLE(TABLE=SIF2[i],
              NOM_PARA='K1',
              TYPE_TEST='MAX',
              VALE=K1REF,
              CRITERE='RELATIF',
              PRECISION=0.03,
              REFERENCE='ANALYTIQUE',);

#------------------------------------------------------------------------
# POST-TRAITEMENT : CALCUL DES SIFS PAR INTERPOLATION DES SAUTS DE DEP.
#------------------------------------------------------------------------

PK1=POST_K1_K2_K3(  MODELISATION='3D',
                        FISSURE=FISS,
                        INFO=1,
                        MAILLAGE=MAILLAG1,
                        MATER=ACIER,
                        RESULTAT=RESU1,
                        ABSC_CURV_MAXI=0.3,
                        NUME_FOND=1,
                        )
                      
IMPR_TABLE(TABLE=PK1);
PK2=POST_K1_K2_K3(  MODELISATION='3D',
                        FISSURE=FISS,
                        INFO=1,
                        MAILLAGE=MAILLAG1,
                        MATER=ACIER,
                        RESULTAT=RESU1,
                        ABSC_CURV_MAXI=0.3,
                        NUME_FOND=2,
                        )
                      
IMPR_TABLE(TABLE=PK2);

TEST_TABLE(   TABLE=PK1,
              NOM_PARA='K1',
              TYPE_TEST='MIN',
              VALE=K1REF,
              PRECISION=0.12 ,
              REFERENCE='ANALYTIQUE'      )

TEST_TABLE(   TABLE=PK1,
              NOM_PARA='K1',
              TYPE_TEST='MAX',
              VALE=K1REF,
              PRECISION=0.12 ,
              REFERENCE='ANALYTIQUE'      )         
TEST_TABLE(   TABLE=PK2,
              NOM_PARA='K1',
              TYPE_TEST='MIN',
              VALE=K1REF,
              PRECISION=0.12 ,
              REFERENCE='ANALYTIQUE'      )

TEST_TABLE(   TABLE=PK2,
              NOM_PARA='K1',
              TYPE_TEST='MAX',
              VALE=K1REF,
              PRECISION=0.12 ,
              REFERENCE='ANALYTIQUE'      )                        
# -------------------------------------------------------------   
#            POST-TRAITEMENT POUR LA VISUALISATION X-FEM   
# -------------------------------------------------------------   

MA_XFEM=POST_MAIL_XFEM(
                       MODELE        = MODELEK,
                       INFO          = 2)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D',),) 

RES_XFEM=POST_CHAM_XFEM(MODELE_VISU   = MOD_VISU,
                        RESULTAT      = RESU1,
                        
                        INFO          = 2)
 
#IMPR_RESU(FORMAT='GMSH',UNITE=81,RESU=_F(RESULTAT=RES_XFEM));

FIN();
