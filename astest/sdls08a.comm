# TITRE : MODE PROPRE D'UNE PLAQUE CARREE CALCULES SUR BASE REDUITE
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#     ** VALIDATION DE PROJECTION ET RESTITUTION SUR BASE
#        DE MODES STATIQUES
#
#   CALCUL DES MODES D'UNE PLAQUE CARREE AVEC CONDENSATION STATIQUE
#   DES MATRICES ASSEMBLEES SUR LES DDL INTERNES
#   RESTITUTION SUR BASE PHYSIQUE

DEBUT(CODE=_F(NOM='SDLS08A', NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))

MAYA=LIRE_MAILLAGE(FORMAT='MED',);

MODELE=AFFE_MODELE(MAILLAGE=MAYA,
                   AFFE=_F(GROUP_MA='ALL_EL',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='DKT',),);

MATELAS=DEFI_MATERIAU(ELAS=_F(E=71000000000.0,
                              NU=0.3,
                              RHO=7820,
                              AMOR_ALPHA=0.5,
                              AMOR_BETA=0.1,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MAYA,
                    AFFE=_F(GROUP_MA='ALL_EL',
                            MATER=MATELAS,),);

CHCAR=AFFE_CARA_ELEM(MODELE=MODELE,
                     COQUE=_F(GROUP_MA='ALL_EL',
                              EPAIS=0.001,),);

CHARGE=AFFE_CHAR_MECA(MODELE=MODELE,
                      DDL_IMPO=_F(GROUP_NO=('CONT_NO','COND2_NO',),
                                  DX=0.0,
                                  DY=0.0,
                                  DZ=0.0,
                                  DRX=0.0,
                                  DRY=0.0,
                                  DRZ=0.0,),);

FORCE=AFFE_CHAR_MECA(MODELE=MODELE,
                     FORCE_NODALE=_F(NOEUD='NO21',
                                     FZ=1.0,),);
#CALCUL DES VECTEURS ET MATRICES ASSEMBLEES

KELEM=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                     MODELE=MODELE,
                     CHAM_MATER=CHMAT,
                     CARA_ELEM=CHCAR,
                     CHARGE=CHARGE,);

MELEM=CALC_MATR_ELEM(OPTION='MASS_MECA',
                     MODELE=MODELE,
                     CHAM_MATER=CHMAT,
                     CARA_ELEM=CHCAR,
                     CHARGE=CHARGE,);

CELEM=CALC_MATR_ELEM(OPTION='AMOR_MECA',
                     MODELE=MODELE,
                     CARA_ELEM=CHCAR,
                     CHAM_MATER=CHMAT,
                     RIGI_MECA=KELEM,
                     MASS_MECA=MELEM,
                     CHARGE=CHARGE,);

FELEM=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                     CHARGE=(FORCE,CHARGE,),);

NUME=NUME_DDL(MATR_RIGI=KELEM,);

KASS=ASSE_MATRICE(MATR_ELEM=KELEM,
                  NUME_DDL=NUME,);

MASS=ASSE_MATRICE(MATR_ELEM=MELEM,
                  NUME_DDL=NUME,);

CASS=ASSE_MATRICE(MATR_ELEM=CELEM,
                  NUME_DDL=NUME,);

FASS=ASSE_VECTEUR(VECT_ELEM=FELEM,
                  NUME_DDL=NUME,);


#CALCUL DE LA BASE DE MODES DYNAMIQUES
#
MODET=MODE_ITER_SIMULT(MATR_RIGI=KASS,
                       MATR_MASS=MASS,
                       CALC_FREQ=_F(
                       NMAX_FREQ=6,),
                       VERI_MODE=_F(STOP_ERREUR='OUI',
                                    STURM='OUI',SEUIL=3.E-5,),);


# TEST DE CREATION D'UNE BASE MODALE AVEC UNE OCCURENCE
# DE MODE_MECA
MODES=DEFI_BASE_MODALE(RITZ=(
                           _F(MODE_MECA=MODET,
                              NMAX_MODE=5,),
                           ),
                           );

# TEST DE CREATION D'UNE BASE MODALE PAR ASSEMBLAGE DE DEUX
#CONCEPTS "MODE_MECA" DONNES DANS UNE LISTE SOUS LE MOT-CLE "RITZ"

MODE_A=MODE_ITER_SIMULT(MATR_RIGI=KASS,
                       MATR_MASS=MASS,
                       CALC_FREQ=_F(
                       NMAX_FREQ=4,),
                       VERI_MODE=_F(STOP_ERREUR='OUI',
                                    STURM='OUI',SEUIL=3.E-5,),);


MODE_B=MODE_ITER_SIMULT(MATR_RIGI=KASS,
                       MATR_MASS=MASS,
                       METHODE='JACOBI',
                       CALC_FREQ=_F(OPTION='BANDE',
                                    FREQ=(1000.,5100.),),
                       VERI_MODE=_F(STOP_ERREUR='OUI',
                                    STURM='OUI',SEUIL=3.E-5,),);


MODE_T=DEFI_BASE_MODALE(RITZ=(
                           _F(MODE_MECA=(MODE_A,MODE_B),
                             NMAX_MODE=(4,2,),),
                           ),
                         NUME_REF=NUME,
                           );

#VERIFICATION DES FREQUENCES PRESENTES DANS MODE_T

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  PARA='FREQ',
                  RESULTAT=MODE_T,
                  VALE_CALC=29.060400000000001,
                  
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=2,
                  PARA='FREQ',
                  RESULTAT=MODE_T,
                  VALE_CALC=76.228099999999998,
                  
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=3,
                  PARA='FREQ',
                  RESULTAT=MODE_T,
                  VALE_CALC=76.228099999999998,
                  
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=4,
                  PARA='FREQ',
                  RESULTAT=MODE_T,
                  VALE_CALC=76.228099999999998,
                  
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=5,
                  PARA='FREQ',
                  RESULTAT=MODE_T,
                  VALE_CALC=5058.5100000000002,
                  
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=6,
                  PARA='FREQ',
                  RESULTAT=MODE_T,
                  VALE_CALC=5058.5100000000002,
                  
                  CRITERE='RELATIF',
                  ),
          )

#CALCUL DE LA BASE DE MODES STATIQUES
#

MODSTA=MODE_STATIQUE(MATR_RIGI=KASS,
                     MATR_MASS=MASS,
                     MODE_STAT=_F(GROUP_NO='COND2_NO',
                                  TOUT_CMP='OUI',),);
#PROJECTION DES MATRICES ASSEMBLEES SUR LA BASE DE MODES STATIQUES

NUMGEN=NUME_DDL_GENE(BASE=MODSTA,
                     STOCKAGE='PLEIN',
                     NB_VECT=9999,);

KGEN=PROJ_MATR_BASE(BASE=MODSTA,
                    NUME_DDL_GENE=NUMGEN,
                    MATR_ASSE=KASS,);

MGEN=PROJ_MATR_BASE(BASE=MODSTA,
                    NUME_DDL_GENE=NUMGEN,
                    MATR_ASSE=MASS,);

CGEN=PROJ_MATR_BASE(BASE=MODSTA,
                    NUME_DDL_GENE=NUMGEN,
                    MATR_ASSE=CASS,);

FGEN=PROJ_VECT_BASE(BASE=MODSTA,
                    NUME_DDL_GENE=NUMGEN,
                    VECT_ASSE=FASS,);
#CALCUL DES MODES SUR BASE REDUITE

MODGEN=MODE_ITER_SIMULT(MATR_RIGI=KGEN,
                        MATR_MASS=MGEN,
                        CALC_FREQ=_F(OPTION='PLUS_PETITE',
                                     NMAX_FREQ=5,),
                        VERI_MODE=_F(STOP_ERREUR='NON',),);

#RESTITUTION SUR BASE PHYSIQUE DES MODES PROPRES GENERALISES

MODEEXP=REST_GENE_PHYS(RESU_GENE=MODGEN,
                       TOUT_ORDRE='OUI',
                       NOM_CHAM='DEPL',);


#######################################################
# TEST DE LA PROJECTION DU 2nd MEMBRE SUR LE RESULTAT DE
# LA RESTITUTION EN BASE PHYSIQUE DES MODES GENERALISES
#######################################################
NUMDIAG2=NUME_DDL_GENE(BASE=MODEEXP,
                      STOCKAGE='DIAG',);

FDIAG2=PROJ_VECT_BASE(BASE=MODEEXP,
                    NUME_DDL_GENE=NUMDIAG2,
                    VECT_ASSE=FASS,);


#CALCUL DE REPONSE HARMONIQUE SUR BASE REDUITE DE MODES STATIQUES

LIFREQ=DEFI_LIST_REEL(DEBUT=3,
                      INTERVALLE=_F(JUSQU_A=6,
                                    NOMBRE=3,),);

DYNGEN=DYNA_VIBRA(TYPE_CALCUL='HARM',
                  BASE_CALCUL='GENE',
                  MATR_MASS=MGEN,
                      MATR_RIGI=KGEN,
                      MATR_AMOR=CGEN,
                      SOLVEUR=_F( METHODE='LDLT', ),
                      LIST_FREQ=LIFREQ,
                      EXCIT=_F(VECT_ASSE_GENE=FGEN,
                               COEF_MULT=1.0,),);

KGENC=COMB_MATR_ASSE(COMB_C=_F(MATR_ASSE=KGEN,
                               COEF_C=('RI',1.0,0.01,),),);

DYNGENC=DYNA_VIBRA(TYPE_CALCUL='HARM',
                  BASE_CALCUL='GENE',
                  MATR_MASS=MGEN,
                      MATR_RIGI=KGENC,
                      AMOR_MODAL=_F(AMOR_REDUIT=(0.01,),),
                      SOLVEUR=_F( METHODE='LDLT', ),
                      LIST_FREQ=LIFREQ,
                      EXCIT=_F(VECT_ASSE_GENE=FGEN,
                               COEF_MULT=1.0,),);

DYNEXP=REST_GENE_PHYS(RESU_GENE=DYNGEN,
                      NOM_CHAM=('DEPL','VITE'),
                      TOUT_ORDRE='OUI',
                      LIST_FREQ=LIFREQ,);

DYNEXPC=REST_GENE_PHYS(RESU_GENE=DYNGENC,
                      NOM_CHAM=('DEPL','VITE'),
                      TOUT_ORDRE='OUI',
                      LIST_FREQ=LIFREQ,);
#
#########################################################
# RECUPERATION DES DEPLACEMENTS EN UN POINT DES RESULTATS
# PHYSIQUES
#########################################################
DHZ1=RECU_FONCTION (   RESULTAT = DYNEXP,
                      NOM_CMP = 'DZ',
                      NOEUD = 'NO23',
                      NOM_CHAM = 'DEPL',
                      TOUT_ORDRE = 'OUI');

DHZ2=RECU_FONCTION (   RESU_GENE = DYNGEN,
                       NOM_CMP = 'DZ',
                       NOEUD = 'NO23',
                       NOM_CHAM = 'DEPL',
                       TOUT_ORDRE = 'OUI',);

VHZ1=RECU_FONCTION (   RESULTAT = DYNEXP,
                      NOM_CMP = 'DZ',
                      NOEUD = 'NO23',
                      NOM_CHAM = 'VITE',
                      TOUT_ORDRE = 'OUI');

VHZ2=RECU_FONCTION (   RESU_GENE = DYNGEN,
                       NOM_CMP = 'DZ',
                       NOEUD = 'NO23',
                       NOM_CHAM = 'VITE',
                       TOUT_ORDRE = 'OUI',);

TEST_RESU(RESU=_F(PARA='FREQ',
                  NUME_MODE=1,
                  REFERENCE='AUTRE_ASTER',
                  RESULTAT=MODEEXP,
                  VALE_CALC=4.993871154,
                  VALE_REFE=4.9762000000000004,
                  CRITERE='RELATIF',
                  PRECISION=0.10000000000000001,),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=2,
                  VALE_CALC_C= 2.02776702E-06+-5.38826861E-05j,
                  VALE_REFE_C=('RI', 2.0277670162400001E-06, -5.3882686138999997E-05),
                  REFERENCE='AUTRE_ASTER',
                  RESULTAT=DYNEXP,
                  NOM_CHAM='DEPL',
                  NOEUD='NO21',
                  NOM_CMP='DZ',
                  CRITERE='RELATIF',
                  PRECISION=0.10000000000000001,),
          )

#
#######################################################
# TEST SUR IMPR_GENE
#######################################################
# Test de l'impression d'un vecteur generalise
IMPR_GENE(UNITE=39,
          GENE=_F(RESU_GENE=FGEN,
                  TOUT_ORDRE='OUI',
                  TOUT_CMP_GENE='OUI',
                  TOUT_CHAM='OUI',),);

# Test de l'impression d'un harm_gene
IMPR_GENE(UNITE=39,
          GENE=_F(RESU_GENE=DYNGEN,
                  TOUT_ORDRE='OUI',
                  TOUT_CMP_GENE='OUI',
                  TOUT_CHAM='OUI',),);


DEFI_FICHIER (ACTION='LIBERER',UNITE=39)

TEST_FICHIER(FICHIER='fort.39',
             NB_VALE=4590,
             VALE_CALC=7.46868879e+04,
             VALE_CALC_K='cfe7353c21c2df62cc82abeea68669f8',
             EXPR_IGNORE = ('ASTER','INSTANT','ORDRE','FREQ'),
             INFO=1);

FIN();
