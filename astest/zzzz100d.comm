# MODIF  DATE 30/07/2012   AUTEUR LEFEBVRE J-P.LEFEBVRE 
# RESPONSABLE ZENTNER I.ZENTNER
# TITRE CALCUL DES INDICES DE NOCIVITE D'UN SEISME
# zzzz100d.para = tps_job 60 mem_job 512Mo ncpus 1 liste_test R
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                   
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================


DEBUT(CODE=_F(NOM='ZZZZ100D', NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))

#--------------------------------------------------------
#
INCLUDE(   UNITE=20 )

#
#--------------------------------------------------------
#
INLBNS=INFO_FONCTION(  NOCI_SEISME=_F(
                             FONCTION = LBNS,
                             PESANTEUR = 9.81,
                             AMOR_REDUIT = 0.05E0)
                       )

#
INLBNS11=INFO_FONCTION(    NOCI_SEISME=_F(
                             FONCTION = LBNS,
                             PESANTEUR = 9.81,
                             OPTION = 'INTE_ARIAS')
                       )

#
INLBNS12=INFO_FONCTION(    NOCI_SEISME=_F(
                             FONCTION = LBNS,
                             OPTION = 'MAXI')
                       )

#
INLBNS13=INFO_FONCTION(    NOCI_SEISME=_F(
                             FONCTION = LBNS,
                             OPTION = 'ACCE_SUR_VITE')
                       )

INLBNS14=INFO_FONCTION(    NOCI_SEISME=_F(
                             FONCTION = LBNS,
                             OPTION = 'VITE_ABSO_CUMU')
                       )

#
INLBNS15=INFO_FONCTION(    NOCI_SEISME=_F(
                             FONCTION = LBNS,
                             PESANTEUR = 9.81,
                             OPTION = 'POUV_DEST')
                       )

#
INLBNS16=INFO_FONCTION(    NOCI_SEISME=_F(
                             FONCTION = LBNS,
                             PESANTEUR = 9.81,
                             OPTION = 'DUREE_PHAS_FORT')
                       )

#
INLBNS17=INFO_FONCTION(    NOCI_SEISME=_F(
                             FONCTION = LBNS,
                             OPTION = 'INTE_SPEC',
                             AMOR_REDUIT = 0.05E0)
                       )

INLBNS18=INFO_FONCTION(    NOCI_SEISME=_F(
                                FONCTION = LBNS,
                                INST_INIT = 10.,
                                INST_FIN = 12.,
                                CRITERE = 'ABSOLU',
                                PRECISION = 2.E-5,
                                COEF = 0.42,
                                PESANTEUR = 9.81,
                                FREQ_INIT = 0.23,
                                FREQ_FIN = 13.21,
                                AMOR_REDUIT = 0.03,
                                NORME = 1.0,
                                BORNE_INF = 0.45,
                                BORNE_SUP = 0.55)
                       )

#
SPEC_H=LIRE_FONCTION(  UNITE=18,
                       TYPE='NAPPE',
                       INDIC_PARA=[1,1],
                       NOM_PARA='AMOR',
                       NOM_PARA_FONC='FREQ',
                       NOM_RESU='ACCE',
                       INDIC_ABSCISSE=[2,1],
                       DEFI_FONCTION=(_F(INDIC_RESU=[2,2]  ),
                                      _F(INDIC_RESU=[2,3]  ),
                                      _F(INDIC_RESU=[2,4]  ),),
                       INTERPOL='LOG',
                       INTERPOL_FONC='LOG',
                       PROL_DROITE='CONSTANT',
                       PROL_GAUCHE='CONSTANT',
                       PROL_DROITE_FONC='CONSTANT',
                       PROL_GAUCHE_FONC='CONSTANT',
                       TITRE='SRO_H ACCE'
                             )

#
INH=INFO_FONCTION(
                       NOCI_SEISME=_F(
                                SPEC_OSCI = SPEC_H,
                                NATURE = 'ACCE',
                                AMOR_REDUIT = 0.05E0)
                     )

INH1=INFO_FONCTION(
                        NOCI_SEISME=_F(
                                SPEC_OSCI = SPEC_H,
                                NATURE = 'ACCE',
                                AMOR_REDUIT = 0.05E0,
                                INST_INIT = 10.,
                                INST_FIN = 12.,
                                CRITERE = 'ABSOLU',
                                PRECISION = 2.E-5,
                                COEF = 0.42,
                                FREQ_INIT = 0.23,
                                FREQ_FIN = 13.21,
                                NORME = 1.0,
                                BORNE_INF = 0.45,
                                BORNE_SUP = 0.55)
                       )

#
#--------------------------------------------------------
#
TEST_TABLE(
                   TABLE=INLBNS,
                NOM_PARA='ACCE_MAX',
                    VALE=1.000
            )

#
TEST_TABLE(
                   TABLE=INLBNS,
                NOM_PARA='VITE_MAX',
                    VALE=0.229056
            )

#
TEST_TABLE(
                   TABLE=INLBNS,
                NOM_PARA='DEPL_MAX',
                    VALE=1.342452
            )

#
TEST_TABLE(
                   TABLE=INLBNS,
                NOM_PARA='INTE_ARIAS',
                    VALE=2.582E-01
            )

#
TEST_TABLE(
                   TABLE=INLBNS,
                NOM_PARA='POUV_DEST',
                    VALE=2.09825E-01
            )

#
TEST_TABLE(
                   TABLE=INLBNS,
                NOM_PARA='ACCE_SUR_VITE',
                    VALE=4.36573
            )

#
TEST_TABLE(
                   TABLE=INLBNS,
                NOM_PARA='VITE_ABSO_CUMU',
                    VALE=4.4337
            )

#
TEST_TABLE(
                   TABLE=INLBNS,
                NOM_PARA='DUREE_PHAS_FORT',
                    VALE=14.83
            )

#
TEST_TABLE(
                   TABLE=INLBNS,
                NOM_PARA='INTE_SPECT',
                    VALE=5.86E-01
            )

#
TEST_TABLE(
                   TABLE=INLBNS11,
                NOM_PARA='INTE_ARIAS',
                    VALE=2.582E-01
            )

#
TEST_TABLE(
                   TABLE=INLBNS12,
                NOM_PARA='ACCE_MAX',
                    VALE=1.000
            )

#
TEST_TABLE(
                   TABLE=INLBNS12,
                NOM_PARA='VITE_MAX',
                    VALE=0.229056
            )

#
TEST_TABLE(
                   TABLE=INLBNS12,
                NOM_PARA='DEPL_MAX',
                    VALE=1.342452
            )

#
TEST_TABLE(
                   TABLE=INLBNS13,
                NOM_PARA='ACCE_SUR_VITE',
                    VALE=4.36573
            )

#
TEST_TABLE(
                   TABLE=INLBNS14,
                NOM_PARA='VITE_ABSO_CUMU',
                    VALE=4.4337
            )

#
TEST_TABLE(
                   TABLE=INLBNS15,
                NOM_PARA='POUV_DEST',
                    VALE=2.09825E-01
            )

#
TEST_TABLE(
                   TABLE=INLBNS16,
                NOM_PARA='DUREE_PHAS_FORT',
                    VALE=14.83
            )

#
TEST_TABLE(
                   TABLE=INLBNS17,
                NOM_PARA='INTE_SPECT',
                    VALE=5.86E-01
            )

TEST_TABLE(
                   TABLE=INLBNS18,
                NOM_PARA='ACCE_MAX',
                    VALE=4.4113E-1
            )

#
TEST_TABLE(
                   TABLE=INLBNS18,
                NOM_PARA='VITE_MAX',
                    VALE=0.393261
            )

#
TEST_TABLE(
                   TABLE=INLBNS18,
                NOM_PARA='DEPL_MAX',
                    VALE=4.95142
            )

#
TEST_TABLE(
                   TABLE=INLBNS18,
                NOM_PARA='INTE_ARIAS',
                     VALE=1.06158E-02
            )

#
TEST_TABLE(
                   TABLE=INLBNS18,
                NOM_PARA='POUV_DEST',
                    VALE=3.28339E-01
            )

#
TEST_TABLE(
                   TABLE=INLBNS18,
                NOM_PARA='ACCE_SUR_VITE',
                    VALE=1.12172
            )

#
TEST_TABLE(
                   TABLE=INLBNS18,
                NOM_PARA='VITE_ABSO_CUMU',
                    VALE=2.85872E-01
            )

#
TEST_TABLE(
                   TABLE=INLBNS18,
                NOM_PARA='DUREE_PHAS_FORT',
                    VALE=4.E-02
            )

#
TEST_TABLE(
                   TABLE=INLBNS18,
                NOM_PARA='INTE_SPECT',
                    VALE=1.32035
            )

TEST_TABLE(
                   TABLE=INH,
                NOM_PARA='INTE_SPECT',
                    VALE=1.49014
            )

TEST_TABLE(
                   TABLE=INH1,
                NOM_PARA='INTE_SPECT',
                    VALE=1.85376
            )

#
#--------------------------------------------------------
#
#
# VALIDATION CORR_ACCE
#

# CAS ANALYTIQUE

TINIT=0.
TFIN=20.
PAS=0.1
A1=1.
A0=2.

LIST=DEFI_LIST_REEL(  DEBUT=TINIT,
                         INTERVALLE=_F(  JUSQU_A = TFIN, PAS = PAS) )

DROITE = FORMULE(NOM_PARA='INST',VALE='A1*INST + A0 ')

ACCE=CALC_FONC_INTERP(FONCTION=DROITE,    LIST_PARA=LIST,
NOM_PARA='INST',
                            NOM_RESU='ACCE',
                            PROL_GAUCHE='EXCLU',  PROL_DROITE='EXCLU',
#                            INTERPOL='INT',
                           INTERPOL='LIN',
                            TITRE=' CORR_ACCE '    )

# ------------------ TEST CORR_DEPL = 'NON' (DEFAUT)-------------------

ACCE1=CALC_FONCTION(CORR_ACCE=_F(  FONCTION = ACCE),
                       )

RMS1=INFO_FONCTION( RMS=_F(  FONCTION = ACCE1)
                         )

TEST_TABLE(      TABLE=RMS1,
                 NOM_PARA='RMS',
                 REFERENCE='ANALYTIQUE',
                 VALE=0.E+00  , CRITERE='ABSOLU' , PRECISION=1.E-10 )

ACCE2=CALC_FONCTION(CORR_ACCE=_F(  FONCTION = LBNS, CORR_DEPL = 'NON'),
                       )

RMS2=INFO_FONCTION( RMS=_F(  FONCTION = ACCE2)
                         )

TEST_TABLE(      TABLE=RMS2,
                 NOM_PARA='RMS',
                 REFERENCE='NON_REGRESSION',
                 VALE=2.278E-01  , CRITERE='ABSOLU' , PRECISION=1.E-4 )


# ------------------ TEST CORR_DEPL = 'OUI' ----------------------------

ACCE3=CALC_FONCTION(CORR_ACCE=_F(  FONCTION = ACCE, CORR_DEPL = 'OUI'),
                       )

RMS3=INFO_FONCTION( RMS=_F(  FONCTION = ACCE3)
                         )

TEST_TABLE(      TABLE=RMS3,
                 NOM_PARA='RMS',
                 REFERENCE='ANALYTIQUE',
                 VALE=0.E+00  , CRITERE='ABSOLU' , PRECISION=1.E-10 )

ACCE4=CALC_FONCTION(CORR_ACCE=_F(  FONCTION = LBNS, CORR_DEPL = 'OUI'),
                       )

RMS4=INFO_FONCTION( RMS=_F(  FONCTION = ACCE4)
                         )

TEST_TABLE(      TABLE=RMS4,
                 NOM_PARA='RMS',
                 REFERENCE='NON_REGRESSION',
                 VALE=2.243E-01  , CRITERE='ABSOLU' , PRECISION=1.E-4 )

#
# FIN VALIDATION CORR_ACCE
##--------------------------------------------------------

##--------------------------------------------------------
# ------------------ TEST DSP ----------------------------
FCOUP = 60.
SRO_7 = [0.0001, 0.0, 0.2, 9.75E-3, 0.51, 6.45E-2, 4.58, 5.74E-1, 14.0, 5.74E-1, 40., 2.5E-1, 60., 2.5E-1]
amort = 0.07
T = 10.

import numpy as NP
from math import pi

sro=DEFI_FONCTION(NOM_PARA='FREQ',
                  VALE=SRO_7,
                  #INTERPOL='LOG',
                  PROL_DROITE='CONSTANT',
                  PROL_GAUCHE='CONSTANT',);


FR_DSP = CALC_FONCTION(DSP=_F(FONCTION=sro,
          FREQ=NP.arange(0., FCOUP, 1./4./pi),
          FREQ_COUP=FCOUP, AMOR_REDUIT=amort,
          DUREE=T, NORME=10.,
          FRACT=0.5,),
          INTERPOL='LIN',)


F_DSP = CALC_FONCTION(COMB_C=(_F(FONCTION=FR_DSP,
         COEF_C = 1.+0.j), ),)

#
#IMPR_FONCTION(UNITE=29,
#              FORMAT='XMGRACE',
#              COURBE=_F(FONCTION=FR_DSP,),)
#
#
DEF_SPEC=DEFI_INTE_SPEC(DIMENSION=1,
                        PAR_FONCTION=_F(NUME_ORDRE_I=1,
                                        NUME_ORDRE_J=1,
                                        FONCTION=F_DSP,),);

POST_DSP=POST_DYNA_ALEA(INTE_SPEC=DEF_SPEC, TOUT_ORDRE = 'OUI',
                        OPTION = 'DIAG', INFO=2,);

TRAJ=GENE_FONC_ALEA(INTE_SPEC=DEF_SPEC,
                    FREQ_INIT=0.0, FREQ_FIN=FCOUP, 
                    NB_POIN=2**12, INFO=2,);

FTRAJ=RECU_FONCTION(TABLE=TRAJ,
                   NOM_PARA_TABL='FONCTION',
                   FILTRE=_F(NOM_PARA='NUME_ORDRE', VALE_I=1,),);

RMS=INFO_FONCTION(RMS=_F(FONCTION=FTRAJ,),);
ECT=INFO_FONCTION(ECART_TYPE=_F(FONCTION=FTRAJ,),);
#  
#
#
##------------TESTS--------------------------------------------
sigma=0.799
m0=0.6394
m1=34.19
m2=2841.8
frapp=10.61

TEST_TABLE(TABLE=POST_DSP,
                       FILTRE=(
                 _F(  NOM_PARA = 'NUME_ORDRE_I',  VALE_I = 1),
                 _F(  NOM_PARA = 'NUME_ORDRE_J',   VALE_I = 1)),
                   NOM_PARA='ECART', VALE=sigma ,
                   CRITERE = 'RELATIF', REFERENCE='SOURCE_EXTERNE',PRECISION=1.E-03,);
TEST_TABLE(TABLE=POST_DSP,
                       FILTRE=(
                 _F(  NOM_PARA = 'NUME_ORDRE_I',  VALE_I = 1),
                 _F(  NOM_PARA = 'NUME_ORDRE_J',   VALE_I = 1)),
                   NOM_PARA='FREQ_APPAR', VALE=frapp ,
                   CRITERE = 'RELATIF', PRECISION=1.E-03,);
TEST_TABLE(TABLE=POST_DSP,
                       FILTRE=(
                 _F(  NOM_PARA = 'NUME_ORDRE_I',  VALE_I = 1),
                 _F(  NOM_PARA = 'NUME_ORDRE_J',   VALE_I = 1)),
                   NOM_PARA='LAMBDA_00', VALE=m0 ,
                   CRITERE = 'RELATIF', PRECISION=1.E-03,);
TEST_TABLE(TABLE=POST_DSP,
                       FILTRE=(
                 _F(  NOM_PARA = 'NUME_ORDRE_I',  VALE_I = 1),
                 _F(  NOM_PARA = 'NUME_ORDRE_J',   VALE_I = 1)),
                   NOM_PARA='LAMBDA_01', VALE=m1 ,
                   CRITERE = 'RELATIF', PRECISION=1.E-03,);

TEST_TABLE(TABLE=POST_DSP,
                       FILTRE=(
                 _F(  NOM_PARA = 'NUME_ORDRE_I',  VALE_I = 1),
                 _F(  NOM_PARA = 'NUME_ORDRE_J',   VALE_I = 1)),
                   NOM_PARA='LAMBDA_02', VALE=m2 ,
                   CRITERE = 'RELATIF', PRECISION=1.E-03,);

TEST_TABLE(      TABLE=ECT,
                 NOM_PARA='ECART_TYPE',
                 REFERENCE='SOURCE_EXTERNE',
                 VALE=sigma  , PRECISION=1.E-3)

TEST_TABLE(      TABLE=RMS,
                 NOM_PARA='RMS',
                 REFERENCE='SOURCE_EXTERNE',
                 VALE=sigma  , PRECISION=1.E-3)

#
# FIN VALIDATION DSP
##--------------------------------------------------------

#
FIN()
#
##
##--------------------------------------------------------
##
