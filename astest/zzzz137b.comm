
# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================


DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))

PRE_IDEAS(UNITE_IDEAS=19,UNITE_MAILLAGE=20)

MESH=LIRE_MAILLAGE(FORMAT="ASTER",UNITE=20)

MODEL=AFFE_MODELE(MAILLAGE=MESH, AFFE=_F(TOUT='OUI', PHENOMENE='THERMIQUE', MODELISATION='AXIS') )

MATE=DEFI_MATERIAU(THER=_F(LAMBDA=1.0,RHO_CP = 2.0))

CHMAT=AFFE_MATERIAU(MAILLAGE=MESH,
                    MODELE=MODEL,
                    AFFE=_F(TOUT='OUI',MATER=MATE,),)


CHTH=AFFE_CHAR_THER(   MODELE=MODEL,
                            ECHANGE=_F(  GROUP_MA = 'AB',
                                       COEF_H = 1.0,  TEMP_EXT = 50.0)
                         )

LTMPS=DEFI_LIST_REEL(   DEBUT=0.,INTERVALLE=(
                            _F(  JUSQU_A = 1.0,   NOMBRE = 2))
                         )

# 1. Calcul de reference :
#-------------------------

TEMPE=THER_LINEAIRE(  MODELE=MODEL,
                          ETAT_INIT=_F(  VALE = 0.E0),
                          INCREMENT=_F(  LIST_INST = LTMPS),
                          CHAM_MATER=CHMAT,
                          EXCIT=_F( CHARGE = CHTH)
                       )


TEST_RESU(RESU=_F(NUME_ORDRE=2,
                  RESULTAT=TEMPE,
                  NOM_CHAM='TEMP',
                  NOEUD='N15',
                  NOM_CMP='TEMP',
                  VALE_CALC=22.4232294839,),
          )



# 2. Validation de AFFE_CHAR_THER / EVOL_CHAR avec des cham_elem / ELEM :
#------------------------------------------------------------------------

TEMP_EX1 = CREA_CHAMP(TYPE_CHAM = 'CART_TEMP_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(
                                    GROUP_MA='AB',
                                    NOM_CMP=('TEMP',),
                                    VALE=(0.,),
                                    ),),
                     )

TEMP_EX2 = CREA_CHAMP(TYPE_CHAM = 'CART_TEMP_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(
                                    GROUP_MA='AB',
                                    NOM_CMP=('TEMP',),
                                    VALE=(50.,),
                                    ),),
                     )

TEMP_EX3 = CREA_CHAMP(TYPE_CHAM = 'CART_TEMP_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(
                                    GROUP_MA='AB',
                                    NOM_CMP=('TEMP',),
                                    VALE=(50.,),
                                    ),),
                     )

COEF_H1 = CREA_CHAMP(TYPE_CHAM = 'CART_COEH_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(GROUP_MA='AB',
                                     NOM_CMP=('H',),
                                     VALE=(0.,),
                                 ),),
                     )

COEF_H2 = CREA_CHAMP(TYPE_CHAM = 'CART_COEH_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(GROUP_MA='AB',
                                     NOM_CMP=('H',),
                                     VALE=(1.0,),
                                 ),),
                     )

COEF_H3 = CREA_CHAMP(TYPE_CHAM = 'CART_COEH_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(GROUP_MA='AB',
                                     NOM_CMP=('H',),
                                     VALE=(1.0,),
                                 ),),
                     )

EVOL_RE = CREA_RESU(OPERATION='AFFE',
                    TYPE_RESU='EVOL_CHAR',
                    NOM_CHAM='T_EXT',
                    AFFE=(_F( CHAM_GD=TEMP_EX1, INST=0., ),
                          _F( CHAM_GD=TEMP_EX2, INST=0.5, ),
                          _F( CHAM_GD=TEMP_EX3, INST=1.0, ),
                          ),
                    )
EVOL_RE = CREA_RESU(OPERATION='AFFE', reuse =EVOL_RE,
                    TYPE_RESU='EVOL_CHAR',
                    NOM_CHAM='COEF_H',
                    AFFE=(_F( CHAM_GD=COEF_H1, INST=0., ),
                          _F( CHAM_GD=COEF_H2, INST=0.5, ),
                          _F( CHAM_GD=COEF_H3, INST=1.0, ),
                          ),
                    )


# Pour simuler l'usage de AFFE_CHAR_THER / EVOL_CHAR avec des champs provenant
# de Code_Saturne (carte -> cham_elem / ELEM) :
#  * on imprime les cartes au format MED
#  * on relit des cham_elem / ELEM

IMPR_RESU(PROC0='NON', FORMAT='MED', UNITE=81,  RESU=_F(RESULTAT=EVOL_RE))
EVOL_RE1=LIRE_RESU(TYPE_RESU='EVOL_CHAR', FORMAT='MED',  UNITE=81,
              MODELE=MODEL, PROL_ZERO='OUI',  TOUT_ORDRE='OUI',
              FORMAT_MED=(
                   _F(NOM_RESU='EVOL_RE', NOM_CHAM='T_EXT'),
                   _F(NOM_RESU='EVOL_RE', NOM_CHAM='COEF_H'),
              ));

# Pour simuler la projection d'un maillage sur un autre :
EVOL_RE2=PROJ_CHAMP(RESULTAT=EVOL_RE1, MODELE_1=MODEL, MODELE_2=MODEL, PROL_ZERO='OUI',
                    VIS_A_VIS= _F(GROUP_MA_1='AB',GROUP_MA_2='AB', ),
)

CHTH2=AFFE_CHAR_THER(MODELE=MODEL,
                     EVOL_CHAR=EVOL_RE2,
                     )

TEMPE2=THER_LINEAIRE(  MODELE=MODEL,
                          ETAT_INIT=_F(  VALE = 0.E0),
                          INCREMENT=_F(  LIST_INST = LTMPS),
                          CHAM_MATER=CHMAT,
                          EXCIT=_F( CHARGE = CHTH2)
                       )

# Comparison with TEMPE
TEST_RESU(RESU=_F(NUME_ORDRE=2,
                  RESULTAT=TEMPE2,
                  REFERENCE='AUTRE_ASTER',
                  NOM_CHAM='TEMP',
                  NOEUD='N15',
                  NOM_CMP='TEMP',
                  VALE_CALC=22.4232294839,
                  VALE_REFE=22.4232294839,
                  PRECISION=1.E-6),
          )



# 3. Validation de AFFE_CHAR_THER / EVOL_CHAR avec des cartes :
#------------------------------------------------------------------------

TEMPEX10 = CREA_CHAMP(TYPE_CHAM = 'CART_TEMP_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(
                                    TOUT='OUI',
                                    NOM_CMP=('TEMP',),
                                    VALE=(0.,),
                                    ),
                                  _F(
                                    GROUP_MA='AB',
                                    NOM_CMP=('TEMP',),
                                    VALE=(0.,),
                                    ),),
                     )

TEMPEX20 = CREA_CHAMP(TYPE_CHAM = 'CART_TEMP_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(
                                    TOUT='OUI',
                                    NOM_CMP=('TEMP',),
                                    VALE=(0.,),
                                    ),
                                  _F(
                                    GROUP_MA='AB',
                                    NOM_CMP=('TEMP',),
                                    VALE=(50.,),
                                    ),),
                     )

TEMPEX30 = CREA_CHAMP(TYPE_CHAM = 'CART_TEMP_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(
                                    TOUT='OUI',
                                    NOM_CMP=('TEMP',),
                                    VALE=(0.,),
                                    ),
                                  _F(
                                    GROUP_MA='AB',
                                    NOM_CMP=('TEMP',),
                                    VALE=(50.,),
                                    ),),
                     )

COEF_H10 = CREA_CHAMP(TYPE_CHAM = 'CART_COEH_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(
                                    TOUT='OUI',
                                    NOM_CMP=('H',),
                                    VALE=(0.,),
                                    ),
                                  _F(GROUP_MA='AB',
                                     NOM_CMP=('H',),
                                     VALE=(0.,),
                                 ),),
                     )

COEF_H20 = CREA_CHAMP(TYPE_CHAM = 'CART_COEH_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(
                                    TOUT='OUI',
                                    NOM_CMP=('H',),
                                    VALE=(0.,),
                                    ),
                                  _F(GROUP_MA='AB',
                                     NOM_CMP=('H',),
                                     VALE=(1.0,),
                                 ),),
                     )

COEF_H30 = CREA_CHAMP(TYPE_CHAM = 'CART_COEH_R',
                     OPERATION = 'AFFE',
                     MODELE    = MODEL,
                     AFFE      = (_F(
                                    TOUT='OUI',
                                    NOM_CMP=('H',),
                                    VALE=(0.,),
                                    ),
                                  _F(GROUP_MA='AB',
                                     NOM_CMP=('H',),
                                     VALE=(1.0,),
                                 ),),
                     )

EVOL_RE3= CREA_RESU(OPERATION='AFFE',
                    TYPE_RESU='EVOL_CHAR',
                    NOM_CHAM='T_EXT',
                    AFFE=(_F( CHAM_GD=TEMPEX10, INST=0., ),
                          _F( CHAM_GD=TEMPEX20, INST=0.5, ),
                          _F( CHAM_GD=TEMPEX30, INST=1.0, ),
                          ),
                    )
EVOL_RE3= CREA_RESU(OPERATION='AFFE', reuse =EVOL_RE3,
                    TYPE_RESU='EVOL_CHAR',
                    NOM_CHAM='COEF_H',
                    AFFE=(_F( CHAM_GD=COEF_H10, INST=0., ),
                          _F( CHAM_GD=COEF_H20, INST=0.5, ),
                          _F( CHAM_GD=COEF_H30, INST=1.0, ),
                          ),
                    )

CHTH3=AFFE_CHAR_THER(MODELE=MODEL,
                     EVOL_CHAR=EVOL_RE3,
                     )

TEMPE3=THER_LINEAIRE(  MODELE=MODEL,
                          ETAT_INIT=_F(  VALE = 0.E0),
                          INCREMENT=_F(  LIST_INST = LTMPS),
                          CHAM_MATER=CHMAT,
                          EXCIT=_F( CHARGE = CHTH3)
                       )

# Comparison with TEMPE
TEST_RESU(RESU=_F(NUME_ORDRE=2,
                  RESULTAT=TEMPE3,
                  REFERENCE='AUTRE_ASTER',
                  NOM_CHAM='TEMP',
                  NOEUD='N15',
                  NOM_CMP='TEMP',
                  VALE_CALC=22.4232294839,
                  VALE_REFE=22.4232294839,
                  PRECISION=1.E-6),
          )

FIN()
#
