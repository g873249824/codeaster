#======================================================================
#
# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#
# CAS-TEST DE REFERENCE : SSNP129A
#
#=====================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU

import numpy as NP

TREF = 20.

Tmax = 240.

NCAL = 10

tmax=1.

ZERO =DEFI_CONSTANTE(VALE=0.0);

YOUN=DEFI_FONCTION(NOM_PARA='TEMP',VALE=(  0., 30000.0E6,
                                         500., 10000.0E6,
                                           ),);

ALPH=DEFI_FONCTION(NOM_PARA='TEMP',VALE=(  0., 0.5e-05,
                                         500., 0.8e-05,
                                           ),);


MATERI=DEFI_MATERIAU(
                    ELAS_FO=_F(E=YOUN,
                               NU=ZERO ,
                               TEMP_DEF_ALPHA=TREF,
                               ALPHA=ALPH,),
                 BETON_REGLE_PR=_F(D_SIGM_EPSI=-10000.0E6,
                                   SYT=3.0E6,
                                   SYC=30.0E6,
                                   EPSC=1.E-3,
                                   N=2.),
                 );


LMAT2  = [None]*(NCAL)
time=0.
tmax=1.
for i in range(NCAL):
    timem = time
    time = timem + tmax/NCAL
    Ti = TREF + time/tmax * (Tmax - TREF)
    Tm = TREF + timem/tmax * (Tmax - TREF)
    LMAT2[i]=DEFI_MATERIAU(ELAS =_F(E=YOUN(Ti),
                                        NU=0.,
                                        ALPHA=0.,),
                 BETON_REGLE_PR=_F(D_SIGM_EPSI=-10000.0E6,
                                   SYT=3.0E6,
                                   SYC=30.0E6,
                                   EPSC=1.E-3,
                                   N=2.),
                                );


compor='BETON_REGLE_PR'


L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=(_F(JUSQU_A=1,
                                     NOMBRE=NCAL,),
                                     ),);

TIMP=DEFI_FONCTION(
                      NOM_PARA='INST',  NOM_RESU='TEMP',
                       VALE=(  0. , TREF, 1. , Tmax)
                        )

U=SIMU_POINT_MAT(COMPORTEMENT=_F(RELATION=compor,),
                 MATER=MATERI,
                 MODELISATION='D_PLAN',
                 SUPPORT='ELEMENT',
                   AFFE_VARC=(
                   _F(  NOM_VARC='TEMP',
                        VALE_FONC=TIMP,
                        VALE_REF=TREF),),
                 INCREMENT=_F(LIST_INST=L_INST,),
                 NEWTON=_F(REAC_ITER=1,),
                 EPSI_IMPOSE=_F(EPXX=ZERO),
                 );

IMPR_TABLE(TABLE=U,);

MATER  = [None]*NCAL
RESU   = [None]*NCAL

SXM = 0.
EXM = 0.

Nbvari=1

Vim = NP.zeros(Nbvari)

time = 0.
tmax=1.
epsi=1.e-10

VERIF=FORMULE(NOM_PARA=('VAL_REF', 'VAL_CAL'),
              VALE='abs ((VAL_CAL - VAL_REF)/VAL_REF)')

for i in range(NCAL-1):

          timem = time

          time = timem + tmax/NCAL

          Ti = TREF + time/tmax * (Tmax - TREF)

          Tm = TREF + timem/tmax * (Tmax - TREF)

          # deformation mecanique imposee correspondant a la deformation thermique du premier calcul

          epsimp = DEFI_CONSTANTE(VALE=-ALPH(Ti)*(Ti - TREF));
          EXM    = -ALPH(Tm)*(Tm - TREF)

          print 'i=',i, ' instant=', time, ' Temperature=',Ti

          list = DEFI_LIST_REEL(DEBUT=timem,
                      INTERVALLE=(_F(JUSQU_A=time,NOMBRE=1,),),);

          RESU[i]=SIMU_POINT_MAT(COMPORTEMENT=_F(RELATION=compor,),
                                 MATER=LMAT2[i],
                                 SUPPORT='ELEMENT',
                                 MODELISATION='D_PLAN',
                                 AFFE_VARC=(
                                   _F(  NOM_VARC='TEMP',
                                        VALE_FONC=TIMP,
                                        VALE_REF=TREF),
                                        ),
                                 INCREMENT=_F(LIST_INST = list, ),
                                 NEWTON=_F(REAC_ITER=1,),
                                 EPSI_IMPOSE=_F(EPXX=epsimp),
                                 EPSI_INIT=_F(EPXX=EXM, EPYY=0.,EPZZ=0.,EPXY=0.,EPXZ=0.,EPYZ=0.),
                                 );

          # recuperation des valeurs initiales du futur pas de temps dans la table resultat

          IMPR_TABLE(TABLE=RESU[i]);

          DETRUIRE ( CONCEPT =  _F (NOM =epsimp),);
          DETRUIRE ( CONCEPT =  _F (NOM =list),);

          NOMPARA='VMIS'
          TCOMPR =CALC_TABLE(TABLE=U,ACTION=(
                                _F(OPERATION='FILTRE',NOM_PARA=('INST'),VALE=time,),
                                _F(OPERATION='EXTR',NOM_PARA=('INST',NOMPARA),),
                                _F(OPERATION='RENOMME',NOM_PARA=(NOMPARA, 'VAL_CAL'),),
                                _F(OPERATION='COMB',TABLE=RESU[i],NOM_PARA=('INST'),),
                                _F(OPERATION='EXTR',NOM_PARA=('INST',NOMPARA, 'VAL_CAL'),),
                                _F(OPERATION='RENOMME',NOM_PARA=(NOMPARA, 'VAL_REF'),),
                                _F(OPERATION='OPER',NOM_PARA='DIFF',FORMULE=VERIF),
                                   ),)

          TEST_TABLE( TABLE   = TCOMPR,NOM_PARA  = 'DIFF',
              TYPE_TEST = 'MAX',
              VALE_CALC = 0., VALE_REFE=0.,
              CRITERE   = 'ABSOLU',PRECISION = 1.E-6,
              REFERENCE = 'AUTRE_ASTER',)
          DETRUIRE ( CONCEPT =  _F (NOM =TCOMPR),);

          NOMPARA='TRACE'
          TCOMPR =CALC_TABLE(TABLE=U,ACTION=(
                                _F(OPERATION='FILTRE',NOM_PARA=('INST'),VALE=time,),
                                _F(OPERATION='EXTR',NOM_PARA=('INST',NOMPARA),),
                                _F(OPERATION='RENOMME',NOM_PARA=(NOMPARA, 'VAL_CAL'),),
                                _F(OPERATION='COMB',TABLE=RESU[i],NOM_PARA=('INST'),),
                                _F(OPERATION='EXTR',NOM_PARA=('INST',NOMPARA, 'VAL_CAL'),),
                                _F(OPERATION='RENOMME',NOM_PARA=(NOMPARA, 'VAL_REF'),),
                                _F(OPERATION='OPER',NOM_PARA='DIFF',FORMULE=VERIF),
                                   ),)

          TEST_TABLE( TABLE   = TCOMPR,NOM_PARA  = 'DIFF',
              TYPE_TEST = 'MAX',
              VALE_CALC = 0., VALE_REFE=0.,
              CRITERE   = 'ABSOLU',PRECISION = 1.E-6,
              REFERENCE = 'AUTRE_ASTER',)
          DETRUIRE ( CONCEPT =  _F (NOM =TCOMPR),);




FIN()
