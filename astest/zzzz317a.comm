# MODIF  DATE 06/08/2012   AUTEUR ZENTNER I.ZENTNER 
# TITRE GENERATION DE SIGNAUX SISMIQUES
# zzzz317a.para = tps_job 300 mem_job 256Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# RESPONSABLE ZENTNER I.ZENTNER  
DEBUT(CODE=_F(NOM='zzzz317a',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'))
#
from math import pi,sqrt,log,exp, ceil
#import numpy as NP
###############################################
DT=0.01
NBPO=2**10
frr=2.0
amor=0.6
wg=frr*2.*pi
ecart=5.
#################################################
#
######################################################
# A : SIMULATION POUR DSP SEPARABLE (FREQ FOND CONST)
######################################################
#
#################################################
TSM=8.0
t_ini=0.5
arias =0.05#(en g)
ecart=1.0/9.81 #(en g)
pga=0.2  #(en g)
#
#Attention: ces valeurs sont les moyennes utilises pour la simulation
# - on peut faire des tests de non regression pour une realisation
# - on teste les moyennes pour le cas TYPE=   "CONST"
#
##############################
# OPTION "JH"
##############################
#  ARIAS
#####
ACCE1a=GENE_ACCE_SEISME( INFO =2,  INIT_ALEA=100000,
              PAS_INST       =DT, PESANTEUR =9.81,
              DSP        = _F(AMOR_REDUIT  =amor,FREQ_FOND =frr,),
              MODULATION      = _F(TYPE=   "JENNINGS_HOUSNER", PARA=(0.4, 1.0),
                           DUREE_PHASE_FORTE   =TSM, INST_INI= t_ini, INTE_ARIAS=arias),),

FONCT1=RECU_FONCTION( TABLE=ACCE1a,
                              FILTRE=_F(  NOM_PARA = 'NUME_ORDRE',
                                       VALE_I = 1),
                              NOM_PARA_TABL='FONCTION',)

RMS1=INFO_FONCTION( ECART_TYPE=_F(  FONCTION = FONCT1))
#IMPR_TABLE (TABLE=RMS1,    UNITE=8,);
N1=INFO_FONCTION(  NOCI_SEISME=_F(
                             FONCTION = FONCT1,
                             BORNE_SUP = 0.95,BORNE_INF = 0.05,
                             PESANTEUR = 9.81,AMOR_REDUIT=0.05,
                             OPTION = 'TOUT') )

#IMPR_TABLE (TABLE=N1,  UNITE=8,);
#IMPR_FONCTION(   FORMAT='XMGRACE', UNITE=25, COURBE= (
#                     _F(FONCTION=FONCT1 ,)))
#
TEST_TABLE( TABLE=N1,
                NOM_PARA='INTE_ARIAS', REFERENCE='NON_REGRESSION', PRECISION=1.E-4,
                    VALE=0.056859082634041 )
TEST_TABLE( TABLE=N1,
                NOM_PARA='DUREE_PHAS_FORT',REFERENCE='AUTRE_ASTER', PRECISION=1.E-3,
                VALE=8.52
            )

# ECART
########
ACCE1b=GENE_ACCE_SEISME( INFO =2,  
              INIT_ALEA=100000,NB_POIN=2**10,
              PAS_INST       =DT,PESANTEUR =9.81,
              DSP        = _F(AMOR_REDUIT  =amor,FREQ_FOND =frr,),
              MODULATION      = _F(TYPE=   "JENNINGS_HOUSNER", PARA=(0.4, 1.0),
                           DUREE_PHASE_FORTE   =10., INST_INI= 0.1, ECART_TYPE=ecart),),


FONCT1b=RECU_FONCTION( TABLE=ACCE1b,
                              FILTRE=_F(  NOM_PARA = 'NUME_ORDRE',
                                       VALE_I = 1),
                              NOM_PARA_TABL='FONCTION',)

RMS1b=INFO_FONCTION( ECART_TYPE=_F(  FONCTION = FONCT1b))

TEST_TABLE( TABLE=RMS1b,
                NOM_PARA='ECART_TYPE', REFERENCE='ANALYTIQUE', PRECISION=1.E-1,
                    VALE=ecart*9.81 )
IMPR_FONCTION(   FORMAT='XMGRACE', UNITE=25, COURBE= (
                     _F(FONCTION=FONCT1b ,)))

##############################
# OPTION "GAMMA"
##############################
#  ARIAS
#####
ACCE3=GENE_ACCE_SEISME( INFO =2,INIT_ALEA=1000000,
              PAS_INST       =DT,PESANTEUR =9.81,
              DSP        = _F(AMOR_REDUIT  =amor,FREQ_FOND =frr,),
              MODULATION      = _F(TYPE=   "GAMMA",
                                   DUREE_PHASE_FORTE =TSM, INST_INI= t_ini, INTE_ARIAS =arias), )

FONCT3=RECU_FONCTION(TABLE=ACCE3,
                     FILTRE=_F(  NOM_PARA = 'NUME_ORDRE', VALE_I = 1),
                              NOM_PARA_TABL='FONCTION',)

N3=INFO_FONCTION(  NOCI_SEISME=_F(
                             FONCTION = FONCT3,
                             PESANTEUR = 9.81,AMOR_REDUIT=0.05,
                             OPTION = ('TOUT') ))

#IMPR_TABLE (TABLE=N3,  UNITE=8,);
RMS3=INFO_FONCTION( ECART_TYPE=_F(  FONCTION = FONCT3))
#IMPR_TABLE (TABLE=RMS3,  UNITE=8,);
#
#IMPR_FONCTION(   FORMAT='XMGRACE', UNITE=25, COURBE= (
#                     _F(FONCTION=FONCT3 ,)))

TEST_TABLE( TABLE=N3,
                NOM_PARA='INTE_ARIAS',REFERENCE='NON_REGRESSION', PRECISION=1.E-4,
                    VALE= 0.050175176284679 )


TEST_TABLE( TABLE=N3,REFERENCE='NON_REGRESSION', PRECISION=1.E-4,
                NOM_PARA='DUREE_PHAS_FORT',
                VALE=8.25
            )

# ECART
########
ACCE3b=GENE_ACCE_SEISME( INFO =2,INIT_ALEA=10000,
              PAS_INST       =DT,NB_POIN=2**10,PESANTEUR =9.81,
              DSP        = _F(AMOR_REDUIT  =amor,FREQ_FOND =frr,),
              MODULATION      = _F(TYPE=   "GAMMA",
                                   DUREE_PHASE_FORTE =TSM, INST_INI= 0.5, ECART_TYPE =ecart), )

FONCT3b=RECU_FONCTION( TABLE=ACCE3b,
                              FILTRE=_F(  NOM_PARA = 'NUME_ORDRE',
                                       VALE_I = 1),
                              NOM_PARA_TABL='FONCTION',)

RMS3b=INFO_FONCTION( ECART_TYPE=_F(  FONCTION = FONCT3b))

IMPR_FONCTION(   FORMAT='XMGRACE', UNITE=25, COURBE= (
                     _F(FONCTION=FONCT3b ,)))

TEST_TABLE( TABLE=RMS3b,
                NOM_PARA='ECART_TYPE', REFERENCE='NON_REGRESSION', PRECISION=1.E-4,
                   VALE=1.0070159976669 )
#
##############################
# OPTION "CONSTANT"
##############################
# ECART
########
ACCE2a=GENE_ACCE_SEISME( INFO =2,
#        INIT_ALEA=100000,
              PAS_INST       =DT, NB_POIN=2**11,PESANTEUR =9.81,
              DSP        = _F(AMOR_REDUIT  =amor,FREQ_FOND =frr,),
              MODULATION      = _F(TYPE="CONSTANT", ECART_TYPE=ecart),)

FONCT2a=RECU_FONCTION(    TABLE=ACCE2a,
                              FILTRE=_F(  NOM_PARA = 'NUME_ORDRE',
                                       VALE_I = 1),
                              NOM_PARA_TABL='FONCTION',)


RMS2a=INFO_FONCTION( ECART_TYPE=_F(  FONCTION = FONCT2a))
IMPR_TABLE (TABLE=RMS2a,  UNITE=8,);

TEST_TABLE( TABLE=RMS2a,
                NOM_PARA='ECART_TYPE', REFERENCE='ANALYTIQUE', PRECISION=1.E-1,
                    VALE=ecart*9.81 )

#IMPR_FONCTION(   FORMAT='XMGRACE', UNITE=25, COURBE= ( _F(FONCTION=FONCT2 ,)))





#  ARIAS
#####

ACCE2b=GENE_ACCE_SEISME( INFO =2,INIT_ALEA=100000,
              PAS_INST       =DT, PESANTEUR =9.81,
              DSP             = _F(AMOR_REDUIT  =amor,FREQ_FOND =frr,),
              MODULATION      = _F(TYPE="CONSTANT",DUREE_PHASE_FORTE =TSM, INTE_ARIAS=arias),)


ACCE2=GENE_ACCE_SEISME( INFO =2,INIT_ALEA=100000,
              PAS_INST       =DT, NB_POIN=NBPO,PESANTEUR =9.81,
              DSP        = _F(AMOR_REDUIT  =amor,FREQ_FOND =frr,),
               MODULATION      = _F(TYPE="CONSTANT",
                                   INTE_ARIAS=arias),)

FONCT2=RECU_FONCTION(    TABLE=ACCE2,
                              FILTRE=_F(  NOM_PARA = 'NUME_ORDRE',
                                       VALE_I = 1),
                              NOM_PARA_TABL='FONCTION',)

N2=INFO_FONCTION(  NOCI_SEISME=_F(
                             FONCTION = FONCT2, BORNE_SUP = 0.95,BORNE_INF = 0.05,
                             PESANTEUR = 9.81, AMOR_REDUIT=0.05,OPTION = ('TOUT')) )


RMS2=INFO_FONCTION( ECART_TYPE=_F(  FONCTION = FONCT2))
IMPR_TABLE (TABLE=RMS2,  UNITE=8,);

#IMPR_FONCTION(   FORMAT='XMGRACE', UNITE=25, COURBE= ( _F(FONCTION=FONCT2 ,)))
TEST_TABLE( TABLE=N2,
            NOM_PARA='INTE_ARIAS',REFERENCE='NON_REGRESSION', PRECISION=1.E-4,VALE= 0.046655817603434 )


############################################
# TEST DE L INTERSPECTRE DES FCTS GENEREES
############################################
#
# discretisation temps et freq
Nsim=25
#courbe=[]
comp=1
FO2=[None]*(Nsim+1)
FOM=[None]*(Nsim+1)
iii=0
OM=pi/DT
FREQ_COUP=OM/2./pi
nbp=NBPO  
TT=10.

INTERS=CALC_INTE_SPEC( INST_INIT=0.0,
                       INST_FIN=TT, NB_POIN=nbp, FONCTION=( FONCT2 ),  )
FOM[iii]=RECU_FONCTION(INTE_SPEC=INTERS,NUME_ORDRE_I=1,),
DETRUIRE(CONCEPT=_F(NOM=(INTERS))) 
#
## --------------------------------
#
for iii in range(1, Nsim+1):
   print "RUN  ", iii+1
#
   VECT=GENE_ACCE_SEISME(
              PAS_INST       =DT,NB_POIN=NBPO,PESANTEUR =9.81,
              DSP        = _F(AMOR_REDUIT  =amor,FREQ_FOND =frr,),
              MODULATION      = _F(TYPE="CONSTANT", INTE_ARIAS =arias),)


   TRI1=RECU_FONCTION( TABLE=VECT,
                       FILTRE=_F(  NOM_PARA = 'NUME_ORDRE', VALE_I = 1), NOM_PARA_TABL='FONCTION', )


   INTERS=CALC_INTE_SPEC( INST_INIT=0.0, INST_FIN=TT, NB_POIN=nbp, FONCTION=( TRI1 ), )

   FO2[iii]=RECU_FONCTION(INTE_SPEC=INTERS, NUME_ORDRE_I=1,)

   FOM[iii]=CALC_FONCTION(COMB=(_F( FONCTION = FOM[iii-1], COEF = 1.0),
                                _F( FONCTION = FO2[iii], COEF = 1.0),), )

   DETRUIRE(CONCEPT=_F(NOM=(VECT, INTERS)))
   DETRUIRE(CONCEPT=_F(NOM=(TRI1)))


FONCMF=CALC_FONCTION(  COMB=_F( FONCTION = FOM[iii],
                                    COEF = 1./Nsim), )

FONCMC=CALC_FONCTION(  COMB_C=_F( FONCTION = FONCMF,  COEF_C = 1.+0.j), )

DSP_M=DEFI_INTE_SPEC(    DIMENSION=1,PAR_FONCTION=(
                     _F(  NUME_ORDRE_I = 1,
                                    NUME_ORDRE_J = 1,
                                    FONCTION = FONCMC),  ))

POST_DSP=POST_DYNA_ALEA(  INTE_SPEC=DSP_M,
                                    OPTION='DIAG');


##############################
# TEST DSP de  KT
##############################
#REFERENCE [ 0.00324168  0.00014989] (DSP CP)

TEST_FONCTION(VALEUR=(
                    _F(  FONCTION = FONCMF,
                      VALE_PARA = 10.,
                      VALE_REFE =0.00014899 ,
                      REFERENCE='ANALYTIQUE',
                      PRECISION = 2.5E-1,),

                     _F(  FONCTION = FONCMF,
                      VALE_PARA = 10.,
                      VALE_REFE = 1.267472288E-04 ,
                      REFERENCE='NON_REGRESSION',
                      PRECISION = 1.E-6,),),);

TEST_FONCTION(VALEUR=(
                    _F(  FONCTION = FONCMF,
                      VALE_PARA = 1.,
                      VALE_REFE =0.00324168 ,
                      REFERENCE='ANALYTIQUE',
                      PRECISION = 1.E-1,),

                     _F(  FONCTION = FONCMF,
                      VALE_PARA = 1.,
                      VALE_REFE = 3.05556620279E-03 ,
                      REFERENCE='NON_REGRESSION',
                      PRECISION = 1.E-6,),),);

ecart0=0.174711603824  # valeur theorique de la DSP cible
TEST_TABLE(TABLE=POST_DSP,
           FILTRE=(
        _F(NOM_PARA='NUME_ORDRE_I',VALE_I=1),
        _F(NOM_PARA='NUME_ORDRE_J',VALE_I=1),),
        NOM_PARA='ECART',
        REFERENCE='ANALYTIQUE',
        VALE=ecart0,
        PRECISION=1.E-2)


#
###############################
####    TEST  visuel
###############################
## ---------------------------------------------------------------------
#def calc_dsp_KT(lfreq, w0,amor, So=1.):
## KT model 
# 
#      x11  =NP.array([4.*(amor**2)*(w0**2)*FREQ**2  for FREQ in lfreq ])
#      xnum =x11+w0**4
#      denom=NP.array([ (w0**2-FREQ**2)**2 for FREQ in lfreq ])
#      denom=denom+x11
#      valkt=xnum/denom
## CP filter
#      wcp=0.5*pi
#      amocp=1.0
#      x11  =NP.array([4.*(amocp**2)*(wcp**2)*FREQ**2  for FREQ in lfreq ])
#      denom=NP.array([ (wcp**2-FREQ**2)**2 for FREQ in lfreq ])
#      denom=denom+x11
#      valcp=NP.array([FREQ**4  for FREQ in lfreq ])/denom
#
#      dsp=valcp*valkt
#      vari=NP.trapz(dsp,lfreq)
#      dsp=dsp/vari*So*.5
#      dsp=dsp*So
#      return dsp
##
FIN( )
