# MODIF  DATE 18/09/2007   AUTEUR PELLET J.PELLET 
# TITRE : VALIDATION DES CONDITIONS DE DIRICHLET AVEC X-FEM EN 3D
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(NOM='SSNV198A',NIV_PUB_WEB='INTERNET'),)

#----------------------------------------------
#             MAILLAGE 
#----------------------------------------------

PRE_GIBI();
lx=1.
lz=1.
ly=1.
MAILLAG1=LIRE_MAILLAGE(INFO=1,);

MAILLAG1=DEFI_GROUP(reuse =MAILLAG1,
                    MAILLAGE=MAILLAG1,
                    CREA_GROUP_NO=(_F(GROUP_MA='VOL',),
                                   _F(NOM='SURFBAC',
                                      OPTION='PLAN',
                                      POINT=(0.,0.,0.),
                                      VECT_NORMALE=(1.,0.,0.),
                                      PRECISION=1.E-6,),
                                   _F(NOM='SURFFRO',
                                      OPTION='PLAN',
                                      POINT=(lx,0.,0.),
                                      VECT_NORMALE=(1.,0.,0.),
                                      PRECISION=1.E-6,),
                                      ),);



#----------------------------------------------
#                   MODELE ET FISSURE
#----------------------------------------------

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAG1,
                     AFFE=_F(GROUP_MA=('VOL',),
                             PHENOMENE='MECANIQUE',
                             MODELISATION='3D',),
                    );


LN=FORMULE(NOM_PARA=('X','Y','Z'),VALE='Z-lz/2.');
LT=FORMULE(NOM_PARA=('X','Y','Z'),VALE='Y-ly/2.');

FISS=DEFI_FISS_XFEM(MODELE=MODELEIN,
                    DEFI_FISS=_F(FONC_LT=LT,FONC_LN=LN,),
                    GROUP_MA_ENRI='VOL',
                    ORIE_FOND=_F(PFON_INI= (0. ,ly/2.    ,lz/2. ),
                                 VECT_ORIE=(0. ,0.       ,1.    ),
                                 PT_ORIGIN=(0. ,ly ,lz/2. ),),
                    );


MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN,FISSURE=FISS,INFO=1,);

CHXFEM=AFFE_CHAR_MECA(MODELE=MODELEK,LIAISON_XFEM='OUI',INFO=1,);

#----------------------------------------------
#                   MATERIAU
#----------------------------------------------

E=100.0E6
nu=0.
rho=7800.
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu,RHO=rho,),);

CHAMPMA1=AFFE_MATERIAU(MAILLAGE=MAILLAG1,
                       MODELE=MODELEK,
                       AFFE=_F(TOUT = 'OUI',
                                MATER=ACIER,
                                TEMP_REF=0.0,),
                             );


#----------------------------------------------------------
#                   CHARGEMENT : CHAMP AUXILIAIRE MODE III
#----------------------------------------------------------

CH=AFFE_CHAR_MECA(MODELE=MODELEK,
                  DDL_IMPO=(
                               _F(GROUP_NO='SURFBAC',DX=0.,DY=0.,DZ=0.),
                               _F(GROUP_NO='SURFFRO',DX=1.E-6),
                              ),
                  INFO=2,
                  );


#----------------------------------------------
#                   RESOLUTION
#----------------------------------------------

L_INS1=DEFI_LIST_REEL(DEBUT=0.0,INTERVALLE=_F(JUSQU_A=1.0,NOMBRE=1,),);

UTOT1=STAT_NON_LINE(MODELE=MODELEK,
                   CHAM_MATER=CHAMPMA1,
                   EXCIT=(_F(CHARGE=CHXFEM,),
                          _F(CHARGE=CH),),
                   COMP_ELAS=_F(RELATION='ELAS',
                                GROUP_MA='VOL',),
                   INCREMENT=_F(LIST_INST=L_INS1,
                                INST_FIN=1.0,),
                   SOLVEUR=_F(PCENT_PIVOT = 200,METHODE='MUMPS',),
                   NEWTON=_F(REAC_ITER=1,),
                   ARCHIVAGE=_F(CHAM_EXCLU='VARI_ELGA',),
                   INFO=1,);

# -------------------------------------------------------------   
#            POST-TRAITEMENT POUR LA VISUALISATION X-FEM   
# -------------------------------------------------------------   

MA_XFEM=POST_MAIL_XFEM(MAILLAGE_SAIN = MAILLAG1,
                       MODELE        = MODELEK,
                       INFO          = 2)

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D',),) 

RES_XFEM=POST_CHAM_XFEM(MAILLAGE_SAIN = MAILLAG1,
                        MAILLAGE_FISS = MA_XFEM,
                        MODELE        = MODELEK,
                        MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT1,
                        NOM_CHAM      = ('DEPL','SIEF_ELGA'),
                        INFO          = 2)

#IMPR_RESU(FORMAT='RESULTAT',RESU=_F(MAILLAGE= MA_XFEM));
#IMPR_RESU(FORMAT='GMSH',UNITE=82,RESU=_F(RESULTAT=RES_XFEM));


DEPL_1 = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R',
                    OPERATION='EXTR',
                    RESULTAT = RES_XFEM,
                    NOM_CHAM='DEPL',
                   );

#IMPR_RESU(FORMAT='GMSH',UNITE=83,RESU=_F(RESULTAT=RES_XFEM));
#IMPR_RESU(FORMAT='GMSH',UNITE=83,RESU=_F(CHAM_GD=DEPL_1,),);

MA_XFEM=DEFI_GROUP(reuse =MA_XFEM,
                    MAILLAGE=MA_XFEM,
                    CREA_GROUP_NO=(
                                   _F(NOM='SURFBAC',
                                      OPTION='PLAN',
                                      POINT=(0.,0.,0.),
                                      VECT_NORMALE=(1.,0.,0.),
                                      PRECISION=1.E-6,),
                                   _F(NOM='SURFFRO',
                                      OPTION='PLAN',
                                      POINT=(lx,0.,0.),
                                      VECT_NORMALE=(1.,0.,0.),
                                      PRECISION=1.E-6,),
                                      ),);

DEP_BACK= POST_RELEVE_T ( ACTION =_F(INTITULE  = 'DEPLACEMENT',
                                    GROUP_NO  = 'SURFBAC',
                                    CHAM_GD   = DEPL_1,
                                    NOM_CMP   = ( 'DX','DY','DZ'),
                                    OPERATION = 'EXTRACTION',),);

DEP_FRON= POST_RELEVE_T ( ACTION =_F(INTITULE  = 'DEPLACEMENT',
                                    GROUP_NO  = 'SURFFRO',
                                    CHAM_GD   = DEPL_1,
                                    NOM_CMP   = ( 'DX','DY','DZ'),
                                    OPERATION = 'EXTRACTION',),);

# filtre sur les noms des noeuds : on vire les noeuds NM... et NP....
# pour ne garder que les N... et NX...
DEP_BACK = CALC_TABLE(reuse = DEP_BACK,
                      TABLE = DEP_BACK,
                      ACTION = (_F(OPERATION = 'FILTRE',
                                  NOM_PARA  = 'NOEUD',
                                  CRIT_COMP = 'REGEXP',
                                  VALE_K    = 'N[^P]',),
                               _F(OPERATION = 'FILTRE',
                                  NOM_PARA  = 'NOEUD',
                                  CRIT_COMP = 'REGEXP',
                                  VALE_K    = 'N[^M]',),),)
        
DEP_FRON = CALC_TABLE(reuse = DEP_FRON,
                      TABLE = DEP_FRON,
                      ACTION = (_F(OPERATION = 'FILTRE',
                                  NOM_PARA  = 'NOEUD',
                                  CRIT_COMP = 'REGEXP',
                                  VALE_K    = 'N[^P]',),
                               _F(OPERATION = 'FILTRE',
                                  NOM_PARA  = 'NOEUD',
                                  CRIT_COMP = 'REGEXP',
                                  VALE_K    = 'N[^M]',),),)

IMPR_TABLE(TABLE=DEP_BACK)
IMPR_TABLE(TABLE=DEP_FRON)

# test des noeuds bloques
TEST_TABLE(TABLE=DEP_BACK,
           NOM_PARA='DX',
           TYPE_TEST='MAX',
           VALE=0.,
           CRITERE='ABSOLU',
           PRECISION=1e-16,
           REFERENCE='ANALYTIQUE',);

TEST_TABLE(TABLE=DEP_BACK,
           NOM_PARA='DX',
           TYPE_TEST='MIN',
           VALE=0.,
           CRITERE='ABSOLU',
           PRECISION=1e-16,
           REFERENCE='ANALYTIQUE',);

TEST_TABLE(TABLE=DEP_BACK,
           NOM_PARA='DY',
           TYPE_TEST='MAX',
           VALE=0.,
           CRITERE='ABSOLU',
           PRECISION=1e-16,
           REFERENCE='ANALYTIQUE',);

TEST_TABLE(TABLE=DEP_BACK,
           NOM_PARA='DY',
           TYPE_TEST='MIN',
           VALE=0.,
           CRITERE='ABSOLU',
           PRECISION=1e-16,
           REFERENCE='ANALYTIQUE',);

TEST_TABLE(TABLE=DEP_BACK,
           NOM_PARA='DZ',
           TYPE_TEST='MAX',
           VALE=0.,
           CRITERE='ABSOLU',
           PRECISION=1e-16,
           REFERENCE='ANALYTIQUE',);

TEST_TABLE(TABLE=DEP_BACK,
           NOM_PARA='DZ',
           TYPE_TEST='MIN',
           VALE=0.,
           CRITERE='ABSOLU',
           PRECISION=1e-16,
           REFERENCE='ANALYTIQUE',);


# test des noeuds de traction
TEST_TABLE(TABLE=DEP_FRON,
           NOM_PARA='DX',
           TYPE_TEST='MAX',
           VALE=1.E-6,
           CRITERE='RELATIF',
           PRECISION=1e-12,
           REFERENCE='ANALYTIQUE',);

TEST_TABLE(TABLE=DEP_FRON,
           NOM_PARA='DX',
           TYPE_TEST='MIN',
           VALE=1.E-6,
           CRITERE='RELATIF',
           PRECISION=1e-12,
           REFERENCE='ANALYTIQUE',);


FIN();
