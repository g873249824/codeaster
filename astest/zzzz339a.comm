# person_in_charge: renaud.bargellini at edf.fr
# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

# Modelisation A : FEM

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),PAR_LOT='OUI',DEBUG=_F(SDVERI='OUI'))

MA=LIRE_MAILLAGE(FORMAT='MED');

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='3D',),);

MAT_TEST=DEFI_MATERIAU(ELAS=_F(E=1,
                               NU=0,),);

CH_MAT=AFFE_MATERIAU(MAILLAGE=MA,
                     AFFE=_F(TOUT='OUI',
                             MATER=MAT_TEST,),);

f_sig=FORMULE(NOM_PARA=('X','Y','Z'),
              VALE='X-Y',)

CHXN=CREA_CHAMP(TYPE_CHAM='NOEU_GEOM_R',
                OPERATION='EXTR',
                MAILLAGE=MA,
                NOM_CHAM='GEOMETRIE');

CHXG=CREA_CHAMP(TYPE_CHAM='ELGA_GEOM_R',
                OPERATION='DISC',
                MODELE=MO,
                CHAM_GD=CHXN);

SIEFINI1=CREA_CHAMP(TYPE_CHAM='ELGA_NEUT_F',
                    OPERATION='AFFE',
                    MODELE=MO,
                    PROL_ZERO='OUI',
                    AFFE=_F(TOUT='OUI',
                            NOM_CMP=('X1',),
                            VALE_F=(f_sig,)));

SIEFINI2=CREA_CHAMP(TYPE_CHAM='ELGA_NEUT_R',
                    OPERATION='EVAL',
                    CHAM_F=SIEFINI1,
                    CHAM_PARA=CHXG);

S_INIT=CREA_CHAMP(TYPE_CHAM='ELGA_SIEF_R',
                    OPERATION='ASSE',
                    MODELE=MO,
                    PROL_ZERO='OUI',
                    ASSE=_F(TOUT='OUI',
                            CHAM_GD=SIEFINI2,
                            NOM_CMP=('X1',),
                            NOM_CMP_RESU=('SIYY')));

LIMIT=AFFE_CHAR_MECA(MODELE=MO,
                     DDL_IMPO=_F(GROUP_MA='LEVR_INF',
                                 DX=0,
                                 DY=0,
                                 DZ=0,),);

LIST_R=DEFI_LIST_REEL(DEBUT=0,
                      INTERVALLE=_F(JUSQU_A=1,
                                    NOMBRE=1,),);

L_INST=DEFI_LIST_INST(DEFI_LIST=_F(METHODE='MANUEL',
                                   LIST_INST=LIST_R,),);

RESU=STAT_NON_LINE(MODELE=MO,
                   CHAM_MATER=CH_MAT,
                   ETAT_INIT=_F(SIGM=S_INIT),
                   EXCIT=_F(CHARGE=LIMIT,
                            TYPE_CHARGE='FIXE_CSTE',),
                   COMPORTEMENT=_F(RELATION='ELAS',
                                TOUT='OUI',),
                   INCREMENT=_F(LIST_INST=L_INST,),);

FOND=DEFI_FOND_FISS(MAILLAGE=MA,
                    FOND_FISS=_F(GROUP_NO='FOND',),
                    LEVRE_SUP=_F(GROUP_MA='LEVR_SUP',),
                    LEVRE_INF=_F(GROUP_MA='LEVR_INF',),)

RESU=CALC_CHAMP(reuse=RESU,
                    RESULTAT=RESU,
                    DEFORMATION=('EPSI_ELGA','EPSP_ELNO',),
                   VARI_INTERNE=('VARI_ELNO',)
               );
#CALCUL DE G DIRECT
G_INIT=CALC_G(THETA=_F(FOND_FISS=FOND,
                       R_INF=0.1,
                       R_SUP=0.5,),
              RESULTAT=RESU,
              INST=1,
              LISSAGE=_F(DEGRE=0),
              ETAT_INIT=_F(SIGM=S_INIT,),
              OPTION='CALC_G',);
              
#CALCUL DE K PAR POST_K1_K2_K3
KMECA=POST_K1_K2_K3(FOND_FISS=FOND,
                    RESULTAT=RESU) 

#CALCUL DES G et K par CALC_K_G
G_INIT2=CALC_G(THETA=_F(FOND_FISS=FOND,
                       R_INF=0.1,
                       R_SUP=0.5,),
              RESULTAT=RESU,
              INST=1,
              LISSAGE=_F(DEGRE=0),
              ETAT_INIT=_F(SIGM=S_INIT,),
              OPTION='CALC_K_G',);

                    
TEST_TABLE(CRITERE='RELATIF',
           VALE_CALC=2.88980042335E-05,
           NOM_PARA='G',
           TABLE=G_INIT,
           FILTRE=(_F(NOM_PARA='NOEUD',
                      VALE_K='N1149',),
                  ),
           )

IMPR_TABLE(TABLE=G_INIT,UNITE=9)
IMPR_TABLE(TABLE=G_INIT2,UNITE=9)
IMPR_TABLE(TABLE=KMECA,UNITE=8)

IMPR_RESU(FORMAT='MED',UNITE=80,RESU=_F(RESULTAT=RESU))

FIN(FORMAT_HDF='NON',);
