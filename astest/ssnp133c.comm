# MODIF  DATE 18/01/2010   AUTEUR LAVERNE J.LAVERNE 
# TITRE TEST DES ELEMENTS D'INTERFACE SUR UNE PLAQUE TROUEE
# ssnp133c.para = tps_job 150 mem_job 100Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F( NOM = 'SSNP133C',NIV_PUB_WEB='INTERNET',VISU_EFICAS='NON'),PAR_LOT = 'OUI')

# NB DE PAS DE TEMPS DE CALCUL ET NOMBRE DE PAS DE TEMPS ARCHIVE
tfin=149
nbpas=tfin
nbpas_arch = tfin
c_mult_pilo = 10

# DONNEES MATERIAU
young = 30000.E6
poiss = 0.2
Gc = 100.
Sc = 2.E5

#--------------------------------------------------------------
# MAILLAGE ET MODELE
#--------------------------------------------------------------
PRE_GMSH()
MA_0 = LIRE_MAILLAGE()

MA = CREA_MAILLAGE(MAILLAGE  = MA_0, LINE_QUAD = _F(TOUT='OUI')) 

MA = DEFI_GROUP(reuse = MA,
       MAILLAGE = MA,
       CREA_GROUP_MA = (
          _F(NOM = 'FACE_SUP', GROUP_MA = 'GM4'),
          _F(NOM = 'MATIERE' , GROUP_MA = 'GM5'),
          _F(NOM = 'JOINT_G' , GROUP_MA = 'GM55'),
          _F(NOM = 'JOINT_D' , GROUP_MA = 'GM54'),
          _F(NOM = 'JOINT',    UNION = ('JOINT_G', 'JOINT_D')),
       ),
       CREA_GROUP_NO = (
          _F(NOM = 'P_RIG',    GROUP_MA = 'GM1'),
          _F(GROUP_MA = 'FACE_SUP'),
          _F(GROUP_MA = 'JOINT'),          
          _F(NOM = 'SYME_BD',GROUP_MA = 'GM56'),
          _F(NOM = 'SYME_BG',GROUP_MA = 'GM57'),
          _F(NOM = 'SYMETRIE',UNION   = ('SYME_BD', 'SYME_BG')),
         )
       )

# RENUMEROTATION LOCALE DES ELEMENTS D'INTERFACE       
MA=MODI_MAILLAGE(reuse =MA,
                   MAILLAGE=MA,
                   ORIE_FISSURE=_F(GROUP_MA='JOINT'),
                   INFO=1
                 )


MO = AFFE_MODELE(
       MAILLAGE = MA,
       AFFE = (
         _F(
           GROUP_MA     = ('MATIERE','FACE_SUP'),
           PHENOMENE    = 'MECANIQUE',
           MODELISATION = 'D_PLAN' ),
         _F(
           GROUP_MA     = 'JOINT',
           PHENOMENE    = 'MECANIQUE',
           MODELISATION = 'PLAN_INTERFACE'),
        ), )

#  REPERE LOCAL DES ELEMENTS D'INTERFACE       
ORIEN_FI=AFFE_CARA_ELEM(MODELE=MO,
                     MASSIF=(
                             _F(GROUP_MA='JOINT',ANGL_EULER=(90., 0. ,0.)),
                                 ));


#--------------------------------------------------------------
# DEFINITION DES PARAMETRES MATERIAUX
#--------------------------------------------------------------

BETON = DEFI_MATERIAU(
                      ELAS      = _F( E              = young,
                                      NU             = poiss,
                                         ),
                     RUPT_FRAG = _F(
                                    GC             = Gc,
                                    SIGM_C         = Sc,
                                    RIGI_GLIS      =100.0,
                                    PENA_LAGR      =100.0,
                                         ),
                         )
        
CHMAT = AFFE_MATERIAU(
          MAILLAGE = MA,
          AFFE = _F(
          GROUP_MA = ('MATIERE','JOINT'),
          MATER    =  BETON
          ))

#--------------------------------------------------------------
# DEFINITION DES CHARGEMENTS 
#--------------------------------------------------------------

# ON BLOQUE LES MOUVEMENTS DE CORPS RIGIDE DS LA DIRECTION X AU POINT P_RIG
RIGIDE = AFFE_CHAR_MECA(
  MODELE   = MO,
  DDL_IMPO = _F(GROUP_NO='P_RIG', DX = 0)
  ) 


# ON IMPOSE QUE LE PLAN DE SYMETRIE PASSE PAR LA FACE INFERIEURE DES ELEMENTS D'INTERFACE
SYMETRIE = AFFE_CHAR_MECA(
  MODELE        = MO,
  DDL_IMPO = (
    _F(
      GROUP_NO = 'SYME_BG',
      DY=0.0,
      ),
    _F(
      GROUP_NO = 'SYME_BD',
      DY=0.0,
      ),
    ),  )
    
# EFFORT IMPOSE SUR LA SURFACE SUPERIEURE DE LA PLAQUE
TRACTION = AFFE_CHAR_MECA(
  MODELE = MO,
  FORCE_CONTOUR = _F(GROUP_MA = 'FACE_SUP', FY =  1),
  )


#--------------------------------------------------------------
# REALISATION DU CALCUL
#--------------------------------------------------------------
  
INSTANTS = DEFI_LIST_REEL(
                          DEBUT = 0.,
                          INTERVALLE = (_F(JUSQU_A =  tfin, NOMBRE = nbpas), ), 
                          )

INS_ARCH = DEFI_LIST_REEL(
                          DEBUT = 0.,
                          INTERVALLE = (_F(JUSQU_A =  tfin, NOMBRE = nbpas_arch), ), 
                          )

DEFLIST =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST =INSTANTS ),
                        ECHEC=_F(
                  SUBD_METHODE='UNIFORME',
                  SUBD_PAS  = 10,
                  SUBD_PAS_MINI = 1.E-8,
                  SUBD_NIVEAU=10,
                                 ),)

EVOL = STAT_NON_LINE(
  MODELE = MO,
  CHAM_MATER = CHMAT,
  CARA_ELEM  = ORIEN_FI,
  EXCIT = (
    _F(CHARGE = RIGIDE),
    _F(CHARGE = SYMETRIE),
    _F(CHARGE = TRACTION, 
       TYPE_CHARGE = 'FIXE_PILO',
      )),
  COMP_INCR = (
    _F(RELATION = 'ELAS'      ,  GROUP_MA = 'MATIERE'),
    _F(RELATION = 'CZM_OUV_MIX', GROUP_MA = 'JOINT'  ),
    ),
  INCREMENT = _F(LIST_INST = DEFLIST,),
  PILOTAGE  = _F (
    TYPE           = 'PRED_ELAS',
    GROUP_MA       = 'JOINT',
    COEF_MULT      = c_mult_pilo,
    ETA_PILO_MIN   = 0.01,
    ETA_PILO_R_MIN = 0,
    PROJ_BORNES    = 'OUI'
    ),
  NEWTON  = _F(
    MATRICE   = 'TANGENTE',
    REAC_ITER = 1,
    ),
  CONVERGENCE = _F(
    RESI_REFE_RELA = 1.E-6,
    SIGM_REFE      = Sc,
    DEPL_REFE      = 2*Gc/Sc,
    ITER_GLOB_MAXI = 12,
    ),
  SOLVEUR    = _F(METHODE = 'MUMPS', PCENT_PIVOT = 100,NPREC=-1),
  ARCHIVAGE = _F(
    ARCH_ETAT_INIT = 'OUI',
    LIST_INST      = INS_ARCH
    )
  ) 

#--------------------------------------------------------------
# POST-TRAITEMENT
#--------------------------------------------------------------

CALC_NO( reuse    = EVOL,
         OPTION   = 'FORC_NODA',
         RESULTAT =  EVOL,
       )

FORCE = POST_RELEVE_T(
                      ACTION = _F(
                                  INTITULE   = 'FORCE',
                                  OPERATION  = 'EXTRACTION',
                                  RESULTANTE = 'DY',
                                  RESULTAT   =  EVOL,
                                  NOM_CHAM   = 'FORC_NODA',
                                  GROUP_NO   = 'FACE_SUP',
                                  
                                 ),
                     )

TAB_U = POST_RELEVE_T(
                      ACTION = _F(
                                  INTITULE   = 'DEPL',
                                  RESULTAT   = EVOL,
                                  OPERATION  = 'EXTRACTION',
                                  NOM_CHAM   = 'DEPL',
                                  NOM_CMP    = 'DY',
                                  NOEUD      = 'N2',
                                 ),
                     )

UY = RECU_FONCTION ( TABLE  = TAB_U,
                     PARA_X = 'INST',
                     PARA_Y = 'DY' 
                   )

FY = RECU_FONCTION ( TABLE  = FORCE,
                     PARA_X = 'INST',
                     PARA_Y = 'DY'
                   )


#--------------------------------------------------------------
# TESTS SUR LA REPONSE GLOBALE
#--------------------------------------------------------------

TEST_TABLE(TABLE=TAB_U,
              FILTRE=(_F(NOM_PARA='INST',VALE=50,),),
              NOM_PARA='DY',
              VALE=2.88538E-03,
              REFERENCE='NON_REGRESSION')
TEST_TABLE(TABLE=FORCE,
              FILTRE=(_F(NOM_PARA='INST',VALE=50,),),
              NOM_PARA='DY',
              VALE=2.85426E+07,
              REFERENCE='NON_REGRESSION')

TEST_TABLE(TABLE=TAB_U,
              FILTRE=(_F(NOM_PARA='INST',VALE=75,),),
              NOM_PARA='DY',
              VALE=6.42712E-03,
              REFERENCE='NON_REGRESSION')
TEST_TABLE(TABLE=FORCE,
              FILTRE=(_F(NOM_PARA='INST',VALE=75,),),
              NOM_PARA='DY',
              VALE=9.80686E+06,
              REFERENCE='NON_REGRESSION')

TEST_TABLE(TABLE=TAB_U,
              FILTRE=(_F(NOM_PARA='INST',VALE=100,),),
              NOM_PARA='DY',
              VALE=7.81875E-03,
              REFERENCE='NON_REGRESSION')
TEST_TABLE(TABLE=FORCE,
              FILTRE=(_F(NOM_PARA='INST',VALE=100,),),
              NOM_PARA='DY',
              VALE=4.65552E+06,
              REFERENCE='NON_REGRESSION')

TEST_TABLE(TABLE=TAB_U,
              FILTRE=(_F(NOM_PARA='INST',VALE=149,),),
              NOM_PARA='DY',
              VALE=2.42573E-02,
              REFERENCE='NON_REGRESSION')
TEST_TABLE(TABLE=FORCE,
              FILTRE=(_F(NOM_PARA='INST',VALE=149,),),
              NOM_PARA='DY',
              VALE=6.49815E+04,
              REFERENCE='NON_REGRESSION')


#--------------------------------------------------------------
IMPR_FONCTION(
              FORMAT='TABLEAU',
              COURBE=_F(FONC_X = UY,
                        FONC_Y = FY,
                       )
             )

IMPR_TABLE(TABLE=TAB_U)             
IMPR_TABLE(TABLE=FORCE)             
#IMPR_RESU(FORMAT='GMSH',RESU=(_F(RESULTAT=EVOL,NOM_CHAM='VARI_ELGA',TYPE_CHAM='SCALAIRE',NOM_CMP=('V1','V2','V3','V4','V7','V8'),GROUP_MA = ('JOINT')))) 
#IMPR_RESU(FORMAT='GMSH',RESU=(_F(RESULTAT=EVOL,NOM_CHAM='DEPL',TYPE_CHAM='VECT_2D',NOM_CMP=('DX','DY'),GROUP_MA = ('MATIERE','JOINT')))) 

FIN()

