# TITRE  TEST DE STABILITE APRES LA RUPTURE A L'AIDE DES ELEMENT DE JOINT ET DE LA LOI JOINT_MECA_RUPT
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='OUI'),PAR_LOT='OUI',DEBUG=_F(SDVERI='OUI'))

######## PARAMETRES ############# 
# LES INSTANT PARAMETRISE DIRECTEMENT LE NIVEAU D'EAU

telas=3.31         # niveau d'eau pour le chargement sans pilotage (charge max avant non convergence) 
tpilot=telas+1     # chargement en pilotage (temps non physique)
tfin=tpilot+0.1    # niveau d'eau final
tpost=tpilot       # niveau d'eau pour le posttraitement des ouvertures de joint

noeud_joint='N1'   # le noeud de la levre sup. du joint en amont du barrage

# PARAMETRES MECANIQUES DU BARRAGE DE LA TERRE ET DE L'EAU (VALEURS TESTS)
young=3.E12
poiss=0.0
rho_b=2400.
rho_t=0.
rho_e=1000.
ap=9.81
h=10.
long=5.


# PARAMETRES MECANIQUES DES JOINTS
k_n=1E12
sig_m=1.5e5
alpha=1.0
penrup=0.2


##################################

MA=LIRE_MAILLAGE(FORMAT='MED');

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,

  CREA_GROUP_MA = (

# SURFACES
    _F(NOM = 'BARRAGE',    GROUP_MA = 'G_2D_27'),
    _F(NOM = 'TERRE'  ,    GROUP_MA = 'G_2D_29'),
    _F(NOM = 'JOINT'  ,    GROUP_MA = 'G_2D_28'),

# LINES
    _F(NOM = 'TERRE_BO', UNION = ('G_1D_33','G_1D_35','G_1D_36')),
    _F(NOM = 'BAR_AMON', GROUP_MA = 'G_1D_38'),
    _F(NOM = 'BAR_AVAL',  GROUP_MA = 'G_1D_40'),
    _F(NOM = 'BAR_HAUT',  GROUP_MA = 'G_1D_41'),
    _F(NOM = 'JOINT_H' ,  GROUP_MA = 'G_1D_42'),
    _F(NOM = 'JOINT_B' ,  GROUP_MA = 'G_1D_43'),
          ),

   CREA_GROUP_NO = (
# LINES
    _F(NOM = 'JOINT_H'  ,  GROUP_MA = 'JOINT_H',OPTION='NOEUD_ORDO'),
    _F(NOM = 'JOINT_B'  ,  GROUP_MA = 'JOINT_B',OPTION='NOEUD_ORDO'),
    _F(NOM = 'BAR_AMON'  , GROUP_MA = 'BAR_AMON',OPTION='NOEUD_ORDO'),
                               ));


MA=MODI_MAILLAGE(reuse =MA,
                   MAILLAGE=MA,
                   ORIE_PEAU_2D=_F(GROUP_MA=('BAR_AMON','BAR_AVAL')),
                   INFO=1)

MA=MODI_MAILLAGE(reuse =MA,
                   MAILLAGE=MA,
                   ORIE_FISSURE=_F(GROUP_MA='JOINT'),
                   INFO=1)

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=(_F(GROUP_MA=('BARRAGE','TERRE','BAR_AMON','BAR_AVAL'),
                        PHENOMENE='MECANIQUE',
                        MODELISATION='D_PLAN',),
                     _F(GROUP_MA='JOINT',
                        PHENOMENE='MECANIQUE',
                        MODELISATION='PLAN_JOINT',),),);

# MATERIAU BETON ET TERRE
MAT_B=DEFI_MATERIAU(ELAS=_F(
                              E   = young,
                              NU  = poiss,
                              RHO = rho_b),)

MAT_T=DEFI_MATERIAU(ELAS=_F(
                              E   = young,
                              NU  = poiss,
                              RHO = rho_t),)

# MATERIAU JOINT MECANIQUE PUR
MAT_J=DEFI_MATERIAU(
                    JOINT_MECA_RUPT=_F(K_N=k_n,
                                       K_T=k_n,
                                       ALPHA=alpha,
                                       SIGM_MAX=sig_m,
                                       PENA_RUPTURE=penrup,),)

# MATERIAU JOINT MECANIQUE AVEC PRESSION DE FLUIDE

CM_M=AFFE_MATERIAU(MAILLAGE=MA,
                 AFFE=(
                      _F(GROUP_MA='BARRAGE',MATER = MAT_B),
                      _F(GROUP_MA='TERRE',  MATER = MAT_T),
                      _F(GROUP_MA='JOINT',  MATER = MAT_J))
                 );


# CONDITION AUX LIMITES SUR LA TERRE
TERRE=AFFE_CHAR_MECA(MODELE=MO,FACE_IMPO=_F(GROUP_MA='TERRE_BO',DX=0.0,DY=0.0,),);

# POIDS
PESBAR = AFFE_CHAR_MECA(
  MODELE = MO,
  FORCE_INTERNE = (_F(GROUP_MA='BARRAGE',FX=0, FY=-rho_b*ap))
  );
PESTER = AFFE_CHAR_MECA(
  MODELE = MO,
  FORCE_INTERNE = (_F(GROUP_MA='TERRE',  FX=0, FY=-rho_t*ap))
  );

# PRESSION D'EAU SUR LE BARRAGE
#p_am = FORMULE(VALE='max(rho_e*ap*(INST-Y),0)',NOM_PARA=('Y','INST',),);
p_am = FORMULE(VALE='rho_e*ap*INST',NOM_PARA=('INST',),);


PAMONT=AFFE_CHAR_MECA_F(MODELE=MO,PRES_REP=_F(GROUP_MA=('BAR_AMON',),PRES=p_am,),);

# PRESSION D'EAU HOMOGENE POUR LE PILOTAGE
PREPILO=AFFE_CHAR_MECA(MODELE=MO,PRES_REP=_F(GROUP_MA=('BAR_AMON',),PRES=rho_e*ap,),);

# LISTE D'INSTANTS
LR=DEFI_LIST_REEL(DEBUT=0.0,INTERVALLE=(_F(JUSQU_A=telas, NOMBRE=5,),_F(JUSQU_A=tpilot, NOMBRE=5,),_F(JUSQU_A=tfin, NOMBRE=10,)));
L_INST =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = LR ),
                        ECHEC=_F(
                                 SUBD_NIVEAU=6,
                                 SUBD_PAS  = 10,
                                 SUBD_PAS_MINI = 1.E-10,
                                 ),)

# CALCUL MECANIQUE AVEC UNE PRESSION FONCTION DE LA HAUTEUR
EVOL=STAT_NON_LINE(MODELE=MO,
                  CHAM_MATER=CM_M,
                  EXCIT=(
                         _F(CHARGE=TERRE),
                         _F(CHARGE=PESBAR),
                         _F(CHARGE=PESTER),
                         _F(CHARGE=PAMONT), 
                         ),
                  COMPORTEMENT=(_F(RELATION='JOINT_MECA_RUPT',
                                GROUP_MA='JOINT',),
                             _F(RELATION='ELAS',
                                GROUP_MA=('TERRE','BARRAGE')),),
                  INCREMENT=_F(LIST_INST=L_INST,INST_FIN=telas),
                  NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                  RECH_LINEAIRE=_F(ITER_LINE_MAXI=5,),
                  CONVERGENCE=_F(ITER_GLOB_MAXI=12,
                                 RESI_GLOB_RELA=1E-5),
                  SOLVEUR=_F(METHODE='MUMPS',),
                  ARCHIVAGE = _F(LIST_INST = LR)
                  );

# POURSUITE EN PILOTAGE POUR TESTER LA STABILITE DE LA REPONSE
EVOL=STAT_NON_LINE(reuse = EVOL,
                  ETAT_INIT  = _F(EVOL_NOLI = EVOL),
                  MODELE=MO,
                  CHAM_MATER=CM_M,
                  EXCIT=(
                         _F(CHARGE=TERRE),
                         _F(CHARGE=PESBAR),
                         _F(CHARGE=PESTER),
                         _F(CHARGE=PREPILO,TYPE_CHARGE='FIXE_PILO'),),
                  COMPORTEMENT=(_F(RELATION='JOINT_MECA_RUPT',
                                GROUP_MA='JOINT',),
                             _F(RELATION='ELAS',
                                GROUP_MA=('TERRE','BARRAGE')),),
                  INCREMENT=_F(LIST_INST=L_INST,INST_INIT=telas,INST_FIN=tpilot),
                  NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                  PILOTAGE=_F(TYPE='DDL_IMPO',
                                 COEF_MULT=1.e5, # PILOTAGE D'OUVERTURE EN MICROMETRE (1/COEF_MULT)
                                 NOEUD=noeud_joint,
                                 NOM_CMP='DY',
                               ),
                  CONVERGENCE=_F(ITER_GLOB_MAXI=12,
                                 RESI_GLOB_RELA=1E-5),
                  SOLVEUR=_F(METHODE='MUMPS',),
                  ARCHIVAGE = _F(LIST_INST = LR)
                  );

## POURSUITE SANS PILOTAGE APRES l'INSTABLITE
EVOL=STAT_NON_LINE(reuse = EVOL,
                  ETAT_INIT  = _F(EVOL_NOLI = EVOL),
                  MODELE=MO,
                  CHAM_MATER=CM_M,
                  EXCIT=(
                         _F(CHARGE=TERRE),
                         _F(CHARGE=PESBAR),
                         _F(CHARGE=PESTER),   
                         _F(CHARGE=PAMONT), 
                         ),
                  RECH_LINEAIRE=_F(ITER_LINE_MAXI=5,),                         
                  COMPORTEMENT=(_F(RELATION='JOINT_MECA_RUPT',
                                GROUP_MA='JOINT',),
                             _F(RELATION='ELAS',
                                GROUP_MA=('TERRE','BARRAGE')),),
                  INCREMENT=_F(LIST_INST=L_INST,INST_INIT=tpilot,INST_FIN=tfin,),
                  NEWTON=_F(MATRICE='TANGENTE',REAC_ITER=1,),
                  CONVERGENCE=_F(ITER_GLOB_MAXI=35,
                                 RESI_GLOB_RELA=1E-5),
                  SOLVEUR=_F(METHODE='MUMPS',),
                  ARCHIVAGE = _F(LIST_INST = LR)
                  );

################### POST TRAITEMENT U_M  #######################

EVOL=CALC_CHAMP(reuse =EVOL,
              RESULTAT=EVOL,
              VARI_INTERNE=('VARI_ELNO'),
              GROUP_MA='JOINT');

EVOL=CALC_CHAMP(reuse =EVOL,
              RESULTAT=EVOL,
              CONTRAINTE=('SIEF_ELNO'),
              GROUP_MA='JOINT');

EVOL=CALC_CHAMP(reuse =EVOL,
            RESULTAT=EVOL,
            VARI_INTERNE='VARI_NOEU',CONTRAINTE='SIEF_NOEU',
            GROUP_MA='JOINT');

# SAUT NORMALE DANS LE JOINT
SAUT_M=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                               INTITULE='SAUT_N',
                               RESULTAT=EVOL,
                               NOM_CHAM='VARI_NOEU',
                               INST=tpost,
                               GROUP_NO=('JOINT_H',),
                               NOM_CMP='V7',),);

# CONTRAINTE NORMALE DANS LE JOINT
SIGN_M=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                               INTITULE='SIG_N',
                               RESULTAT=EVOL,
                               NOM_CHAM='SIEF_NOEU',
                               INST=tpost,
                               GROUP_NO = ('JOINT_H',),
                               NOM_CMP='SIGN'),);



# OUVERTURE DE JOINT
IMPR_TABLE(TABLE=SAUT_M,FORMAT='TABLEAU',NOM_PARA=('COOR_X','V7'),);
# EFFORT DANS LE JOINT
IMPR_TABLE(TABLE=SIGN_M,FORMAT='TABLEAU',NOM_PARA=('COOR_X','SIGN'),);

####################################################################
############### PLOT DE LA COURBE FORCE(DEPLACEMENT) ###############
####################################################################


# FORCES NODALES
EVOL = CALC_CHAMP(reuse = EVOL,
  RESULTAT = EVOL,
  FORCE = 'FORC_NODA',
  )

# FORCE RESULTANTE DANS LA DIRECTION Y:
FPILO = POST_RELEVE_T(
 ACTION = _F(
   INTITULE     = 'F_PILOTE',
   OPERATION    = 'EXTRACTION',   
   GROUP_NO     = 'BAR_AMON',
   NOM_CHAM     = 'FORC_NODA',
   RESULTANTE   =  ('DX','DY'),
   RESULTAT     =  EVOL,
   TOUT_ORDRE   = 'OUI',
    )) 
    
    
# DEPLACEMENT DU NOEUD DE LA LEVRE SUP. DU JOINT EN AMONT DE BARRAGE
U_HAUT = POST_RELEVE_T(
 ACTION = _F(
   INTITULE     = 'DEPL',
   OPERATION    = 'EXTRACTION',   
   NOEUD        = noeud_joint,
   NOM_CHAM     = 'DEPL',
   NOM_CMP      =  'DY',
   RESULTAT     =  EVOL,
   TOUT_ORDRE   = 'OUI',
    )) 

#IMPR_TABLE(TABLE=FPILO)
#IMPR_TABLE(TABLE=U_HAUT)


# CREATION DE LA COLONNE AVEC LES DEPLACEMENTS
T_U=CALC_TABLE(TABLE=U_HAUT,
                 ACTION=(
                         _F(OPERATION='EXTR',
                            NOM_PARA=('NUME_ORDRE','DY'),
                            ),
                        ),
                    );
#CHANGEMENT DE NOM DE LA COLONNE POUR LE DEPLACEMENT        
T_U=CALC_TABLE(TABLE=T_U,reuse=T_U,
                    ACTION=_F(OPERATION='RENOMME',
                            NOM_PARA=('DY','DEPL'),
                           ),
                );
                           
# CREATION DE LA COLONNE AVEC LES FORCES                           
T_F=CALC_TABLE(TABLE=FPILO,
                 ACTION=(
                         _F(OPERATION='EXTR',
                            NOM_PARA=('NUME_ORDRE','DX'),
                            ),
                        ),
                    );                 
#CHANGEMENT DE NOM DE COLONNE POUR LES FORCES        
T_F=CALC_TABLE(TABLE=T_F,reuse=T_F,
                    ACTION=_F(OPERATION='RENOMME',
                            NOM_PARA=('DX','FORCE'),
                            ),
               );

# CREATION DE INST_FORCE_DEPL
T_F=CALC_TABLE(reuse =T_F,
          TABLE=T_F,
          ACTION=_F(OPERATION='COMB',
                    TABLE=T_U,
                    NOM_PARA='NUME_ORDRE'));  

# CREATION DU TABLEAU FORCES-DEPL AVEC LES DEPLACEMENTS
T_FU=CALC_TABLE(TABLE=T_F,
                 ACTION=(
                         _F(OPERATION='EXTR',
                            NOM_PARA=('DEPL','FORCE'),
                            ),
                        ),
                    );

 

IMPR_TABLE(TABLE=T_FU,COMM_PARA='#')  

################### TESTS NON REGRESSION #######################

TEST_TABLE(
           VALE_CALC=1.83025466125E-08,
           NOM_PARA='V7',
           TABLE=SAUT_M,
           FILTRE=_F(NOM_PARA='COOR_X',
                     VALE=4.0,),
           )

TEST_TABLE(
           VALE_CALC=38772.2212199,
           NOM_PARA='SIGN',
           TABLE=SIGN_M,
           FILTRE=_F(NOM_PARA='COOR_X',
                     VALE=4.0,),
           )

TEST_TABLE(
           VALE_CALC=-7.53900532959E-07,
           NOM_PARA='V7',
           TABLE=SAUT_M,
           FILTRE=_F(NOM_PARA='COOR_X',
                     VALE=4.5,),
           )

TEST_TABLE(
           VALE_CALC=-753900.532959,
           NOM_PARA='SIGN',
           TABLE=SIGN_M,
           FILTRE=_F(NOM_PARA='COOR_X',
                     VALE=4.5,),
           )

TEST_TABLE(
           VALE_CALC=-9.04902807875E-07,
           NOM_PARA='V7',
           TABLE=SAUT_M,
           FILTRE=_F(NOM_PARA='COOR_X',
                     VALE=4.6,),
           )

TEST_TABLE(
           VALE_CALC=-904902.807875,

           NOM_PARA='SIGN',
           TABLE=SIGN_M,
           FILTRE=_F(NOM_PARA='COOR_X',
                     VALE=4.6,),
           )


FIN()
