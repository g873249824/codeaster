# MODIF  DATE 19/04/2011   AUTEUR GENIAUT S.GENIAUT 
# TITRE VALIDATION ELEMENTAIRE DE L'OPERATEUR POST_RUPTURE
# zzzz287a.para = tps_job 20 mem_job 32Mo liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# RESPONSABLE GENIAUT S.GENIAUT

DEBUT(CODE=_F(NOM='ZZZZ287A',
              NIV_PUB_WEB='INTERNET',
              VISU_EFICAS='OUI'),
      DEBUG=_F(SDVERI='OUI'),
      IGNORE_ALARM='RUPTURE1_60',
      )

#---------------------------------------------------------------------------------------
#  VALIDATION DE L'OPERATEUR POST_RUPTURE, OPERATION = 'ABSC_CURV_NORM'
#---------------------------------------------------------------------------------------

TAB=LIRE_TABLE(UNITE=45)               
               
TAB=POST_RUPTURE(TABLE=TAB,
                 reuse=TAB,
                 OPERATION='ABSC_CURV_NORM')

IMPR_TABLE(TABLE=TAB)

TEST_TABLE(TABLE=TAB,
           NOM_PARA='ABSC_CURV_NORM',
           TYPE_TEST='MAX',
           VALE=1.,
           CRITERE='ABSOLU',
           PRECISION=1e-14,
           REFERENCE='ANALYTIQUE')

#---------------------------------------------------------------------------------------
#  VALIDATION DE L'OPERATEUR POST_RUPTURE, OPERATION = 'ANGLE_BIFURCATION'
#---------------------------------------------------------------------------------------

l_crit_bifurcation = ['SITT_MAX','K1_MAX','K2_NUL',]

for crit in l_crit_bifurcation :

   TAB=POST_RUPTURE(TABLE=TAB,
                    reuse=TAB,
                    OPERATION='ANGLE_BIFURCATION',
                    CRITERE=crit,
                    NOM_PARA='BETA_'+crit)

IMPR_TABLE(TABLE=TAB)

# TEST EN K1 PUR POUR TOUS LES CRITERES
for crit in l_crit_bifurcation :
   TEST_TABLE(TABLE=TAB,
              NOM_PARA='BETA_'+crit,
              FILTRE=(_F(NOM_PARA='INST',  CRIT_COMP='EQ',VALE=1.),
                      _F(NOM_PARA='NUM_PT',CRIT_COMP='EQ',VALE_I=1),),
              VALE=0.,
              CRITERE='ABSOLU',
              PRECISION=1e-14,
              REFERENCE='ANALYTIQUE')

# TEST EN K1=-K2 POUR TOUS LES CRITERES
beta_ref = [11.202877689339, 10, 10]
for i,crit in enumerate(l_crit_bifurcation):
   TEST_TABLE(TABLE=TAB,
              NOM_PARA='BETA_'+crit,
              FILTRE=(_F(NOM_PARA='INST',  CRIT_COMP='EQ',VALE=1.),
                      _F(NOM_PARA='NUM_PT',CRIT_COMP='EQ',VALE_I=5),),
              VALE=beta_ref[i],
              CRITERE='RELATIF',
              PRECISION=1e-12,
              REFERENCE='ANALYTIQUE')

# TEST EN K2 PUR POUR TOUS LES CRITERES SAUF K2_NUL
beta_ref = [-atan(sqrt(8))*180/pi, -80]
for i,crit in enumerate(l_crit_bifurcation[0:2] ):
   TEST_TABLE(TABLE=TAB,
              NOM_PARA='BETA_'+crit,
              FILTRE=(_F(NOM_PARA='INST',  CRIT_COMP='EQ',VALE=2.),
                      _F(NOM_PARA='NUM_PT',CRIT_COMP='EQ',VALE_I=6),),
              VALE=beta_ref[i],
              CRITERE='RELATIF',
              PRECISION=1e-12,
              REFERENCE='ANALYTIQUE')

#---------------------------------------------------------------------------------------
#  VALIDATION DE L'OPERATEUR POST_RUPTURE, OPERATION = 'COMPTAGE_CYCLES'
#---------------------------------------------------------------------------------------

# # test du comptage RAINFLOW
# TAB2=LIRE_TABLE(UNITE=46)        
# 
# TAB3=POST_RUPTURE(TABLE=TAB2,
#                   OPERATION='COMPTAGE_CYCLES',
#                   NOM_PARA=('K_EQ','K_EQBIS'),
#                   COMPTAGE='RAINFLOW')
# 
# IMPR_TABLE(TABLE=TAB3)
# 
# TEST_TABLE(TABLE=TAB3,
#            NOM_PARA='CYCLE',
#            FILTRE=_F(NOM_PARA='NUM_PT',CRIT_COMP='EQ',VALE_I=1),
#            TYPE_TEST='MAX',
#            VALE_I=14,
#            CRITERE='ABSOLU',
#            REFERENCE='ANALYTIQUE',)
# 
# TEST_TABLE(TABLE=TAB3,
#            NOM_PARA='CYCLE',
#            FILTRE=_F(NOM_PARA='NUM_PT',CRIT_COMP='EQ',VALE_I=2),
#            TYPE_TEST='MAX',
#            VALE_I=1,
#            CRITERE='ABSOLU',
#            REFERENCE='ANALYTIQUE',)
# 
# # test du comptage unitaire
# TAB4=LIRE_TABLE(UNITE=47)        
# 
# TAB5=POST_RUPTURE(TABLE=TAB4,
#                   OPERATION='COMPTAGE_CYCLES',
#                   NOM_PARA=('K1','K2'),
#                   COMPTAGE='UNITAIRE',
#                   COEF_MULT_MINI=10.,
#                   COEF_MULT_MAXI=20.)
# 
# IMPR_TABLE(TABLE=TAB5)
# 
# TEST_TABLE(TABLE=TAB5,
#            NOM_PARA='DELTA_K1',
#            FILTRE=_F(NOM_PARA='NUM_PT',CRIT_COMP='EQ',VALE_I=1),
#            VALE=40.,
#            CRITERE='ABSOLU',
#            REFERENCE='ANALYTIQUE',)
           
#---------------------------------------------------------------------------------------
#  VALIDATION DE L'OPERATEUR POST_RUPTURE, OPERATION = 'LOI_PROPA'
#---------------------------------------------------------------------------------------

TAB6=LIRE_TABLE(UNITE=50)        

TAB6=POST_RUPTURE(TABLE=TAB6,
                  reuse=TAB6,
                  OPERATION='LOI_PROPA',
                  LOI='PARIS',
                  C=1,
                  M=2.)

IMPR_TABLE(TABLE=TAB6)

TEST_TABLE(TABLE=TAB6,
           NOM_PARA='DELTA_A',
           FILTRE=(_F(NOM_PARA='NUM_PT',CRIT_COMP='EQ',VALE_I=1),
                   _F(NOM_PARA='CYCLE', CRIT_COMP='EQ',VALE_I=1)),
           VALE=36.,
           CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE')

#---------------------------------------------------------------------------------------
#  VALIDATION DE L'OPERATEUR POST_RUPTURE, OPERATION = 'CUMUL_CYCLES'
#---------------------------------------------------------------------------------------

# TAB7=POST_RUPTURE(TABLE=TAB6,
#                   OPERATION='CUMUL_CYCLES')
# 
# IMPR_TABLE(TABLE=TAB7)

#---------------------------------------------------------------------------------------


FIN()
