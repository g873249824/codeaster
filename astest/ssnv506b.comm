# TITRE INDENTATION ELASTOPLASTIQUE D'UN DEMI-PLAN
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#  PAR UN INDENTEUR SPHERIQUE ELASTIQUE
#  CAS TEST SSNV506B
#  CONTACT UNILATERAL
#  MODELISATION 2D AXISYMETRIQUE
#  UNITE DE LONGUEUR : LE MM

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
IGNORE_ALARM=('MODELE1_63'),DEBUG=_F(SDVERI='OUI'))

# <MODELE1_63> : DANS UN MODELE, IL EXISTE DES ELEMENTS DE TYPE "BORD" QUI N'ONT PAS DE VOISIN AVEC RIGIDITE
#  LE MODELE PROVOQUANT CES ALARMES CONTIENT UNE SURFACE RIGIDE POUR LE CONTACT


SSNV506B=LIRE_MAILLAGE(FORMAT='MED',);

SSNV506B=DEFI_GROUP(reuse =SSNV506B,
                    MAILLAGE=SSNV506B,
                    CREA_GROUP_NO=(_F(TOUT_GROUP_MA='OUI',),
                                   _F(OPTION='NOEUD_ORDO',
                                      NOM='LRESU',
                                      GROUP_MA='SESC',
                                      GROUP_NO_ORIG='S',
                                      GROUP_NO_EXTR='A3',),),);

#-------------------------------------------------------------
#                 GRANDEURS PHYSIQUES
#-------------------------------------------------------------

ACIER_B=DEFI_MATERIAU(ELAS=_F(E=210000.,
                              NU=0.3,),
                      ECRO_LINE=_F(D_SIGM_EPSI=0.0,
                                   SY=50,),);

AC_SPH=DEFI_MATERIAU(ELAS=_F(E=210000.,
                                NU=0.3,),);

DPLY=DEFI_FONCTION(NOM_PARA='INST',
                   VALE=(0.0,0.0,
                         1.0,1.0,),
                   INTERPOL='LIN',);

#----------------------------------------------------------------
#                       MODELE
#----------------------------------------------------------------

MO=AFFE_MODELE(MAILLAGE=SSNV506B,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='AXIS',),);

#REORIENTATION DES NORMALES
SSNV506B=MODI_MAILLAGE(reuse =SSNV506B,
                       MAILLAGE=SSNV506B,
                       ORIE_PEAU_2D=_F(GROUP_MA=('SMAI','SESC'),),
                       );

#AFFECTATION DU MATERIAU
CHMAT=AFFE_MATERIAU(MAILLAGE=SSNV506B,
                    AFFE=(_F(GROUP_MA='MAT1',
                             MATER=AC_SPH,),
                          _F(GROUP_MA='MAT2',
                             MATER=ACIER_B,),),);

#CONDITIONS AUX LIMITES
CHA1 = DEFI_CONTACT(MODELE       = MO,
                   FORMULATION  = 'DISCRETE',

                   ZONE=(
                        _F(
                            APPARIEMENT='MAIT_ESCL',
                            GROUP_MA_MAIT='SMAI',
                            GROUP_MA_ESCL='SESC',
                            SANS_GROUP_NO=('E','S'),
                         ),

                       ),
                  )

CHA2=AFFE_CHAR_MECA(MODELE=MO,
                    DDL_IMPO=(_F(GROUP_NO='MAT1',
                                 DX=0.,DY=-100.0,),
                              _F(GROUP_NO='LB',
                                 DX=0.0,),
                              _F(GROUP_NO='PLANX',
                                 DX=0.0,DY=0.0,),),
                    LIAISON_DDL=_F(GROUP_NO=('E','S'),
                                   DDL=('DY','DY'),
                                   COEF_MULT=(1.0,-1.0),
                                   COEF_IMPO=0.0,),);

#------------------------------------------------------------------
#                         RESOLUTION
#------------------------------------------------------------------

LINST=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=(_F(JUSQU_A=0.01,
                                    NOMBRE=5,),
                                 _F(JUSQU_A=0.15,
                                    NOMBRE=16,),
                                 _F(JUSQU_A=1.0,
                                    NOMBRE=17,),),);

DEFLIST =DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST = LINST),
                        ECHEC=_F(ACTION        = 'DECOUPE',
                                         SUBD_METHODE  = 'MANUEL',
                                 SUBD_PAS=4,
                                 SUBD_PAS_MINI=9.9999999999999995E-07,),)

U=STAT_NON_LINE(SOLVEUR=_F(SYME='OUI',),
                MODELE=MO,
                CHAM_MATER=CHMAT,
                EXCIT=(
                       _F(CHARGE=CHA2,
                          FONC_MULT=DPLY,),),
                CONTACT  = CHA1,
                COMPORTEMENT=(_F(RELATION='VMIS_ISOT_LINE',
                             GROUP_MA='MAT2',),
                             _F(RELATION='ELAS',
                             GROUP_MA='MAT1',),),
                INCREMENT=_F(LIST_INST=DEFLIST,
                             INST_FIN=1.,),
                NEWTON=_F(MATRICE='TANGENTE',
                          REAC_ITER=1,),
                CONVERGENCE=_F(ITER_GLOB_MAXI=15,),
                );

#------------------------------------------------------------------
#                         POST TRAITEMENT
#------------------------------------------------------------------

U=CALC_CHAMP(reuse =U,
          RESULTAT=U,
          FORCE='REAC_NODA',


          );

LINST2=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=1.,
                                   NOMBRE=10,),);

TAB_REAC=POST_RELEVE_T(ACTION=_F(INTITULE='REAC',
                                 GROUP_NO='SESC',
                                 RESULTAT=U,
                                 NOM_CHAM='REAC_NODA',
                                 LIST_INST=LINST2,
                                 RESULTANTE='DY',
                                 OPERATION='EXTRACTION',),);

IMPR_TABLE(TABLE=TAB_REAC,
           FORMAT='TABLEAU',);


#------------------------------------------------------------------
#                         TESTS DES RESULTATS
#------------------------------------------------------------------
# TESTS SUR DES VALEURS ANALYTIQUES
TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.1,
           VALE_CALC=-2.0677082540535E+06,
           VALE_REFE=-2.0380426000000001E6,
           NOM_PARA='DY',
           TABLE=TAB_REAC,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=0.2,),
           )

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.1,
           VALE_CALC=-4.0474212052551E+06,
           VALE_REFE=-4.0760852000000002E6,
           NOM_PARA='DY',
           TABLE=TAB_REAC,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=0.4,),
           )

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.1,
           VALE_CALC=-5.8277879935723E+06,
           VALE_REFE=-6.1141277999999998E6,
           NOM_PARA='DY',
           TABLE=TAB_REAC,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=0.6,),
           )

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.1,
           VALE_CALC=-7.6667317875789E+06,
           VALE_REFE=-8.1521704000000004E6,
           NOM_PARA='DY',
           TABLE=TAB_REAC,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=0.8,),
           )

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.15,
           VALE_CALC=-9.1194226957922E+06,
           VALE_REFE=-10190213,
           NOM_PARA='DY',
           TABLE=TAB_REAC,
           FILTRE=_F(NOM_PARA='INST',
                     VALE=1.0,),
           )

# TESTS DE NON-REGRESSION (AUTRES)
TEST_RESU(RESU=_F(INST=1.0,
                  RESULTAT=U,
                  NOM_CHAM='VALE_CONT',
                  NOEUD='N60',
                  NOM_CMP='RN',
                  VALE_CALC=1.1063774213243E+06,
                  CRITERE='RELATIF',
                  ),
          )

TEST_RESU(RESU=_F(INST=1.0,
                  RESULTAT=U,
                  NOM_CHAM='VALE_CONT',
                  NOEUD='N59',
                  NOM_CMP='RN',
                  VALE_CALC=0.0E+00,
                  CRITERE='ABSOLU',
                  ),
          )

FIN();
