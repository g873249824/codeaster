# MODIF  DATE 29/08/2005   AUTEUR A3BHHAE H.ANDRIAMBOLOLONA 
# TITRE PLAQUE RECTANGULAIRE EN APPUI SIMPLE SUR LES BORDS
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# ----------------------------------------------------------------------
# Plaque rectangulaire (L=0.3m, l=0.2m, ep=0.001m)
# Modelisation COQUE_3D
# Sensibilite de mode propre complexe par rapport a E et NU
# Condition aux limites : appui simple sur les bords
# La solution de reference est obtenue analytiquement
# ----------------------------------------------------------------------

DEBUT(CODE=_F(NOM='SENSD10D',
              NIV_PUB_WEB='INTERNET',),);

PRE_GIBI();

pi = 3.14159
rho = 7800.
ep = 0.001
young = 2.1E11
poisson = 0.3

#dimensions d'apres maillage
largeur = 0.2
longueur = 0.3

#           E     NU     AMOR_ALPHA AMOR_BETA 
sensible=[young, poisson,  1.E-6,     1.E-6,  ]

n=len(sensible)
PS=[None]*n

for i in range(n):
    PS[i]=DEFI_PARA_SENSI(VALE=sensible[i])

MA3D=LIRE_MAILLAGE();

MA=CREA_MAILLAGE(MAILLAGE=MA3D,
                     MODI_MAILLE=_F(TOUT = 'OUI',
                                    OPTION = 'QUAD8_9',
                                    ),)

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=_F(GROUP_MA=('BORD',),),)

MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(GROUP_MA='PLAQUE',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='COQUE_3D',),);

CARELEM=AFFE_CARA_ELEM(MODELE=MO,
                       COQUE=_F(GROUP_MA='PLAQUE',
                                A_CIS=1.,
                                EPAIS=ep,),);

MAT=DEFI_MATERIAU(ELAS_FO=_F(E=PS[0],
                             RHO=rho,
                             NU=PS[1],
                             AMOR_ALPHA = PS[2], AMOR_BETA = PS[3],
                             ),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=MAT,),);

CLIM=AFFE_CHAR_MECA(MODELE=MO,
                      DDL_IMPO=_F(GROUP_NO='BORD',
                                  DX=0.0,
                                  DY=0.0,
                                  DZ=0.0,
                                  ),);

MATELER=CALC_MATR_ELEM(MODELE=MO,OPTION='RIGI_MECA',
                       CHAM_MATER=CHMAT,
                       CARA_ELEM=CARELEM,
                       CHARGE=CLIM);

MATELEM=CALC_MATR_ELEM(MODELE=MO,OPTION='MASS_MECA',
                       CHAM_MATER=CHMAT,
                       CARA_ELEM=CARELEM,
                       CHARGE=CLIM);

MATELEC=CALC_MATR_ELEM(MODELE=MO,OPTION='AMOR_MECA',
                       RIGI_MECA=MATELER,MASS_MECA=MATELEM,
                       CHAM_MATER=CHMAT,
                       CARA_ELEM=CARELEM,
                       CHARGE=CLIM);

NUM=NUME_DDL(MATR_RIGI=MATELER);

MATASSR=ASSE_MATRICE(MATR_ELEM=MATELER,NUME_DDL=NUM);

MATASSM=ASSE_MATRICE(MATR_ELEM=MATELEM,NUME_DDL=NUM);

MATASSC=ASSE_MATRICE(MATR_ELEM=MATELEC,NUME_DDL=NUM);

# calcul de la solution analytique
def sqrt(x):
    return x**.5

xx = pi*ep*sqrt(young/(12.*rho*(1-poisson*poisson)))/(2.*longueur*longueur*largeur*largeur)
f11 = xx*(longueur*longueur*1*1+largeur*largeur*1*1)
df11_e = f11/(2.*sensible[0])
df11_nu = f11*sensible[1]/(1.-sensible[1]*sensible[1])

MODE1=MODE_ITER_SIMULT(MATR_A=MATASSR,
                       MATR_B=MATASSM,
                       SENSIBILITE=(PS[0],PS[1],),CHAM_MATER=CHMAT,CARA_ELEM=CARELEM,
                       MATR_C=MATASSC,CALC_FREQ=_F(OPTION='CENTRE',FREQ=f11,NMAX_FREQ=1,),
                       VERI_MODE=(_F(SEUIL=1.e-5,),),)

TEST_RESU(RESU=(
                _F(RESULTAT=MODE1, NUME_ORDRE=1, PARA='FREQ',
                   VALE=f11, CRITERE='RELATIF', PRECISION=0.01,
                   REFERENCE='ANALYTIQUE',),

                _F(RESULTAT=MODE1, NUME_ORDRE=1, PARA='FREQ',
                   VALE=df11_e, CRITERE='RELATIF', PRECISION=0.01,
                   SENSIBILITE=PS[0],REFERENCE='ANALYTIQUE',),

                _F(RESULTAT=MODE1, NUME_ORDRE=1, PARA='FREQ',
                   VALE=df11_nu, CRITERE='RELATIF', PRECISION=0.04,
                   SENSIBILITE=PS[1],REFERENCE='ANALYTIQUE',),
                ),);

FIN();
#
