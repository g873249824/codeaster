# TITRE REPONSE TRANSITOIRE D'UNE DALLE EN BETON ARME EN GRILLE_EXCENTRE QUAD4
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# person_in_charge: sebastien.fayolle at edf.fr

DEBUT(CODE=_F(
NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI'))

#-----------------------------------------------------------------------
# VALIDATION DES GRILLES EXCENTREE SUR POUTRE CONSOLE
#-----------------------------------------------------------------------

MAILL1=LIRE_MAILLAGE(FORMAT='MED',);

MAILL2=CREA_MAILLAGE(MAILLAGE=MAILL1,
                     CREA_GROUP_MA=_F(NOM='ACPLUS',
                                      GROUP_MA='CONSOLE',
                                      PREF_MAILLE='B',),);

MAILL3=CREA_MAILLAGE(MAILLAGE=MAILL2,
                     CREA_GROUP_MA=_F(NOM='ACMOINS',
                                      GROUP_MA='CONSOLE',
                                      PREF_MAILLE='C',),);

MAILL4=CREA_MAILLAGE(MAILLAGE=MAILL3,
                     CREA_GROUP_MA=_F(NOM='ACPLUSY',
                                      GROUP_MA='CONSOLE',
                                      PREF_MAILLE='D',),);

MAILTOT=CREA_MAILLAGE(MAILLAGE=MAILL4,
                      CREA_GROUP_MA=_F(NOM='ACMOINSY',
                                       GROUP_MA='CONSOLE',
                                       PREF_MAILLE='E',),);

MAILTOT=DEFI_GROUP(reuse =MAILTOT,
                   MAILLAGE=MAILTOT,
                   CREA_GROUP_NO=_F(TOUT_GROUP_MA='OUI',),);

#
# -----------------------------------------------------
# DEFINITION DES MATERIAUX
# -----------------------------------------------------

ACIER=DEFI_MATERIAU(ELAS=_F(E=1.E11,
                            NU=0.0,
                            RHO=7800.,),);

BETON=DEFI_MATERIAU(ELAS=_F(E=1.E10,
                            NU=0.,
                            RHO=2500.,),);

#
# -------------------------------------------------
# AFFECTATION DES MATERIAUX
# -------------------------------------------------

MATAF=AFFE_MATERIAU(MAILLAGE=MAILTOT,
                    AFFE=(_F(GROUP_MA=('ACPLUS','ACMOINS',),
                             MATER=ACIER,),
                          _F(GROUP_MA='CONSOLE',
                             MATER=BETON,),),);

#
# -------------------------------------------------
# AFFECTATION DES MODELES
# -------------------------------------------------

LEMOD=AFFE_MODELE(MAILLAGE=MAILTOT,
                  VERIF='MAILLE',
                  AFFE=(_F(GROUP_MA=('ACPLUS','ACMOINS',),
                           PHENOMENE='MECANIQUE',
                           MODELISATION='GRILLE_EXCENTRE',),
                        _F(GROUP_MA=('CONSOLE','B0X','B1X','B0Y','B1Y',),
                           PHENOMENE='MECANIQUE',
                           MODELISATION='DKT',),),);

# -------------------------------------------------
# AFFECTATION DES CARACTERISTIQUES
# -------------------------------------------------

LACAR=AFFE_CARA_ELEM(MODELE=LEMOD,
                     COQUE=_F(GROUP_MA=('CONSOLE','B0X','B1X','B0Y','B1Y',),
                              EPAIS=.1,
                              ANGL_REP=(0.0,0.0,),),
                     GRILLE=(_F(GROUP_MA='ACPLUS',
                                SECTION=.05,
                                ANGL_REP=(0,0,),
                                EXCENTREMENT=.03,),
                             _F(GROUP_MA='ACMOINS',
                                SECTION=.05,
                                ANGL_REP=(0,0,),
                                EXCENTREMENT=-.03,),),);

# ----------------------------------------------
# CHARGEMENT
# ----------------------------------------------

CHAR0=AFFE_CHAR_MECA(MODELE=LEMOD,
                     DDL_IMPO=(_F(GROUP_MA='B0X',
                                  DX=0.,
                                  DY=0.,
                                  DZ=0.,
                                  DRX=0.,
                                  DRY=0.,
                                  DRZ=0.,),
                               _F(GROUP_MA='CONSOLE',
                                  DY=0.,),),);

CHAR2=AFFE_CHAR_MECA(MODELE=LEMOD,
                     DDL_IMPO=_F(GROUP_MA='B0X',
                                 DX=0.,
                                 DY=0.,
                                 DZ=0.,
                                 DRX=0.,
                                 DRY=0.,
                                 DRZ=0.,),);

CHAR1=AFFE_CHAR_MECA(MODELE=LEMOD,
                     FORCE_ARETE=_F(GROUP_MA='B1X',
                                    FZ=1.E5,),);

# ----------------------------------------------
#  ANALYSE MODALE
# ----------------------------------------------

RIGI=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                    MODELE=LEMOD,
                    CHAM_MATER=MATAF,
                    CARA_ELEM=LACAR,
                    CHARGE=CHAR0,);

NUM=NUME_DDL(MATR_RIGI=RIGI,);

ASSEMBLAGE(MODELE=LEMOD,
                CHAM_MATER=MATAF,
                CARA_ELEM=LACAR,
                CHARGE=CHAR0,
                NUME_DDL=NUM,
                SOLVEUR=_F(METHODE='LDLT',),
                MATR_ASSE=(_F(MATRICE=CO('MATASSR1'),
                              OPTION='RIGI_MECA',),
                           _F(MATRICE=CO('MATASSM1'),
                              OPTION='MASS_MECA',),),);

MODES=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,
                       MATR_MASS=MATASSM1,
                       CALC_FREQ=_F(OPTION='BANDE',
                                    FREQ=(5.,350.,),),);

# TEST MASS_INER

INER=POST_ELEM(MASS_INER=_F(TOUT='OUI',),
               MODELE=LEMOD,
               CHAM_MATER=MATAF,
               CARA_ELEM=LACAR,);

# TEST_RESU UNIQUEMENT POUR FAIRE CAS TEST

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=MODES,
                   VALE_CALC=54.579497591,
                   VALE_REFE=54.670000000000002,
                   PRECISION=0.02,),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   REFERENCE='ANALYTIQUE',
                   RESULTAT=MODES,
                   VALE_CALC=338.511188271,
                   VALE_REFE=342.63999999999999,
                   PRECISION=0.02,),
                ),
          )

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC=0.050000000,
           VALE_REFE=0.050000000000000003,
           NOM_PARA='CDG_Y',
           TABLE=INER,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC=8.603516667,
           VALE_REFE=8.6110000000000007,
           NOM_PARA='IY_G',
           TABLE=INER,)

#=============================================================================================
# CALCUL TRANSITOIRE
#=============================================================================================
fin = 0.1;

n = 100;


# Chargement: definition de la fonction sinusoidale
FREQ = 20.0;


LINST=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=fin,
                                   NOMBRE=n,),);

FONC = FORMULE(VALE='sin(2.*pi*FREQ*INST)',
               NOM_PARA='INST',);

FMULT=CALC_FONC_INTERP(FONCTION=FONC,
                       LIST_PARA=LINST,
                       NOM_PARA='INST',);

# Definition de l'archivage des resultats

LARCH=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=fin,
                                   NOMBRE=n,),);


RESU=DYNA_NON_LINE(MODELE=LEMOD,
                   CHAM_MATER=MATAF,
                   CARA_ELEM=LACAR,
                   EXCIT=(_F(CHARGE=CHAR1,
                             FONC_MULT=FMULT,),
                          _F(CHARGE=CHAR2,),),
                   COMPORTEMENT=_F(RELATION='ELAS',
                                TOUT='OUI',),
                   INCREMENT=_F(LIST_INST=LINST,),
                   SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',
                                   FORMULATION='DEPLACEMENT',),
                   ARCHIVAGE=_F(LIST_INST=LARCH,
                                ),);


RESU=CALC_CHAMP(reuse =RESU,
                   RESULTAT=RESU,
                   TOUT_ORDRE='OUI',
                    FORCE=('FORC_NODA','REAC_NODA'),
                   );


EPOT=POST_ELEM(ENER_POT=_F(TOUT='OUI',),
               RESULTAT=RESU,);

ECIN=POST_ELEM(ENER_CIN=_F(TOUT='OUI',),
               RESULTAT=RESU,);

ECINA=POST_ELEM(ENER_CIN=_F(GROUP_MA=('ACPLUS','ACMOINS',),),
                RESULTAT=RESU,
                NUME_ORDRE=n,);

ECINB=POST_ELEM(ENER_CIN=_F(GROUP_MA='CONSOLE',),
                RESULTAT=RESU,
                NUME_ORDRE=n,);

DEPL=POST_RELEVE_T(ACTION=_F(OPERATION='MOYENNE',
                             INTITULE='DEPLA',
                             RESULTAT=RESU,
                             NOM_CHAM='DEPL',
                             TOUT_ORDRE='OUI',
                             GROUP_NO='B1X',
                             NOM_CMP='DZ',),);

FORC=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                             INTITULE='FORC',
                             RESULTAT=RESU,
                             NOM_CHAM='FORC_NODA',
                             TOUT_ORDRE='OUI',
                             GROUP_NO='B1X',
                             RESULTANTE='DZ',),);

REAC=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                             INTITULE='REAC',
                             RESULTAT=RESU,
                             NOM_CHAM='REAC_NODA',
                             TOUT_ORDRE='OUI',
                             GROUP_NO='B0X',
                             RESULTANTE='DZ',),);

DZ=RECU_FONCTION(TABLE=DEPL,
                 PARA_X='INST',
                 PARA_Y='DZ',
                 FILTRE=_F(NOM_PARA='QUANTITE',
                           VALE_K='MOMENT_0',),);

FZ=RECU_FONCTION(TABLE=FORC,
                 PARA_X='INST',
                 PARA_Y='DZ',);

RZ=RECU_FONCTION(TABLE=REAC,
                 PARA_X='INST',
                 PARA_Y='DZ',);

TEST_TABLE(REFERENCE='NON_DEFINI',
           PRECISION=0.02,
           VALE_CALC=-7.81121340E-04,
           VALE_REFE=-7.7899999999999996E-4,
           NOM_PARA='DZ',
           TABLE=DEPL,
           FILTRE=(_F(NOM_PARA='NUME_ORDRE',
                      VALE_I=100,),
                   _F(NOM_PARA='QUANTITE',
                      VALE_K='MOMENT_0',),
                   ),
           )

TEST_TABLE(REFERENCE='NON_DEFINI',
           PRECISION=0.02,
           VALE_CALC=-9.48135656E+03,
           VALE_REFE=-9480.0,
           NOM_PARA='DZ',
           TABLE=FORC,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=90,),
           )

TEST_TABLE(REFERENCE='NON_DEFINI',
           PRECISION=0.02,
           VALE_CALC= 3.74135040E+03,
           VALE_REFE=3720.0,
           NOM_PARA='DZ',
           TABLE=REAC,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=100,),
           )

#=============================================================================================
# pour obtenir ECIN de reference, passer en PAR_LOT='NON'
#=============================================================================================
#import numpy as NP
# VIT = CREA_CHAMP(TYPE_CHAM='NOEU_DEPL_R',
#        OPERATION='EXTR',
#        NUME_ORDRE=n,
#        RESULTAT = RESU,
#        NOM_CHAM = 'VITE'
#       )
#
# VITX = VIT.EXTR_COMP('DX',[]).valeurs
# VITY = VIT.EXTR_COMP('DY',[]).valeurs
# VITZ = VIT.EXTR_COMP('DZ',[]).valeurs
# VITRX = VIT.EXTR_COMP('DRX',[]).valeurs
# VITRY = VIT.EXTR_COMP('DRY',[]).valeurs
# VITRZ = VIT.EXTR_COMP('DRZ',[]).valeurs
#
# VIT2X = VITX + .03*VITRY
# VIT2Y = VITY - .03*VITRX
# VIT2Z = VITZ
#
# VIT3X = VITX - .03*VITRY
# VIT3Y = VITY + .03*VITRX
# VIT3Z = VITZ
#
# EPYTB = 25.*NP.add.reduce(VITX**2+VITY**2+VITZ**2)
# #EPYTA = 0.
# EPYTA = 39.*NP.add.reduce(VIT2X**2+VIT2Y**2+VIT2Z**2)+39.*NP.add.reduce(VIT3X**2+VIT3Y**2+VIT3Z**2)
#
# EPYTA = EPYTA/1536/2
# EPYTB = EPYTB/1536/2
# EPYT = (EPYTA+EPYTB)

TEST_TABLE(REFERENCE='AUTRE_ASTER',
           VALE_CALC=9.893566759,
           VALE_REFE=9.8958890000000004,
           NOM_PARA='TOTALE',
           TABLE=ECIN,
           FILTRE=_F(NOM_PARA='NUME_ORDRE',
                     VALE_I=100,),
           )

#=============================================================================================
# impressions
#=============================================================================================


IMPR = 0;

#    PILO = 'INTERACTIF';

PILO = 'PNG';

IMPR_FONCTION(FORMAT='XMGRACE',
              PILOTE=PILO,
              UNITE=32,
              COURBE=_F(FONCTION=DZ,
                        LEGENDE='DZ',
                        COULEUR=2,
                        FREQ_MARQUEUR=0,),
              TITRE='DEPLACEMENT',);

IMPR_FONCTION(FORMAT='XMGRACE',
              PILOTE=PILO,
              UNITE=30,
              COURBE=_F(FONCTION=FZ,
                        LEGENDE='FZ',
                        COULEUR=1,
                        FREQ_MARQUEUR=0,),
              TITRE='FORCE',);

IMPR_FONCTION(FORMAT='XMGRACE',
              PILOTE=PILO,
              UNITE=31,
              COURBE=_F(FONCTION=RZ,
                        LEGENDE='RZ',
                        COULEUR=1,
                        FREQ_MARQUEUR=0,),
              TITRE='REACTION',);

IMPR_TABLE(TABLE=INER,);

IMPR_TABLE(TABLE=DEPL,);

IMPR_TABLE(TABLE=FORC,);

IMPR_TABLE(TABLE=REAC,);

IMPR_TABLE(TABLE=EPOT,);

IMPR_TABLE(TABLE=ECIN,);


FIN();
