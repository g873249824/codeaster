# TITRE TEST DE LA LOI JOINT_MECA_RUPT SUR LES ELEMENTS DE JOINT HYME HEXA20
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',VISU_EFICAS='OUI'),PAR_LOT='OUI',IGNORE_ALARM=('MODELISA4_9',),DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU
# ON IGNORE LES ALARMES SUR LA MAILLE DE JOINT DEGENERE (AVEC DES NOEUDS CONFONDUS)

# INSTANT FINAL (IL FAUT AVOIR UN MULTIPLE DE 4)
insfin=4*15

# HAUTEUR ET SECTION DU CUBE
L_cube=1.
A_carre=1.

# REGULARISATION NORMALE DE LA COURBE FORCE-DEPLACEMENT
k_n=1.E12

# REGULARISATION TANGENTIELLE DE LA COURBE FORCE-DEPLACEMENT
k_t=2*k_n

# CONTRAINTE MAXIMALE
sigma_max=1.E5

# PRESSION DE FLUIDE EN ENTREE
press = 5.E2

# FORCE DE CHARGEMENT MAXIMALE (RESISTANCE A LA TRACTION)
forc_max = (sigma_max - press)*A_carre

# REGULARISATION D'ENDOMMAGEMENT TANGENTIELE
# 0 => RUPTURE TANGENTIEL IMEDIATEMENT APRES L'OUVERTURE
# 1 => RUPTURES TANGENTIEL ET NORMALE SIMULTANEES
# 2 => PAS D'ENDOMMAGEMENT TANGENTIEL
alpha=1.5

# PARAMETRE DE LISSAGE DE RUPTURE FRAGILE
# 0 - PENTE INFINIE (RUPTURE ABRUPTE)
# 1 - PENTE DE CHARGEMENT
# \INFINITY - PENTE ZERO (RUPTURE A L'INFINI)
pena_rupture=0.5

# PENALISATION EN COMPRESSION(>0)
# 0 - PENTE NUL (INTERPENETRATION SANS RESISTANCE, NON PHYSIQUE)
# 1 - PENTE DE CHARGEMENT
# \INFINITY - PENTE INFINI (PAS D'INTERPENETRATION)
pena_contact=3.

# PARAMETRES PHYSIQUES
young=3.E12
poiss=0.0

# PARAMETRES D'AUTOMATISATION
# PARAMETRE DE L'INCLINAISON DE JOINT (NE PAS MODIFIER, LIE AU MAILLAGE)
angle=30./180*pi

# OUVERTURE ELASTIQUE DU JOINT + CUBE
U_elas = (forc_max/A_carre + press)/k_n + (forc_max/A_carre)*L_cube/young

# OUVERTURE MAXIMALE DU JOINT A LA RUPTURE
U_max=(1.+pena_rupture)*(forc_max/A_carre + press)/k_n

# OUVERTURE CORRESPONDANTE A L'ENDOMMAGEMENT PARTIEL
beta=0.2
U_endo=beta*U_elas+(1-beta)*U_max

# VERIFICATION D'ABSENCE DE SNAP-BACK GLOBAL (U_MAX>U_ELAS)
assert(young > L_cube*k_n/pena_rupture)

MA0=LIRE_MAILLAGE()

MA=CREA_MAILLAGE(MAILLAGE  = MA0, LINE_QUAD = _F(TOUT='OUI'))

MA=DEFI_GROUP(reuse =MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=(_F(NOEUD=('NO2','NO4','NO10','NO8', 'NS2','NS6','NS10','NS7'),
                                NOM='DROITE',),
                              _F(NOEUD=('NO1','NO3', 'NO9', 'NO7','NS4','NS5','NS12','NS8' ),
                                NOM='GAUCHE',),
                               ),);

MA=MODI_MAILLAGE(reuse =MA,
                   MAILLAGE=MA,
                   ORIE_FISSURE=_F(GROUP_MA='G_CUBE_D'),
                   INFO=2)

MO=AFFE_MODELE(

                MAILLAGE=MA,
                VERIF='MAILLE',

                AFFE= (
                _F(
                   MAILLE = 'CUBE',
                   PHENOMENE = 'MECANIQUE',
                   MODELISATION = '3D'
                     ),
                 _F(
                   MAILLE = 'CUBEDEG',
                   PHENOMENE = 'MECANIQUE',
                   MODELISATION = '3D_JOINT_HYME'
                   )
                 )
              )


# MATERIAU ELASTIQUE
MAT_CUB=DEFI_MATERIAU(ELAS=_F(
                              E   = young,
                              NU  = poiss),)

# MATERIAU JOINT
MAT_JOI=DEFI_MATERIAU(
                  JOINT_MECA_RUPT=_F(K_N=k_n,
                                   K_T=k_t,
                                   SIGM_MAX=sigma_max,
                                   PENA_RUPTURE=pena_rupture,
                                   ALPHA=alpha,
                                   PENA_CONTACT=pena_contact,
                                   RHO_FLUIDE=1000., #kg/m^3
                                   VISC_FLUIDE=1.E-3, #Pa.s
                                   OUV_MIN=1.E-10 #m
                          ),)


CM=AFFE_MATERIAU(MAILLAGE=MA,
                 AFFE=(
                      _F(MAILLE='CUBE', MATER = MAT_CUB),
                      _F(MAILLE='CUBEDEG', MATER = MAT_JOI))
                 );

# ENCASTREMENT D'UNE DES LEVRES DU JOINT
LIAISON=AFFE_CHAR_MECA(
  MODELE=MO,
  FACE_IMPO= (
    _F(MAILLE='GAUCHE2', DX=0, DY=0, DZ=0),
    )
  )

###################################################################################
#----------------------------------------------------------------------------------
# CALCUL AVEC CHARGEMENT EN MODE I PURE
#----------------------------------------------------------------------------------
###################################################################################


# CHARGEMENT MODE I PUR
TRAC_1=AFFE_CHAR_MECA(
  MODELE=MO,
  FACE_IMPO= (
    _F(MAILLE='DROITE', DX=cos(angle), DY= sin(angle), DZ=0),
    )
  )

# ON IMPOSE UNE PRESSION SUR NS19 ET NS20 ET ON TESTE LA VALEUR DE LA PRESSION SUR NS17 ET NS 18
PAM_J = AFFE_CHAR_MECA(
  MODELE = MO,
  DDL_IMPO = (_F(NOEUD=('NS19','NS20'), PRE1=press ))
  );


# CREATION DE LISTE D'INSTANT
L_INST=DEFI_LIST_REEL(VALE=range(insfin+1))

# LISTE D'INSTANTS POUR LES TESTS DE RESULTATS
linst=[0,insfin/4,insfin/2,3*insfin/4,insfin]
FCT=DEFI_FONCTION(NOM_PARA='INST',VALE=(linst[0], 0.,
                                        linst[1], U_elas,              # TRACTION ELASTIQUE
                                        linst[2], U_endo,              # TRACTION JUSQU'A ENDOMMAGEMENT PARTIEL
                                        linst[3],-U_elas,             # DECHARGEMENT COMPRESSION
                                        linst[4], U_max*0.99999999),   # TRACTION JUSQU'A LA RUPTURE QUASI-COMPLETE
                  PROL_DROITE='LINEAIRE',);


U_HM=STAT_NON_LINE(
  SOLVEUR=_F(METHODE='MUMPS',),
  MODELE     = MO,
  CHAM_MATER = CM,
  EXCIT      = (
    _F(CHARGE = LIAISON , ),
    _F(CHARGE = PAM_J , ),
    _F(CHARGE = TRAC_1, FONC_MULT = FCT),
  ),
  COMPORTEMENT  = (
          _F(RELATION = 'JOINT_MECA_RUPT',MAILLE = 'CUBEDEG',),
          _F(RELATION = 'ELAS',           MAILLE = 'CUBE',),
          ),
  INCREMENT  = _F(LIST_INST = L_INST, INST_INIT=0,INST_FIN = insfin),
  CONVERGENCE= _F(ITER_GLOB_MAXI = 20),
  NEWTON     = _F(MATRICE = 'TANGENTE', REAC_ITER=1),
  )


#----------------------------------------------------------------------------------
# POST TRAITEMENT MODE I PURE
#-----------------------------------------------------------------------------------

U_HM=CALC_CHAMP(reuse =U_HM,
                RESULTAT=U_HM,
                VARI_INTERNE=('VARI_ELNO'),
                );

U_HM=CALC_CHAMP(reuse =U_HM,
                RESULTAT=U_HM,
                CONTRAINTE=('SIEF_ELNO'),
                );

U_HM=CALC_CHAMP(reuse =U_HM,
             RESULTAT=U_HM,
             VARI_INTERNE='VARI_NOEU',CONTRAINTE='SIEF_NOEU',
             MAILLE='CUBEDEG'
             );


# CALCUL DE LA FORCE NODALE
U_HM=CALC_CHAMP(reuse =U_HM,
            RESULTAT=U_HM,
            FORCE='FORC_NODA',
            MAILLE='CUBE');

# VECTEUR-FORCE NODALE RESULTANTE : (F_X,F_Y)
TFORCE=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                               INTITULE='F_PILOTE',
                               RESULTAT=U_HM,
                               NOM_CHAM='FORC_NODA',
                               TOUT_ORDRE='OUI',
                               GROUP_NO='DROITE',
                               RESULTANTE=('DX','DY'),),);


# PROJECTEUR SUR LA NORMALE
PNOR = FORMULE(VALE='DX*cos(angle)+DY*sin(angle)',
              NOM_PARA=('DX','DY',),);

# INSERTION D'UNE COLONNE AVEC LA PROJECTION NORMALE DE LA FORCE NODALE
TFORCE=CALC_TABLE(reuse =TFORCE,
                  TABLE=TFORCE,
                  ACTION=_F(OPERATION='OPER',
                            FORMULE=PNOR,
                            NOM_PARA='F_N',),);

# DEPLACEMENT DU NOEUD EN_HAUT
TDELTA_N=POST_RELEVE_T(ACTION=_F(OPERATION='EXTRACTION',
                              INTITULE='DEPL',
                              RESULTAT=U_HM,
                              NOM_CHAM='DEPL',
                              TOUT_ORDRE='OUI',
                              GROUP_NO='TOUTSEUL',
                              NOM_CMP=('DX','DY',),),);

# INSERTION D'UNE COLONNE AVEC LA PROJECTION NORMALE DE DEPLACEMENT
TDELTA_N=CALC_TABLE(reuse =TDELTA_N,
                    TABLE=TDELTA_N,
                    ACTION=_F(OPERATION='OPER',
                            FORMULE=PNOR,
                            NOM_PARA='U_N',),);

#----------------------------------------------------------------------------------
# IMPRESSION DE RESULTAT CALCUL MODE I PURE
#-----------------------------------------------------------------------------------

# LA MANIPULATION POUR IMPRIMER LA COURBE FORCE-DEPLACEMENT AU FORMAT XMGRACE
FN=RECU_FONCTION(TABLE=TFORCE,
                  PARA_X='INST',
                  PARA_Y='F_N',);

DN=RECU_FONCTION(TABLE=TDELTA_N,
                  PARA_X='INST',
                  PARA_Y='U_N',);



#----------------------------------------------------------------------------------
# TESTS CALCUL MODE I PURE
#-----------------------------------------------------------------------------------

# COURBE FORCE-DEPLACEMENT JOINT+CUBE EST TESTEE :
# VALEUR DE CHARGEMENT MAXIMALE  (forc_max)
# VALEUR A ENDOMMAGEMENT PARTIEL (forc_endo)
# VALEUR EN PENETRATION          (forc_pena)
forc_endo =  A_carre*(U_endo - U_max + press*pena_rupture/k_n)/(L_cube/young-pena_rupture/k_n)
forc_pena = -A_carre*(U_elas + press/(k_n*pena_contact))/ (L_cube/young +1./(k_n*pena_contact))


TEST_FONCTION(VALEUR=(_F(VALE_CALC=99500.0,
                         VALE_REFE=forc_max,
                         VALE_PARA=linst[1],
                         REFERENCE='ANALYTIQUE',
                         NOM_PARA='INST',
                         FONCTION=FN,),
                      _F(VALE_CALC=18700.0,
                         VALE_REFE=forc_endo,
                         VALE_PARA=linst[2],
                         REFERENCE='ANALYTIQUE',
                         NOM_PARA='INST',
                         FONCTION=FN,),
                      _F(VALE_CALC=-200000.0,
                         VALE_REFE=forc_pena,
                         VALE_PARA=linst[3],
                         REFERENCE='ANALYTIQUE',
                         NOM_PARA='INST',
                         FONCTION=FN,),
                      ),
              )

# TEST DE LA PRESSION
TEST_RESU(RESU=_F(INST=insfin,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=U_HM,
                  NOM_CHAM='DEPL',
                  NOEUD='NS17',
                  NOM_CMP='PRE1',
                  VALE_CALC=500.000000000,
                  VALE_REFE=press,),
          )

# TEST DE LA PRESSION
TEST_RESU(RESU=_F(INST=insfin,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=U_HM,
                  NOM_CHAM='DEPL',
                  NOEUD='NS18',
                  NOM_CMP='PRE1',
                  VALE_CALC=500.000000000,
                  VALE_REFE=press,),
          )

# TEST DE LA PRESSION VIA VIP18 ET L'INTERPOLATION GAUSS -> NOEUD

TEST_RESU(RESU=_F(INST=insfin,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=U_HM,
                  NOM_CHAM='VARI_NOEU',
                  NOEUD='NS18',
                  NOM_CMP='V18',
                  VALE_CALC=500.000000000,
                  VALE_REFE=press,),
          )

# TEST DE LA PRESSION VIA VIP18 ET L'INTERPOLATION GAUSS -> NOEUD

TEST_RESU(RESU=_F(INST=insfin,
                  REFERENCE='ANALYTIQUE',
                  RESULTAT=U_HM,
                  NOM_CHAM='VARI_NOEU',
                  NOEUD='NO12',
                  NOM_CMP='V18',
                  VALE_CALC=500.000000000,
                  VALE_REFE=press,),
          )

# IMPRESSION LA FORCE NODALE NORMALE
IMPR_TABLE(TABLE=TFORCE);
# IMPRESSION DE L'OUVERTURE NORMALE
IMPR_TABLE(TABLE=TDELTA_N);

IMPR_FONCTION(FORMAT='TABLEAU',
              COURBE=_F(FONC_X=DN,
                        FONC_Y=FN,
                        LEGENDE='Force Deplacement',),
             );

## EN MODE INTERACTIF SEULEMENT
#IMPR_FONCTION(FORMAT='XMGRACE',
#              PILOTE='INTERACTIF',
#              COURBE=_F(FONC_X=DN,
#                        FONC_Y=FN,
#                        LEGENDE='F(U)',),
#              LEGENDE_X='\\xd\\s\\0n',
#              LEGENDE_Y='F\\sn',
#              TITRE='mode I avec charge-decharge',
#              );

#IMPR_RESU(FORMAT='GMSH',RESU=(_F(RESULTAT=U_HM,NOM_CHAM='DEPL',TYPE_CHAM='VECT_3D',NOM_CMP=('DX','DY','DZ'),MAILLE = ('CUBEDEG','CUBE'))))
#IMPR_RESU(FORMAT='GMSH',RESU=(_F(RESULTAT=U_HM,NOM_CHAM='VARI_ELGA',TYPE_CHAM='VECT_2D',NOM_CMP=('V12','V13'),MAILLE = ('CUBEDEG',))))
#IMPR_RESU(RESU=(_F(RESULTAT=U_HM,NOM_CHAM='DEPL',NOM_CMP=('PRE1','DX','DY','DZ'),MAILLE = ('CUBEDEG'))))
#IMPR_RESU(RESU=(_F(RESULTAT=U_HM,NOM_CHAM='SIEF_ELGA',NOM_CMP=('SIGN','SITX','SITY','FH11X','FH11Y'),MAILLE = ('CUBEDEG'))))
#IMPR_RESU(RESU=(_F(RESULTAT=U_HM,NOM_CHAM='VARI_ELGA',NOM_CMP=('V7','V8','V12','V13'),MAILLE = ('CUBEDEG'))))
FIN()
