def PROD_ROT(X1,X2):
    "calcul Produit de 2 vecteurs pour les coef de rotations"
    "dimension de X1 et X2 liste de 3 scalaire resultat liste de 6 scalaire"
    if (len(X1)==len(X2)==3) : 
        Y=[None]*6
        V_ind=[[0,0,0.5],[1,1,0.5],[2,2,0.5],[0,1,1.0],[0,2,1.0],[1,2,1.0]]
        for ind in V_ind:
            i=V_ind.index(ind)
            ind1,ind2,coef=ind[0],ind[1],ind[2]
            Y[i]=coef*(X1[ind1]*X2[ind2]+X1[ind2]*X2[ind1])
        return Y
    else :
        print "CALCUL PROD_ROT IMPOSSIBLE, dimensions innatendues"
        return None
#######################################################################
def ERREUR(X,Xref,coef=1.,prec_zero=0.):
    "calcul erreur relative entre deux nombres"
    if (Xref<prec_zero) : return 0.
    else :
        err= abs((X*coef-Xref)/Xref)
        return err
#######################################################################
def RENOMME(i,N_pas,label_cal,ch_param,RESU,R_SI):
# On renomme les composantes en fonction de  l'ordre de discrÃ©tisation
        N = N_pas[i]
        chN=label_cal[i]+str(N)
        for ch in ch_param:
                j=ch_param.index(ch)
                chnew=ch+chN
##Extraction par type de variable 
             #   print 'R_SI',R_SI
                if R_SI[j] == None:
                        R_SI[j]=CALC_TABLE( TABLE=RESU[i],
                                     TITRE = ' ',
                                     ACTION=( _F(OPERATION='EXTR',
                                            NOM_PARA=('INST',ch,),),
                                              _F(OPERATION='RENOMME',
                                                NOM_PARA=(ch,chnew,),),
                                                                ),);
                else:
                        TMP_S=CALC_TABLE( TABLE=RESU[i],
                                     TITRE = ' ',
                                     ACTION=( _F(OPERATION='EXTR',
                                            NOM_PARA=('INST',ch,),),
                                                _F(OPERATION='RENOMME',
                                                NOM_PARA=(ch,chnew,),),
                                                                ),);
                        R_SI[j]=CALC_TABLE( reuse=R_SI[j], TABLE=R_SI[j],
                                     TITRE = ' ',
                                        ACTION=( _F(OPERATION='COMB',
                                        TABLE=TMP_S,NOM_PARA='INST',),
                                                ),);
                        DETRUIRE ( CONCEPT = _F (NOM = TMP_S,),)
 
     
        return R_SI
#######################################################################
def TEST_ECART(ch_param2,label_cal,N_pas,Ncal,ch_param,R_SI,prec_ecart,prec_zero):
   #Exploitations
   CH_V1 = ['INST']
   for ch in ch_param2 :
   #CALCUL des ecarts relatifs
        i=ch_param2.index(ch)
        chref1 =ch + label_cal[4] + str(N_pas[4]) 
        chref2 = ch + label_cal[Ncal-1] + str(N_pas[Ncal-1])
        chref = [chref1, chref2]        

        for j in range(Ncal) :
                coef = 1.
                ch_cal = ch + label_cal[j] + str(N_pas[j]) 
                ch_err = 'ER_' + ch_cal
                if j < 4 :
                        if (j==0 and i>0 and i<9) : coef = 1/C_Pa
                        iref = 0
                else :
                        iref =1
                        if (i==0) : CH_V1.append(ch_cal)
#               calcul de l'erreur (ecart relatif)
                preczero=prec_zero[i]    
                ch_for ='ERREUR('+ch_cal+','+chref[iref]+','+str(coef)+','+str(preczero)+')'
                ERR_REL = FORMULE (NOM_PARA = (ch_cal,chref[iref]),
                                VALE = ch_for)
                R_SI[i] = CALC_TABLE(TABLE =R_SI[i], reuse=R_SI[i],
                                     TITRE = 'R_SI'+str(j),
                             ACTION = (_F(OPERATION='OPER',NOM_PARA=ch_err,
                                          FORMULE=ERR_REL),
                                      ),);
                DETRUIRE ( CONCEPT = _F (NOM = ERR_REL,),)                

        for j in range(Ncal) :
           ch_cal = ch + label_cal[j] + str(N_pas[j]) 
           ch_err = 'ER_' + ch_cal
           TEST_TABLE(TABLE=R_SI[i],NOM_PARA=ch_err,
                      TYPE_TEST='MAX',
                      VALE_CALC=0.,
                      TOLE_MACHINE=prec_ecart[j],
                      VALE_REFE=0.,
                      CRITERE='ABSOLU',
                      PRECISION=prec_ecart[j],
                      REFERENCE='ANALYTIQUE',)
                 
   return
        
#######################################################################

def TEST_ECAR2(ch_param2,label_cal,N_pas,Ncal,ch_param,R_SI2,prec_ecart,prec_zero):
   #Exploitations
   CH_V1 = ['INST']
   for ch in ch_param2 :
   #CALCUL des ecarts relatifs
        i=ch_param2.index(ch)
        chref1 =ch + label_cal[4] + str(N_pas[4]) 
        chref2 = ch + label_cal[Ncal-1] + str(N_pas[Ncal-1])
        chref = [chref1, chref2]        

        for j in range(Ncal) :
                coef = 1.
                ch_cal = ch + label_cal[j] + str(N_pas[j]) 
                ch_err = 'ER_' + ch_cal
                if j < 4 :
                        if (j==0 and i>0 and i<9) : coef = 1/C_Pa
                        iref = 0
                else :
                        iref =1
                        if (i==0) : CH_V1.append(ch_cal)
#               calcul de l'erreur (ecart relatif)
                preczero=prec_zero[i]    
                ch_for ='ERREUR('+ch_cal+','+chref[iref]+','+str(coef)+','+str(preczero)+')'
                ERR_REL = FORMULE (NOM_PARA = (ch_cal,chref[iref]),
                                VALE = ch_for)
                R_SI2[i] = CALC_TABLE(TABLE =R_SI2[i], reuse=R_SI2[i],
                                     TITRE = 'R_SI2'+str(j),
                             ACTION = (_F(OPERATION='OPER',NOM_PARA=ch_err,
                                          FORMULE=ERR_REL),
                                      ),);
                DETRUIRE ( CONCEPT = _F (NOM = ERR_REL,),)                

        for j in range(Ncal) :
           ch_cal = ch + label_cal[j] + str(N_pas[j]) 
           ch_err = 'ER_' + ch_cal
           TEST_TABLE(TABLE=R_SI2[i],NOM_PARA=ch_err,
                      TYPE_TEST='MAX',
                      VALE_CALC=0.,
                      TOLE_MACHINE=prec_ecart[j],
                      VALE_REFE=0.,
                      CRITERE='ABSOLU',
                      PRECISION=prec_ecart[j],
                      REFERENCE='ANALYTIQUE',);
                 
   return
        
#######################################################################
