# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))
              
#----------------------------------------------
#                   MAILLAGE
#----------------------------------------------


MAILLAG1=LIRE_MAILLAGE(FORMAT='ASTER');

MAILLAG2=CREA_MAILLAGE(MAILLAGE  = MAILLAG1,
                       LINE_QUAD = _F(TOUT='OUI'),
                      );


MO=AFFE_MODELE(MAILLAGE=MAILLAG2,
               AFFE=_F(TOUT='OUI',PHENOMENE='MECANIQUE',MODELISATION='3D'),
              );

def ln(x,y,z) :
   if z > 0.7:           return  0.0
   if  z < 0.7 and z > 0.2:
          if y > 0.4:           return  0.35
          if  y < 0.4 and y > -0.2:
              if  x > 0.2:           return  0.0
              if  x < 0.2 and x  > -0.2:           return  -0.1
   if  z < 0.2 and z > -0.2:
          if y > 0.8:           return  0.7
          if  y < 0.8 and y > 0.2:
              if  x > 0.2:           return  0.2
              if  x < 0.2 and x > -0.2:           return  0.2
          if  y < 0.2 and y > -0.2:
              if  x > 0.8:           return  -0.3
              if  x < 0.8 and x  > 0.2:           return  -0.2
              if  x < 0.2 and x > -0.2:           return  -0.3

LN = FORMULE(NOM_PARA=('X','Y','Z'),VALE='ln(X,Y,Z)');

FISS=DEFI_FISS_XFEM(MAILLAGE=MAILLAG2,
                    TYPE_DISCONTINUITE='INTERFACE',
                    DEFI_FISS=_F(FONC_LN=LN),
                    INFO=1);

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MO,
                         FISSURE=FISS,
                         INFO=1);

MA_XFEM=POST_MAIL_XFEM(MODELE = MODELEK);

#IMPR_RESU(FORMAT="RESULTAT",FORMAT='MED',UNITE=80,RESU=_F(MAILLAGE = MA_XFEM));
IMPR_RESU(FORMAT="RESULTAT",RESU=_F(MAILLAGE = MA_XFEM));

CHXN =CREA_CHAMP(OPERATION='EXTR', TYPE_CHAM='NOEU_GEOM_R',
      NOM_CHAM='GEOMETRIE', MAILLAGE=MA_XFEM );

POSX1=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMT',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='COOR_X',
           TYPE_TEST='MIN',
           TABLE=POSX1,);

POSY1=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMT',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.,
           VALE_REFE=0.0E0,
           NOM_PARA='COOR_Y',
           TYPE_TEST='MIN',
           TABLE=POSY1,);

POSZ1=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMT',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=1.0,
           VALE_REFE=1.0E0,
           NOM_PARA='COOR_Z',
           TYPE_TEST='MIN',
           TABLE=POSZ1,);

POSX2=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMI',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.5,
           VALE_REFE=0.5,
           NOM_PARA='COOR_X',
           TYPE_TEST='MIN',
           TABLE=POSX2,);

POSY2=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMI',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='COOR_Y',
           TYPE_TEST='MIN',
           TABLE=POSY2,);

POSZ2=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMI',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.5,
           VALE_REFE=0.5,
           NOM_PARA='COOR_Z',
           TYPE_TEST='MIN',
           TABLE=POSZ2,);

POSX3=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMG',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.7,
           VALE_REFE=0.7,
           NOM_PARA='COOR_X',
           TYPE_TEST='MIN',
           TABLE=POSX3,);

POSY3=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMG',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.3,
           VALE_REFE=0.3E0,
           NOM_PARA='COOR_Y',
           TYPE_TEST='MIN',
           TABLE=POSY3,);

POSZ3=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMG',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='COOR_Z',
           TYPE_TEST='MIN',
           TABLE=POSZ3,);

POSX4=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMH',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.,
           VALE_REFE=0.0E0,
           NOM_PARA='COOR_X',
           TYPE_TEST='MIN',
           TABLE=POSX4,);

POSY4=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMH',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.3,
           VALE_REFE=0.3,
           NOM_PARA='COOR_Y',
           TYPE_TEST='MIN',
           TABLE=POSY4,);

POSZ4=POST_RELEVE_T(ACTION=_F(INTITULE='POSITION',
                             NOEUD= 'NMH',
                             CHAM_GD= CHXN ,
                             TOUT_CMP='OUI',
                             OPERATION='EXTRACTION',
                            ),
                  );

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0E-6,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='COOR_Z',
           TYPE_TEST='MIN',
           TABLE=POSZ4,);

FIN();
