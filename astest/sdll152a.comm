# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2020 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# Simple test of FSI calculations with transverse flow on an array
# a clamped-clamped steel tubes (beam model).
#
# Note : The modeling procedure requires the representation of a single beam
#        Fluid-structure coupling forces consider confinement details of the
#        array.
#
#                                    ^ y-axis
#                                    |
#                                    --> x-axis      (x) z axis
#  //|         L, D          |//
#  //|=======================|//
#  //|       ^ ^ ^ ^ ^       |//
#          ^ | | | | | ^
#        ^ | | | | | | | ^
#      ^ | | | | | | | | | ^
#      | | | | | | | | | | |
#
#          Fluid velocity (parabolic function)
#
#-------------------------------------------------------------------
# 1) Modal analysis of the beam
# 2) Stability analysis using Connor's model for the fluid forces
#-------------------------------------------------------------------
# person_in_charge: yannick.tampango at edf.fr

L = 1.000 # Tube length    = 1  m (used for velocity profile definition and
#                                  coherent with the associated mesh file)
D = 0.040 # Tube diameter  = 4 cm
t = 0.005 # Tube thickness = 5 mm

DEBUT( CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

TUBE=LIRE_MAILLAGE(FORMAT="ASTER",)
MODI_MAILLAGE(reuse=TUBE, MAILLAGE=TUBE,
              ABSC_CURV=_F(NOEUD_ORIG='N001',
                           TOUT='OUI'))

MODEL=AFFE_MODELE(MAILLAGE=TUBE,
                   AFFE    =(_F(GROUP_MA     = 'BEAM',
                                PHENOMENE    = 'MECANIQUE',
                                MODELISATION = 'POU_D_T')))

CARA=AFFE_CARA_ELEM(MODELE = MODEL,
                    POUTRE = _F(GROUP_MA = 'BEAM',
                                SECTION  = 'CERCLE',
                                CARA     = ('R','EP',),
                                VALE     = (0.5*D, t)))


NbNodes = 101
Absc = [(L/(NbNodes-1))*i for i in range(NbNodes)]

RHOI=DEFI_FONCTION(NOM_PARA ='ABSC',
                   ABSCISSE =Absc,
                   ORDONNEE =[1000.]*len(Absc))

RHOE=DEFI_FONCTION(NOM_PARA ='ABSC',
                   ABSCISSE =Absc,
                   ORDONNEE =[1000.]*len(Absc))

Velo = [-4*x*(x-1) for x in Absc]  # Parabolic velocity profile
Data = [None]*2*NbNodes
for i in range(NbNodes) :
    Data[2*i  ] = Absc[i]
    Data[2*i+1] = Velo[i]

VELPROF=DEFI_FONCTION(NOM_PARA = 'ABSC',
                      VALE     = Data)

TYPEFLUI=DEFI_FLUI_STRU(FAISCEAU_TRANS=_F(
                                          COUPLAGE = 'OUI',
                                          CARA_ELEM = CARA,
                                          PROF_RHO_F_INT = RHOI,
                                          PROF_RHO_F_EXT = RHOE,
                                          COEF_MASS_AJOU = 1.0,
                                          NOM_CMP = 'DY',
                                          TYPE_PAS = 'CARRE_LIGN',
                                          TYPE_RESEAU = 675,
                                          PAS = 1.44,
                                          PROF_VITE_FLUI = VELPROF,
                                          RHO_TUBE = 2500.,
                                          NB_CONNORS   = 5,
                                          CSTE_CONNORS = (3.0,5.0),
                                          UNITE_CD=70,
                                          UNITE_CK=70,
                                          ),
                        INFO=2)

FONC_CM=FONC_FLUI_STRU(TYPE_FLUI_STRU=TYPEFLUI)

MAT=DEFI_MATERIAU(ELAS_FLUI=_F(E   = 210.E9,
                               RHO = 7800.,
                               NU  = 0.3,
                               PROF_RHO_F_EXT = RHOE,
                               PROF_RHO_F_INT = RHOI,
                               COEF_MASS_AJOU = FONC_CM))

CHMAT=AFFE_MATERIAU(MAILLAGE=TUBE,
                    AFFE    =_F(TOUT = 'OUI',
                               MATER = MAT))

CHDDL=AFFE_CHAR_MECA(MODELE =MODEL,
                     DDL_IMPO= (_F(GROUP_NO = 'CLAMPED',
                                   DX  = 0.0, DY  = 0.0, DZ  = 0.0,
                                   DRX = 0.0, DRY = 0.0, DRZ = 0.0),
                                _F(GROUP_MA = 'BEAM',
                                   DZ = 0.0)))

MELR=CALC_MATR_ELEM(MODELE=MODEL,
                    CHARGE=CHDDL,
                    CARA_ELEM=CARA,
                    CHAM_MATER=CHMAT,
                    OPTION='RIGI_FLUI_STRU')

MELM=CALC_MATR_ELEM(MODELE=MODEL,
                    CHARGE=CHDDL,
                    CARA_ELEM=CARA,
                    CHAM_MATER=CHMAT,
                    OPTION='MASS_FLUI_STRU')

NUM=NUME_DDL(MATR_RIGI=MELR)

MATRR=ASSE_MATRICE(MATR_ELEM=MELR,
                   NUME_DDL=NUM)

MATRM=ASSE_MATRICE(MATR_ELEM=MELM,
                   NUME_DDL=NUM)

MODES=CALC_MODES(MATR_RIGI=MATRR,
                 OPTION='PLUS_PETITE',
                 CALC_FREQ=_F(NMAX_FREQ=2),
                 MATR_MASS=MATRM)

MODES=NORM_MODE(reuse=MODES, MODE=MODES, NORME=('TRAN',))

vmin     = 0.1
vmax     = 5.1
pas      = 0.1
nb_poin  = 1 + int((vmax - vmin)/pas)

MELES=CALC_FLUI_STRU(VITE_FLUI  = _F(VITE_MIN  = vmin,
                                     VITE_MAX  = vmax,
                                     NB_POIN   = nb_poin),
                     BASE_MODALE= _F(MODE_MECA = MODES,
                                     NUME_ORDRE= (1,2),
                                     AMOR_REDUIT = (0.15E-2,0.15E-2),
                                     AMOR_REDUIT_CONN = (0.15E-2,0.15E-2)),
                     TYPE_FLUI_STRU=TYPEFLUI,
                     IMPRESSION=_F(PARA_COUPLAGE = 'OUI',
                                   DEFORMEE      = 'NON'))

VCRIT = RECU_FONCTION(BASE_ELAS_FLUI=MELES,
                     PARA_X='NB_CONNORS',
                     PARA_Y='VITE_CRIT',
                     NUME_MODE=1)

RAP_M1 = RECU_FONCTION(BASE_ELAS_FLUI=MELES,
                     PARA_X='NB_CONNORS',
                     PARA_Y='INSTAB_EDF',
                     NUME_MODE=1)

RAP_M2 = RECU_FONCTION(BASE_ELAS_FLUI=MELES,
                     PARA_X='NB_CONNORS',
                     PARA_Y='INSTAB_TOUT_CMP',
                     NUME_MODE=1)


# TEST DE LA VITESSE CRITIQUE CALCULEE POUR MODE #1 ET NOMBRE DE CONNORS DE 4.5
TEST_FONCTION(VALEUR=_F(VALE_CALC=4.566804940706,
                        CRITERE='RELATIF',
                        VALE_PARA=4.5,
                        FONCTION=VCRIT))

# TEST DU RAPPORT D'INSTABILITE AVEC LA METHODE CONSERVATIVE
# (APPLICATION DE LA METHODE CONNOR'S SUR LA COMPOSANTE UNIQUE
#  DE LA SOLLICITATION IFS)
TEST_FONCTION(VALEUR=_F(VALE_CALC=0.20088651868682,
                        CRITERE='RELATIF',
                        VALE_PARA=4.5,
                        FONCTION=RAP_M1))

# TEST DU RAPPORT D'INSTABILITE AVEC LA METHODE TOUTES COMPOSANTS
# LA VITESSE EFFICACE EST AINSI CALCULEE SUR LES TROIS DIRECTIONS
TEST_FONCTION(VALEUR=_F(VALE_CALC=0.14214631062862,
                        CRITERE='RELATIF',
                        VALE_PARA=4.5,
                        FONCTION=RAP_M2))


FIN()
