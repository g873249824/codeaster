# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',
              VISU_EFICAS='NON'),
      PAR_LOT='NON')

import aster_core
help(aster_core)

rank, size = aster_core.MPI_CommRankSize()
print "Run on processor #%d/%d" % (rank, size)

# check for MPI_Bcast
NB = 5
iarray = [rank] * NB
if rank == 0:
    iarray = range(NB)
print "Processor #{}: array is {}".format(rank, iarray)

buffer = aster_core.MPI_Bcast(iarray, 0)
print "Broadcast returns:", buffer

tab = CREA_TABLE(LISTE=_F(PARA='SUM', LISTE_I=sum(buffer)))

TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=NB * (NB - 1) / 2,
           VALE_REFE_I=NB * (NB - 1) / 2,
           NOM_PARA='SUM',
           TABLE=tab,)

# check for MPI_GatherStr
cwd = os.getcwd()
paths = aster_core.MPI_GatherStr(cwd, 0)
if rank == 0:
    print 'Collected paths:', paths
    ok = True
    for i, dname in enumerate(paths):
        # this value is as_run dependant!
        ok = ok and dname.endswith('proc.%d' % i)
else:
    print 'Here, it should be None:', paths
    ok = paths is None

tbool = CREA_TABLE(LISTE=_F(PARA='BOOL', LISTE_I=int(ok)))
TEST_TABLE(REFERENCE='ANALYTIQUE',
           VALE_CALC_I=int(True),
           VALE_REFE_I=int(True),
           NOM_PARA='BOOL',
           TABLE=tbool,)

FIN()
