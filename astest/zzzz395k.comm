# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI'));

mesh=LIRE_MAILLAGE(FORMAT='MED',);

# Material properties for thermics: functions
Lambda=DEFI_FONCTION(
                     NOM_PARA='TEMP',
                     VALE=(20.0 ,0.014 ,
                           100.0 ,0.0152 ,
                           200.0 ,0.0166 ,
                           300.0 ,0.0179 ,
                           400.0 ,0.019 ,
                           500.0 ,0.0206 ,
                           600.0 ,0.0218 ,
                           700.0 ,0.0231 ,
                           800.0 ,0.0243 ,
                           900.0 ,0.026 ,
                           1000.0 ,0.0273 ,
                           1200.0 ,0.0299 ,),
                     PROL_DROITE='LINEAIRE',
                     PROL_GAUCHE='LINEAIRE',);

rho_cp=DEFI_FONCTION(
                     NOM_PARA='TEMP',
                     VALE=(20.0 ,0.0036 ,
                           100.0 ,0.0039053 ,
                           200.0 ,0.0041685 ,
                           300.0 ,0.0043 ,
                           400.0 ,0.004396 ,
                           500.0 ,0.004446 ,
                           600.0 ,0.004495 ,
                           700.0 ,0.0045815 ,
                           800.0 ,0.0047875 ,
                           900.0 ,0.0049465 ,
                           1000.0 ,0.0049962 ,
                           1200.0 ,0.00504365 ,),
                     PROL_DROITE='LINEAIRE',
                     PROL_GAUCHE='LINEAIRE',);

# Heat transfer coefficient with air (W.mm-2.K-1)
C_echang=DEFI_CONSTANTE(VALE=1.5e-05,);

# Heat transfer coefficient with one face of the cube (W.mm-2.K-1)
C_echanf=DEFI_CONSTANTE(VALE=1.0,);

# Ambient temperature
T_ex=DEFI_CONSTANTE(VALE=20.0,);

# Temperature of one face of the cube
T_im=DEFI_FONCTION(
                   NOM_PARA='INST',
                   VALE=(0.0 ,20.0 ,
                         1.0 ,30.0 ,
                         2.0 ,50.0 ,
                         3.0 ,90.0 ,
                         4.0 ,140.0 ,
                         5.0 ,240.0 ,
                         6.0 ,350.0 ,
                         7.0 ,570.0 ,
                         8.0 ,800.0 ,
                         9.0 ,1000.0 ,),
                   PROL_DROITE='CONSTANT',
                   PROL_GAUCHE='LINEAIRE',);
# Emissivity
C_epsi=DEFI_CONSTANTE(VALE=0.75,);

# Stefanâ€“Boltzmann constant (J.mm-2.s-1.K-4)
C_sigma=DEFI_CONSTANTE(VALE=5.67e-14,);

# Define the material
steel=DEFI_MATERIAU(THER_NL=_F(LAMBDA=Lambda,
                             RHO_CP=rho_cp,),);

chmat=AFFE_MATERIAU(MAILLAGE=mesh,
                    AFFE=_F(TOUT='OUI',
                            MATER=steel,),);
# Thermic model
model=AFFE_MODELE(MAILLAGE=mesh,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='THERMIQUE',
                       MODELISATION='3D',),);

# Boundary condition
chg_th=AFFE_CHAR_THER_F(MODELE=model,
                        RAYONNEMENT=_F(GROUP_MA='S_e',
                                       SIGMA=C_sigma,
                                       EPSILON=C_epsi,
                                       TEMP_EXT=T_ex,),
                        ECHANGE=(_F(GROUP_MA='S_e',
                                    COEF_H=C_echang,
                                    TEMP_EXT=T_ex,),
                                 _F(GROUP_MA='S_f',
                                    COEF_H=C_echanf,
                                    TEMP_EXT=T_im,),),);


# Time discretization
list_t=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=10.0,
                                    PAS=1.0,),);

list_i=DEFI_LIST_INST(METHODE='MANUEL', DEFI_LIST=_F(LIST_INST=list_t,),);

# Complete computation to create base
thnl=THER_NON_LINE(MODELE=model,
                   CHAM_MATER=chmat,
                   EXCIT=_F(CHARGE=chg_th,),
                   INCREMENT=_F(LIST_INST=list_i,),
                   ETAT_INIT=_F(VALE=20.0,),
                   NEWTON=_F(REAC_ITER=1,
                             ITER_LINE_MAXI=3,),
                   CONVERGENCE=_F(RESI_GLOB_MAXI=1e-5,),);

thnl=CALC_CHAMP(reuse=thnl,
                RESULTAT=thnl,
                THERMIQUE='FLUX_NOEU',);

# Create base (TEMP)
base_p=DEFI_BASE_REDUITE(OPERATION = 'POD_INCR',
                         TOLE      = 1.E-10,
                         RESULTAT  = thnl,
                         INFO      = 2,
                         NOM_CHAM  = 'TEMP',
                         TOLE_SVD  = 1.E-3,);

coorredp=RECU_TABLE(CO=base_p,NOM_TABLE='COOR_REDUIT',);


# Create base (FLUX_NOEU)
base_d=DEFI_BASE_REDUITE(OPERATION = 'POD_INCR',
                         TOLE      = 1.E-10,
                         RESULTAT  = thnl,
                         INFO      = 2,
                         NOM_CHAM  = 'FLUX_NOEU',
                         TOLE_SVD  = 1.E-3,);

coorredd=RECU_TABLE(CO=base_d,NOM_TABLE='COOR_REDUIT',);

# Print base (TEMP)
IMPR_RESU(FORMAT='MED',UNITE=80,RESU=_F(RESULTAT=base_p))

# Print base (FLUX_NOEU)
IMPR_RESU(FORMAT='MED',UNITE=81,RESU=_F(RESULTAT=base_d))

# Print reduced coordinates (TEMP)
IMPR_TABLE(TABLE=coorredp)

# Print reduced coordinates (FLUX_NOEU)
IMPR_TABLE(TABLE=coorredd)

# Tests base
TEST_RESU(RESU=(
                _F(RESULTAT=base_p,
                   NUME_ORDRE= 1,
                   NOM_CHAM='TEMP',
                   NOEUD='N27',
                   NOM_CMP='TEMP',
                   VALE_CALC=(-0.140634433078,0.140634433078),
                   ),
                _F(RESULTAT=base_p,
                   NUME_ORDRE= 2,
                   NOM_CHAM='TEMP',
                   NOEUD='N27',
                   NOM_CMP='TEMP',
                   VALE_CALC=(-0.188084836492,0.188084836492),
                   ),
                _F(RESULTAT=base_p,
                   NUME_ORDRE= 3,
                   NOM_CHAM='TEMP',
                   NOEUD='N27',
                   NOM_CMP='TEMP',
                   VALE_CALC=(0.0851156981709,-0.0851156981709),
                   ),
                ),
          );

TEST_RESU(RESU=(
                _F(RESULTAT=base_d,
                   NUME_ORDRE= 1,
                   NOM_CHAM='FLUX_NOEU',
                   NOEUD='N27',
                   NOM_CMP='FLUX',
                   VALE_CALC=(-0.000131913642177,0.000131913642177),
                   ),
                _F(RESULTAT=base_d,
                   NUME_ORDRE= 1,
                   NOM_CHAM='FLUX_NOEU',
                   NOEUD='N27',
                   NOM_CMP='FLUY',
                   VALE_CALC=(-0.000264685470879,0.000264685470879),
                   ),
                _F(RESULTAT=base_d,
                   NUME_ORDRE= 2,
                   NOM_CHAM='FLUX_NOEU',
                   NOEUD='N27',
                   NOM_CMP='FLUX',
                   VALE_CALC=(0.00210320104369,-0.00210320104369),
                   ),
                _F(RESULTAT=base_d,
                   NUME_ORDRE= 2,
                   NOM_CHAM='FLUX_NOEU',
                   NOEUD='N27',
                   NOM_CMP='FLUY',
                   VALE_CALC=(0.00422456825203,-0.00422456825203),
                   ),
                _F(RESULTAT=base_d,
                   NUME_ORDRE= 3,
                   NOM_CHAM='FLUX_NOEU',
                   NOEUD='N27',
                   NOM_CMP='FLUX',
                   VALE_CALC=(0.00540174775494,-0.00540174775494),
                   ),
                _F(RESULTAT=base_d,
                   NUME_ORDRE= 3,
                   NOM_CHAM='FLUX_NOEU',
                   NOEUD='N27',
                   NOM_CMP='FLUY',
                   VALE_CALC=(0.010855124341,-0.010855124341),
                   ),
                ),
          );

# Tests reduced coordinates
TEST_TABLE(
           VALE_CALC=(7673.69355304,-7673.69355304),
           NOM_PARA  = 'COOR_REDUIT',
           TABLE     = coorredp,
           FILTRE    = (
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_MODE',
                              VALE_I    = 1,),
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_SNAP',
                              VALE_I    = 11,),
                       ),
           )
TEST_TABLE(
           VALE_CALC=(879.130655319,-879.130655319),
           NOM_PARA  = 'COOR_REDUIT',
           TABLE     = coorredp,
           FILTRE    = (
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_MODE',
                              VALE_I    = 1,),
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_SNAP',
                              VALE_I    = 5,),
                       ),
           )
TEST_TABLE(
           VALE_CALC=(0.135906406893,-0.135906406893),
           NOM_PARA  = 'COOR_REDUIT',
           TABLE     = coorredp,
           FILTRE    = (
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_MODE',
                              VALE_I    = 3,),
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_SNAP',
                              VALE_I    = 5,),
                       ),
           )
TEST_TABLE(
           VALE_CALC=(0.0564625439087,-0.0564625439087),
           NOM_PARA  = 'COOR_REDUIT',
           TABLE     = coorredp,
           FILTRE    = (
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_MODE',
                              VALE_I    = 3,),
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_SNAP',
                              VALE_I    = 11,),
                       ),
           )
#

TEST_TABLE(
           VALE_CALC=(5.01049807634,-5.01049807634),
           NOM_PARA  = 'COOR_REDUIT',
           TABLE     = coorredd,
           FILTRE    = (
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_MODE',
                              VALE_I    = 1,),
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_SNAP',
                              VALE_I    = 11,),
                       ),
           )
TEST_TABLE(
           VALE_CALC=(2.3667100854,-2.3667100854),
           NOM_PARA  = 'COOR_REDUIT',
           TABLE     = coorredd,
           FILTRE    = (
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_MODE',
                              VALE_I    = 1,),
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_SNAP',
                              VALE_I    = 5,),
                       ),
           )
TEST_TABLE(
           VALE_CALC=(0.0112726127965,-0.0112726127965),
           NOM_PARA  = 'COOR_REDUIT',
           TABLE     = coorredd,
           FILTRE    = (
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_MODE',
                              VALE_I    = 4,),
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_SNAP',
                              VALE_I    = 5,),
                       ),
           )
TEST_TABLE(
           VALE_CALC=(0.00632713385844,-0.00632713385844),
           NOM_PARA  = 'COOR_REDUIT',
           TABLE     = coorredd,
           FILTRE    = (
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_MODE',
                              VALE_I    = 4,),
                           _F(CRIT_COMP = 'EQ',
                              NOM_PARA  = 'NUME_SNAP',
                              VALE_I    = 11,),
                       ),
           )

FIN();
