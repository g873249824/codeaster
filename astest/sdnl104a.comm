# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# CAS_TEST__: SDNL104A
#
# CALCUL DE LA REPONSE TRANSITOIRE NON-LINEAIRE D'UNE POUTRE EN FLEXION
# CHOQUANT SUR UN APPUI ELASTIQUE.
# CE CALCUL SERT DE REFERENCE AUX CAS TESTS PAR SOUS-STRUCTURATION.
#
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

#
MAYA=LIRE_MAILLAGE(FORMAT="ASTER", )

#
MATERIO1=DEFI_MATERIAU(  ELAS=_F( RHO = 1.E06,  NU = 0.3,  E = 1.E10))

jeu = 1.e-4
MATERIO2=DEFI_MATERIAU(DIS_CONTACT=_F(RIGI_NOR=1.E+8,
                                      DIST_1 = 1.-jeu,
                                      JEU = 1.,),
                      )

#
CHMAT=AFFE_MATERIAU(MAILLAGE=MAYA,
                    AFFE=(_F(GROUP_MA='TOUT', MATER = MATERIO1),
                          _F(GROUP_MA='C1',   MATER = MATERIO2),
                         ),
                    )

#
BARRE=AFFE_MODELE(MAILLAGE=MAYA,
                  AFFE=(_F(GROUP_MA='TOUT',
                           MODELISATION='POU_D_E',
                           PHENOMENE='MECANIQUE'),
                        _F(GROUP_MA='C1',
                           MODELISATION='DIS_T',
                           PHENOMENE='MECANIQUE'),
                       ),
                  )

#
CARA=AFFE_CARA_ELEM(MODELE=BARRE,
                    POUTRE=_F(GROUP_MA = 'TOUT',
                              SECTION = 'CERCLE',
                              CARA = 'R',VALE = 0.1),
                    DISCRET=(_F(CARA = 'K_T_D_L',  GROUP_MA = 'C1',
                                VALE = ( 0.,0.,0.,),),
                             _F(CARA = 'M_T_D_L',  GROUP_MA = 'C1',
                                VALE = ( 0.,),),
                            ),
                    ORIENTATION=_F(GROUP_MA='C1',
                                   CARA='VECT_Y',
                                   VALE=(-1.,0.,0.,),
                                  ),
                    )

#
GUIDAGE=AFFE_CHAR_MECA(MODELE=BARRE,
                       DDL_IMPO=(_F(TOUT  = 'OUI', DX = 0., DZ = 0., DRX = 0., DRY = 0.),
                                 _F(NOEUD = 'N1',  DY = 0.,  DRZ = 0.),
                                 _F(NOEUD = 'N12', DY = 0.,  DZ = 0., DX=0.,),
                                ),
                      )

#
CHARTRAN=AFFE_CHAR_MECA(MODELE=BARRE, FORCE_NODALE=_F(NOEUD='N11',FY=-1000.),)

#
K_ELEM=CALC_MATR_ELEM(MODELE=BARRE,
                      CARA_ELEM=CARA,
                      CHAM_MATER=CHMAT,
                      OPTION='RIGI_MECA',
                      CHARGE=GUIDAGE,
                     )

#
M_ELEM=CALC_MATR_ELEM(MODELE=BARRE,
                      CARA_ELEM=CARA,
                      CHAM_MATER=CHMAT,
                      OPTION='MASS_MECA',
                      CHARGE=GUIDAGE
                     )

#
V_ELEM=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=CHARTRAN
                     )
#
NUM=NUME_DDL(MATR_RIGI=K_ELEM)

#
K_ASSE=ASSE_MATRICE(MATR_ELEM=K_ELEM,NUME_DDL=NUM)

M_ASSE=ASSE_MATRICE(MATR_ELEM=M_ELEM,NUME_DDL=NUM)

V_ASSE=ASSE_VECTEUR(VECT_ELEM=V_ELEM,NUME_DDL=NUM)

#
MODES=CALC_MODES(MATR_RIGI=K_ASSE,
                 MATR_MASS=M_ASSE,
                 CALC_FREQ=_F(NMAX_FREQ=5),
                )
#
###
###### PROJECTIONS SUR BASE MODALE :
###
#
NUMEMODE=NUME_DDL_GENE(BASE=MODES,
                       STOCKAGE='DIAG'
                      )

#
K_PROJ=PROJ_MATR_BASE(BASE=MODES,
                      NUME_DDL_GENE=NUMEMODE,
                      MATR_ASSE=K_ASSE
                      )

#
M_PROJ=PROJ_MATR_BASE(BASE=MODES,
                      NUME_DDL_GENE=NUMEMODE,
                      MATR_ASSE=M_ASSE
                      )

#
F_PROJ=PROJ_VECT_BASE(BASE=MODES,
                      NUME_DDL_GENE=NUMEMODE,
                      VECT_ASSE=V_ASSE
                      )

#
# DEFINITION DE L'OBSTACLE
#
OBSTACLE=DEFI_OBSTACLE(TYPE='CERCLE')

#
###
###### CALCULS DYNAMIQUE NON-LINEAIRE
###
#
t_fin = 0.16
NPAS=1600
LIST_R=DEFI_LIST_REEL(DEBUT=0.,
                      INTERVALLE=_F( JUSQU_A = t_fin,
                      NOMBRE = NPAS))
DNL=DYNA_NON_LINE(MODELE=BARRE,
                 CHAM_MATER=CHMAT,
                 CARA_ELEM=CARA,
                 EXCIT=(_F(CHARGE=GUIDAGE,),
                        _F(CHARGE=CHARTRAN,),
                     ),
                 COMPORTEMENT=(_F(RELATION='DIS_CHOC',
                                  GROUP_MA='C1',),
                               _F(RELATION='ELAS',
                                  GROUP_MA='TOUT',),
                              ),
                 INCREMENT=_F(LIST_INST=LIST_R,),
                 SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',
                               FORMULATION='ACCELERATION',
                               ),
                NEWTON=_F(REAC_ITER=1,),
              )

t_depl = 0.1315  # max depl
t_vite = 0.1566  # max vite
#
TEST_RESU(RESU=(
               _F(INST=t_depl,
                  RESULTAT=DNL,
                  NOM_CHAM='DEPL',
                  NOEUD='N11',
                  NOM_CMP='DY',
                  VALE_CALC=-1.85356696663E-06,),
               _F(INST=t_vite,
                  RESULTAT=DNL,
                  NOM_CHAM='VITE',
                  NOEUD='N11',
                  NOM_CMP='DY',
                  VALE_CALC=-0.00463289359505,),
               ))


t_cin1=POST_ELEM(ENER_CIN=_F(GROUP_MA='TOUT',
                            ),
                MODELE=BARRE,
                CHAM_MATER=CHMAT,
                CARA_ELEM=CARA,
                RESULTAT=DNL,
                );


TEST_TABLE(VALE_CALC=0.0514081404196,
           NOM_PARA='TOTALE',
           TABLE=t_cin1,
           FILTRE=(_F(NOM_PARA='LIEU',
                      VALE_K='TOUT',),
                   _F(NOM_PARA='INST',
                      VALE=t_fin,
                      PRECISION=1e-4,
                     ),
                   ),
           )
#
FIN()
#
