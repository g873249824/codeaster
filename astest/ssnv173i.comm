# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),
      MESURE_TEMPS=_F(MOYENNE='NON'))

MAILLAGE=LIRE_MAILLAGE(FORMAT='MED',INFO=1);

MAILLAGE=DEFI_GROUP(reuse =MAILLAGE,
                    MAILLAGE=MAILLAGE,
                    CREA_GROUP_NO=_F(GROUP_MA='VOL'));

MODELEIN=AFFE_MODELE(MAILLAGE=MAILLAGE,AFFE=_F(GROUP_MA=('VOL'), PHENOMENE='MECANIQUE', MODELISATION='3D'),
                     DISTRIBUTION=_F(METHODE='CENTRALISE'))

LN = FORMULE(VALE='Z-12.5 ',
             NOM_PARA=['X', 'Y', 'Z'],)
LT = FORMULE(VALE='X-10. ',
             NOM_PARA=['X', 'Y', 'Z'],)

FISS=DEFI_FISS_XFEM(MAILLAGE=MAILLAGE,
                    TYPE_DISCONTINUITE='INTERFACE',
                    DEFI_FISS=_F(FONC_LN=LN),
                    INFO=3,
                    );

MODELEK=MODI_MODELE_XFEM(MODELE_IN=MODELEIN, FISSURE=FISS, INFO=2);

E=205000.0E6
nu=0.3
ACIER=DEFI_MATERIAU(ELAS=_F(E=E,
                            NU=nu,
                            RHO=7800.0));

CHAMPMAT=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       MODELE=MODELEK,
                       AFFE=(_F(GROUP_MA=('VOL'),
                                MATER=ACIER,
                                ),
                             ));


CH=AFFE_CHAR_MECA(MODELE=MODELEK,
                   DDL_IMPO=(_F(NOEUD=('N1','N2','N3','N4'),
                                DX=0.,DY=0.,DZ=0.),
                             _F(NOEUD=('N5','N6','N7','N8'),
                                DX=0.,DY=0.,DZ=1.E-6)));


MODI_MODELE(reuse=MODELEK, MODELE=MODELEK, DISTRIBUTION=_F(METHODE='CENTRALISE'))
UTOT=MECA_STATIQUE(MODELE=MODELEK,
                   CHAM_MATER=CHAMPMAT,
                   EXCIT=(_F(CHARGE=CH),
                          
                          ),
                   SOLVEUR=_F(   
                            METHODE='MUMPS'),
                   INFO=1,
                   ); 

# -------------------------------------------------------------
#            POST-TRAITEMENT POUR LA VISUALISATION X-FEM
# -------------------------------------------------------------

MA_XFEM=POST_MAIL_XFEM(
                       MODELE        = MODELEK,
                       INFO          = 2)

#IMPR_RESU(FORMAT='RESULTAT',RESU=_F(MAILLAGE=MA_XFEM));
#IMPR_RESU(FORMAT='GMSH',UNITE=81,RESU=_F(MAILLAGE=MA_XFEM));

MOD_VISU=AFFE_MODELE(MAILLAGE=MA_XFEM,
                     AFFE=_F(TOUT='OUI',
                              PHENOMENE='MECANIQUE',
                              MODELISATION='3D'),
                     DISTRIBUTION=_F(METHODE='CENTRALISE'))

RES_XFEM=POST_CHAM_XFEM(MODELE_VISU   = MOD_VISU,
                        RESULTAT      = UTOT,

                        INFO          = 2)

#IMPR_RESU(FORMAT='GMSH',UNITE=82,RESU=_F(RESULTAT=RES_XFEM));



# -------------------------------------------------------------
#            TEST_TABLE
# -------------------------------------------------------------


DEP=POST_RELEVE_T(ACTION=_F(INTITULE='DEPLE',
                                GROUP_NO=('NFISSU'),
                                RESULTAT=RES_XFEM,
                                NOM_CHAM='DEPL',
                                NUME_ORDRE=1,
                                TOUT_CMP='OUI',
                                OPERATION='EXTRACTION'));

IMPR_TABLE(TABLE=DEP,
           FORMAT='AGRAF',
           FORMAT_R='1PE12.5',
           IMPR_FONCTION='NON');


DEPP = CALC_TABLE(TABLE = DEP,
                  ACTION = (_F(OPERATION = 'FILTRE',
                               NOM_PARA  = 'NOEUD',
                               CRIT_COMP = 'REGEXP',
                               VALE_K    = '^N[M]')));


DEPM = CALC_TABLE(TABLE = DEP,
                  ACTION = (_F(OPERATION = 'FILTRE',
                               NOM_PARA  = 'NOEUD',
                               CRIT_COMP = 'REGEXP',
                               VALE_K    = '^N[P]')));

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='DX',
           TYPE_TEST='MIN',
           TABLE=DEPP,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='DX',
           TYPE_TEST='MAX',
           TABLE=DEPP,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='DY',
           TYPE_TEST='MIN',
           TABLE=DEPP,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='DY',
           TYPE_TEST='MAX',
           TABLE=DEPP,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0,
           NOM_PARA='DZ',
           TYPE_TEST='MIN',
           TABLE=DEPP,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0,
           NOM_PARA='DZ',
           TYPE_TEST='MAX',
           TABLE=DEPP,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='DX',
           TYPE_TEST='MIN',
           TABLE=DEPM,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='DX',
           TYPE_TEST='MAX',
           TABLE=DEPM,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='DY',
           TYPE_TEST='MIN',
           TABLE=DEPM,)

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999998E-17,
           VALE_CALC=0.,
           VALE_REFE=0.0,
           NOM_PARA='DY',
           TYPE_TEST='MAX',
           TABLE=DEPM,)

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999994E-12,
           VALE_CALC=1E-06,
           VALE_REFE=9.9999999999999995E-07,
           NOM_PARA='DZ',
           TYPE_TEST='MIN',
           TABLE=DEPM,)

TEST_TABLE(CRITERE='RELATIF',
           REFERENCE='ANALYTIQUE',
           PRECISION=9.9999999999999994E-12,
           VALE_CALC=1E-06,
           VALE_REFE=9.9999999999999995E-07,
           NOM_PARA='DZ',
           TYPE_TEST='MAX',
           TABLE=DEPM,)

FIN();
