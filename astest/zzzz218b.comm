# person_in_charge: marina.bottoni at edf.fr
# ======================================================================
# COPYRIGHT (C) 1991 - 2016  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#

# ------------------------------------------------------
# NON REGRESSION TEST : TWO CRACKS, HOT AIR INJECTION 
# ------------------------------------------------------

DEBUT(CODE = _F(NIV_PUB_WEB = 'INTERNET',),)

NONREGRE = (-3.53094502576E-06,7.242386907E-06, -6.29121707622E-06, 6.69389819569E-05,\
            10.5220618393,26.9916371704,135.409680271,118.600167736,0.0241921, 0.001105076)

pr_atmos = 1.E5
pr_int   = 10.E5
temp_int = 140.0
temp_ref = 20.0
temp_ext = temp_ref


# MESH
# -------------------------------------
MAIL = LIRE_MAILLAGE(FORMAT='MED',)

MAIL = DEFI_GROUP(
            reuse         = MAIL,
            MAILLAGE      = MAIL,
            CREA_GROUP_NO = (_F(GROUP_MA = ('BETON','ENCASTRE','INTRADOS','EXTRADOS',
                                            'MILIEU','BFISG1','BFISM1','BFISM2','BFISD2',),),
                            _F(GROUP_NO  = 'MILIEU',
                                POSITION = 'MILIEU',
                                NOM      = 'ENCA',),),)

MAIL = MODI_MAILLAGE(
            reuse        = MAIL,
            MAILLAGE     = MAIL,
            ORIE_PEAU_2D = _F(GROUP_MA = ('INTRADOS','EXTRADOS','GAUCHE','DROITE',
                                          'BFISG1','BFISM1','BFISM2','BFISD2',),),)



# DEFINITION OF MODELS AND MATERIALS
# -------------------------------------
MODMECA = AFFE_MODELE(
                MAILLAGE     = MAIL,
                AFFE         = (_F(GROUP_MA = ('BETON','ENCASTRE','INTRADOS','EXTRADOS',
                                               'MILIEU','BFISG1','BFISM1','BFISM2','BFISD2',),
                PHENOMENE    = 'MECANIQUE',
                MODELISATION = 'D_PLAN',),),)

MODTHER = AFFE_MODELE(
                MAILLAGE  = MAIL,
                AFFE      = _F(GROUP_MA = ('BETON','ENCASTRE','INTRADOS','EXTRADOS',
                                          'MILIEU','BFISG1','BFISM1','BFISM2','BFISD2',),
                PHENOMENE = 'THERMIQUE',
                MODELISATION = 'PLAN_DIAG',),)

BETON = DEFI_MATERIAU(
                ELAS = _F(E  = 35000.0E+6,
                          NU = 0.25,
                          ALPHA = 1.0E-5,),
                THER = _F(LAMBDA = 2.3,
                          RHO_CP = 2500000.0,),)

CHMAT = AFFE_MATERIAU(
                MAILLAGE = MAIL,
                AFFE     = (_F(GROUP_MA = ('BETON','ENCASTRE','INTRADOS','EXTRADOS',
                                           'MILIEU','BFISG1','BFISM1','BFISM2','BFISD2',),
                               MATER = BETON,),),
                AFFE_VARC = _F(NOM_VARC = 'TEMP',VALE_REF = temp_ref),)



# BOUNDARY CONDITIONS
# ---------------------------------
# Mechanical B.C. :
CONDMECA = AFFE_CHAR_MECA(
                  MODELE = MODMECA,
                  DDL_IMPO    = (_F(GROUP_MA = ('ENCASTRE',), DX=0.0, DY=0.0,),
                                 _F(GROUP_MA = ('MILIEU'),    DX=0.0,), ),
                  LIAISON_DDL = (_F(GROUP_NO = ('E_GD','E_MG'),
                                    DDL      = ('DY','DY',),
                                    COEF_MULT= (-1.,1.),
                                    COEF_IMPO= 0.),
                                 _F(GROUP_NO = ('E_MD','E_DG'),
                                    DDL      = ('DY','DY',),
                                    COEF_MULT= (-1.,1.),
                                    COEF_IMPO=0.),),)

CONT = DEFI_CONTACT(MODELE      = MODMECA,
                    FORMULATION = 'DISCRETE',
                    REAC_GEOM   = 'SANS',
                    ZONE        = (
                          _F(GROUP_MA_MAIT = 'BFISG1',
                             GROUP_MA_ESCL = 'BFISM1',
                             SANS_GROUP_NO = ('E_GD','E_MG'), # Pour tester la prise en compte de TESTXX
                            ),
                          _F(GROUP_MA_MAIT = 'BFISM2',
                             GROUP_MA_ESCL = 'BFISD2',
                             SANS_GROUP_NO = ('E_MD','E_DG'), # Pour tester la prise en compte de TESTXX
                            ),),)


# Thermal B.C. :
TEMP_INT = DEFI_CONSTANTE(VALE = temp_int,)
TEMP_EXT = DEFI_CONSTANTE(VALE = temp_ref,);
H_EXT    = DEFI_CONSTANTE(VALE = 4.0,);
H_INT    = DEFI_CONSTANTE(VALE = 8.0,)

CONDTHER = AFFE_CHAR_THER_F(
                    MODELE  = MODTHER,
                    ECHANGE = (_F(GROUP_MA = 'INTRADOS',
                                  COEF_H   = H_INT,
                                  TEMP_EXT = TEMP_INT,),
                               _F(GROUP_MA = 'EXTRADOS',
                                  COEF_H   = H_EXT,
                                  TEMP_EXT = TEMP_EXT,),),)



# COMPUTATION
# ---------------------------------
L_INST = DEFI_LIST_REEL(
                  DEBUT = 0.0,
                  INTERVALLE = (
                        _F(JUSQU_A = 500,  NOMBRE = 20,),
                        _F(JUSQU_A = 10000,NOMBRE = 20,),
                            ),)

RMECA = MACR_ECREVISSE(
                TABLE  = CO('TBL_ECRE'),
                TEMPER = CO('RTEMPER'),
                DEBIT  = CO('DEB_ECRE'),
                #
                MODELE_MECA = MODMECA,
                MODELE_THER = MODTHER,
                CHAM_MATER  = CHMAT,
                EXCIT_MECA  = _F(CHARGE   = CONDMECA),
                EXCIT_THER  = _F(CHARGE   = CONDTHER),
                COMPORTEMENT   = _F(RELATION = 'ELAS',),
                CONTACT     = CONT,
                #
                LIST_INST = L_INST,
                #
                FISSURE = (_F(
                      PREFIXE_FICHIER  = 'FISSURE1',
                      SECTION          = 'RECTANGLE',
                      GROUP_MA         = ('BFISG1','BFISM1',),
                      RUGOSITE         = 0.5E-06,
                      ZETA             = 0.0,
                      GROUP_NO_ORIG    = ('I_GD','I_MG',),
                      GROUP_NO_EXTR    = ('E_GD','E_MG',),
                      LISTE_VAL_BL     = (0.5,0.5),
                      OUVERT_REMANENTE = 30.0E-06,),
                # 2eme fissure
                           _F(
                      PREFIXE_FICHIER  = 'FISSURE2',
                      SECTION          = 'RECTANGLE',
                      GROUP_MA         = ('BFISM2','BFISD2',),
                      RUGOSITE         = 0.5E-06,
                      ZETA             = 0.0,
                      GROUP_NO_ORIG    = ('I_MD','I_DG',),
                      GROUP_NO_EXTR    = ('E_MD','E_DG',),
                      LISTE_VAL_BL     = (0.5,0.5),
                      OUVERT_REMANENTE = 30.0E-06, ),),
                #
                ECOULEMENT = _F(
                      FLUIDE_ENTREE    = 6,
                      PRES_ENTREE      = 10.E5,
                      PRES_SORTIE      = pr_atmos,
                      TEMP_ENTREE_FO   = TEMP_INT,),
                #
                MODELE_ECRE = _F(
                      ECOULEMENT       = 'SATURATION',
                      FROTTEMENT       = 1,
                      TRANSFERT_CHAL   = 1,),
                #
                CONV_CRITERE = _F(
                      TEMP_REF  = 0.5,
                      PRES_REF  = 0.01*pr_atmos,
                      CRITERE   = 'EXPLICITE',),
                #
                CONVERGENCE_ECREVISSE = _F(
                      KGTEST         = 0.5,
                      ITER_GLOB_MAXI = 400,),
                #
                # LOGICIEL    =  '~/dev/codeaster-prerequisites/v13/tools/Ecrevisse-322',
                VERSION     ='3.2.2',
                COURBES     = 'AUCUNE',
                ENTETE      = 'Castest ZZZZ218B',
                IMPRESSION  = 'NON',
                INFO        = 1,)



# EXTRACTION OF RESULTS
# ---------------------------------
# Entrance of the first crack
DX_I_GD = POST_RELEVE_T(ACTION = _F(CRITERE    = 'RELATIF',
                                    TOUT_ORDRE = 'OUI',
                                    NOM_CMP    = ('DX',),
                                    GROUP_NO   = 'I_GD',
                                    INTITULE   = 'DX I_GD',
                                    MOYE_NOEUD = 'OUI',
                                    NOM_CHAM   = 'DEPL',
                                    RESULTAT   = RMECA,
                                    OPERATION  = 'EXTRACTION',
                                    REPERE     = 'GLOBAL',),
                        INFO = 1,)

T_I_GD = POST_RELEVE_T(ACTION = _F(CRITERE    = 'RELATIF',
                                   TOUT_ORDRE = 'OUI',
                                   NOM_CMP    = ('TEMP',),
                                   GROUP_NO   = 'I_GD',
                                   INTITULE   = 'TEMP I_GD',
                                   MOYE_NOEUD = 'OUI',
                                   NOM_CHAM   = 'TEMP',
                                   RESULTAT   = RTEMPER,
                                   OPERATION  = 'EXTRACTION',
                                   REPERE     = 'GLOBAL',),
                        INFO = 1,)

# Exit of the second crack
DX_E_MD = POST_RELEVE_T(ACTION = _F(CRITERE   = 'RELATIF',
                                    TOUT_ORDRE= 'OUI',
                                    NOM_CMP   = ('DX',),
                                    GROUP_NO  = 'E_MD',
                                    INTITULE  = 'DX E_MD',
                                    MOYE_NOEUD= 'OUI',
                                    NOM_CHAM  = 'DEPL',
                                    RESULTAT  = RMECA,
                                    OPERATION = 'EXTRACTION',
                                    REPERE    = 'GLOBAL',),
                        INFO = 1,)

T_E_MD = POST_RELEVE_T(ACTION = _F(CRITERE    = 'RELATIF',
                                    TOUT_ORDRE= 'OUI',
                                    NOM_CMP   = ('TEMP',),
                                    GROUP_NO  = 'E_MD',
                                    INTITULE  = 'TEMP E_MD',
                                    MOYE_NOEUD= 'OUI',
                                    NOM_CHAM  = 'TEMP',
                                    RESULTAT  = RTEMPER,
                                    OPERATION = 'EXTRACTION',
                                    REPERE    = 'GLOBAL',),
                        INFO = 1,)



# TEST OF RESULTS (NON-REGRESSION)
# ---------------------------------
TEST_TABLE(
           VALE_CALC = NONREGRE[0],
           NOM_PARA  = 'DX',
           TABLE     = DX_E_MD,
           FILTRE    = _F(NOM_PARA = 'INST',
                          VALE     = 500.0,),
           )

TEST_TABLE(
           VALE_CALC = NONREGRE[1],
           NOM_PARA  = 'DX',
           TABLE     = DX_E_MD,
           FILTRE    = _F(NOM_PARA = 'INST',
                          VALE     = 1.E4,),
           )

TEST_TABLE(
           VALE_CALC = NONREGRE[2],
           NOM_PARA  = 'DX',
           TABLE     = DX_I_GD,
           FILTRE    = _F(NOM_PARA = 'INST',
                          VALE     = 500.0,),
           )

TEST_TABLE(
           VALE_CALC = NONREGRE[3],
           NOM_PARA  = 'DX',
           TABLE     = DX_I_GD,
           FILTRE    = _F(NOM_PARA = 'INST',
                          VALE     = 1.E4,),
           )

TEST_TABLE(
           VALE_CALC = NONREGRE[4],
           NOM_PARA  = 'TEMP',
           TABLE     = T_E_MD,
           FILTRE    = _F(NOM_PARA = 'INST',
                          VALE     = 500.0,),
           )

TEST_TABLE(
           VALE_CALC = NONREGRE[5],
           NOM_PARA  = 'TEMP',
           TABLE     = T_E_MD,
           FILTRE    = _F(NOM_PARA = 'INST',
                          VALE     = 1.E4,),
           )

TEST_TABLE(
           VALE_CALC = NONREGRE[6],
           NOM_PARA  = 'TEMP',
           TABLE     = T_I_GD,
           FILTRE    = _F(NOM_PARA = 'INST',
                          VALE     = 500.0,),
           )

TEST_TABLE(
           VALE_CALC = NONREGRE[7],
           NOM_PARA  = 'TEMP',
           TABLE     = T_I_GD,
           FILTRE    = _F(NOM_PARA = 'INST',
                          VALE     = 1.E4,),
           )

TEST_TABLE(
           VALE_CALC = NONREGRE[8],
           NOM_PARA  = 'DEBTOT',
           TABLE     = DEB_ECRE,
           FILTRE    = (_F(NOM_PARA = 'INST',
                           VALE     = 500.0,),
                        _F(NOM_PARA = 'FISSURE',
                           VALE_K   = 'BFISG1-BFISM1',),
                        ),
           )

TEST_TABLE(
           VALE_CALC = NONREGRE[9],
           NOM_PARA  = 'DEBTOT',
           TABLE     = DEB_ECRE,
           FILTRE    = (_F(NOM_PARA = 'INST',
                           VALE     = 1.E4,),
                        _F(NOM_PARA = 'FISSURE',
                           VALE_K   = 'BFISM2-BFISD2',),
                        ),
           )

## PRINT OF RESULTS
## ---------------------------------
#IMPR_TABLE(TABLE = TBL_ECRE)
#IMPR_TABLE(TABLE = DX_E_MD)
#IMPR_TABLE(TABLE = DX_I_GD )
#IMPR_TABLE(TABLE = T_E_MD)
#IMPR_TABLE(TABLE = T_I_GD)
#IMPR_TABLE(TABLE = DEB_ECRE)

#IMPR_RESU(FORMAT = 'MED',
          #RESU=(_F( RESULTAT=RMECA,),
                #_F( RESULTAT=RTEMPER,),),)

#STANLEY()


FIN()
