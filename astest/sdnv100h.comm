# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2019 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

# Length of beam
length = 0.2

# Material properties
young = 2.E11
nu    = 0.
rho   = 8000.

# Speed of sound in steel
cele  = sqrt((young * (1.-nu))/(rho * (1.+nu)*(1.-2.*nu)))

# Initial displacement
dispIni = 2.E-3

# Initial speed
viteIni = -100.

# Initial time of contact
tau0 = 2.E-3/abs(viteIni)

# Final time of contact
tau1 = tau0 + 2.*length/cele

# Time step
DT = 2e-06

# Coefficients for Newmark scheme
NewBeta  = 0.3025
NewGamma = 0.6

# Mesh
MAILL=LIRE_MAILLAGE(FORMAT='MED')
# Pour eviter les "TOLE MACHINE", on perturbe legerement la geometrie du maillage :
MODI_MAILLAGE(reuse =MAILL, MAILLAGE=MAILL, DEFORME=_F(OPTION='TRAN', ALEA=1.e-8,),)

MAILL=DEFI_GROUP(reuse=MAILL,
                 MAILLAGE=MAILL,
                 CREA_GROUP_NO=(
                      _F(  GROUP_MA = 'VSOL',   ),
                      _F(  GROUP_MA = 'POUTRE', ),)
                 )

MAILL=MODI_MAILLAGE(reuse =MAILL,
                    MAILLAGE=MAILL,
                    ORIE_PEAU_3D=_F(GROUP_MA=('SSOL','FACEINF',),),
                    );

# Model
MODE=AFFE_MODELE(MAILLAGE=MAILL,
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='MECANIQUE',
                         MODELISATION='3D',),);

# Material
ACIER=DEFI_MATERIAU(
                ELAS=_F( E = young, NU = nu,  RHO = rho)
                        )

ACONTA=DEFI_MATERIAU(ELAS=_F(E=1e+16,
                             NU=0.0,
                             RHO=0.0,),);

CM=AFFE_MATERIAU(MAILLAGE=MAILL,
                 AFFE=(_F(GROUP_MA='POUTRE',
                          MATER=ACIER,),
                       _F(GROUP_MA='VSOL',
                          MATER=ACONTA,),),);

# Loads
CH=AFFE_CHAR_MECA(MODELE=MODE,
                  DDL_IMPO=(_F(TOUT='OUI',
                               DX=0.0,
                               DY=0.0,),
                            _F(GROUP_NO='VSOL',
                               DX=0.0,
                               DY=0.0,
                               DZ=0.0,),),);

RAMPE=DEFI_FONCTION(   NOM_PARA='INST',
            PROL_GAUCHE='CONSTANT',   PROL_DROITE='CONSTANT',
            VALE=(0.0,        1.0,
                  0.0001,     1.0,
                  0.00010001, 0.0,) )

# Contact
CH2     = DEFI_CONTACT(MODELE         = MODE,
                       FORMULATION    = 'DISCRETE',
                       RESI_ABSO      = 1e-08,
                       PRE_COND       = 'DIRICHLET',
                       ZONE =_F(
                             ALGO_CONT      = 'GCP',
                             GROUP_MA_ESCL  = 'FACEINF',
                             GROUP_MA_MAIT  = 'SSOL',
                               ),
                      );

# Initial displacement
CHAMP2=CREA_CHAMP( OPERATION='AFFE', TYPE_CHAM='NOEU_DEPL_R',
MAILLAGE=MAILL,AFFE=(
           _F( GROUP_NO = 'POUTRE',   NOM_CMP = ('DX', 'DY', 'DZ',),
                                     VALE = (  0.0,  0.0,  0.0, )),
           _F( GROUP_NO = 'VSOL',     NOM_CMP = ('DX', 'DY', 'DZ',),
                                     VALE = (  0.0,  0.0,  0.0, ))))

# Initial speed
CHAMP1=CREA_CHAMP( OPERATION='AFFE', TYPE_CHAM='NOEU_DEPL_R',
MAILLAGE=MAILL,AFFE=(
           _F( GROUP_NO = 'POUTRE',   NOM_CMP = ('DX', 'DY', 'DZ',),
                                     VALE = (  0.0,  0.0,  viteIni,)),
           _F( GROUP_NO = 'VSOL',     NOM_CMP = ('DX', 'DY', 'DZ',),
                                     VALE = (  0.0,  0.0,  0., ))))

# Time step management
L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=_F(JUSQU_A=0.00014,
                                    PAS=DT,),);
# Time step during contact phase
L_CONT=DEFI_LIST_REEL(   DEBUT=tau0,
             INTERVALLE=_F( JUSQU_A = tau1,  PAS = DT))

# Non-linear dynamic
U = DYNA_NON_LINE(MODELE       = MODE,  
                  CHAM_MATER   = CM,
                  EXCIT        = _F(CHARGE=CH, FONC_MULT=RAMPE,),
                  CONTACT      = CH2,
                  ETAT_INIT    = _F(DEPL = CHAMP2,VITE = CHAMP1),
                  COMPORTEMENT = _F( RELATION = 'ELAS',),
                  INCREMENT    = _F( INST_INIT = 0.,LIST_INST = L_INST),
                  SCHEMA_TEMPS = _F(SCHEMA='NEWMARK',FORMULATION='DEPLACEMENT',
                                    BETA = NewBeta, GAMMA = NewGamma),
                  NEWTON       = _F( MATRICE = 'TANGENTE',  REAC_ITER = 1),
                  CONVERGENCE  = _F(ITER_GLOB_MAXI = 20),)

# Post-treatment: energies
EPOTPS=POST_ELEM(ENER_POT=_F(TOUT='OUI',), RESULTAT=U,)

IMPR_TABLE(TABLE=EPOTPS,)

ECITPS=POST_ELEM(ENER_CIN=_F(TOUT='OUI',), RESULTAT=U,)

IMPR_TABLE(TABLE=ECITPS,)

# Post-treatment: integral of speed during contact
VITECONT=RECU_FONCTION(RESULTAT=U,
                       NOM_CHAM='VITE',
                       NOM_CMP='DZ',
                       NOEUD='N5',
                       LIST_INST=L_CONT,
                       TITRE='VITE',);

VC=CALC_FONCTION(COMB=_F(FONCTION=VITECONT, COEF=12500.,));

MVC=CALC_FONCTION(INTEGRE=_F(FONCTION=VC,))

FIN();
