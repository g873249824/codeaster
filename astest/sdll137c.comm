# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

import aster

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),
       DEBUG=_F(SDVERI='OUI'),
         )


#**********************************
# CREATION DU MODELE EXPERIMENTAL
#**********************************

PRE_IDEAS( UNITE_IDEAS = 21, UNITE_MAILLAGE = 22 );

MAILEXP=LIRE_MAILLAGE(FORMAT="ASTER",UNITE=22);

MODLEXP=AFFE_MODELE(MAILLAGE=MAILEXP,
                   AFFE=_F(TOUT='OUI',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='DIS_TR',),);

CHCAREXP=AFFE_CARA_ELEM(MODELE=MODLEXP,
   DISCRET=(
      _F(GROUP_MA='POUTRE', REPERE='GLOBAL', CARA='K_TR_D_L',
         VALE=(1.e+12,1.e+12,1.e+12,1.e+12,1.e+12,1.e+12,), ),
      _F(GROUP_MA='POUTRE', REPERE='GLOBAL', CARA='M_TR_D_L',
         VALE=(0.0, 0.0, 0.0, 0.0,), ),
   ),
)

KELEXP=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                     MODELE=MODLEXP,
                     CARA_ELEM=CHCAREXP,
                     );

MELEXP=CALC_MATR_ELEM(OPTION='MASS_MECA',
                      MODELE=MODLEXP,
                      CARA_ELEM=CHCAREXP,
                      );

NUMEXP=NUME_DDL( MATR_RIGI=KELEXP,);

KASSEXP=ASSE_MATRICE(MATR_ELEM=KELEXP, NUME_DDL=NUMEXP,);

MASSEXP=ASSE_MATRICE(MATR_ELEM=MELEXP,
                  NUME_DDL=NUMEXP,);

# LECTURE DES MODES IDENTIFIES
MODMESU=LIRE_RESU(TYPE_RESU='MODE_MECA',
                 FORMAT='IDEAS',
                 MODELE=MODLEXP,
                 UNITE=21,
                 NOM_CHAM='DEPL',
                 MATR_RIGI =KASSEXP,
                 MATR_MASS =MASSEXP,
                 FORMAT_IDEAS=_F(NOM_CHAM='DEPL',
                                 NUME_DATASET=55,
                                 RECORD_6=(1,2,3,8,2,6,),
                                 POSI_ORDRE=(7,4,),
                                 POSI_NUME_MODE=(7,4),
                                 POSI_FREQ=(8,1,),
                                 POSI_MASS_GENE=(8,2),
                                 POSI_AMOR_GENE=(8,3),
                                 NOM_CMP=('DX','DY','DZ','DRX','DRY','DRZ'),),
                 TOUT_ORDRE='OUI',);

# TRI EVENTUEL


_nume_mode=(1,2,3,4,5)


MODEIDE=EXTR_MODE(FILTRE_MODE=_F(MODE=MODMESU,
                                  NUME_MODE=_nume_mode,
                                  ),);

#********************************
# CREATION MODELE SUPPORT
#********************************

MAILSUP=LIRE_MAILLAGE(FORMAT="ASTER",UNITE=20);

MODLSUP=AFFE_MODELE(MAILLAGE=MAILSUP,
                    AFFE=(_F(GROUP_MA=('POUTRE','VISUAL',),
                             PHENOMENE='MECANIQUE',
                             MODELISATION='POU_D_E',),),)

MATSUP=DEFI_MATERIAU(ELAS=_F(E=2.1E11,
                             NU=0.3,
                             AMOR_ALPHA=1.E-4,AMOR_BETA=1.,
                             RHO=7800.,),);

CHMATSUP=AFFE_MATERIAU(MAILLAGE=MAILSUP,
                       MODELE=MODLSUP,
                       AFFE=(_F(GROUP_MA='POUTRE',
                                MATER=MATSUP,),),);

CHCARSUP=AFFE_CARA_ELEM(MODELE=MODLSUP,
                        POUTRE=(_F(GROUP_MA='POUTRE',
                                   SECTION='RECTANGLE',
                                   CARA=('HY','HZ',),
                                   VALE=(9.E-3,38.E-3,),),),
                        ORIENTATION=(_F(GROUP_MA='POUTRE',
                                        CARA='VECT_Y',
                                        VALE=(0.,0.,1.),),),
                       )

CONDLSUP=AFFE_CHAR_MECA(MODELE=MODLSUP,
                      DDL_IMPO=( _F(GROUP_NO=('FIXE',),
                                   DX=0.0,
                                   DY=0.0,
                                   DZ=0.0,
                                   DRX=0.0,
                                   DRY=0.0,
                                   DRZ=0.0,),
                               ),);


KELSUP=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                        MODELE=MODLSUP,
                        CHAM_MATER=CHMATSUP,
                        CARA_ELEM=CHCARSUP,
                        CHARGE=CONDLSUP,);

MELSUP=CALC_MATR_ELEM(OPTION='MASS_MECA',
                        MODELE=MODLSUP,
                        CHAM_MATER=CHMATSUP,
                        CARA_ELEM=CHCARSUP,
                        CHARGE=CONDLSUP,);

AELSUP=CALC_MATR_ELEM(OPTION='AMOR_MECA',
                        MODELE=MODLSUP,
                        RIGI_MECA=KELSUP,MASS_MECA=MELSUP,
                        CHAM_MATER=CHMATSUP,
                        CARA_ELEM=CHCARSUP,
                        CHARGE=CONDLSUP,);

NUMSUP=NUME_DDL(MATR_RIGI=KELSUP,);

KASSUP=ASSE_MATRICE(MATR_ELEM=KELSUP,
                      NUME_DDL=NUMSUP,);

MASSUP=ASSE_MATRICE(MATR_ELEM=MELSUP,
                      NUME_DDL=NUMSUP,);

AASSUP=ASSE_MATRICE(MATR_ELEM=AELSUP,
                      NUME_DDL=NUMSUP,);

MODESUP=CALC_MODES(MATR_RIGI=KASSUP,
                   VERI_MODE=_F(STOP_ERREUR='OUI',
                                SEUIL=1.E-05,
                                ),
                   OPTION='PLUS_PETITE',
                   CALC_FREQ=_F(NMAX_FREQ=20,
                                SEUIL_FREQ=1.E-4,
                                ),
                   MATR_AMOR=AASSUP,
                   MATR_MASS=MASSUP,
                   SOLVEUR_MODAL=_F(METHODE='TRI_DIAG',
                                    ),
                   )



#**********************************
# CREATION DU MODELE MODIFICATION
#**********************************


# Maillage modification
MAILX=LIRE_MAILLAGE(FORMAT="ASTER",UNITE=24);


MODLX=AFFE_MODELE(
          MAILLAGE=MAILX,
          AFFE=(_F(GROUP_MA=('POUTRE',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='POU_D_E',),),
              )

CHCARX=AFFE_CARA_ELEM(MODELE=MODLX,
                        POUTRE=(_F(GROUP_MA='POUTRE',
                                   SECTION='RECTANGLE',
                                   CARA=('HY','HZ',),
                                   VALE=(9.E-3,38.E-3,),),),
                        ORIENTATION=(_F(GROUP_MA='POUTRE',
                                        CARA='VECT_Y',
                                        VALE=(0.,0.,1.),),),
                     )

MATERX=DEFI_MATERIAU(ELAS=_F(E=2.1E11,
                             NU=0.3,
                             AMOR_ALPHA=1.E-4,AMOR_BETA=1.,
                             RHO=7800.,),);

CHMATX=AFFE_MATERIAU(  MAILLAGE=MAILX,
                         MODELE=MODLX,
                         AFFE=(_F(GROUP_MA=('POUTRE',),
                                  MATER=MATERX,),),);

CONDLX=AFFE_CHAR_MECA(MODELE=MODLX,
                      DDL_IMPO=( _F(GROUP_NO=('EXTERNE',),
                                   DX=0.0,
                                   DRX=0.0,
                                ),
                          ),);

KELX=CALC_MATR_ELEM(MODELE=MODLX,OPTION='RIGI_MECA',
                     CARA_ELEM=CHCARX,CHAM_MATER=CHMATX,
                     CHARGE=CONDLX,
                     )

MELX=CALC_MATR_ELEM(MODELE=MODLX,OPTION='MASS_MECA',
                     CARA_ELEM=CHCARX,CHAM_MATER=CHMATX,
                     CHARGE=CONDLX,
                    )

AELX=CALC_MATR_ELEM(MODELE=MODLX,
                      OPTION='AMOR_MECA',
                      RIGI_MECA=KELX,
                      MASS_MECA=MELX,
                      CARA_ELEM=CHCARX,
                      CHAM_MATER=CHMATX,
                      CHARGE=CONDLX,)

NUMX=NUME_DDL(MATR_RIGI=KELX,)

KASX=ASSE_MATRICE(MATR_ELEM=KELX,NUME_DDL=NUMX)

MASX=ASSE_MATRICE(MATR_ELEM=MELX,NUME_DDL=NUMX)

AASX=ASSE_MATRICE(MATR_ELEM=AELX,NUME_DDL=NUMX);

interactif = 0
if interactif :
    CALC_ESSAI(
                   INTERACTIF = 'OUI',
                   RESU_MODIFSTRU = _F( MODELE=CO('MODLCPL2'),
                                        MAILLAGE=CO('MAILCPL2'),
                                        MODE_MECA = CO('MODECPL2'),
                                        RIGI_MECA = CO('KASCPL2'),
                                        MASS_MECA = CO('MASCPL2'),
                                        AMOR_MECA = CO('AASCPL2'),
                                        NUME_DDL = CO('NUMCPL2'),
                                        PROJ_MESU = CO('PROJMS2'),
                                        MACR_ELEM = CO('MCELEM2'),
                                        )
                  );

else :
    CALC_ESSAI(
                   INTERACTIF = 'NON',
                   MODIFSTRUCT = _F( MESURE=MODMESU,
                                     MODELE_SUP=MODLSUP,
                                     MATR_RIGI=KASSUP,
                                     #RESOLUTION='ES',
                                     RESOLUTION='LMME',MATR_MASS=MASSUP,
                                     NUME_MODE_MESU=(1, 2, 3, 4, 5),
                                     NUME_MODE_CALCUL=(1, 2, 3, 4, 5, 6,7,8),
                                     MODELE_MODIF = MODLX,
                                     ),
                   GROUP_NO_CAPTEURS  = ( _F(GROUP_NO="CAPTEUR", NOM_CMP = ('DY', 'DZ',),)
                                         ),
                   GROUP_NO_EXTERIEUR = ( _F(GROUP_NO="EXTERNE", NOM_CMP = ('DX','DY','DZ','DRX','DRY', 'DRZ',),)
                                         ),
                   RESU_MODIFSTRU = _F( MODELE=CO('MODLCPL2'),
                                        MAILLAGE=CO('MAILCPL2'),
                                        MODE_MECA = CO('MODECPL2'),
                                        RIGI_MECA = CO('KASCPL2'),
                                        MASS_MECA = CO('MASCPL2'),
                                        AMOR_MECA = CO('AASCPL2'),
                                        NUME_DDL = CO('NUMCPL2'),
                                        PROJ_MESU = CO('PROJMS2'),
                                        MACR_ELEM = CO('MCELEM2'),
                                        BASE_LMME = CO('BASEEX'),
                                        )
                  );


# La supermaille creee par CALC_ESSAI se nomme SUMAIL

# CONTROLE RETROPROJECTION DU MODE_MECA OBTENU SUR MODELE COUPLE

MODERETR=DEPL_INTERNE(DEPL_GLOBAL=MODECPL2,SUPER_MAILLE='SUMAIL')


#**********************************
# INDICATEUR SUR CHOIX DE BASE DE PROJECTION
# COMPARAISON CHAMP INTERFACE <> CHAMP OBTENU PAR EXPANSION STATIQUE AUX INTERFACES
#**********************************

# CREATION MODELE FICTIF DE L INTERFACE

MODLINT=AFFE_MODELE(MAILLAGE=MAILCPL2,
                   AFFE=_F(GROUP_MA='VISUAL',
                           PHENOMENE='MECANIQUE',
                           MODELISATION='DIS_TR',),
          AFFE_SOUS_STRUC=_F( SUPER_MAILLE = 'SUMAIL',
                            PHENOMENE='MECANIQUE',),
              )

CHCARINT=AFFE_CARA_ELEM(MODELE=MODLINT,
   DISCRET=(
      _F(GROUP_MA='VISUAL', REPERE='GLOBAL', CARA='K_TR_D_L',
         VALE=(0.e+0,0.e+0,0.e+0,0.e+0,0.e+0,0.e+0,),),
      _F(GROUP_MA='VISUAL', REPERE='GLOBAL', CARA='M_TR_D_L',
         VALE=(0.0, 0.0, 0.0, 0.0),),
   ),
)

KELINT=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                    MODELE=MODLINT,
                     CARA_ELEM=CHCARINT,
                     );

MELINT=CALC_MATR_ELEM(OPTION='MASS_MECA',
                      MODELE=MODLINT,
                     CARA_ELEM=CHCARINT,
                     );

NUMINT=NUME_DDL( MATR_RIGI=KELINT,);

KASMAC=ASSE_MATRICE(MATR_ELEM=KELINT,NUME_DDL=NUMINT)

MASMAC=ASSE_MATRICE(MATR_ELEM=MELINT,NUME_DDL=NUMINT)

# EXPANSION STATIQUE DU CHAMP DE DEPL AUX INTERFACES

MODSTINT=MODE_STATIQUE(MATR_RIGI=KASSUP,
                      FORCE_NODALE=( _F(GROUP_NO='CAPTEUR',AVEC_CMP=('DY','DZ',),),
                      ),);

BASEINT=DEFI_BASE_MODALE(RITZ=(
                             _F(MODE_MECA=MODESUP,NMAX_MODE=0,),
                             _F(MODE_INTF=MODSTINT,NMAX_MODE=8,),
                             ),
                       NUME_REF=NUMSUP,);

PROJMS=PROJ_MESU_MODAL(MODELE_CALCUL=_F(MODELE=MODLSUP,
                                      BASE=BASEINT,),
                     MODELE_MESURE=_F(MODELE=MODLEXP,
                                      MESURE=MODERETR,
                                      NOM_CHAM='DEPL',),
                     RESOLUTION=_F(METHODE='SVD',
                                   EPS=1.E-5),
                     );

DEPLPR=REST_GENE_PHYS(RESU_GENE=PROJMS,
                   TOUT_ORDRE='OUI',
                   NOM_CHAM   ='DEPL');

DEPLINT=PROJ_CHAMP(METHODE='COLLOCATION',
               RESULTAT=DEPLPR,
               MODELE_1=MODLSUP,
               MODELE_2=MODLINT,
               NOM_CHAM='DEPL',
               #TOUT_ORDRE='OUI',
               NUME_ORDRE=(1,2,),
               NUME_DDL=NUMINT,
              );

# CHAMP DE DEPL AUX INTERFACES SUR LE MODELE COUPLE

DEPLXINT=PROJ_CHAMP(METHODE='COLLOCATION',
               RESULTAT=MODECPL2,
               MODELE_1=MODLCPL2,
               MODELE_2=MODLINT,
               NOM_CHAM='DEPL',
               #TOUT_ORDRE='OUI',
               NUME_ORDRE=(1,2,),
               NUME_DDL=NUMINT,
              );

# INDICATEUR DE PROXIMITE DES MODES
# LA BASE DE PROJECTION CHOISIE EST CORRECTE SI DEPLINT == DEPLXINT

# LES MODES SONT PROCHES SI LES TERMES DIAG DU MAC PROCHE DE 1
# ATTENTION, ON CONTROLE ICI EN RELATIF
# L IDEAL SERAIT DE CONTROLER L ECART ENTRE LES DEUX VECTEURS EN ABSOLU

MACINT=MAC_MODES(BASE_1=DEPLINT,
               BASE_2=DEPLXINT,
               INFO  =2,
              );

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.E-2,
           VALE_CALC=1.999935289,
           VALE_REFE=2.0,
           NOM_PARA='MAC',
           TYPE_TEST='SOMM',
           TABLE=MACINT,)

# TEST IERI : CRITERE ENERGETIQUE (ON FAIT INTERVENIR K OU M)
IERIK=MAC_MODES(BASE_1=DEPLINT,
               BASE_2=DEPLXINT,
               MATR_ASSE=KASMAC,
               IERI='OUI',
               INFO  =2,
              );

IERIM=MAC_MODES(BASE_1=DEPLINT,
               BASE_2=DEPLXINT,
               MATR_ASSE=MASMAC,
               IERI='OUI',
               INFO  =2,
              );

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=5.0000000000000001E-4,
           VALE_CALC= 4.60906210E-07,
           VALE_REFE=0.0,
           NOM_PARA='IERI',
           TABLE=IERIK,
           FILTRE=(_F(NOM_PARA='NUME_MODE_1',
                      VALE_I=1,),
                   _F(NOM_PARA='NUME_MODE_2',
                      VALE_I=1,),
                   ),
           )

TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='ANALYTIQUE',
           PRECISION=1.0000000000000001E-05,
           VALE_CALC= 3.16931077E-12,
           VALE_REFE=0.0,
           NOM_PARA='IERI',
           TABLE=IERIM,
           FILTRE=(_F(NOM_PARA='NUME_MODE_1',
                      VALE_I=2,),
                   _F(NOM_PARA='NUME_MODE_2',
                      VALE_I=2,),
                   ),
           )

nmodes=2

# controle recuperation matrices rigidite - masse
MODECPL3=CALC_MODES(MATR_RIGI=KASCPL2,
                    VERI_MODE=_F(STOP_ERREUR='OUI',
                                 SEUIL=1.E-05,
                                 ),
                    OPTION='PLUS_PETITE',
                    CALC_FREQ=_F(NMAX_FREQ=nmodes,
                                 SEUIL_FREQ=1.E-4,
                                 ),
                    MATR_AMOR=AASCPL2,
                    MATR_MASS=MASCPL2,
                    SOLVEUR_MODAL=_F(METHODE='TRI_DIAG',
                                     ),
                    )



I_DEBUT = 5.
I_FIN = 20.
LIFREQ=DEFI_LIST_REEL(DEBUT=I_DEBUT, INTERVALLE=_F( JUSQU_A = I_FIN, NOMBRE = 4))

CH=AFFE_CHAR_MECA(MODELE=MODLCPL2,
                  FORCE_NODALE=(_F(NOEUD='NO7',
                                   FY=1.0))
                                   );

# controle recuperation modele et super-maille par calcul de reponse harmonique

DYH=DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='PHYS',
                        MODELE=MODLCPL2,
                        MATR_MASS=MASCPL2,MATR_RIGI=KASCPL2,
                        MATR_AMOR=AASCPL2,
                        LIST_FREQ=LIFREQ,
                        TOUT_CHAM='OUI',
                        EXCIT=(_F(COEF_MULT_C=('RI',1.,0.),CHARGE=CH,),),
                      )

DYHRETRO=DEPL_INTERNE(DEPL_GLOBAL=DYH,SUPER_MAILLE='SUMAIL')


#**********************************
# COMPARAISON AVEC CALCUL DIRECT : structure initiale + modification
#**********************************

MODLDIR=AFFE_MODELE(MAILLAGE=MAILSUP,
                   AFFE=(_F(GROUP_MA=('SIMPLE','VISUAL',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='POU_D_E',),),)

MATDBL=DEFI_MATERIAU(ELAS=_F(E=4.2E11,
                             NU=0.3,
                             AMOR_ALPHA=1.E-4,AMOR_BETA=1.,
                             RHO=15600.,),);

CHMATDIR=AFFE_MATERIAU(MAILLAGE=MAILSUP,
                       MODELE=MODLDIR,
                       AFFE=(_F(GROUP_MA='SIMPLE',
                                MATER=MATSUP,),
                             _F(GROUP_MA='VISUAL',
                                MATER=MATDBL,),),);

CHCARDIR=AFFE_CARA_ELEM(MODELE=MODLDIR,
                        POUTRE=(_F(GROUP_MA='POUTRE',
                                   SECTION='RECTANGLE',
                                   CARA=('HY','HZ',),
                                   VALE=(9.E-3,38.E-3,),),),
                        ORIENTATION=(_F(GROUP_MA='POUTRE',
                                        CARA='VECT_Y',
                                        VALE=(0.,0.,1.),),),
                       )

CONDLDIR=AFFE_CHAR_MECA(MODELE=MODLDIR,
                      DDL_IMPO=( _F(GROUP_NO=('FIXE',),
                                   DX=0.0,
                                   DY=0.0,
                                   DZ=0.0,
                                   DRX=0.0,
                                   DRY=0.0,
                                   DRZ=0.0,),
                               ),);

KELDIR=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                        MODELE=MODLDIR,
                        CHAM_MATER=CHMATDIR,
                        CARA_ELEM=CHCARDIR,
                        CHARGE=CONDLDIR,);

MELDIR=CALC_MATR_ELEM(OPTION='MASS_MECA',
                        MODELE=MODLDIR,
                        CHAM_MATER=CHMATDIR,
                        CARA_ELEM=CHCARDIR,
                        CHARGE=CONDLDIR,);

AELDIR=CALC_MATR_ELEM(OPTION='AMOR_MECA',
                        MODELE=MODLDIR,
                        CHAM_MATER=CHMATDIR,RIGI_MECA=KELDIR,MASS_MECA=MELDIR,
                        CARA_ELEM=CHCARDIR,
                        CHARGE=CONDLDIR,);

NUMDIR=NUME_DDL(MATR_RIGI=KELDIR,);

KASDIR=ASSE_MATRICE(MATR_ELEM=KELDIR,
                      NUME_DDL=NUMDIR,);

MASDIR=ASSE_MATRICE(MATR_ELEM=MELDIR,
                      NUME_DDL=NUMDIR,);

AASDIR=ASSE_MATRICE(MATR_ELEM=AELDIR,
                      NUME_DDL=NUMDIR,);

MODEDIR=CALC_MODES(MATR_RIGI=KASDIR,
                   VERI_MODE=_F(STOP_ERREUR='OUI',
                                SEUIL=1.E-05,
                                ),
                   OPTION='PLUS_PETITE',
                   CALC_FREQ=_F(NMAX_FREQ=nmodes,
                                SEUIL_FREQ=1.E-4,
                                ),
                   MATR_AMOR=AASDIR,
                   MATR_MASS=MASDIR,
                   SOLVEUR_MODAL=_F(METHODE='TRI_DIAG',
                                    ),
                   )


#tmodes = aster.getvectjev("MODEDIR            .FREQ        ")
#print 'tmodes : ',tmodes
tmodes0=7.78074
tmodes1=32.8520

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   REFERENCE='AUTRE_ASTER',
                   RESULTAT=MODERETR,
                   VALE_CALC=7.784160709,
                   VALE_REFE=7.7807399999999998,
                   CRITERE='RELATIF',
                   PRECISION=1.E-2,),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   REFERENCE='AUTRE_ASTER',
                   RESULTAT=MODERETR,
                   VALE_CALC=32.848918290,
                   VALE_REFE=32.851999999999997,
                   CRITERE='RELATIF',
                   PRECISION=1.E-2,),
                _F(NUME_ORDRE=1,
                   PARA='FREQ',
                   REFERENCE='AUTRE_ASTER',
                   RESULTAT=MODECPL2,
                   VALE_CALC=7.784160709,
                   VALE_REFE=7.7807399999999998,
                   CRITERE='RELATIF',
                   PRECISION=1.E-2,),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   REFERENCE='AUTRE_ASTER',
                   RESULTAT=MODECPL2,
                   VALE_CALC=32.848918290,
                   VALE_REFE=32.851999999999997,
                   CRITERE='RELATIF',
                   PRECISION=1.E-2,),
                _F(NUME_ORDRE=1,
                   PARA='FREQ',
                   REFERENCE='AUTRE_ASTER',
                   RESULTAT=MODECPL3,
                   VALE_CALC=7.784122885,
                   VALE_REFE=7.7807399999999998,
                   CRITERE='RELATIF',
                   PRECISION=1.E-2,),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   REFERENCE='AUTRE_ASTER',
                   RESULTAT=MODECPL3,
                   VALE_CALC=32.848935148,
                   VALE_REFE=32.851999999999997,
                   CRITERE='RELATIF',
                   PRECISION=1.E-2,),
                ),
          )

DY_PB=RECU_FONCTION(RESULTAT=DYHRETRO,
                     NOM_CHAM='DEPL',
                     NOM_CMP='DY',
                #     NOM_CMP='D1',
                     NOEUD='N3',
                     INTERPOL='LIN',);

IMPR_FONCTION(FORMAT='AGRAF',
            UNITE = 25,
            COURBE=(_F(FONCTION=DY_PB,),
                    ),);

# Appliquer le chargement sur le modele direct et comparer avec dyhretro

CHDIR=AFFE_CHAR_MECA(MODELE=MODLDIR,
                  FORCE_NODALE=(_F(NOEUD='NO7',
                                   FY=1.0))
                                   );

DYHDIR=DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='PHYS',
                        MODELE=MODLDIR,
                        MATR_MASS=MASDIR,MATR_RIGI=KASDIR,MATR_AMOR=AASDIR,
                        LIST_FREQ=LIFREQ,
                        TOUT_CHAM='OUI',
                        EXCIT=(_F(COEF_MULT_C=('RI',1.,0.),CHARGE=CHDIR,),),
                      )

DY_PA=RECU_FONCTION(RESULTAT=DYHDIR,
                     NOM_CHAM='DEPL',
                     NOM_CMP='DY',
                     NOEUD='NO3',
                     INTERPOL='LIN',);

IMPR_FONCTION(FORMAT='AGRAF',
            UNITE = 25,
            COURBE=(_F(FONCTION=DY_PA,),
                    ),);

# comparaison reponses harmoniques (direct - modele couple)

T_DIR=POST_RELEVE_T(ACTION=_F(INTITULE='DIRECT',
                      NOEUD=('NO3'),
                      RESULTAT=DYHDIR,
                      NOM_CHAM='DEPL',
                      TOUT_ORDRE='OUI',
                      NOM_CMP='DY',
                      OPERATION='EXTRACTION',
                      ),);

T_RETRO=POST_RELEVE_T(ACTION=_F(INTITULE='RETRO',
                      NOEUD=('N3'),
                      RESULTAT=DYHRETRO,
                      NOM_CHAM='DEPL',
                      TOUT_ORDRE='OUI',
                      NOM_CMP='DY',
                      OPERATION='EXTRACTION',
                      ),);

F1=FORMULE(NOM_PARA=('DY_DIR', 'DY_RETRO',),
                VALE='abs (DY_DIR - DY_RETRO)')

T1=CALC_TABLE(TABLE=T_DIR,
              ACTION=(_F(OPERATION='RENOMME',
                                  NOM_PARA=('DY', 'DY_DIR'),),
                               _F(OPERATION='COMB',
                                  TABLE=T_RETRO,
                                  NOM_PARA=('NUME_ORDRE',),),
                               _F(OPERATION='RENOMME',
                                  NOM_PARA=('DY', 'DY_RETRO'),),
                               _F(OPERATION='OPER',
                                  NOM_PARA='DIFF',
                                  FORMULE=F1),
                      ),
              TITRE='Comparaison calcul direct / calcul retro')


TEST_TABLE(CRITERE='ABSOLU',
           REFERENCE='AUTRE_ASTER',
           PRECISION=9.9999999999999995E-07,
           VALE_CALC= 4.99642241E-07,
           VALE_REFE=0.0,
           NOM_PARA='DIFF',
           TYPE_TEST='SOMM',
           TABLE=T1,)

FIN();
