#======================================================================
#
# TITRE : VALIDATION DE LA TEMPERATURE  RELATION = 'BETON_DOUBLE_DP'
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#
# CAS-TEST DE REFERENCE : SSNV143A
#
#=====================================================================

DEBUT(CODE=_F(NOM='COMP011D',NIV_PUB_WEB='INTERNET'),PAR_LOT='NON',DEBUG=_F(SDVERI='NON'))
# SDVERI='NON' car la verification est trop couteuse en CPU

import numpy as N

epsi=1.E-10

TREF = 20.

T0 = TREF
Tmax = 500.

tmax =1.

NCAL = 20

ZERO =DEFI_CONSTANTE(VALE=0.0);

UN =DEFI_CONSTANTE(VALE=1.0);

compor='BETON_DOUBLE_DP'

Nbvari=4


YOUN=DEFI_FONCTION(   NOM_PARA='TEMP',  PROL_DROITE='LINEAIRE',
                                          PROL_GAUCHE='LINEAIRE',
                        VALE=(   0.E0,      37000.,
                                20.E0,      32000.,
                               400.E0,      15000.,
                               800.E0,       5000., )
                      )


ALPH=DEFI_FONCTION(NOM_PARA='TEMP',VALE=(  0., 1.0e-05,
                                         500., 2.0e-05,
                                           ),);

FC=DEFI_FONCTION(   NOM_PARA='TEMP',  PROL_DROITE='LINEAIRE',
                                         PROL_GAUCHE='LINEAIRE',
                        VALE=(   0.E0,      40.,
                               400.E0,      40.,
                               800.E0,      15., )
                      )

FT=DEFI_FONCTION(   NOM_PARA='TEMP',  PROL_DROITE='LINEAIRE',
                                         PROL_GAUCHE='LINEAIRE',
                        VALE=(   0.E0,      4.,
                               400.E0,      4.,
                               800.E0,      1.5, )
                      )

BETA=DEFI_FONCTION(   NOM_PARA='TEMP',  PROL_DROITE='LINEAIRE',
                                         PROL_GAUCHE='LINEAIRE',
                        VALE=(   0.E0,      1.16,
                               800.E0,      1.16, )
                      )

GC=DEFI_FONCTION(   NOM_PARA='TEMP',  PROL_DROITE='LINEAIRE',
                                        PROL_GAUCHE='LINEAIRE',
                        VALE=(   0.E0,      10.,
                               800.E0,      10., )
                      )

GT=DEFI_FONCTION(   NOM_PARA='TEMP',  PROL_DROITE='LINEAIRE',
                                         PROL_GAUCHE='LINEAIRE',
                        VALE=(   0.E0,      0.100,
                               800.E0,      0.100, )
                      )

MATER=DEFI_MATERIAU(ELAS_FO=_F(E=YOUN,
                               NU=ZERO,
                               TEMP_DEF_ALPHA=TREF,
                               ALPHA=ALPH,),
              BETON_DOUBLE_DP=_F( F_C = FC,
                               F_T = FT,
                               COEF_BIAX = BETA,
                               LONG_CARA=0.778271716226,
                               ENER_COMP_RUPT = GC,
                               ENER_TRAC_RUPT = GT,
                               COEF_ELAS_COMP = 33.3333333,
                               ECRO_COMP_P_PIC = 'LINEAIRE',
                               ECRO_TRAC_P_PIC = 'LINEAIRE'),
                 );


L_INST=DEFI_LIST_REEL(DEBUT=0.0,
                      INTERVALLE=(_F(JUSQU_A=1,
                                     NOMBRE=NCAL,),
                                     ),);

TIMP=DEFI_FONCTION(
                      NOM_PARA='INST',  NOM_RESU='TEMP',
                       VALE=(  0. , TREF, 1. , 500.)
                        )

U=SIMU_POINT_MAT(COMPORTEMENT=_F(RELATION=compor,),
                 MATER=MATER,
               #  SUPPORT='ELEMENT',
                   AFFE_VARC=(
                   _F(  NOM_VARC='TEMP',
                        VALE_FONC=TIMP,
                        VALE_REF=TREF),
                        ),
                 INCREMENT=_F(LIST_INST=L_INST,),
                 NEWTON=_F(PREDICTION='ELASTIQUE',
                           MATRICE='TANGENTE',
                           REAC_ITER=1,),
                 EPSI_IMPOSE=_F(EPXX=ZERO,),
                 );

IMPR_TABLE(TABLE=U,);


MATER  = [None]*NCAL
RESU   = [None]*NCAL

SXM = 0.
EXM=0.

Vim = N.zeros(Nbvari)

time = 0.


for i in range(NCAL):

          timem = time

          time = timem + tmax/NCAL

          Ti = T0 + time/tmax * (Tmax - T0)

          Tm = T0 + timem/tmax * (Tmax - T0)

          # deformation mecanique imposee correspondant a la deformation thermique du premier calcul

          epsimp =DEFI_CONSTANTE(VALE=-ALPH(Ti)*(Ti - TREF));

          if i > 0 :
             SXM = SXM *(YOUN(Ti)/YOUN(Tm))

          FC_T   = DEFI_CONSTANTE( VALE = FC(Ti) ),
          FT_T   = DEFI_CONSTANTE( VALE = FT(Ti) ),
          BETA_T = DEFI_CONSTANTE( VALE = BETA(Ti) ),
          GC_T   = DEFI_CONSTANTE( VALE = GC(Ti) ),
          GT_T   = DEFI_CONSTANTE( VALE = GT(Ti) ),

          MATER[i]=DEFI_MATERIAU(ELAS =_F(E=YOUN(Ti), NU=0., ALPHA=0.),
                         BETON_DOUBLE_DP=_F( F_C = FC_T,
                                             F_T = FT_T,
                                             COEF_BIAX = BETA_T,
                                             ENER_COMP_RUPT = GC_T,
                                             ENER_TRAC_RUPT = GT_T,
                                             LONG_CARA=0.778271716226,
                                             COEF_ELAS_COMP = 33.3333333,
                                             ECRO_COMP_P_PIC = 'LINEAIRE',
                                             ECRO_TRAC_P_PIC = 'LINEAIRE'),
                                       );

          list = DEFI_LIST_REEL(DEBUT=timem,
                      INTERVALLE=(_F(JUSQU_A=time,NOMBRE=1,),),);

          RESU[i]=SIMU_POINT_MAT(COMPORTEMENT=_F(RELATION=compor,),
                                 MATER=MATER[i],
                                 SUPPORT='POINT',
                                 AFFE_VARC=(
                                   _F(  NOM_VARC='TEMP',
                                        VALE_FONC=TIMP,
                                        VALE_REF=TREF),
                                        ),
                                 INCREMENT=_F(LIST_INST = list, ),
                                 NEWTON=_F( PREDICTION='ELASTIQUE',
                                             MATRICE='TANGENTE',
                                             REAC_ITER=1,),
                                 EPSI_IMPOSE=_F(EPXX=epsimp),
                                 SIGM_INIT=_F(SIXX=SXM),
                                 EPSI_INIT=_F(EPXX=EXM, EPYY=0.,EPZZ=0.,EPXY=0, EPXZ=0.,EPYZ=0.),
                                 VARI_INIT=_F(VALE=[Vim[j] for j in range(Nbvari)]),
                                 );

          # recuperation des valeurs initiales du futur pas de temps dans la table resultat

          EXM = RESU[i]['EPXX',1]

          SXM = RESU[i]['SIXX',1]

          for j in range(Nbvari):
             Vim[j] = RESU[i]['V'+str(j+1),1]

          #IMPR_TABLE(TABLE=RESU[i]);

          DETRUIRE ( CONCEPT =  _F (NOM = epsimp))
          DETRUIRE ( CONCEPT =  _F (NOM = list))
          DETRUIRE ( CONCEPT =  _F (NOM = FC_T ))
          DETRUIRE ( CONCEPT =  _F (NOM = FT_T )),
          DETRUIRE ( CONCEPT =  _F (NOM = BETA_T ))
          DETRUIRE ( CONCEPT =  _F (NOM = GC_T ))
          DETRUIRE ( CONCEPT =  _F (NOM = GT_T ))

          TEST_TABLE(TABLE=RESU[i],
                     NOM_PARA='VMIS',
                     VALE_CALC=RESU[i]['VMIS',2],
                     VALE_REFE=U['VMIS',i+2],
                     FILTRE=_F(NOM_PARA='INST',VALE=time),
                     REFERENCE='AUTRE_ASTER',);

          TEST_TABLE(TABLE=RESU[i],
                     NOM_PARA='TRACE',
                     VALE_CALC=RESU[i]['TRACE',2],
                     VALE_REFE=U['TRACE',i+2],
                     FILTRE=_F(NOM_PARA='INST',VALE=time),
                     REFERENCE='AUTRE_ASTER',);

          for j in range(Nbvari):
             nomvari='V'+str(j+1)
             if U[nomvari,i+1] > epsi :
                TEST_TABLE(TABLE=RESU[i],
                     NOM_PARA=nomvari,
                     VALE_CALC=RESU[i][nomvari,2],
                     VALE_REFE=U[nomvari,i+2],
                     FILTRE=_F(NOM_PARA='INST',VALE=time),
                     REFERENCE='AUTRE_ASTER',);

FIN()
