# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),PAR_LOT='NON',DEBUG=_F(SDVERI='OUI'))

M=LIRE_MAILLAGE(FORMAT='MED',)

FISS0=DEFI_FOND_FISS(MAILLAGE=M, SYME='NON',
                    FOND_FISS=_F(GROUP_NO='FOND',),
                    LEVRE_SUP=_F(GROUP_MA='LEVR_SUP',),
                    LEVRE_INF=_F(GROUP_MA='LEVR_INF',),);

FISS1=DEFI_FOND_FISS(MAILLAGE=M, SYME='NON',
                    FOND_FISS=_F(GROUP_NO='FOND',),);

basefond0=FISS0.sdj.BASEFOND.get()
basefond1=FISS1.sdj.BASEFOND.get()

ndfon=[]
vnorX=[]
vnorY=[]
vnorZ=[]
vdirX=[]
vdirY=[]
vdirZ=[]

for i in range(0,len(basefond0)/6):
  ndfon.append(i+1)
  vnorX.append(basefond0[6*i])
  vnorY.append(basefond0[6*i+1])
  vnorZ.append(basefond0[6*i+2])
  vdirX.append(basefond0[6*i+3])
  vdirY.append(basefond0[6*i+4])
  vdirZ.append(basefond0[6*i+5])

TABL0=CREA_TABLE(LISTE=(_F(LISTE_I=ndfon,PARA='ND_FOND'),
                        _F(LISTE_R=vnorX,PARA='VNORX'),
                        _F(LISTE_R=vnorY,PARA='VNORY') ,
                        _F(LISTE_R=vnorZ,PARA='VNORZ'),
                        _F(LISTE_R=vdirX,PARA='VDIRX'),
                        _F(LISTE_R=vdirY,PARA='VDIRY') ,
                        _F(LISTE_R=vdirZ,PARA='VDIRZ'),
                        ),);
ndfon=[]
vnorX=[]
vnorY=[]
vnorZ=[]
vdirX=[]
vdirY=[]
vdirZ=[]

for i in range(0,len(basefond1)/6):
  ndfon.append(i+1)
  vnorX.append(basefond1[6*i])
  vnorY.append(basefond1[6*i+1])
  vnorZ.append(basefond1[6*i+2])
  vdirX.append(basefond1[6*i+3])
  vdirY.append(basefond1[6*i+4])
  vdirZ.append(basefond1[6*i+5])

TABL1=CREA_TABLE(LISTE=(_F(LISTE_I=ndfon,PARA='ND_FOND'),
                        _F(LISTE_R=vnorX,PARA='VNORX'),
                        _F(LISTE_R=vnorY,PARA='VNORY') ,
                        _F(LISTE_R=vnorZ,PARA='VNORZ'),
                        _F(LISTE_R=vdirX,PARA='VDIRX'),
                        _F(LISTE_R=vdirY,PARA='VDIRY') ,
                        _F(LISTE_R=vdirZ,PARA='VDIRZ'),
                        ),);

for i in range(0,len(basefond0)/6):
   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VNORX',
              VALE_CALC=0.,
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VNORY',
              VALE_CALC=-1.,
              VALE_REFE=-1.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VNORZ',
              VALE_CALC=0.,
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VDIRX',
              VALE_CALC=1.,
              VALE_REFE=1.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VDIRY',
              VALE_CALC=0.,
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL0,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VDIRZ',
              VALE_CALC=0.,
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL1,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VNORX',
              VALE_CALC=0.,
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL1,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VNORY',
              VALE_CALC=-1.,
              VALE_REFE=-1.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL1,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VNORZ',
              VALE_CALC=0.,
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL1,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VDIRX',
              VALE_CALC=1.,
              VALE_REFE=1.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL1,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VDIRY',
              VALE_CALC=0.,
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )

   TEST_TABLE(TABLE=TABL1,
              FILTRE=_F(  NOM_PARA = 'ND_FOND',
                          VALE_I = i+1),
              NOM_PARA='VDIRZ',
              VALE_CALC=0.,
              VALE_REFE=0.,
              CRITERE='ABSOLU',
              REFERENCE='ANALYTIQUE' )
FIN();
