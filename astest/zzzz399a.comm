# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2017 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# Hartree Atomic Units
me = 1.0 # [m_e]
e = 1.0 # [e]
mp = 1837.0 # [m_e]
ht = 1.0 # [hbar]
a0 = 1.0 # [bohr]
eps0 = 1.0/(4.0*pi)
k = 1.0
c1=ht**2/(2*me)
om = sqrt(k/me)
L=10.0 # [bohr]


DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),)

# Mesh
MAILLAGE=LIRE_MAILLAGE(FORMAT='MED',)

# Material - Rigidity
NEUT1  = CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R', 
                    OPERATION='AFFE',
                    MAILLAGE=MAILLAGE,
                    AFFE=_F(TOUT='OUI', NOM_CMP='X1', VALE=2.,),
                   )
LAMBDA_R = FORMULE(NOM_PARA=('NEUT1',),VALE='0.5*NEUT1')
RHOCP_R  = FORMULE(NOM_PARA=('NEUT1',),VALE='0.5*NEUT1')
MAT_R    = DEFI_MATERIAU(THER_FO=_F( RHO_CP = RHOCP_R,LAMBDA = LAMBDA_R),)
CHMAT_R  = AFFE_MATERIAU(MAILLAGE=MAILLAGE,AFFE=_F(TOUT= 'OUI', MATER= MAT_R),AFFE_VARC=_F(NOM_VARC='NEUT1', CHAM_GD=NEUT1,),)


# Material - Mass
LAMBDA_M = DEFI_CONSTANTE( VALE=1.0 )
RHOCP_M  = FORMULE(NOM_PARA=('NEUT1',),VALE='NEUT1')
MAT_M    = DEFI_MATERIAU(THER_FO=_F( RHO_CP = RHOCP_M,LAMBDA = LAMBDA_M),)
FPOTV    = FORMULE(NOM_PARA='X',VALE='0.5*k*(X**2)/c1')
CHXY     = CREA_CHAMP(OPERATION='EXTR',TYPE_CHAM='NOEU_GEOM_R',NOM_CHAM='GEOMETRIE',MAILLAGE=MAILLAGE)
CHFPOTV  = CREA_CHAMP(OPERATION='AFFE',TYPE_CHAM='NOEU_NEUT_F',MAILLAGE=MAILLAGE,AFFE= (_F(TOUT='OUI', NOM_CMP='X1',VALE_F=FPOTV,),))
CHPOTV   = CREA_CHAMP(OPERATION='EVAL',TYPE_CHAM='NOEU_NEUT_R',CHAM_F=CHFPOTV, CHAM_PARA=CHXY )
CHMAT_M  = AFFE_MATERIAU(MAILLAGE=MAILLAGE,AFFE=_F(TOUT= 'OUI', MATER= MAT_M),AFFE_VARC=_F(NOM_VARC='NEUT1', CHAM_GD=CHPOTV,),)

# Compute
MODE=AFFE_MODELE(MAILLAGE=MAILLAGE,
                 AFFE=_F(TOUT='OUI',
                         PHENOMENE='THERMIQUE',
                         MODELISATION='PLAN',),)

CONDLIM=AFFE_CHAR_THER(MODELE=MODE,
                       TEMP_IMPO=(
                                  _F(GROUP_MA='GF0',TEMP=0.0,),
                                  _F(GROUP_MA='GFL',TEMP=0.0,)
                                 ),
                       )

K_ELEM=CALC_MATR_ELEM(MODELE=MODE,
                            CHAM_MATER=CHMAT_R,
                               OPTION='RIGI_THER',
                                CHARGE=CONDLIM 
                                )

MV_ELEM=CALC_MATR_ELEM(      MODELE=MODE,
                            CHAM_MATER=CHMAT_M,
                               OPTION='MASS_THER',
                            INCR_INST= 1.0,
                                )
                                                        

M_ELEM=CALC_MATR_ELEM(
                      MODELE     = MODE,
                      CHAM_MATER = CHMAT_R,
                      OPTION     = 'MASS_THER',
                      INCR_INST  = 1.0,
                      )

NUM=NUME_DDL(MATR_RIGI=K_ELEM)

K_ASSE=ASSE_MATRICE( MATR_ELEM=K_ELEM,   NUME_DDL=NUM)

MV_ASSE=ASSE_MATRICE( MATR_ELEM=MV_ELEM,   NUME_DDL=NUM)

KMV_ASSE = COMB_MATR_ASSE(COMB_R = ( _F( MATR_ASSE = K_ASSE, COEF_R = 1.),
                                     _F( MATR_ASSE= MV_ASSE, COEF_R = 1.),
                                   )
                         )


M_ASSE=ASSE_MATRICE( MATR_ELEM=M_ELEM,   NUME_DDL=NUM)


MODES = CALC_MODES(
                   MATR_RIGI=KMV_ASSE,
                   MATR_MASS=M_ASSE,
                   OPTION='PLUS_PETITE',
                   CALC_FREQ= _F( NMAX_FREQ = 5),
                  )


LIMODE = RECU_TABLE(CO=MODES,NOM_PARA = 'FREQ')

TOLAM = FORMULE(VALE='(2*pi*FREQ)**2',NOM_PARA='FREQ',)
ENERGY = FORMULE(VALE='c1*LAMBDA',NOM_PARA='LAMBDA',)
EXPECT = FORMULE(VALE='(NUME_ORDRE-1+0.5)*ht*om',NOM_PARA='NUME_ORDRE',)
DIFF = FORMULE(VALE='ENERGY-EXPECT',NOM_PARA=('ENERGY','EXPECT'),)

LIMODE=CALC_TABLE(reuse =LIMODE,
                  TABLE=LIMODE,
                  ACTION=(
                          _F(OPERATION='OPER',FORMULE=TOLAM,NOM_PARA='LAMBDA',),
                          _F(OPERATION='OPER',FORMULE=ENERGY,NOM_PARA='ENERGY',),
                          _F(OPERATION='OPER',FORMULE=EXPECT,NOM_PARA='EXPECT',),
                          _F(OPERATION='OPER',FORMULE=DIFF,NOM_PARA='DIFF',),
                        ),)

IMPR_TABLE(TABLE=LIMODE)

TEST_TABLE ( TABLE = LIMODE , NOM_PARA = 'DIFF', TYPE_TEST='MAX', REFERENCE = 'ANALYTIQUE', VALE_CALC = 3.01524E-04, PRECISION=5E-4, VALE_REFE = 0.0,CRITERE ='ABSOLU') 

                             
IMPR_RESU(FORMAT='MED',
          RESU=_F(RESULTAT=MODES,),
          )

          
#COUP1=MACR_LIGN_COUPE( RESULTAT= MODES,
#                      NOM_CHAM= 'DEPL',
#                      LIGN_COUPE=   _F( NB_POINTS= 100,
#                                         COOR_ORIG= ( -L/2, 0.0 ),
#                                         COOR_EXTR= (  L/2,  0.0 ), ),)

#X1   = RECU_FONCTION(TABLE=COUP1,  PARA_X='ABSC_CURV',PARA_Y='TEMP',FILTRE = _F(NOM_PARA='NUME_MODE', VALE_I=1))
#X2   = RECU_FONCTION(TABLE=COUP1,  PARA_X='ABSC_CURV',PARA_Y='TEMP',FILTRE = _F(NOM_PARA='NUME_MODE', VALE_I=2))
#X3   = RECU_FONCTION(TABLE=COUP1,  PARA_X='ABSC_CURV',PARA_Y='TEMP',FILTRE = _F(NOM_PARA='NUME_MODE', VALE_I=3))
#X4   = RECU_FONCTION(TABLE=COUP1,  PARA_X='ABSC_CURV',PARA_Y='TEMP',FILTRE = _F(NOM_PARA='NUME_MODE', VALE_I=4))
#X5   = RECU_FONCTION(TABLE=COUP1,  PARA_X='ABSC_CURV',PARA_Y='TEMP',FILTRE = _F(NOM_PARA='NUME_MODE', VALE_I=5))
#                                         
#IMPR_FONCTION(UNITE=38, FORMAT='XMGRACE',PILOTE='PNG',COURBE=(_F(MARQUEUR=0,FONCTION=X1),_F(MARQUEUR=0,FONCTION=X2),_F(MARQUEUR=0,FONCTION=X3),_F(MARQUEUR=0,FONCTION=X4),_F(MARQUEUR=0,FONCTION=X5)))

FIN()
