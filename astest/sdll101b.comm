# MODIF  DATE 26/09/2012   AUTEUR LEBOUVIER F.LEBOUVIER 
# TITRE VIBRATION D'UNE POUTRE AVEC PRE-CONTRAINTES (MAILLAGE PLUS FIN)
# sdll101b.para = tps_job 60 mem_job 512Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#CAS_TEST__: SDLL101B
#=======================================================================
# SDLL101B                 COMMANDES                             5/02/91
# VIBRATION D'UNE POUTRE ELANCEE SOUS TENSION
# CAS TEST DIT DE LA CORDE A PIANO
# MODELISATION : 'POU_D_E'
# CHARGEMENT   : ON FAIT 4 CAS DE CHARGE (0., 10., 100., 1000.)
#=======================================================================

DEBUT(CODE=_F(NOM='SDLL101B',NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

MA=LIRE_MAILLAGE()

MA=DEFI_GROUP( reuse=MA,   MAILLAGE=MA,
  CREA_GROUP_MA=_F(  NOM = 'TOUT', TOUT = 'OUI'))

MO=AFFE_MODELE( MAILLAGE=MA,
                 AFFE=_F( TOUT = 'OUI',PHENOMENE = 'MECANIQUE',
                                             MODELISATION = 'POU_D_E') )

CARAELEM=AFFE_CARA_ELEM( MODELE=MO,
                     POUTRE=_F(
       GROUP_MA = 'TOUT',
SECTION = 'CERCLE',
                             CARA = ('R','EP',), VALE = (0.005,0.005,)) )

MAT=DEFI_MATERIAU(ELAS=_F( E = 2.0E+11,NU = 0.3,RHO = 7800.) )

CHMAT=AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F( TOUT = 'OUI',MATER = MAT))

CH=AFFE_CHAR_MECA( MODELE=MO,DDL_IMPO=(
                      _F( TOUT = 'OUI',  DZ = 0.,DRX = 0.,DRY = 0.),
                               _F( NOEUD = 'A',     DX = 0.,DY = 0.),
                               _F( NOEUD = 'B',            DY = 0.)) )

MELR=CALC_MATR_ELEM(MODELE=MO, CHARGE=CH, CARA_ELEM=CARAELEM,
                          CHAM_MATER=CHMAT, OPTION='RIGI_MECA'  )

MELM=CALC_MATR_ELEM(MODELE=MO, CHARGE=CH, CARA_ELEM=CARAELEM,
                          CHAM_MATER=CHMAT, OPTION='MASS_MECA'  )

NUM=NUME_DDL( MATR_RIGI=MELR )

MATASSR=ASSE_MATRICE(MATR_ELEM=MELR,NUME_DDL=NUM)

MATASSM=ASSE_MATRICE(MATR_ELEM=MELM,NUME_DDL=NUM)

# RESOLUTION STATIQUE ------------------------------------------------

#

# DEFINITION DES 4 CHARGEMENTS

C_0=AFFE_CHAR_MECA(MODELE=MO,FORCE_NODALE=_F( NOEUD = 'B',FX = 0.))

C_10=AFFE_CHAR_MECA(MODELE=MO,FORCE_NODALE=_F( NOEUD = 'B',FX = 10.))

C_100=AFFE_CHAR_MECA(MODELE=MO,FORCE_NODALE=_F( NOEUD = 'B',FX = 100.))

C_1000=AFFE_CHAR_MECA(MODELE=MO,FORCE_NODALE=_F( NOEUD = 'B',FX = 1000.))


# ON RESOUD LES 4 CAS DE CHARGES

DEP=MACRO_ELAS_MULT(MODELE=MO,
                    CHAM_MATER=CHMAT,
                    CARA_ELEM=CARAELEM,
                    CHAR_MECA_GLOBAL=CH,
                    CAS_CHARGE=(_F(NOM_CAS='CHARGE1',
                                   CHAR_MECA=C_0,),
                                _F(NOM_CAS='CHARGE2',
                                   CHAR_MECA=C_10,),
                                _F(NOM_CAS='CHARGE3',
                                   CHAR_MECA=C_100,),
                                _F(NOM_CAS='CHARGE4',
                                   CHAR_MECA=C_1000,),),);

#---------------------------------------------------------------------

#

# RESOLUTION DYNAMIQUE -----------------------------------------------

#

# PRISE EN COMPTE DES PRECONTRAINTES AU NIVEAU ELEMENTAIRES
DEP=CALC_CHAMP(reuse=DEP,RESULTAT=DEP,CONTRAINTE=('SIEF_ELGA'))


S_0=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELGA_SIEF_R',
RESULTAT=DEP, NUME_ORDRE=1,
                         NOM_CHAM='SIEF_ELGA' )

S_10=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELGA_SIEF_R',
RESULTAT=DEP, NUME_ORDRE=2,
                         NOM_CHAM='SIEF_ELGA' )

S_100=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELGA_SIEF_R',
RESULTAT=DEP, NUME_ORDRE=3,
                         NOM_CHAM='SIEF_ELGA' )

S_1000=CREA_CHAMP( OPERATION='EXTR', TYPE_CHAM='ELGA_SIEF_R',
RESULTAT=DEP, NUME_ORDRE=4,
                         NOM_CHAM='SIEF_ELGA' )

#

MEG_0=CALC_MATR_ELEM(MODELE=MO,
                     CARA_ELEM=CARAELEM,
                     OPTION='RIGI_GEOM',
                     SIEF_ELGA=S_0 )

MEG_10=CALC_MATR_ELEM(MODELE=MO,
                     CARA_ELEM=CARAELEM,
                     OPTION='RIGI_GEOM',
                     SIEF_ELGA=S_10 )

MEG_100=CALC_MATR_ELEM(MODELE=MO,
                     CARA_ELEM=CARAELEM,
                     OPTION='RIGI_GEOM',
                     SIEF_ELGA=S_100 )

MEG_1000=CALC_MATR_ELEM(MODELE=MO,
                     CARA_ELEM=CARAELEM,
                     OPTION='RIGI_GEOM',
                     SIEF_ELGA=S_1000 )

#
MAR_0=ASSE_MATRICE(MATR_ELEM=MEG_0,NUME_DDL=NUM)

MAR_10=ASSE_MATRICE(MATR_ELEM=MEG_10,NUME_DDL=NUM)

MAR_100=ASSE_MATRICE(MATR_ELEM=MEG_100,NUME_DDL=NUM)

MAR_1000=ASSE_MATRICE(MATR_ELEM=MEG_1000,NUME_DDL=NUM)

#

# CALCUL MODAL AVEC PRECONTRAINTE NULLE

MATASSR1=COMB_MATR_ASSE(COMB_R=(_F( MATR_ASSE = MATASSR, COEF_R = 1.),
                                    _F( MATR_ASSE = MAR_0,   COEF_R = 1.)) )

MD_0=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,MATR_MASS=MATASSM,
                    METHODE='JACOBI',
                      OPTION='SANS',
                    CALC_FREQ=_F( OPTION = 'PLUS_PETITE',NMAX_FREQ = 5) )


#

# CALCUL MODAL AVEC PRECONTRAINTE F = 10 N.

MATASSR1=COMB_MATR_ASSE(reuse=MATASSR1,COMB_R=(_F( MATR_ASSE = MATASSR,  COEF_R = 1.),
                                     _F( MATR_ASSE = MAR_10,   COEF_R = 1.)) )

MD_10=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,MATR_MASS=MATASSM,
                    METHODE='JACOBI',
                      OPTION='SANS',
                    CALC_FREQ=_F( OPTION = 'PLUS_PETITE',NMAX_FREQ = 5) )


#

# CALCUL MODAL AVEC PRECONTRAINTE F = 100 N.

MATASSR1=COMB_MATR_ASSE(reuse=MATASSR1,COMB_R=(_F( MATR_ASSE = MATASSR,  COEF_R = 1.),
                                     _F( MATR_ASSE = MAR_100,  COEF_R = 1.)) )

MD_100=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,MATR_MASS=MATASSM,
                  METHODE='JACOBI',
                    OPTION='SANS',
                  CALC_FREQ=_F( OPTION = 'PLUS_PETITE',NMAX_FREQ = 5) )


#

# CALCUL MODAL AVEC PRECONTRAINTE F = 1000 N.

MATASSR1=COMB_MATR_ASSE(reuse=MATASSR1,COMB_R=(_F( MATR_ASSE = MATASSR,  COEF_R = 1.),
                                     _F( MATR_ASSE = MAR_1000, COEF_R = 1.)) )

MD_1000=MODE_ITER_SIMULT(MATR_RIGI=MATASSR1,MATR_MASS=MATASSM,
                    METHODE='JACOBI',
                      OPTION='SANS',
                    CALC_FREQ=_F( OPTION = 'PLUS_PETITE',NMAX_FREQ = 5))


#

# VERIFICATION DES RESULTATS

TEST_RESU(RESU=(_F(  RESULTAT = MD_0,
                   PARA = 'FREQ',NUME_ORDRE = 1,VALE = 4.9713),
                 _F(  RESULTAT = MD_0,
                   PARA = 'FREQ',NUME_ORDRE = 2,VALE = 19.8851),
                 _F(  RESULTAT = MD_0,
                   PARA = 'FREQ',NUME_ORDRE = 3,VALE = 44.7414),
                 _F(  RESULTAT = MD_0,
                   PARA = 'FREQ',NUME_ORDRE = 4,VALE = 79.5403),
                 _F(  RESULTAT = MD_0,
                   PARA = 'FREQ',NUME_ORDRE = 5,VALE = 124.2818))
                       )

TEST_RESU(RESU=(_F(  RESULTAT = MD_10,
                   PARA = 'FREQ',NUME_ORDRE = 1,VALE = 5.0728),
                 _F(  RESULTAT = MD_10,
                   PARA = 'FREQ',NUME_ORDRE = 2,VALE = 19.9874),
                 _F(  RESULTAT = MD_10,
                   PARA = 'FREQ',NUME_ORDRE = 3,VALE = 44.8439),
                 _F(  RESULTAT = MD_10,
                   PARA = 'FREQ',NUME_ORDRE = 4,VALE = 79.6429),
                 _F(  RESULTAT = MD_10,
                   PARA = 'FREQ',NUME_ORDRE = 5,VALE = 124.3844))
                       )

TEST_RESU(RESU=(_F(  RESULTAT = MD_100,
                   PARA = 'FREQ',NUME_ORDRE = 1,VALE = 5.9090),
                 _F(  RESULTAT = MD_100,
                   PARA = 'FREQ',NUME_ORDRE = 2,VALE = 20.8860),
                 _F(  RESULTAT = MD_100,
                   PARA = 'FREQ',NUME_ORDRE = 3,VALE = 45.7561),
                 _F(  RESULTAT = MD_100,
                   PARA = 'FREQ',NUME_ORDRE = 4,VALE = 80.5600),
                 _F(  RESULTAT = MD_100,
                   PARA = 'FREQ',NUME_ORDRE = 5,VALE = 125.3037))
                       )

TEST_RESU(RESU=(_F(  RESULTAT = MD_1000,
                   PARA = 'FREQ',NUME_ORDRE = 1,VALE = 11.2577),
                 _F(  RESULTAT = MD_1000,
                   PARA = 'FREQ',NUME_ORDRE = 2,VALE = 28.3462),
                 _F(  RESULTAT = MD_1000,
                   PARA = 'FREQ',NUME_ORDRE = 3,VALE = 54.0370),
                 _F(  RESULTAT = MD_1000,
                   PARA = 'FREQ',NUME_ORDRE = 4,VALE = 89.2134),
                 _F(  RESULTAT = MD_1000,
                   PARA = 'FREQ',NUME_ORDRE = 5,VALE = 134.1511))
                       )

#
FIN()
#






