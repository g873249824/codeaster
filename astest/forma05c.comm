# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'))

# MODELIDATION C : X-FEM 2D

#----------------------------------------------
#                MAILLAGE, MODELE INITIAL
#----------------------------------------------

MA = LIRE_MAILLAGE(FORMAT='MED', UNITE=20);

MA = MODI_MAILLAGE(reuse=MA, 
                   MAILLAGE=MA, 
                   ORIE_PEAU_2D=_F(GROUP_MA=('HAUT', 'BAS'),),);

MO = AFFE_MODELE(MAILLAGE=MA,
                 AFFE=_F(MODELISATION='D_PLAN', 
                         PHENOMENE='MECANIQUE', 
                         TOUT='OUI'),);

#----------------------------------------------
#                MATERIAU
#----------------------------------------------

MAT = DEFI_MATERIAU(ELAS=_F(E=2.1e+11, NU=0.3),);

MATE = AFFE_MATERIAU(MAILLAGE=MA,
                     AFFE=_F(MATER=MAT, 
                             TOUT='OUI'),);

#----------------------------------------------
#               FISSURES ET ELEMENTS X-FEM
#----------------------------------------------

FISS = DEFI_FISS_XFEM(MAILLAGE=MA,
                      DEFI_FISS=_F(FORM_FISS='DEMI_DROITE',
                                   PFON=(0.1, 0.0, 0.0),
                                   DTAN=(1.0, 0.0, 0.0),),);

MOXFEM = MODI_MODELE_XFEM(MODELE_IN=MO, FISSURE=FISS,);

#----------------------------------------------
#               CHARGEMENTS
#----------------------------------------------

CHAR = AFFE_CHAR_MECA(MODELE=MOXFEM,
                      DDL_IMPO=(_F(GROUP_NO='HAUT_G',DX=0.0, DY=0.0,), 
                                _F(GROUP_NO='HAUT_D',DY=0.0, ),),
                      PRES_REP=_F(GROUP_MA=('HAUT','BAS'),PRES=-10e6,),);

#----------------------------------------------
#               RESOLUTION
#----------------------------------------------

RESU = MECA_STATIQUE(MODELE=MOXFEM,
                     CHAM_MATER=MATE, 
                     EXCIT=_F(CHARGE=CHAR),);

#------------------------------------------------------------------------
# POST-TRAITEMENT : MAILLAGE FISSURE et DEPLACEMENTS POUR LE MAILLAGE FISSURE
#------------------------------------------------------------------------

MA_VISU = POST_MAIL_XFEM(MODELE=MOXFEM);

MO_VISU = AFFE_MODELE(MAILLAGE=MA_VISU,
                      AFFE=_F(MODELISATION='D_PLAN',
                              PHENOMENE='MECANIQUE', 
                              TOUT='OUI'),);

RES_VISU = POST_CHAM_XFEM(MODELE_VISU=MO_VISU, RESULTAT=RESU);

RES_VISU = CALC_CHAMP(reuse=RES_VISU,
                      RESULTAT=RES_VISU,
                      CONTRAINTE='SIGM_NOEU',
                      CRITERES='SIEQ_NOEU',);

IMPR_RESU(FORMAT='MED', RESU=_F(RESULTAT=RES_VISU), UNITE=80);

#------------------------------------------------------------------------
#               POST-TRAITEMENT de G et K
#------------------------------------------------------------------------

G = CALC_G(RESULTAT=RESU,
           THETA=_F(FISSURE=FISS, 
                    R_INF=0.04, 
                    R_SUP=0.1),
           OPTION='CALC_G',);

IMPR_TABLE(TABLE=G);

GK = CALC_G(RESULTAT=RESU,
            THETA=_F(FISSURE=FISS, 
                     R_INF=0.04, 
                     R_SUP=0.1),
            OPTION='CALC_K_G',);

IMPR_TABLE(TABLE=GK);

K = POST_K1_K2_K3(RESULTAT=RESU,
                  FISSURE=FISS,
                  ABSC_CURV_MAXI=0.1,);

IMPR_TABLE(TABLE=K);

# tests sur G
Gref = 192

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=4.E-3,
           VALE_CALC=191.276968611,
           VALE_REFE=192,
           NOM_PARA='G',
           TABLE=G,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=4.E-3,
           VALE_CALC=191.276968611,
           VALE_REFE=192,
           NOM_PARA='G',
           TABLE=GK,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=4.E-3,
           VALE_CALC=192.008638299,
           VALE_REFE=192,
           NOM_PARA='G_IRWIN',
           TABLE=GK,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.02,
           VALE_CALC=188.418285544,
           VALE_REFE=192,
           NOM_PARA='G',
           TABLE=K,)

# tests sur K1
K1ref = 6.65e6

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=3.E-3,
           VALE_CALC=6.65655152566E6,
           VALE_REFE=6.650000E6,
           NOM_PARA='K1',
           TABLE=GK,)

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=1.E-2,
           VALE_CALC=6.59394677871E6,
           VALE_REFE=6.650000E6,
           NOM_PARA='K1',
           TABLE=K,)

FIN()
