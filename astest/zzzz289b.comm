# MODIF  DATE 19/05/2011   AUTEUR MACOCCO K.MACOCCO 
# TITRE TEST DES OPTIONS RIGI_MECA ET MASS_MECA DES ELEMENTS INCO ET INCO_UP EN D_PLAN
# zzzz289b.para = tps_job 60 mem_job 64Mo ncpus 1 liste_test S
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# RESPONSABLE MACOCCO K.MACOCCO

DEBUT(CODE=_F(NOM='ZZZZ289B',
              NIV_PUB_WEB='INTERNET',),);

#ON LIT UN MAILLAGE QUADRATIQUE EN TETRA10 POUR TESTER LES ELEM
# P2P1P1 (D_PLAN_INCO) ET P2P1 (D_PLAN_INCO_UP)
MAIL_Q=LIRE_MAILLAGE(FORMAT='MED',);

#ON CREE UN MAILLAGE LINEAIRE POUR TESTER LES ELEM P1+P1 (D_PLAN_INCO_UP)
MAIL_L=CREA_MAILLAGE(MAILLAGE=MAIL_Q,
                     QUAD_LINE=_F(TOUT='OUI',),);

MATER=DEFI_MATERIAU(ELAS=_F(E=30000.0,
                            NU=0.2,
                            RHO=2764.0,),
                    ECRO_LINE=_F(D_SIGM_EPSI=-1950.0,
                                 SY=3.0,),);

CHMAT_Q=AFFE_MATERIAU(MAILLAGE=MAIL_Q,
                      AFFE=_F(TOUT='OUI',
                              MATER=MATER,),);

CHMAT_L=AFFE_MATERIAU(MAILLAGE=MAIL_L,
                      AFFE=_F(TOUT='OUI',
                              MATER=MATER,),);

MODELUPG=AFFE_MODELE(MAILLAGE=MAIL_Q,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='D_PLAN_INCO',),);

MODELUPQ=AFFE_MODELE(MAILLAGE=MAIL_Q,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='D_PLAN_INCO_UP',),);

MODELUPL=AFFE_MODELE(MAILLAGE=MAIL_L,
                     AFFE=_F(TOUT='OUI',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='D_PLAN_INCO_UP',),);

#CALCUL DE LA MATRICE DE MASSE POUR LES ELEM P2P2P1
MATMUPG=CALC_MATR_ELEM(OPTION='MASS_MECA',
                       MODELE=MODELUPG,
                       CHAM_MATER=CHMAT_Q,);

#CALCUL DE LA MATRICE DE MASSE POUR LES ELEM P2P1
MATMUPQ=CALC_MATR_ELEM(OPTION='MASS_MECA',
                       MODELE=MODELUPQ,
                       CHAM_MATER=CHMAT_Q,);

#CALCUL DE LA MATRICE DE MASSE POUR LES ELEM P1+P1
MATMUPL=CALC_MATR_ELEM(OPTION='MASS_MECA',
                       MODELE=MODELUPL,
                       CHAM_MATER=CHMAT_L,);

#CALCUL DE LA MATRICE DE RIGIDITE POUR LES ELEM P2P2P1
MATRUPG=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                       MODELE=MODELUPG,
                       CHAM_MATER=CHMAT_Q,);

#CALCUL DE LA MATRICE DE RIGIDITE POUR LES ELEM P2P1
MATRUPQ=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                       MODELE=MODELUPQ,
                       CHAM_MATER=CHMAT_Q,);

#CALCUL DE LA MATRICE DE RIGIDITE POUR LES ELEM P1+P1
MATRUPL=CALC_MATR_ELEM(OPTION='RIGI_MECA',
                       MODELE=MODELUPL,
                       CHAM_MATER=CHMAT_L,);

NUMEUPG=NUME_DDL(MODELE=MODELUPG,);
NUMEUPQ=NUME_DDL(MODELE=MODELUPQ,);
NUMEUPL=NUME_DDL(MODELE=MODELUPL,);

#MATRICE DE MASSE ASSEMBLEE POUR LES ELEM P2P2P1
MAMASUPG=ASSE_MATRICE(MATR_ELEM=MATMUPG,
                      NUME_DDL=NUMEUPG,);

#MATRICE DE MASSE ASSEMBLEE POUR LES ELEM P2P1
MAMASUPQ=ASSE_MATRICE(MATR_ELEM=MATMUPQ,
                      NUME_DDL=NUMEUPQ,);

#MATRICE DE MASSE ASSEMBLEE POUR LES ELEM P1+P1
MAMASUPL=ASSE_MATRICE(MATR_ELEM=MATMUPL,
                      NUME_DDL=NUMEUPL,);

#MATRICE DE RIGIDITE ASSEMBLEE POUR LES ELEM P2P2P1
MARASUPG=ASSE_MATRICE(MATR_ELEM=MATRUPG,
                      NUME_DDL=NUMEUPG,);

#MATRICE DE RIGIDITE ASSEMBLEE POUR LES ELEM P2P1
MARASUPQ=ASSE_MATRICE(MATR_ELEM=MATRUPQ,
                      NUME_DDL=NUMEUPQ,);

#MATRICE DE RIGIDITE ASSEMBLEE POUR LES ELEM P1+P1
MARASUPL=ASSE_MATRICE(MATR_ELEM=MATRUPL,
                      NUME_DDL=NUMEUPL,);

#Test de non regression sur la matrice de masse

TEST_RESU(OBJET=_F(NOM='MATMUPG        .M01.RESL',
                   S_R=4514.533,
                   REFERENCE='NON_REGRESSION',),);

TEST_RESU(OBJET=_F(NOM='MATMUPQ        .M01.RESL',
                   S_R=4514.533,
                   REFERENCE='NON_REGRESSION',),);

TEST_RESU(OBJET=_F(NOM='MATMUPL        .M01.RESL',
                   S_R=4146.0,
                   REFERENCE='NON_REGRESSION',),);

TEST_RESU(OBJET=_F(NOM='MATRUPG .ME001     .RESL',
                   S_R=22684.18,
                   REFERENCE='NON_REGRESSION',),);

TEST_RESU(OBJET=_F(NOM='MATRUPQ .ME001     .RESL',
                   S_R=4.16666E+05,
                   REFERENCE='NON_REGRESSION',),);

TEST_RESU(OBJET=_F(NOM='MATRUPL .ME001     .RESL',
                   S_R=83333.333,
                   REFERENCE='NON_REGRESSION',),);
FIN();
