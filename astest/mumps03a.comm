# TITRE VALIDATION DE MUMPS POUR LES MATRICES COMPLEXES
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#########################################################################
# VALIDATION DU SOLVEUR MUMPS EN COMPLEXE ET AVEC DES CMDES ECLATEES EN
# MODULANT:
#     - POUR LA PRISE EN COMPTE DES DIRICHLETS (AFFE_CHAR_CINE OU PAS)
#     - LES RENUMEROTEURS UTILISES (METIS, SCOTCH, PORD, AMD, AMF, QAMD).
#
# PARALLELE: VALEUR CONSEILLEE 2 PROCS
#########################################################################

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))


MAIL=LIRE_MAILLAGE(FORMAT='MED', )

AIR=DEFI_MATERIAU( FLUIDE=_F( RHO = 1.3, CELE_C = 343.+0.j))
CHAMPMAT=AFFE_MATERIAU(  MAILLAGE=MAIL, AFFE=_F( TOUT = 'OUI',  MATER = AIR) )

GUIDE=AFFE_MODELE(  MAILLAGE=MAIL,     
                 AFFE=_F( TOUT = 'OUI', MODELISATION = '3D', PHENOMENE = 'ACOUSTIQUE') )

CHARACOU=AFFE_CHAR_ACOU(MODELE=GUIDE, VITE_FACE=_F( GROUP_MA = 'ENTREE', VNOR = 0.014+2.j))

IMPEACOU=AFFE_CHAR_ACOU(MODELE=GUIDE,
                 IMPE_FACE=_F( GROUP_MA = 'SORTIE', IMPE = 445.9+3.j),
                 PRES_IMPO=_F( NOEUD = 'NO600', PRES = 3.+1.j), )
CHDUAL=AFFE_CHAR_ACOU( MODELE=GUIDE,  PRES_IMPO=_F( NOEUD = 'NO500', PRES = 1.+3.j), )
CHCINE=AFFE_CHAR_CINE( MODELE=GUIDE,  ACOU_IMPO=_F( NOEUD = 'NO500', PRES = 1.+3.j), )


# 1ER CALCUL (REFERENCE) AVEC MULT_FRONT SANS CHAR_CINE :
#--------------------------------------------------------
MEL1=CALC_MATR_ELEM(CHARGE=(IMPEACOU,CHDUAL), INST=0.0, OPTION='RIGI_ACOU',  MODELE=GUIDE, CHAM_MATER=CHAMPMAT, );
NUM1=NUME_DDL(METHODE='MULT_FRONT',MATR_RIGI=MEL1, );
MATAS1=ASSE_MATRICE(NUME_DDL=NUM1, MATR_ELEM=MEL1, );

VECTELE1=CALC_VECT_ELEM(OPTION='CHAR_ACOU',  CHAM_MATER=CHAMPMAT, CHARGE=(CHARACOU,IMPEACOU,CHDUAL) )
VECTAS1=ASSE_VECTEUR(  VECT_ELEM=VECTELE1,   NUME_DDL=NUM1 )

FACTORISER( reuse=MATAS1,  MATR_ASSE=MATAS1 ,PCENT_PIVOT=20)
VECTAS1=RESOUDRE( reuse=VECTAS1,  MATR=MATAS1, CHAM_NO=VECTAS1 )

TEST_RESU(CHAM_NO=_F(NOEUD='NO1',
                     VALE_CALC_C=(1.8869534967818999+4.4379693694298998j),
                     NOM_CMP='PRES',
                     CHAM_GD=VECTAS1,),
          )

# 1ER BIS CALCUL AVEC MUMPS SANS CHAR_CINE ET AVEC ASSEMBLAGE:
#--------------------------------------------------------
#MEL1b=CALC_MATR_ELEM(CHARGE=(IMPEACOU,CHDUAL), INST=0.0, OPTION='RIGI_ACOU',  MODELE=GUIDE, CHAM_MATER=CHAMPMAT, );
#NUM1b=NUME_DDL(METHODE='MUMPS',MATR_RIGI=MEL1b, );
#MATAS1b=ASSE_MATRICE(NUME_DDL=NUM1b, MATR_ELEM=MEL1b, );

ASSEMBLAGE(MODELE=GUIDE,CHAM_MATER=CHAMPMAT,INST=0.0,CHARGE=(IMPEACOU,CHDUAL),
                NUME_DDL=CO('NUM1b'),
                MATR_ASSE=_F(MATRICE=CO('MATAS1b'),OPTION='RIGI_ACOU',),
                SOLVEUR=_F(METHODE='MUMPS',RENUM='METIS',),
                INFO=2,);

VECTEL1b=CALC_VECT_ELEM(OPTION='CHAR_ACOU',  CHAM_MATER=CHAMPMAT, CHARGE=(CHARACOU,IMPEACOU,CHDUAL) )
VECTAS1b=ASSE_VECTEUR(  VECT_ELEM=VECTEL1b,   NUME_DDL=NUM1b )

FACTORISER( reuse=MATAS1b,  MATR_ASSE=MATAS1b ,NPREC=8,GESTION_MEMOIRE='IN_CORE',INFO=2)
VECTAS1b=RESOUDRE( reuse=VECTAS1b,  MATR=MATAS1b, CHAM_NO=VECTAS1b, INFO=1,
                   RESI_RELA=-1.0, POSTTRAITEMENTS='SANS')

TEST_RESU(CHAM_NO=_F(NOEUD='NO1',
                     VALE_CALC_C=(1.8869534967818999+4.4379693694298998j),
                     NOM_CMP='PRES',
                     CHAM_GD=VECTAS1b,),
          )

# 2EME CALCUL AVEC MULT_FRONT AVEC CHAR_CINE :
#--------------------------------------------------------
MEL2=CALC_MATR_ELEM(CHARGE=(IMPEACOU), INST=0.0, OPTION='RIGI_ACOU',  MODELE=GUIDE, CHAM_MATER=CHAMPMAT, );
NUM2=NUME_DDL(METHODE='MULT_FRONT',MATR_RIGI=MEL2, );
MATAS2=ASSE_MATRICE(NUME_DDL=NUM2, MATR_ELEM=MEL2, CHAR_CINE=CHCINE  );
VCIN2=CALC_CHAR_CINE(   NUME_DDL=NUM2,  CHAR_CINE=CHCINE)

VECTELE2=CALC_VECT_ELEM(OPTION='CHAR_ACOU',  CHAM_MATER=CHAMPMAT, CHARGE=(CHARACOU,IMPEACOU) )
VECTAS2=ASSE_VECTEUR(  VECT_ELEM=VECTELE2,   NUME_DDL=NUM2 )

FACTORISER( reuse=MATAS2,  MATR_ASSE=MATAS2 ,NPREC=-8)

VECTAS2=RESOUDRE( reuse=VECTAS2,  MATR=MATAS2, CHAM_NO=VECTAS2, CHAM_CINE=VCIN2 )

TEST_RESU(CHAM_NO=_F(NOEUD='NO1',
                     VALE_CALC_C=1.886953497+4.437969369j,
                     VALE_REFE_C=(1.8869534967818999+4.4379693694298998j),
                     REFERENCE='AUTRE_ASTER',
                     NOM_CMP='PRES',
                     CHAM_GD=VECTAS2,),
          )

# 3EME CALCUL AVEC MUMPS AVEC CHAR_CINE + AMD:
#--------------------------------------------------------
MEL3=CALC_MATR_ELEM(CHARGE=(IMPEACOU), INST=0.0, OPTION='RIGI_ACOU',  MODELE=GUIDE, CHAM_MATER=CHAMPMAT, );

NUM34=NUME_DDL(METHODE='MUMPS',MATR_RIGI=MEL3,RENUM='AMD' );
MATAS34=ASSE_MATRICE(NUME_DDL=NUM34, MATR_ELEM=MEL3, CHAR_CINE=CHCINE  );
VCIN34=CALC_CHAR_CINE(   NUME_DDL=NUM34,  CHAR_CINE=CHCINE)
VECTEL34=CALC_VECT_ELEM(OPTION='CHAR_ACOU',  CHAM_MATER=CHAMPMAT, CHARGE=(CHARACOU,IMPEACOU) )
VECTAS34=ASSE_VECTEUR(  VECT_ELEM=VECTEL34,   NUME_DDL=NUM34 )
FACTORISER( reuse=MATAS34,  MATR_ASSE=MATAS34 ,GESTION_MEMOIRE='OUT_OF_CORE',INFO=2)
VECTAS34=RESOUDRE( reuse=VECTAS34,  MATR=MATAS34, CHAM_NO=VECTAS34, CHAM_CINE=VCIN34 ,
                   RESI_RELA=1.E-10, POSTTRAITEMENTS='FORCE', INFO=1)
TEST_RESU(CHAM_NO=_F(NOEUD='NO1',
                     VALE_CALC_C=1.886953497+4.437969369j,
                     VALE_REFE_C=(1.8869534967818999+4.4379693694298998j),
                     REFERENCE='AUTRE_ASTER',
                     NOM_CMP='PRES',
                     CHAM_GD=VECTAS34,),
          )

DETRUIRE(CONCEPT=_F(NOM=NUM34))
DETRUIRE(CONCEPT=_F(NOM=MATAS34))
DETRUIRE(CONCEPT=_F(NOM=VCIN34))
DETRUIRE(CONCEPT=_F(NOM=VECTEL34))
DETRUIRE(CONCEPT=_F(NOM=VECTAS34))

# 3EME CALCUL AVEC MUMPS AVEC CHAR_CINE + AMF:
#--------------------------------------------------------
NUM32=NUME_DDL(METHODE='MUMPS',MATR_RIGI=MEL3,RENUM='AMF' );
MATAS32=ASSE_MATRICE(NUME_DDL=NUM32, MATR_ELEM=MEL3, CHAR_CINE=CHCINE  );
VCIN32=CALC_CHAR_CINE(   NUME_DDL=NUM32,  CHAR_CINE=CHCINE)
VECTEL32=CALC_VECT_ELEM(OPTION='CHAR_ACOU',  CHAM_MATER=CHAMPMAT, CHARGE=(CHARACOU,IMPEACOU) )
VECTAS32=ASSE_VECTEUR(  VECT_ELEM=VECTEL32,   NUME_DDL=NUM32 )
FACTORISER( reuse=MATAS32,  MATR_ASSE=MATAS32 )
VECTAS32=RESOUDRE( reuse=VECTAS32,  MATR=MATAS32, CHAM_NO=VECTAS32, CHAM_CINE=VCIN32)
TEST_RESU(CHAM_NO=_F(NOEUD='NO1',
                     VALE_CALC_C=1.886953497+4.437969369j,
                     VALE_REFE_C=(1.8869534967818999+4.4379693694298998j),
                     REFERENCE='AUTRE_ASTER',
                     NOM_CMP='PRES',
                     CHAM_GD=VECTAS32,),
          )

DETRUIRE(CONCEPT=_F(NOM=NUM32))
DETRUIRE(CONCEPT=_F(NOM=MATAS32))
DETRUIRE(CONCEPT=_F(NOM=VCIN32))
DETRUIRE(CONCEPT=_F(NOM=VECTEL32))
DETRUIRE(CONCEPT=_F(NOM=VECTAS32))

# 3EME CALCUL AVEC MUMPS AVEC CHAR_CINE + SCOTCH:
#--------------------------------------------------------
NUM33=NUME_DDL(METHODE='MUMPS',MATR_RIGI=MEL3,RENUM='SCOTCH' );
MATAS33=ASSE_MATRICE(NUME_DDL=NUM33, MATR_ELEM=MEL3, CHAR_CINE=CHCINE  );
VCIN33=CALC_CHAR_CINE(   NUME_DDL=NUM33,  CHAR_CINE=CHCINE)
VECTEL33=CALC_VECT_ELEM(OPTION='CHAR_ACOU',  CHAM_MATER=CHAMPMAT, CHARGE=(CHARACOU,IMPEACOU) )
VECTAS33=ASSE_VECTEUR(  VECT_ELEM=VECTEL33,   NUME_DDL=NUM33 )
FACTORISER( reuse=MATAS33,  MATR_ASSE=MATAS33 )
VECTAS33=RESOUDRE( reuse=VECTAS33,  MATR=MATAS33, CHAM_NO=VECTAS33, CHAM_CINE=VCIN33 )
TEST_RESU(CHAM_NO=_F(NOEUD='NO1',
                     VALE_CALC_C=1.886953497+4.437969369j,
                     VALE_REFE_C=(1.8869534967818999+4.4379693694298998j),
                     REFERENCE='AUTRE_ASTER',
                     NOM_CMP='PRES',
                     CHAM_GD=VECTAS33,),
          )

DETRUIRE(CONCEPT=_F(NOM=NUM33))
DETRUIRE(CONCEPT=_F(NOM=MATAS33))
DETRUIRE(CONCEPT=_F(NOM=VCIN33))
DETRUIRE(CONCEPT=_F(NOM=VECTEL33))
DETRUIRE(CONCEPT=_F(NOM=VECTAS33))

# 3EME CALCUL AVEC MUMPS AVEC CHAR_CINE + PORD:
#--------------------------------------------------------
NUM34=NUME_DDL(METHODE='MUMPS',MATR_RIGI=MEL3,RENUM='PORD' );
MATAS34=ASSE_MATRICE(NUME_DDL=NUM34, MATR_ELEM=MEL3, CHAR_CINE=CHCINE  );
VCIN34=CALC_CHAR_CINE(   NUME_DDL=NUM34,  CHAR_CINE=CHCINE)
VECTEL34=CALC_VECT_ELEM(OPTION='CHAR_ACOU',  CHAM_MATER=CHAMPMAT, CHARGE=(CHARACOU,IMPEACOU) )
VECTAS34=ASSE_VECTEUR(  VECT_ELEM=VECTEL34,   NUME_DDL=NUM34 )
FACTORISER( reuse=MATAS34,  MATR_ASSE=MATAS34 )
VECTAS34=RESOUDRE( reuse=VECTAS34,  MATR=MATAS34, CHAM_NO=VECTAS34, CHAM_CINE=VCIN34 )
TEST_RESU(CHAM_NO=_F(NOEUD='NO1',
                     VALE_CALC_C=1.886953497+4.437969369j,
                     VALE_REFE_C=(1.8869534967818999+4.4379693694298998j),
                     REFERENCE='AUTRE_ASTER',
                     NOM_CMP='PRES',
                     CHAM_GD=VECTAS34,),
          )

DETRUIRE(CONCEPT=_F(NOM=NUM34))
DETRUIRE(CONCEPT=_F(NOM=MATAS34))
DETRUIRE(CONCEPT=_F(NOM=VCIN34))
DETRUIRE(CONCEPT=_F(NOM=VECTEL34))
DETRUIRE(CONCEPT=_F(NOM=VECTAS34))

# 3EME CALCUL AVEC MUMPS AVEC CHAR_CINE + METIS:
#--------------------------------------------------------
NUM35=NUME_DDL(METHODE='MUMPS',MATR_RIGI=MEL3,RENUM='METIS' );
MATAS35=ASSE_MATRICE(NUME_DDL=NUM35, MATR_ELEM=MEL3, CHAR_CINE=CHCINE  );
VCIN35=CALC_CHAR_CINE(   NUME_DDL=NUM35,  CHAR_CINE=CHCINE)
VECTEL35=CALC_VECT_ELEM(OPTION='CHAR_ACOU',  CHAM_MATER=CHAMPMAT, CHARGE=(CHARACOU,IMPEACOU) )
VECTAS35=ASSE_VECTEUR(  VECT_ELEM=VECTEL35,   NUME_DDL=NUM35 )
FACTORISER( reuse=MATAS35,  MATR_ASSE=MATAS35 )
VECTAS35=RESOUDRE( reuse=VECTAS35,  MATR=MATAS35, CHAM_NO=VECTAS35, CHAM_CINE=VCIN35 )
TEST_RESU(CHAM_NO=_F(NOEUD='NO1',
                     VALE_CALC_C=1.886953497+4.437969369j,
                     VALE_REFE_C=(1.8869534967818999+4.4379693694298998j),
                     REFERENCE='AUTRE_ASTER',
                     NOM_CMP='PRES',
                     CHAM_GD=VECTAS35,),
          )

DETRUIRE(CONCEPT=_F(NOM=NUM35))
DETRUIRE(CONCEPT=_F(NOM=MATAS35))
DETRUIRE(CONCEPT=_F(NOM=VCIN35))
DETRUIRE(CONCEPT=_F(NOM=VECTEL35))
DETRUIRE(CONCEPT=_F(NOM=VECTAS35))

X="""# 3EME CALCUL AVEC MUMPS AVEC CHAR_CINE + QAMD:
#--------------------------------------------------------
NUM36=NUME_DDL(METHODE='MUMPS',MATR_RIGI=MEL3,RENUM='QAMD' );
MATAS36=ASSE_MATRICE(NUME_DDL=NUM36, MATR_ELEM=MEL3, CHAR_CINE=CHCINE  );
VCIN36=CALC_CHAR_CINE(   NUME_DDL=NUM36,  CHAR_CINE=CHCINE)
VECTEL36=CALC_VECT_ELEM(OPTION='CHAR_ACOU',  CHAM_MATER=CHAMPMAT, CHARGE=(CHARACOU,IMPEACOU) )
VECTAS36=ASSE_VECTEUR(  VECT_ELEM=VECTEL36,   NUME_DDL=NUM36 )
FACTORISER( reuse=MATAS36,  MATR_ASSE=MATAS36 )
VECTAS36=RESOUDRE( reuse=VECTAS36,  MATR=MATAS36, CHAM_NO=VECTAS36, CHAM_CINE=VCIN36 )
TEST_RESU(CHAM_NO=_F( CHAM_GD = VECTAS36, NOEUD = 'NO1', NOM_CMP = 'PRES',
          VALE_C =  1.8869534967819E+00 +4.4379693694299E+00j ,   REFERENCE='AUTRE_ASTER') )
DETRUIRE(CONCEPT=_F(NOM=NUM36))
DETRUIRE(CONCEPT=_F(NOM=MATAS36))
DETRUIRE(CONCEPT=_F(NOM=VCIN36))
DETRUIRE(CONCEPT=_F(NOM=VECTEL36))
DETRUIRE(CONCEPT=_F(NOM=VECTAS36))"""
FIN()
