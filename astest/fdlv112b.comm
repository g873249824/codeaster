# MODIF  DATE 25/03/2013   AUTEUR DEVESA G.DEVESA 
# TITRE ANALYSE MODALE ET HARMONIQUE D UN BARRAGE EN INTERACTION
# fdlv112b.para = tps_job 300 mem_job 512Mo ncpus 1 liste_test R
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
#  SOL-FLUIDE-STRUCTURE
#
DEBUT(CODE=_F(NOM='FDLV112B', NIV_PUB_WEB='INTERNET',),DEBUG=_F(SDVERI='OUI') );
#
mail0 = LIRE_MAILLAGE(FORMAT='MED', VERI_MAIL=_F(VERIF='OUI'));
#
# Modification du maillage pour creer des mailles a un noeud pour
# placer les impedances sous la fondation du barrages.
#
mail=CREA_MAILLAGE(MAILLAGE=mail0,
                      CREA_POI1 =(
                                  _F(NOM_GROUP_MA = 'PBASE',
                                    NOEUD = 'N316'),
                                  _F(NOM_GROUP_MA = 'PFONDAT',
                                    GROUP_MA = 'SURFBAS2'),
                                 ),
                     );
#
# Modification du maillage pour creer des mailles a un noeud pour
# placer les impedances sous la fondation du barrages.
#


mail=DEFI_GROUP(reuse =mail,
                MAILLAGE=mail,
                CREA_GROUP_NO=_F(NOM='ISOLSTR',
                                 GROUP_MA=('SURFBAS2'),
                                ),
               );


#
# Orientation des elements d interface.
#
mail=MODI_MAILLAGE( reuse=mail,
                    MAILLAGE=mail,
                    ORIE_NORM_COQUE=(_F( VECT_NORM = (0., 0., 1.,),
                                         NOEUD = 'N963',
                                         GROUP_MA = 'IFLUSOL2'),
                                     _F( VECT_NORM = (1., 0., 0.,),
                                         NOEUD = 'N221',
                                         GROUP_MA = 'IFLUSTR2'),
                                     _F( VECT_NORM = (0., 0., -1.,),
                                         NOEUD = 'N316',
                                         GROUP_MA = 'SURFBAS2'),
                                     _F( VECT_NORM = (0., 0., 1.,),
                                         NOEUD = 'N1043',
                                         GROUP_MA = 'SLIBREM2'),
                                    ),
                   );
modele=AFFE_MODELE( MAILLAGE= mail,
                      AFFE=( _F(GROUP_MA=( 'STRVOU2' ),
                                PHENOMENE= 'MECANIQUE',
                                MODELISATION= '3D'),
                             _F(GROUP_MA = 'PBASE',
                                PHENOMENE = 'MECANIQUE',
                                MODELISATION = 'DIS_TR'),
                           ),
                      );
#
mat1= DEFI_MATERIAU( ELAS=_F( E= 3.6E+10,
                              RHO= 2400.,
                              NU= 0.2,
#                               AMOR_HYST = 0.1,
                            ),
                       ) ;
#
champmat = AFFE_MATERIAU( MAILLAGE= mail,
                            AFFE=_F( GROUP_MA= ('STRVOU2'),
                                   MATER= mat1 )
                           );

cara_ele=AFFE_CARA_ELEM(MODELE=modele,
                        DISCRET=(_F(GROUP_MA='PBASE',
                                    REPERE='GLOBAL',
                                    CARA='M_TR_D_N',
                                    VALE=(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,)),
                                 _F(GROUP_MA='PBASE',
                                    REPERE='GLOBAL',
                                    CARA='K_TR_D_N',
                                    VALE=(0.,0.,0.,0.,0.,0.))
                                 ),
                        );

#
#========================================
# ETAPE 1: Calul des impedances de sols
# --------
#========================================
#
#
# La structure est encastree a l interface
#-----------------------------------------

cond_lim = AFFE_CHAR_MECA( MODELE= modele,
                           DDL_IMPO=_F(
                                          #GROUP_NO=('ISOLSTR',),
                                          NOEUD = 'N316',
                                          DX= 0.,
                                          DY= 0.,
                                          DZ= 0.,
                                          DRX= 0.,
                                          DRY= 0.,
                                          DRZ= 0.,
                                      ),
                           LIAISON_SOLIDE=_F(GROUP_NO=('ISOLSTR',),)
                          );


#
#
# Calcul des matrices et vecteurs elementaires
#----------------------------------------------
rigi_ele = CALC_MATR_ELEM( MODELE= modele ,
                           OPTION= 'RIGI_MECA',
                           CHAM_MATER= champmat,
                           CHARGE= cond_lim,
                           CARA_ELEM=cara_ele,
                         );
#
mass_ele = CALC_MATR_ELEM( MODELE= modele ,
                           OPTION= 'MASS_MECA',
                           CHAM_MATER= champmat,
                           CHARGE= cond_lim,
                           CARA_ELEM=cara_ele,
                         );
#
nume_ddl = NUME_DDL( MATR_RIGI= rigi_ele );
#
# Assemblage des matrices et vecteurs
#-------------------------------------
#
MATRIGI= ASSE_MATRICE( MATR_ELEM= rigi_ele, NUME_DDL= nume_ddl );
MATMASS= ASSE_MATRICE( MATR_ELEM= mass_ele, NUME_DDL= nume_ddl );
#
# Calcul de la masse du barrage voute
#-------------------------------------
#
mass_bar=POST_ELEM( MODELE= modele ,
                    INFO= 1,
                    CHAM_MATER= champmat,
                    CARA_ELEM=cara_ele,
                    MASS_INER=_F(TOUT='OUI'),
                   );
#
# calcul des modes
#------------------
#
#
#
mode_rig =MACRO_MODE_MECA(MATR_RIGI= MATRIGI,
                       MATR_MASS= MATMASS,
                       CALC_FREQ=_F(FREQ=(0.1, 10.,
                                          20.,30.,
                                          40.,
                                          ),
                                  ),
                       VERI_MODE=_F(STOP_ERREUR='NON',),
                       FILTRE_MODE=_F(SEUIL=0.0003,),
                       IMPRESSION=_F(),);



#
#Calcul  du macro-element Dynamique
#-----------------------------------
#
interdy = DEFI_INTERF_DYNA (NUME_DDL= nume_ddl,
                            INTERFACE=_F(NOM= 'SOLBAR',
                                         TYPE= 'CRAIGB',
                                         NOEUD=('N316',),),
                                         #GROUP_NO=('ISOLSTR',),),
                           );
#
bamo = DEFI_BASE_MODALE ( CLASSIQUE=_F(INTERF_DYNA= interdy,
                                       NMAX_MODE= 999,
                                       MODE_MECA= mode_rig )
       );
#

mael = MACR_ELEM_DYNA (BASE_MODALE= bamo, );
#

#
#
# PRE-TRAITEMENT DE MISS3D:
#--------------------------
# MAILLAGE ET IMPEDANCES D INTERFACE
#
# IMPR_MACR_ELEM (MACR_ELEM_DYNA= mael,
#                 FORMAT= 'MISS_3D',
#                 GROUP_MA_INTERF = 'SURFBAS2',
#                 GROUP_MA_FLU_SOL='IFLUSOL2',
#                 GROUP_MA_SOL_SOL='SLIBREM2',
#                 GROUP_MA_FLU_STR='IFLUSTR2',
#                 IMPR_MODE_STAT= 'OUI',
#                 #IMPR_MODE_MECA= 'NON',
#                 IMPR_MODE_MECA= 'OUI',
#                 AMOR_REDUIT= (0.05),
#                 SOUS_TITRE= 'bar_ret',
#                 );
# 
# FO1=DEFI_FONCTION(   NOM_PARA='FREQ',
#           VALE=( 0., 1., 100., 1., ) );
# 
# IMPR_MISS_3D ( MACR_ELEM_DYNA= mael,
#               FREQ_INIT=0.,  FREQ_FIN=3.,  PAS=0.1,
#               EXCIT_SOL=_F( DIRECTION = (1., 0., 0.,), NOM_CHAM = 'ACCE',
#                          FONC_SIGNAL = FO1),
#           );

#
#
# TRAITEMENT DE MISS3D PAR EXEC_LOGICIEL
#---------------------------------------
#
# MACRO_MISS_3D( OPTION=_F(
#                           MODULE = 'MISS_IMPE'
#                            ),
#                PROJET='FDLV112B',
#                REPERTOIRE= './FDLV112B',
#                UNITE_IMPR_ASTER= 26,
#                UNITE_OPTI_MISS = 21,
#                UNITE_MODELE_SOL= 22,
#                UNITE_RESU_IMPE=25,
#                UNITE_RESU_FORC=28,
#                VERSION='V1_5',
#                PARAMETRE=_F(
#                             FREQ_MIN=0.1,
#                             FREQ_MAX=3.,
#                             FREQ_PAS=2.9,
#                             Z0= 5.,
#                             TYPE='BINAIRE',
#                             SURF='NON',
#                             ALGO = 'REGU',
#                             OFFSET_MAX=1000,
#                             OFFSET_NB=5000,
#                             ISSF='OUI'
#                             ),
#               );

TABSOL = DEFI_SOL_MISS(
   TITRE="SOL HOMOGENE",
   MATERIAU=(
      _F(E=3.0e11,   NU=0.16, RHO=2000., AMOR_HYST=0.10),
      _F(E=3.0e11,   NU=0.16, RHO=2000., AMOR_HYST=0.10),
   ),
   COUCHE=(
      _F(EPAIS=2.5, NUME_MATE=1, RECEPTEUR="OUI"),
      _F(EPAIS=2.5, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
      _F(EPAIS=4.0, NUME_MATE=1, RECEPTEUR="OUI"),
      _F(EPAIS=4.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
      _F(EPAIS=4.0, NUME_MATE=1, RECEPTEUR="OUI"),
      _F(EPAIS=4.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
      _F(EPAIS=5.0, NUME_MATE=1, RECEPTEUR="OUI"),
      _F(EPAIS=5.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
      _F(EPAIS=5.0, NUME_MATE=1, RECEPTEUR="OUI"),
      _F(EPAIS=5.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
      _F(EPAIS=5.5, NUME_MATE=1, RECEPTEUR="OUI"),
      _F(EPAIS=5.5, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
      _F(EPAIS=6.0, NUME_MATE=1, RECEPTEUR="OUI"),
      _F(EPAIS=6.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
      _F(EPAIS=6.5, NUME_MATE=1, RECEPTEUR="OUI"),
      _F(EPAIS=6.5, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
      _F(EPAIS=10., NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
      _F(SUBSTRATUM="OUI", NUME_MATE=2,),
   ),
   INFO=2,
);
#
CALC_MISS(
    TYPE_RESU='FICHIER',
    TABLE_SOL=TABSOL,
    MACR_ELEM_DYNA=mael,
    GROUP_MA_INTERF = 'SURFBAS2',
    GROUP_MA_FLU_SOL='IFLUSOL2',
    GROUP_MA_SOL_SOL='SLIBREM2',
    GROUP_MA_FLU_STR='IFLUSTR2',
    PROJET= 'FDLV112B',
    UNITE_IMPR_ASTER=26,
    UNITE_RESU_IMPE=25,
    UNITE_RESU_FORC=28,
    VERSION='V6.6',
    PARAMETRE=_F(
        FREQ_MIN=0.1,
        FREQ_MAX=3.0,
        FREQ_PAS=2.9,
        Z0= 5.,
        SURF='NON',
        ALGO = 'REGU',
        OFFSET_MAX=1000,
        OFFSET_NB=5000,
        ISSF='OUI',
    ),
);

nddlgen = NUME_DDL_GENE( BASE= bamo,
                          STOCKAGE= 'PLEIN',);

rigigen=PROJ_MATR_BASE(  BASE=bamo,  NUME_DDL_GENE=nddlgen,
                            MATR_ASSE=MATRIGI );

massgen=PROJ_MATR_BASE(  BASE=bamo,  NUME_DDL_GENE=nddlgen,
                            MATR_ASSE=MATMASS );

imp = LIRE_IMPE_MISS(BASE=bamo,  NUME_DDL_GENE=nddlgen,
                       UNITE_RESU_IMPE=25, FREQ_EXTR=3.,
                       ISSF='OUI',
                       #SYME='OUI',
                       #TYPE='BINAIRE',
                          );

imp0 = LIRE_IMPE_MISS(BASE=bamo,  NUME_DDL_GENE=nddlgen,
                       UNITE_RESU_IMPE=25, FREQ_EXTR=0.1,
                       ISSF='OUI',
                       #SYME='OUI',
                       #TYPE='BINAIRE',
                          );

impe = LIRE_IMPE_MISS(BASE=bamo,  NUME_DDL_GENE=nddlgen,
                       UNITE_RESU_IMPE=25, FREQ_EXTR=3.,
                       ISSF='OUI',
                       SYME='OUI',
                       #TYPE='BINAIRE',
                          );

impe0 = LIRE_IMPE_MISS(BASE=bamo,  NUME_DDL_GENE=nddlgen,
                       UNITE_RESU_IMPE=25, FREQ_EXTR=0.1,
                       ISSF='OUI',
                       SYME='OUI',
                       #TYPE='BINAIRE',
                          );

forc = LIRE_FORC_MISS(BASE=bamo,  NUME_DDL_GENE=nddlgen,
                       UNITE_RESU_FORC=28, FREQ_EXTR=3.,
                       ISSF='OUI',
                       NOM_CMP='DX',NOM_CHAM='ACCE',
                          );

forc0 = LIRE_FORC_MISS(BASE=bamo,  NUME_DDL_GENE=nddlgen,
                       UNITE_RESU_FORC=28, FREQ_EXTR=0.1,
                       ISSF='OUI',
                       NOM_CMP='DX',NOM_CHAM='ACCE',
                          );

rito=COMB_MATR_ASSE(COMB_R=(
                            _F(MATR_ASSE=impe0,
                               PARTIE='REEL',
                               COEF_R=1.0,),
                            _F(MATR_ASSE=rigigen,
                               COEF_R=1.0,),
                            ),
                               SANS_CMP='LAGR',
                   );

mato=COMB_MATR_ASSE(COMB_R=(
                            _F(MATR_ASSE=impe0,
                               PARTIE='REEL',
                               COEF_R=2.814e-3,),
                            _F(MATR_ASSE=impe,
                               PARTIE='REEL',
                               COEF_R=-2.814e-3,),
                            _F(MATR_ASSE=massgen,
                               COEF_R=1.0,),
                           ),
                               SANS_CMP='LAGR',
                   );

amto=COMB_MATR_ASSE(COMB_R=(
                            _F(MATR_ASSE=impe,
                               PARTIE='IMAG',
                               COEF_R=5.30e-2,),
                            _F(MATR_ASSE=impe0,
                               PARTIE='IMAG',
                               COEF_R=-5.30e-2,),
                           ),
                               SANS_CMP='LAGR',
                   );

modgen =MODE_ITER_SIMULT(
                       MATR_RIGI= rito,
                       MATR_MASS= mato,
                       #MATR_AMOR= amto,
                       # METHODE='QZ',
                       CALC_FREQ=_F(OPTION='BANDE',
                                    FREQ=(1.,20.,), ),
                       VERI_MODE=_F(STOP_ERREUR='NON',),
                       );


##
MODEF =REST_GENE_PHYS(    RESU_GENE=modgen,
                          NOM_CHAM='DEPL',
                          TOUT_ORDRE='OUI'
                                        );

TEST_RESU(RESU=(_F(NUME_ORDRE=1,
                   PARA='FREQ',
                   RESULTAT=MODEF,
                   VALE_CALC=3.5817000000000001,
                   TOLE_MACHINE=1.E-4,
                   CRITERE='RELATIF',
                   ),
                _F(NUME_ORDRE=2,
                   PARA='FREQ',
                   RESULTAT=MODEF,
                   VALE_CALC=3.6490999999999998,
                   TOLE_MACHINE=1.E-4,
                   CRITERE='RELATIF',
                   ),
                _F(NUME_ORDRE=3,
                   PARA='FREQ',
                   RESULTAT=MODEF,
                   VALE_CALC=4.9565999999999999,
                   TOLE_MACHINE=1.E-4,
                   CRITERE='RELATIF',
                   ),
                _F(NUME_ORDRE=4,
                   PARA='FREQ',
                   RESULTAT=MODEF,
                   VALE_CALC=6.2492999999999999,
                   TOLE_MACHINE=1.E-4,
                   CRITERE='RELATIF',
                   ),
                _F(NUME_ORDRE=5,
                   PARA='FREQ',
                   RESULTAT=MODEF,
                   VALE_CALC=7.4569000000000001,
                   TOLE_MACHINE=1.E-4,
                   CRITERE='RELATIF',
                   ),
                ),
               );

imto=COMB_MATR_ASSE(COMB_C=(
                            _F(MATR_ASSE=imp,
                               COEF_C=1.0+0.j,),
                            _F(MATR_ASSE=rigigen,
                               COEF_C=1.+0.1j,),
                            ),
                               SANS_CMP='LAGR',
                    );

imto0=COMB_MATR_ASSE(COMB_C=(
                            _F(MATR_ASSE=imp0,
                               COEF_C=1.0+0.j,),
                            _F(MATR_ASSE=rigigen,
                               COEF_C=1.+0.1j,),
                            ),
                               SANS_CMP='LAGR',
                    );

dyge = DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='GENE',
                          MATR_MASS = massgen,
                          MATR_RIGI = imto,
                          SOLVEUR=_F( METHODE='LDLT', ),
                          FREQ = 3.,
                          EXCIT =(
                                  _F( VECT_ASSE_GENE = forc,
                                      COEF_MULT=1.0,),
                                  ),
                        );

dyge0 = DYNA_VIBRA(TYPE_CALCUL='HARM',BASE_CALCUL='GENE',
                          MATR_MASS = massgen,
                          MATR_RIGI = imto0,
                          SOLVEUR=_F( METHODE='LDLT', ),
                          FREQ = 0.1,
                          EXCIT =(
                                  _F( VECT_ASSE_GENE = forc0,
                                      COEF_MULT=1.0,),
                                  ),
                        );


dyha = REST_GENE_PHYS (RESU_GENE = dyge,
                       NOM_CHAM=('DEPL','VITE','ACCE',),
                      );

dyha0 = REST_GENE_PHYS (RESU_GENE = dyge0,
                       NOM_CHAM=('DEPL','VITE','ACCE',),
                      );


dx253 = RECU_FONCTION ( RESULTAT = dyha, NOM_CHAM = 'ACCE',
                        NOEUD = 'N253', NOM_CMP = 'DX', );

dx253_0 = RECU_FONCTION ( RESULTAT = dyha0, NOM_CHAM = 'ACCE',
                        NOEUD = 'N253', NOM_CMP = 'DX', );

mdx253=CALC_FONCTION(EXTRACTION=_F(FONCTION=dx253,
                                     PARTIE='MODULE',),);

mdx253_0=CALC_FONCTION(EXTRACTION=_F(FONCTION=dx253_0,
                                     PARTIE='MODULE',),);

# VALEURS DE NON REGRESSION CORRIGEES SUITE A LA FICHE 16690
TEST_FONCTION(VALEUR=(_F(VALE_CALC=5.6882999999999999,
                         TOLE_MACHINE=1.E-3,
                         VALE_PARA=3.0,
                         FONCTION=mdx253,
                         ),
                      _F(VALE_CALC=1.0014000000000001,
                         TOLE_MACHINE=1.E-3,
                         VALE_PARA=0.10000000000000001,
                         FONCTION=mdx253_0,
                         ),
                      ),
               );

FIN( );






