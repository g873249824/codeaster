# TITRE  FISSURE SEMI-ELLIPTIQUE AVEC MILIEU INFINI
# ======================================================================
# COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# METHODE X-FEM ET ELEMENTS COHESIFS

DEBUT(CODE=_F( NIV_PUB_WEB='INTERNET'),
      DEBUG=_F(SDVERI='OUI'),
      IGNORE_ALARM=('CALCULEL2_63','MODELISA3_31'))

# explication des alarmes ignorees :
# <CALCULEL2_63> : DANS UN MODELE, IL EXISTE DES ELEMENTS DE TYPE "BORD" QUI N'ONT PAS DE VOISIN AVEC RIGIDITE
#  LE MODELE PROVOQUANT CES ALARMES NE SERT QU'A LA VISUALISATION
# <MODELISA3_31> : CERTAINS NOEUDS DES MAILLES SUR LESQUELLES ON IMPOSE DNOR=0 SONT SITUES A L'ANGLE DE LA
#                  STURCTURES, LEUR VECTEUR NORMAL MOYEN PREND DONC EN COMPTE DES MAILLES SITUEES A 90 DEGRES
#                  C'EST TOUT A FAIT NORMAL.


# para de la fissure
# demi grand axe et demi petit axe
a=25.
b= 6.

PRE_GMSH();
# pas d etape de raffinement de maillage  
MA=LIRE_MAILLAGE(INFO=1);

MA=DEFI_GROUP(reuse=MA,
              MAILLAGE=MA,
              CREA_GROUP_MA=(_F(NOM='P1',GROUP_MA='GM59'),
                             _F(NOM='FONDINI',GROUP_MA='GM60'),
                             _F(NOM='M_HAUT',GROUP_MA='GM61'),
                             _F(NOM='M_BAS',GROUP_MA='GM62'),
                             _F(NOM='SYM_X',GROUP_MA='GM63'),
                             _F(NOM='SYM_Z',GROUP_MA='GM64'),
                             _F(NOM='VOL',GROUP_MA='GM65'),),);

MA=DEFI_GROUP(reuse=MA,
              MAILLAGE=MA,
              CREA_GROUP_NO=(_F(GROUP_MA='P1'),
                             _F(GROUP_MA='SYM_X'),
                             _F(GROUP_MA='SYM_Z'),),);

MA=MODI_MAILLAGE(reuse=MA,
                 MAILLAGE=MA,
                 ORIE_PEAU_3D=_F(GROUP_MA=('M_HAUT','M_BAS','SYM_X','SYM_Z')));
#------------------------------------------------------------------------------------------
#                   calcul mecanique
#------------------------------------------------------------------------------------------

# materiau, il faut ajouter des parametres
# on charge a 1 MPa
# on va mettre une contrainte critique a 5MPa
# et s arranger pour avoir une longueur cohesive de 10mm
E = 210000.
nu = 0.3
Sc = 2.
Gc = 0.25e-3
pena_lagr = 2.0
MAT=DEFI_MATERIAU(ELAS=_F(E=E,NU=nu),
                  RUPT_FRAG=_F(GC=Gc,SIGM_C=Sc,PENA_LAGR=pena_lagr,),);
                            
# attention, il est imperatif de ne definir des elements finis que sur ces groupes,
# car le maillage contient des mailles de faces situees dans le plan median de la structure
# sur lesquelles il ne faut surtout par creer d'elements (de bords...)                            
MO_SAIN=AFFE_MODELE(MAILLAGE=MA,
                    AFFE=_F(GROUP_MA=('VOL','M_HAUT','M_BAS'),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D'),);

# PARAMETRES DE LA FISSURE
# on garde une fissure de type elliptique
# mais on etend les axes
FISS=DEFI_FISS_XFEM(MAILLAGE=MA,
                    TYPE_DISCONTINUITE='COHESIF',  
                    DEFI_FISS=_F(FORM_FISS      = 'ELLIPSE',
                                 DEMI_GRAND_AXE = 50.*a,
                                 DEMI_PETIT_AXE = 50.*b,
                                 CENTRE         = (0.,0.,0.),
                                 VECT_X         = (1.,0.,0.),
                                 VECT_Y         = (0.,0.,1.),
                                 GROUP_MA_BORD  = 'FONDINI',
                                 ),
                    );
# on met du contact dans le modele
MODX=MODI_MODELE_XFEM(MODELE_IN=MO_SAIN,
                      FISSURE=FISS,
                      CONTACT='MORTAR');

# definition de la loi cohesive lors de l attribution du contact
CTX = DEFI_CONTACT(MODELE         = MODX,
                   FORMULATION    = 'XFEM',
                   FROTTEMENT     = 'SANS',
                   ZONE=(_F(INTEGRATION='GAUSS',
                            ORDRE_INT=4,
                            ALGO_CONT='CZM',
                            FISS_MAIT=FISS,
                            ALGO_LAGR='VERSION2',
                            RELATION='CZM_LIN_MIX',
                   )));

CHAMPMAT=AFFE_MATERIAU(MAILLAGE=MA,
                       MODELE=MODX,
                       AFFE=_F(TOUT='OUI',
                               MATER=MAT))

# conditions de symetrie sur les plans X=0 et Y=0 (surveiller DDL enrichis)
# condition blocage mouvement rigide Z
# (hors de la fissure, pas d impact DDL enrichis a priori)
CH_BLO=AFFE_CHAR_MECA(MODELE=MODX,
                      DDL_IMPO=_F(GROUP_NO='P1',DY=0.),
                      LIAISON_GROUP=(_F(GROUP_NO_1='SYM_X',
                                     GROUP_NO_2='SYM_X',
                                     DDL_1='DX',
                                     DDL_2='DX',
                                     COEF_MULT_1=0.5,
                                     COEF_MULT_2=0.5,
                                     COEF_IMPO=0.0),
                                  _F(GROUP_NO_1='SYM_Z',
                                     GROUP_NO_2='SYM_Z',
                                     DDL_1='DZ',
                                     DDL_2='DZ',
                                     COEF_MULT_1=0.5,
                                     COEF_MULT_2=0.5,
                                     COEF_IMPO=0.0),
                                 ),);
# application de la pression
CH_PRE=AFFE_CHAR_MECA(MODELE=MODX,
                      PRES_REP=_F(GROUP_MA=('M_HAUT','M_BAS'),
                                  PRES=-1.))

# On ne met pas de pilotage ms une fonction rampe
LINST = DEFI_LIST_REEL(VALE=(0., 0.5, 1.),);
RAMPE=DEFI_FONCTION(NOM_PARA='INST',
                    PROL_GAUCHE='LINEAIRE',
                    PROL_DROITE='LINEAIRE',
                    VALE=( 0., 0.,
                           1., 1.));
#
RESU=STAT_NON_LINE(MODELE=MODX,
                   CHAM_MATER=CHAMPMAT,
                   EXCIT=(_F(CHARGE=CH_BLO,),
                          _F(CHARGE=CH_PRE,
                             FONC_MULT=RAMPE,),),
                   CONTACT=CTX,
                   COMPORTEMENT = _F(RELATION = 'ELAS' , GROUP_MA = 'VOL',),
                   INCREMENT = _F(LIST_INST = LINST,),
                   NEWTON  = _F(REAC_ITER = 1),
                   CONVERGENCE = _F(RESI_GLOB_RELA = 1.E-6,
                                    ITER_GLOB_MAXI = 15),
                   SOLVEUR    = _F(METHODE = 'MUMPS',
                                   NPREC=-1,
                                   ),
                   ARCHIVAGE = _F(CHAM_EXCLU=('VARI_ELGA',),INST=1.0),
                   INFO=1,);

#------------------------------------------------------------------------------------------
#                   post-traitements
#------------------------------------------------------------------------------------------

# visu : pas indispensable pour le test pour l instant

# calcul de G et K : on remplace par une methode cohesive
CG=CALC_G(RESULTAT=RESU,
          OPTION='CALC_K_G',
          INST=1.0,
          THETA=_F(FISSURE=FISS,
                   NUME_FOND=1,
                   NB_POINT_FOND=5,),
          LISSAGE=_F(LISSAGE_THETA='LAGRANGE',
                     LISSAGE_G='LAGRANGE_NO_NO',),);

IMPR_TABLE(TABLE=CG,UNITE=6);

# on n appelle plus post_k1_k2_k3
# cela n a plus de sens pour un calcul cohesif

#----------------------------------------------------------------------
#              TEST DE K1 EN 2 POINTS
#----------------------------------------------------------------------

# abscisse curviligne max
# le perimetre d'un quart d'ellipse est pi * int( sqrt(a^2 * cos(t)^2 + b^2 * sin(t)^2) , t=0..pi/2)
s_max = 26.7

# calc_g
TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.08,
           VALE_CALC=4.35144948555,
           VALE_REFE=4.0679999999999996,
           NOM_PARA='K1',
           TABLE=CG,
           FILTRE=_F(NOM_PARA='ABSC_CURV',
                     VALE=0.0,),
           )

TEST_TABLE(REFERENCE='ANALYTIQUE',
           PRECISION=0.04,
           VALE_CALC=1.92568556636,
           VALE_REFE=1.9928999999999999,
           NOM_PARA='K1',
           TABLE=CG,
           FILTRE=_F(NOM_PARA='ABSC_CURV',
                     VALE=2.66245E+01,),
           )

# on enleve les tests POST_K1_K2_K3

FIN()
