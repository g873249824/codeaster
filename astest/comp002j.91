#######################################################################
def ERREUR(X,Xref,coef=1.,prec_zero=0.):
    "calcul erreur relative entre deux nombres"
    if (Xref<prec_zero) : return 0.
    else :
        err= abs((X*coef-Xref)/Xref)
        return err

#######################################################################
def RENOMME(i,N_pas,label_cal,ch_param,RESU,R_SI):
# On renomme les composantes en fonction de  l'ordre de discrétisation
        N = N_pas[i]
        chN=label_cal[i]+str(N)
        for ch in ch_param:
                j=ch_param.index(ch)
                chnew=ch+chN
##Extraction par type de variable 
                if R_SI[j] == None:
                        R_SI[j]=CALC_TABLE( TABLE=RESU[i],
                                     TITRE = ' ',
                                     ACTION=( _F(OPERATION='EXTR',
                                            NOM_PARA=('INST',ch,),),
                                              _F(OPERATION='RENOMME',
                                                NOM_PARA=(ch,chnew,),),
                                                                ),);
                else:
                        TMP_S=CALC_TABLE( TABLE=RESU[i],
                                     TITRE = ' ',
                                     ACTION=( _F(OPERATION='EXTR',
                                            NOM_PARA=('INST',ch,),),
                                                _F(OPERATION='RENOMME',
                                                NOM_PARA=(ch,chnew,),),
                                                                ),);
                        R_SI[j]=CALC_TABLE( reuse=R_SI[j], TABLE=R_SI[j],
                                     TITRE = ' ',
                                        ACTION=( _F(OPERATION='COMB',
                                        TABLE=TMP_S,NOM_PARA='INST',),
                                                ),);
                        DETRUIRE ( CONCEPT = _F (NOM = TMP_S,),)
 
     
        return R_SI
#######################################################################
def TEST_ECART(ch_param2,label_cal,N_pas,Ncal,nbequi,R_SI,prec_ecart,prec_zero,coef_para):
   #CALCUL des ecarts relatifs
   CH_V1 = ['INST']
   for ch in ch_param2 :
        i=ch_param2.index(ch)
        chref1 = ch + label_cal[nbequi] + str(N_pas[nbequi]) 
        chref2 = ch + label_cal[Ncal-nbequi+1] + str(N_pas[Ncal-nbequi+1])
        chref = [chref1, chref2]   
        # chref1 utilisé pour les calculs équivalents, chref2 pour la discretisation en temps
        for j in range(Ncal) :
                coef = 1.0
                ch_cal = ch + label_cal[j] + str(N_pas[j]) 
                ch_err = 'ER_' + ch_cal
                if j < nbequi :
                        if (j==0) : coef = 1/coef_para[i]
                        iref=0
                else :
                        iref=1
                        if (i==0) : CH_V1.append(ch_cal)
#               calcul de l'erreur (ecart relatif)
                preczero=prec_zero[i]    
                ch_for ='ERREUR('+ch_cal+','+chref[iref]+','+str(coef)+','+str(preczero)+')'
                ERR_REL = FORMULE (NOM_PARA = (ch_cal,chref[iref]),VALE = ch_for)
                R_SI[i] = CALC_TABLE(TABLE =R_SI[i], reuse=R_SI[i],TITRE = 'R_SI'+str(j),
                          ACTION = (_F(OPERATION='OPER',NOM_PARA=ch_err,FORMULE=ERR_REL),),);
                DETRUIRE ( CONCEPT = _F (NOM = ERR_REL,),)                
        for j in range(Ncal) :
           ch_cal = ch + label_cal[j] + str(N_pas[j]) 
           ch_err = 'ER_' + ch_cal
           TEST_TABLE(TABLE=R_SI[i],
                      NOM_PARA=ch_err,REFERENCE='ANALYTIQUE',
                      TYPE_TEST='MAX',
                      VALE_CALC=0,
                      VALE_REFE=0,
                      CRITERE='ABSOLU',
                      TOLE_MACHINE=prec_ecart[j],
                      PRECISION=prec_ecart[j],);
   return
        
#######################################################################
