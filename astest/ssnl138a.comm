# TITRE VALIDATION DE L'ALGORITHME D'OPTIMISATION DE DDL_STAB
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                    
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

DEBUT(CODE=_F(NOM='SSNL138A', NIV_PUB_WEB='INTERNET', VISU_EFICAS='NON'), DEBUG=_F(SDVERI='OUI'))

MAILLAGE  =  LIRE_MAILLAGE(FORMAT='MED')


MA         = CREA_MAILLAGE( MAILLAGE = MAILLAGE,
                            LINE_QUAD = _F(TOUT = 'OUI'),
                          );


TEMPS1     = DEFI_LIST_REEL( DEBUT=1.10,
                             INTERVALLE=_F(JUSQU_A=1.28,
                             NOMBRE=2,)
                           )


MATER      = DEFI_MATERIAU( ELAS = _F(E  = 1.0,
                                      NU = 0.,
                                      ALPHA = 0.,
                                     ),
                            ECRO_LINE  = _F(SY = 0.01, D_SIGM_EPSI = 2.0),
                            NON_LOCAL  = _F(C_GRAD_VARI = 1.0)
                          )


CHMAT      = AFFE_MATERIAU(MAILLAGE=MA,
                           AFFE=_F(TOUT='OUI',
                                   MATER=MATER),);

COEF1      = DEFI_FONCTION( NOM_PARA    = 'INST',
                            PROL_DROITE = 'LINEAIRE',
                            VALE=( 0.0,  0.0,
                                   1.0,  2.0,)
                          )


MO         = AFFE_MODELE(MAILLAGE=MA,
                         AFFE=_F(TOUT='OUI',
                                 PHENOMENE='MECANIQUE',
                                 MODELISATION='D_PLAN_GVNO',
                                ),
                        );

#***********************************************************************
#    CHARGEMENT MECANIQUE 
#*********************************************************************** 

CH_U1  = AFFE_CHAR_CINE( MODELE    = MO,
                         MECA_IMPO = _F( GROUP_MA  = 'Gauche',
                                         DX        =  0.,
                                         )
                        )

CH_U2  = AFFE_CHAR_CINE( MODELE    = MO,
                         MECA_IMPO = _F( GROUP_MA  = 'Droite',
                                         DX        =  1.,
                                         )
                        )

CH_U3  = AFFE_CHAR_CINE( MODELE    = MO,
                         MECA_IMPO = _F( GROUP_MA  = 'Haut',
                                         DY        =  0.,
                                         )
                        )

CH_U4  = AFFE_CHAR_CINE( MODELE    = MO,
                         MECA_IMPO = _F( GROUP_MA  = 'Bas',
                                         DY        =  0.,
                                         )
                        )

#***********************************************************************
#    CALCUL NON LOCAL
#***********************************************************************

EVOL   = STAT_NON_LINE( MODELE     = MO,
                        CHAM_MATER = CHMAT,
                        EXCIT      = ( _F( CHARGE        = CH_U1),
                                       _F( CHARGE        = CH_U2,
                                           FONC_MULT     = COEF1),
                                       _F( CHARGE        = CH_U3),
                                       _F( CHARGE        = CH_U4),
                                     ),
                        CRIT_STAB  = _F( TYPE            ='STABILITE',
                                         RIGI_GEOM       = 'NON',
                                         NB_FREQ         = 25,
                                         COEF_DIM_ESPACE = 2,
                                         DDL_STAB        = ('DAMG'),
                                        ),
                        COMP_INCR  = _F( TOUT            = 'OUI',
                                         RELATION        = 'ENDO_CARRE',
                                         ),
                        NEWTON     = _F( MATRICE         = 'TANGENTE',
                                         REAC_ITER_ELAS  = 1,
                                         REAC_ITER       = 1,),
                        CONVERGENCE= _F( RESI_GLOB_RELA  = 1.E-6,),
                        INCREMENT  = _F( LIST_INST       = TEMPS1,),
                        AFFICHAGE  = _F( INFO_RESIDU     = 'OUI',)
                     )

#***********************************************************************
#    TEST DU CRITERE DE STABILITE
#***********************************************************************

TEST_RESU(RESU=_F(NUME_ORDRE=1,
                  PARA='CHAR_STAB',
                  RESULTAT=EVOL,
                  VALE_CALC=3.4309380000000002E-08,
                  TOLE_MACHINE=4.9999999999999998E-07,
                  ),
          )

TEST_RESU(RESU=_F(NUME_ORDRE=2,
                  PARA='CHAR_STAB',
                  RESULTAT=EVOL,
                  VALE_CALC=-5.5982439999999999E-09,
                  TOLE_MACHINE=4.9999999999999998E-07,
                  ),
          )

FIN();
