# ======================================================================
# COPYRIGHT (C) 1991 - 2017  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'), DEBUG=_F(SDVERI='OUI'))

k=100000.
m=2533.
xi=.05

# pulsations propres du systeme
w1=sqrt(k/m)
w2=sqrt(5.*k/m)

# alpha et beta pour un amortissement de Rayleigh equivalent a xi
alpha = 2.*xi/(w1+w2)
beta = 2.*xi*w1*w2/(w1+w2)


MAILLAG0=LIRE_MAILLAGE(FORMAT="ASTER",);


MAILLAGE=CREA_MAILLAGE(MAILLAGE=MAILLAG0,
    CREA_POI1=(
        _F(NOM_GROUP_MA='MASSE',   GROUP_NO = 'MASSE', ),
    ),
)


MODELE=AFFE_MODELE(MAILLAGE=MAILLAGE,
                   AFFE=(_F(GROUP_MA=('RESK','RES2K',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_T',),
                         _F(GROUP_MA='MASSE',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='DIS_T',),),);

CARA=AFFE_CARA_ELEM(MODELE=MODELE,
                    DISCRET=(_F(CARA='K_T_D_L',
                                GROUP_MA='RESK',
                                VALE=(k,1.0,1.0,),),
                             _F(CARA='M_T_L',
                                GROUP_MA='RESK',
                                VALE=(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,),),
                             _F(CARA='K_T_D_L',
                                GROUP_MA='RES2K',
                                VALE=(2.*k,1.0,1.0,),),
                             _F(CARA='M_T_L',
                                GROUP_MA='RES2K',
                                VALE=(0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,),),
                             _F(CARA='M_T_D_N',
                                GROUP_MA='MASSE',
                                VALE=m,),),);

MAT=DEFI_MATERIAU(ELAS=_F(E=160000000000.0,
                          NU=0.3,
                          RHO=13000.0,),);

CHAMPMAT=AFFE_MATERIAU(MAILLAGE=MAILLAGE,
                       AFFE=_F(TOUT='OUI',
                               MATER=MAT,),);

COND_LIM=AFFE_CHAR_MECA(MODELE=MODELE,
                        DDL_IMPO=(_F(NOEUD=('P1','P4',),
                                     DX=0.0,
                                     DY=0.0,
                                     DZ=0.0,),
                                  _F(GROUP_NO='MASSE',
                                     DY=0.0,
                                     DZ=0.0,),),);

ASSEMBLAGE(MODELE=MODELE,
           CHAM_MATER=CHAMPMAT,
           CARA_ELEM=CARA,
           CHARGE=COND_LIM,
           NUME_DDL=CO('NUMEROTA'),
           MATR_ASSE=(_F(MATRICE=CO('MATRMASS'),
                         OPTION='MASS_MECA',),
                      _F(MATRICE=CO('MATRRIGI'),
                         OPTION='RIGI_MECA',),),);


# construction de la matrice d'amortissement de Rayleigh (alpha.K+beta.M)
MATAMOR=COMB_MATR_ASSE(COMB_R=(_F(MATR_ASSE=MATRRIGI,
                                  COEF_R=alpha,),
                               _F(MATR_ASSE=MATRMASS,
                                  COEF_R=beta,),
                                  ),);

MAS=POST_ELEM(MASS_INER=_F(TOUT='OUI',),
              MODELE=MODELE,
              CARA_ELEM=CARA,);

MODES=CALC_MODES(CALC_FREQ=_F(NMAX_FREQ=2,
                              ),
                 MATR_RIGI=MATRRIGI,
                 MATR_MASS=MATRMASS,
                 SOLVEUR_MODAL=_F(METHODE='SORENSEN',
                                  ),
                 )

MODES=NORM_MODE(reuse =MODES,
                MODE=MODES,
                NORME='MASS_GENE',
                INFO=2,);

MODES=CALC_CHAMP(reuse =MODES,
                 RESULTAT=MODES,
                 CONTRAINTE=('SIEF_ELGA','EFGE_ELNO',),);

MODES=CALC_CHAMP(reuse =MODES,
                 RESULTAT=MODES,
                 FORCE='FORC_NODA',);

MODES=CALC_CHAMP(reuse =MODES,
                 RESULTAT=MODES,
                 FORCE='REAC_NODA',);

TEST_RESU(RESU=(_F(RESULTAT=MODES,
                   NUME_ORDRE=1,
                   PARA='FREQ',
                   VALE_REFE=1.0,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=1.000005841,),
                _F(RESULTAT=MODES,
                   NUME_ORDRE=2,
                   PARA='FREQ',
                   VALE_REFE=2.236,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=2.236081039,),),);

DDLGENE=NUME_DDL_GENE(BASE=MODES,
                      STOCKAGE='DIAG',);

AMORGEN=PROJ_MATR_BASE(BASE=MODES,
                       NUME_DDL_GENE=DDLGENE,
                       MATR_ASSE=MATAMOR,);

#-----------------------------------------------------------------------
# CALCUL DES MODES STATIQUES POUR L'ENTRAINEMENT
#-----------------------------------------------------------------------

MODE_STA=MODE_STATIQUE(MATR_RIGI=MATRRIGI,
                       MATR_MASS=MATRMASS,
                       MODE_STAT=_F(NOEUD=('P1','P4',),
                                    AVEC_CMP='DX',),);

MODE_STA=CALC_CHAMP(reuse =MODE_STA,
                    RESULTAT=MODE_STA,
                    CONTRAINTE=('SIEF_ELGA','EFGE_ELNO',),);

MODE_STA=CALC_CHAMP(reuse =MODE_STA,
                    RESULTAT=MODE_STA,
                    FORCE='FORC_NODA',);

MODE_STA=CALC_CHAMP(reuse =MODE_STA,
                    RESULTAT=MODE_STA,
                    FORCE='REAC_NODA',);

TEST_RESU(RESU=(_F(RESULTAT=MODE_STA,
                   NOEUD_CMP=('P1','DX',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P2',
                   VALE_REFE=0.6,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.6,),
                _F(RESULTAT=MODE_STA,
                   NOEUD_CMP=('P1','DX',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P3',
                   VALE_REFE=0.4,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.4,),
                _F(RESULTAT=MODE_STA,
                   NOEUD_CMP=('P4','DX',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P2',
                   VALE_REFE=0.4,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.4,),
                _F(RESULTAT=MODE_STA,
                   NOEUD_CMP=('P4','DX',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P3',
                   VALE_REFE=0.6,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.6,),),);

#-----------------------------------------------------------------------
# CALCUL DES MODES STATIQUES POUR LA CORRECTION STATIQUE
#-----------------------------------------------------------------------

MODE_CO2=MODE_STATIQUE(MATR_RIGI=MATRRIGI,
                       MATR_MASS=MATRMASS,
                       PSEUDO_MODE=_F(NOEUD=('P1','P4',),
                                      AVEC_CMP='DX',),);

MODE_CO2=CALC_CHAMP(reuse =MODE_CO2,
                    RESULTAT=MODE_CO2,
                    CONTRAINTE=('SIEF_ELGA','EFGE_ELNO',),);

MODE_CO2=CALC_CHAMP(reuse =MODE_CO2,
                    RESULTAT=MODE_CO2,
                    FORCE='FORC_NODA',);

MODE_CO2=CALC_CHAMP(reuse =MODE_CO2,
                    RESULTAT=MODE_CO2,
                    FORCE='REAC_NODA',);

TEST_RESU(RESU=(_F(RESULTAT=MODE_CO2,
                   NOEUD_CMP=('P1','DX',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P2',
                   VALE_REFE=0.01317,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.0131716,),
                _F(RESULTAT=MODE_CO2,
                   NOEUD_CMP=('P1','DX',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P3',
                   VALE_REFE=0.01216,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.0121584,),
                _F(RESULTAT=MODE_CO2,
                   NOEUD_CMP=('P4','DX',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P2',
                   VALE_REFE=0.01216,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.0121584,),
                _F(RESULTAT=MODE_CO2,
                   NOEUD_CMP=('P4','DX',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P3',
                   VALE_REFE=0.01317,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.0131716,),),);

# -------------------------------
#   DEFINITION DU SEISME
#--------------------------------

F0 = 1.0;
F1 = 1.5;
F2 = 2.0;

OMEGA1 = ((2 * pi) * F1);
OMEGA2 = ((2 * pi) * F2);

A1 = 0.5;
A2 = 0.5;

L_FREQ=DEFI_LIST_REEL(DEBUT=0.01,
                      INTERVALLE=_F(JUSQU_A=20.0,
                                    PAS=0.002,),);

FSRO0 = FORMULE(VALE="""10.0""", NOM_PARA='FREQ',);

FSRO1 = FORMULE(VALE="""
A1*(2*pi*FREQ)**2/abs(OMEGA1**2-(2*pi*FREQ)**2)""",
                NOM_PARA='FREQ',);


FSRO2 = FORMULE(VALE="""
A2*(2*pi*FREQ)**2/abs(OMEGA2**2-(2*pi*FREQ)**2)""",
                NOM_PARA='FREQ',);


SRO0=CALC_FONC_INTERP(FONCTION=FSRO0,
                      LIST_PARA=L_FREQ,
                      NOM_PARA='FREQ',
                      INTERPOL='LOG',
                      PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',);

SRO1=CALC_FONC_INTERP(FONCTION=FSRO1,
                      LIST_PARA=L_FREQ,
                      NOM_PARA='FREQ',
                      INTERPOL='LOG',
                      PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',);

SRO2=CALC_FONC_INTERP(FONCTION=FSRO2,
                      LIST_PARA=L_FREQ,
                      NOM_PARA='FREQ',
                      INTERPOL='LOG',
                      PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',);

SPEC1=DEFI_NAPPE(NOM_PARA='AMOR',
                 PARA=(0.0,xi,),
                 FONCTION=(SRO0,SRO1,),
                 INTERPOL=('LIN','LOG',),
                  PROL_DROITE='LINEAIRE',
                  PROL_GAUCHE='LINEAIRE',);

SPEC2=DEFI_NAPPE(NOM_PARA='AMOR',
                 PARA=(0.0,xi,),
                 FONCTION=(SRO0,SRO2,),
                 INTERPOL=('LIN','LOG',),
                 PROL_DROITE='LINEAIRE',
                  PROL_GAUCHE='LINEAIRE',);

MUQACQC=COMB_SISM_MODAL(MODE_MECA=MODES,
                        AMOR_GENE=AMORGEN,
#                        AMOR_REDUIT=(xi,xi),
                        MASS_INER=MAS,
                        CORR_FREQ='NON',
                        EXCIT=(_F(AXE=(1.0,0.0,0.0,),
                                  SPEC_OSCI=SPEC1,
                                  ECHELLE=1.0,
                                  NOEUD='P1',),
                               _F(AXE=(1.0,0.0,0.0,),
                                  SPEC_OSCI=SPEC2,
                                  ECHELLE=1.0,
                                  NOEUD='P4',),),
                        MULTI_APPUI='DECORRELE',
                        COMB_MODE=_F(TYPE='CQC',),
                        DEPL_MULT_APPUI=_F(NOM_CAS='DEPL EN X NUL EN P1 ET P4',
                                           NUME_CAS=1,
                                           MODE_STAT=MODE_STA,
                                           NOEUD_REFE='P1',
                                           NOEUD=('P1','P4',),
                                           DX=0.0,),
                        OPTION=('DEPL','SIEF_ELGA','EFGE_ELNO','FORC_NODA','REAC_NODA',),
                        IMPRESSION=_F(TOUT='OUI',),
                                       );

#On retrouve bien avec l'utilisation de AMOR_GENE le meme resulat qu'avec un AMOR_REDUIT equivalent

TEST_RESU(RESU=(_F(RESULTAT=MUQACQC,
                   NOEUD_CMP=('DIR','X',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P2',
                   VALE_REFE=0.00565,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.00565049549,),
                _F(RESULTAT=MUQACQC,
                   NOEUD_CMP=('DIR','X',),
                   NOM_CHAM='DEPL',
                   NOM_CMP='DX',
                   NOEUD='P3',
                   VALE_REFE=0.00565157,
                   REFERENCE='ANALYTIQUE',
                   VALE_CALC=0.00565210016,),),);

FIN();
