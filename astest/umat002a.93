#######################################################################

# definition du trajet de chargement 3D
        
#######################################################################


#parametres vitesse de sollicitation
#VITESSE NON DEFINIE
t_0 = 1.0
# liste d'archivage
temps_ar=DEFI_LIST_REEL( VALE =[t_0*i for i in range(9)],)
#fonctions chargement  
calibrage = 3.5;
Ctau = ((2 * calibrage) * ((1 + POISSON) / (2 * YOUNG)));
Ctrac = (calibrage * (1 / YOUNG));
Y_trace=DEFI_LIST_REEL( VALE = (0., 150., 150., -50, 0., 50., -150., -150., 0.),)
Trace=DEFI_FONCTION(NOM_PARA='INST',
                    VALE_PARA= temps_ar,
	            VALE_FONC= Y_trace,		 
                    PROL_DROITE='EXCLU',
                    PROL_GAUCHE='EXCLU',);

Y_Devi_1=DEFI_LIST_REEL( VALE = (0., 75., 150., 150, 0., -150., -150., -75., 0.),)
Devi_1=DEFI_FONCTION(NOM_PARA='INST',
                    VALE_PARA= temps_ar,
	            VALE_FONC= Y_Devi_1,		 
                     PROL_DROITE='EXCLU',
                     PROL_GAUCHE='EXCLU',);

Y_Devi_2=DEFI_LIST_REEL( VALE = (0., 75., -50., 100, 0., -100., 50., -75., 0.),)
Devi_2=DEFI_FONCTION(NOM_PARA='INST',
                    VALE_PARA= temps_ar,
	            VALE_FONC= Y_Devi_2,		 
                     PROL_DROITE='EXCLU',
                     PROL_GAUCHE='EXCLU',);

Y_tauxy=DEFI_LIST_REEL( VALE = (0., 200., 100., 300, 0., -300., -100., -200., 0.),)
TAU_xy=DEFI_FONCTION(NOM_PARA='INST',
                    VALE_PARA= temps_ar,
	            VALE_FONC= Y_tauxy,		 
                     PROL_DROITE='EXCLU',
                     PROL_GAUCHE='EXCLU',);

Y_tauxz=DEFI_LIST_REEL( VALE = (0., -100., 100., 200, 0., -200., -100., 100., 0.),)
TAU_xz=DEFI_FONCTION(NOM_PARA='INST',
                    VALE_PARA= temps_ar,
	            VALE_FONC= Y_tauxz,		 
                     PROL_DROITE='EXCLU',
                     PROL_GAUCHE='EXCLU',);

Y_tauyz=DEFI_LIST_REEL( VALE = (0., 0., 200., -100, 0., 100., -200., 0., 0.),)
TAU_yz=DEFI_FONCTION(NOM_PARA='INST',
                    VALE_PARA= temps_ar,
	            VALE_FONC= Y_tauyz,		 
                     PROL_DROITE='EXCLU',
                     PROL_GAUCHE='EXCLU',);

eps_xy=CALC_FONCTION(COMB=_F(FONCTION=TAU_xy,
                             COEF=Ctau,),);

eps_xz=CALC_FONCTION(COMB=_F(FONCTION=TAU_xz,
                             COEF=Ctau,),);

eps_yz=CALC_FONCTION(COMB=_F(FONCTION=TAU_yz,
                             COEF=Ctau,),);

eps_xx=CALC_FONCTION(COMB=(_F(FONCTION=Trace,
                              COEF=Ctrac,),
                           _F(FONCTION=Devi_1,
                              COEF=Ctrac,),),);

eps_yy=CALC_FONCTION(COMB=(_F(FONCTION=Trace,
                              COEF=Ctrac,),
                           _F(FONCTION=Devi_1,
                              COEF=-(Ctrac),),
                           _F(FONCTION=Devi_2,
                              COEF=Ctrac,),),);

eps_zz=CALC_FONCTION(COMB=(_F(FONCTION=Trace,
                              COEF=Ctrac,),
                           _F(FONCTION=Devi_2,
                              COEF=-(Ctrac),),),);
eps_def = [eps_xx, eps_yy, eps_zz, eps_xy, eps_xz, eps_yz]
#rotation tenseur des def
#angle de precession, nutation, rotation propre
psi,teta,phi=0.9,0.7,0.4
cps,cte,cph=cos(psi),cos(teta),cos(phi)
sps,ste,sph=sin(psi),sin(teta),sin(phi)
#matrice de passage
p11,p21,p31 = cph*cps-sph*cte*sps,cph*sps+sph*cte*cps,sph*ste
p12,p22,p32 = -sph*cps-cph*cte*sps,-sph*sps+cph*cte*cps,cph*ste
p13,p23,p33 = ste*sps,-ste*cps,cte
V1= [p11, p21, p31]
V2= [p12, p22, p32]
V3= [p13, p23, p33]
#eps apres rotation
VI = [[V1,V1],[V2,V2],[V3,V3],[V1,V2],[V1,V3],[V2,V3]]
eps_rot = [None]*6
for vect_i in VI:
	i = VI.index(vect_i)
	V_COEF = PROD_ROT(vect_i[0],vect_i[1])
	eps_rot [i] =CALC_FONCTION(COMB=(
			_F(FONCTION=eps_xx,COEF=V_COEF[0],),
			_F(FONCTION=eps_yy,COEF=V_COEF[1],),
			_F(FONCTION=eps_zz,COEF=V_COEF[2],),
			_F(FONCTION=eps_xy,COEF=V_COEF[3],),
			_F(FONCTION=eps_xz,COEF=V_COEF[4],),
			_F(FONCTION=eps_yz,COEF=V_COEF[5],),
				),);
#eps apres symetrie
eps_sym = [eps_zz,eps_xx,eps_yy,eps_xz,eps_yz,eps_xy]

V_EPS = [eps_def,eps_sym,eps_rot]


#trace chargement

IMPR_FONCTION(#FORMAT='XMGRACE',PILOTE='INTERACTIF',
              COURBE=(_F(FONCTION=eps_def[0],),
                      _F(FONCTION=eps_def[1],),
                      _F(FONCTION=eps_def[2],),
                      _F(FONCTION=eps_def[3],),
                      _F(FONCTION=eps_def[4],),
                      _F(FONCTION=eps_def[5],),
                      ),
              UNITE=29,);
