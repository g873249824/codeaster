# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: sarah.plessis at edf.fr
#
#    Cas test sslv135f : cube 3D
#                        Essai de chargement cyclique bi-axial
#                        critere en formule
#----------------------------------------------------------------------
#        Unites : Newton , Millimetre , Seconde (N,MM,S,->Mpa)
#----------------------------------------------------------------------
#
#               y       a
#               I<------------->                     a = 10 mm
#                     Face1                                    2
#                   (dessus)                         S = 100 mm
#               P1              P2
#               o--------------o
#              /I             /I
#        P5   / I        P6  / I
#            o--+-----------o  I
#            I  I   Face5   I  I  Face4
#  Face3     I  I (derri.)  I  I (cote d.)
# (cote g.)  I  I           I  I
#            I  I  P3       I  I P4
#            I  o-----------I--o      - x
#            I /            I /
#         P7 I/          P8 I/
#            o--------------o
#
#          /       Face2
#         z      (dessous)
#
#----------------------------------------------------------------------
#
# DANS CE CAS TEST NOUS TESTONS LE CRITERE EN FORMULE AUX POINTS DE GAUSS
# ET AUX NOEUDS
#----------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB='INTERNET'),DEBUG=_F(SDVERI='OUI'),
               IGNORE_ALARM=('PREPOST4_27'))

CUBE = LIRE_MAILLAGE(FORMAT='MED', )

CUBE=DEFI_GROUP(reuse = CUBE,
                ALARME='OUI',
                CREA_GROUP_NO=(_F(GROUP_MA='FACE1',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE2',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE3',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE4',
                                CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE5',
                                  CRIT_NOEUD='TOUS'),
                               _F(GROUP_MA='FACE6',
                                  CRIT_NOEUD='TOUS')),
                MAILLAGE=CUBE,);

CUBE=DEFI_GROUP(reuse = CUBE,
                ALARME='OUI',
                CREA_GROUP_MA=(_F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE1',
                                  NOM='FACE1_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE2',
                                  NOM='FACE2_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE3',
                                  NOM='FACE3_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE4',
                                  NOM='FACE4_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE5',
                                  NOM='FACE5_3D'),
                               _F(OPTION='APPUI',
                                  TYPE_APPUI='AU_MOINS_UN',
                                  GROUP_NO='FACE6',
                                  NOM='FACE6_3D')),
                MAILLAGE=CUBE,);

MANCOF=DEFI_FONCTION( NOM_PARA='EPSI',
                      INTERPOL='LOG',
                      PROL_DROITE='LINEAIRE',
                      PROL_GAUCHE='LINEAIRE',
                      VALE=(  0.00226,    5800000.,
                              0.00230,    4600000.,
                              0.00250,     239284.,
                              0.00270,     149535.,
                              0.00300,      73544.,
                              0.00350,      33821.,
                              0.00600,       2850.,
                              0.00850,       1068.,
                              0.01000,        562.,
                              1.00000,          1.,  ))

COEF   = DEFI_FONCTION ( NOM_PARA    ='INST',
                          PROL_DROITE  ='LINEAIRE',
                          PROL_GAUCHE ='LINEAIRE',
                          VALE        =( 0.,    0.,
                                         1.,  100.,
                                         2.,    0.,
                                         2.75, 75.,
                                         3.5,   0.,
                                        ))

ACIER   = DEFI_MATERIAU   ( ELAS           =_F( E         = 200000.,
                                                NU        = .3,
                                                ALPHA     = 0. ),
                            FATIGUE        =_F( MANSON_COFFIN = MANCOF, ),)

LINST = DEFI_LIST_REEL   ( DEBUT      =  0.,
                           INTERVALLE =_F (JUSQU_A= 3.5, NOMBRE = 14  ));

TROISD   = AFFE_MODELE    ( MAILLAGE   =    CUBE,
                            AFFE       =_F ( PHENOMENE    = 'MECANIQUE',
                                             MODELISATION = '3D',
                                             TOUT         = 'OUI'    ))

MAT_ELAS   = AFFE_MATERIAU    ( MAILLAGE    =   CUBE,
                           AFFE        =_F ( TOUT       = 'OUI',
                                             MATER      = ACIER,
                                             ))

CRIT1 = FORMULE(VALE='abs((EPSN1_1-EPSN1_2)/2)',
                NOM_PARA=['EPSN1_1', 'EPSN1_2'],)

MANCO1 = FORMULE(VALE=' 0.022524751*(NBRUP**(-0.1619)) ',
                 NOM_PARA='NBRUP',)

# CHARGEMENT SELON LES 2 AXES X ET Y
# ----------------------------------

TR_CS  = AFFE_CHAR_MECA (
           MODELE       =  TROISD,
           FACE_IMPO    =(_F( GROUP_MA= 'FACE3' ,DX=0.),
                          _F( GROUP_MA= 'FACE2' ,DY=0.) ),
           DDL_IMPO     =(_F( GROUP_NO= 'P3' , DZ=0.) ),
           FORCE_FACE   =(_F( GROUP_MA= 'FACE4', FX=12.),
                          _F( GROUP_MA= 'FACE1', FY=-6.)
                          ));

# 1er CALCUL AVEC STAT_NON_LINE
# -------------------------

SOL_NL = STAT_NON_LINE ( TITRE      =
                'TEST TRACTION-COMPRESSION ALTERNEE - PLAN CRITIQUE',
                        MODELE     =   TROISD,
                        CHAM_MATER =   MAT_ELAS,
                        EXCIT      =_F ( CHARGE       = TR_CS,
                                         FONC_MULT    = COEF,
                                         TYPE_CHARGE  = 'FIXE_CSTE'),
                        COMPORTEMENT  =_F ( RELATION     = 'ELAS',
                                         DEFORMATION  = 'PETIT',
                                         TOUT         = 'OUI'    ),
                        INCREMENT  =_F ( LIST_INST    = LINST, ),
                        NEWTON     =_F ( MATRICE      = 'ELASTIQUE',
                                         REAC_INCR    = 0 ))

SOL_NL = CALC_CHAMP(reuse=SOL_NL,
                    RESULTAT=SOL_NL,
                    CONTRAINTE='SIGM_ELNO',
                    DEFORMATION=('EPSI_ELGA','EPSI_ELNO','EPSP_ELGA','EPSP_ELNO',),);

SOL_NL = CALC_CHAMP(reuse=SOL_NL,
                    RESULTAT=SOL_NL,
                    GROUP_MA=('FACE1_3D', 'FACE2_3D', 'FACE3_3D', 'CUBE'),
                    CONTRAINTE='SIGM_NOEU',
                    DEFORMATION='EPSI_NOEU',);

##################################################################
#                                                                #
#                     Test avec SOL_NL                           #
#                                                                #
##################################################################


# TEST DU CRITERE 1 AVEC 'DOMA_NOEUD' et avec SOL_NL
#          avec la FORMULE DE MANSON
##################################################################
FATN_WF1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT_ELAS,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT1,
                           COURBE_GRD_VIE  = 'FORM_VIE',
                           FORMULE_VIE = MANCO1,
                           PROJECTION    = 'UN_AXE'
                         )
TEST_RESU(CHAM_NO=_F(NOEUD='N1',
                     REFERENCE='ANALYTIQUE',
                     NOM_CMP='ENDO1',
                     PRECISION=5.0000000000000002E-05,
                     CHAM_GD=FATN_WF1,
                     VALE_CALC= 1.08363975E-05,
                     VALE_REFE=1.0836397304524899E-05,),
          )

# TEST DU CRITERE 1 AVEC 'DOMA_ELGA' et avec SOL_NL
#          avec la FORMULE DE MANSON
##################################################################
FATM_WF1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                         OPTION        = 'DOMA_ELGA',
                         TYPE_CHARGE   = 'NON_PERIODIQUE',
                         MAILLAGE      = CUBE,
                         GROUP_MA      = ('CUBE'),
                         RESULTAT      = SOL_NL,
                         CHAM_MATER    = MAT_ELAS,
                         CRITERE       = 'FORMULE_CRITERE',
                         FORMULE_GRDEQ   = CRIT1,
                         COURBE_GRD_VIE  = 'FORM_VIE',
                         FORMULE_VIE = MANCO1,
                         PROJECTION    = 'UN_AXE'
                       )
TEST_RESU(CHAM_ELEM=_F(REFERENCE='ANALYTIQUE',
                       POINT=3,
                       NOM_CMP='ENDO1',
                       PRECISION=5.0000000000000002E-05,
                       MAILLE='M60',
                       CHAM_GD=FATM_WF1,
                       VALE_CALC= 1.08363975E-05,
                       VALE_REFE=1.0836397304524899E-05,),
          )

# TEST DU CRITERE 1 AVEC 'DOMA_NOEUD' et avec SOL_NL
#      par INTERPOLATION de la COURBE DE MANSON
##################################################################
FATN_W1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                           OPTION        = 'DOMA_NOEUD',
                           TYPE_CHARGE   = 'NON_PERIODIQUE',
                           RESULTAT      = SOL_NL,
                           CHAM_MATER    = MAT_ELAS,
                           GROUP_MA      = ('FACE1', 'FACE2', 'FACE3'),
                           MAILLAGE      = CUBE,
                           CRITERE       = 'FORMULE_CRITERE',
                           FORMULE_GRDEQ   = CRIT1,
                           COURBE_GRD_VIE  = 'MANSON_COFFIN',
                           PROJECTION    = 'UN_AXE'
                         )
TEST_RESU(CHAM_NO=_F(NOEUD='N1',
                     REFERENCE='ANALYTIQUE',
                     NOM_CMP='ENDO1',
                     PRECISION=2.0000000000000002E-05,
                     CHAM_GD=FATN_W1,
                     VALE_CALC= 3.26558686E-05,
                     VALE_REFE=3.2655868578361902E-05,),
          )

# TEST DU CRITERE 1 AVEC 'DOMA_ELGA' et avec SOL_NL
#      par INTERPOLATION de la COURBE DE MANSON
##################################################################
FATM_W1=CALC_FATIGUE( TYPE_CALCUL   = 'FATIGUE_MULTI',
                         OPTION        = 'DOMA_ELGA',
                         TYPE_CHARGE   = 'NON_PERIODIQUE',
                         MAILLAGE      = CUBE,
                         GROUP_MA      = ('CUBE'),
                         RESULTAT      = SOL_NL,
                         CHAM_MATER    = MAT_ELAS,
                         CRITERE       = 'FORMULE_CRITERE',
                         FORMULE_GRDEQ   = CRIT1,
                         COURBE_GRD_VIE  = 'MANSON_COFFIN',
                         PROJECTION    = 'UN_AXE'
                       )
TEST_RESU(CHAM_ELEM=_F(REFERENCE='ANALYTIQUE',
                       POINT=3,
                       NOM_CMP='ENDO1',
                       PRECISION=1.0000000000000001E-05,
                       MAILLE='M60',
                       CHAM_GD=FATM_W1,
                       VALE_CALC= 3.26558686E-05,
                       VALE_REFE=3.2655868578361902E-05,),
          )

FIN( )
