# MODIF  DATE 07/06/2002   AUTEUR DURAND C.DURAND 
# TITRE  CRITERES DE FATIGUE CROSSLAND ET DANG VAN PAPADOPOULOS
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================
#
DEBUT(  CODE=_F(  NOM = 'SZLZ107A',NIV_PUB_WEB='INTERNET') )

TAUN1=DEFI_FONCTION(    NOM_PARA='INST',
                          VALE=(  1.,   411.,
                                  2.,     0.,
                                  3.,  -411.,   )  )

TAUN2=DEFI_FONCTION(    NOM_PARA='INST',
                          VALE=(  1.,   205.,
                                  2.,     0.,
                                  3.,  -205.,   )  )

TAUN3=DEFI_FONCTION(    NOM_PARA='INST',
                          VALE=(  1.,     0.,
                                  2.,     0.,
                                  3.,     0.,   )  )

WHOL=DEFI_FONCTION(       NOM_PARA='SIGM',
                            INTERPOL='LOG',
                          PROL_DROITE='LINEAIRE',
                         PROL_GAUCHE='LINEAIRE', 
                         VALE=(   138.,    1000000.,
                                  152.,     500000.,
                                  165.,     200000.,
                                  180.,     100000.,
                                  200.,      50000.,
                                  250.,      20000.,
                                  295.,      12000.,
                                  305.,      10000.,
                                  340.,       5000.,
                                  430.,       2000.,
                                  540.,       1000.,
                                  690.,        500.,
                                  930.,        200.,
                                 1210.,        100.,
                                 1590.,         50.,
                                 2210.,         20.,
                                 2900.,         10.,    )  )

MAT0=DEFI_MATERIAU(    FATIGUE=_F(  WOHLER = WHOL,
                                   D0 = 540.97,
                                   TAU0 = 352.)  )

#
#-----------------------------------------------------------------------
TAB_1=POST_FATIGUE(    CHARGEMENT='PERIODIQUE',
                         HISTOIRE=_F(  SIGM_XX = TAUN1,
                                       SIGM_YY = TAUN3,
                                       SIGM_ZZ = TAUN3,
                                       SIGM_XY = TAUN2,
                                       SIGM_XZ = TAUN3,
                                       SIGM_YZ = TAUN3),
                          CRITERE='CROSSLAND',
                            MATER=MAT0                 )

TEST_TABLE(        TABLE=TAB_1,
                 NOM_PARA='PRES_HYDRO_MAX',
                     VALE=137.,
                PRECISION=1.E-5                )

TEST_TABLE(        TABLE=TAB_1,
                 NOM_PARA='AMPLI_CISSION',
                     VALE=313.579,
                PRECISION=1.E-5                )

TEST_TABLE(        TABLE=TAB_1,
                 NOM_PARA='VALE_CRITERE',
                     VALE=-8.281,
                PRECISION=1.E-3                )

#
#-----------------------------------------------------------------------
TAB_2=POST_FATIGUE(    CHARGEMENT='PERIODIQUE',
                         HISTOIRE=_F(  SIGM_XX = TAUN1,
                                       SIGM_YY = TAUN3,
                                       SIGM_ZZ = TAUN3,
                                       SIGM_XY = TAUN2,
                                       SIGM_XZ = TAUN3,
                                       SIGM_YZ = TAUN3),
                          CRITERE='PAPADOPOULOS',
                            MATER=MAT0                 )

TEST_TABLE(        TABLE=TAB_2,
                 NOM_PARA='PRES_HYDRO_MAX',
                     VALE=137.,
                PRECISION=1.E-5                )

TEST_TABLE(        TABLE=TAB_2,
                 NOM_PARA='RAYON_SPHERE',
                     VALE=313.579,
                PRECISION=1.E-5                )

TEST_TABLE(        TABLE=TAB_2,
                 NOM_PARA='VALE_CRITERE',
                     VALE=-8.281,
                PRECISION=1.E-3                )

#
#-----------------------------------------------------------------------
TAB_3=POST_FATIGUE(    CHARGEMENT='PERIODIQUE',
                         HISTOIRE=_F(  SIGM_XX = TAUN1,
                                       SIGM_YY = TAUN3,
                                       SIGM_ZZ = TAUN3,
                                       SIGM_XY = TAUN2,
                                       SIGM_XZ = TAUN3,
                                       SIGM_YZ = TAUN3),
                          CRITERE='PAPADOPOULOS',
                          DOMMAGE='WOHLER',
                            MATER=MAT0                 )

TEST_TABLE(        TABLE=TAB_3,
                 NOM_PARA='PRES_HYDRO_MAX',
                     VALE=137.,
                PRECISION=1.E-5                )

TEST_TABLE(        TABLE=TAB_3,
                 NOM_PARA='RAYON_SPHERE',
                     VALE=313.579,
                PRECISION=1.E-5                )

TEST_TABLE(        TABLE=TAB_3,
                 NOM_PARA='VALE_CRITERE',
                     VALE=-8.281,
                PRECISION=1.E-3                )

FIN()
#
