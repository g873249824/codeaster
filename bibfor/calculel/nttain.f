      SUBROUTINE NTTAIN (MODELE,MATE,CARELE,CHARGE,INFOCH,NUMEDD,SOLVEU,
     &                   TIME,EPSR,LONCH,MATASS,MAPREC,CNCHCI,CNRESI,
     &                   VTEMP,VTEMPM,VTEMPP,VEC2ND,CHLAPM,CHLAPP,CI1,
     &                   CI2,TESTI)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 02/10/2012   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER      LONCH
      REAL*8       EPSR,TESTI
      CHARACTER*1  CI1,CI2
      CHARACTER*19 SOLVEU,MAPREC
      CHARACTER*24 MODELE,MATE,CARELE,CHARGE,INFOCH,NUMEDD,TIME
      CHARACTER*24 MATASS,CNCHCI,CNRESI
      CHARACTER*24 VTEMP,VTEMPM,VTEMPP,VEC2ND,CHLAPM,CHLAPP
C
C ----------------------------------------------------------------------
C
C COMMANDE THER_MOBI_NLINE : ITERATIONS
C
C ----------------------------------------------------------------------
C
C     IN  VTEMP  : CHAMP DE TEMPERATURE A L'INSTANT PRECEDENT
C     VAR VTEMPM : ITERE PRECEDENT DU CHAMP DE TEMPERATURE
C     OUT VTEMPP : ITERE COURANT   DU CHAMP DE TEMPERATURE
C
C
      COMPLEX*16         CBID
C
C
      INTEGER      K,JVARE,J2ND,JTEMPM,JTEMPP,JTEMP
      REAL*8       R8BID,TESTN,RBID
      CHARACTER*1  TYPRES
      CHARACTER*19 CHSOL
      CHARACTER*24 BIDON,VERESI,VARESI,CRITER
C
C-----------------------------------------------------------------------
      INTEGER IRET
C-----------------------------------------------------------------------
      DATA TYPRES        /'R'/
      DATA CHSOL         /'&&NTTAIN.SOLUTION'/
      DATA BIDON         /'&&FOMULT.BIDON'/
      DATA VERESI        /'&&VERESI           .RELR'/
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      VARESI = '&&VARESI'
      CRITER = '&&RESGRA_GCPC'
C
      CI1 = ' '
      CI2 = ' '
C
C --- RECUPERATION D'ADRESSES
C
      CALL JEVEUO (VEC2ND(1:19)//'.VALE','L',J2ND)
C
C ======================================================================
C
C --- VECTEURS ELEMENTAIRES DU SEGOND MEMBRE
C
        CALL VETRTH (MODELE,CHARGE,INFOCH,CARELE,MATE,TIME,VTEMP,
     &               VTEMPM,CHLAPM,CHLAPP,VERESI)
C
C --- ASSEMBLAGE DU SEGOND MEMBRE
C
        CALL ASASVE (VERESI,NUMEDD,TYPRES,VARESI)
        CALL ASCOVA('D',VARESI,BIDON,'INST',R8BID,TYPRES,CNRESI)
        CALL JEVEUO (CNRESI(1:19)//'.VALE','L',JVARE)
C
C --- RESOLUTION (VTEMPP CONTIENT LE SECOND MEMBRE, CHSOL LA SOLUTION)
C
        CALL JEVEUO (VTEMPP(1:19)//'.VALE','E',JTEMPP )
        DO 130 K = 1,LONCH
          ZR(JTEMPP+K-1) = ZR(J2ND+K-1) + ZR(JVARE+K-1)
 130    CONTINUE
C
        CALL RESOUD(MATASS,MAPREC,SOLVEU,CNCHCI,0     ,
     &              VTEMPP,CHSOL ,'V'   ,RBID  ,CBID  ,
     &              CRITER,.TRUE.,0     ,IRET  )
C
C --- RECOPIE DANS VTEMPP DU CHAMP SOLUTION CHSOL
C
        CALL COPISD('CHAMP_GD','V',CHSOL,VTEMPP(1:19))
        CALL JEVEUO (VTEMPM(1:19)//'.VALE','E',JTEMPM)
        CALL JEVEUO (VTEMP(1:19)//'.VALE' ,'E',JTEMP)
        CALL JEVEUO (VTEMPP(1:19)//'.VALE','L',JTEMPP)
C
C --- EVALUATION DE !!T(I+1)-T(I)!! ET ACTUALISATION DE LA TEMPERATURE
C
        TESTI = 0.D0
        TESTN = 0.D0
        DO 131 K = 1,LONCH
          TESTI = TESTI + (ZR(JTEMPP+K-1)-ZR(JTEMPM+K-1))**2
          TESTN = TESTN + (ZR(JTEMPP+K-1))**2
          ZR(JTEMP +K-1) = ZR(JTEMPM+K-1)
          ZR(JTEMPM+K-1) = ZR(JTEMPP+K-1)
 131    CONTINUE
        IF (TESTN.GT.0) TESTI = TESTI/TESTN
C
C --- A-T-ON CONVERGE ?
C
        TESTI = SQRT(TESTI)
        IF (TESTI.LE.EPSR) THEN
          CI1 = '*'
        ELSE
          CI1 = ' '
        END IF
C-----------------------------------------------------------------------
      CALL JEEXIN (CRITER(1:19)//'.CRTI',IRET)
      IF ( IRET .NE. 0 ) THEN
         CALL JEDETR ( CRITER(1:19)//'.CRTI' )
         CALL JEDETR ( CRITER(1:19)//'.CRTR' )
         CALL JEDETR ( CRITER(1:19)//'.CRDE' )
      ENDIF
      CALL JEDEMA()
      END
