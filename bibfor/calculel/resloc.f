      SUBROUTINE RESLOC( MODELE, LIGREL, YAXFEM, YATHM , TBGRCA, PERMAN,
     &                   CHTIME, MATE  , SIGMAM, SIGMAP, CHSIGX, CHDEPM,
     &                   CHDEPP, CHERRM, LCHAR , NCHAR , TABIDO, CHVOIS,
     &                   CVOISX, CHELEM )
C ......................................................................
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 12/02/2013   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_20
C
C     BUT:
C         CALCUL DE L'ESTIMATEUR D'ERREUR EN RESIDU
C
C         OPTION : 'ERME_ELEM'
C
C     ARGUMENTS:
C     ----------
C
C      ENTREE :
C-------------
C     MODELE : NOM DU MODELE
C     LIGREL : NOM DU LIGREL
C     YAXFEM : EST-CE UNE MODELISATION XFEM ?
C     YATHM  : EST-CE UNE MODELISATION THM ?
C     TBGRCA : TABLEAU GRANDEURS CARACTERISTIQUES
C              (UTILISE SI MODELISATION HM)
C     PERMAN : SI OUI, EST-CE UNE MODELISATION PERMANENTE ?
C     CHTIME : CARTE D'INSTANTS POUR L'INSTANT ACTUEL
C     MATE   : NOM DU CONCEPT CHAMP_MATERIAU
C     SIGMAM : NOM DU CHAMP DE CONTRAINTES AUX NOEUDS PAR ELEMENT
C              A L'INSTANT PRECEDENT
C     SIGMAP : NOM DU CHAMP DE CONTRAINTES AUX NOEUDS PAR ELEMENT
C              A L'INSTANT ACTUEL
C     CHDEPM : NOM DU CHAMP DE DEPLACEMENTS A L'INSTANT PRECEDENT
C     CHDEPP : NOM DU CHAMP DE DEPLACEMENTS A L'INSTANT ACTUEL
C     CHERRM : NOM DU CHAMP D'INDICATEURS A L'INSTANT PRECEDENT
C     LCHAR  : LISTE DES CHARGES
C     NCHAR  : NOMBRE DE CHARGES
C     TABIDO : TABLEAU D'ENTIERS CONTENANT DES ADRESSES
C          1 : IATYMA : ADRESSE DU VECTEUR TYPE MAILLE (NUMERO <-> NOM)
C          2 : IAGD   : ADRESSE DU VECTEUR GRANDEUR (NUMERO <-> NOM)
C          3 : IACMP  : ADRESSE DU VECTEUR NOMBRE DE COMPOSANTES
C                 (NUMERO DE GRANDEUR <-> NOMBRE DE COMPOSANTES)
C          4 : ICONX1 : ADRESSE DE LA COLLECTION CONNECTIVITE
C          5 : ICONX2 : ADRESSE DU POINTEUR DE LONGUEUR DE LA
C                       CONNECTIVITE
C     CHVOIS : NOM DU CHAMP DES VOISINS
C     CVOISX : POUR XFEM, NOM DU CHAMP DES VOISINS DES SOUS-ELEMENTS
C
C      SORTIE :
C-------------
C      CHELEM  : NOM DU CHAM_ELEM_ERREUR PRODUIT
C                SI CHELEM EXISTE DEJA, ON LE DETRUIT.
C
C REMARQUE : RESLOC ET QIRES1 DOIVENT RESTER TRES SIMILAIRES
C ......................................................................
      IMPLICIT NONE

C DECLARATION PARAMETRES D'APPELS
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNOM
      INTEGER       NCHAR
      INTEGER       TABIDO(5)
      CHARACTER*8   MODELE, LCHAR(1)
      CHARACTER*24  SIGMAM, SIGMAP, CHDEPM, CHDEPP, CHERRM
      CHARACTER*24  CHTIME, CHVOIS, CHSIGX, CVOISX, CHELEM
      CHARACTER*(*) LIGREL, MATE
      REAL*8        TBGRCA(3)
      LOGICAL       YAXFEM, YATHM, PERMAN
C
C DECLARATION VARIABLES LOCALES
C
      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'RESLOC' )
C
      INTEGER NBCMP
      PARAMETER ( NBCMP = 12 )
C
      INTEGER NBCHIX
      PARAMETER ( NBCHIX = 20 )
C
      INTEGER I,J,ICMP(NBCMP),IATYMA, IAGD, IACMP, ICONX1, ICONX2
      INTEGER IRET,IRET1,IRET2,IRET4,IRET5,IRET6,IRET7
      INTEGER JCELDP,JCELVP,JCELDM,JCELVM
      INTEGER IADE1,IAPTM1,IAVA1,NUMGD1
      INTEGER IADE2,IAPTM2,IAVA2,NUMGD2
      INTEGER IADE3,IAPTM3,IAVA3,NUMGD3
      INTEGER IAREPE
      INTEGER IBID,IER
      INTEGER NBRIN
      REAL*8  RCMP(2)
      CHARACTER*1  BASE
      CHARACTER*8  LICMP(NBCMP),LPAIN(NBCHIX),LPAOUT(1),KCMP
      CHARACTER*8  TYPC3
      CHARACTER*16 OPTION
      CHARACTER*19 CARTE1,CARTE2,CARTE3,NOMGD1,NOMGD2,NOMGD3
      CHARACTER*19 PINTTO,CNSETO,LONCHA,PMILTO
      CHARACTER*24 CHGEOM,LCHIN(NBCHIX),LCHOUT(1),CHFOR1,CHFOR2,CHFOR3
      COMPLEX*16   CCMP
C
      INTEGER NTYCHX
      PARAMETER ( NTYCHX = 9 )
      INTEGER     ITYCHA(NTYCHX)
      CHARACTER*5 KTYCH(NTYCHX)

C DEB-------------------------------------------------------------------
C====
C 1. PREALABLES
C====
C
      BASE = 'V'
C
      CALL MEGEOM(MODELE,CHGEOM)

C
C ------- TEST SUR LE TYPE DE CHARGEMENT DES BORDS --------------------
C
C   ATTENTION : POUR UN MEME CHARGEMENT (FORCE_FACE OU PRES_REP), SEULE
C   LA DERNIERE CHARGE EST CONSIDEREE (REGLE DE SURCHARGE ACTUELLEMENT)
C --- ON ALARME POUR LES CHARGES NON TRAITEES
C
      KTYCH(1) = 'CIMPO'
      KTYCH(2) = 'F1D2D'
      KTYCH(3) = 'F2D3D'
      KTYCH(4) = 'PRESS'
      KTYCH(5) = 'PESAN'
      KTYCH(6) = 'ROTAT'
      KTYCH(7) = 'F2D2D'
      KTYCH(8) = 'F3D3D'
      KTYCH(9) = 'FLUX'
C
      DO 11 , J = 1 , NTYCHX
        ITYCHA(J) = 0
   11 CONTINUE
C
CGN      WRITE(6,*) 'NCHAR =', NCHAR
      IRET1 = 0
      DO 12 I = 1 , NCHAR
        IRET2 = 0
        DO 121 , J = 1 , NTYCHX
          CALL EXISD('CHAMP_GD',LCHAR(I)//'.CHME.'//KTYCH(J),IRET)
          IF ( IRET.NE.0 ) THEN
            ITYCHA(J) = ITYCHA(J) + 1
            IRET2 = IRET2 + 1
          ENDIF
  121   CONTINUE
        IF ( IRET2.EQ.0 ) THEN
          CALL U2MESK('A','INDICATEUR_6',1,LCHAR(I))
          IRET1 = IRET1 + 1
        ENDIF
   12 CONTINUE
C
C     ON VERIFIE QU'UN TYPE DE CHARGE N'EST PAS PRESENT 2 FOIS
C     REMARQUE : SAUF POUR DU DIRICHLET (CIMPO)
C
CGN        WRITE(6,*) 'ITYCHA(',1,') =', ITYCHA(1)
      DO 13 , J = 2 , NTYCHX
CGN        WRITE(6,*) 'ITYCHA(',J,') =', ITYCHA(J)
        IF ( ITYCHA(J).GT.1 ) THEN
          CALL U2MESK('A','INDICATEUR_7',1,KTYCH(J))
          IRET1 = IRET1 + 1
        ENDIF
   13 CONTINUE
C
      IF ( IRET1.NE.0 ) THEN
        CALL U2MESS('F','INDICATEUR_8')
      ENDIF
C
C====
C 2. DECODAGE DES CHARGES
C====
C
      CARTE1 = ' '
      CARTE2 = ' '
      CARTE3 = ' '
      NOMGD1 = ' '
      NOMGD2 = ' '
      NOMGD3 = ' '
C
      DO 21 I = 1,NCHAR
CGN        WRITE(6,*) 'CHARGE A ANALYSER : ',LCHAR(I)
CGN      CALL UTIMSD(6,1,.TRUE.,.TRUE.,LCHAR(I)//'.CHME',1,' ')
C
C 2.1. ==> FORCES AU BORD
C
        CALL EXISD('CHAMP_GD',LCHAR(I)//'.CHME.F1D2D',IRET1)
        CALL EXISD('CHAMP_GD',LCHAR(I)//'.CHME.F2D3D',IRET2)
        IF (IRET1.NE.0) THEN
          CARTE1 = LCHAR(I)//'.CHME.F1D2D'
          CALL DISMOI('F','NOM_GD',CARTE1,'CARTE',IBID,NOMGD1,IER)
          CALL ETENCA(CARTE1,LIGREL,IRET)
          CALL ASSERT (IRET.EQ.0)
CGN        WRITE(6,*) 'ON A DU F1D2D'
        ELSE IF (IRET2.NE.0) THEN
          CARTE1 = LCHAR(I)//'.CHME.F2D3D'
          CALL DISMOI('F','NOM_GD',CARTE1,'CARTE',IBID,NOMGD1,IER)
          CALL ETENCA(CARTE1,LIGREL,IRET)
          CALL ASSERT (IRET.EQ.0)
CGN        WRITE(6,*) 'ON A DU F2D3D'
        END IF
C
C 2.2. ==> PRESSIONS MECANIQUES
C
        CALL EXISD('CHAMP_GD',LCHAR(I)//'.CHME.PRESS',IRET1)
        IF (IRET1.NE.0) THEN
          CARTE2 = LCHAR(I)//'.CHME.PRESS'
          CALL DISMOI('F','NOM_GD',CARTE2,'CARTE',IBID,NOMGD2,IER)
          CALL ETENCA(CARTE2,LIGREL,IRET)
          CALL ASSERT (IRET.EQ.0)
CGN        WRITE(6,*) 'ON A DU PRESS AVEC CARTE2 : ',CARTE2
        END IF
C
C 2.3. ==> EN THM, CONDITIONS DE NEUMANN HYDRAULIQUES
C
        IF ( YATHM ) THEN
          CALL EXISD('CHAMP_GD',LCHAR(I)//'.CHME.FLUX',IRET1)
          IF (IRET1.NE.0) THEN
            CARTE3 = LCHAR(I)//'.CHME.FLUX'
            CALL DISMOI('F','NOM_GD',CARTE3,'CARTE',IBID,NOMGD3,IER)
            CALL ETENCA(CARTE3,LIGREL,IRET)
            CALL ASSERT (IRET.EQ.0)
          ENDIF
        ENDIF
C
   21 CONTINUE
C
      CALL JEVEUO(LIGREL(1:19)//'.REPE','L',IAREPE)
C
C RECUPERATION DES ADRESSES DU CHAMP DE CONTRAINTES A L'INSTANT ACTUEL
C
      CALL JEVEUO(SIGMAP(1:19)//'.CELD','L',JCELDP)
      CALL JEVEUO(SIGMAP(1:19)//'.CELV','L',JCELVP)
C
C RECUPERATION DES ADRESSES DU CHAMP DE CONTRAINTES A L'INSTANT
C PRECEDENT (THM UNIQUEMENT)
C
      IF ( YATHM .AND. ( .NOT. PERMAN ) ) THEN
        CALL JEVEUO(SIGMAM(1:19)//'.CELD','L',JCELDM)
        CALL JEVEUO(SIGMAM(1:19)//'.CELV','L',JCELVM)
      ELSE
        JCELDM = -1
        JCELVM = -1
      ENDIF
C
C RECUPERATION DES ADRESSES DE LA CARTE NUMERO 1
C
      IF (CARTE1 .NE. ' ') THEN
        CALL JEVEUO (CARTE1//'.DESC','L',IADE1)
        CALL JEVEUO (CARTE1//'.VALE','L',IAVA1)
        CALL JEEXIN (CARTE1//'.PTMA',IRET)
        IF (IRET .EQ. 0) THEN
          IAPTM1 = 0
        ELSE
C            LA CARTE A ETE ETENDUE
          CALL JEVEUO (CARTE1//'.PTMA','L',IAPTM1)
        ENDIF
        CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMGD1),NUMGD1)
      ELSE
        IADE1  = 0
        IAVA1  = 0
        IAPTM1 = 0
        NUMGD1 = 0
      ENDIF
C
C RECUPERATION DES ADRESSES DE LA CARTE NUMERO 2
C
      IF (CARTE2 .NE. ' ') THEN
CGN      WRITE(6,*) 'ADRESSES DE LA CARTE '//CARTE2
        CALL JEVEUO (CARTE2//'.DESC','L',IADE2)
        CALL JEVEUO (CARTE2//'.VALE','L',IAVA2)
        CALL JEEXIN (CARTE2//'.PTMA',IRET)
        IF (IRET .EQ. 0) THEN
          IAPTM2 = 0
        ELSE
C            LA CARTE A ETE ETENDUE
          CALL JEVEUO (CARTE2//'.PTMA','L',IAPTM2)
        ENDIF
        CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMGD2),NUMGD2)
CGN      WRITE(6,154) (ZI(IAPTM2+IBID),IBID=0,11)
CGN      WRITE(6,155) (ZR(IAVA2+IBID),IBID=0,35,6)
      ELSE
        IADE2  = 0
        IAVA2  = 0
        IAPTM2 = 0
        NUMGD2 = 0
      ENDIF
CGN  154 FORMAT(6I10)
CGN  155 FORMAT(G12.5)
C
C RECUPERATION DES ADRESSES DE LA CARTE NUMERO 3 (THM UNIQUEMENT)
C
      IF (CARTE3 .NE. ' ') THEN
CGN       WRITE(6,*) 'ADRESSES DE LA CARTE '//CARTE3
        CALL JEVEUO (CARTE3//'.DESC','L',IADE3)
        CALL JEVEUO (CARTE3//'.VALE','L',IAVA3)
        CALL JEEXIN (CARTE3//'.PTMA',IRET)
C
          IF (IRET .EQ. 0) THEN
            IAPTM3 = 0
          ELSE
C          LA CARTE A ETE ETENDUE
            CALL JEVEUO (CARTE3//'.PTMA','L',IAPTM3)
          ENDIF
C
        CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMGD3),NUMGD3)
      ELSE
        IADE3  = 0
        IAVA3  = 0
        IAPTM3 = 0
        NUMGD3 = 0
      ENDIF
C
C====
C 3. CREATION DE 2 CARTES CONTENANT DES ADRESSES D'OBJETS JEVEUX
C====
C
      IATYMA = TABIDO(1)
      IAGD   = TABIDO(2)
      IACMP  = TABIDO(3)
      ICONX1 = TABIDO(4)
      ICONX2 = TABIDO(5)
C
      LICMP(1) = 'X1'
      LICMP(2) = 'X2'
      LICMP(3) = 'X3'
      LICMP(4) = 'X4'
      LICMP(5) = 'X5'
      LICMP(6) = 'X6'
      LICMP(7) = 'X7'
      LICMP(8) = 'X8'
      LICMP(9) = 'X9'
      LICMP(10) = 'X10'
      LICMP(11) = 'X11'
      LICMP(12) = 'X12'
C
      ICMP(1) = IAREPE
      ICMP(2) = JCELDP
      ICMP(3) = JCELVP
      ICMP(4) = IATYMA
      ICMP(5) = IAGD
      ICMP(6) = IACMP
C
      ICMP(7) = IADE1
      ICMP(8) = IAVA1
      ICMP(9) = IAPTM1
      ICMP(10) = NUMGD1
C
      ICMP(11) = ICONX1
      ICMP(12) = ICONX2
C
      CALL MECACT(BASE,'&&'//NOMPRO//'.CH_FORCE','MODELE',LIGREL,
     &            'NEUT_I',NBCMP,LICMP,ICMP,RCMP,CCMP,KCMP)
C
      ICMP(2) = JCELDM
      ICMP(3) = JCELVM
C
      ICMP(5) = IADE2
      ICMP(6) = IAVA2
      ICMP(7) = IAPTM2
      ICMP(8) = NUMGD2
CGN      WRITE(6,*) '    IADE2,    IAVA2,   IAPTM2,   NUMGD2'
CGN      WRITE(6,154) IADE2,IAVA2,IAPTM2,NUMGD2
C
      ICMP(9)  = IADE3
      ICMP(10) = IAVA3
      ICMP(11) = IAPTM3
      ICMP(12) = NUMGD3
C
      CALL MECACT(BASE,'&&'//NOMPRO//'.CH_PRESS','MODELE',LIGREL,
     &            'NEUT_I',NBCMP,LICMP,ICMP,RCMP,CCMP,KCMP)
C
C====
C 4. CHARGEMENTS VOLUMIQUES : PESANTEUR, ROTATION OU FORCES DE VOLUME
C     ATTENTION : SI UN TYPE DE CHARGEMENT EST PRESENT DANS PLUSIEURS
C                 CHARGES, SEULE SON OCCURENCE DANS LA DERNIERE CHARGE
C                 EST CONSIDEREE
C====
C
      CHFOR1 = ' '
      CHFOR2 = ' '
      CHFOR3 = ' '
      TYPC3 = '        '
C
      DO 22 I = 1,NCHAR
CGN        CALL UTIMSD(6,1,.TRUE.,.TRUE.,LCHAR(I),1,' ')
        CALL EXISD('CHAMP_GD',LCHAR(I)//'.CHME.PESAN',IRET4)
        CALL EXISD('CHAMP_GD',LCHAR(I)//'.CHME.ROTAT',IRET5)
        CALL EXISD('CHAMP_GD',LCHAR(I)//'.CHME.F2D2D',IRET6)
        CALL EXISD('CHAMP_GD',LCHAR(I)//'.CHME.F3D3D',IRET7)
        IF (IRET4.NE.0) THEN
          CHFOR1 = LCHAR(I)//'.CHME.PESAN.DESC'
CGN          WRITE(6,*) 'ON A DU CHFOR1'
        END IF
        IF (IRET5.NE.0) THEN
          CHFOR2 = LCHAR(I)//'.CHME.ROTAT.DESC'
CGN          WRITE(6,*) 'ON A DU CHFOR2'
        END IF
        IF (IRET6.NE.0) THEN
          CHFOR3 = LCHAR(I)//'.CHME.F2D2D.DESC'
          CALL JEVEUO(LCHAR(I)//'.TYPE','L',IBID)
          TYPC3 = ZK8(IBID)
CGN          WRITE(6,*) 'ON A DU F2D2D AVEC '//CHFOR3//' ET '//TYPC3
        END IF
        IF (IRET7.NE.0) THEN
          CHFOR3 = LCHAR(I)//'.CHME.F3D3D.DESC'
          CALL JEVEUO(LCHAR(I)//'.TYPE','L',IBID)
          TYPC3 = ZK8(IBID)
CGN          WRITE(6,*) 'ON A DU F3D3D AVEC '//CHFOR3//' ET '//TYPC3
        END IF
   22 CONTINUE
C
C====
C 5. PARAMETRES DU CALCUL
C====
C
C ==> SI ON EST SUR UNE MODELISATION XFEM ...
C
      IF ( YAXFEM ) THEN
C
C 5.1. ==> ... ON RECUPERE LES ADRESSES DES CHAMPS PROPRES A X-FEM
C
        PINTTO = MODELE//'.TOPOSE.PIN'
        CNSETO = MODELE//'.TOPOSE.CNS'
        LONCHA = MODELE//'.TOPOSE.LON'
        PMILTO = MODELE//'.TOPOSE.PMI'
C
      ENDIF
C
C ==> SI ON EST SUR UNE MODELISATION HM ...
C
      IF ( YATHM ) THEN
C
C 5.2. ==> ... ON CREE UNE CARTE CONTENANT
C              LONGUEUR ET PRESSION CARACTERISTIQUES
C
        LICMP(1) = 'X1'
        LICMP(2) = 'X2'
        RCMP(1)  = TBGRCA(1)
        RCMP(2)  = TBGRCA(2)
C
        CALL MECACT(BASE,'&&'//NOMPRO//'.GRDCA','MODELE',LIGREL,
     &              'NEUT_R',2,LICMP,ICMP,RCMP,CCMP,KCMP)
      ENDIF
C
      LPAIN(1) = 'PGEOMER'
      LCHIN(1) = CHGEOM
      LPAIN(2) = 'PMATERC'
      LCHIN(2) = MATE
      LPAIN(3) = 'PVOISIN'
      LCHIN(3) = CHVOIS
      LPAIN(4) = 'PTEMPSR'
      LCHIN(4) = CHTIME
      LPAIN(5) = 'PCONTNO'
      LCHIN(5) = SIGMAP
      LPAIN(6) = 'PPESANR'
      LCHIN(6) = CHFOR1
      LPAIN(7) = 'PROTATR'
      LCHIN(7) = CHFOR2
      LPAIN(8) = 'PFORCE'
      LCHIN(8) = '&&'//NOMPRO//'.CH_FORCE'
      LPAIN(9) = 'PPRESS'
      LCHIN(9) = '&&'//NOMPRO//'.CH_PRESS'
      NBRIN = 9
C
      IF ( YAXFEM ) THEN
C
        LPAIN(10)= 'PPINTTO'
        LCHIN(10)= PINTTO
        LPAIN(11)= 'PCNSETO'
        LCHIN(11)= CNSETO
        LPAIN(12)= 'PLONCHA'
        LCHIN(12)= LONCHA
        LPAIN(13) = 'PCVOISX'
        LCHIN(13) = CVOISX
        LPAIN(14) = 'PCONTSER'
        LCHIN(14) = CHSIGX
        LPAIN(15)= 'PPMILTO'
        LCHIN(15)= PMILTO

        NBRIN = 15
C
      ENDIF
C
      IF ( YATHM ) THEN
C
        LPAIN(10) = 'PDEPLAR'
        LCHIN(10) = CHDEPP
        LPAIN(11) = 'PGRDCA'
        LCHIN(11) = '&&'//NOMPRO//'.GRDCA'
        IF (PERMAN) THEN
          NBRIN = 11
        ELSE
          LPAIN(12) = 'PDEPLMR'
          LCHIN(12) = CHDEPM
          LPAIN(13) = 'PCONTNM'
          LCHIN(13) = SIGMAM
          LPAIN(14) = 'PERREM'
          LCHIN(14) = CHERRM
          NBRIN = 14
        ENDIF
C
      ENDIF
C
      IF ( TYPC3(1:1).NE.' ' ) THEN
        NBRIN = NBRIN + 1
        IF ( TYPC3(1:7).EQ.'MECA_RE' ) THEN
          LPAIN(NBRIN) = 'PFRVOLU'
        ELSEIF ( TYPC3(1:7).EQ.'MECA_FO' ) THEN
          LPAIN(NBRIN) = 'PFFVOLU'
        ENDIF
        LCHIN(NBRIN) = CHFOR3
      ENDIF
C
      LPAOUT(1) = 'PERREUR'
      LCHOUT(1) = CHELEM
C
      OPTION = 'ERME_ELEM'
C
CGN      WRITE(6,*) NOMPRO,' APPELLE CALCUL POUR ', OPTION
CGN      WRITE(6,*) '  LPAIN    LCHIN'
CGN      DO 33 , IBID = 1 , NBRIN
CGN        WRITE(6,3000) IBID, LPAIN(IBID), LCHIN(IBID)
CGN   33 CONTINUE
CGN 3000 FORMAT(I2,1X,A8,1X,A24)

      CALL CALCUL('C',OPTION,LIGREL,NBRIN,LCHIN,LPAIN,1,
     &            LCHOUT,LPAOUT,'G','OUI')
      CALL EXISD('CHAMP_GD',LCHOUT(1),IRET)
      IF (IRET.EQ.0) THEN
        CALL U2MESK('F','CALCULEL2_88',1,OPTION)
      END IF
C
C====
C 4. MENAGE FINAL
C====
C
      CALL JEDETR(CARTE1//'.PTMA')
      CALL JEDETR(CARTE2//'.PTMA')
      CALL JEDETR(CARTE3//'.PTMA')
C
      CALL DETRSD('CHAMP_GD','&&'//NOMPRO//'.CH_FORCE')
      CALL DETRSD('CHAMP_GD','&&'//NOMPRO//'.CH_PRESS')
C
      END
