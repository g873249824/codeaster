      SUBROUTINE CCBCOP(RESUIN,RESUOU,LISORD,NBORDR,LISOPT,
     &                  NBROPT)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER      NBORDR,NBROPT
      CHARACTER*8  RESUOU,RESUIN
      CHARACTER*19 LISORD,LISOPT
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 18/12/2012   AUTEUR SELLENET N.SELLENET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE SELLENET N.SELLENET
C ----------------------------------------------------------------------
C  CALC_CHAMP - BOUCLE SUR LA LISTE D'OPTION ET APPEL A CALCOP
C  -    -       -  -                  --
C ----------------------------------------------------------------------
C
C  ROUTINE PREPARANT L'APPEL A CALCOP
C
C IN  :
C   RESUIN K8   NOM DE LA SD IN
C   RESUOU K8   NOM DE LA SD OUT
C   LISORD K19  NOM DE LA LISTE DES NUMEROS D'ORDRE
C   NBORDR I    NOMBRE DE NUMEROS D'ORDRE
C   LISOOP K19  NOM DE LA LISTE DES OPTIONS A CALCULER
C   NBROPT I    LONGUEUR DE LA LISTE D'OPTIONS
C ----------------------------------------------------------------------
      CHARACTER*6 NOMPRO
      PARAMETER  (NOMPRO='CCBCOP')
C
      INTEGER      JORDR,IERD,IBID,IRET,NBCHAR
      INTEGER      IFM,NIV,NUORD
      INTEGER      NBAC,NBPA,NBPARA,JPARA
      INTEGER      IAUX,J,IADOU,IADIN,IORDR,JOPT,IOPT
C
      CHARACTER*4  TYPCHA
      CHARACTER*8  TYPE,MODELE,CARAEL
      CHARACTER*8  K8B
      CHARACTER*16 OPTION,TYPESD
      CHARACTER*19 LISCHA
      CHARACTER*24 NOMPAR,CHMATE
C
      LOGICAL      EXIPLA,NEWCAL
C
      CALL JEMARQ()
C
      CALL INFMAJ()
      CALL INFNIV(IFM,NIV)
C
      CALL GETTCO(RESUIN,TYPESD)
C
      LISCHA = '&&'//NOMPRO//'.CHARGES   '
C
      NEWCAL = .FALSE.
      CALL JEEXIN(RESUOU//'           .DESC',IRET)
      IF (IRET.EQ.0) NEWCAL = .TRUE.
C
      IF ( (RESUIN.NE.RESUOU).AND.(.NOT.NEWCAL) ) THEN
        CALL U2MESS('F','CALCULEL_18')
      ENDIF
C
      CALL JEVEUO(LISORD,'L',JORDR)
      NUORD = ZI(JORDR)
C
      CALL MEDOM1(MODELE,CHMATE,CARAEL,LISCHA,
     &            NBCHAR,TYPCHA,RESUIN,NUORD)
      IF ( MODELE.EQ.' ' ) THEN
        CALL U2MESS('F','CALCULEL2_44')
      ENDIF
C
C     RECUPERATION DE LA LISTE DE NUMEROS D'ORDRE
      IF (NEWCAL) THEN
        CALL RSCRSD('G',RESUOU,TYPESD,NBORDR)
        CALL TITRE
      ENDIF
C
C     ON VERIFIE QUE CARA_ELEM EST RENSEIGNES POUR LES COQUES
      EXIPLA=.FALSE.
      CALL DISMOI('F','EXI_COQ1D',MODELE,'MODELE',IBID,K8B,IERD)
      IF (K8B(1:3).EQ.'OUI') EXIPLA=.TRUE.
      CALL DISMOI('F','EXI_COQ3D',MODELE,'MODELE',IBID,K8B,IERD)
      IF (K8B(1:3).EQ.'OUI') EXIPLA=.TRUE.
      CALL DISMOI('F','EXI_PLAQUE',MODELE,'MODELE',IBID,K8B,IERD)
      IF (K8B(1:3).EQ.'OUI') EXIPLA=.TRUE.
C
      IF (EXIPLA.AND.CARAEL.EQ.' ') THEN
        CALL U2MESS('A','CALCULEL2_94')
        GOTO 30
      ENDIF
C
C     RECOPIE DES PARAMETRES DANS LA NOUVELLE SD RESULTAT
      IF (NEWCAL) THEN
        NOMPAR='&&'//NOMPRO//'.NOMS_PARA '
        CALL RSNOPA(RESUIN,2,NOMPAR,NBAC,NBPA)
        NBPARA=NBAC+NBPA
C
        CALL JEVEUO(NOMPAR,'L',JPARA)
        DO 40,IAUX=1,NBORDR
          IORDR=ZI(JORDR+IAUX-1)
          DO 50 J=1,NBPARA
            CALL RSADPA(RESUIN,'L',1,ZK16(JPARA+J-1),IORDR,1,IADIN,TYPE)
            CALL RSADPA(RESUOU,'E',1,ZK16(JPARA+J-1),IORDR,1,IADOU,TYPE)
C
            IF (TYPE(1:1).EQ.'I') THEN
              ZI(IADOU)=ZI(IADIN)
            ELSEIF (TYPE(1:1).EQ.'R') THEN
              ZR(IADOU)=ZR(IADIN)
            ELSEIF (TYPE(1:1).EQ.'C') THEN
              ZC(IADOU)=ZC(IADIN)
            ELSEIF (TYPE(1:3).EQ.'K80') THEN
              ZK80(IADOU)=ZK80(IADIN)
            ELSEIF (TYPE(1:3).EQ.'K32') THEN
              ZK32(IADOU)=ZK32(IADIN)
            ELSEIF (TYPE(1:3).EQ.'K24') THEN
              ZK24(IADOU)=ZK24(IADIN)
            ELSEIF (TYPE(1:3).EQ.'K16') THEN
              ZK16(IADOU)=ZK16(IADIN)
            ELSEIF (TYPE(1:2).EQ.'K8') THEN
              ZK8(IADOU)=ZK8(IADIN)
            ENDIF
   50     CONTINUE
   40   CONTINUE
        CALL JEDETR(NOMPAR)
      ENDIF
C
C     VERIFICATION DE LA PRESENCE D'UN EXCIT DANS LE FICHIER
C     DE COMMANDE OU DES CHARGES DANS LA SD RESULTAT
      CALL CCVRCH(RESUIN,ZI(JORDR))
C
      CALL JEVEUO(LISOPT,'L',JOPT)
C
C     BOUCLE SUR LES OPTIONS DEMANDEES PAR L'UTILISATEUR
      DO 20 IOPT=1,NBROPT
C
        OPTION=ZK16(JOPT+IOPT-1)
        IF ( OPTION.EQ.' ' ) GOTO 20
C
        IF ( (OPTION.EQ.'FORC_NODA').OR.
     &       (OPTION.EQ.'REAC_NODA') ) THEN
          CALL CCFNRN(OPTION,RESUIN,RESUOU,LISORD,NBORDR,
     &                LISCHA,NBCHAR,TYPCHA,TYPESD)
        ELSE
          CALL CALCOP(OPTION,LISOPT,RESUIN,RESUOU,LISORD,
     &                NBORDR,LISCHA,NBCHAR,TYPCHA,TYPESD,
     &                IRET)
C
          IF ( IRET.NE.0 ) CALL ASSERT(.FALSE.)
        ENDIF
  20  CONTINUE
C
  30  CONTINUE
C
      CALL JEDEMA()
C
      END
