      SUBROUTINE PJXXPR(RESU1,RESU2,MOA1,MOA2,CORRES,BASE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 02/02/2010   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE PELLET J.PELLET
      IMPLICIT   NONE
C ---------------------------------------------------------------------
C BUT :
C  PROJETER LES CHAMPS CONTENUS DANS LA SD RESU1
C  SUR LE MODELE (OU MAILLAGE) MOA2
C  ET CREER UNE NOUVELLE SD RESU2 DE MEME TYPE QUE RESU1
C
C  IN/JXIN  RESU1   K8  : NOM DE LA SD_RESULTAT A PROJETER
C  IN/JXOUT RESU2   K8  : NOM DE LA SD_RESULTAT RESULTAT
C  IN/JXIN  MOA1  K8  : NOM DU MODELE (OU MAILLAGE) ASSOCIE A RESU1
C  IN/JXIN  MOA2  K8  : NOM DU MODELE (OU MAILLAGE) ASSOCIE A RESU2
C  IN/JXIN  CORRES  K16 : NOM DE LA SD CORRESP_2_MAILLA

C  RESTRICTIONS :
C   1- ON TRAITE SYSTEMATIQUEMENT TOUS LES NUMEROS D'ORDRE
C   2- ON NE TRAITE CORRECTEMENT QUE LES EVOL_XXX (INST)
C  -----------------------------------------------------------------
C
C 0.1. ==> ARGUMENTS
C
      CHARACTER*16 CORRES,TYPRES
      CHARACTER*8 RESU1,RESU2,MOA1,MOA2
      CHARACTER*1 BASE
C
C 0.2. ==> COMMUNS
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ---------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24,NOOJB
      CHARACTER*32 ZK32,JEXNUM,JEXNOM,JEXATR
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX -----------------------------
C
C 0.3. ==> VARIABLES LOCALES
C

C
      INTEGER IBID,IE,JXXK1,IRET,JORDR,NBORDR,I,IORDR
      INTEGER IAINS1,IAINS2,NBSYM,ISYM,ICO,IND,J,NBMAX
      PARAMETER (NBMAX=50)
      INTEGER IPAR,IPAR1,IPAR2
      LOGICAL ACCENO
      CHARACTER*8 KB,MA1,MA2,NUME,PROL0,K8B,TYP1,TYP2,CRIT,MO2
      CHARACTER*16 NOMSYM(200),K16B,NOMCMD
      CHARACTER*19 CH1,CH2,PRFCHN,LIGREL,PRFCH2
      CHARACTER*19 NOMS2,REFE,KPAR(NBMAX)
      CHARACTER*24 VALK(5)
      CHARACTER*1 TYPERR
      INTEGER IACONB,IACONU,NBNO2,JPJM1,IACNX1,ILCNX1,IDECAL,INO2
      INTEGER KMA1,NBNO1,IMA1,NBMA1,INO1,IEXI,JPARA
      INTEGER NUNO1A,NUNO1B
      INTEGER IER,LMATAS ,INUME
      REAL*8 R8B,PREC
      COMPLEX*16 C16B


C DEB -----------------------------------------------------------------
      CALL JEMARQ()
      K8B = ' '
      CALL GETRES(K8B,K16B,NOMCMD)


C     -- CALCUL DE MA1, MA2, LIGREL :
      CALL JEEXIN(MOA1//'.MODELE    .REPE',IEXI)
      IF (IEXI.GT.0) THEN
         CALL DISMOI('F','NOM_MAILLA',MOA1,'MODELE',IBID,MA1,IE)
      ELSE
         MA1=MOA1
      ENDIF

      CALL JEEXIN(MOA2//'.MODELE    .REPE',IEXI)
      IF (IEXI.GT.0) THEN
         CALL DISMOI('F','NOM_MAILLA',MOA2,'MODELE',IBID,MA2,IE)
         MO2=MOA2
         LIGREL = MO2//'.MODELE'

      ELSE
         MA2=MOA2
         MO2=' '
         LIGREL=' '
      ENDIF



      IF (NOMCMD.EQ.'DEPL_INTERNE') THEN
C       ON NE TRAITE QUE LE CHAMP DEPL
        NBSYM = 1
        NOMSYM(1) = 'DEPL'
        CALL RSORAC(RESU1,'LONUTI',IBID,R8B,KB,C16B,R8B,KB,NBORDR,1,
     &              IBID)
        IF (NBORDR.EQ.0) THEN
          CALL U2MESK('F','CALCULEL4_62',1,RESU1)
        ENDIF

        CALL WKVECT('&&PJXXPR.NUME_ORDRE','V V I',NBORDR,JORDR)

        CALL RSORAC(RESU1,'TOUT_ORDRE',IBID,R8B,KB,C16B,R8B,KB,
     &              ZI(JORDR),NBORDR,IBID)

        PROL0 = 'OUI'

      ELSE
        CALL JEVEUO(CORRES//'.PJXX_K1','L',JXXK1)
        IF (ZK24(JXXK1-1+1).NE.MA1) THEN
          VALK(1) = ZK24(JXXK1-1+1)
          VALK(2) = MA1
          CALL U2MESK('F','CALCULEL4_59',2,VALK)
        ENDIF
        IF (ZK24(JXXK1-1+2).NE.MA2) CALL U2MESS('F','CALCULEL4_60')

        CALL RSUTC4(RESU1,' ',1,200,NOMSYM,NBSYM,ACCENO)
        CALL ASSERT(NBSYM.GT.0)

        CALL GETVTX(' ','PROL_ZERO',1,1,1,PROL0,IER)


C     1- CREATION DE LA SD RESULTAT : RESU2
C     ------------------------------------
        CALL GETVR8(' ','PRECISION',0,1,1,PREC,IE)
        CALL GETVTX(' ','CRITERE'  ,0,1,1,CRIT,IE)
        CALL RSUTNU(RESU1,' ',0,'&&PJXXPR.NUME_ORDRE',NBORDR,PREC,
     &              CRIT,IRET)
        IF (IRET.NE.0) THEN
          CALL U2MESK('F','CALCULEL4_61',1,RESU1)
        ENDIF
        IF (NBORDR.EQ.0) THEN
          CALL U2MESK('F','CALCULEL4_62',1,RESU1)
        ENDIF
        CALL JEVEUO('&&PJXXPR.NUME_ORDRE','L',JORDR)
      ENDIF

      NOMS2 = RESU2
      CALL JEEXIN(NOMS2//'.DESC',IRET)
      IF (IRET.EQ.0) THEN
        CALL GETTCO(RESU1,TYPRES)
        CALL RSCRSD(BASE,RESU2,TYPRES,NBORDR)
      ENDIF

C     DANS LE CAS DES CONCEPTS TYPE MODE_MECA ON TESTE LA PRESENCE
C     DES MATRICES AFIN DE RECUPERER LA NUMEROTATION SOUS-JACENTE
      PRFCH2 = '12345678.00000.NUME'
      IF (NOMCMD.EQ.'DEPL_INTERNE') THEN

      ELSE
C       ON ESSAYE DE RECUPERER LA NUMEROTATION IMPOSEE
        CALL GETVID(' ','NUME_DDL',1,1,1,NUME,IER)
        IF (IER.NE.0) THEN
          PRFCH2 = NUME(1:8)//'      .NUME'
        ENDIF
      ENDIF



C     2- ON CALCULE LES CHAMPS RESULTATS :
C     ------------------------------------
      ICO = 0
      DO 30,ISYM = 1,NBSYM

        IF (PRFCH2.NE.'12345678.00000.NUME') THEN
C         ON PREND LA NUMEROTATION IMPOSEE
          PRFCHN = PRFCH2

        ELSE
C         ON DEFINIT UNE NUMEROTATION 'BIDON"
          NOOJB = '12345678.00000.NUME.PRNO'
          CALL GNOMSD(NOOJB,10,14)
          PRFCHN = NOOJB(1:19)
        ENDIF

        DO 20,I = 1,NBORDR
          IORDR = ZI(JORDR+I-1)
          CALL RSEXCH(RESU1,NOMSYM(ISYM),IORDR,CH1,IRET)
          IF (IRET.GT.0) GOTO 20

C       -- PROJECTION DU CHAMP SI POSSIBLE :
          CALL RSEXCH(RESU2,NOMSYM(ISYM),IORDR,CH2,IRET)
          CALL PJXXCH(CORRES,CH1,CH2,PRFCHN,PROL0,LIGREL,BASE,IRET)
          CALL ASSERT(IRET.EQ.0.OR.IRET.EQ.1.OR.IRET.EQ.10)
C         -- ELGA ET CART : ON NE FAIT RIEN :
          IF (IRET.EQ.10) GOTO 20

          IF (IRET.GT.0) THEN
            IF (ACCENO) THEN
C             -- L'UTILISATEUR A DEMANDE EXPLICITEMENT LA PROJECTION :
              TYPERR = 'F'

            ELSE
C             -- L'UTILISATEUR N'A PAS DEMANDE EXPLICITEMENT
C                LA PROJECTION, ON SE CONTENTE D'UNE ALARME  :
              TYPERR = 'A'
            ENDIF
            VALK(1) = NOMSYM(ISYM)
            VALK(2) = RESU1
            VALK(3) = RESU2
            CALL U2MESG(TYPERR,'CALCULEL4_63',3,VALK,1,IORDR,0,0.D0)
            GOTO 20

          ENDIF
          CALL RSNOCH(RESU2,NOMSYM(ISYM),IORDR,' ')

C       -- ATTRIBUTION DES ATTRIBUTS DU CONCEPT RESULTAT
C         EXTRACTION DES PARAMETRES MODAUX à SAUVER DANS LE RESULTAT
          IF ((TYPRES(1:9).EQ.'MODE_MECA') .OR.
     &        (TYPRES(1:4).EQ.'BASE')) THEN
            CALL VPCREA(0,RESU2,' ',' ',' ',PRFCH2(1:8),IER)
            CALL RSADPA(RESU1,'L',1,'FREQ',IORDR,0,IAINS1,KB)
            CALL RSADPA(RESU2,'E',1,'FREQ',IORDR,0,IAINS2,KB)
            ZR(IAINS2) = ZR(IAINS1)

C           RECOPIE DE NUME_MODE S'IL EXISTE:
            CALL JENONU(JEXNOM(RESU1//'           .NOVA','NUME_MODE'),
     &                  INUME)
            IF (INUME.NE.0) THEN
              CALL RSADPA(RESU1,'L',1,'NUME_MODE',IORDR,0,IAINS1,KB)
              CALL RSADPA(RESU2,'E',1,'NUME_MODE',IORDR,0,IAINS2,KB)
              ZI(IAINS2) = ZI(IAINS1)
            ENDIF

          ELSEIF (TYPRES(1:9).EQ.'MODE_STAT') THEN
            CALL VPCREA(0,RESU2,' ',' ',' ',PRFCH2(1:8),IER)
            CALL RSADPA(RESU1,'L',1,'NOEUD_CMP',IORDR,0,IAINS1,KB)
            CALL RSADPA(RESU2,'E',1,'NOEUD_CMP',IORDR,0,IAINS2,KB)
            ZK16(IAINS2) = ZK16(IAINS1)

          ELSEIF (TYPRES.EQ.'DYNA_HARMO') THEN
            CALL RSADPA(RESU1,'L',1,'FREQ',IORDR,0,IAINS1,KB)
            CALL RSADPA(RESU2,'E',1,'FREQ',IORDR,0,IAINS2,KB)
            ZR(IAINS2) = ZR(IAINS1)

          ELSEIF ((TYPRES(1:4).EQ.'EVOL') .OR.
     &            (TYPRES(1:4).EQ.'DYNA')) THEN
            CALL RSADPA(RESU1,'L',1,'INST',IORDR,0,IAINS1,KB)
            CALL RSADPA(RESU2,'E',1,'INST',IORDR,0,IAINS2,KB)
            ZR(IAINS2) = ZR(IAINS1)

          ELSE
C            ON NE FAIT RIEN
          ENDIF

          IF (NOMCMD.EQ.'DEPL_INTERNE') THEN
            IPAR = 0

          ELSE
C           REMPLIT D AUTRES PARAMETRES SI DEMANDE PAR UTILISATEUR
            CALL GETVTX(' ','NOM_PARA',1,1,NBMAX,KPAR,IPAR)
          ENDIF


          DO 10 IND = 1,IPAR
            CALL RSADPA(RESU1,'L',1,KPAR(IND),IORDR,1,IPAR1,TYP1)
            CALL RSADPA(RESU2,'E',1,KPAR(IND),IORDR,0,IPAR2,TYP2)
            IF (TYP1(1:1).EQ.'I') THEN
              ZI(IPAR2) = ZI(IPAR1)

            ELSEIF (TYP1(1:1).EQ.'R') THEN
              ZR(IPAR2) = ZR(IPAR1)

            ELSEIF (TYP1(1:2).EQ.'K8') THEN
              ZK8(IPAR2) = ZK8(IPAR1)

            ELSEIF (TYP1(1:3).EQ.'K16') THEN
              ZK16(IPAR2) = ZK16(IPAR1)

            ELSEIF (TYP1(1:3).EQ.'K32') THEN
              ZK32(IPAR2) = ZK32(IPAR1)

            ELSE
C               ON NE FAIT RIEN
            ENDIF
   10     CONTINUE
          ICO = ICO + 1

   20   CONTINUE
   30 CONTINUE

      IF (ICO.EQ.0) CALL U2MESS('F','CALCULEL4_64')
      CALL JEDETR('&&PJXXPR.NUME_ORDRE')


      IF (MO2.NE.' ') THEN
        CALL JEVEUO(RESU2//'           .ORDR','L',JORDR)
        CALL JELIRA(RESU2//'           .ORDR','LONUTI',NBORDR,K8B)
        DO 11 I=1,NBORDR
          CALL RSADPA(RESU2,'E',1,'MODELE',ZI(JORDR-1+I),0,JPARA,
     &                K8B)
          ZK8(JPARA)=MO2
   11   CONTINUE
      ENDIF

C     -- CREATION DE L'OBJET .REFD SI NECESSAIRE:
      CALL AJREFD(RESU1,RESU2,'ZERO')


      CALL JEDEMA()
      END
