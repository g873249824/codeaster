      SUBROUTINE MANOPG(LIGREL,MNOEPG)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 11/09/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET
C A_UTIL
      IMPLICIT NONE
      CHARACTER*(*) LIGREL,MNOEPG
C ------------------------------------------------------------------
C BUT: CREER LE CHAM_ELEM_S MNOEPG QUI CONTIENDRA LA MATRICE
C      DE PASSAGE NOEUD -> POINT DE GAUSS POUR LES ELEMENTS
C      DU LIGREL
C ------------------------------------------------------------------
C     ARGUMENTS:
C LIGREL  IN/JXIN  K19 : LIGREL
C MNOEPG  IN/JXOUT K19 : CHAM_ELEM_S(VARI_R) DE TYPE 'ELEM'
C ------------------------------------------------------------------
C REMARQUES :
C  MNOEPG(IMA) EST UN VECTEUR V DE REELS DE DIMENSION 2 + NBNO*NBPG
C    V(1) : NBNO
C    V(2) : NBPG
C    V(2+NBNO*(IPG-1)+INO) : MATRICE DE PASSAGE (IPG,INO)

C  ATTENTION : LES MAILLES TARDIVES SONT IGNOREES.
C-----------------------------------------------------------------------

C---- COMMUNS NORMALISES  JEVEUX
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32,JEXNOM,JEXNUM,JEXATR
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ------------------------------------------------------------------
      INTEGER IBID,NBMA,IMA,JCESD,JCESL,JCESV,IAD,JNBPG
      INTEGER ILCNX1,NBNO
      CHARACTER*1 KBID
      CHARACTER*8 MA,LICMP(2)
      CHARACTER*16 PHENO
      CHARACTER*19 CEL,CESVAR
      CHARACTER*24 OBNBPG
C     ------------------------------------------------------------------
      CALL JEMARQ()

      CEL = '&&MANOPG.CEL'
      CESVAR = CEL
      OBNBPG = '&&MANOPG.NBPG'

      CALL DISMOI('F','NOM_MAILLA',LIGREL,'LIGREL',IBID,MA,IBID)
      CALL DISMOI('F','NB_MA_MAILLA',MA,'MAILLAGE',NBMA,KBID,IBID)
      CALL DISMOI('F','PHENOMENE',LIGREL,'LIGREL',IBID,PHENO,IBID)
      CALL JEVEUO(JEXATR(MA//'.CONNEX','LONCUM'),'L',ILCNX1)


C     1. ON RECUPERE LE NOMBRE DES POINTS DE GAUSS DES CATALOGUES
C     ------------------------------------------------------------
      IF (PHENO.EQ.'MECANIQUE') THEN
        CALL NBPTCA(LIGREL,'RAPH_MECA','PCONTMR',OBNBPG)
      ELSE
        CALL UTMESS('F','MANOPG','PAS ENCORE ...')
      END IF
      CALL JEVEUO(OBNBPG,'L',JNBPG)


C     2. CREATION DU CHAM_ELEM_S DE DCEL_I PERMETTANT D'ETENDRE
C        LE CHAM_ELEM RESULTAT DE L'OPTION 'MATR_NO_PG'
C     ---------------------------------------------------------------
      LICMP(1) = 'NPG_DYN'
      LICMP(2) = 'NCMP_DYN'
      CALL CESCRE('V',CESVAR,'ELEM',MA,'DCEL_I',2,LICMP,-1,-1,-2)
      CALL JEVEUO(CESVAR//'.CESD','L',JCESD)
      CALL JEVEUO(CESVAR//'.CESL','E',JCESL)
      CALL JEVEUO(CESVAR//'.CESV','E',JCESV)
      DO 10,IMA = 1,NBMA
        NBNO = ZI(ILCNX1+IMA) - ZI(ILCNX1-1+IMA)
        CALL CESEXI('C',JCESD,JCESL,IMA,1,1,1,IAD)
        IF (IAD.GE.0) CALL UTMESS('F','MANOPG','STOP1')
        ZL(JCESL-1-IAD) = .TRUE.
        ZI(JCESV-1-IAD) = 1

        CALL CESEXI('C',JCESD,JCESL,IMA,1,1,2,IAD)
        IF (IAD.GE.0) CALL UTMESS('F','MANOPG','STOP1')
        ZL(JCESL-1-IAD) = .TRUE.
        ZI(JCESV-1-IAD) = (ZI(JNBPG-1+IMA)*NBNO) + 2

   10 CONTINUE


C     3. CALCUL DE L'OPTION 'MATR_NO_PG'
C     ---------------------------------------------------------------
      CALL CALCUL('S','MATR_NO_PG',LIGREL,0,KBID,KBID,1,CEL,
     &            'PMANOPG','V')
      CALL CELCES(CEL,'V',MNOEPG)


      CALL DETRSD('CHAM_ELEM',CEL)
      CALL DETRSD('CHAM_ELEM_S',CESVAR)
      CALL JEDETR(OBNBPG)

      CALL JEDEMA()
      END
