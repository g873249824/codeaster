      SUBROUTINE CCCMCR(JCESDD,NUMMA,JREPE,JCONX2,JCONX1,
     &                  JCOORD,ADCAR1,ADCAR2,IALPHA,IBETA,
     &                  IEPAIS,JALPHA,JBETA,JGAMMA,LIGRMO,
     &                  INO,PGL,MODELI,CODRET)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 16/10/2012   AUTEUR SELLENET N.SELLENET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER      JCESDD,NUMMA,JREPE,JCONX2,JCONX1,JCOORD
      INTEGER      IALPHA,IBETA,IEPAIS,JALPHA,ADCAR1(3),ADCAR2(3)
      INTEGER      JBETA,JGAMMA,CODRET,INO
      REAL*8       PGL(3,3)
      CHARACTER*16 MODELI
      CHARACTER*19 LIGRMO
C     --- ARGUMENTS ---
C ----------------------------------------------------------------------
C  CALC_CHAMP - CALCUL DE LA MATRICE DE CHANGEMENT DE REPERE
C  -    -       -            -          -             -
C ----------------------------------------------------------------------
C
C  ROUTINE SERVANT A CALCULER LA MATRICE PGL
C
C IN  :
C   BEAUCOUP DE PARAMETRES UTILES POUR EVITER DES APPELS DEJA REALISES
C   DANS L'APPELANT CCVRRL
C
C OUT :
C   PGL     R*   MATRICE DE PASSAGE DU REPERE GLOBAL AU REPERE LOCAL
C   MODELI  K16  NOM DE LA MODELISATION, CETTE INFO EST UTILE A
C                L'APPELANT
C   CODRET  I    CODE RETOUR
C     0 SI OK
C     1,2 OU 3 EN CAS DE PROBLEME
C ----------------------------------------------------------------------
C RESPONSABLE SELLENET N.SELLENET
      INTEGER      NBPT1,IGREL,TE,IBID,IER,NBNOL,POSIN,INO1,INO2,IDIR
      INTEGER      IAD,INOS,NUNO,TYPELE,JCESD,JCESL,JCESV,JCESDC,JCESLC
      INTEGER      JCESVC
C
      REAL*8       COORDC(3,10),ALPHA,BETA,GAMMA,EPAIS,ANG1(3)
C
      CHARACTER*16 NOMTE
C
      CODRET = 3
C
      JCESD = ADCAR1(1)
      JCESL = ADCAR1(2)
      JCESV = ADCAR1(3)
      JCESDC = ADCAR2(1)
      JCESLC = ADCAR2(2)
      JCESVC = ADCAR2(3)
C
C     SI LE CHAMP A TRANSFORMER NE PORTE PAS DE COMPOSANTES
C     SUR LA MAILLE ON DOIT LE PASSER
      NBPT1 = ZI(JCESDD-1+5+4*(NUMMA-1)+3)
      IF ( NBPT1.EQ.0 ) GOTO 9999
      CODRET = 0
C
C     RECUPERATION DE LA MODELISATION
      IGREL = ZI(JREPE-1+2*(NUMMA-1)+1)
      TE = TYPELE(LIGRMO,IGREL)
      CALL JENUNO(JEXNUM('&CATA.TE.NOMTE',TE),NOMTE)
      CALL DISMOI('F','MODELISATION',NOMTE,'TYPE_ELEM',IBID,
     &            MODELI,IER)
C
      NBNOL = ZI(JCONX2+NUMMA)-ZI(JCONX2+NUMMA-1)
      POSIN = ZI(JCONX2+NUMMA-1)
C
C     SUIVANT LE TYPE DE MODELISATION, LE CHANGEMENT DE REPERE
C     N'EST PAS LE MEME BARRE, CABLE, TUYAU
      IF ( (MODELI(1:3).EQ.'POU')
     &     .OR.(MODELI(1:7).EQ.'2D_DIS_')
     &     .OR.(MODELI.EQ.'BARRE')
     &     .OR.(MODELI.EQ.'CABLE')
     &     .OR.(MODELI.EQ.'TUYAU') ) THEN
C
        INO1 = ZI(JCONX1+POSIN-1)
        INO2 = ZI(JCONX1+POSIN)
        DO 70 IDIR = 1,3
          COORDC(IDIR,1) = ZR(JCOORD+3*(INO2-1)+IDIR-1)
  70    CONTINUE
        DO 80 IDIR = 1,3
          COORDC(IDIR,2) = ZR(JCOORD+3*(INO1-1)+IDIR-1)
  80    CONTINUE
C
C       LECTURE DE GAMMA DANS .CARORIEN
        CALL CESEXI('S',JCESD,JCESL,NUMMA,1,1,3,IAD)
        IF ( IAD.GT.0 ) THEN
          GAMMA = ZR(JCESV-1+IAD)
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
C
        CALL MPGLCP('P',NBNOL,COORDC,ALPHA,BETA,
     &              GAMMA,PGL,CODRET)
C
      ELSEIF ( (MODELI.EQ.'COQUE_3D') ) THEN
C
        IF ( NBNOL.LT.7 ) THEN
          CODRET = 1
          GOTO 9999
        ENDIF
        INOS = 0
        DO 160 INO2 = 1,NBNOL
          NUNO = ZI(JCONX1+POSIN+INO2-2)
          IF ( NUNO.EQ.INO ) INOS = INO2
          DO 150 IDIR = 1,3
            COORDC(IDIR,INO2) = ZR(JCOORD+3*(NUNO-1)+IDIR-1)
 150      CONTINUE
 160    CONTINUE
        CALL ASSERT(INOS.NE.0)
C
C       RECHERCHE DE ALPHA ET BETA DANS .CARCOQUE
        CALL CESEXI('S',JCESDC,JCESLC,NUMMA,1,1,IALPHA,IAD)
        ALPHA = ZR(JCESVC-1+IAD)
        CALL CESEXI('S',JCESDC,JCESLC,NUMMA,1,1,IBETA,IAD)
        BETA = ZR(JCESVC-1+IAD)
        CALL CESEXI('S',JCESDC,JCESLC,NUMMA,1,1,IEPAIS,IAD)
        EPAIS = ZR(JCESVC-1+IAD)
C
        CALL C3DREP(NOMTE,EPAIS,ALPHA,BETA,COORDC,INOS,PGL)
C
      ELSEIF ( (MODELI(1:3).EQ.'DKT')
     &     .OR.(MODELI(1:3).EQ.'DST')
     &     .OR.(MODELI(1:4).EQ.'DKTG')
     &     .OR.(MODELI(1:3).EQ.'Q4G')
     &     .OR.(MODELI.EQ.'COQUE')
     &     .OR.(MODELI.EQ.'GRILLE') ) THEN
C
        DO 50 INO2 = 1,NBNOL
          NUNO = ZI(JCONX1+POSIN+INO2-2)
          DO 60 IDIR = 1,3
            COORDC(IDIR,INO2) = ZR(JCOORD+3*(NUNO-1)+IDIR-1)
  60      CONTINUE
  50    CONTINUE
C
C       RECHERCHE DE ALPHA ET BETA DANS .CARCOQUE
        CALL CESEXI('S',JCESDC,JCESLC,NUMMA,1,1,IALPHA,IAD)
        ALPHA = ZR(JCESVC-1+IAD)
        CALL CESEXI('S',JCESDC,JCESLC,NUMMA,1,1,IBETA,IAD)
        BETA = ZR(JCESVC-1+IAD)
C
        CALL MPGLCP('C',NBNOL,COORDC,ALPHA,BETA,
     &              GAMMA,PGL,CODRET)
C
      ELSE
C
C       SI ON EST NI DANS LE CAS D'UNE POUTRE OU D'UNE COQUE
C       C'EST LE CAS GENERAL : CARORIEN
        IF ( JCESD.NE.0 ) THEN
          CALL CESEXI('S',JCESD,JCESL,NUMMA,1,1,JALPHA,IAD)
          ANG1(1) = ZR(JCESV-1+IAD)
          CALL CESEXI('S',JCESD,JCESL,NUMMA,1,1,JBETA,IAD)
          ANG1(2) = ZR(JCESV-1+IAD)
          CALL CESEXI('S',JCESD,JCESL,NUMMA,1,1,JGAMMA,IAD)
          ANG1(3) = ZR(JCESV-1+IAD)
        ELSE
          ANG1(1) = 0.D0
          ANG1(2) = 0.D0
          ANG1(3) = 0.D0
        ENDIF
        CALL MATROT(ANG1,PGL)
C
      ENDIF
C
 9999 CONTINUE
C
      END
