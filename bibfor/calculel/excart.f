      SUBROUTINE EXCART(IMODAT,IPARG)
      IMPLICIT NONE

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 20/04/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE                            VABHHTS J.PELLET
C     ARGUMENTS:
C     ----------
      INTEGER IMODAT,IPARG
C ----------------------------------------------------------------------
C     ENTREES:
C       IGR   : NUMERO DU GREL A TRAITER (COMMON)
C       IMODAT : INDICE DANS LA COLLECTION MODELOC
C ----------------------------------------------------------------------
      INTEGER IGD,NEC,NCMPMX,IACHIN,IACHLO,IICHIN,IANUEQ,LPRNO
      INTEGER ILCHLO,ITYPGD
      COMMON /CAII01/IGD,NEC,NCMPMX,IACHIN,IACHLO,IICHIN,IANUEQ,LPRNO,
     &       ILCHLO,ITYPGD
      COMMON /CAKK02/TYPEGD
      CHARACTER*8 TYPEGD
      INTEGER IAOPTT,LGCO,IAOPMO,ILOPMO,IAOPNO,ILOPNO,IAOPDS
      INTEGER IAOPPA,NPARIO,NPARIN,IAMLOC,ILMLOC,IADSGD
      COMMON /CAII02/IAOPTT,LGCO,IAOPMO,ILOPMO,IAOPNO,ILOPNO,IAOPDS,
     &       IAOPPA,NPARIO,NPARIN,IAMLOC,ILMLOC,IADSGD
      INTEGER IAMACO,ILMACO,IAMSCO,ILMSCO,IALIEL,ILLIEL
      COMMON /CAII03/IAMACO,ILMACO,IAMSCO,ILMSCO,IALIEL,ILLIEL
      INTEGER IACHII,IACHIK,IACHIX
      COMMON /CAII04/IACHII,IACHIK,IACHIX
      INTEGER        NBGR,IGR,NBELGR,JCTEAT,LCTEAT,IAWLOC,IAWLO2,IAWTYP
      COMMON /CAII06/NBGR,IGR,NBELGR,JCTEAT,LCTEAT,IAWLOC,IAWLO2,IAWTYP
      INTEGER IEL
      COMMON /CAII08/IEL

C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER DESC,MODLOC,DEC1,DEC2,LGCATA,IRET
      INTEGER IPT,ITYPLO,JPARAL
      INTEGER NBPOIN,NCMP,NGRMX,DEBUGR
      LOGICAL LPARAL

C DEB-------------------------------------------------------------------

C     PARALLELE OR NOT ?
C     -------------------------
      CALL JEEXIN('&CALCUL.PARALLELE',IRET)
      IF (IRET.NE.0) THEN
        LPARAL=.TRUE.
        CALL JEVEUO('&CALCUL.PARALLELE','L',JPARAL)
      ELSE
        LPARAL=.FALSE.
      ENDIF

C     RECUPERATION DE LA CARTE:
C     -------------------------
      DESC=ZI(IACHII-1+11*(IICHIN-1)+4)
      NGRMX=ZI(DESC-1+2)
      MODLOC=IAMLOC-1+ZI(ILMLOC-1+IMODAT)
      ITYPLO=ZI(MODLOC-1+1)
      NBPOIN=ZI(MODLOC-1+4)
      LGCATA=ZI(IAWLO2-1+5*(NBGR*(IPARG-1)+IGR-1)+2)
      DEBUGR=ZI(IAWLO2-1+5*(NBGR*(IPARG-1)+IGR-1)+5)


C     1-  CAS: CART -> ELNO (OU ELGA) : "EXPAND"
C     -------------------------------------------
      IF ((ITYPLO.EQ.2) .OR. (ITYPLO.EQ.3)) THEN

        CALL ASSERT((ITYPLO.NE.2) .OR. (NBPOIN.LE.10000))
        NCMP=LGCATA/NBPOIN
        CALL EXCAR2(NGRMX,DESC,ZI(MODLOC-1+5),NCMP,DEBUGR)
C       ON DUPPLIQUE LES VALEURS PAR LA FIN POUR NE PAS
C       LES ECRASER :
        DO 20,IEL=NBELGR,1,-1
          IF (LPARAL) THEN
            IF (.NOT.ZL(JPARAL-1+IEL))GOTO 20
          ENDIF
          DO 10,IPT=NBPOIN,1,-1
            DEC1=DEBUGR-1+(IEL-1)*NCMP
            DEC2=DEBUGR-1+(IEL-1)*NCMP*NBPOIN+NCMP*(IPT-1)
            CALL JACOPO(NCMP,TYPEGD,IACHLO+DEC1,IACHLO+DEC2)
            CALL JACOPO(NCMP,'L',ILCHLO+DEC1,ILCHLO+DEC2)
   10     CONTINUE
   20   CONTINUE

C     2-  CAS: CART -> ASSE :
C     -----------------------
      ELSEIF (ITYPLO.GE.4) THEN
        CALL ASSERT(.FALSE.)


C     3-  CAS: CART -> ELEM :
C     -----------------------
      ELSEIF (ITYPLO.EQ.1) THEN
        CALL ASSERT(NBPOIN.EQ.1)
        NCMP=LGCATA
        CALL EXCAR2(NGRMX,DESC,ZI(MODLOC-1+5),NCMP,DEBUGR)


      ENDIF

      END
