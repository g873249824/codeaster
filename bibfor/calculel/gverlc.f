      SUBROUTINE GVERLC(RESUCO,COMPOR,IORD)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 24/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ======================================================================
C      APPELEE PAR L'OPERATEUR :  CALC_G
C
C      BUT: VERIFIE LA COHERENCE ENTRE LA LOI DE COMPORTEMENT ETABLIE
C           DANS CALC_G ET CELLE UTILISEE DANS LE CALCUL
C
C      IN : RESUCO : NOM DE LA SD RESULTAT
C           COMPOR : CARTE DE COMPORTEMENT ETABLIE DANS CALC_G (NMDORC)
C           IORD   : PREMIER NUMERO D'ORDRE RENCONTRE
C
C ======================================================================
      IMPLICIT NONE
C
      INCLUDE 'jeveux.h'
      INTEGER      IORD
      CHARACTER*8  RESUCO
      CHARACTER*24 COMPOR


      INTEGER      IRET,JRESV,JRESD,JRESL,JRESK,JCALV,JCALD,JCALL,JCALK
      INTEGER      NBMA,IADR,IADC,IMA
      CHARACTER*8  NOMA,NOMAIL
      CHARACTER*16 VALK(3)
      CHARACTER*19 CHRESU,CHCALC,CHTMP
      CHARACTER*24 COMPOM

      CALL JEMARQ()

      CHTMP ='&&GVERLC_CHTMP'
      CHRESU='&&GVERLC_CHRESU'
      CHCALC='&&GVERLC_CHCALC'
C
C     PASSAGE CARTE (ETABLIE DANS CALC_G) --> CHAMP SIMPLE,
C     PUIS REDUCTION DU CHAMP SUR LA COMPOSANTE 'RELCOM'
C     QUI CORRESPOND AU NOM DE LA LOI DE COMPORTEMENT
C
      CALL CARCES(COMPOR,'ELEM',' ','V',CHTMP,'A',IRET)
      CALL CESRED(CHTMP,0,0,1,'RELCOM','V',CHCALC)
      CALL DETRSD('CHAM_ELEM_S',CHTMP)

      CALL JEVEUO(CHCALC//'.CESD','L',JCALD)
      CALL JEVEUO(CHCALC//'.CESV','L',JCALV)
      CALL JEVEUO(CHCALC//'.CESL','L',JCALL)
      CALL JEVEUO(CHCALC//'.CESK','L',JCALK)


      NOMA = ZK8(JCALK-1+1)
      NBMA = ZI(JCALD-1+1)


C     RECUPERATION DE LA CARTE DE COMPORTEMENT UTILISEE DANS LE CALCUL
      CALL RSEXCH(' ',RESUCO,'COMPORTEMENT',IORD,COMPOM,IRET)

C     SI LA CARTE DE COMPORTEMENT (RESULTAT) N'EXISTE PAS,
C     CELA SIGNIFIE QUE LA SD RESULTAT A ETE PRODUITE PAR MECA_STATIQUE
C     ET QUE LA LOI DE COMPORTEMENT EST 'ELAS'.
      IF (IRET.NE.0)THEN
        DO 10,IMA = 1,NBMA
          CALL CESEXI('C',JCALD,JCALL,IMA,1,1,1,IADC)
          IF(IADC.GT.0)THEN
             IF(ZK16(JCALV+IADC-1).EQ.'ELAS            ') THEN
                 GOTO 10
             ELSE
               CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',IMA),NOMAIL)
               VALK(1)='ELAS'
               VALK(2)=ZK16(JCALV+IADC-1)
               VALK(3)=NOMAIL
               CALL U2MESK('A','RUPTURE1_42',3,VALK)
               GOTO 9999
             ENDIF
           ENDIF
 10     CONTINUE
C
C     SI LA CARTE DE COMPORTEMENT (RESULTAT) EXISTE,ALORS ON VERIFIE QUE
C     LE COMPORTEMENT AFFECTE A CHAQUE MAILLE CORRESPOND A CELUI ETABLI
C     DANS CALC_G (VOIR ROUTINE NMDORC)
C
      ELSE
        CALL CARCES(COMPOM,'ELEM',' ','V',CHTMP,'A',IRET)
        CALL CESRED(CHTMP,0,0,1,'RELCOM','V',CHRESU)
        CALL DETRSD('CHAM_ELEM_S',CHTMP)

        CALL JEVEUO(CHRESU//'.CESD','L',JRESD)
        CALL JEVEUO(CHRESU//'.CESV','L',JRESV)
        CALL JEVEUO(CHRESU//'.CESL','L',JRESL)
        CALL JEVEUO(CHRESU//'.CESK','L',JRESK)

        DO 20,IMA = 1,NBMA

          CALL CESEXI('C',JRESD,JRESL,IMA,1,1,1,IADR)
          CALL CESEXI('C',JCALD,JCALL,IMA,1,1,1,IADC)

          IF(IADC.GT.0 .AND.IADR.GT.0 )THEN

             IF(ZK16(JRESV+IADR-1).EQ.ZK16(JCALV+IADC-1)) THEN
                 GOTO 20
             ELSE
               CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',IMA),NOMAIL)
               VALK(1)=ZK16(JRESV+IADR-1)
               VALK(2)=ZK16(JCALV+IADC-1)
               VALK(3)=NOMAIL
               CALL U2MESK('A','RUPTURE1_42',3,VALK)
               GOTO 9999
             ENDIF

           ENDIF
 20     CONTINUE

      ENDIF

 9999 CONTINUE

      CALL JEDEMA()

      END
