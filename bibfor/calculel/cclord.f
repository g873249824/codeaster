      SUBROUTINE CCLORD(NUOPLO,NBORDR,LORDRE,NOBASE,OPTDEM,
     &                  MINORD,MAXORD,RESUIN,RESUOU,LISOUT)
      IMPLICIT NONE
C     --- ARGUMENTS ---
      LOGICAL      OPTDEM
      INTEGER      NUOPLO,NBORDR,LORDRE(*),MINORD,MAXORD
      CHARACTER*8  RESUIN,RESUOU,NOBASE
      CHARACTER*24 LISOUT
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 26/04/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ----------------------------------------------------------------------
C  CALC_CHAMP - DETERMINATION LISTE DES NUMEROS D'ORDRE
C  -    -                     -                   ---
C ----------------------------------------------------------------------
C
C  CREATION D'UNE LISTE DE NUMEROS D'ORDRE POUR L'OPTION EN ARGUMENT
C  EN PRENANT EN COMPTE SA LISTE DE DEPENDANCE
C
C  IN  :
C   NUOPLO  I    INDICE DE L'OPTION POUR LAQUELLE ON SOUHAITE OBTENIR
C                LA LISTE DE NUMEROS D'ORDRE
C   NBORDR  I    NOMBRE DE NUMEROS D'ORDRE
C   LORDRE  I*   LISTE DE NUMEROS D'ORDRE
C   NOBASE  K8   BASE DU NOM A PARTIR DE LAQUELLE LE NOM DES OBJETS DE
C                CCLIOP SERONT CONSTRUITS
C   OPTDEM  BOOL EST-CE QUE L'OPTION DEMANDEE EST UN OPTION DEMANDEE
C                PAR L'UTILISATEUR
C   MINORD  I    NUMERO D'ORDRE MIN
C   MAXORD  I    NUMERO D'ORDRE MAX
C   RESUIN  K8   NOM DE LA STRUCTURE DE DONNEES RESULTAT IN
C   RESUOU  K8   NOM DE LA STRUCTURE DE DONNEES RESULTAT OUT
C
C  OUT :
C   LISOUT  K24  NOM JEVEUX DE LA LISTE DE NUMERO D'ORDRE
C ----------------------------------------------------------------------
C RESPONSABLE SELLENET N.SELLENET
C     ----- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER        ZI
      COMMON /IVARJE/ZI(1)
      REAL*8         ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16     ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL        ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8    ZK8
      CHARACTER*16          ZK16
      CHARACTER*24                  ZK24
      CHARACTER*32                          ZK32
      CHARACTER*80                                  ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      INTEGER      JLISOP,JLIORI,JLIDEP,JORDOP,IERD,INDDEB,INDFIN
      INTEGER      NOPOUS,IORDR,CURMAX,CURMIN,ITER,DECAL,NUMORD,JLNOIN
      INTEGER      JORDO2,JLISDE

      CHARACTER*1  ISODEP
      CHARACTER*5  NUMOPT
      CHARACTER*11 NOBAOP
      CHARACTER*16 OPTION
      CHARACTER*19 NOSYOU
      CHARACTER*24 NOLIOP,NOLORI,NOLDEP,NOLIIN,NOLISD

      CALL JEMARQ()

      CALL CODENT(NUOPLO,'D0',NUMOPT)
      NOBAOP = NOBASE//'.OP'
      LISOUT = NOBAOP//NUMOPT

      ISODEP = ' '
      NOLIOP = NOBASE//'.LISOPT'
      NOLORI = NOBASE//'.LISORI'
      NOLDEP = NOBASE//'.LISDEP'
      NOLIIN = NOBASE//'.LNOINS'
      NOLISD = NOBASE//'.ISODEP'

      CALL JEVEUO(NOLIOP,'L',JLISOP)
      CALL JEVEUO(NOLORI,'L',JLIORI)
      CALL JEVEUO(NOLDEP,'L',JLIDEP)
      CALL JEVEUO(NOLIIN,'E',JLNOIN)
      CALL JEVEUO(NOLISD,'L',JLISDE)

      OPTION = ZK24(JLISOP+NUOPLO-1)
      INDDEB = ZI(JLIORI+2*NUOPLO-2)
      INDFIN = ZI(JLIORI+2*NUOPLO-1)
      ISODEP = ZK8(JLISDE+NUOPLO-1)

      CALL WKVECT(LISOUT,'V V I ',NBORDR+3,JORDOP)

      IF ( INDDEB.NE.0 ) THEN
C       CAS 1 : CETTE OPTION DEPEND D'AUTRES OPTIONS A CALCULER
C               AUQUEL CAS, IL FAUT REGARDER COMMENT ELLE EN DEPEND
C               ET LA LISTE DES NUMEROS D'ORDRE DE SES PARENTS
        CALL JEVEUO(NOLIIN,'E',JLNOIN)
        CURMAX = MAXORD
        CURMIN = MINORD
        DO 10 ITER = INDDEB,INDFIN
          CALL JEVEUO(ZK24(JLNOIN+ITER-1),'L',JORDO2)

          IF ( ZK8(JLIDEP+ITER-1).EQ.'NP1' ) THEN
            DECAL = -1
          ELSEIF ( ZK8(JLIDEP+ITER-1).EQ.'NM1' ) THEN
            DECAL = +1
          ELSE
            DECAL = 0
          ENDIF

C         LA LISTE DE NUMEROS D'ORDRE PROVIENT DE OP0058
C         ELLE EST DONC CROISSANTE
          CURMAX = MIN(CURMAX,ZI(JORDO2+2)+DECAL)
          CURMIN = MAX(CURMIN,ZI(JORDO2+1)+DECAL)
   10   CONTINUE

        NOPOUS = 0
        DO 30 IORDR = 1,NBORDR
          NUMORD = LORDRE(IORDR)
          IF ( (ISODEP.EQ.'-').AND.(NUMORD.EQ.MINORD) ) THEN
            GOTO 30
          ELSEIF ( (ISODEP.EQ.'+').AND.(NUMORD.EQ.MAXORD) ) THEN
            GOTO 30
          ENDIF
          IF ( NUMORD.GE.CURMIN ) THEN
            IF ( NUMORD.GT.CURMAX ) GOTO 40
            NOSYOU = ' '
            CALL RSEXCH(RESUIN,OPTION,NUMORD,NOSYOU,IERD)
            IF ( IERD.NE.0 ) THEN
              CALL RSEXCH(RESUOU,OPTION,NUMORD,NOSYOU,IERD)
            ENDIF
            IF ( (IERD.NE.0).OR.OPTDEM ) THEN
              NOPOUS = NOPOUS+1
              ZI(JORDOP+NOPOUS+2) = NUMORD
            ENDIF
          ENDIF
   30   CONTINUE

   40   CONTINUE
C        ZI(JORDOP+1) = ZI(JORDOP+3)
C        ZI(JORDOP+2) = ZI(JORDOP+NOPOUS+2)
        ZI(JORDOP+1) = CURMIN
        ZI(JORDOP+2) = CURMAX
        ZI(JORDOP) = NOPOUS
      ELSE
C       CAS 2 : AUCUNE DEPENDANCE, ON PEUT DONC RECOPIER LA LISTE
C               DES NUMEROS D'ORDRE EN VERIFIANT QUE L'OPTION
C               N'EXISTE NI DANS RESUIN NI DANS RESUOU
        NOPOUS = 0
        DO 20 IORDR = 1,NBORDR
          NUMORD = LORDRE(IORDR)
          IF ( (ISODEP.EQ.'-').AND.(NUMORD.EQ.MINORD) ) THEN
            GOTO 20
          ELSEIF ( (ISODEP.EQ.'+').AND.(NUMORD.EQ.MAXORD) ) THEN
            GOTO 20
          ENDIF
          NOSYOU = ' '
          CALL RSEXCH(RESUOU,OPTION,NUMORD,NOSYOU,IERD)

          IF ( (IERD.NE.0).OR.OPTDEM ) THEN
            NOPOUS = NOPOUS+1
            ZI(JORDOP+NOPOUS+2) = NUMORD
          ENDIF
   20   CONTINUE
        ZI(JORDOP+1) = LORDRE(1)
        ZI(JORDOP+2) = LORDRE(NBORDR)
        ZI(JORDOP) = NOPOUS
      ENDIF

      ZK24(JLNOIN+NUOPLO-1) = LISOUT

      CALL JEDEMA()

      END
