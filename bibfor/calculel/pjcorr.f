      SUBROUTINE PJCORR(CNS1Z,BASEZ,CES2Z,IRET,LIGREL,CORRES)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 12/07/2010   AUTEUR BERARD A.BERARD 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
C RESPONSABLE BERARD A.BERARD
C
C
      IMPLICIT NONE
      CHARACTER*(*) CNS1Z,BASEZ,CES2Z
      CHARACTER*16 CORRES
      INTEGER IRET
C
C COMMANDE:  PROJ_CHAMP
C RECOPIE DES VALEURS PROJETEES AUX NOEUDS DU MAILLAGE 2 PRIME
C SUR LES POINTS DE GAUSS DU MAILLAGE 2
C ON UTILISE LA SD CORRES POUR CELA
C (TABLEAU AUXILIAIRE .PJEF_EL)


C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C     ------------------------------------------------------------------
C     VARIABLES LOCALES:
C     ------------------
      CHARACTER*1 KBID,BASE
      CHARACTER*3 TSCA

      CHARACTER*8 NOMGD

      CHARACTER*19 CNS1,CES2, LIGREL, CEL2
      INTEGER  JPO, IPO
      INTEGER JCE2C,JCE2L,JCE2V,JCE2D


      INTEGER JCNS1C,JCNS1L,JCNS1V,JCNS1K,JCNS1D
      INTEGER NBNO1,NCMP,IBID
      INTEGER NCMPMX,IAD2
      INTEGER ICMP
          
      INTEGER IMA,IPT, ISP




C     ------------------------------------------------------------------

      CALL JEMARQ()
      IRET = 0
      CNS1 = CNS1Z
      CES2 = CES2Z
      CEL2 = 'CHAMEL2'
      BASE = BASEZ




C     1- RECUPERATION D'INFORMATIONS DANS CNS1 :
C     ------------------------------------------
      CALL JEVEUO(CNS1//'.CNSK','L',JCNS1K)
      CALL JEVEUO(CNS1//'.CNSD','L',JCNS1D)
      CALL JEVEUO(CNS1//'.CNSC','L',JCNS1C)
      CALL JEVEUO(CNS1//'.CNSV','L',JCNS1V)
      CALL JEVEUO(CNS1//'.CNSL','L',JCNS1L)


      NOMGD = ZK8(JCNS1K-1+2)
      NBNO1 = ZI(JCNS1D-1+1)

      CALL DISMOI('F','TYPE_SCA',NOMGD,'GRANDEUR',IBID,TSCA,IBID)
      CALL DISMOI('F','NB_CMP_MAX',NOMGD,'GRANDEUR',NCMPMX,KBID,IBID)




C------------------------------------------------------------------
C     4- ALLOCATION DE CES2 (ELGA):



C     -----------------------------
      CALL DETRSD('CHAM_ELEM_S',CES2)
      CALL DETRSD('CHAM_ELEM',CEL2)

      CEL2 = 'CHAMEL2'
      CALL ALCHML(LIGREL,'SIEF_ELGA_ELNO',' ',BASE,CEL2,IRET,' ')



      CALL CELCES(CEL2,BASE,CES2)



      CALL JEVEUO(CES2//'.CESD','L',JCE2D)
      CALL JEVEUO(CES2//'.CESC','L',JCE2C)
      CALL JEVEUO(CES2//'.CESV','E',JCE2V)
      CALL JEVEUO(CES2//'.CESL','E',JCE2L)





C------------------------------------------------------------------
C     5- REMPLISSAGE DES VALEURS DE CES2 :
C     -------------------------------



      CALL JEVEUO(CORRES//'.PJEF_EL','L',JPO)

C NBNO1 EST LE NOMBRE DE PSEUDO-NOEUDS DU MAILLAGE 2


      DO 98 IPO=1,NBNO1
        IMA=ZI(JPO-1+2*IPO-1)
        IPT= ZI(JPO-1+2*IPO)
        ISP=1
        NCMP = ZI(JCE2D-1+5+4* (IMA-1)+3)



        DO 92 ICMP=1,NCMP
          CALL CESEXI('C',JCE2D,JCE2L,IMA,IPT,ISP,ICMP,IAD2)

          IF (IAD2.LT.0) THEN 
            IAD2=-IAD2
          ENDIF

          ZR(JCE2V-1+IAD2)=
     &             ZR(JCNS1V+(IPO-1)*NCMP+ICMP-1)
          ZL(JCE2L-1+IAD2)=.TRUE.




   92   CONTINUE




   98 CONTINUE
      



      CALL JEDEMA()





      END
