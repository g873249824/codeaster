      SUBROUTINE PJ4DAP(INO2,GEOM2,MA2,GEOM1,TRIA3,COBARY,ITR3,NBTROU,
     &                  BTDI,BTVR,BTNB,BTLC,BTCO,IFM,NIV,LDMAX,DISTMA,
     &                  LOIN,DMIN)
      IMPLICIT NONE
      REAL*8 COBARY(3),GEOM1(*),GEOM2(*),BTVR(*)
      INTEGER ITR3,NBTROU,BTDI(*),BTNB(*),BTLC(*),BTCO(*)
      INTEGER TRIA3(*),IFM,NIV
      CHARACTER*8 MA2
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 18/03/2008   AUTEUR CNGUYEN C.NGUYEN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     BUT :
C       TROUVER LE TRIA3 QUI SERVIRA A INTERPOLER LE NOEUD INO2
C       AINSI QUE LES COORDONNEES BARYCENTRIQUES DE INO2 DANS CE TRIA3
C
C  IN   INO2       I  : NUMERO DU NOEUD DE M2 CHERCHE
C  IN   MA2        K8 : NOM DU MAILLAGE M2
C  IN   GEOM2(*)   R  : COORDONNEES DES NOEUDS DU MAILLAGE M2
C  IN   GEOM1(*)   R  : COORDONNEES DES NOEUDS DU MAILLAGE M1
C  IN   TRIA3(*)   I  : OBJET '&&PJXXCO.TRIA3'
C  IN   BTDI(*)    I  : OBJET .BT3DDI DE LA SD BOITE_3D
C  IN   BTVR(*)    R  : OBJET .BT3DVR DE LA SD BOITE_3D
C  IN   BTNB(*)    I  : OBJET .BT3DNB DE LA SD BOITE_3D
C  IN   BTLC(*)    I  : OBJET .BT3DLC DE LA SD BOITE_3D
C  IN   BTCO(*)    I  : OBJET .BT3DCO DE LA SD BOITE_3D
C  IN   IFM        I  : NUMERO LOGIQUE DU FICHIER MESSAGE
C  IN   NIV        I  : NIVEAU D'IMPRESSION POUR LES "INFO"
C  OUT  NBTROU     I  : NOMBRE DE TRIA3 SOLUTIONS
C  OUT  ITR3       I  : NUMERO D'UN TRIA3 SOLUTION
C  OUT  COBARY(3)  R  : COORDONNEES BARYCENTRIQUES DE INO2 DANS ITR3
C  OUT  DMIN       R  : DISTANCE DE INO2 AU BORD DE ITR3 SI INO2 EST
C                       EXTERIEUR A ITR3. DMIN=0 SINON.
C  OUT  LOIN       L  : .TRUE. SI DMIN > 10% DIAMETRE(ITR3)
C ----------------------------------------------------------------------
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
      REAL*8 COBAR2(3),DMIN,D2,R8MAEM,SURF,RTR3
      INTEGER P,Q,R,P1,Q1,P2,Q2,R1,R2,INO2,I,K,IPOSI,NX,NY,NTRBT,IBID
      CHARACTER*8 NONO2,ALARME

      LOGICAL LDMAX,LOIN
      REAL*8 DISTMA,VALR(2)
C DEB ------------------------------------------------------------------
C     NTR3=TRIA3(1)
      NBTROU=0
      LOIN=.FALSE.
      DMIN=0.D0

      NX=BTDI(1)
      NY=BTDI(2)


C     --  ON CHERCHE LE TRIA3 ITR3 LE PLUS PROCHE DE INO2 :
C     ------------------------------------------------------
      IF (LDMAX) THEN
        DMIN=DISTMA
      ELSE
        DMIN=R8MAEM()
      ENDIF

C       -- ON RECHERCHE LA GROSSE BOITE CANDIDATE :
      CALL PJ3DGB(INO2,GEOM2,GEOM1,TRIA3,4,BTDI,BTVR,BTNB,BTLC,BTCO,P1,
     &            Q1,R1,P2,Q2,R2)
      DO 40,P=P1,P2
        DO 30,Q=Q1,Q2
          DO 20,R=R1,R2
            NTRBT=BTNB((R-1)*NX*NY+(Q-1)*NX+P)
            IPOSI=BTLC((R-1)*NX*NY+(Q-1)*NX+P)
            DO 10,K=1,NTRBT
              I=BTCO(IPOSI+K)
              CALL PJ4DA2(INO2,GEOM2,I,GEOM1,TRIA3,COBAR2,D2,SURF)
              IF (SQRT(D2).LT.DMIN) THEN
                RTR3=SURF
                ITR3=I
                DMIN=SQRT(D2)
                NBTROU=1
                COBARY(1)=COBAR2(1)
                COBARY(2)=COBAR2(2)
                COBARY(3)=COBAR2(3)
              ENDIF
   10       CONTINUE
   20     CONTINUE
   30   CONTINUE
   40 CONTINUE

      IF (RTR3.EQ.0) THEN
        LOIN=.TRUE.
      ELSE
        RTR3 = RTR3** (1.D0/2.D0)
        IF (DMIN/RTR3.GT.1.D-1) LOIN=.TRUE.
      END IF
      


      END
