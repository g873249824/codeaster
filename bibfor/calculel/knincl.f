      SUBROUTINE KNINCL(LONG,LK1,L1,LK2,L2,IRET)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 04/09/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PELLET J.PELLET
C A_UTIL
      IMPLICIT NONE
      INTEGER L1,L2,IRET,LONG
      CHARACTER*(*) LK1(L1),LK2(L2)
C ---------------------------------------------------------------------
C BUT: VERIFIER QU'UNE LISTE DE K8 (LK1) EST INCLUSE DANS UNE AUTRE
C      (LK2)
C ---------------------------------------------------------------------
C     ARGUMENTS:
C LONG   IN   I     : 8,16 OU 24 : LONGUEUR DES CHAINES DE LK1 ET LK2
C LK1    IN   V(K*) : LISTE DE K* QUI DOIT ETRE INCLUSE DANS LK2
C L1     IN   I     : LONGUEUR DE LA LISTE LK1
C LK2    IN   V(K*) : LISTE DES K* QUI DOIT CONTENIR LK1
C L2     IN   I     : LONGUEUR DE LA LISTE LK2
C IRET   OUT  I     : CODE RETOUR :
C                     /0 : OK : TOUS LES ELEMENTS DE LK1 SONT DANS LK2
C                     /I1>0 : NUMERO DU 1ER ELEMENT DE LK1 NON PRESENT
C                             DANS LK2
C----------------------------------------------------------------------
      INTEGER KNINDI,K1,K2
C DEB

      CALL ASSERT((LONG.EQ.8).OR.(LONG.EQ.16).OR.(LONG.EQ.24))

      IRET = 0
      DO 10,K1 = 1,L1
C          -- ON VERIFIE QUE LK1(K1) SE TROUVE DANS LK2 :
        K2 = KNINDI(LONG,LK1(K1),LK2,L2)

        IF (K2.EQ.0) THEN
          IRET = K1
          GO TO 20
        END IF

   10 CONTINUE

   20 CONTINUE


      END
