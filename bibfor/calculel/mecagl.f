      SUBROUTINE MECAGL(OPTION,RESULT,MODELE,DEPLA,THETAI,MATE,COMPOR,
     &                  NCHAR,LCHAR,SYMECH,CHFOND,NNOFF,IORD,NDEG,
     &                  THLAGR,GLAGR,THLAG2,MILIEU,NDIMTE,PAIR,
     &                  EXTIM,TIME,NBPRUP,NOPRUP,CHVITE,CHACCE,
     &                  LMELAS,NOMCAS,KCALC,FONOEU)
      IMPLICIT  NONE

      INCLUDE 'jeveux.h'

      INTEGER IORD,NCHAR,NBPRUP,NDIMTE

      REAL*8 TIME

      CHARACTER*8 MODELE,THETAI,LCHAR(*)
      CHARACTER*8 RESULT,SYMECH,KCALC
      CHARACTER*16 OPTION,NOPRUP(*),NOMCAS
      CHARACTER*24 DEPLA,CHFOND,MATE,COMPOR
      CHARACTER*24 CHVITE,CHACCE,FONOEU

      LOGICAL EXTIM,THLAGR,GLAGR,MILIEU,PAIR,THLAG2,LMELAS
C ......................................................................
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 12/02/2013   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     TOLE CRP_21

C  - FONCTION REALISEE:   CALCUL DU TAUX DE RESTITUTION LOCAL D'ENERGIE

C  IN    OPTION --> CALC_G OU G_LAGR (SI CHARGES REELLES)
C               --> CALC_G_F OU G_LAGR_F (SI CHARGES FONCTIONS)
C  IN    RESULT --> NOM UTILISATEUR DU RESULTAT ET TABLE
C  IN    MODELE --> NOM DU MODELE
C  IN    DEPLA  --> CHAMP DE DEPLACEMENT
C  IN    THETAI --> BASE DE I CHAMPS THETA
C  IN    MATE   --> CHAMP DE MATERIAUX
C  IN    COMPOR --> COMPORTEMENT
C  IN    NCHAR  --> NOMBRE DE CHARGES
C  IN    LCHAR  --> LISTE DES CHARGES
C  IN    SYMECH --> SYMETRIE DU CHARGEMENT
C  IN    CHFOND --> VECTEUR CONTENANT LES ABSCISSES CURVILIGNES DES
C                   NOEUDS DU FOND DE FISSURE
C  IN    NNOFF  --> NOMBRE DE NOEUDS DU FOND DE FISSURE
C  IN    TIME   --> INSTANT DE CALCUL
C  IN    IORD   --> NUMERO D'ORDRE DE LA SD
C  IN    THLAGR --> VRAI SI LISSAGE THETA_LAGRANGE
C  IN    THLAG2 --> VRAI SI LISSAGE THETA_LAGRANGE_REGU
C  IN    GLAGR  --> VRAI SI LISSAGE G_LAGRANGE
C  IN    NDEG   --> DEGRE DU POLYNOME DE LEGENDRE
C  IN    LMELAS --> TRUE SI LE TYPE DE LA SD RESULTAT EST MULT_ELAS
C  IN    NOMCAS --> NOM DU CAS DE CHARGE SI LMELAS
C  IN    KCALC  --> = 'NON' : ON RECUPERE LES CHAMPS DE CONTRAINTES
C                             ET D'ENERGIE DE LA SD RESULTAT
C                   = 'OUI' : ON RECALCULE LES CHAMPS DE CONTRAINTES
C                             ET D'ENERGIE
C  IN    FONOEU --> NOM DES NOEUDS DE FOND DE FISSURE
C ......................................................................

      INTEGER NBMXPA
      PARAMETER (NBMXPA = 20)

      INTEGER I,IBID,IADRG,IADRGS,IRET,JRESU,NCHIN
      INTEGER NNOFF,NUM,INCR,NRES,NSIG,INO1,INO2,INGA
      INTEGER NDEG,IERD,LIVI(NBMXPA), NUMFON
      INTEGER IADRNO,IADGI,IADABS,IFM,NIV,IFON

      REAL*8 GTHI,LIVR(NBMXPA),XL

      COMPLEX*16 CBID,LIVC(NBMXPA)

      LOGICAL FONC,EPSI,LXFEM

      CHARACTER*2 CODRET
      CHARACTER*8 K8BID,RESU,FISS
      CHARACTER*8 LPAIN(30),LPAOUT(1)
      CHARACTER*16 OPTI
      CHARACTER*19 CHROTA,CHPESA,CF2D3D,CHPRES,CHVOLU,CF1D2D,CHEPSI
      CHARACTER*19 CHVARC,CHVREF
      CHARACTER*19 BASLOC,PINTTO,CNSETO,HEAVTO,LONCHA,LNNO,LTNO,PMILTO
      CHARACTER*19 LONGCO,PINTER,AINTER,CFACE,BASECO
      CHARACTER*24 LIGRMO,CHGEOM,CHGTHI
      CHARACTER*24 CHSIGI,SIGOUT,CELMOD
      CHARACTER*24 LCHIN(40),LCHOUT(1),CHTHET,CHTIME
      CHARACTER*24 OBJCUR,NORMFF,PAVOLU,PAPRES,PA2D3D
      CHARACTER*24 CHSIG,CHEPSP,CHVARI,TYPE,PEPSIN,LIVK(NBMXPA)
      INTEGER      IARG
C     ------------------------------------------------------------------

      CALL JEMARQ()

      CALL INFNIV(IFM,NIV)

      CHVARC = '&&MECAGL.VARC'
      CHVREF = '&&MECAGL.VARC.REF'
      CHSIGI = '&&MECALG.CHSIGI'
      CELMOD = '&&MECALG.CELMOD'
      SIGOUT = '&&MECALG.SIGOUT'
C- RECUPERATION DU CHAMP GEOMETRIQUE

      CALL MEGEOM(MODELE,CHGEOM)

      CALL GETVID('THETA','FISSURE',1,IARG,1,FISS,IBID)
      LXFEM = .FALSE.
      IF (IBID.NE.0) LXFEM = .TRUE.

C- RECUPERATION DU COMPORTEMENT

      CALL GETFAC('COMP_INCR',INCR)

      IF (INCR.NE.0 .AND. LXFEM) THEN
        CALL U2MESS('F','RUPTURE1_43')
      ENDIF

      IF (INCR.NE.0) THEN
        CALL GETVID(' ','RESULTAT',0,IARG,1,RESU,NRES)
        CALL DISMOI('F','TYPE_RESU',RESU,'RESULTAT',IBID,TYPE,IERD)
        IF (TYPE.NE.'EVOL_NOLI') THEN
          CALL U2MESS('F','RUPTURE1_15')
        END IF
        CALL RSEXCH('F',RESU,'SIEF_ELGA',IORD,CHSIG,IRET)
        CALL RSEXCH('F',RESU,'EPSP_ELNO',IORD,CHEPSP,IRET)
        CALL RSEXCH('F',RESU,'VARI_ELNO',IORD,CHVARI,IRET)
      END IF

C- RECUPERATION DE L'ETAT INITIAL
      IF (INCR.NE.0) THEN
          CALL GETVID('COMP_INCR','SIGM_INIT',1,IARG,1,CHSIGI,NSIG)
C- VERIFICATION DU TYPE DE CHAMP + TRANSFO, SI NECESSAIRE, EN CHAMP ELNO
          IF (NSIG.NE.0) THEN
              CALL CHPVER ('C', CHSIGI,'ELNO','SIEF_R',INO1)
              CALL CHPVER ('C', CHSIGI,'NOEU','SIEF_R',INO2)
              CALL CHPVER ('C', CHSIGI,'ELGA','SIEF_R',INGA)
              IF ((INO1.EQ.1).AND.(INO2.EQ.1).AND.(INGA.EQ.1))THEN
                 CALL U2MESS('F','RUPTURE1_12')
              ELSE IF (INGA.EQ.0) THEN
                 LIGRMO = MODELE//'.MODELE'
                 CALL ALCHML(LIGRMO,'CALC_G','PSIGINR','V',CELMOD,
     &            IRET,' ')
                 CALL CHPCHD(CHSIGI,'ELNO',CELMOD,'NON','V',
     &           SIGOUT)
                 CALL CHPVER ('C', SIGOUT,'ELNO','SIEF_R',INO1)
              END IF
          ENDIF
      ELSE
          NSIG=0
      ENDIF

C- RECUPERATION (S'ILS EXISTENT) DES CHAMP DE TEMPERATURES (T,TREF)
      CALL VRCINS(MODELE,MATE,' ',TIME,CHVARC,CODRET)
      CALL VRCREF(MODELE,MATE(1:8),'        ',CHVREF(1:19))

C - TRAITEMENT DES CHARGES

      CHVOLU = '&&MECAGL.VOLU'
      CF1D2D = '&&MECAGL.1D2D'
      CF2D3D = '&&MECAGL.2D3D'
      CHPRES = '&&MECAGL.PRES'
      CHEPSI = '&&MECAGL.EPSI'
      CHPESA = '&&MECAGL.PESA'
      CHROTA = '&&MECAGL.ROTA'
      CALL GCHARG(MODELE,NCHAR,LCHAR,CHVOLU,CF1D2D,CF2D3D,CHPRES,CHEPSI,
     &            CHPESA,CHROTA,FONC,EPSI,TIME,IORD)
      IF (FONC) THEN
        PAVOLU = 'PFFVOLU'
        PA2D3D = 'PFF2D3D'
        PAPRES = 'PPRESSF'
        PEPSIN = 'PEPSINF'
        IF (OPTION.EQ.'CALC_G') THEN
          OPTI = 'CALC_G_F'
        ELSE
          OPTI = 'G_LAGR_F'
        END IF
      ELSE
        PAVOLU = 'PFRVOLU'
        PA2D3D = 'PFR2D3D'
        PAPRES = 'PPRESSR'
        PEPSIN = 'PEPSINR'
        OPTI=OPTION
      END IF

C- CALCUL DES G(THETA_I) AVEC I=1,NDIMTE  NDIMTE = NNOFF  SI TH-LAGRANGE
C                                         NDIMTE = NDEG+1 SI TH-LEGENDRE
      IF(THLAG2) THEN
        NDIMTE = NDIMTE
      ELSEIF (THLAGR) THEN
        NDIMTE = NNOFF
      ELSE
        NDIMTE = NDEG + 1
      END IF

      CALL WKVECT('&&MECAGL.VALG','V V R8',NDIMTE,IADRG)
      CALL JEVEUO(THETAI,'L',JRESU)

C --- RECUPERATION DES DONNEES X-FEM
      IF  (LXFEM) THEN
        PINTTO = MODELE//'.TOPOSE.PIN'
        CNSETO = MODELE//'.TOPOSE.CNS'
        HEAVTO = MODELE//'.TOPOSE.HEA'
        LONCHA = MODELE//'.TOPOSE.LON'
        PMILTO = MODELE//'.TOPOSE.PMI'
C       ON NE PREND PAS LES LSN ET LST DU MODELE
C       CAR LES CHAMPS DU MODELE SONT DEFINIS QUE AUTOUR DE LA FISSURE
C       OR ON A BESOIN DE LSN ET LST MEME POUR LES
        LNNO   = FISS//'.LNNO'
        LTNO   = FISS//'.LTNO'
        BASLOC = FISS//'.BASLOC'
        LONGCO = MODELE//'.TOPOFAC.LO'
        PINTER = MODELE//'.TOPOFAC.OE'
        AINTER = MODELE//'.TOPOFAC.AI'
        CFACE  = MODELE//'.TOPOFAC.CF'
        BASECO = MODELE//'.TOPOFAC.BA'
      END IF

      DO 20 I = 1,NDIMTE
        CHTHET = ZK24(JRESU+I-1)
        CALL CODENT(I,'G',CHGTHI)
        LPAOUT(1) = 'PGTHETA'
        LCHOUT(1) = CHGTHI
        LPAIN(1) = 'PGEOMER'
        LCHIN(1) = CHGEOM
        LPAIN(2) = 'PDEPLAR'
        LCHIN(2) = DEPLA
        LPAIN(3) = 'PTHETAR'
        LCHIN(3) = CHTHET
        LPAIN(4) = 'PMATERC'
        LCHIN(4) = MATE
        LPAIN(5) = 'PVARCPR'
        LCHIN(5) = CHVARC
        LPAIN(6) = 'PVARCRR'
        LCHIN(6) = CHVREF
        LPAIN(7) = PAVOLU(1:8)
        LCHIN(7) = CHVOLU
        LPAIN(8) = PA2D3D(1:8)
        LCHIN(8) = CF2D3D
        LPAIN(9) = PAPRES(1:8)
        LCHIN(9) = CHPRES
        LPAIN(10) = 'PPESANR'
        LCHIN(10) = CHPESA
        LPAIN(11) = 'PROTATR'
        LCHIN(11) = CHROTA
        LPAIN(12) = PEPSIN(1:8)
        LCHIN(12) = CHEPSI
        LPAIN(13) = 'PCOMPOR'
        LCHIN(13) = COMPOR

        LIGRMO = MODELE//'.MODELE'
        NCHIN = 13

        IF (LXFEM) THEN
          LPAIN(14) = 'PPINTTO'
          LCHIN(14) = PINTTO
          LPAIN(15) = 'PCNSETO'
          LCHIN(15) = CNSETO
          LPAIN(16) = 'PHEAVTO'
          LCHIN(16) = HEAVTO
          LPAIN(17) = 'PLONCHA'
          LCHIN(17) = LONCHA
          LPAIN(18) = 'PLSN'
          LCHIN(18) = LNNO
          LPAIN(19) = 'PLST'
          LCHIN(19) = LTNO
          LPAIN(20) = 'PBASLOR'
          LCHIN(20) = BASLOC

          LPAIN(21) = 'PLONGCO'
          LCHIN(21) = LONGCO
          LPAIN(22) = 'PPINTER'
          LCHIN(22) = PINTER
          LPAIN(23) = 'PAINTER'
          LCHIN(23) = AINTER
          LPAIN(24) = 'PCFACE'
          LCHIN(24) = CFACE
          LPAIN(25) = 'PPMILTO'
          LCHIN(25) = PMILTO
          LPAIN(26) = 'PBASECO'
          LCHIN(26) = BASECO

          NCHIN = 26
        END IF

        IF ((OPTI.EQ.'CALC_G_F') .OR. (OPTI.EQ.'G_LAGR_F'))THEN
          CHTIME = '&&MECAGL.CH_INST_R'
          CALL MECACT('V',CHTIME,'MODELE',LIGRMO,'INST_R',1,'INST',IBID,
     &                TIME,CBID,K8BID)
          LPAIN(NCHIN+1) = 'PTEMPSR'
          LCHIN(NCHIN+1) = CHTIME
          NCHIN = NCHIN + 1
        END IF
        IF (INCR.NE.0) THEN
          LPAIN(NCHIN+1) = 'PCONTRR'
          LCHIN(NCHIN+1) = CHSIG
          LPAIN(NCHIN+2) = 'PDEFOPL'
          LCHIN(NCHIN+2) = CHEPSP
          LPAIN(NCHIN+3) = 'PVARIPR'
          LCHIN(NCHIN+3) = CHVARI
          NCHIN = NCHIN + 3

C       CHAMP DE CONTRAINTE INITIALE
          IF (NSIG.NE.0) THEN
            LPAIN(NCHIN+1) = 'PSIGINR'
            IF (INGA.EQ.0) THEN
               LCHIN(NCHIN+1)=SIGOUT
            ELSE
               LCHIN(NCHIN+1) = CHSIGI
            END IF
            NCHIN = NCHIN + 1
          END IF
        END IF
        IF (OPTION.EQ.'CALC_G'.OR.OPTION.EQ.'CALC_G_F') THEN
          IF (CHVITE.NE.' ') THEN
            LPAIN(NCHIN+1) = 'PVITESS'
            LCHIN(NCHIN+1) =  CHVITE
            LPAIN(NCHIN+2) = 'PACCELE'
            LCHIN(NCHIN+2) =  CHACCE
            NCHIN = NCHIN + 2
          END IF
        END IF
        IF(KCALC.EQ.'NON')THEN
            CALL GETVID(' ','RESULTAT',0,IARG,1,RESU,IRET)
            CALL RSEXCH(' ',RESU,'SIEF_ELGA',IORD,CHSIG,IRET)
            LPAIN(NCHIN+1) = 'PCONTGR'
            LCHIN(NCHIN+1) =  CHSIG
            NCHIN = NCHIN + 1
        ENDIF

        CALL CALCUL('S',OPTI,LIGRMO,NCHIN,LCHIN,LPAIN,1,LCHOUT,LPAOUT,
     &              'V','OUI')
        CALL MESOMM(CHGTHI,1,IBID,GTHI,CBID,0,IBID)
        ZR(IADRG+I-1) = GTHI
   20 CONTINUE

C- CALCUL DE G(S) SUR LE FOND DE FISSURE PAR 4 METHODES
C- PREMIERE METHODE : G_LEGENDRE ET THETA_LEGENDRE
C- DEUXIEME METHODE : G_LEGENDRE ET THETA_LAGRANGE
C- TROISIEME METHODE: G_LAGRANGE ET THETA_LAGRANGE
C    (OU G_LAGRANGE_NO_NO ET THETA_LAGRANGE)
C- QUATRIEME METHODE: G_LAGRANGE_REGU ET THETA_LAGRANGE_REGU

      CALL WKVECT('&&MECAGL.VALG_S','V V R8',NNOFF,IADRGS)
      IF (GLAGR.OR.THLAG2) THEN
        CALL WKVECT('&&MECAGL.VALGI','V V R8',NNOFF,IADGI)
      ELSE
        CALL WKVECT('&&MECAGL.VALGI','V V R8',NDEG+1,IADGI)
      END IF
C ABSCISSE CURVILIGNE
      CALL JEVEUO(CHFOND,'L',IFON)
      OBJCUR = '&&MECAGL.ABSGAMM0'
      CALL WKVECT(OBJCUR,'V V R',NNOFF,IADABS)
      DO 11 I=1,NNOFF
        ZR(IADABS-1+(I-1)+1)=ZR(IFON-1+4*(I-1)+4)
11    CONTINUE
      XL=ZR(IADABS-1+(NNOFF-1)+1)
C
C NOM DES NOEUDS DU FOND
      IF (.NOT.LXFEM) CALL JEVEUO(FONOEU,'L',IADRNO)
C
      IF(THLAG2) THEN
        NUM = 5
        CALL GMETH4(NNOFF,NDIMTE,FONOEU,ZR(IADRG),MILIEU,PAIR,
     &              ZR(IADRGS),OBJCUR,ZR(IADGI),LXFEM)
      ELSEIF ((.NOT.GLAGR) .AND. (.NOT.THLAGR)) THEN
        NUM = 1
        CALL GMETH1(NNOFF,NDEG,ZR(IADRG),ZR(IADRGS),OBJCUR,XL,ZR(IADGI))
      ELSE IF (THLAGR) THEN
        NORMFF = ZK24(JRESU+NNOFF+1-1)
        NORMFF(20:24) = '.VALE'
        IF (.NOT.GLAGR) THEN
          NUM = 2
          CALL GMETH2(MODELE,NNOFF,NDEG,NORMFF,FONOEU,ZR(IADRG),
     &                ZR(IADRGS),OBJCUR,XL,ZR(IADGI))

        ELSE
          CALL GMETH3(NNOFF,FONOEU,ZR(IADRG),MILIEU,ZR(IADRGS),
     &                OBJCUR,ZR(IADGI),NUM,LXFEM)
        END IF
      END IF

C- SYMETRIE DU CHARGEMENT ET IMPRESSION DES RESULTATS

      IF (SYMECH.NE.'NON') THEN
        DO 30 I = 1,NNOFF
          ZR(IADRGS+I-1) = 2.D0*ZR(IADRGS+I-1)
   30   CONTINUE
      END IF

C- IMPRESSION ET ECRITURE DANS TABLE(S) DE G(S)

      IF (NIV.GE.2) THEN
        CALL GIMPGS(RESULT,NNOFF,ZR(IADABS),ZR(IADRGS),NUM,ZR(IADGI),
     &              NDEG,NDIMTE,ZR(IADRG),EXTIM,TIME,IORD,IFM)
      END IF
C
      CALL GETVIS('THETA','NUME_FOND',1,IARG,1,NUMFON,IBID)

      IF (LXFEM) THEN
        CALL TBAJVI(RESULT,NBPRUP,'NUME_FOND',NUMFON,LIVI)
      ENDIF

      IF (LMELAS) THEN
        CALL TBAJVI(RESULT,NBPRUP,'NUME_CAS',IORD,LIVI)
        CALL TBAJVK(RESULT,NBPRUP,'NOM_CAS',NOMCAS,LIVK)
      ELSE
        CALL TBAJVI(RESULT,NBPRUP,'NUME_ORDRE',IORD,LIVI)
        CALL TBAJVR(RESULT,NBPRUP,'INST',TIME,LIVR)
      ENDIF

      DO 40 I = 1,NNOFF
        IF (LXFEM) THEN
          CALL TBAJVI(RESULT,NBPRUP,'NUM_PT',I,LIVI)
        ELSE
          CALL TBAJVK(RESULT,NBPRUP,'NOEUD',ZK8(IADRNO+I-1),LIVK)
        ENDIF
        CALL TBAJVR(RESULT,NBPRUP,'ABSC_CURV',ZR(IADABS-1+I),LIVR)
        CALL TBAJVR(RESULT,NBPRUP,'G',ZR(IADRGS+I-1),LIVR)
        CALL TBAJLI(RESULT,NBPRUP,NOPRUP,LIVI,LIVR,LIVC,LIVK,0)
 40   CONTINUE

C- DESTRUCTION D'OBJETS DE TRAVAIL

      CALL JEDETR(OBJCUR)
      CALL JEDETR('&&MECAGL.VALG_S')
      CALL JEDETR('&&MECAGL.VALGI')
      CALL DETRSD('CHAMP_GD',CHVARC)
      CALL DETRSD('CHAMP_GD',CHVREF)
      CALL DETRSD('CHAMP_GD',CHVOLU)
      CALL DETRSD('CHAMP_GD',CF1D2D)
      CALL DETRSD('CHAMP_GD',CF2D3D)
      CALL DETRSD('CHAMP_GD',CHPRES)
      CALL DETRSD('CHAMP_GD',CHEPSI)
      CALL DETRSD('CHAMP_GD',CHPESA)
      CALL DETRSD('CHAMP_GD',CHROTA)
      CALL JEDETR('&&MECAGL.VALG')

      CALL JEDEMA()
      END
