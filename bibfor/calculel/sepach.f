      SUBROUTINE SEPACH (CHIN,BASE,REEL,IMAG)

      IMPLICIT NONE
      CHARACTER*(*) CHIN,REEL,IMAG
      CHARACTER*1   BASE

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 08/11/2005   AUTEUR CIBHHLV L.VIVAN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================

C-----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

      CHARACTER*32 JEXNUM,JEXNOM
C     ----- FIN COMMUNS NORMALISES  JEVEUX  --------------------------

      INTEGER GD,GDRE,JDESC,JDESCR,JDESCI,NBVAL,JVALER,JVALEI,IVALE,IER
      INTEGER NMAX1,NMAX2,JNCMPR,JNCMPC,I,JCELD,JCELK,ICELV,JCELVR
      INTEGER JCELVI,TAILLE,LONG
      CHARACTER*8 NOMGD,NOMRE,K8B
      CHARACTER*4 TYPCH
      CHARACTER*24 LIGREL,OPTION,PARAM
      CALL JEMARQ()
      
      CALL JEEXIN(CHIN(1:19)//'.DESC',IER)
      IF (IER.NE.0) THEN
        TYPCH='CHNO'
      ELSE
        CALL JEEXIN(CHIN(1:19)//'.CELK',IER)
        IF (IER.NE.0) THEN
          TYPCH='CHML'
        ELSE
          CALL UTMESS('F','SEPACH','TYPE DE CHAMP INCONNU')
        ENDIF
      ENDIF

      IER=0
      IF ( TYPCH.EQ.'CHNO') THEN
      
        CALL JEVEUO(CHIN(1:19)//'.DESC','L',JDESC)
        GD=ZI(JDESC)
        CALL JENUNO(JEXNUM('&CATA.GD.NOMGD',GD),NOMGD)
        IF ((NOMGD(7:7).NE.' ').OR.(NOMGD(5:6).NE.'_C')) THEN
          CALL UTMESS('F','SEPACH','LE CHAMP DE GRANDEUR '//NOMGD//
     &    ' NE RESPECTE PAS LE FORMAT XXXX_C')
        ENDIF
        NOMRE=NOMGD(1:4)//'_R'
        CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMRE),GDRE)

        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GD),'LONMAX',NMAX1,K8B)
        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GDRE),'LONMAX',NMAX2,K8B)

        IF (NMAX1.NE.NMAX2) CALL UTMESS ('F','SEPACH','PROBLEME'//
     &  ' DANS LE CATALOGUE DES GRANDEURS SIMPLES, LA GRANDEUR'//NOMGD//
     &  ' NE POSSEDE PAS LE MEME NOMBRE DE CHAMP QUE SON HOMOLOGUE'//
     &  ' REEL'//NOMRE)

        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GDRE),'L',JNCMPR)
        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GD),'L',JNCMPC)

        DO 10 I=1,NMAX1
          IF (ZK8(JNCMPR-1+I).NE.ZK8(JNCMPC-1+I)) THEN
            IER=1
            GOTO 10
          ENDIF
 10     CONTINUE

        IF (IER.NE.0) CALL UTMESS ('F','SEPACH','PROBLEME'//
     &  ' DANS LE CATALOGUE DES GRANDEURS SIMPLES, LA GRANDEUR'//NOMGD//
     &  ' NE POSSEDE PAS LES MEMES CHAMPS QUE SON HOMOLOGUE'//
     &  ' REELLE'//NOMRE)

        CALL JEDUP1(CHIN(1:19)//'.DESC',BASE,REEL(1:19)//'.DESC')
        CALL JEDUP1(CHIN(1:19)//'.REFE',BASE,REEL(1:19)//'.REFE')
        CALL JEVEUO(REEL(1:19)//'.DESC','L',JDESCR)
        ZI(JDESCR)=GDRE

        CALL JEDUP1(CHIN(1:19)//'.DESC',BASE,IMAG(1:19)//'.DESC')
        CALL JEDUP1(CHIN(1:19)//'.REFE',BASE,IMAG(1:19)//'.REFE')
        CALL JEVEUO(IMAG(1:19)//'.DESC','L',JDESCI)
        ZI(JDESCI)=GDRE

        CALL JELIRA(CHIN(1:19)//'.VALE','LONMAX',NBVAL,K8B)
        CALL JEVEUO(CHIN(1:19)//'.VALE','L',IVALE)

        CALL WKVECT(REEL(1:19)//'.VALE',BASE//' V R',NBVAL,JVALER)
        CALL WKVECT(IMAG(1:19)//'.VALE',BASE//' V R',NBVAL,JVALEI)

        DO 20 I=1,NBVAL
          ZR(JVALER-1+I)=DBLE(ZC(IVALE-1+I))
          ZR(JVALEI-1+I)=DIMAG(ZC(IVALE-1+I))
 20     CONTINUE

      ELSE IF ( TYPCH.EQ.'CHML') THEN

        CALL JEVEUO(CHIN(1:19)//'.CELD','L',JCELD)
        GD=ZI(JCELD)
        CALL JENUNO(JEXNUM('&CATA.GD.NOMGD',GD),NOMGD)
        IF ((NOMGD(7:7).NE.' ').OR.(NOMGD(5:6).NE.'_C')) THEN
          CALL UTMESS('F','SEPACH','LE CHAMP DE GRANDEUR '//NOMGD//
     &    ' NE RESPECTE PAS LE FORMAT XXXX_C')
        ENDIF

        NOMRE=NOMGD(1:4)//'_R'
        CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMRE),GDRE)

        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GD),'LONMAX',NMAX1,K8B)
        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GDRE),'LONMAX',NMAX2,K8B)

        IF (NMAX1.NE.NMAX2) CALL UTMESS ('F','SEPACH','PROBLEME'//
     &  ' DANS LE CATALOGUE DES GRANDEURS SIMPLES, LA GRANDEUR'//NOMGD//
     &  ' NE POSSEDE PAS LE MEME NOMBRE DE CHAMP QUE SON HOMOLOGUE'//
     &  ' REEL'//NOMRE)

        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GDRE),'L',JNCMPR)
        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GD),'L',JNCMPC)

        DO 30 I=1,NMAX1
          IF (ZK8(JNCMPR-1+I).NE.ZK8(JNCMPC-1+I)) THEN
            IER=1
          ENDIF
 30     CONTINUE

        IF (IER.NE.0) CALL UTMESS ('F','SEPACH','PROBLEME'//
     &  ' DANS LE CATALOGUE DES GRANDEURS SIMPLES, LA GRANDEUR'//NOMGD//
     &  ' NE POSSEDE PAS LES MEME CHAMP QUE SON HOMOLOGUE'//
     &  ' REELLE'//NOMRE)

        CALL JEVEUO(CHIN(1:19)//'.CELK','L',JCELK)
        LIGREL=ZK24(JCELK)
        OPTION=ZK24(JCELK+1)
        PARAM=ZK24(JCELK+5)
        LONG=24
        DO 40 I=1,LONG
          IF (PARAM(I:I).EQ.' ') THEN 
            TAILLE=I-1
            GOTO 45
          ENDIF
 40     CONTINUE  

 45     CONTINUE  

        PARAM=PARAM(1:(TAILLE-1))//'R'
        CALL ALCHML(LIGREL,OPTION,PARAM,BASE,REEL(1:19),IER,' ')
        CALL ALCHML(LIGREL,OPTION,PARAM,BASE,IMAG(1:19),IER,' ')

        CALL JELIRA(CHIN(1:19)//'.CELV','LONMAX',NBVAL,K8B)
        CALL JEVEUO(CHIN(1:19)//'.CELV','L',ICELV)

        CALL JEVEUO(REEL(1:19)//'.CELV','L',JCELVR)
        CALL JEVEUO(IMAG(1:19)//'.CELV','L',JCELVI)

        DO 50 I=1,NBVAL
          ZR(JCELVR-1+I)=DBLE(ZC(ICELV-1+I))
          ZR(JCELVI-1+I)=DIMAG(ZC(ICELV-1+I))
 50     CONTINUE

      ENDIF

      CALL JEDEMA()
      
      END
