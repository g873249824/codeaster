      SUBROUTINE CCLIOP(OPTION,NOBASE,NOLIOP,NOPOUT)
      IMPLICIT NONE
C     --- ARGUMENTS ---
      INTEGER      NOPOUT
      CHARACTER*8  NOBASE
      CHARACTER*16 OPTION
      CHARACTER*24 NOLIOP
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 03/04/2012   AUTEUR SELLENET N.SELLENET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ----------------------------------------------------------------------
C  CALC_CHAMP - DETERMINATION LISTE D'OPTIONS
C  -    -                     --      --
C ----------------------------------------------------------------------
C
C  CREATION D'UNE LISTE D'OPTIONS DONT OPTION DEPEND
C   EXEMPLE : LISTE DE TAILLE N
C       NOLIOP(N)   = OPTION (EN ARGUEMENT DE LA ROUTINE)
C       NOLIOP(N-1) = OPTIO2 (DONT DEPEND OPTION)
C       ...
C       NOLIOP(M)   = OPTIOM (DONT DEPEND OPTION)
C       ...
C       NOLIOP(P)   = OPTIOP (DONT DEPEND OPTIO2)
C       ...
C
C  D'OU NOLORI DE TAILLE 2*N
C       NOLORI(N)   = N-1
C       NOLORI(N-1) = M
C       NOLORI(3) = P
C       ...
C  LA LISTE NOLDEP RAPPELLE LA DEPENDANCE TEMPORELLE
C  EX : SI OPTION DEPEND DE L'INSTANT N+1 D'OPTIO2 ALORS :
C       NOLDEP(N-1) = 'NP1'
C
C IN  :
C   OPTION  K24  NOM DE L'OPTION
C   NOBASE  K8   BASE DU NOM A PARTIR DE LAQUELLE LE NOM DES OBJETS DE
C                CCLIOP SERONT CONSTRUITS
C OUT :
C   NOLIOP  K24  NOM JEVEUX DE LA LISTE DES OPTIONS CREES
C   NOPOUT  I    TAILLE DE LA LISTE OUT
C ----------------------------------------------------------------------
C RESPONSABLE SELLENET N.SELLENET
C     ----- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER        ZI
      COMMON /IVARJE/ZI(1)
      REAL*8         ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16     ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL        ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8    ZK8
      CHARACTER*16          ZK16
      CHARACTER*24                  ZK24
      CHARACTER*32                          ZK32
      CHARACTER*80                                  ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      INTEGER      OPT,IAOPDS,IAOPLO,IOPDEB,IOP,NPARIN,IPARA,OPT2
      INTEGER      LOPOR1(100),LOPOR2(100),ITMP,NOPOUS,JLISOP
      INTEGER      JLIORI,JLIDEP,JLNOIN,JLISDE

      LOGICAL      OPAJOU

      CHARACTER*1  ISODEP(100)
      CHARACTER*4  LOPDEP(100)
      CHARACTER*16 LOPTIO(100),OPTIO2,CUROPT
      CHARACTER*24 NOLORI,NOLDEP,NOLIIN,NOLISD
      CHARACTER*32 JEXNUM,JEXNOM

      CALL JEMARQ()

      NOPOUT = 0

      NOLIOP = NOBASE//'.LISOPT'
      NOLORI = NOBASE//'.LISORI'
      NOLDEP = NOBASE//'.LISDEP'
      NOLIIN = NOBASE//'.LNOINS'
      NOLISD = NOBASE//'.ISODEP'
C
      IF ( OPTION(6:9).NE.'NOEU' ) THEN
        CALL JENONU(JEXNOM('&CATA.OP.NOMOPT',OPTION),OPT)
        CALL JEVEUO(JEXNUM('&CATA.OP.DESCOPT',OPT),'L',IAOPDS)
        CALL JEVEUO(JEXNUM('&CATA.OP.LOCALIS',OPT),'L',IAOPLO)
C
        IF ( ZK24(IAOPLO).EQ.'VIDE' ) GOTO 9999
      ENDIF

C     INITIALISATION DES ENTIERS
      IOPDEB = 1
      NOPOUT = 1
      NOPOUS = NOPOUT

C     REMPLISSAGE DU TABLEAU DES OPTIONS A CALCULER AVEC LA PREMIERE
C     OPTION DEMANDEE
      LOPTIO(NOPOUT) = OPTION
      LOPDEP(NOPOUT) = 'NSP'

   40 CONTINUE

C     BOUCLE SUR LE TABLEAU DES OPTIONS QUI SERA ENRICHI A CHAQUE
C     PASSE
      DO 10 IOP = IOPDEB,NOPOUS
        ISODEP(IOP) = ' '
        CUROPT = LOPTIO(IOP)
        OPAJOU = .FALSE.
C
C       CAS D'UNE OPTION AUX NOEUDS
        IF ( CUROPT(6:9).EQ.'NOEU' ) THEN
          OPTIO2 = OPTION(1:5)//'ELNO'
          CALL JENONU(JEXNOM('&CATA.OP.NOMOPT',OPTIO2),OPT)
          IF ( OPT.NE.0 ) THEN
            NOPOUT = NOPOUT+1
            LOPTIO(NOPOUT) = OPTIO2
            IF ( .NOT.OPAJOU ) THEN
              LOPOR1(IOP) = NOPOUT
              LOPOR2(IOP) = 0
            ENDIF
            LOPOR1(NOPOUT) = 0
            LOPOR2(NOPOUT) = 0
            LOPDEP(NOPOUT) = 'N'
            OPAJOU = .TRUE.
          ENDIF
C
C       CAS D'UNE OPTION AUX ELEMENTS
        ELSE
          IF ( (CUROPT.EQ.'DEPL').OR.
     &         (CUROPT.EQ.'SIEF_ELGA').OR.
     &         (CUROPT.EQ.'VARI_ELGA') ) THEN
            NPARIN = 0
          ELSE
            CALL JENONU(JEXNOM('&CATA.OP.NOMOPT',CUROPT),OPT)
            CALL JEVEUO(JEXNUM('&CATA.OP.DESCOPT',OPT),'L',IAOPDS)
            CALL JEVEUO(JEXNUM('&CATA.OP.LOCALIS',OPT),'L',IAOPLO)
            NPARIN = ZI(IAOPDS-1+2)
          ENDIF
C
C         BOUCLE SUR LES PARAMETRES DE CETTE OPTION
          DO 20 IPARA = 1,NPARIN
C           ON VERIFIE QUE L'OPTION EXISTE
            OPTIO2 = ZK24(IAOPLO+3*IPARA-2)
            CALL JENONU(JEXNOM('&CATA.OP.NOMOPT',OPTIO2),OPT2)
C
C           ON EVITE QU'UNE OPTION DEPENDE D'ELLE MEME
            IF ( LOPTIO(IOP).EQ.OPTIO2 ) THEN
              IF ( ZK24(IAOPLO+3*IPARA-1).EQ.'NP1' ) THEN
                ISODEP(IOP) = '+'
              ELSEIF ( ZK24(IAOPLO+3*IPARA-1).EQ.'NM1' ) THEN
                ISODEP(IOP) = '-'
C              ELSE
C                CALL ASSERT(.FALSE.)
              ENDIF
              GOTO 20
            ENDIF

            IF ( (OPT2.NE.0) ) THEN
              NOPOUT = NOPOUT+1
              LOPTIO(NOPOUT) = OPTIO2
C             REMPLISSAGE DE LA LISTE DE DEPENDANCES DES OPTIONS
              IF ( .NOT.OPAJOU ) THEN
                LOPOR1(IOP) = NOPOUT
                LOPOR2(IOP) = 0
              ENDIF
              LOPOR1(NOPOUT) = 0
              LOPOR2(NOPOUT) = 0
              LOPDEP(NOPOUT) = ZK24(IAOPLO+3*IPARA-1)
              OPAJOU = .TRUE.
              ISODEP(NOPOUT) = ' '
            ELSEIF( ((OPTIO2.EQ.'DEPL').OR.
     &               (OPTIO2.EQ.'SIEF_ELGA').OR.
     &               (OPTIO2.EQ.'VARI_ELGA')).AND.
     &              ((ZK24(IAOPLO+3*IPARA-1).EQ.'NP1').OR.
     &               (ZK24(IAOPLO+3*IPARA-1)(1:3).EQ.'NM1')) ) THEN
              NOPOUT = NOPOUT+1
              LOPTIO(NOPOUT) = OPTIO2
C             REMPLISSAGE DE LA LISTE DE DEPENDANCES DES OPTIONS
              IF ( .NOT.OPAJOU ) THEN
                LOPOR1(IOP) = NOPOUT
                LOPOR2(IOP) = 0
              ENDIF
              LOPOR1(NOPOUT) = 0
              LOPOR2(NOPOUT) = 0
              LOPDEP(NOPOUT) = ZK24(IAOPLO+3*IPARA-1)
              OPAJOU = .TRUE.
              ISODEP(NOPOUT) = ' '
            ENDIF
20        CONTINUE
        ENDIF
C
        IF ( .NOT.OPAJOU ) THEN
          LOPOR1(IOP) = 0
          LOPOR2(IOP) = 0
        ELSE
          LOPOR2(IOP) = NOPOUT
        ENDIF
10    CONTINUE

C     SI ON A AJOUTE UNE OPTION LORS DE LA DERNIERE PASSE, ON
C     DOIT CHERCHER SES DEPENDANCES
      IF ( OPAJOU ) THEN
        IOPDEB = NOPOUS+1
        NOPOUS = NOPOUT
        GOTO 40
      ENDIF

C     TEMPORAIRE POUR EVITER LES DEPASSEMENTS DE TABLEAU
      IF ( NOPOUT.GT.100 ) CALL ASSERT(.FALSE.)

      CALL WKVECT(NOLIOP,'V V K24',NOPOUT,JLISOP)
      CALL WKVECT(NOLORI,'V V I',2*NOPOUT,JLIORI)
      CALL WKVECT(NOLDEP,'V V K8',NOPOUT,JLIDEP)
      CALL WKVECT(NOLIIN,'V V K24',NOPOUT,JLNOIN)
      CALL WKVECT(NOLISD,'V V K8',NOPOUT,JLISDE)

C     CONSTRUCTION DE LA LISTE DES PAS DE TEMPS
      DO 30 IOP = 1,NOPOUT
C       ON PARCOURT LA LISTE A L'ENVERS PUISQUE PAR CONSTRUCTION
C       LES OPTIONS 'D'EN HAUT' DEPENDENT DES OPTIONS 'D'EN BAS'
        ITMP = NOPOUT-IOP+1
        OPTIO2 = LOPTIO(ITMP)
        ZK24(JLISOP+IOP-1) = OPTIO2

C       ON REGARDE DE QUELLES OPTIONS DEPEND L'OPTION COURANTE
        IF ( LOPOR1(ITMP).NE.0 ) THEN
          ZI(JLIORI+2*IOP-2) = NOPOUT-LOPOR2(ITMP)+1
          ZI(JLIORI+2*IOP-1) = NOPOUT-LOPOR1(ITMP)+1
        ELSE
          ZI(JLIORI+2*IOP-2) = 0
          ZI(JLIORI+2*IOP-1) = 0
        ENDIF
        ZK8(JLIDEP+IOP-1) = LOPDEP(ITMP)
        ZK8(JLISDE+IOP-1) = ISODEP(ITMP)
   30 CONTINUE

 9999 CONTINUE

      CALL JEDEMA()

      END
