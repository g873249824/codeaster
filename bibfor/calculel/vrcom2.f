      SUBROUTINE VRCOM2(COMPOP,VARMOI,LIGREP)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 26/04/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET
      IMPLICIT NONE
      CHARACTER*(*) COMPOP,VARMOI,LIGREP
C ------------------------------------------------------------------
C BUT: MODIFIER VARMOI POUR LE RENDRE COHERENT AVEC COMPOP

C      COMPOP EST LA CARTE DE COMPOPTEMENT A L'INSTANT "+"
C      VARMOI EST LE CHAMP DE VARIABLES INTERNES A L'INSTANT "-"
C      LIGREP EST LE LIGREL DU MODELE DE L'INSTANT "+"

C ------------------------------------------------------------------
C     ARGUMENTS:
C COMPOP   IN/JXIN  K19 : CARTE DE COMPOPTEMENT "+"
C VARMOI   IN/JXVAR K19 : SD CHAM_ELEM   (VARI_R) "-"
C LIGREP   IN/JXIN  K19 : SD LIGREL "+"
C-----------------------------------------------------------------------

C---- COMMUNS NORMALISES  JEVEUX
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ------------------------------------------------------------------
      INTEGER IAD1,IAD2,NBMA,NBPG2,NBSP1,NBSP2,NBCM2,IPG,ISP,ICM,NBCM1
      INTEGER IMA,IRET
      INTEGER IADP,JCOPPL,JCOPPD,JCOPPV
      INTEGER ACTION
      INTEGER JCEV1D,JCEV1V,JCEV1L
      INTEGER JCEV2D,JCEV2V,JCEV2L,NNCP,IBID
      CHARACTER*19 CESV1,CESV2,COTO,COPP
      CHARACTER*19 VARPLU
C     ------------------------------------------------------------------
      CALL JEMARQ()


C     -- ON VERIFIE QUE VARMOI EST UN OBJET TEMPORAIRE QUE L'ON A
C        LE DROIT DE MODIFIER :
      CALL ASSERT(VARMOI(1:2).EQ.'&&')


C     1- ON TRANSFORME VARMOI EN CHAM_ELEM_S (CESV1)
C     --------------------------------------------------
      CESV1='&&VRCOM2.CESV1'
      CALL CELCES(VARMOI,'V',CESV1)
      CALL CESTAS(CESV1)
      CALL JEVEUO(CESV1//'.CESD','L',JCEV1D)
      CALL JEVEUO(CESV1//'.CESV','L',JCEV1V)
      CALL JEVEUO(CESV1//'.CESL','L',JCEV1L)
      NBMA=ZI(JCEV1D-1+1)


C     2- ON CREE 1 CHAM_ELEM_S VIERGE AUX BONNES DIMENSIONS (CESV2):
C     ---------------------------------------------------------------
      VARPLU='&&VRCOM2.VARPLU'
      CALL ALCHML(LIGREP,'RAPH_MECA','PVARIPR','V',VARPLU,IRET,COMPOP)
      CESV2='&&VARCOM2.CESV2'
      CALL CELCES(VARPLU,'V',CESV2)
      CALL DETRSD('CHAM_ELEM',VARPLU)



C     3- ON RECOPIE DE CESV1 VERS CESV2 :
C     -----------------------------------
      CALL JEVEUO(CESV2//'.CESD','L',JCEV2D)
      CALL JEVEUO(CESV2//'.CESV','E',JCEV2V)
      CALL JEVEUO(CESV2//'.CESL','E',JCEV2L)

      COTO='&&VRCOM2.COTO'
      COPP='&&VRCOM2.COPP'

      CALL CARCES(COMPOP,'ELEM',' ','V',COTO,IRET)
      CALL CESRED(COTO,0,0,1,'RELCOM','V',COPP)
      CALL DETRSD('CHAM_ELEM_S',COTO)

      CALL JEVEUO(COPP//'.CESD','L',JCOPPD)
      CALL JEVEUO(COPP//'.CESV','L',JCOPPV)
      CALL JEVEUO(COPP//'.CESL','L',JCOPPL)

      DO 40,IMA=1,NBMA
        NBPG2=ZI(JCEV2D-1+5+4*(IMA-1)+1)
        NBSP2=ZI(JCEV2D-1+5+4*(IMA-1)+2)
        NBCM2=ZI(JCEV2D-1+5+4*(IMA-1)+3)


C       -- SI NBSP2=0, C'EST QUE LA MAILLE N'EXISTE PLUS
C          DANS LE MODELE :
        IF (NBSP2.EQ.0)GOTO 40

        CALL CESEXI('C',JCOPPD,JCOPPL,IMA,1,1,1,IADP)
        IF (IADP.LE.0)GOTO 40

        NBSP1=ZI(JCEV1D-1+5+4*(IMA-1)+2)
        NBCM1=ZI(JCEV1D-1+5+4*(IMA-1)+3)

C       -- PARFOIS LE COMPORTEMENT EST AFFECTE SUR LES MAILLES
C          DE BORD ALORS QUE CES ELEMENTS N'ONT PAS DE VARIABLES
C          INTERNES (I.E. ILS IGNORENT RAPH_MECA).
C          ON NE VEUT PAS FAIRE D'ERREUR <F> :
        IF ((NBSP1.EQ.0) .AND. (NBCM1.EQ.0))GOTO 40

        CALL ASSERT(NBSP2.EQ.NBSP1)

        IF (NBCM1.EQ.NBCM2) THEN
          ACTION=1
        ELSE
          ACTION=2
        ENDIF

        DO 30,IPG=1,NBPG2
          DO 20,ISP=1,NBSP2
            DO 10,ICM=1,NBCM2
              CALL CESEXI('S',JCEV2D,JCEV2L,IMA,IPG,ISP,ICM,IAD2)
              CALL ASSERT(IAD2.GT.0)
              ZL(JCEV2L-1+IAD2)=.TRUE.
              IF (ACTION.EQ.1) THEN
                CALL CESEXI('S',JCEV1D,JCEV1L,IMA,IPG,ISP,ICM,IAD1)
                CALL ASSERT(IAD1.GT.0)
                ZR(JCEV2V-1+IAD2)=ZR(JCEV1V-1+IAD1)

              ELSE
                ZR(JCEV2V-1+IAD2)=0.D0
              ENDIF
   10       CONTINUE
   20     CONTINUE
   30   CONTINUE
   40 CONTINUE


C     4- ON TRANSFORME CESV2 EN CHAM_ELEM (VARMOI)
C     --------------------------------------------------
      CALL DETRSD('CHAM_ELEM',VARMOI)
      CALL CESCEL(CESV2,LIGREP,'RAPH_MECA','PVARIMR','OUI',NNCP,'V',
     &            VARMOI,'F',IBID)

C     4. MENAGE :
C     -----------
      CALL DETRSD('CHAM_ELEM_S',CESV1)
      CALL DETRSD('CHAM_ELEM_S',CESV2)
      CALL DETRSD('CHAM_ELEM_S',COPP)
      CALL JEDEMA()
      END
