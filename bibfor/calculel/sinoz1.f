      SUBROUTINE SINOZ1(MODELE,SIGMA,SIGNO)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 18/09/2012   AUTEUR LADIER A.LADIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE

C     ARGUMENTS:
C     ----------
C ......................................................................
C     BUT:
C           CALCUL DES CONTRAINTES AUX NOEUDS PAR LA METHODE ZZ1
C     ENTREES:
C        MODELE : NOM DU MODELE
C        SIGMA  : NOM DU CHAMP DE CONTRAINTES AUX POINTS DE GAUSS
C        SIGNO  : NOM DU CHAMP DE CONTRAINTES AUX NOEUDS
C
C----------------------------------------------------------------------

C ----------------------- DECLARATIONS --------------------------------

      INCLUDE 'jeveux.h'
      CHARACTER*1 TYPRES,K1BID
      CHARACTER*8 MODELE
      CHARACTER*14 NUPGM
      CHARACTER*8 KBID
      CHARACTER*8 LICMP(6),MA
      CHARACTER*19 INFCHA
      CHARACTER*19 SOLVEU,VECELE,MATPRE,K19BID,CRITER
      CHARACTER*24 KMOCH,SIGNO,SIGMA,MASSEL
      CHARACTER*24 NUME,VECASS,VECT(6)
      REAL*8 RCMP(6)
      INTEGER IBID,JVECT,NBCMP,REPDIM

      COMPLEX*16 CBID


C-----------------------------------------------------------------------
      INTEGER I ,IEQ ,IER ,INDEQ ,JKMOCH ,JNUEQ ,JPRNO 
      INTEGER JSIG ,JSIXX ,JSIXY ,JSIXZ ,JSIYY ,JSIYZ ,JSIZZ 
      INTEGER JSLVI ,JVECAS ,NBLIGR ,NBNO 
C-----------------------------------------------------------------------
      CALL JEMARQ()
C
      CALL DISMOI('F','DIM_GEOM',MODELE,'MODELE',REPDIM,KBID,IBID)
C
      IF ((REPDIM.NE.2).OR.(REPDIM.NE.3)) THEN
        IF (REPDIM.EQ.1) CALL U2MESS('F','CALCULEL_75')
        IF (REPDIM.GT.3) CALL U2MESS('F','CALCULEL_76')
      ENDIF
C
      IF (REPDIM.EQ.2) THEN
        NBCMP = 4
      ELSE IF (REPDIM.EQ.3) THEN
        NBCMP = 6
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF

      MASSEL='&&MASSEL'

C     CALCUL DE LA MATRICE DE MASSE ZZ1 (A 1 CMP)
      CALL MEMZME(MODELE,MASSEL(1:19))

      TYPRES = 'R'


C     --  APPEL A NUMER2 POUR CONSTRUIRE UN NUME_DDL
C         SUR LA GRANDEUR SIZZ_R (1 CMP)
      NUPGM = '&&NUME'
      KMOCH = NUPGM//'.&LMODCHAR'
      INFCHA = '&&SINOZ1.INFCHA'

C     -- CREATION DU SOLVEUR :
      SOLVEU = '&&OP0042.SOLVEUR'

      CALL NUMOCH(MASSEL,1,'V',KMOCH)
      CALL JEVEUO(KMOCH,'L',JKMOCH)
      CALL JELIRA(KMOCH,'LONUTI',NBLIGR,KBID)
      CALL NUMER2(' ',NBLIGR,ZK24(JKMOCH),'DDL_NOZ1',SOLVEU,'VV',NUPGM,
     &     IBID)
      CALL JEDETR(KMOCH)

      CALL ASMATR(1,MASSEL,' ',NUPGM,SOLVEU,INFCHA,'ZERO',
     &                 'V',1,'&&MASSAS')

C     CALCUL DES SECONDS MEMBRES
      VECELE = '&&VECELE'
      CALL ME2ZME(MODELE,SIGMA(1:19),VECELE)


C     ASSEMBLAGE DES SECONDS MEMBRES
      NUME = '&&NUME'
      VECASS = '??????'
      CALL ASASVE(VECELE,NUME,TYPRES,VECASS)
      CALL JEVEUO(VECASS,'L',JVECAS)
      DO 10,I = 1,NBCMP
        VECT(I) = ZK24(JVECAS-1+I)
   10 CONTINUE


C     RESOLUTIONS SANS DIRICHLET
C     -- ON FORCE STOP_SINGULIER='NON' MAIS POURQUOI ??
      CALL JEVEUO(SOLVEU//'.SLVI','E',JSLVI)
      ZI(JSLVI-1+3)=1
      MATPRE='&&SINOZ1.MATPRE'
      CALL PRERES(SOLVEU,'V',IER,MATPRE,'&&MASSAS',IBID,-9999)

      K19BID=' '
      K1BID=' '
      CRITER=' '
      DO 20 I = 1,NBCMP
        CALL JEVEUO(VECT(I) (1:19)//'.VALE','E',JVECT)
        CALL RESOUD('&&MASSAS',MATPRE,K19BID,SOLVEU,K19BID,K1BID,
     &              K19BID,CRITER,1,ZR(JVECT),CBID,.TRUE.)
   20 CONTINUE

C   CREATION DU CHAM_NO_SIEF_R A PARTIR DES 4 CHAM_NO_SIZZ_R (A 1 CMP)

      DO 30 I = 1,NBCMP
        RCMP(I) = 0.D0
   30 CONTINUE
      LICMP(1) = 'SIXX'
      LICMP(2) = 'SIYY'
      LICMP(3) = 'SIZZ'
      LICMP(4) = 'SIXY'
      LICMP(5) = 'SIXZ'
      LICMP(6) = 'SIYZ'
      CALL DISMOI('F','NOM_MAILLA',SIGMA(1:19),'CHAM_ELEM',IBID,MA,IER)
      CALL CRCNCT('G',SIGNO,MA,'SIEF_R',NBCMP,LICMP,RCMP)
      CALL JEVEUO(SIGNO(1:19)//'.VALE','E',JSIG)
      CALL JEVEUO(VECT(1) (1:19)//'.VALE','E',JSIXX)
      CALL JEVEUO(VECT(2) (1:19)//'.VALE','E',JSIYY)
      CALL JEVEUO(VECT(3) (1:19)//'.VALE','E',JSIZZ)
      CALL JEVEUO(VECT(4) (1:19)//'.VALE','E',JSIXY)
      IF (NBCMP.EQ.6) THEN
        CALL JEVEUO(VECT(5) (1:19)//'.VALE','E',JSIXZ)
        CALL JEVEUO(VECT(6) (1:19)//'.VALE','E',JSIYZ)
      ENDIF
      CALL JEVEUO(JEXNUM(NUME(1:14)//'.NUME.PRNO',1),'L',JPRNO)
      CALL JEVEUO(NUME(1:14)//'.NUME.NUEQ','L',JNUEQ)

      CALL DISMOI('F','NB_NO_MAILLA',MA,'MAILLAGE',NBNO,KBID,IER)
      DO 40 I = 1,NBNO
        INDEQ = ZI(JPRNO-1+3* (I-1)+1)
        IEQ = ZI(JNUEQ-1+INDEQ)
        ZR(JSIG-1+NBCMP* (I-1)+1) = ZR(JSIXX-1+IEQ)
        ZR(JSIG-1+NBCMP* (I-1)+2) = ZR(JSIYY-1+IEQ)
        ZR(JSIG-1+NBCMP* (I-1)+3) = ZR(JSIZZ-1+IEQ)
        ZR(JSIG-1+NBCMP* (I-1)+4) = ZR(JSIXY-1+IEQ)
        IF (NBCMP.EQ.6) THEN
          ZR(JSIG-1+NBCMP* (I-1)+5) = ZR(JSIXZ-1+IEQ)
          ZR(JSIG-1+NBCMP* (I-1)+6) = ZR(JSIYZ-1+IEQ)
        ENDIF
   40 CONTINUE

      CALL DETRSD('MATR_ASSE','&&MASSAS')
      CALL JEDETR(NUPGM//'.&LMODCHAR')
      CALL DETRSD('NUME_DDL',NUPGM)

      DO 50,I = 1,NBCMP
        CALL DETRSD('CHAMP_GD',ZK24(JVECAS-1+I))
   50 CONTINUE
      CALL JEDETR(VECASS)


      CALL JEDEMA()
      END
