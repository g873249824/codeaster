      SUBROUTINE MECALM(NEWCAL,TYSD,KNUM,KCHA,RESUCO,RESUC1,CONCEP,
     &                  NBORDR,MODELE,MATE,CARA,NCHAR,CTYP)
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 11/06/2012   AUTEUR DELMAS J.DELMAS 
C TOLE CRP_20
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ----------------------------------------------------------------------
C COMMANDE DE CALC_ELEM SPECIFIQUE A LA MECANIQUE
C ----------------------------------------------------------------------
C IN  NEWCAL : TRUE POUR UN NOUVEAU CONCEPT RESULTAT, FALSE SINON
C IN  TYSD   : TYPE DU CONCEPT ATTACHE A RESUCO
C IN  KNUM   : NOM D'OBJET DES NUMEROS D'ORDRE
C IN  KCHA   : NOM JEVEUX OU SONT STOCKEES LES CHARGES
C IN  RESUCO : NOM DE CONCEPT RESULTAT
C IN  RESUC1 : NOM DE CONCEPT DE LA COMMANDE CALC_ELEM
C IN  CONCEP : TYPE DU CONCEPT ATTACHE A RESUC1
C IN  NBORDR : NOMBRE DE NUMEROS D'ORDRE
C IN  MODELE : NOM DU MODELE
C IN  MATE   : NOM DU CHAMP MATERIAU
C IN  CARA   : NOM DU CHAMP DES CARACTERISTIQUES ELEMENTAIRES
C IN  NCHAR  : NOMBRE DE CHARGES
C IN  CTYP   : TYPE DE CHARGE
C ----------------------------------------------------------------------

      IMPLICIT NONE
C
C     --- ARGUMENTS ---

      INTEGER NBORDR,NCHAR
      CHARACTER*4 CTYP
      CHARACTER*8 RESUCO,RESUC1,MODELE,CARA
      CHARACTER*16 TYSD,CONCEP
      CHARACTER*19 KNUM,KCHA
      CHARACTER*24 MATE
      LOGICAL NEWCAL
C
C     ----- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER        ZI
      COMMON /IVARJE/ZI(1)
      REAL*8         ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16     ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL        ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8    ZK8
      CHARACTER*16          ZK16
      CHARACTER*24                  ZK24
      CHARACTER*32                          ZK32,JEXNOM
      CHARACTER*80                                  ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
C     --- VARIABLES LOCALES ---

      CHARACTER*6 NOMPRO
      PARAMETER(NOMPRO='MECALM')

      INTEGER IFM,NIV
      INTEGER LREFE,LVALE
      INTEGER IORDR,JORDR
      INTEGER IRET,IERD
      INTEGER NBOPT,NEQ,NBCHRE
      INTEGER IADOU,IADIN,IPUIS
      INTEGER IAUX,III,J,IBID,IE
      INTEGER IOCC,IOPT
      INTEGER L1,L2,L3,L4,L5,L6
      INTEGER N1,N2
      INTEGER JPA,JOPT,JCHA
      INTEGER NBAC,NBPA,NBPARA
      INTEGER LTYMO

      CHARACTER*4 TYPE
      CHARACTER*8 K8B,NOMA
      CHARACTER*8 CARELE
      CHARACTER*16 NOMCMD,OPTION,K16B,BLAN16,TYPEMO
      CHARACTER*19 LERES1,CHDYNR,MASSE,REFE
      CHARACTER*24 CHDEPL,CHNUMC,SOP
      CHARACTER*24 LIGREL,NOMPAR,LESOPT,LIGRMO,BLAN24

      REAL*8 COEF
      REAL*8 PHASE
      REAL*8 TBGRCA(3)

      COMPLEX*16 CCOEF

      LOGICAL EXIPOU,EXIPLA
      REAL*8 UN
      PARAMETER(UN=1.D0)

      INTEGER      IARG

      CALL JEMARQ()
      CALL GETRES(K8B,K16B,NOMCMD)
      CALL JERECU('V')
C               1234567890123456
      BLAN16 = '                '
C               123456789012345678901234
      BLAN24 = '                        '
      LESOPT='&&'//NOMPRO//'.LES_OPTION'
      NBCHRE=0
      IOCC=0
      CHNUMC=BLAN24
      CHDYNR=BLAN24(1:19)
      CHDEPL=BLAN24
      SOP=BLAN24
      COEF=UN

C     COMPTEUR DE PASSAGES DANS LA COMMANDE (POUR MEDOM2.F)

      CALL INFMAJ()
      CALL INFNIV(IFM,NIV)
      CARELE=' '
      CALL GETVID(' ','CARA_ELEM',1,IARG,1,CARELE,N1)

      CALL GETVTX ( ' ', 'OPTION', 1,IARG,0, K8B, N2 )
      NBOPT = -N2
      CALL WKVECT ( LESOPT, 'V V K16', NBOPT, JOPT )
      CALL GETVTX (' ', 'OPTION'  , 1,IARG, NBOPT, ZK16(JOPT), N2)
      CALL MODOPT(RESUCO,MODELE,LESOPT,NBOPT)
      CALL JEVEUO(LESOPT,'L',JOPT)

C     ON RECUPERE LE TYPE DE MODE: DYNAMIQUE OU STATIQUE
      TYPEMO=BLAN16
      IF (TYSD.EQ.'MODE_MECA') THEN
        CALL RSADPA(RESUCO,'L',1,'TYPE_MODE',1,0,LTYMO,K8B)
        TYPEMO=ZK16(LTYMO)
      ENDIF

      CALL JEVEUO(KNUM,'L',JORDR)
      CALL JEVEUO(KCHA,'L',JCHA)
      IF (NEWCAL) THEN
        CALL RSCRSD('G',RESUC1,TYSD,NBORDR)
        CALL TITRE
      ENDIF
      CALL DISMOI('F','NOM_LIGREL',MODELE,'MODELE',IBID,LIGRMO,IERD)
      CALL JENONU(JEXNOM(RESUCO//'           .NOVA','INST'),IRET)
      CALL EXLIMA(' ',0,'V',MODELE,LIGREL)

      EXIPOU=.FALSE.
      CALL DISMOI('F','EXI_POUX',LIGREL,'LIGREL',IBID,K8B,IERD)
      IF (K8B(1:3).EQ.'OUI')EXIPOU=.TRUE.

C=======================================================================
C                   SPECIAL POUTRE A LA POUX (1)
C=======================================================================
      IF (EXIPOU) THEN
C-------ON VERIFIE SI DERIERE LE CONCEPT MODE_MECA ON TROUVE UN MODE_DYN
C        IF (CONCEP.EQ.'MODE_MECA' .OR. CONCEP.EQ.'DYNA_TRANS' .OR.
C     &      CONCEP.EQ.'MODE_ACOU' .OR. CONCEP.EQ.'DYNA_HARMO') THEN
        IF ((CONCEP.EQ.'MODE_MECA'.AND.TYPEMO(1:8).EQ.'MODE_DYN') .OR.
     &      CONCEP.EQ.'DYNA_TRANS' .OR. CONCEP.EQ.'MODE_ACOU' .OR.
     &      CONCEP.EQ.'DYNA_HARMO') THEN
          REFE=RESUCO
          SOP='MASS_MECA'
          CALL RSEXCH(RESUCO,'DEPL',1,CHDEPL,IRET)
          CALL JELIRA(CHDEPL(1:19)//'.VALE','LONMAX',NEQ,K8B)
          CALL JEVEUO(REFE//'.REFD','L',LREFE)
          MASSE=ZK24(LREFE+1)(1:19)
          IF (MASSE(1:8).NE.'        ') THEN
            CALL DISMOI('C','SUR_OPTION',MASSE,'MATR_ASSE',IBID,SOP,IE)
          ENDIF
          CHDYNR='&&'//NOMPRO//'.M.GAMMA'
          IF (CONCEP.EQ.'MODE_MECA' .OR. CONCEP.EQ.'DYNA_TRANS' .OR.
     &        CONCEP.EQ.'MODE_ACOU') THEN
            CALL COPICH('V',CHDEPL(1:19),CHDYNR)
          ELSE
            CALL COPICH('V',CHDEPL(1:19),CHDYNR)
          ENDIF
          CALL JELIRA(CHDYNR//'.VALE','LONMAX',NEQ,K8B)
          CALL JEVEUO(CHDYNR//'.VALE','E',LVALE)
        ENDIF
C --- VERIFIE L'UNICITE DE LA CHARGE REPARTIE
        IOCC=0
        CALL COCHRE(ZK8(JCHA),NCHAR,NBCHRE,IOCC)
        IF (NBCHRE.GT.1) THEN
          CALL U2MESS('A','CALCULEL2_92')
          GOTO 690

        ENDIF
        DO 10 III=1,NCHAR
          CALL GETVID('EXCIT','FONC_MULT',III,IARG,1,K8B,L1)
          CALL GETVID('EXCIT','FONC_MULT_C',III,IARG,1,K8B,L2)
          CALL GETVR8('EXCIT','COEF_MULT',III,IARG,1,COEF,L3)
          CALL GETVC8('EXCIT','COEF_MULT_C',III,IARG,1,CCOEF,L4)
          CALL GETVR8('EXCIT','PHAS_DEG',III,IARG,1,PHASE,L5)
          CALL GETVIS('EXCIT','PUIS_PULS',III,IARG,1,IPUIS,L6)
          IF (L1.NE.0 .OR. L2.NE.0 .OR. L3.NE.0 .OR. L4.NE.0 .OR.
     &        L5.NE.0 .OR. L6.NE.0) THEN
            IF (NBCHRE.EQ.0) THEN
              CALL U2MESS('A','CALCULEL2_93')
            ENDIF
          ENDIF
   10   CONTINUE
      ENDIF
C=======================================================================
C     ON VERIFIE QUE CARA_ELEM, NIVE_COUCHE ET NUME_COUCHE ONT ETE
C     RENSEIGNES POUR LES COQUES
C=======================================================================
      EXIPLA=.FALSE.
      CALL DISMOI('F','EXI_COQ1D',LIGREL,'LIGREL',IBID,K8B,IERD)
      IF (K8B(1:3).EQ.'OUI')EXIPLA=.TRUE.
      CALL DISMOI('F','EXI_COQ3D',LIGREL,'LIGREL',IBID,K8B,IERD)
      IF (K8B(1:3).EQ.'OUI')EXIPLA=.TRUE.
      CALL DISMOI('F','EXI_PLAQUE',LIGREL,'LIGREL',IBID,K8B,IERD)
      IF (K8B(1:3).EQ.'OUI')EXIPLA=.TRUE.
      IF (EXIPLA) THEN
        CALL GETVID(' ','CARA_ELEM',1,IARG,1,K8B,N1)
        IF (N1.EQ.0 .AND. CARA.EQ.' ') THEN
          CALL U2MESS('A','CALCULEL2_94')
          GOTO 690

        ENDIF
      ENDIF
C=======================================================================
      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,NOMA,IERD)
      CHNUMC='&&'//NOMPRO//'.NUMC'
      CALL MECHN2(NOMA,CHNUMC)
C=======================================================================
C
C -- GRANDEURS CARACTERISTIQUES DE L'ETUDE
C
      CALL CETULE(MODELE,TBGRCA,IRET)
C=======================================================================


      LERES1=RESUC1

C    ------------------------------------------------------------------
C    -- RECOPIE DES PARAMETRES DANS LA NOUVELLE SD RESULTAT
C    ------------------------------------------------------------------

      IF (NEWCAL) THEN
        NOMPAR='&&'//NOMPRO//'.NOMS_PARA '
        CALL RSNOPA(RESUCO,2,NOMPAR,NBAC,NBPA)
        NBPARA=NBAC+NBPA
        CALL JEVEUO(NOMPAR,'L',JPA)
        DO 30,IAUX=1,NBORDR
          IORDR=ZI(JORDR+IAUX-1)
          DO 20 J=1,NBPARA
            CALL RSADPA(RESUCO,'L',1,ZK16(JPA+J-1),IORDR,1,IADIN,TYPE)
            CALL RSADPA(LERES1,'E',1,ZK16(JPA+J-1),IORDR,1,IADOU,TYPE)
            IF (TYPE(1:1).EQ.'I') THEN
              ZI(IADOU)=ZI(IADIN)
            ELSEIF (TYPE(1:1).EQ.'R') THEN
              ZR(IADOU)=ZR(IADIN)
            ELSEIF (TYPE(1:1).EQ.'C') THEN
              ZC(IADOU)=ZC(IADIN)
            ELSEIF (TYPE(1:3).EQ.'K80') THEN
              ZK80(IADOU)=ZK80(IADIN)
            ELSEIF (TYPE(1:3).EQ.'K32') THEN
              ZK32(IADOU)=ZK32(IADIN)
            ELSEIF (TYPE(1:3).EQ.'K24') THEN
              ZK24(IADOU)=ZK24(IADIN)
            ELSEIF (TYPE(1:3).EQ.'K16') THEN
              ZK16(IADOU)=ZK16(IADIN)
            ELSEIF (TYPE(1:2).EQ.'K8') THEN
              ZK8(IADOU)=ZK8(IADIN)
            ENDIF
   20     CONTINUE
   30   CONTINUE
      ENDIF

C    ------------------------------------------------------------------
C    -- FIN RECOPIE DES PARAMETRES DANS LA NOUVELLE SD RESULTAT
C    ------------------------------------------------------------------



C============ DEBUT DE LA BOUCLE SUR LES OPTIONS A CALCULER ============
      DO 660 IOPT=1,NBOPT
C
        OPTION=ZK16(JOPT+IOPT-1)
C
        CALL JEVEUO(KNUM,'L',JORDR)

C    -- PASSAGE CALC_CHAMP
C    -------------------------------------------------------------------
C    -- OPTIONS "DEGE_ELNO","DERA_ELGA","DERA_ELNO"
C               "DISS_ELGA","DISS_ELNO","ECIN_ELEM","ENDO_ELGA",
C               "ENDO_ELNO","ENEL_ELGA","ENEL_ELNO","EPEQ_ELGA",
C               "EPEQ_ELNO","EPFD_ELGA","EPFD_ELNO","EPFP_ELGA",
C               "EPFP_ELNO","EPME_ELGA","EPME_ELNO","EPMG_ELGA",
C               "EPMG_ELNO","EPMQ_ELGA","EPMQ_ELNO","EPOT_ELEM",
C               "EPSG_ELGA","EPSG_ELNO","EPSI_ELGA","EPSI_ELNO",
C               "EPSP_ELGA","EPSP_ELNO",
C               "EPVC_ELGA","EPVC_ELNO","FLHN_ELGA","INDL_ELGA",
C               "PDIL_ELGA","PRME_ELNO",
C               "SIEF_ELGA","SIEQ_ELGA","SIEQ_ELNO","SIPM_ELNO",
C               "SIPO_ELNO","SIRO_ELEM",
C               "VAEX_ELGA","VAEX_ELNO","VARC_ELGA",
C               "VARI_ELNO",
C    ------------------------------------------------------------------

        CALL CALCOP(OPTION,LESOPT,RESUCO,RESUC1,KNUM,NBORDR,
     &              KCHA,NCHAR,CTYP,TYSD,NBCHRE,IOCC,SOP,IRET)
        IF (IRET.EQ.0)GOTO 660

        CALL U2MESK('A','CALCULEL3_22',1,OPTION)

  660 CONTINUE
C
C============= FIN DE LA BOUCLE SUR LES OPTIONS A CALCULER =============
C
  690 CONTINUE
      CALL JEDEMA()
      END
