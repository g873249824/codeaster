      SUBROUTINE ECHMAT(MATZ,LDIST,RMIN,RMAX,RCOEF)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 27/02/2012   AUTEUR GREFFET N.GREFFET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE PELLET
      IMPLICIT NONE
      CHARACTER*(*) MATZ
      REAL*8 RMIN,RMAX,RCOEF
      LOGICAL LDIST
C TOLE CRP_4
C ---------------------------------------------------------------------
C BUT: DONNER LES VALEURS EXTREMES ET LEUR MOYENNE DES VALEURS ABSOLUES
C      DES TERMES NON NULS DE LA DIAGONALE D'UNE MATR_ASSE
C ---------------------------------------------------------------------
C
C     ARGUMENTS:
C
C IN   MATZ  (K19)     : MATR_ASSE A ANALYSER
C IN   LDIST (LOGICAL) : INDIQUE SI LE CALCUL EST DISTRIBUE AU SENS
C                        DONNEE INCOMPLETE PAR PROC
C
C OUT  RMIN  (R8)      : PLUS PETIT TERME NON NUL (EN VALEUR ABSOLUE)
C                        SUR LA DIAGONALE DE MATZ
C OUT  RMAX  (R8)      : PLUS GRAND TERME (EN VALEUR ABSOLUE)
C                        SUR LA DIAGONALE DE MATZ
C OUT  RCOEF  (R8)     : VALEUR "MOYENNE" CONSTRUITE A PARTIR 
C                        DE RMIN ET RMAX
C ---------------------------------------------------------------------

C---- COMMUNS NORMALISES  JEVEUX
      INTEGER*4 ZI4
      COMMON /I4VAJE/ZI4(1)
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32,JEXNOM,JEXNUM
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ------------------------------------------------------------------
      INTEGER JSMDI,NSMHC,JDELGG,JDELGL,JSMHC,NG,IBID,NZ,N,IMATD
      INTEGER JCOL,NLONG,JREFA,JVALM1
      CHARACTER*1 KBID,KTYP,BASE1
      CHARACTER*14 NONU
      CHARACTER*19 MAT19
      REAL*8 R8MAEM,RDIAG,RCOEF2
C=================================================================
      CALL JEMARQ()

      MAT19=MATZ
      CALL JEVEUO(MAT19//'.REFA','L',JREFA)
      NONU=ZK24(JREFA-1+2)
      CALL JELIRA(NONU//'.SMOS.SMDI','LONMAX',N,KBID)
      CALL JEVEUO(NONU//'.SMOS.SMDI','L',JSMDI)
      NZ=ZI(JSMDI-1+N)
      CALL JEVEUO(NONU//'.SMOS.SMHC','L',JSMHC)
      CALL JELIRA(NONU//'.SMOS.SMHC','LONMAX',NSMHC,KBID)
      CALL ASSERT(NZ.LE.NSMHC)

      CALL JEVEUO(NONU//'.NUME.DELG','L',JDELGG)
      CALL JELIRA(NONU//'.NUME.DELG','LONMAX',NG,KBID)
      CALL JEEXIN(NONU//'.NUML.DELG',IMATD)
      IF ( IMATD.NE.0 ) THEN
        CALL JEVEUO(NONU//'.NUML.DELG','L',JDELGL)
      ELSE
        JDELGL=JDELGG
        CALL ASSERT(NG.EQ.N)
      ENDIF

      CALL JELIRA(MAT19//'.VALM','TYPE',IBID,KTYP)
      CALL JELIRA(MAT19//'.VALM','CLAS',IBID,BASE1)
      CALL JEVEUO(JEXNUM(MAT19//'.VALM',1),'L',JVALM1)
      CALL JELIRA(JEXNUM(MAT19//'.VALM',1),'LONMAX',NLONG,KBID)
      CALL ASSERT(NLONG.EQ.NZ)

C 2.  CALCUL DU COEFFICIENT DE CONDITIONNEMENT DES LAGRANGES (RCOEF)
C -------------------------------------------------------------------
      RMIN=R8MAEM()
      RMAX=-1.D0
C     CALCUL DE RMIN : PLUS PETIT TERME NON NUL DE LA DIAGONALE
C     CALCUL DE RMAX : PLUS GRAND TERME DE LA DIAGONALE
      DO 10,JCOL=1,N
        IF (ZI(JDELGL-1+JCOL).LT.0) THEN
          GOTO 10
        ENDIF

        IF (KTYP.EQ.'R') THEN
          RDIAG=ABS(ZR(JVALM1-1+ZI(JSMDI+JCOL-1)))
        ELSE
          RDIAG=ABS(ZC(JVALM1-1+ZI(JSMDI+JCOL-1)))
        ENDIF
        IF (RDIAG.GT.RMAX)RMAX=RDIAG
        IF (RDIAG.EQ.0.D0)GOTO 10
        IF (RDIAG.LT.RMIN)RMIN=RDIAG
   10 CONTINUE

      CALL ASSERT(RMIN.GE.0.D0)
C     -- PARFOIS, LA MATRICE EST == 0.
C     -- DANS CE CAS, RCOEF=1.D0
      IF (RMAX.EQ.0.D0) THEN
        RCOEF=1.D0
      ELSE
        CALL ASSERT(RMAX.GE.RMIN)
C       RCOEF1: MOYENNE GEOMETRIQUE DE RMIN ET RMAX
C       RCOEF1=SQRT(RMAX*RMIN)
C       RCOEF2: MOYENNE ARITHMETIQUE DE RMIN ET RMAX
        RCOEF2=0.5D0*(RMAX+RMIN)
C       J'AURAIS PREFERE RCOEF1 MAIS CELA FAIT PLANTER
C       LES TESTS SDNL101A ET SDNV103F
        RCOEF=RCOEF2
      ENDIF

C     -- SI EXECUTION PARALLELE, IL FAUT COMMUNIQUER :
      IF (LDIST) CALL MPICM1('MPI_MAX','R',1,IBID,RCOEF)
      CALL ASSERT(RCOEF.GT.0.D0)      
C
      CALL JEDEMA()
C
      END
