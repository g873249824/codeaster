      SUBROUTINE VRCOMP(COMPOM,COMPOP,VARMOI,LIGREP)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 09/04/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PELLET J.PELLET
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      CHARACTER*(*) COMPOP,VARMOI,COMPOM,LIGREP
C ------------------------------------------------------------------
C BUT: VERIFIER LA COHERENCE DU CHAMP DE VARIABLES INTERNES "-" AVEC
C      LE COMPORTEMENT CHOISI.
C      ATTENTION : ON MODIFIE PARFOIS VARMOI POUR TENIR COMPTE DES
C      POSSIBLES CHANGEMENTS DE MODELE ET/OU DE COMPORTEMENT
C

C      VARMOI EST LE CHAMP DE VARIABLES INTERNES A L'INSTANT "-"
C      COMPOM EST LA CARTE DE COMPORTEMENT DE VARMOI (OU ' ')
C      COMPOP EST LA CARTE DE COMPOPTEMENT A L'INSTANT "+"
C      LIGREP EST LE LIGREL DU MODELE DE L'INSTANT "+"

C      - SI COMPOM = ' ' :
C           ON SE CONTENTE DE COMPARER LE NOMBRE DE V.I. DE VARMOI
C           AVEC LE NOMBRE ATTENDU DANS COMPOP.
C      - SI COMPOM /= ' ':
C           ON PEUT ALORS COMPARER LE NOM DES COMPORTEMENTS DES
C           INSTANTS "+" ET "-"
C           ON EXIGE QUE CES NOMS SOIENT IDENTIQUES OU BIEN QUE :
C             "-" : 'ELAS' OU 'SANS'  -> "+" : N'IMPORTE QUOI
C             "+" : 'ELAS' OU 'SANS'  -> "-" : N'IMPORTE QUOI


C ------------------------------------------------------------------
C     ARGUMENTS:
C COMPOM   IN/JXIN  K19 : CARTE DE COMPOPTEMENT "-"
C COMPOP   IN/JXIN  K19 : CARTE DE COMPOPTEMENT "+"
C COMPOP   EST AUSSI LE NOM DU CHAM_ELEM_S DE DCEL_I PERMETTANT DE
C          DE CONNAITRE LE NOMBRE DE SOUS-POINTS ET LE NOMBRE DE VARI
C VARMOI   IN/JXVAR K19 : SD CHAM_ELEM   (VARI_R) "-"

C REMARQUES :
C  - VARMOI EST PARFOIS MODIFIE POUR ETRE COHERENT AVEC COMPOP
C           ON LE RECREE ALORS SUR LA BASE VOLATILE
C  - ON VERIFIE EGALEMENT LE NOMBRE DES SOUS-POINTS

C-----------------------------------------------------------------------

      CHARACTER*24 VALK(3)
C     ------------------------------------------------------------------
      INTEGER JDCELD,JDCELV,JDCELL,JDCELK
      INTEGER JCE2D,JCE2V,JCE2L,JCE2K
      INTEGER IAD1,IAD2,NBMA,NBSPP,NBSPM,NCMPP,NCMPM
      INTEGER IMA,IRET,KMA,IBID
      INTEGER IADP,JCOPPL,JCOPPD,JCOPPV,JCOPPK,IP
      INTEGER IADM,JCOPML,JCOPMD,JCOPMV,JCOPMK,IM
      INTEGER VALI(5),TOUNUL,K,NBPGM,N1,JREPP,JREPM
      CHARACTER*8 NOMA,NOMAIL,KBID,NOMMA2,NOMMA1
      CHARACTER*16 RELCOP,RELCOM
      CHARACTER*19 DCEL,CES2,COPM,COPP,COTO,LIG19P,LIG19M
      CHARACTER*48 COMP1,COMP2
      LOGICAL MODIF,EXIP,EXIM
C     ------------------------------------------------------------------
      CALL JEMARQ()

C     -- MODIF : .TRUE. => IL FAUT MODIFIER VARMOI CAR CERTAINES
C        MAILLES ONT DISPARU OU SONT NOUVELLES OU ONT CHANGE DE
C        COMPORTEMENT
      MODIF=.FALSE.

C     COMPORTEMENTS MISCIBLES ENTRE EUX :
C                     1         2         3         4
C            123456789012345678901234567890123456789012345678
      COMP1='LEMAITRE        VMIS_ISOT_LINE  VMIS_ISOT_TRAC  '
      COMP2='ELAS            SANS '
C     REMARQUES :
C       'SANS' EST UN COMPORTEMENT INFINIMENT "MOU"
C              QUI N'A PAS DE VARIABLES INTERNES.
C              IL EST UTILISE PAR CABL_PRECONT
C       'ELAS' N'A PAS DE VARIABLES INTERNES.
C        CES 2 COMPORTEMENTS SONT DONC MISCIBLES AVEC TOUS LES AUTRES.


      COTO='&&VRCOMP.COTO'
      COPM='&&VRCOMP.COPM'
      COPP='&&VRCOMP.COPP'
      CES2='&&VRCOMP.VARI_R'
C
C --- MAILLAGES ATTACHES
C
      CALL DISMOI('F','NOM_MAILLA',COMPOP,'CHAMP',IBID,NOMMA1,IRET)
      CALL DISMOI('F','NOM_MAILLA',VARMOI,'CHAMP',IBID,NOMMA2,IRET)
      IF (NOMMA1.NE.NOMMA2) THEN
        CALL U2MESS('F','MECANONLINE5_49')
      ENDIF
C
      CALL CARCES(COMPOP,'ELEM',' ','V',COTO,'A',IRET)
      CALL CESRED(COTO,0,0,1,'RELCOM','V',COPP)
      CALL DETRSD('CHAM_ELEM_S',COTO)

      CALL JEVEUO(COPP//'.CESD','L',JCOPPD)
      CALL JEVEUO(COPP//'.CESV','L',JCOPPV)
      CALL JEVEUO(COPP//'.CESL','L',JCOPPL)
      CALL JEVEUO(COPP//'.CESK','L',JCOPPK)


C     DANS COMPOP, ON RECUPERE LE CHAM_ELEM_S DE DCEL_I :
C     ----------------------------------------------------------------
      DCEL=COMPOP
      CALL JEVEUO(DCEL//'.CESD','L',JDCELD)
      CALL JEVEUO(DCEL//'.CESV','L',JDCELV)
      CALL JEVEUO(DCEL//'.CESL','L',JDCELL)
      CALL JEVEUO(DCEL//'.CESK','L',JDCELK)
      NOMA=ZK8(JDCELK-1+1)
      NBMA=ZI(JDCELD-1+1)


C     DANS COMPOP ET COMPOM, 'ELAS' EST AFFECTE PA DEFAUT A TOUTES LES
C     MAILLES NON AFFECTEES. DU COUP, ON NE PEUT PAS DISTINGUER UNE
C     MAILLE QUI DISPARAIT (OU QUI APPARAIT) D'UNE MAILLE ELASTIQUE.
C     IL FAUT REGARDER SI ELLE EST DANS LE MODELE.
C     -----------------------------------------------------------------
      LIG19P=LIGREP
      CALL JEVEUO(LIG19P//'.REPE','L',JREPP)
      CALL JELIRA(LIG19P//'.REPE','LONMAX',N1,KBID)
      CALL ASSERT(N1.EQ.2*NBMA)

      CALL DISMOI('F','NOM_LIGREL',VARMOI,'CHAM_ELEM',IBID,LIG19M,IRET)
      CALL JEVEUO(LIG19M//'.REPE','L',JREPM)
      CALL JELIRA(LIG19M//'.REPE','LONMAX',N1,KBID)




C     -- ON TRANSFORME VARMOI EN CHAM_ELEM_S :
C     ----------------------------------------------------------------
      CALL CELCES(VARMOI,'V',CES2)
      CALL CESTAS(CES2)
      CALL JEVEUO(CES2//'.CESD','L',JCE2D)
      CALL JEVEUO(CES2//'.CESV','L',JCE2V)
      CALL JEVEUO(CES2//'.CESL','L',JCE2L)
      CALL JEVEUO(CES2//'.CESK','L',JCE2K)


      IF (COMPOM.NE.' ') THEN
        CALL CARCES(COMPOM,'ELEM',' ','V',COTO,'A',IRET)
        CALL CESRED(COTO,0,0,1,'RELCOM','V',COPM)
        CALL DETRSD('CHAM_ELEM_S',COTO)

        CALL JEVEUO(COPM//'.CESD','L',JCOPMD)
        CALL JEVEUO(COPM//'.CESV','L',JCOPMV)
        CALL JEVEUO(COPM//'.CESL','L',JCOPML)
        CALL JEVEUO(COPM//'.CESK','L',JCOPMK)

        CALL ASSERT(ZK8(JCOPMK-1+1).EQ.ZK8(JCOPPK-1+1))
      ENDIF


C     1.  SI COMPOM EST DONNE, ON VERIFIE LES NOMS DES COMPORTEMENTS :
C     ---------------------------------------------------------------
      IF (COMPOM.NE.' ') THEN
        CALL ASSERT(NOMA.EQ.ZK8(JCOPMK-1+1))

        KMA=0
        DO 10,IMA=1,NBMA
          EXIM=ZI(JREPM-1+2*(IMA-1)+1).GT.0
          EXIP=ZI(JREPP-1+2*(IMA-1)+1).GT.0
          KMA=KMA+1
          CALL CESEXI('C',JCOPMD,JCOPML,IMA,1,1,1,IADM)
          CALL CESEXI('C',JCOPPD,JCOPPL,IMA,1,1,1,IADP)
          IF (IADP.GT.0) THEN
            RELCOP=ZK16(JCOPPV-1+IADP)
            IF (IADM.LE.0)GOTO 60
            RELCOM=ZK16(JCOPMV-1+IADM)

C           -- SI RELCOP=RELCOM C'EST OK :
            IF (RELCOM.EQ.RELCOP)GOTO 10

C           -- SI RELCOP ET RELCOM SONT MISCIBLES C'EST OK :
            IM=INDEX(COMP1,RELCOM)
            IP=INDEX(COMP1,RELCOP)
            IF ((IM.GT.0) .AND. (IP.GT.0))GOTO 10

C           -- SI RELCOP OU RELCOM EST 'ELAS' / 'SANS'  C'EST OK :
            IM=INDEX(COMP2,RELCOM)
            IP=INDEX(COMP2,RELCOP)
            IF ((IM.GT.0) .OR. (IP.GT.0)) THEN
              MODIF=.TRUE.
              IF (EXIP.AND.EXIM) THEN
                CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',IMA),NOMAIL)
                VALK(1)=NOMAIL
                VALK(2)=RELCOM
                VALK(3)=RELCOP
                CALL U2MESK('A','CALCULEL3_47',3,VALK)
              ENDIF
              GOTO 10
            ENDIF
            GOTO 80
          ENDIF
   10   CONTINUE
      ENDIF


C     2.  ON VERIFIE LES NOMBRES DE SOUS-POINTS ET DE CMPS :
C     ------------------------------------------------------------
      DO 40,IMA=1,NBMA
        EXIM=ZI(JREPM-1+2*(IMA-1)+1).GT.0
        EXIP=ZI(JREPP-1+2*(IMA-1)+1).GT.0
        CALL CESEXI('C',JDCELD,JDCELL,IMA,1,1,1,IAD1)
        CALL CESEXI('C',JDCELD,JDCELL,IMA,1,1,2,IAD2)
        CALL CESEXI('C',JCOPPD,JCOPPL,IMA,1,1,1,IADP)
C
C       SI LE COMPORTEMENT N'EST PAS PRESENT SUR IMA, ON SAUTE
C       (C'EST LE CAS POUR UN CALCUL SUR UN GROUPE DE MAILLES :)
C       LE COMPOR EST ALORS RESTREINT A CE GROUP_MA, ET LES
C       POUR LES AUTRES MAILLES ON N'A PAS BESOIN DE VERIFIER
C

        IF (IAD1.LE.0) THEN
          NBSPP=0
          NCMPP=0
        ELSE
          CALL ASSERT(IAD2.GT.0)
          NBSPP=ZI(JDCELV-1+IAD1)
          NCMPP=ZI(JDCELV-1+IAD2)
        ENDIF
        NBPGM=ZI(JCE2D-1+5+4*(IMA-1)+1)
        NBSPM=ZI(JCE2D-1+5+4*(IMA-1)+2)
        NCMPM=ZI(JCE2D-1+5+4*(IMA-1)+3)

C       -- PARFOIS LE COMPORTEMENT EST AFFECTE SUR LES MAILLES
C          DE BORD ALORS QUE CES ELEMENTS N'ONT PAS DE VARIABLES
C          INTERNES (I.E. ILS IGNORENT RAPH_MECA).
C          ON NE VEUT PAS FAIRE D'ERREUR <F> :

C       -- VERIFICATION DU NOMBRE DE SOUS-POINTS :
        IF (NBSPP.NE.0 .AND. NBSPM.NE.0) THEN
          IF (NBSPP.NE.NBSPM .AND. NBSPM.NE.0)GOTO 50
        ENDIF

C       -- VERIFICATION DU NOMBRE DE COMPOSANTES :
        IF (NCMPP.NE.NCMPM) THEN
          IF ((NCMPM.EQ.0) .OR. (NCMPP.EQ.0)) THEN
C           -- CE N'EST PAS GRAVE SI LA MAILLE EST NOUVELLE
C              OU SI ELLE A DISPARU DU CALCUL
C           (IL N'Y A PAS LIEU D'EMETTRE UNE ALARME)
            MODIF=.TRUE.
            GOTO 40
          ENDIF

C         -- CE N'EST PAS GRAVE SI COMPOR "+" = 'ELAS' :
          CALL ASSERT(IADP.GT.0)
          RELCOP=ZK16(JCOPPV-1+IADP)
          IF (RELCOP.EQ.'ELAS' .OR. RELCOP.EQ.'SANS')GOTO 30

C         -- CE N'EST PAS GRAVE SI COMPOR "-" = 'ELAS' :
          IF (COMPOM.NE.' ') THEN
            CALL CESEXI('C',JCOPMD,JCOPML,IMA,1,1,1,IADM)
            CALL ASSERT(IADM.GT.0)
            RELCOM=ZK16(JCOPMV-1+IADM)
            IF (RELCOM.EQ.'ELAS' .OR. RELCOM.EQ.'SANS')GOTO 30
          ELSE
C           CE N'EST PAS FACILE A VERIFIER SANS COMPOM !
C           ON VERIFIE :  NCMPM=1 ET VARIM(*)=0.D0
            IF (NCMPM.EQ.1) THEN
              CALL CESEXI('C',JCE2D,JCE2L,IMA,1,1,1,IAD2)
              CALL ASSERT(IAD2.GT.0)
              TOUNUL=0
              DO 20,K=1,NBPGM*NBSPP
                IF (ZR(JCE2V-1+IAD2+K-1).NE.0.D0)TOUNUL=1
   20         CONTINUE
              IF (TOUNUL.EQ.0)GOTO 30
            ENDIF
          ENDIF
          GOTO 70
        ENDIF

        GOTO 40
   30   CONTINUE
        MODIF=.TRUE.
C       -- SI COMPOM EST FOURNI, UN MESSAGE PLUS CLAIR
C          A DEJA ETE EMIS ('CALCULEL3_47')
        IF ((COMPOM.EQ.' ').AND.EXIP.AND.EXIM) THEN
          CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',IMA),NOMAIL)
          VALI(1)=NCMPM
          VALI(2)=NCMPP
          CALL U2MESG('A','CALCULEL3_48',1,NOMAIL,2,VALI,0,0.D0)
        ENDIF
   40 CONTINUE
      GOTO 90


C     3. MESSAGES D'ERREUR :
C     ----------------------
   50 CONTINUE
      CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',IMA),NOMAIL)
      VALI(1)=NBSPM
      VALI(2)=NBSPP
      CALL U2MESG('F','CALCULEL6_52',1,NOMAIL,2,VALI,0,0.D0)

   60 CONTINUE
      CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',IMA),NOMAIL)
      CALL U2MESK('F','CALCULEL5_41',1,NOMAIL)

   70 CONTINUE
      CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',IMA),NOMAIL)
      VALI(1)=NCMPM
      VALI(2)=NCMPP
      CALL U2MESG('F','CALCULEL3_49',1,NOMAIL,2,VALI,0,0.D0)

   80 CONTINUE
      CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',IMA),NOMAIL)
      VALK(1)=RELCOM
      VALK(2)=RELCOP
      VALK(3)=NOMAIL
      CALL U2MESK('F','CALCULEL5_42',3,VALK)


   90 CONTINUE
      IF (MODIF) CALL VRCOM2(COMPOP,VARMOI,LIGREP)

C     4. MENAGE :
C     -----------
      CALL DETRSD('CHAM_ELEM_S',CES2)
      CALL DETRSD('CHAM_ELEM_S',COPM)
      CALL DETRSD('CHAM_ELEM_S',COPP)

      CALL JEDEMA()

      END
