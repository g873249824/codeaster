      SUBROUTINE CESCNS(CESZ,MGANOZ,BASE,CNSZ)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 29/09/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET
      IMPLICIT NONE
      CHARACTER*(*) CNSZ,CESZ,BASE,MGANOZ
C ------------------------------------------------------------------
C BUT: TRANSFORMER UN CHAM_ELEM_S EN CHAM_NO_S
C ------------------------------------------------------------------
C     ARGUMENTS:
C CESZ   IN/JXIN  K19 : SD CHAM_ELEM_S A TRANSFORMER

C MGANOZ IN/JXIN  K19 : SD CHAM_ELEM_S CONTENANT LES MATRICES
C                       DE PASSAGE GAUSS -> NOEUD.
C    MGANOZ N'EST PAS UTILISE AUJOURD'HUI ('ELGA')
C CNSZ   IN/JXOUT K19 : SD CHAM_NO_S RESULTAT
C BASE    IN      K1  : BASE DE CREATION POUR CNSZ : G/V/L
C-----------------------------------------------------------------------

C  PRINCIPES RETENUS POUR LA CONVERSION :

C  1) ON NE TRAITE QUE LES CHAM_ELEM_S REELS (R8)
C  2)
C    SI  TYPCES='ELEM'
C      ON AFFECTE A UN NOEUD LA MOYENNE ARITHMETIQUE DES VALEURS
C      PORTEES PAR LES MAILLES QUI SONT CONNECTEES A CE NOEUD
C    SI  TYPCES='ELNO'
C      ON AFFECTE A UN NOEUD LA MOYENNE ARITHMETIQUE DES VALEURS
C      PORTEES PAR LES NOEUDS DES MAILLES QUI SONT CONNECTEES A CE NOEUD
C    SI  TYPCES='ELGA'  : PAS ENCORE PROGRAMME

C  3) S'IL Y A DES SOUS POINTS, ON S'ARRETE EN ERREUR <F>

C-----------------------------------------------------------------------
C---- COMMUNS NORMALISES  JEVEUX
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32,JEXNOM,JEXNUM,JEXATR
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ------------------------------------------------------------------
      INTEGER      IMA,IBID,NCMP,ICMP,JCNSL,JCNSV
      INTEGER      JCESD,JCESV,JCESL,NBMA,IRET,NBNO
      INTEGER      INO,NUNO,NBPT,IAD1,ILCNX1,IACNX1
      INTEGER      JCESK,JCESC,NBNOT,JNBNO,IEQ
      CHARACTER*1  KBID
      CHARACTER*3  TSCA
      CHARACTER*8  MA,NOMGD,TYPCES
      CHARACTER*19 CES,CNS,CES1
C     ------------------------------------------------------------------
      CALL JEMARQ()

      CES = CESZ
      CNS = CNSZ

      CALL JEVEUO(CES//'.CESK','L',JCESK)
      TYPCES = ZK8(JCESK-1+3)
      IF (TYPCES.EQ.'ELGA') CALL U2MESS('F','CALCULEL_46')

C     1- ON TRANSFORME CES EN CHAM_ELEM_S/ELNO:
C     --------------------------------------------
      CES1 = '&&CESCNS.CES1'
      CALL CESCES(CES,'ELNO',' ',' ','V',CES1)


C     2. RECUPERATION DE :
C        MA     : NOM DU MAILLAGE
C        NOMGD  : NOM DE LA GRANDEUR
C        NCMP   : NOMBRE DE CMPS DE CES1
C        TSCA   : TYPE SCALAIRE DE LA GRANDEUR : R/C/I ...
C        NBMA   : NOMBRE DE MAILLES DU MAILLAGE
C        ILCNX1,IACNX1   : ADRESSES DE LA CONNECTIVITE DU MAILLAGE
C     --------------------------------------------------------------
      CALL EXISD('CHAM_ELEM_S',CES1,IRET)
      IF (IRET.LE.0) CALL U2MESS('F','CALCULEL_62')
      CALL JEVEUO(CES1//'.CESK','L',JCESK)
      CALL JEVEUO(CES1//'.CESC','L',JCESC)
      CALL JEVEUO(CES1//'.CESD','L',JCESD)
      CALL JEVEUO(CES1//'.CESV','L',JCESV)
      CALL JEVEUO(CES1//'.CESL','L',JCESL)
      MA = ZK8(JCESK-1+1)
      NOMGD = ZK8(JCESK-1+2)
      IF (ZK8(JCESK-1+3).NE.'ELNO') THEN
        CALL U2MESS('F','CALCULEL_63')
      ENDIF
      CALL DISMOI('F','NB_MA_MAILLA',MA,'MAILLAGE',NBMA,KBID,IBID)
      CALL DISMOI('F','NB_NO_MAILLA',MA,'MAILLAGE',NBNOT,KBID,IBID)
      CALL DISMOI('F','TYPE_SCA',NOMGD,'GRANDEUR',IBID,TSCA,IBID)
      CALL JEVEUO(MA//'.CONNEX','L',IACNX1)
      CALL JEVEUO(JEXATR(MA//'.CONNEX','LONCUM'),'L',ILCNX1)
      CALL JELIRA(CES1//'.CESC','LONMAX',NCMP,KBID)

      IF (ZI(JCESD-1+4).GT.1) CALL U2MESS('F','CALCULEL_64')

      IF (TSCA.EQ.'R') THEN
      ELSEIF (TSCA.EQ.'C') THEN
      ELSE
        CALL U2MESS('F','CALCULEL_65')
      ENDIF

C     3- ALLOCATION DE CNS :
C     -------------------------------------------
      IF ( NOMGD .EQ. 'VARI_R' ) NOMGD = 'VAR2_R'
      CALL CNSCRE(MA,NOMGD,NCMP,ZK8(JCESC),BASE,CNS)

C------------------------------------------------------------------
C     4- REMPLISSAGE DE CNS.CNSL ET CNS.CNSV :
C     -------------------------------------------
      CALL JEVEUO(CNS//'.CNSL','E',JCNSL)
      CALL JEVEUO(CNS//'.CNSV','E',JCNSV)

      DO 40,ICMP = 1,NCMP
        CALL JEDETR('&&CESCNS.NBNO')
        CALL WKVECT('&&CESCNS.NBNO','V V I',NBNOT,JNBNO)

        DO 20,IMA = 1,NBMA
          NBPT = ZI(JCESD-1+5+4* (IMA-1)+1)
          NBNO = ZI(ILCNX1+IMA) - ZI(ILCNX1-1+IMA)

          IF (NBNO.NE.NBPT) CALL U2MESS('F','CALCULEL_2')
          DO 10,INO = 1,NBNO
            CALL CESEXI('C',JCESD,JCESL,IMA,INO,1,ICMP,IAD1)
            IF (IAD1.LE.0) GO TO 10

            NUNO = ZI(IACNX1+ZI(ILCNX1-1+IMA)-2+INO)
            IEQ = (NUNO-1)*NCMP + ICMP
            ZL(JCNSL-1+IEQ) = .TRUE.
            IF (TSCA.EQ.'R') THEN
               IF(ZI(JNBNO-1+NUNO).EQ.0) ZR(JCNSV-1+IEQ)=0.D0
               ZR(JCNSV-1+IEQ) = ZR(JCNSV-1+IEQ) + ZR(JCESV-1+IAD1)
            ELSEIF (TSCA.EQ.'C') THEN
               IF(ZI(JNBNO-1+NUNO).EQ.0) ZC(JCNSV-1+IEQ)=(0.D0,0.D0)
               ZC(JCNSV-1+IEQ) = ZC(JCNSV-1+IEQ) + ZC(JCESV-1+IAD1)
            ENDIF
            ZI(JNBNO-1+NUNO) = ZI(JNBNO-1+NUNO) + 1

   10     CONTINUE
   20   CONTINUE

        DO 30,NUNO = 1,NBNOT
          IEQ = (NUNO-1)*NCMP + ICMP
          IF (ZL(JCNSL-1+IEQ)) THEN
            IF (TSCA.EQ.'R') THEN
              ZR(JCNSV-1+IEQ) = ZR(JCNSV-1+IEQ)/ZI(JNBNO-1+NUNO)
            ELSEIF (TSCA.EQ.'C') THEN
              ZC(JCNSV-1+IEQ) = ZC(JCNSV-1+IEQ)/ZI(JNBNO-1+NUNO)
            ENDIF
          END IF
   30   CONTINUE

   40 CONTINUE


C     7- MENAGE :
C     -----------
      CALL DETRSD('CHAM_ELEM_S',CES1)
      CALL JEDETR('&&CESCNS.NBNO')

      CALL JEDEMA()
      END
