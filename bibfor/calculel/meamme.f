      SUBROUTINE MEAMME(OPTIOZ,MODELE,NCHAR ,LCHAR ,MATE  ,
     &                  CARA  ,EXITIM,TIME  ,BASE  ,MERIGI,
     &                  MEMASS,MEAMOR)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 12/02/2013   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      INTEGER NCHAR
      REAL*8 TIME
      CHARACTER*(*) MODELE,OPTIOZ,CARA,MATE
      CHARACTER*(*) MERIGI,MEMASS,MEAMOR
      CHARACTER*8 LCHAR(*)
      LOGICAL EXITIM
      CHARACTER*1  BASE
C
C ----------------------------------------------------------------------
C
C CALCUL DES MATRICES ELEMENTAIRES D'AMOR_MECA
C OU DES MATRICES ELEMENTAIRES DE RIGI_MECA_HYST
C
C ----------------------------------------------------------------------
C
C
C IN  OPTION : 'AMOR_MECA' OU 'RIGI_MECA_HYST'
C IN  MODELE : NOM DU MODELE
C IN  NCHAR  : NOMBRE DE CHARGES
C IN  LCHAR  : LISTE DES CHARGES
C IN  MATE   : CHAM_MATER
C IN  CARA   : CARA_ELEM
C OUT MEAMOR : MATR_ELEM AMORTISSEMENT
C IN  EXITIM : VRAI SI L'INSTANT EST DONNE
C IN  TIME   : INSTANT DE CALCUL
C IN  MERIGI : MATR_ELEM_DEPL_R DE RIGI_MECA
C IN  MEMASS : MATR_ELEM_DEPL_R DE MASS_MECA
C
C
C
C
      INTEGER      NBOUT,NBIN
      PARAMETER    (NBOUT=3, NBIN=12)
      CHARACTER*8  LPAOUT(NBOUT),LPAIN(NBIN)
      CHARACTER*19 LCHOUT(NBOUT),LCHIN(NBIN)
C
      INTEGER      ICODE,IRET,IBID,I,IED,ICHA
      INTEGER      IALIR1,ILIRES,IAREFE
      INTEGER      NH,NOP
      INTEGER      NBRES1
      CHARACTER*2 CODRET
      CHARACTER*8  K8B,NOMGD
      CHARACTER*19 LIGRE1,CHVARC
      CHARACTER*24 RIGICH,MASSCH,LIGRMO,LIGRCH
      CHARACTER*24 CHGEOM,CHCARA(18),CHHARM,ARGU
      CHARACTER*16 OPTION
      LOGICAL      DEBUG
      INTEGER      IFMDBG,NIVDBG
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('PRE_CALCUL',IFMDBG,NIVDBG)
C
C --- INITIALISATIONS
C
      IF (MODELE(1:1).EQ.' ') THEN
        CALL ASSERT(.FALSE.)
      ENDIF
      OPTION = OPTIOZ
      LIGRMO = MODELE(1:8)//'.MODELE'
      IF (NIVDBG.GE.2) THEN
        DEBUG  = .TRUE.
      ELSE
        DEBUG  = .FALSE.
      ENDIF
C
C --- INITIALISATION DES CHAMPS POUR CALCUL
C
      CALL INICAL(NBIN  ,LPAIN ,LCHIN ,
     &            NBOUT ,LPAOUT,LCHOUT)
C
C --- CREATION DES CHAMPS DE GEOMETRIE, CARA_ELEM ET FOURIER
C
      NH     = 0
      CALL MECHAM(OPTION,MODELE,CARA,NH,CHGEOM,CHCARA,CHHARM,ICODE)
C
C --- CREATION CHAMP DE VARIABLES DE COMMANDE CORRESPONDANT
C
      CHVARC = '&&MEAMME.CHVARC'
      CALL VRCINS(MODELE,MATE,CARA,TIME,CHVARC,CODRET)
C
C --- NOM DES RESUELEM DE RIGIDITE
C
      RIGICH = ' '
      IF (MERIGI(1:1).NE.' ') THEN
        CALL JEEXIN(MERIGI(1:19)//'.RELR',IRET)
        IF (IRET.GT.0) THEN
          CALL JEVEUO(MERIGI(1:19)//'.RELR','L',IALIR1)
          CALL JELIRA(MERIGI(1:19)//'.RELR','LONUTI',NBRES1,K8B)
          DO 10 I = 1,NBRES1
            RIGICH = ZK24(IALIR1-1+I)
            CALL DISMOI('F','NOM_LIGREL',RIGICH(1:19),'RESUELEM',IBID,
     &                  LIGRE1,IED)
            IF (LIGRE1(1:8).EQ.MODELE(1:8)) GO TO 20
   10     CONTINUE
          CALL ASSERT(.FALSE.)
   20     CONTINUE



        END IF
      END IF
C
C --- NOM DES RESUELEM DE MASSE
C
      MASSCH = ' '
      IF (MEMASS(1:1).NE.' ') THEN
        CALL JEEXIN(MEMASS(1:19)//'.RELR',IRET)
        IF (IRET.GT.0) THEN
          CALL JEVEUO(MEMASS(1:19)//'.RELR','L',IALIR1)
          CALL JELIRA(MEMASS(1:19)//'.RELR','LONUTI',NBRES1,K8B)
          DO 30 I = 1,NBRES1
            MASSCH = ZK24(IALIR1-1+I)
            CALL DISMOI('F','NOM_LIGREL',MASSCH(1:19),'RESUELEM',IBID,
     &                  LIGRE1,IED)
            IF (LIGRE1(1:8).EQ.MODELE(1:8)) GO TO 40
   30     CONTINUE
          CALL ASSERT(.FALSE.)
   40     CONTINUE
        END IF
      END IF
C
C --- CREATION DU .RERR DES MATR_ELEM D'AMORTISSEMENT
C
      CALL JEEXIN(MEAMOR(1:19)//'.RERR',IRET)
      IF (IRET.GT.0) THEN
        CALL JEDETR(MEAMOR(1:19)//'.RERR')
        CALL JEDETR(MEAMOR(1:19)//'.RELR')
      END IF
      CALL MEMARE(BASE  ,MEAMOR(1:19),MODELE(1:8),MATE,CARA(1:8),
     &            'AMOR_MECA')
C     SI LA MATRICE EST CALCULEE SUR LE MODELE, ON ACTIVE LES S_STRUC:
      CALL JEVEUO(MEAMOR(1:19)//'.RERR','E',IAREFE)
      ZK24(IAREFE-1+3) (1:3) = 'OUI'
C
C --- REMPLISSAGE DES CHAMPS D'ENTREE
C
      LPAIN(1)  = 'PGEOMER'
      LCHIN(1)  = CHGEOM
      LPAIN(2)  = 'PMATERC'
      LCHIN(2)  = MATE
      LPAIN(3)  = 'PCAORIE'
      LCHIN(3)  = CHCARA(1)
      LPAIN(4)  = 'PCADISA'
      LCHIN(4)  = CHCARA(4)
      LPAIN(5)  = 'PCAGNPO'
      LCHIN(5)  = CHCARA(6)
      LPAIN(6)  = 'PCACOQU'
      LCHIN(6)  = CHCARA(7)
      LPAIN(7)  = 'PVARCPR'
      LCHIN(7)  = CHVARC
      LPAIN(8)  = 'PRIGIEL'
      LCHIN(8)  = RIGICH

      IF (RIGICH.NE.' ') THEN
         CALL DISMOI('F','NOM_GD',RIGICH,'RESUELEM',IBID,NOMGD,IED)
         IF (NOMGD.EQ.'MDNS_R') LPAIN(8)  = 'PRIGINS'
      ENDIF

      LPAIN(9)  = 'PMASSEL'
      LCHIN(9)  = MASSCH
      LPAIN(10) = 'PCADISK'
      LCHIN(10) = CHCARA(2)
      LPAIN(11) = 'PCINFDI'
      LCHIN(11) = CHCARA(15)
C
C --- REMPLISSAGE DES CHAMPS DE SORTIE
C
      IF (OPTION(1:9).EQ.'AMOR_MECA') THEN
         LPAOUT(1) = 'PMATUUR'
         LPAOUT(2) = 'PMATUNS'
      ELSE IF (OPTION.EQ.'RIGI_MECA_HYST') THEN
        LPAOUT(1) = 'PMATUUC'
      ELSE
        CALL ASSERT(.FALSE.)
      END IF
      LPAOUT(3) = 'PMATUUR'
      LCHOUT(1) = MEAMOR(1:8)//'.ME001'
      LCHOUT(2) = MEAMOR(1:8)//'.ME002'
      LCHOUT(3) = MEAMOR(1:8)//'.ME003'
C
C --- APPEL A CALCUL
C
C       IF (OPTION.EQ.'AMOR_MECA_ABSO') THEN
C         NOP = 3
C       ELSE
C         NOP = 11
C       ENDIF
      NOP = 11
      CALL CALCUL('S',OPTION,LIGRMO,NOP ,LCHIN,LPAIN,
     &                              2   ,LCHOUT,LPAOUT,BASE,'OUI')
C
      IF (DEBUG) THEN
        CALL DBGCAL(OPTION,IFMDBG,
     &              NOP   ,LPAIN ,LCHIN ,
     &              2     ,LPAOUT,LCHOUT)
      ENDIF
C
      CALL REAJRE(MEAMOR,LCHOUT(1),BASE)
      CALL REAJRE(MEAMOR,LCHOUT(2),BASE)
C
C --- PRISE EN COMPTE DES MATRICES DE BLOCAGE DANS LE CAS D'UNE
C --- RIGIDITE HYSTERETIQUE :
C
      IF (OPTION.EQ.'RIGI_MECA_HYST') THEN
        DO 50 ICHA = 1,NCHAR
          LIGRCH = LCHAR(ICHA) (1:8)//'.CHME.LIGRE'
          ARGU   = LCHAR(ICHA) (1:8)//'.CHME.LIGRE.LIEL'
          CALL JEEXIN(ARGU,IRET)
          IF (IRET.LE.0) GO TO 50
          LCHIN(1) = LCHAR(ICHA) (1:8)//'.CHME.CMULT'
          ARGU = LCHAR(ICHA) (1:8)//'.CHME.CMULT.DESC'
          CALL JEEXIN(ARGU,IRET)
          IF (IRET.LE.0) GO TO 50

          LPAIN(1) = 'PDDLMUR'
          CALL JELIRA(MEAMOR(1:19)//'.RELR','LONUTI',ILIRES,K8B)
          CALL CODENT(ILIRES+1,'D0',LCHOUT(3) (12:14))
          OPTION = 'MECA_DDLM_R'
          CALL CALCUL('S',OPTION,LIGRCH,1,LCHIN,LPAIN,
     &                                  1,LCHOUT(3),LPAOUT(3),BASE,'OUI'
     &)
          CALL REAJRE(MEAMOR,LCHOUT(3),BASE)
   50   CONTINUE
      END IF


C     -- DESTRUCTION DES RESUELEM NULS :
      CALL REDETR(MEAMOR)

      CALL DETRSD('CHAMP_GD',CHVARC)

      CALL JEDEMA()
      END
