      SUBROUTINE PJEFPR(NDIM,TYPRES,EVO1,RESU,MODEL2,CORRES)
C RESPONSABLE VABHHTS J.PELLET
C A_UTIL
      IMPLICIT NONE
      CHARACTER*16 TYPRES,CORRES
      CHARACTER*8  EVO1,RESU,MODEL2
      INTEGER NDIM
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 20/03/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     BUT :
C       PROJETER LES CHAMPS AUX NOEUDS CONTENUS DANS LA SD EVO1
C       SUR LES NOEUDS DU MAILLAGE SOUS-JACENT AU MODELE MODEL2
C       EN SE SERVANT DE LA CORRESPONDANCE CORRES.
C
C  IN       NDIM    I   : 2 OU 3 (DIMENSION DE L'ESPACE)
C  IN       TYPRES  K16 : TYPE DE EVO1 : EVOL_THER/ELAS/NOLI
C  IN/JXIN  EVO1    K8  : NOM DE L'EVOL_XXX A PROJETER
C  IN/JXOUT RESU    K8  : NOM DE L'EVOL_XXX RESULTAT
C  IN/JXIN  MODEL2  K8  : NOM DU MODELE ASSOCIE A RESU
C  IN/JXIN  CORRES  K16 : NOM DE LA SD CORRESP_2_MAILLA

C  RESTRICTIONS :
C   1- ON NE TRAITE QUE LES EVOL_ELAS, EVOL_NOLI ET EVOL_THER
C   2- ON TRAITE SYSTEMATIQUEMENT TOUS LES NUMEROS D'ORDRE
C   3- POUR LES EVOL_THER      : ON PROJETE LES CHAM_NO DE 'TEMP_R'
C   3- POUR LES EVOL_ELAS/NOLI : ON PROJETE LES CHAM_NO DE 'DEPL_R'
C

C ----------------------------------------------------------------------
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      CHARACTER*8   KB, MA1,MA2,TYCH
      CHARACTER*16  NOMSYM(200)
      INTEGER IBID,IE,JCONO,IRET,JORDR,NBORDR,I,IORDR,IAINS1,IAINS2
      INTEGER  NBSYM,ISYM
      CHARACTER*19  CH1,CH2,CH1S,CH2S

C DEB ------------------------------------------------------------------
      CALL JEMARQ()

      CALL DISMOI('F','NOM_MAILLA', EVO1,'RESULTAT',IBID,MA1,IE)
      CALL DISMOI('F','NOM_MAILLA', MODEL2,'MODELE',IBID,MA2,IE)

      CALL JEVEUO(CORRES//'.PJEF_NO','L',JCONO)
      IF (ZK8(JCONO-1+1).NE.MA1)
     &CALL UTMESS('F','PJEFPR','MAILLAGES 1 DIFFERENTS.')
      IF (ZK8(JCONO-1+2).NE.MA2)
     &CALL UTMESS('F','PJEFPR','MAILLAGES 2 DIFFERENTS.')

      CALL RSUTC4(EVO1,' ',1,200,NOMSYM,NBSYM)
      CALL ASSERT (NBSYM.GT.0)


C     1- CREATION DE LA SD RESULTAT :RESU
C     ------------------------------------
      CALL RSUTNU(EVO1,' ',0,'&&PJEFPR.NUME_ORDRE',NBORDR,0.D0,
     &            'ABSO',IRET)
      CALL JEVEUO('&&PJEFPR.NUME_ORDRE','L',JORDR)
      CALL RSCRSD ( RESU, TYPRES, NBORDR )


C     2- ON CALCULE LES CHAM_NO RESULTATS :
C     ------------------------------------
      CH1S='&&PJEFPR.CH1S'
      CH2S='&&PJEFPR.CH2S'
      DO 4,ISYM=1,NBSYM
      DO 5,I=1,NBORDR
        IORDR = ZI(JORDR+I-1)
        CALL RSEXCH(EVO1,NOMSYM(ISYM),IORDR,CH1,IRET)
        IF (IRET.GT.0) GOTO 5
        CALL DISMOI('F','TYPE_CHAMP',CH1,'CHAMP',IBID,TYCH,IBID)
        IF (TYCH.NE.'NOEU') GO TO 5


C       2-1 : TRANSFORMATION DE CH1 EN CHAM_NO_S : CH1S
        CALL DETRSD('CHAM_NO_S',CH1S)
        CALL CNOCNS(CH1,'V',CH1S)


C       2-2 : PROJECTION DU CHAM_NO_S : CH1S -> CH2S
        CALL DETRSD('CHAM_NO_S',CH2S)
        CALL CNSPRJ(CH1S,CORRES,'V',CH2S)


C       2-3 : TRANSFORMATION DE CH2S EN CHAM_NO : CH2
        CALL RSEXCH(RESU,NOMSYM(ISYM),IORDR,CH2,IRET)
        CALL CNSCNO(CH2S,' ','G',CH2)

        CALL RSNOCH ( RESU, NOMSYM(ISYM), IORDR, ' ' )
        CALL RSADPA ( EVO1,'L',1,'INST',IORDR,0,IAINS1,KB)
        CALL RSADPA ( RESU,'E',1,'INST',IORDR,0,IAINS2,KB)
        ZR(IAINS2)=ZR(IAINS1)

 5    CONTINUE
 4    CONTINUE

 9999 CONTINUE

      CALL DETRSD('CHAM_NO_S',CH1S)
      CALL DETRSD('CHAM_NO_S',CH2S)
      CALL JEDETR('&&PJEFPR.NUME_ORDRE')

      CALL JEDEMA()
      END
