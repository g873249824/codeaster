      SUBROUTINE MERILA(MODELE,NCHAR,LCHAR,MATE,CARA,EXITIM,TIME,MATEL,
     &                  THETA,ALPHA)
      IMPLICIT REAL*8 (A-H,O-Z)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 28/03/2007   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C                          DE MERIME...  PROSPER YOUP-LA-BOUM!

C     ARGUMENTS:
C     ----------
      CHARACTER*8 MODELE,LCHAR(*),CARA,MATEL,NOMA
      CHARACTER*24 MATE
      REAL*8 TIME
      LOGICAL EXITIM
      INTEGER NCHAR
C ----------------------------------------------------------------------

C     CALCUL DES MATRICES ELEMENTAIRES DE RIGIDITE MECA

C     ENTREES:

C     LES NOMS QUI SUIVENT SONT LES PREFIXES UTILISATEUR K8:
C        MODELE : NOM DU MODELE  (PAS OBLIGATOIRE)
C        NCHAR  : NOMBRE DE CHARGES
C        LCHAR  : LISTE DES CHARGES
C        MATE   : CHAMP DE MATERIAUX
C        CARA   : CHAMP DE CARAC_ELEM
C        MATEL  : NOM DU MATR_ELEM RESULTAT

C        EXITIM : VRAI SI L'INSTANT EST DONNE
C        TIME   : INSTANT DE CALCUL

C     SORTIES:

C ----------------------------------------------------------------------

C     FONCTIONS EXTERNES:
C     -------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR

C     VARIABLES LOCALES:
C     ------------------
C --------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL,EXIGEO,EXICAR,EXITHE,EXITRE,EXIMOD
      CHARACTER*8 ZK8,LPAIN(12),LPAOUT(1),EXIELE,REPK
      CHARACTER*8 MA,NOMACR,KBID,NOMO
      CHARACTER*16 ZK16,OPTION
      CHARACTER*19 THETA,CHVARC
      CHARACTER*24 ZK24
      CHARACTER*24 CHGEOM,CHCARA(15),LCHIN(12),LCHOUT(10)
      CHARACTER*24 LIGRMO,LIGRCH,CHALPH
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      DATA CHVARC /'&&MERILA.CHVARC'/



      CALL JEMARQ()
      IF (MODELE(1:1).EQ.' ') THEN
        EXIMOD = .FALSE.
        IF (NCHAR.GT.0) THEN
          CALL DISMOI('F','NOM_MODELE',LCHAR(1),'CHARGE',IBID,NOMO,IED)
        ELSE
          CALL U2MESS('F','CALCULEL3_30')
        END IF
      ELSE
        EXIMOD = .TRUE.
        NOMO = MODELE
      END IF


      CALL MEMARE('G',MATEL,NOMO,'RIGI_MECA_LAGR',' ',' ')
C     SI LA RIGIDITE EST CALCULEE SUR LE MODELE, ON ACTIVE LES S_STRUC:
      IF (MODELE(1:1).NE.' ') THEN
        CALL JEVEUO(MATEL//'.REFE_RESU','E',IAREFE)
        ZK24(IAREFE-1+3) (1:3) = 'OUI'
      END IF


      IF (EXIMOD) THEN
C       -- ON VERIFIE LES EVENTUELLES SOUS-STRUCTURES STATIQUES:
C       --------------------------------------------------------
        CALL DISMOI('F','NB_SS_ACTI',MODELE,'MODELE',NBSS,KBID,IED)
        IF (NBSS.GT.0) THEN
          CALL DISMOI('F','NB_SM_MAILLA',MODELE,'MODELE',NBSMA,KBID,IED)
          CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,MA,IED)
          CALL JEVEUO(MA//'.NOMACR','L',IANMCR)
          CALL JEVEUO(MODELE//'.SSSA','L',IASSSA)
          IER = 0

C         -- BOUCLE SUR LES (SUPER)MAILLES
          DO 10,IMA = 1,NBSMA
            IF (ZI(IASSSA-1+IMA).EQ.1) THEN
              NOMACR = ZK8(IANMCR-1+IMA)
              CALL JEEXIN(NOMACR//'.KP_EE',IRET)
              IF (IRET.EQ.0) THEN
                IER = IER + 1
                CALL U2MESK('E','CALCULEL3_68',1,NOMACR)
              END IF
            END IF
   10     CONTINUE
          IF (IER.GT.0) THEN
            CALL U2MESS('F','CALCULEL3_34')
          END IF
        END IF
      END IF


C     -- ON REGARDE S'IL Y A 1 LIGREL DANS LE MODELE
C     ----------------------------------------------
      CALL DISMOI('F','EXI_ELEM',NOMO,'MODELE',IBID,EXIELE,IED)
      IF ((EXIELE(1:3).EQ.'NON') .AND. (NBSS.EQ.0)) CALL U2MESS('F','CAL
     &CULEL3_69')

      LPAOUT(1) = 'PMATUUR'
      LCHOUT(1) = MATEL//'.ME001'

      CALL JEEXIN(MATEL//'.LISTE_RESU',IRET1)
      IF (IRET1.GT.0) CALL JEDETR(MATEL//'.LISTE_RESU')
      CALL JECREO(MATEL//'.LISTE_RESU','G V K24')
      CALL JEECRA(MATEL//'.LISTE_RESU','LONMAX',NCHAR+1,' ')
      CALL JEVEUO(MATEL//'.LISTE_RESU','E',JLIRES)
      ILIRES = 0

C     -- SI IL N'Y A PAS D'ELEMENTS ON VA DIRECTEMENT AUX CHARGES :
      IF (EXIELE(1:3).EQ.'NON') GO TO 30


C     -- ON VERIFIE LA PRESENCE PARFOIS NECESSAIRE DE CARA_ELEM
C        ET CHAM_MATER :
C     ---------------------------------------------------------
      IF (EXIMOD) THEN
        CALL MEGEOM(MODELE,LCHAR(1),EXIGEO,CHGEOM)
        NOMA = CHGEOM(1:8)
        CALL MECARA(CARA,EXICAR,CHCARA)
      END IF

      CALL VRCINS(MODELE,MATE(1:8),CARA,NCHAR,LCHAR,TIME,CHVARC)

      CALL DISMOI('F','ELAS_F_TEMP',MATE,'CHAM_MATER',IBID,REPK,IERD)
      CALL NMVCD2('TEMP',MATE,EXITHE,EXITRE)
      IF (REPK.EQ.'OUI') THEN
        IF (.NOT.EXITHE) THEN
          CALL U2MESS('F','ALGORITH_57')
        END IF
      END IF

      IF (EXIMOD) THEN
        CALL MEALPH(NOMA,ALPHA,CHALPH)
        LPAIN(1) = 'PGEOMER'
        LCHIN(1) = CHGEOM
        LPAIN(2) = 'PMATERC'
        LCHIN(2) = MATE
        LPAIN(3) = 'PCAORIE'
        LCHIN(3) = CHCARA(1)
        LPAIN(4) = 'PCADISK'
        LCHIN(4) = CHCARA(2)
        LPAIN(5) = 'PCAGNPO'
        LCHIN(5) = CHCARA(6)
        LPAIN(6) = 'PCACOQU'
        LCHIN(6) = CHCARA(7)
        LPAIN(7) = 'PCASECT'
        LCHIN(7) = CHCARA(8)
        LPAIN(8) = 'PVARCPR'
        LCHIN(8) = CHVARC
        LPAIN(9) = 'PCAARPO'
        LCHIN(9) = CHCARA(9)
        LPAIN(10) = 'PTHETAR'
        LCHIN(10) = THETA
        LPAIN(11) = 'PALPHAR'
        LCHIN(11) = CHALPH
        LPAIN(12) = 'PCAMASS'
        LCHIN(12) = CHCARA(12)
        LIGRMO = MODELE//'.MODELE'
        OPTION = 'RIGI_MECA_LAGR'
        CALL CALCUL('S',OPTION,LIGRMO,12,LCHIN,LPAIN,1,LCHOUT,LPAOUT,
     &              'G')
        CALL EXISD('CHAMP_GD',LCHOUT(1) (1:19),IRET)
        IF (IRET.NE.0) THEN
          ILIRES = ILIRES + 1
          ZK24(JLIRES-1+ILIRES) = LCHOUT(1)
          CALL JEECRA(MATEL//'.LISTE_RESU','LONUTI',ILIRES,' ')
        END IF
      END IF

   30 CONTINUE

      DO 40 ICHA = 1,NCHAR
        LIGRCH = LCHAR(ICHA)//'.CHME.LIGRE'
        CALL JEEXIN(LCHAR(ICHA)//'.CHME.LIGRE.LIEL',IRET)
        IF (IRET.LE.0) GO TO 40
        LCHIN(1) = LCHAR(ICHA)//'.CHME.CMULT'
        CALL EXISD('CHAMP_GD',LCHAR(ICHA)//'.CHME.CMULT',IRET)
        IF (IRET.LE.0) GO TO 40

        LPAIN(1) = 'PDDLMUR'
        ILIRES = ILIRES + 1
        CALL CODENT(ILIRES,'D0',LCHOUT(1) (12:14))
        OPTION = 'MECA_DDLM_R'
        CALL CALCUL('S',OPTION,LIGRCH,1,LCHIN,LPAIN,1,LCHOUT,LPAOUT,'G')
        CALL EXISD('CHAMP_GD',LCHOUT(1) (1:19),IRET)
        IF (IRET.NE.0) THEN
          ZK24(JLIRES-1+ILIRES) = LCHOUT(1)
          CALL JEECRA(MATEL//'.LISTE_RESU','LONUTI',ILIRES,' ')
        ELSE
          ILIRES = ILIRES - 1
        END IF
   40 CONTINUE

   50 CONTINUE
      CALL JEDETC('V','&&MERILA',1)
      CALL JEDEMA()
      END
