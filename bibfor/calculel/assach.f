      SUBROUTINE ASSACH (REEL,IMAG,BASE,CHOUT)

      IMPLICIT NONE
      CHARACTER*(*) CHOUT,REEL,IMAG
      CHARACTER*1   BASE

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 29/09/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================

C-----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

      CHARACTER*32 JEXNUM,JEXNOM
C     ----- FIN COMMUNS NORMALISES  JEVEUX  --------------------------

      INTEGER I,IER,JDESCR,JDESCI,GDR,GDI,GDCPX,JNCMPR,JNCMPC,LONG
      INTEGER NMAX1,NMAX2,JDESCC,NBVALR,IVALR,NBVALI,IVALI,JVALE
      INTEGER JCELDR,JCELDI,JCELKR,IGR,IMOLO,NBGREL,TAILLE
      CHARACTER*4 TYPCH1,TYPCH2
      CHARACTER*8 NOMGDR,NOMGDI,NOMCPX,K8B
      CHARACTER*24 NOMGR,LIGREL,OPTION,PARAM
      CALL JEMARQ()

      CALL JEEXIN(REEL(1:19)//'.DESC',IER)
      IF (IER.NE.0) THEN
        TYPCH1='CHNO'
      ELSE
        CALL JEEXIN(REEL(1:19)//'.CELK',IER)
        IF (IER.NE.0) THEN
          TYPCH1='CHML'
        ELSE
          CALL U2MESS('F','CALCULEL_17')
        ENDIF
      ENDIF

      CALL JEEXIN(IMAG(1:19)//'.DESC',IER)
      IF (IER.NE.0) THEN
        TYPCH2='CHNO'
      ELSE
        CALL JEEXIN(IMAG(1:19)//'.CELK',IER)
        IF (IER.NE.0) THEN
          TYPCH2='CHML'
        ELSE
          CALL U2MESS('F','CALCULEL_17')
        ENDIF
      ENDIF
      IF (TYPCH1.NE.TYPCH2) THEN
        CALL U2MESS('F','CALCULEL_18')
      ENDIF

      CALL VRREFE(REEL,IMAG,IER)
      IF (IER.NE.0) CALL U2MESS('F','CALCULEL_19')

      IER=0

      IF ( TYPCH1.EQ.'CHNO') THEN

        CALL JEVEUO(REEL(1:19)//'.DESC','L',JDESCR)
        GDR=ZI(JDESCR)
        CALL JENUNO(JEXNUM('&CATA.GD.NOMGD',GDR),NOMGDR)

        IF ((NOMGDR(7:7).NE.' ').OR.(NOMGDR(5:6).NE.'_R')) THEN
          CALL U2MESK('F','CALCULEL_20',1,NOMGDR)
        ENDIF

        CALL JEVEUO(IMAG(1:19)//'.DESC','L',JDESCI)
        GDI=ZI(JDESCI)
        CALL JENUNO(JEXNUM('&CATA.GD.NOMGD',GDI),NOMGDI)

        IF ((NOMGDI(7:7).NE.' ').OR.(NOMGDI(5:6).NE.'_R')) THEN
          CALL U2MESK('F','CALCULEL_20',1,NOMGDI)
        ENDIF

        IF (NOMGDR.NE.NOMGDI) THEN
          CALL U2MESS('F','CALCULEL_21')
        ENDIF

        NOMCPX=NOMGDR(1:4)//'_C'

        CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMCPX),GDCPX)

        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GDR),'LONMAX',NMAX1,K8B)
        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GDCPX),'LONMAX',NMAX2,K8B)

        IF (NMAX1.NE.NMAX2) THEN
          CALL UTMESS ('F','ASSACH','PROBLEME'//
     &    ' DANS LE CATALOGUE DES GRANDEURS SIMPLES, LA GRANDEUR'
     &    //NOMGDR//' NE POSSEDE PAS LE MEME NOMBRE DE CHAMP QUE'//
     &    ' SON HOMOLOGUE COMPLEXE'//NOMCPX)
C        CALL U2MESK('F','CALCULEL_22', 2 ,VALK)
        ENDIF

        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GDR),'L',JNCMPR)
        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GDCPX),'L',JNCMPC)

        DO 10 I=1,NMAX1
          IF (ZK8(JNCMPR-1+I).NE.ZK8(JNCMPC-1+I)) THEN
            IER=1
            GOTO 10
          ENDIF
 10     CONTINUE

        IF (IER.NE.0) THEN
          CALL UTMESS ('F','ASSACH','PROBLEME'//
     &    ' DANS LE CATALOGUE DES GRANDEURS SIMPLES, LA GRANDEUR '
     &    //NOMGDR//' NE POSSEDE PAS LES MEMES CHAMPS QUE SON'//
     &    ' HOMOLOGUE COMPLEXE '//NOMCPX)
C        CALL U2MESK('F','CALCULEL_23', 2 ,VALK)
        ENDIF

        CALL JEDUP1(REEL(1:19)//'.DESC',BASE,CHOUT(1:19)//'.DESC')
        CALL JEDUP1(REEL(1:19)//'.REFE',BASE,CHOUT(1:19)//'.REFE')
        CALL JEVEUO(CHOUT(1:19)//'.DESC','E',JDESCC)
        ZI(JDESCC)=GDCPX

        CALL JELIRA(REEL(1:19)//'.VALE','LONMAX',NBVALR,K8B)
        CALL JEVEUO(REEL(1:19)//'.VALE','L',IVALR)

        CALL JELIRA(IMAG(1:19)//'.VALE','LONMAX',NBVALI,K8B)
        CALL JEVEUO(IMAG(1:19)//'.VALE','L',IVALI)

        IF (NBVALR.NE.NBVALI) THEN
           CALL U2MESS('F','CALCULEL_24')
        ENDIF

        CALL WKVECT(CHOUT(1:19)//'.VALE',BASE//' V C',NBVALR,JVALE)

        DO 20 I=1,NBVALR
          ZC(JVALE-1+I)=DCMPLX(ZR(IVALR-1+I),ZR(IVALI-1+I))
 20     CONTINUE

      ELSE IF ( TYPCH1.EQ.'CHML') THEN
        CALL JEVEUO(REEL(1:19)//'.CELD','L',JCELDR)
        GDR=ZI(JCELDR)
        CALL JENUNO(JEXNUM('&CATA.GD.NOMGD',GDR),NOMGDR)
        IF ((NOMGDR(7:7).NE.' ').OR.(NOMGDR(5:6).NE.'_R')) THEN
          CALL U2MESK('F','CALCULEL_20',1,NOMGDR)
        ENDIF

        CALL JEVEUO(IMAG(1:19)//'.CELD','L',JCELDI)
        GDI=ZI(JCELDI)
        CALL JENUNO(JEXNUM('&CATA.GD.NOMGD',GDI),NOMGDI)

        IF ((NOMGDI(7:7).NE.' ').OR.(NOMGDI(5:6).NE.'_R')) THEN
          CALL U2MESK('F','CALCULEL_20',1,NOMGDI)
        ENDIF

        IF (NOMGDR.NE.NOMGDI) THEN
          CALL U2MESS('F','CALCULEL_21')
        ENDIF

        NOMCPX=NOMGDR(1:4)//'_C'

        CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMCPX),GDCPX)

        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GDR),'LONMAX',NMAX1,K8B)
        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GDCPX),'LONMAX',NMAX2,K8B)

        IF (NMAX1.NE.NMAX2) THEN
          CALL UTMESS ('F','ASSACH','PROBLEME'//
     &    ' DANS LE CATALOGUE DES GRANDEURS SIMPLES, LA GRANDEUR '
     &    //NOMGDR//' NE POSSEDE PAS LE MEME NOMBRE DE CHAMP QUE'//
     &    ' SON HOMOLOGUE COMPLEXE '//NOMCPX)
C        CALL U2MESK('F','CALCULEL_22', 2 ,VALK)
        ENDIF

        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GDR),'L',JNCMPR)
        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GDCPX),'L',JNCMPC)

        DO 30 I=1,NMAX1
          IF (ZK8(JNCMPR-1+I).NE.ZK8(JNCMPC-1+I)) THEN
            IER=1
          ENDIF
 30     CONTINUE

        IF (IER.NE.0) CALL UTMESS ('F','ASSACH','PROBLEME'//
     &  ' DANS LE CATALOGUE DES GRANDEURS SIMPLES, LA GRANDEUR '
     &  //NOMGDR//' NE POSSEDE PAS LES MEMES CHAMPS QUE SON'//
     &  ' HOMOLOGUE COMPLEXE '//NOMCPX)
C        CALL U2MESK('F','CALCULEL_23', 2 ,VALK)

        CALL JEVEUO(REEL(1:19)//'.CELK','L',JCELKR)
        LIGREL=ZK24(JCELKR)
        OPTION=ZK24(JCELKR+1)
        PARAM=ZK24(JCELKR+5)
        LONG=24
        DO 40 I=1,LONG
          IF (PARAM(I:I).EQ.' ') THEN
            TAILLE=I-1
            GOTO 45
          ENDIF
 40     CONTINUE

 45     CONTINUE

        PARAM=PARAM(1:(TAILLE-1))//'C'

        CALL ALCHML(LIGREL,OPTION,PARAM,BASE,CHOUT(1:19),IER,' ')

        CALL JELIRA(REEL(1:19)//'.CELV','LONMAX',NBVALR,K8B)
        CALL JEVEUO(REEL(1:19)//'.CELV','L',IVALR)

        CALL JELIRA(IMAG(1:19)//'.CELV','LONMAX',NBVALI,K8B)
        CALL JEVEUO(IMAG(1:19)//'.CELV','L',IVALI)

        IF (NBVALR.NE.NBVALI) CALL U2MESS('F','CALCULEL_24')

        CALL JEVEUO(CHOUT(1:19)//'.CELV','E',JVALE)

        DO 50 I=1,NBVALR
          ZC(JVALE-1+I)=DCMPLX(ZR(IVALR-1+I),ZR(IVALI-1+I))
 50     CONTINUE

      ENDIF

      CALL JEDEMA()

      END
