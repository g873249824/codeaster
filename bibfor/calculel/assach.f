      SUBROUTINE ASSACH(PREEL2,PIMAG2,BASE2,CHOUT2)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXNOM
      CHARACTER*(*) CHOUT2,PREEL2,PIMAG2,BASE2
      CHARACTER*19 CHOUT,PREEL,PIMAG
      CHARACTER*1 BASE
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================

C ----------------------------------------------------------------------

C
      INTEGER I,IER,GDR,GDI,GDCPX,JNCMPR,JNCMPC,IBID
      INTEGER NMAX1,NMAX2,NBVALR,IVALR,NBVALI,IVALI,JVALE,IRET
      INTEGER JCELDR,JCELDI,JCELKR,NBVALC,JCELK

      CHARACTER*8 NOMGDR,NOMGDI,NOMCPX,K8B,KMPICR,KMPICI,NOPAR2
      CHARACTER*24 LIGREL,OPTION,PARAM
      CHARACTER*24 VALK(2)
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()

      BASE=BASE2
      PREEL=PREEL2
      PIMAG=PIMAG2
      CHOUT=CHOUT2

      CALL JEEXIN(PREEL//'.CELK',IER)
      CALL ASSERT(IER.GT.0)

      CALL VRREFE(PREEL,PIMAG,IER)
      CALL ASSERT(IER.EQ.0)




      CALL JEVEUO(PREEL//'.CELD','L',JCELDR)
      GDR=ZI(JCELDR)
      CALL JENUNO(JEXNUM('&CATA.GD.NOMGD',GDR),NOMGDR)
      IF ((NOMGDR(7:7).NE.' ') .OR. (NOMGDR(5:6).NE.'_R')) THEN
        CALL U2MESK('F','CALCULEL_20',1,NOMGDR)
      ENDIF

      CALL JEVEUO(PIMAG//'.CELD','L',JCELDI)
      GDI=ZI(JCELDI)
      CALL JENUNO(JEXNUM('&CATA.GD.NOMGD',GDI),NOMGDI)

      IF ((NOMGDI(7:7).NE.' ') .OR. (NOMGDI(5:6).NE.'_R')) THEN
        CALL U2MESK('F','CALCULEL_20',1,NOMGDI)
      ENDIF

      IF (NOMGDR.NE.NOMGDI) THEN
        CALL U2MESS('F','CALCULEL_21')
      ENDIF

      NOMCPX=NOMGDR(1:4)//'_C'

      CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMCPX),GDCPX)

      CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GDR),'LONMAX',NMAX1,K8B)
      CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GDCPX),'LONMAX',NMAX2,K8B)

      IF (NMAX1.NE.NMAX2) THEN
        VALK(1)=NOMGDR
        VALK(2)=NOMCPX
        CALL U2MESK('F','CALCULEL_22',2,VALK)
      ENDIF

      CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GDR),'L',JNCMPR)
      CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GDCPX),'L',JNCMPC)

      IER=0
      DO 10 I=1,NMAX1
        IF (ZK8(JNCMPR-1+I).NE.ZK8(JNCMPC-1+I)) IER=1
   10 CONTINUE

      IF (IER.NE.0) THEN
        VALK(1)=NOMGDR
        VALK(2)=NOMCPX
        CALL U2MESK('F','CALCULEL_23',2,VALK)
      ENDIF

      CALL JEVEUO(PREEL//'.CELK','L',JCELKR)
      LIGREL=ZK24(JCELKR)
      OPTION=ZK24(JCELKR+1)

      PARAM=NOPAR2(OPTION,NOMCPX,'OUT')
      CALL EXISD('CHAM_ELEM_S',PREEL,IRET)
      IF (IRET.GT.0) THEN
        CALL ALCHML(LIGREL,OPTION,PARAM,BASE,CHOUT,IER,PREEL)
      ELSE
        CALL ALCHML(LIGREL,OPTION,PARAM,BASE,CHOUT,IER,' ')
      ENDIF

      CALL JELIRA(PREEL//'.CELV','LONMAX',NBVALR,K8B)
      CALL JEVEUO(PREEL//'.CELV','L',IVALR)
      CALL JELIRA(PIMAG//'.CELV','LONMAX',NBVALI,K8B)
      CALL JEVEUO(PIMAG//'.CELV','L',IVALI)
      CALL ASSERT(NBVALR.EQ.NBVALI)

      CALL JEVEUO(CHOUT//'.CELV','E',JVALE)
      CALL JELIRA(CHOUT//'.CELV','LONMAX',NBVALC,K8B)
      CALL ASSERT(NBVALR.EQ.NBVALC)

      DO 40 I=1,NBVALR
        ZC(JVALE-1+I)=DCMPLX(ZR(IVALR-1+I),ZR(IVALI-1+I))
   40 CONTINUE

      CALL DISMOI('F','MPI_COMPLET',PREEL,'CHAM_ELEM',IBID,KMPICR,IBID)
      CALL DISMOI('F','MPI_COMPLET',PIMAG,'CHAM_ELEM',IBID,KMPICI,IBID)
      CALL ASSERT(KMPICR.EQ.KMPICI)

      CALL JEVEUO(CHOUT//'.CELK','E',JCELK)
      IF (KMPICR.EQ.'OUI') THEN
        ZK24(JCELK-1+7)='MPI_COMPLET'
      ELSE
        ZK24(JCELK-1+7)='MPI_INCOMPLET'
      ENDIF

      CALL JEDEMA()

      END
