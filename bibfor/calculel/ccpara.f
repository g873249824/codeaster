      SUBROUTINE CCPARA(OPTION,MODELE,RESUIN,NUMOR1)
      IMPLICIT NONE
C     --- ARGUMENTS ---
      INTEGER      NUMOR1
      CHARACTER*8  MODELE,RESUIN
      CHARACTER*16 OPTION
      CHARACTER*19 LISORD
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 30/05/2011   AUTEUR SELLENET N.SELLENET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE SELLENET N.SELLENET
C     ----- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER        ZI
      COMMON /IVARJE/ZI(1)
      REAL*8         ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16     ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL        ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8    ZK8
      CHARACTER*16          ZK16
      CHARACTER*24                  ZK24
      CHARACTER*32                          ZK32
      CHARACTER*80                                  ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      INTEGER      NPARIN,IRET,IBID,JAINST,JFREQ,IAOPDS,IAOPLO,IPARA
      INTEGER      JNMO,OPT

      REAL*8       RBID,TPS(6),RUNDF,R8NNEM,OMEGA2

      COMPLEX*16   CBID
C
      CHARACTER*8  MAILLA,K8B,NOMCMP(6)
      CHARACTER*24 CURCHA,CHTIME,CHFREQ,CHOME2,CHHARM
      CHARACTER*32 JEXNOM, JEXNUM
C
      LOGICAL      EXITIM,EXIFRQ,EXIHAR
C
      DATA NOMCMP  /'INST    ','DELTAT  ','THETA   ','KHI     ',
     &              'R       ','RHO     '/
C
      CALL JENONU(JEXNOM('&CATA.OP.NOMOPT',OPTION),OPT)
      CALL JEVEUO(JEXNUM('&CATA.OP.DESCOPT',OPT),'L',IAOPDS)
      CALL JEVEUO(JEXNUM('&CATA.OP.LOCALIS',OPT),'L',IAOPLO)
      NPARIN = ZI(IAOPDS-1+2)
C
      CHTIME = '&&MECHTI.CH_INST_R'
      CHFREQ = '&&MECALM.FREQ'
      CHOME2 = '&&MECALM.OMEGA2'
      CHHARM = '&&MEHARM.NUME_HARM'
      RUNDF  = R8NNEM()
C
      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,MAILLA,IRET)
C
      DO 10 IPARA = 1,NPARIN
        CURCHA = ZK24(IAOPLO+3*IPARA-2)
        IF ( CURCHA.EQ.'&&MECHTI.CH_INST_R' ) THEN
          CALL JENONU(JEXNOM(RESUIN//'           .NOVA','INST'),IRET)
          IF ( IRET.NE.0 ) THEN
            CALL RSADPA(RESUIN,'L',1,'INST',NUMOR1,0,JAINST,K8B)
C
            TPS(1) = ZR(JAINST)
            TPS(2) = RUNDF
            TPS(3) = RUNDF
            TPS(4) = RUNDF
            TPS(5) = RUNDF
            TPS(6) = RUNDF
C
            CALL MECACT('V',CHTIME,'MAILLA',MAILLA,'INST_R',6,
     &                  NOMCMP,IBID,TPS,CBID,K8B)
          ENDIF
C
        ELSE IF ( CURCHA.EQ.'&&MECALM.FREQ' ) THEN
          CALL JENONU(JEXNOM(RESUIN//'           .NOVA','FREQ'),IRET)
          IF ( IRET.NE.0 ) THEN
            CALL RSADPA(RESUIN,'L',1,'FREQ',NUMOR1,0,JFREQ,K8B)
            CALL MECACT('V',CHFREQ,'MAILLA',MAILLA,'FREQ_R',1,
     &                  'FREQ',IBID,ZR(JFREQ),CBID,K8B)
          ENDIF
C
        ELSE IF ( CURCHA.EQ.'&&MECALM.OMEGA2' ) THEN
          CALL JENONU(JEXNOM(RESUIN//'           .NOVA','OMEGA2'),IRET)
          IF ( IRET.NE.0 ) THEN
            CALL RSADPA(RESUIN,'L',1,'OMEGA2',NUMOR1,0,JFREQ,K8B)
            OMEGA2 = ZR(JFREQ)
          ELSE
            OMEGA2 = 1.0D0
          ENDIF
          CALL MECACT('V',CHOME2,'MAILLA',MAILLA,'OME2_R',1,
     &                'OMEG2',IBID,OMEGA2,CBID,K8B)
C
        ELSE IF ( CURCHA.EQ.'&&MEHARM.NUME_HARM' ) THEN
          CALL JENONU(JEXNOM(RESUIN//'           .NOVA','NUME_MODE'),
     &                IRET)
          IF ( IRET.NE.0 ) THEN
            CALL RSADPA(RESUIN,'L',1,'NUME_MODE',NUMOR1,0,JNMO,K8B)
            CALL MECACT('V',CHHARM,'MAILLA',MAILLA,'HARMON',1,
     &                  'NH',ZI(JNMO),RBID,CBID,' ')
          ENDIF
        ENDIF
  10  CONTINUE
C
  20  CONTINUE
C
      END
