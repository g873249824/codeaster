      INTEGER FUNCTION MODATT(OPT,TE,STATUT,IPAR)
      IMPLICIT NONE

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE                            VABHHTS J.PELLET
C     ARGUMENTS:
C     ----------
      INCLUDE 'jeveux.h'
      INTEGER OPT,TE,IPAR
      CHARACTER*3 STATUT
C ----------------------------------------------------------------------
C     ENTREES:
C     OPT    : OPTION DE CALCUL
C     TE     : TYPE_ELEMENT
C     STATUT : IN /OUT
C     IPAR   : INDICE DU PARAMETRE DANS LA LISTE (OPT,TE)

C     SORTIES:
C     MODATT : MODE_LOCAL ATTENDU POUR LE CALCUL(OPT,TE) DU
C              CHAMP_PARAMETRE(STATUT,IPAR)

C ----------------------------------------------------------------------
      COMMON /CAII02/IAOPTT,LGCO,IAOPMO,ILOPMO,IAOPNO,ILOPNO,IAOPDS,
     &       IAOPPA,NPARIO,NPARIN,IAMLOC,ILMLOC,IADSGD

C     VARIABLES LOCALES:
C     ------------------
      INTEGER NBIN,JJ,OPTMOD
      INTEGER IADSGD,IAMLOC,IAOPDS,IAOPMO,IAOPNO,IAOPPA,IAOPTT,ILMLOC
      INTEGER ILOPMO,ILOPNO,LGCO,NPARIN,NPARIO

C DEB-------------------------------------------------------------------

C     JJ = IOPTTE(OPT,TE)
      JJ = ZI(IAOPTT-1+ (TE-1)*LGCO+OPT)
      CALL ASSERT(JJ.GT.0)
      OPTMOD = IAOPMO + ZI(ILOPMO-1+JJ) - 1
      IF (STATUT.EQ.'IN ') THEN
        MODATT = ZI(OPTMOD-1+3+IPAR)
        GO TO 10
      ELSE
        CALL ASSERT(STATUT.EQ.'OUT')
        NBIN = ZI(OPTMOD-1+2)
        MODATT = ZI(OPTMOD-1+3+NBIN+IPAR)
        GO TO 10
      END IF
   10 CONTINUE
      END
