      SUBROUTINE TRIGD(DG1,DEB1,DG2,DEB2,CUMUL,INO,NNO)
      IMPLICIT NONE

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PELLET J.PELLET
C     ARGUMENTS:
C     ----------
      INCLUDE 'jeveux.h'
      INTEGER DG1(*),DG2(*),DEB1,DEB2,INO,NNO
      LOGICAL CUMUL
C ----------------------------------------------------------------------
C     ENTREES:
C       IGD    : GRANDEUR (COMMON)
C       NCMPMX : NOMBRE MAX DE CMP DE IGD (COMMON)
C       IACHIN : ADRESSE JEVEUX DE CHIN.VALE (COMMON)
C       IANUEQ : ADRESSE JEVEUX DE L'OBJET .NUEQ (PROF_CHNO)(COMMON)
C       LPRNO  : 1: CHAM_NO A PROF_CHNO (COMMON)
C                0: CHAM_NO A REPRESENTATION CONSTANTE OU CARTE.
C                SI LPRNO =1 IL FAUT FAIRE L'INDIRECTION PAR .NUEQ
C       IACHLO : ADRESSE JEVEUX DU CHAMP LOCAL (COMMON)
C       DG1    : DG DE LA GRANDEUR DE CHIN
C       DEB1   : ADRESSE DU DEBUT DE LA GRANDEUR DANS CHIN.VALE
C       DG2    : DG DE LA GRANDEUR DE CHLOC
C       DEB2   : ADRESSE DU DEBUT DE LA GRANDEUR DANS CHLOC.VALE
C       CUMUL  : / .F. : ON AFFECTE DANS DEB2 LA GRANDEUR LUE
C                / .T. : ON CUMULE DANS DEB2 LA GRANDEUR LUE
C                CUMUL= .T. => ON VEUT FAIRE "MOYENNE" CHNO -> ELEM
C       INO    : NUMERO DU NOEUD ASSOCIE A DEB1
C                (INO N'EST UTILISE QUE SI CUMUL)
C       NNO    : NOMBRE DE NEOUDS DE LA MAILLE
C                (NNO N'EST UTILISE QUE SI CUMUL)

C     SORTIES:
C       RECOPIE DE CHIN.VALE DANS CHLOC POUR LES CMPS VOULUS.
C       DEB2   : EST MIS A JOUR POUR LE NOEUD SUIVANT (SI EXCHNO).
C                ET POUR L'ELEMENT SUIVANT SI EXCART OU EXCHNO.
C ----------------------------------------------------------------------
      LOGICAL EXISDG

      INTEGER IGD,NEC,NCMPMX,IACHIN,IACHLO,IICHIN,IANUEQ,LPRNO
      INTEGER ILCHLO,ITYPGD
      COMMON /CAII01/IGD,NEC,NCMPMX,IACHIN,IACHLO,IICHIN,IANUEQ,LPRNO,
     &       ILCHLO,ITYPGD

C    -------------------------------------------------------------------
      LOGICAL CHANGE
      INTEGER CMP,IND1,NEC2,NSAV,KSAV
      PARAMETER(NEC2=12)
      PARAMETER(NSAV=5)
      INTEGER IND2(NSAV),NECOLD(NSAV)
      INTEGER DG1OLD(NEC2,NSAV),DG2OLD(NEC2,NSAV),POSCMP(NEC2*30,NSAV)
      INTEGER IEQ,I,K,KK,KK1
      SAVE DG1OLD,DG2OLD,POSCMP,IND2,NECOLD
      DATA NECOLD/NSAV*0/

C----------------------------------------------------------------------
C     1. ON REGARDE SI ON NE TROUVE PAS UN POSCMP(*,KSAV) QUI CONVIENT.
C        (CALCUL DE KSAV)
C     -----------------------------------------------------------------
      DO 20,K=1,NSAV
        IF (NEC.NE.NECOLD(K))GOTO 20
        CHANGE=.FALSE.
        DO 10,I=1,NEC
          IF (DG1(I).NE.DG1OLD(I,K))CHANGE=.TRUE.
          IF (DG2(I).NE.DG2OLD(I,K))CHANGE=.TRUE.
   10   CONTINUE
        IF (CHANGE)GOTO 20
C       -- ON A TROUVE UN KSAV CONVENABLE :
        KSAV=K
        GOTO 80

   20 CONTINUE


C----------------------------------------------------------------
C     -- ON PLACE LE "ASSERT" ICI POUR LE FAIRE MOINS SOUVENT
      CALL ASSERT(NEC.LE.NEC2)

C     2.1 ON DECALE LES TABLEAUX VERS LE "FOND" :
C         ET ON AJOUTE LES NOUVELLES VALEURS EN KSAV=1
C     ------------------------------------------------
      DO 50,K=NSAV-1,1,-1
        DO 30,I=1,NECOLD(K)
          DG1OLD(I,K+1)=DG1OLD(I,K)
          DG2OLD(I,K+1)=DG2OLD(I,K)
   30   CONTINUE
        DO 40,I=1,IND2(K)
          POSCMP(I,K+1)=POSCMP(I,K)
   40   CONTINUE
        IND2(K+1)=IND2(K)
        NECOLD(K+1)=NECOLD(K)
   50 CONTINUE

      KSAV=1
      NECOLD(KSAV)=NEC
      DO 60,I=1,NEC
        DG1OLD(I,KSAV)=DG1(I)
        DG2OLD(I,KSAV)=DG2(I)
   60 CONTINUE


C     2.2 REMPLISSAGE DE POSCMP(KSAV):
C     -------------------------------
      IND1=0
      IND2(KSAV)=0
      DO 70 CMP=1,NCMPMX
        IF (EXISDG(DG1,CMP))IND1=IND1+1
        IF (EXISDG(DG2,CMP)) THEN
          IND2(KSAV)=IND2(KSAV)+1
          IF (EXISDG(DG1,CMP)) THEN
            POSCMP(IND2(KSAV),KSAV)=IND1
          ELSE
            POSCMP(IND2(KSAV),KSAV)=0
          ENDIF
        ENDIF
   70 CONTINUE



C----------------------------------------------------------------
   80 CONTINUE
C     3. RECOPIE DES VALEURS DANS LE CHAMP_LOCAL :
C     --------------------------------------------
      DO 90 CMP=1,IND2(KSAV)
        IF (POSCMP(CMP,KSAV).GT.0) THEN
          IEQ=DEB1-1+POSCMP(CMP,KSAV)
          IF (LPRNO.EQ.1)IEQ=ZI(IANUEQ-1+IEQ)

          IF (.NOT.CUMUL) THEN
            IF (ITYPGD.EQ.1) THEN
              ZR(IACHLO-1+DEB2-1+CMP)=ZR(IACHIN-1+IEQ)
            ELSEIF (ITYPGD.EQ.2) THEN
              ZC(IACHLO-1+DEB2-1+CMP)=ZC(IACHIN-1+IEQ)
            ELSEIF (ITYPGD.EQ.3) THEN
              ZI(IACHLO-1+DEB2-1+CMP)=ZI(IACHIN-1+IEQ)
            ELSEIF (ITYPGD.EQ.4) THEN
              ZK8(IACHLO-1+DEB2-1+CMP)=ZK8(IACHIN-1+IEQ)
            ELSEIF (ITYPGD.EQ.5) THEN
              ZK16(IACHLO-1+DEB2-1+CMP)=ZK16(IACHIN-1+IEQ)
            ELSEIF (ITYPGD.EQ.6) THEN
              ZK24(IACHLO-1+DEB2-1+CMP)=ZK24(IACHIN-1+IEQ)
            ELSE
              CALL ASSERT(.FALSE.)
            ENDIF

          ELSE
            IF (ITYPGD.EQ.1) THEN
              ZR(IACHLO-1+DEB2-1+CMP)=ZR(IACHLO-1+DEB2-1+CMP)+
     &                                ZR(IACHIN-1+IEQ)
            ELSEIF (ITYPGD.EQ.2) THEN
              ZC(IACHLO-1+DEB2-1+CMP)=ZC(IACHLO-1+DEB2-1+CMP)+
     &                                ZC(IACHIN-1+IEQ)
            ELSE
              CALL ASSERT(.FALSE.)
            ENDIF
          ENDIF


          IF (CUMUL) THEN
            IF (INO.EQ.1) THEN
              ZL(ILCHLO-1+DEB2-1+CMP)=.TRUE.
            ELSE
            ENDIF
          ELSE
            ZL(ILCHLO-1+DEB2-1+CMP)=.TRUE.
          ENDIF

        ELSE
          ZL(ILCHLO-1+DEB2-1+CMP)=.FALSE.
        ENDIF
   90 CONTINUE


C----------------------------------------------------------------
      IF (CUMUL) THEN
        IF (INO.EQ.NNO)DEB2=DEB2+IND2(KSAV)
      ELSE
        DEB2=DEB2+IND2(KSAV)
      ENDIF
      END
