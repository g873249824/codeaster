      SUBROUTINE AIDTY2( IMPR)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 26/11/97   AUTEUR D6BHHBQ B.QUINNEZ 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C INSPI AIDTYP
C ---------------------------------------------------------------------
C    BUT:
      IMPLICIT REAL*8 (A-H,O-Z)
C       ECRIRE SUR LE FICHIER "IMPR" AU FORMAT .CODE
C       1  LES COUPLES (OPTION, TYPE_ELEMENT) REALISES AUJOURD'HUI
C          (POUR VERIFIER LA COMPLETUDE)
C ----------------------------------------------------------------------
C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR,JEXR8
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8,KBID
      CHARACTER*16 ZK16,NOPHEN,NOTE,NOOP,NOMODL
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80,LIGNE
C---------------- FIN COMMUNS NORMALISES  JEVEUX  --------------------
C
C
C
      CALL JEMARQ()
      CALL JELIRA('&CATA.TM.NOMTM','NOMMAX',NBTM,KBID)
      CALL JELIRA('&CATA.PHENOMENE','NOMUTI',NBPHEN,KBID)
      CALL JEVEUO('&CATA.TE.OPTTE','L',IAOPTE)
      CALL JELIRA('&CATA.TE.NOMTE','NOMUTI',NBTE,KBID)
      CALL JELIRA('&CATA.OP.NOMOPT','NOMUTI',NBOP,KBID)
C
      CALL WKVECT('&&AIDTY2.NBOP','V V I',NBOP,IANBOP)
      CALL WKVECT('&&AIDTY2.NBTE','V V I',NBTE ,IANBTE)
      CALL WKVECT('&&AIDTY2.NOT2','V V K80',NBTE ,IANOT2)
      CALL WKVECT('&&AIDTY2.NOP2','V V K16',NBOP ,IANOP2)
C
C
C     -- REMPLISSAGE DE .NOP2:
C     ------------------------
      DO 7,IOP=1,NBOP
        CALL JENUNO(JEXNUM('&CATA.OP.NOMOPT',IOP),NOOP)
        ZK16(IANOP2-1+IOP)=NOOP
 7    CONTINUE
C
C
C     -- REMPLISSAGE DE .NOT2:
C     ------------------------
      DO 1,IPHEN=1,NBPHEN
        CALL JENUNO(JEXNUM('&CATA.PHENOMENE',IPHEN),NOPHEN)
        CALL JELIRA('&CATA.'//NOPHEN,'NUTIOC',NBMODL,KBID)
        DO 2,IMODL=1,NBMODL
          CALL JEVEUO(JEXNUM('&CATA.'//NOPHEN ,IMODL),'L',IAMODL)
          CALL JENUNO(JEXNUM('&CATA.'//NOPHEN(1:13)//'.MODL',
     &                      IMODL),NOMODL)
          DO 3,ITM=1,NBTM
            ITE= ZI(IAMODL-1+ITM)
            IF (ITE.EQ.0) GO TO 3
            CALL JENUNO(JEXNUM('&CATA.TE.NOMTE',ITE),NOTE)
            ZK80(IANOT2-1+ITE)=NOPHEN//' '//NOMODL//' '//NOTE
 3        CONTINUE
 2      CONTINUE
 1    CONTINUE
C
C     ON COMPLETE .NOT2 AVEC LES ELEMENTS N'APPARTENANT A AUCUNE
C        MODELISATION NI PHENOMENE:
      DO 6, ITE=1,NBTE
        IF (ZK80(IANOT2-1+ITE)(1:1).EQ.' ') THEN
          CALL JENUNO(JEXNUM('&CATA.TE.NOMTE',ITE),NOTE)
          ZK80(IANOT2-1+ITE)(35:50)=NOTE
        END IF
 6    CONTINUE
C
C
C     -- ECRITURE DES COUPLES (OPT,TE) PREVUS AU FORMAT .CODE :
C     ---------------------------------------------------------
      DO 101,IOP=1,NBOP
        DO 10,ITE=1,NBTE
          IOPTTE= ZI(IAOPTE-1+NBOP*(ITE-1)+IOP)
          IF (IOPTTE.EQ.0) GO TO 10
          CALL JEVEUO(JEXNUM('&CATA.TE.OPTMOD',IOPTTE),'L',IAOPMO)
          NUCALC= ZI(IAOPMO)
          IF (NUCALC.EQ.0) GO TO 10
          ZI(IANBTE-1+ITE)=ZI(IANBTE-1+ITE)+1
          ZI(IANBOP-1+IOP)=ZI(IANBOP-1+IOP)+1
          IF (NUCALC.GT.0) THEN
             WRITE(IMPR,*)'$  &&CALCUL ',ZK16(IANOP2-1+IOP),
     +         ' ',ZK80(IANOT2-1+ITE)(35:50),' ''OUI'' '
          ELSE
             WRITE(IMPR,*)'$   &&CALCUL ',ZK16(IANOP2-1+IOP),
     +         ' ',ZK80(IANOT2-1+ITE)(35:50),' ''NON'' '
          END IF
 10     CONTINUE
 101  CONTINUE
C
      CALL JEDETC('V','&&AIDTY2',1)
C
      CALL JEDEMA()
      END
