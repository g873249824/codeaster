      SUBROUTINE ZECHLO(OPT,TE)
      IMPLICIT NONE

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 16/01/2006   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE                            VABHHTS J.PELLET
C     ARGUMENTS:
C     ----------
      INTEGER OPT,TE
C ----------------------------------------------------------------------
C     ENTREES:
C      OPT : OPTION
C      TE  : TYPE_ELEMENT

C     SORTIES:
C      MET LES CHAMPS LOCAUX DE SORTIE A ZERO ENTRE 2 TE0000

C ----------------------------------------------------------------------
      COMMON /CAII02/IAOPTT,LGCO,IAOPMO,ILOPMO,IAOPNO,ILOPNO,IAOPDS,
     +       IAOPPA,NPARIO,NPARIN,IAMLOC,ILMLOC,IADSGD
      INTEGER        IAWLOC,IAWTYP,NBELGR,IGR,JCTEAT,LCTEAT
      COMMON /CAII06/IAWLOC,IAWTYP,NBELGR,IGR,JCTEAT,LCTEAT
      COMMON /CAII04/IACHII,IACHIK,IACHIX
      COMMON /CAII07/IACHOI,IACHOK
      COMMON /CAII08/IEL

C     FONCTIONS EXTERNES:
C     -------------------
      INTEGER NBPARA
      CHARACTER*8 NOPARA

C     VARIABLES LOCALES:
C     ------------------
      INTEGER NP,IPAR,JCELD,IRET,IFETI,IAUX1,IIEL,IACHL1
      INTEGER LGCATA,LGGREL,I,IACHII,IACHIK,IACHIX,IACHLO,IACHOI,IACHOK
      INTEGER IADSGD,IAMLOC,IAOPDS,IAOPMO,IAOPNO,IAOPPA
      INTEGER IAOPTT,IEL,ILMLOC
      INTEGER ILOPMO,ILOPNO,INDIK8,IPARG,LGCO,NPARIN,NPARIO
      CHARACTER*1 TYPSCA
      CHARACTER*8 NOMPAR
      LOGICAL     LFETI
C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR,JEXR8
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL,ETENDU
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C ---------------- FIN COMMUNS NORMALISES  JEVEUX  --------------------

C DEB-------------------------------------------------------------------

C     FETI PARALLELE OR NOT ?
C     --------------------------------------------------
      CALL JEEXIN('&CALCUL.FETI.NUMSD',IRET)
      IF (IRET.NE.0) THEN
        LFETI=.TRUE.
        CALL JEVEUO('&CALCUL.FETI.NUMSD','L',IFETI)
        IFETI=IFETI-1
      ELSE
        LFETI=.FALSE.
      ENDIF

      NP = NBPARA(OPT,TE,'OUT')
      DO 40 IPAR = 1,NP
        NOMPAR = NOPARA(OPT,TE,'OUT',IPAR)

        IPARG = INDIK8(ZK8(IAOPPA),NOMPAR,1,NPARIO)
        IACHLO = ZI(IAWLOC-1+7* (IPARG-1)+1)
        LGCATA = ZI(IAWLOC-1+7* (IPARG-1)+4)
        IF (IACHLO.EQ.-1) GO TO 40


C       1- CALCUL DE LA LONGUEUR A METTRE A ZERO : LGGREL
C       --------------------------------------------------

C     -- LE CHAMP LOCAL EST-IL ETENDU ?
        CALL CHLOET(IPARG,ETENDU,JCELD)
        IF (ETENDU) THEN
          LGGREL = ZI(JCELD-1+ZI(JCELD-1+4+IGR)+4)
C     -- LA LOGIQUE DE TARISSEMENT DE DONNEES N'EST PAS POSSIBLE
          LFETI=.FALSE. 
        ELSE
          LGGREL = NBELGR*LGCATA
        END IF



        TYPSCA = ZK8(IAWTYP-1+IPARG) (1:1)


C       2- MISE A ZERO :
C       --------------------------------------------------
        IF (TYPSCA.EQ.'R') THEN
C     -- SI FETI, LA MAILLE IIEL EST ELLE CONCERNEE PAR LE PROC COURANT
          IF (LFETI) THEN
            IACHL1=IACHLO-1
            DO 8 IIEL=1,NBELGR
              IF (ZL(IFETI+IIEL)) THEN
                IAUX1=IACHL1+(IIEL-1)*LGCATA
                DO 6 I=1,LGCATA
                  ZR(IAUX1+I) = 0.0D0
    6           CONTINUE
              ENDIF
    8       CONTINUE
          ELSE
            DO 10 I = 1,LGGREL
              ZR(IACHLO-1+I) = 0.0D0
   10       CONTINUE
          ENDIF
        ELSE IF (TYPSCA.EQ.'C') THEN
          IF (LFETI) THEN
            IACHL1=IACHLO-1
            DO 18 IIEL=1,NBELGR
              IF (ZL(IFETI+IIEL)) THEN
                IAUX1=IACHL1+(IIEL-1)*LGCATA
                DO 16 I=1,LGCATA
                  ZC(IAUX1+I) = DCMPLX(0.D0,0.D0)
   16           CONTINUE
              ENDIF
   18       CONTINUE
          ELSE
            DO 20 I = 1,LGGREL
              ZC(IACHLO-1+I) = DCMPLX(0.D0,0.D0)
   20       CONTINUE
          ENDIF
        ELSE IF (TYPSCA.EQ.'I') THEN
          IF (LFETI) THEN
            IACHL1=IACHLO-1
            DO 28 IIEL=1,NBELGR
              IF (ZL(IFETI+IIEL)) THEN
                IAUX1=IACHL1+(IIEL-1)*LGCATA
                DO 26 I=1,LGCATA
                  ZI(IAUX1+I) = 0
   26           CONTINUE
              ENDIF
   28       CONTINUE
          ELSE
            DO 30 I = 1,LGGREL
              ZI(IACHLO-1+I) = 0
   30       CONTINUE
          ENDIF
        ELSE
          CALL UTMESS('F','ZECHLO',
     +                'ERREUR PGMEUR DANS ZECHLO : TYPE_SCALAIRE:'//
     +                TYPSCA//' NON AUTORISE(R OU C),')
        END IF
   40 CONTINUE

   50 CONTINUE
      END
