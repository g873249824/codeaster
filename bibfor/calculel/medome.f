      SUBROUTINE MEDOME(MODELE,MATE,CARA,KCHA,NCHA,CTYP,RESULT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'jeveux.h'
      INTEGER                                 NCHA
      CHARACTER*4                                       CTYP
      CHARACTER*8       MODELE, CARA, RESULT
      CHARACTER*24      MATE
      CHARACTER*(*)                      KCHA
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     SAISIE ET VERIFICATION DE LA COHERENCE DES DONNEES MECANIQUES
C     DU PROBLEME
C ----------------------------------------------------------------------
C OUT : MODELE : NOM DU MODELE
C OUT : MATE   : CHAMP MATERIAU
C OUT : CARA   : NOM DU CHAMP DE CARACTERISTIQUES
C IN  : KCHA   : NOM JEVEUX POUR STOCKER LES CHARGES
C OUT : NCHA   : NOMBRE DE CHARGES
C OUT : CTYP   : TYPE DE CHARGE
C IN  : RESULT : NOM DE LA SD RESULTAT
C
C ----------------------------------------------------------------------
C     ------------------------------------------------------------------
      INTEGER     IEXCIT,IRET, ICHA
      CHARACTER*6 NOMPRO
      PARAMETER (NOMPRO='MEDOME')
      CHARACTER*8  K8B, NOMO, MATERI, BLAN8, MODNEW
      CHARACTER*16 CONCEP, NOMCMD, PHENOM
      CHARACTER*19  EXCIT, KNUM
      CHARACTER*8 CRIT
      LOGICAL LPOST
      INTEGER      IARG
      CALL JEMARQ()

C              12345678
      BLAN8 = '        '
      IER = 0
      CTYP   = ' '
      MODELE = ' '
      NOMO   = ' '
      CARA   = ' '
      MATERI = ' '
      IEXCIT = 1
      LPOST = .FALSE.
      N1 = 0
C
      CALL GETRES(K8B,CONCEP,NOMCMD)
C
      LPOST = (NOMCMD.EQ.'CALC_ELEM').OR.
     &        (NOMCMD.EQ.'CALC_SENSI').OR.
     &        (NOMCMD.EQ.'POST_ELEM')

      IF ( LPOST.AND.(RESULT(1:1).NE.' '))THEN
        CALL GETVIS(' ','NUME_ORDRE',0,IARG,1,NUORD,INUORD)
        IF(INUORD.EQ.0.AND.NOMCMD.EQ.'POST_ELEM') THEN
C
C     L'UTILISATEUR N'A PAS FOURNI DE NUMERO D'ORDRE :
C     RECUPERATION DU PREMIER NUMERO D'ORDRE DANS LA SD RESULTAT
C     ----------------------------------------------------------
          KNUM =   '&&'//NOMPRO//'.NUME_ORDRE'
          CALL GETVR8(' ','PRECISION',1,IARG,1,PREC,NP)
          CALL GETVTX(' ','CRITERE',1,IARG,1,CRIT,NC)
          CALL RSUTNU(RESULT,' ',0,KNUM,NBORDR,PREC,CRIT,IRET)
          CALL JEVEUO(KNUM,'L',JORDR)
          NUORD = ZI(JORDR)
C
C     RECUPERATION DU MODELE, MATERIAU, CARA_ELEM et EXCIT
C     POUR LE NUMERO d'ORDRE NUORD
C
          CALL RSLESD(RESULT,NUORD,MODELE,MATERI,CARA,EXCIT,IEXCIT)
C
C  VERIFICATION DE L'UNICITE DU MODELE DANS LE RESULTAT
C  SINON ON ARRETE EN ERREUR FATALE
C
          DO 99 IORDR=2,NBORDR
            NUORD = ZI(JORDR+IORDR-1)
            CALL RSLESD(RESULT,NUORD,MODNEW,MATERI,CARA,EXCIT,IEXCIT)
            IF(MODNEW.NE.MODELE) THEN
              CALL U2MESS('F','CALCULEL7_3')
            ENDIF
99        CONTINUE
        ELSE
          CALL RSLESD(RESULT,NUORD,MODELE,MATERI,CARA,EXCIT,IEXCIT)
        ENDIF
C
        IF ( MATERI .NE. BLAN8) THEN
          CALL RCMFMC (MATERI , MATE )
        ELSE
          MATE = ' '
        ENDIF
C
        IF(IEXCIT.EQ.0.AND.NOMCMD.EQ.'POST_ELEM') THEN
           KCHA=EXCIT(1:19)
        ENDIF
      ELSE

        CALL GETVID(' ','MODELE'    ,0,IARG,1,MODELE,N1)
        IF (N1.EQ.0) CALL U2MESS('F','CALCULEL6_84')

        CALL GETVID(' ','CARA_ELEM' ,0,IARG,1,CARA  ,N2)
        CALL DISMOI('F','EXI_RDM',MODELE,'MODELE',IBID,K8B,IE)
        IF ((N2.EQ.0).AND.(K8B(1:3).EQ.'OUI'))
     &      CALL U2MESS('A','CALCULEL3_39')


        CALL GETVID(' ','CHAM_MATER',0,IARG,1,MATERI,N3)
        CALL DISMOI('F','BESOIN_MATER',MODELE,'MODELE',IBID,K8B,IE)
        IF ((NOMCMD.NE.'CALC_MATR_ELEM').AND.
     &    (N3.EQ.0).AND.(K8B(1:3).EQ.'OUI'))
     &      CALL U2MESS('A','CALCULEL3_40')

        IF ( N3 .NE. 0 ) THEN
           CALL RCMFMC ( MATERI , MATE )
        ELSE
           MATE = ' '
        ENDIF
      ENDIF
C
C   TRAITEMENT DU CHARGEMENT
C
C   SI IEXCIT=1 ON PREND LE CHARGEMENT DONNE PAR L'UTILISATEUR
C
      IF(IEXCIT.EQ.1) THEN
        CALL GETVID(' ','CHARGE'    ,0,IARG,0,K8B   ,N4)
        NCHA = -N4
        CALL WKVECT( KCHA ,'V V K8',MAX(1,NCHA),ICHA)
        CALL GETVID(' ','CHARGE',0,IARG,NCHA,ZK8(ICHA),N4)
C
C     -- ON VERIFIE QUE LES CHARGES PORTENT TOUTES SUR LE MEME MODELE.
        IF (NCHA.GT.0) THEN
           CALL DISMOI('F','NOM_MODELE',ZK8(ICHA),'CHARGE',IBID,NOMO,IE)
           DO 10 I = 1,NCHA
             CALL DISMOI('F','NOM_MODELE',ZK8(ICHA-1+I),'CHARGE',IBID,
     &                                                         K8B,IE)
             IF (K8B.NE.NOMO) THEN
               IER = IER + 1
               CALL U2MESS('E','CALCULEL3_41')
             ENDIF
 10        CONTINUE
C
C        --- ON VERIFIE QUE LES CHARGES PORTENT SUR LE MODELE
C                               EVENTUELEMENT DONNE EN ARGUMENT ---
           IF (N1.NE.0 .AND. MODELE.NE.NOMO) THEN
             IER = IER + 1
             CALL U2MESS('E','CALCULEL3_42')
           ENDIF
C
C        --- VERIFICATION DU TYPE DE CHARGEMENT ---
           CALL DISMOI('F','TYPE_CHARGE',ZK8(ICHA),'CHARGE',IBID,CTYP
     &                ,IE)
           DO 20 I = 1,NCHA
             CALL DISMOI('F','TYPE_CHARGE',ZK8(ICHA-1+I),'CHARGE',IBID,
     &                  K8B,IE)
             IF ((K8B(1:4).NE.'MECA') .AND. (K8B(1:4).NE.'CIME').AND.
     &           (K8B(1:4).NE.'THER'). AND. (K8B(1:4).NE.'ACOU')) THEN
               IER = IER + 1
               CALL U2MESS('E','CALCULEL3_43')
             ENDIF
 20        CONTINUE
         ENDIF
      ELSE
C
C   SI IEXCIT=0 ON PREND LE CHARGEMENT DONNE PAR LA SD RESULTAT
C
        CALL JEVEUO(EXCIT//'.INFC','L',JINFC)
        NCHA=ZI(JINFC)
        CALL JEVEUO(EXCIT//'.LCHA','L',JLCHA)
        CALL JEDETR(KCHA)
        CALL WKVECT(KCHA,'V V K8',NCHA,ICHA)
        CALL DISMOI('C','PHENOMENE',MODELE,
     &        'MODELE',IBID,PHENOM,IERD)
        CTYP=PHENOM(1:4)
        IN=0
        DO 50 I=1,NCHA
           CALL JEEXIN(ZK24(JLCHA+I-1)(1:8)//'.TYPE',IE)
C          ON TESTE SI LA CHARGE EST NON VIDE
           IF(IE.NE.0) THEN
             CALL DISMOI('F','TYPE_CHARGE',ZK24(JLCHA+I-1)(1:8),
     &            'CHARGE',IBID,K8B,IE)
C          ON STOCKE LES CHARGES DONT LE TYPE CORRESPOND A CTYP
             IF(CTYP.EQ.K8B(1:4))THEN
                ZK8(ICHA+IN)=ZK24(JLCHA+I-1)(1:8)
                IN=IN+1
             ENDIF
           ENDIF
 50     CONTINUE
        NCHA=IN

C        ON VERIFIE QUE LES CHARGES RECUPEREES REPOSENT
C        TOUTES SUR LE MEME MODELE
         DO 60 I = 1,NCHA
            CALL DISMOI('F','NOM_MODELE',ZK8(ICHA+I-1),'CHARGE',
     &           IBID,NOMO,IE)
            IF(NOMO.NE.MODELE)CALL U2MESS('F','CALCULEL3_44')
 60      CONTINUE
      ENDIF
C
      IF (IER.NE.0) CALL U2MESS('F','CALCULEL3_45')
C
      CALL JEDEMA()
      END
