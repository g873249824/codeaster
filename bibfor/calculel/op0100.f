      SUBROUTINE OP0100()
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 07/01/2013   AUTEUR LADIER A.LADIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ======================================================================
C      OPERATEUR :     CALC_G
C
C      BUT:CALCUL DU TAUX DE RESTITUTION D'ENERGIE PAR LA METHODE THETA
C          CALCUL DES FACTEURS D'INTENSITE DE CONTRAINTES
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C TOLE CRP_20
C
      IMPLICIT NONE

      INCLUDE 'jeveux.h'
      INTEGER NBORD,IORD,IBID,I,IAD,JNORD,IVEC,IRET,ICHA,NBPARA
      INTEGER LNOFF,JINST,NDEG,IADNUM,NBROPT,IADRCO,IADRNO,J,IPULS,IORD0
      INTEGER IORD1,IORD2,NBORN,NBCO,IBOR,IG,LNOEU,LABSCU,NBVAL,NCHA
      INTEGER NDIMTE,IER,NDIM,JORDR,JOPT
      INTEGER NXPARA,IARG
      PARAMETER (NXPARA = 11)
C
      REAL*8  TIME,TIMEU,TIMEV,DIR(3),RINF,RSUP,MODULE,PULS
C
C
      CHARACTER*4  K4B
      CHARACTER*6  NOMPRO
      PARAMETER  ( NOMPRO = 'OP0100' )
      CHARACTER*8  MODELE,RESU,K8BID,CALSIG,RESUC2
      CHARACTER*8  NOMFIS,LITYPA(NXPARA),SYMECH,CONFIG
      CHARACTER*8  TABLE,NOMA,THETAI,NOEUD,TYPFIS,TYPFON
      CHARACTER*16 OPTION,TYPSD,LINOPA(NXPARA),CAS,TYPCO
      CHARACTER*16 OPTIO2,NOMCAS,K16BID
      CHARACTER*19 VCHAR,LISOPT,VECORD,GRLT
      CHARACTER*24 DEPLA,MATE,COMPOR,CHVITE,CHACCE
      CHARACTER*24 BASFON,FONOEU,LISS,TAILLR
      CHARACTER*24 CHFOND,BASLOC,THETA
      CHARACTER*24 NOMNO,COORN,MELORD
      CHARACTER*24 TRAV1,TRAV2,TRAV3,STOK4
      CHARACTER*24 TRAV4,COURB,DEPLA1,DEPLA2
      PARAMETER  ( RESUC2 = '&&MECALG' )
C
      LOGICAL EXITIM,THLAGR,CONNEX,GLAGR,MILIEU,DIREC
      LOGICAL THLAG2,PAIR,LNCAS,LMELAS,INCR,LMODA
C
C     ==============
C     1. PREALABLES
C     ==============
C
      CALL JEMARQ()
      CALL INFMAJ

      VCHAR = '&&'//NOMPRO//'.CHARGES'
      COURB = '&&'//NOMPRO//'.COURB'
      TRAV1 = '&&'//NOMPRO//'.TRAV1'
      TRAV2 = '&&'//NOMPRO//'.TRAV2'
      TRAV3 = '&&'//NOMPRO//'.TRAV3'
      TRAV4 = '&&'//NOMPRO//'.TRAV4'
      STOK4 = '&&'//NOMPRO//'.STOK4'
C
C     ========================================
C     2. LECTURE ET VERIFICATION DES OPERANDES
C     ========================================
C
C     CREATION DES OBJETS :
C     - RESU, MODELE, NDIM
C     - OPTION, CAS
C     - TYPFIS, NOMFIS
C     - FONOEU, CHFOND, BASFON, TAILLR
C     - CONFIG
C     - LNOFF
C     - LISS, NDEG
      CALL CGLECT(RESU,MODELE,NDIM,OPTION,CAS,TYPFIS,NOMFIS,
     &            FONOEU,CHFOND,BASFON,TAILLR,CONFIG,LNOFF,LISS,NDEG)

      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,NOMA,IRET)
      NOMNO = NOMA//'.NOMNOE'
      COORN = NOMA//'.COORDO    .VALE'
      CALL JEVEUO ( COORN, 'L', IADRCO )
C
C     RECUPERATION DU CONCEPT DE SORTIE : TABLE
      CALL GETRES(TABLE,K16BID,K16BID)
C
C     CREATION DU VECTEUR DES NUME_ORDRE
      VECORD = '&&OP0100.VECTORDR'
      CALL CGCRIO(RESU,VECORD)
      CALL JEVEUO(VECORD,'L',IVEC)
      CALL JELIRA(VECORD,'LONMAX',NBORD,K8BID)
C
C     MODE_MECA OU PAS
      LMODA = .FALSE.
      CALL GETTCO(RESU,TYPSD)
      IF (TYPSD.EQ.'MODE_MECA') THEN
        IF (OPTION.EQ.'CALC_K_G') THEN
          LMODA = .TRUE.
        ELSE
          CALL U2MESS('F','RUPTURE0_27')
        ENDIF
      ENDIF
C
C     PREMIER NUME_ORDRE
      IORD0 = ZI(IVEC)

C     APPEL A MEDOM1 POUR RECUPERE MODELE, MATE, CARA, NCHA, VCHA
      CALL MEDOM1(MODELE,MATE,K8BID,VCHAR,NCHA,K4B,RESU,IORD0)
      CALL JEVEUO(VCHAR//'.LCHA','L',ICHA)

C     RECUPERATION DE LA CARTE DE COMPORTEMENT UTILISEE DANS LE CALCUL
C     -> COMPOR, INCR
      CALL CGLECO(RESU,MODELE,IORD0,TYPFIS,COMPOR,INCR)

C     ATTENTION, INCR EST MAL GERE : VOIR MECAGL !!

C     LECTURE DES INFORMATIONS RELATIVES AUX MULT_ELAS
      MELORD = '&&OP100.MULTELAS.NOMCAS'
      CALL CGLEMU(RESU,VECORD,LMELAS,LNCAS,MELORD)
      IF (LNCAS) THEN
        CALL JEVEUO(MELORD,'L',JNORD)
      ELSE
        JNORD = 1
      ENDIF

C     LECTURE ET VERIFICATION RELATIVE AU MOT-CLE CALCUL_CONTRAINTE
      CALL CGLECC(TYPFIS,RESU,VECORD,CALSIG)

C      ---------------- DEBUT DU GROS PAQUET A EPURER ---------------

C     ON RECHERCHE LA PRESENCE DE SYMETRIE
      SYMECH='NON'
      CALL GETVTX ('THETA', 'SYME', 1,IARG,1, SYMECH,IBID)
      IF (TYPFIS.EQ.'FONDFISS') THEN
        CALL DISMOI('F','SYME',NOMFIS,'FOND_FISS',IBID,SYMECH,IER)
      ENDIF

C     LE MOT-CLE THETA EST RENSEIGNE : ON CREE L'OBJET THETA (K24)
      IF (TYPFIS.EQ.'THETA') THEN
        CALL GETTCO(NOMFIS,TYPCO)
        CALL ASSERT(TYPCO.EQ.'THETA_GEOM'.OR.TYPCO.EQ.'CHAM_NO_SDASTER')
        IF (TYPCO.EQ.'THETA_GEOM') THEN
          CALL RSEXCH('F',NOMFIS,'THETA',0,THETA,IER)
        ELSEIF (TYPCO.EQ.'CHAM_NO_SDASTER') THEN
          THETA=NOMFIS
        ENDIF
      ENDIF

C     LE MOT-CLE THETA N'EST PAS RENSEIGNE :
C     IL VA FALLOIR CALCULER UN SEUL CHAMP THETA (2D OU 3D_GLOBAL)
      IF (TYPFIS.NE.'THETA'.AND.CAS.NE.'3D_LOCAL') THEN

        THETA = TABLE//'_CHAM_THETA'

C       MOT-CLE A RECUPERER, INDEPENDAMMENT DE NDIM
        CALL GETVR8 ( 'THETA','DIRECTION',1,IARG,3,DIR,IRET)
        IF (NDIM.EQ.2) DIR(3)=0.D0
        IF (IRET.EQ.0) THEN
          DIREC=.FALSE.
C         A VIRER !!
          IF (TYPFIS.EQ.'FONDFISS'.AND.NDIM.EQ.2)
     &      CALL U2MESS('F','RUPTURE0_81')
        ELSEIF (IRET.LT.0) THEN
          CALL ASSERT(.FALSE.)
        ELSEIF (IRET.GT.0) THEN
          DIREC=.TRUE.
        ENDIF

C       THETA 2D (COURONNE)
        IF(NDIM.EQ.2)THEN
          CALL GVER2D(NOMA,1,'THETA',NOMNO,
     &                NOEUD,RINF,RSUP,MODULE)
          CALL GCOU2D('V',THETA,NOMA,NOMNO,NOEUD,ZR(IADRCO),RINF,
     &                RSUP,MODULE,DIREC,DIR)
C       THETA 3D
        ELSE IF(NDIM.EQ.3)THEN
          CALL JEVEUO(FONOEU, 'L', IADRNO )
          CALL GVERIG(NOMA,1,FONOEU,TAILLR,CONFIG,LNOFF,NOMNO,COORN,
     &                TRAV1,TRAV2,TRAV3,TRAV4)
          CALL GCOURO('V',THETA,NOMA,NOMNO,COORN,LNOFF,TRAV1,TRAV2,
     &                TRAV3,DIR,ZK8(IADRNO),NOMFIS,DIREC,STOK4)
        ENDIF
C
      ENDIF

C     BIDOUILLE POUR EVITER DE MODIFIER LES ARGUMENTS DE
C     GVERI3, GCOUR3, COUR2, MBILGL, CAKG3D, MMAXKL, CAKGMO, MECAGL
      IF (LISS.EQ.'LEGENDRE') THEN
        GLAGR =.FALSE.
        THLAGR=.FALSE.
        THLAG2=.FALSE.
      ELSEIF (LISS.EQ.'MIXTE') THEN
        GLAGR =.FALSE.
        THLAGR=.TRUE.
        THLAG2=.FALSE.
      ELSEIF (LISS.EQ.'LAGRANGE') THEN
        GLAGR =.TRUE.
        THLAGR=.TRUE.
        THLAG2=.FALSE.
      ELSEIF (LISS.EQ.'LAGRANGE_NO_NO') THEN
        GLAGR =.TRUE.
        THLAGR=.TRUE.
        THLAG2=.FALSE.
      ELSEIF (LISS.EQ.'LAGRANGE_REGU') THEN
        GLAGR =.FALSE.
        THLAGR=.FALSE.
        THLAG2=.TRUE.
      ENDIF
C
C     DETERMINATION AUTOMATIQUE DE THETA (CAS 3D LOCAL)
      IF (CAS.EQ.'3D_LOCAL'.AND.TYPFIS.EQ.'FISSURE') THEN

        CALL DISMOI('F','TYPE_FOND',NOMFIS,'FISS_XFEM',IBID,K16BID,IER)
C       ON A TOUJOURS
        CONNEX = .FALSE.
        THETAI = '&&THETA '
        GRLT = NOMFIS//'.GRLTNO'

        CALL GVERI3(CHFOND,TAILLR,CONFIG,LNOFF,THLAGR,THLAG2,NDEG,
     &              TRAV1,TRAV2,TRAV3)
        CALL GCOUR3(THETAI,NOMA,COORN,LNOFF,TRAV1,TRAV2,
     &              TRAV3,CHFOND,GRLT,THLAGR,THLAG2,
     &              BASFON,NDEG,MILIEU,PAIR,NDIMTE)

      ELSEIF (CAS.EQ.'3D_LOCAL'.AND.TYPFIS.EQ.'FONDFISS') THEN

C       A FAIRE : DISMOI POUR RECUP CONNEX ET METTRE DANS CGLECT
        CALL DISMOI('F','TYPE_FOND',NOMFIS,'FOND_FISS',IBID,TYPFON,IER)
        IF (TYPFON.EQ.'FERME') THEN
          CONNEX = .TRUE.
        ELSE
          CONNEX = .FALSE.
        ENDIF

        IF (LISS.EQ.'LEGENDRE'.OR.LISS.EQ.'MIXTE') THEN
          IF (CONNEX) CALL U2MESS('F','RUPTURE0_90')
        ENDIF

        THETAI = '&&THETA '

        CALL GVERI3(CHFOND,TAILLR,CONFIG,LNOFF,THLAGR,THLAG2,NDEG,
     &              TRAV1,TRAV2,TRAV3)
        CALL GCOUR2(THETAI,NOMA,MODELE,NOMNO,COORN,LNOFF,TRAV1,TRAV2,
     &              TRAV3,FONOEU,NOMFIS,CONNEX,STOK4,THLAGR,THLAG2,NDEG,
     &              MILIEU,NDIMTE,PAIR)

      ENDIF

C     MENAGE
      IF(NDIM.EQ.3)THEN
        CALL JEEXIN(TRAV1,IRET)
        IF (IRET.NE.0) CALL JEDETR(TRAV1)
        CALL JEEXIN(TRAV2,IRET)
        IF (IRET.NE.0) CALL JEDETR(TRAV2)
        CALL JEEXIN(TRAV3,IRET)
        IF (IRET.NE.0) CALL JEDETR(TRAV3)
        CALL JEEXIN(STOK4,IRET)
        IF (IRET.NE.0) CALL JEDETR(STOK4)
      ENDIF

C      ---------------- FIN DU GROS PAQUET A EPURER -----------------
C
C     =======================
C     3. CALCUL DE L'OPTION
C     =======================

C     CREATION DE LA TABLE
C
      CALL CGCRTB(TABLE,OPTION,LMELAS,CAS,TYPFIS,LMODA,
     &            NBPARA,LINOPA,LITYPA)
C
      IF (OPTION(1:6) .EQ.'G_BILI'.OR. OPTION(1:5) .EQ.'G_MAX') THEN

C       --------------------------------------------------------------
C       3.1. ==> CALCUL DE LA FORME BILINEAIRE DU TAUX DE RESTITUTION
C       --------------------------------------------------------------

        DO 3111 I = 1 , NBORD

          IORD1 = ZI(IVEC-1+I)
          CALL MEDOM1(MODELE,MATE,K8BID,VCHAR,NCHA,K4B,RESU,IORD1)
          CALL JEVEUO(VCHAR//'.LCHA','L',ICHA)
          CALL RSEXCH(' ',RESU,'DEPL',IORD1,DEPLA1,IRET)

          IF (LMELAS) THEN
            IF (LNCAS) THEN
              IF(.NOT.ZL(JNORD+I-1)) GOTO 3111
            ENDIF
            EXITIM = .FALSE.
            TIMEU=0.D0
            TIMEV=0.D0
            CALL RSADPA(RESU,'L',1,'NOM_CAS',IORD0,0,IAD,K8BID)
            NOMCAS=ZK16(IAD)
          ENDIF

          DO 3112 J = 1,I
            CALL JEMARQ()
            CALL JERECU('V')
            IF(NBORD.EQ.1)THEN
              IORD2  = IORD1
              DEPLA2 = DEPLA1
            ELSE
              IORD2 = ZI(IVEC-1+J)
              CALL RSEXCH('F',RESU,'DEPL',IORD2,DEPLA2,IRET)
            ENDIF

            IF(.NOT.LMELAS)THEN
              CALL RSADPA(RESU,'L',1,'INST',IORD1,0,JINST,K8BID)
              TIMEU = ZR(JINST)
              CALL RSADPA(RESU,'L',1,'INST',IORD2,0,JINST,K8BID)
              TIMEV = ZR(JINST)
              EXITIM = .TRUE.
            ENDIF

            OPTIO2 = 'G_BILI'
            IF (CAS.EQ.'3D_LOCAL') THEN
              CALL MBILGL(OPTIO2,TABLE,MODELE,DEPLA1,DEPLA2,THETAI,
     &                    MATE,NCHA,ZK8(ICHA),SYMECH,CHFOND,LNOFF,
     &                    NDEG,THLAGR,GLAGR,THLAG2,MILIEU,NDIMTE,
     &                    PAIR,EXITIM,TIMEU,TIMEV,I,J,NBPARA,LINOPA,
     &                    LMELAS,NOMCAS,FONOEU)
            ELSE
              CALL MEBILG(OPTIO2,TABLE,MODELE,DEPLA1,DEPLA2,THETA,
     &                    MATE,NCHA,ZK8(ICHA),SYMECH,EXITIM,TIMEU,
     &                    TIMEV,I,J,NBPARA,LINOPA)
            ENDIF

            CALL JEDEMA()

 3112     CONTINUE

 3111   CONTINUE
C
C
        IF (OPTION(1:5) .EQ.'G_MAX') THEN

C         ----------------------------------------------------
C         3.2. ==> MAXIMISATION DU G SOUS CONTRAINTES BORNES
C         ----------------------------------------------------

          CALL GETFAC ('BORNES', NBORN )
          IF (NBORN.NE.0) THEN
              NBCO = 2*NBORN
              CALL WKVECT('&&'//NOMPRO//'.COUPLES_BORNES','V V R8',
     &                   NBCO,IBOR)
              DO 3213 I=1, NBORN
                CALL GETVIS('BORNES','NUME_ORDRE',I,IARG,1,IORD0,IER)
                CALL GETVR8('BORNES','VALE_MIN',I,IARG,1,
     &                      ZR(IBOR+2*(IORD0-1)),IER)
                CALL GETVR8('BORNES','VALE_MAX',I,IARG,1,
     &                      ZR(IBOR+2*(IORD0-1)+1),IER)
 3213         CONTINUE

            IF (CAS.EQ.'3D_LOCAL') THEN
              CALL TBEXVE(TABLE,'G_BILI_LOCAL',
     &                    '&&'//NOMPRO//'.GBILIN','V',NBVAL,K8BID)
              CALL JEVEUO('&&'//NOMPRO//'.GBILIN','L',IG)
              CALL TBEXVE(TABLE,'NOEUD',
     &                    '&&'//NOMPRO//'.NOEUD','V',NBVAL,K8BID)
              CALL JEVEUO('&&'//NOMPRO//'.NOEUD','L',LNOEU)
              CALL TBEXVE(TABLE,'ABSC_CURV',
     &                    '&&'//NOMPRO//'.ABSCUR','V',NBVAL,K8BID)
              CALL JEVEUO('&&'//NOMPRO//'.ABSCUR','L',LABSCU)
C
              CALL DETRSD('TABLE',TABLE)
              CALL MMAXGL(NBCO,ZR(IBOR),ZR(IG),ZK8(LNOEU),
     &                    ZR(LABSCU),NBORD,LNOFF,TABLE)
            ELSE
              CALL TBEXVE(TABLE,'G_BILIN',
     &                    '&&'//NOMPRO//'.GBILIN','V',NBVAL,K8BID)
              CALL JEVEUO('&&'//NOMPRO//'.GBILIN','L',IG)
              CALL DETRSD('TABLE',TABLE)
              CALL MEMAXG(NBCO,ZR(IBOR),ZR(IG),NBORD,TABLE)
            ENDIF

          ELSE
            CALL U2MESK('F','RUPTURE0_92',1,OPTION)
          ENDIF
        ENDIF
C
C
      ELSE IF (CAS.EQ.'3D_LOCAL'.AND.OPTION.EQ.'CALC_K_G') THEN

C       -------------------------------
C       3.3. ==> CALCUL DE KG (3D LOC)
C       -------------------------------

        BASLOC=NOMFIS//'.BASLOC'
        CALL XCOURB(BASLOC,NOMA,MODELE,COURB)

        DO 33 I = 1,NBORD
          IORD = ZI(IVEC-1+I)

          CALL MEDOM1(MODELE,MATE,K8BID,VCHAR,NCHA,K4B,RESU,IORD)
          CALL JEVEUO(VCHAR//'.LCHA','L',ICHA)
          CALL RSEXCH('F',RESU,'DEPL',IORD,DEPLA,IRET)

          IF (LMELAS) THEN
            IF (LNCAS) THEN
              IF(.NOT.ZL(JNORD+I-1)) GOTO 33
            ENDIF
            EXITIM = .FALSE.
            TIME=0.D0
            CALL RSADPA(RESU,'L',1,'NOM_CAS',IORD,0,IAD,K8BID)
            NOMCAS=ZK16(IAD)
          ELSE IF (LMODA) THEN
            CALL RSADPA(RESU,'L',1,'OMEGA2',IORD,0,IPULS,K8BID)
            PULS = ZR(IPULS)
            PULS = SQRT(PULS)
            TIME = 0.D0
          ELSE
            CALL RSADPA(RESU,'L',1,'INST',IORD,0,JINST,K8BID)
            TIME  = ZR(JINST)
            EXITIM = .TRUE.
          ENDIF


          CALL CAKG3D(OPTION,TABLE,MODELE,DEPLA,THETAI,MATE,COMPOR,
     &                NCHA,ZK8(ICHA),SYMECH,CHFOND,LNOFF,BASLOC,COURB,
     &                IORD,NDEG,THLAGR,GLAGR,THLAG2,PAIR,NDIMTE,
     &                EXITIM,TIME,NBPARA,LINOPA,NOMFIS,
     &                LMELAS,NOMCAS,LMODA ,PULS  ,MILIEU,CONNEX)

   33   CONTINUE
C
C
      ELSE IF (OPTION .EQ.'CALC_K_MAX') THEN

C       ------------------------
C       3.3.2. ==>OPTION CALC_K_MAX
C       -----------------------

        BASLOC=NOMFIS//'.BASLOC'
        CALL XCOURB(BASLOC,NOMA,MODELE,COURB)

        CALL MMAXKL(TABLE,MODELE,THETAI,MATE,COMPOR,NCHA,SYMECH,
     &             CHFOND,LNOFF,BASLOC,COURB,NDEG,THLAGR,GLAGR,
     &             THLAG2,PAIR,NDIMTE,NBPARA,LINOPA,
     &             NOMFIS,NBORD,IVEC,VCHAR,RESU,
     &             LMELAS,LNCAS,ZL(JNORD),MILIEU,CONNEX)
C
C     -------------------------------
C     3.5. ==> CALCUL DE G, K_G (2D)
C     -------------------------------
C
      ELSE

        IF (INCR) THEN
          LISOPT = '&&OP0100.LISOPT'
          NBROPT = 2

          CALL WKVECT(LISOPT,'V V K16',NBROPT,JOPT)
          ZK16(JOPT) = 'VARI_ELNO'
          ZK16(JOPT+1) = 'EPSP_ELNO'

          CALL CCBCOP(RESU,RESUC2,VECORD,NBORD,LISOPT,NBROPT)
        ENDIF

        DO 35  I = 1 , NBORD
          CALL JEMARQ()
          CALL JERECU('V')
          IORD = ZI(IVEC-1+I)
C
          CALL MEDOM1(MODELE,MATE,K8BID,VCHAR,NCHA,K4B,RESU,IORD)
          CALL JEVEUO(VCHAR//'.LCHA','L',ICHA)
          CALL RSEXCH('F',RESU,'DEPL',IORD,DEPLA,IRET)
          CALL RSEXCH(' ',RESU,'VITE',IORD,CHVITE,IRET)
          IF(IRET.NE.0) THEN
            CHVITE = ' '
          ELSE
            CALL RSEXCH(' ',RESU,'ACCE',IORD,CHACCE,IRET)
          ENDIF
C
          IF (LMELAS) THEN
            IF (LNCAS) THEN
              IF(.NOT.ZL(JNORD+I-1)) GOTO 34
            ENDIF
            CALL RSADPA(RESU,'L',1,'NOM_CAS',IORD,0,IAD,K8BID)
            NOMCAS=ZK16(IAD)
            EXITIM = .FALSE.
            TIME = 0.D0
          ELSE IF (LMODA) THEN
            CALL RSADPA(RESU,'L',1,'OMEGA2',IORD,0,IPULS,K8BID)
            PULS = ZR(IPULS)
            PULS = SQRT(PULS)
            TIME = 0.D0
          ELSE
            CALL RSADPA(RESU,'L',1,'INST',IORD,0,JINST,K8BID)
            TIME  = ZR(JINST)
            EXITIM = .TRUE.
          ENDIF
C
          IF(    (OPTION(1:6).EQ.'CALC_G'.AND.CAS.EQ.'2D')
     &       .OR. OPTION.EQ.'CALC_G_GLOB') THEN
C
            CALL MECALG(OPTION,TABLE,MODELE,DEPLA,THETA,
     &                  MATE,NCHA,ZK8(ICHA),SYMECH,COMPOR,INCR,
     &                  TIME,IORD,NBPARA,LINOPA,CHVITE,
     &                  CHACCE,LMELAS,NOMCAS,CALSIG)
C
          ELSEIF(OPTION(1:6).EQ.'CALC_G'.AND.CAS.EQ.'3D_LOCAL')THEN
C
            CALL MECAGL(OPTION,TABLE,MODELE,DEPLA,THETAI,MATE,COMPOR,
     &                  NCHA,ZK8(ICHA),SYMECH,CHFOND,LNOFF,IORD,NDEG,
     &                  THLAGR,GLAGR,THLAG2,MILIEU,NDIMTE,PAIR,EXITIM,
     &                  TIME,NBPARA,LINOPA,CHVITE,CHACCE,LMELAS,
     &                  NOMCAS,CALSIG,FONOEU)
C
          ELSE IF (OPTION(1:6).EQ.'CALC_K'.AND.CAS.EQ.'2D') THEN
C
            CALL CAKG2D(OPTION,TABLE,MODELE,DEPLA,THETA,
     &                  MATE,NCHA,ZK8(ICHA),SYMECH,NOMFIS,
     &                  NOEUD,TIME,IORD,NBPARA,LINOPA,
     &                  LMELAS,NOMCAS,LMODA,PULS,COMPOR)
C
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF

 34       CONTINUE

          CALL JEDEMA()
 35     CONTINUE

        IF (INCR) THEN
          CALL JEEXIN(RESUC2//'           .ORDR',IRET)
          IF ( IRET.NE.0 ) THEN
            CALL JEVEUO(RESUC2//'           .ORDR','L',JORDR)
            CALL RSRUSD(RESUC2,ZI(JORDR))
            CALL DETRSD('RESULTAT',RESUC2)
          ENDIF

          CALL JEDETR('&&MECALCG.VECTORDR')
          CALL JEDETR('&&MECALG')
          CALL RSMENA(RESU)
        ENDIF

      ENDIF

      CALL TITRE

      CALL DETRSD('CARTE','&&NMDORC.COMPOR')

      CALL JEDEMA()

      END
