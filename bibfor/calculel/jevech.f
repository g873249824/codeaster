      SUBROUTINE JEVECH(NMPARZ,LOUEZ,ITAB)
      IMPLICIT NONE

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 04/01/2012   AUTEUR SELLENET N.SELLENET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE                            VABHHTS J.PELLET
C     ARGUMENTS:
C     ----------
      CHARACTER*(*) NMPARZ,LOUEZ
      CHARACTER*8 NOMPAR,NOMMAI
      INTEGER ITAB
C     -----------------------------------------------------------------
C     ENTREES:
C     NOMPAR  : NOM DU PARAMETRE DE L'OPTION
C     LOUEZ   : 'L' OU 'E'  ( LECTURE/ECRITURE )

C     SORTIES:
C     ITAB     : ADRESSE DU CHAMP LOCAL CORRESPONDANT A NOMPAR
C     -----------------------------------------------------------------
      CHARACTER*16 OPTION,NOMTE,NOMTM,PHENO,MODELI
      COMMON /CAKK01/OPTION,NOMTE,NOMTM,PHENO,MODELI
      CHARACTER*32 JEXNUM,JEXNOM

      INTEGER IACHLO,IADSGD,IAMLOC,IAOPDS,IAOPMO,IAOPNO,IAOPPA
      INTEGER ILCHLO,K,KK,DEBUGR
      INTEGER IEL,ILMLOC,ILOPMO,IAOPTT
      INTEGER ILOPNO,INDIK8,IPARG,LGCO,NPARIO,LGCATA
      INTEGER NPARIN,IACHII,IACHIK,IACHIX,IACHOI,IACHOK,JCELD,ADIEL
      INTEGER DEBGR2,LONCHL,DECAEL,IADZI,IAZK24,JRSVI,JCRSVI,I1
      INTEGER OPT,IAOPD2,IAOPLO,IAPARA,IPARA,NPARI2

      COMMON /CAII02/IAOPTT,LGCO,IAOPMO,ILOPMO,IAOPNO,ILOPNO,IAOPDS,
     &       IAOPPA,NPARIO,NPARIN,IAMLOC,ILMLOC,IADSGD
      INTEGER        NBGR,IGR,NBELGR,JCTEAT,LCTEAT,IAWLOC,IAWLO2,IAWTYP
      COMMON /CAII06/NBGR,IGR,NBELGR,JCTEAT,LCTEAT,IAWLOC,IAWLO2,IAWTYP
      COMMON /CAII08/IEL
      COMMON /CAII04/IACHII,IACHIK,IACHIX
      COMMON /CAII07/IACHOI,IACHOK
      INTEGER CAINDZ(512),CAPOIZ,ICH
      COMMON /CAII12/CAINDZ,CAPOIZ
      INTEGER EVFINI,CALVOI,JREPE,JPTVOI,JELVOI
      COMMON /CAII19/EVFINI,CALVOI,JREPE,JPTVOI,JELVOI

C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL,ETENDU
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*24 VALK(5)
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80

C ---------------- FIN COMMUNS NORMALISES  JEVEUX  --------------------

C DEB -----------------------------------------------------------------
      NOMPAR = NMPARZ

C     -- RECHERCHE DE LA CHAINE NOMPAR AVEC MEMOIRE SUR TOUT 'CALCUL'
      CAPOIZ = CAPOIZ + 1
      IF (CAPOIZ.GT.512) THEN
        IPARG = INDIK8(ZK8(IAOPPA),NOMPAR,1,NPARIO)
      ELSE
        IF (ZK8(IAOPPA-1+CAINDZ(CAPOIZ)).EQ.NOMPAR) THEN
          IPARG = CAINDZ(CAPOIZ)
        ELSE
          IPARG = INDIK8(ZK8(IAOPPA),NOMPAR,1,NPARIO)
          CAINDZ(CAPOIZ) = IPARG
        END IF
      END IF


      IF (IPARG.EQ.0) THEN
         VALK(1) = NOMPAR
         VALK(2) = OPTION
         CALL U2MESK('E','CALCULEL2_69', 2 ,VALK)
        CALL CONTEX(OPTION,' ')
      END IF

      IACHLO=ZI(IAWLOC-1+3*(IPARG-1)+1)
      ILCHLO=ZI(IAWLOC-1+3*(IPARG-1)+2)
      LGCATA=ZI(IAWLO2-1+5*(NBGR*(IPARG-1)+IGR-1)+2)
      DEBUGR=ZI(IAWLO2-1+5*(NBGR*(IPARG-1)+IGR-1)+5)

C     -- CALCUL DE JRSVI ET JCRSVI :
      JRSVI=0
      IF (EVFINI.EQ.1) THEN
        ICH=ZI(IAWLOC-1+3*(IPARG-1)+3)
        IF (IPARG.GT.NPARIN .AND. ICH.GT.0) THEN
          IF (ZK8(IACHOK-1+2*(ICH-1)+1).EQ.'RESL') THEN
            JRSVI=ZI(IACHOI-1+3*(ICH-1)+2)
            JCRSVI=ZI(IACHOI-1+3*(ICH-1)+3)
          ENDIF
        ENDIF
      ENDIF

      IF (LGCATA.EQ.-1) THEN
         VALK(1) = NOMPAR
         VALK(2) = OPTION
         VALK(3) = NOMTE
         CALL U2MESK('E','CALCULEL2_70', 3 ,VALK)
        CALL CONTEX(OPTION,NOMPAR)
      END IF


      IF (IACHLO.EQ.-1) THEN
C        ON AJOUTE CELA POUR EMETTRE UN MESSAGE PLUS CLAIR DANS
C        LE CAS OU IL MANQUE UN CHAMP LIE A UN PARAMETRE
         CALL JENONU(JEXNOM('&CATA.OP.NOMOPT',OPTION),OPT)
         CALL JEVEUO(JEXNUM('&CATA.OP.DESCOPT',OPT),'L',IAOPD2)
         CALL JEVEUO(JEXNUM('&CATA.OP.LOCALIS',OPT),'L',IAOPLO)
         CALL JEVEUO(JEXNUM('&CATA.OP.OPTPARA',OPT),'L',IAPARA)
         NPARI2 = ZI(IAOPD2-1+2)
         DO 20 IPARA = 1,NPARI2
           IF ( ZK8(IAPARA+IPARA-1).EQ.NOMPAR ) GOTO 30
  20     CONTINUE
         GOTO 40
  30     CONTINUE
         VALK(1) = OPTION
C        ON PEUT TROUVER D'OU VIENT LE PROBLEME DANS 3 CAS
         IF ( ZK24(IAOPLO+3*IPARA-3).EQ.'CARA' ) THEN
           CALL U2MESK('E','CALCULEL2_53', 1, VALK)
         ELSEIF ( ZK24(IAOPLO+3*IPARA-3).EQ.'CHMA' ) THEN
           CALL U2MESK('E','CALCULEL2_54', 1, VALK)
         ELSEIF ( ZK24(IAOPLO+3*IPARA-3).EQ.'MODL' ) THEN
           CALL U2MESK('E','CALCULEL2_55', 1, VALK)
         ENDIF
  40     CONTINUE
         VALK(1) = NOMPAR
         VALK(2) = OPTION
         VALK(3) = NOMTE
         CALL U2MESK('E','CALCULEL2_71', 3 ,VALK)
        CALL CONTEX(OPTION,NOMPAR)

      END IF
      CALL ASSERT(IACHLO.NE.-2)


C     -- CALCUL DE ITAB,LONCHL,DECAEL :
C     ---------------------------------
      CALL CHLOET(IPARG,ETENDU,JCELD)
      IF (ETENDU) THEN
        ADIEL = ZI(JCELD-1+ZI(JCELD-1+4+IGR)+4+4* (IEL-1)+4)
        DEBGR2 = ZI(JCELD-1+ZI(JCELD-1+4+IGR)+8)
        CALL ASSERT(LGCATA.EQ.ZI(JCELD-1+ZI(JCELD-1+4+IGR)+3))
        DECAEL = (ADIEL-DEBGR2)
        LONCHL = ZI(JCELD-1+ZI(JCELD-1+4+IGR)+4+4* (IEL-1)+3)
      ELSE
        IF (JRSVI.EQ.0) THEN
          DECAEL = (IEL-1)*LGCATA
          LONCHL = LGCATA
        ELSE
          I1 = ZI(JCRSVI-1+IGR)
          DECAEL = ZI(JRSVI-1+I1-1+IEL)
          LONCHL = ZI(JRSVI-1+I1-1+IEL+1) - DECAEL
          DECAEL = DECAEL -1
        ENDIF
      END IF
      ITAB = IACHLO+DEBUGR-1+DECAEL


C     -- POUR LES CHAMPS "IN" ON VERIFIE QUE L'EXTRACTION EST
C        COMPLETE SUR L'ELEMENT:
C     ----------------------------------------------------------
      IF (ILCHLO.NE.-1) THEN
        DO 10,K = 1,LONCHL
          IF (.NOT.ZL(ILCHLO+DEBUGR-1+DECAEL-1+K)) THEN
            CALL TECAEL(IADZI,IAZK24)
            NOMMAI=ZK24(IAZK24-1+3)
            VALK(1) = NOMPAR
            VALK(2) = OPTION
            VALK(3) = NOMTE
            VALK(4) = NOMMAI

C           -- POUR CERTAINS PARAMETRES "COURANTS" ON EMET
C              UN MESSAGE PLUS CLAIR :
            IF (NOMPAR.EQ.'PMATERC') THEN
              CALL U2MESK('F','CALCULEL2_74', 4 ,VALK)
            ELSEIF (NOMPAR.EQ.'PCACOQU') THEN
              CALL U2MESK('F','CALCULEL2_75', 4 ,VALK)
            ELSEIF (NOMPAR.EQ.'PCAGNPO') THEN
              CALL U2MESK('F','CALCULEL2_76', 4 ,VALK)
            ELSEIF (NOMPAR.EQ.'PCAORIE') THEN
              CALL U2MESK('F','CALCULEL2_77', 4 ,VALK)

            ELSE
              CALL U2MESK('E','CALCULEL2_73', 4 ,VALK)

              WRITE (6,*) 'ERREUR JEVECH ZL :',NOMPAR,
     &        (ZL(ILCHLO+DEBUGR-1+DECAEL-1+KK),KK=1,LONCHL)
              WRITE (6,*) 'MAILLE: ',ZK24(IAZK24-1+3)
              CALL CONTEX(OPTION,NOMPAR)
            END IF
          END IF
   10   CONTINUE
      END IF

      END
