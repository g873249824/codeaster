      SUBROUTINE ARLPND(MAIL  ,DIME  ,NOMARL,TYPMAI,NOMC  ,
     &                  NOM1  ,NOM2  ,POND  ,NORM  ,BTRC    ,
     &                  CINE1 ,CINE2 )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CALCULEL  DATE 13/10/2009   AUTEUR CAO B.CAO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_20
C RESPONSABLE MEUNIER S.MEUNIER
C
      IMPLICIT NONE
      INTEGER      DIME
      CHARACTER*16 TYPMAI
      CHARACTER*8  MAIL
      CHARACTER*8  NOMARL
      REAL*8       BTRC(2,*)
      CHARACTER*10 NOM1,NOM2,NOMC
      CHARACTER*10 NORM
      CHARACTER*8  CINE1,CINE2
      REAL*8       POND
C
C ----------------------------------------------------------------------
C
C ROUTINE ARLEQUIN
C
C PONDERATION DES MAILLES
C
C ----------------------------------------------------------------------
C
C
C IN  DIME   : DIMENSION DE L'ESPACE
C IN  MAIL   : NOM UTILISATEUR DU MAILLAGE
C IN  BTRC     : BOITE ENGLOBANT LA ZONE DE RECOUVREMENT
C IN  NOMARL : NOM DE LA SD PRINCIPALE ARLEQUIN
C IN  NOM1   : NOM DE LA SD DE STOCKAGE MAILLES GROUP_MA_1
C IN  NOM2   : NOM DE LA SD DE STOCKAGE MAILLES GROUP_MA_2
C IN  NOMC   : NOM DE LA SD POUR LE COLLAGE
C IN  NORM   : NOM DE LA SD POUR STOCKAGE DES NORMALES
C IN  TYPMAI : SD CONTENANT NOM DES TYPES ELEMENTS (&&CATA.NOMTM)
C IN  CINE1  : CINEMATIQUE DU PREMIER GROUPE DE MAILLE
C IN  CINE1  : CINEMATIQUE DU SECOND GROUPE DE MAILLE
C IN  POND   : VALEUR DE LA PONDERATION
C
C ON MODIFIE LE VECTEUR DE PONDERATION DES MAILLES NOMPOI
C
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      CHARACTER*32       JEXATR,JEXNUM
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      REAL*8        INTMAD,ARLGER
      CHARACTER*8   K8BID,TYPEMA,NOMMAI
      INTEGER       ARLGEI
      REAL*8        PRECBO,PRECFR
      INTEGER       NM1,NM2,NMS1,NMS2,NINT,NNT,NNO,NNI,NHINT
      INTEGER       IRET,LCOQUE
      INTEGER       NFACE,NARE,NUMMA1,IMA1,NUMMA2,IMA2
      INTEGER       PMAT0,PMAT1,PMAT2,LGNM0,JTMP1,JTMP2,IAUX,JAUX,
     &              KAUX,NAUX
      INTEGER       JCOOR,JCONX,JCUMU,JTYPM
      INTEGER       JGRMA1,JNOMAP,JNAPCU,JDIMB1,JPANB1
      INTEGER       JREC1,JREBD1,JREIP1
      INTEGER       JVPZR,JVPZI,JVPZL
      INTEGER       JGRMA2,JMAMI,JMAMCU,JDIMB2,JPANB2
      INTEGER       JREC2,JREBD2,JREIP2
      INTEGER       JDICO,JVPINT,JVPFS,JVPNO,JVPAS,JVPFA
      INTEGER       JDIME,JNORM,JCOLM,JPP,JPOIM,JTYPMM
      REAL*8        NBEVO(81),VLR
      INTEGER       IFM,NIV
      CHARACTER*16  NOMBO1,NOMBO2
      CHARACTER*24  NGRMA1,NGRMA2,NOMPOI,NOMCOL,NOMAPP
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('ARLEQUIN',IFM,NIV)
C
C --- INITIALISATIONS ET PARAMETRES
C
      NHINT  = ARLGEI(NOMARL,'NHINT ')
      PRECBO = ARLGER(NOMARL,'PRECBO')
      PRECFR = ARLGER(NOMARL,'PRECFR')
C
C --- LECTURE DONNEES TYPE DE MAILLE
C
      CALL JEVEUO(TYPMAI,'L',JTYPMM)
C
C --- LECTURE DONNEES COLLAGE
C
      NOMCOL = NOMC(1:10)//'.MAILLE'
      CALL JEVEUO(NOMCOL(1:24),'E',JCOLM)
C
C --- LECTURE DONNEES MAILLAGE
C
      CALL JEVEUO(MAIL(1:8)//'.COORDO    .VALE','L', JCOOR)
      CALL JEVEUO(MAIL(1:8)//'.CONNEX','L',JCONX)
      CALL JEVEUO(JEXATR(MAIL(1:8)//'.CONNEX','LONCUM'),'L',JCUMU)
      CALL JEVEUO(MAIL(1:8)//'.TYPMAIL','L',JTYPM)
      CALL JEVEUO(MAIL(1:8)//'.DIME','L',JDIME)
      NNT = ZI(JDIME)
C
C --- LECTURE DONNEES NORMALES
C
      CALL JEEXIN(NORM,IRET)
      IF (IRET.NE.0) THEN
        CALL JEVEUO(NORM,'L',JNORM)
      ELSE
        JNORM = JCOOR
      ENDIF
C
C --- LECTURE DONNEES GROUPE DE MAILLES
C
      NGRMA1 = NOM1(1:10)//'.GROUPEMA'
      NGRMA2 = NOM2(1:10)//'.GROUPEMA'
      CALL JEVEUO(NGRMA1,'L',JGRMA1)
      CALL JEVEUO(NGRMA2,'L',JGRMA2)
      CALL JELIRA(NGRMA1,'LONMAX',NM1,K8BID)
      CALL JELIRA(NGRMA2,'LONMAX',NM2,K8BID)
C
C --- LECTURE DONNEES BOITES APPARIEMENT
C
      NOMBO1 = NOM1(1:10)//'.BOITE'
      NOMBO2 = NOM2(1:10)//'.BOITE'
      CALL JEVEUO(NOMBO1(1:16)//'.DIME','L',JDIMB1)
      CALL JEVEUO(NOMBO1(1:16)//'.PAN','L',JPANB1)
      CALL JEVEUO(NOMBO2(1:16)//'.DIME','L',JDIMB2)
      CALL JEVEUO(NOMBO2(1:16)//'.PAN','L',JPANB2)
C
C --- LECTURE GRAPHE APPARIEMENT
C
      NOMAPP = NOMARL(1:8)//'.GRAPH'
      CALL JEVEUO(JEXATR(NOMAPP,'LONCUM'),'L',JNAPCU)
      CALL JEVEUO(NOMAPP,'L',JNOMAP)
      CALL JELIRA(NOMAPP,'LONT',NAUX,K8BID)
C
C --- LECTURE VECTEUR PONDERATION MAILLES
C
      CALL JEVEUO(NOMARL(1:8)//'.POIDS','L',JPP)
      NOMPOI = ZK24(JPP)
      CALL JEVEUO(NOMPOI,'E',JPOIM)
C
C --- VECTEURS DE TRAVAIL
C
      CALL WKVECT('&&ARLPND.MAMINV','V V I',NAUX,JMAMI)
      CALL WKVECT('&&ARLPND.MAMINV.LONCUM','V V I',NM2+1,JMAMCU)
      CALL WKVECT('&&ARLPND.TMP1','V V I',NM1+1,JTMP1)
      CALL WKVECT('&&ARLPND.TMP2','V V I',NM2+1,JTMP2)
      CALL WKVECT('&&ARLPND.DICO','V V I',NNT,JDICO)

C
C --- 1.1 POINTEURS DU GRAPHE D'APPARIEMENT INVERSE
C
      PMAT1 = ZI(JNAPCU)
      DO 20 NUMMA1 = 1, NM1
        PMAT0 = PMAT1
        PMAT1 = ZI(JNAPCU+NUMMA1)
        DO 21 IAUX = PMAT0, PMAT1-1
          NUMMA2 = ZI(JNOMAP-1+IAUX)
          IF (NUMMA2.NE.0) ZI(JMAMCU+NUMMA2) = ZI(JMAMCU+NUMMA2) + 1
 21     CONTINUE
 20   CONTINUE
C
      PMAT2 = 1
      ZI(JMAMCU) = 1
      ZI(JTMP2) = 1

      DO 30 NUMMA2 = 1, NM2
        PMAT2 = PMAT2 + ZI(JMAMCU+NUMMA2)
        ZI(JMAMCU+NUMMA2) = PMAT2
        ZI(JTMP2+NUMMA2) = PMAT2
 30   CONTINUE
C
C --- 1.2. SOMMETS DU GRAPHE DU GRAPHE D'APPARIEMENT INVERSE
C
      PMAT1 = ZI(JNAPCU)
      DO 40 NUMMA1 = 1, NM1
        PMAT0 = PMAT1
        PMAT1 = ZI(JNAPCU+NUMMA1)
        DO 41 IAUX = PMAT0, PMAT1-1
          NUMMA2 = ZI(JNOMAP-1+IAUX)
          IF (NUMMA2.EQ.0) GOTO 40
          PMAT2 = ZI(JTMP2-1+NUMMA2)
          ZI(JMAMI-1+PMAT2) = NUMMA1
          ZI(JTMP2-1+NUMMA2) = PMAT2 + 1
 41     CONTINUE
 40   CONTINUE
C
C --- 2.1. RECONSTITUTION DE LA ZONE DE SUPERPOSITION
C
      CALL ARLSUP(DIME  ,PRECBO,NOM1,BTRC,ZL(JCOLM))
      CALL ARLSUP(DIME  ,PRECBO,NOM2,BTRC,ZL(JCOLM))
C
C --- 2.2. GROUPES DE MAILLES TOUCHANT LA ZONE DE SUPERPOSITION
C
      NMS1 = 0
      NMS2 = 0

      DO 60 IAUX = 1, NM1
        IF (ZL(JCOLM-1+ZI(JGRMA1-1+IAUX))) NMS1 = NMS1 + 1
 60   CONTINUE

      DO 70 IAUX = 1, NM2
        IF (ZL(JCOLM-1+ZI(JGRMA2-1+IAUX))) NMS2 = NMS2 + 1
 70   CONTINUE

      IF ((NMS1.EQ.0).OR.(NMS2.EQ.0)) THEN
        CALL U2MESS('F','ARLEQUIN_14')
      ENDIF

      CALL WKVECT('&&ARLPND.RECOUVRE.1','V V I',NMS1,JREC1)
      CALL WKVECT('&&ARLPND.RECOUVRE.2','V V I',NMS2,JREC2)
C
      PMAT0 = JTMP1
      LGNM0 = JREC1
      DO 80 IAUX = 1, NM1
        IMA1 = ZI(JGRMA1-1+IAUX)
        IF (.NOT.ZL(JCOLM-1+IMA1)) GOTO 80
        ZR(JPOIM+IMA1-1) = POND
        ZI(PMAT0) = IMA1
        ZI(LGNM0) = IAUX
        PMAT0 = PMAT0 + 1
        LGNM0 = LGNM0 + 1
 80   CONTINUE
C
      PMAT0 = JTMP2
      LGNM0 = JREC2
      DO 90 IAUX = 1, NM2
        IMA2 = ZI(JGRMA2-1+IAUX)
        IF (.NOT.ZL(JCOLM-1+IMA2)) GOTO 90
        ZR(JPOIM+IMA2-1) = 1.D0 - POND
        ZI(PMAT0) = IMA2
        ZI(LGNM0) = IAUX
        PMAT0 = PMAT0 + 1
        LGNM0 = LGNM0 + 1
 90   CONTINUE
C
C --- 2.3. ELEMENTS BORDANT LA ZONE DE SUPERPOSITION
C
      CALL ELBORD(MAIL  ,CINE1 ,ZI(JTMP1),NMS1,ZK8(JTYPMM),
     &            'V','&&ARLPND.RECOUVRE.1')
      CALL ELBORD(MAIL  ,CINE2 ,ZI(JTMP2),NMS2,ZK8(JTYPMM),
     &            'V','&&ARLPND.RECOUVRE.2')

      CALL JEVEUO('&&ARLPND.RECOUVRE.1.BORD','L',JREBD1)
      CALL JELIRA('&&ARLPND.RECOUVRE.1.BORD','LONMAX',NMS1,K8BID)
      CALL JEVEUO('&&ARLPND.RECOUVRE.1.IPAN','L',JREIP1)
      CALL JEVEUO('&&ARLPND.RECOUVRE.2.BORD','L',JREBD2)
      CALL JELIRA('&&ARLPND.RECOUVRE.2.BORD','LONMAX',NMS2,K8BID)
      CALL JEVEUO('&&ARLPND.RECOUVRE.2.IPAN','L',JREIP2)
C
C --- 2.4.1. POINTEURS DANS STRUCTURE .1.IPAN
C
      LGNM0 = 1
      PMAT0 = JREIP1
      ZI(JTMP1) = 1
      NUMMA1 = ZI(JREC1-1+ZI(PMAT0))
      ZI(PMAT0) = NUMMA1

      DO 100 IAUX = 1, NM1

 110    CONTINUE
        IF (NUMMA1.EQ.IAUX) THEN
          LGNM0 = LGNM0 + 1
          PMAT0 = PMAT0 + 2
          NUMMA1 = ZI(PMAT0)
          IF (NUMMA1.EQ.0) GOTO 110
          NUMMA1 = ZI(JREC1-1+NUMMA1)
          ZI(PMAT0) = NUMMA1
          GOTO 110
        ENDIF

        ZI(JTMP1+IAUX) = LGNM0

 100  CONTINUE

C --- 2.4.2. POINTEURS DANS STRUCTURE .2.IPAN

      LGNM0 = 1
      PMAT0 = JREIP2
      ZI(JTMP2) = 1
      NUMMA2 = ZI(JREC2-1+ZI(PMAT0))
      ZI(PMAT0) = NUMMA2

      DO 120 IAUX = 1, NM2

 130    CONTINUE
        IF (NUMMA2.EQ.IAUX) THEN
          LGNM0 = LGNM0 + 1
          PMAT0 = PMAT0 + 2
          NUMMA2 = ZI(PMAT0)
          IF (NUMMA2.EQ.0) GOTO 130
          NUMMA2 = ZI(JREC2-1+NUMMA2)
          ZI(PMAT0) = NUMMA2
          GOTO 130
        ENDIF

        ZI(JTMP2+IAUX) = LGNM0

 120  CONTINUE

C --- 3.1. DIMENSIONNEMENT POUR INTERSECTION MAILLE / DOMAINE

      NINT = 0

C --- 3.1.1. DIMENSIONNEMENT POUR MAILLE 1 / DOMAINE 2

      DO 140 IAUX = 1, NMS1

        NAUX = 0
        NUMMA1 = ZI(JREC1-1+ZI(JREBD1-1+IAUX))

        PMAT0 = ZI(JNAPCU-1+NUMMA1)
        PMAT1 = ZI(JNAPCU+NUMMA1)-1

        DO 150 JAUX = PMAT0, PMAT1
          NUMMA2 = ZI(JNOMAP-1+JAUX)
          IF (NUMMA2.NE.0) NAUX = NAUX + ZI(JTMP2+NUMMA2)
     &                            -ZI(JTMP2-1+NUMMA2)
 150    CONTINUE

        IF (NAUX.GT.NINT) NINT = NAUX

 140  CONTINUE

C --- 3.1.2 DIMENSIONNEMENT POUR MAILLE 2 / DOMAINE 1

      DO 160 IAUX = 1, NMS2

        NAUX = 0
        NUMMA2 = ZI(JREC2-1+ZI(JREBD2-1+IAUX))

        PMAT0 = ZI(JMAMCU-1+NUMMA2)
        PMAT1 = ZI(JMAMCU+NUMMA2)-1

        DO 170 JAUX = PMAT0, PMAT1
          NUMMA1 = ZI(JMAMI-1+JAUX)
          NAUX = NAUX + ZI(JTMP1+NUMMA1) 
     &          - ZI(JTMP1-1+NUMMA1)
 170    CONTINUE

        IF (NAUX.GT.NINT) NINT = NAUX

 160  CONTINUE

C --- 3.2 ALLOCATIONS

      NINT = 4*NINT + 4
      NAUX    = NHINT*NHINT
      IAUX   = NINT + 6
      JAUX    = NHINT + 1

      CALL WKVECT('&&ARLPND.INT','V V I',2*NINT,JVPINT)
      CALL WKVECT('&&ARLPND.FS','V V I',10*NINT,JVPFS)
      CALL WKVECT('&&ARLPND.NO','V V R',18*NINT+9,JVPNO)
      CALL WKVECT('&&ARLPND.AS','V V I',28*NINT+12,JVPAS)
      CALL WKVECT('&&ARLPND.FA','V V I',5*NINT,JVPFA)

      CALL WKVECT('&&ARLPND.ZR','V V R',35*NINT*NAUX+66*NAUX
     &           +18*JAUX,JVPZR)
      CALL WKVECT('&&ARLPND.ZI','V V I',IAUX*(50*NAUX+22*JAUX)
     &           +162*NINT*NAUX,JVPZI)
      CALL WKVECT('&&ARLPND.ZL','V V L',2*IAUX*NAUX,JVPZL)

C --- 4.1. INTERSECTION MAILLES 1 / DOMAINE 2

      DO 180 IAUX = 1, NMS1

        NUMMA1 = ZI(JREC1-1+ZI(JREBD1-1+IAUX))
        IMA1   = ZI(JGRMA1-1+NUMMA1)
        TYPEMA = ZK8(JTYPMM-1+ZI(JTYPM-1+IMA1))
        CALL JENUNO(JEXNUM(MAIL(1:8)//'.NOMMAI',IMA1),NOMMAI)
        CALL TMACOQ(TYPEMA,DIME,LCOQUE)
        CALL CONOEU(IMA1,ZI(JCONX),ZI(JCUMU),ZR(JCOOR),ZR(JNORM),
     &              DIME,LCOQUE,NBEVO,NNO)

C ----- 4.1.1. LISTE DES FACES BORDANT DOMAINE 2

        NFACE = 0
        LGNM0 = JVPINT
        PMAT0 = ZI(JNAPCU-1+NUMMA1)
        PMAT1 = ZI(JNAPCU+NUMMA1)-1

        DO 190 JAUX = PMAT0, PMAT1

          NUMMA2 = ZI(JNOMAP-1+JAUX)
          IF (NUMMA2.EQ.0) GOTO 180

          PMAT2 = ZI(JTMP2-1+NUMMA2)
          NAUX = ZI(JTMP2+NUMMA2) - PMAT2
          NFACE = NFACE + NAUX

          PMAT2 = JREIP2 + 2*(PMAT2-1)

          DO 190 KAUX = 1, NAUX

            ZI(LGNM0) = ZI(PMAT2)
            ZI(LGNM0+1) = ZI(PMAT2+1)
            LGNM0 = LGNM0 + 2
            PMAT2 = PMAT2 + 2

 190    CONTINUE

        IF (NFACE.EQ.0) GOTO 180

C ----- 4.1.2. NOEUDS, ARETES ET FACES DE LA FRONTIERE DU DOMAINE 2

        DO 200 JAUX = 1, NNT
          ZI(JDICO-1+JAUX) = 0
 200    CONTINUE

        IF (DIME.EQ.2) THEN
          CALL NAFINT(ZI(JVPINT),NFACE,ZI(JGRMA2),ZI(JDIMB2),ZR(JPANB2),
     &                DIME  ,CINE2 ,ZI(JTYPM)  ,ZR(JCOOR),ZR(JNORM),
     &                ZI(JCONX),ZI(JCUMU),ZK8(JTYPMM),
     &                ZI(JDICO),ZR(JVPNO),
     &                PRECFR,NNI   ,ZI(JVPAS))
          NARE = NFACE
        ELSE
          CALL NAFINT(ZI(JVPINT),NFACE,ZI(JGRMA2),ZI(JDIMB2),ZR(JPANB2),
     &                DIME  ,CINE2 ,ZI(JTYPM)  ,ZR(JCOOR),ZR(JNORM),
     &                ZI(JCONX),ZI(JCUMU),ZK8(JTYPMM),
     &                ZI(JDICO),ZR(JVPNO),
     &                PRECFR,NNI   ,ZI(JVPFS))
          CALL ARFACE(ZI(JVPFS),NFACE,ZI(JVPAS),ZI(JVPFA),NARE)
        ENDIF

C ----- 4.1.3 RATIO VOLUME DANS ZONE DE RECOUVREMENT / VOLUME MAILLE

C --- (PROVISOIRE) CORRECTION A FAIRE DANS ALGORITHME 3D D'INTERSECTION
        IF (DIME.EQ.2) THEN
C --- (PROVISOIRE) CORRECTION A FAIRE DANS ALGORITHME 3D D'INTERSECTION

          PMAT0 = JPANB1+(DIME+2)*(ZI(JDIMB1+2*NUMMA1)-1)
          VLR  = INTMAD(DIME  ,NOMARL,
     &                NOMMAI,TYPEMA,NBEVO    ,NNO   ,ZR(PMAT0),
     &                ZR(JVPNO),NNI   ,ZI(JVPAS),NARE  ,ZI(JVPFS),
     &                ZI(JVPFA),NFACE ,ZR(JVPZR),ZI(JVPZI),ZL(JVPZL))
          ZR(JPOIM+IMA1-1) = 1.D0 - (1.D0 - POND)*VLR

C --- (PROVISOIRE) CORRECTION A FAIRE DANS ALGORITHME 3D D'INTERSECTION
        ENDIF
C --- (PROVISOIRE) CORRECTION A FAIRE DANS ALGORITHME 3D D'INTERSECTION

 180  CONTINUE

C --- 4.2. INTERSECTION MAILLES 2 / DOMAINE 1

      DO 210 IAUX = 1, NMS2

        NUMMA2 = ZI(JREC2-1+ZI(JREBD2-1+IAUX))
        IMA2   = ZI(JGRMA2-1+NUMMA2)
        TYPEMA = ZK8(JTYPMM-1+ZI(JTYPM-1+IMA2))
        CALL JENUNO(JEXNUM(MAIL(1:8)//'.NOMMAI',IMA2),NOMMAI)
        CALL TMACOQ(TYPEMA,DIME,LCOQUE)
        CALL CONOEU(IMA2,ZI(JCONX),ZI(JCUMU),ZR(JCOOR),ZR(JNORM),
     &              DIME,LCOQUE,NBEVO,NNO)

C ----- 4.2.1. LISTE DES FACES BORDANT DOMAINE 1

        NFACE = 0
        LGNM0 = JVPINT
        PMAT0 = ZI(JMAMCU-1+NUMMA2)
        PMAT1 = ZI(JMAMCU+NUMMA2)-1

        DO 220 JAUX = PMAT0, PMAT1
          NUMMA1 = ZI(JMAMI-1+JAUX)
          PMAT2 = ZI(JTMP1-1+NUMMA1)
          NAUX = ZI(JTMP1+NUMMA1) - PMAT2
          NFACE = NFACE + NAUX
          PMAT2 = JREIP1 + 2*(PMAT2-1)
          DO 221 KAUX = 1, NAUX
            ZI(LGNM0) = ZI(PMAT2)
            ZI(LGNM0+1) = ZI(PMAT2+1)
            LGNM0 = LGNM0 + 2
            PMAT2 = PMAT2 + 2
 221      CONTINUE
 220    CONTINUE

        IF (NFACE.EQ.0) GOTO 210

C ----- 4.2.2. NOEUDS, ARETES ET FACES DE LA FRONTIERE DU DOMAINE 1

        DO 230 JAUX = 1, NNT
          ZI(JDICO-1+JAUX) = 0
 230    CONTINUE

        IF (DIME.EQ.2) THEN
          CALL NAFINT(ZI(JVPINT),NFACE,ZI(JGRMA1),ZI(JDIMB1),ZR(JPANB1),
     &                DIME  ,CINE1 ,ZI(JTYPM)  ,ZR(JCOOR),ZR(JNORM),
     &                ZI(JCONX),ZI(JCUMU),ZK8(JTYPMM),
     &                ZI(JDICO),ZR(JVPNO),
     &                PRECFR,NNI   ,ZI(JVPAS))
          NARE = NFACE
        ELSE
          CALL NAFINT(ZI(JVPINT),NFACE,ZI(JGRMA1),ZI(JDIMB1),ZR(JPANB1),
     &                DIME  ,CINE1 ,ZI(JTYPM)  ,ZR(JCOOR),ZR(JNORM),
     &                ZI(JCONX),ZI(JCUMU),ZK8(JTYPMM),
     &                ZI(JDICO),ZR(JVPNO),
     &                PRECFR,NNI   ,ZI(JVPFS))
          CALL ARFACE(ZI(JVPFS),NFACE,ZI(JVPAS),ZI(JVPFA),NARE)
        ENDIF

C ----- 4.2.3 RATIO VOLUME DANS ZONE DE RECOUVREMENT / VOLUME MAILLE

C --- (PROVISOIRE) CORRECTION A FAIRE DANS ALGORITHME 3D D'INTERSECTION
        IF (DIME.EQ.2) THEN
C --- (PROVISOIRE) CORRECTION A FAIRE DANS ALGORITHME 3D D'INTERSECTION

          PMAT0 = JPANB2+(DIME+2)*(ZI(JDIMB2+2*NUMMA2)-1)
          VLR  = INTMAD(DIME  ,NOMARL,
     &                NOMMAI,TYPEMA,NBEVO    ,NNO   ,ZR(PMAT0),
     &                ZR(JVPNO),NNI   ,ZI(JVPAS),NARE  ,ZI(JVPFS),
     &                ZI(JVPFA),NFACE ,ZR(JVPZR),ZI(JVPZI),ZL(JVPZL))
          ZR(JPOIM+IMA2-1) = 1.D0 - POND*VLR

C --- (PROVISOIRE) CORRECTION A FAIRE DANS ALGORITHME 3D D'INTERSECTION
        ENDIF
C --- (PROVISOIRE) CORRECTION A FAIRE DANS ALGORITHME 3D D'INTERSECTION

 210  CONTINUE

C
C --- NETTOYAGE DU GRAPHE APPARIEMENT
C
      CALL ARLDSD('GRAPHE',NOMAPP)

      CALL JEDETR('&&ARLPND.MAMINV')
      CALL JEDETR('&&ARLPND.MAMINV.LONCUM')
      CALL JEDETR('&&ARLPND.TMP1')
      CALL JEDETR('&&ARLPND.TMP2')
      CALL JEDETR('&&ARLPND.DICO')

      CALL JEDETR('&&ARLPND.RECOUVRE.1')
      CALL JEDETR('&&ARLPND.RECOUVRE.1.BORD')
      CALL JEDETR('&&ARLPND.RECOUVRE.1.IPAN')

      CALL JEDETR('&&ARLPND.RECOUVRE.2')
      CALL JEDETR('&&ARLPND.RECOUVRE.2.BORD')
      CALL JEDETR('&&ARLPND.RECOUVRE.2.IPAN')

      CALL JEDETR('&&ARLPND.INT')
      CALL JEDETR('&&ARLPND.FS')
      CALL JEDETR('&&ARLPND.NO')
      CALL JEDETR('&&ARLPND.AS')
      CALL JEDETR('&&ARLPND.FA')

      CALL JEDETR('&&ARLPND.ZR')
      CALL JEDETR('&&ARLPND.ZI')
      CALL JEDETR('&&ARLPND.ZL')

      CALL JEDEMA()

      END
