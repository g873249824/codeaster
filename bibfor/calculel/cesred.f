      SUBROUTINE CESRED(CES1Z,NBMA,LIMA,NBCMP,LICMP,BASE,CES2Z)
C MODIF CALCULEL  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PELLET J.PELLET
C A_UTIL
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*(*) CES1Z,CES2Z,BASE
      INTEGER NBMA,NBCMP,LIMA(NBMA)
      CHARACTER*(*) LICMP(NBCMP)
C ------------------------------------------------------------------
C BUT: REDUIRE UN CHAM_ELEM_S SUR UN ENSEMBLE DE MAILLES
C      ET DE COMPOSANTES
C ------------------------------------------------------------------
C     ARGUMENTS:
C CES1Z   IN/JXIN  K19 : SD CHAM_ELEM_S A REDUIRE
C CES2Z   IN/JXOUT K19 : SD CHAM_ELEM_S REDUITE
C BASE    IN       K1  : BASE DE CREATION POUR CES2Z : G/V/L
C NBMA    IN        I   : NOMBRE DE MAILLES DE LIMA
C                         SI NBMA=0 : ON NE REDUIT PAS SUR LES MAILLES
C LIMA    IN        L_I : LISTE DES NUMEROS DE MAILLES SUR LESQUELLES
C                         ON VEUT REDUIRE LE CHAM_ELEM_S
C NBCMP   IN        I   : NOMBRE DE CMPS DE LICMP
C                         SI NBCMP=0 : ON NE REDUIT PAS SUR LES CMPS
C LICMP   IN        L_K8: LISTE DES NOMS DES CMPS SUR LESQUELLES
C                         ON VEUT REDUIRE LE CHAM_ELEM_S
C         SI NBCMP > 0 LES CMP DU CHAM_ELEM_S REDUIT SONT DANS L'ORDRE
C         DE LICMP. SINON ELLES SONT DANS L'ORDRE DE CES1Z

C REMARQUES :
C  - POUR REDUIRE SUR LES MAILLES (ET GARDER TOUTES LES CMPS)
C        NBCMP=0 LICMP= KBID
C  - POUR REDUIRE SUR LES CMPS (ET GARDER TOUTES LES MAILLES)
C        NBMA=0 LIMA= IBID
C  - SI NBCMP=0 ET NBMA=0 : CES2Z=CES1Z

C  - ON PEUT APPELER CETTE ROUTINE AVEC CES2Z=CES1Z
C    LA SD INITIALE (CES1Z) EST ALORS PERDUE.

C-----------------------------------------------------------------------

C     ------------------------------------------------------------------
      INTEGER JCE1K,JCE1D,JCE1V,JCE1L,JCE1C,NBMAM,NCMP2,JEXMA,KMA,ICMP2
      INTEGER JCE2D,JCE2V,JCE2L,JCE2C,JNBPT,JNBSP,JNBCMP,NBPT,NBSP,IPT
      INTEGER IBID,ISP,IAD1,IAD2
      INTEGER NCMPMX,NCMP1,ICMP1
      INTEGER IMA,KNINDI
      CHARACTER*8 MA,NOMGD,NOCMP,TYPCES,KBID
      CHARACTER*3 TSCA
      CHARACTER*19 CES1,CES2
C     ------------------------------------------------------------------
      CALL JEMARQ()


      CES1 = CES1Z
      CES2 = CES2Z

C     -- POUR NE PAS ECRASER LA SOURCE SI CES2=CES1 :
      IF (CES2.EQ.CES1) THEN
        CALL COPISD('CHAM_ELEM_S','V',CES1,'&&CESRED.CES1')
        CES1 = '&&CESRED.CES1'
      END IF



C     1- RECUPERATION D'INFORMATIONS DANS CES1 :
C     ------------------------------------------
      CALL JEVEUO(CES1//'.CESK','L',JCE1K)
      CALL JEVEUO(CES1//'.CESD','L',JCE1D)
      CALL JEVEUO(CES1//'.CESC','L',JCE1C)
      CALL JEVEUO(CES1//'.CESV','L',JCE1V)
      CALL JEVEUO(CES1//'.CESL','L',JCE1L)

      MA = ZK8(JCE1K-1+1)
      NOMGD = ZK8(JCE1K-1+2)
      TYPCES = ZK8(JCE1K-1+3)
      NBMAM = ZI(JCE1D-1+1)
      NCMP1 = ZI(JCE1D-1+2)

      CALL DISMOI('F','TYPE_SCA',NOMGD,'GRANDEUR',IBID,TSCA,IBID)
      CALL DISMOI('F','NB_CMP_MAX',NOMGD,'GRANDEUR',NCMPMX,KBID,IBID)

      CALL ASSERT(NBCMP.GE.0)
      IF (NBCMP.GT.0) THEN
        NCMP2 = NBCMP
      ELSE
        NCMP2 = NCMP1
      END IF


C     2- CREATION DE 3 OBJETS CONTENANT LES NOMBRES DE POINTS,
C         SOUS-POINTS ET CMPS POUR CHAQUE MAILLE :
C     -----------------------------------------------------------
      CALL WKVECT('&&CESRED.NBPT','V V I',NBMAM,JNBPT)
      CALL WKVECT('&&CESRED.NBSP','V V I',NBMAM,JNBSP)
      CALL WKVECT('&&CESRED.NBCMP','V V I',NBMAM,JNBCMP)

      IF (NBMA.NE.0) THEN
        DO 10,KMA = 1,NBMA
          ZI(JNBPT-1+LIMA(KMA))=ZI(JCE1D-1+5+4*(LIMA(KMA)-1)+1)
          ZI(JNBSP-1+LIMA(KMA))=ZI(JCE1D-1+5+4*(LIMA(KMA)-1)+2)
          ZI(JNBCMP-1+LIMA(KMA))=MIN(ZI(JCE1D-1+5+4*(LIMA(KMA)-1)+3),
     &                       NCMP2)
   10   CONTINUE
C
      ELSE
C
        DO 11,IMA = 1,NBMAM
          ZI(JNBPT-1+IMA)=ZI(JCE1D-1+5+4*(IMA-1)+1)
          ZI(JNBSP-1+IMA)=ZI(JCE1D-1+5+4*(IMA-1)+2)
          ZI(JNBCMP-1+IMA)=MIN(ZI(JCE1D-1+5+4*(IMA-1)+3),NCMP2)
   11   CONTINUE
C
      ENDIF

C     3- CREATION DE CES2 :
C     ---------------------------------------
      IF (NBCMP.GT.0) THEN
        CALL CESCRE(BASE,CES2,TYPCES,MA,NOMGD,NCMP2,LICMP,ZI(JNBPT),
     &              ZI(JNBSP),-NBCMP)
      ELSE
        CALL CESCRE(BASE,CES2,TYPCES,MA,NOMGD,NCMP2,ZK8(JCE1C),
     &              ZI(JNBPT),ZI(JNBSP),ZI(JNBCMP))
      END IF
      CALL JEVEUO(CES2//'.CESD','L',JCE2D)
      CALL JEVEUO(CES2//'.CESC','L',JCE2C)
      CALL JEVEUO(CES2//'.CESV','E',JCE2V)
      CALL JEVEUO(CES2//'.CESL','E',JCE2L)


C     4- ON TRANSFORME LIMA EN LISTE DE BOOLEENS:
C     ------------------------------------------
      CALL WKVECT('&&CESRED.EXIMA','V V L',NBMAM,JEXMA)
      DO 20,KMA = 1,NBMAM
        ZL(JEXMA-1+KMA) = .FALSE.
   20 CONTINUE

      CALL ASSERT(NBMA.GE.0)
      IF (NBMA.EQ.0) THEN
        DO 30,KMA = 1,NBMAM
          ZL(JEXMA-1+KMA) = .TRUE.
   30   CONTINUE

      ELSE
        DO 40,KMA = 1,NBMA
          ZL(JEXMA-1+LIMA(KMA)) = .TRUE.
   40   CONTINUE
      END IF




C     5- REMPLISSAGE DES OBJETS .CESL ET .CESV :
C     ------------------------------------------

      DO 80,ICMP2 = 1,NCMP2
        NOCMP = ZK8(JCE2C-1+ICMP2)
        ICMP1 = KNINDI(8,NOCMP,ZK8(JCE1C),NCMP1)
        IF (ICMP1.EQ.0) GO TO 80


        DO 70,IMA = 1,NBMAM
          IF (ZL(JEXMA-1+IMA)) THEN
            NBPT = ZI(JCE2D-1+5+4* (IMA-1)+1)
            NBSP = ZI(JCE2D-1+5+4* (IMA-1)+2)
            DO 60,IPT = 1,NBPT
              DO 50,ISP = 1,NBSP
                CALL CESEXI('C',JCE1D,JCE1L,IMA,IPT,ISP,ICMP1,IAD1)
                CALL CESEXI('C',JCE2D,JCE2L,IMA,IPT,ISP,ICMP2,IAD2)
                CALL ASSERT(IAD2.LE.0)
                IF ((IAD1.LE.0) .OR. (IAD2.EQ.0)) GO TO 50

C               -- RECOPIE DE LA VALEUR:
                ZL(JCE2L-1-IAD2) = .TRUE.
                IF (TSCA.EQ.'R') THEN
                  ZR(JCE2V-1-IAD2) = ZR(JCE1V-1+IAD1)
                ELSE IF (TSCA.EQ.'C') THEN
                  ZC(JCE2V-1-IAD2) = ZC(JCE1V-1+IAD1)
                ELSE IF (TSCA.EQ.'I') THEN
                  ZI(JCE2V-1-IAD2) = ZI(JCE1V-1+IAD1)
                ELSE IF (TSCA.EQ.'L') THEN
                  ZL(JCE2V-1-IAD2) = ZL(JCE1V-1+IAD1)
                ELSE IF (TSCA.EQ.'K8') THEN
                  ZK8(JCE2V-1-IAD2) = ZK8(JCE1V-1+IAD1)
                ELSE IF (TSCA.EQ.'K16') THEN
                  ZK16(JCE2V-1-IAD2) = ZK16(JCE1V-1+IAD1)
                ELSE IF (TSCA.EQ.'K24') THEN
                  ZK24(JCE2V-1-IAD2) = ZK24(JCE1V-1+IAD1)
                ELSE IF (TSCA.EQ.'K32') THEN
                  ZK32(JCE2V-1-IAD2) = ZK32(JCE1V-1+IAD1)
                ELSE IF (TSCA.EQ.'K80') THEN
                  ZK80(JCE2V-1-IAD2) = ZK80(JCE1V-1+IAD1)
                ELSE
                  CALL ASSERT(.FALSE.)
                END IF

   50         CONTINUE
   60       CONTINUE
          END IF

   70   CONTINUE
   80 CONTINUE


C     6- MENAGE :
C     -----------
      CALL JEDETR('&&CESRED.NBPT')
      CALL JEDETR('&&CESRED.NBSP')
      CALL JEDETR('&&CESRED.NBCMP')
      CALL JEDETR('&&CESRED.EXIMA')
      IF (CES1.EQ.'&&CESRED.CES1') CALL DETRSD('CHAM_ELEM_S',CES1)


      CALL JEDEMA()
      END
