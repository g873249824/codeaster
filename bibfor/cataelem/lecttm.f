      SUBROUTINE LECTTM(FLIGN,LLIGN)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CATAELEM  DATE 07/01/98   AUTEUR CIBHHLB L.BOURHRARA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C     INCLUDE($CIMPERR)
C
      COMMON /CIMP/IMP,IULMES,IULIST,IULVIG
C
C     EXCLUDE($CIMPERR)
C
C
      INTEGER FLIGN,LLIGN
      CHARACTER*80 LIGNE
C
      CHARACTER*72 CVAL
      CHARACTER*8 TM
C
C
C     INCLUDE($FUNJEV)
C
C     FONCTIONS JEVEUX
C
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR
C
C     COMMUNS   JEVEUX
C
      CHARACTER*6 PGC
      COMMON /NOMAJE/PGC
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C     EXCLUDE($FUNJEV)
C     INCLUDE($CDEBUG)
      CHARACTER*8 CLEDBG
      CHARACTER*24 OBJDMP
      INTEGER PASDMP,TYOBDM
      COMMON /CMODBG/CLEDBG
      COMMON /CDEBUG/ICCDBG
      COMMON /CBDMPC/OBJDMP(30)
      COMMON /CBDMPN/NDMP,PASDMP(30),TYOBDM(30)
C
C       NDMP : NOMBRE D OBJETS A DUMPER
C       PASDMP(IDMP)  : PASSE OU ON DUMPE L OBJET IDMP
C       OBJDMP(IDMP)  : NOM DE L OBJET IDMP
C       TYOBDM(IDMP)  : GENRE DE L OBJET IDMP :  0 OBJET SIMPLE
C                                                1 COLLECTION NUMEROTEE
C                                                2 COLLECTION NOMME
C
C     EXCLUDE($CDEBUG)
C
C     ETATS
C
      INTEGER INIT,FIN
C
C     LABELS
C
      INTEGER TRANS,SORTIE,ERRGRA,ERRCON,EPILOG
C
C
C     INCLUDE($EXTF)
C     EXCLUDE($EXTF)
C
C     VARIABLES FORTRANS POUR LES OBJETS
C
C     INCLUDE($OCATTM)
C
C     TABLEAUX FORTRAN CORRESPONDANTS AUX OBJETS DU CATALOGUE DES
C     TYPE DE MAILLE
C
C-----------------------------------------------------------------------
C  OBJET          ! TYPE JEVEUX         ! TABLEAU FORT! FCTION ACCES   !
C-----------------!---------------------!-------------!-----------------
C &CATA.TM.NOMTM  ! V(IS) POINTEUR      !             !                !
C-----------------!---------------------!-------------!-----------------
C &CATA.TM.NBNO   ! C(IS) POINTEE PAR   !  NBNO       ! IDNBNO(ITM)    !
C                 ! &CATA.TM.NOMTM      !             !                !
C                 !     ( NOMS )        !             !                !
C-----------------!---------------------!-------------!-----------------
      INTEGER NBNO
      COMMON /COCATM/NBNO(2)
C     EXCLUDE($OCATTM)
C
C  FONCTIONS FORMULES ( ADRESSAGE )
C
C     INCLUDE($ADCATTM)
C
C     ADRESSES DANS LES OBJETS DU CATALOGUE DES TYPE DE MAILLE
C
      IDNBNO(ITM) = IDCEL('&CATA.TM.NBNO',NBNO,ITM)
C     EXCLUDE($ADCATTM)
C
C
C  FONCTIONS PARTICULIERES
C
C
      ASSIGN 500 TO TRANS
      ASSIGN 200 TO SORTIE
      ASSIGN 900 TO ERRGRA
C     ASSIGN 901 TO ERRCON
C
C
C
C
      CALL LXPOSI(FLIGN,1,0)
C
C
      NTM = 0
      FIN = 0
      IPASSE = 1
  500 CONTINUE
      INIT = FIN
C
C     CHANGEMENTS D ETAT CONTEXTUELS APRES ACTIONS
C
      IF (INIT.EQ.2) THEN
        IF (IVAL.EQ.0) THEN
          INIT = 5
        END IF

        GO TO 501

      END IF
C
      IF (INIT.EQ.4) THEN
        IF (NTM.EQ.ITM) THEN
          INIT = 5
        END IF

        GO TO 501

      END IF
C
  501 CONTINUE
      IF (NDMP.NE.0) CALL DMPOBJ(IPASSE,FIN,'  FIN  ')
      CALL TRANTM(INIT,FIN,IVAL,CVAL)
      IF (NDMP.NE.0) CALL DMPOBJ(IPASSE,FIN,' DEBUT ')
      IF (ICCDBG.GE.2) THEN
        WRITE (IMP,*) ' % ETAT ',FIN
      END IF

      GO TO (1,2,3,4,50,50,50,50,50,10,11) FIN
C
    1 CONTINUE
      GO TO TRANS
C
    2 CONTINUE
      NTM = IVAL
      ITM = 0
      CALL JECREO('&CATA.TM.NOMTM',' G N K8 ')
      CALL JEECRA('&CATA.TM.NOMTM','NOMMAX',NTM,' ')
      CALL JECREC('&CATA.TM.NBNO','G E I ','NO',
     +            'CONTIG','CONSTANT',NTM)
      CALL JEECRA('&CATA.TM.NBNO','LONT',NTM,' ')
      GO TO TRANS
C
    3 CONTINUE
      ITM = ITM + 1
      TM = CVAL(1:IVAL)
      CALL JECROC(JEXNOM('&CATA.TM.NOMTM',TM))
      CALL JECROC(JEXNOM('&CATA.TM.NBNO',TM))
      GO TO TRANS
C
    4 CONTINUE
      ZI(IDNBNO(ITM)) = IVAL
      GO TO TRANS
C
   50 CONTINUE
      WRITE (IULMES,*) ' % ERREUR PGM LCTOPT  RETOUR SUPERVISEUR '
      CALL UTMESS('F','LECTTM','PB. LECTURE CATALOGUES.')
      GOTO 9999
C
C   ETATS LIES AUX EOF
C
C
C
C
   10 CONTINUE
      IF (IVAL.EQ.0) THEN
        GO TO SORTIE

      ELSE
        GO TO ERRGRA

      END IF
C
   11 CONTINUE
      GO TO SORTIE
C
C
  200 CONTINUE
      IF (ICCDBG.GT.0) THEN
        WRITE (IMP,*) ' % OK  '
        WRITE (IMP,*) ' % NTM   ',NTM,' ITM   ',ITM
      END IF
CCCCC WRITE(IULMES,*) ' % FIN CATALOGUE DES TYPE_MAILLES '
C
      CALL LXINFO(LIGNE,LLIGN,JCOL)
C
      GOTO 9999

  900 CONTINUE
      CALL UTMESS('F','LECTTM','PB. LECTURE CATALOGUES.')
      WRITE (IULMES,*) ' % ERREUR  TYPE_MAILLES GRAMMAIRE '
      CALL UTMESS('F','LECTTM','PB. LECTURE CATALOGUES.')
      GOTO 9999

C     WRITE (IULMES,*) ' % ERREUR  TYPE_MAILLES CONTEXT '
C     GOTO 9999
C
 9999 CONTINUE
      END
