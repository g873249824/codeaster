      INTEGER FUNCTION IDCVNU(OBJ,ADR,I,J)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF CATAELEM  DATE 10/03/98   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================

      IMPLICIT REAL*8 (A-H,O-Z)
C
C     INCLUDE($CIMPERR)
C
      COMMON /CIMP/IMP,IULMES,IULIST,IULVIG
C
C     EXCLUDE($CIMPERR)
C
C
C     DONNE L ADRESSE D UN ELEMENT I,J DANS UNE COLLECTION NUMEROTEE
C     DE NOM OBJ DE VECTEURS DE N IMPORTE QUOI
C
C     LE TABLEAU FORTRAN CORRESPONDANT EST ADR
C
C     INCLUDE($FUNJEV)
C
C     FONCTIONS JEVEUX
C
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR
C
C     COMMUNS   JEVEUX
C
      CHARACTER*6 PGC
      COMMON /NOMAJE/PGC
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C     EXCLUDE($FUNJEV)
C     INCLUDE($CDEBUG)
      CHARACTER*8 CLEDBG
      CHARACTER*24 OBJDMP
      INTEGER PASDMP,TYOBDM
      COMMON /CMODBG/CLEDBG
      COMMON /CDEBUG/ICCDBG
      COMMON /CBDMPC/OBJDMP(30)
      COMMON /CBDMPN/NDMP,PASDMP(30),TYOBDM(30)
C
C       NDMP : NOMBRE D OBJETS A DUMPER
C       PASDMP(IDMP)  : PASSE OU ON DUMPE L OBJET IDMP
C       OBJDMP(IDMP)  : NOM DE L OBJET IDMP
C       TYOBDM(IDMP)  : GENRE DE L OBJET IDMP :  0 OBJET SIMPLE
C                                                1 COLLECTION NUMEROTEE
C                                                2 COLLECTION NOMME
C
C     EXCLUDE($CDEBUG)
      CHARACTER*(*) OBJ
      INTEGER ADR(2)
C
      CHARACTER*24 TYPC
      CHARACTER*1 K1BID
C
C     SI TYPC = 'CONSTANT'  ADR(2) = - (LONGUEUR D UN VECTEUR )
C
C       ELSE                ADR(2) = ADR/ZI DU POINT DE LONG CU
C
C
      IF (ICCDBG.GT.0) THEN
        CALL JELIRA(OBJ,'NMAXOC',N,K1BID)
        IF ((I.LT.1) .OR. (I.GT.N)) THEN
          WRITE (IULMES,9000) OBJ,N,I

 9000     FORMAT (' IDCVNU ERREUR ',/,' COLLEC ',A32,/,' DIM COLLEC ',
     +           I5,/,' I ',I10)

          CALL JEIMPM('VIGILE',
     +                ' DUMP PROVOQUE PAR CC PUIS  RETOUR SUPERVISEUR ')
          CALL UTMESS('F','IDCVNU','PB. LECTURE CATALOGUES.')
          GOTO 9999

        END IF

        CALL JELIRA(JEXNUM(OBJ,I),'LONMAX',N1,K1BID)
        IF ((J.LT.1) .OR. (J.GT.N1)) THEN
          WRITE (IULMES,9001) OBJ,N,I,N1,J

 9001     FORMAT (' IDCVNU ERREUR ',/,' COLLEC ',A32,/,' DIM COLLEC ',
     +           I5,/,' I ',I10,/,' DIMENSION VECTEUR ',I10,' J ',I10)

          CALL JEIMPM('VIGILE',
     +                ' DUMP PROVOQUE PAR CC PUIS  RETOUR SUPERVISEUR ')
          CALL UTMESS('F','IDCVNU','PB. LECTURE CATALOGUES.')
          GOTO 9999

        END IF

      END IF
C
      IF (ICCDBG.GT.0) THEN
        CALL JEVEUO(JEXNUM(OBJ,I),'E',IAD)
        IDCVNU = IAD + J - 1

      ELSE
        IADC = ADR(1)
        IF (IADC.EQ.0) THEN
          CALL JEVEUO(OBJ,'E',IADC)
          ADR(1) = IADC
          CALL JELIRA(OBJ,'MODELONG',IBID,TYPC)
          IF (TYPC.EQ.'CONSTANT') THEN
            CALL JELIRA(OBJ,'LONMAX',ILONV,K1BID)
            ADR(2) = -ILONV

          ELSE
            CALL JEVEUO(JEXATR(OBJ,'LONCUM'),'L',IADPC)
            ADR(2) = IADPC
          END IF

        END IF

        IF (ADR(2).GT.0) THEN
          IADPC = ADR(2)
          IDCVNU = IADC - 1 + ZI(IADPC+I-1) + J - 1

        ELSE
          ILONV = -ADR(2)
          IDCVNU = IADC + ILONV* (I-1) + J - 1
        END IF

      END IF

      GOTO 9999

 9999 CONTINUE
      END
