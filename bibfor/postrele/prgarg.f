      SUBROUTINE PRGARG ( MCF, MCS, NXDNOM, NXDNUM, NCHEFF, NBORDM,
     +                    RCCMPM, RCCMSN, FATISP, SNTHER )
      IMPLICIT   NONE
      INTEGER             NBORDM
      LOGICAL             RCCMPM, RCCMSN, SNTHER, FATISP
      CHARACTER*(*)       MCF, MCS
      CHARACTER*16                                  NCHEFF
      CHARACTER*24                  NXDNOM, NXDNUM
C
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF POSTRELE  DATE 12/05/98   AUTEUR CIBHHLV L.VIVAN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     ------------------------------------------------------------------
C      SAISIE ET PREPA VERIF COHERENCE DES ARGUMENTS D 'APPEL DE OP0165
C          1. VERIFICATION D' EXISTENCE DES OJB MIS EN JEU
C          2. VERIFICATION DE LEGALITE DES CMP MISES EN JEU
C          3. VERIFICATION DE COHERENCE SUR LES MAILLAGES SOUS-JACENTS
C     CES VERIFICATIONS SERONT EFFECTUEES PAR RVCOHE
C     SAISIE DES CMP MISES EN JEU ET DES OPERATION DEMANDEE
C     ------------------------------------------------------------------
C OUT NXDNOM : K : XD V K8 NOM DES CMP UTILISATEURS (OC(I) = OCCUR(I))
C OUT NXDNUM : K : XD V K8 NUM DES CMP UTILISATEURS (OC(I) = OCCUR(I))
C OUT NCHEFF : K : NOM DE L' OJB DES NOM DE CHAMPS EFFECTIFS
C     ------------------------------------------------------------------
C     NCHEFF ::= RECORD
C       '.NUMACCE' : XD V V I   NUMEROTEE
C                    CONTIENT LES VALEURS UTILISEES POUR L' ACCES
C       '.VALACCE' : XD V V R   NUMEROTEE
C                    CONTIENT LES VALEURS UTILISEES POUR L' ACCES
C       '.TYPACCE' : XD V V K8  NUMEROTEE
C                    CONTIENT LES VALEURS UTILISEES POUR L' ACCES
C       '.LSCHEFF' : XD V V K24 NUMEROTEE
C                    LES NOM DE CHAMPS EFFECTIFS CORRESPONDANT A LA
C                    VALEUR NUMERO I SONT RANGES DANS L' OC NUMERO I
C                    '&...' CODE LA NON PRESENCE D' UN CHAMP EFFECTIF
C     ------------------------------------------------------------------
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
      CHARACTER*32     JEXNUM, JEXNOM
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER       NOCC, ANOMCP, ANUMCP, NBPOST, IOCC, N1, N2, N3, N4,
     +              N5, JSCHP, IRET, NBORDR, JORDR, JSACC, JSTYP, JSVAL,
     +              JSNCY, I, IORD, JINST, NBORD2
      REAL*8        PREC
      CHARACTER*8   K8B, CRIT
      CHARACTER*16  NCHSYM
      CHARACTER*19  NRESU, KORDRE, NCHP19
      CHARACTER*24  NLSCHP, NLSNUM, NLSVAL, NLSTYP, NLSNU2, NLSSNO,
     +              NLSNCY, NLSPM, NLSPB, NLSPMO, NLSPME, NLSSNE,
     +              NLSSPO, NLSSPE, NLSNTO, NLSNTE, NLSNU1,
     +              NLSPO1, NLSPO2, NLSPO3, NLSPO4, NLSPO5, NLSPO6,
     +              NLSPE1, NLSPE2, NLSPE3, NLSPE4, NLSPE5, NLSPE6
C
C=================== CORPS DE LA ROUTINE =============================
C
      CALL JEMARQ()
C
      NBORDM = 0
      NOCC   = 0
C
      NLSCHP = NCHEFF//'.LSCHEFF'
      NLSNUM = NCHEFF//'.NUMACCE'
      NLSTYP = NCHEFF//'.TYPACCE'
      NLSVAL = NCHEFF//'.VALACCE'
      NLSNCY = NCHEFF//'.NBCYCLE'
      IF ( RCCMPM ) THEN
         NLSPM  = NCHEFF//'.VALPM  '
         NLSPB  = NCHEFF//'.VALPB  '
         NLSPMO = NCHEFF//'.VALPMPO'
         NLSPME = NCHEFF//'.VALPMPE'
         NLSPO1 = NCHEFF//'.VPMPBO1'
         NLSPO2 = NCHEFF//'.VPMPBO2'
         NLSPO3 = NCHEFF//'.VPMPBO3'
         NLSPO4 = NCHEFF//'.VPMPBO4'
         NLSPO5 = NCHEFF//'.VPMPBO5'
         NLSPO6 = NCHEFF//'.VPMPBO6'
         NLSPE1 = NCHEFF//'.VPMPBE1'
         NLSPE2 = NCHEFF//'.VPMPBE2'
         NLSPE3 = NCHEFF//'.VPMPBE3'
         NLSPE4 = NCHEFF//'.VPMPBE4'
         NLSPE5 = NCHEFF//'.VPMPBE5'
         NLSPE6 = NCHEFF//'.VPMPBE6'
      ENDIF
      IF ( RCCMSN .OR. FATISP ) THEN
         NLSNU1 = NCHEFF//'.INST1  '
         NLSNU2 = NCHEFF//'.INST2  '
         NLSSNO = NCHEFF//'.VALSNO '
         NLSSNE = NCHEFF//'.VALSNE '
         NLSSPO = NCHEFF//'.VALSPO '
         NLSSPE = NCHEFF//'.VALSPE '
      ENDIF
      IF ( SNTHER ) THEN
         NLSNTO = NCHEFF//'.VALSNTO'
         NLSNTE = NCHEFF//'.VALSNTE'
      ENDIF
C
      CALL GETFAC ( MCF , NBPOST )
C
      CALL JECREC(NXDNOM,'V V K8' ,'NU','DISPERSE','VARIABLE',NBPOST)
      CALL JECREC(NXDNUM,'V V I'  ,'NU','DISPERSE','VARIABLE',NBPOST)
      CALL JECREC(NLSCHP,'V V K24','NU','DISPERSE','VARIABLE',NBPOST)
      CALL JECREC(NLSNUM,'V V I'  ,'NU','DISPERSE','VARIABLE',NBPOST)
      CALL JECREC(NLSVAL,'V V R'  ,'NU','DISPERSE','VARIABLE',NBPOST)
      CALL JECREC(NLSTYP,'V V K8' ,'NU','DISPERSE','VARIABLE',NBPOST)
      CALL JECREC(NLSNCY,'V V I'  ,'NU','DISPERSE','VARIABLE',NBPOST)
      IF ( RCCMPM ) THEN
        CALL JECREC(NLSPM ,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPB ,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPMO,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPME,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPO1,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPO2,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPO3,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPO4,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPO5,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPO6,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPE1,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPE2,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPE3,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPE4,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPE5,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSPE6,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
      ENDIF
      IF ( RCCMSN .OR. FATISP ) THEN
        CALL JECREC(NLSNU1,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSNU2,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSSNO,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSSNE,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSSPO,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSSPE,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
      ENDIF
      IF ( SNTHER ) THEN
        CALL JECREC(NLSNTO,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
        CALL JECREC(NLSNTE,'V V R','NU','DISPERSE','VARIABLE',NBPOST)
      ENDIF
C
      KORDRE = '&&PRGARG.NUMEORDR'
      DO 100, IOCC = 1, NBPOST, 1
C
         CALL JECROC(JEXNUM(NXDNOM,IOCC))
         CALL JEECRA(JEXNUM(NXDNOM,IOCC),'LONMAX',1,' ')
         CALL JEVEUO(JEXNUM(NXDNOM,IOCC),'E',ANOMCP)
         ZK8(ANOMCP) = 'IMPLICIT'
         CALL JECROC(JEXNUM(NXDNUM,IOCC))
         CALL JEECRA(JEXNUM(NXDNUM,IOCC),'LONMAX',1,' ')
         CALL JEVEUO(JEXNUM(NXDNUM,IOCC),'E',ANUMCP)
         ZI (ANUMCP) = -1
C
         CALL GETVID ( MCF,  MCS       ,IOCC,1,1, NRESU ,N1)
         IF ( N1 .EQ. 0 ) THEN
            CALL JECROC(JEXNUM(NLSCHP,IOCC))
            CALL JEECRA(JEXNUM(NLSCHP,IOCC),'LONMAX',1,' ')
            CALL JEVEUO(JEXNUM(NLSCHP,IOCC),'E',JSCHP)
            ZK24(JSCHP) = '&&CHAMP_EFF_NON_EXISTANT'
            GOTO 100
         ENDIF
C
         CALL GETVTX ( MCF, 'NOM_CHAM' ,IOCC,1,1, NCHSYM,N2)
         CALL GETVR8 ( MCF, 'PRECISION',IOCC,1,1, PREC  ,N3)
         CALL GETVTX ( MCF, 'CRITERE'  ,IOCC,1,1, CRIT  ,N4)
         CALL GETVIS ( MCF, 'NB_OCCUR' ,IOCC,1,1, NOCC  ,N5)
C
         CALL RSUTNU ( NRESU, MCF, IOCC, KORDRE, NBORDR,
     +                 PREC, CRIT, IRET )
C
         NBORDM = NBORDM + NBORDR
         IF ( NBORDR .EQ. 1 ) THEN
            NBORD2 = 1
         ELSE
            NBORD2 = (NBORDR*(NBORDR-1)) / 2
         ENDIF
C
         IF ( IRET .NE. 0 ) THEN
            CALL JECROC(JEXNUM(NLSCHP,IOCC))
            CALL JEECRA(JEXNUM(NLSCHP,IOCC),'LONMAX',1,' ')
            CALL JEVEUO(JEXNUM(NLSCHP,IOCC),'E',JSCHP)
            ZK24(JSCHP) = '&&CHAMP_EFF_NON_EXISTANT'
            GOTO 100
         ENDIF
         CALL JEVEUO ( KORDRE,'L', JORDR )
C
         CALL JECROC(JEXNUM(NLSCHP,IOCC))
         CALL JEECRA(JEXNUM(NLSCHP,IOCC),'LONMAX',NBORDR,' ')
         CALL JEVEUO(JEXNUM(NLSCHP,IOCC),'E',JSCHP)
         CALL JECROC(JEXNUM(NLSNUM,IOCC))
         CALL JEECRA(JEXNUM(NLSNUM,IOCC),'LONMAX',NBORDR,' ')
         CALL JEVEUO(JEXNUM(NLSNUM,IOCC),'E',JSACC)
         CALL JECROC(JEXNUM(NLSTYP,IOCC))
         CALL JEECRA(JEXNUM(NLSTYP,IOCC),'LONMAX',NBORDR,' ')
         CALL JEVEUO(JEXNUM(NLSTYP,IOCC),'E',JSTYP)
         CALL JECROC(JEXNUM(NLSVAL,IOCC))
         CALL JEECRA(JEXNUM(NLSVAL,IOCC),'LONMAX',NBORDR,' ')
         CALL JEVEUO(JEXNUM(NLSVAL,IOCC),'E',JSVAL)
         CALL JECROC(JEXNUM(NLSNCY,IOCC))
         CALL JEECRA(JEXNUM(NLSNCY,IOCC),'LONMAX',NBORDR,' ')
         CALL JEVEUO(JEXNUM(NLSNCY,IOCC),'E',JSNCY)
         IF ( RCCMPM ) THEN
            CALL JECROC(JEXNUM(NLSPM ,IOCC))
            CALL JEECRA(JEXNUM(NLSPM ,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPB ,IOCC))
            CALL JEECRA(JEXNUM(NLSPB ,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPMO,IOCC))
            CALL JEECRA(JEXNUM(NLSPMO,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPME,IOCC))
            CALL JEECRA(JEXNUM(NLSPME,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPO1,IOCC))
            CALL JEECRA(JEXNUM(NLSPO1,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPO2,IOCC))
            CALL JEECRA(JEXNUM(NLSPO2,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPO3,IOCC))
            CALL JEECRA(JEXNUM(NLSPO3,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPO4,IOCC))
            CALL JEECRA(JEXNUM(NLSPO4,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPO5,IOCC))
            CALL JEECRA(JEXNUM(NLSPO5,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPO6,IOCC))
            CALL JEECRA(JEXNUM(NLSPO6,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPE1,IOCC))
            CALL JEECRA(JEXNUM(NLSPE1,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPE2,IOCC))
            CALL JEECRA(JEXNUM(NLSPE2,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPE3,IOCC))
            CALL JEECRA(JEXNUM(NLSPE3,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPE4,IOCC))
            CALL JEECRA(JEXNUM(NLSPE4,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPE5,IOCC))
            CALL JEECRA(JEXNUM(NLSPE5,IOCC),'LONMAX',NBORDR,' ')
            CALL JECROC(JEXNUM(NLSPE6,IOCC))
            CALL JEECRA(JEXNUM(NLSPE6,IOCC),'LONMAX',NBORDR,' ')
         ENDIF
         IF ( RCCMSN .OR. FATISP ) THEN
            CALL JECROC(JEXNUM(NLSNU1,IOCC))
            CALL JEECRA(JEXNUM(NLSNU1,IOCC),'LONMAX',NBORD2,' ')
            CALL JECROC(JEXNUM(NLSNU2,IOCC))
            CALL JEECRA(JEXNUM(NLSNU2,IOCC),'LONMAX',NBORD2,' ')
            CALL JECROC(JEXNUM(NLSSNO,IOCC))
            CALL JEECRA(JEXNUM(NLSSNO,IOCC),'LONMAX',NBORD2,' ')
            CALL JECROC(JEXNUM(NLSSNE,IOCC))
            CALL JEECRA(JEXNUM(NLSSNE,IOCC),'LONMAX',NBORD2,' ')
            CALL JECROC(JEXNUM(NLSSPO,IOCC))
            CALL JEECRA(JEXNUM(NLSSPO,IOCC),'LONMAX',NBORD2,' ')
            CALL JECROC(JEXNUM(NLSSPE,IOCC))
            CALL JEECRA(JEXNUM(NLSSPE,IOCC),'LONMAX',NBORD2,' ')
         ENDIF
         IF ( SNTHER ) THEN
            CALL JECROC(JEXNUM(NLSNTO,IOCC))
            CALL JEECRA(JEXNUM(NLSNTO,IOCC),'LONMAX',NBORD2,' ')
            CALL JECROC(JEXNUM(NLSNTE,IOCC))
            CALL JEECRA(JEXNUM(NLSNTE,IOCC),'LONMAX',NBORD2,' ')
         ENDIF
C
         DO 110 I = 1 , NBORDR , 1
            IORD = ZI(JORDR+I-1)
            CALL RSEXCH ( NRESU, NCHSYM, IORD, NCHP19, N1 )
            IF ( N1 .NE. 0 ) THEN
               ZK24(JSCHP+I-1) = '&&CHAMP_EFF_NON_EXISTANT'
               GOTO 110
            ELSE
               ZK24(JSCHP+I-1) = NCHP19//'     '
               ZK8 (JSTYP+I-1) = 'INSTANT'
               ZI  (JSACC+I-1) = IORD
               ZI  (JSNCY+I-1) = NOCC
               CALL RSADPA (NRESU, 'L', 1, 'INST', IORD, 0, JINST, K8B)
               ZR(JSVAL+I-1) = ZR(JINST)
            ENDIF
 110     CONTINUE
C
         CALL JEDETR ( KORDRE )
C
 100  CONTINUE
C
      CALL JEDEMA()
      END
