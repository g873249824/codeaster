      SUBROUTINE I2SEGM(NOMAIL,NBPARS,NBPARA)
      IMPLICIT  NONE
      INTEGER NBPARS,NBPARA
      CHARACTER*8 NOMAIL
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF POSTRELE  DATE 21/09/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE  CRP_20

C     OPERATEUR INTE_MAIL_2D,
C               MOTS CLES FACTEURS  "DEFI_SEGMENT"  ET  "DEFI_ARC"

C ----------------------------------------------------------------------
C     ----------- COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM
C     ------------------------------------------------------------------
      INTEGER ATYPCB,ANOMMA,AASGT,ABSGT,ACARC,ARARC,ASARC
      INTEGER AORSGT,AEXSGT,APAROR,APAREX,AFACOR,AFACEX,ACNXOR,ACNXEX,
     &        AMAIL1,AMAIL2
      INTEGER VORSGT,VEXSGT,VPAROR,VPAREX,VFACOR,VFACEX,VCNXOR,VCNXEX,
     &        VMAIL1,VMAIL2
      INTEGER N1,N2,OCCA,OCCS,LCNX,LSGT,NBMAIL,NBSGT,NBCNX,NBSEGM
      INTEGER IFM,NIV,OCC,NBPART,NBM,IM,IA,I
      INTEGER NBSEG,NBSOR,JNUMA
      INTEGER NUMM1,NUMM2,NDIM,VALI(2)
      REAL*8 POINT(2),POINA(2),POINB(2),DGRD,R8DGRD,PADIST
      REAL*8 EPSI,XA,XB,XC,YA,YB,YC,R,ALFINF,ALFSUP
      REAL*8 EPSI2,TOLE,DM,XRC1,XRC2,XEX,XOR,YEX,YOR
      CHARACTER*1 K1B
      CHARACTER*8 K8B,NOMCRB,NOMM1,NOMM2,CRIT
      CHARACTER*16 OPERA,TYPCRB,MOTCLE(3),TYPMCL(2)
      CHARACTER*24 CONEC,COORD,TYPE,NOMMAI,LISMAI
      CHARACTER*24 NORSGT,NEXSGT,NPAROR,NPAREX,NCNXOR,NCNXEX
      CHARACTER*24 NMAIL1,NMAIL2,NFACOR,NFACEX,NTPCRB
      CHARACTER*24 NPASGT,NPBSGT,NPCARC,NRARC,NSARC,NNOMMA
      CHARACTER*24 VALK(7)
      INTEGER      IARG
C     ------------------------------------------------------------------
      CALL JEMARQ()
      DGRD = R8DGRD()
      OCC = 0
      NDIM = 2

      CALL INFNIV(IFM,NIV)

      CALL GETRES(NOMCRB,TYPCRB,OPERA)
      CALL GETVR8(' ','PRECISION',0,IARG,1,EPSI,N2)

      CONEC = NOMAIL//'.CONNEX         '
      COORD = NOMAIL//'.COORDO    .VALE'
      TYPE = NOMAIL//'.TYPMAIL        '
      NOMMAI = NOMAIL//'.NOMMAI         '
      CALL JELIRA(CONEC,'NMAXOC',NBMAIL,K1B)

C     --- TRAITEMENT DES GROUP_MA ET MAILLE ---

      LISMAI = '&&OP0050.NUME_MAIL'
      CALL GETVTX(' ','GROUP_MA',0,IARG,0,K8B,N1)
      CALL GETVTX(' ','MAILLE',0,IARG,0,K8B,N2)
      IF ((N1+N2).EQ.0) THEN
        CALL WKVECT(LISMAI,'V V I',NBMAIL,JNUMA)
        DO 10,I = 1,NBMAIL,1
          ZI(JNUMA+I-1) = I
   10   CONTINUE
      ELSE
        MOTCLE(1) = 'GROUP_MA'
        MOTCLE(2) = 'MAILLE'
        TYPMCL(1) = 'GROUP_MA'
        TYPMCL(2) = 'MAILLE'
        CALL RELIEM(' ',NOMAIL,'NU_MAILLE',' ',1,2,MOTCLE,TYPMCL,
     &              LISMAI,NBMAIL)
        CALL JEVEUO(LISMAI,'L',JNUMA)
      END IF

      NORSGT = NOMCRB//'.ORSGT'
      NEXSGT = NOMCRB//'.EXSGT'
      NPAROR = NOMCRB//'.PAROR'
      NPAREX = NOMCRB//'.PAREX'
      NMAIL1 = NOMCRB//'.MAIL1'
      NMAIL2 = NOMCRB//'.MAIL2'
      NFACOR = NOMCRB//'.FACOR'
      NFACEX = NOMCRB//'.FACEX'
      NCNXOR = NOMCRB//'.CNXOR'
      NCNXEX = NOMCRB//'.CNXEX'
      NTPCRB = NOMCRB//'.TYPCOURBE'
      NPASGT = NOMCRB//'.XYASGT'
      NPBSGT = NOMCRB//'.XYBSGT'
      NPCARC = NOMCRB//'.XYCARC'
      NRARC = NOMCRB//'.XRARC'
      NSARC = NOMCRB//'.XSARC'
      NNOMMA = NOMCRB//'.NOMMAIL'

      CALL WKVECT(NPASGT,'G V R',2* (NBPARS+1),AASGT)
      CALL WKVECT(NPBSGT,'G V R',2* (NBPARS+1),ABSGT)
      CALL WKVECT(NPCARC,'G V R',2* (NBPARA+1),ACARC)
      CALL WKVECT(NSARC,'G V R',2* (NBPARA+1),ASARC)
      CALL WKVECT(NRARC,'G V R',NBPARA+1,ARARC)

C       /* CREATION DES VARIABLES TEMPORAIRES REPRESENTANT */
C       /*           L' INTERSECTION                       */

      CALL WKVECT('&VINTERORSGT','V V R',10000,VORSGT)
      CALL WKVECT('&VINTEREXSGT','V V R',10000,VEXSGT)
      CALL WKVECT('&VINTERPAROR','V V R',10000,VPAROR)
      CALL WKVECT('&VINTERPAREX','V V R',10000,VPAREX)
      CALL WKVECT('&VINTERMAIL1','V V I',10000,VMAIL1)
      CALL WKVECT('&VINTERMAIL2','V V I',10000,VMAIL2)
      CALL WKVECT('&VINTERFACOR','V V I',10000,VFACOR)
      CALL WKVECT('&VINTERFACEX','V V I',10000,VFACEX)
      CALL WKVECT('&VINTERCNXOR','V V I',100,VCNXOR)
      CALL WKVECT('&VINTERCNXEX','V V I',100,VCNXEX)

C       /* CREATION DE LA STRUCTURE DE DONNEES TEMPORAIRE ASSOCIEE */
C       /*         AU CONCEPT PRODUIT                              */

      NBPART = NBPARA + NBPARS
      CALL JECREC('&ORSGT','V V R','NU','DISPERSE','VARIABLE',NBPART)
      CALL JECREC('&EXSGT','V V R','NU','DISPERSE','VARIABLE',NBPART)
      CALL JECREC('&PAROR','V V R','NU','DISPERSE','VARIABLE',NBPART)
      CALL JECREC('&PAREX','V V R','NU','DISPERSE','VARIABLE',NBPART)
      CALL JECREC('&MAIL1','V V I','NU','DISPERSE','VARIABLE',NBPART)
      CALL JECREC('&MAIL2','V V I','NU','DISPERSE','VARIABLE',NBPART)
      CALL JECREC('&FACOR','V V I','NU','DISPERSE','VARIABLE',NBPART)
      CALL JECREC('&FACEX','V V I','NU','DISPERSE','VARIABLE',NBPART)
      CALL JECREC('&CNXOR','V V I','NU','DISPERSE','VARIABLE',NBPART)
      CALL JECREC('&CNXEX','V V I','NU','DISPERSE','VARIABLE',NBPART)
      OCCA = 1
      OCCS = 1
   30 CONTINUE
      IF ((OCCS.LE.NBPARS) .OR. (OCCA.LE.NBPARA)) THEN
        DO 40,I = 1,10000,1
          ZR(VORSGT+I-1) = -1.0D0
          ZR(VEXSGT+I-1) = -1.0D0
          ZR(VPAROR+I-1) = -1.0D0
          ZR(VPAREX+I-1) = -1.0D0
          ZI(VMAIL1+I-1) = -1
          ZI(VMAIL2+I-1) = -1
          ZI(VFACOR+I-1) = -1
          ZI(VFACEX+I-1) = -1
   40   CONTINUE

C      /* CALCUL DE L' INTERSECTION */

        IF (OCCS.LE.NBPARS) THEN
          MOTCLE(1) = 'ORIGINE'
          MOTCLE(2) = 'NOEUD_ORIG'
          MOTCLE(3) = 'GROUP_NO_ORIG'
          CALL UTCONO('DEFI_SEGMENT',MOTCLE,OCCS,NOMAIL,NDIM,POINT,N1)
          XA = POINT(1)
          YA = POINT(2)
          ZR(AASGT+2*OCCS) = XA
          ZR(AASGT+2*OCCS+1) = YA

          MOTCLE(1) = 'EXTREMITE'
          MOTCLE(2) = 'NOEUD_EXTR'
          MOTCLE(3) = 'GROUP_NO_EXTR'
          CALL UTCONO('DEFI_SEGMENT',MOTCLE,OCCS,NOMAIL,NDIM,POINT,N1)
          XB = POINT(1)
          YB = POINT(2)
          ZR(ABSGT+2*OCCS) = XB
          ZR(ABSGT+2*OCCS+1) = YB

          OCCS = OCCS + 1
          CALL I2IMAS(EPSI,CONEC,COORD,TYPE,NBMAIL,ZI(JNUMA),XA,YA,XB,
     &                YB,NBSGT,ZR(VORSGT),ZR(VEXSGT),ZI(VMAIL1),
     &                ZI(VMAIL2),ZI(VFACOR),ZI(VFACEX),ZR(VPAROR),
     &                ZR(VPAREX))
        ELSE

          MOTCLE(1) = 'CENTRE'
          MOTCLE(2) = 'NOEUD_CENTRE'
          MOTCLE(3) = 'GROUP_NO_CENTRE'
          CALL UTCONO('DEFI_ARC',MOTCLE,OCCA,NOMAIL,NDIM,POINT,N1)
          XC = POINT(1)
          YC = POINT(2)
          ZR(ACARC+2*OCCA) = XC
          ZR(ACARC+2*OCCA+1) = YC

          CALL GETVR8('DEFI_ARC','RAYON',OCCA,IARG,0,POINT,N1)
          IF (N1.NE.0) THEN
            CALL GETVR8('DEFI_ARC','RAYON',OCCA,IARG,1,POINT,N1)
            R = POINT(1)
            IF (R.LE.0.D0) CALL U2MESS('F','INTEMAIL_5')
            CALL GETVR8('DEFI_ARC','SECTEUR',OCCA,IARG,2,POINT,N1)
            ALFINF = POINT(1)*DGRD
            ALFSUP = POINT(2)*DGRD
            IF ( ( -180.0D0 .GE. ALFINF   ) .OR.
     &           ( ALFINF   .GE. ALFSUP   ) .OR.
     &           ( ALFSUP   .GT. 180.0D0  ) ) THEN
               VALK (1) = 'DEFI_ARC'
               VALK (2) = 'SECTEUR'
               CALL U2MESG('F', 'INTEMAIL_19',2,VALK,1,OCCA,0,0.D0)
             ENDIF
          ELSE

            MOTCLE(1) = 'ORIGINE'
            MOTCLE(2) = 'NOEUD_ORIG'
            MOTCLE(3) = 'GROUP_NO_ORIG'
            CALL UTCONO('DEFI_ARC',MOTCLE,OCCA,NOMAIL,NDIM,POINA,N1)

            MOTCLE(1) = 'EXTREMITE'
            MOTCLE(2) = 'NOEUD_EXTR'
            MOTCLE(3) = 'GROUP_NO_EXTR'
            CALL UTCONO('DEFI_ARC',MOTCLE,OCCA,NOMAIL,NDIM,POINB,N1)

            CALL GETVTX('DEFI_ARC','CRITERE',OCCA,IARG,1,CRIT,N1)
            CALL GETVR8('DEFI_ARC','PRECISION',OCCA,IARG,1,EPSI2,N1)
            XRC1 = PADIST(2,POINA,POINT)
            XRC2 = PADIST(2,POINB,POINT)
            IF (CRIT(1:4).EQ.'RELA') THEN
C     ON UTILISE LA MOYENNE ARITHMETIQUE DES RAYONS COMME REFERENCE
              DM = (XRC1+XRC2)/2.D0
              TOLE = EPSI2*DM
            ELSE
              TOLE = EPSI2
            END IF
            IF (ABS(XRC1-XRC2).GT.TOLE) THEN
              VALK (1) = 'DEFI_ARC'
              CALL U2MESG('F', 'INTEMAIL_20',1,VALK,1,OCCA,0,0.D0)
            END IF
            R = XRC1
            ALFINF = ATAN2(POINA(2)-POINT(2),POINA(1)-POINT(1))
            ALFSUP = ATAN2(POINB(2)-POINT(2),POINB(1)-POINT(1))
          END IF
          ZR(ARARC+OCCA) = R
          ZR(ASARC+2*OCCA) = ALFINF
          ZR(ASARC+2*OCCA+1) = ALFSUP
          OCCA = OCCA + 1
          CALL I2IMAC(EPSI,CONEC,COORD,TYPE,NBMAIL,ZI(JNUMA),XC,YC,R,
     &                ALFINF,ALFSUP,NBSGT,ZR(VORSGT),ZR(VEXSGT),
     &                ZI(VMAIL1),ZI(VMAIL2),ZI(VFACOR),ZI(VFACEX),
     &                ZR(VPAROR),ZR(VPAREX))
        END IF
        IF (NBSGT.GT.0) THEN
          OCC = OCCA + OCCS - 2
          CALL JECROC(JEXNUM('&ORSGT',OCC))
          CALL JEECRA(JEXNUM('&ORSGT',OCC),'LONMAX',NBSGT,' ')
          CALL JEVEUO(JEXNUM('&ORSGT',OCC),'E',AORSGT)
          CALL JECROC(JEXNUM('&EXSGT',OCC))
          CALL JEECRA(JEXNUM('&EXSGT',OCC),'LONMAX',NBSGT,' ')
          CALL JEVEUO(JEXNUM('&EXSGT',OCC),'E',AEXSGT)
          CALL JECROC(JEXNUM('&PAROR',OCC))
          CALL JEECRA(JEXNUM('&PAROR',OCC),'LONMAX',NBSGT,' ')
          CALL JEVEUO(JEXNUM('&PAROR',OCC),'E',APAROR)
          CALL JECROC(JEXNUM('&PAREX',OCC))
          CALL JEECRA(JEXNUM('&PAREX',OCC),'LONMAX',NBSGT,' ')
          CALL JEVEUO(JEXNUM('&PAREX',OCC),'E',APAREX)
          CALL JECROC(JEXNUM('&MAIL1',OCC))
          CALL JEECRA(JEXNUM('&MAIL1',OCC),'LONMAX',NBSGT,' ')
          CALL JEVEUO(JEXNUM('&MAIL1',OCC),'E',AMAIL1)
          CALL JECROC(JEXNUM('&MAIL2',OCC))
          CALL JEECRA(JEXNUM('&MAIL2',OCC),'LONMAX',NBSGT,' ')
          CALL JEVEUO(JEXNUM('&MAIL2',OCC),'E',AMAIL2)
          CALL JECROC(JEXNUM('&FACOR',OCC))
          CALL JEECRA(JEXNUM('&FACOR',OCC),'LONMAX',NBSGT,' ')
          CALL JEVEUO(JEXNUM('&FACOR',OCC),'E',AFACOR)
          CALL JECROC(JEXNUM('&FACEX',OCC))
          CALL JEECRA(JEXNUM('&FACEX',OCC),'LONMAX',NBSGT,' ')
          CALL JEVEUO(JEXNUM('&FACEX',OCC),'E',AFACEX)

C        /* SAUVEGARDE DE L' INTERSECTION DANS CETTE STRUCTURE */

          IF(NBSGT.GT.10000) THEN
            NBSEGM=NBSGT/10000+1
            VALI(1) = OCC
            VALI(2) = NBSEGM
            CALL U2MESG('F', 'INTEMAIL_33',0,' ',2,VALI,0,0.D0)
          ENDIF
          DO 50,I = 1,NBSGT,1
            ZR(AORSGT+I-1) = ZR(VORSGT+I-1)
            ZR(AEXSGT+I-1) = ZR(VEXSGT+I-1)
            ZR(APAROR+I-1) = ZR(VPAROR+I-1)
            ZR(APAREX+I-1) = ZR(VPAREX+I-1)
            ZI(AMAIL1+I-1) = ZI(VMAIL1+I-1)
            ZI(AMAIL2+I-1) = ZI(VMAIL2+I-1)
            ZI(AFACOR+I-1) = ZI(VFACOR+I-1)
            ZI(AFACEX+I-1) = ZI(VFACEX+I-1)
   50     CONTINUE
          DO 60,I = 1,100,1
            ZI(VCNXOR+I-1) = 0
            ZI(VCNXEX+I-1) = 0
   60     CONTINUE

C        /* CALCUL DES COMPOSANTES CONNEXES */

          CALL I2CPCX(EPSI,ZR(AORSGT),ZR(AEXSGT),ZI(VCNXOR),ZI(VCNXEX),
     &                NBSGT,NBCNX)

C        /* CREATION DE LA STRUCTURE DU CONCEPT PRODUIT      */
C        /* ASSOCIEE AUX COMPOSANTES CONNEXES DE L' INTERSECTION*/

          CALL JECROC(JEXNUM('&CNXOR',OCC))
          CALL JEECRA(JEXNUM('&CNXOR',OCC),'LONMAX',NBCNX,' ')
          CALL JEVEUO(JEXNUM('&CNXOR',OCC),'E',ACNXOR)
          CALL JECROC(JEXNUM('&CNXEX',OCC))
          CALL JEECRA(JEXNUM('&CNXEX',OCC),'LONMAX',NBCNX,' ')
          CALL JEVEUO(JEXNUM('&CNXEX',OCC),'E',ACNXEX)

C        /* SAUVEGARDE DE L' INTERSECTION DANS CETTE STRUCTURE */

          DO 70,I = 1,NBCNX,1
            ZI(ACNXOR+I-1) = ZI(VCNXOR+I-1)
            ZI(ACNXEX+I-1) = ZI(VCNXEX+I-1)
   70     CONTINUE
        ELSE
          OCC = OCCA + OCCS - 2
          VALK (1) = NOMCRB
          CALL U2MESG('F', 'INTEMAIL_21',1,VALK,1,OCC,0,0.D0)
        END IF
        GO TO 30
      END IF

C        /* CREATION DE LA STRUCTURE DE DONNEES PRODUIT */

      CALL WKVECT(NTPCRB,'G V K8',1,ATYPCB)
      ZK8(ATYPCB) = 'SGTDARCC'

      CALL WKVECT(NNOMMA,'G V K8',1,ANOMMA)
      ZK8(ANOMMA) = NOMAIL

      CALL JECREC(NORSGT,'G V R','NU','CONTIG','VARIABLE',NBPART)
      CALL JECREC(NEXSGT,'G V R','NU','CONTIG','VARIABLE',NBPART)
      CALL JECREC(NPAROR,'G V R','NU','CONTIG','VARIABLE',NBPART)
      CALL JECREC(NPAREX,'G V R','NU','CONTIG','VARIABLE',NBPART)
      CALL JECREC(NMAIL1,'G V I','NU','CONTIG','VARIABLE',NBPART)
      CALL JECREC(NMAIL2,'G V I','NU','CONTIG','VARIABLE',NBPART)
      CALL JECREC(NFACOR,'G V I','NU','CONTIG','VARIABLE',NBPART)
      CALL JECREC(NFACEX,'G V I','NU','CONTIG','VARIABLE',NBPART)
      CALL JECREC(NCNXOR,'G V I','NU','CONTIG','VARIABLE',NBPART)
      CALL JECREC(NCNXEX,'G V I','NU','CONTIG','VARIABLE',NBPART)

      LSGT = 0
      LCNX = 0
      NBPART = NBPARA + NBPARS
      DO 80,OCC = 1,NBPART,1
        CALL JELIRA(JEXNUM('&ORSGT',OCC),'LONMAX',N1,K1B)
        LSGT = LSGT + N1
        CALL JELIRA(JEXNUM('&CNXOR',OCC),'LONMAX',N1,K1B)
        LCNX = LCNX + N1
   80 CONTINUE
      CALL JEECRA(NORSGT,'LONT',LSGT,' ')
      CALL JEECRA(NEXSGT,'LONT',LSGT,' ')
      CALL JEECRA(NPAROR,'LONT',LSGT,' ')
      CALL JEECRA(NPAREX,'LONT',LSGT,' ')
      CALL JEECRA(NMAIL1,'LONT',LSGT,' ')
      CALL JEECRA(NMAIL2,'LONT',LSGT,' ')
      CALL JEECRA(NFACOR,'LONT',LSGT,' ')
      CALL JEECRA(NFACEX,'LONT',LSGT,' ')
      CALL JEECRA(NCNXOR,'LONT',LCNX,' ')
      CALL JEECRA(NCNXEX,'LONT',LCNX,' ')

C        /* RECOPIE DES RESULTATS DANS LA STRUCTURE PRODUIT */

      DO 110,OCC = 1,NBPART,1
        CALL JELIRA(JEXNUM('&ORSGT',OCC),'LONMAX',N1,K1B)
        CALL JEVEUO(JEXNUM('&ORSGT',OCC),'E',VORSGT)
        CALL JEVEUO(JEXNUM('&EXSGT',OCC),'E',VEXSGT)
        CALL JEVEUO(JEXNUM('&PAROR',OCC),'E',VPAROR)
        CALL JEVEUO(JEXNUM('&PAREX',OCC),'E',VPAREX)
        CALL JEVEUO(JEXNUM('&FACOR',OCC),'E',VFACOR)
        CALL JEVEUO(JEXNUM('&FACEX',OCC),'E',VFACEX)
        CALL JEVEUO(JEXNUM('&MAIL1',OCC),'E',VMAIL1)
        CALL JEVEUO(JEXNUM('&MAIL2',OCC),'E',VMAIL2)
        CALL JECROC(JEXNUM(NORSGT,OCC))
        CALL JEECRA(JEXNUM(NORSGT,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NORSGT,OCC),'E',AORSGT)
        CALL JECROC(JEXNUM(NEXSGT,OCC))
        CALL JEECRA(JEXNUM(NEXSGT,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NEXSGT,OCC),'E',AEXSGT)
        CALL JECROC(JEXNUM(NPAROR,OCC))
        CALL JEECRA(JEXNUM(NPAROR,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NPAROR,OCC),'E',APAROR)
        CALL JECROC(JEXNUM(NPAREX,OCC))
        CALL JEECRA(JEXNUM(NPAREX,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NPAREX,OCC),'E',APAREX)
        CALL JECROC(JEXNUM(NFACOR,OCC))
        CALL JEECRA(JEXNUM(NFACOR,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NFACOR,OCC),'E',AFACOR)
        CALL JECROC(JEXNUM(NFACEX,OCC))
        CALL JEECRA(JEXNUM(NFACEX,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NFACEX,OCC),'E',AFACEX)
        CALL JECROC(JEXNUM(NMAIL1,OCC))
        CALL JEECRA(JEXNUM(NMAIL1,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NMAIL1,OCC),'E',AMAIL1)
        CALL JECROC(JEXNUM(NMAIL2,OCC))
        CALL JEECRA(JEXNUM(NMAIL2,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NMAIL2,OCC),'E',AMAIL2)
        DO 90,I = 1,N1,1
          ZR(AORSGT+I-1) = ZR(VORSGT+I-1)
          ZR(AEXSGT+I-1) = ZR(VEXSGT+I-1)
          ZR(APAROR+I-1) = ZR(VPAROR+I-1)
          ZR(APAREX+I-1) = ZR(VPAREX+I-1)
          ZI(AMAIL1+I-1) = ZI(VMAIL1+I-1)
          ZI(AMAIL2+I-1) = ZI(VMAIL2+I-1)
          ZI(AFACOR+I-1) = ZI(VFACOR+I-1)
          ZI(AFACEX+I-1) = ZI(VFACEX+I-1)
   90   CONTINUE
        CALL JELIRA(JEXNUM('&CNXOR',OCC),'LONMAX',N1,K1B)
        CALL JEVEUO(JEXNUM('&CNXOR',OCC),'E',VCNXOR)
        CALL JEVEUO(JEXNUM('&CNXEX',OCC),'E',VCNXEX)
        CALL JECROC(JEXNUM(NCNXOR,OCC))
        CALL JEECRA(JEXNUM(NCNXOR,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NCNXOR,OCC),'E',ACNXOR)
        CALL JECROC(JEXNUM(NCNXEX,OCC))
        CALL JEECRA(JEXNUM(NCNXEX,OCC),'LONMAX',N1,' ')
        CALL JEVEUO(JEXNUM(NCNXEX,OCC),'E',ACNXEX)

C        /* SAUVEGARDE DE L' INTERSECTION DANS CETTE STRUCTURE */

        DO 100,I = 1,N1,1
          ZI(ACNXOR+I-1) = ZI(VCNXOR+I-1)
          ZI(ACNXEX+I-1) = ZI(VCNXEX+I-1)
  100   CONTINUE
  110 CONTINUE
      CALL JEDETR('&VINTERORSGT')
      CALL JEDETR('&VINTEREXSGT')
      CALL JEDETR('&VINTERPAROR')
      CALL JEDETR('&VINTERPAREX')
      CALL JEDETR('&VINTERMAIL1')
      CALL JEDETR('&VINTERMAIL2')
      CALL JEDETR('&VINTERFACOR')
      CALL JEDETR('&VINTERFACEX')
      CALL JEDETR('&VINTERCNXOR')
      CALL JEDETR('&VINTERCNXEX')
      CALL JEDETR('&ORSGT')
      CALL JEDETR('&EXSGT')
      CALL JEDETR('&PAROR')
      CALL JEDETR('&PAREX')
      CALL JEDETR('&MAIL1')
      CALL JEDETR('&MAIL2')
      CALL JEDETR('&FACOR')
      CALL JEDETR('&FACEX')
      CALL JEDETR('&CNXOR')
      CALL JEDETR('&CNXEX')
      CALL JEDETR(LISMAI)

      IF (NIV.GE.2) THEN
        WRITE (IFM,2000)
        WRITE (IFM,2010) NBPART
        CALL JEVEUO(NPASGT,'L',AASGT)
        CALL JEVEUO(NPBSGT,'L',ABSGT)
        CALL JEVEUO(NPCARC,'L',ACARC)
        CALL JEVEUO(NSARC,'L',ASARC)
        CALL JEVEUO(NRARC,'L',ARARC)
        CALL JELIRA(NPASGT,'LONMAX',NBSEG,K1B)
        IF (NBSEG.EQ.2) GO TO 140
        DO 130,OCC = 1,NBPARS,1
          CALL JELIRA(JEXNUM(NORSGT,OCC),'LONMAX',NBM,K1B)
          CALL JEVEUO(JEXNUM(NORSGT,OCC),'L',AORSGT)
          CALL JEVEUO(JEXNUM(NEXSGT,OCC),'L',AEXSGT)
          CALL JEVEUO(JEXNUM(NMAIL1,OCC),'L',AMAIL1)
          CALL JEVEUO(JEXNUM(NMAIL2,OCC),'L',AMAIL2)
          CALL JEVEUO(JEXNUM(NFACOR,OCC),'L',AFACOR)
          CALL JEVEUO(JEXNUM(NFACEX,OCC),'L',AFACEX)
          CALL JEVEUO(JEXNUM(NCNXOR,OCC),'L',ACNXOR)
          CALL JELIRA(JEXNUM(NCNXOR,OCC),'LONMAX',NBSOR,K1B)
          WRITE (IFM,2020) OCC,NBSOR
          WRITE (IFM,2030) 0.D0,ZR(AASGT+2*OCC),ZR(AASGT+2*OCC+1)
          DO 120,IM = 1,NBM,1
            NUMM1 = ZI(AMAIL1+IM-1)
            IF (NUMM1.EQ.0) GO TO 120
            CALL JENUNO(JEXNUM(NOMMAI,NUMM1),NOMM1)
            NUMM2 = ZI(AMAIL2+IM-1)
            IF (NUMM2.GT.0) THEN
              CALL JENUNO(JEXNUM(NOMMAI,NUMM2),NOMM2)
              WRITE (IFM,2070) NOMM1,ZI(AFACOR-1+IM),ZR(AORSGT-1+IM),
     &          NOMM2
              WRITE (IFM,2050) ZI(AFACEX-1+IM),ZR(AEXSGT-1+IM)
            ELSE
              WRITE (IFM,2040) NOMM1,ZI(AFACOR-1+IM),ZR(AORSGT-1+IM)
              WRITE (IFM,2050) ZI(AFACEX-1+IM),ZR(AEXSGT-1+IM)
            END IF
  120     CONTINUE
          WRITE (IFM,2060) 1.D0,ZR(ABSGT+2*OCC),ZR(ABSGT+2*OCC+1)
  130   CONTINUE
  140   CONTINUE
        IA = 0
        DO 160,OCC = NBPARS + 1,NBPART,1
          IA = IA + 1
          XOR = ZR(ACARC+2*IA) + ZR(ARARC+IA)*COS(ZR(ASARC+2*IA))
          YOR = ZR(ACARC+2*IA+1) + ZR(ARARC+IA)*SIN(ZR(ASARC+2*IA))
          XEX = ZR(ACARC+2*IA) + ZR(ARARC+IA)*COS(ZR(ASARC+2*IA+1))
          YEX = ZR(ACARC+2*IA+1) + ZR(ARARC+IA)*SIN(ZR(ASARC+2*IA+1))
          CALL JELIRA(JEXNUM(NORSGT,OCC),'LONMAX',NBM,K1B)
          CALL JEVEUO(JEXNUM(NORSGT,OCC),'L',AORSGT)
          CALL JEVEUO(JEXNUM(NEXSGT,OCC),'L',AEXSGT)
          CALL JEVEUO(JEXNUM(NMAIL1,OCC),'L',AMAIL1)
          CALL JEVEUO(JEXNUM(NMAIL2,OCC),'L',AMAIL2)
          CALL JEVEUO(JEXNUM(NFACOR,OCC),'L',AFACOR)
          CALL JEVEUO(JEXNUM(NFACEX,OCC),'L',AFACEX)
          CALL JEVEUO(JEXNUM(NCNXOR,OCC),'L',ACNXOR)
          CALL JELIRA(JEXNUM(NCNXOR,OCC),'LONMAX',NBSOR,K1B)
          WRITE (IFM,2120) OCC,NBSOR
          WRITE (IFM,2030) ZR(ASARC+2*IA),XOR,YOR
          DO 150,IM = 1,NBM,1
            NUMM1 = ZI(AMAIL1+IM-1)
            IF (NUMM1.EQ.0) GO TO 150
            CALL JENUNO(JEXNUM(NOMMAI,NUMM1),NOMM1)
            WRITE (IFM,2040) NOMM1,ZI(AFACOR-1+IM),ZR(AORSGT-1+IM)
            WRITE (IFM,2050) ZI(AFACEX-1+IM),ZR(AEXSGT-1+IM)
  150     CONTINUE
          WRITE (IFM,2060) ZR(ASARC+2*IA+1),XEX,YEX
  160   CONTINUE
      END IF

 2000 FORMAT (/,1X,'COURBE DEFINIE A PARTIR DE SEGMENT(S) ET D''ARC(S)')
 2010 FORMAT (3X,'COURBE DEFINIE PAR ',I2,' CHEMIN(S)')
 2020 FORMAT (5X,'CHEMIN NUMERO ',I2,' DEFINI PAR "DEFI_SEGMENT" EN ',
     &       I2,' SEGMENT(S)',/,34X,'ABSC_CURV')
 2030 FORMAT (1P,7X,'ORIGINE',18X,E12.5,2X,'POINT',1X,E12.5,1X,E12.5)
 2040 FORMAT (1P,7X,'MAILLE',1X,A8,1X,'COTE ',I1,3X,E12.5)
 2050 FORMAT (1P,7X,16X,'COTE ',I1,3X,E12.5)
 2060 FORMAT (1P,7X,'EXTREMITE',16X,E12.5,2X,'POINT',1X,E12.5,1X,E12.5)
 2070 FORMAT (1P,7X,'MAILLE',1X,A8,1X,'COTE ',I1,3X,E12.5,5X,'( ',A8,
     &       ' )')
 2120 FORMAT (5X,'CHEMIN NUMERO ',I2,' DEFINI PAR "DEFI_ARC" EN ',I2,
     &       ' SEGMENT(S)',/,34X,'ABSC_CURV')

      CALL JEDEMA()
      END
