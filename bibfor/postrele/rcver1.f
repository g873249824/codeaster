      SUBROUTINE RCVER1(PHENOZ,TABLZ,TABLY)
      IMPLICIT      NONE
      INCLUDE 'jeveux.h'
      CHARACTER*(*) TABLZ,TABLY,PHENOZ
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF POSTRELE  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     ------------------------------------------------------------------
C      OPERATEUR POST_RCCM
C
C     IN  TABLZ: TABLE DE REFERENCE
C     IN  TABLY: TABLE A COMPARER A TABLZ
C     IN  PHENOZ : PHENOMENE (THERMIQUE OU MECANIQUE)
C
C      VERIFICATIONS SUR LES 2 TABLES:
C      - MEMES COORDONNEES  (CAS "EVOLUTION" ET "UNITAIRE"):
C          -> SI 'MECANIQUE': MEME NOMBRE DE NOEUDS ET MEMES COORDONNEES
C          -> SI 'THERMIQUE': MEMES NOEUDS EXTREMITES
C      - MEME NOMBRE DE LIGAMENTS, MEMES INSTANTS (CAS "EVOLUTION")
C     ------------------------------------------------------------------
      INTEGER N1,NBNO1,NBNO2,JORDO1,JORDO2,NBINT1,NBINT2,I,J
      INTEGER VALI(2),NBINS1,NBINS2,JINST1,JINST2,IBID
      REAL*8 VALR(2),EPS,R8B,V1,V2
      PARAMETER(EPS=1.D-6)
      CHARACTER*8 K8B,VALK(3),TYVA
      CHARACTER*16 TABREF,TABCOM,TYPMEC,VALEK(5),PHENOM
      CHARACTER*24 ORDO1,ORDO2,INTIT1,INTIT2,INST1,INST2
      LOGICAL EXI1,EXI2,EXI3,EXIST
      INTEGER      IARG

      CALL JEMARQ()

      VALEK(1) = 'COOR_X          '
      VALEK(2) = 'COOR_Y          '
      VALEK(3) = 'COOR_Z          '
      VALEK(4) = 'INTITULE        '
      VALEK(5) = 'INST            '

      ORDO1    = '&&RCVER1_TABREF_ORDO'
      ORDO2    = '&&RCVER1_TABCOM_ORDO'
      INTIT1   = '&&RCVER1_TABREF_INTITU'
      INTIT2   = '&&RCVER1_TABCOM_INTITU'
      INST1    = '&&RCVER1_TABREF_INST'
      INST2    = '&&RCVER1_TABCOM_INST'

      TABREF =  TABLZ
      TABCOM =  TABLY
      PHENOM =  PHENOZ
C
C --- VERIFICATION DES VALEURS DES COORDONNEES
C     ----------------------------------------
C
C     VERIFICATION DE LA PRESENCE DES COORDONNEES DANS LA TABLE 'TABCOM'
      CALL TBEXIP ( TABCOM, VALEK(1), EXI1, K8B )
      CALL TBEXIP ( TABCOM, VALEK(2), EXI2, K8B )
      CALL TBEXIP ( TABCOM, VALEK(3), EXI3, K8B )
      IF(.NOT.EXI1 .AND. .NOT.EXI2 .AND. .NOT.EXI3)THEN
          CALL U2MESK('I','POSTRCCM_39',1,TABCOM)
          GOTO 999
      ENDIF

      DO 10 J=1,3
        CALL TBEXVE ( TABREF, VALEK(J), ORDO1, 'V', NBNO1, K8B)
        CALL JEVEUO ( ORDO1, 'L', JORDO1 )
        CALL TBEXVE ( TABCOM, VALEK(J), ORDO2, 'V', NBNO2, K8B)
        CALL JEVEUO ( ORDO2, 'L', JORDO2 )
C       ON COMPARE LES COORDONNEES DE TOUS LES NOEUDS
        IF(PHENOM.EQ.'MECANIQUE')THEN
          CALL ASSERT(NBNO1.EQ.NBNO2)
          DO 20 I=1,NBNO1
            IF(ABS(ZR(JORDO1+I-1)-ZR(JORDO2+I-1)).GT.EPS)THEN
              VALK(1)=TABREF(1:8)
              VALK(2)=TABCOM(1:8)
              VALK(3)=VALEK(J)(1:8)
              VALR(1)=ZR(JORDO1+I-1)
              VALR(2)=ZR(JORDO2+I-1)
              CALL U2MESG('F','POSTRCCM_41',3,VALK,0,IBID,2,VALR)
            ENDIF
 20       CONTINUE
C       ON COMPARE LES COORDONNEES DES NOEUDS EXTREMITES
C       (CAR ON N'A PAS FORCEMENT NBNO1 = NBNO2)
        ELSEIF(PHENOM.EQ.'THERMIQUE')THEN
          DO 40 I=1,2
            V1=ZR(JORDO1+(NBNO1-1)*(I-1))
            V2=ZR(JORDO2+(NBNO2-1)*(I-1))
            IF(ABS(V1-V2).GT.EPS)THEN
              VALK(1)=TABREF(1:8)
              VALK(2)=TABCOM(1:8)
              VALK(3)=VALEK(J)(1:8)
              VALR(1)=V1
              VALR(2)=V2
              CALL U2MESG('F','POSTRCCM_41',3,VALK,0,IBID,2,VALR)
            ENDIF
 40       CONTINUE
        ENDIF
        CALL JEDETR(ORDO1)
        CALL JEDETR(ORDO2)
 10   CONTINUE

C --- VERIFICATION DU NOMBRE DE LIGAMENTS
C     -----------------------------------
      CALL GETVTX ( ' ', 'TYPE_RESU_MECA',1,IARG,1, TYPMEC, N1 )
      CALL TBEXIP ( TABCOM, VALEK(4), EXIST, K8B )
      CALL ASSERT(EXIST)
      CALL TBEXV1 ( TABCOM, VALEK(4), INTIT2, 'V', NBINT2, TYVA)
C     CAS UNITAIRE: 1 SEUL LIGAMENT
      IF(TYPMEC.EQ.'UNITAIRE' .AND. NBINT2.NE.1)THEN
         CALL U2MESG('F','POSTRCCM_40',1,TABCOM,1,NBINT2,0,R8B)
C     CAS EVOLUTION: MEME NOMBRE DE LIGAMENTS
      ELSEIF(TYPMEC.EQ.'EVOLUTION')THEN
         CALL TBEXV1 ( TABREF, VALEK(4), INTIT1, 'V', NBINT1, TYVA)
         IF(NBINT1.NE.NBINT2)THEN
             VALK(1)=TABREF(1:8)
             VALK(2)=TABCOM(1:8)
             VALI(1)=NBINT1
             VALI(2)=NBINT2
             CALL U2MESG('F','POSTRCCM_42',2,VALK,2,VALI,0,R8B)
         ENDIF
         CALL JEDETR(INTIT1)
      ENDIF
      CALL JEDETR(INTIT2)

C --- VERIFICATION DE LA VALEUR DES INSTANTS (CAS 'EVOLUTION')
C     --------------------------------------------------------
      IF(TYPMEC.EQ.'EVOLUTION')THEN
         CALL TBEXIP ( TABCOM, VALEK(5), EXIST, K8B )
         CALL ASSERT(EXIST)
         CALL TBEXVE ( TABREF, VALEK(5), INST1, 'V', NBINS1, K8B)
         CALL JEVEUO ( INST1, 'L', JINST1 )
         CALL TBEXVE ( TABCOM, VALEK(5), INST2, 'V', NBINS2, K8B)
         CALL JEVEUO ( INST2, 'L', JINST2 )
         CALL ASSERT(NBINS1.EQ.NBINS2)
         DO 30 I=1,NBINS1
           IF(ABS(ZR(JINST1+I-1)-ZR(JINST2+I-1)).GT.EPS)THEN
             VALK(1)=TABREF(1:8)
             VALK(2)=TABCOM(1:8)
             VALR(1)=ZR(JINST1+I-1)
             VALR(2)=ZR(JINST2+I-1)
             CALL U2MESG('F','POSTRCCM_43',2,VALK,0,IBID,2,VALR)
           ENDIF
 30      CONTINUE
         CALL JEDETR(INST1)
         CALL JEDETR(INST2)
      ENDIF
C
C
999   CONTINUE
C
      CALL JEDEMA()
C
      END
