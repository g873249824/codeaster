      SUBROUTINE PRSNSP ( MCF, IOCC, TYPCO, COURBE, XNOMCP, 
     +                    NLSMAC, NLSNAC, NCH19, SM, SNORIG, SNEXTR,
     +                    SNFL, SPORIG, SPEXTR, ICHEF )
      IMPLICIT   NONE
      REAL*8              SM, SNORIG(*), SNEXTR(*), SNFL(*),
     +                    SPORIG(*), SPEXTR(*)
      CHARACTER*(*)       MCF
      CHARACTER*8         TYPCO, COURBE, COURB2
      CHARACTER*19        NCH19
      CHARACTER*24        XNOMCP, NLSMAC, NLSNAC
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF POSTRELE  DATE 06/04/2004   AUTEUR DURAND C.DURAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C     OPERATEUR POST_RCCM, MOT CLE FACTEUR "FATIGUE"
C
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
      CHARACTER*32     JEXNUM, JEXNOM
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER      GD, I, IBID, ICHEF, IE, IOCC, IRET, ISD, JCMPCD, N,
     +             JCMPNC, JDESC, JLSMAC, JLSNAC, JNOMCP, JSDEV, JSDLI,
     +             JVEC1, JVEC2, N1, N2, N3, NBCAC, NBCPN, NBMAC, NBNAC,
     +             NBSD
      REAL*8       R8B, TOMAX(6), TEMAX(6)
      CHARACTER*1  TYPAFF
      CHARACTER*2  DIM
      CHARACTER*4  DOCU
      CHARACTER*8  K8B, MAILLA, REPERE
      CHARACTER*16 OPTION
      CHARACTER*19 SDPOST, EVAL, LIEU, SSCH19
      CHARACTER*24 LSCPNC, QUANT, SDLIEU, SDEVAL, LSCPCD
      CHARACTER*24 SDEV, SDLI, SDMOYE
C
C
      COURB2=' '
      CALL JEMARQ()
      CALL JEEXIN(NCH19//'.DESC',IBID)
      IF (IBID.GT.0) THEN
        CALL JELIRA(NCH19//'.DESC','DOCU',N,DOCU)
        CALL JEVEUO(NCH19//'.DESC','L',JDESC)
      ELSE
        CALL JELIRA(NCH19//'.CELD','DOCU',N,DOCU)
        CALL JEVEUO(NCH19//'.CELD','L',JDESC)
      END IF

      GD = ZI(JDESC)
      DIM = '  '
      CALL DISMOI('F','NOM_MAILLA',NCH19,'CHAMP',I,MAILLA,IE)
      TYPAFF = 'N'
C
      LSCPCD = '&&PRSNSP.NOM.CMP.CAND.OC'
      LSCPNC = '&&PRSNSP.NOM.CMP.NCSR.OC'
      CALL JELIRA(JEXNUM(XNOMCP,IOCC),'LONMAX',NBCAC,K8B)
      CALL JEVEUO(JEXNUM(XNOMCP,IOCC),'L',JNOMCP)
      CALL WKVECT(LSCPCD,'V V K8',NBCAC,JCMPCD)
      DO 10, I = 1, NBCAC, 1
         ZK8(JCMPCD + I-1) = ZK8(JNOMCP + I-1)
10    CONTINUE
      CALL RVCPNC ( MCF, IOCC, NCH19, GD, DOCU, NBCAC, LSCPCD, LSCPNC,
     +              REPERE, OPTION, QUANT, IBID, R8B, IRET)
      IF ( IRET .EQ. 0 ) GOTO 9999
C
      DO 722, I = 1, 6
         TOMAX(I) = 0.0D0
         TEMAX(I) = 0.0D0
 722  CONTINUE
C
      QUANT = 'ASTER'
      CALL JELIRA ( LSCPNC, 'LONMAX', NBCPN, K8B )
      CALL JEVEUO ( LSCPNC, 'L', JCMPNC )
C
      SSCH19 = '&&PRSNSP.SOUS.CH.GD'
      IF ( DOCU .EQ. 'CHNO' ) THEN
         CALL JELIRA ( NLSNAC, 'LONMAX', NBNAC, K8B )
         CALL JEVEUO ( NLSNAC, 'L',JLSNAC)
         CALL EXTCHN ( NCH19, K8B, ZI(JLSNAC), ZK8(JCMPNC), NBNAC,
     +                 NBCPN, 'NUMERO', SSCH19, MCF, IOCC )
      ELSE
         CALL JELIRA ( NLSMAC, 'LONMAX', NBMAC, K8B )
         CALL JEVEUO ( NLSMAC, 'L', JLSMAC )
         CALL EXTCHE ( NCH19, K8B, ZI(JLSMAC), ZK8(JCMPNC), NBMAC,
     +                 NBCPN, 'NUMERO', SSCH19, MCF, IOCC )
      ENDIF
C
      SDLIEU = '&&PRSNSP.NOM.VECT.LIEU'
      SDEVAL = '&&PRSNSP.NOM.VECT.EVAL'
C
      CALL RVLIEU ( MAILLA, TYPCO, COURBE, NLSNAC, SDLIEU )
      CALL RVPSTE ( DIM, SDLIEU, SSCH19, SDEVAL, TYPAFF )
      CALL JELIRA ( SDLIEU,'LONMAX',NBSD,K8B )
      CALL JEVEUO ( SDLIEU, 'L', JSDLI )
      CALL JEVEUO ( SDEVAL, 'L', JSDEV )
C
      SDPOST = '&&PRSNSP.SD.FINAL.POST'
      DO 30, ISD = 1, NBSD, 1
         IF ( ISD .GT. 1 ) THEN
            CALL UTDEBM('A','PRSNSP','ON NE TRAITE PAS ')
            CALL UTIMPI('S','LE CHEMIN ',1,ISD)
            CALL UTFINM()
            GOTO 30
         ENDIF
         JVEC1 = 1
         JVEC2 = 1
C
         SDEV = ZK24(JSDEV + ISD-1)
         SDLI = ZK24(JSDLI + ISD-1)
C
         CALL RVCALQ (IOCC,SDEV,ZR(JVEC1),ZR(JVEC2),REPERE,ZK8(JCMPNC),
     +                NBCPN,NBCPN,OPTION,QUANT,SDLI,IBID,R8B,SDPOST,
     +                COURB2)
C
         SDMOYE = '&&PRSNSP.MOYENNE'
         CALL RVPSTM ( SDLI, SDPOST, SDMOYE, TOMAX, TEMAX )
         CALL PRAFFM ( 'SN', SDLI, SDPOST, SDMOYE,
     +                 SNORIG, SNEXTR, SNFL)
         CALL PRAFFE ( SDLI, SDPOST, SPORIG, SPEXTR )
         CALL JEDETR(SDMOYE)
C
         CALL JEDETR(SDPOST//'.VALE')
         CALL JEDETR(SDPOST//'.PADR')
         CALL JEDETR(SDPOST//'.PNBN')
         CALL JEDETR(SDPOST//'.NOCP')
         CALL JEDETR(SDPOST//'.PNCO')
         CALL JEDETR(SDPOST//'.PNSP')
 30   CONTINUE
C
      CALL JELIRA(SDLIEU,'LONMAX',N,K8B)
      CALL JEVEUO(SDLIEU,'L',N1)
      CALL JEVEUO(SDEVAL,'L',N2)
      DO 40, I = 1, N, 1
         LIEU = ZK24(N1 + I-1)(1:19)
         EVAL = ZK24(N2 + I-1)(1:19)
         CALL JEDETR(LIEU//'.ABSC')
         CALL JEDETR(LIEU//'.REFE')
         CALL JEDETR(LIEU//'.DESC')
         CALL JEDETR(LIEU//'.NUME')
         CALL JEDETR(LIEU//'.COOR')
         CALL TUESCH(EVAL)
         CALL JEEXIN(EVAL//'.MAIL',N3)
         IF ( N3 .NE. 0 ) CALL JEDETR(EVAL//'.MAIL')
 40   CONTINUE
      CALL JEDETR(SDLIEU)
      CALL JEDETR(SDEVAL)
 9999 CONTINUE
      CALL JEDETC ( 'V' , '&&PRSNSP' , 1 )
C
      CALL JEDEMA()
      END
