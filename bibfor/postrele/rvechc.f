      SUBROUTINE RVECHC(DIM,SSCH19,SDLIEU,SDEVAL,NBNDF,CLOCF)
      IMPLICIT REAL*8 (A-H,O-Z)
C
      CHARACTER*19 SSCH19,SDEVAL,SDLIEU
      CHARACTER*8  COURBE
      CHARACTER*2  DIM
      INTEGER      NBNDF(6,*),CLOCF(6,4,*)
C
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF POSTRELE  DATE 17/01/97   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     ------------------------------------------------------------------
C     EXTRACTION LE LONG DE SEGMENTS 2D OU 3D ET D' ARC DE CERCLE
C     ------------------------------------------------------------------
C IN  DIM    : K : '1D' OU '2D' OU '3D' (RELIQUAT --> MESSAGE )
C IN  SSCH19 : K : NOM DU SOUS CHAMP DES CMP NECESAIRES
C IN  SDLIEU : K : NOM DE LA SD DU LIEU (MAILLAGE DU LIEU DE POST)
C IN  NBNDF  : I : TABLE(1..6,1..3) NB NOEUD_FACE PAR TYPE_MAILLE
C IN  CLOCF  : I : TABLE(1..6,1..4,1..3) CONEC_LOC_FACE PAR TYPE_MAILLE
C OUT SDEVAL : K : NOM DU SOUS_CHAM_GD PRODUIT
C     ------------------------------------------------------------------
C
      REAL*8     EPSI
      PARAMETER (EPSI = 1.0D-6)
C
      CHARACTER*32 JEXNOM,JEXNUM,JEXATR
C
      INTEGER         ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8          ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16      ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL         ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8     ZK8
      CHARACTER*16    ZK16
      CHARACTER*24    ZK24
      CHARACTER*32    ZK32
      CHARACTER*80    ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*24 INPNBN,INVALE,INPADR,INPCMP,INNOMA,INNUGD,INERRE
      CHARACTER*24 OUPNBN,OUVALE,OUPADR,OUPCMP,OUNOMA,OUNUGD,OUERRE
      CHARACTER*24 NREFE,NABSC,NDESC,NNUME,OUPNCO,OUPNSP,INPNCO,INPNSP
      CHARACTER*24 NMAIL1,NMAIL2,NPAROR,NPAREX
      CHARACTER*24 NFACOR,NFACEX,NCNXOR,NCNXEX,NARTOR,NARTEX
      CHARACTER*4  DOCU,DOCO
      INTEGER      AIPCMP,AIPNCO,ANBNDF,ACLOCF
      INTEGER      AOPNBN,AOVALE,AOPADR,AOPCMP,AOERRE,AOPNCO
      INTEGER      AREFE,ADESC,NBCMP,NBTCMP,AIPNSP,AOPNSP,AARTOR,AARTEX
      INTEGER      AMAIL1,AMAIL2,AFACOR,AFACEX,APAROR,APAREX,ACNXOR
      INTEGER      ADRIN,ADROU,ISD,ANUME,NBCO,NBSP,NBMA3,ACNXEX
      INTEGER      NBPART,NBSGPC,NBOCER,IOCER,IBID,VLCMA3,NBMPST,NBNPST
      INTEGER      N1,IPART,PTADR,ICNXOR,ICNXEX,J,I,K,LONG
      LOGICAL      CHPELM
C
      CHARACTER*1 CBID
      CHARACTER*1 K1BID
      DATA CBID/' '/
C
C======================================================================
C
      CALL JEMARQ()
      INPNBN  = SSCH19//'.PNBN'
      INPCMP  = SSCH19//'.PCMP'
      INPNCO  = SSCH19//'.PNCO'
      INPNSP  = SSCH19//'.PNSP'
      INNOMA  = SSCH19//'.NOMA'
      INNUGD  = SSCH19//'.NUGD'
      OUVALE  = SDEVAL//'.VALE'
      OUPNBN  = SDEVAL//'.PNBN'
      OUPADR  = SDEVAL//'.PADR'
      OUPCMP  = SDEVAL//'.PCMP'
      OUPNCO  = SDEVAL//'.PNCO'
      OUPNSP  = SDEVAL//'.PNSP'
      OUNOMA  = SDEVAL//'.NOMA'
      OUNUGD  = SDEVAL//'.NUGD'
      OUERRE  = SDEVAL//'.ERRE'
      NABSC   = SDLIEU//'.ABSC'
      NREFE   = SDLIEU//'.REFE'
      NDESC   = SDLIEU//'.DESC'
      NNUME   = SDLIEU//'.NUME'
      CALL JELIRA(NREFE,'DOCU',IBID,DOCU)
      CALL JEVEUO(NREFE,'L',AREFE)
      CALL JEVEUO(NDESC,'L',ADESC)
      CALL JEVEUO(NNUME,'L',ANUME)
      CALL JELIRA(NABSC,'NMAXOC',NBPART, CBID)
      ISD    = ZI(ANUME)
      NBNPST = 0
      NBMPST = 0
      NBCMP  = 0
      DO 10, IPART = 1, NBPART, 1
         CALL JELIRA(JEXNUM(NABSC,IPART),'LONMAX',N1,K1BID)
         NBNPST = NBNPST + N1
10    CONTINUE
      NBMPST = NBNPST - NBPART
      CALL JEVEUO(INPCMP,'L',AIPCMP)
      CALL JELIRA(INPCMP,'LONMAX',NBTCMP,K1BID)
      CALL WKVECT(OUPCMP,'V V I',NBTCMP,AOPCMP)
      DO 20, I = 1, NBTCMP, 1
         NBCMP = NBCMP + MIN(ZI(AIPCMP + I-1),1)
         ZI(AOPCMP + I-1) = ZI(AIPCMP + I-1)
20    CONTINUE
      CALL JECREO(OUNOMA,'V E K8')
      CALL JEVEUO(OUNOMA,'E',ADROU)
      CALL JEVEUO(INNOMA,'L',ADRIN)
      ZK8(ADROU) = ZK8(ADRIN)
      CALL JECREO(OUNUGD,'V E I')
      CALL JEVEUO(OUNUGD,'E',ADROU)
      CALL JEVEUO(INNUGD,'L',ADRIN)
      ZI(ADROU) = ZI(ADRIN)
      COURBE    = ZK8(AREFE)
      IF ( (DOCU .EQ. 'SGTD') .OR. (DOCU .EQ. 'ARCC') ) THEN
         NMAIL1 = COURBE//'.MAIL1'
         NMAIL2 = COURBE//'.MAIL2'
         NPAROR = COURBE//'.PAROR'
         NPAREX = COURBE//'.PAREX'
         NFACOR = COURBE//'.FACOR'
         NFACEX = COURBE//'.FACEX'
         NCNXOR = COURBE//'.CNXOR'
         NCNXEX = COURBE//'.CNXEX'
         CALL JEVEUO(JEXNUM(NMAIL1,ISD),'L',AMAIL1)
         CALL JEVEUO(JEXNUM(NMAIL2,ISD),'L',AMAIL2)
         CALL JEVEUO(JEXNUM(NPAROR,ISD),'L',APAROR)
         CALL JEVEUO(JEXNUM(NPAREX,ISD),'L',APAREX)
         CALL JEVEUO(JEXNUM(NFACOR,ISD),'L',AFACOR)
         CALL JEVEUO(JEXNUM(NFACEX,ISD),'L',AFACEX)
         CALL JEVEUO(JEXNUM(NCNXOR,ISD),'L',ACNXOR)
         CALL JEVEUO(JEXNUM(NCNXEX,ISD),'L',ACNXEX)
      ELSE IF ( DOCU .EQ. 'SGT3' ) THEN
         CALL JEVEUO(COURBE//'.NSDS','L',ADRIN)
         NMAIL2 = ZK24(ADRIN + ISD-1)
         NMAIL1 = NMAIL2(1:13)//'.MAIL      '
         NPAROR = NMAIL2(1:13)//'.CREFF.ORIG'
         NPAREX = NMAIL2(1:13)//'.CREFF.EXTR'
         NFACOR = NMAIL2(1:13)//'.FACE .ORIG'
         NFACEX = NMAIL2(1:13)//'.FACE .EXTR'
         NCNXOR = NMAIL2(1:13)//'.CONEX.ORIG'
         NCNXEX = NMAIL2(1:13)//'.CONEX.EXTR'
         NARTOR = NMAIL2(1:13)//'.ARETE.ORIG'
         NARTEX = NMAIL2(1:13)//'.ARETE.EXTR'
         CALL JEVEUO(NPAROR,'L',APAROR)
         CALL JEVEUO(NPAREX,'L',APAREX)
         CALL JEVEUO(NFACOR,'L',AFACOR)
         CALL JEVEUO(NFACEX,'L',AFACEX)
         CALL JEVEUO(NCNXOR,'L',ACNXOR)
         CALL JEVEUO(NCNXEX,'L',ACNXEX)
         CALL JEVEUO(NARTOR,'L',AARTOR)
         CALL JEVEUO(NARTEX,'L',AARTEX)
         CALL JEVEUO(JEXATR(NMAIL1,'LONCUM'),'L',VLCMA3)
         CALL JEVEUO(JEXNUM(NMAIL1,1),'L',AMAIL1)
      ELSE
      ENDIF
      CALL JEEXIN(INPNBN,N1)
      IF ( N1 .NE. 0 ) THEN
         CALL JEVEUO(INPNCO,'L',AIPNCO)
         CALL JEVEUO(INPNSP,'L',AIPNSP)
         CALL WKVECT(OUPNBN,'V V I',NBMPST,AOPNBN)
         CALL WKVECT(OUPNCO,'V V I',NBMPST,AOPNCO)
         CALL WKVECT(OUPNSP,'V V I',NBMPST,AOPNSP)
         NBCO = 1000
         NBSP = 1000
         IF ( (DOCU .EQ. 'SGTD') .OR. (DOCU .EQ. 'ARCC') ) THEN
            DO 40, I = 1, NBMPST, 1
               NBSP = MIN(NBSP,ZI(AIPNSP + ZI(AMAIL1 + I-1)-1))
               NBCO = MIN(NBCO,ZI(AIPNCO + ZI(AMAIL1 + I-1)-1))
               IF ( ZI(AMAIL2 + I-1) .GT. 0 ) THEN
                  NBSP = MIN(NBSP,ZI(AIPNSP + ZI(AMAIL2 + I-1)-1))
                  NBCO = MIN(NBCO,ZI(AIPNCO + ZI(AMAIL2 + I-1)-1))
               ENDIF
40          CONTINUE
            DO 41, I = 1, NBMPST, 1
               ZI(AOPNBN + I-1) = 2
               ZI(AOPNSP + I-1) = NBSP
               ZI(AOPNCO + I-1) = NBCO
41          CONTINUE
         ELSE IF ( DOCU .EQ. 'SGT3' ) THEN
            DO 45, I = 1, NBMPST, 1
               J     = ZI(VLCMA3 + I-1)
               NBMA3 = ZI(VLCMA3 + I) - J
               DO 46, K = 1, NBMA3, 1
                  NBSP  = MIN(NBSP,ZI(AIPNSP + ZI(AMAIL1+J+K-2)-1))
                  NBCO  = MIN(NBCO,ZI(AIPNCO + ZI(AMAIL1+J+K-2)-1))
46             CONTINUE
45          CONTINUE
            DO 47, I = 1, NBMPST, 1
               ZI(AOPNBN + I-1) = 2
               ZI(AOPNSP + I-1) = NBSP
               ZI(AOPNCO + I-1) = NBCO
47          CONTINUE
         ELSE
         ENDIF
         LONG   =  2*NBCMP*NBSP*NBCO
         NBADR  =  NBMPST
         NBOCER =  NBMPST
         DOCO   = 'CHLM'
      ELSE
         LONG   =  NBCMP
         NBADR  =  NBNPST
         NBOCER =  NBNPST
         DOCO   = 'CHNO'
         NBCO   =  1
         NBSP   =  1
      ENDIF
      CALL JECREC(OUERRE,'V V I','NU','DISPERSE','VARIABLE',NBOCER)
      DO 30, IOCER = 1, NBOCER, 1
         CALL JECROC(JEXNUM(OUERRE,IOCER))
         CALL JEECRA(JEXNUM(OUERRE,IOCER),'LONMAX',NBCMP,' ')
         CALL JEVEUO(JEXNUM(OUERRE,IOCER),'E',AOERRE)
         DO 31, I = 1, NBCMP, 1
            ZI(AOERRE + I-1) = 0
31       CONTINUE
30    CONTINUE
      CALL WKVECT(OUVALE,'V V R',LONG*NBADR,AOVALE)
      CALL WKVECT(OUPADR,'V V I',NBADR,AOPADR)
      CALL JEECRA(OUVALE,'DOCU',IBID,DOCO)
      ZI(AOPADR + 1-1) = 1
      DO 60, I = 1, NBADR-1, 1
         ZI(AOPADR + I+1-1) = ZI(AOPADR + I-1) + LONG
60    CONTINUE
      PTADR = 1
      DO 100, IPART = 1, NBPART, 1
         ICNXOR = ZI(ACNXOR + IPART-1)
         ICNXEX = ZI(ACNXEX + IPART-1)
         NBSGPC = ICNXEX - ICNXOR + 1
         IF ( DOCU .EQ. 'SGTD' ) THEN
            CALL RVECHD(DIM,EPSI,SSCH19,NBCMP,NBCO,NBSP,
     +                  ZR(APAROR+ICNXOR-1),
     +                  ZR(APAREX+ICNXOR-1),ZI(AMAIL1+ICNXOR-1),
     +                  ZI(AMAIL2+ICNXOR-1),ZI(AFACOR+ICNXOR-1),
     +                  ZI(AFACEX+ICNXOR-1),NBSGPC,PTADR,
     +                  ZR(AOVALE))
         ELSE IF ( DOCU .EQ. 'ARCC' ) THEN
            CALL RVECHA(DIM,EPSI,SSCH19,NBCMP,NBCO,NBSP,
     +                  ZR(APAROR+ICNXOR-1),
     +                  ZR(APAREX+ICNXOR-1),ZI(AMAIL1+ICNXOR-1),
     +                  ZI(AFACOR+ICNXOR-1),
     +                  ZI(AFACEX+ICNXOR-1),NBSGPC,PTADR,
     +                  ZR(AOVALE))
         ELSE IF ( DOCU .EQ. 'SGT3' ) THEN
            CALL RVECHS(EPSI,SSCH19,NBCMP,NBCO,NBSP,ZI(AMAIL1),
     +                  ZI(VLCMA3+ICNXOR-1),
     +                  ZI(AFACOR+ICNXOR-1),ZI(AFACEX+ICNXOR-1),
     +                  ZI(AARTOR+ICNXOR-1),ZI(AARTEX+ICNXOR-1),
     +                  ZR(APAROR+2*(ICNXOR-1)),ZR(APAREX+2*(ICNXOR-1)),
     +                  NBSGPC,PTADR,ZR(AOVALE),NBNDF,CLOCF)
         ELSE
C           /* AUTRE CAS COURBE */
         ENDIF
100   CONTINUE
      CALL JEDEMA()
      END
