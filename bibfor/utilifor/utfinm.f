      SUBROUTINE UTFINM
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILIFOR  DATE 17/10/2005   AUTEUR MCOURTOI M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
C     ==================================================================
      INTEGER          MXCOLS , ITABU , LIGCOU , COLCOU , IDF
      COMMON /UTINIP/  MXCOLS , ITABU , LIGCOU , COLCOU , IDF
      INTEGER          NT
      PARAMETER      ( NT = 10 )
      CHARACTER*132    TAMPON
      COMMON /UTTAMP/  TAMPON(NT)
      INTEGER          LDEB
      COMMON /UTDEB /  LDEB
      INTEGER          NEXCEP
      COMMON /UTEXC /  NEXCEP
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16            ZK16
      CHARACTER*24                    ZK24
      CHARACTER*32                            ZK32
      CHARACTER*80                                    ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C     ------------------------------------------------------------------
      CHARACTER*132  K132B
      CHARACTER*16   COMPEX
      INTEGER        ICMD, L, LOUT, IMAAP
      INTEGER        I, LC, LXLGUT, IBID
      LOGICAL        LEXC
C     ------------------------------------------------------------------
C     -- EVITER UNE EVENTUELLE RECURSIVITE
      CALL JEVEMA(IMAAP)
      IF (IMAAP.GE.200) CALL JEFINI('ERREUR')
      CALL JEMARQ()

C     EST-ON DANS LE CAS UTDEBM/UTFINM ?
      LIGCOU = LIGCOU + 1
      IF ( LIGCOU .GT. NT ) THEN
         CALL UTVTAM
         LIGCOU = 1
      ENDIF
C     ------------------------------------------------------------------
      CALL ONERRF(' ', COMPEX, LOUT)
      LEXC= IDF.EQ.2 .AND. COMPEX(1:LOUT).EQ.'EXCEPTION'

C     UTVTAM VIDE LE TAMPON. ON LE SAUVE DANS K132B
      LC=LXLGUT(TAMPON(2))
      K132B=TAMPON(2)(1:LC)//'...'
C     TAMPON(2) DOIT SUFFIR LA SUITE ETANT IMPRIME AVANT   //TAMPON(3)

      IF (LEXC) THEN
C     -- SI L'UTILISATEUR L'A DEMANDE, ON LEVE L'EXCEPTION FATALERROR
C        AU LIEU D'ARRETER BRUTALEMENT LE CODE (ABORT).
         NEXCEP=20
      ENDIF
C
C     IMPRESSION DU MESSAGE
      CALL UTVTAM
C
      IF ( IDF.EQ.6 .OR. IDF.EQ.8 .OR. LEXC ) THEN
         CALL JEDETV()

C --- SI UNE EXCEPTION EST LEVEE
C     ON LAISSE LE CONCEPT DANS SON ETAT PEUT-ETRE "INSTABLE"
C     A L'UTILISATEUR DE LE DETRUIRE EVENTUELLEMENT DANS LE EXCEPT
         CALL GCUOPR(2, ICMD)

C        REMONTER LES N JEDEMA COURT-CIRCUITES
         CALL JEVEMA(IMAAP)
         DO 10 I=IMAAP, 1, -1
            CALL JEDEMA()
 10      CONTINUE
C
C        ON REMONTE UNE EXCEPTION AU LIEU DE FERMER LES BASES
         CALL UEXCEP(NEXCEP,K132B)
      ELSEIF ( IDF .EQ. 2 ) THEN
C     -- ABORT SUR ERREUR <F> "ORDINAIRE"
         CALL JXVERI('ERREUR',' ')
         CALL JEFINI('ERREUR')
      ENDIF

      LIGCOU = 0
      COLCOU = 0
      IDF    = 0
C
      CALL JEDEMA()
      END
