      SUBROUTINE GTREXC( COMPQ, N, T, LDT, Q, LDQ, IFST, ILST, INFO )
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILIFOR  DATE 31/01/2005   AUTEUR REZETTE C.REZETTE 
C ======================================================================
C COPYRIGHT (C) LAPACK
C ======================================================================
C  -- LAPACK ROUTINE (VERSION 2.0) --
C     UNIV. OF TENNESSEE, UNIV. OF CALIFORNIA BERKELEY, NAG LTD.,
C     COURANT INSTITUTE, ARGONNE NATIONAL LAB, AND RICE UNIVERSITY
C     MARCH 31, 1993
C
C  PURPOSE
C  =======
C
C  GTREXC REORDERS THE SCHUR FACTORIZATION OF A COMPLEX MATRIX
C  A = Q*T*Q**H, SO THAT THE DIAGONAL ELEMENT OF T WITH ROW INDEX IFST
C  IS MOVED TO ROW ILST.
C
C  THE SCHUR FORM T IS REORDERED BY A UNITARY SIMILARITY TRANSFORMATION
C  Z**H*T*Z, AND OPTIONALLY THE MATRIX Q OF SCHUR VECTORS IS UPDATED BY
C  POSTMULTPLYING IT WITH Z.
C
C  ARGUMENTS
C  =========
C
C  COMPQ   (INPUT) CHARACTER*1
C          = 'V':  UPDATE THE MATRIX Q OF SCHUR VECTORS;
C          = 'N':  DO NOT UPDATE Q.
C
C  N       (INPUT) INTEGER
C          THE ORDER OF THE MATRIX T. N >= 0.
C
C  T       (INPUT/OUTPUT) COMPLEX*16 ARRAY, DIMENSION (LDT,N)
C          ON ENTRY, THE UPPER TRIANGULAR MATRIX T.
C          ON EXIT, THE REORDERED UPPER TRIANGULAR MATRIX.
C
C  LDT     (INPUT) INTEGER
C          THE LEADING DIMENSION OF THE ARRAY T. LDT >= MAX(1,N).
C
C  Q       (INPUT/OUTPUT) COMPLEX*16 ARRAY, DIMENSION (LDQ,N)
C          ON ENTRY, IF COMPQ = 'V', THE MATRIX Q OF SCHUR VECTORS.
C          ON EXIT, IF COMPQ = 'V', Q HAS BEEN POSTMULTIPLIED BY THE
C          UNITARY TRANSFORMATION MATRIX Z WHICH REORDERS T.
C          IF COMPQ = 'N', Q IS NOT REFERENCED.
C
C  LDQ     (INPUT) INTEGER
C          THE LEADING DIMENSION OF THE ARRAY Q.  LDQ >= MAX(1,N).
C
C  IFST    (INPUT) INTEGER
C  ILST    (INPUT) INTEGER
C          SPECIFY THE REORDERING OF THE DIAGONAL ELEMENTS OF T:
C          THE ELEMENT WITH ROW INDEX IFST IS MOVED TO ROW ILST BY A
C          SEQUENCE OF TRANSPOSITIONS BETWEEN ADJACENT ELEMENTS.
C          1 <= IFST <= N; 1 <= ILST <= N.
C
C  INFO    (OUTPUT) INTEGER
C          = 0:  SUCCESSFUL EXIT
C          < 0:  IF INFO = -I, THE I-TH ARGUMENT HAD AN ILLEGAL VALUE
C
C  =====================================================================
C-----------------------------------------------------------------------
C ASTER INFORMATION
C 14/01/2000 TOILETTAGE DU FORTRAN SUIVANT LES REGLES ASTER,
C            REMPLACEMENT DE 1 RETURN PAR GOTO 1000,
C            IMPLICIT NONE.
C-----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE
C
C     .. SCALAR ARGUMENTS ..
      CHARACTER*1        COMPQ
      INTEGER            IFST, ILST, INFO, LDQ, LDT, N
C     ..
C     .. ARRAY ARGUMENTS ..
      COMPLEX*16         Q( LDQ, * ), T( LDT, * )
C     ..
C
C     .. LOCAL SCALARS ..
      LOGICAL            WANTQ
      INTEGER            K, M1, M2, M3
      REAL*8             CS
      COMPLEX*16         SN, T11, T22, TEMP
C     ..
C     .. EXTERNAL FUNCTIONS ..
      LOGICAL            LSAME
C     ..
C     .. EXECUTABLE STATEMENTS ..
C
C     DECODE AND TEST THE INPUT PARAMETERS.
C
      INFO = 0
      WANTQ = LSAME( COMPQ, 'V' )
      IF( .NOT.LSAME( COMPQ, 'N' ) .AND. .NOT.WANTQ ) THEN
         INFO = -1
      ELSE IF( N.LT.0 ) THEN
         INFO = -2
      ELSE IF( LDT.LT.MAX( 1, N ) ) THEN
         INFO = -4
      ELSE IF( LDQ.LT.1 .OR. ( WANTQ .AND. LDQ.LT.MAX( 1, N ) ) ) THEN
         INFO = -6
      ELSE IF( IFST.LT.1 .OR. IFST.GT.N ) THEN
         INFO = -7
      ELSE IF( ILST.LT.1 .OR. ILST.GT.N ) THEN
         INFO = -8
      END IF
      IF( INFO.NE.0 ) THEN
         CALL XERBLA( 'GTREXC', -INFO )
         GOTO 1000
      END IF
C
C     QUICK RETURN IF POSSIBLE
C
      IF( N.EQ.1 .OR. IFST.EQ.ILST )
     $   GOTO 1000
C
      IF( IFST.LT.ILST ) THEN
C
C        MOVE THE IFST-TH DIAGONAL ELEMENT FORWARD DOWN THE DIAGONAL.
C
         M1 = 0
         M2 = -1
         M3 = 1
      ELSE
C
C        MOVE THE IFST-TH DIAGONAL ELEMENT BACKWARD UP THE DIAGONAL.
C
         M1 = -1
         M2 = 0
         M3 = -1
      END IF
C
      DO 10 K = IFST + M1, ILST + M2, M3
C
C        INTERCHANGE THE K-TH AND (K+1)-TH DIAGONAL ELEMENTS.
C
         T11 = T( K, K )
         T22 = T( K+1, K+1 )
C
C        DETERMINE THE TRANSFORMATION TO PERFORM THE INTERCHANGE.
C
         CALL GLARTG( T( K, K+1 ), T22-T11, CS, SN, TEMP )
C
C        APPLY TRANSFORMATION TO THE MATRIX T.
C
         IF( K+2.LE.N )
     $      CALL ZROT( N-K-1, T( K, K+2 ), LDT, T( K+1, K+2 ), LDT, CS,
     $                 SN )
         CALL ZROT( K-1, T( 1, K ), 1, T( 1, K+1 ), 1, CS,
     $              DCONJG( SN ) )
C
         T( K, K ) = T22
         T( K+1, K+1 ) = T11
C
         IF( WANTQ ) THEN
C
C           ACCUMULATE TRANSFORMATION IN THE MATRIX Q.
C
            CALL ZROT( N, Q( 1, K ), 1, Q( 1, K+1 ), 1, CS,
     $                 DCONJG( SN ) )
         END IF
C
   10 CONTINUE
C
 1000 CONTINUE
C
C     END OF GTREXC
C
      END
