      SUBROUTINE MLTACP(N,NCOL,ADPER,MATPER,MATFI,LOCAL)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 07/01/2002   AUTEUR JFBHHUC C.ROSE 
C RESPONSABLE JFBHHUC C.ROSE
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C VERSION COMPLEXE DE MLTAFP
      IMPLICIT NONE
      INTEGER N,NCOL,ADPER(*),LOCAL(*)
      COMPLEX*16 MATPER(*),MATFI(*)
C     VARIABLES LOCALES
      INTEGER DECP1,DECP2,DECF1,DECF2,J,I,NI,DECP
      INTEGER IP
      DECF1 = 1
      DECF2 = N
      IF(MOD(NCOL,2).EQ.0) THEN
      DO 120 I = 1,NCOL ,2
          DECP1 = ADPER(LOCAL(I))
          MATPER(DECP1) = MATPER(DECP1) + MATFI(DECF1)
          DECP1 = DECP1 - LOCAL(I)
          DECP2 = ADPER(LOCAL(I+1)) - LOCAL(I+1)
          NI = N - I
CCDIR$ IVDEP
          DO 110 J = 1,NI
C             ID1 = DECP1 + LOCAL(J+I)
C             ID2 = DECP2 + LOCAL(J+I)
C             JD1 = DECF1+J
C             JD2 = DECF2 +J
              MATPER(DECP1+LOCAL(J+I)) = MATPER(DECP1+LOCAL(J+I)) +
     +                                   MATFI(DECF1+J)
              MATPER(DECP2+LOCAL(J+I)) = MATPER(DECP2+LOCAL(J+I)) +
     +                                   MATFI(DECF2+J)
  110     CONTINUE
          DECF1 = DECF1 + 2*NI + 1
          DECF2 = DECF2 + 2*NI - 1
  120 CONTINUE
        ELSE
           DO 140 I=1,NCOL-1,2
              DECP1 = ADPER(LOCAL(I))
              MATPER(DECP1) = MATPER(DECP1) + MATFI(DECF1)
              DECP1 = DECP1 - LOCAL(I)
              DECP2 = ADPER(LOCAL(I+1)) - LOCAL(I+1)
              NI = N - I
CCDIR$ IVDEP
              DO 150 J = 1,NI
C             ID1 = DECP1 + LOCAL(J+I)
C             ID2 = DECP2 + LOCAL(J+I)
C             JD1 = DECF1+J
C             JD2 = DECF2 +J
              MATPER(DECP1+LOCAL(J+I)) = MATPER(DECP1+LOCAL(J+I)) +
     +                                   MATFI(DECF1+J)
              MATPER(DECP2+LOCAL(J+I)) = MATPER(DECP2+LOCAL(J+I)) +
     +                                   MATFI(DECF2+J)
  150     CONTINUE
          DECF1 = DECF1 + 2*NI + 1
          DECF2 = DECF2 + 2*NI - 1
 140      CONTINUE
C       TRAVAIL SUR LA COLONNE RESTANTE
          DECP = ADPER(LOCAL(NCOL)) - LOCAL(NCOL)
          DO 130 I = NCOL,N
              IP = DECP + LOCAL(I)
              MATPER(IP) = MATPER(IP) + MATFI(DECF1+I-NCOL)
  130     CONTINUE
      END IF
      END
