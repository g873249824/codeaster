      SUBROUTINE MLTACF(N,NCOL,ADPER,MATPER,MATFI,LOCAL,P)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 08/06/2009   AUTEUR PELLET J.PELLET 
C RESPONSABLE JFBHHUC C.ROSE
C     TOLE CRP_4
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C VERSION COMPLEXE DE MLTAFF
      IMPLICIT NONE
      INTEGER*4 LOCAL(*)
      INTEGER N,NCOL,ADPER(*),P
      COMPLEX*16 MATPER(*),MATFI(*)
C     VARIABLES LOCALES
      INTEGER DECP1,DECP2,DECF1,DECF2,J,I,NI,ID1,ID2,JD1,JD2,DECP
      INTEGER IP,DECP0
      DECF1 = 1 + (N+ (N-NCOL+1))*NCOL/2
      DECF2 = N - NCOL + (N+ (N-NCOL+1))*NCOL/2
      DECP0 = ADPER(P+1) - 1
      IF (MOD((N-NCOL),2).EQ.0) THEN
          DO 120 I = NCOL + 1,N,2
              DECP1 = ADPER(LOCAL(I)) - DECP0
              MATPER(DECP1) = MATPER(DECP1) + MATFI(DECF1)
              DECP1 = DECP1 - LOCAL(I)
              DECP2 = ADPER(LOCAL(I+1)) - LOCAL(I+1) - DECP0
              NI = N - I
CCDIR$ IVDEP
              DO 110 J = 1,NI
                  ID1 = DECP1 + LOCAL(J+I)
                  ID2 = DECP2 + LOCAL(J+I)
                  JD1 = DECF1 + J
                  JD2 = DECF2 + J
                  MATPER(ID1) = MATPER(ID1) + MATFI(JD1)
                  MATPER(ID2) = MATPER(ID2) + MATFI(JD2)
  110         CONTINUE
              DECF1 = DECF1 + 2*NI + 1
              DECF2 = DECF2 + 2*NI - 1
  120     CONTINUE
      ELSE
          DO 140 I = NCOL + 1,N - 1,2
              DECP1 = ADPER(LOCAL(I)) - DECP0
              MATPER(DECP1) = MATPER(DECP1) + MATFI(DECF1)
              DECP1 = DECP1 - LOCAL(I)
              DECP2 = ADPER(LOCAL(I+1)) - LOCAL(I+1) - DECP0
              NI = N - I
CCDIR$ IVDEP
              DO 130 J = 1,NI
                  ID1 = DECP1 + LOCAL(J+I)
                  ID2 = DECP2 + LOCAL(J+I)
                  JD1 = DECF1 + J
                  JD2 = DECF2 + J
                  MATPER(ID1) = MATPER(ID1) + MATFI(JD1)
                  MATPER(ID2) = MATPER(ID2) + MATFI(JD2)
  130         CONTINUE
              DECF1 = DECF1 + 2*NI + 1
              DECF2 = DECF2 + 2*NI - 1
  140     CONTINUE
C       TRAVAIL SUR LA COLONNE RESTANTE
          DECP = ADPER(LOCAL(N)) - DECP0
          IP = DECP
          MATPER(IP) = MATPER(IP) + MATFI(DECF1)
      END IF
      END
