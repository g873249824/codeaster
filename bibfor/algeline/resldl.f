      SUBROUTINE RESLDL(NOMMAT,VCINE,CHAMNO)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*(*)     NOMMAT,VCINE,CHAMNO
      CHARACTER*19      NOMMA2
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 21/02/96   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     RESOLUTION EN PLACE DU SYSTEME    "NOMMAT" * X = "CHAMNO"
C                                       AVEC X = U0 SUR G
C     ------------------------------------------------------------------
C     IN  NOMMAT  : CH19 : NOM DE LA MATRICE FACTORISEE
C     IN  VCINE   : CH8 : NOM DU CHAM_NO DE CHARGEMENT CINEMATIQUE
C                         ASSOCIE A LA CONTRANITE X = U0 SUR G
C                         SI IL N'Y A PAS DE CONTRAINTE VCINE =' '
C     VAR CHAMNO  : CH8 : (EN ENTREE) NOM DU SECOND MEMBRE
C                     (EN SORTIE) NOM DU SECOND MEMBRE
C     ------------------------------------------------------------------
C     REMARQUE: LA VARIABLE  "CHAMNO"  EST EN FAIT INCHANGEE
C               C'EST "CHAMNO              .VALE" QUI EST ALTERE
C     ------------------------------------------------------------------
C     VERIFICATIONS :
C     1) SI VCINE = ' ' : ERREUR SI LE NOMBRE DE DDLS IMPOSES ELIMINES
C                         ASSOCIES A LA MATRICE EST /=0
C     2) SI VCINE/= ' ' : ERREUR SI LE NOMBRE DE DDLS IMPOSES ELIMINES
C                         ASSOCIES A LA MATRICE EST =0
C     ------------------------------------------------------------------
C
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CHARACTER*8 TYPE
      CHARACTER*19 VCI19
      CHARACTER*24 VALE
      COMPLEX*16   CBID
      DATA VALE/'                   .VALE'/
C     ------------------------------------------------------------------
C
      CALL JEMARQ()
      VCI19 = VCINE
      NOMMA2=NOMMAT
      CALL MTDSCR(NOMMA2)
      CALL JEVEUO(NOMMA2(1:19)//'.&INT','E',LMAT)
      IF (LMAT.EQ.0) THEN
         CALL UTMESS('F','RESLDL_1','ERREUR : LMAT EST NUL')
      ELSE
        NIMPO = ZI(LMAT+7)
        IF ( VCI19.EQ.' ')THEN
          IF (NIMPO.NE.0) CALL UTMESS('F','RESLDL_2','LA MATRICE '
     +     //'POSSEDE DES DDLS IMPOSES ELIMINES: IL FAUT UN VCINE')
          IDVALC = 0
        ELSE
C
C- CE TEST EST TEMPORAIREMENT "VIRE" CAR DANS LES COMMANDES GLOBALES
C- ON ATTRIBUE DES NOMS AUX CHAM_NO DUS AUX CHARGES CINEMATIQUES
C- ALORS QUE CES DERNIERES PEUVENT NE PAS ETRE DEFINIES
C
C          IF (NIMPO.EQ.0) CALL UTMESS('F','RESLDL_3','LA MATRICE '
C     +     //'N"A PAS DE DDL IMPOSE ELIMINE ON NE PEUT DONC PAS'
C     +     //' PRENDRE EN COMPTE VCINE')
          CALL JEVEUO(VCI19//'.VALE','L',IDVALC)
          CALL JELIRA(VCI19//'.VALE','TYPE',IBID,TYPE)
          IF (((TYPE(1:1).EQ.'R').AND.(ZI(LMAT+3).NE.1)).OR.
     +       ((TYPE(1:1).EQ.'C').AND.(ZI(LMAT+3).NE.2))) THEN
            CALL UTMESS('F','RESLDL_4',' LA MATRICE ET LE VECTEUR '
     +      //'CINEMATIQUE NE CONTIENNENT PAS DES VALEURS DE MEME TYPE')
          ENDIF
        ENDIF
        VALE(1:19) = CHAMNO
        CALL JEVEUO(VALE,'E',LXSOL)
        CALL JELIRA(VALE,'TYPE',IBID,TYPE)
        IF (TYPE(1:1).EQ.'R') THEN
          IF (ZI(LMAT+3).NE.1) THEN
            CALL UTMESS('F','RESLDL_5','LA MATRICE ET LE SECOND MEMBRE'
     +       //' NE CONTIENNENT PAS DES VALEURS DE MEME TYPE')
          ENDIF
           CALL MRCONL(LMAT,0,'R',ZR(LXSOL),1)
          IF (IDVALC.NE.0) THEN
            CALL CSMBGG(LMAT,ZR(LXSOL),ZR(IDVALC),CBID,CBID,'R')
          ENDIF
          CALL RLDLGG(LMAT,ZR(LXSOL),CBID,1)
C
C- ON MULTIPLIE LE CHAM_NO SOLUTION PAR LE VECTEUR DE PRECONDTIONNEMENT
C- DES MULTIPLICATEURS DE LAGRANGE DE MANIERE A AVOIR LES REACTIONS
C- "JUSTES" (I.E. LES VALEURS DES MULTIPLICATEURS DE LAGRANGE)
C
           CALL MRCONL(LMAT,0,'R',ZR(LXSOL),1)
        ELSEIF (TYPE(1:1).EQ.'C') THEN
          IF (ZI(LMAT+3).NE.2) THEN
            CALL UTMESS('F','RESLDL_6','LA MATRICE ET LE SECOND MEMBRE'
     +       //' NE CONTIENNENT PAS DES VALEURS DE MEME TYPE')
          ENDIF
          CALL MCCONL(LMAT,0,'C',ZC(LXSOL),1)
          IF (IDVALC.NE.0) THEN
            CALL CSMBGG(LMAT,RBID,RBID,ZC(IDVALC),ZC(LXSOL),'C')
          ENDIF
          CALL RLDLGG(LMAT,RBID,ZC(LXSOL),1)
C
C- ON MULTIPLIE LE CHAM_NO SOLUTION PAR LE VECTEUR DE PRECONDTIONNEMENT
C- DES MULTIPLICATEURS DE LAGRANGE DE MANIERE A AVOIR LES REACTIONS
C- "JUSTES" (I.E. LES VALEURS DES MULTIPLICATEURS DE LAGRANGE)
C
          CALL MCCONL(LMAT,0,'C',ZC(LXSOL),1)
        ENDIF
      END IF
      CALL JEDEMA()
      END
