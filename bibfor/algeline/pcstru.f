      SUBROUTINE PCSTRU(N,IN,IP,ICPL,ICPC,ICPD,ICPCX,ICPLX,NIVEAU,
     &                  COMPLT,LCA,IMP,IER)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_4
      IMPLICIT REAL*8 (A-H,O-Z)

C----------------------------------------------------------------------
C   ENTREE
C   N          : TAILLE DE A
C   IN,IP      : MATRICE D'ENTREE FORMAT SYMETRIQUE
C   LCA        : LONGUEUR MAXI MATRICE FACTORISEE

C   SORTIE
C   ICPL,ICPC  : MATRICE APRES REMPLISSAGE FORMAT SYMETRIQUE
C   COMPLT    : FALSE OU TRUE
C   IER        : =0 TAILLE LCA SUFFISANTE
C              : =NN TAILLE LCA INSUFFISANTE IL FAUT NN

C   TRAVAIL
C   ICPD       : POINTEUR SUR LA DIAG DE LU
C   ICPCX      : IDEM ICPC
C   ICPLX      : IDEM ICPL
C----------------------------------------------------------------------
C----------------------------------------------------------------------
      INCLUDE 'jeveux.h'
      INTEGER IN(N)
      INTEGER*4 IP(*),ICPC(*)
      INTEGER ICPL(0:N),ICPD(N)
      INTEGER ICPLX(0:N),ICPCX(*)

      LOGICAL COMPLT
C----------------------------------------------------------------------

C     TDEB = SECOND()
C     WRITE (6,1500)
C     WRITE (6,1000) NIVEAU,LCA
C     NCOEF = IN(N)
C     WRITE (6,*) ' TAILLE INITIALE ',NCOEF
C IN-IP---> IPL-IPC
C =================
      CALL WKVECT('&&PCSTRU.IND','V V I',N,JIND)
      CALL PCFALU(N,IN,IP,ICPL,ICPC,ZI(JIND),IMP)

C INITIALISATION
      IER = 0
      COMPLT = .FALSE.
      CALL PCDIAG(N,ICPL,ICPC,ICPD)

C BOUCLE SUR LES NIVEAUX
C ======================
      DO 10 NIV = 1,NIVEAU
        NZ = ICPL(N)
        IF (NIV.LT.NIVEAU) THEN
          CALL PCFULL(N,ICPL,ICPC,ICPD,ICPLX,ICPCX,ZI(JIND),LCA,IER)
        ELSE
          CALL PCINFE(N,ICPL,ICPC,ICPD,ICPLX,ICPCX,ZI(JIND),LCA,IER)
        END IF

        IF (IER.GT.0) GO TO 50

        CALL PCDIAG(N,ICPL,ICPC,ICPD)
        IF (ICPL(N).EQ.NZ) THEN
C         WRITE (6,4000) NIV
          COMPLT = .TRUE.
          GO TO 20
        END IF
   10 CONTINUE

   20 CONTINUE
C     WRITE(6,*)' MATRICE APRES FACTORISATION SYMBOLIQUE'

C ICPL,ICPC FORMAT LU ---> FORMAT SYMETRIQUE
C ================================
      ICPC(1) = 1
      KK = 1
      DO 40 I = 2,N
C                  ATTENTION ICPL(0:N)
        ICPL(I-2) = KK
        K1 = ICPL(I-1) + 1
        K2 = ICPD(I)
        DO 30 K = K1,K2
          KK = KK + 1
          ICPC(KK) = ICPC(K)
   30   CONTINUE
C   TERME DIAG
        KK = KK + 1
        ICPC(KK) = I
   40 CONTINUE
      ICPL(N-1) = KK

C     TFIN = SECOND() - TDEB
C     WRITE (6,*) ' S-P PCSTRU FIN NORMALE'
C     WRITE (6,*) ' TAILLE FINALE APRES REMPLISSAGE ',ICPL(N)
C     WRITE (6,*) ' DUREE  ',TFIN
      GO TO 60

   50 CONTINUE
C     TFIN = SECOND() - TDEB
C     WRITE (6,*) ' S-P PCSTRU FIN ANORMALE !!! '
C     WRITE (6,*) ' DUREE  ',TFIN
   60 CONTINUE

      CALL JEDETR('&&PCSTRU.IND')

 1500 FORMAT (/,1X,80 (1H*))
 1000 FORMAT (' S-P PCSTRU NIVEAU= ',I3,' TAILLE MAX= ',I8)
      END
