      SUBROUTINE RESOUD ( MATASS, MATPRE, CHSECZ, SOLVEU, CHCINE, BASE,
     +                    CHASOL, CRITEZ)
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 16/01/2006   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================

C-----------------------------------------------------------------------
C --- DESCRIPTION DES PARAMETRES
C
C IN  K19 MATASS : NOM DE L'OBJET DE S.D. MATR_ASSE PREMIER
C                  MEMBRE DU SYSTEME LINEAIRE A RESOUDRE
C IN  K19 MATPRE : NOM DE L'OBJET DE S.D. MATR_ASSE MATRICE
C                  DE PRECONDITIONNEMENT SI RESOLUTION GCPC
C IN  K*  CHSECZ : NOM DE L'OBJET DE S.D. CHAM_NO SECOND MEMBRE
C                  DU SYSTEME LINEAIRE A RESOUDRE
C IN  K19 SOLVEU : NOM DE L'OBJET SOLVEUR
C IN  K*  CHCINE   : NOM DE L'OBJET DE S.D. CHAM_NO DIMENSIONNE A
C                  LA TAILLE DU PROBLEME, VALANT 0 PARTOUT,
C                  ET LE DEPLACEMENT IMPOSE LA OU LES DDLS
C                  IMPOSES SONT TRAITES PAR ELIMINATION
C IN  K*  BASE   : BASE SUR LAQUELLE ON TRAITE L'OBJET MATAS
C OUT K*  CHASOL : NOM DE L'OBJET DE S.D. CHAM_NO SOLUTION
C                  DU SYSTEME LINEAIRE A RESOUDRE
C IN  K*  CHASOL : NOM DE L'OBJET DE S.D. CHAM_NO SOLUTION
C                  (L'OBJET N'EST PAS ENCORE REMPLI)
C-----------------------------------------------------------------------
      IMPLICIT REAL*8 (A-H,O-Z)

C DECLARATION PARAMETRES D'APPELS
      CHARACTER*(*)       BASE, CHSECZ, CHCINE, MATASS, MATPRE, CHASOL
      CHARACTER*(*)       CRITEZ
      CHARACTER*19        SOLVEU
      CHARACTER*24        CRITER

C FONCTIONS JEVEUX
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

C VARIABLES LOCALES
      INTEGER      NBSD,IDIME,IDD,IFETC,IFETM,IBID,IFM,NIV,ILIMPI,
     &             NBREOI,IINF
      REAL*8       TESTCO,TEMPS(6)
      CHARACTER*24 METRES,SDFETI,TYREOR,PRECO,SCALIN,STOGI,ACMA,ACSM,
     &             INFOFE
      CHARACTER*19 MATAS,MAPREC,CHSOL,PCHN1,PCHN2,ARG1,ARG2,CHSECM
      CHARACTER*4  ETAMAT
      LOGICAL      IDENSD,LFETI,IDDOK,LFETIC

C CORPS DU PROGRAMME
      CALL JEMARQ()
      CALL JEDBG2(IDBGAV,0)
      CALL INFNIV(IFM,NIV)

      MATAS = MATASS
      MAPREC = MATPRE
      CHSOL = CHASOL
      CHSECM = CHSECZ
      CRITER = CRITEZ

      CALL JEVEUO(SOLVEU//'.SLVK','L',ISLVK)
      CALL JEVEUO(SOLVEU//'.SLVR','L',ISLVR)
      CALL JEVEUO(SOLVEU//'.SLVI','L',ISLVI)
      METRES = ZK24(ISLVK)

C FETI OR NOT ?
      LFETIC=.FALSE.
      IF (METRES(1:4).EQ.'FETI') THEN
        SDFETI=ZK24(ISLVK+5)
        CALL JEVEUO(SDFETI(1:19)//'.FDIM','L',IDIME)
C NOMBRE DE SOUS-DOMAINES
        NBSD=ZI(IDIME)
        CALL JEVEUO(MATAS//'.FETM','L',IFETM)
        CALL JEVEUO(CHSECM//'.FETC','L',IFETC)
        LFETI=.TRUE.
C ADRESSE JEVEUX OBJET FETI & MPI
        CALL JEVEUO('&FETI.LISTE.SD.MPI','L',ILIMPI)
        CALL JEVEUO('&FETI.FINF','L',IINF)
        INFOFE=ZK24(IINF)
        IF (INFOFE(11:11).EQ.'T') LFETIC=.TRUE.
      ELSE
        NBSD=0
        LFETI=.FALSE.
      ENDIF

C========================================
C BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C========================================
      DO 10 IDD=0,NBSD
      
C     -- ON VERIFIE QUE LE PROF_CHNO DE LA MATR_ASSE
C        EST IDENTIQUE A CELUI DU  SECOND_MEMBRE :
C     -----------------------------------------------

C TRAVAIL PREALABLE POUR DETERMINER SI ON EFFECTUE LA BOUCLE SUIVANT
C LE SOLVEUR (FETI OU NON), LE TYPE DE RESOLUTION (PARALLELE OU 
C SEQUENTIELLE) ET L'ADEQUATION "RANG DU PROCESSEUR-NUMERO DU SD"
C ATTENTION SI FETI LIBERATION MEMOIRE PREVUE EN FIN DE BOUCLE
        IF (.NOT.LFETI) THEN
          IDDOK=.TRUE.
        ELSE 
          IF (ZI(ILIMPI+IDD).EQ.1) THEN
            IDDOK=.TRUE.
          ELSE
            IDDOK=.FALSE.
          ENDIF
        ENDIF
        IF (IDDOK) THEN
        
          IF (IDD.EQ.0) THEN
            ARG1=MATAS
            ARG2=CHSECM
          ELSE
            ARG1=ZK24(IFETM+IDD-1)
            ARG2=ZK24(IFETC+IDD-1)
          ENDIF
          CALL DISMOI('F','PROF_CHNO',ARG1,'MATR_ASSE',IBID,PCHN1,IBID)
          CALL DISMOI('F','PROF_CHNO',ARG2,'CHAM_NO',IBID,PCHN2,IBID)
          IF (.NOT.IDENSD('PROF_CHNO',PCHN1,PCHN2)) THEN
           CALL UTDEBM('F','RESOUD','LA NUMEROTATION DES INCONNUES EST')
            CALL UTIMPK('L',' INCOHERENTE ENTRE LA MATRICE ',1,ARG1)
            CALL UTIMPK('L',' ET LE SECOND MEMBRE ',1,ARG2)
            IF (LFETI) THEN
              IF (IDD.EQ.0) THEN
                CALL UTIMPI('L','DOMAINE GLOBAL',0,IBID)
              ELSE
                CALL UTIMPI('L','SOUS-DOMAINE NUMERO ',1,IDD)
              ENDIF
            ENDIF
            CALL UTFINM()
          ENDIF
C========================================
C FIN BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C========================================  
        ENDIF
   10 CONTINUE

      IF ((NIV.GE.2).OR.(LFETIC)) THEN
        CALL UTTCPU(53,'INIT ',6,TEMPS)
        CALL UTTCPU(53,'DEBUT',6,TEMPS)
      ENDIF
      IF (METRES.EQ.'LDLT'.OR.METRES.EQ.'MULT_FRO'.OR.
     &    METRES.EQ.'FETI'.OR.METRES.EQ.'MUMPS') THEN

C========================================
C BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C======================================== 
        DO 20 IDD=0,NBSD
C     -- ON VERIFIE QUE CHAQUE MATRICE DE LA MATR_ASSE
C        A BIEN ETE FACTORISEE :
C     -----------------------------------------------

          IF (.NOT.LFETI) THEN
            IDDOK=.TRUE.
          ELSE 
            IF (ZI(ILIMPI+IDD).EQ.1) THEN
              IDDOK=.TRUE.
            ELSE
              IDDOK=.FALSE.
            ENDIF
          ENDIF
          IF (IDDOK) THEN
            IF (IDD.EQ.0) THEN
              ARG1=MATAS
            ELSE
              ARG1=ZK24(IFETM+IDD-1)
            ENDIF
            CALL JELIRA(ARG1//'.REFA','DOCU',IBID,ETAMAT)

            IF (ETAMAT.NE.'DECP'.AND.ETAMAT.NE.'DECT')
     +        CALL UTMESS('F','RESOUD','  PAS DE RESOLUTION '//
     +       'CAR LA MATRICE '//MATAS//' N"EST PAS DECOMPOSEE.' )
          ENDIF
C========================================
C FIN BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C========================================  
   20   CONTINUE

        CALL DETRSD('CHAMP_GD',CHSOL)
        CALL VTDEFS(CHSOL,CHSECM,'V',' ')
        IF (METRES.NE.'FETI') THEN
          IF (METRES.EQ.'MUMPS') THEN
             CALL AMUMPS('RESOUD',SOLVEU,MATAS,CHSECM,CHSOL,CHCINE)
          ELSE
             CALL COPISD('CHAMP_GD',BASE,CHSECM,CHSOL)
             CALL RESLDL(MATAS,CHCINE,CHSOL)
          ENDIF

        ELSE
          EPSI=ZR(ISLVR+1)
          TESTCO=ZR(ISLVR+3)
          NITER=ZI(ISLVI+1)
          NBREOR=ZI(ISLVI+4)
          NBREOI=ZI(ISLVI+5)
          PRECO=ZK24(ISLVK+1)
          TYREOR=ZK24(ISLVK+6)
          SCALIN=ZK24(ISLVK+7)
          STOGI=ZK24(ISLVK+8)
          ACMA=ZK24(ISLVK+9)
          ACSM=ZK24(ISLVK+10)
          CALL RESFET(SDFETI(1:19),MATAS,CHCINE(1:19),CHSECM,CHSOL,
     &      NITER,EPSI,CRITER,TESTCO,NBREOR,TYREOR,PRECO,SCALIN,STOGI,
     &      NBREOI,ACMA,ACSM)
        ENDIF

      ELSE IF (METRES.EQ.'GCPC') THEN
C     ----------------------------------
         CALL JEEXIN(CHSOL//'.REFE',IRESOL)
         IF (IRESOL.EQ.0) CALL VTDEFS(CHSOL,CHSECM,'V',' ')
         NITER  = ZI(ISLVI+1)
         EPSI   = ZR(ISLVR+1)
         IREP=1
         CALL RESGRA ( CHSOL, MATAS, CHSECM, CHCINE, MAPREC,
     +                 BASE, IREP, NITER, EPSI, CRITER )

      ELSE
          CALL UTMESS('F','RESOUD',' LA METHODE DE RESOLUTION: '//
     +                     METRES//' EST INCONNUE. ON ATTEND LDLT'//
     +                             ',GCPC, MULT_FRO OU FETI')
      ENDIF
      IF ((NIV.GE.2).OR.(LFETIC)) THEN
        CALL UTTCPU(53,'FIN  ',6,TEMPS)
        IF (NIV.GE.2) WRITE(IFM,'(A44,D11.4,D11.4)')
     &       'TEMPS CPU/SYS SOLVEUR                     : ',TEMPS(5),
     &       TEMPS(6)
      ENDIF

      CALL JEDBG2(IBID,IDBGAV)
      CALL JEDEMA()
      END
