      SUBROUTINE AMDAPT(NEQ,NBND,NBSN,PE,NV,INVP,
     >     PARENT,SUPND,
     >     ADRESS,LGIND,FCTNZS,FCTOPS,
     >     LLIST,NNV)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 19/06/2007   AUTEUR LEBOUVIER F.LEBOUVIER 
C RESPONSABLE JFBHHUC C.ROSE
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C     DONNEES
C     NEQ : NBRE TOTAL D'INCONNUES (LAGRANGES INCLUS)
C     NBND : NBRE DE DDL  RENUMEROTES PAR AMDBAR (NEQ - LAGRANGES)
C     INVP : INVP(I) : NOUVEAU NUMERO DU DDL  (RESULTATS DE AMDBAR)
C     PE  (RESULTATS DE AMDBAR)
C     NV (RESULTATS DE AMDBAR)
C     ON OUTPUT, PE HOLDS THE ASSEMBLY TREE/FOREST, WHICH IMPLICITLY
C     REPRESENTS A PIVOT ORDER WITH IDENTICAL FILL-IN AS THE ACTUAL
C     ORDER (VIA A DEPTH-FIRST SEARCH OF THE TREE).
C
C     ON OUTPUT:
C     IF NV (I) .GT. 0, THEN I REPRESENTS A NODE IN THE ASSEMBLY TREE,
C     AND THE PARENT OF I IS -PE (I), OR ZERO IF I IS A ROOT.
C     IF NV (I) = 0, THEN (I,-PE (I)) REPRESENTS AN EDGE IN A
C     SUBTREE, THE ROOT OF WHICH IS A NODE IN THE ASSEMBLY TREE.
C
C
C     RESULTATS
C     SUPND(1:NBSN+1) : DEFINITION DES SUPERNOEUDS, LE SN I EST DEFINI
C     PAR ( SUPND(I), SUPND(I+1)-1)
C     PARENT(NBSN) : PARENT(I) EST LE SN PARENT DU SN I
C     ADRESS : POINTEUR DANS LES TABLEAUX GLOBAL ET LOCAL
C     EN FAIT ADRESS SERA RECALCULE DANS FACSMB, IL SERT ICI
C     A EVALUER LGIND.
C
C     LGIND : LONGUEUR DE  GLOBAL (ET LOCAL),
C     FCTNZS      NBRE DE TERMES NON NULS DANS LA FACTORISEE,
C     FCTOPS   NBRE DE D OPERATIONS.
C     (CES VALEURS SONT INDICATIVES)
C     CAR NE PRENANT PAS EN COMPTE LES LAGRANGES.
C
C     TAB DE TRAVAIL
C     LLIST,NNV
C
      IMPLICIT NONE

      INTEGER NEQ,INVP(NEQ),PE(NEQ+1),NV(NEQ)
      INTEGER NBND,NBSN,LGIND,FCTNZS
      REAL*8 FCTOPS
      INTEGER PARENT(*),SUPND(NEQ),ADRESS(*)
C
      INTEGER LLIST(NEQ),NNV(NEQ),IFM,NIV
      INTEGER I,J,K,NCOL,NLIG,DEB,FIN,SNJ,NDI
C
C     NNV EQUIVAUDRA A NV DANS LA NOUVELLE NUMEROTATION
C     PARENT SERA  LE PARENT PAR INCONNUE ET NON PAR SUPERNOEUD
      CALL INFNIV(IFM,NIV)
      NBSN = 0
      DO 100 I = 1, NBND
         IF (NV(I).NE.0) NBSN = NBSN + 1
         J = INVP(I)
         IF(PE(I).NE.0) THEN
            PARENT(J) = INVP(-PE(I))
         ELSE
            PARENT(J)=0
         ENDIF
         NNV(J) = NV(I)
 100  CONTINUE
C     NV CONTIENDRA  LA LARGEUR DES SN (LGSN AILLEURS)
      J = 1
      DO 110 I = 1, NBSN
         NV(I) = 1
 111     CONTINUE
         IF (NNV(J).EQ.0) THEN
            NV(I) = NV(I) + 1
            J = J + 1
            GOTO 111
         ENDIF
         J = J + 1
 110  CONTINUE
C
      SUPND(1) = 1
      DO 120 I = 1, NBSN
         SUPND(I+1) = SUPND(I) + NV(I)
 120  CONTINUE
C     LLIST SERA  L INVERSE DE SUPND, APPELE INVSUP AILLEURS
      K = 0
      ADRESS(1) = 1
      DO 130 SNJ = 1, NBSN
         DO 125 I = 1, NV(SNJ)
            K = K + 1
            LLIST(K) = SNJ
 125     CONTINUE
C     CALCUL DE ADRESS : ON CHERCHE DANS LE SN SNJ,
C     LE NOEUD I T.Q. NNV(I) =/= 0, CETTE VALEUR CONTIENT
C     LE "VRAI DEGRE" DE I,(SORTIE DE AMDBAR)
C     ON RAPPELLE VRAI DEGRE = LARGEUR DU SN + NBRE DE VOISINS
C     C A D ADRESS(SN+1) - ADRESS(SN)
         DEB = SUPND(SNJ)
         FIN = SUPND(SNJ+1)-1
         I= FIN
 128     CONTINUE
         IF( I.LT.DEB) THEN
            CALL U2MESG('F+','ALGELINE5_6',0,' ',0,0,0,0.D0)
            WRITE(IFM,*) 'TOUS LES NDS DU SN ',SNJ,' ONT NV NUL'
            CALL U2MESG('F','ALGELINE5_7',0,' ',0,0,0,0.D0)
         ENDIF
         IF(NNV(I).NE.0) GOTO 129
         I= I-1
         GOTO 128
 129     CONTINUE
         ADRESS(SNJ+1) = ADRESS(SNJ) + NNV(I)
 130  CONTINUE
C
      LGIND = ADRESS(NBSN+1) - 1
      FCTNZS = 0
      FCTOPS = 0.D0
      DO 150 I =1, NBSN
         NCOL = SUPND(I+1) - SUPND(I)
         NLIG = ADRESS(I+1) - ADRESS(I)
         FCTNZS = FCTNZS + NLIG*NCOL - (NCOL*(NCOL+1))/2
         DO 140 J = 1, NCOL
            NLIG = NLIG - 1
            FCTOPS = FCTOPS + NLIG*(NLIG+3)
 140     CONTINUE
 150  CONTINUE
C     ON CALCUL PARENT EN SN A PARTIR DE PARENT/NOEUDS
C     NV CONTIENDRA PROVISOIREMENT PARENT/NOEUDS
      DO 160 I= 1, NBND
         NV(I) = PARENT(I)
 160  CONTINUE
C
      DO 170 I = 1, NBND
         PARENT(I) = 0
 170  CONTINUE
      DO 180 SNJ  = 1, NBSN
         DEB = SUPND(SNJ)
         FIN = SUPND(SNJ+1)-1
         NDI= FIN
 175     CONTINUE
         IF( NDI.LT.DEB) THEN
            CALL U2MESG('F+','ALGELINE5_8',0,' ',0,0,0,0.D0)
            WRITE(IFM,*) 'TOUS LES NDS DU SN ',SNJ,' ONT NV NUL'
            CALL U2MESG('F','ALGELINE5_9',0,' ',0,0,0,0.D0)
         ENDIF
         IF(NNV(NDI).NE.0) GOTO 177
         NDI= NDI-1
         GOTO 175
 177     CONTINUE
C        LE NOEUD NDI EST LE ND REPRESENTATIF DU SN
C        PARENT(SNJ) EST LE SN CONTENANT LE PARENT DE NDI
         IF(NV(NDI).NE.0) THEN
            PARENT(SNJ) = LLIST(NV(NDI))
         ELSE
            PARENT(SNJ) =0
         ENDIF
C
 180  CONTINUE
      IF (NIV.EQ.2) THEN
         WRITE(IFM,*)'AMDAPT  :  TRAITEMENT DE AMDBAR'
         WRITE(IFM,*)' NOMBRE DE SUPERNOEUDS: ',NBSN
         DO 200 I=1,NBSN
         WRITE(IFM,*) 'SN ',I,' :NDS DE ',SUPND(I),' A ',SUPND(I+1)-1,
     $           ',PARENT ',PARENT(I),',DEGRE :',ADRESS(I+1)-ADRESS(I)
 200     CONTINUE
      ENDIF

      END
