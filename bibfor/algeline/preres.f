      SUBROUTINE PRERES(SOLVEU,BASE,IRET,MATPRE,MATASS)
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 10/01/2005   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C BUT : FACTORISER UNE MATR_ASSE (LDLT/MULT_FRONT)
C       OU FABRIQUER UNE MATRICE DE PRECONDITIONNEMENT (GCPC)
C
C SOLVEU(K19) IN : OBJET SOLVEUR
C BASE(K1) IN    : BASE SUR LAQUELLE ON CREE LES OBJETS DE LA FACTORISEE
C IRET(I) OUT CODE RETOUR :
C             /0 -> OK
C             /1 -> LA FACTORISATION EST ALLEE AU BOUT
C                   MAIS ON A PERDU BEAUCOUP DE DECIMALES
C             /2 -> LA FACTORISATION N'A PAS PU SE FAIRE
C                   JUSQU'AU BOUT.
C MATPRE(K19) IN/JXVAR : MATRICE DE PRECONDITIONNEMENT (GCPC)
C MATASS(K19) IN/JXVAR : MATRICE A FACTORISER OU A PRECONDITIONNER
C
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C       17/12/03 (OB): AJOUT POUR SOLVEUR FETI.
C       17/05/04 (OB): MODIF. POUR MODES DE CORPS RIGIDES
C-----------------------------------------------------------------------
      IMPLICIT NONE

C DECLARATION PARAMETRES D'APPELS            
      CHARACTER*1 BASE
      CHARACTER*19  SOLVEU
      CHARACTER*(*) MATASS,MATPRE
      
C FONCTIONS JEVEUX
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI ,NIREMP
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

C VARIABLES LOCALES
      INTEGER      NBSD,IDD,IDD0,IFETM,IFETS,IDBGAV,IFM,NIV,ISLVK,IBID,
     &             ISLVI,LMAT,IDIME,NPREC,ISTOP,NDECI,ISINGU,NPVNEG,
     &             IRET,NBMOCR,NBSDF,IINF,IFCPU
      REAL*8       TEMPS(6)
      CHARACTER*24 METRES,SDFETI,INFOFE
      CHARACTER*19 MATAS,MAPREC,SOLVSD,MATAS1
      CHARACTER*8  NOMSD
      CHARACTER*4  ETAMAT
      LOGICAL      LFETI
            
C CORPS DU PROGRAMME
      CALL JEMARQ()
      CALL JEDBG2(IDBGAV,0)
C RECUPERATION DU NIVEAU D'IMPRESSION
      CALL INFNIV(IFM,NIV)
      
C----------------------------------------------------------------------
      MATAS1=MATASS
      MATAS = MATASS
      MAPREC = MATPRE
      CALL JEVEUO(SOLVEU//'.SLVK','L',ISLVK)
      METRES = ZK24(ISLVK)
      CALL JELIRA(MATAS//'.REFA','DOCU',IBID,ETAMAT)

C MATRICE JUSTE ASSEMBLEE OU DEJA PASSES PAR PRERES ?
      IF (ETAMAT.EQ.'DECP'.OR.ETAMAT.EQ.'DECT') THEN
        IF (METRES.EQ.'LDLT'.OR.METRES.EQ.'MULT_FRO'.OR.METRES.EQ
     &     .'FETI') THEN
          IF (NIV.EQ.2)  WRITE(IFM,*) '  PAS DE DECOMPOSITION '//
     +       'CAR LA MATRICE '//MATAS//' EST DEJA DECOMPOSEE.'
        ELSE IF (METRES.EQ.'GCPC') THEN
          IF (NIV.EQ.2)   WRITE(IFM,*) '  LA MATRICE DE '//
     +         'PRECONDITIONNEMENT '//MAPREC//' EXISTE DEJA, '//
     +         'ON NE LA RECALCULE PAS.'
        ENDIF
        GOTO 9999
      ENDIF

C BOUCLE SUR LES SOUS-DOMAINES SI FETI
      IF (METRES(1:4).EQ.'FETI') THEN
        LFETI=.TRUE.
        SDFETI=ZK24(ISLVK+5)
        CALL JEVEUO('&&'//SDFETI(1:17)//'.FINF','L',IINF)
        INFOFE=ZK24(IINF)
        CALL JEVEUO(SDFETI(1:19)//'.FDIM','L',IDIME)
C NOMBRE DE SOUS-DOMAINES       
        NBSD=ZI(IDIME)
        NBSDF=0
        IDD0=1
C ADRESSE JEVEUX DE LA LISTE DES MATR_ASSE ET DE SOLVEURS ASSOCIES
C AUX SOUS-DOMAINES 
        CALL JEVEUO(MATAS//'.FETM','L',IFETM)
        CALL JEVEUO(SOLVEU//'.FETS','L',IFETS)
C MAJ DE L'ETAMAT DU DOMAINE GLOBAL JUSTE UTILE POUR FRANCHIR RESOUD
C ET LE RECOPIE DU SECOND MEMBRE EN VECTEUR SOLUTION     
        ETAMAT = 'DECT'
        CALL JEECRA(MATAS//'.REFA','DOCU',IBID,ETAMAT)
        CALL JEVEUO('&FETI.INFO.CPU.FACN','E',IFCPU)
      ELSE
        LFETI=.FALSE.      
        NBSD=0
        IDD0=0
        INFOFE='FFFFFFFF'
      ENDIF


C --- BOUCLE SUR LES SOUS-DOMAINES:
C----------------------------------      
C IDD=0 --> DOMAINE GLOBAL/ IDD=I --> IEME SOUS-DOMAINE
      DO 100 IDD=IDD0,NBSD
C ATTENTION SI FETI LIBERATION MEMOIRE PREVUE EN FIN DE BOUCLE     
        IF (LFETI) CALL JEMARQ()
C CALCUL TEMPS  
        IF ((NIV.GE.2).OR.(LFETI)) THEN
          CALL UTTCPU(52,'INIT ',6,TEMPS)
          CALL UTTCPU(52,'DEBUT',6,TEMPS)
        ENDIF
                
C MATR_ASSE ASSOCIEE A CHAQUE SOUS-DOMAINE        
        IF (IDD.GT.0) THEN
          MATAS=ZK24(IFETM+IDD-1)(1:19)
          SOLVSD=ZK24(IFETS+IDD-1)(1:19)
          CALL JEVEUO(SOLVSD//'.SLVK','L',ISLVK)
          METRES = ZK24(ISLVK)
          CALL JEVEUO(SOLVSD//'.SLVI','L',ISLVI)          
        ELSE
          CALL JEVEUO(SOLVEU//'.SLVI','L',ISLVI)                  
        ENDIF
        
C ALLOCATION OBJET JEVEUX TEMPORAIRE .&INT/&IN2
        CALL MTDSCR(MATAS)
        CALL JEVEUO(MATAS//'.&INT','E',LMAT)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C             MULTIFRONTALE OU LDLT                        C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC        
        IF (METRES.EQ.'LDLT'.OR.METRES.EQ.'MULT_FRO') THEN
          IF (LFETI.AND.(METRES.EQ.'LDLT'))
     &      CALL UTMESS('F','PRERES',
     &      'SOLVEUR INTERNE LDLT POUR L''INSTANT PROSCRIT'//     
     &      '  AVEC FETI')      
          NPREC = ZI(ISLVI-1+1)
          ISTOP = ZI(ISLVI-1+3)         
          IF (LFETI) THEN
            CALL FETFAC(LMAT,MATAS,IDD,NPREC,NBSD,MATAS1,SDFETI,NBSDF,
     &                  BASE,INFOFE)
          ELSE       
            CALL TLDLGG(ISTOP,LMAT,1,0,NPREC,NDECI,ISINGU,NPVNEG,IRET)
          ENDIF
               
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                         GCPC                             C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC     
        ELSE IF (METRES.EQ.'GCPC') THEN
          IF (LFETI)
     &      CALL UTMESS('F','PRERES',
     &      'SOLVEUR INTERNE GCPC POUR L''INSTANT PROSCRIT'//     
     &      '  AVEC FETI')
          IRET=0
          NIREMP = ZI(ISLVI-1+4)
          CALL PCLDLT(MAPREC,MATAS,NIREMP,BASE)
        ENDIF
        
        IF ((NIV.GE.2).OR.(LFETI)) THEN
          CALL UTTCPU(52,'FIN  ',6,TEMPS)
          WRITE(IFM,*)'TEMPS CPU/SYS FACTORISATION NUM: ',TEMPS(5),
     &      TEMPS(6)
          IF (LFETI) ZR(IFCPU+IDD)=TEMPS(5)+TEMPS(6)
        ENDIF
        IF (LFETI) CALL JEDEMA() 
  100 CONTINUE

 9999 CONTINUE
            
      CALL JEDBG2(IBID,IDBGAV)
      CALL JEDEMA()
      END
