      SUBROUTINE OP0159()
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 25/01/2011   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE PELLET J.PELLET
C     ------------------------------------------------------------------
C     OPERATEUR APPL_CINE_SCMB
C     BUT: APPLIQUER LES CHAR_CINE SUR LE SECOND MEMBRE
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
      CHARACTER*19 VCI19,SECM19,CSOL19,MAT19
      CHARACTER*8  MATR,METRES
      CHARACTER*3  TYPE,KBID,TYP1
      INTEGER      LMAT,NIMPO,IDVALC,JREFA,NEQ1,JVAL2,JTRAV
      INTEGER      IBID,IFM,NIV,NEQ,JVALS,NB,IMD,IER

      CHARACTER*8 XSOL,SECMBR,VCINE,KVARI
      CHARACTER*16 CONCEP,NOMCMD
      CHARACTER*19 SOLVE1,SOLVE2
      COMPLEX*16   CBID
      REAL*8       EPS,RBID
C     ------------------------------------------------------------------
      CALL JEMARQ()
C
C
      CALL INFMAJ
      CALL INFNIV(IFM,NIV)

      CALL GETRES(XSOL,CONCEP,NOMCMD)
      CSOL19=XSOL

      CALL GETVID('  ','MATR',0,1,1,MATR,NB)
      CALL ASSERT(NB.EQ.1)

      CALL GETVID('  ','CHAM_NO',0,1,1,SECMBR,NB)
      CALL ASSERT(NB.EQ.1)
      CALL CHPVER('F',SECMBR,'NOEU','*',IER)
      SECM19=SECMBR


      VCINE = ' '
      CALL GETVID('  ','CHAM_CINE',0,1,1,VCINE,NB)
      IF (NB.EQ.1) CALL CHPVER('F',VCINE,'NOEU','*',IER)
      VCI19=VCINE

      CALL DISMOI('F','METH_RESO',MATR,'MATR_ASSE',IBID,METRES,IBID)
      IF (METRES.NE.'LDLT'.AND.METRES.NE.'MULT_FRO'
     &         .AND.METRES.NE.'MUMPS') THEN
        CALL U2MESS ('F','ALGELINE4_1')
      ENDIF

      MAT19=MATR
      CALL MTDSCR(MAT19)
      CALL JEVEUO(MAT19//'.&INT','E',LMAT)
      IF (LMAT.EQ.0) CALL U2MESS('F','ALGELINE3_40')

      IF (ZI(LMAT+3).EQ.1) THEN
        TYPE='R'
      ELSEIF (ZI(LMAT+3).EQ.2) THEN
        TYPE='C'
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF

      NIMPO=ZI(LMAT+7)
      IF (VCI19.EQ.' ') THEN
        IF (NIMPO.NE.0) CALL U2MESS('F','ALGELINE3_41')
        IDVALC=0
      ELSE
        CALL JEVEUO(VCI19//'.VALE','L',IDVALC)
        CALL JELIRA(VCI19//'.VALE','TYPE',IBID,TYPE)
        IF (((TYPE.EQ.'R').AND.(ZI(LMAT+3).NE.1)) .OR.
     &      ((TYPE.EQ.'C').AND.(ZI(LMAT+3).NE.2))) THEN
          CALL U2MESS('F','ALGELINE3_42')
        ENDIF
      ENDIF

      CALL JEVEUO(MAT19//'.REFA','L',JREFA)
      IF ( ZK24(JREFA-1+11).EQ.'MATR_DISTR' ) THEN
        IMD=1
      ELSE
        IMD=0
      ENDIF
      CALL ASSERT(SECM19.NE.' ')
      CALL ASSERT(CSOL19.NE.' ')
      IF (CSOL19.NE.SECM19) THEN
        CALL DETRSD('CHAMP_GD',CSOL19)
        CALL VTDEFS(CSOL19,SECM19,'G',' ')
      ENDIF

      NEQ=ZI(LMAT+2)
      CALL JELIRA(SECM19//'.VALE','LONMAX',NEQ1,KBID)
      CALL JELIRA(SECM19//'.VALE','TYPE',IBID,TYP1)
      IF ( (NEQ1.NE.NEQ).AND.(IMD.EQ.0) ) THEN
        CALL U2MESS('F','FACTOR_67')
      ENDIF
      IF (TYP1.NE.TYPE) CALL U2MESS('F','FACTOR_68')
      CALL JEVEUO(SECM19//'.VALE','L',JVAL2)
      IF (IMD.EQ.0) THEN
        CALL WKVECT('&&APPLCINE.TRAV','V V '//TYPE,NEQ,JTRAV)
        CALL JACOPO(NEQ,TYPE,JVAL2,JTRAV)
      ELSE
        CALL WKVECT('&&APPLCINE.TRAV','V V '//TYPE,NEQ1,JTRAV)
        CALL JACOPO(NEQ1,TYPE,JVAL2,JTRAV)
      ENDIF

      IF (TYPE.EQ.'R') THEN
C     ----------------------------------------
        IF (IDVALC.NE.0) THEN
          CALL CSMBGG(LMAT,ZR(JTRAV),ZR(IDVALC),CBID,CBID,'R')
        ENDIF

      ELSEIF (TYPE.EQ.'C') THEN
C     ----------------------------------------
        IF (IDVALC.NE.0) THEN
          CALL CSMBGG(LMAT,RBID,RBID,ZC(JTRAV),ZC(IDVALC),'C')
        ENDIF
      ENDIF

C     RECOPIE DANS LE CHAMP SOLUTION SI IL Y A LIEU
      CALL JEVEUO(CSOL19//'.VALE','E',JVALS)
      IF (IMD.EQ.0) THEN
        CALL JACOPO(NEQ,TYPE,JTRAV,JVALS)
      ELSE
        CALL JACOPO(NEQ1,TYPE,JTRAV,JVALS)
      ENDIF
      CALL JEDETR('&&APPLCINE.TRAV')

9999  CONTINUE
      CALL TITRE
      CALL JEDEMA()
      END
