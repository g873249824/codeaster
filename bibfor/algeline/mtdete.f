      SUBROUTINE MTDETE (OPTION,METHOD,LMAT,MANTIS,EXPO,CMOD)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER       LMAT,EXPO,OPTION
      REAL*8        MANTIS
      COMPLEX*16    CMOD
      CHARACTER*24  METHOD 
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 11/09/2012   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     OPTION=1
C       CALCUL DU DETERMINANT D'UNE MATRICE ASSEMBLEE REELLE DECOMPOSEE
C       SOUS FORME L*D*LT
C       RESULTAT SOUS FORME MANTIS * (10**EXPO) 
C              AVEC 10**(-30)<MANTISSE<10**(+30)
C     OPTION=2
C       CALCUL DU DETERMINANT NORMALISE D'UNE MATRICE COMPLEXE DECOM
C       POSEE SOUS FORME L*D*LT
C       RESULTAT SOUS FORME CMOD
C
C     SI METHODE='LDLT' OU 'MULT_FRONT': ON UTILISE L'OBJET .DIGS
C     SI METHODE='MUMPS': ON UTILISE L'OBJET '&&AMUMP.DETERMINANT'
C     ------------------------------------------------------------------
C
C     ------------------------------------------------------------------
C
C     ------------------------------------------------------------------
      INTEGER      I,NEQ,IRET,LDIAG,NBNEG,IBID,IPIV,ITRENT,INFO34,IFM,
     &             NIV,IE
      REAL*8       TRENT,TRENT1,RINF12,RINF13,R8MIEM,RMIN,RAUXX,RAUXY,
     &             RAUXM
      COMPLEX*16   CUN,CAUX
      CHARACTER*24 NOMDIA,KPIV
      DATA  NOMDIA/'                   .DIGS'/
C     ------------------------------------------------------------------
C
C
      CALL JEMARQ()
      CALL INFNIV(IFM,NIV)
      CUN=DCMPLX(1.D0,0.D0)
      RMIN=R8MIEM()*100
C --- TEST DES PARAMETRES D'ENTREES
      IF (OPTION.EQ.1) THEN
C --- LA MATRICE DOIT ETRE REELLE
        IF (ZI(LMAT+3).NE.1) CALL ASSERT(.FALSE.)
      ELSE IF (OPTION.EQ.2) THEN
C --- LA MATRICE DOIT ETRE COMPLEXE
        IF (ZI(LMAT+3).NE.2) CALL ASSERT(.FALSE.)
      ELSE
C --- MAUVAISE OPTION DE CALCUL
        CALL ASSERT(.FALSE.)
      ENDIF


      IF ((METHOD(1:4).EQ.'LDLT').OR.
     &    (METHOD(1:10).EQ.'MULT_FRONT')) THEN
C --- INITS. LDLT/MF
        NOMDIA(1:19) = ZK24(ZI(LMAT+1))
        NEQ          = ZI(LMAT+2 )
        CALL JEEXIN(NOMDIA,IRET)
        IF (IRET.EQ.0) CALL U2MESK('F','MODELISA2_9',1,NOMDIA)
        CALL JEVEUO(NOMDIA,'L',LDIAG)
        LDIAG=LDIAG+NEQ

        IF (OPTION.EQ.1) THEN
C --- CALCUL DET AVEC LDLT/MF          
          CALL ALMULR( 'ZERO', ZR(LDIAG), NEQ , MANTIS, EXPO )
          NBNEG=0
          DO 10 I=0,NEQ-1
            IF (ZR(LDIAG+I).LE.0.D0) NBNEG=NBNEG+1
  10      CONTINUE
          CALL JEDETR(NOMDIA)
          IF (NIV.GE.2)
     &      WRITE(IFM,*)'<MTDETE 1 LDLT/MF>  MANTIS/EXPO  ',
     &                   MANTIS,EXPO

        ELSE IF (OPTION.EQ.2) THEN
C --- CALCUL DET NORMALISE AVEC LDLT/MF
          CMOD=CUN
          DO 15 I=1,NEQ
            CAUX=ZC(LDIAG+I-1)
            RAUXX=DBLE(CMOD)
            RAUXY=DIMAG(CMOD)
            RAUXM=SQRT(RAUXX*RAUXX+RAUXY*RAUXY)
            IF (RAUXM.LT.RMIN) RAUXM=1.D0
            CAUX=CAUX/RAUXM
            CMOD=CMOD*CAUX
   15     CONTINUE

          IF (NIV.GE.2)
     &      WRITE(IFM,*)'<MTDETE 2 LDLT/MF>  CMOD  ',CMOD
        ENDIF
 
      ELSE IF (METHOD(1:5).EQ.'MUMPS') THEN
C --- INITS. MUMPS      
        KPIV='&&AMUMP.DETERMINANT'
        CALL JEEXIN(KPIV,IBID)
        IF (IBID.NE.0) THEN
          CALL JEVEUO(KPIV,'L',IPIV)
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
C --- LE DETERMINANT ISSU DE MUMPS EST STOCKE SOUS LA FORME:
C ---                 MANTISSE * (2**EXP)   MANTISSE COMPLEXE
C --- CF. ROUTINE AMUMPU.F OPTION=4
C --- ON LE MET SOUS LA FORME ASTER:
C ---                 MANTISSE * (10**EXP) AVEC  MANTISSE REEL
C ---             10**(-30)<MANTISSE<10**(+30)
C --- CF. ROUTINES ALMULR
C --- INIT. ASTER DU PROCESSUS DES ROUTINES MTDETE/ALMULR
        TRENT  = 1.D30
        TRENT1 = 1.D-30
        ITRENT = 30
C
C --- DONNEES ISSUES DE MUMPS
        RINF12=ZR(IPIV)
        RINF13=ZR(IPIV+1)
        INFO34=NINT(ZR(IPIV+2))

        IF (OPTION.EQ.1) THEN
C --- CALCUL DET AVEC LDLT/MF          
          
C --- ON S'ATTEND A UN DETERMINANT REEL, CETTE VALEUR EST SUSPECTE !
          IF ((RINF12.GT.TRENT1).AND.(RINF13.GT.(0.05D0*RINF12)))
     &      CALL ASSERT(.FALSE.)
          MANTIS=RINF12
          EXPO   = 0
          DO 20 I=1,INFO34
            MANTIS=MANTIS*2.D0
            IF (ABS(MANTIS).GE.TRENT) THEN
              MANTIS = MANTIS*TRENT1
              EXPO = EXPO + ITRENT
            ELSE IF (ABS(MANTIS).LE.TRENT1) THEN
              MANTIS = MANTIS*TRENT
              EXPO = EXPO - ITRENT
            ENDIF
   20     CONTINUE        
          IF (ABS(MANTIS).GT.RMIN) THEN
            IE = NINT(LOG10(ABS(MANTIS)))
            MANTIS = MANTIS/ (10**IE)
            EXPO = EXPO + IE        
          ELSE
            MANTIS=0.D0
            EXPO  =1
          ENDIF

          IF (NIV.GE.2) THEN
            WRITE(IFM,*)'<MTDETE 1 MUMPS> RINF ',RINF12,RINF13,INFO34
            WRITE(IFM,*)'<MTDETE 1 MUMPS>  MANTIS/EXPO  ',
     &                   MANTIS,EXPO
          ENDIF
        
        ELSE IF (OPTION.EQ.2) THEN
C --- CALCUL DET NORMALISE POUR LDLT/MF
          RAUXM=SQRT(RINF12*RINF12+RINF13*RINF13)
          IF (RAUXM.LT.RMIN) RAUXM=1.D0
          CMOD=DCMPLX(RINF12,RINF13)/RAUXM
          
          IF (NIV.GE.2) THEN
            WRITE(IFM,*)'<MTDETE 2 MUMPS> RINF ',RINF12,RINF13,INFO34
            WRITE(IFM,*)'<MTDETE 2 MUMPS>  CMOD  ',CMOD
          ENDIF
        ENDIF
        
C --- FIN IF METHOD
      ENDIF

      CALL JEDEMA()
      END
