      SUBROUTINE TLDLGG(ISTOP,LMAT,ILDEB,ILFIN,NDIGIT,NDECI,ISINGU,
     &                  NPVNEG,IRET)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 08/03/2004   AUTEUR REZETTE C.REZETTE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================

C    BUT  FACTORISER UNE MATRICE ASSEMBLEE (LDLT OU MULT_FRONT)

C     IN  ISTOP :  /0 -> SI IRET>0 : ERREUR <F>
C                  /1 -> SI IRET=1 : ALARME <A>
C                        SI IRET=2 : ERREUR <F>
C                  /2 -> LE PROGRAMME NE S'ARRETE PAS
C                        ET N'IMPRIME AUCUN MESSAGE.
C     IN  LMAT  : DESCRIPTEUR DE LA MATRICE A FACTORISER
C     IN  ILDEB : NUMERO DE LA LIGNE DE DEPART DE FACTORISATION
C     IN  ILFIN : NUMERO DE LA LIGNE DE FIN    DE FACTORISITION

C    OUT  IRET : CODE RETOUR :
C                  /0 -> OK
C                  /1 -> LE NOMBRE DE DECIMALES PERDUES SUR LE
C                        TERME DIAGONAL DE L'EQUATION ISINGU
C                        EST SUPERIEUR A NDIGIT
C                  /2 -> LA FACTORISATION N'A PAS PU SE FAIRE
C                        JUSQU'AU BOUT.(ARRET A LA LIGNE ISINGU)
C                        SI UN PIVOT DEVIENT (EN MODULE) INFERIEUR
C                        A EPS=/1./R8GAEM()
C    OUT  NPVNEG : NOMBRE DE PIVOTS NEGATIFS SUR LA MATRICE
C                  FACTORISEE.
C                  CE NOMBRE N'A DE SENS QUE SI LA MATRICE EST
C                  DE TYPE REEL ET QUE IRET<2
C     IN  NDIGIT: NOMBRE MAX DE DECIMALES A PERDRE SUR LES TERMES
C                 DIAGONAUX DE LA MATRICE
C                 SI NDIGIT=0 ON PREND LA VALEUR PAR DEFAUT :8
C                 SI NDIGIT EST GRAND (99 PAR EX.) ON N'AURA
C                    JAMAIS D'ALARME.
C    OUT  NDECI : NOMBRE MAX DE DECIMALES PERDUES SUR LES TERMES
C                 DIAGONAUX DE LA MATRICE
C    OUT  ISINGU: NUMERO DE L'EQUATION OU LA PERTE DE DECIMALES
C                 EST MAXIMUM OU BIEN NUMERO DE L'EQUATION POUR
C                 LA QUELLE LA FACTORISATION S'EST ARRETEE

C     ------------------------------------------------------------------

C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------

      CHARACTER*1 CODMES
      CHARACTER*4 ETAMAT
      CHARACTER*19 NOMA19,LIGREL
      CHARACTER*14 NU
      CHARACTER*8 NOMNO,NOMCMP,TARDIF
      CHARACTER*40 INFOBL
      INTEGER ISTOP,LMAT,ILDEB,ILFIN,NDIGIT,NDIGI2,IRET,NPVNEG
      INTEGER IFM,NIV,IDREFE,NOM,NEQ,IABLO,IADIA,LLIAI,NBPAS
      INTEGER TYPVAR,TYPSYM,TYPSTO,NBBLOC,ILFIN1,IDECPA,IBID
      INTEGER IEQ3,ISINGU,IHCOL,IEQ,NDECI,IADIGS,NPIVOT
      REAL*8 EPS,DMAX,D1
      LOGICAL GETEXM

C     ------------------------------------------------------------------
      CALL JEMARQ()
      NOM = ZI(LMAT+1)
      NEQ = ZI(LMAT+2)
      TYPVAR = ZI(LMAT+3)
      TYPSYM = ZI(LMAT+4)
      TYPSTO = ZI(LMAT+6)
      NOMA19 = ZK24(NOM) (1:19)

      CALL INFNIV(IFM,NIV)
      IF (NIV.EQ.2) THEN
        WRITE (IFM,*) '<FACTOR> FACTORISATION DE LA MATRICE :',NOMA19
        IF (TYPSYM.EQ.1) WRITE (IFM,*) '<FACTOR> MATRICE SYMETRIQUE'
        IF (TYPSYM.EQ.0) WRITE (IFM,*) '<FACTOR> MATRICE NON-SYMETRIQUE'
        IF (TYPVAR.EQ.1) WRITE (IFM,*) '<FACTOR> MATRICE REELLE'
        IF (TYPVAR.EQ.2) WRITE (IFM,*) '<FACTOR> MATRICE COMPLEXE'
        IF (TYPSTO.EQ.1) WRITE (IFM,*) '<FACTOR> METHODE LDLT'
        IF (TYPSTO.EQ.2) WRITE (IFM,*) '<FACTOR> METHODE MULT_FRONT'
      END IF

      NBBLOC = ZI(LMAT+13)
      NPIVOT = 0

C     -- VALEUR DE NDIGIT PAR DEFAUT : 8
      IF (NDIGIT.EQ.0) THEN
        NDIGI2 = 8
      ELSE
        NDIGI2 = NDIGIT
      END IF


C     ON ALLOUE (SI NECESSAIRE) UN VECTEUR QUI CONTIENDRA
C     LA DIAGONALE "AVANT" ET LA DIAGONALE "APRES" :
      CALL DIAGAV(NOMA19,NEQ,TYPVAR,TYPSTO,EPS)

      IF (ILFIN.LT.ILDEB .OR. ILFIN.GT.NEQ) THEN
        ILFIN1 = NEQ
      ELSE
        ILFIN1 = ILFIN
      END IF
      IRET = 0
      CALL JELIRA(NOMA19//'.REFA','DOCU',IBID,ETAMAT)
      IF (ETAMAT.EQ.'DECP' .OR. ETAMAT.EQ.'DECT') THEN
        CALL UTMESS('A','TLDLGG','PAS DE DECOMPOSITION CAR '//
     &              'LA MATRICE EST DEJA DECOMPOSEE.')
        GO TO 20
      END IF
      IDECPA = 0
      IF (ILFIN1.LT.NEQ .OR. ILDEB.GT.1) IDECPA = 1


C      -----------------   STOCKAGE PROFIL (LDLT):
      IF (TYPSTO.EQ.1) THEN
        CALL JEVEUO(NOMA19//'.REFA','L',IDREFE)
        CALL MTDSC2(ZK24(ZI(LMAT+1)),'ADIA','L',IADIA)
        CALL MTDSC2(ZK24(ZI(LMAT+1)),'ABLO','L',IABLO)
        CALL JEVEUO(ZK24(IDREFE+2) (1:19)//'.HCOL','L',IHCOL)
        IF (TYPVAR.EQ.1) THEN
          IF (TYPSYM.EQ.1) THEN
            CALL TLDLR8(NOMA19,ZI(IHCOL),ZI(IADIA),ZI(IABLO),NPIVOT,NEQ,
     &                  NBBLOC,ILDEB,ILFIN1,EPS)
          ELSE IF (TYPSYM.EQ.0) THEN
            CALL TLDUR8(NOMA19,ZI(IHCOL),ZI(IADIA),ZI(IABLO),NPIVOT,NEQ,
     &                  NBBLOC,ILDEB,ILFIN1,EPS)
          END IF
        ELSE IF (TYPVAR.EQ.2) THEN
          CALL TLDLC8(NOMA19,ZI(IHCOL),ZI(IADIA),ZI(IABLO),NPIVOT,NEQ,
     &                NBBLOC,ILDEB,ILFIN1,EPS)
        END IF


C      -----------------   STOCKAGE MORSE (MULT_FRONT):
      ELSE IF (TYPSTO.EQ.2) THEN
        IF (TYPVAR.EQ.1) THEN
          CALL MULFR8(NOMA19,NPIVOT,NEQ,TYPSYM,EPS)
        ELSE IF (TYPVAR.EQ.2) THEN
          CALL MLFC16(NOMA19,NPIVOT,NEQ,TYPSYM,EPS)
        END IF

      END IF
      ETAMAT = 'DECT'
      IF (IDECPA.EQ.1 .OR. NPIVOT.GT.0) ETAMAT = 'DECP'
      CALL JEECRA(NOMA19//'.REFA','DOCU',IBID,ETAMAT)


C     -- CALCUL DE NPVNEG :
C     ---------------------
      IF (NPIVOT.LT.0) THEN
        NPVNEG = NPIVOT
      ELSE
        NPVNEG = 0
      END IF


C     -- CALCUL DU CODE RETOUR: IRET,NDECI ET ISINGU :
C     ------------------------------------------------
      IF (NPIVOT.GT.0) THEN
        IRET = 2
        NDECI = 9999
        ISINGU = NPIVOT
      ELSE

C     -- ON REGARDE CE QUE SONT DEVENUS LES TERMES DIAGONAUX :
C     -------------------------------------------------------
        CALL JEVEUO(NOMA19//'.DIGS','L',IADIGS)
        DMAX = 0.D0
        DO 10 IEQ = ILDEB,ILFIN1
          D1 = ZR(IADIGS-1+IEQ)/ZR(IADIGS+NEQ-1+IEQ)
          IF (D1.GT.DMAX) THEN
            DMAX = D1
            IEQ3 = IEQ
          END IF
   10   CONTINUE
        IF (DMAX.GT.0) THEN
          NDECI = INT(LOG10(DMAX))
          ISINGU = IEQ3
        ELSE
          CALL UTMESS('F','TLDLGG','STOP 1')
        END IF
        IF (NDECI.GE.NDIGI2) THEN
          IRET = 1
        ELSE
          IRET = 0
        END IF
      END IF


C     -- EMISSION EVENTUELLE D'UN MESSAGE D'ERREUR :
C     ----------------------------------------------
      IF ((ISTOP.EQ.2) .OR. (IRET.EQ.0)) THEN
        GO TO 20
      ELSE IF (ISTOP.EQ.1) THEN
        IF (IRET.EQ.1) THEN
          CODMES = 'A'
        ELSE IF (IRET.EQ.2) THEN
          CODMES = 'F'
        ELSE
          CALL UTMESS('F','TLDLGG','STOP 2')
        END IF
      ELSE IF (ISTOP.EQ.0) THEN
        CODMES = 'F'
      END IF
      CALL UTDEBM(CODMES,'TLLLGG','MATRICE NON FACTORISABLE.')

      IF (IRET.EQ.1) THEN
        CALL UTIMPI('L','PIVOT QUASIMENT NUL A LA LIGNE',1,ISINGU)
        CALL UTIMPI('L','NOMBRE DE DECIMALES PERDUES :',1,NDECI)
      ELSE IF (IRET.EQ.2) THEN
        CALL UTIMPI('L','PIVOT VRAIMENT NUL A LA LIGNE',1,ISINGU)
      END IF

      CALL DISMOI('F','NOM_NUME_DDL',NOMA19,'MATR_ASSE',IBID,NU,IBID)
      IF (NU.NE.' ') THEN
        CALL RGNDAS('NUME_DDL',NU,ISINGU,NOMNO,NOMCMP,TARDIF,LIGREL,
     &              INFOBL)
        CALL UTIMPK('L','NOEUD',1,NOMNO)
        CALL UTIMPK('S','CMP',1,NOMCMP)
        IF (TARDIF(1:4).NE.'    ') THEN
          CALL UTIMPK('S',TARDIF,1,LIGREL)
          CALL UTIMPK('L','IL S''AGIT SANS DOUTE D''UNE RELATION',0,' ')
          CALL UTIMPK('L','DE BLOCAGE SURABONDANTE',0,' ')
          CALL UTIMPK('L','BLOCAGE',1,INFOBL)

C         -- SI C'EST UN NOEUD DE LAGRANGE D'UNE LIAISON_DDL
C            ON IMPRIME LES NOEUDS CONCERNES PAR LA LIAISON :
          LLIAI= INDEX(INFOBL,'LIAISON_DDL')
          IF ((CODMES.EQ.'F').AND.(LLIAI.GT.0)) THEN
             CALL IMPPIV(NU,ISINGU)
          CALL UTIMPK('L','VOIR LA LISTE DES NOEUDS CI-DESSUS',0,' ')
          CALL UTIMPK('S','(DANS LE FICHIER "MESSAGE")',0,' ')
          END IF

        END IF
      END IF
      CALL UTFINM()

   20 CONTINUE
      IF (NIV.EQ.2) THEN
        WRITE (IFM,*) '<FACTOR> APRES FACTORISATION :'
        WRITE (IFM,*) '<FACTOR>  NB MAX. DECIMALES A PERDRE :',NDIGI2
        WRITE (IFM,*) '<FACTOR>  NB DECIMALES PERDUES       :',NDECI
        WRITE (IFM,*) '<FACTOR>  NUM. EQUATION LA PIRE      :',ISINGU
        WRITE (IFM,*) '<FACTOR>  NOMBRE PIVOTS NEGATIFS     :',-NPVNEG
        WRITE (IFM,*) '<FACTOR>  CODE ARRET (ISTOP)         :',ISTOP
        WRITE (IFM,*) '<FACTOR>  CODE RETOUR (IRET)         :',IRET
      END IF

      CALL JEDETR(NOMA19//'.DIGS')
      CALL JEDEMA()

      END
