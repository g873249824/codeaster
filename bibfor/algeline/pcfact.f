      SUBROUTINE PCFACT(MATAS,NEQU,IN,IP,AC,PRC,VECT,EPSI)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 03/05/2000   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C-----------------------------------------------------------------------
C  FONCTION  :  CREATION D'UNE MATRICE DE PRECONDITIONNEMENT PRC
C     PAR LDLT INCOMPLET SUR LA MATRICE MAT STOCKEE SOUS FORME MORSE
C     EN NE STOCKANT SOUS FORME MORSE DANS LA MATRICE PRC QUE LES
C     TERMES OCCUPANT LA MEME POSITION QUE DANS LA MATRICE DE DEPART

C     ON STOCKE L ' INVERSE DE LA DIAGONALE   ( VOIR S-P GCLDM1 )

C  REMARQUE: A L'APPEL AC ET PRC PEUVENT ETRE CONFONDUS
C-----------------------------------------------------------------------
      REAL*8 AC(*),PRC(*),VECT(NEQU)
      CHARACTER*19 MATAS
      INTEGER IN(NEQU),IP(*)


C     TDEB = SECOND()
C          ---- MISE A 0  DU VECTEUR AUXILIAIRE POUR PROD-SCAL CREUX
      DO 10 J = 1,NEQU
        VECT(J) = 0.D0
   10 CONTINUE

C       ---- PREMIER TERME DIAGONAL...ON STOCKE LES INVERSES
      PRC(1) = 1.D0/AC(1)

C---- BOUCLE SUR LES LIGNES DE LA MATRICE
      DO 50 I = 2,NEQU
CCCC  DO 100 I = 2 , 100
        JFIN = IN(I)
        JDEB = IN(I-1) + 1
C      ---- TEST SI LIGNE VIDE
        IF (JDEB.LE.JFIN) THEN
C        ---- TEST SI LIGNE(I)=SEUL TERME DIAG
          IF (JDEB.EQ.JFIN) THEN
            CUMUL = AC(JFIN)
          ELSE
C        ---- PREMIER TERME DE LA LIGNE
            PRC(JDEB) = AC(JDEB)
C                ALTERATION DU VECTEUR AUXILIAIRE POUR PROD-SCAL CREUX
            VECT(IP(JDEB)) = AC(JDEB)
C          ---- TERMES COURANTS DE LA LIGNE
            DO 30 JJ = JDEB + 1,JFIN - 1
              CUMUL = AC(JJ)
              J = IP(JJ)
              KFIN = IN(J)
              KDEB = IN(J-1) + 1
              DO 20 KK = KDEB,KFIN - 1
                CUMUL = CUMUL - PRC(KK)*VECT(IP(KK))
   20         CONTINUE
              PRC(JJ) = CUMUL
C                ALTERATION DU VECTEUR AUXILIAIRE POUR PROD-SCAL CREUX
              VECT(IP(JJ)) = CUMUL
   30       CONTINUE
C          ---- TERME DIAGONAL
            CUMUL = AC(JFIN)
CDIR$ IVDEP
            DO 40 KI = JDEB,JFIN - 1
              PRC(KI) = PRC(KI)*PRC(IN(IP(KI)))
              CUMUL = CUMUL - PRC(KI)*VECT(IP(KI))
C                   REMISE A 0 PARTIELLE DU VECTEUR AUXILIAIRE
              VECT(IP(KI)) = 0.D0
   40       CONTINUE
          END IF
C        ---- TEST DE SINGULARITE
          IF (ABS(CUMUL).LT.EPSI) THEN
            CALL UTDEBM('F','PCFACT',
     &                  ' PROBLEME DANS LE PRECONDITIONNEMENT'//
     &                  ' DE LA MATRICE '//MATAS//'PAR LDLT IMCOMPLET')
            CALL UTIMPI('L',' PIVOT NUL A LA LIGNE : ',1,I)
            CALL UTFINM()
          END IF
          PRC(JFIN) = 1.D0/CUMUL
        END IF
   50 CONTINUE
C     TFIN = SECOND() - TDEB
C     NCOEF = IN(NEQU)
C     WRITE (6,*) ' S-P PCFACT NCOEF= ',NCOEF
C     WRITE (6,*) '       DUREE ',TFIN
      END
