      SUBROUTINE ALFETI(SDFETI,MATAS,CHSECM,CHSOL,NITER,EPSI,CRITER,
     &                  TESTCO,NBREOR,TYREOR,PRECO,SCALIN,STOGI)
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 20/06/2005   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_20
C TOLE CRP_4
C-----------------------------------------------------------------------
C    - FONCTION REALISEE:  RESOLUTION FETI EN REEL SYMETRIQUE
C                          CF. ALGO. 9 DE LA NOTE HI-23/03/009
C     ------------------------------------------------------------------
C     IN  SDFETI : CH19 : SD DECRIVANT LE PARTIONNEMENT FETI
C     IN  MATAS  : CH19 : NOM DE LA MATR_ASSE GLOBALE
C     IN CHSECM  : CH19 : CHAM_NO SECOND MEMBRE GLOBAL
C     OUT CHSOL  : CH19 : CHAM_NO SOLUTION GLOBAL
C     IN  NITER  :  IN  : NOMBRE D'ITERATIONS MAXIMALES ADMISSIBLES DU
C                         GCPPC DE FETI
C     IN  EPSI   :  R8  : CRITERE D'ARRET RELATIF DU GCPPC
C     IN  CRITER :  K24 : STRUCTURE DE DONNEE STOCKANT INFOS DE CV
C     IN  TESTCO :  R8  : PARAMETRE DE TEST DE LA CONT. A L'INTERFACE
C     IN  NBREOR :  IN  : NBRE DE DD A REORTHOGONALISER
C     IN  TYREOR :  K24 : TYPE DE REORTHOGONALISATION
C     IN  PRECO  :  K24 : TYPE DE PRECONDITIONNEMENT
C     IN  SCALIN :  K24 : PARAMETRE DE SCALING DANS LE PRECOND
C     IN STOGI   :  K24  :PARAMETRE DE STOCKAGE DE LA MATRICE GI
C----------------------------------------------------------------------
C RESPONSABLE BOITEAU O.BOITEAU
C CORPS DU PROGRAMME
      IMPLICIT NONE

C DECLARATION PARAMETRES D'APPELS
      INTEGER      NITER,NBREOR
      REAL*8       EPSI,TESTCO
      CHARACTER*19 SDFETI,CHSECM,CHSOL,MATAS
      CHARACTER*24 CRITER,TYREOR,PRECO,SCALIN,STOGI
      
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER*4          ZI4
      COMMON  / I4VAJE / ZI4(1)
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      
C DECLARATION VARIABLES LOCALES
      INTEGER      IDIME,NBSD,NBI,IVLAGI,IFETF,IDD,IFETH,NB,I,IRZ,JCRR,
     &             IRR,IRG,IRP,IR1,IR2,ITER,IFM,NIV,IRET,JCRI,NBI1,JCRK,
     &             OPTION,IPSRO,IDDRO,NBREO2,IDDFRO,IAUX1,IAUX2,ITER1,J,
     &             NBREO1,IAUX3,IR3,IRH,IAD,JGITGI,DIMGI,ITEST,JGI,IPRJ,
     &             IVLAGB,LONG,MOD,IFIV,IINF,IFET6,IREX,IFETI,ILIMPI,
     &             NBTOT,IFET1,NBI2,IPIV,MAMOY,RANG,IBID,NIVMPI,NBSD1,
     &             NBPROC
      REAL*8       DNRM2,ANORM,ANORMK,ANORM0,EPSIK,PARAAF,DDOT,ALPHA,
     &             ALPHAN,ALPHAD,BETA,BETAD,BETAN,R8MIEM,RMIN,RAUX,
     &             TEMPS(6),RBID
      CHARACTER*8  NOMSD,K8BID
      CHARACTER*19 MATDD
      CHARACTER*24 COLAUX,COLAUI,COLAU2,NOMGGT,INFOFE,NOMGI,K24BID,
     &             SDFETG,KFETF,KFVAL,K24IRR,K24LAI,K24IR2,K24IRG,
     &             K24IRH,K24IRZ,K24IR1,K24IRP,K24IR3,K24LAB,K24PSR,
     &             K24DDR,K24FIR,K24REX,K24FIV,K24PRJ,K24IPI
      CHARACTER*32 JEXNOM,JEXNUM
      LOGICAL      REORTH,IGSMKP,GS,LUMPE,LRIGID,LSTOGI,LPARA

C CORPS DU PROGRAMME
      CALL JEMARQ()
            
C PLUS PETITE VALEUR REELLE DISCERNABLE
      RMIN=R8MIEM()**(2.0D+0/3.0D+0)      
C RECUPERATION DU NIVEAU D'IMPRESSION
      CALL INFNIV(IFM,NIV)
      CALL JEVEUO('&&'//SDFETI(1:17)//'.FINF','L',IINF)
      INFOFE=ZK24(IINF)
C INITIALISATION DE UTTCPU POUR PROFILING
      CALL FETCPU(1,TEMPS,INFOFE,RANG,IFM)
C ADRESSE JEVEUX OBJET FETI & MPI
      CALL JEVEUO('&FETI.LISTE.SD.MPI','L',ILIMPI)

C APPELS MPI POUR DETERMINER LE RANG DU PROCESSUS ET LE NOMBRE DE PROC
C + INITS DEDIEES PARALLELISME
      IF (INFOFE(10:10).EQ.'T') THEN
        NIVMPI=2
      ELSE
        NIVMPI=1
      ENDIF
      CALL FETMPI(2,IBID,IFM,NIVMPI,RANG,IBID,K24BID,K24BID,K24BID,RBID)
      CALL FETMPI(3,IBID,IFM,NIVMPI,IBID,NBPROC,K24BID,K24BID,K24BID,
     &            RBID)
      IF (NBPROC.EQ.1) THEN
        LPARA=.FALSE.
      ELSE
        LPARA=.TRUE.
      ENDIF
      
C-----PARAMETRE D'AFFICHAGE DE LA DECROISSANCE DU RESIDU
C (SI ON GAGNE PARAAF * 100%)      
      PARAAF = 0.1D0
                  
C ----------------------------------------------------------------------
C ----  PREPARATION DES DONNEES
C ----------------------------------------------------------------------

      CALL JEVEUO(SDFETI(1:19)//'.FDIM','L',IDIME)
C NOMBRE DE SOUS-DOMAINES       
      NBSD=ZI(IDIME)
      NBSD1=NBSD+1
C NOMBRE DE LAGRANGE D'INTERFACE
      NBI2=ZI(IDIME+1)            
C NOMBRE DE DDLS D'INTERFACE
      NBI=ZI(IDIME+3)
      NBI1=NBI-1
C NOMBRE DE DDLS TOTAL
      NBTOT=ZI(IDIME+4)      
C TRAITEMENT DU NOMBRE D'ITERATION SI NULLE      
      IF (NITER.EQ.0) THEN
        NITER = MAX(NBI/100,10)
        IF (RANG.EQ.0) WRITE(IFM,1060)NITER
      ENDIF          
      
C VECTEUR DE LA LISTE DES NOMBRES DE DDLS PAR SOUS-DOMAINE
      CALL JEVEUO(SDFETI(1:19)//'.FETH','L',IFETH)
C PRECONDITIONNEMENT LUMPE OU NON ?
      IF (PRECO(1:5).EQ.'LUMPE') THEN
        LUMPE=.TRUE.
      ELSE
        LUMPE=.FALSE.
      ENDIF
      IF ((PRECO(1:4).EQ.'SANS').AND.(SCALIN(1:4).NE.'SANS'))
     &   CALL UTMESS('F','ALFETI','SCALING LICITE QU''AVEC '//
     &     'PRECONDITIONNEMENT !')                        
C COLLECTIONS TEMPORAIRES DE VECTEURS AUXILAIRES DE TAILLES VARIABLES
      COLAUX='&&FETI.COLLECTIONR'
      COLAUI='&&FETI.COLLECTIONI'      
      CALL JECREC(COLAUX,'V V R','NO','DISPERSE','VARIABLE',NBSD)
      IF (LUMPE) THEN
        COLAU2='&&FETI.COLLECTIONL'            
        CALL JECREC(COLAU2,'V V R','NO','DISPERSE','VARIABLE',NBSD)
      ENDIF

C========================================
C BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C========================================
C STRUCTURE DE DONNEE POUR APPEL A JENUNO/JEXNOM
      SDFETG=SDFETI//'.FETG'
      DO 10 IDD=1,NBSD
C LE SOUS-DOMAINE IDD EST IL CONCERNE PAR LE PROCESSUS ACTUEL ?
        IF (ZI(ILIMPI+IDD).EQ.1) THEN
          CALL JENUNO(JEXNUM(SDFETG,IDD),NOMSD)
          CALL JECROC(JEXNOM(COLAUX,NOMSD))
          NB=ZI(IFETH+IDD-1)
          CALL JEECRA(JEXNOM(COLAUX,NOMSD),'LONMAX',NB,K8BID)
          IF (LUMPE) THEN
            CALL JECROC(JEXNOM(COLAU2,NOMSD))
            CALL JEECRA(JEXNOM(COLAU2,NOMSD),'LONMAX',NB,K8BID)   
          ENDIF
        ENDIF
   10 CONTINUE
C========================================
C FIN BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C========================================

      CALL FETING(NBSD,SDFETI,CHSECM,COLAUI,INFOFE,IFM,ILIMPI,RANG)

C ---------------------------------------------------
C SI REORTHOGONALISATION DES DIRECTIONS DE DESCENTE
C ON ALLOUE LES GROS OBJETS QUE SI PROCESSUS MAITRE
C ---------------------------------------------------
      IF (TYREOR(1:4).NE.'SANS') THEN      
        REORTH=.TRUE.
C TRAITEMENT DU NOMBRE DE DD REORTHOGONALISEES SI NULLE      
        IF (NBREOR.EQ.0) THEN
          NBREOR = MAX(NITER/10,5)
          IF (RANG.EQ.0) WRITE(IFM,1065)NBREOR   
        ENDIF
        IF (RANG.EQ.0) THEN
          NBREO1=NBREOR+2
          NBREO2=NBREO1*NBI
          K24PSR='&&FETI.PS.REORTHO.R'
          CALL WKVECT(K24PSR,'V V R',NBREO1,IPSRO)
          K24DDR='&&FETI.DD.REORTHO.R'
          CALL WKVECT(K24DDR,'V V R',NBREO2,IDDRO)
          K24FIR='&&FETI.FIDD.REORTHO.R'
          CALL WKVECT(K24FIR,'V V R',NBREO2,IDDFRO)
        ENDIF
        IGSMKP=.FALSE.
        GS=.FALSE.      
        IF (TYREOR.EQ.'IGSM') IGSMKP=.TRUE.
        IF (TYREOR.EQ.'GS') GS=.TRUE.
      ELSE
        REORTH=.FALSE.
      ENDIF

C VECTEUR TEMPORAIRE DES INCONNUES D'INTERFACE DE TYPE LAGRANGE
      K24LAI='&&FETI.LAGR.INTERFACE'      
      CALL WKVECT(K24LAI,'V V R',NBI,IVLAGI)
      K24LAB='&&FETI.LAGR.INTERFACB'
      CALL WKVECT(K24LAB,'V V R',NBI,IVLAGB)
      
C VECTEURS TEMPORAIRES
      K24IRR='&&FETI.RESIDU.R'           
      CALL WKVECT(K24IRR,'V V R',NBI,IRR)
      K24IRG='&&FETI.REPROJ.G'
      CALL WKVECT(K24IRG,'V V R',NBI,IRG)
      K24IRH='&&FETI.REPCPJ.H'
      CALL WKVECT(K24IRH,'V V R',NBI,IRH)
      K24IRP='&&FETI.DD.P'
      CALL WKVECT(K24IRP,'V V R',NBI,IRP)
      K24IRZ='&&FETI.FIDD.Z'
      CALL WKVECT(K24IRZ,'V V R',NBI,IRZ)
      K24IR1='&&FETI.VECNBI.AUX1'      
      CALL WKVECT(K24IR1,'V V R',NBI,IR1)
      K24IR2='&&FETI.VECNBI.AUX2'
      CALL WKVECT(K24IR2,'V V R',NBI,IR2)
      K24IR3='&&FETI.VECNBI.AUX3'
      CALL WKVECT(K24IR3,'V V R',NBI,IR3)

C PREPARATION DES DONNEES POUR FETREX AFIN D'ECONOMISER DES JEVEUO...
      I=1+3*NBSD
      K24REX='&&FETI.FETREX.AUX'
      CALL WKVECT(K24REX,'V V I',I,IREX)
      CALL JEVEUO(SDFETI//'.FETI','L',IFETI)
      ZI(IREX)=IFETI
C========================================
C BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C========================================      
      DO 11 IDD=1,NBSD
C LE SOUS-DOMAINE IDD EST IL CONCERNE PAR LE PROCESSUS ACTUEL ?
        IF (ZI(ILIMPI+IDD).EQ.1) THEN
          IAUX3=IREX+3*(IDD-1)+1
          CALL JENUNO(JEXNUM(SDFETG,IDD),NOMSD)
          CALL JEVEUO(JEXNOM(SDFETG,NOMSD),'L',ZI(IAUX3))
          IAUX3=IAUX3+1
          CALL JELIRA(JEXNOM(SDFETG,NOMSD),'LONMAX',LONG,K8BID)
          IF (MOD(LONG,2).NE.0) THEN
            CALL UTMESS('F','ALFETI-FETREX','PROBLEME OBJET '//SDFETI//
     &       '.FETG . IL EST DE LONGUEUR IMPAIRE !')
          ELSE
            ZI(IAUX3)=(LONG/2)-1
            IAUX3=IAUX3+1   
          ENDIF
          CALL JEVEUO(JEXNOM(COLAUI,NOMSD),'L',ZI(IAUX3))
        ENDIF
C========================================
C FIN BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C========================================
   11 CONTINUE

C PREPARATION DES DONNEES POUR FETFIV AFIN D'ECONOMISER DES JEVEUO...
      I=2+5*NBSD
      K24FIV='&&FETI.FETFIV.AUX'
      CALL WKVECT(K24FIV,'V V I',I,IFIV)
      ZI(IFIV)=IFM
      CALL JEVEUO(MATAS//'.FETM','L',IAUX1)
      ZI(IFIV+1)=IAUX1      
C========================================
C BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C========================================      
      DO 12 IDD=1,NBSD
C LE SOUS-DOMAINE IDD EST IL CONCERNE PAR LE PROCESSUS ACTUEL ?
        IF (ZI(ILIMPI+IDD).EQ.1) THEN
          IAUX3=IFIV+2+5*(IDD-1)
          MATDD=ZK24(IAUX1+IDD-1)(1:19)     
          CALL JEVEUO(MATDD//'.&INT','L',ZI(IAUX3))
          IAUX3=IAUX3+1   
          CALL JEEXIN(MATDD//'.CONL',IRET)
          ZI(IAUX3)=IRET
          IAUX3=IAUX3+1
          IF (IRET.NE.0)
     &      CALL JEVEUO(MATDD//'.CONL','L',IAUX2)
          ZI(IAUX3)=IAUX2                 
          IAUX3=IAUX3+1
          CALL JENUNO(JEXNUM(SDFETG,IDD),NOMSD)
          CALL JEVEUO(JEXNOM(COLAUX,NOMSD),'E',ZI(IAUX3))
          IAUX3=IAUX3+1
          IF (LUMPE)
     &      CALL JEVEUO(JEXNOM(COLAU2,NOMSD),'E',ZI(IAUX3))
          IAUX3=IAUX3+1
        ENDIF
C========================================
C FIN BOUCLE SUR LES SOUS-DOMAINES + IF MPI:
C========================================           
   12 CONTINUE

C ----------------------------------------------------------------------
C ----  INITIALISATION DE L'ALGORITHME FETI
C ----------------------------------------------------------------------
C NOMS DES OBJETS JEVEUX STOCKANT GI ET (GI)T*GI SI LRIGID=.TRUE.
      CALL FETCPU(2,TEMPS,INFOFE,RANG,IFM)
      
      NOMGGT='&&FETI.GITGI.R'
      NOMGI='&&FETI.GI.R'

C VECTEUR INDIQUANT SI UN SOUS-DOMAINE EST FLOTTANT ET SON NOMBRE DE
C MODES DE CORPS RIGIDES
C EN SEQUENTIEL ON PREND L'ADRESSE DE MATAS.FETF
C EN PARALLELE ON SOMME CETTE DONNEE LOCALE ET ON LA TRANSFERRE A TOUS
C PROCESSEUR PAR UN MPI_ALLREDUCE + MPI_SUM
      KFETF=MATAS//'.FETF'
      IF (LPARA) CALL FETMPI(6,NBSD,IFM,NIVMPI,IBID,IBID,KFETF,K24BID,
     &                       K24BID,RBID)
      CALL JEVEUO(KFETF,'L',IFETF)
            
C VECTEUR INDIQUANT LE NBRE DE COEFF DES MATRICES LOCALES
C EN SEQUENTIEL ON PREND L'ADRESSE DE '&FETI.INFO.STOCKAGE.FVAL'
C EN PARALLELE ON TRANSFERE CETTE DONNEE LOCALE A CHAQUE PROCESSEUR PAR
C UN MPI_ALLREDUCE + MPI_SUM
      KFVAL='&FETI.INFO.STOCKAGE.FVAL'
      IF (LPARA) CALL FETMPI(6,NBSD1,IFM,NIVMPI,IBID,IBID,KFVAL,K24BID,
     &                       K24BID,RBID)
      CALL JEVEUO(KFVAL,'L',IFET1)
      MAMOY=ZI(IFET1+NBSD)/NBSD

C TANT QU'A SYNCHRONISER ON FAIT LE MEME TRAVAIL POUR LES AUTRES OBJETS
C PERIPHERIQUES
      IF (LPARA) THEN
        K24BID='&FETI.INFO.STOCKAGE.FVAF'      
        CALL FETMPI(4,NBSD1,IFM,NIVMPI,IBID,IBID,K24BID,K24BID,K24BID,
     &              RBID)
        K24BID='&FETI.INFO.STOCKAGE.FNBN'
        CALL FETMPI(4,NBSD1,IFM,NIVMPI,IBID,IBID,K24BID,K24BID,K24BID,
     &              RBID)
        K24BID='&FETI.INFO.CPU.FACS'
        CALL FETMPI(5,NBSD1,IFM,NIVMPI,IBID,IBID,K24BID,K24BID,K24BID,
     &              RBID)
        K24BID='&FETI.INFO.CPU.ASSE'
        CALL FETMPI(5,NBSD1,IFM,NIVMPI,IBID,IBID,K24BID,K24BID,K24BID,
     &              RBID)
        K24BID='&FETI.INFO.CPU.FACN'
        CALL FETMPI(5,NBSD1,IFM,NIVMPI,IBID,IBID,K24BID,K24BID,K24BID,
     &              RBID)
      ENDIF
C CALCUL DE GI, (GI)T*GI ET DIMGI  
      CALL FETGGT(NBSD,MATAS,ZI(IFETF),ZI(IFETH),LRIGID,NBI,NOMGGT,
     &            DIMGI,NOMGI,STOGI,LSTOGI,MAMOY,INFOFE,IREX,IFM,
     &            SDFETI,NBPROC,RANG)
C EN PARALLELE, GI ET GIT*GI NE SONT STOCKES QUE PAR LE PROC 0
      IF ((LRIGID).AND.(RANG.EQ.0)) THEN
        IF (LSTOGI) CALL JEVEUO(NOMGI,'L',JGI)
        CALL JEVEUO(NOMGGT,'L',JGITGI)
      ENDIF
      CALL FETCPU(3,TEMPS,INFOFE,RANG,IFM)

C PREPARATION DES DONNEES POUR FETPRJ AFIN D'ECONOMISER DES JEVEUO...
      K24PRJ='&&FETI.FETPRJ.AUX'
      CALL WKVECT(K24PRJ,'V V I',3,IPRJ)
      ZI(IPRJ)=IFM
      IF (LRIGID) THEN
        CALL WKVECT('&&FETPRJ.GITVI.R','V V R',DIMGI,ZI(IPRJ+1))
        CALL WKVECT('&&FETI.GGT.V4','V V R',NBI,ZI(IPRJ+2))           
      ENDIF

C MONITORING SI INFOFE(9:9)='T'
      CALL FETMON(INFOFE,NBI2,NBI,NBTOT,NBSD,DIMGI,IFM,MAMOY,LSTOGI,
     &            IFET1,RANG)
C ---------------------------------------------------
C CALCUL DU VECTEUR LAGRANGE_FETI INITIAL LANDA0 (ZR(IVLAGI))
C ---------------------------------------------------
      IF ((LRIGID).AND.(RANG.EQ.0)) THEN
        K24IPI='&&FETI.LAPACK.IPIV'
        CALL WKVECT(K24IPI,'V V S',DIMGI,IPIV)
      ENDIF
      CALL FETINL(NBI,ZR(IVLAGI),JGITGI,MATAS,CHSECM,LRIGID,DIMGI,
     &            NBSD,ZI(IFETF),ZI(IFETH),IPIV,ZR(JGI),LSTOGI,
     &            INFOFE,IREX,IFM,SDFETI,NBPROC,RANG,K24LAI)

C ---------------------------------------------------      
C CALCUL DU RESIDU INITIAL (ZR(IRR)): R0=OPFETI*LANDA0 - D
C ---------------------------------------------------
      CALL FETRIN(NBSD,NBI,ZR(IRR),ZR(IR1),MATAS,ZI(IFETF),ZI(IFETH),
     &            COLAUX,CHSECM,SDFETI,ZR(IVLAGI),1,CHSOL,
     &            TESTCO,LRIGID,DIMGI,IRR,JGITGI,IPIV,ZR(JGI),
     &            LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,NBPROC,RANG,K24IRR)

C ---------------------------------------------------     
C CALCUL DU RESIDU PROJETE INITIAL (ZR(IRG)): G0=P*R0
C ---------------------------------------------------
      CALL FETPRJ(NBI,ZR(IRR),ZR(IRG),JGITGI,LRIGID,
     &   DIMGI,1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,ZR(JGI),
     &   LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24IRG)
     
C ---------------------------------------------------      
C CALCUL DU RESIDU PRECOND PROJETE P INITIAL (ZR(IRH)): H0=P*M-1*G0
C ---------------------------------------------------
      CALL FETPRC(NBSD,NBI,ZR(IRG),ZR(IR1),ZR(IR2),MATAS,ZI(IFETH),
     &            PRECO,INFOFE,IREX,IFIV,NBPROC,RANG,K24IR2)
      CALL FETPRJ(NBI,ZR(IR2),ZR(IRH),JGITGI,LRIGID,
     &    DIMGI,1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,ZR(JGI),
     &    LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24IRH)
     
C ---------------------------------------------------         
C CALCUL DE LA DD INITIALE (ZR(IRP)): P0=H0 (=G0 SI NON PRECOND)
C ---------------------------------------------------
      CALL DCOPY(NBI,ZR(IRH),1,ZR(IRP),1)

      IF (RANG.EQ.0) THEN   
C ---------------------------------------------------
C CALCUL DE ALPHAN0 = G0.P0 (=G0.G0 SI NON PRECOND)
C ---------------------------------------------------      
        ALPHAN=DDOT(NBI,ZR(IRG),1,ZR(IRP),1)
      
        CALL DCOPY(NBI,ZR(IRG),1,ZR(IRR),1)
C ---------------------------------------------------      
C CALCUL DE LA NORME DU RESIDU PROJETE INITIAL (ANORM) POUR TEST
C D'ARRET: EPSIK
C ---------------------------------------------------
        K24BID='VIDE'
        CALL FETPRJ(NBI,ZR(IRR),ZR(IR1),JGITGI,LRIGID,DIMGI,
     &            1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,
     &            ZR(JGI),LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24BID)
        ANORM=DNRM2(NBI,ZR(IR1),1)
        EPSIK=EPSI*ANORM 
        IF (INFOFE(9:9).EQ.'T') THEN
          WRITE(IFM,*)'******************************************'
          WRITE (IFM,1020)ANORM,EPSIK,EPSI
          WRITE(IFM,*)'******************************************'
        ENDIF
      ENDIF

C EN PARALLELE, DIFFUSION DE LA NORME INITIALE A TOUS LES PROC POUR LA
C CONSTRUCTION DES TESTS D'ARRET
      IF (LPARA) THEN
        CALL FETMPI(10,IBID,IFM,NIVMPI,RANG,IBID,K24BID,K24BID,K24BID,
     &                ANORM)
        EPSIK=EPSI*ANORM 
      ENDIF
C ---------------------------------------------------
C PREPARATION DE L'OBJET JEVEUX CRITER
C ---------------------------------------------------
      CALL JEEXIN(CRITER(1:19)//'.CRTI',IRET)
      IF (IRET.EQ.0) THEN
        CALL WKVECT(CRITER(1:19)//'.CRTI','V V I',1,JCRI)
        CALL WKVECT(CRITER(1:19)//'.CRTR','V V R8',1,JCRR)
        CALL WKVECT(CRITER(1:19)//'.CRDE','V V K16',2,JCRK)
        ZK16(JCRK)='ITER_GCPC'
        ZK16(JCRK+1)='RESI_GCPC'
      ENDIF
      CALL JEVEUO(CRITER(1:19)//'.CRTI','E',JCRI)
      CALL JEVEUO(CRITER(1:19)//'.CRTR','E',JCRR)
              
C ---------------------------------------------------
C CONSTANTES POUR AFFICHAGE (ANORMK) ET NORME INITIALE (ANORM0)
C ---------------------------------------------------
      ANORMK=ANORM*PARAAF
      ANORM0=ANORM
      IF (ANORM0.LT.RMIN) THEN
        ANORM0=RMIN
        IF (RANG.EQ.0) CALL UTMESS('A','ALFETI','RESIDU INITIAL NUL '//
     &                                 'SOLUTION LANDAS=LANDA0 !')
           
C -----------------------------
C CALCUL SOLUTION U GLOBALE
C -----------------------------

C RECALCUL DU RESIDU AVEC CE NOUVEAU LANDA_SOL (POUR ALPHA) SI MODES
C DE CORPS RIGIDES
        IF (LRIGID) THEN           
          OPTION=1
          CALL FETRIN(NBSD,NBI,ZR(IRR),ZR(IR1),MATAS,ZI(IFETF),
     &              ZI(IFETH),COLAUX,CHSECM,SDFETI,ZR(IVLAGI),
     &              OPTION,CHSOL,TESTCO,LRIGID,DIMGI,IRR,JGITGI,
     &              IPIV,ZR(JGI),LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,
     &              NBPROC,RANG,K24IRR)
        ENDIF
C CALCUL DE USOL LOCALE PUIS GLOBAL PROPREMENT DIT
C UI_SOL = (KI)+ * (FI - RIT*LANDA_SOL) - BI*ALPHAI_SOL   
        OPTION=2
        CALL FETRIN(NBSD,NBI,ZR(IRR),ZR(IR2),MATAS,ZI(IFETF),
     &      ZI(IFETH),COLAUX,CHSECM,SDFETI,ZR(IVLAGI),OPTION,
     &      CHSOL,TESTCO,LRIGID,DIMGI,IRR,JGITGI,IPIV,ZR(JGI),
     &      LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,NBPROC,RANG,K24IRR)
          
        GOTO 200
      ENDIF

C ---------------------------------------------------
C ATTENTION: ON SAUVEGARDE LA VALEUR INITIALE LANDA0 DANS ZR(IVLAGB)
C L'ANCIENNE VARIABLE ZR(IVALGI) DEVIENT UN LANDA_DE_TRAVAIL DU GCPC
C QUI EST INITIALISEE A ZERO.
C A LA FIN DU GCPC ON RECONSTRUIT LE VRAI LANDA SOLUTION VIA
C     LANDA_SOL = LANDA0 + P * LANDA_DE_TRAVAIL_CONVERGE
C ---------------------------------------------------
      CALL DCOPY(NBI,ZR(IVLAGI),1,ZR(IVLAGB),1)
      DO 30 I=0,NBI1
        ZR(IVLAGI+I)=0.D0
   30 CONTINUE
      CALL FETCPU(4,TEMPS,INFOFE,RANG,IFM)

C TEST DEFINIE-POSITIVITE DE P*FI*P SI INFOFE(7:7)='T' ET NBPROC=1
      CALL FETARP(INFOFE,IFM,NITER,NBI,NBREOR,LRIGID,DIMGI,SDFETI,
     &            IPIV,JGITGI,NBSD,IFETF,IFETH,JGI,LSTOGI,IREX,
     &            IPRJ,IR2,IFIV,MATAS,NBPROC,RANG)
C INIT. TEMPORAIRES POUR TEST      
      IF ((INFOFE(8:8).EQ.'T').AND.(RANG.EQ.0))
     &  CALL WKVECT('&&FETI.TEST','V V R',NBI,ITEST)
         
C ----------------------------------------------------------------------
C ----------------------------------------------------------------------
C ----  BOUCLES DU GCPPC DE FETI
C ----------------------------------------------------------------------
C ----------------------------------------------------------------------

      DO 100 ITER=0,NITER

        CALL FETCPU(5,TEMPS,INFOFE,RANG,IFM)       

        ITER1=ITER+1
C STOCKAGE PK SI REORTHO
        IF ((REORTH).AND.(RANG.EQ.0)) THEN
          IF (ITER.LT.NBREOR) THEN
            IAUX1=ITER1*NBI
          ELSE
            IAUX1=0
          ENDIF
          CALL DCOPY(NBI,ZR(IRP),1,ZR(IDDRO+IAUX1),1)
        ENDIF

C ---------------------------------------------------
C ----  CALCUL DU PRODUIT OPERATEUR_FETI * PK = ZK
C ---------------------------------------------------
        CALL FETFIV(NBSD,NBI,ZR(IRP),ZR(IR2),ZR(IRZ),MATAS,ZI(IFETF),
     &    ZI(IFETH),INFOFE,IREX,IFIV,NBPROC,RANG,K24IRZ,SDFETI)
        
C STOCKAGE ZK=FI*PK SI REORTHO
        IF ((REORTH).AND.(RANG.EQ.0))
     &    CALL DCOPY(NBI,ZR(IRZ),1,ZR(IDDFRO+IAUX1),1)

        CALL FETCPU(6,TEMPS,INFOFE,RANG,IFM)
C ---------------------------------------------------
C ----  CALCUL DE ALPHAK = GK.PK/ZK.PK = ALPHANK/ALPHADK
C ---------------------------------------------------
        IF (RANG.EQ.0) THEN
          ALPHAD=DDOT(NBI,ZR(IRP),1,ZR(IRZ),1)
          IF (ABS(ALPHAD).LT.RMIN) THEN
            ALPHAD=RMIN
            CALL UTMESS('A','ALFETI','PB DIVISION PAR ZERO'//
     &       'DANS LA CONSTRUCTION DU ALPHA !')     
          ENDIF
          ALPHA=ALPHAN/ALPHAD
        ENDIF

C STOCKAGE ZK.PK SI REORTHO
        IF ((REORTH).AND.(RANG.EQ.0)) THEN
          IF (ITER.LT.NBREOR) THEN
            IAUX1=ITER1
          ELSE
            IAUX1=0
          ENDIF
          ZR(IPSRO+IAUX1)=ALPHAD
        ENDIF

        CALL FETTOR(1,INFOFE,RANG,ITEST,NBI,IRR,IR1,JGITGI,LRIGID,DIMGI,
     &              SDFETI,IPIV,NBSD,IFETF,IFETH,MATAS, JGI,LSTOGI,IREX,
     &              IPRJ,NBPROC,K24IRG,IRG,IFM,IRP,IRZ)
        
C ---------------------------------------------------
C ----  CALCUL NOUVEAUX VECTEUR D'INTERFACE ET RESIDU
C ---- (ZR(IVLAGI)) LANDAK+1 = LANDAK + ALPHAK * PK  
C ---- (ZR(IRR)))   RK+1     = RK     - ALPHAK * ZK
C ---------------------------------------------------
        IF (RANG.EQ.0) THEN   
          CALL DAXPY(NBI,ALPHA,ZR(IRP),1,ZR(IVLAGI),1)        
          CALL DAXPY(NBI,-ALPHA,ZR(IRZ),1,ZR(IRR),1)
        ENDIF

        CALL FETCPU(7,TEMPS,INFOFE,RANG,IFM)
C ---------------------------------------------------
C ----  CALCUL DE LA PROJECTION 1 (ZR(IRG)): GK+1 = P * RK+1
C ---------------------------------------------------
        CALL FETPRJ(NBI,ZR(IRR),ZR(IRG),JGITGI,LRIGID,DIMGI,
     &              1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,
     &              ZR(JGI),LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24IRG)

        CALL FETCPU(8,TEMPS,INFOFE,RANG,IFM)
        CALL FETTOR(2,INFOFE,RANG,ITEST,NBI,IRR,IR1,JGITGI,LRIGID,DIMGI,
     &              SDFETI,IPIV,NBSD,IFETF,IFETH,MATAS, JGI,LSTOGI,IREX,
     &              IPRJ,NBPROC,K24IRG,IRG,IFM,IRP,IRZ)          
C ---------------------------------------------------
C ----  CALCUL TEST D'ARRET ET AFFICHAGE
C ---------------------------------------------------
        ANORM=DNRM2(NBI,ZR(IRG),1)
        IF (RANG.EQ.0) THEN
          IF (ANORM.LE.ANORMK) THEN
            IF (NIV.EQ.1) THEN
              WRITE(IFM,*)'******************************************'
              WRITE (*,1041)ITER1,ANORM,ANORM/ANORM0
              WRITE(IFM,*)'******************************************'
            ENDIF
            ANORMK=ANORM*PARAAF
          ELSE
            IF (INFOFE(9:9).EQ.'T') THEN
              WRITE(IFM,*)
              WRITE(IFM,*)'******************************************'
              WRITE(IFM,1041)ITER1,ANORM,ANORM/ANORM0
              WRITE(IFM,*)'******************************************'
            ENDIF
          ENDIF
        ENDIF
C -----------------------------
C TEST DE CONVERGENCE
C -----------------------------
        IF (ANORM.LT.EPSIK) THEN
          IF (RANG.EQ.0) THEN
            WRITE(IFM,1040)ANORM0,ANORM,ANORM/ANORM0
            WRITE(IFM,1050)ITER1
          ENDIF
C POUR QUE LES PROCESSUS ESCLAVES SE TERMINENT PROPREMENT
          ZI(JCRI)=ITER1
          ZR(JCRR)=ANORM
C -----------------------------
C CALCUL SOLUTION U GLOBALE
C -----------------------------

C UNE FOIS LANDA_DE_TRAVAIL-CV TROUVE ON RECONSTRUIT LE VRAI LANDA
C     LANDA_SOL =  LANDA0 +    P * LANDA_DE_TRAVAIL_CONVERGE
C     ZR(IVLAGI)  ZR(IVLAGB)        ZR(IR1)
          CALL FETPRJ(NBI,ZR(IVLAGI),ZR(IR1),JGITGI,LRIGID,DIMGI,1,
     &              SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,ZR(JGI),
     &              LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24IR1)
          DO 65 I=0,NBI1
            ZR(IVLAGI+I)=ZR(IVLAGB+I)+ZR(IR1+I)
   65     CONTINUE
C RECALCUL DU RESIDU AVEC CE NOUVEAU LANDA_SOL (POUR ALPHA) SI MODES
C DE CORPS RIGIDES
          IF (LRIGID) THEN           
            OPTION=1
            CALL FETRIN(NBSD,NBI,ZR(IRR),ZR(IR1),MATAS,ZI(IFETF),
     &              ZI(IFETH),COLAUX,CHSECM,SDFETI,ZR(IVLAGI),
     &              OPTION,CHSOL,TESTCO,LRIGID,DIMGI,IRR,JGITGI,
     &              IPIV,ZR(JGI),LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,
     &              NBPROC,RANG,K24IRR)
          ENDIF
C CALCUL DE USOL LOCALE PUIS GLOBAL PROPREMENT DIT
C UI_SOL = (KI)+ * (FI - RIT*LANDA_SOL) - BI*ALPHAI_SOL   
          OPTION=2
          CALL FETRIN(NBSD,NBI,ZR(IRR),ZR(IR2),MATAS,ZI(IFETF),
     &      ZI(IFETH),COLAUX,CHSECM,SDFETI,ZR(IVLAGI),OPTION,
     &      CHSOL,TESTCO,LRIGID,DIMGI,IRR,JGITGI,IPIV,
     &      ZR(JGI),LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,NBPROC,RANG,K24IRR)
          CALL FETCPU(9,TEMPS,INFOFE,RANG,IFM)
          GOTO 200
        ELSE
          CALL FETCPU(9,TEMPS,INFOFE,RANG,IFM) 
        ENDIF
         
C ---------------------------------------------------
C ----  PRECONDITIONNEMENT (ZR(IRH)): HK+1 =P*A*M-1*A*GK+1
C ---------------------------------------------------
        CALL FETCPU(10,TEMPS,INFOFE,RANG,IFM)
   
C PHASE DE SCALING 1 (ZR(IR1)): AUX1 = A * GK+1
        CALL FETSCA(NBI,ZR(IRG),ZR(IR1),SCALIN,INFOFE,NBI2,IFETI,IFM)
C CALCUL DU RESIDU PRECOND PROJETE P INITIAL (ZR(IR2)): AUX2 = M-1*AUX1
        CALL FETPRC(NBSD,NBI,ZR(IR1),ZR(IR3),ZR(IR2),MATAS,ZI(IFETH),
     &              PRECO,INFOFE,IREX,IFIV,NBPROC,RANG,K24IR2)
C PHASE DE SCALING 2 (ZR(IR1)): AUX1 = A * AUX2
        IF (RANG.EQ.0)
     &    CALL FETSCA(NBI,ZR(IR2),ZR(IR3),SCALIN,INFOFE,NBI2,IFETI,IFM)

C CALCUL DE LA PROJECTION 2 (ZR(IRH)): HK+1 = P * AUX1
        K24BID='VIDE'
        CALL FETPRJ(NBI,ZR(IR3),ZR(IRH),JGITGI,LRIGID,DIMGI,
     &              1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,
     &              ZR(JGI),LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24BID)

        CALL FETCPU(11,TEMPS,INFOFE,RANG,IFM)
C ---------------------------------------------------
C ----  NEW DIRECTION DE DESCENTE (ZR(IRP)): PK+1=HK+1 + ...
C       AVEC EVENTUELLEMENT UNE PHASE DE REORTHONORMALISATION
C ---------------------------------------------------
        CALL FETREO(REORTH,ALPHAN,NBI,IRG,ITER,NBREOR,IRP,IDDFRO,
     &              IDDRO,IPSRO,GS,IGSMKP,RMIN,IRH,INFOFE,IFM,NBPROC,
     &              RANG,K24IRP)

        CALL FETCPU(12,TEMPS,INFOFE,RANG,IFM)
        CALL FETTOR(3,INFOFE,RANG,ITEST,NBI,IRR,IR1,JGITGI,LRIGID,DIMGI,
     &              SDFETI,IPIV,NBSD,IFETF,IFETH,MATAS, JGI,LSTOGI,IREX,
     &              IPRJ,NBPROC,K24IRG,IRG,IFM,IRP,IRZ)            
C ----------------------------------------------------------------------
C ----------------------------------------------------------------------
C ----  FIN BOUCLES DU GCPPC DE FETI
C ----------------------------------------------------------------------
C ----------------------------------------------------------------------
  100 CONTINUE    

C ----------------------------------------------------------------------
C ----  POST-TRAITEMENTS DES DONNEES
C ----------------------------------------------------------------------
      
C NON CONVERGENCE
      IF (RANG.EQ.0) THEN
        CALL UTDEBM('F','ALFETI','NON CONVERGENCE')
        CALL UTIMPI('L','  NOMBRE D''ITERATIONS: ',1,ITER1)
        CALL UTIMPR('L','  NORME DU RESIDU ABS: ',1,ANORM)
        CALL UTIMPR('L','  NORME DU RESIDU REL: ',1,ANORM/ANORM0)
        CALL UTFINM()
      ENDIF
C FORMAT AFFICHAGE
 1020 FORMAT(/'   * FETI: NORME DU RESIDU INITIAL =',D11.4,/,
     & '   *        NORME DU RESIDU A ATTEINDRE EN ABS/RELA=',
     & D11.4,D11.4)
 1040 FORMAT('   * FETI: NORME DU RESIDU INITIAL/FINAL/RELATIF=',
     &         D11.4,D11.4,D11.4)
 1041 FORMAT('   * ITERATION',I5,' NORME DU RESIDU EN ABS/RELA =',
     &         D11.4,D11.4)     
 1050 FORMAT(1X,/,2X,32 ('*')/'  * CONVERGENCE EN ',I4,
     &       ' ITERATIONS'/2X,32 ('*'),/)
 1060 FORMAT('! FETI: NMAX_ITER FIXE A NB_NOEUD_INTERFACE/10= ',I6,' !')
 1065 FORMAT('! FETI: NB_REORTHO_DD FIXE A NMAX_ITER/5= ',I6,' !')
     
C DESTRUCTION DES OBJETS JEVEUX TEMPORAIRES
  200 CONTINUE
      IF ((LRIGID).AND.(RANG.EQ.0)) CALL JEDETR(K24IPI)
      CALL JEDETR(K24LAI)
      CALL JEDETR(K24LAB)      
      CALL JEDETR(K24IRR)
      CALL JEDETR(K24IRG)
      CALL JEDETR(K24IRH)
      CALL JEDETR(K24IRP)
      CALL JEDETR(K24IRZ)      
      CALL JEDETR(K24IR1)
      CALL JEDETR(K24IR2)
      CALL JEDETR(K24IR3)                              
      CALL JEDETR(COLAUX)
      CALL JEDETR(COLAUI)
      IF (LUMPE) CALL JEDETR(COLAU2) 
      IF (RANG.EQ.0) THEN
        CALL JEDETR(K24PSR)
        CALL JEDETR(K24DDR)
        CALL JEDETR(K24FIR)
      ENDIF
      CALL JEDETR(K24REX)
      CALL JEDETR(K24FIV)
      CALL JEDETR(K24PRJ)    
      IF ((LRIGID).AND.(RANG.EQ.0)) THEN
        CALL JEDETR(NOMGGT)
        IF (LSTOGI) CALL JEDETR(NOMGI)
      ENDIF
      IF ((INFOFE(8:8).EQ.'T').AND.(RANG.EQ.0)) 
     &  CALL JEDETR('&&FETI.TEST')
      CALL JEDETR('&&FETPRJ.GITVI.R')
      CALL JEDETR('&&FETI.GGT.V4')
      CALL JEDEMA()

      END
