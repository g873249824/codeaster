      SUBROUTINE ALFETI(OPT,SDFETI,MATAS,CHSECM,CHSOL,NITER,EPSI,CRITER,
     &                  TESTCO,NBREOR,TYREOR,PRECO,SCALIN,STOGI,NBREOI,
     &                  ACMA,ACSM)
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 14/11/2006   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_20
C TOLE CRP_4
C-----------------------------------------------------------------------
C    - FONCTION REALISEE:  RESOLUTION FETI EN REEL SYMETRIQUE
C                          CF. ALGO. 9 DE LA NOTE HI-23/03/009
C     ------------------------------------------------------------------
C     IN  OPT    :  K24 : OPTION DE CALCUL: "NETTOYAGE_SDI"/
C                         "NETTOYAGE_SDT"/"RESOLUTION"
C     IN  SDFETI :  K19 : SD DECRIVANT LE PARTIONNEMENT FETI
C     IN  MATAS  :  K19 : NOM DE LA MATR_ASSE GLOBALE
C     IN CHSECM  :  K19 : CHAM_NO SECOND MEMBRE GLOBAL
C     OUT CHSOL  :  K19 : CHAM_NO SOLUTION GLOBAL
C     IN  NITER  :  IN  : NOMBRE D'ITERATIONS MAXIMALES ADMISSIBLES DU
C                         GCPPC DE FETI
C     IN  EPSI   :  R8  : CRITERE D'ARRET RELATIF DU GCPPC
C     IN  CRITER :  K24 : STRUCTURE DE DONNEE STOCKANT INFOS DE CV
C     IN  TESTCO :  R8  : PARAMETRE DE TEST DE LA CONT. A L'INTERFACE
C     IN  NBREOR :  IN  : NBRE DE DD A REORTHOGONALISER
C     IN  TYREOR :  K24 : TYPE DE REORTHOGONALISATION
C     IN  PRECO  :  K24 : TYPE DE PRECONDITIONNEMENT
C     IN  SCALIN :  K24 : PARAMETRE DE SCALING DANS LE PRECOND
C     IN  STOGI  :  K24 : PARAMETRE DE STOCKAGE DE LA MATRICE GI
C     IN  NBREOI :  IN  : NBRE DE PAS DE TEMPS A REORTHOGONALISER
C     IN  ACMA/ACSM : ACCELERATION POUR PB A MULTIPLES MATRICES ET
C               SECONDS MEMBRES
C----------------------------------------------------------------------
C RESPONSABLE BOITEAU O.BOITEAU
C CORPS DU PROGRAMME
      IMPLICIT NONE

C DECLARATION PARAMETRES D'APPELS
      INTEGER      NITER,NBREOR,NBREOI
      REAL*8       EPSI,TESTCO
      CHARACTER*19 SDFETI,CHSECM,CHSOL,MATAS
      CHARACTER*24 CRITER,TYREOR,PRECO,SCALIN,STOGI,ACMA,ACSM,OPT

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER*4          ZI4
      COMMON  / I4VAJE / ZI4(1)
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

C DECLARATION VARIABLES LOCALES
      INTEGER      IDIME,NBSD,NBI,IVLAGI,IFETF,IDD,IFETH,NB,I,IRZ,JCRR,
     &             IRR,IRG,IRP,IR1,IR2,ITER,IFM,NIV,IRET,JCRI,JCRK,
     &             OPTION,IPSRO,IDDRO,NBREO2,IDDFRO,IAUX1,IAUX2,ITER1,J,
     &             NBREO1,IAUX3,IR3,IRH,IAD,DIMGI,ITEST,IPRJ,ITPS,NBI1,
     &             LONG,MOD,IFIV,IINF,IFET6,IREX,IFETI,ILIMPI,IFETPT,
     &             NBTOT,IFET1,NBI2,IPIV,MAMOY,RANG,IBID,NIVMPI,NBSD1,
     &             NBPROC,IMSMK,IMSMI,DIMTET,IMSMR,NBDDSM,NBREOA,
     &             JBID,LBID,ASSMAT,MBID,IACSM,IRET1,IRET2
      REAL*8       DNRM2,ANORM,ANORMK,ANORM0,EPSIK,PARAAF,DDOT,ALPHA,
     &             ALPHAN,ALPHAD,BETA,BETAD,BETAN,R8MIEM,RMIN,RAUX,
     &             TEMPS(6),RBID,TETNUM,ANORMD,RESMIN
      CHARACTER*8  NOMSD,K8BID,K8BID1
      CHARACTER*19 MATDD
      CHARACTER*24 COLAUX,COLAUI,COLAU2,NOMGGT,INFOFE,NOMGI,K24BID,
     &             SDFETG,KFETF,KFVAL,K24IRR,K24LAI,K24IR2,K24IRG,
     &             K24IRH,K24IRZ,K24IR1,K24IRP,K24IR3,K24PSR,KINF,
     &             K24DDR,K24FIR,K24REX,K24FIV,K24PRJ,K24IPI,K24SM1,
     &             K24SM2,K24PAS,KFVAF,KFNBN,KFACS,KASSE,KFACN,KELEM,
     &             KMPI,KMPIB,KV4,KGITR,KTEST,KFIDD,KNUM
      CHARACTER*32 JEXNOM,JEXNUM
      LOGICAL      REORTH,IGSMKP,GS,LUMPE,LRIGID,LSTOGI,LPARA,LACMA,
     &             LACSM

C CORPS DU PROGRAMME
      CALL MATFPE(-1)
C
      CALL JEMARQ()

C----------------------------------------------------------------------
C----  0. GESTION DE L'OPTION DE CALCUL
C----------------------------------------------------------------------
C NOMS DES OBJETS TEMPORAIRES
      K24LAI='&&FETI.LAGR.INTERFACE'
      K24IRR='&&FETI.RESIDU.R'
      K24IRG='&&FETI.REPROJ.G'
      K24IRH='&&FETI.REPCPJ.H'
      K24IRP='&&FETI.DD.P'
      K24IRZ='&&FETI.FIDD.Z'
      K24IR1='&&FETI.VECNBI.AUX1'
      K24IR2='&&FETI.VECNBI.AUX2'
      K24IR3='&&FETI.VECNBI.AUX3'
      COLAUX='&&FETI.COLLECTIONR'
      COLAUI='&&FETI.COLLECTIONI'
      COLAU2='&&FETI.COLLECTIONL'
      K24REX='&&FETI.FETREX.AUX'
      K24FIV='&&FETI.FETFIV.AUX'
      K24IPI='&&FETI.LAPACK.IPIV'
      NOMGGT='&&FETI.GITGI.R'
      NOMGI='&&FETI.GI.R'
      K24PRJ='&&FETI.FETPRJ.AUX'
      K24SM1='&FETI.MULTIPLE.SM.K24'
      K24SM2='&FETI.MULTIPLE.SM.IN'
      K24PAS='&FETI.PAS.TEMPS'
      KFIDD='&FETI.INFO.STOCKAGE.FIDD'
      KFVAL='&FETI.INFO.STOCKAGE.FVAL'
      KFVAF='&FETI.INFO.STOCKAGE.FVAF'
      KFNBN='&FETI.INFO.STOCKAGE.FNBN'
      KFACS='&FETI.INFO.CPU.FACS'
      KASSE='&FETI.INFO.CPU.ASSE'
      KFACN='&FETI.INFO.CPU.FACN'
      KELEM='&FETI.INFO.CPU.ELEM'
      KINF='&FETI.FINF'
      KMPI='&FETI.LISTE.SD.MPI'
      KMPIB='&FETI.LISTE.SD.MPIB'
      KV4='&&FETI.GGT.V4'
      KGITR='&&FETPRJ.GITVI.R'
      KTEST='&&FETI.TEST'
      KNUM='&FETI.MAILLE.NUMSD'

      IF (OPT(1:12).EQ.'NETTOYAGE_SD') THEN
C ON DETRUIT TOUTES LES SD TEMPORAIRES LIEES AUX RESOLUTIONS PASSEES
C SI ELLES EXISTENT
        GOTO 500
      ELSE IF (OPT(1:10).EQ.'RESOLUTION') THEN
C ON FAIT LA RESOLUTION STANDARD
      ELSE
        CALL U2MESS('F','ALGELINE_1')
      ENDIF
C----------------------------------------------------------------------
C----  1. PREPARATION DES DONNEES
C----------------------------------------------------------------------
C----  1.1 DONNEES GENERALES

      CALL INFNIV(IFM,NIV)
      CALL JEVEUO(KINF,'L',IINF)
      INFOFE=ZK24(IINF)
      CALL JEEXIN(CRITER(1:19)//'.CRTI',IRET)
      CALL JEEXIN(CRITER(1:19)//'.CRTR',IRET1)
      CALL JEEXIN(CRITER(1:19)//'.CRDE',IRET2)
      IRET=IRET*IRET1*IRET2
      IF (IRET.EQ.0) THEN
        CALL WKVECT(CRITER(1:19)//'.CRTI','V V I',1,JCRI)
        CALL WKVECT(CRITER(1:19)//'.CRTR','V V R8',1,JCRR)
        CALL WKVECT(CRITER(1:19)//'.CRDE','V V K16',2,JCRK)
        ZK16(JCRK)='ITER_GCPC'
        ZK16(JCRK+1)='RESI_GCPC'
      ELSE
        CALL JEVEUO(CRITER(1:19)//'.CRTI','E',JCRI)
        CALL JEVEUO(CRITER(1:19)//'.CRTR','E',JCRR)
      ENDIF
C  PLUS PETITE VALEUR REELLE DISCERNABLE
      RMIN=R8MIEM()**(2.0D+0/3.0D+0)
C  PARAMETRE D'AFFICHAGE DE LA DECROISSANCE DU RESIDU
      PARAAF = 0.1D0

C----  1.2 DONNEES POUR PARALLELISME

      CALL JEVEUO(KMPI,'L',ILIMPI)
      IF (INFOFE(10:10).EQ.'T') THEN
        NIVMPI=2
      ELSE
        NIVMPI=1
      ENDIF
      CALL FETMPI(2,IBID,IFM,NIVMPI,RANG,IBID,K24BID,K24BID,K24BID,RBID)
      CALL FETMPI(3,IBID,IFM,NIVMPI,IBID,NBPROC,K24BID,K24BID,K24BID,
     &            RBID)
      IF (NBPROC.EQ.1) THEN
        LPARA=.FALSE.
      ELSE
        LPARA=.TRUE.
      ENDIF
C INITIALISATION DE UTTCPU POUR PROFILING
      CALL FETCPU(1,TEMPS,INFOFE,RANG,IFM)

C----   1.3 DONNEES LIEES A LA DECOMPOSITION EN SOUS-DOMAINES

      CALL JEVEUO(SDFETI(1:19)//'.FDIM','L',IDIME)
C  NOMBRE DE SOUS-DOMAINES
      NBSD=ZI(IDIME)
      NBSD1=NBSD+1
C  NOMBRE DE LAGRANGE D'INTERFACE
      NBI2=ZI(IDIME+1)
C  NOMBRE DE DDLS D'INTERFACE
      NBI=ZI(IDIME+3)
      NBI1=NBI-1
C  NOMBRE DE DDLS TOTAL
      NBTOT=ZI(IDIME+4)
C  TRAITEMENT DU NOMBRE D'ITERATION SI NULLE
      IF (NITER.EQ.0) THEN
        NITER = MAX(NBI/100,10)
        IF ((RANG.EQ.0).AND.((INFOFE(9:9).EQ.'T').OR.
     &      (INFOFE(11:11).EQ.'T'))) WRITE(IFM,1060)NITER
      ENDIF
C  VECTEUR DE LA LISTE DES NOMBRES DE DDLS PAR SOUS-DOMAINE
      CALL JEVEUO(SDFETI(1:19)//'.FETH','L',IFETH)
C  PRECONDITIONNEMENT LUMPE OU NON ?
      IF (PRECO(1:5).EQ.'LUMPE') THEN
        LUMPE=.TRUE.
      ELSE
        LUMPE=.FALSE.
      ENDIF

C----  1.4 DONNEES LIEES A LA REORTHOGONALISATION DU GCPPC

      IF (TYREOR(1:4).NE.'SANS') THEN
        REORTH=.TRUE.
C  INTER-VALIDATION DES DONNEES
        IF (NBREOR.GT.NITER) THEN
          NBREOR=NITER
          IF ((RANG.EQ.0).AND.((INFOFE(9:9).EQ.'T').OR.
     &        (INFOFE(11:11).EQ.'T'))) WRITE(IFM,1064)NBREOR
        ENDIF
        IF (NBREOR.EQ.0) THEN
          NBREOR = MAX(NITER/10,5)
          IF ((RANG.EQ.0).AND.((INFOFE(9:9).EQ.'T').OR.
     &        (INFOFE(11:11).EQ.'T'))) WRITE(IFM,1065)NBREOR
        ENDIF
        IGSMKP=.FALSE.
        GS=.FALSE.
        IF (TYREOR.EQ.'IGSM') IGSMKP=.TRUE.
        IF (TYREOR.EQ.'GS') GS=.TRUE.
      ELSE
        REORTH=.FALSE.
      ENDIF

C----  1.5 DONNEES POUR ACCELERATION ACMA ET ACSM

      CALL JEVEUO(K24PAS,'L',IFETPT)
      ITPS=ZI(IFETPT+1)
      ASSMAT=ZI(IFETPT+2)
      CALL JEVEUO(K24SM1,'E',IMSMK)
      CALL JEVEUO(K24SM2,'E',IMSMI)
      LACMA=.FALSE.
      LACSM=.FALSE.
      DIMTET=0
      NBREOA=0
      IACSM=1
      IF ((REORTH).AND.(NBREOI.GT.0)) THEN

C  ACTIVATION DES ACCELERATIONS
        IF ((ACMA(1:3).EQ.'OUI').AND.(ASSMAT.EQ.1)) LACMA=.TRUE.
        IF (ACSM(1:3).EQ.'OUI') LACSM=.TRUE.
C  RECHERCHE DE LA DIMENSION DE L'ESPACE DE REPROJECTION DU PB EN
C  TENANT COMPTE DES PAS DE TEMPS PRECEDENT
        NBREOA=0
        DIMTET=0
        IF (ITPS.GT.NBREOI) THEN
          IACSM=NBREOI+1
        ELSE
          IACSM=ITPS
        ENDIF
        IF ((LACSM).OR.(LACMA)) THEN
C NBREOA: NBRE DE REORTHO EFFECTIF ENTRE PAS DE TEMPS
          NBREOA=MIN(ITPS-1,NBREOI)
          DO 21 I=1,NBREOA
            IAUX1=ZI(IMSMI-1+I)
            IF (IAUX1.GT.DIMTET) DIMTET=IAUX1
   21     CONTINUE
        ENDIF
      ENDIF

C  GESTION DES OBJETS DE REORTHO LIES AUX PAS DE TEMPS
      IF ((REORTH).AND.(RANG.EQ.0)) THEN
C  NOUVELLE OCCURENCE POUR L'INSTANT EN COURS
        CALL GCNCON('.',K8BID1)
        ZK24(IMSMK+IACSM-1)=K8BID1
        NBREO1=NBREOR+2
        NBREO2=NBREO1*NBI
        K24PSR='&&FETI.PS.'//K8BID1
        CALL WKVECT(K24PSR,'V V R',NBREO1,IPSRO)
        K24DDR='&&FETI.DD.'//K8BID1
        CALL WKVECT(K24DDR,'V V R',NBREO2,IDDRO)
        K24FIR='&&FETI.FIDD.'//K8BID1
        CALL WKVECT(K24FIR,'V V R',NBREO2,IDDFRO)
        CALL JELIBE(K24DDR)
        CALL JELIBE(K24FIR)
      ENDIF

C----  1.6 COLLECTIONS TEMPORAIRES DE VECTEURS DE TAILLES VARIABLES

C  REMPLISSAGE QU'AU PREMIER PAS DE TEMPS
      SDFETG=SDFETI//'.FETG'
      IF (ITPS.EQ.1) THEN
        CALL JECREC(COLAUX,'V V R','NO','DISPERSE','VARIABLE',NBSD)
        IF (LUMPE)
     &    CALL JECREC(COLAU2,'V V R','NO','DISPERSE','VARIABLE',NBSD)
        DO 10 IDD=1,NBSD
          IF (ZI(ILIMPI+IDD).EQ.1) THEN
            CALL JENUNO(JEXNUM(SDFETG,IDD),NOMSD)
            CALL JECROC(JEXNOM(COLAUX,NOMSD))
            NB=ZI(IFETH+IDD-1)
            CALL JEECRA(JEXNOM(COLAUX,NOMSD),'LONMAX',NB,K8BID)
            IF (LUMPE) THEN
              CALL JECROC(JEXNOM(COLAU2,NOMSD))
              CALL JEECRA(JEXNOM(COLAU2,NOMSD),'LONMAX',NB,K8BID)
            ENDIF
          ENDIF
   10   CONTINUE
C REMPLISSAGE COLAUI
        CALL FETING(NBSD,SDFETI,CHSECM,COLAUI,INFOFE,IFM,ILIMPI,RANG)
      ENDIF

C----  1.7 VECTEURS TEMPORAIRES D'INTERFACE

C  CREATION QU'AU PREMIER PAS DE TEMPS
      IF (ITPS.EQ.1) THEN
        CALL WKVECT(K24LAI,'V V R',NBI,IVLAGI)
        CALL WKVECT(K24IRR,'V V R',NBI,IRR)
        CALL WKVECT(K24IRG,'V V R',NBI,IRG)
        CALL WKVECT(K24IRH,'V V R',NBI,IRH)
        CALL WKVECT(K24IRP,'V V R',NBI,IRP)
        CALL WKVECT(K24IRZ,'V V R',NBI,IRZ)
        CALL WKVECT(K24IR1,'V V R',NBI,IR1)
        CALL WKVECT(K24IR2,'V V R',NBI,IR2)
        CALL WKVECT(K24IR3,'V V R',NBI,IR3)
      ELSE
        CALL JEVEUO(K24LAI,'E',IVLAGI)
        CALL JEVEUO(K24IRR,'E',IRR)
        CALL JEVEUO(K24IRG,'E',IRG)
        CALL JEVEUO(K24IRH,'E',IRH)
        CALL JEVEUO(K24IRP,'E',IRP)
        CALL JEVEUO(K24IRZ,'E',IRZ)
        CALL JEVEUO(K24IR1,'E',IR1)
        CALL JEVEUO(K24IR2,'E',IR2)
        CALL JEVEUO(K24IR3,'E',IR3)
        DO 9 I=0,NBI1
          ZR(IVLAGI+I)=0.D0
          ZR(IRR+I)=0.D0
          ZR(IRG+I)=0.D0
          ZR(IRH+I)=0.D0
          ZR(IRP+I)=0.D0
          ZR(IRZ+I)=0.D0
          ZR(IR1+I)=0.D0
          ZR(IR2+I)=0.D0
          ZR(IR3+I)=0.D0
    9   CONTINUE
      ENDIF

C----  1.8 PREPARATION D'OBJETS ANNEXES AFIN D'ECONOMISER DES JEVEUO...

C  POUR FETFIV
      CALL JEVEUO(SDFETI//'.FETI','L',IFETI)
      I=1+3*NBSD
      CALL WKVECT(K24REX,'V V I',I,IREX)
      ZI(IREX)=IFETI
      DO 11 IDD=1,NBSD
        IF (ZI(ILIMPI+IDD).EQ.1) THEN
          IAUX3=IREX+3*(IDD-1)+1
          CALL JENUNO(JEXNUM(SDFETG,IDD),NOMSD)
          CALL JEVEUO(JEXNOM(SDFETG,NOMSD),'L',ZI(IAUX3))
          IAUX3=IAUX3+1
          CALL JELIRA(JEXNOM(SDFETG,NOMSD),'LONMAX',LONG,K8BID)
          IF (MOD(LONG,2).NE.0) THEN
          CALL U2MESK('F','ALGELINE_2',1,SDFETI)
          ELSE
            ZI(IAUX3)=(LONG/2)-1
            IAUX3=IAUX3+1
          ENDIF
          CALL JEVEUO(JEXNOM(COLAUI,NOMSD),'L',ZI(IAUX3))
        ENDIF
   11 CONTINUE

C  POUR FETFIV
      I=2+5*NBSD
      CALL WKVECT(K24FIV,'V V I',I,IFIV)
      ZI(IFIV)=IFM
      CALL JEVEUO(MATAS//'.FETM','L',IAUX1)
      ZI(IFIV+1)=IAUX1
      DO 12 IDD=1,NBSD
        IF (ZI(ILIMPI+IDD).EQ.1) THEN
          IAUX3=IFIV+2+5*(IDD-1)
          MATDD=ZK24(IAUX1+IDD-1)(1:19)
          CALL JEVEUO(MATDD//'.&INT','L',ZI(IAUX3))
          IAUX3=IAUX3+1
          CALL JEEXIN(MATDD//'.CONL',IRET)
          ZI(IAUX3)=IRET
          IAUX3=IAUX3+1
          IF (IRET.NE.0)
     &      CALL JEVEUO(MATDD//'.CONL','L',IAUX2)
          ZI(IAUX3)=IAUX2
          IAUX3=IAUX3+1
          CALL JENUNO(JEXNUM(SDFETG,IDD),NOMSD)
          CALL JEVEUO(JEXNOM(COLAUX,NOMSD),'E',ZI(IAUX3))
          IAUX3=IAUX3+1
          IF (LUMPE)
     &      CALL JEVEUO(JEXNOM(COLAU2,NOMSD),'E',ZI(IAUX3))
          IAUX3=IAUX3+1
        ENDIF
   12 CONTINUE

C----------------------------------------------------------------------
C----  2. INITIALISATION PROPREMENT DITE DE L'ALGORITHME FETI
C----------------------------------------------------------------------
      CALL FETCPU(2,TEMPS,INFOFE,RANG,IFM)

C----  2.1 SYNCHRONISATION DE VECTEURS DE MONITORING POUR
C----      LE PARALLELISME

C  VECTEUR INDIQUANT SI UN SOUS-DOMAINE EST FLOTTANT ET SON NOMBRE DE
C  MODES DE CORPS RIGIDES
C  EN SEQUENTIEL ON PREND L'ADRESSE DE MATAS.FETF
C  EN PARALLELE ON SOMME CETTE DONNEE LOCALE ET ON LA TRANSFERRE A TOUS
C  PROCESSEUR PAR UN MPI_ALLREDUCE + MPI_SUM (AU PREMIER PAS DE TEMPS)
      KFETF=MATAS//'.FETF'
      IF ((LPARA).AND.(ITPS.EQ.1))
     &  CALL FETMPI(6,NBSD,IFM,NIVMPI,IBID,IBID,KFETF,K24BID,K24BID,
     &              RBID)
      CALL JEVEUO(KFETF,'L',IFETF)

C  VECTEUR INDIQUANT LE NBRE DE COEFF DES MATRICES LOCALES
C  EN SEQUENTIEL ON PREND L'ADRESSE DE '&FETI.INFO.STOCKAGE.FVAL'
C  EN PARALLELE ON TRANSFERE CETTE DONNEE LOCALE A CHAQUE PROCESSEUR PAR
C  UN MPI_ALLREDUCE + MPI_SUM (AU PREMIER PAS DE TEMPS)
      IF ((LPARA).AND.(ITPS.EQ.1))
     &  CALL FETMPI(6,NBSD1,IFM,NIVMPI,IBID,IBID,KFVAL,K24BID,K24BID,
     &              RBID)
      CALL JEVEUO(KFVAL,'L',IFET1)
      MAMOY=ZI(IFET1+NBSD)/NBSD

C  TANT QU'A SYNCHRONISER ON FAIT LE MEME TRAVAIL POUR LES AUTRES OBJETS
C  PERIPHERIQUES (SAUF POUR FVAF/FNBN ET FACS QU'AU PREMIER PAS)
      IF (LPARA) THEN
        IF (ITPS.EQ.1) THEN
          CALL FETMPI(4,NBSD1,IFM,NIVMPI,IBID,IBID,KFVAF,K24BID,K24BID,
     &                RBID)
          CALL FETMPI(4,NBSD1,IFM,NIVMPI,IBID,IBID,KFNBN,K24BID,K24BID,
     &                RBID)
          CALL FETMPI(5,NBSD1,IFM,NIVMPI,IBID,IBID,KFACS,K24BID,K24BID,
     &                RBID)
        ENDIF
        CALL FETMPI(5,NBSD1,IFM,NIVMPI,IBID,IBID,KASSE,K24BID,K24BID,
     &              RBID)
        CALL FETMPI(5,NBSD1,IFM,NIVMPI,IBID,IBID,KFACN,K24BID,K24BID,
     &              RBID)
        CALL FETMPI(5,NBPROC,IFM,NIVMPI,IBID,IBID,KELEM,K24BID,K24BID,
     &              RBID)
      ENDIF

C----  2.2 CALCUL DE GI, (GI)T*GI ET DIMGI (AU PREMIER PAS DE TEMPS)

C  NOMS DES OBJETS JEVEUX STOCKANT GI ET (GI)T*GI SI LRIGID=.TRUE.
      CALL FETGGT(NBSD,MATAS,ZI(IFETF),ZI(IFETH),LRIGID,NBI,NOMGGT,
     &            DIMGI,NOMGI,STOGI,LSTOGI,MAMOY,INFOFE,IREX,IFM,
     &            SDFETI,NBPROC,RANG,ITPS)
      CALL FETCPU(3,TEMPS,INFOFE,RANG,IFM)

C----  2.3 PREPARATION D'OBJETS ANNEXES AFIN D'ECONOMISER DES JEVEUO...

C  POUR FETPRJ
      CALL WKVECT(K24PRJ,'V V I',3,IPRJ)
      ZI(IPRJ)=IFM
      IF (LRIGID) THEN
        CALL WKVECT(KGITR,'V V R',DIMGI,ZI(IPRJ+1))
        CALL WKVECT(KV4,'V V R',NBI,ZI(IPRJ+2))
      ENDIF

C----  2.4 MONITORING SI INFOFE(11:11)='T'

      CALL FETMON(INFOFE,NBI2,NBI,NBTOT,NBSD,DIMGI,IFM,MAMOY,LSTOGI,
     &            IFET1,RANG,ITPS)

C----  2.5 CALCUL DU VECTEUR LAGRANGE_FETI INITIAL LANDA0 (ZR(IVLAGI))

      IF ((LRIGID).AND.(RANG.EQ.0)) THEN
        IF (ITPS.EQ.1) THEN
          CALL WKVECT(K24IPI,'V V S',DIMGI,IPIV)
        ELSE
          CALL JEVEUO(K24IPI,'L',IPIV)
        ENDIF
      ENDIF
      CALL FETINL(NBI,ZR(IVLAGI),MATAS,CHSECM,LRIGID,DIMGI,NBSD,
     &            ZI(IFETF),ZI(IFETH),NOMGGT,IPIV,NOMGI,LSTOGI,INFOFE,
     &            IREX,IFM,SDFETI,NBPROC,RANG,K24LAI,ITPS)

C----  2.6 CALCUL DU RESIDU INITIAL (ZR(IRR)): R0 = D - FI*LANDA0
C----      ET DU SECOND MEMBRE (ZR(IR1)): D DE NORME ANORMD


      CALL FETRIN(NBSD,NBI,ZR(IRR),ZR(IR1),MATAS,ZI(IFETF),ZI(IFETH),
     &            COLAUX,CHSECM,SDFETI,ZR(IVLAGI),1,CHSOL,
     &            TESTCO,LRIGID,DIMGI,IRR,NOMGGT,IPIV,NOMGI,
     &            LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,NBPROC,RANG,K24IRR)
      DO 15 I=0,NBI1
        ZR(IR3+I)=0.D0
   15 CONTINUE

      CALL FETRIN(NBSD,NBI,ZR(IR1),ZR(IR2),MATAS,ZI(IFETF),ZI(IFETH),
     &            COLAUX,CHSECM,SDFETI,ZR(IR3),1,CHSOL,
     &            TESTCO,LRIGID,DIMGI,IRR,NOMGGT,IPIV,NOMGI,
     &            LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,NBPROC,RANG,K24IR1)
      IF (RANG.EQ.0) ANORMD=DNRM2(NBI,ZR(IR1),1)

C EN PARALLELE, DIFFUSION DE LA NORME DU SM INITIAL A TOUS LES PROC POUR
C  LACONSTRUCTION DU PREMIER TEST D'ARRET
      IF (LPARA)
     &  CALL FETMPI(10,IBID,IFM,NIVMPI,RANG,IBID,K24BID,K24BID,K24BID,
     &              ANORMD)

C----  2.7 CALCUL DU RESIDU PROJETE INITIAL (ZR(IRG)): G0=P*R0
C----      AVEC OU SANS ACCELERATION SECOND MEMBRE

C----  2.7.1 SANS ACCELERATION SECOND MEMBRE

      IF ((ITPS.EQ.1).OR.(.NOT.LACSM)) THEN
C  EN PARALLELE ON DIFFUSE G0
        CALL FETPRJ(NBI,ZR(IRR),ZR(IRG),NOMGGT,LRIGID,
     &    DIMGI,1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,NOMGI,
     &    LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24IRG)
        ANORM=DNRM2(NBI,ZR(IRG),1)
      ELSE

C----  2.7.2 AVEC ACCELERATION SECOND MEMBRE

C  RECALCUL DU LAMBDA0 POUR TENIR COMPTE INFO PAS DE TEMPS PRECEDENTS
C  ON NE DIFFUSE PAS CAR LE PROC MAITRE VA RETRAVAILLER SUR CETTE
C  DONNES
        K24BID(1:4)='VIDE'
        CALL FETPRJ(NBI,ZR(IRR),ZR(IRG),NOMGGT,LRIGID,
     &    DIMGI,1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,NOMGI,
     &    LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24BID)
        IF (RANG.EQ.0) ANORM=DNRM2(NBI,ZR(IRG),1)
C MISE A JOUR PAR PROC 0 DE LAMBDA0, R0 ET G0
        CALL FETACC(1,RANG,DIMTET,IMSMI,IMSMK,NBREOA,ITPS,IRG,IRR,
     &              IVLAGI,NBI,IR1,IR2,IR3,NOMGGT,LRIGID,DIMGI,SDFETI,
     &              IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,NOMGI,LSTOGI,
     &              INFOFE,IREX,IPRJ,NBPROC)
C  ON DIFFUSE GO ET LAMBDA0 A TOUS LES PROCESSEURS POUR CALCUL SUIVANT
C EN PARALLELE, DIFFUSION DE LA NORME DU RESIDU INITIAL NON CORRIGE
C A TOUS LES PROC POUR LA CONSTRUCTION DU PREMIER TEST D'ARRET
        IF (LPARA) THEN
          CALL FETMPI(9,NBI,IFM,NIVMPI,IBID,IBID,K24IRG,K24BID,K24BID,
     &                RBID)
          CALL FETMPI(9,NBI,IFM,NIVMPI,IBID,IBID,K24LAI,K24BID,K24BID,
     &                RBID)
          CALL FETMPI(10,IBID,IFM,NIVMPI,RANG,IBID,K24BID,K24BID,
     &                K24BID,ANORM)
        ENDIF
      ENDIF

C----  2.8 CALCUL DE LA NORME DU RESIDU PROJETE POUR CRITERES D'ARRET

      RESMIN=ANORMD*EPSI
      EPSIK=EPSI*ANORM
      IF (ANORM.GE.RESMIN) THEN
        IF ((RANG.EQ.0).AND.((INFOFE(9:9).EQ.'T').OR.
     &      (INFOFE(11:11).EQ.'T'))) THEN
          WRITE(IFM,*)'******************************************'
          WRITE (IFM,1020)ANORMD,ANORM,EPSIK,EPSI
          WRITE(IFM,*)'******************************************'
        ENDIF
      ELSE
        IF ((RANG.EQ.0).AND.((INFOFE(9:9).EQ.'T').OR.
     &      (INFOFE(11:11).EQ.'T'))) THEN
          WRITE(IFM,*)'******************************************'
          WRITE (IFM,1021)ANORMD,ANORM
          WRITE(IFM,*)'RESIDU INITIAL INFERIEUR A : ',RESMIN
          WRITE(IFM,*)'NUL BESOIN DE CALCULER DE NOUVELLE SOLUTION'
          WRITE(IFM,*)'        LAMBDA_SOL = LAMBDA_INIT'
          WRITE(IFM,*)'******************************************'
          WRITE(IFM,1040)ANORM,ANORM,1.D0
          WRITE(IFM,1050)0
        ENDIF
        ZI(JCRI)=1
        ZR(JCRR)=ANORM
C  CALCUL SOLUTION U GLOBALE
C  UI_SOL = (KI)+ * (FI - RIT*LANDA_SOL) - BI*ALPHAI_SOL
        CALL FETRIN(NBSD,NBI,ZR(IRR),ZR(IR2),MATAS,ZI(IFETF),
     &      ZI(IFETH),COLAUX,CHSECM,SDFETI,ZR(IVLAGI),2,
     &      CHSOL,TESTCO,LRIGID,DIMGI,IRR,NOMGGT,IPIV,NOMGI,
     &      LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,NBPROC,RANG,K24IRR)
        IF (RANG.EQ.0) ZI(IMSMI-1+IACSM)=0
        GOTO 200
      ENDIF
C  CONSTANTES POUR AFFICHAGE (ANORMK) ET NORME INITIALE (ANORM0)
      IF (RANG.EQ.0) ANORMK=ANORM*PARAAF
      ANORM0=ANORM

C----  2.9 CALCUL DU RESIDU PRECOND PROJETE P INITIAL
C----      (ZR(IRH)): H0=P*A*M-1*A*G0

      CALL FETSCA(NBI,ZR(IRG),ZR(IR1),SCALIN,INFOFE,NBI2,IFETI,IFM)
      CALL FETPRC(NBSD,NBI,ZR(IR1),ZR(IR3),ZR(IR2),MATAS,ZI(IFETH),
     &            PRECO,INFOFE,IREX,IFIV,NBPROC,RANG,K24IR2)

C----  2.9.1 ACCELERATION_MA
C   MISE A JOUR PAR PROC 0 DE H0_TILDE=M-1*A*G0
      IF (LACMA)
     &  CALL FETACC(2,RANG,DIMTET,IMSMI,IMSMK,NBREOA,ITPS,IRG,IRR,
     &              IVLAGI,NBI,IR1,IR2,IR3,NOMGGT,LRIGID,DIMGI,SDFETI,
     &              IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,NOMGI,LSTOGI,
     &              INFOFE,IREX,IPRJ,NBPROC)
      IF (RANG.EQ.0)
     &  CALL FETSCA(NBI,ZR(IR2),ZR(IR3),SCALIN,INFOFE,NBI2,IFETI,IFM)
      CALL FETPRJ(NBI,ZR(IR3),ZR(IRH),NOMGGT,LRIGID,
     &    DIMGI,1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,NOMGI,
     &    LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24IRH)


C----  2.10 CALCUL DE LA DD INITIALE (ZR(IRP)): P0=H0 (=G0 SI NON PREC)
C  EVENTUELLEMENT REORTHOGONALISEE PAR RAPPORT AUX PAS DE TEMPS
C  PRECEDENT + CALCUL DE ALPHAN0 = G0.P0 (=G0.G0 SI NON PRECOND)
      IF ((ITPS.EQ.1).OR.(.NOT.LACSM)) THEN
        CALL DCOPY(NBI,ZR(IRH),1,ZR(IRP),1)
        IF (RANG.EQ.0) ALPHAN=DDOT(NBI,ZR(IRG),1,ZR(IRP),1)
      ELSE
        CALL FETREO(REORTH,ALPHAN,NBI,IRG,0,NBREOR,IRP,K24FIR,K24DDR,
     &              K24PSR,GS,IGSMKP,RMIN,IRH,INFOFE,IFM,NBPROC,RANG,
     &              K24IRP,ITPS,NBREOI,1,LACSM)
      ENDIF

C----  2.11 TEST DEFINIE-POSITIVITE DE P*FI*P ET ORTHO GCPPC

      CALL FETARP(INFOFE,IFM,NITER,NBI,NBREOR,LRIGID,DIMGI,SDFETI,
     &            IPIV,NOMGGT,NBSD,IFETF,IFETH,NOMGI,LSTOGI,IREX,
     &            IPRJ,IR2,IFIV,MATAS,NBPROC,RANG)
      IF ((INFOFE(8:8).EQ.'T').AND.(RANG.EQ.0)) THEN
        IF (ITPS.EQ.1) THEN
          CALL WKVECT(KTEST,'V V R',NBI,ITEST)
        ELSE
          CALL JEVEUO(KTEST,'E',ITEST)
        ENDIF
      ENDIF
      CALL FETCPU(4,TEMPS,INFOFE,RANG,IFM)


C----------------------------------------------------------------------
C----------------------------------------------------------------------
C----  3  BOUCLES DU GCPPC DE FETI
C----------------------------------------------------------------------
C----------------------------------------------------------------------
      DO 100 ITER=0,NITER

        ITER1=ITER+1
C STOCKAGE PK
        IF ((REORTH).AND.(RANG.EQ.0)) THEN
          IF (ITER.LT.NBREOR) THEN
            IAUX1=ITER1*NBI
          ELSE
            IAUX1=0
          ENDIF
          CALL JEVEUO(K24DDR,'E',IDDRO)
          CALL DCOPY(NBI,ZR(IRP),1,ZR(IDDRO+IAUX1),1)
          CALL JELIBE(K24DDR)
        ENDIF

C---------------------------------------------------
C----  3.1 CALCUL DU PRODUIT FI * PK = ZK
C---------------------------------------------------

        CALL FETCPU(5,TEMPS,INFOFE,RANG,IFM)
        CALL FETFIV(NBSD,NBI,ZR(IRP),ZR(IR2),ZR(IRZ),MATAS,ZI(IFETF),
     &    ZI(IFETH),INFOFE,IREX,IFIV,NBPROC,RANG,K24IRZ,SDFETI)
        CALL FETCPU(6,TEMPS,INFOFE,RANG,IFM)
C  STOCKAGE FI*PK
        IF ((REORTH).AND.(RANG.EQ.0)) THEN
          CALL JEVEUO(K24FIR,'E',IDDFRO)
          CALL DCOPY(NBI,ZR(IRZ),1,ZR(IDDFRO+IAUX1),1)
          CALL JELIBE(K24FIR)
        ENDIF
C---------------------------------------------------
C----  3.2  CALCUL DE ALPHAK = GK.PK/ZK.PK = ALPHANK/ALPHADK
C---------------------------------------------------

        IF (RANG.EQ.0) THEN
          ALPHAD=DDOT(NBI,ZR(IRP),1,ZR(IRZ),1)
          IF (ABS(ALPHAD).LT.RMIN) THEN
            ALPHAD=RMIN
            CALL U2MESS('A','ALGELINE_3')
          ENDIF
          ALPHA=ALPHAN/ALPHAD
C  STOCKAGE ZK.PK SI REORTHO
          IF (REORTH) THEN
            IF (ITER.LT.NBREOR) THEN
              IAUX1=ITER1
            ELSE
              IAUX1=0
            ENDIF
            ZR(IPSRO+IAUX1)=ALPHAD
          ENDIF
        ENDIF

        CALL FETTOR(1,INFOFE,RANG,ITEST,NBI,IRR,IR1,NOMGGT,LRIGID,DIMGI,
     &              SDFETI,IPIV,NBSD,IFETF,IFETH,MATAS,NOMGI,LSTOGI,
     &              IREX,IPRJ,NBPROC,K24IRG,IRG,IFM,IRP,IRZ)

C---------------------------------------------------
C----  3.3  CALCUL NOUVEAUX VECTEUR D'INTERFACE ET RESIDU
C----      (ZR(IVLAGI)) LANDAK+1 = LANDAK + ALPHAK * PK
C----      (ZR(IRR)))   GK+1     = GK     - ALPHAK * PZK
C---------------------------------------------------

        IF (RANG.EQ.0) THEN
          CALL DAXPY(NBI,ALPHA,ZR(IRP),1,ZR(IVLAGI),1)
C  PROJECTION SANS DIFFUSION
          K24BID='VIDE'
          CALL FETPRJ(NBI,ZR(IRZ),ZR(IR1),NOMGGT,LRIGID,DIMGI,
     &              1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,
     &              NOMGI,LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24BID)
          CALL DAXPY(NBI,-ALPHA,ZR(IR1),1,ZR(IRG),1)
        ENDIF

C---------------------------------------------------
C----  3.4  CALCUL DE LA PROJECTION 1 (ZR(IRG)): GK+1 = P * RK+1
C---------------------------------------------------

        CALL FETCPU(7,TEMPS,INFOFE,RANG,IFM)
C  MAINTENANT ON DIFFUSE ZR(IRG)
        IF (LPARA) CALL FETMPI(9,NBI,IFM,NIVMPI,IBID,IBID,K24IRG,K24BID,
     &                         K24BID,RBID)
        CALL FETCPU(8,TEMPS,INFOFE,RANG,IFM)
        CALL FETTOR(2,INFOFE,RANG,ITEST,NBI,IRR,IR1,NOMGGT,LRIGID,DIMGI,
     &              SDFETI,IPIV,NBSD,IFETF,IFETH,MATAS,NOMGI,LSTOGI,
     &              IREX,IPRJ,NBPROC,K24IRG,IRG,IFM,IRP,IRZ)

C---------------------------------------------------
C----  3.5  CALCUL TEST D'ARRET ET AFFICHAGE
C---------------------------------------------------

        ANORM=DNRM2(NBI,ZR(IRG),1)
        IF (RANG.EQ.0) THEN
          IF (ANORM.LE.ANORMK) THEN
            IF ((RANG.EQ.0).AND.((INFOFE(9:9).EQ.'T').OR.
     &          (INFOFE(11:11).EQ.'T'))) THEN
              WRITE(IFM,*)'******************************************'
              WRITE (*,1041)ITER1,ANORM,ANORM/ANORM0
              WRITE(IFM,*)'******************************************'
            ENDIF
            ANORMK=ANORM*PARAAF
          ELSE
            IF ((RANG.EQ.0).AND.(INFOFE(9:9).EQ.'T')) THEN
              WRITE(IFM,*)'******************************************'
              WRITE(IFM,1041)ITER1,ANORM,ANORM/ANORM0
              WRITE(IFM,*)'******************************************'
            ENDIF
          ENDIF
        ENDIF

C-----------------------------
C----  3.6 TEST DE CONVERGENCE
C-----------------------------

        IF (ANORM.LT.EPSIK) THEN
          IF ((RANG.EQ.0).AND.((INFOFE(9:9).EQ.'T').OR.
     &        (INFOFE(11:11).EQ.'T'))) THEN
            WRITE(IFM,1040)ANORM0,ANORM,ANORM/ANORM0
            WRITE(IFM,1050)ITER1
          ENDIF
          ZI(JCRI)=ITER1
          ZR(JCRR)=ANORM

C  CALCUL SOLUTION U GLOBALE
C  ON DIFFUSE ZR(IVLAGI)
          IF (LPARA) CALL FETMPI(9,NBI,IFM,NIVMPI,IBID,IBID,K24LAI,
     &                           K24BID,K24LAI,RBID)
C  RECALCUL DU RESIDU AVEC CE NOUVEAU LANDA_SOL (POUR ALPHA)
          IF (LRIGID) THEN
            CALL FETRIN(NBSD,NBI,ZR(IRR),ZR(IR1),MATAS,ZI(IFETF),
     &              ZI(IFETH),COLAUX,CHSECM,SDFETI,ZR(IVLAGI),
     &              1,CHSOL,TESTCO,LRIGID,DIMGI,IRR,NOMGGT,
     &              IPIV,NOMGI,LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,
     &              NBPROC,RANG,K24IRR)
          ENDIF
C  CALCUL DE USOL LOCALE PUIS GLOBAL PROPREMENT DIT
C  UI_SOL = (KI)+ * (FI - RIT*LANDA_SOL) - BI*ALPHAI_SOL
          CALL FETRIN(NBSD,NBI,ZR(IRR),ZR(IR2),MATAS,ZI(IFETF),
     &      ZI(IFETH),COLAUX,CHSECM,SDFETI,ZR(IVLAGI),2,
     &      CHSOL,TESTCO,LRIGID,DIMGI,IRR,NOMGGT,IPIV,
     &      NOMGI,LSTOGI,INFOFE,IREX,IPRJ,IFM,IFIV,NBPROC,RANG,K24IRR)
          CALL FETCPU(9,TEMPS,INFOFE,RANG,IFM)
C  STOCKAGE
          IF (RANG.EQ.0) ZI(IMSMI-1+IACSM)=MIN(ITER+1,NBREOR)
          GOTO 200
        ELSE
          CALL FETCPU(9,TEMPS,INFOFE,RANG,IFM)
        ENDIF

C---------------------------------------------------
C----  3.7  PRECONDITIONNEMENT (ZR(IRH)): HK+1 =P*A*M-1*A*GK+1
C---------------------------------------------------
        CALL FETCPU(10,TEMPS,INFOFE,RANG,IFM)
C  PHASE DE SCALING 1 (ZR(IR1)): AUX1 = A * GK+1
        CALL FETSCA(NBI,ZR(IRG),ZR(IR1),SCALIN,INFOFE,NBI2,IFETI,IFM)
C  CALCUL DU RESIDU PRECOND PROJETE P INITIAL (ZR(IR2)): AUX2 = M-1*AUX1
        CALL FETPRC(NBSD,NBI,ZR(IR1),ZR(IR3),ZR(IR2),MATAS,ZI(IFETH),
     &              PRECO,INFOFE,IREX,IFIV,NBPROC,RANG,K24IR2)
C----  3.7.1 ACCELERATION_MA
C   MISE A JOUR PAR PROC 0 DE HK+1_TILDE=M-1*A*GK+1
        IF (LACMA)
     &    CALL FETACC(2,RANG,DIMTET,IMSMI,IMSMK,NBREOA,ITPS,IRG,IRR,
     &              IVLAGI,NBI,IR1,IR2,IR3,NOMGGT,LRIGID,DIMGI,SDFETI,
     &              IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,NOMGI,LSTOGI,
     &              INFOFE,IREX,IPRJ,NBPROC)
C  PHASE DE SCALING 2 (ZR(IR1)): AUX1 = A * AUX2
        IF (RANG.EQ.0)
     &    CALL FETSCA(NBI,ZR(IR2),ZR(IR3),SCALIN,INFOFE,NBI2,IFETI,IFM)
C  CALCUL DE LA PROJECTION 2 (ZR(IRH)): HK+1 = P * AUX1
        K24BID='VIDE'
        CALL FETPRJ(NBI,ZR(IR3),ZR(IRH),NOMGGT,LRIGID,DIMGI,
     &              1,SDFETI,IPIV,NBSD,ZI(IFETF),ZI(IFETH),MATAS,
     &              NOMGI,LSTOGI,INFOFE,IREX,IPRJ,NBPROC,RANG,K24BID)
        CALL FETCPU(11,TEMPS,INFOFE,RANG,IFM)
C---------------------------------------------------
C----  3.8  NEW DIRECTION DE DESCENTE (ZR(IRP)): PK+1=HK+1 + ...
C----       AVEC EVENTUELLEMENT UNE PHASE DE REORTHONORMALISATION
C----       AU SEIN D'UN MEME PAS DE TEMPS VOIRE ENTRE PAS DE TEMPS
C----       SI ACCELERATION_SM
C---------------------------------------------------

        CALL FETREO(REORTH,ALPHAN,NBI,IRG,ITER,NBREOR,IRP,K24FIR,
     &              K24DDR,K24PSR,GS,IGSMKP,RMIN,IRH,INFOFE,IFM,NBPROC,
     &              RANG,K24IRP,ITPS,NBREOI,2,LACSM)
        CALL FETCPU(12,TEMPS,INFOFE,RANG,IFM)
        CALL FETTOR(3,INFOFE,RANG,ITEST,NBI,IRR,IR1,NOMGGT,LRIGID,DIMGI,
     &              SDFETI,IPIV,NBSD,IFETF,IFETH,MATAS,NOMGI,LSTOGI,
     &              IREX,IPRJ,NBPROC,K24IRG,IRG,IFM,IRP,IRZ)

C----------------------------------------------------------------------
C----------------------------------------------------------------------
C----  FIN BOUCLES DU GCPPC DE FETI
C----------------------------------------------------------------------
C----------------------------------------------------------------------
  100 CONTINUE

C----------------------------------------------------------------------
C----  4.  DIVERS
C----------------------------------------------------------------------
C----  4.1 NON CONVERGENCE
      IF (RANG.EQ.0) THEN
        CALL UTDEBM('F','ALFETI','NON CONVERGENCE')
        CALL UTIMPI('L','  NOMBRE D''ITERATIONS: ',1,ITER1)
        CALL UTIMPR('L','  NORME DU RESIDU ABS: ',1,ANORM)
        CALL UTIMPR('L','  NORME DU RESIDU REL: ',1,ANORM/ANORM0)
        CALL UTFINM()
      ENDIF

C----  4.2 FORMAT AFFICHAGE

 1020 FORMAT(' * FETI: NORME DU SECOND MEMBRE/RESIDU INITIAL =',
     & D11.4,D11.4/,
     & ' *       NORME DU RESIDU A ATTEINDRE EN ABS/RELA=',
     & D11.4,D11.4)
 1021 FORMAT(' * FETI: NORME DU SECOND MEMBRE/RESIDU INITIAL =',
     & D11.4,D11.4)
 1040 FORMAT(' * FETI: NORME DU RESIDU INITIAL/FINAL/RELATIF=',
     &         D11.4,D11.4,D11.4)
 1041 FORMAT(' * ITERATION',I5,' NORME DU RESIDU EN ABS/RELA =',
     &         D11.4,D11.4)
 1050 FORMAT(1X,/,2X,32 ('*')/'  * CONVERGENCE EN ',I4,
     &       ' ITERATION(S)'/2X,32 ('*'),/)
 1060 FORMAT('! FETI: NMAX_ITER FIXE A MAX(NB_NOEUD_INTERFACE/10,10)= ',
     &       I6,' !')
 1064 FORMAT('! FETI: NB_REORTHO_DD FIXE A NMAX_ITER= ',I6,' !')
 1065 FORMAT('! FETI: NB_REORTHO_DD FIXE A MAX(NMAX_ITER/10,5)= ',
     &       I6,' !')
C DESTRUCTION DES OBJETS JEVEUX TEMPORAIRES
  200 CONTINUE

C----  4.3 MENAGE DES DONNEES TEMPORAIRES

C----  4.3.1 DONNEES A DETRUIRE A CHAQUE PAS DE TEMPS

      CALL JEDETR(K24REX)
      CALL JEDETR(K24FIV)
      CALL JEDETR(K24PRJ)
      CALL JEDETR(KGITR)
      CALL JEDETR(KV4)

C----  4.3.2 DONNEES DE TYPE REORTHO

C ON EFFACE LES DONNEES DE CE PAS DE TEMPS SI PAS ACCELERATION OU SI
C PAS DE TEMPS SUPERIEUR A NBREOI
      IF (RANG.EQ.0) THEN
        IF ((.NOT.LACSM.AND..NOT.LACMA).OR.(ITPS.GT.NBREOI)) THEN
          NBDDSM=ZI(IMSMI+IACSM-1)
          IF (NBDDSM.NE.0) THEN
            K8BID1=ZK24(IMSMK+IACSM-1)
            CALL JEDETR('&&FETI.PS.'//K8BID1)
            CALL JEDETR('&&FETI.DD.'//K8BID1)
            CALL JEDETR('&&FETI.FIDD.'//K8BID1)
          ENDIF
        ENDIF
      ENDIF

C----  4.3.3  DONNEES A DETRUIRE

  500 CONTINUE
      IF (OPT(1:12).EQ.'NETTOYAGE_SD') THEN
C NETTOYAGE PARTIEL SI NECESSAIRE (2IEME PASSAGE DANS PRERES OU FIN
C OPERATEUR)
        CALL JEVEUO(K24PAS,'E',IFETPT)
        ITPS=ZI(IFETPT+1)
        IF (ITPS.NE.0) THEN
          CALL JEDETR(K24LAI)
          CALL JEDETR(K24IRR)
          CALL JEDETR(K24IRG)
          CALL JEDETR(K24IRH)
          CALL JEDETR(K24IRP)
          CALL JEDETR(K24IRZ)
          CALL JEDETR(K24IR1)
          CALL JEDETR(K24IR2)
          CALL JEDETR(K24IR3)
          CALL JEDETR(COLAUX)
          CALL JEDETR(COLAUI)
          CALL JEDETR(COLAU2)
          CALL JEDETR(K24REX)
          CALL JEDETR(K24FIV)
          CALL JEDETR(K24IPI)
          CALL JEDETR(NOMGGT)
          CALL JEDETR(NOMGI)
          CALL JEDETR(K24PRJ)
          CALL JEDETR(KTEST)
          CALL JEDETC('V','&&FETI.PS.',1)
          CALL JEDETC('V','&&FETI.DD.',1)
          CALL JEDETC('V','&&FETI.FIDD.',1)
C ON INITIALISE L'INDICE DE L'INCREMENT DE TEMPS POUR MULTIPLE SECONDS
C MEMBRES
          ZI(IFETPT+1)=0
        ENDIF
      ENDIF
      IF (OPT(1:13).EQ.'NETTOYAGE_SDT') THEN
C NETTOYAGE TOTAL OBJETS TEMPORAIRES CREES DANS CRESOL,NUMERO
        CALL JEDETR(KINF)
        CALL JEDETR(K24PAS)
        CALL JEDETR(K24SM1)
        CALL JEDETR(K24SM2)
        CALL JEDETR(KFIDD)
        CALL JEDETR(KFVAL)
        CALL JEDETR(KFVAF)
        CALL JEDETR(KFNBN)
        CALL JEDETR(KFACS)
        CALL JEDETR(KASSE)
        CALL JEDETR(KFACN)
        CALL JEDETR(KELEM)
        CALL JEDETR(KNUM)
        CALL JEDETC('V','.FEL',20)
        CALL JEDETR(KMPI)
        CALL JEDETR(KMPIB)
      ENDIF
      IF (OPT(1:10).EQ.'RESOLUTION') THEN

C----  4.3.4  TEMPS INTERMEDIAIRES: INIT DES VECTEURS DE MONITORING

        CALL JEVEUO(KFACN,'E',IBID)
        CALL JEVEUO(KASSE,'E',JBID)
        CALL JEVEUO(KFACS,'E',LBID)
        CALL JEVEUO(KELEM,'E',MBID)
        DO 300 I=0,NBSD
          ZR(IBID+I)=0.D0
          ZR(JBID+I)=0.D0
          ZR(LBID+I)=0.D0
  300   CONTINUE
        DO 301 I=1,NBPROC
          ZR(MBID+I-1)=0.D0
  301   CONTINUE
      ENDIF
C
      CALL MATFPE(1)
C
      CALL JEDEMA()
      END
