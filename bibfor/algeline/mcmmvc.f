      SUBROUTINE MCMMVC(CUMUL,LMAT,SMDI,SMHC,NEQ,VECT,XSOL,NBVECT,
     &                  VECTMP,PREPOS)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      CHARACTER*(*) CUMUL
      INTEGER*4 SMHC(*)
      INTEGER SMDI(*),NEQ,NBVECT,LMAT
      COMPLEX*16 VECT(NEQ,NBVECT),XSOL(NEQ,NBVECT),VECTMP(NEQ)
      LOGICAL       PREPOS
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_4
C     ------------------------------------------------------------------
C                   MULTIPLICATION MATRICE PAR N VECTEURS
C         XSOL(1..NEQ,1..NBVECT) = MATRICE  * VECT(1..NEQ,1..NBVECT)
C     ------------------------------------------------------------------
C     VERSION : LA MATRICE EST COMPLEXE SYMETRIQUE OU NON (MORSE)
C             : LES VECTEURS SONT COMPLEXES
C     ------------------------------------------------------------------



      COMPLEX*16 CZERO
      CHARACTER*1 KBID
      CHARACTER*19 NOM19
      CHARACTER*24 VALM
      INTEGER NBLOC,JMAT1,JMAT2,JCOL,I,J,KDEB,KFIN,KI,JVEC,K
      LOGICAL NONSYM
      INTEGER KETA,IEXI,JCCID,IEQ
C     ------------------------------------------------------------------



      CALL JEMARQ()
      NOM19=ZK24(ZI(LMAT+1))
      VALM=NOM19//'.VALM'
      CALL JELIRA(VALM,'NMAXOC',NBLOC,KBID)
      CALL ASSERT(NBLOC.EQ.1 .OR. NBLOC.EQ.2)
      NONSYM=(NBLOC.EQ.2)
      CZERO=DCMPLX(0.D0,0.D0)
      IF (CUMUL.EQ.'ZERO') THEN
        DO 20 I=1,NBVECT
          DO 10 J=1,NEQ
            XSOL(J,I)=CZERO
   10     CONTINUE
   20   CONTINUE
      ENDIF

C     -- VALM(1) : AU DESSUS DE LA DIAGONALE
      CALL JEVEUO(JEXNUM(VALM,1),'L',JMAT1)
      IF (NONSYM) THEN
C        -- VALM(2) : AU DESSOUS DE LA DIAGONALE
        CALL JEVEUO(JEXNUM(VALM,2),'L',JMAT2)
      ELSE
        JMAT2=JMAT1
      ENDIF


      DO 60 JVEC=1,NBVECT
        DO 30,K=1,NEQ
          VECTMP(K)=VECT(K,JVEC)
   30   CONTINUE
C        -- LES LAGRANGE DOIVENT ETRE MIS A L'ECHELLE AVANT LA
C           MULTIPLICATION :
        IF (PREPOS) CALL MCCONL('DIVI',LMAT,0,'C',VECTMP,1)

C        -- PREMIERE LIGNE
        XSOL(1,JVEC)=XSOL(1,JVEC)+ZC(JMAT1-1+1)*VECTMP(1)

C        -- LIGNES SUIVANTES
        DO 50 I=2,NEQ
          KDEB=SMDI(I-1)+1
          KFIN=SMDI(I)-1
C          CDIR$ IVDEP
          DO 40 KI=KDEB,KFIN
            JCOL=SMHC(KI)
            XSOL(JCOL,JVEC)=XSOL(JCOL,JVEC)+ZC(JMAT1-1+KI)*VECTMP(I)
            XSOL(I,JVEC)=XSOL(I,JVEC)+ZC(JMAT2-1+KI)*VECTMP(JCOL)
   40     CONTINUE
          XSOL(I,JVEC)=XSOL(I,JVEC)+ZC(JMAT1+KFIN)*VECTMP(I)
   50   CONTINUE
        IF (PREPOS) CALL MCCONL('DIVI',LMAT,0,'C',XSOL(1,JVEC),1)
   60 CONTINUE


C     -- POUR LES DDLS ELIMINES PAR AFFE_CHAR_CINE, ON NE PEUT PAS
C        CALCULER F=K*U. CES DDLS SONT MIS A ZERO.
C     -------------------------------------------------------------
      CALL JEEXIN(NOM19//'.CCID',IEXI)
      IF (IEXI.NE.0) THEN
        CALL JEVEUO(NOM19//'.CCID','L',JCCID)
        DO 110 JVEC=1,NBVECT
          DO 111, IEQ=1,NEQ
             KETA=ZI(JCCID-1+IEQ)
             CALL ASSERT(KETA.EQ.1 .OR. KETA.EQ.0)
             IF (KETA.EQ.1) XSOL(IEQ,JVEC)=DCMPLX(0.D0,0.D0)
111       CONTINUE
110     CONTINUE
      ENDIF

      CALL JEDEMA()
      END
