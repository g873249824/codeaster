      SUBROUTINE ORDCOQ(IMOD,NBM,ICOQ,NBNO,NUMNO,INOMAX,NBNOTO,COORDO,
     &                  IAXE,DEFM,NUNOE0,DRMAX,TORCO)
      IMPLICIT REAL*8 (A-H,O-Z)
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 16/12/2004   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_6
C-----------------------------------------------------------------------
C CARACTERISATION DES DEFORMEES DES MODES PRIS EN COMPTE POUR LE
C COUPLAGE : DETERMINATION DE L'ORDRE DE COQUE
C APPELANT : MODCOQ
C-----------------------------------------------------------------------
C  IN : IMOD   : INDICE DU MODE CONSIDERE
C  IN : NBM    : NOMBRE DE MODES PRIS EN COMPTE POUR LE COUPLAGE
C  IN : ICOQ   : INDICE CARACTERISANT LA COQUE SUR LAQUELLE ON TRAVAILLE
C                ICOQ = 1 COQUE INTERNE  ICOQ = 2 COQUE EXTERNE
C  IN : NBNO   : NOMBRE DE NOEUDS APPARTENANT AU GROUPE DE NOEUDS SUR
C                LEQUEL ON VA EXTRAIRE LES DEPLACEMENTS
C  IN : NUMNO  : LISTE DES NUMEROS DES NOEUDS APPARTENANT A CE GROUPE
C  IN : INOMAX : INDICE DU NOEUD POUR LEQUEL ON A RELEVE LE DEPLACEMENT
C                MAXIMUM DANS LE PLAN PERPENDICULAIRE A L'AXE DE
C                REVOLUTION
C  IN : NBNOTO : NOMBRE TOTAL DE NOEUDS DU MAILLAGE
C  IN : COORDO : LISTE DES COORDONNEES DE TOUS LES NOEUDS DU MAILLAGE
C  IN : IAXE   : INDICE CARACTERISANT L'AXE DE REVOLUTION DES COQUES
C                IAXE = 1 : AXE X DU REPERE GLOBAL
C                IAXE = 2 : AXE Y DU REPERE GLOBAL
C                IAXE = 3 : AXE Z DU REPERE GLOBAL
C  IN : DEFM   : TABLEAU DES DEFORMEES MODALES (DDL DE TRANSLATION DANS
C                LES DEUX DIRECTIONS ORTHOGONALES A L'AXE DE REVOLUTION)
C OUT : NUNOE0 : NUMERO DU NOEUD CORRESPONDANT AU DEPLACEMENT RADIAL
C                MAXIMUM SUR LE MAILLAGE
C OUT : DRMAX  : VALEUR DU DEPLACEMENT RADIAL MAXIMUM
C OUT : TORCO  : TABLEAU CONTENANT LES ORDRES DE COQUE ET DEPHASAGES
C-----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      INTEGER      IMOD,NBM,ICOQ,NBNO,NUMNO(NBNO),INOMAX,NBNOTO,IAXE
      REAL*8       COORDO(3,NBNOTO),DEFM(2,NBNOTO,NBM)
      INTEGER      NUNOE0
      REAL*8       DRMAX,TORCO(4,NBM)
C
      REAL*8       DCABS2,R8PI
      INTEGER      PUI
      REAL*8       MODMAX,MODULE
      CHARACTER*3  KMOD
      CHARACTER*8  NOMPAR
      LOGICAL      DEFINI
C
C-----------------------------------------------------------------------
      CALL JEMARQ()
C
C
C --- 1.INITIALISATIONS
C
      TOLE = 100.D0*R8PREM()
      PI = R8PI()
C
      IF (IAXE.EQ.1) THEN
        IDIR1 = 2
        IDIR2 = 3
        NOMPAR = 'X'
      ELSE IF (IAXE.EQ.2) THEN
        IDIR1 = 3
        IDIR2 = 1
        NOMPAR = 'Y'
      ELSE
        IDIR1 = 1
        IDIR2 = 2
        NOMPAR = 'Z'
      ENDIF
C
      ILIGNE = 1
      IF (ICOQ.EQ.2) ILIGNE = 3
C
C
C --- 2.DEDUCTION DE L'ALTITUDE DU CONTOUR SUR LEQUEL ON VA CALCULER
C ---   LES DEPLACEMENTS RADIAUX
C
      NUNOMX = NUMNO(INOMAX)
      ZCR = COORDO(IAXE,NUNOMX)
C
C
C --- 3.EXTRACTION DU CONTOUR
C
      CALL WKVECT('&&ORDCOQ.TEMP.NOCR','V V I',NBNO,INOCR)
      NBNOCR = 0
      DO 10 INO = 1,NBNO
        NUMNOE = NUMNO(INO)
        ZNO = COORDO(IAXE,NUMNOE)
        DIFZ = DBLE(ABS(ZNO-ZCR))
        IF (DIFZ.LT.TOLE) THEN
          NBNOCR = NBNOCR + 1
          ZI(INOCR+NBNOCR-1) = NUMNOE
        ENDIF
  10  CONTINUE
C
      IF (NBNOCR.LE.8) CALL UTMESS('F','ORDCOQ','NOMBRE DE NOEUDS SUR'//
     &  ' LE CONTOUR INSUFFISANT POUR DETERMINER CORRECTEMENT LES'//
     &  ' ORDRES DE COQUE')
C
C
C --- 4.CREATION D'UNE DISCRETISATION EN THETA SUR LE CONTOUR
C ---   SIMULTANEMENT ON CREE UNE DISTRIBUTION EN DR
C
      CALL WKVECT('&&ORDCOQ.TEMP.THETA','V V R',NBNOCR,ITHETA)
      CALL WKVECT('&&ORDCOQ.TEMP.DR'   ,'V V R',NBNOCR,IDR)
C
      DO 20 INO = 1,NBNOCR
        NUMNOE = ZI(INOCR+INO-1)
        X1 = COORDO(IDIR1,NUMNOE)
        X2 = COORDO(IDIR2,NUMNOE)
        DEFINI = .TRUE.
        IF (X1.EQ.0.D0) THEN
          IF (X2.GT.0.D0) THEN
            THETA = PI/2.D0
          ELSE IF (X2.LT.0.D0) THEN
            THETA = -PI/2.D0
          ELSE
            DEFINI = .FALSE.
          ENDIF
        ELSE IF (X1.GT.0.D0) THEN
          THETA = DBLE(ATAN(X2/X1))
        ELSE IF (X1.LT.0.D0) THEN
          THETA = DBLE(ATAN(X2/X1)) + PI
        ENDIF
        IF (DEFINI) THEN
          IF (THETA.LT.0.D0) THETA = THETA + 2.D0*PI
        ELSE
          CALL UTMESS('F','ORDCOQ','AZIMUT INDEFINI POUR UN DES '//
     &      'NOEUDS DE LA COQUE')
        ENDIF
        DR = DBLE(COS(THETA)) * DEFM(1,NUMNOE,IMOD)
     &     + DBLE(SIN(THETA)) * DEFM(2,NUMNOE,IMOD)
        ZR(ITHETA+INO-1) = THETA
        ZR(IDR+INO-1) = DR
  20  CONTINUE
C
C
C --- 5.ON REORDONNE LA DISCRETISATION PAR VALEURS CROISSANTES DE THETA
C ---   SIMULTANEMENT ON REORDONNE LA DISTRIBUTION EN DR ET LA LISTE DES
C ---   NUMEROS DES NOEUDS
C
      DO 30 INO = 1,NBNOCR-1
        THEMIN = ZR(ITHETA+INO-1)
        IMIN = INO
        DO 31 JNO = INO+1,NBNOCR
          IF (ZR(ITHETA+JNO-1).LT.THEMIN) THEN
            THEMIN = ZR(ITHETA+JNO-1)
            IMIN = JNO
          ENDIF
  31    CONTINUE
        ZR(ITHETA+IMIN-1) = ZR(ITHETA+INO-1)
        ZR(ITHETA+INO-1) = THEMIN
        DR = ZR(IDR+IMIN-1)
        ZR(IDR+IMIN-1) = ZR(IDR+INO-1)
        ZR(IDR+INO-1) = DR
        NUMNOE = ZI(INOCR+IMIN-1)
        ZI(INOCR+IMIN-1) = ZI(INOCR+INO-1)
        ZI(INOCR+INO-1) = NUMNOE
  30  CONTINUE
C
C
C --- 6.CONSTRUCTION D'UNE DISCRETISATION REGULIERE EN THETA SUR 0,2*PI
C ---   D'UN NOMBRE DE POINTS EGAL A LA PREMIERE PUISSANCE DE 2
C ---   SUPERIEURE A NBNOCR
C ---   CALCUL D'UNE NOUVELLE DISTRIBUTION EN DR PAR INTERPOLATION
C
C --- 6.1.DETERMINATION DE NBPT
C
      RAP = DBLE(LOG(DBLE(NBNOCR))/LOG(2.D0))
      PUI = INT(RAP)
      DIF = RAP - DBLE(PUI)
      IF (DIF.GT.TOLE) PUI = PUI + 1
      NBPT = 1
      DO 40 I = 1,PUI
        NBPT = NBPT*2
  40  CONTINUE
C
C --- 6.2.CONSTRUCTION DE LA DISCRETISATION REGULIERE EN THETA
C
      CALL WKVECT('&&ORDCOQ.TEMP.DISC','V V R',NBPT,IDISC)
      PAS = 2.D0*PI/DBLE(NBPT)
      DO 50 IP = 1,NBPT
        ZR(IDISC+IP-1) = DBLE(IP-1)*PAS
  50  CONTINUE
C
C --- 6.3.CALCUL D'UNE NOUVELLE DISTRIBUTION EN DR PAR INTERPOLATION
C
      CALL WKVECT('&&ORDCOQ.TEMP.PROL','V V K16',5,IPROL)
      ZK16(IPROL)   = 'FONCTION'
      ZK16(IPROL+1) = 'LIN LIN '
      ZK16(IPROL+2) =  NOMPAR
      ZK16(IPROL+3) = 'TOUTRESU'
      ZK16(IPROL+4) = 'LL      '
C
      CALL WKVECT('&&ORDCOQ.TEMP.DR2','V V R',NBPT,IDR2)
      CALL FOINTR(' ',ZK16(IPROL),NBNOCR,ZR(ITHETA),ZR(IDR) ,
     &                           NBPT  ,ZR(IDISC) ,ZR(IDR2),IER)
C
C
C --- 7.FFT SUR LA DISTRIBUTION EN DR
C
      CALL WKVECT('&&ORDCOQ.TEMP.FFTDR','V V C',NBPT,IFFTDR)
      DO 60 IP = 1,NBPT
        ZC(IFFTDR+IP-1) = DCMPLX(ZR(IDR2+IP-1),0.D0)
  60  CONTINUE
      CALL FFT(ZC(IFFTDR),NBPT,1)
C
C
C --- 8.DETERMINATION DE L'ORDRE DE COQUE
C ---   CALCUL DU MODULE DES NBPT/2 PREMIERES VALEURS DE LA
C ---   TRANSFORMEE DE DR
C ---   SIMULTANEMENT ON DETECTE LE PIC ET ON CALCULE UN CRITERE
C ---   DE PRECISION (ENERGIE DU PIC/ENERGIE DU BRUIT)
C
      MODMAX = DCABS2(ZC(IFFTDR))
      SOMM = MODMAX*MODMAX
      IPMAX = 1
      NBPT2 = NBPT/2
      DO 70 IP = 2,NBPT2
        MODULE = DCABS2(ZC(IFFTDR+IP-1))
        SOMM = SOMM + MODULE*MODULE
        IF (MODULE.GT.MODMAX) THEN
          MODMAX = MODULE
          IPMAX = IP
        ENDIF
  70  CONTINUE
      CRIT = 1.D0 - MODMAX*MODMAX/SOMM
C
      IF (IPMAX.EQ.1) CALL UTMESS('F','ORDCOQ','ORDRE DE COQUE NUL '//
     &  'POUR L UN DES MODES PRIS EN COMPTE POUR LE COUPLAGE. LE '//
     &  'MODELE DE RESOLUTION NE SUPPORTE PAS UNE TELLE VALEUR.')
C
      RKI = DBLE(IPMAX-1)
      TORCO(ILIGNE,IMOD) = RKI
C
C
C --- 9.DETERMINATION DU DRMAX ET DU DEPHASAGE
C
C --- 9.1.RESOLUTION DU PROBLEME DE MOINDRES CARRES
C
      S11 = 0.D0
      S12 = 0.D0
      S22 = 0.D0
      Y1  = 0.D0
      Y2  = 0.D0
      DO 80 INO = 1,NBNOCR
        THETA = ZR(ITHETA+INO-1)
        DR = ZR(IDR+INO-1)
        AN = DBLE(COS(RKI*THETA))
        BN = DBLE(SIN(RKI*THETA))
        S11 = S11 + AN*AN
        S12 = S12 + AN*BN
        S22 = S22 + BN*BN
        Y1  = Y1  + DR*AN
        Y2  = Y2  + DR*BN
  80  CONTINUE
C
      DELTA = S11*S22 - S12*S12
      IF (DBLE(ABS(DELTA)).LT.TOLE) THEN
        WRITE(KMOD,'(I3)') IMOD
        CALL UTMESS('F','ORDCOQ','DETERMINATION DU DRMAX ET DU '//
     &    'DEPHASAGE POUR LE MODE '//KMOD//' : LE DETERMINANT DU '//
     &    'SYSTEME ISSU DU MOINDRE CARRE EST NUL')
      ENDIF
      ALPHA = (S22*Y1 - S12*Y2)/DELTA
      BETA  = (S11*Y2 - S12*Y1)/DELTA
C
C --- 9.2.DEDUCTION DU DRMAX ET DU THETA0
C
      DRMAX = DBLE(SQRT(ALPHA*ALPHA+BETA*BETA))
C
      DEFINI = .TRUE.
      IF (ALPHA.EQ.0.D0) THEN
        IF (BETA.GT.0.D0) THEN
          THETA0 = PI/2.D0
        ELSE IF (BETA.LT.0.D0) THEN
          THETA0 = -PI/2.D0
        ELSE
          DEFINI = .FALSE.
        ENDIF
      ELSE IF (ALPHA.GT.0.D0) THEN
        THETA0 = DBLE(ATAN(BETA/ALPHA))
      ELSE IF (ALPHA.LT.0.D0) THEN
        THETA0 = DBLE(ATAN(BETA/ALPHA)) + PI
      ENDIF
      IF (DEFINI) THEN
        IF (THETA0.LT.0.D0) THETA0 = THETA0 + 2.D0*PI
      ELSE
        WRITE(KMOD,'(I3)') IMOD
        CALL UTMESS('F','ORDCOQ','DETERMINATION DU DEPHASAGE POUR LE '//
     &    ' MODE '//KMOD//' : THETA0 INDEFINI')
      ENDIF
      THETA0 = THETA0/RKI
      TORCO(ILIGNE+1,IMOD) = THETA0
C
C --- 9.3.CALCUL D'UNE ERREUR RELATIVE SUR LA NORME DES DR
C
      SOMM1 = 0.D0
      SOMM2 = 0.D0
C
      DO 90 INO = 1,NBNOCR
        DR = ZR(IDR+INO-1)
        SOMM1 = SOMM1 + DR * DR
        GAMMA = RKI*(ZR(ITHETA+INO-1)-THETA0)
        FONC  = DRMAX*DBLE(COS(GAMMA))
        SOMM2 = SOMM2 + (DR-FONC) * (DR-FONC)
  90  CONTINUE
C
      ERR = DBLE(SQRT(SOMM2/SOMM1)) * 100.D0
C
C
C --- 10.RECUPERATION DU NUMERO DU NOEUD SUR LE CONTOUR DONT L'AZIMUT
C ---    EST LE PLUS PROCHE DE THETA0
C
      DO 100 INO = 1,NBNOCR
        THETA2 = ZR(ITHETA+INO-1)
        IF (THETA2.GT.THETA0) GOTO 101
 100  CONTINUE
 101  CONTINUE
      IF (INO.EQ.1) THEN
        THETA1 = ZR(ITHETA+NBNOCR-1) - 2.D0*PI
        DIF1 = DBLE(ABS(THETA1-THETA0))
        DIF2 = DBLE(ABS(THETA2-THETA0))
        IF (DIF1.LT.DIF2) THEN
          NUNOE0 = ZI(INOCR+NBNOCR-1)
        ELSE
          NUNOE0 = ZI(INOCR)
        ENDIF
      ELSE IF (INO.EQ.NBNOCR+1) THEN
        THETA1 = ZR(ITHETA) + 2.D0*PI
        DIF1 = DBLE(ABS(THETA1-THETA0))
        DIF2 = DBLE(ABS(THETA2-THETA0))
        IF (DIF1.LT.DIF2) THEN
          NUNOE0 = ZI(INOCR)
        ELSE
          NUNOE0 = ZI(INOCR+NBNOCR-1)
        ENDIF
      ELSE
        THETA1 = ZR(ITHETA+INO-2)
        DIF1 = DBLE(ABS(THETA1-THETA0))
        DIF2 = DBLE(ABS(THETA2-THETA0))
        IF (DIF1.LT.DIF2) THEN
          NUNOE0 = ZI(INOCR+INO-2)
        ELSE
          NUNOE0 = ZI(INOCR+INO-1)
        ENDIF
      ENDIF
C
C
C --- 11.IMPRESSION DES RESULTATS DANS LE FICHIER MESSAGE
C
 500  FORMAT('DETERMINATION DE L ORDRE DE COQUE')
 501  FORMAT('FFT SUR DR : LE BRUIT AUTOUR DU PIC REPRESENTE UNE ',
     &       'ENERGIE RESIDUELLE DE ',G13.6,' %')
 502  FORMAT('KI = ',I3)
 510  FORMAT('DETERMINATION DU DEPHASAGE')
 511  FORMAT('ERREUR RELATIVE SUR LA NORME DES DEPLACEMENTS RADIAUX : ',
     &        G13.6,1X,'%')
 512  FORMAT('THETA0 = ',G13.6,' DEGRES')
C
      IFM = IUNIFI('MESSAGE')
      WRITE(IFM,500)
      WRITE(IFM,501) CRIT
      WRITE(IFM,502) IPMAX-1
      WRITE(IFM,510)
      WRITE(IFM,511) ERR
      WRITE(IFM,512) THETA0*180.D0/PI
C
      CALL JEDETR('&&ORDCOQ.TEMP.NOCR')
      CALL JEDETR('&&ORDCOQ.TEMP.THETA')
      CALL JEDETR('&&ORDCOQ.TEMP.DR'   )
      CALL JEDETR('&&ORDCOQ.TEMP.DISC')
      CALL JEDETR('&&ORDCOQ.TEMP.PROL')
      CALL JEDETR('&&ORDCOQ.TEMP.DR2')
      CALL JEDETR('&&ORDCOQ.TEMP.FFTDR')
      CALL JEDEMA()
C
      END
