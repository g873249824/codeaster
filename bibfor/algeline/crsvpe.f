      SUBROUTINE CRSVPE(MOTFAC,SOLVEU)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 08/08/2008   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
      IMPLICIT   NONE
      CHARACTER*16 MOTFAC
      CHARACTER*19 SOLVEU
C ----------------------------------------------------------
C BUT : CREER UN SOLVEUR POUR PETSC
C
C IN K        MOTFAC  : MOT-CLE FACTEUR 'SOLVEUR'
C IN/JXOUT    SOLVEU  : LE SOLVEUR EST CREE ET REMPLI
C ----------------------------------------------------------

C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------

      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C --- FIN DECLARATIONS NORMALISEES JEVEUX --------------------

      INTEGER      IBID,NIREMP,NMAXIT
      INTEGER      ISLVK,ISLVI,ISLVR
      REAL*8       FILLIN,EPSMAX
      CHARACTER*3  SYME
      CHARACTER*8  KVARI,KPREC,RENUM
      LOGICAL      EXISYM,GETEXM

C------------------------------------------------------------------
      CALL JEMARQ()

      SYME='NON'
      EXISYM = GETEXM(MOTFAC,'SYME')
      IF (EXISYM) CALL GETVTX(MOTFAC,'SYME',1,1,1,SYME,IBID)
      CALL GETVTX(MOTFAC,'ALGORITHME'      ,1,1,1,KVARI ,IBID)
      CALL GETVTX(MOTFAC,'PRE_COND'        ,1,1,1,KPREC ,IBID)
      CALL GETVIS(MOTFAC,'NIVE_REMPLISSAGE',1,1,1,NIREMP,IBID)
      CALL GETVR8(MOTFAC,'REMPLISSAGE'     ,1,1,1,FILLIN,IBID)
      CALL GETVTX(MOTFAC,'RENUM'           ,1,1,1,RENUM ,IBID)
      CALL GETVR8(MOTFAC,'RESI_RELA'       ,1,1,1,EPSMAX,IBID)
      CALL GETVIS(MOTFAC,'NMAX_ITER'       ,1,1,1,NMAXIT,IBID)

C     CREATION DE LA SD ET STOCKAGE DES VALEURS OBTENUES :
C     ---------------------------------------------------
      CALL WKVECT(SOLVEU//'.SLVK','V V K24',11,ISLVK)
      CALL WKVECT(SOLVEU//'.SLVR','V V R',4,ISLVR)
      CALL WKVECT(SOLVEU//'.SLVI','V V I',6,ISLVI)

      ZK24(ISLVK-1+1) = 'PETSC'
      ZK24(ISLVK-1+2) = KPREC
      ZK24(ISLVK-1+3) = KVARI
      ZK24(ISLVK-1+4) = RENUM
      ZK24(ISLVK-1+5) = SYME

      ZR(ISLVR-1+2) = EPSMAX
      ZR(ISLVR-1+3) = FILLIN

      ZI(ISLVI-1+1) = -9999
      ZI(ISLVI-1+2) = NMAXIT
      ZI(ISLVI-1+3) = NIREMP
      ZI(ISLVI-1+4) = -9999


C FIN ------------------------------------------------------
      CALL JEDEMA()
      END
