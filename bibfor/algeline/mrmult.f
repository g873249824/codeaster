      SUBROUTINE MRMULT(CUMUL,LMAT,VECT,XSOL,NBVECT,PREPOS)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*(*) CUMUL
      INTEGER LMAT,NBVECT
      REAL*8 VECT(*),XSOL(*)
      LOGICAL       PREPOS,PREPO2
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 26/02/2013   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_4
C     ------------------------------------------------------------------
C    EFFECTUE LE PRODUIT D'UNE MATRICE PAR N VECTEURS REELS. LE RESULTAT
C    EST STOCKE DANS N VECTEURS REELS
C     ATTENTION:
C       - MATRICE SYMETRIQUE OU NON, REELLE.
C       - LES VECTEURS INPUT ET OUTPUT REELS DOIVENT ETRE DISTINCTS
C       - POUR LES DDLS ELIMINES PAR AFFE_CHAR_CINE, ON NE PEUT PAS
C         CALCULER XSOL. CES DDLS SONT MIS A ZERO.
C     ------------------------------------------------------------------
C IN  CUMUL  : K4 :
C              / 'ZERO' : XSOL =        MAT*VECT
C              / 'CUMU' : XSOL = XSOL + MAT*VECT

C IN  LMAT  :I:  DESCRIPTEUR DE LA MATRICE
C IN  VECT  :R: VECTEUR(S) A MULTIPLIER PAR LA MATRICE
C VAR XSOL  :R: VECTEUR(S) SOLUTION(S)
C               SI CUMUL = 'ZERO' ALORS XSOL EST EN MODE OUT
C IN  NBVECT: I : NOMBRE DE VECTEURS A MULTIPLIER (ET DONC DE SOLUTIONS)
C     ------------------------------------------------------------------
      CHARACTER*3 KMPIC,KMATD
      CHARACTER*19 MATAS
      INTEGER NEQ,JTEMP,NEQL,JREFA,IBID,JSMHC,JSMDI,JVTEMP
      LOGICAL LMATD
      COMPLEX*16 CBID
      INTEGER*4 NEQ4
C     ---------------------------------------------------------------

      PREPO2=PREPOS
      CALL JEMARQ()
      CALL ASSERT(CUMUL.EQ.'ZERO' .OR. CUMUL.EQ.'CUMU')
      MATAS=ZK24(ZI(LMAT+1))(1:19)
      CALL ASSERT(ZI(LMAT+3).EQ.1)
      CALL JEVEUO(MATAS//'.REFA','L',JREFA)
      IF (ZK24(JREFA-1+3).EQ.'ELIMF') CALL MTMCHC(MATAS,'ELIML')
      NEQ=ZI(LMAT+2)
      CALL WKVECT('&&MRMULT.VECTMP','V V R',NEQ,JVTEMP)

      CALL JEVEUO(ZK24(JREFA-1+2)(1:14)//'.SMOS.SMHC','L',JSMHC)
      CALL MTDSC2(ZK24(ZI(LMAT+1)),'SMDI','L',JSMDI)
      CALL DISMOI('F','MPI_COMPLET',MATAS,'MATR_ASSE',IBID,KMPIC,IBID)


C     1.  MATRICE MPI_INCOMPLET :
C     ----------------------------
      IF (KMPIC.EQ.'NON') THEN
        IF (CUMUL.EQ.'CUMU') THEN
          CALL WKVECT('&&MRMULT.XTEMP','V V R',NBVECT*NEQ,JTEMP)
          NEQ4=NBVECT*NEQ
          CALL DCOPY(NEQ4,XSOL,1,ZR(JTEMP),1)
        ENDIF

        CALL DISMOI('F','MATR_DISTR',MATAS,'MATR_ASSE',IBID,KMATD,IBID)
        IF (KMATD.EQ.'OUI') THEN
          LMATD=.TRUE.
          NEQL=ZI(LMAT+5)
        ELSE
          LMATD=.FALSE.
          NEQL=0
        ENDIF
        CALL MRMMVR('ZERO',LMAT,ZI(JSMDI),ZI4(JSMHC),LMATD,NEQ,NEQL,
     &              VECT,XSOL,NBVECT,ZR(JVTEMP),PREPO2)
C       ON DOIT COMMUNIQUER POUR OBTENIR LE PRODUIT MAT-VEC 'COMPLET'
        CALL MPICM1('MPI_SUM','R',NBVECT*NEQ,IBID,IBID,XSOL,CBID)

        IF (CUMUL.EQ.'CUMU') THEN
          CALL DAXPY(NEQ4,1.D0,ZR(JTEMP),1,XSOL,1)
          CALL JEDETR('&&MRMULT.XTEMP')
        ENDIF


C     2.  MATRICE MPI_COMPLET :
C     ----------------------------
      ELSE
        LMATD=.FALSE.
        NEQL=0
        CALL MRMMVR(CUMUL,LMAT,ZI(JSMDI),ZI4(JSMHC),LMATD,NEQ,NEQL,VECT,
     &              XSOL,NBVECT,ZR(JVTEMP),PREPO2)
      ENDIF


      CALL JEDETR('&&MRMULT.VECTMP')
      CALL JEDEMA()
      END
