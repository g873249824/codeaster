      SUBROUTINE MRMULT(CUMUL,LMAT,VECT,TYPVEC,XSOL,NBVECT)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*(*) CUMUL
      CHARACTER*1 TYPVEC
      INTEGER LMAT,NBVECT
      REAL*8 VECT(*),XSOL(*)
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGELINE  DATE 11/01/2011   AUTEUR SELLENET N.SELLENET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_4
C     ------------------------------------------------------------------
C    EFFECTUE LE PRODUIT D'UNE MATRICE PAR N VECTEURS REELS. LE RESULTAT
C    EST STOCKE DANS N VECTEURS REELS (PARAMETRE TYPVEC INUTILE)
C     ATTENTION:
C       - MATRICE SYMETRIQUE OU NON, REELLE. SI COMPLEXE ON S'ARRETE
C         EN ERREUR FATALE (CF. MCMULT).
C       - VECTEURS INPUT ET OUTPUT REELS ET DISTINCTS 
C     ------------------------------------------------------------------
C IN  CUMUL  : K4 : INDICATEUR D'INITIALISATION A ZERO DU SECOND MEMBRE
C              = 'ZERO' ON INITIALISE A ZERO LES SECONDS MEMBRES
C              = 'CUMU' ON N 'INITIALISE PAS A ZERO LES SECONDS MEMBRES
C                  CUMUL AVEC LES VALEURS D'ENTREES
C IN  LMAT  : I : DESCRIPTEUR DE LA MATRICE
C IN  VECT  :R/C: VECTEURS A MULTIPLIER PAR LA MATRICE
C IN  TYPVEC: K1: TYPE INUTILISE
C VAR XSOL  :R/C: VECTEUR(S) SOLUTION(S)
C             MAIS SI CUMUL = 'ZERO' ALORS XSOL EST EN MODE OUT
C IN  NBVECT: I : NOMBRE DE VECTEURS A MULTIPLIER (ET DONC DE SOLUTIONS)
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER*4 ZI4
      COMMON  /I4VAJE/ZI4(1)
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
      CHARACTER*3 KMPIC,KMATD
      CHARACTER*14 XTEMP
      CHARACTER*19 MATAS
      INTEGER NEQ,NEQL,JTEMP,I
      LOGICAL MATD

      CALL JEMARQ()
      MATAS=ZK24(ZI(LMAT+1))(1:19)
      CALL JEVEUO(MATAS//'.REFA','L',JREFA)
      IF (ZK24(JREFA-1+3).EQ.'ELIML') CALL MTMCHC(MATAS,'ELIMF')

      CALL JEVEUO(ZK24(JREFA-1+2)(1:14)//'.SMOS.SMHC','L',JSMHC)



C     SELON REEL OU COMPLEXE :
      GO TO (70,80) ZI(LMAT+3)

      CALL ASSERT(.FALSE.)

   70 CONTINUE
C     MATRICE REELLE
      CALL MTDSC2(ZK24(ZI(LMAT+1)),'SMDI','L',JSMDI)
      CALL DISMOI('F','MPI_COMPLET',MATAS,'MATR_ASSE',IBID,KMPIC,IBID)
      IF (KMPIC.EQ.'NON') THEN
         NEQ = ZI(LMAT+2)
C        SI CUMUL N'EST PAS ZERO
         IF (CUMUL.NE.'ZERO') THEN
            XTEMP = '&&MRMULT.XTEMP'
            CALL WKVECT(XTEMP,'V V R',NBVECT*NEQ,JTEMP)
            DO 10 I=1,NBVECT*NEQ
               ZR(JTEMP-1+I) = XSOL(I)
   10       CONTINUE
         ENDIF
C
         CALL DISMOI('F','MATR_DISTR',MATAS,'MATR_ASSE',IBID,KMATD,IBID)
         MATD = KMATD.EQ.'OUI'
         IF ( MATD ) THEN
           NEQL = ZI(LMAT+5)
         ELSE
           NEQL = 0
         ENDIF
         CALL MRMMVR('ZERO',ZK24(ZI(LMAT+1)),ZI(JSMDI),ZI4(JSMHC),
     &               NEQ,NEQL,MATD,VECT,XSOL,NBVECT)
C        ON DOIT COMMUNIQUER POUR OBTENIR LE PRODUIT MAT-VEC 'COMPLET'
         CALL MPICM1('MPI_SUM','R',NBVECT*NEQ,IBID,XSOL)
         IF (CUMUL.NE.'ZERO') THEN
            DO 20 I=1,NBVECT*NEQ
               XSOL(I) = ZR(JTEMP-1+I) + XSOL(I)
   20       CONTINUE
            CALL JEDETR(XTEMP)
         ENDIF
      ELSE
         CALL MRMMVR(CUMUL,ZK24(ZI(LMAT+1)),ZI(JSMDI),ZI4(JSMHC),
     &               ZI(LMAT+2),0,.FALSE.,VECT,XSOL,NBVECT)
      ENDIF
      GO TO 110


   80 CONTINUE
C     MATRICE COMPLEXE
      CALL ASSERT(.FALSE.)


  110 CONTINUE
      CALL JEDEMA()
      END
