      SUBROUTINE OPS014( ICMD , ICOND, IER )
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER            ICMD , ICOND, IER
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF SUPERVIS  DATE 13/02/2001   AUTEUR DURAND C.DURAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     PROCEDURE "INCLUDE_MATERIAU" PERMET LE DEBRANCHEMENT DE LA LECTURE
C     VERS UNE AUTRE UNITE LOGIQUE VERS UN FICHIER DU CATALOGUE MATERIAU
C     ASTER.
C     ------------------------------------------------------------------
C     ATTENTION : CETTE OPS EST A FAIRE EVOLUER EN PARALLELE 
C                 AVEC INCLUDE (OPS001)
C     ------------------------------------------------------------------
      CHARACTER*16     CBID, NOMCMD
      CHARACTER*32     NAME
C     ------------------------------------------------------------------
      CHARACTER*8      UNITE,NOMSYM
      PARAMETER             (MXFILE=30)
      COMMON  /SUCC00/ UNITE(MXFILE), NAME(MXFILE)
      COMMON  /SUCN00/ IPASS,IFILE,JCMD
C     ------------------------------------------------------------------
      CHARACTER*72     NOMAFN,TYPMOD,VARIAN,TYPVAL,PREFUT
      INTEGER          LRM,LTY,LNA,LTYV
      CHARACTER*128    REP
      CHARACTER*128    NOMFM
      INTEGER          IOCCF
      CHARACTER*16     MCF,MCSMCS,MCSTPX
      REAL*8           TPEXT
      INTEGER          JARGV,ARGC
      CHARACTER*14     VALC
      CHARACTER*129    DIROU
      INTEGER          LDIROU
      CHARACTER*2      CUNIT
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
C     ------------------------------------------------------------------
C     COMMON SPECIFIQUE A L'INCLUDE_MATERIAU POUR CONSERVER LE NOM
C     DE MATERIAU DEVANT PREFIXER LES CONCEPTS INCLUS DANS LE FICHIER
      CHARACTER*8 PRFXCO
      INTEGER     LPRFXC
      COMMON /INCMAT/ PRFXCO  
      COMMON /INCMAI/ LPRFXC  
C     ------------------------------------------------------------------
      IF (ICOND .NE. -1) THEN
        CALL UTMESS('E','SUPERVISEUR','ERREUR FATALE  **** '//
     +                                'APPEL A COMMANDE "SUPERVISEUR".')
        IER = 1
        GOTO 9999
      ENDIF

      CALL JEMARQ()
C
      IF ( IPASS .NE. 80191  ) THEN
         IPASS   = 80191
         IFILE   = 0
         NAME(1) = '   '
      ENDIF
C
      JCMD = ICMD
      CALL GETRES(CBID,CBID,NOMCMD)
CCAR  CALL LXINFU(IREAD,LREC,IWRITE,NOMSYM )
      
      IFILE = IFILE + 1
C
      IF ( IFILE .GT. MXFILE ) THEN
         CALL UTDEBM('E','ANALYSE DES COMMANDES (ERREUR 1C)',
     +                   'VOUS NE POUVEZ UTILISER PLUS DE')
         CALL UTIMPI('S',' ',1,MXFILE)
         CALL UTIMPK('S','NIVEAUX DE PROFONDEUR POUR DES APPELS PAR LA '
     +                 //'PROCEDURE',1,'CALL')
         CALL UTFINM()
         CALL UTMESS('F','SUPERVISEUR',
     +                            'ARRET DE LA LECTURE DES COMMANDES.')
      ENDIF
C
C     --- ON EMPILE LE NOM SYMBOLIQUE DE L'UNITE DE LECTURE COURANTE ---
CJPL  UNITE(IFILE) = NOMSYM
C
C     --- CONSTRUCTION DU NOM DE FICHIER
CCAR  CALL GETVTX(' ','NOM_AFNOR',1,1,1,NOMAFN,L)
CCAR  CALL GETLTX(' ','NOM_AFNOR',1,1,1,LNA,L)
CCAR  CALL GETVTX(' ','TYPE_MODELE',1,1,1,TYPMOD,L)
CCAR  CALL GETLTX(' ','TYPE_MODELE',1,1,1,LTY,L)
CCAR  CALL GETVTX(' ','VARIANTE',1,1,1,VARIAN,L)
CCAR  CALL GETVTX(' ','TYPE_VALE',1,1,1,TYPVAL,L)
CCAR  CALL GETLTX(' ','TYPE_VALE',1,1,1,LTYV,L)
    
CCAR  CALL REPMAT(1,LRM,REP)
CCAR  NOMFM=REP(1:LRM)//NOMAFN(1:LNA)//'_'//TYPMOD(1:LTY)
CCAR +      //'_'//VARIAN(1:1)//'.'//TYPVAL(1:LTYV)
      
C     --- UNITE DE LECTURE ---
CCAR  CALL GETVIS(' ','UNITE',1,1,1,IUNIT,L)

C     --- TEST EXISTENCE DU FICHIER
CCAR  OPEN(UNIT=IUNIT, FILE=NOMFM, STATUS='OLD', ERR=99)
      
C     --- TRAITEMENT DES MOTS-CLES A SUBSTITUER POUR UNE EXTRACTION
C         DE TEMPERATURE
CCAR  MCF='EXTRACTION'
CCAR  MCSMCS='COMPOR'
CCAR  MCSTPX='TEMP_EVAL'
CCAR  CALL GETFAC(MCF,IOCCF)
      

CCAR  IF (IOCCF .GT. 0) THEN
CCAR     CLOSE(UNIT=IUNIT)
         
CCAR     ARGC=IOCCF*2+3
CCAR     CALL WKVECT('&&OPS014_ARGV','V V K80',ARGC,JARGV)

CCAR     CALL REPOUT(1,LDIROU,DIROU)
CCAR     ZK80(JARGV)=DIROU(1:LDIROU)//'inc_mat_extr_temp'
CCAR     ZK80(JARGV+1)=NOMFM

CCAR     WRITE(CUNIT,'(I2)') IUNIT
CCAR     NOMFM='FORT.'//CUNIT
CCAR     ZK80(JARGV+2)=NOMFM

CCAR     DO 123 I=1,IOCCF
C           NOM DU MOT CLE FACTEUR A SUBSTITUER
CCAR        CALL GETVTX(MCF,MCSMCS,I,1,1,ZK80(JARGV+(I-1)*2+3),L)

C           VALEUR DE LA TEMPERATURE DE REFERENCE POUR L'EXTRACTION
CCAR        CALL GETVR8(MCF,MCSTPX,I,1,1,TPEXT,L)
CCAR        WRITE(VALC,'(1PE12.5)') TPEXT
CCAR        ZK80(JARGV+(I-1)*2+1+3)=VALC
CCAR123      CONTINUE
C   
C        APPEL A UN PRE-PROCESSEUR EXTERNE
CCAR     CALL APLEXT(IOCCF*2+3,ZK80(JARGV),IERAPL)
CCAR     IF (IERAPL .NE. 0) THEN
C            TRAITEMENT D'ERREUR
CCAR         IER = 1
CCAR         CALL UTMESS('F','INCLUDE_MATERIAU',
CCAR +       'ERREUR DANS LE SCRIPT D''EXTRACTION D''UNE'//
CCAR +       ' TEMPERATURE DE REFERENCE.')
CCAR         GOTO 100
CCAR     ELSE
CCAR        OPEN(UNIT=IUNIT, FILE=NOMFM, STATUS='OLD', ERR=99)
CCAR     ENDIF
CCAR  ENDIF
C
C     --- PREFIXE A AJOUTER AUX CONCEPTS DE L'INCLUDE_MATERIAU
      CALL GETVTX(' ','NOM_MATER',1,1,1,PREFUT,L)
      CALL GETLTX(' ','NOM_MATER',1,1,1,LPREF,L)
      IF (LPREF .GT. 6) THEN
         CALL UTMESS('F','INCLUDE_MATERIAU',
     +    'LE NOM DE MATERIAU ('//PREFUT(1:LPREF)//
     +    ') DOIT ETRE AU PLUS DE 6 CARACTERES.')
      ENDIF
      LPRFXC=LPREF
      PRFXCO=PREFUT(1:LPRFXC)
      
C     --- ON IMPRIME OUI / NON  ---
      CALL GETVIS(' ','INFO',1,1,1,IBID,L)
      IF ( IBID .GT. 1 ) THEN
        IWRITE = IUNIFI('MESSAGE')
      ELSE
        IWRITE = 0
      ENDIF
      IF (IWRITE.GT.0) WRITE(IWRITE,*)
C
C     --- DEFINITION DE LA NOUVELLE UNITE LOGIQUE ---
CCAR  NOMSYM = 'INCMAT'
CCAR  CALL LXUNIT(IUNIT,LREC,IWRITE,NOMSYM )
      GOTO 100
      
  99  CONTINUE
         CALL UTMESS('F','SUPERVISEUR',
     +        'ERR SUR OUVERTURE DU FICHIER DE CATALOGUE MATERIAU')
CJPL +      //' : '//NOMFM)
      IER = 1 
 100  CONTINUE  
C
C     --- ANNULATION DE LA PROCEDURE ---
      CALL SMCDEL(ICMD,0,IER)
      ICMD = ICMD - 1

CCAR  IF (IOCCF .GT. 0) THEN
CCAR     CALL JEDETR('&&OPS014_ARGV')
CCAR  ENDIF
      CALL JEDEMA()

 9999 CONTINUE
      END
