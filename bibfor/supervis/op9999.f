      SUBROUTINE OP9999( ICOND , IER , IFIN )
      IMPLICIT NONE
      INTEGER            ICOND , IER , IFIN
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF SUPERVIS  DATE 03/10/2011   AUTEUR LEFEBVRE J-P.LEFEBVRE 
C RESPONSABLE LEFEBVRE J-P.LEFEBVRE
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     OPERATEUR DE CLOTURE
C     ------------------------------------------------------------------
C     FIN OP9999
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER      IUNIFI, ICHK , INFO
      INTEGER      IEND, IFM, IUNERR, IUNRES, IUNMES
      INTEGER      I, L, ICMD, JCMD, NBCMD, NBEXT, NFHDF
      LOGICAL      ULEXIS
      CHARACTER*8  K8B, OUINON, TYPRES
      CHARACTER*16 FCHIER,FHDF
      CHARACTER*80 FICH
      INTEGER      IARG
C     ------------------------------------------------------------------
C
      CALL JEMARQ()
      IFIN = 1
      INFO = 1
      
C     LIBERE TOUS LES COMPOSANTS CHARGES DYNAMIQUEMENT
      CALL DLLCLS()

C     TEST ERREUR E SANS ERREUR F
C     1ER PASSAGE ICOND=1, ON AFFICHE LE RECAPITULATIF DES ALARMES
C     2ND PASSAGE ICOND=0, INFO_ALARM=0
      CALL CHKMSG(ICOND, ICHK)

      IF ( ICOND.NE.0 ) GOTO 9999
C     -----  FIN DE LA ZONE DE TEST ------------------------------------
C
C     --- IMPRESSION DES SD RESULTAT
C
      IFM    = 0
      FCHIER = ' '
      CALL GETVIS ( ' ', 'UNITE'  , 1,IARG,1, IFM   , L )
      IF ( .NOT. ULEXIS( IFM ) ) THEN
         CALL ULOPEN ( IFM, ' ', FCHIER, 'NEW', 'O' )
      ENDIF
C
      IEND = 0
      TYPRES = 'RESULTAT'
      CALL GCURES ( TYPRES, IEND, NBCMD, K8B )
      IF ( NBCMD .GT. 0 ) THEN
         IEND = 1
         CALL WKVECT ( '&&OP9999.NOM', 'V V K8', NBCMD, JCMD )
         CALL GCURES ( TYPRES, IEND, NBCMD, ZK8(JCMD) )
         DO 10 I = 1 , NBCMD
            WRITE(IFM,1000)
            CALL RSINFO ( ZK8(JCMD+I-1) , IFM )
 10      CONTINUE
      ENDIF
C
C     --- IER = 0 ==> ON TERMINE NORMALEMENT ( ON L'ESPERE) ---
      IF ( IER .EQ. 0 ) CALL GCUOPR ( 1 , ICMD  )
      IUNERR = IUNIFI('ERREUR')
      IUNMES = IUNIFI('MESSAGE')
      IUNRES = IUNIFI('RESULTAT')
C
C     --- SUPPRESSION DES CONCEPTS TEMPORAIRES DES MACRO
      CALL JEDETC('G','.',1)
      CALL GCUOPR( -1 ,ICMD)
      CALL GCDETP(ICMD,'.')

C     -- IMPRESSION DE LA TAILLE DES CONCEPTS DE LA BASE GLOBALE:
      CALL UIMPBA('G',IUNMES)
C
C     --- RETASSAGE EVENTUEL DE LA GLOBALE
      CALL GETVTX(' ','RETASSAGE',1,IARG,1,OUINON,L)
      IF(OUINON .EQ. 'OUI') CALL JETASS('G')
C
C     --- SAUVEGARDE DE LA GLOBALE AU FORMAT HDF
      FHDF = 'NON'
      CALL GETVTX(' ','FORMAT_HDF',1,IARG,1,FHDF,NFHDF)
      IF (NFHDF .GT. 0) THEN
        IF ( FHDF .EQ. 'OUI' ) THEN
          IF(OUINON .EQ. 'OUI')THEN
            CALL U2MESS ('A','SUPERVIS2_8')
          ENDIF
          FICH = 'bhdf.1'
          CALL JEIMHD(FICH,'G')
        ENDIF
      ENDIF
C
C     --- APPEL JXVERI POUR VERIFIER LA BONNE FIN D'EXECUTION
      CALL JXVERI(' ',' ')
C
C     --- CLOTURE DES FICHIERS ---
      CALL JELIBF( 'SAUVE' , 'G' , INFO)
      IF (IUNERR.GT.0) WRITE(IUNERR,*)
     +        '<I> <FIN> FERMETURE DE LA BASE "GLOBALE" EFFECTUEE.'
      IF (IUNRES.GT.0) WRITE(IUNRES,*)
     +        '<I> <FIN> FERMETURE DE LA BASE "GLOBALE" EFFECTUEE.'

      CALL JELIBF( 'DETRUIT' , 'V' , INFO)
C
C     --- RETASSAGE EFFECTIF ----
      IF(OUINON .EQ. 'OUI') THEN
         CALL JXCOPY('G','GLOBALE','V','VOLATILE',NBEXT)
         IF (IUNERR.GT.0) WRITE(IUNERR,'(A,I2,A)')
     +   ' <I> <FIN> RETASSAGE DE LA BASE "GLOBALE" EFFECTUEE,', NBEXT,
     +   ' FICHIER(S) UTILISE(S).'
         IF (IUNRES.GT.0) WRITE(IUNRES,'(A,I2,A)')
     +   ' <I> <FIN> RETASSAGE DE LA BASE "GLOBALE" EFFECTUEE,', NBEXT,
     +   ' FICHIER(S) UTILISE(S).'
      ENDIF
C
C     --- IMPRESSION DES STATISTIQUES ( AVANT CLOTURE DE JEVEUX ) ---
      IF ( IER .EQ. 0 ) THEN
         IF (IUNERR.GT.0) WRITE(IUNERR,*)
     +        '<I> <FIN> ARRET NORMAL DANS "FIN" PAR APPEL A "JEFINI".'
         IF (IUNRES.GT.0) WRITE(IUNRES,*)
     +        '<I> <FIN> ARRET NORMAL DANS "FIN" PAR APPEL A "JEFINI".'
      ELSE
         IF(IUNERR.GT.0) WRITE(IUNERR,*)
     +        '<I>   ARRET DANS "FIN", DES ERREURS AYANT ETE DETECTEES'
         IF(IUNRES.GT.0) WRITE(IUNRES,*)
     +        '<I>   ARRET DANS "FIN", DES ERREURS AYANT ETE DETECTEES'
      ENDIF
C
C     --- LA CLOTURE DE JEVEUX ---
C
      CALL JEFINI ( 'NORMAL' )
C
 1000 FORMAT(/,1X,'======>')
C
 9999 CONTINUE
      CALL JEDEMA()
      END
