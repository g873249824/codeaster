      SUBROUTINE IB0MAI()
      IMPLICIT NONE
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF SUPERVIS  DATE 09/01/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     MAIN D'ANALYSE DE LA COMMANDE DE DEMARRAGE
C     ------------------------------------------------------------------
C     UTILISATION DU COMMON POUR L'AFFICHAGE
      INTEGER          LFIC,MFIC
      COMMON /FENVJE/  LFIC,MFIC
C
      CHARACTER*8  NOMF
      INTEGER      UNMEGA, IDEBUG, INTDBG, LOIS
      INTEGER      MXDYN, IBID, ISMAEM
      REAL*8       VDY, VALR(3), RMXDYN
      INTEGER      LOISEM, ISDBGJ,MEMJVX,MJVXMO
C
      IBID = 0
C     --- MEMOIRE POUR LE GESTIONNAIRE D'OBJET ---
      UNMEGA = 1 024 * 1 024
C     RESTRICTION POUR UNE TAILLE MEMOIRE JEVEUX EXACTE
      LOIS = LOISEM()
C --- UNITES LOGIQUES
      CALL IBIMPR()
C
      VALR(1) = 0.D0
      VALR(2) = 0.D0
C
C     --- OUVERTURE DE GESTIONNAIRE D'OBJET ---
      INTDBG = -1
      IF (ISDBGJ(INTDBG) .EQ. 1) THEN
         IDEBUG = 1
      ELSE
         IDEBUG = 0
      ENDIF
      VDY = -1.0D0
C
C     BLOC A REMPLACER QUAND ASTK SERA MODIFIE POUR
C     PASSER LES VALEURS EN MO PAR :
C     MXDYN =  MAX(0, MJVXMO (VDY) * UNMEGA - IMEMO*LOIS)
C
      IF ( MJVXMO (VDY) . EQ. 0 ) THEN
        MXDYN =  MAX(0, MEMJVX (VDY) ) * LOIS
      ELSE
        MXDYN =  MAX(0, MJVXMO (VDY) )
      ENDIF
      RMXDYN = MXDYN * 1.D0 * UNMEGA
      IF ( RMXDYN .GT. ISMAEM() ) THEN
        VALR(1) = RMXDYN
        VALR(2) = ISMAEM()
        CALL U2MESR('F', 'JEVEUX_1', 2, VALR)
      ENDIF

      MXDYN = MXDYN * UNMEGA
C
      VALR(1) = MXDYN * 1.0D0 / UNMEGA
C
      CALL JEDEBU(4,MXDYN/LOIS,IDEBUG)
C
C     --- ALLOCATION D'UNE BASE DE DONNEES TEMPORAIRE VOLATILE---
      NOMF = 'VOLATILE'
      CALL JEINIF( 'DEBUT','DETRUIT',NOMF,'V', 250 , 100, 1 )
C --- IMPRESSION DE L'ENTETE
      CALL ENTETE()
      VALR(2) = MFIC/(1024*1024.0D0)
      CALL U2MESR('I', 'SUPERVIS2_22', 2, VALR)
C
      IF (IDEBUG .EQ. 1) THEN
         CALL U2MESS('I','SUPERVIS_12')
      ENDIF
C --- VERSION SURCHARGEE OU NON ?
      CALL SURCHG(IBID)
      END
