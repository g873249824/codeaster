      SUBROUTINE POMASS(NOMTE,E,XNU,RHO,KANL,MLV)
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'jeveux.h'
      CHARACTER*(*) NOMTE
      REAL*8 MLV(*)
C TOLE CRP_6
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     CALCULE LA MATRICE DE MASSE DES ELEMENTS DE POUTRE

C IN  NOMTE : NOM DU TYPE ELEMENT
C             'MECA_POU_D_E'  'MECA_POU_D_T'  'MECA_POU_C_T'
C     ------------------------------------------------------------------

      REAL*8 G
      CHARACTER*8  NOMAIL
      CHARACTER*16 CH16
      INTEGER IADZI,IAZK24
C     ------------------------------------------------------------------

      ZERO = 0.D0
      UN = 1.D0
      DEUX = 2.D0
      G = E/ (DEUX* (UN+XNU))

C     --- RECUPERATION DES CARACTERISTIQUES GENERALES DES SECTIONS ---

      CALL JEVECH('PCAGNPO','L',LSECT)
      LSECT = LSECT - 1
      ITYPE = NINT(ZR(LSECT+23))

C     --- SECTION INITIALE ---
      A = ZR(LSECT+1)
      XIY = ZR(LSECT+2)
      XIZ = ZR(LSECT+3)
      ALFAY = ZR(LSECT+4)
      ALFAZ = ZR(LSECT+5)
C     EY    = -ZR(LSECT+ 6)
C     EZ    = -ZR(LSECT+ 7)

C     --- SECTION FINALE ---
      LSECT2 = LSECT + 11
      A2 = ZR(LSECT2+1)
      XIY2 = ZR(LSECT2+2)
      XIZ2 = ZR(LSECT2+3)
      ALFAY2 = ZR(LSECT2+4)
      ALFAZ2 = ZR(LSECT2+5)
      EY = - (ZR(LSECT+6)+ZR(LSECT2+6))/DEUX
      EZ = - (ZR(LSECT+7)+ZR(LSECT2+7))/DEUX

C     --- RECUPERATION DES COORDONNEES DES NOEUDS ---
      CALL JEVECH('PGEOMER','L',LX)
      LX = LX - 1
      XL = SQRT((ZR(LX+4)-ZR(LX+1))**2+ (ZR(LX+5)-ZR(LX+2))**2+
     &     (ZR(LX+6)-ZR(LX+3))**2)
      IF (XL.EQ.ZERO) THEN
        CALL TECAEL(IADZI,IAZK24)
        NOMAIL = ZK24(IAZK24-1+3)(1:8)
        CALL U2MESK('F','ELEMENTS2_43',1,NOMAIL)
      END IF

      IF (NOMTE.EQ.'MECA_POU_D_E') THEN
C        --- POUTRE DROITE D'EULER A 6 DDL ---
        ISTRUC = 1
        ALFAY = ZERO
        ALFAZ = ZERO
        ALFAY2 = ZERO
        ALFAZ2 = ZERO
      ELSE IF (NOMTE.EQ.'MECA_POU_D_T') THEN
C        --- POUTRE DROITE DE TIMOSKENKO A 6 DDL ---
        ISTRUC = 1
      ELSE IF (NOMTE.EQ.'MECA_POU_C_T') THEN
C        --- POUTRE COURBE DE TIMOSKENKO A 6 DDL ---
        ISTRUC = 1
        CALL JEVECH('PCAARPO','L',LRCOU)
        RAD = ZR(LRCOU)
        XFL = ZR(LRCOU+2)
        XFLY = XFL
        XFLZ = XFL
        IF (XFL.EQ.ZERO) THEN
          XFLY = ZR(LRCOU+4)
          XFLZ = ZR(LRCOU+6)
        END IF
        ANGS2 = ASIN(XL/ (DEUX*RAD))
        ANG = ANGS2*DEUX
        XL = RAD*ANG
        X2IY = XIY
        X2IZ = XIZ
        XIY = XIY/XFLY
        XIZ = XIZ/XFLZ
        XIY2 = XIY2/XFLY
        XIZ2 = XIZ2/XFLZ
      ELSE
        CH16 = NOMTE
        CALL U2MESK('F','ELEMENTS2_42',1,CH16)
      END IF

C     --- CALCUL DE LA MATRICE DE MASSE LOCALE

      IF (ITYPE.LT.10) THEN
C        --- POUTRE DROITE SECTION CONSTANTE OU VARIABLE (1 OU 2)
        CALL PTMA01(KANL,ITYPE,MLV,ISTRUC,RHO,E,A,A2,XL,XIY,XIY2,XIZ,
     &              XIZ2,G,ALFAY,ALFAY2,ALFAZ,ALFAZ2,EY,EZ)

      ELSE IF (ITYPE.EQ.10) THEN
C        --- POUTRE COURBE SECTION CONSTANTE ---
        CALL PTMA10(MLV,RHO,A,XL,X2IY,X2IZ)
      END IF

      END
