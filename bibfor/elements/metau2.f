      SUBROUTINE METAU2(OPTION,NOMTE,IRET)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 03/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*16 NOMTE,OPTION
      INTEGER      IRET

C     BUT: CALCUL DES VECTEURS ELEMENTAIRES EN MECANIQUE
C          ELEMENTS ISOPARAMETRIQUES 3D METALLURGIQUES

C          OPTION : 'CHAR_MECA_TEMP_Z  '

C.......................................................................
C  IN  OPTION K16 : NOM DE L OPTION (CHAR_MECA_TEMP_Z)
C  IN  NOMTE  K16 : NOM DU TYPE D ELEMENT
C  OUT IRET   I   : =1 PRESENCE DE METALLURGIE
C                   =0 PAS DE METALLURGIE

C-----------------------------------------------------------------------
      INTEGER IRET2 ,MATER ,NBRES ,NDIM ,NNOS 
      REAL*8 RBID ,ZALPHA 
C-----------------------------------------------------------------------
      PARAMETER (NBRES=6)
      CHARACTER*8 NOMRES(NBRES),ACIER(4),ZIRC(2)
      INTEGER ICODRE(NBRES)
      REAL*8   VALRES(NBRES),EPSTHE(2)
      REAL*8   COEF1,COEF2,EPSTH,PHASPG(7)
      REAL*8   DFDX(27),DFDY(27),DFDZ(27),TPG,COEF,POIDS
      INTEGER  IPOIDS,IVF,IDFDE,IGEOM,IMATE,NZ,IRE1,IRE2,IRET1
      INTEGER  JGANO,NNO,KP,NPG1,I,L,IVECTU
      LOGICAL  LACIER

      DATA ACIER /'PFERRITE','PPERLITE','PBAINITE','PMARTENS'/
      DATA ZIRC /'ALPHPUR','ALPHBETA'/


      IRET=1
      LACIER=.FALSE.

      CALL RCVARC(' ',ACIER(1),'+','RIGI',1,1,RBID,IRE1)
      IF (IRE1.EQ.1) THEN
        CALL RCVARC(' ',ZIRC(1),'+','RIGI',1,1,RBID,IRE2)
        IF (IRE2.EQ.1)  THEN
          IRET=0
          GOTO 9999
        ELSE
          NZ=2
        ENDIF
      ELSE
          NZ=4
          LACIER=.TRUE.
      ENDIF

      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG1,IPOIDS,IVF,IDFDE,JGANO)

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)

      MATER = ZI(IMATE)

      NOMRES(1) = 'E'
      NOMRES(2) = 'NU'
      NOMRES(3) = 'F_ALPHA'
      NOMRES(4) = 'C_ALPHA'
      NOMRES(5) = 'PHASE_REFE'
      NOMRES(6) = 'EPSF_EPSC_TREF'


      CALL JEVECH('PVECTUR','E',IVECTU)

      DO 40 KP = 1,NPG1
        CALL DFDM3D ( NNO, KP, IPOIDS, IDFDE,
     &                ZR(IGEOM), DFDX, DFDY, DFDZ, POIDS )

        DO 50 L = 1,NZ
          IF (LACIER) THEN
            CALL RCVARC(' ',ACIER(L),'+','RIGI',KP,1,
     &            PHASPG(L),IRE1)
          ELSE
            CALL RCVARC(' ',ZIRC(L),'+','RIGI',KP,1,
     &            PHASPG(L),IRE1)
          ENDIF
   50   CONTINUE

        CALL VERIFT('RIGI',KP,1,'+',MATER,'ELAS_META',
     &       2,EPSTHE(1),IRET1)
        CALL RCVARC(' ','TEMP','+','RIGI',KP,1,TPG,IRET2)
        CALL RCVALB('RIGI',1,1,'+',MATER,' ','ELAS_META',
     &               1,'TEMP',TPG,6,NOMRES,VALRES,
     &              ICODRE,1)
        COEF = VALRES(1)/ (1.D0-2.D0*VALRES(2))
        ZALPHA=0.D0
        DO 25 I=1,NZ
          ZALPHA=ZALPHA+PHASPG(I)
25      CONTINUE

        COEF1 = (1.D0-ZALPHA)* (EPSTHE(1)- (1-VALRES(5))*VALRES(6))
        COEF2 = ZALPHA* (EPSTHE(2)+VALRES(5)*VALRES(6))
        EPSTH = COEF1 + COEF2
        POIDS = POIDS*COEF*EPSTH

        DO 30 I = 1,NNO
          ZR(IVECTU+3*I-3) = ZR(IVECTU+3*I-3) + POIDS*DFDX(I)
          ZR(IVECTU+3*I-2) = ZR(IVECTU+3*I-2) + POIDS*DFDY(I)
          ZR(IVECTU+3*I-1) = ZR(IVECTU+3*I-1) + POIDS*DFDZ(I)
   30   CONTINUE
   40 CONTINUE


9999  CONTINUE
      END
