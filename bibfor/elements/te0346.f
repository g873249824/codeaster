      SUBROUTINE TE0346(OPTION,NOMTE)
      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 27/08/2007   AUTEUR SALMONA L.SALMONA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C    - FONCTION REALISEE:  CALCUL DES OPTIONS NON-LINEAIRES MECANIQUES
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  RAPH_MECA ET FULL_MECA
C                                        OU RIGI_MECA_TANG
C                      NOMTE        -->  MECA_POU_D_TG
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      REAL*8 U(14),DU(14),FL(14),PGL(3,3), KLV(105)
      REAL*8 ALFA1,BETA1,GAMMA1,XD(3),XUG(6),ANG1(3),UTG(14),TET1,TET2
      REAL*8 HOEL(7*7),HOTA(7*7),D1B(7*14),WORK(14*7),RG0(14*14)
      REAL*8  ALFA, BETA, EY, EZ, GAMMA, XL, XL2 ,DDOT
      LOGICAL VECTEU,MATRIC,REACTU
      INTEGER NNO,NC,I,JCRET,IRETM,IRETP,NPG
      INTEGER IGEOM,IMATE,ICONTM,ISECT,IORIEN,ICOMPO,IVARIM,IINSTP
      INTEGER ICARCR,IDEPLM,IDEPLP,IINSTM,IVECTU,ICONTP,IVARIP,IMAT
      CHARACTER*4   FAMI
C
      NNO = 2
      NC  = 7
C
C     -- BOOLEENS PRATIQUES :
C
      MATRIC = OPTION .EQ. 'FULL_MECA' .OR. OPTION .EQ. 'RIGI_MECA_TANG'
      VECTEU = OPTION .EQ. 'FULL_MECA' .OR. OPTION .EQ. 'RAPH_MECA'
C
C     -- RECUPERATION DES PARAMETRES "IN"/"OUT":
C
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)
      CALL JEVECH('PCONTMR','L',ICONTM)
      CALL JEVECH('PCAGNPO','L',ISECT)
      CALL JEVECH('PCAORIE','L',IORIEN)
      CALL JEVECH('PCOMPOR','L',ICOMPO)
      CALL JEVECH('PVARIMR','L',IVARIM)
      CALL JEVECH('PINSTMR','L',IINSTM)
      CALL JEVECH('PINSTPR','L',IINSTP)
      CALL JEVECH('PDEPLMR','L',IDEPLM)
      CALL JEVECH('PCARCRI','L',ICARCR)

C ---- LA PRESENCE DU CHAMP DE DEPLACEMENT A L INSTANT T+
C ---- DEVRAIT ETRE CONDITIONNE  PAR L OPTION (AVEC RIGI_MECA_TANG
C ---- CA N A PAS DE SENS).
C ---- CEPENDANT CE CHAMP EST INITIALISE A 0 PAR LA ROUTINE NMMATR.
      CALL JEVECH('PDEPLPR','L',IDEPLP)
      IF (VECTEU) THEN
        CALL JEVECH('PVECTUR','E',IVECTU)
        CALL JEVECH('PCONTPR','E',ICONTP)
        CALL JEVECH('PVARIPR','E',IVARIP)
      END IF
      IF ( MATRIC ) CALL JEVECH('PMATUUR','E',IMAT)
C
      IF ( ZK16(ICOMPO+3) .EQ. 'COMP_ELAS' ) THEN
         CALL U2MESS('F','ELEMENTS2_90')
      ENDIF
      NPG = 3
      FAMI = 'RIGI'
C
C     GEOMETRIE EVENTUELLEMENT  REACTUALISEE :
C
      DO 111 I = 1,14
        UTG(I) = ZR(IDEPLM-1+I) + ZR(IDEPLP-1+I)
  111 CONTINUE
      REACTU =  ZK16(ICOMPO+2)(6:10) .EQ. '_REAC'
      IF ( REACTU ) THEN
C
        CALL U2MESS('A','ELEMENTS3_78')
C
        DO 512 I = 1,3
          XUG(I) = UTG(I) + ZR(IGEOM-1+I)
          XUG(I+3) = UTG(I+7) + ZR(IGEOM-1+I+3)
  512   CONTINUE
        CALL VDIFF(3,XUG(4),XUG(1),XD)
        XL2=DDOT(3,XD,1,XD,1)
        XL = SQRT(XL2)
        TET1=DDOT(3,UTG(4),1,XD,1)
        TET2=DDOT(3,UTG(11),1,XD,1)
        TET1 = TET1/XL
        TET2 = TET2/XL
        CALL ANGVX(XD,ALFA1,BETA1)
        GAMMA = ZR(IORIEN+2)
        GAMMA1 = GAMMA + (TET1+TET2)/2.D0
        ANG1(1) = ALFA1
        ANG1(2) = BETA1
        ANG1(3) = GAMMA1
        CALL MATROT ( ANG1 , PGL )
      ELSE
        CALL VDIFF(3,ZR(IGEOM-1+4),ZR(IGEOM),XD)
        XL2=DDOT(3,XD,1,XD,1)
        XL = SQRT(XL2)
        ALFA = ZR(IORIEN+0)
        BETA = ZR(IORIEN+1)
        GAMMA = ZR(IORIEN+2)
        ANG1(1) = ALFA
        ANG1(2) = BETA
        ANG1(3) = GAMMA
        CALL MATROT ( ANG1 , PGL )
      END IF
C
C     PASSAGE DES DEPLACEMENTS DANS LE REPERE LOCAL:
C
      CALL UTPVGL ( NNO, NC, PGL, ZR(IDEPLP), DU )
      CALL UTPVGL ( NNO, NC, PGL, ZR(IDEPLM),  U )
C
C     -- PASSAGE DE G (CENTRE DE GRAVITE) A C (CENTRE DE TORSION)
C
      EY = -ZR(ISECT-1+6)
      EZ = -ZR(ISECT-1+7)
      DO 217 I = 1,2
        U(7* (I-1)+2) = U(7* (I-1)+2) - EZ*U(7* (I-1)+4)
        U(7* (I-1)+3) = U(7* (I-1)+3) + EY*U(7* (I-1)+4)
        DU(7* (I-1)+2) = DU(7* (I-1)+2) - EZ*DU(7* (I-1)+4)
        DU(7* (I-1)+3) = DU(7* (I-1)+3) + EY*DU(7* (I-1)+4)
  217 CONTINUE
C
      CALL NMVMPO(FAMI,NPG,OPTION,NOMTE,NC,XL,ZI(IMATE),ZR(ISECT),
     &            ZR(ICARCR),ZK16(ICOMPO),U,DU,ZR(ICONTM),
     &            ZR(IVARIM),
     &               HOEL,HOTA,D1B,WORK,RG0,
     &            ZR(IVARIP),ZR(ICONTP),FL,KLV)
C
C     ON REND LE FL DANS LE REPERE GLOBAL :
C
      IF (VECTEU) THEN
        DO 216 I = 1,2
          FL(7*(I-1)+4)=FL(7*(I-1)+4)-EZ*FL(7*(I-1)+2)+EY*FL(7*(I-1)+3)
  216   CONTINUE
C
        CALL UTPVLG ( NNO, NC, PGL, FL, ZR(IVECTU) )
      END IF
C
C     ON REND LA MATRICE TANGENTE :
C
      IF ( MATRIC ) THEN
        CALL POUEX7 ( KLV, EY, EZ )
        CALL UTPSLG ( NNO, NC, PGL, KLV, ZR(IMAT) )
      ENDIF
C
9999  CONTINUE
      IF ( OPTION(1:9).EQ.'FULL_MECA'  .OR.
     &     OPTION(1:9).EQ.'RAPH_MECA'   ) THEN
         CALL JEVECH('PCODRET','E',JCRET)
         ZI(JCRET) = 0
      ENDIF
C
      END
