      SUBROUTINE TE0346(OPTION,NOMTE)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*16 OPTION,NOMTE
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 05/03/2013   AUTEUR CHEIGNON E.CHEIGNON 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C    - FONCTION REALISEE:  CALCUL DES OPTIONS NON-LINEAIRES MECANIQUES
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  RAPH_MECA ET FULL_MECA
C                                        OU RIGI_MECA_TANG
C                      NOMTE        -->  MECA_POU_D_TG
C
      REAL*8   U(14),DU(14),FL(14),PGL(3,3),KLV(105)
      REAL*8   XD(3)
      REAL*8   HOEL(7*7),HOTA(7*7),D1B(7*14),WORK(14*7),RG0(14*14)
      REAL*8   EY, EZ, GAMMA, XL, XL2 ,DDOT
      REAL*8   B(14),RGEOM(105),ANGP(3)
      REAL*8   A,XIY,XIZ,IYR2,IZR2
      LOGICAL  VECTEU,MATRIC,REACTU
      INTEGER  NNO,NC,I,J,JCRET,NPG
      INTEGER  IGEOM,IMATE,ICONTM,ISECT,IORIEN,ICOMPO,IINSTP
      INTEGER  ICARCR,IDEPLM,IDEPLP,IINSTM,IVECTU,ICONTP,IMAT
      INTEGER  ISTRXM,ISTRXP,LDEP
      CHARACTER*4   FAMI
      CHARACTER*24 VALK(2)
C
      NNO = 2
      NC  = 7
C
C     -- BOOLEENS PRATIQUES :
C
      MATRIC = OPTION .EQ. 'FULL_MECA' .OR. OPTION .EQ. 'RIGI_MECA_TANG'
      VECTEU = OPTION .EQ. 'FULL_MECA' .OR. OPTION .EQ. 'RAPH_MECA'
C
C     -- RECUPERATION DES PARAMETRES "IN"/"OUT":
C
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)
      CALL JEVECH('PCONTMR','L',ICONTM)
      CALL JEVECH('PCAGNPO','L',ISECT)
      CALL JEVECH('PCAORIE','L',IORIEN)
      CALL JEVECH('PCOMPOR','L',ICOMPO)
      CALL JEVECH('PINSTMR','L',IINSTM)
      CALL JEVECH('PINSTPR','L',IINSTP)
      CALL JEVECH('PDEPLMR','L',IDEPLM)
      CALL JEVECH('PCARCRI','L',ICARCR)

C     SEULEMENT EN COMP_INCR
      IF ( ZK16(ICOMPO+3) .EQ. 'COMP_ELAS' ) THEN
         CALL U2MESS('F','ELEMENTS2_90')
      ENDIF

      IF (ZK16(ICOMPO+2).NE.'PETIT'.AND.
     &    ZK16(ICOMPO+2).NE.'GROT_GDEP')THEN
        VALK(1) = ZK16(ICOMPO+2)
        VALK(2) = NOMTE
        CALL U2MESK('F','ELEMENTS3_40',2,VALK)
      ENDIF

      NPG = 3
      FAMI = 'RIGI'

C ---- LA PRESENCE DU CHAMP DE DEPLACEMENT A L INSTANT T+
C ---- DEVRAIT ETRE CONDITIONNE  PAR L OPTION (AVEC RIGI_MECA_TANG
C ---- CA N A PAS DE SENS).
C ---- CEPENDANT CE CHAMP EST INITIALISE A 0 PAR LA ROUTINE NMMATR.
      CALL JEVECH('PDEPLPR','L',IDEPLP)
      IF (VECTEU) THEN
         CALL JEVECH('PVECTUR','E',IVECTU)
         CALL JEVECH('PCONTPR','E',ICONTP)
      END IF
      IF ( MATRIC ) CALL JEVECH('PMATUUR','E',IMAT)
C
C
C     GEOMETRIE EVENTUELLEMENT  REACTUALISEE :
C
      REACTU =  ZK16(ICOMPO+2) .EQ. 'GROT_GDEP'
      IF ( REACTU ) THEN
C        RECUPERATION DU 3EME ANGLE NAUTIQUE AU TEMPS T-
         CALL JEVECH('PSTRXMR','L',ISTRXM)
         GAMMA = ZR(ISTRXM+3-1)

C        CALCUL DE PGL,XL ET ANGP
         CALL POREA1(NNO,NC,ZR(IDEPLM),ZR(IDEPLP),ZR(IGEOM),GAMMA,
     &               VECTEU,PGL,XL,ANGP)

C        SAUVEGARDE DES ANGLES NAUTIQUES
         IF (VECTEU)THEN
            CALL JEVECH('PSTRXPR','E',ISTRXP)
            ZR(ISTRXP+1-1) = ANGP(1)
            ZR(ISTRXP+2-1) = ANGP(2)
            ZR(ISTRXP+3-1) = ANGP(3)
         ENDIF

      ELSE
         CALL VDIFF(3,ZR(IGEOM-1+4),ZR(IGEOM),XD)
         XL2=DDOT(3,XD,1,XD,1)
         XL = SQRT(XL2)
         CALL MATROT ( ZR(IORIEN) , PGL )
      END IF
C
C     PASSAGE DES DEPLACEMENTS DANS LE REPERE LOCAL:
C
      CALL UTPVGL ( NNO, NC, PGL, ZR(IDEPLP), DU )
      CALL UTPVGL ( NNO, NC, PGL, ZR(IDEPLM),  U )
C
C     -- PASSAGE DE G (CENTRE DE GRAVITE) A C (CENTRE DE TORSION)
C
      EY = -ZR(ISECT-1+6)
      EZ = -ZR(ISECT-1+7)
      DO 217 I = 1,2
         J=7*(I-1)
          U(J+2) =  U(J+2) - EZ* U(J+4)
          U(J+3) =  U(J+3) + EY* U(J+4)
         DU(J+2) = DU(J+2) - EZ*DU(J+4)
         DU(J+3) = DU(J+3) + EY*DU(J+4)
217   CONTINUE
C
         CALL NMVMPO(FAMI, NPG, OPTION, NOMTE, NC,
     &            XL, ZI(IMATE), ZR(ISECT), ZR(ICARCR), ZK16(ICOMPO),
     &            U, DU, ZR(ICONTM), HOEL,
     &            HOTA, D1B,  WORK, RG0,
     &            ZR(ICONTP), FL, KLV)
C
C     ON REND LE FL DANS LE REPERE GLOBAL :
C
      IF (VECTEU) THEN
         FL( 4)=FL( 4)-EZ*FL(2)+EY*FL( 3)
         FL(11)=FL(11)-EZ*FL(9)+EY*FL(10)
C
         CALL UTPVLG ( NNO, NC, PGL, FL, ZR(IVECTU) )
      END IF

      IF (MATRIC)THEN
C       CALCUL DE LA MATRICE DE RIGIDITE GEOMETRIQUE
        IF ( REACTU ) THEN
          IF (OPTION.EQ.'FULL_MECA') THEN
            LDEP = ICONTP
          ELSE
            LDEP = ICONTM
          ENDIF
          CALL JSPGNO(XL, ZR(LDEP), B)
          DO 20 I = 1, 7
            B(I) = -B(I)
20        CONTINUE
          A     =  ZR(ISECT+1)
          XIY   =  ZR(ISECT+2)
          XIZ   =  ZR(ISECT+3)
          IYR2= ZR(ISECT+10)
          IZR2= ZR(ISECT+11)
          CALL R8INIR(105,0.0D0,RGEOM,1)
          CALL PTKG20(B,A,XIZ,XIY,IYR2,IZR2,XL,EY,EZ,RGEOM)

          CALL LCSOVN(105,KLV, RGEOM, KLV)
        ENDIF
      END IF
C
C     ON REND LA MATRICE TANGENTE :
      IF ( MATRIC ) THEN
         CALL POUEX7 ( KLV, EY, EZ )
         CALL UTPSLG ( NNO, NC, PGL, KLV, ZR(IMAT) )
      ENDIF
C
      IF ( OPTION(1:9).EQ.'FULL_MECA'  .OR.
     &     OPTION(1:9).EQ.'RAPH_MECA'   ) THEN
         CALL JEVECH('PCODRET','E',JCRET)
         ZI(JCRET) = 0
      ENDIF
C
      END
