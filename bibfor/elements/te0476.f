      SUBROUTINE TE0476 ( OPTION , NOMTE )
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 04/04/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT NONE
      CHARACTER*16        OPTION , NOMTE
C .....................................................................
C    - FONCTION REALISEE:  CALCUL DES OPTIONS NON-LINEAIRES MECANIQUES
C                          ELEMENTS JOINT-3D MILIEU POREUX
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C .....................................................................
      CHARACTER*24       TRAV,CHVAL,CHCTE
      INTEGER            NNO,NPG1,I,IMATUU,NDIM,NBFPG,JVAL,IDFDY,IMATE
      INTEGER            IPOIDS,IVF,IDFDX,IGEOM,IINSTM,IINSTP,IDEPLM
      INTEGER            ITRAV,JIN,IDEPLP,ICOMPO,ICARCR,IPESA,ICONTM
      INTEGER            ITREF,IVECTU,ICONTP,LI,JCRET
      CHARACTER*8        ELREFE
      INTEGER            NBPG(10)
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX --------------------
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX --------------------

C - FONCTIONS DE FORMES, POINTS DE GAUSS ET VECTEUR DE TRAVAIL
      CALL ELREF1(ELREFE)

      CHCTE = '&INEL.'//ELREFE//'.CARACTE'
      CALL JEVETE(CHCTE,'L',JIN)
      NDIM = ZI(JIN+1-1)
      NNO = ZI(JIN+2-1)
      NBFPG = ZI(JIN+3-1)
      DO 111 I = 1,NBFPG
         NBPG(I) = ZI(JIN+3-1+I)
  111 CONTINUE
      NPG1 = NBPG(1)
C
      CHVAL = '&INEL.'//ELREFE//'.FFORMES'
      CALL JEVETE(CHVAL,'L',JVAL)
C
      IPOIDS = JVAL + (NDIM+1)*NNO*NNO
      IVF    = IPOIDS + NPG1
      IDFDX  = IVF    + NPG1 * NNO
C

      TRAV = '&INEL.'//ELREFE//'.TRAVAIL'
      CALL JEVETE(TRAV,'L',ITRAV)

C - PARAMETRES EN ENTREE
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)
      CALL JEVECH('PINSTMR','L',IINSTM)
      CALL JEVECH('PINSTPR','L',IINSTP)
      CALL JEVECH('PDEPLMR','L',IDEPLM)
      CALL JEVECH('PDEPLPR','L',IDEPLP)
      CALL JEVECH('PCOMPOR','L',ICOMPO)
      CALL JEVECH('PCARCRI','L',ICARCR)
      IF (OPTION(11:14) .EQ. 'THMG') THEN
        CALL JEVECH('PPESANR','L',IPESA)
        ICONTM = 1
        ITREF = 1
       ELSE
        CALL JEVECH('PCONTMR','L',ICONTM)
        CALL JEVECH('PTEREF' ,'L',ITREF)
        IPESA = 1
      ENDIF
C
C - PARAMETRES EN SORTIE
      IF( OPTION(1:16) .EQ. 'RIGI_MECA_TANG'.OR.
     &    OPTION(1:16) .EQ. 'RIGI_MECA_THMG'.OR.
     &    OPTION(1:9)  .EQ. 'FULL_MECA'         ) THEN
        CALL JEVECH('PMATUUR','E',IMATUU)
      ELSE
         IMATUU = 1
      ENDIF
C
      IF( OPTION(1:9) .EQ. 'RAPH_MECA'.OR.
     &    OPTION(1:14) .EQ. 'CHAR_MECA_THMG'.OR.
     &    OPTION(1:9) .EQ. 'FULL_MECA'    ) THEN
        CALL JEVECH('PVECTUR','E',IVECTU)
      ELSE
        IVECTU = 1
      ENDIF
      IF( OPTION(1:9) .EQ. 'RAPH_MECA'.OR.
     &    OPTION(1:9) .EQ. 'FULL_MECA'    ) THEN
        CALL JEVECH('PCONTPR','E',ICONTP)
      ELSE
         ICONTP = 1
      ENDIF
C
      IF (ZK16(ICOMPO+3)(1:9) .EQ. 'COMP_ELAS') THEN
C
C -MECANIQUE DES SOLS
C
C
        IF (OPTION(1:14) .EQ. 'RIGI_MECA_TANG') THEN
C
C        OPTION RIGI_MECA_TANG :         ARGUMENTS EN T-
          CALL SOSU3D(NNO, NPG1, ZR(IPOIDS), ZR(IVF), ZR(IDFDX),
     &          ZR(IGEOM), NOMTE, OPTION,
     &          ZI(IMATE),ZK16(ICOMPO),ZR(ICARCR),
     &          ZR(ITREF), ZR(IDEPLM),
     &          ZR(ITRAV),ZR(ITRAV+5*NNO*NNO),ZR(ITRAV+10*NNO*NNO),
     &          ZR(ICONTM), ZR(IMATUU), ZR(IVECTU),
     &          ZR(IDEPLM),ZR(IPESA),ZR(IINSTM), ZR(IINSTP))
        ELSE
C
C        OPTION FULL_MECA OU RAPH_MECA (ET THMG  : ARGUMENTS EN T+
C
          DO 10 LI=1,2*NNO
            ZR(IDEPLP+LI-1)=ZR(IDEPLM+LI-1)+ZR(IDEPLP+LI-1)
 10        CONTINUE
          CALL SOSU3D(NNO, NPG1, ZR(IPOIDS), ZR(IVF), ZR(IDFDX),
     &          ZR(IGEOM), NOMTE, OPTION,
     &          ZI(IMATE),ZK16(ICOMPO),ZR(ICARCR),
     &          ZR(ITREF), ZR(IDEPLP),
     &          ZR(ITRAV),ZR(ITRAV+5*NNO*NNO),ZR(ITRAV+10*NNO*NNO),
     &          ZR(ICONTP), ZR(IMATUU), ZR(IVECTU),
     &          ZR(IDEPLM),ZR(IPESA),ZR(IINSTM), ZR(IINSTP))


        ENDIF
      ELSE
      CALL UTMESS('F','TE0476_1','LOI TH AUTRE QUE ELAS NON PREVUE')
      END IF
      IF ( OPTION(1:9).EQ.'FULL_MECA'  .OR.
     +     OPTION(1:9).EQ.'RAPH_MECA'  ) THEN
         CALL JEVECH ( 'PCODRET', 'E', JCRET )
         ZI(JCRET) = 0
      ENDIF
      END
