      SUBROUTINE TE0476(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 17/11/2011   AUTEUR MACOCCO K.MACOCCO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================

      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE
C ......................................................................
C    - FONCTION REALISEE:  CALCULS DE SENSIBILITE
C                          ELEMENT COQUE_3D
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------


      CHARACTER*24 BLAN24
      PARAMETER ( BLAN24 = '                        ' )
      INTEGER LGPG,JTAB(7),IRET
      INTEGER IGEOM,IMATE,IMATSE
      INTEGER ICONTM,IVARIM,JNBSPI
      INTEGER IDEPLM,IDEPLP,ICOMPO,ICACOQ,ICAC3D
      INTEGER IVECTU,ICONTP,IVARIP
      INTEGER ICONSM,IVARSM,IPSENS,IDEPSM,IDEPSP
      INTEGER ICONSP,IVARSP,ICPARS,ICARCR,ITEMPS

C -- PARAMETRES EN ENTREE

      IF (OPTION.EQ.'MECA_SENS_MATE'.OR.OPTION.EQ.'MECA_SENS_CHAR'
     &.OR.OPTION.EQ.'MECA_SENS_EPAI' 
     &.OR.OPTION(1:14).EQ.'MECA_SENS_RAPH') THEN
        CALL JEVECH('PGEOMER','L',IGEOM)
        CALL JEVECH('PMATERC','L',IMATE)
        CALL JEVECH('PCOMPOR','L',ICOMPO)
        CALL JEVECH('PCACOQU','L',ICACOQ)
        CALL JEVECH('PNBSP_I','L',JNBSPI)
        CALL JEVECH('PDEPLMR','L',IDEPLM)
        CALL JEVECH('PDEPLPR','L',IDEPLP)
        CALL JEVECH('PCONTMS','L',ICONSM)
        CALL JEVECH('PVARIMS','L',IVARSM)
        CALL JEVECH('PCONTMR','L',ICONTM)
        CALL JEVECH('PVARIMR','L',IVARIM)
        CALL JEVECH('PARSENS','L',IPSENS)
        CALL JEVECH('PVARIPR','L',IVARIP)
        CALL JEVECH('PCONTPR','L',ICONTP)
        IF (ZK24(IPSENS).NE.BLAN24) THEN
          CALL JEVECH('PMATSEN','L',IMATSE)
        ELSE
          IMATSE = IMATE
        ENDIF
        CALL TECACH('OON','PVARIMR',7,JTAB,IRET)
        LGPG = MAX(JTAB(6),1)*JTAB(7)
        IF (OPTION(1:14).EQ.'MECA_SENS_RAPH') THEN
          CALL JEVECH('PDEPLMS','L',IDEPSM)
          CALL JEVECH('PDEPLPS','L',IDEPSP)
          CALL JEVECH('PCOPARS','L',ICPARS)
        ELSEIF (OPTION.EQ.'MECA_SENS_EPAI') THEN
          CALL JEVECH('PCARCRI','L',ICARCR)
          CALL JEVECH('PTEMPSR','L',ITEMPS)
        ENDIF
      ELSE
        CALL U2MESK('F','ALGORITH7_61',1,OPTION)
      ENDIF
C
C -- PARAMETRES EN SORTIE

      IF(OPTION.EQ.'MECA_SENS_MATE'.OR.OPTION.EQ.'MECA_SENS_CHAR'
     &  .OR.(OPTION.EQ.'MECA_SENS_EPAI')) THEN
        CALL JEVECH('PCACO3D','L',ICAC3D)
        CALL JEVECH('PVECTUR','E',IVECTU)
        CALL JEVECH('PCONTPS','E',ICONSP)
      END IF

      IF (OPTION(1:14).EQ.'MECA_SENS_RAPH') THEN
        CALL JEVECH('PCACO3D','L',ICAC3D)
        CALL JEVECH('PVARIPS','E',IVARSP)
        CALL JEVECH('PCONTPS','E',ICONSP)
      END IF

C -- HYPER-ELASTICITE

      IF (ZK16(ICOMPO+3) (1:9).EQ.'COMP_ELAS') THEN
        CALL U2MESK('F','SENSIBILITE_35', 1 ,ZK16(ICOMPO+3))

      ELSE

C -- HYPO-ELASTICITE

        IF (ZK16(ICOMPO+2) (6:10).EQ.'_REAC') THEN
          CALL U2MESK('F','SENSIBILITE_35', 1 ,ZK16(ICOMPO+2))
        END IF

        IF (ZK16(ICOMPO+2) (1:5).EQ.'PETIT') THEN
C
      IF (OPTION.EQ.'MECA_SENS_MATE'.OR.OPTION.EQ.'MECA_SENS_CHAR'
     &.OR.OPTION.EQ.'MECA_SENS_RAPH') THEN
          CALL COQSNL(NOMTE,OPTION,ZR(IGEOM),ZI(IMATE),ZI(IMATSE),
     &                ZK16(ICOMPO),ZR(ICACOQ),ZR(ICAC3D),ZI(JNBSPI),
     &                LGPG,ZR(IDEPLM),ZR(IDEPLP),ZR(ICONSM),ZR(IVARSM),
     &                ZR(ICONTM),ZR(IVARIM),ZK24(IPSENS),ZR(ICPARS),
     &                ZR(ICONTP),ZR(IVARIP),ZR(IDEPSM),ZR(IDEPSP),
     &                ZR(IVECTU),ZR(ICONSP),ZR(IVARSP))
      ELSE IF (OPTION.EQ.'MECA_SENS_EPAI') THEN
          CALL COQSEP(NOMTE,OPTION,ZR(IGEOM),ZI(IMATE),ZI(IMATSE),
     &                ZR(ICARCR),ZR(ITEMPS),
     &                ZK16(ICOMPO),ZR(ICACOQ),ZR(ICAC3D),ZI(JNBSPI),
     &                LGPG,ZR(IDEPLM),ZR(IDEPLP),ZR(ICONSM),ZR(IVARSM),
     &                ZR(ICONTM),ZR(IVARIM),ZK24(IPSENS),ZR(ICPARS),
     &                ZR(ICONTP),ZR(IVARIP),ZR(IDEPSM),ZR(IDEPSP),
     &                ZR(IVECTU),ZR(ICONSP),ZR(IVARSP))
      ELSE IF (OPTION.EQ.'MECA_SENS_RAPHEP') THEN
          CALL U2MESS('F','SENSIBILITE_33')
      ENDIF
C -- GRANDES DEFORMATIONS : FORMULATION SIMO - MIEHE

        ELSE IF (ZK16(ICOMPO+2)(1:10).EQ.'SIMO_MIEHE') THEN
          CALL U2MESK('F','SENSIBILITE_35', 1 ,ZK16(ICOMPO+2))

C -- GRANDES ROTATIONS ET PETITES DEFORMATIONS
        ELSE IF (ZK16(ICOMPO+2) .EQ.'GROT_GDEP') THEN
          CALL U2MESK('F','SENSIBILITE_35', 1 ,ZK16(ICOMPO+2))

        ELSE
          CALL U2MESK('F','ELEMENTS3_16',1,ZK16(ICOMPO+2))
        END IF

      END IF

      END
