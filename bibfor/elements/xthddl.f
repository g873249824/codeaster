      SUBROUTINE XTHDDL(NFH,NDDLNO,NNO,STANO,OPTION,NOMTE,MAT,VECT)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 26/03/2013   AUTEUR CUVILLIE M.CUVILLIEZ 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE CUVILLIEZ
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER      NFH,NDDLNO,NNO,STANO(*)
      CHARACTER*16 OPTION,NOMTE
      REAL*8       MAT(*),VECT(*)
C
C     BUT: THERMIQUE + ELEMENTS X-FEM LINEAIRES, SUPPRIMER LES DDL "EN
C          TROP" (ATTENTION STOCKAGE SYMETRIQUE POUR LA MATRICE "MAT")
C          ROUTINE EQUIVALENTE EN MECA -> XTEDLL
C
C IN       NFH    : NOMBRE DE FONCTIONS HEAVYSIDE
C IN       NDDLNO : NOMBRE DE DDL PAR NOEUD
C IN       NNO    : NOMBRE DE NOEUDS
C IN       STANO  : STATUT DES NOEUDS
C IN       OPTION : OPTION DE CALCUL DU TE
C IN       NOMTE  : NOM DU TYPE ELEMENT
C
C IN/OUT   MAT    : MATRICE DE RIGIDITE OU DE MASSE
C IN/OUT   VECT   : VECTEUR SECOND MEMBRE
C
C-----------------------------------------------------------------------
C---------------- DECLARATION DES VARIABLES LOCALES  -------------------

       INTEGER      IER,ISTATU,INO,K,I,J,IELIM,IN,DDLMAX
       INTEGER      IFH,NDDL
C      AU PLUS 8*3=24 DDL (MAX ATTEINT POUR L'HEXA8 XHT)
       PARAMETER    (DDLMAX=24)
       INTEGER      POSDDL(DDLMAX)
       CHARACTER*8  TYENEL
       LOGICAL      LELIM,LMULTC
       REAL*8       R8MAEM,DMAX,DMIN,CODIA
C
C-------------------------------------------------------------

      CALL JEMARQ()
C
C     TYPE D'ENRICHISSEMENT DE L'ELEMENT ET TYPE D'ELIMINATION
C
      CALL TEATTR (NOMTE,'S','XFEM',TYENEL,IER)
      IF (TYENEL(1:2).EQ.'XH' ) IELIM=1
      IF (TYENEL(1:2).EQ.'XT' ) IELIM=2
      IF (TYENEL(1:3).EQ.'XHT') IELIM=3
C
C     REMPLISSAGE DU VECTEUR POS : POSITION DES DDLS A SUPPRIMER
C
      NDDL = NDDLNO*NNO
      CALL ASSERT(NDDL.LE.DDLMAX)
      DO 99 INO=1,DDLMAX
           POSDDL(INO)=0
  99  CONTINUE
C
C     VRAI SI ON ELIMINE LES DDLS D'AU MOINS UN NOEUD
      LELIM=.FALSE.
C
      DO 100 INO = 1,NNO
C
        CALL INDENT(INO,NDDLNO,0,NNO,IN)
C
        IF (IELIM.EQ.1) THEN
C         1) CAS DES MAILLES 'ROND'
C         -------------------------
C         STATUT DES NOEUDS ENRICHIS
          ISTATU = STANO(INO)
          CALL ASSERT(ISTATU.LE.1)
          IF (ISTATU.EQ.0) THEN
C           ON SUPPRIME LES DDL H
            POSDDL(IN+1+1)=1
            LELIM=.TRUE.
          ENDIF
C
        ELSEIF (IELIM.EQ.2) THEN
C         2) CAS DES MAILLES 'CARRÉ'
C         --------------------------
C         STATUT DES NOEUDS ENRICHIS
          ISTATU = STANO(INO)
          CALL ASSERT(ISTATU.LE.2 .AND. ISTATU.NE.1)
          IF (ISTATU.EQ.0) THEN
C           ON SUPPRIME LES DDL E
            POSDDL(IN+1+NFH+1)=1
            LELIM=.TRUE.
          ENDIF
C
        ELSEIF (IELIM.EQ.3) THEN
C         3) CAS DES MAILLES 'ROND-CARRÉ'
C         ------------------------------
C         STATUT DES NOEUDS ENRICHIS
          ISTATU = STANO(INO)
          CALL ASSERT(ISTATU.LE.3)
          IF (ISTATU.EQ.2) THEN
C           ON SUPPRIME LES DDL H
            POSDDL(IN+1+1)=1
            LELIM=.TRUE.
          ELSE IF (ISTATU.EQ.1) THEN
C           ON SUPPRIME LES DDL E
            POSDDL(IN+1+NFH+1)=1
            LELIM=.TRUE.
          ELSE IF (ISTATU.EQ.0) THEN
C           ON SUPPRIME LES DDL H ET E
            POSDDL(IN+1+1)=1
            POSDDL(IN+1+NFH+1)=1
            LELIM=.TRUE.
          ENDIF
C
        ENDIF
C
 100  CONTINUE
C
      IF (LELIM) THEN
C
C     POUR LES OPTIONS CONCERNANT DES MATRICES :
C       CALCUL DU COEFFICIENT DIAGONAL POUR
C       L'ELIMINATION DES DDLS HEAVISIDE
        IF (     OPTION(1:9 ).EQ.'RIGI_THER' 
     &      .OR. OPTION(1:16).EQ.'RIGI_THER_PARO_F'
     &      .OR. OPTION(1:16).EQ.'RIGI_THER_PARO_R'
     &      .OR. OPTION(1:9 ).EQ.'MASS_THER') THEN
          DMIN=R8MAEM()
          DMAX=-R8MAEM()
          DO 110 I = 1,NDDL
            CODIA=MAT((I-1)*I/2+I)
            IF (CODIA.GT.DMAX) THEN
              DMAX=CODIA
            ELSE IF (CODIA.LT.DMIN) THEN
              DMIN=CODIA
            ENDIF
 110      CONTINUE
          CODIA=(DMAX+DMIN)/2.0D0
          IF (CODIA.EQ.0) CODIA = 1
        ENDIF
C
        DO 200 I = 1,NDDL
          IF (POSDDL(I).EQ.0) GOTO 200
C         POUR LES OPTIONS CONCERNANT DES MATRICES :
C           MISE A ZERO DES TERMES HORS DIAGONAUX (I,J)
C           ET MISE A UN DES TERMES DIAGONAUX (I,I)
C           (ATTENTION AU STOCKAGE SYMETRIQUE)
          IF (     OPTION(1:9 ).EQ.'RIGI_THER' 
     &        .OR. OPTION(1:16).EQ.'RIGI_THER_PARO_F'
     &        .OR. OPTION(1:16).EQ.'RIGI_THER_PARO_R'
     &        .OR. OPTION(1:9 ).EQ.'MASS_THER') THEN

            DO 210 J = 1,NDDL
              IF (J.LT.I)  MAT((I-1)*I/2+J) = 0.D0
              IF (J.EQ.I)  MAT((I-1)*I/2+J) = CODIA
              IF (J.GT.I)  MAT((J-1)*J/2+I) = 0.D0
 210        CONTINUE
          ENDIF
C         POUR LES OPTIONS CONCERNANT DES VECTEURS :
C           MISE A ZERO DES TERMES I
          IF (    OPTION(1:14).EQ.'CHAR_THER_EVOL'
     &        .OR.OPTION(1:16).EQ.'CHAR_THER_PARO_F'
     &        .OR.OPTION(1:16).EQ.'CHAR_THER_PARO_R')
     &      VECT(I) = 0.D0
 200    CONTINUE
C
      ENDIF
C
      CALL JEDEMA()
      END
