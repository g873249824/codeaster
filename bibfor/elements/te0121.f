      SUBROUTINE TE0121(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 10/04/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================

      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE
C ......................................................................
C    - FONCTION REALISEE: CALCUL DES OPTIONS NON-LINEAIRES MECANIQUES
C                         EN 3D POUR ELEMENTS NON-LOCAUX A GRAD. DE DEF.
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................

      CHARACTER*8 TYPMOD(2),NOMAIL
      CHARACTER*24 CARAC1,FF1,TRAV1
      CHARACTER*24 CARAC2,FF2,TRAV2
      CHARACTER*24 TRAV

      INTEGER NNO,NNOB,NPG,I,IMATUU,ITRAV,LGPG,LGPG1,LGPG2
      INTEGER ICARAC,IFF,IPOIDS,IVF,IDFDE,IDFDK,IGEOM,IMATE
      INTEGER ICARA1,IFF1,IFF2,ICARA2  
      INTEGER IVF1,IPOIDB
      INTEGER IVFB,IDFDEB,IDFDKB
      INTEGER IDFDN,IDFDNB
      INTEGER ITREF,ICONTM,IVARIM,ITEMPM,ITEMPP,IPHASM,IPHASP
      INTEGER IINSTM,IINSTP,IDPLGM,IDDPLG,ICOMPO,ICARCR
      INTEGER IVECTU,ICONTP,IVARIP,LI,IDEFAM,IDEFAP
      INTEGER IHYDRM,IHYDRP,ISECHM,ISECHP,IVARIX
      INTEGER NDDL,KK,NI,MJ,JTAB(7),IADZI,IAZK24,NZ,JCRET,CODRET
      INTEGER NDIM
      LOGICAL DEFANE

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      CHARACTER*8    ALIAS1,ALIAS2



      TYPMOD(2) = 'GRADEPSI'
      
      
C - FONCTIONS DE FORMES ET POINTS DE GAUSS

      IF (NOMTE(6:9).EQ.'HEXA') THEN
        ALIAS1 = 'HEXI20  '
        ALIAS2 = 'HEXI8   '
      ELSE IF ( NOMTE(6:10).EQ.'TETRA') THEN
        ALIAS1 = 'TETRI10 '
        ALIAS2 = 'TETRI4  '
      ELSE IF( NOMTE(6:10).EQ.'PENTA') THEN
        ALIAS1 = 'PENTI15 '
        ALIAS2 = 'PENTI6  '
      ENDIF

     
      CARAC1 = '&INEL.'//ALIAS1//'.CARACTE'
      FF1 = '&INEL.'//ALIAS1//'.FFORMES'
      CARAC2 = '&INEL.'//ALIAS2//'.CARACTE'
      FF2 = '&INEL.'//ALIAS2//'.FFORMES'
 
      TRAV = '&INEL.'//ALIAS1//'.TRAVAIL'
 
      CALL JEVETE(CARAC1,'L',ICARA1)
      NDIM = ZI(ICARA1)
      NNO = ZI(ICARA1+1)
      NPG = ZI(ICARA1+3)

      CALL JEVETE(FF1,'L',IFF1)
      IPOIDS = IFF1 + (NDIM+1)*NNO*NNO
      IVF = IPOIDS + NPG
      IDFDE = IVF + NPG*NNO
      IDFDN = IDFDE + 1
      IDFDK = IDFDN + 1
 
 
      CALL JEVETE(CARAC2,'L',ICARA2)
      NNOB = ZI(ICARA2+1)
      
 
      CALL JEVETE(FF2,'L',IFF2)
      IPOIDB = IFF2 + (NDIM+1)*NNOB*NNOB
      IVFB = IPOIDB + NPG
      IDFDEB = IVFB + NPG*NNOB
      IDFDNB = IDFDEB + 1
      IDFDKB = IDFDNB + 1

      CALL JEVETE(TRAV,'L',ITRAV)
 
       
C - PARAMETRES EN ENTREE

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)
      CALL JEVECH('PCONTMR','L',ICONTM)
      CALL JEVECH('PVARIMR','L',IVARIM)
      CALL JEVECH('PDEPLMR','L',IDPLGM)
      CALL JEVECH('PDEPLPR','L',IDDPLG)
      CALL JEVECH('PCOMPOR','L',ICOMPO)
      CALL JEVECH('PCARCRI','L',ICARCR)



C - ON VERIFIE QUE PVARIMR ET PVARIPR ONT LE MEME NOMBRE DE V.I. :

      CALL TECACH(.TRUE.,.TRUE.,'PVARIMR',7,JTAB)
      LGPG1 = MAX(JTAB(6),1)*JTAB(7)

      IF ((OPTION.EQ.'RAPH_MECA') .OR. (OPTION.EQ.'FULL_MECA')) THEN
        CALL TECACH(.TRUE.,.TRUE.,'PVARIPR',7,JTAB)
        LGPG2 = MAX(JTAB(6),1)*JTAB(7)

        IF (LGPG1.NE.LGPG2) THEN
          CALL TECAEL(IADZI,IAZK24)
          NOMAIL = ZK24(IAZK24-1+3) (1:8)
          CALL UTDEBM('A','TE0097','VARIABLES INTERNES '//
     &                'EN NOMBRE DIFFERENT AUX INSTANTS "+" ET "-".')
          CALL UTIMPK('S',' POUR LA MAILLE ',1,NOMAIL)
          CALL UTIMPI('S',' INSTANT "-": ',1,LGPG1)
          CALL UTIMPI('S',' INSTANT "+": ',1,LGPG2)
          CALL UTFINM
        END IF
      END IF

      LGPG = LGPG1


C - VARIABLES DE COMMANDE

      CALL JEVECH('PTEREF','L',ITREF)
      CALL JEVECH('PTEMPMR','L',ITEMPM)
      CALL JEVECH('PTEMPPR','L',ITEMPP)
      CALL JEVECH('PINSTMR','L',IINSTM)
      CALL JEVECH('PINSTPR','L',IINSTP)
      CALL TECACH(.TRUE.,.FALSE.,'PDEFAMR',1,IDEFAM)
      CALL TECACH(.TRUE.,.FALSE.,'PDEFAPR',1,IDEFAP)
      DEFANE = IDEFAM .NE. 0
      CALL TECACH(.FALSE.,.FALSE.,'PPHASMR',1,IPHASM)
      CALL TECACH(.FALSE.,.FALSE.,'PPHASPR',1,IPHASP)
      IF (IPHASP.NE.0) THEN
        CALL TECACH(.TRUE.,.TRUE.,'PPHASPR',7,JTAB)
        NZ = JTAB(6)
      END IF

      CALL JEVECH('PHYDRMR','L',IHYDRM)
      CALL JEVECH('PHYDRPR','L',IHYDRP)
      CALL JEVECH('PSECHMR','L',ISECHM)
      CALL JEVECH('PSECHPR','L',ISECHP)


C PARAMETRES EN SORTIE

      IF (OPTION(1:14).EQ.'RIGI_MECA_TANG' .OR.
     &    OPTION(1:14).EQ.'RIGI_MECA_ELAS' .OR.
     &    OPTION(1:9).EQ.'FULL_MECA') THEN
        CALL JEVECH('PMATUNS','E',IMATUU)
      END IF

      IF (OPTION(1:9).EQ.'RAPH_MECA' .OR.
     &    OPTION(1:9).EQ.'FULL_MECA') THEN
        CALL JEVECH('PVECTUR','E',IVECTU)
        CALL JEVECH('PCONTPR','E',ICONTP)
        CALL JEVECH('PVARIPR','E',IVARIP)

C      ESTIMATION VARIABLES INTERNES A L'ITERATION PRECEDENTE
        CALL JEVECH('PVARIMP','L',IVARIX)
        CALL R8COPY(NPG*LGPG,ZR(IVARIX),1,ZR(IVARIP),1)
      END IF



C - HYPO-ELASTICITE


        IF (ZK16(ICOMPO+2) (1:5).EQ.'PETIT') THEN

          CALL NMPL3G(NNO,NNOB,NPG,ZR(IPOIDS),ZR(IVF),ZR(IVFB),
     &                ZR(IDFDE),ZR(IDFDEB),ZR(IDFDN),ZR(IDFDNB),
     &                ZR(IDFDK),ZR(IDFDKB),
     &                ZR(IGEOM),TYPMOD,NDIM,OPTION,ZI(IMATE),
     &                ZK16(ICOMPO),
     &                LGPG,ZR(ICARCR),ZR(IINSTM),ZR(IINSTP),ZR(ITEMPM),
     &                ZR(ITEMPP),ZR(IHYDRM),ZR(IHYDRP),ZR(ISECHM),
     &                ZR(ISECHP),NZ,ZR(IPHASM),ZR(IPHASP),ZR(ITREF),
     &                ZR(IDPLGM),ZR(IDDPLG),ZR(IDEFAM),ZR(IDEFAP),
     &                DEFANE,ZR(ICONTM),ZR(IVARIM),ZR(ITRAV),
     &                ZR(ITRAV+3*NNO+3*NNOB),ZR(ITRAV+3*NNO),
     &                ZR(ICONTP),ZR(IVARIP),
     &                ZR(IMATUU),ZR(IVECTU),CODRET)

      ELSE
          CALL UTMESS('F','TE0121','COMPORTEMENT:'//ZK16(ICOMPO+2)//
     &                'NON IMPLANTE')
        END IF

      IF (OPTION(1:9).EQ.'FULL_MECA' .OR.
     &    OPTION(1:9).EQ.'RAPH_MECA') THEN
        CALL JEVECH('PCODRET','E',JCRET)
        ZI(JCRET) = CODRET
      END IF
      END
