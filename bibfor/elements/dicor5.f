      SUBROUTINE DICOR5 (K0,SIM,P1,PI,UI,TI,
     &                   DXU1,DXU2,DRYU1,DRYU2,NU1,NU2,
     &                   MU1,MU2,C1,DBAR2,UU,TT,DUR,DRYR,
     &                   DNSDU,DMSDT,DNSDT,DNSDU2,DMSDT2,DNSDT2,
     &                   SI,VARIP2,VARIP3)
C ----------------------------------------------------------------------
      IMPLICIT NONE
      REAL*8 K0(78),SIM(12),P1,PI,UI,TI,DXU1,DXU2,DRYU1,DRYU2
      REAL*8 NU1,NU2,MU1,MU2,C1,DBAR2,UU,TT,DUR,DRYR
      REAL*8 DNSDU,DMSDT,DNSDT,DNSDU2,DMSDT2,DNSDT2
      REAL*8 SI(12),VARIP2,VARIP3
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 26/04/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C
C     UTILITAIRE POUR LE COMPORTEMENT CORNIERE.
C
C ----------------------------------------------------------------------
C
C IN  : K0     : COEFFICIENTS DE RAIDEUR TANGENTE
C       SIM    : EFFORTS GENERALISES PRECEDENTS
C       P1     : VARIABLE INTERNE COURANTE MECANISME 1
C       PI     :
C       UI     :
C       TI     :
C       DXU$   : DEPLACEMENT ULTIME POUR LE MECANISME $ (1 OU 2)
C       DRYU$  : ROTATION ULTIME POUR LE MECANISME $
C       NU$    : EFFORT ULTIME POUR LE MECANISME $
C       MU$    : MOMENT ULTIME POUR LE MECANISME $
C       C1     : PARAMETRE DE NON-LINEARITE DU MECANISME 1
C       DBAR$  : COEFFICIENT DE LA RELATION DU MECANISME $
C       UU     :
C       TT     :
C       DUR    : INCREMENT DE DEPLACEMENT
C       DRYR   : INCREMENT DE ROTATION
C
C OUT : DNSDU  :
C       DMSDT  :
C       DNSDT  :
C       DNSDU2 :
C       DMSDT2 :
C       DNSDT2 :
C       SI     : EFFORTS GENERALISES COURANTS
C       VARIP2 : VARIABLE INTERNE ACTUALISEE
C       VARIP3 : VARIABLE INTERNE ACTUALISEE
C
C**************** DECLARATION DES VARIABLES LOCALES ********************
C
      REAL*8 G2,RG2
      REAL*8 UBR1,UBR2,TBR1,TBR2,UB1,UB2,TB1,TB2,ZNB1,ZNB2,ZMB1,ZMB2
      REAL*8 FEQ2,P2,P2B,UR2,TR2,U2,T2,FEQ1,UPI,TPI
C
C************ FIN DES DECLARATIONS DES VARIABLES LOCALES ***************
C
C ICI UI=UI-VARIM4 ET TI=TI-VARIM5
CC ON REMPLACE APRES UI PAR UU-DUR ET TI PAR TT-DRYR
      CALL U2MESS('I','ELEMENTS_25')
      IF (PI.NE.0.D0) THEN
        UBR1 = UI/DXU1/PI
        TBR1 = TI/DRYU1/PI
      ELSE
        UBR1 = (UI+DUR)/DXU1/P1
        TBR1 = (TI+DRYR)/DRYU1/P1
      ENDIF
      FEQ1 = SQRT(UBR1**2+TBR1**2)
      UBR1 = UBR1/FEQ1
      TBR1 = TBR1/FEQ1
      UB1 = UBR1*DXU1
      TB1 = TBR1*DRYU1
      UPI = UB1*PI
      TPI = TB1*PI
      ZNB1 = C1*UBR1
      ZMB1 = C1*TBR1
C
      ZNB2 = ZNB1*NU1/NU2
      ZMB2 = ZMB1*MU1/MU2
      FEQ2 = SQRT(ZNB2**2+ZMB2**2)
      P2B = FEQ2**2/(1.D0-FEQ2)/DBAR2
      UBR2 = P2B*ZNB2/FEQ2
      TBR2 = P2B*ZMB2/FEQ2
      UB2 = UBR2*DXU2
      TB2 = TBR2*DRYU2
      U2 = DUR-UB1+UB2+UPI
      T2 = DRYR-TB1+TB2+TPI
      UR2 = U2/DXU2
      TR2 = T2/DRYU2
      P2 = SQRT(UR2**2+TR2**2)
      G2 = DBAR2*P2
      RG2 = 0.5D0*(-G2+SQRT(G2**2 + 4.D0*G2))
C      RGP2 = (1.D0-RG2)**2/RG2/(2.D0-RG2)
C
      VARIP2 = P2
      VARIP3 = 2.D0
C
      SI(7) = U2*RG2*NU2/DXU2/P2
      SI(11) = T2*RG2*MU2/DRYU2/P2
      SI(1) = -SI(7)
      SI(5) = -SI(11)
C
      CALL DICOR3 (K0,DUR,DRYR,SIM,SI,DNSDU,DMSDT,DNSDT)
C
      DNSDU2 = RG2*NU2/DXU2/P2
      IF (DUR.EQ.0.D0) DNSDU2 = K0(1)
      DMSDT2 = RG2*MU2/DRYU2/P2
      IF (DRYR.EQ.0.D0) DMSDT2 = K0(15)
      DNSDT2 = 0.D0
C ----------------------------------------------------------------------
C
      END
