      SUBROUTINE TE0491(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 25/04/2006   AUTEUR CIBHHPD L.SALMONA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_20
C.......................................................................
      IMPLICIT REAL*8 (A-H,O-Z)


C     BUTS: .CALCUL DES INDICATEURS GLOBAUX
C            DE PERTE DE PROPORTIONNALITE DU CHARGEMENT.
C            POUR LES ELEMENTS ISOPARAMETRIQUES 3D
C           .CALCUL DES ENERGIES DE DEFORMATION ELASTIQUE ET TOTALE

C -----------------------------------------------------------------

C  OPTION INDIC_ENER : CALCUL DE  L'INDICATEUR GLOBAL
C  =================   ENERGETIQUE DETERMINE PAR L'EXPRESSION SUIVANTE:

C            IE = (SOMME_DOMAINE((1 - PSI(EPS)/OMEGA(EPS,VARI)).DV)/V

C        OU  .OMEGA EST LA DENSITE D'ENERGIE TOTALE
C            (I.E. OMEGA = SOMME_0->T(SIGMA:D(EPS)/DT).DTAU
C            .PSI EST LA DENSITE D'ENERGIE ELASTIQUE 'TOTALE'
C            (I.E. ASSOCIEE A LA COURBE DE TRACTION SI ON
C                  CONSIDERAIT LE MATERIAU ELASTIQUE NON-LINEAIRE)
C            .V EST LE VOLUME DU GROUPE DE MAILLES TRAITE
C -----------------------------------------------------------------

C  OPTION INDIC_SEUIL : CALCUL DE  L'INDICATEUR GLOBAL
C  ==================   DETERMINE PAR L'EXPRESSION SUIVANTE :

C   IS = (SOMME_DOMAINE(1 - ((SIG-X):EPS_PLAST)/((SIG_Y+R)*P)).DV)/V

C        OU  .SIG       EST LE TENSEUR DES CONTRAINTES
C            .X         EST LE TENSEUR DE RAPPEL
C            .EPS_PLAST EST LE TENSEUR DES DEFORMATIONS PLASTIQUES
C            .SIG_Y     EST LA LIMITE D'ELASTICITE
C            .R         EST LA FONCTION D'ECROUISSAGE
C            .P         EST LA DEFORMATION PLASTIQUE CUMULEE
C            .V         EST LE VOLUME DU GROUPE DE MAILLES TRAITE


C -----------------------------------------------------------------

C  OPTION ENER_ELAS : CALCUL DE L'ENERGIE DE DEFORMATION ELASTIQUE
C  ================   DETERMINEE PAR L'EXPRESSION SUIVANTE :

C  EN HPP
C   ENELAS =  SOMME_VOLUME((SIG_T*(1/D)*SIG).DV)

C        OU  .SIG       EST LE TENSEUR DES CONTRAINTES
C            .D         EST LE TENSEUR DE HOOKE

C  EN GRANDES DEFORMATIONS SIMO MIEHE POUR ELAS OU VMIS_ISOT
C   ENERLAS = ENERGIE LIBRE VOIR NOTE HI-74/98/006/0
C -----------------------------------------------------------------

C  OPTION ENER_TOTALE : CALCUL DE L'ENERGIE DE DEFORMATION TOTALE
C  ==================   DETERMINEE PAR L'EXPRESSION SUIVANTE :

C   ENER_TOTALE =  ENELAS + EPLAS

C          AVEC : ENELAS =  SOMME_VOLUME((SIG_T*(1/D)*SIG).DV)
C                 ENELAS EST L'ENERGIE DE DEFORMATION ELASTIQUE

C           OU  .SIG       EST LE TENSEUR DES CONTRAINTES
C               .D         EST LE TENSEUR DE HOOKE

C          ET   : EPLAS = SOMME_VOLUME((R(P))*D(P))
C                 EPLAS EST L'ENERGIE DE DEFORMATION PLASTIQUE

C           OU  .P         EST LA DEFORMATION PLASTIQUE CUMULEE
C           ET   R(P) EST CALCULE POUR LES COMPORTEMENTS SUIVANTS :
C                      .VMIS_ISOT_LINE
C                      .VMIS_ISOT_TRAC

C   REMARQUE : EN GRANDE DEFORMATION ON INTEGRE SUR LE VOLUME INITIALE

C         POUR LES AUTRES COMPORTEMENTS ON S'ARRETE EN ERREUR FATALE
C -----------------------------------------------------------------
C          ELEMENTS ISOPARAMETRIQUES 3D

C          OPTIONS : 'INDIC_ENER'
C                    'INDIC_SEUIL'
C                    'ENER_ELAS'
C                    'ENER_TOTALE'

C     ENTREES  ---> OPTION : OPTION DE CALCUL
C              ---> NOMTE  : NOM DU TYPE ELEMENT
C.......................................................................

      PARAMETER (MXCMEL=162)
      PARAMETER (NBSGM=6)
      CHARACTER*2 CODRET(5),FB2,BL2
      CHARACTER*8 MODELI
      CHARACTER*8 NOMRES(5)
      CHARACTER*16 NOMTE,OPTION,OPTIO2
      REAL*8 VALRES(5),DFDX(27),DFDY(27),DFDZ(27)
      REAL*8 EPSTH(NBSGM),SIGMA(NBSGM),EPSDV(NBSGM)
      REAL*8 EPSEL(NBSGM),EPSPLA(NBSGM),X(NBSGM)
      REAL*8 EPSIM(NBSGM),SIGMM(NBSGM),DELTA(NBSGM)
      REAL*8 EPSI(NBSGM),EPSSM(MXCMEL),EPSS(MXCMEL)
      REAL*8 REPERE(7),INSTAN,NHARM,INTEG,INTEG1
      REAL*8 EPSM(MXCMEL),INTEG2
      REAL*8 NU,K,INDIGL
      REAL*8 HYDR(27),SECH(27)
      INTEGER NBSIGM,NBPGAU,NBDIM,IHYDRE,ISECHE
      REAL*8 R8BID,F(3,3),R
      LOGICAL GRAND,AXI
      REAL*8 MU,TROISK,ALPHA,JAC,EPSBID(6),DFDBID(27*3)
      REAL*8 TAU(6),TRTAU,EQTAU,DVTAU(6)
      REAL*8 JE2,JE3,Q,D,SOL,TRBE
      INTEGER I,JTAB(7)
      REAL*8 KR(6),PDTSCA(6)


C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------

      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8  ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80

      DATA KR/1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
      DATA PDTSCA/1.D0,1.D0,1.D0,2.D0,2.D0,2.D0/

C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------

C ---- INITIALISATIONS :

      ZERO = 0.0D0
      UNDEMI = 0.5D0
      UN = 1.0D0
      DEUX = 2.0D0
      TROIS = 3.0D0
      UNTIER = 1.0D0/3.0D0
      NHARM = ZERO
      OMEGA = ZERO
      ENELAS = ZERO
      EPLAST = ZERO
      WELAS = ZERO
      WTOTAL = ZERO
      PSI = ZERO
      VOLUME = ZERO
      INDIGL = ZERO
      INSTAN = ZERO
      MODELI(1:2) = NOMTE(3:4)
C     ICI, MODELI='CA' OU 'TA'
C     CAR LES ELEMENTS 3D S'APPELLENT MECA_... OU META_...
      BL2 = '  '
      FB2 = 'F '


      DO 10 I = 1,27
        SECH(I) = ZERO
   10 CONTINUE

C ---- CARACTERISTIQUES DU TYPE D'ELEMENT :
C ---- GEOMETRIE ET INTEGRATION
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG1,IPOIDS,IVF,IDFDE,JGANO)

      AXI = .FALSE.

C ----NOMBRE DE CONTRAINTES ASSOCIE A L'ELEMENT :

      NBSIG = NBSIGM(MODELI)

C ----RECUPERATION DES COORDONNEES DES CONNECTIVITES :

      CALL JEVECH('PGEOMER','L',IGEOM)

C ----RECUPERATION DU MATERIAU :

      CALL JEVECH('PMATERC','L',IMATE)

C ----RECUPERATION  DES DONNEEES RELATIVES AU REPERE D'ORTHOTROPIE :

      CALL ORTREP(ZI(IMATE),NDIM,REPERE)

C ----RECUPERATION DES TEMPERATURES AUX NOEUDS DE L'ELEMENT :

      CALL JEVECH('PTEMPER','L',ITEMPE)

C ----RECUPERATION DE LA TEMPERATURE DE REFERENCE :

      CALL JEVECH('PTEREF','L',ITREF)

C ----RECUPERATION DE L'HYDRATATION AUX POINTS DE GAUSS DE L'ELEMENT :

      DO 20 I = 1,NPG1
        CALL RCVARC(' ','HYDR','+','RIGI',I,1,HYDR(I),IRET)
        IF (IRET.EQ.1) HYDR(I)=ZERO
   20 CONTINUE

C ---- RECUPERATION DU SECHAGE AUX NOEUDS DE L'ELEMENT :

      CALL TECACH('NNN','PSECHER',1,ISECHE,IRET)
      IF (ISECHE.NE.0) THEN
        DO 30 I = 1,NNO
          SECH(I) = ZR(ISECHE+I-1)
   30   CONTINUE
      END IF

C ---- RECUPERATION DU CHAMP DE DEPLACEMENTS AUX NOEUDS  :

      CALL JEVECH('PDEPLR','L',IDEPL)

C ---- RECUPERATION DU CHAMP DE CONTRAINTES AUX POINTS D'INTEGRATION :

      CALL JEVECH('PCONTPR','L',IDSIG)

C ---- RECUPERATION DU TYPE DE COMPORTEMENT  :

      CALL JEVECH('PCOMPOR','L',IDCOMP)

C ---- RECUPERATION DU CHAMP DE DEPLACEMENTS AUX NOEUDS  :

      IF (OPTION.EQ.'ENER_TOTALE') THEN
        CALL TECACH('NNN','PDEPLM',1,IDEPLM,IRET)
        IF (IDEPLM.NE.0) THEN
          CALL JEVECH('PDEPLM','L',IDEPMM)
        END IF
      END IF

C ON TESTE LA RECUPERATION DU CHAMP DE CONTRAINTES DU PAS PRECEDENT

      IF (OPTION.EQ.'ENER_TOTALE') THEN
        IF ((ZK16(IDCOMP) (1:9).NE.'VMIS_ISOT') .AND.
     &      (ZK16(IDCOMP) (1:4).NE.'ELAS')) THEN
          CALL TECACH('NNN','PCONTMR',1,IDCONM,IRET)
          IF (IDCONM.NE.0) THEN
            CALL JEVECH('PCONTMR','L',IDSIGM)
          END IF
        END IF
      END IF

C ON REGARDE SI ON EST EN GRANDE DEFORMATION SIMO MIEHE

      IF (ZK16(IDCOMP+2) (1:10).EQ.'SIMO_MIEHE') THEN
        GRAND = .TRUE.
      ELSE
        GRAND = .FALSE.
      END IF

C ---- RECUPERATION DU CHAMP DE VARIABLES INTERNES  :

      CALL JEVECH('PVARIPR','L',IDVARI)
      CALL TECACH('OON','PVARIPR',7,JTAB,IRET)
      NBVARI = MAX(JTAB(6),1)*JTAB(7)

C -- CALCUL DES DEFORMATIONS TOTALES DANS LE CAS DE
C -- ENERGIE TOTALE A L INSTANT COURANT ET CELUI D AVANT

      IF ((ZK16(IDCOMP) (1:9).NE.'VMIS_ISOT') .AND.
     &    (ZK16(IDCOMP) (1:4).NE.'ELAS')) THEN

        IF (OPTION.EQ.'ENER_TOTALE') THEN

C  CALCUL DE B.U

          CALL EPS1MC(MODELI,NNO,NDIM,NBSIG,NPG1,IPOIDS,IVF,IDFDE,
     &              ZR(IGEOM),ZR(IDEPL),NHARM,EPSS)

          IF (IDEPLM.NE.0) THEN
            CALL EPS1MC(MODELI,NNO,NDIM,NBSIG,NPG1,IPOIDS,IVF,IDFDE,
     &              ZR(IGEOM),ZR(IDEPMM),NHARM,EPSSM)
          END IF
        END IF

      END IF

C ---- CALCUL DES DEFORMATIONS HORS THERMIQUES CORRESPONDANTES AU
C ---- CHAMP DE DEPLACEMENT I.E. EPSM = EPST - EPSTH
C ---- OU EPST  SONT LES DEFORMATIONS TOTALES
C ----    EPST = B.U
C ---- ET EPSTH SONT LES DEFORMATIONS THERMIQUES
C ----    EPSTH = ALPHA*(T-TREF) :

      OPTIO2 = 'EPME_ELGA_DEPL'
      CALL EPSVMC(MODELI, NNO, NDIM, NBSIG, NPG1, IPOIDS,IVF,IDFDE,
     +            ZR(IGEOM), ZR(IDEPL),
     +            ZR(ITEMPE), ZR(ITREF), HYDR, SECH, R8BID, INSTAN,
     +            ZI(IMATE), REPERE, NHARM, OPTIO2, EPSM)

C                      ===========================
C                      =                         =
C                      = OPTION   "INDIC_ENER"   =
C                      = OPTION   "ENER_ELAS"    =
C                      = OPTION   "ENER_TOTALE"  =
C                      =                         =
C                      ===========================
      IF (OPTION.EQ.'INDIC_ENER' .OR. OPTION.EQ.'ENER_ELAS' .OR.
     &    OPTION.EQ.'ENER_TOTALE') THEN

C --- BOUCLE SUR LES POINTS D'INTEGRATION

        DO 120 IGAU = 1,NPG1

          OMEGA = ZERO
          PSI = ZERO

          IDECPG = NNO* (IGAU-1) - 1

C  --- TEMPERATURE AU POINT D'INTEGRATION COURANT :

          TEMPG = ZERO
          DO 40 I = 1,NNO
            TEMPG = TEMPG + ZR(IVF+I+IDECPG)*ZR(ITEMPE+I-1)
   40     CONTINUE

C --- RECUPERATION DES CARACTERISTIQUES DU MATERIAU :

          NOMRES(1) = 'E'
          NOMRES(2) = 'NU'
          NOMRES(3) = 'ALPHA'

          CALL RCVALA(ZI(IMATE),' ','ELAS',1,'TEMP',TEMPG,2,NOMRES,
     &                VALRES,CODRET,FB2)

          CALL RCVALA(ZI(IMATE),' ','ELAS',1,'TEMP',TEMPG,1,NOMRES(3),
     &                VALRES(3),CODRET(3),BL2)

          E = VALRES(1)
          NU = VALRES(2)
          IF (CODRET(3).NE.'OK') THEN
            VALRES(3) = ZERO
          END IF
          ALPHA = VALRES(3)

C --- TENSEUR DES CONTRAINTES AU POINT D'INTEGRATION COURANT :

          DO 50 I = 1,NBSIG
            SIGMA(I) = ZR(IDSIG+ (IGAU-1)*NBSIG+I-1)
   50     CONTINUE


C --- CALCUL DU JACOBIEN AU POINT D'INTEGRATION COURANT :
          CALL NMGEOM(3,NNO,AXI,GRAND,ZR(IGEOM),IGAU,
     &              IPOIDS,IVF,IDFDE,ZR(IDEPL),POIDS,DFDBID,F,EPSBID,R)


C --- CALCUL DE L'ENERGIE ELASTIQUE AU POINT D'INTEGRATION COURANT

C --- CAS EN GRANDES DEFORMATIONS SIMO_MIEHE

          IF ((ZK16(IDCOMP+2) (1:10).EQ.'SIMO_MIEHE') .AND.
     &        ((ZK16(IDCOMP) (1:9).EQ.'VMIS_ISOT').OR. (ZK16(IDCOMP) (1:
     &        9).EQ.'ELAS'))) THEN

            MU = E/ (2.D0* (1.D0+NU))
            TROISK = E/ (1.D0-2.D0*NU)

            JAC = F(1,1)* (F(2,2)*F(3,3)-F(2,3)*F(3,2)) -
     &            F(2,1)* (F(1,2)*F(3,3)-F(1,3)*F(3,2)) +
     &            F(3,1)* (F(1,2)*F(2,3)-F(1,3)*F(2,2))

C --- CALCUL DE TAU TEL QUE TAU=JAC*SIGMA

            TAU(5) = 0.D0
            TAU(6) = 0.D0

            DO 60 I = 1,NBSIG
              TAU(I) = JAC*SIGMA(I)
   60       CONTINUE

C --- CALCUL DE LA TRACE DE TAU- TAU EQUIVALENT ET TAU DEVIATORIQUE

            TRTAU = TAU(1) + TAU(2) + TAU(3)
            EQTAU = 0.D0
            DO 70 I = 1,6
              DVTAU(I) = TAU(I) - KR(I)*TRTAU/3.D0
              EQTAU = EQTAU + PDTSCA(I)* (DVTAU(I)**2.D0)
   70       CONTINUE
            EQTAU = SQRT(1.5D0*EQTAU)

C --- CALCUL DE LA TRACE DES DEFORMATIONS ELASTIQUES BE

            JE2 = (EQTAU**2.D0)/ (2.D0* (MU**2.D0))
            JE3 = DVTAU(1)* (DVTAU(2)*DVTAU(3)-DVTAU(6)*DVTAU(6)) -
     &            DVTAU(4)* (DVTAU(4)*DVTAU(3)-DVTAU(5)*DVTAU(6)) +
     &            DVTAU(5)* (DVTAU(4)*DVTAU(6)-DVTAU(5)*DVTAU(2))
            JE3 = JE3/ (MU**3.D0)
            Q = (1.D0-JE3)/2.D0
            D = (Q**2.D0) - ((JE2**3.D0)/27.D0)
            SOL = ((Q+ (D** (1.D0/2.D0)))** (1.D0/3.D0)) +
     &            ((Q- (D** (1.D0/2.D0)))** (1.D0/3.D0))

            TRBE = 3.0D0*SOL

            ENELAS = -TROISK*ALPHA* (TEMPG-ZR(ITREF))* (JAC-1.D0/JAC)/
     &               2.D0 + TROISK* (JAC*JAC/2.D0-1.D0/2.D0-LOG(JAC))/
     &               6.D0 + MU* (TRBE-3.D0)/2.D0

C --- EN HPP SI ON CONSIDERE LE MATERIAU ISOTROPE
C --- E_ELAS = 1/2*SIGMA*1/D*SIGMA :

          ELSE

            C1 = (UN+NU)/E
            C2 = NU/E

            TRSIG = SIGMA(1) + SIGMA(2) + SIGMA(3)
            ENELAS = UNDEMI* (SIGMA(1)* (C1*SIGMA(1)-C2*TRSIG)+
     &               SIGMA(2)* (C1*SIGMA(2)-C2*TRSIG)+
     &               SIGMA(3)* (C1*SIGMA(3)-C2*TRSIG)+
     &               DEUX* (SIGMA(4)*C1*SIGMA(4)+SIGMA(5)*C1*SIGMA(5)+
     &               SIGMA(6)*C1*SIGMA(6)))
          END IF

C --- TRAITEMENT DE L'OPTION ENER_ELAS :

          IF (OPTION.EQ.'ENER_ELAS') THEN

            WELAS = WELAS + ENELAS*POIDS

C  ===============================================
C  = FIN TRAITEMENT DE L'OPTION ENER_ELAS        =
C  ===============================================

            GO TO 120

          END IF


C-------------------------------------------------------
C   CACUL DU TERME OMEGA REPRESENTANT L'ENERGIE TOTALE -
C   OMEGA = SOMME_0->T(SIGMA:D(EPS)/DT).DTAU           -
C-------------------------------------------------------
C --- TRAITEMENT DU CAS DE L'ECROUISSAGE LINEAIRE ISOTROPE :

          IF (ZK16(IDCOMP).EQ.'VMIS_ISOT_LINE') THEN

C --- RECUPERATION DE LA LIMITE D'ELASTICITE SY
C --- ET DE LA PENTE DE LA COURBE DE TRACTION D_SIGM_EPSI :

            NOMRES(1) = 'D_SIGM_EPSI'
            NOMRES(2) = 'SY'

            CALL RCVALA(ZI(IMATE),' ','ECRO_LINE',1,'TEMP',TEMPG,2,
     &                 NOMRES, VALRES,CODRET,FB2)

            DSDE = VALRES(1)
            SIGY = VALRES(2)

C --- RECUPERATION DE LA DEFORMATION PLASTIQUE CUMULEE :

            P = ZR(IDVARI+ (IGAU-1)*NBVARI+1-1)

C --- PENTE DE LA COURBE DE TRACTION DANS LE DIAGRAMME 'REDRESSE' :

            RPRIM = E*DSDE/ (E-DSDE)

C --- CONTRAINTE UNIAXIALE SUR LA COURBE DE TRACTION :

            RP = SIGY + RPRIM*P

C --- TRAVAIL PLASTIQUE 'EQUIVALENT' :

            EPLAST = UNDEMI* (SIGY+RP)*P

C --- TRAITEMENT DU CAS DE L'ECROUISSAGE NON-LINEAIRE ISOTROPE :

          ELSE IF (ZK16(IDCOMP).EQ.'VMIS_ISOT_TRAC') THEN

C --- RECUPERATION DE LA COURBE DE TRACTION :

            CALL RCTRAC(ZI(IMATE),'TRACTION','SIGM',TEMPG,JPROL,JVALE,
     &                  NBVAL,E)

C --- RECUPERATION DE LA DEFORMATION PLASTIQUE CUMULEE :

            P = ZR(IDVARI+ (IGAU-1)*NBVARI+1-1)

C --- TRAVAIL PLASTIQUE 'EQUIVALENT' :

            CALL RCFONC('V','TRACTION',JPROL,JVALE,NBVAL,RBID,RBID,RBID,
     &                  P,RP,RPRIM,AIREP,RBID,RBID)

            EPLAST = AIREP
          END IF

C --- AFFECTATION A OMEGA QUI EST L'ENERGIE TOTALE
C --- DE LA CONTRIBUTION AU POINT D'INTEGRATION DE L'ENERGIE
C --- ELASTIQUE ET DE L'ENERGIE PLASTIQUE :

          OMEGA = OMEGA + ENELAS + EPLAST

C --- TRAITEMENT DE L'OPTION ENER_TOTALE :

          IF (OPTION.EQ.'ENER_TOTALE') THEN

            IF ((ZK16(IDCOMP) (1:9).NE.'VMIS_ISOT') .AND.
     &          (ZK16(IDCOMP) (1:4).NE.'ELAS')) THEN

C             TENSEUR DES CONTRAINTES AU POINT D'INTEGRATION PRECEDENT
C             ON LE CALCULE SEULEMENT DANS LE CAS DE LOI DE COMPORTEMENT
C             NI VMIS_ISOT_ NI ELAS

              IF (IDCONM.NE.0) THEN
                DO 80 I = 1,NBSIG
                  SIGMM(I) = ZR(IDSIGM+ (IGAU-1)*NBSIG+I-1)
   80           CONTINUE
              END IF

C ---         TENSEUR DES DEFORMATIONS AU POINT D'INTEGRATION COURANT
C             ON LE CALCULE SEULEMENT DANS LE CAS DE LOI DE COMPORTEMENT
C             NI VMIS_ISOT_ NI ELAS

              DO 90 I = 1,NBSIG
                EPSI(I) = EPSS(I+ (IGAU-1)*NBSIG)
   90         CONTINUE

C ---         TENSEUR DES DEFORMATIONS AU POINT D'INTEGRATION PRECEDENT
C             ON LE CALCULE SEULEMENT DANS LE CAS DE LOI DE COMPORTEMENT
C             NI VMIS_ISOT_ NI ELAS

              IF (IDEPLM.NE.0) THEN
                DO 100 I = 1,NBSIG
                  EPSIM(I) = EPSSM(I+ (IGAU-1)*NBSIG)
  100           CONTINUE
              END IF

              IF ((IDCONM.NE.0) .AND. (IDEPLM.NE.0)) THEN
                DO 110 I = 1,NBSIG
                  DELTA(I) = EPSI(I) - EPSIM(I)
  110           CONTINUE

C---             CALCUL DES TERMES A SOMMER

                INTEG1 = SIGMM(1)*DELTA(1) + SIGMM(2)*DELTA(2) +
     &                   SIGMM(3)*DELTA(3) + 2.0D0*SIGMM(4)*DELTA(4) +
     &                   2.0D0*SIGMM(5)*DELTA(5) +
     &                   2.0D0*SIGMM(6)*DELTA(6)

                INTEG2 = SIGMA(1)*DELTA(1) + SIGMA(2)*DELTA(2) +
     &                   SIGMA(3)*DELTA(3) + 2.0D0*SIGMA(4)*DELTA(4) +
     &                   2.0D0*SIGMA(5)*DELTA(5) +
     &                   2.0D0*SIGMA(6)*DELTA(6)

                INTEG = UNDEMI* (INTEG1+INTEG2)*POIDS

              ELSE

C---             CAS OU LE NUMERO D ORDRE EST UN

                INTEG = SIGMA(1)*EPSI(1) + SIGMA(2)*EPSI(2) +
     &                  SIGMA(3)*EPSI(3) + 2.0D0*SIGMA(4)*EPSI(4) +
     &                  2.0D0*SIGMA(5)*EPSI(5) + 2.0D0*SIGMA(6)*EPSI(6)

                INTEG = UNDEMI*INTEG*POIDS

              END IF

              WTOTAL = WTOTAL + INTEG

            ELSE

C-- DANS LE CAS VMIS_ISOT ON CALCULE L ENERGIE TOTALE

              WTOTAL = WTOTAL + (ENELAS+EPLAST)*POIDS

            END IF

C  ===============================================
C  = FIN TRAITEMENT DE L'OPTION ENER_TOTALE      =
C  ===============================================

            GO TO 120

          END IF

C---------------------------------------------------------
C   CACUL DU TERME PSI REPRESENTANT L'ENERGIE ELASTIQUE  -
C   NON-LINEAIRE TOTALE ASSOCIEE A LA COURBE DE TRACTION -
C---------------------------------------------------------

C --- CALCUL DE LA DILATATION VOLUMIQUE AU POINT D'INTEGRATION COURANT

          TREPSM = EPSM(1+ (IGAU-1)*NBSIG) + EPSM(2+ (IGAU-1)*NBSIG) +
     &             EPSM(3+ (IGAU-1)*NBSIG)

C --- DEVIATEUR DES DEFORMATIONS AU POINT D'INTEGRATION COURANT

          EPSDV(1) = EPSM(1+ (IGAU-1)*NBSIG) - UNTIER*TREPSM
          EPSDV(2) = EPSM(2+ (IGAU-1)*NBSIG) - UNTIER*TREPSM
          EPSDV(3) = EPSM(3+ (IGAU-1)*NBSIG) - UNTIER*TREPSM
          EPSDV(4) = EPSM(4+ (IGAU-1)*NBSIG)
          EPSDV(5) = EPSM(5+ (IGAU-1)*NBSIG)
          EPSDV(6) = EPSM(6+ (IGAU-1)*NBSIG)

C --- CALCUL DE LA DEFORMATION ELASTIQUE EQUIVALENTE AU
C --- POINT D'INTEGRATION COURANT :

          EPSEQ = SQRT(TROIS/DEUX* (EPSDV(1)*EPSDV(1)+EPSDV(2)*EPSDV(2)+
     &            EPSDV(3)*EPSDV(3)+DEUX* (EPSDV(4)*EPSDV(4)+
     &            EPSDV(5)*EPSDV(5)+EPSDV(6)*EPSDV(6))))

C --- COEFFICIENTS DU MATERIAU (CONSTANTE ELASTIQUE DE CISAILLEMENT
C --- DE LAME : MU ET  MODULE ELASTIQUE DE DILATATION : K) :

          DEUXMU = E/ (UN+NU)
          K = UNTIER*E/ (UN-DEUX*NU)

C --- CALCUL DE LA CONTRAINTE ELASTIQUE EQUIVALENTE AU
C --- POINT D'INTEGRATION COURANT :

          SIGEQ = DEUXMU*EPSEQ

C --- PARTIE SPHERIQUE DE L'ENERGIE DE DEFORMATION ELASTIQUE :

          ENELSP = UNDEMI*K*TREPSM*TREPSM

C --- TRAITEMENT DU CAS DE L'ECROUISSAGE LINEAIRE ISOTROPE :

          IF (ZK16(IDCOMP).EQ.'VMIS_ISOT_LINE') THEN

C --- RECUPERATION DE LA LIMITE D'ELASTICITE SY
C --- ET DE LA PENTE DE LA COURBE DE TRACTION D_SIGM_EPSI :

            NOMRES(1) = 'D_SIGM_EPSI'
            NOMRES(2) = 'SY'

            CALL RCVALA(ZI(IMATE),' ','ECRO_LINE',1,'TEMP',TEMPG,2,
     &                 NOMRES, VALRES,CODRET,FB2)

            DSDE = VALRES(1)
            SIGY = VALRES(2)

C --- PENTE DE LA COURBE DE TRACTION DANS LE DIAGRAMME 'REDRESSE'

            RPRIM = E*DSDE/ (E-DSDE)

C --- DEFORMATION NON-LINEAIRE CUMULEE EQUIVALENTE :

            P = (SIGEQ-SIGY)/ (RPRIM+TROIS/DEUX*DEUXMU)
            IF (P.LE.R8PREM()) P = ZERO

C --- CONTRAINTE UNIAXIALE SUR LA COURBE DE TRACTION :

            RP = SIGY + RPRIM*P

C --- TRAVAIL ELASTIQUE NON-LINEAIRE 'EQUIVALENT' :

            EPLAST = UNDEMI* (SIGY+RP)*P

C --- TRAITEMENT DU CAS DE L'ECROUISSAGE NON-LINEAIRE ISOTROPE :

          ELSE IF (ZK16(IDCOMP).EQ.'VMIS_ISOT_TRAC') THEN

C --- RECUPERATION DE LA COURBE DE TRACTION :

            CALL RCTRAC(ZI(IMATE),'TRACTION','SIGM',TEMPG,JPROL,JVALE,
     &                  NBVAL,E)

C --- CALCUL DE LA LIMITE ELASTIQUE SIGY :

            CALL RCFONC('S','TRACTION',JPROL,JVALE,NBVAL,SIGY,RBID,RBID,
     &                  RBID,RBID,RBID,RBID,RBID,RBID)

C --- CALCUL DU TRAVAIL ELASTIQUE NON-LINEAIRE ET DE LA
C --- CONTRAINTE EQUIVALENTE :

            CALL RCFONC('E','TRACTION',JPROL,JVALE,NBVAL,RBID,E,NU,ZERO,
     &                  RP,RPRIM,AIREP,SIGEQ,P)

C --- TRAVAIL ELASTIQUE NON-LINEAIRE 'EQUIVALENT' :

            EPLAST = AIREP
          ELSE
            CALL UTMESS('F','TE0491','POUR L''OPTION '//
     &                '"INDIC_ENER", LES SEULES RELATIONS ADMISES SONT '
     &                  //'"VMIS_ISOT_LINE" ET "VMIS_ISOT_TRAC" .')
          END IF

C --- PARTIE DEVIATORIQUE DE L'ENERGIE DE DEFORMATION ELASTIQUE
C --- TOTALE 'EQUIVALENTE' (I.E. ASSOCIEE A LA COURBE DE
C --- TRACTION SI ON CONSIDERAIT LE MATERIAU ELASTIQUE
C --- NON-LINEAIRE :

          IF (P.LE.R8PREM()) THEN
            ENELDV = EPSEQ*EPSEQ*DEUXMU/TROIS
          ELSE
            ENELDV = RP*RP/DEUXMU/TROIS
          END IF

C --- ENERGIE DE DEFORMATION ELASTIQUE TOTALE AU POINT
C --- D'INTEGRATION COURANT :

          ENELTO = ENELSP + ENELDV + EPLAST

C --- AFFECTATION A PSI QUI EST L'ENERGIE ELASTIQUE TOTALE
C --- DE LA CONTRIBUTION AU POINT D'INTEGRATION DE CETTE ENERGIE :

          PSI = PSI + ENELTO

C --- VOLUME DE L'ELEMENT :

          VOLUME = VOLUME + POIDS

C --- INDICATEUR GLOBAL ENERGETIQUE (NON NORMALISE) :

          IF (OMEGA.GE.1D04*R8PREM()) THEN
            INDIGL = INDIGL + (UN-PSI/OMEGA)*POIDS
          END IF

  120   CONTINUE

C ----  RECUPERATION ET AFFECTATION DES GRANDEURS EN SORTIE
C ----  AVEC RESPECTIVEMENT LA VALEUR DE L'INDICATEUR GLOBAL SUR
C ----  L'ELEMENT ET LE VOLUME DE L'ELEMENT POUR L'OPTION
C ----  INDIC_ENER
C ----  AFFECTATION DE L'ENERGIE DE DEFORMATION ELASTIQUE
C ----  ET DE L'ENERGIE DE DEFORMATION TOTALE RESPECTIVEMENT
C ----  POUR LES OPTIONS ENER_ELAS ET ENER_TOTALE :

        IF (OPTION.EQ.'INDIC_ENER') THEN
          CALL JEVECH('PENERD1','E',IDENE1)
          ZR(IDENE1) = INDIGL
          CALL JEVECH('PENERD2','E',IDENE2)
          ZR(IDENE2) = VOLUME
        ELSE IF (OPTION.EQ.'ENER_ELAS') THEN
          CALL JEVECH('PENERD1','E',IDENE1)
          ZR(IDENE1) = WELAS
        ELSE IF (OPTION.EQ.'ENER_TOTALE') THEN
          CALL JEVECH('PENERD1','E',IDENE1)
          ZR(IDENE1) = WTOTAL
        END IF

C      FIN OPTION.EQ.'INDIC_ENER'.OR.OPTION.EQ.'ENER_ELAS'.OR.
C     +    OPTION.EQ.'ENER_TOTALE') THEN
C ===========================
C =                         =
C = OPTION   "INDIC_SEUIL"  =
C =                         =
C ===========================

      ELSE IF (OPTION.EQ.'INDIC_SEUIL') THEN

C ---    BOUCLE SUR LES POINTS D'INTEGRATION

        DO 170 IGAU = 1,NPG1

          IDECPG = NNO* (IGAU-1) - 1

C  --      TEMPERATURE AU POINT D'INTEGRATION COURANT :

          TEMPG = ZERO

          DO 130 I = 1,NNO
            TEMPG = TEMPG + ZR(IVF+I+IDECPG)*ZR(ITEMPE+I-1)
  130     CONTINUE

C ---      RECUPERATION DES CARACTERISTIQUES DU MATERIAU :

          NOMRES(1) = 'E'
          NOMRES(2) = 'NU'
          NOMRES(3) = 'ALPHA'

          CALL RCVALA(ZI(IMATE),' ','ELAS',1,'TEMP',TEMPG,2,NOMRES,
     &                VALRES,CODRET,FB2)

          CALL RCVALA(ZI(IMATE),' ','ELAS',1,'TEMP',TEMPG,1,NOMRES(3),
     &                VALRES(3),CODRET(3),BL2)

          E = VALRES(1)
          NU = VALRES(2)
          IF (CODRET(3).NE.'OK') THEN
            VALRES(3) = ZERO
          END IF

C ---      TENSEUR DES CONTRAINTES AU POINT D'INTEGRATION COURANT :

          DO 140 I = 1,NBSIG
            SIGMA(I) = ZR(IDSIG+ (IGAU-1)*NBSIG+I-1)
  140     CONTINUE

C ---      CALCUL DES DEFORMATIONS ELASTIQUES AU POINT
C ---      D'INTEGRATION COURANT EN CONSIDERANT LE MATERIAU ISOTROPE :
C ---       EPS_ELAS    = 1/D*SIGMA
C ---                   = ((1+NU)/E)*SIGMA-(NU/E)*TRACE(SIGMA) :

          C1 = (UN+NU)/E
          C2 = NU/E
          TRSIG = SIGMA(1) + SIGMA(2) + SIGMA(3)
          EPSEL(1) = C1*SIGMA(1) - C2*TRSIG
          EPSEL(2) = C1*SIGMA(2) - C2*TRSIG
          EPSEL(3) = C1*SIGMA(3) - C2*TRSIG
          EPSEL(4) = C1*SIGMA(4)
          EPSEL(5) = C1*SIGMA(5)
          EPSEL(6) = C1*SIGMA(6)

C ---      CALCUL DES DEFORMATIONS PLASTIQUES AU POINT
C ---      D'INTEGRATION COURANT
C ---      EPS_PLAST = EPS_TOT - EPS_ELAS - EPSTH
C ---      EPS_PLAST = EPS_HORS_THERMIQUE - EPS_ELAS :

          EPSPLA(1) = EPSM(1+ (IGAU-1)*NBSIG) - EPSEL(1)
          EPSPLA(2) = EPSM(2+ (IGAU-1)*NBSIG) - EPSEL(2)
          EPSPLA(3) = EPSM(3+ (IGAU-1)*NBSIG) - EPSEL(3)
          EPSPLA(4) = EPSM(4+ (IGAU-1)*NBSIG) - EPSEL(4)
          EPSPLA(5) = EPSM(5+ (IGAU-1)*NBSIG) - EPSEL(5)
          EPSPLA(6) = EPSM(6+ (IGAU-1)*NBSIG) - EPSEL(6)

C ---      CAS DE L'ECROUISSAGE CINEMATIQUE :
C ---      LE TENSEUR A PRENDRE EN CONSIDERATION POUR LE CALCUL
C ---      DU TRAVAIL PLASTIQUE EST SIGMA - X OU X EST LE TENSEUR
C ---      DE RAPPEL :

          IF (ZK16(IDCOMP).EQ.'VMIS_CINE_LINE') THEN
            NBSIG2 = 7
            DO 150 I = 1,NBSIG
              X(I) = ZR(IDVARI+ (IGAU-1)*NBSIG2+I-1)
  150       CONTINUE
            DO 160 I = 1,NBSIG
              SIGMA(I) = SIGMA(I) - X(I)
  160       CONTINUE
          END IF

C ---      CALCUL DU TRAVAIL PLASTIQUE AU POINT D'INTEGRATION COURANT :

          EPLAST = SIGMA(1)*EPSPLA(1) + SIGMA(2)*EPSPLA(2) +
     &             SIGMA(3)*EPSPLA(3) + DEUX*
     &             (SIGMA(4)*EPSPLA(4)+SIGMA(5)*EPSPLA(5)+
     &             SIGMA(6)*EPSPLA(6))

C ---      CALCUL DU TRAVAIL PLASTIQUE EQUIVALENT AU POINT
C ---      D'INTEGRATION COURANT :

C ---      TRAITEMENT DU CAS DE L'ECROUISSAGE LINEAIRE  :

          IF (ZK16(IDCOMP).EQ.'VMIS_ISOT_LINE' .OR.
     &        ZK16(IDCOMP).EQ.'VMIS_CINE_LINE') THEN

C ---          RECUPERATION DE LA LIMITE D'ELASTICITE SY
C ---          ET DE LA PENTE DE LA COURBE DE TRACTION D_SIGM_EPSI :

            NOMRES(1) = 'D_SIGM_EPSI'
            NOMRES(2) = 'SY'

            CALL RCVALA(ZI(IMATE),' ','ECRO_LINE',1,'TEMP',TEMPG,2,
     &                  NOMRES,VALRES,CODRET,FB2)

            DSDE = VALRES(1)
            SIGY = VALRES(2)

C ---          CALCUL DE LA DEFORMATION PLASTIQUE EQUIVALENTE :

            EPSEQ = SQRT(TROIS/DEUX* (EPSPLA(1)*EPSPLA(1)+
     &              EPSPLA(2)*EPSPLA(2)+EPSPLA(3)*EPSPLA(3)+
     &              DEUX* (EPSPLA(4)*EPSPLA(4)+EPSPLA(5)*EPSPLA(5)+
     &              EPSPLA(6)*EPSPLA(6))))

C ---          DEFORMATION PLASTIQUE CUMULEE :

C ---         (TEMPORAIRE POUR L'ECROUISSAGE CINEMATIQUE)
            IF (ZK16(IDCOMP).EQ.'VMIS_CINE_LINE') THEN
              P = EPSEQ
            ELSE IF (ZK16(IDCOMP).EQ.'VMIS_ISOT_LINE') THEN
              P = ZR(IDVARI+ (IGAU-1)*NBVARI+1-1)
            END IF

C ---          PENTE DE LA COURBE DE TRACTION DANS LE DIAGRAMME
C ---          'REDRESSE' :

            RPRIM = E*DSDE/ (E-DSDE)

C ---          CONTRAINTE UNIAXIALE SUR LA COURBE DE TRACTION :

            RP = SIGY + RPRIM*P

C ---          TRAVAIL PLASTIQUE 'EQUIVALENT' :

            EPLAEQ = RP*P

C ---      TRAITEMENT DU CAS DE L'ECROUISSAGE NON-LINEAIRE ISOTROPE :

          ELSE IF (ZK16(IDCOMP).EQ.'VMIS_ISOT_TRAC') THEN

C ---          RECUPERATION DE LA COURBE DE TRACTION :

            CALL RCTRAC(ZI(IMATE),'TRACTION','SIGM',TEMPG,JPROL,JVALE,
     &                  NBVAL,E)

C ---      RECUPERATION DE LA DEFORMATION PLASTIQUE CUMULEE :

            P = ZR(IDVARI+ (IGAU-1)*NBVARI+1-1)

C ---          TRAVAIL PLASTIQUE 'EQUIVALENT' :

            CALL RCFONC('V','TRACTION',JPROL,JVALE,NBVAL,RBID,RBID,RBID,
     &                  P,RP,RPRIM,AIREP,RBID,RBID)

            EPLAEQ = RP*P
          ELSE
            CALL UTMESS('F','TE0491','POUR L''OPTION '//
     &               '"INDIC_SEUIL", LES SEULES RELATIONS ADMISES SONT '
     &                  //'"VMIS_ISOT_LINE", "VMIS_ISOT_TRAC"  ET '//
     &                  '"VMIS_CINE_LINE" .')
          END IF

C ---      CALCUL DU JACOBIEN AU POINT D'INTEGRATION COURANT :
          CALL DFDM3D ( NNO,IGAU,IPOIDS,IDFDE,
     &                  ZR(IGEOM),DFDX,DFDY,DFDZ,POIDS)

C ---      VOLUME DE L'ELEMENT :

          VOLUME = VOLUME + POIDS

C ---      INDICATEUR GLOBAL ENERGETIQUE (NON NORMALISE) :

          IF (EPLAEQ.GE.1D04*R8PREM()) THEN
            INDIGL = INDIGL + (UN-EPLAST/EPLAEQ)*POIDS
          END IF

  170   CONTINUE

C ----   RECUPERATION ET AFFECTATION DES GRANDEURS EN SORTIE
C ----   AVEC RESPECTIVEMENT LA VALEUR DE L'INDICATEUR GLOBAL SUR
C ----   L'ELEMENT ET LE VOLUME DE L'ELEMENT :

        CALL JEVECH('PENERD1','E',IDENE1)
        ZR(IDENE1) = INDIGL
        CALL JEVECH('PENERD2','E',IDENE2)
        ZR(IDENE2) = VOLUME

      END IF

      END
