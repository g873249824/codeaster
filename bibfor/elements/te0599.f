      SUBROUTINE TE0599 ( OPTION , NOMTE )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 19/02/2008   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
      IMPLICIT NONE
C
      CHARACTER*16        OPTION , NOMTE
C
C ......................................................................
C    - CE PROGRAMME EST INSPIRE DE TE0079
C      LES MODIFICATIONS DE L'UN OU DE L'AUTRE DOIVENT ETRE SIMULTANEES
C
C    - FONCTION REALISEE:  CALCUL DES VECTEURS ELEMENTAIRES
C                          OPTION : 'CHAR_DLAG_SOUR_R  '
C
C      DIV(THETA) . SOURCE . T*
C    + THETA . GRAD(SOURCE) . T*
C
C    - ELEMENTS ISOPARAMETRIQUES 2D
C
C    - ON NE FAIT AUCUN CALCUL SUR UN ELEMENT OU LE CHAMP THETA EST NUL
C      SUR TOUS LES NOEUDS. EN EFFET, DANS CE CAS LA DIVERGENCE ET LE
C      GRADIENT DE THETA SONT NULS SUR TOUS LES POINTS DE GAUSS DE
C      L'ELEMENT. DU COUP, LA CONTRIBUTION AU SECOND MEMBRE EST NULLE.
C
C    - LA SOURCE EST CONSTANTE PAR ELEMENT, DONC LE SECOND TERME EST NUL
C
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      REAL*8             VECTT(9)
      REAL*8             R
      REAL*8             POIDS, DFDX(9), DFDY(9)
      REAL*8             R8AUX, DIVTHT, THETAR
      REAL*8             EPSI, R8PREM
      REAL*8             COORSE(18)
C
      INTEGER            IGEOM, IVECTT
      INTEGER            IPOIDS, IVF, IDFDE, JGANO, NDIM, NNOS
      INTEGER            NNO, NPG, NSE, ISE, NNOP2, C(6,9)
      INTEGER            KP, I, J, K, IDEB, IFIN
      INTEGER            ISOUR
      INTEGER            ITHETA
C
      LOGICAL THTNUL
      LOGICAL AXI
      CHARACTER*8        ELREFE
C     -----------------------------------------------------------------
C====
C 1. INITIALISATIONS ET CONTROLE DE LA NULLITE DE THETA
C====
C
      EPSI = R8PREM ()
C
      CALL ELREF1(ELREFE)
      IF (NOMTE(5:7).EQ.'QL9') ELREFE='QU4'
      IF (NOMTE(5:7).EQ.'TL6') ELREFE='TR3'
C
      CALL ELREF4(ELREFE,'MASS',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,
     &            JGANO)
C
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PVECTTH','L',ITHETA)
      CALL JEVECH('PVECTTR','E',IVECTT)
C
      CALL CONNEC ( NOMTE, NSE, NNOP2, C )
C
      DO 101 , I = 1 , NNOP2
        VECTT(I)=0.D0
  101 CONTINUE
C
      IDEB = ITHETA
      IFIN = ITHETA + 2*NNO - 1
      THTNUL = .TRUE.
      DO 102 , I = IDEB , IFIN
        IF ( ABS(ZR(I)).GT.EPSI ) THEN
          THTNUL = .FALSE.
        ENDIF
  102 CONTINUE
C
C====
C 2. CALCUL QUAND LE VECTEUR THETA N'EST PAS NUL
C====
C
      IF ( .NOT.THTNUL ) THEN
C
C 2.1. ==> FIN DES INITIALISATIONS
C
      CALL JEVECH('PSOURCR','L',ISOUR)
C
      IF ( NOMTE(3:4) .EQ. 'AX' ) THEN
        AXI = .TRUE.
      ELSE
        AXI = .FALSE.
      ENDIF
C

C BOUCLE SUR LES SOUS-ELEMENTS

      DO 100 ISE=1,NSE
C
      DO 105 I=1,NNO
        DO 105 J=1,2
          COORSE(2*(I-1)+J) = ZR(IGEOM-1+2*(C(ISE,I)-1)+J)
  105 CONTINUE

C 2.2. ==> BOUCLE SUR LES POINTS DE GAUSS
C
      DO 22 , KP = 1 , NPG
C
        K = (KP-1)*NNO
C
        CALL DFDM2D ( NNO,KP,IPOIDS,IDFDE,COORSE,DFDX,DFDY,POIDS )
C
C CALCUL DE LA DIVERGENCE DE THETA
C
        DIVTHT = 0.D0
        DO 221 , I = 1 , NNO
          DIVTHT = DIVTHT + ZR(ITHETA+2*I-2)*DFDX(I)
     >                    + ZR(ITHETA+2*I-1)*DFDY(I)
  221   CONTINUE
C
C EN 2D-AXI, CALCUL DU RAYON, MODIFICATION DU POIDS ET TERME
C COMPLEMENTAIRE SUR LA DIVERGENCE EN THETAR/R
C LES POINTS DE GAUSS ETANT TOUJOURS STRICTEMENT INTERIEURS
C A L'ELEMENT, R NE PEUT PAS ETRE NUL, DONC ON PEUT DIVISER PAR R.
C
        IF ( AXI ) THEN
          R = 0.D0
          THETAR = 0.D0
          DO 222 , I = 1 , NNO
            R      = R      + COORSE(2*(I-1)+1)*ZR(IVF+K+I-1)
            THETAR = THETAR + ZR(ITHETA+2*I-2)*ZR(IVF+K+I-1)
  222     CONTINUE
          POIDS = POIDS*R
          DIVTHT = DIVTHT + THETAR / R
        ENDIF
C
C CUMUL DE DIV(THETA)*SOURCE.T*
C
        R8AUX = DIVTHT * ZR(ISOUR+KP-1) * POIDS
CCDIR$ IVDEP
        DO 223 , I = 1 , NNO
          VECTT(I) = VECTT(I) + R8AUX * ZR(IVF+K+I-1)
  223   CONTINUE
C
   22 CONTINUE

  100 CONTINUE
C
      ENDIF
C
C====
C 3. BASCULE DANS LE VECTEUR GENERAL
C====
C
      DO 300 , I = 1 , NNOP2
        ZR(IVECTT-1+I)=VECTT(I)
  300 CONTINUE
C
      END
