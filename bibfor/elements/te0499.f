      SUBROUTINE TE0499(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 13/02/2012   AUTEUR KHAM M.KHAM 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*16 OPTION,NOMTE
C ......................................................................

C     BUT: CALCUL DES VECTEURS ELEMENTAIRES EN MECANIQUE
C          CORRESPONDANT A UN CHARGEMENT PAR ONDE PLANE
C          SUR DES FACES D'ELEMENTS ISOPARAMETRIQUES 2D

C          OPTION : 'ONDE_PLAN'

C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................

      CHARACTER*8 NOMRES(3),FAMI,POUM
      INTEGER ICODRE(3),KPG,SPT
      CHARACTER*1 TYPE
      REAL*8 POIDS,NX,NY,VALRES(3),E,NU,LAMBDA,MU,CP,CS
      REAL*8 RHO,TAUX,TAUY,NUX,NUY,SCAL
      REAL*8 SIGMA(2,2),EPSI(2,2),GRAD(2,2)
      REAL*8 VONDN(2),VONDT(2)
      REAL*8 TAONDX,TAONDY,NORX,NORY,DIRX,DIRY,CELE
      REAL*8 TRACE,NORM,JAC
      INTEGER NNO,KP,NPG,IPOIDS,IVF,IDFDE,IGEOM
      INTEGER IVECTU,K,I,MATER
      CHARACTER*8 NOMAIL

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,JGANO)

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)
      CALL JEVECH('PONDPLA','L',IONDE)
      CALL JEVECH('PONDPLR','L',IONDC)
      CALL JEVECH('PTEMPSR','L',JINST)
      CALL JEVECH('PVECTUR','E',IVECTU)
      
      IF (ZK24(IONDE)(1:7).EQ.'&FOZERO') GOTO 140

C     --- INITIALISATION DE SIGMA

      DO 20 I = 1,2
        DO 20 J = 1,2
          SIGMA(I,J) =0.D0
   20     CONTINUE

      MATER = ZI(IMATE)
      NOMRES(1) = 'E'
      NOMRES(2) = 'NU'
      NOMRES(3) = 'RHO'
      FAMI='FPG1'
      KPG=1
      SPT=1
      POUM='+'
      CALL RCVALB(FAMI,KPG,SPT,POUM,MATER,' ','ELAS',0,' ',R8B,3,
     &            NOMRES,VALRES,ICODRE,1)
     
      E = VALRES(1)
      IF (E.LT.1.D-1) GO TO 140
      NU = VALRES(2)
      RHO = VALRES(3)
      LAMBDA = E*NU/ (1.D0+NU)/ (1.D0-2.D0*NU)
      MU = E/2.D0/ (1.D0+NU)

      CP = SQRT((LAMBDA+2.D0*MU)/RHO)
      CS = SQRT(MU/RHO)

C     --- CARACTERISTIQUES DE L'ONDE PLANE

      DIRX =ZR(IONDC)
      DIRY =ZR(IONDC+1)
      TYPER=ZR(IONDC+3)
      
      IF (TYPER.EQ.0.D0) TYPE = 'P'
      IF (TYPER.EQ.1.D0) TYPE = 'S'

C     --- CALCUL DU VECTEUR DIRECTEUR UNITAIRE DE L'ONDE PLANE

      NORM = SQRT(DIRX**2.D0+DIRY**2.D0)
      DIRX = DIRX/NORM
      DIRY = DIRY/NORM

C     CALCUL DU REPERE ASSOCIE A L'ONDE
      NORX = -DIRY
      NORY = DIRX

      IF (TYPE.EQ.'P') THEN
        CELE = CP
      ELSE
        CELE = CS
      END IF

C    BOUCLE SUR LES POINTS DE GAUSS

      DO 130 KP = 1,NPG
        K = (KP-1)*NNO

C        --- CALCUL DU CHARGEMENT PAR ONDE PLANE
CKH          ON SUPPOSE QU'ON RECUPERE UNE VITESSE
      CALL FOINTE('F ',ZK24(IONDE),1,'INST',ZR(JINST),VALFON,IER)
        
        VALFON = -VALFON/CELE
C        VALFON = VALFON/CELE
        
C        CALCUL DES CONTRAINTES ASSOCIEES A L'ONDE PLANE
C        CALCUL DU GRADIENT DU DEPLACEMENT
        IF (TYPE.EQ.'P') THEN
        
          GRAD(1,1) = DIRX*VALFON*DIRX
          GRAD(1,2) = DIRY*VALFON*DIRX
          GRAD(2,1) = DIRX*VALFON*DIRY
          GRAD(2,2) = DIRY*VALFON*DIRY
          
        ELSEIF (TYPE.EQ.'S') THEN
        
          GRAD(1,1) = DIRX*VALFON*NORX
          GRAD(1,2) = DIRY*VALFON*NORX
          GRAD(2,1) = DIRX*VALFON*NORY
          GRAD(2,2) = DIRY*VALFON*NORY
          
        END IF

C        CALCUL DES DEFORMATIONS
        DO 70 INDIC1 = 1,2
          DO 70 INDIC2 = 1,2
            EPSI(INDIC1,INDIC2) = .5D0* (GRAD(INDIC1,INDIC2)+
     &                            GRAD(INDIC2,INDIC1))
   70       CONTINUE

C        CALCUL DES CONTRAINTES
        TRACE = 0.D0
        DO 90 INDIC1 = 1,2
          TRACE = TRACE + EPSI(INDIC1,INDIC1)
   90   CONTINUE
        DO 100 INDIC1 = 1,2
          DO 100 INDIC2 = 1,2
            IF (INDIC1.EQ.INDIC2) THEN
              SIGMA(INDIC1,INDIC2) = LAMBDA*TRACE +
     &                               2.D0*MU*EPSI(INDIC1,INDIC2)
            ELSE
              SIGMA(INDIC1,INDIC2) = 2.D0*MU*EPSI(INDIC1,INDIC2)
            END IF
  100       CONTINUE

        CALL VFF2DN(NDIM,NNO,KP,IPOIDS,IDFDE,ZR(IGEOM),NX,NY,POIDS)

        JAC = SQRT(NX*NX+NY*NY)

C        --- CALCUL DE LA NORMALE UNITAIRE ---

        NUX = NX/JAC
        NUY = NY/JAC

C        --- TEST DU SENS DE LA NORMALE PAR RAPPORT A LA DIRECTION
C            DE L'ONDE

        SCAL = NUX*DIRX + NUY*DIRY
        IF (SCAL.GT.0.D0) THEN
          COEDIR = 1.D0
        ELSE
          COEDIR = -1.D0
        END IF

C        --- CALCUL DE V.N ---

        VONDT(1) = 0.D0
        VONDT(2) = 0.D0

        IF (TYPE.EQ.'P') THEN
          VONDT(1) = -CELE*VALFON*DIRX
          VONDT(2) = -CELE*VALFON*DIRY
        ELSEIF (TYPE.EQ.'S') THEN
          VONDT(1) = -CELE*VALFON*NORX
          VONDT(2) = -CELE*VALFON*NORY
        END IF

        SCAL = NUX*VONDT(1) + NUY*VONDT(2)

C        --- CALCUL DE LA VITESSE NORMALE ET DE LA VITESSE TANGENCIELLE

        VONDN(1) = NUX*SCAL
        VONDN(2) = NUY*SCAL

        VONDT(1) = VONDT(1) - VONDN(1)
        VONDT(2) = VONDT(2) - VONDN(2)

C        --- CALCUL DU VECTEUR CONTRAINTE

        TAUX = -RHO* (CP*VONDN(1)+CS*VONDT(1))
        TAUY = -RHO* (CP*VONDN(2)+CS*VONDT(2))

C        --- CALCUL DU VECTEUR CONTRAINTE DU A UNE ONDE PLANE

        TAONDX = SIGMA(1,1)*NUX
        TAONDX = TAONDX + SIGMA(1,2)*NUY

        TAONDY = SIGMA(2,1)*NUX
        TAONDY = TAONDY + SIGMA(2,2)*NUY

C        --- CALCUL DU VECTEUR ELEMENTAIRE

        DO 130 I = 1,NNO
          II = 2*I-1
          ZR(IVECTU+II-1) = ZR(IVECTU+II-1) +
     &                      (TAUX+COEDIR*TAONDX)*ZR(IVF+K+I-1)*POIDS
          ZR(IVECTU+II+1-1) = ZR(IVECTU+II+1-1) +
     &                        (TAUY+COEDIR*TAONDY)*ZR(IVF+K+I-1)*POIDS
  130   CONTINUE

  140 CONTINUE

      END
