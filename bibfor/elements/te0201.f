      SUBROUTINE TE0201(OPTION,NOMTE)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 17/12/2012   AUTEUR LAVERNE J.LAVERNE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C
C
C ======================================================================

      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*16       NOMTE, OPTION

C-----------------------------------------------------------------------
C
C     BUT: CALCUL DES OPTIONS NON LINEAIRES DES ELEMENTS DE
C          FISSURE JOINT
C
C     OPTION : RAPH_MECA, FULL_MECA, RIGI_MECA_TANG, RIGI_MECA_ELAS
C
C-----------------------------------------------------------------------


      INTEGER IGEOM, IMATER, ICARCR, ICOMP, IDEPM, IDDEP,ICORET
      INTEGER ICONTM,ICONTP,IVECT,IMATR
      INTEGER KK, I, J , IVARIM ,IVARIP, JTAB(7),NPG,IRET,IINSTM,IINSTP
      INTEGER LGPG1,LGPG
      REAL*8  MAT(8,8),FINT(8),SIGMO(6,2),SIGMA(6,2)
      CHARACTER*8 TYPMOD(2)
      LOGICAL LTEATT,RESI,RIGI,MATSYM

      RESI = OPTION.EQ.'RAPH_MECA' .OR. OPTION(1:9).EQ.'FULL_MECA'
      RIGI = OPTION(1:9).EQ.'FULL_MECA' .OR. OPTION(1:9).EQ.'RIGI_MECA'

      NPG=2

      IF (LTEATT(' ','AXIS','OUI')) THEN
        TYPMOD(1) = 'AXIS'
      ELSE
        TYPMOD(1) = 'PLAN'
      END IF
      TYPMOD(2) = 'ELEMJOIN'

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATER)
      CALL JEVECH('PCARCRI','L',ICARCR)
      CALL JEVECH('PCOMPOR','L',ICOMP)
      CALL JEVECH('PDEPLMR','L',IDEPM)
      CALL JEVECH('PVARIMR','L',IVARIM)
      CALL JEVECH('PCONTMR','L',ICONTM)

C - INSTANTS
      CALL JEVECH('PINSTMR','L',IINSTM)
      CALL JEVECH('PINSTPR','L',IINSTP)

C RECUPERATION DU NOMBRE DE VARIABLES INTERNES PAR POINTS DE GAUSS :
      CALL TECACH('OON','PVARIMR',7,JTAB,IRET)
      LGPG1 = MAX(JTAB(6),1)*JTAB(7)
      LGPG = LGPG1

C POINTEURS POUR LA LECTURE DU DEPL ET L'ECRITURE DES VIP
      IF (RESI) THEN
        CALL JEVECH('PDEPLPR','L',IDDEP)
        CALL JEVECH('PVARIPR','E',IVARIP)
        CALL JEVECH('PCODRET','E',ICORET)
      ELSE
        IDDEP=1
        IVARIP=1
        ICORET=1
      ENDIF

C     CONTRAINTE -, RANGEE DANS UN TABLEAU (6,NPG)
      CALL R8INIR(6*2, 0.D0, SIGMO,1)
      SIGMO(1,1) = ZR(ICONTM)  
      SIGMO(2,1) = ZR(ICONTM+1)
      SIGMO(1,2) = ZR(ICONTM+2)
      SIGMO(2,2) = ZR(ICONTM+3)

C CALCUL DES CONTRAINTES, VIP, FORCES INTERNES ET MATR TANG ELEMENTAIRES
      CALL NMFI2D(NPG,LGPG,ZI(IMATER),OPTION,ZR(IGEOM),
     &            ZR(IDEPM),ZR(IDDEP),SIGMO,SIGMA,FINT,MAT,
     &            ZR(IVARIM),ZR(IVARIP),ZR(IINSTM),ZR(IINSTP),
     &            ZR(ICARCR),ZK16(ICOMP),TYPMOD,ZI(ICORET))

C STOCKAGE DE LA MATRICE
      IF (RIGI) THEN

        MATSYM = .TRUE.
        IF (ZK16(ICOMP)(1:15).EQ.'JOINT_MECA_RUPT') MATSYM = .FALSE.
        IF (ZK16(ICOMP)(1:15).EQ.'JOINT_MECA_FROT') MATSYM = .FALSE.

        IF (MATSYM) THEN

          CALL JEVECH('PMATUUR','E',IMATR)
          KK = 0
          DO 10 I = 1,8
            DO 15 J = 1,I
              ZR(IMATR+KK) = MAT(I,J)
              KK = KK+1
 15         CONTINUE
 10       CONTINUE

        ELSE

          CALL JEVECH('PMATUNS','E',IMATR)
          KK = 0
          DO 11 I = 1,8
            DO 16 J = 1,8
              ZR(IMATR+KK) = MAT(I,J)
              KK = KK+1
 16         CONTINUE
 11       CONTINUE

        ENDIF

      ENDIF

C STOCKAGE DE LA CONTRAINTE ET DES FORCES INTERNES
      IF (RESI) THEN

        CALL JEVECH('PCONTPR','E',ICONTP)
        CALL JEVECH('PVECTUR','E',IVECT)
        ZR(ICONTP)   = SIGMA(1,1)
        ZR(ICONTP+1) = SIGMA(2,1)
        ZR(ICONTP+2) = SIGMA(1,2)
        ZR(ICONTP+3) = SIGMA(2,2)
        CALL DCOPY(8, FINT ,1, ZR(IVECT),1)

      ENDIF

      END
