      SUBROUTINE LCGLDM (EPSM,DEPS,VIM,OPTION,SIG,VIP,DSIDEP,
     &                   LAMBDA,DEUXMU,LAMF,DEUMUF,GMT,GMC,GF,
     &                   SEUIL,ALF,ALFMC,CRIT,CODRET)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 22/10/2012   AUTEUR IDOUX L.IDOUX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE SFAYOLLE S.FAYOLLE

      IMPLICIT NONE

      INTEGER      CODRET
      REAL*8       EPSM(6), DEPS(6), VIM(*), CRIT(*), SEUIL, ALFMC
      REAL*8       LAMBDA, DEUXMU, LAMF, DEUMUF, ALF, GMT, GMC, GF
      REAL*8       SIG(6), DSIDEP(6,6), VIP(*)
      CHARACTER*16 OPTION
C ----------------------------------------------------------------------
C
C      LOI GLOBALE POUR LES PLAQUES/COQUES DKT - GLRC_DM
C
C IN:
C       LAMBDA  : PARAMETRE D ELASTICITE - MEMBRANE
C       DEUXMU  : PARAMETRE D ELASTICITE - MEMBRANE
C       LAMF    : PARAMETRE D ELASTICITE - FLEXION
C       DEUMUF  : PARAMETRE D ELASTICITE - FLEXION 
C       GMT     : PARAMETRE GAMMA POUR LA MEMBRANE EN TRACTION 
C       GMC     : PARAMETRE GAMMA POUR LA MEMBRANE EN COMPRESSION
C       GF      : PARAMETRE GAMMA POUR LA FLEXION
C       SEUIL   : INITIAL MEMBRANE
C       ALF     : PARAMETRE DE SEUIL FLEXION
C       VIM     : VARIABLES INTERNES EN T-
C       OPTION  : TOUTES
C       CRIT    : CRITERES DE CONVERGENCE LOCAUX
C              (1) = NB ITERATIONS MAXI A CONVERGENCE
C                    (ITER_INTE_MAXI == ITECREL)
C              (2) = TYPE DE JACOBIEN A T+DT
C                    (TYPE_MATR_COMP == MACOMP)
C                     0 = EN VITESSE     >SYMETRIQUE
C                     1 = EN INCREMENTAL >NON-SYMETRIQUE
C              (3) = VALEUR TOLERANCE DE CONVERGENCE
C                    (RESI_INTE_RELA == RESCREL)
C              (5) = NOMBRE D'INCREMENTS POUR LE
C                    REDECOUPAGE LOCAL DU PAS DE TEMPS
C                    (ITER_INTE_PAS  == ITEDEC)
C                    -1,0,1 = PAS DE REDECOUPAGE
C                     N = NOMBRE DE PALIERS
C              (6) = TYPE D INTEGRATION LOCAL POUR LA LOI DE 
C                    COMPORTEMENT (ALGO_INTE)
C OUT:
C       SIG     : CONTRAINTE
C       VIP     : VARIABLES INTERNES EN T+
C       DSIDEP  : MATRICE TANGENTE
C       CODRET  : CODE RETOUR DE L'INTEGRATION DE LA LDC
C                 0 => PAS DE PROBLEME
C                 1 => ABSENCE DE CONVERGENCE
C ----------------------------------------------------------------------
C
C       QM1 ET QM2 = Tm DANS R7.01.32
C       QFF        = Tf DANS R7.01.32

      LOGICAL RIGI, RESI, COUP
      LOGICAL LELAS, ELAS, ELAS1, ELAS2
      INTEGER K,KDMAX
      REAL*8  EPS(6), EMP(2), EFP(2), QFF(2)
      REAL*8  VMP(2,2), VFP(2,2)
      REAL*8  MUF, TROT, TREPS, EPS33, DE33D1, DE33D2
      REAL*8  DA1, DA2, KSI2D, DKSI1, DKSI2
      REAL*8  TR2D, TOLD, COF1(2), Q2D(2)
      REAL*8  COF2(2),DQ2D(2)

C --  OPTION ET MODELISATION
      RIGI  = (OPTION(1:4).EQ.'RIGI' .OR. OPTION(1:4).EQ.'FULL')
      RESI  = (OPTION(1:4).EQ.'RAPH' .OR. OPTION(1:4).EQ.'FULL')
      COUP  = (OPTION(6:9).EQ.'COUP')
      IF (COUP) RIGI=.TRUE.
      LELAS =  OPTION .EQ.'RIGI_MECA       '

C -- INITIALISATION
      IF(LELAS) THEN
        CALL R8INIR(6,0.D0,EPSM,1)
        CALL R8INIR(6,0.D0,DEPS,1)
      ENDIF

      MUF = DEUMUF*0.5D0

C --  CALCUL DES EPSILON INITIAUX
      IF (RESI) THEN
        DO 10 K = 1, 6
          EPS(K) = EPSM(K) + DEPS(K)
 10     CONTINUE
      ELSE
        DO 40 K=1,6
          EPS(K) = EPSM(K)
40      CONTINUE
      ENDIF

C --  ON UTILISE EPSILON SOUS FORME VECTORIELLE
C --  DONC ON DIVISE LES TERMES NON DIAGONNAUX PAR 2
      EPS(3) = EPS(3)/2.0D0
      EPS(6) = EPS(6)/2.0D0

C -- DIAGONALISATION DES DEFORMATIONS
      CALL DIAGO2(EPS(1),VMP,EMP)
      CALL DIAGO2(EPS(4),VFP,EFP)

C --  CALCUL DES TRACES
      TR2D  = EPS(1)+EPS(2)
      TROT  = EFP(1)+EFP(2)

C --  CALCUL DES CONSTANTES INDEPENDANTES DE DA1, DA2 ET EPS33
      CALL CSTGLD(LAMF,MUF,ALF,GF,EMP,EFP,QFF)

C --  INITIALISATION DE DA1, DA2 ET EPS33
      IF(LELAS) THEN
        DA1 = 0.0D0
        DA2 = 0.0D0
      ELSE
        DA1 = VIM(1)
        DA2 = VIM(2)
      ENDIF

C --  EVOLUTION DE DA1, DA2 ET EPS33
C     INTEGRATION DE LA LOI DE COMPORTEMENT
      IF (RESI) THEN
        TOLD = CRIT(3)
        KDMAX = NINT(CRIT(1))

        CALL GLDLOC (LAMBDA,DEUXMU,DEUMUF,SEUIL,ALF,ALFMC,GMT,
     &               GMC,GF,COF1,VIM,Q2D,QFF,TR2D,
     &               EPS33,DE33D1,DE33D2,KSI2D,DKSI1,DKSI2,DA1,
     &               DA2,KDMAX,TOLD,CODRET,EMP)

        IF (DA1.LT.VIM(1)) DA1 = VIM(1)
        IF (DA2.LT.VIM(2)) DA2 = VIM(2)

        ELAS1 = DA1.LE.VIM(1)
        ELAS2 = DA2.LE.VIM(2)

        ELAS1 = ELAS1 .OR. LELAS
        ELAS2 = ELAS2 .OR. LELAS
        ELAS  = ELAS1 .AND. ELAS2

        VIP(1) = DA1
        VIP(2) = DA2
        IF(ELAS1) THEN
          VIP(3) = 0.0D0
        ELSE
          VIP(3) = 1.0D0
        ENDIF
        IF(ELAS2) THEN
          VIP(4) = 0.0D0
        ELSE
          VIP(4) = 1.0D0
        ENDIF
        VIP(5)=1.D0-0.5D0*((1.D0+GMT*DA1)/(1.D0+DA1)
     &                    +(1.D0+GMT*DA2)/(1.D0+DA2))
        VIP(6)=1.D0-0.5D0*((1.D0+GMC*DA1)/(1.D0+DA1)
     &                    +(1.D0+GMC*DA2)/(1.D0+DA2))
        VIP(7)=1.D0-MAX((1.D0+GF*DA1)/(1.D0+DA1),
     &                  (1.D0+GF*DA2)/(1.D0+DA2))
      ELSE
        IF(LELAS) THEN
          DA1 = 0.0D0
          DA2 = 0.0D0
          ELAS1 = .TRUE.
          ELAS2 = .TRUE.
          ELAS  = .TRUE.
        ELSE
          DA1   = VIM(1)
          DA2   = VIM(2)
          ELAS1 = NINT(VIM(3)).EQ.0
          ELAS2 = NINT(VIM(4)).EQ.0
          ELAS = (ELAS1.AND.ELAS2)
        ENDIF
      ENDIF
      CALL CEPS33 (LAMBDA,DEUXMU,ALFMC,GMT,GMC,TR2D,
     &             DA1,DA2,EPS33,DE33D1,DE33D2,KSI2D,DKSI1,
     &             DKSI2,COF1,Q2D,EMP,
     &             COF2,DQ2D)

C --  CALCUL DE LA TRACE 3D
      TREPS  = TR2D + EPS33

C --  CALCUL DES CONTRAINTES GENERALISEES ET DE LA MATRICE TANGENTE

      CALL CNTMAT(LAMBDA,DEUXMU,LAMF,DEUMUF,ALF,ALFMC,EMP,
     &           EFP,EPS,VMP,VFP,TR2D,TROT,TREPS,GMT,GMC,GF,DA1,
     &           DA2,KSI2D,QFF,COF1,Q2D,DE33D1,
     &           DE33D2,ELAS,ELAS1,ELAS2,COUP,RIGI,RESI,OPTION,DSIDEP,
     &           SIG,COF2,DQ2D)

      END
