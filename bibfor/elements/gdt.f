      SUBROUTINE GDT (TETA,   AMAT)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 11/07/2005   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C FONCTION: LE VECTEUR-ROTATION ENTRE L'INSTANT INSTAM ET L'ITERATION
C           K-1 DE L'INSTANT INSTAP EST TETA. ON DONNE UN INCREMENT DE
C           VECTEUR-ROTATION DTETA A PARTIR DE L'ITERATION PRECEDENTE.
C           GDT CALCULE LA MATRICE AMAT QUI, MULTIPLIEE PAR DTETA, DONNE
C           LA PARTIE PRINCIPALE DE L'ACCROISSEMENT CORRESPONDANT DE
C           TETA.
C
C     IN  : TETA      : VECTEUR-ROTATION
C
C     OUT : AMAT      : MATRICE DE LINEARISATION
C ------------------------------------------------------------------
      IMPLICIT REAL*8(A-H,O-Z)
      REAL*8 TETA(3),EU(3),AMAT(3,3),AMAT1(3,3)
C
      ZERO  = 0.D0
      EPSIL1= 1.D-4
      EPSIL2= R8PREM( )**2
      UN    = 1.D0
      DEUX  = 2.D0
C
      PROSCA=DDOT(3,TETA,1,TETA,1)
      ANOR = SQRT (PROSCA)
      ANORS2 = ANOR / DEUX
      IF (ANORS2.GT.EPSIL1) THEN
         COEF = ANORS2 / TAN(ANORS2)
      ELSE
         COEF = UN + ANORS2**2/3.D0
         COEF = UN / COEF
      ENDIF
C
      DO 1 I=1,3
      IF (ANORS2.LE.EPSIL2) THEN
         EU(I) = ZERO
      ELSE
         EU(I) = TETA(I) / ANOR
      ENDIF
1     CONTINUE
      CALL ANTISY (TETA,UN,   AMAT1)
      DO 12 J=1,3
      DO 11 I=1,3
      AMAT(I,J) = EU(I)*EU(J)*(UN-COEF) - AMAT1(I,J)/DEUX
   11 CONTINUE
      AMAT(J,J) = AMAT(J,J) + COEF
   12 CONTINUE
 9999 CONTINUE
      END
