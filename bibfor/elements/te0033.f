      SUBROUTINE TE0033 (OPTION,NOMTE)
      IMPLICIT  NONE
      INCLUDE 'jeveux.h'
      CHARACTER*16        OPTION, NOMTE
C ----------------------------------------------------------------------
C MODIF ELEMENTS  DATE 18/03/2013   AUTEUR IDOUX L.IDOUX 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     CALCUL DE CONTRAINTES, DEFORMATIONS, EFFORTS ET DEFORMATIONS
C     GENERALISES POUR LES ELEMENTS DKT, DKTG, DST, DKQ, DSQ ET Q4G
C     POUR UN MATERIAU ISOTROPE OU MULTICOUCHE
C         OPTIONS TRAITEES  ==>  SIEF_ELGA
C                                EPSI_ELGA
C                                DEGE_ELGA
C                                DEGE_ELNO
C     IN   K16   OPTION : NOM DE L'OPTION A CALCULER
C     IN   K16   NOMTE  : NOM DU TYPE_ELEMENT
C     ------------------------------------------------------------------
      INTEGER       NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDX,JGANO
      INTEGER       I, IRET, JCARA,VALI(2)
      INTEGER       JDEPG, JEFFG, JGEOM, JMATE, JSIGM
      INTEGER       NP, MULTIC
      INTEGER       JNBSPI, NBCOU, ICOU
      INTEGER       ICODRE,KPG,SPT

      REAL*8        ZERO,EPI,EPAIS,EPTOT,ALPHA,BETA,R8DGRD
      REAL*8        PGL(3,3), XYZL(3,4), R8BID,VALR(2)
      REAL*8        DEPL(24)
      REAL*8        EFFGT(32),EFFPG(32)
      REAL*8        T2EV(4), T2VE(4),C,S

      LOGICAL       DKG

      CHARACTER*2   VAL
      CHARACTER*3   NUM
      CHARACTER*4   FAMI
      CHARACTER*8   NOMRES,FAMIL,POUM
      CHARACTER*16  PHENOM
C     ------------------------------------------------------------------
C

      IF (OPTION(6:9).EQ.'ELNO') THEN
        FAMI = 'NOEU'
      ELSE
        FAMI = 'RIGI'
      ENDIF
      CALL ELREF4(' ',FAMI,NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDX,JGANO)
C
      IF (OPTION.NE.'SIEF_ELGA' .AND.
     &    OPTION.NE.'EPSI_ELGA' .AND.
     &    OPTION.NE.'DEGE_ELNO' .AND.
     &    OPTION.NE.'DEGE_ELGA') THEN
CC OPTION DE CALCUL INVALIDE
        CALL ASSERT(.FALSE.)
      END IF

      DKG = .FALSE.

      IF ((NOMTE.EQ.'MEDKTG3').OR.
     &    (NOMTE.EQ.'MEDKQG4')) THEN
         DKG = .TRUE.
      END IF

      ZERO   = 0.0D0

      DO 10 I = 1,32
         EFFGT(I) = ZERO
   10 CONTINUE

      CALL JEVECH('PGEOMER','L',JGEOM)
C
C --- VERIFICATION DE LA COHERENCE DES INFORMATIONS
C --- PROVENANT DE DEFI_COQU_MULT ET DE AFFE_CARA_ELEM
C     ----------------------------------
      JNBSPI = 0
      IF ( OPTION.EQ.'SIEF_ELGA'.OR.OPTION.EQ.'EPSI_ELGA' ) THEN
         CALL JEVECH('PMATERC','L',JMATE)
         CALL TECACH('NNN','PNBSP_I','L',1,JNBSPI,IRET)
         IF (IRET.EQ.0) THEN
            NBCOU = ZI(JNBSPI)
            ICOU = 0
            EPTOT = 0.D0
            EPI = 0.D0
            CALL JEVECH('PCACOQU','L',JCARA)
            EPAIS  = ZR(JCARA)
  5         CONTINUE
            ICOU=ICOU+1
            CALL CODENT(ICOU,'G',NUM)
            CALL CODENT(1,'G',VAL)
            NOMRES = 'C'//NUM//'_V'//VAL
            FAMIL='FPG1'
            KPG=1
            SPT=1
            POUM='+'
            CALL RCVALB(FAMIL,KPG,SPT,POUM,ZI(JMATE),' ','ELAS_COQMU',
     &                  0,' ',R8BID,1,NOMRES,EPI,ICODRE,0)
            IF (ICODRE.EQ.0) THEN
               EPTOT=EPTOT+EPI
               GOTO 5
            ENDIF
            IF (EPTOT.NE.0.D0) THEN
               IF ((ICOU-1).NE.NBCOU) THEN
                  VALI(1) = ICOU-1
                  VALI(2) = NBCOU
                  CALL U2MESG('F','ELEMENTS3_51',0,' ',2,VALI,0,0.D0)
               ENDIF
               IF (ABS(EPAIS-EPTOT)/EPAIS.GT.1.D-2) THEN
                  VALR(1) = EPTOT
                  VALR(2) = EPAIS
                  CALL U2MESG('F','ELEMENTS3_52',0,' ',0,0,2,VALR)
               ENDIF
            ENDIF
         ENDIF
      ENDIF

      IF (OPTION(8:9).EQ.'GA') THEN
         NP = NPG
      ELSE IF (OPTION(8:9).EQ.'NO') THEN
         NP = NNO
      END IF

      IF (NNO.EQ.3) THEN
         CALL DXTPGL(ZR(JGEOM),PGL)
      ELSE IF (NNO.EQ.4) THEN
         CALL DXQPGL(ZR(JGEOM),PGL,'S',IRET)
      END IF

      CALL UTPVGL(NNO,3,PGL,ZR(JGEOM),XYZL)
C
      CALL JEVECH ('PCACOQU', 'L', JCARA)
      ALPHA = ZR(JCARA+1) * R8DGRD()
      BETA  = ZR(JCARA+2) * R8DGRD()
      CALL COQREP(PGL,ALPHA,BETA,T2EV,T2VE,C,S)
C
      CALL JEVECH('PDEPLAR','L',JDEPG)
      CALL UTPVGL(NNO,6,PGL,ZR(JDEPG),DEPL)

C     ---------- CONTRAINTES ET DEFORMATIONS --------------------------
      IF ( OPTION(1:9) .EQ. 'SIEF_ELGA' ) THEN
         CALL JEVECH('PCONTRR','E',JSIGM)
C
         IF (DKG) THEN
            NBCOU = 1
         ELSE
            CALL JEVECH('PNBSP_I','L',JNBSPI)
            NBCOU = ZI(JNBSPI)
            IF (NBCOU.LE.0) CALL U2MESS('F','ELEMENTS_46')
         ENDIF

         IF (NOMTE.EQ.'MEDKTR3' .OR.
     &       NOMTE.EQ.'MEDKTG3' ) THEN
            CALL DKTSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MEDSTR3' ) THEN
            CALL DSTSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MEDKQU4' .OR.
     &            NOMTE.EQ.'MEDKQG4' ) THEN
            CALL DKQSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MEDSQU4' ) THEN
            CALL DSQSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MEQ4QU4' ) THEN
            CALL Q4GSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MET3TR3' ) THEN
            CALL T3GSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE
C TYPE D ELEMENT INVALIDE
            CALL ASSERT(.FALSE.)
         END IF
C
         CALL RCCOMA (ZI(JMATE),'ELAS',1,PHENOM,ICODRE)
C        ON NE SAIT PAS TRAITER LE CAS ELAS_COQUE
         IF (PHENOM.EQ.'ELAS'      .OR.
     &       PHENOM.EQ.'ELAS_ORTH' .OR.
     &       PHENOM.EQ.'ELAS_ISTR' ) THEN
            CALL DXSITH (NOMTE,ZI(JMATE),ZR(JSIGM))
         ELSE IF ( PHENOM.EQ.'ELAS_COQMU' ) THEN
            CALL DXSIT2 (NOMTE,PGL,ZR(JSIGM))
         ENDIF
C     ----------------------------
      ELSE IF ( OPTION(1:9) .EQ. 'EPSI_ELGA' ) THEN
        CALL JEVECH('PDEFOPG','E',JSIGM)
C
         IF (DKG) THEN
            NBCOU = 1
         ELSE
            CALL JEVECH('PNBSP_I','L',JNBSPI)
            NBCOU = ZI(JNBSPI)
            IF (NBCOU.LE.0) CALL U2MESS('F','ELEMENTS_46')
         ENDIF
         IF (NOMTE.EQ.'MEDKTR3' .OR.
     &       NOMTE.EQ.'MEDKTG3' ) THEN
            CALL DKTSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MEDSTR3' ) THEN
            CALL DSTSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MEDKQU4' .OR.
     &            NOMTE.EQ.'MEDKQG4' ) THEN
            CALL DKQSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MEDSQU4' ) THEN
            CALL DSQSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MEQ4QU4' ) THEN
            CALL Q4GSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         ELSE IF (NOMTE.EQ.'MET3TR3' ) THEN
            CALL T3GSIE(OPTION,FAMI,XYZL,PGL,DEPL,NBCOU,ZR(JSIGM))
         END IF
         CALL DXSIRO(NP*NBCOU*3,T2VE,ZR(JSIGM),ZR(JSIGM))
C     ----------------------------
      ELSE IF ( OPTION(1:9) .EQ. 'DEGE_ELNO' ) THEN
        CALL JEVECH('PDEFOGR','E',JEFFG)

         IF (NOMTE.EQ.'MEDKTR3' .OR.
     &       NOMTE.EQ.'MEDKTG3' ) THEN
            CALL DKTEDG(XYZL,OPTION,PGL,DEPL,EFFGT,MULTIC)
         ELSE IF (NOMTE.EQ.'MEDSTR3' ) THEN
            CALL DSTEDG(XYZL,OPTION,PGL,DEPL,EFFGT)
         ELSE IF (NOMTE.EQ.'MEDKQU4' .OR.
     &            NOMTE.EQ.'MEDKQG4' ) THEN
            CALL DKQEDG(XYZL,OPTION,PGL,DEPL,EFFGT)
         ELSE IF (NOMTE.EQ.'MEDSQU4' ) THEN
            CALL DSQEDG(XYZL,OPTION,PGL,DEPL,EFFGT)
         ELSE IF (NOMTE.EQ.'MEQ4QU4'.OR.
     &            NOMTE.EQ.'MEQ4GG4' ) THEN
            CALL Q4GEDG(XYZL,OPTION,PGL,DEPL,EFFGT)
         ELSE IF (NOMTE.EQ.'MET3TR3'.OR.
     &            NOMTE.EQ.'MET3GG3') THEN
            CALL T3GEDG(XYZL,OPTION,PGL,DEPL,EFFGT)
         END IF
C
C ---    PASSAGE DES DEFORMATIONS GENERALISEES DU REPERE INTRINSEQUE
C ---    A L'ELEMENT AU REPERE LOCAL DE LA COQUE
         CALL DXEFRO(NP,T2VE,EFFGT,ZR(JEFFG))
C     ----------------------------
      ELSE IF ( OPTION(1:9) .EQ. 'DEGE_ELGA' ) THEN
         CALL JEVECH('PDEFOPG','E',JEFFG)
C
         IF (NOMTE.EQ.'MEDKTR3' .OR.
     &       NOMTE.EQ.'MEDKTG3' ) THEN
            CALL DKTEDG(XYZL,OPTION,PGL,DEPL,EFFPG,MULTIC)
         ELSE IF (NOMTE.EQ.'MEDSTR3' ) THEN
            CALL DSTEDG(XYZL,OPTION,PGL,DEPL,EFFPG)
         ELSE IF (NOMTE.EQ.'MEDKQU4' .OR.
     &            NOMTE.EQ.'MEDKQG4' ) THEN
            CALL DKQEDG(XYZL,OPTION,PGL,DEPL,EFFPG)
         ELSE IF (NOMTE.EQ.'MEDSQU4' ) THEN
            CALL DSQEDG(XYZL,OPTION,PGL,DEPL,EFFPG)
         ELSE IF (NOMTE.EQ.'MEQ4QU4'.OR.
     &            NOMTE.EQ.'MEQ4GG4' ) THEN
            CALL Q4GEDG(XYZL,OPTION,PGL,DEPL,EFFPG)
         ELSE IF (NOMTE.EQ.'MET3TR3'.OR.
     &            NOMTE.EQ.'MET3GG3') THEN
            CALL T3GEDG(XYZL,OPTION,PGL,DEPL,EFFPG)
         END IF
C ---    PASSAGE DES DEFORMATIONS GENERALISEES DU REPERE INTRINSEQUE
C ---    A L'ELEMENT AU REPERE LOCAL DE LA COQUE
         CALL DXEFRO(NP,T2VE,EFFPG,ZR(JEFFG))
      END IF

      IF (OPTION.EQ.'SIEF_ELGA') THEN
C ---    PASSAGE DES CONTRAINTES DANS LE REPERE UTILISATEUR :
         CALL COSIRO(NOMTE,'PCONTRR','E','IU','G',JSIGM,'S')
      ENDIF

      END
