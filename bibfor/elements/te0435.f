      SUBROUTINE TE0435(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 17/12/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*16 OPTION,NOMTE
C ----------------------------------------------------------------------
C    - FONCTION REALISEE:  CALCUL DES OPTIONS DE COMPORTEMENT :
C                                  - FULL_MECA
C                                  - FULL_MECA_ELAS
C                                  - RAPH_MECA
C                                  - RIGI_MECA
C                                  - RIGI_MECA_ELAS
C                                  - RIGI_MECA_TANG
C                          POUR LES MEMBRANES
C    - ARGUMENTS :
C        DONNEES :      OPTION       -->  OPTION DE CALCUL
C                       NOMTE        -->  NOM DU TYPE ELEMENT
C ----------------------------------------------------------------------

      CHARACTER*4  FAMI
      INTEGER  NDDL,NNO,NNOS,NPG,NDIM,NCOMP,NVARI
      INTEGER  I,J,J1,N,M,C,CC,KPG,KK,KKD,IRET,COD(9)
      INTEGER  IPOIDS,IVF,IDFDE,JGANO,JTAB(7)
      INTEGER  IGEOM,ICACOQ,IMATE,ICOMPO,ICARCR
      INTEGER  IINSTM,IINSTP,ICONTM,IDEPLM,IDEPLP,IVARIM,IVARIX
      INTEGER  IVECTU,ICONTP,IVARIP,JCRET,IMATUU
      REAL*8   DFF(2,8),ALPHA,BETA,B(3,3,8),JAC
      REAL*8  EPSM(3),DEPS(3),EPSTH(3),EPSTHE,SIGP(3),TMP,RIG(3,3)
      REAL*8  R8DGRD
      LOGICAL  VECTEU,MATRIC

C - BOOLEEN UTILES

      VECTEU = ((OPTION(1:9).EQ.'FULL_MECA').OR.
     &          (OPTION     .EQ.'RAPH_MECA'))
      MATRIC = ((OPTION(1:9).EQ.'FULL_MECA').OR.
     &          (OPTION(1:9).EQ.'RIGI_MECA'))

C - NOMBRE DE COMPOSANTES DES TENSEURS

      NCOMP = 3
      NDDL  = 3

C - FONCTIONS DE FORME ET POINTS DE GAUSS

      FAMI = 'RIGI'
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,JGANO)

C - PARAMETRES EN ENTREE

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PCACOQU','L',ICACOQ)

      IF (OPTION.EQ.'RIGI_MECA') THEN
        CALL JEVECH('PMATERC','L',IMATE)

      ELSEIF ((OPTION(1:9) .EQ.'FULL_MECA').OR.
     &        (OPTION      .EQ.'RAPH_MECA').OR.
     &        (OPTION(1:10).EQ.'RIGI_MECA_')) THEN
        CALL JEVECH('PMATERC','L',IMATE)
        CALL JEVECH('PCOMPOR','L',ICOMPO)
        CALL JEVECH('PCARCRI','L',ICARCR)

        CALL JEVECH('PINSTMR','L',IINSTM)
        CALL JEVECH('PINSTPR','L',IINSTP)
        CALL JEVECH('PCONTMR','L',ICONTM)
        CALL JEVECH('PDEPLMR','L',IDEPLM)
        CALL JEVECH('PDEPLPR','L',IDEPLP)
        CALL TECACH('OON','PVARIMR',7,JTAB,IRET)
        NVARI = MAX(JTAB(6),1)*JTAB(7)
        CALL JEVECH('PVARIMR','L',IVARIM)
        CALL JEVECH('PVARIMP','L',IVARIX)
      ENDIF

C - PARAMETRES EN SORTIE

      IF ((OPTION(1:9).EQ.'RAPH_MECA').OR.
     &    (OPTION(1:9).EQ.'FULL_MECA')) THEN
        CALL JEVECH('PVECTUR','E',IVECTU)
        CALL JEVECH('PCONTPR','E',ICONTP)
        CALL JEVECH('PVARIPR','E',IVARIP)
        CALL JEVECH('PCODRET','E',JCRET)
C       ESTIMATION VARIABLES INTERNES A L'ITERATION PRECEDENTE
        CALL DCOPY(NPG*NVARI,ZR(IVARIX),1,ZR(IVARIP),1)
      ENDIF

      IF ((OPTION(1:4).EQ.'FULL').OR.
     &    (OPTION(1:4).EQ.'RIGI')) THEN
        CALL JEVECH('PMATUUR','E',IMATUU)
      ENDIF

C - INITIALISATION CODES RETOURS

      DO 1955 KPG=1,NPG
         COD(KPG)=0
1955  CONTINUE

C - DIRECTION DE REFERENCE POUR UN COMPORTEMENT ANISOTROPE

      ALPHA = ZR(ICACOQ) * R8DGRD()
      BETA  = ZR(ICACOQ+1) * R8DGRD()

C - DEBUT DE LA BOUCLE SUR LES POINTS DE GAUSS

      DO 800 KPG=1,NPG

C --- MISE SOUS FORME DE TABLEAU DES VALEURS ET DES DERIVEES
C     DES FONCTIONS DE FORME

        DO 110 N=1,NNO
          DFF(1,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2)
          DFF(2,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2+1)
110     CONTINUE

C --- CALCUL DE LA MATRICE "B" :
C              DEPL NODAL --> DEFORMATIONS MEMBRANAIRES ET JACOBIEN

        CALL MBCINE(NNO,ZR(IGEOM),DFF,ALPHA,BETA,B,JAC)

C --- RIGI_MECA : ON DONNE LA RIGIDITE ELASTIQUE

        IF (OPTION.EQ.'RIGI_MECA') THEN

          CALL MBRIGI(FAMI,KPG,IMATE,RIG)

C --- RAPH_MECA, FULL_MECA*, RIGI_MECA_* : ON PASSE PAR LA LDC 1D

        ELSEIF ((OPTION      .EQ.'RAPH_MECA').OR.
     &          (OPTION(1:9) .EQ.'FULL_MECA').OR.
     &          (OPTION(1:10).EQ.'RIGI_MECA_')) THEN

C         CALCUL DE LA DEFORMATION MEMBRANAIRE DANS LE REPERE LOCAL
          CALL R8INIR(3,0.D0,EPSM,1)
          CALL R8INIR(3,0.D0,DEPS,1)
          DO 130 N=1,NNO
            DO 130 I=1,NDDL
              DO 130 C=1,NCOMP
                EPSM(C)=EPSM(C)+B(C,I,N)*ZR(IDEPLM+(N-1)*NDDL+I-1)
                DEPS(C)=DEPS(C)+B(C,I,N)*ZR(IDEPLP+(N-1)*NDDL+I-1)
130       CONTINUE

          CALL VERIFT(FAMI,KPG,1,'+',ZI(IMATE),'ELAS_MEMBRANE',1,
     &                EPSTHE,IRET)
          CALL R8INIR(3,0.D0,EPSTH,1)
          EPSTH(1) = EPSTHE
          EPSTH(2) = EPSTHE

          CALL MBRIGI(FAMI,KPG,IMATE,RIG)

          CALL R8INIR(3,0.D0,SIGP,1)
          DO 140 C=1,NCOMP
            DO 140 CC=1,NCOMP
              SIGP(C) = SIGP(C) + (EPSM(CC)+DEPS(CC)-EPSTH(CC))
     &                             *RIG(CC,C)
140       CONTINUE

          IF ((OPTION     .EQ.'RAPH_MECA').OR.
     &        (OPTION(1:9).EQ.'FULL_MECA')) THEN
            DO 150 C=1,NCOMP
               ZR(ICONTP+(KPG-1)*NCOMP+C-1)=SIGP(C)
150         CONTINUE
          ENDIF

        ENDIF

C --- RANGEMENT DES RESULTATS

        IF (VECTEU) THEN
          DO 160 N=1,NNO
            DO 160 I=1,NDDL
              DO 160 C=1,NCOMP
                ZR(IVECTU+(N-1)*NDDL+I-1)=ZR(IVECTU+(N-1)*NDDL+I-1)
     &                          +B(C,I,N)*SIGP(C)*ZR(IPOIDS+KPG-1)*JAC
160       CONTINUE
        ENDIF

        IF (MATRIC) THEN
          DO 200 N=1,NNO
            DO 200 I=1,NDDL
              KKD = (NDDL*(N-1)+I-1) * (NDDL*(N-1)+I) /2
              DO 200 J=1,NDDL
                DO 200 M=1,N
                  IF (M.EQ.N) THEN
                    J1 = I
                  ELSE
                    J1 = NDDL
                  ENDIF

C                 RIGIDITE ELASTIQUE
                  TMP = 0.D0
                  DO 210 C=1,NCOMP
                    DO 210 CC=1,NCOMP
                      TMP = TMP + B(CC,I,N)*RIG(CC,C)*B(C,J,M)
     &                                       *ZR(IPOIDS+KPG-1)*JAC
210               CONTINUE

C                 STOCKAGE EN TENANT COMPTE DE LA SYMETRIE
                  IF (J.LE.J1) THEN
                     KK = KKD + NDDL*(M-1)+J
                     ZR(IMATUU+KK-1) = ZR(IMATUU+KK-1) + TMP
                  END IF
200       CONTINUE
        ENDIF

C - FIN DE LA BOUCLE SUR LES POINTS DE GAUSS
800   CONTINUE

      IF ((OPTION(1:9).EQ.'FULL_MECA').OR.
     &    (OPTION(1:9).EQ.'RAPH_MECA')) THEN
        CALL CODERE(COD,NPG,ZI(JCRET))
      ENDIF

      END
