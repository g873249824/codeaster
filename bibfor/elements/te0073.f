      SUBROUTINE TE0073(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C    - FONCTION REALISEE:  CALCUL DES VECTEURS ELEMENTAIRES
C                          OPTION : 'CHAR_THER_TEXT_F/R'
C                                   'CHAR_THER_RAYO_F/R'
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE

      INCLUDE 'jeveux.h'

      CHARACTER*16 OPTION,NOMTE
      INTEGER NBRES
      PARAMETER (NBRES=3)
      CHARACTER*8 NOMPAR(NBRES),ELREFE, ALIAS8
      REAL*8 VALPAR(NBRES),POIDS,R,Z,NX,NY,TPG,COEN,COENP1,
     &       TEXN,TEXNP1,COORSE(18),VECTT(9),THETA,
     &       SIGM1,SIGMN,EPS1,EPSN,TPF1,TPFN,TZ0,R8T0
      INTEGER NNO,NNOS,JGANO,NDIM,KP,NPG,IPOIDS,IVF,IDFDE,IGEOM,ITEMPS,
     &        IVECTT,I,L,LI,ITEX,ICOEFH,IRAY,ITEMP,NNOP2,C(6,9),ISE,
     &        NSE,J,IER,ICODE, IBID
      LOGICAL LAXI,LTEXT,LTEATT


      CALL ELREF1(ELREFE)
C
      IF ( LTEATT(' ','LUMPE','OUI')) THEN
         CALL TEATTR(' ','S','ALIAS8',ALIAS8,IBID)
         IF (ALIAS8(6:8).EQ.'SE3')  ELREFE='SE2'
      END IF
C
      CALL ELREF4(ELREFE,'RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,
     &            JGANO)

C====
C 1.1 PREALABLES: RECUPERATION ADRESSES FONCTIONS DE FORMES...
C====
      TZ0 = R8T0()
      LAXI = .FALSE.
      IF (LTEATT(' ','AXIS','OUI')) LAXI = .TRUE.

      IF (OPTION(11:14).EQ.'TEXT') THEN
        LTEXT = .TRUE.
      ELSE IF (OPTION(11:14).EQ.'RAYO') THEN
        LTEXT = .FALSE.
      ELSE
CC OPTION DE CALCUL INVALIDE
        CALL ASSERT(.FALSE.)
      END IF
C====
C 1.2 PREALABLES LIES AUX RECHERCHES DE DONNEES GENERALES
C====

      IF (LTEXT) THEN
C CHAR_.._TEXT
        CALL JEVECH('PTEMPER','L',ITEMP)
        CALL JEVECH('PCOEFHF','L',ICOEFH)
        CALL JEVECH('PT_EXTF','L',ITEX)
      ELSE
C CHAR_..._RAYO
        CALL JEVECH('PRAYONF','L',IRAY)
        CALL JEVECH('PTEMPER','L',ITEMP)
C FIN DU IF LTEXT
      END IF

C TRONC COMMUN
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PTEMPSR','L',ITEMPS)
      CALL JEVECH('PVECTTR','E',IVECTT)

C====
C 1.3 PREALABLES LIES AUX CALCULS
C====
      THETA = ZR(ITEMPS+2)
      CALL CONNEC(NOMTE,NSE,NNOP2,C)
      DO 10 I = 1,NNOP2
        VECTT(I) = 0.D0
   10 CONTINUE
      NOMPAR(1) = 'X'
      NOMPAR(2) = 'Y'
      NOMPAR(3) = 'INST'

C====
C 2. CALCULS TERMES DE MASSE
C====

C BOUCLE SUR LES SOUS-ELEMENTS

      DO 160 ISE = 1,NSE

        DO 30 I = 1,NNO
          DO 20 J = 1,2
            COORSE(2* (I-1)+J) = ZR(IGEOM-1+2* (C(ISE,I)-1)+J)
   20     CONTINUE
   30   CONTINUE

        DO 150 KP = 1,NPG
          CALL VFF2DN(NDIM,NNO,KP,IPOIDS,IDFDE,COORSE,NX,NY,
     &                POIDS)
          R = 0.D0
          Z = 0.D0
          TPG = 0.D0
          IF (ITEMP.NE.0) THEN
            DO 40 I = 1,NNO
C CALCUL DE T-
              L = (KP-1)*NNO + I
              TPG = TPG + ZR(ITEMP-1+C(ISE,I))*ZR(IVF+L-1)
   40       CONTINUE
          END IF

          DO 50 I = 1,NNO
            L = (KP-1)*NNO + I
            R = R + COORSE(2* (I-1)+1)*ZR(IVF+L-1)
            Z = Z + COORSE(2* (I-1)+2)*ZR(IVF+L-1)
   50     CONTINUE
          IF (LAXI) POIDS = POIDS*R
          VALPAR(1) = R
          VALPAR(2) = Z
          VALPAR(3) = ZR(ITEMPS)

C====
C 2.1 OPTION CHAR_THER_TEXT_F/R
C====
          IF (LTEXT) THEN

            CALL FOINTE('FM',ZK8(ICOEFH),3,NOMPAR,VALPAR,COENP1,ICODE)
            CALL ASSERT (ICODE.EQ.0)
            IF (THETA.NE.1.0D0) THEN
              VALPAR(3) = ZR(ITEMPS) - ZR(ITEMPS+1)
              CALL FOINTE('FM',ZK8(ICOEFH),3,NOMPAR,VALPAR,COEN,ICODE)
              CALL ASSERT (ICODE.EQ.0)
            ELSE
              COEN = 0.D0
            END IF

            VALPAR(3) = ZR(ITEMPS)
            CALL FOINTE('FM',ZK8(ITEX),3,NOMPAR,VALPAR,TEXNP1,ICODE)
            CALL ASSERT (ICODE.EQ.0)
            IF (THETA.NE.1.0D0) THEN
              VALPAR(3) = ZR(ITEMPS) - ZR(ITEMPS+1)
              CALL FOINTE('FM',ZK8(ITEX),3,NOMPAR,VALPAR,TEXN,ICODE)
              CALL ASSERT (ICODE.EQ.0)
            ELSE
              TEXN = 0.D0
            END IF
            DO 80 I = 1,NNO
              LI = IVF + (KP-1)*NNO + I - 1
              VECTT(C(ISE,I)) = VECTT(C(ISE,I)) +
     &                          POIDS*ZR(LI)* (THETA*COENP1*TEXNP1+
     &                          (1.0D0-THETA)*COEN* (TEXN-TPG))
   80       CONTINUE
C====
C 2.2 OPTION CHAR_THER_RAYO_F/R
C====
          ELSE

            CALL FOINTE('FM',ZK8(IRAY),3,NOMPAR,VALPAR,SIGM1,IER)
            CALL ASSERT (IER.EQ.0)
            IF (THETA.NE.1.0D0) THEN
              VALPAR(3) = ZR(ITEMPS) - ZR(ITEMPS+1)
              CALL FOINTE('FM',ZK8(IRAY),3,NOMPAR,VALPAR,SIGMN,IER)
              CALL ASSERT (IER.EQ.0)
            ELSE
              SIGMN = 0.D0
            END IF

            VALPAR(3) = ZR(ITEMPS)
            CALL FOINTE('FM',ZK8(IRAY+1),3,NOMPAR,VALPAR,EPS1,IER)
            CALL ASSERT (IER.EQ.0)
            IF (THETA.NE.1.0D0) THEN
              VALPAR(3) = ZR(ITEMPS) - ZR(ITEMPS+1)
              CALL FOINTE('FM',ZK8(IRAY+1),3,NOMPAR,VALPAR,EPSN,IER)
              CALL ASSERT (IER.EQ.0)
            ELSE
              EPSN = 0.D0
            END IF

            VALPAR(3) = ZR(ITEMPS)
            CALL FOINTE('FM',ZK8(IRAY+2),3,NOMPAR,VALPAR,TPF1,IER)
            CALL ASSERT (IER.EQ.0)
            IF (THETA.NE.1.0D0) THEN
              VALPAR(3) = ZR(ITEMPS) - ZR(ITEMPS+1)
              CALL FOINTE('FM',ZK8(IRAY+2),3,NOMPAR,VALPAR,TPFN,IER)
              CALL ASSERT (IER.EQ.0)
            ELSE
              TPFN = 0.D0
            END IF
            DO 100 I = 1,NNO
              LI = IVF + (KP-1)*NNO + I - 1
              VECTT(C(ISE,I)) = VECTT(C(ISE,I)) +
     &                          POIDS*ZR(LI)* (THETA*SIGM1*EPS1*
     &                          (TPF1+TZ0)**4+ (1.0D0-THETA)*SIGMN*
     &                          EPSN* ((TPFN+TZ0)**4- (TPG+TZ0)**4))
  100       CONTINUE

C FIN DU IF LTEXT
          END IF

C FIN DE BOUCLE SUR LES PTS DE GAUSS
  150   CONTINUE
C FIN DE BOUCLE SUR LES SOUS-ELEMENTS
  160 CONTINUE

      DO 170 I = 1,NNOP2
        ZR(IVECTT-1+I) = VECTT(I)
  170 CONTINUE
      END
