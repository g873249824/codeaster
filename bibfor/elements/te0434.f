      SUBROUTINE TE0434(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*16 OPTION,NOMTE
C ----------------------------------------------------------------------
C    - FONCTION REALISEE:  CALCUL DES OPTIONS DE CHARGEMENT :
C                                  - CHAR_MECA_EPSI_R
C                                  - CHAR_MECA_PESA_R
C                                  - CHAR_MECA_TEMP_R
C                                  - FORC_NODA
C                                  - REFE_FORC_NODA
C                          POUR LES MEMBRANES
C    - ARGUMENTS :
C        DONNEES :      OPTION       -->  OPTION DE CALCUL
C                       NOMTE        -->  NOM DU TYPE ELEMENT
C ----------------------------------------------------------------------

      INTEGER  CODRES(2)
      CHARACTER*4  FAMI
      INTEGER  NDDL,NNO,NNOS,NPG,NDIM,NCOMP
      INTEGER  I,N,KPG,C,CC,IRET
      INTEGER  IPOIDS,IVF,IDFDE,JGANO
      INTEGER  IGEOM,ICACOQ,IMATE,ICONTM,IPESA,IEPSIN,IVECTU
      REAL*8  DFF(2,8),VFF(8),B(3,3,8),JAC
      REAL*8  ALPHA,BETA,RHO,RIG(3,3)
      REAL*8  EPSTHE,EPSREF,SGMREF,SIG(3),R8VIDE,R8DGRD

C - NOMBRE DE COMPOSANTES DES TENSEURS

      NCOMP = 3
      NDDL  = 3

C - FONCTIONS DE FORME ET POINTS DE GAUSS

      FAMI = 'RIGI'
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,JGANO)

C - PARAMETRES EN ENTREE

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PCACOQU','L',ICACOQ)

      IF (OPTION.EQ.'FORC_NODA') THEN
        CALL JEVECH('PCONTMR','L',ICONTM)

      ELSEIF (OPTION.EQ.'REFE_FORC_NODA') THEN
        CALL JEVECH('PMATERC','L',IMATE)

      ELSEIF (OPTION.EQ.'CHAR_MECA_EPSI_R') THEN
        CALL JEVECH('PMATERC','L',IMATE)
        CALL JEVECH('PEPSINR','L',IEPSIN)

      ELSEIF (OPTION.EQ.'CHAR_MECA_PESA_R') THEN
        CALL JEVECH('PMATERC','L',IMATE)
        CALL JEVECH('PPESANR','L',IPESA)

      ELSEIF (OPTION.EQ.'CHAR_MECA_TEMP_R') THEN
        CALL JEVECH('PMATERC','L',IMATE)

      ENDIF

C - PARAMETRES EN SORTIE

      CALL JEVECH('PVECTUR','E',IVECTU)

C - DIRECTION DE REFERENCE POUR UN COMPORTEMENT ANISOTROPE

      ALPHA = ZR(ICACOQ) * R8DGRD()
      BETA  = ZR(ICACOQ+1) * R8DGRD()

C - DEBUT DE LA BOUCLE SUR LES POINTS DE GAUSS

      DO 800 KPG=1,NPG

C --- MISE SOUS FORME DE TABLEAU DES VALEURS ET DES DERIVEES
C     DES FONCTIONS DE FORME

        DO 110 N=1,NNO
          VFF(N)  =ZR(IVF+(KPG-1)*NNO+N-1)
          DFF(1,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2)
          DFF(2,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2+1)
110     CONTINUE

C --- CALCUL DE LA MATRICE "B" :
C              DEPL NODAL --> DEFORMATIONS MEMBRANAIRES ET JACOBIEN

        CALL MBCINE(NNO,ZR(IGEOM),DFF,ALPHA,BETA,B,JAC)

C - BRANCHEMENT DES DIFFERENTES OPTIONS

        IF ((OPTION.EQ.'FORC_NODA').OR.
     &      (OPTION.EQ.'CHAR_MECA_TEMP_R').OR.
     &      (OPTION.EQ.'CHAR_MECA_EPSI_R')) THEN

C - FORC_NODA : IL SUFFIT DE RECOPIER SIGMA

          IF (OPTION.EQ.'FORC_NODA') THEN
            DO 120 C=1,NCOMP
               SIG(C) = ZR(ICONTM+(KPG-1)*NCOMP+C-1)
120         CONTINUE

C - CHAR_MECA_EPSI_R : SIG = RIG*EPSIN

          ELSEIF (OPTION.EQ.'CHAR_MECA_EPSI_R') THEN

            CALL MBRIGI(FAMI,KPG,IMATE,RIG)

            CALL R8INIR(3,0.D0,SIG,1)
            DO 130 C=1,NCOMP
              DO 130 CC=1,NCOMP
                SIG(C) = SIG(C) + ZR(IEPSIN+CC-1)*RIG(CC,C)
130         CONTINUE

C - CHAR_MECA_TEMP_R : SIG = RIG*EPSTHE

          ELSEIF (OPTION.EQ.'CHAR_MECA_TEMP_R') THEN

            CALL VERIFT(FAMI,KPG,1,'+',ZI(IMATE),'ELAS_MEMBRANE',1,
     &                  EPSTHE,IRET)

            CALL MBRIGI(FAMI,KPG,IMATE,RIG)

            CALL R8INIR(3,0.D0,SIG,1)
            DO 140 C=1,NCOMP
              SIG(C) = EPSTHE*(RIG(1,C)+RIG(2,C))
140         CONTINUE

          ENDIF

          DO 150 N=1,NNO
            DO 150 I=1,NDDL
              DO 150 C=1,NCOMP
                ZR(IVECTU+(N-1)*NDDL+I-1)=ZR(IVECTU+(N-1)*NDDL+I-1)
     &                          +B(C,I,N)*SIG(C)*ZR(IPOIDS+KPG-1)*JAC
150       CONTINUE

C - REFE_FORC_NODA : ON CALCULE DES FORCES DE REFERENCE

        ELSEIF (OPTION.EQ.'REFE_FORC_NODA') THEN

          CALL TEREFE('EPSI_REFE','MEMBRANE',EPSREF)
          IF (EPSREF.EQ.R8VIDE()) CALL ASSERT(.FALSE.)

          CALL MBRIGI(FAMI,KPG,IMATE,RIG)

C         ON CALCULE UN ORDRE DE GRANDEUR DE LA CONTRAINTE MEMBRANAIRE
          SGMREF = EPSREF*(RIG(1,1) + RIG(2,2))/2.D0
          CALL ASSERT(SGMREF.GT.0.D0)

          DO 200 N=1,NNO
            DO 200 I=1,NDDL
              ZR(IVECTU+(N-1)*NDDL+I-1) = ZR(IVECTU+(N-1)*NDDL+I-1)
     &                                + SGMREF*SQRT(ABS(JAC))/NPG
200       CONTINUE

C - CHAR_MECA_PESA_R

        ELSEIF (OPTION.EQ.'CHAR_MECA_PESA_R') THEN
          CALL RCVALB(FAMI,KPG,1,'+',ZI(IMATE),' ','ELAS_MEMBRANE',0,
     &                ' ',0.D0,1,'RHO',RHO,CODRES, 1)
          DO 300 N=1,NNO
            DO 300 I=1,NDDL
              ZR(IVECTU+(N-1)*NDDL+I-1) = ZR(IVECTU+(N-1)*NDDL+I-1)
     &                                  + RHO*ZR(IPESA)*ZR(IPESA+I)
     &                                    *VFF(N)*ZR(IPOIDS+KPG-1)*JAC
300       CONTINUE
        ENDIF

C - FIN DE LA BOUCLE SUR LES POINTS DE GAUSS
800   CONTINUE

      END
