      SUBROUTINE SH8RIG(XETEMP,PARA,RE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 03/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C               ELEMENT SHB8
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER IRDC
      REAL*8 EYG(5),PARA(11)
      REAL*8 XE(24),RE(24,24)
      REAL*8 XXG5(5),PXG5(5),XCOQ(3,4),BKSIP(3,8,5),B(3,8)
      REAL*8 XELOC(24),XCENT(3),PPP(3,3)
      REAL*8 XL(3,4),XXX(3),YYY(3),BGLOC(6,24)
      REAL*8 BGLOCT(24,6),TMPTAB(6,24),TMPKE(24,24),CMATLO(6,6)
      REAL*8 XXVB(3),HIJ(6),XKSTAB(24,24),TMPKE2(24,24)
      REAL*8 GB(8,4),GS(8,4),XXGB(3,4)
      REAL*8 XK11(8,8),XK22(8,8),XK33(8,8),RR2(3,3),XK12(8,8)
      REAL*8 XK21(8,8),XK13(8,8),XK23(8,8),XK31(8,8),XK32(8,8)
      REAL*8 LAMBDA,HOUXGB
      REAL*8 XETEMP(*)
C
C
CCCCCCCCCCCCCC ENTREES CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C          ON CALCULE LA MATRICE DE RAIDEUR
C          PARA    PARAMETRES (VOIR te0473.f)
CCCCCCCCCCCCCC SORTIE CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C          RE        MATRICE DE RAIDEUR
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C INITIALISATIONS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C INFOS:
C XE EST RANGE COMME CA:
C (XNOEUD1 YNOEUD1 ZNOEUD1, XNOEUD2 YNOEUD2 ZNOEUD2,...)
C DANS SHB8_TEST_NUM: ATTENTION A LA NUMEROTATION DES NOEUDS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      IF (NOMSHB.EQ.'SHB8') THEN
C
C-----------------------------------------------------------------------
      INTEGER I ,IA ,IETAN ,IP ,J
      REAL*8 AJAC ,COELA1 ,COELA2 ,ELT ,RBID ,TT1 ,TT2
      REAL*8 UNS3 ,UNS8 ,VOL ,XCOOEF ,XK1101 ,XK1102 ,XK2201
      REAL*8 XK2202 ,XK3301 ,XK3302 ,XMU ,XNU ,XXL1 ,XXL2
      REAL*8 YOUNGT ,ZETA ,ZLAMB
C-----------------------------------------------------------------------
      DATA GB/1.D0,1.D0,-1.D0,-1.D0,-1.D0,-1.D0,1.D0,1.D0,1.D0,-1.D0,
     &     -1.D0,1.D0,-1.D0,1.D0,1.D0,-1.D0,1.D0,-1.D0,1.D0,-1.D0,1.D0,
     &     -1.D0,1.D0,-1.D0,-1.D0,1.D0,-1.D0,1.D0,1.D0,-1.D0,1.D0,-1.D0/

C VB: COORD DES NOEUDS DANS REPERE DE REFERENCE

C      DATA VB/-1.D0,1.D0,1.D0,-1.D0,-1.D0,1.D0,1.D0,-1.D0,-1.D0,-1.D0,
C     &    1.D0,1.D0,-1.D0,-1.D0,1.D0,1.D0,-1.D0,-1.D0,-1.D0,-1.D0,1.D0,
C     &    1.D0,1.D0,1.D0/
C
C ON DEFINIT LES POINTS DE GAUSS ET LES POIDS
C
      XXG5(1) = -0.906179845938664D0
      XXG5(2) = -0.538469310105683D0
      XXG5(3) = 0.D0
      XXG5(4) = 0.538469310105683D0
      XXG5(5) = 0.906179845938664D0
C
      PXG5(1) = 0.236926885056189D0
      PXG5(2) = 0.478628670499366D0
      PXG5(3) = 0.568888888888889D0
      PXG5(4) = 0.478628670499366D0
      PXG5(5) = 0.236926885056189D0
C
      UNS8 = 1.D0/8.D0
      UNS3 = 1.D0/3.D0
C
C     ON FAIT UNE COPIE DE XETEMP DANS XE
      DO 10 I = 1,24
         XE(I) = XETEMP(I)
   10 CONTINUE
C TYPE DE LOI DE COMPORTEMENT:
C     IRDC = 1 : SHB8 TYPE PLEXUS
C     IRDC = 2 : C.P.
C     IRDC = 3 : 3D COMPLETE
      IRDC = NINT(PARA(5))
C    WRITE(6,*) 'IRDC=',IRDC
C //\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\
C      IF (OPTION.EQ.'RIGI_MECA') THEN
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                  C
C ON CALCULE LA RAIDEUR : SORTIE DANS RE                           C
C                                                                  C
C SI IETAN = 1 , ALORS ON CALCULE AUSSI                            C
C                LA MATRICE TANGENTE PLASTIQUE                     C
C                                                                  C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IETAN = NINT(PARA(4))
C
C INTIALISATION LONGUEUR DES COTES
C CALCUL DES COEFF D ELANCEMENT A METTRE DANS LA MATRICE DE CPT
C
      XXL1 = 0.D0
      XXL2 = 0.D0
      TT1 = 0.D0
      TT2 = 0.D0
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C STABILISATION ADAPTATIVE EN FONCTION DE LA DISTORTION DE L'ELEMENT
C
      DO 40 I = 1,3
C DISTANCE ENTRE 1 ET 5 (EPAISSEUR)
        TT1 = TT1 + (XE(I+12)-XE(I))**2
C DISTANCE ENTRE 3 ET 7 (EPAISSEUR)
        TT2 = TT2 + (XE(I+18)-XE(I+6))**2
C DISTANCE ENTRE 1 ET 2
        XXL1 = XXL1 + (XE(I+3)-XE(I))**2
C DISTANCE ENTRE 2 ET 3
        XXL2 = XXL2 + (XE(I+6)-XE(I+3))**2
   40 CONTINUE
      XXL1 = SQRT(XXL1)
      XXL2 = SQRT(XXL2)
      TT1 = 0.5D0* (SQRT(TT1)+SQRT(TT2))
      COELA1 = 5.D0/6.D0
      COELA2 = 5.D0/6.D0
C ELANCEMENT DANS DIRECTION 2
      ELT = 6.D0*TT1/XXL1
      IF (COELA1.GT.ELT) COELA1 = ELT
C ELANCEMENT DANS DIRECTION 1
      ELT = 6.D0*TT1/XXL2
      IF (COELA2.GT.ELT) COELA2 = ELT
C POUR L'INSTANT, ON NE MET PAS EN SERVICE:
      COELA1 = 1.D0
      COELA2 = 1.D0
C
      IF (IETAN.EQ.1) THEN
        EYG(1) = PARA(7)
        EYG(2) = PARA(8)
        EYG(3) = PARA(9)
        EYG(4) = PARA(10)
        EYG(5) = PARA(11)
      END IF
      CALL R8INIR(576,0.D0,RE,1)
      CALL R8INIR(36,0.D0,CMATLO,1)
C ON DEFINIT CMATLO: MATRICE DE COMPORTEMENT
C
      XNU = PARA(2)
      LAMBDA = PARA(1)*PARA(2)/(1-PARA(2)*PARA(2))
      XMU = 0.5D0*PARA(1)/(1+PARA(2))
      CMATLO(1,1) = LAMBDA + 2.D0*XMU
      CMATLO(2,2) = LAMBDA + 2.D0*XMU
      IF (IRDC.EQ.1) THEN
C COMPORTEMENT SHB8 PLEXUS
       CMATLO(3,3) = PARA(1)
      END IF
C
      IF (IRDC.EQ.2) THEN
C COMPORTEMENT C.P.
        CMATLO(3,3) = 0.D0
      END IF
C
      CMATLO(1,2) = LAMBDA
      CMATLO(2,1) = LAMBDA
      CMATLO(4,4) = XMU
      CMATLO(5,5) = XMU
      CMATLO(6,6) = XMU
C
      IF (IRDC.EQ.3) THEN
C COMPORTEMENT LOI TRIDIM MMC 3D
C
         XNU = PARA(2)
         XCOOEF = PARA(1)/((1.D0+XNU)*(1-2.D0*XNU))
         CMATLO(1,1) = (1.D0-XNU)*XCOOEF
         CMATLO(2,2) = (1.D0-XNU)*XCOOEF
         CMATLO(3,3) = (1.D0-XNU)*XCOOEF
         CMATLO(1,2) = XNU*XCOOEF
         CMATLO(2,1) = XNU*XCOOEF
         CMATLO(1,3) = XNU*XCOOEF
         CMATLO(3,1) = XNU*XCOOEF
         CMATLO(2,3) = XNU*XCOOEF
         CMATLO(3,2) = XNU*XCOOEF
         CMATLO(4,4) = (1.D0-2.D0*XNU)*0.5D0*XCOOEF
         CMATLO(5,5) = (1.D0-2.D0*XNU)*0.5D0*XCOOEF
         CMATLO(6,6) = (1.D0-2.D0*XNU)*0.5D0*XCOOEF
      END IF

C CALCUL DE BKSIP(3,8,IP) DANS REPERE DE REFERENCE
C      BKSIP(1,*,IP) = VECTEUR BX AU POINT GAUSS IP
C      BKSIP(2,*,IP) = VECTEUR BY AU POINT GAUSS IP
C      BKSIP(3,*,IP) = VECTEUR BZ AU POINT GAUSS IP
C
      CALL SHBKSI(5,XXG5,BKSIP)
C
C DEBUT DE LA BOUCLE SUR LES 5 PTS GAUSS
C
      DO 160 IP = 1,5
C
C DEFINITION DES 4 POINTS  COQUES
C
        ZETA = XXG5(IP)
        ZLAMB = 0.5D0* (1.D0-ZETA)
        DO 70 I = 1,4
          DO 60 J = 1,3
            XCOQ(J,I) = ZLAMB*XE((I-1)*3+J) +
     &                  (1.D0-ZLAMB)*XE((I-1+4)*3+J)
   60     CONTINUE
   70   CONTINUE

C CALCUL DE PPP 3*3 PASSAGE DE GLOBAL A LOCAL,COQUE
C XCENT : COORD GLOBAL DU CENTRE DE L'ELEMENT
C
        CALL RLOSHB(XCOQ,XCENT,PPP,XL,XXX,YYY,RBID)
C
C CALCUL DE B EN GLOBAL
C ATTENTION A L'ORDRE DE EPSILON:
C  FARID DANS SON PAPIER: 11 22 33 12 13 23
C  HARID DANS PLEXUS:     11 22 33 12 23 13
C ON RAJOUTE LES TERMES H1,X . G1  , H2,X . G2
C                   ET  H1,Y . G1  , H2,Y . G2
C AVEC H1   = Y.Z    H2   = X.Z
C DONC H1,X =0       H2,X = Z
C ET   H1,Y =Z       H2,Y = 0
C
C DONC IL NE RESTE PLUS QU'A CALCULER G1 ET G2, ET A AJOUTER A BKSIP
C
        CALL SHCALB(BKSIP(1,1,IP),XE,B,AJAC)
C
C IL FAUT:  EPS_LOCAL=BGLOB .U_NODAL_GLOBAL
C ON CALCULE BGLOC LA MATRICE B(6,24) UGLOBAL ---> EPS LOCAL
C
        CALL SHASBG(BGLOC,B,PPP)
C
C IL FAUT TRANSPOSER BGLOC
C
        DO 90 I = 1,6
          DO 80 J = 1,24
            BGLOCT(J,I) = BGLOC(I,J)
   80     CONTINUE
   90   CONTINUE
C IL NE RESTE PLUS QU'A FAIRE: BGLOCT * C * BGLOC
        CALL R8INIR(144,0.D0,TMPTAB,1)
        CALL R8INIR(576,0.D0,TMPKE,1)
        CALL R8INIR(576,0.D0,TMPKE2,1)
        CALL MULMAT(6,6,24,CMATLO,BGLOC,TMPTAB)
        CALL MULMAT(24,6,24,BGLOCT,TMPTAB,TMPKE2)
C
C ASSEMBLAGE: KE=KE + POIDS*JACOBIAN*TMPKE
C
        DO 110 J = 1,8
          DO 100 I = 1,24
            TMPKE(I, (J-1)*3+1) = TMPKE2(I,J)
            TMPKE(I, (J-1)*3+2) = TMPKE2(I,J+8)
            TMPKE(I, (J-1)*3+3) = TMPKE2(I,J+16)
  100     CONTINUE
  110   CONTINUE
C
        CALL R8INIR(576,0.D0,TMPKE2,1)
        DO 130 I = 1,8
          DO 120 J = 1,24
            TMPKE2((I-1)*3+1,J) = TMPKE(I,J)
            TMPKE2((I-1)*3+2,J) = TMPKE(I+8,J)
            TMPKE2((I-1)*3+3,J) = TMPKE(I+16,J)
  120     CONTINUE
  130   CONTINUE
        DO 150 J = 1,24
          DO 140 I = 1,24
            RE(I,J) = RE(I,J) + 4.D0*AJAC*PXG5(IP)*TMPKE2(I,J)
  140     CONTINUE
  150   CONTINUE
  160 CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                  C
C MATRICE DE STABILISATION : PAS DE BOUCLE SUR LES POINTS DE GAUSS C
C                                                                  C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  ON A BESOIN DES VECTEURS GAMMA(8, ALPHA=1 A 4) = GS(8,4)
C
      DO 170 I = 1,24
         XELOC(I) = XE(I)
  170 CONTINUE
C
C ATTENTION, RR, MATRICE DU CORROTATIONNEL EST RANGEE PAR LIGNES!
C
      CALL SHBROT(XELOC,RR2)
      CALL SHVROT(RR2,XELOC,1)
      CALL SHBBAR(XELOC,B,VOL)
C
C CALCUL DES FONCTIONS DE FORME  GS
C XXGB = X  * GB
C
      DO 190 J = 1,3
        DO 180 IA = 1,4
          XXGB(J,IA) = HOUXGB(XELOC(J),IA)
  180   CONTINUE
  190 CONTINUE
C
C GS = (BBB)  * XXGB
C
      DO 210 I = 1,8
         DO 200 J = 1,4
            GS(I,J) = 0.D0
  200    CONTINUE
  210 CONTINUE
      DO 240 J = 1,3
         DO 230 IA = 1,4
           DO 220 I = 1,8
             GS(I,IA) = GS(I,IA) + B(J,I)*XXGB(J,IA)
  220      CONTINUE
  230    CONTINUE
  240 CONTINUE
C
C GS = GB - GS
C
      DO 260 I = 1,4
        DO 250 J = 1,8
           GS(J,I) = (GB(J,I)-GS(J,I))*UNS8
  250   CONTINUE
  260 CONTINUE
C
C CALCUL DE XXVB = X * VB
C
      XXVB(1) = -XELOC(1) + XELOC(4) + XELOC(7) - XELOC(10) -
     &            XELOC(13) + XELOC(16) + XELOC(19) - XELOC(22)
      XXVB(2) = -XELOC(2) - XELOC(5) + XELOC(8) + XELOC(11) -
     &            XELOC(14) - XELOC(17) + XELOC(20) + XELOC(23)
      XXVB(3) = -XELOC(3) - XELOC(6) - XELOC(9) - XELOC(12) +
     &            XELOC(15) + XELOC(18) + XELOC(21) + XELOC(24)
C
C CALCUL DES RELATIONS CONTRAINTES ET DEFORMATIONS GENERALISEES
C
      HIJ(1) = UNS3*XXVB(2)*XXVB(3)/XXVB(1)
      HIJ(2) = UNS3*XXVB(1)*XXVB(3)/XXVB(2)
      HIJ(3) = UNS3*XXVB(2)*XXVB(1)/XXVB(3)
      HIJ(4) = UNS3*XXVB(3)
      HIJ(5) = UNS3*XXVB(1)
      HIJ(6) = UNS3*XXVB(2)
C
C CALCUL DES COEFS A METTRE DANS KIJ POUR COMPOSER KSTAB
C
C   ICI IL FAUT PRENDRE LA MOYENNE DES MODULES D'YOUNG TANGENTS
C
C POUR LE SHB8 PLASTIQUE ET NON_LINEAIRE, METTRE IETAN A 1 DANS RIGID.FF
C SINON METTRE IETAN A 0
C
      IF (IETAN.EQ.1) THEN
          YOUNGT = (EYG(1)+EYG(2)+EYG(3)+EYG(4)+EYG(5))/5.D0
      ELSE
          YOUNGT = PARA(1)
      END IF
C POUR RESOUDRE LE CISAILLEMENT TRANSVERSE:

      YOUNGT = YOUNGT*0.5D0*(COELA1+COELA2)
      LAMBDA = YOUNGT*PARA(2)/(1-PARA(2)*PARA(2))
      XMU = 0.5D0*YOUNGT/(1+PARA(2))
      XK1101 = (LAMBDA+2.D0*XMU)*HIJ(1)
      XK1102 = UNS3*((LAMBDA+2.D0*XMU)*HIJ(1))
      XK2201 = (LAMBDA+2.D0*XMU)*HIJ(2)
      XK2202 = UNS3*((LAMBDA+2.D0*XMU)*HIJ(2))
      XK3301 = 0.D0
      IF (IRDC.EQ.1) THEN
C COMPORTEMENT SHB8 PLEXUS
C****          XK3302 = YOUNGT*HIJ(3)*UNS3
          XK3302 = XMU*HIJ(1)*UNS3
      END IF
C
      IF (IRDC.EQ.2) THEN
C COMPORTEMENT C.P.
          XK3302 = 0.D0
      END IF
C
      IF (IRDC.EQ.3) THEN
C COMPORTEMENT LOI TRIDIM MMC 3D
          XK1101 = XCOOEF* (1-XNU)*HIJ(1)
          XK1102 = UNS3* (XCOOEF* (1-XNU)*HIJ(1))
          XK2201 = XCOOEF* (1-XNU)*HIJ(2)
          XK2202 = UNS3* (XCOOEF* (1-XNU)*HIJ(2))
          XK3301 = 0.D0
          XK3302 = XCOOEF* (1-XNU)*HIJ(3)*UNS3
      END IF
      CALL R8INIR(64,0.D0,XK12,1)
      CALL R8INIR(64,0.D0,XK21,1)
      CALL R8INIR(64,0.D0,XK13,1)
      CALL R8INIR(64,0.D0,XK23,1)
      CALL R8INIR(64,0.D0,XK31,1)
      CALL R8INIR(64,0.D0,XK32,1)
      CALL R8INIR(64,0.D0,XK33,1)
      DO 280 J = 1,8
         DO 270 I = 1,8
C
C IL FAUT CALCULER K11 K22 K33 MATRICES 8*8
C
            XK11(I,J) = XK1101*GS(I,3)*GS(J,3) + XK1102*GS(I,4)*GS(J,4)
            XK22(I,J) = XK2201*GS(I,3)*GS(J,3) + XK2202*GS(I,4)*GS(J,4)
            XK33(I,J) = XK3301*GS(I,3)*GS(J,3) + XK3302*GS(I,4)*GS(J,4)
  270    CONTINUE
  280 CONTINUE
C
C ASSEMBLAGE DE KSTAB
C
      CALL SHAKST(XKSTAB,XK11,XK22,XK33,XK12,XK21,XK13,XK23,XK31,
     &                  XK32)
C
C REMISE EN ORDRE DE KSTAB
C
      DO 300 J = 1,8
        DO 290 I = 1,24
          TMPKE(I, (J-1)*3+1) = XKSTAB(I,J)
          TMPKE(I, (J-1)*3+2) = XKSTAB(I,J+8)
          TMPKE(I, (J-1)*3+3) = XKSTAB(I,J+16)
  290   CONTINUE
  300 CONTINUE
C
      CALL R8INIR(576,0.D0,XKSTAB,1)
      DO 320 I = 1,8
         DO 310 J = 1,24
           XKSTAB((I-1)*3+1,J) = TMPKE(I,J)
           XKSTAB((I-1)*3+2,J) = TMPKE(I+8,J)
           XKSTAB((I-1)*3+3,J) = TMPKE(I+16,J)
  310    CONTINUE
  320 CONTINUE
C
C IL FAUT REPASSER DANS LE REPERE GLOBAL AVEC RR2^T . KSTAB . RR2
C EN FAIT C'EST RR2. KSTAB .RR2^T CAR RR2 RANGEE PAR LIGNES
C
      CALL SHAKSG(XKSTAB,RR2)
C
C RAJOUT DE KSTAB A KE

      DO 340 J = 1,24
         DO 330 I = 1,24
           RE(I,J) = RE(I,J) + XKSTAB(I,J)
  330    CONTINUE
  340 CONTINUE
C
C      K = 0
C      DO 750 I = 1,24
C          DO 740 J = 1,I
C            K = K + 1
C            REV(K) = RE(I,J)
C  740     CONTINUE
C  750 CONTINUE
      END
