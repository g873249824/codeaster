      SUBROUTINE POSIGR(NOMTE,KLC,E,XNU,RHO,ALPHAT,EFGE,SIGM)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*(*) NOMTE
      REAL*8 KLC(12,12),E,XNU,RHO,ALPHAT,SIGM(*)
      REAL*8 EFGE(12)
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 29/02/2000   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     CALCUL DU VECTEUR ELEMENTAIRE CONTRAINTE REEL
C     POUR LES ELEMENTS DE POUTRE D'EULER ET DE TIMOSHENKO.
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

C     ------------------------------------------------------------------
      ZERO = 0.D0
      UN = 1.D0
      DEUX = 2.D0
C     ------------------------------------------------------------------

C     --- RECUPERATION DES CARACTERISTIQUES GENERALES DES SECTIONS ---

      CALL JEVECH('PCAGNPO','L',LSECT)
      LSECT = LSECT - 1
C     --- SECTION INITIALE ---
      A = ZR(LSECT+1)
      XIY = ZR(LSECT+2)
      XIZ = ZR(LSECT+3)
      ALFAY = ZR(LSECT+4)
      ALFAZ = ZR(LSECT+5)
      XJX = ZR(LSECT+8)
      RY = ZR(LSECT+9)
      RZ = ZR(LSECT+10)
      RT = ZR(LSECT+11)
C     --- SECTION FINALE ---
      LSECT2 = LSECT + 11
      A2 = ZR(LSECT2+1)
      XIY2 = ZR(LSECT2+2)
      XIZ2 = ZR(LSECT2+3)
      ALFAY2 = ZR(LSECT2+4)
      ALFAZ2 = ZR(LSECT2+5)
      XJX2 = ZR(LSECT2+8)
      RY2 = ZR(LSECT2+9)
      RZ2 = ZR(LSECT2+10)
      RT2 = ZR(LSECT2+11)

      IF (NOMTE.EQ.'MECA_POU_D_E') THEN
        ALFAY = ZERO
        ALFAZ = ZERO
        ALFAY2 = ZERO
        ALFAZ2 = ZERO
      ELSE IF (NOMTE.EQ.'MECA_POU_C_T') THEN
        CALL JEVECH('PCAARPO','L',LRCOU)
        XFL = ZR(LRCOU+2)
        XSI = ZR(LRCOU+3)
        XFLY = XFL
        XFLZ = XFL
        XSIY = XSI
        XSIZ = XSI
        IF (XFL.EQ.ZERO) THEN
          XFLY = ZR(LRCOU+4)
          XSIY = ZR(LRCOU+5)
          XFLZ = ZR(LRCOU+6)
          XSIZ = ZR(LRCOU+7)
        END IF
        XIY = XIY/XFLY
        XIZ = XIZ/XFLZ
        XIY2 = XIY2/XFLY
        XIZ2 = XIZ2/XFLZ

C        PRISE EN COMPTE DE L'INDICE DE CONTRAINTES

        XXY = XSIY/XFLY
        XXZ = XSIZ/XFLZ
        XIY = XIY/XXY
        XIZ = XIZ/XXZ
        XIY2 = XIY2/XXY
        XIZ2 = XIZ2/XXZ
      END IF

C     --- CARACTERISTIQUES DES SECTIONS CERCLE ET RECTANGLE

      CALL JEVECH('PCAGEPO','L',LSECR)
      LSECR = LSECR - 1
      ITSEC = NINT(ZR(LSECR+13))
      IF (ITSEC.EQ.1) THEN
C        --- SECTION RECTANGULAIRE SECTION INITIALE
        HY1 = ZR(LSECR+1)
        HZ1 = ZR(LSECR+2)
C        --- SECTION RECTANGULAIRE SECTION FINALE
        HY2 = ZR(LSECR+5)
        HZ2 = ZR(LSECR+6)
      ELSE IF (ITSEC.EQ.2) THEN
C        --- SECTION CIRCULAIRE SECTIONS INITIALE ET FINALE
        R1 = ZR(LSECR+9)
        R2 = ZR(LSECR+11)
      END IF

C      --- CARACTERISTIQUES DES SECTIONS D EXTREMITE DE L ELEMENT

      AREDY = A
      AREDZ = A
      AREDY2 = A2
      AREDZ2 = A2
      IF (ALFAY.NE.ZERO) AREDY = A/ALFAY
      IF (ALFAZ.NE.ZERO) AREDZ = A/ALFAZ
      IF (ALFAY2.NE.ZERO) AREDY2 = A2/ALFAY2
      IF (ALFAZ2.NE.ZERO) AREDZ2 = A2/ALFAZ2

C     SXX CALCULE A PARTIR DES 2 FLEXIONS ET DE L'EFFORT NORMAL
C     SYY = SZZ = SYZ = 0
C     SXY ET SXZ : DUS A L'EFFORT TRANCHANT ET A LA TORSION

      SIGM(2) = ZERO
      SIGM(3) = ZERO
      SIGM(4) = - (EFGE(2)/AREDY) - (EFGE(4)/XJX*RT)
      SIGM(5) = - (EFGE(3)/AREDZ) - (EFGE(4)/XJX*RT)
      SIGM(6) = ZERO

      SIGM(8) = ZERO
      SIGM(9) = ZERO
      SIGM(10) = (EFGE(8)/AREDY2) + (EFGE(10)/XJX2*RT2)
      SIGM(11) = (EFGE(9)/AREDZ2) + (EFGE(10)/XJX2*RT2)
      SIGM(12) = ZERO

C     CALCUL DES CONTRAINTES. SXX MAXI SUIVANT LA FORME DE SECTION
C     CONTRAINTES EN REPERE LOCAL

C     SXX CALCULE A PARTIR DES 2 FLEXIONS ET DE L'EFFORT NORMAL

C     ON CALCULE LE MAXI EN VALEUR ABSOLUE ET ON LUI AFFECTE LE
C     SIGNE DE L'EFFORT NORMAL

      SN1 = -EFGE(1)/A
      IF (SN1.GE.ZERO) THEN
        SGNSN1 = UN
      ELSE
        SGNSN1 = -1.D0
      END IF
      SN2 = EFGE(7)/A2
      IF (SN2.GE.ZERO) THEN
        SGNSN2 = UN
      ELSE
        SGNSN2 = -1.D0
      END IF

C     --- SECTION RECTANGULAIRE: LE MAX EST OBTENU SUR UN DES COINS
C         CE QUI REVIENT A PRENDRE LA VALEUR ABSOLUE (SIGNEE)

      IF (ITSEC.EQ.1) THEN
        SMFY1 = ABS(EFGE(5)/XIY*HZ1/DEUX)
        SMFZ1 = ABS(EFGE(6)/XIZ*HY1/DEUX)
        SMFY2 = ABS(EFGE(11)/XIY2*HZ2/DEUX)
        SMFZ2 = ABS(EFGE(12)/XIZ2*HY2/DEUX)
        SIGM(1) = SGNSN1* (ABS(SN1)+SMFY1+SMFZ1)
        SIGM(7) = SGNSN2* (ABS(SN2)+SMFY2+SMFZ2)

C     --- SECTION CIRCULAIRE: XIY = XIZ.

      ELSE IF (ITSEC.EQ.2) THEN
        SMF1 = (R1/XIY)*SQRT(EFGE(5)**2+EFGE(6)**2)
        SMF2 = (R2/XIY2)*SQRT(EFGE(11)**2+EFGE(12)**2)
        SIGM(1) = SGNSN1* (ABS(SN1)+SMF1)
        SIGM(7) = SGNSN2* (ABS(SN2)+SMF2)

C     --- SECTION GENERALE: ON DONNE SXX AU POINT (RY,RZ)

      ELSE IF (ITSEC.EQ.0) THEN
        SIGM(1) = -EFGE(1)/A - EFGE(5)/XIY*RZ + EFGE(6)/XIZ*RY
        SIGM(7) = EFGE(7)/A2 + EFGE(11)/XIY2*RZ2 - EFGE(12)/XIZ2*RY2
      END IF

      END
