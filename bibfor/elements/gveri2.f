      SUBROUTINE GVERI2(CHFOND,LOBJ2,NOMNO,COORN,
     &       TRAV1,TRAV2,TRAV3,THLAGR,NDEG)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 29/08/2005   AUTEUR GALENNE E.GALENNE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
C     ------------------------------------------------------------------
C
C FONCTION REALISEE:
C
C     METHODE THETA_LAGRANGE
C
C     POUR CHAQUE NOEUD DU FOND DE FISSURE GAMM0 ON RECUPERE
C     LE TRIPLET ( DEGRE DES POLYNOMES DE LEGENDRE, RINF, RSUP )
C
C     PUIS ON CALCULE LE MODULE DE THETA
C
C                  ---------------------------------
C
C     METHODE THETA_LEGENDRE
C
C     POUR CHAQUE NOEUD DU FOND DE FISSURE GAMM0 ON RECUPERE
C     LE TRIPLET ( DEGRE DES POLYNOMES DE LEGENDRE, RINF, RSUP )
C
C
C     ------------------------------------------------------------------
C ENTRE
C        CHFOND : NOMS DES NOEUDS
C        LOBJ2  : NOMBRE DE NOEUD DE GAMM0
C        NOMNO  : NOM DE L'OBJET CONTENANT LES NOMS DES NOEUDS
C        COORN  : NOM DE L'OBJET CONTENANT LES COORDONNEES DES NOEUDS
C        THLAGR : SI THETA_LAGRANGE  THLAGR = .TRUE.
C        NDEG   : DEGRE DES POLYNOMES DE LEGENDRE
C
C SORTIE:
C        RINF          ( OBJET TRAV1 )
C        RSUP          ( OBJET TRAV2 )
C        MODULE(THETA) ( OBJET TRAV3 )
C     ------------------------------------------------------------------
C
      CHARACTER*24      OBJ1
      CHARACTER*24      OBJ2
      CHARACTER*24      TRAV
      CHARACTER*24      TRAV0
      CHARACTER*24      TRAV1
      CHARACTER*24      TRAV2
      CHARACTER*24      TRAV3
      CHARACTER*24      CHFOND
      CHARACTER*24      GRPNO,NOMNO,COORN,ABSGAM
      CHARACTER*8       NOEUD,MODELE,NOEUD1
      CHARACTER*8       NOMPAR(1),RINFF,RSUPF,THETF
      CHARACTER*6       CHAINE
      CHARACTER*16      MOTFAC
C
      INTEGER           JJJ,NGRO,NENT,NSOM,IOCC,NOCC,NDIM,LOBJ2
      INTEGER           IGR,NGR,INO,NNO,IRET,COMPT,NBPAR,ITO,NTO,NOUI
      INTEGER           NBM,NBMF,IADRNO,IADRCO,IADRT0,IADRT1,IADRT2
      INTEGER           CANOEU,NDEG,NBRE,IADRT3
C
      REAL*8            RINF,RSUP,THET,XL,VALPAR(1)
C
      LOGICAL           THLAGR
C
C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON/IVARJE/ZI(1)
      COMMON/RVARJE/ZR(1)
      COMMON/CVARJE/ZC(1)
      COMMON/LVARJE/ZL(1)
      COMMON/KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8  ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32,JEXNOM,JEXNUM
      CHARACTER*80 ZK80
C---------------- FIN COMMUNS NORMALISES  JEVEUX  ----------------------
C
C
      CALL JEMARQ()
      CALL JEVEUO(CHFOND,'L',IADRNO)
      CALL JEVEUO(COORN,'L',IADRCO)
      IF(THLAGR) THEN
        NBRE   = LOBJ2 - 1
      ELSE
        NBRE = NDEG
        IF(NDEG.GT.7) THEN
          CALL UTMESS('F','GVERI2','LE DEGRE DU POLYNOME DOIT ETRE
     &                      AU PLUS EGAL A 7 ')
        ENDIF
      ENDIF
C
C OBJET DEFINISSANT LES GROUP_NO DU MAILLAGE
C
C
C ALLOCATION DE 3 OBJETS DE TRAVAIL
C
      TRAV0 = '&&VERIFG.GAM0'//'           '
      TRAV1 = '&&VERIFG.RINF'//'           '
      TRAV2 = '&&VERIFG.RSUP'//'           '
      TRAV3 = '&&VERIFG.THET'//'           '
      CALL WKVECT(TRAV0,'V V K8',LOBJ2,IADRT0)
      CALL WKVECT(TRAV1,'V V R',LOBJ2,IADRT1)
      CALL WKVECT(TRAV2,'V V R',LOBJ2,IADRT2)
      CALL WKVECT(TRAV3,'V V R',(NBRE+1)*LOBJ2,IADRT3)
C
      CALL GETVR8 (' ', 'R_INF', 0, 1, 1,RINF, NR)
      CALL GETVR8 (' ', 'R_SUP', 0, 1, 1,RSUP, NR)
      CALL GETVID (' ', 'R_INF_FO', 0, 1, 1,RINFF, NRF)
      CALL GETVID (' ', 'R_SUP_FO', 0, 1, 1,RSUPF, NRF)
C
      CALL GABSCU(LOBJ2,COORN,NOMNO,CHFOND,XL,ABSGAM)
      CALL JEVEUO(ABSGAM,'L',IADABS)
C
      IF(.NOT.THLAGR) THEN
C
C METHODE THETA_LEGENDRE
C
         DO 50 J=1,LOBJ2
              ZK8(IADRT0 + J - 1) = ZK8(IADRNO + J - 1)
              IF (NR.NE.0) THEN
                ZR(IADRT1 + J - 1) = RINF
                ZR(IADRT2 + J - 1) = RSUP
              ELSE IF (NRF.NE.0) THEN
                 NBPAR = 1
                 NOMPAR(1) = 'ABSC'
                 VALPAR(1) = ZR(IADABS + J - 1)
                 CALL FOINTE('FM',RINFF,NBPAR,NOMPAR,VALPAR,VALRES,IER)
                 ZR(IADRT1 + J - 1) = VALRES
                 CALL FOINTE('FM',RSUPF,NBPAR,NOMPAR,VALPAR,VALRES,IER)
                 ZR(IADRT2 + J - 1) = VALRES
             ELSE
                CALL UTMESS('F','GVERI2','PROBLEME DANS RINF ET RSUP ')
             ENDIF
50       CONTINUE
C
         CALL GLEGEN(NBRE,LOBJ2,XL,ABSGAM,ZR(IADRT3))
C
C
      ELSE IF(THLAGR) THEN
C
C METHODE THETA_LAGRANGE
C
         DO 60 J=1,LOBJ2
              ZK8(IADRT0 + J - 1) = ZK8(IADRNO + J - 1)
              IF (NR.NE.0) THEN
                ZR(IADRT1 + J - 1) = RINF
                ZR(IADRT2 + J - 1) = RSUP
              ELSE IF (NRF.NE.0) THEN
                 NBPAR = 1
                 NOMPAR(1) = 'ABSC'
                 VALPAR(1) = ZR(IADABS + J - 1)
                 CALL FOINTE('FM',RINFF,NBPAR,NOMPAR,VALPAR,VALRES,IER)
                 ZR(IADRT1 + J - 1) = VALRES
                 CALL FOINTE('FM',RSUPF,NBPAR,NOMPAR,VALPAR,VALRES,IER)
                 ZR(IADRT2 + J - 1) = VALRES
             ELSE
                CALL UTMESS('F','GVERI2','PROBLEME DANS RINF ET RSUP ')
             ENDIF
60       CONTINUE
C
      ENDIF
C
      CALL JEDETR (ABSGAM)
      CALL JEDETR (TRAV0)
C
      CALL JEDEMA()
      END
