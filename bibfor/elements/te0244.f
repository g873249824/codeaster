      SUBROUTINE TE0244 ( OPTION , NOMTE )
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 29/09/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ----------------------------------------------------------------------
C    - FONCTION REALISEE:  CALCUL DES VECTEURS ELEMENTAIRES
C                          OPTION : 'CHAR_THER_EVOLNI'
C                                   'CHAR_SENS_EVOLNI'
C                          ELEMENTS 2D ISOPARAMETRIQUES
C
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C
C THERMIQUE NON LINEAIRE LUMPE SANS HYDRATATION, NI SECHAGE
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C       05/03/02 (OB): MODIFICATIONS POUR INSERER LES ARGUMENTS OPTION
C        NELS PERMETTANT D'UTILISER CETTE ROUTINE POUR CALCULER LA
C        SENSIBILITE PAR RAPPORT AUX CARACTERISTIQUES MATERIAU.
C        + MODIFS FORMELLES: IMPLICIT NONE, IDENTATION...
C        + DEPLACER LE NTFCMA DU PB STD MIS INITIALEMENT DANS LA
C          BOUCLE DE RIGIDITE ET SUPPRESSION DE CELUI DE LA MASSE
C----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE

C PARAMETRES D'APPEL
      CHARACTER*16       NOMTE,OPTION

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      CHARACTER*8        ELREFE
      REAL*8        BETA,DBETA,LAMBDA,R8BID,DFDX(9),DFDY(9),POIDS,TPGM,
     &              R,TPG,THETA,DELTAT,DTPGDX,DTPGDY,COORSE(18),TPGBUF,
     &              VECTT(9),VECTI(9),LAMBS,TEMS,DLAMBD,FLUXS(2),
     &              CPS,PREC,R8PREM,DTPGMX,DTPGMY,DTPGPX,DTPGPY,
     &              DIFF,TPSEC
      INTEGER       NDIM,NNO,NNOS,KP,NPG,I,J,K,ITEMPS,JGANO,
     &              IPOIDS,IVF,IDFDE,IGEOM,IMATE,ICOMP,IFON(3),
     &              ITEMP,IVECTT,IVECTI,C(6,9),ISE,NSE,NNOP2,IMATSE,
     &              IVAPRI,IVAPRM,IFONS(3),TETYPS,IFM,NIV,IRET,
     &              NPG2,IPOID2,IVF2,IDFDE2,ISECHF,ISECHI
      LOGICAL       LSENS,LSTAT,LAXI,LTEATT

C====
C 1.1 PREALABLES: RECUPERATION ADRESSES FONCTIONS DE FORMES...
C====
      CALL ELREF1(ELREFE)
      IF (NOMTE(5:7).EQ.'QL9') ELREFE='QU4'
      IF (NOMTE(5:7).EQ.'TL6') ELREFE='TR3'
C
      CALL ELREF4(ELREFE,'NOEU',NDIM,NNO,NNOS,NPG2,IPOID2,IVF2,IDFDE2,
     &            JGANO)
      CALL ELREF4(ELREFE,'RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,
     &            JGANO)

      PREC = R8PREM()*10.D0
      IF (LTEATT(' ','AXIS','OUI')) THEN
        LAXI = .TRUE.
      ELSE
        LAXI = .FALSE.
      ENDIF
      IF (OPTION(6:9).EQ.'SENS') THEN
        LSENS = .TRUE.
      ELSE IF (OPTION(6:9).EQ.'THER') THEN
        LSENS = .FALSE.
      ELSE
        CALL U2MESS('F','ELEMENTS2_95')
      ENDIF

C====
C 1.2 PREALABLES LIES AUX CALCULS DE SENSIBILITE PART I
C====

      LSTAT = .FALSE.
      IMATSE = 0
      IF (LSENS) THEN
        CALL TECACH('ONN','PMATSEN',1,IMATSE,IRET)
        CALL JEVECH('PVAPRIN','L',IVAPRI)
        CALL TECACH('ONN','PVAPRMO',1,IVAPRM,IRET)
C DANS LE CAS DES DERIVEES MATERIAUX:
C L'ABSENCE DE CE CHAMP DETERMINE LE CRITERE STATIONNAIRE OU PAS
C ON "TRUANDE" ALORS DE MANIERE PEU OPTIMALE MAIS FACILE A MAINTE
C NIR: CP ET/OU CPS SONT ANNULES ET ON CREE UN CHAMP T- BIDON.
        IF (IVAPRM.EQ.0) THEN
          LSTAT = .TRUE.
          IVAPRM = IVAPRI
        ENDIF
      ENDIF

C====
C 1.3 PREALABLES LIES AUX RECHERCHES DE DONNEES GENERALES
C====

      CALL JEVECH('PGEOMER','L',IGEOM )
      CALL JEVECH('PMATERC','L',IMATE )
      CALL JEVECH('PTEMPSR','L',ITEMPS)
      IF (.NOT.LSTAT) CALL JEVECH('PTEMPER','L',ITEMP )
      CALL JEVECH('PCOMPOR','L',ICOMP)
      CALL JEVECH('PVECTTR','E',IVECTT)
      CALL JEVECH('PVECTTI','E',IVECTI)

C====
C 1.4 PREALABLES LIES A L'HYDRATATION ET AU SECHAGE
C====
       IF(ZK16(ICOMP)(1:5).EQ.'SECH_') THEN
         IF (LSENS) CALL U2MESS('F','ALGORITH9_67')
         IF(ZK16(ICOMP)(1:12).EQ.'SECH_GRANGER'.OR.
     &      ZK16(ICOMP)(1:10).EQ.'SECH_NAPPE') THEN
           CALL JEVECH('PTMPCHI','L',ISECHI)
           CALL JEVECH('PTMPCHF','L',ISECHF)
         ELSE
C          POUR LES AUTRES LOIS, PAS DE CHAMP DE TEMPERATURE
C          ISECHI ET ISECHF SONT FICTIFS
           ISECHI = ITEMP
           ISECHF = ITEMP
         ENDIF
      ENDIF

      IF ( (ZK16(ICOMP)(1:9).EQ.'THER_HYDR')) THEN
        CALL U2MESS('F','ELEMENTS3_57')
      ENDIF

      DELTAT = ZR(ITEMPS+1)
      THETA  = ZR(ITEMPS+2)
      IF(ZK16(ICOMP)(1:5).NE.'SECH_') THEN
         CALL NTFCMA (ZI(IMATE),IFON)
      ENDIF

C====
C 1.5 PREALABLES LIES AUX CALCULS DE SENSIBILITE PART II
C     (NE CONCERNE QUE LES DERIVES MATERIAU AVEC UN IMATSE NON NUL)
C====

      TETYPS = 0
      IF (IMATSE.NE.0) THEN
        CALL INFNIV(IFM,NIV)
        CALL NTFCMA(ZI(IMATSE),IFONS)
        TPG = 0.D0
        IF (LSTAT) THEN
          CALL RCFODE(IFONS(2),TPG,LAMBS,R8BID)
          CPS    = 0.D0
        ELSE
          CALL RCFODE(IFONS(1),TPG,R8BID,CPS)
          CALL RCFODE(IFONS(2),TPG,LAMBS,R8BID)
        ENDIF
        IF ((ABS(CPS).LT.PREC).AND.(ABS(LAMBS).LT.PREC)) THEN
C PAS DE TERME DE SENSIBILITE SUPPLEMENTAIRE, CALCUL INSENSIBLE
          TETYPS = 0
        ELSE IF (ABS(LAMBS).LT.PREC) THEN
C SENSIBILITE PAR RAPPORT A RHO_CP
          TETYPS = 2
        ELSE IF (CPS.LT.PREC) THEN
C SENSIBILITE PAR RAPPORT A LAMBDA
          TETYPS = 1
        ELSE
          CALL U2MESS('F','ELEMENTS3_52')
        ENDIF
        IF (NIV.EQ.2) THEN
          WRITE(IFM,*)'   CPS/LAMBS :',CPS,LAMBS
        ENDIF
      ENDIF

C====
C 1.6 PREALABLES LIES AUX ELEMENTS LUMPES
C====
C  CALCUL ISO-P2 : ELTS P2 DECOMPOSES EN SOUS-ELTS LINEAIRES

      CALL CONNEC(NOMTE,NSE,NNOP2,C)
      DO 10 I=1,NNOP2
        VECTT(I)=0.D0
        VECTI(I)=0.D0
10    CONTINUE

C====
C 2. CALCULS DU TERME DE RIGIDITE DE L'OPTION (PB STD OU SENSIBLE)
C====
C ----- 2EME FAMILLE DE PTS DE GAUSS/BOUCLE SUR LES SOUS-ELEMENTS

      DO 200 ISE=1,NSE

        IF (ZK16(ICOMP)(1:5).EQ.'THER_') THEN

        DO 305 I=1,NNO
          DO 305 J=1,2
            COORSE(2*(I-1)+J) = ZR(IGEOM-1+2*(C(ISE,I)-1)+J)
305     CONTINUE

        DO 301 KP=1,NPG
          K=(KP-1)*NNO
          CALL DFDM2D ( NNO,KP,IPOIDS,IDFDE,COORSE,DFDX,DFDY,POIDS )
          R      = 0.D0
          TPG    = 0.D0
          DTPGDX = 0.D0
          DTPGDY = 0.D0
          IF (.NOT.LSTAT) THEN
            DO 302 I=1,NNO
C CALCUL DE T- (OU (DT/DS)- EN SENSI) ET DE SON GRADIENT
              TPG    = TPG    + ZR(ITEMP-1+C(ISE,I))  * ZR(IVF+K+I-1)
              DTPGDX = DTPGDX + ZR(ITEMP-1+C(ISE,I))  * DFDX(I)
              DTPGDY = DTPGDY + ZR(ITEMP-1+C(ISE,I))  * DFDY(I)
302         CONTINUE
          ENDIF
          IF (LAXI) THEN
            DO 303 I=1,NNO
C CALCUL DE R POUR JACOBIEN
              R      = R      + COORSE(2*(I-1)+1)     * ZR(IVF+K+I-1)
303         CONTINUE
            POIDS = POIDS*R
          ENDIF

C CALCUL DE SENSIBILITE PART III
          IF (LSENS) THEN
            DTPGMX  = 0.D0
            DTPGMY  = 0.D0
            DTPGPX  = 0.D0
            DTPGPY  = 0.D0
            TPGM    = 0.D0
          ENDIF
          IF (TETYPS.EQ.1) THEN
            DO 304 I=1,NNO
C CALCUL DE GRAD(T+) POUR TERME DE RIGIDITE. LE TERME GRAD(T-)
C EST CALCULE SI NECESSAIRE CI-DESSOUS.
              DTPGPX = DTPGPX  + ZR(IVAPRI-1+C(ISE,I)) * DFDX(I)
              DTPGPY = DTPGPY  + ZR(IVAPRI-1+C(ISE,I)) * DFDY(I)
304         CONTINUE
          ENDIF
          IF (LSENS.AND.(.NOT.LSTAT)) THEN
            DO 306 I=1,NNO
C CALCUL DE GRAD(T-) POUR TERME COMPLEMENTAIRE EN DLAMBDA/DT
              DTPGMX = DTPGMX  + ZR(IVAPRM-1+C(ISE,I)) * DFDX(I)
              DTPGMY = DTPGMY  + ZR(IVAPRM-1+C(ISE,I)) * DFDY(I)
C CALCUL DE T- EN SENSIBILITE
              TPGM   = TPGM    + ZR(IVAPRM-1+C(ISE,I)) * ZR(IVF+K+I-1)
306         CONTINUE
          ENDIF

C CALCUL DES CARACTERISTIQUES MATERIAUX STD EN TRANSITOIRE UNIQUEMENT
C POUR LE PB STD ON LES EVALUE AVEC TPG=T-
C POUR LE PB DERIVE, ON UTILISE TPGM=T-
          IF (.NOT.LSTAT) THEN
            IF (.NOT.LSENS) THEN
              TPGBUF = TPG
            ELSE
              TPGBUF = TPGM
            ENDIF
            CALL RCFODE (IFON(2),TPGBUF,LAMBDA,DLAMBD)
          ELSE
            LAMBDA = 0.D0
            DLAMBD = 0.D0
          ENDIF

CCDIR$ IVDEP
          IF (.NOT.LSENS) THEN
C CALCUL STD A 2 OUTPUTS (LE DEUXIEME NE SERT QUE POUR LA PREDICTION)

            DO 320 I=1,NNO
               VECTT(C(ISE,I)) = VECTT(C(ISE,I))- POIDS *
     &            (1.0D0-THETA)*LAMBDA*(DFDX(I)*DTPGDX+DFDY(I)*DTPGDY)
               VECTI(C(ISE,I)) = VECTI(C(ISE,I))- POIDS *
     &            (1.0D0-THETA)*LAMBDA*(DFDX(I)*DTPGDX+DFDY(I)*DTPGDY)
320         CONTINUE
          ELSE

C CALCUL DE SENSIBILITE PART IV: TRONC COMMUN TRANSITOIRE
            IF (.NOT.LSTAT) THEN
              DO 322 I=1,NNO
                VECTT(C(ISE,I)) = VECTT(C(ISE,I)) + POIDS*
     &            (THETA-1.D0)*(LAMBDA*(DFDX(I)*DTPGDX+DFDY(I)*DTPGDY)+
     &                      DLAMBD*TPG*(DFDX(I)*DTPGMX+DFDY(I)*DTPGMY))
322           CONTINUE
            ENDIF

C CALCUL DE SENSIBILITE PART V: TERME PARTICULIER STATIONNAIRE OU TRANSI
              IF (TETYPS.EQ.1) THEN
                FLUXS(1) = THETA*DTPGPX+(1.D0-THETA)*DTPGMX
                FLUXS(2) = THETA*DTPGPY+(1.D0-THETA)*DTPGMY
                DO 324 I=1,NNO
                  VECTT(C(ISE,I)) = VECTT(C(ISE,I)) - POIDS*LAMBS*(
     &                DFDX(I)*FLUXS(1)+DFDY(I)*FLUXS(2))
324             CONTINUE
              ENDIF

C FIN DU IF LSENS
            ENDIF

C FIN DE LA BOUCLE SUR LES PT DE GAUSS
301     CONTINUE

C====
C 3. CALCULS DU TERME DE RIGIDITE DE L'OPTION (PB STD OU SENSIBLE)
C====
C ------- 3EME FAMILLE DE PTS DE GAUSS -----------

        DO 405 I=1,NNO
          DO 405 J=1,2
            COORSE(2*(I-1)+J) = ZR(IGEOM-1+2*(C(ISE,I)-1)+J)
405     CONTINUE

        DO 401 KP=1,NPG2
          K=(KP-1)*NNO
          CALL DFDM2D ( NNO,KP,IPOIDS,IDFDE2,COORSE,DFDX,DFDY,POIDS )
          R      = 0.D0
          TPG    = 0.D0
          IF (.NOT.LSTAT) THEN
            DO 402 I=1,NNO
C CALCUL DE T- (OU (DT/DS)- EN SENSI) ET DE SON GRADIENT
              TPG    = TPG  + ZR(ITEMP-1+C(ISE,I)) * ZR(IVF2+K+I-1)
402         CONTINUE
          ENDIF
          IF (LAXI) THEN
            DO 403 I=1,NNO
C CALCUL DE R POUR JACOBIEN
              R      = R    + COORSE(2*(I-1)+1)    * ZR(IVF2+K+I-1)
403         CONTINUE
            POIDS = POIDS*R
          ENDIF

C CALCUL DE SENSIBILITE PART VI
          TEMS = 0.D0
          IF ((TETYPS.EQ.2).AND.(.NOT.LSTAT)) THEN
            DO 414 I=1,NNO
C CALCUL DE (T- - T+) POUR TERME DE MASSE
              TEMS=TEMS+(ZR(IVAPRM-1+C(ISE,I))-ZR(IVAPRI-1+C(ISE,I)))*
     &                   ZR(IVF2+K+I-1)
414         CONTINUE
          ENDIF
          IF (LSENS.AND.(.NOT.LSTAT)) THEN
            DO 415 I=1,NNO
C CALCUL DE T- EN SENSIBILITE
              TPGM   = TPGM    + ZR(IVAPRM-1+C(ISE,I)) * ZR(IVF2+K+I-1)
415         CONTINUE
          ENDIF


C CALCUL DES CARACTERISTIQUES MATERIAUX STD EN TRANSITOIRE UNIQUEMENT
C POUR LE PB STD ON LES EVALUE AVEC TPG=T-
C POUR LE PB DERIVE, ON UTILISE TPGM=T-
          IF (.NOT.LSTAT) THEN
            IF (.NOT.LSENS) THEN
              TPGBUF = TPG
            ELSE
              TPGBUF = TPGM
            ENDIF
            CALL RCFODE (IFON(1),TPGBUF,BETA,DBETA)
          ELSE
            BETA = 0.D0
            DBETA = 0.D0
          ENDIF

          IF (.NOT.LSENS) THEN
C CALCUL STD A 2 OUTPUTS (LE DEUXIEME NE SERT QUE POUR LA PREDICTION)

            DO 420 I=1,NNO
               VECTT(C(ISE,I)) = VECTT(C(ISE,I)) + POIDS *
     &            BETA/DELTAT*ZR(IVF2+K+I-1)
               VECTI(C(ISE,I)) = VECTI(C(ISE,I)) + POIDS *
     &            DBETA*TPG/DELTAT*ZR(IVF2+K+I-1)
420         CONTINUE

          ELSE

C CALCUL DE SENSIBILITE PART VII: TRONC COMMUN TRANSITOIRE
              IF (.NOT.LSTAT) THEN
                DO 422 I=1,NNO
                  VECTT(C(ISE,I)) = VECTT(C(ISE,I)) + POIDS*
     &              DBETA*TPG*ZR(IVF2+K+I-1)/DELTAT
422             CONTINUE
              ENDIF

C CALCUL DE SENSIBILITE PART VIII: TERME PARTICULIER
              IF ((TETYPS.EQ.2).AND.(.NOT.LSTAT)) THEN
                DO 424 I=1,NNO
                  VECTT(C(ISE,I)) = VECTT(C(ISE,I)) + POIDS*CPS/DELTAT*
     &                             ZR(IVF2+K+I-1)*TEMS
424             CONTINUE
              ENDIF

C FIN DU IF LSENS
          ENDIF
C FIN DE BOUCLE SUR LES PT DE GAUSS
401     CONTINUE

       ELSE IF (ZK16(ICOMP)(1:5).EQ.'SECH_') THEN

C        CALCULS DU TERME DE RIGIDITE DE L'OPTION

        DO 307 I=1,NNO
          DO 307 J=1,2
            COORSE(2*(I-1)+J) = ZR(IGEOM-1+2*(C(ISE,I)-1)+J)
307     CONTINUE

          DO 310 KP=1,NPG
            K=(KP-1)*NNO
            CALL DFDM2D(NNO,KP,IPOIDS,IDFDE,COORSE,DFDX,DFDY,POIDS)
            R      = 0.D0
            TPG    = 0.D0
            DTPGDX = 0.D0
            DTPGDY = 0.D0
            TPSEC  = 0.D0
            DO 308 I=1,NNO
              R      = R      + COORSE(2*(I-1)+1)     *ZR(IVF+K+I-1)
              TPG    = TPG    + ZR(ITEMP-1+C(ISE,I))  *ZR(IVF+K+I-1)
              DTPGDX = DTPGDX + ZR(ITEMP-1+C(ISE,I))  *DFDX(I)
              DTPGDY = DTPGDY + ZR(ITEMP-1+C(ISE,I))  *DFDY(I)
              TPSEC  = TPSEC  + ZR(ISECHI-1+C(ISE,I)) *ZR(IVF+K+I-1)
308         CONTINUE
            CALL RCDIFF(ZI(IMATE), ZK16(ICOMP), TPSEC,  TPG, DIFF )
            IF (LAXI) POIDS = POIDS*R
C
            DO 309 I=1,NNO
               VECTT(C(ISE,I)) = VECTT(C(ISE,I))
     &         + POIDS *(
     &           -(1.0D0-THETA)*DIFF*(DFDX(I)*DTPGDX+DFDY(I)*DTPGDY) )
               VECTI(C(ISE,I)) = VECTT(C(ISE,I))
309         CONTINUE
310       CONTINUE

C  CALCULS DU TERME DE MASSE DE L'OPTION

       DO 311 I=1,NNO
          DO 311 J=1,2
            COORSE(2*(I-1)+J) = ZR(IGEOM-1+2*(C(ISE,I)-1)+J)
311     CONTINUE

          DO 314 KP=1,NPG2
            K=(KP-1)*NNO
            CALL DFDM2D(NNO,KP,IPOID2,IDFDE2,COORSE,DFDX,DFDY,POIDS)
            R      = 0.D0
            TPG    = 0.D0
            DO 312 I=1,NNO
              R      = R      + COORSE(2*(I-1)+1)     *ZR(IVF2+K+I-1)
              TPG    = TPG    + ZR(ITEMP-1+C(ISE,I))  *ZR(IVF2+K+I-1)
312         CONTINUE
            IF (LAXI) POIDS = POIDS*R
C
            DO 313 I=1,NNO
               VECTT(C(ISE,I)) = VECTT(C(ISE,I)) + POIDS *
     &          ( TPG/DELTAT*ZR(IVF2+K+I-1) )
               VECTI(C(ISE,I)) = VECTT(C(ISE,I))
313         CONTINUE
314       CONTINUE

        ENDIF
C FIN DE BOUCLE SUR LES SOUS-ELEMENTS
200   CONTINUE

C MISE SOUS FORME DE VECTEUR
      DO 500 I=1,NNOP2
        ZR(IVECTT-1+I)=VECTT(I)
        ZR(IVECTI-1+I)=VECTI(I)
500   CONTINUE
C FIN ------------------------------------------------------------------
      END
