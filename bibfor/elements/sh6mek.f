      SUBROUTINE SH6MEK(XETEMP,SIGMA,RE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 12/08/2008   AUTEUR DESROCHES X.DESROCHES 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
C               ELEMENT SHB6
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER IPROPE
      REAL*8 XE(18),RE(18,18)
      REAL*8 XXG5(5),PXG5(5),XCOQ(3,3),BKSIP(3,6,5)
      REAL*8 XCENT(3),PPP(3,3),TMPKE2(18,18),SIGMAG(6)
      REAL*8 XL(3,3),XXX(3),YYY(3),SIGMA(*),TMPKE(18,18)
      REAL*8 SIGLOC(6),SITMP1(6,6),SITMP2(6,6),XETEMP(*)
      REAL*8 B(3,6)
C
C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C------------FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
C INITIALISATIONS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C INFOS:
C XE EST RANGE COMME CA:
C (XNOEUD1 YNOEUD1 ZNOEUD1, XNOEUD2 YNOEUD2 ZNOEUD2,...)
C DANS SHB8_TEST_NUM: ATTENTION A LA NUMEROTATION DES NOEUDS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      IF (NOMSHB.EQ.'SHB8') THEN
C
C ON DEFINI LES POINTS GAUSS ET LES POIDS
C
      XXG5(1) = -0.906179845938664D0
      XXG5(2) = -0.538469310105683D0
      XXG5(3) = 0.D0
      XXG5(4) = 0.538469310105683D0
      XXG5(5) = 0.906179845938664D0
C
      PXG5(1) = 0.236926885056189D0
      PXG5(2) = 0.478628670499366D0
      PXG5(3) = 0.568888888888889D0
      PXG5(4) = 0.478628670499366D0
      PXG5(5) = 0.236926885056189D0
C
C -----------------------------------------------------
C ON VERIFIE QUE LA CONNECTIVITE DONNE UN REPERE DIRECT
C SI CE N EST PAS LE CAS ON PERMUTE LES NOEUDS
C -----------------------------------------------------
C     ON FAIT UNE COPIE DE XETEMP DANS XE
      DO 10 I = 1,18
         XE(I) = XETEMP(I)
   10 CONTINUE
C
C CALCUL DE B (1 2 3) AUX 5 POINTS DE GAUSS
C
      CALL SH6KSI(5,XXG5,BKSIP)
      DO 30 J = 1,6
         DO 20 I = 1,6
            SITMP2(I,J) = 0.D0
  20     CONTINUE
  30  CONTINUE
C
C DEBUT DE LA BOUCLE SUR LES 5 PTS GAUSS
C
      DO 240 IP = 1,5
C
C CALCUL DE MATRICE DE PASSAGE POUR POUVOIR CALCULER LES
C CONTRAINTES DANS LE REPERE GLOBAL
C
         DO 40 I = 1,6
C C'EST LES CONTRAINTES LOCALES POUR POUVOIR TRAITER LA PLASTICITE AVANT
            SIGLOC(I) = SIGMA((IP-1)*6+I)
  40     CONTINUE
C
         ZETA = XXG5(IP)
         ZLAMB = 0.5D0*(1.D0-ZETA)
         DO 60 I = 1,3
            DO 50 J = 1,3
              XCOQ(J,I) = ZLAMB*XE((I-1)*3+J) +
     &                    (1.D0-ZLAMB)*XE((I-1+3)*3+J)
  50        CONTINUE
  60     CONTINUE
C
         CALL RLOSH6(XCOQ,XCENT,PPP,XL,XXX,YYY,RBID)
C
         CALL CHRP3D(PPP,SIGLOC,SIGMAG,1)
C
C CALCUL DE B
         CALL S6CALB(BKSIP(1,1,IP),XE,B,AJAC)
C
C PASSAGE DES CONTRAINTES AU REPERE GLOBAL
C
         DO 100 J = 1,6
           DO 90 I = 1,6
             SITMP1(I,J) = 0.D0
  90       CONTINUE
 100     CONTINUE
C
         DO 120 J = 1,6
           DO 110 I = 1,6
             SITMP1(I,J) = SIGMAG(1)*B(1,I)*B(1,J) + 
     &         SIGMAG(2)*B(2,I)*B(2,J) +
     &         SIGMAG(3)*B(3,I)*B(3,J) + 
     &         SIGMAG(4)*(B(1,I)*B(2,J)+B(2,I)*B(1,J)) +
     &         0.2025D0*SIGMAG(6)*(B(1,I)*B(3,J)+B(3,I)*B(1,J))+
     &         0.2025D0*SIGMAG(5)*(B(3,I)*B(2,J)+B(2,I)*B(3,J))
 110       CONTINUE
 120     CONTINUE
C
         DO 140 J = 1,6
            DO 130 I = 1,6
              SITMP2(I,J) = SITMP2(I,J) +
     &                0.5D0*AJAC*PXG5(IP)*SITMP1(I,J)
 130        CONTINUE
 140     CONTINUE
 240  CONTINUE
C
      CALL R8INIR(324,0.D0,TMPKE,1)
      DO 170 KK = 1,3
         DO 160 I = 1,6
            DO 150 J = 1,6
             TMPKE(I+(KK-1)*6,J+(KK-1)*6) = SITMP2(I,J)
 150        CONTINUE
 160     CONTINUE
 170  CONTINUE
C
C ON MET DE L'ORDRE:
C
      CALL R8INIR(324,0.D0,TMPKE2,1)
      DO 190 J = 1,6
         DO 180 I = 1,18
            TMPKE2(I,(J-1)*3+1) = TMPKE(I,J)
            TMPKE2(I,(J-1)*3+2) = TMPKE(I,J+6)
            TMPKE2(I,(J-1)*3+3) = TMPKE(I,J+12)
 180     CONTINUE
 190  CONTINUE
C
      CALL R8INIR(324,0.D0,TMPKE,1)
      DO 210 I = 1,6
         DO 200 J = 1,18
            TMPKE((I-1)*3+1,J) = TMPKE2(I,J)
            TMPKE((I-1)*3+2,J) = TMPKE2(I+6,J)
            TMPKE((I-1)*3+3,J) = TMPKE2(I+12,J)
 200     CONTINUE
 210  CONTINUE
C
C         IPROPE = PROPEL(1)
      IPROPE = 1
      IF (IPROPE.EQ.0) THEN
           CALL DCOPY(324,TMPKE,1,RE,1)
      ENDIF
C
      IF(IPROPE.EQ.1) THEN
           CALL DAXPY(324,1.D0,TMPKE,1,RE,1)
      ENDIF
      END
