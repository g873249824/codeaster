      SUBROUTINE MMVAPE(PHASEP,LELTF ,NDIM  ,NNL   ,NBCPS ,
     &                  COEFCP,COEFCS,COEFFP,COEFFS,COEFFF,
     &                  FFL   ,WPG   ,JEU   ,JACOBI,LAMBDA,
     &                  TAU1  ,TAU2  ,MPROJT,DLAGRC,DLAGRF ,
     &                  DVITE ,RESE  ,VECTCC,VECTFF)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 18/04/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      CHARACTER*9  PHASEP
      LOGICAL      LELTF
      INTEGER      NDIM  ,NNL   ,NBCPS
      REAL*8       COEFCP,COEFCS
      REAL*8       COEFFP,COEFFS
      REAL*8       COEFFF      
      REAL*8       FFL(9)
      REAL*8       JEU,WPG
      REAL*8       TAU1(3),TAU2(3),RESE(3)
      REAL*8       MPROJT(3,3)
      REAL*8       JACOBI,LAMBDA
      REAL*8       DLAGRC,DLAGRF(2),DVITE(3)
      REAL*8       VECTCC(9),VECTFF(18)
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - CALCUL)
C
C CALCUL DES VECTEURS - FORME FAIBLE - CAS POIN_ELEM
C
C ----------------------------------------------------------------------
C
C
C IN  PHASEP : 'SANS' - PAS DE CONTACT
C              'CONT' - CONTACT
C              'ADHE' - CONTACT ADHERENT
C              'GLIS' - CONTACT GLISSANT
C              'SANS_PENA' - PENALISATION - PAS DE CONTACT
C              'CONT_PENA' - PENALISATION - CONTACT
C              'ADHE_PENA' - PENALISATION - CONTACT ADHERENT
C              'GLIS_PENA' - PENALISATION - CONTACT GLISSANT
C IN  LELTF  : .TRUE. SI ELEMENT COMPORTANT DES DDL DE FROTTEMENT
C IN  NDIM   : DIMENSION DU PROBLEME
C IN  NNL    : NOMBRE DE NOEUDS LAGRANGE
C IN  NBCPS  : NOMBRE DE COMPOSANTES/NOEUD DES LAGR_C+LAGR_F
C IN  COEFFF : COEFFICIENT DE FROTTEMENT DE COULOMB
C IN  COEFFS : COEF_STAB_FROT
C IN  COEFCP : COEF_PENA_CONT
C IN  COEFCS : COEF_STAB_CONT
C IN  COEFFP : COEF_PENA_FROT
C IN  COEFFF : COEFFICIENT DE FROTTEMENT DE COULOMB
C IN  JACOBI : JACOBIEN DE LA MAILLE ESCLAVE
C IN  WPG    : POIDS DU POINT INTEGRATION DU POINT DE CONTACT
C IN  LAMBDA : VALEUR DU MULT. DE CONTACT (SEUIL DE TRESCA)
C IN  JEU    : VALEUR DU JEU
C IN  TAU1   : PREMIER VECTEUR TANGENT
C IN  TAU2   : SECOND VECTEUR TANGENT
C IN  MPROJT : MATRICE DE PROJECTION TANGENTE
C IN  DVITE  : SAUT DE "VITESSE" [[DELTA X]]
C IN  DLAGRC : INCREMENT DEPDEL DU LAGRANGIEN DE CONTACT
C IN  DLAGRF : INCREMENT DEPDEL DU LAGRANGIEN DE FROTTEMENT
C IN  RESE   : SEMI-MULTIPLICATEUR GTK DE FROTTEMENT 
C               GTK = LAMBDAF + COEFFR*VITESSE
C IN  NRESE  : NORME DU SEMI-MULTIPLICATEUR GTK DE FROTTEMENT
C OUT VECTCC : VECTEUR ELEMENTAIRE LAGR_C
C OUT VECTFF : VECTEUR ELEMENTAIRE LAGR_F
C
C ----------------------------------------------------------------------
C
      IF (PHASEP(1:4).EQ.'SANS') THEN
        IF (LELTF) THEN
          CALL MMMVFF(PHASEP,NDIM  ,NNL   ,NBCPS ,WPG   ,
     &                FFL   ,TAU1  ,TAU2  ,JACOBI,COEFFS,
     &                COEFFP,DLAGRF,RESE  ,LAMBDA,COEFFF,
     &                DVITE ,MPROJT,VECTFF)
        ELSE
          CALL MMMVCC(PHASEP,NNL   ,WPG   ,FFL   ,JACOBI,
     &                JEU   ,COEFCP,COEFCS,DLAGRC,VECTCC)
        ENDIF
      ELSEIF (PHASEP(1:4).EQ.'CONT') THEN
        CALL MMMVCC(PHASEP,NNL   ,WPG   ,FFL   ,JACOBI,
     &              JEU   ,COEFCP,COEFCS,DLAGRC,VECTCC)
      ELSEIF (PHASEP(1:4).EQ.'ADHE') THEN
        CALL MMMVFF(PHASEP,NDIM  ,NNL   ,NBCPS ,WPG   ,
     &              FFL   ,TAU1  ,TAU2  ,JACOBI,COEFFS,
     &              COEFFP,DLAGRF,RESE  ,LAMBDA,COEFFF,
     &              DVITE ,MPROJT,VECTFF)
      ELSEIF (PHASEP(1:4).EQ.'GLIS') THEN
        CALL MMMVFF(PHASEP,NDIM  ,NNL   ,NBCPS ,WPG   ,
     &              FFL   ,TAU1  ,TAU2  ,JACOBI,COEFFS,
     &              COEFFP,DLAGRF,RESE  ,LAMBDA,COEFFF,
     &              DVITE ,MPROJT,VECTFF)       
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
      END
