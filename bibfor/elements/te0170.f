      SUBROUTINE TE0170(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 04/04/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C.......................................................................
C
C     BUT: CALCUL DES MATRICES DE RIGIDITE  ELEMENTAIRES EN MECANIQUE
C          ELEMENTS DE FLUIDE ISOPARAMETRIQUES 3D
C
C          OPTION : 'RIGI_MECA '
C
C     ENTREES  ---> OPTION : OPTION DE CALCUL
C              ---> NOMTE  : NOM DU TYPE ELEMENT
C.......................................................................
C
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER         ( NBRES=2 )
      CHARACTER*8        ELREFE,NOMRES(NBRES)
      CHARACTER*2        CODRET(NBRES)
      CHARACTER*16       NOMTE,OPTION
      CHARACTER*24       CHVAL,CHCTE
      REAL*8             VALRES(NBRES),A(2,2,27,27)
      REAL*8             B(54,54),UL(54),C(1485)
      REAL*8             DFDX(27),DFDY(27),DFDZ(27),POIDS,RHO,CELER
      INTEGER            JVAL,IPOIDS,IVF,IDFDE,IDFDN,IDFDK,IGEOM,IMATE
      INTEGER            NNO,KP,NPG2,IK,IJKL,I,J,IMATUU,JIN,NBFPG
      INTEGER            NBPG(10),JCRET
C
C
C
C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C------------FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CALL ELREF1(ELREFE)
C
      IF (  OPTION(1:9).EQ.'FULL_MECA' .OR. OPTION(1:9).EQ.'RAPH_MECA'
     + .OR. OPTION(1:14).EQ.'RIGI_MECA_TANG' ) THEN
         CALL JEVECH('PCOMPOR','L',ICOMPO)
         IF ( ZK16(ICOMPO+3) .EQ. 'COMP_ELAS' ) THEN
            CALL UTMESS('F','TE0170','COMP_ELAS NON VALIDE')
         ENDIF
      ENDIF
C      CALL TECAEL(IAD1,IAD2)
C      WRITE(6,*) 'ELEM ',ZK24(IAD2+2)(1:8)
C
      CHCTE = '&INEL.'//ELREFE//'.CARACTE'
      CALL JEVETE(CHCTE,'L',JIN)
      NDIM = ZI(JIN+1-1)
      NNO = ZI(JIN+2-1)
      NBFPG = ZI(JIN+3-1)
      DO 110 I = 1,NBFPG
         NBPG(I) = ZI(JIN+3-1+I)
  110 CONTINUE
C
      NPG2 = NBPG(2)
C
      CHVAL = '&INEL.'//ELREFE//'.FFORMES'
      CALL JEVETE(CHVAL,'L',JVAL)
C
      IPOIDS = JVAL + (NDIM+1)*NNO*NNO
      IPOIDS = IPOIDS + NBPG(1) + (NDIM+1)*NNO*NBPG(1)
      IVF    = IPOIDS + NPG2
      IDFDE  = IVF    + NPG2*NNO
      IDFDN  = IDFDE  + 1
      IDFDK  = IDFDN  + 1
C
      CALL JEVECH('PGEOMER','L',IGEOM)
C
      CALL JEVECH('PMATERC','L',IMATE)
      NOMRES(1)='RHO'
      NOMRES(2)='CELE_R'
      CALL RCVALA ( ZI(IMATE),'FLUIDE',0,' ',R8BID,2,NOMRES,
     &                VALRES,CODRET, 'FM' )
      RHO = VALRES(1)
      CELER = VALRES(2)
C
      DO 112 K=1,2
         DO 112 L=1,2
            DO 112 I=1,NNO
            DO 112 J=1,I
                A(K,L,I,J) = 0.D0
112         CONTINUE
C
C
C    BOUCLE SUR LES POINTS DE GAUSS
C
      DO 101 KP=1,NPG2
C
        L = (KP-1)*NNO
        K = L*3
        CALL DFDM3D ( NNO,ZR(IPOIDS+KP-1),ZR(IDFDE+K),ZR(IDFDN+K),
     &  ZR(IDFDK+K),ZR(IGEOM),DFDX,DFDY,DFDZ,POIDS )
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      TERME EN (P**2)/ (RHO*(CEL**2))  C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
           DO 106 I=1,NNO
             DO 107 J=1,I
               A(1,1,I,J) = A(1,1,I,J) +
     &         POIDS * ZR(IVF+L+I-1) * ZR(IVF+L+J-1) / RHO /
     &         CELER/CELER
C
107          CONTINUE
C
106        CONTINUE
C
101   CONTINUE
C
C PASSAGE DU STOCKAGE RECTANGULAIRE (A) AU STOCKAGE TRIANGULAIRE (ZR)
C
      DO 111 K=1,2
         DO 111 L=1,2
            DO 111 I=1,NNO
                IK = ((2*I+K-3) * (2*I+K-2)) / 2
            DO 111 J=1,I
                IJKL = IK + 2 * (J-1) + L
                C(IJKL) = A(K,L,I,J)
111         CONTINUE
      NNO2 = NNO*2
      NT2 = NNO*(NNO2+1)
C      WRITE(6,*) 'C ',(C(I),I=1,NT2)
C
      IF (OPTION(1:9).NE.'FULL_MECA'.AND.OPTION(1:9).NE.'RIGI_MECA')
     &  GOTO 9998
      IF (OPTION.EQ.'RIGI_MECA_HYST') THEN
       CALL JEVECH('PMATUUC','E',IMATUU)
       DO 115 I=1,NT2
         ZC(IMATUU+I-1)=DCMPLX(C(I),0.D0)
115    CONTINUE
      ELSE
       CALL JEVECH('PMATUUR','E',IMATUU)
       DO 114 I=1,NT2
         ZR(IMATUU+I-1)=C(I)
114    CONTINUE
      ENDIF
 9998 CONTINUE
      IF (OPTION(1:9).NE.'FULL_MECA'.AND.OPTION(1:9).NE.'RAPH_MECA'
     &    .AND.OPTION(1:9).NE.'FORC_NODA') GOTO 9999
      CALL JEVECH('PVECTUR','E',IVECTU)
      CALL JEVECH('PDEPLMR','L',IDEPLM)
      CALL JEVECH('PDEPLPR','L',IDEPLP)
      DO 113 I=1,NNO2
         ZR(IVECTU+I-1) = 0.D0
         UL(I)=ZR(IDEPLM+I-1)+ZR(IDEPLP+I-1)
113   CONTINUE
C
      NN = 0
      DO 120 N1 = 1,NNO2
        DO 121 N2 = 1,N1
          NN = NN + 1
          B(N1,N2) = C(NN)
          B(N2,N1) = C(NN)
121     CONTINUE
120   CONTINUE
C
C      CALL VECMA(C,NT2,B,NNO2)
C      WRITE(6,*) 'B ',((B(N1,N2),N1=1,NNO2),N2=1,NNO2)
C      WRITE(6,*) 'ELEM ',ZK24(IAD2+2)(1:8)
C       WRITE(6,*) 'RHO CELER ',RHO,CELER
C       WRITE(6,*) 'MAT C ',(C(II),II=1,NT2)
C       WRITE(6,*) 'MAT B ',((B(I,J),I=1,NNO2),J=1,NNO2)
C       WRITE(6,*) 'GEOM ',(ZR(IGEOM+I-1),I=1,3*NNO)
C       WRITE(6,*) 'ULM ',(ULM(II),II=1,NNO2)
C       WRITE(6,*) 'DUL ',(DUL(II),II=1,NNO2)
C       WRITE(6,*) 'UL ',(UL(II),II=1,NNO2)
      DO 130 N1 = 1,NNO2
      DO 130 N2 = 1,NNO2
        ZR(IVECTU+N1-1) = ZR(IVECTU+N1-1)+B(N1,N2)*UL(N2)
130   CONTINUE
C
C      CALL PMAVEC('ZERO',NNO2,B,UL,ZR(IVECTU))
C      WRITE(6,*) 'ELEM ',ZK24(IAD2+2)(1:8)
C      WRITE(6,*) 'VECTEUR ',(ZR(IVECTU+II-1),II=1,NNO2)
C
 9999 CONTINUE
      IF ( OPTION(1:9).EQ.'FULL_MECA'  .OR.
     +     OPTION(1:9).EQ.'RAPH_MECA'  ) THEN
         CALL JEVECH ( 'PCODRET', 'E', JCRET )
         ZI(JCRET) = 0
      ENDIF
C
      END
