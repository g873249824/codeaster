      SUBROUTINE TE0262 ( OPTION , NOMTE )
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 29/04/2004   AUTEUR JMBHH01 J.M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C    - FONCTION REALISEE:  CALCUL DES VECTEURS ELEMENTAIRES
C                          OPTION : 'CHAR_THER_EVOL'
C                          OPTION : 'CHAR_SENS_EVOL'
C
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C       25/01/02 (OB): MODIFICATIONS POUR INSERER LES ARGUMENTS OPTION
C        NELS PERMETTANT D'UTILISER CETTE ROUTINE POUR CALCULER LA 
C        SENSIBILITE PAR RAPPORT AUX CARACTERISTIQUES MATERIAU. 
C        + MODIFS FORMELLES: IMPLICIT NONE, IDENTATION...
C       08/03/02 (OB): CORRECTION BUG EN STATIONNAIRE SI RHO_CP ABSENT
C----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE

      INTEGER        NBRES,IRET
      PARAMETER     (NBRES=2)
      CHARACTER*16   OPTION,NOMTE
      CHARACTER*8    NOMRES(NBRES)
      CHARACTER*2    CODRET(NBRES)
      REAL*8         VALRES(NBRES),DFDR(9),DFDZ(9),POIDS,R,TPG,THETA,
     &               PREC,R8PREM,DELTAT,CPS,LAMBS,DTPGDX,DTPGDY,
     &               DTEMPX,DTEMPY,DTEMMX,DTEMMY,TEMS,CP,LAMBDA
      INTEGER        NNO,KP,NNOS,NPG2,I,K,ITEMPS,IVECTT,
     &               IPOIDS,IVF,IDFDE,IGEOM,IMATE,IMATSE,IVAPRI,
     &               IVAPRM,TETYPS,ITEMP,NDIM,JGANO
      LOGICAL        LSENS,LSTAT

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

C====
C 1.1 PREALABLES: RECUPERATION ADRESSES FONCTIONS DE FORMES...
C====

      CALL ELREF4(' ','MASS',NDIM,NNO,NNOS,NPG2,IPOIDS,IVF,IDFDE,JGANO)
      PREC = R8PREM()

C====
C 1.2 PREALABLES LIES AUX CALCULS DE SENSIBILITE
C====
C CALCUL DE SENSIBILITE PART I         
      LSTAT = .FALSE.         
      IF (OPTION(6:9).EQ.'SENS') THEN
        LSENS = .TRUE.
        CALL JEVECH('PMATSEN','L',IMATSE)
        CALL JEVECH('PVAPRIN','L',IVAPRI)
        CALL TECACH('ONN','PVAPRMO',1,IVAPRM,IRET)
C DANS LE CAS DES DERIVEES MATERIAUX:
C L'ABSENCE DE CE CHAMP DETERMINE LE CRITERE STATIONNAIRE OU PAS
C ON "TRUANDE" ALORS DE MANIERE PEU OPTIMALE MAIS FACILE A MAINTE
C NIR: CP ET/OU CPS SONT ANNULES ET ON CREE UN CHAMP T- BIDON.
        IF (IVAPRM.EQ.0) THEN
          LSTAT = .TRUE.         
          IVAPRM = IVAPRI
        ENDIF
      ELSE
        LSENS = .FALSE.
      ENDIF
C====
C 1.3 PREALABLES LIES AUX RECHERCHES DE DONNEES GENERALES
C====         
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)
      CALL JEVECH('PTEMPSR','L',ITEMPS)
      DELTAT = ZR(ITEMPS+1)
      THETA  = ZR(ITEMPS+2)
      CALL JEVECH('PTEMPER','L',ITEMP)
      CALL JEVECH('PVECTTR','E',IVECTT)

C====
C 1.4 PREALABLES LIES A LA RECUPERATION DES DONNEES MATERIAUX
C====
      NOMRES(1)='LAMBDA' 
      NOMRES(2)='RHO_CP'
      IF (LSTAT) THEN
        CALL RCVALA(ZI(IMATE),' ','THER',1,'INST',ZR(ITEMPS),1,NOMRES,
     &              VALRES,CODRET,'FM')
        LAMBDA = VALRES(1)
        CP     = 0.D0
      ELSE
        CALL RCVALA(ZI(IMATE),' ','THER',1,'INST',ZR(ITEMPS),2,NOMRES,
     &              VALRES,CODRET,'FM')
        LAMBDA = VALRES(1)
        CP     = VALRES(2)
      ENDIF
      
C CALCUL DE SENSIBILITE PART II
      IF (LSENS) THEN
        IF (LSENS) THEN
          CALL RCVALA(ZI(IMATSE),' ','THER',1,'INST',ZR(ITEMPS),1,
     &                NOMRES,VALRES,CODRET,'FM')
          LAMBS = VALRES(1)
          CPS   = 0.D0
        ELSE
          CALL RCVALA(ZI(IMATSE),' ','THER',1,'INST',ZR(ITEMPS),2,
     &                NOMRES,VALRES,CODRET,'FM')
          LAMBS = VALRES(1)
          CPS   = VALRES(2)
        ENDIF
        IF ((ABS(CPS).LT.PREC).AND.(ABS(LAMBS).LT.PREC)) THEN
C PAS DE TERME DE SENSIBILITE SUPPLEMENTAIRE, CALCUL INSENSIBLE
          TETYPS = 0
        ELSE IF (ABS(CPS).LT.PREC) THEN
C SENSIBILITE PAR RAPPORT A LAMBDA
          TETYPS = 1
        ELSE IF (ABS(LAMBS).LT.PREC) THEN
C SENSIBILITE PAR RAPPORT A CP
          TETYPS = 2
        ENDIF
      ELSE
C CALCUL STD
        TETYPS = 0
      ENDIF

C====
C 2. CALCULS TERMES DE RIGIDITE ET DE MASSE (STD ET/OU SENSIBLE)
C====
      DO 101 KP=1,NPG2
        K=(KP-1)*NNO
        CALL DFDM2D(NNO,KP,IPOIDS,IDFDE,ZR(IGEOM),DFDR,DFDZ,POIDS)

        R      = 0.D0
        TPG    = 0.D0
        DTPGDX = 0.D0
        DTPGDY = 0.D0
        DO 102 I=1,NNO
C CALCUL DE T- (OU (DT/DS)- EN SENSI) ET DE SON GRADIENT
          R      = R      + ZR(IGEOM+2*(I-1))*ZR(IVF+K+I-1)
          TPG    = TPG    + ZR(ITEMP+I-1)    *ZR(IVF+K+I-1)
          DTPGDX = DTPGDX + ZR(ITEMP+I-1)    *DFDR(I)
          DTPGDY = DTPGDY + ZR(ITEMP+I-1)    *DFDZ(I)
102     CONTINUE
        POIDS = POIDS*R
        
C CALCUL DE SENSIBILITE PART III
        IF (TETYPS.EQ.1) THEN
          DTEMPX = 0.D0
          DTEMPY = 0.D0
          DTEMMX = 0.D0
          DTEMMY = 0.D0
          DO 41 I=1,NNO
C CALCUL DE GRAD(T+) ET DE GRAD(T-) POUR TERME DE RIGIDITE
            DTEMPX = DTEMPX + ZR(IVAPRI+I-1) * DFDR(I)
            DTEMPY = DTEMPY + ZR(IVAPRI+I-1) * DFDZ(I)
            DTEMMX = DTEMMX + ZR(IVAPRM+I-1) * DFDR(I)
            DTEMMY = DTEMMY + ZR(IVAPRM+I-1) * DFDZ(I)
41        CONTINUE
C CALCUL DE LAMBDA*(THETA*GRAD(T+)+(1-THETA)*GRAD(T-))
          DTEMPX = LAMBS*(THETA*DTEMPX+(1.D0-THETA)*DTEMMX)
          DTEMPY = LAMBS*(THETA*DTEMPY+(1.D0-THETA)*DTEMMY)
        ELSE IF (TETYPS.EQ.2) THEN
          TEMS = 0.D0
          DO 42 I=1,NNO
C CALCUL DE (T- - T+) POUR TERME DE MASSE
            TEMS=TEMS+(ZR(IVAPRM+I-1)-ZR(IVAPRI+I-1))*ZR(IVF+K+I-1)
42        CONTINUE
        ENDIF
        
        DO 103 I=1,NNO
           K=(KP-1)*NNO
           ZR(IVECTT+I-1) = ZR(IVECTT+I-1) + POIDS *
     &      ( CP/DELTAT*ZR(IVF+K+I-1)*TPG
     &       -(1.0D0-THETA)*LAMBDA*(DFDR(I)*DTPGDX+DFDZ(I)*DTPGDY) )
103     CONTINUE

C CALCUL DE SENSIBILITE PART IV (SENSIBILITE / LAMBDA).
        IF (TETYPS.EQ.1) THEN
          DO 51 I=1,NNO
            ZR(IVECTT+I-1) = ZR(IVECTT+I-1) - POIDS*(DFDR(I)*
     &                       DTEMPX+DFDZ(I)*DTEMPY)
51          CONTINUE
C SENSIBILITE / CP
          ELSE IF (TETYPS.EQ.2) THEN
            DO 52 I=1,NNO
              K=(KP-1)*NNO
              ZR(IVECTT+I-1) = ZR(IVECTT+I-1) + POIDS*CPS/DELTAT*
     &                         ZR(IVF+K+I-1)*TEMS
52          CONTINUE
          ENDIF              
101   CONTINUE
      END
