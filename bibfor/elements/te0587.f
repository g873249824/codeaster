      SUBROUTINE TE0587(OPTION,NOMTE)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*16 OPTION,NOMTE
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ......................................................................

C    - FONCTION REALISEE:  CALC_CHAMP POUR LES TUYAUX :
C        - EFGE_ELGA

C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................

      INTEGER NBCOUM,NBSECM,JNBSPI
      REAL*8 H,A
      PARAMETER(NBSECM=32,NBCOUM=10)
      REAL*8 POICOU(2*NBCOUM+1),POISEC(2*NBSECM+1)
      REAL*8 PI,DEUXPI,SIG(6),FNO(4,6)
      REAL*8 EFG(6)
      REAL*8 PGL(3,3),PGL4(3,3)
      REAL*8 COSFI,SINFI
      REAL*8 FI,POIDS,R,R8PI,OMEGA
      REAL*8 PGL1(3,3),PGL2(3,3),PGL3(3,3),RAYON,THETA,L
      INTEGER NNO,NNOS,JGANO,NDIM,NPG,NBCOU,NBSEC,LORIEN
      INTEGER IPOIDS,IVF,IC,KP,JIN,JCOOPG,JDFD2
      INTEGER ICAGEP,IDFDK
      INTEGER IGAU,ICOU,ISECT,I,JOUT
      INTEGER INDICE,ICOUD2,MMT
      INTEGER KPGS

      INTEGER VALI

      CALL ELREF5(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,JCOOPG,IVF,IDFDK,
     &            JDFD2,JGANO)


      PI=R8PI()
      DEUXPI=2.D0*PI

C=====RECUPERATION NOMBRE DE COUCHES ET DE SECTEURS ANGULAIRES

      CALL JEVECH('PNBSP_I','L',JNBSPI)
      NBCOU=ZI(JNBSPI-1+1)
      NBSEC=ZI(JNBSPI-1+2)
      IF (NBCOU*NBSEC.LE.0) THEN
        CALL U2MESS('F','ELEMENTS4_46')
      ENDIF
      IF (NBCOU.GT.NBCOUM) THEN
        VALI=NBCOUM
        CALL U2MESG('F','ELEMENTS5_2',0,' ',1,VALI,0,0.D0)
      ENDIF
      IF (NBSEC.GT.NBSECM) THEN
        VALI=NBSECM
        CALL U2MESG('F','ELEMENTS5_3',0,' ',1,VALI,0,0.D0)
      ENDIF


C  LES POIDS POUR L'INTEGRATION DANS L'EPAISSEUR
      POICOU(1)=1.D0/3.D0
      DO 20 I=1,NBCOU-1
        POICOU(2*I)=4.D0/3.D0
        POICOU(2*I+1)=2.D0/3.D0
   20 CONTINUE
      POICOU(2*NBCOU)=4.D0/3.D0
      POICOU(2*NBCOU+1)=1.D0/3.D0

C  LES POIDS POUR L'INTEGRATION SUR LA CIRCONFERENCE
      POISEC(1)=1.D0/3.D0
      DO 30 I=1,NBSEC-1
        POISEC(2*I)=4.D0/3.D0
        POISEC(2*I+1)=2.D0/3.D0
   30 CONTINUE
      POISEC(2*NBSEC)=4.D0/3.D0
      POISEC(2*NBSEC+1)=1.D0/3.D0


      IF (OPTION.EQ.'EFGE_ELGA') THEN
C     ---------------------------------
        CALL JEVECH('PCAGEPO','L',ICAGEP)
        CALL JEVECH('PCAORIE','L',LORIEN)
        CALL JEVECH('PSIEFR','L',JIN)
        CALL JEVECH('PEFGER','E',JOUT)

C       -- A= RMOY, H = EPAISSEUR
        H=ZR(ICAGEP+1)
        A=ZR(ICAGEP)-H/2.D0

C       -- ORIENTATION :
        CALL CARCOU(ZR(LORIEN),L,PGL,RAYON,THETA,PGL1,PGL2,PGL3,PGL4,
     &              NNO,OMEGA,ICOUD2)
        IF (ICOUD2.GE.10) THEN
          MMT=0
        ELSE
          MMT=1
        ENDIF


        KPGS=0
C       -- CALCUL DES EFFORTS SUR LES POINTS DE GAUSS (VFNO)
        DO 180 IGAU=1,NPG

          DO 140,I=1,6
            EFG(I)=0.D0
  140     CONTINUE

C         -- BOUCLE SUR LES POINTS DE SIMPSON DANS L'EPAISSEUR
          DO 160 ICOU=1,2*NBCOU+1
            IF (MMT.EQ.0) THEN
              R=A
            ELSE
              R=A+(ICOU-1)*H/(2.D0*NBCOU)-H/2.D0
            ENDIF

C           -- BOUCLE SUR LES POINTS DE SIMPSON SUR LA CIRCONFERENCE
            DO 150 ISECT=1,2*NBSEC+1

              KPGS=KPGS+1
              FI=(ISECT-1)*DEUXPI/(2.D0*NBSEC)
              COSFI=COS(FI)
              SINFI=SIN(FI)

              INDICE=JIN-1+6*(KPGS-1)
              SIG(1)=ZR(INDICE+1)
              SIG(2)=ZR(INDICE+2)
              SIG(3)=ZR(INDICE+4)
              SIG(4)=ZR(INDICE+5)

              POIDS=POICOU(ICOU)*POISEC(ISECT)*H*DEUXPI/
     &              (4.D0*NBCOU*NBSEC)*R


              EFG(1)=EFG(1)+POIDS*SIG(1)
              EFG(2)=EFG(2)-POIDS*(SINFI*SIG(4)+COSFI*SIG(3))
              EFG(3)=EFG(3)+POIDS*(SINFI*SIG(3)-COSFI*SIG(4))

              EFG(4)=EFG(4)-POIDS*SIG(3)*R
              EFG(5)=EFG(5)-POIDS*SIG(1)*R*COSFI
              EFG(6)=EFG(6)+POIDS*SIG(1)*R*SINFI
  150       CONTINUE
  160     CONTINUE

          DO 170,I=1,6
            FNO(IGAU,I)=EFG(I)
  170     CONTINUE
  180   CONTINUE


          DO 200 IC=1,6
            DO 190 KP=1,NPG
              ZR(JOUT+6*(KP-1)+IC-1)=FNO(KP,IC)
  190       CONTINUE
  200     CONTINUE
      ELSE
        CALL U2MESK('F','ELEMENTS4_49',1,OPTION)
      ENDIF

      END
