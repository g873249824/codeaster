      SUBROUTINE TE0069 ( OPTION , NOMTE )
      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     BUT:
C       CALCUL DES FLUX DE TEMPERATURE AUX POINTS DE GAUSS
C       ELEMENTS 2D PLAN
C       OPTION : 'FLUX_ELGA'
C
C ---------------------------------------------------------------------
C
      INCLUDE 'jeveux.h'

C
      INTEGER ICODRE(2)
      INTEGER NNO,KP,K,ITEMPE,ITEMP,IFLUX,J,NNOS,IFPG,NDIM
      INTEGER IPOIDS,IVF,IDFDE,IGEOM,IMATE,NPG,JGANO
      INTEGER NUNO,ICAMAS,KPG,SPT,NBCMP

      REAL*8 DFDX(9),DFDY(9),TPG,POIDS,LAMBDA,FPG(18),LAMBOR(2)
      REAL*8 P(2,2),POINT(2),ORIG(2),FLUGLO(2),FLULOC(2)
      REAL*8 VALRES(2)
      REAL*8 R8DGRD,ALPHA,FLUXX,FLUXY
      REAL*8 XU,YU,XNORM

      CHARACTER*8 NOMRES(2),ELREFE,ELREF2,FAMI,POUM
      CHARACTER*16 PHENOM

      LOGICAL ANISO,GLOBAL
C
C ----------------------------------------------------------------------
C
C====
C 1.1 PREALABLES: RECUPERATION ADRESSES FONCTIONS DE FORMES...
C====
      CALL ELREF1(ELREFE)
      ELREF2 = ELREFE
      FAMI='FPG1'
      KPG=1
      SPT=1
      POUM='+'
      NBCMP = 2
C
C
      CALL ELREF4(ELREF2,'RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,
     &                IDFDE,JGANO)

C====
C 1.2 PREALABLES LIES AUX RECHERCHES DE DONNEES GENERALES
C====
      CALL JEVECH('PGEOMER','L',IGEOM )
      CALL JEVECH('PMATERC','L',IMATE )
      CALL JEVECH('PTEMPSR','L',ITEMP )
      CALL JEVECH('PTEMPER','L',ITEMPE)
      CALL JEVECH('PFLUXPG','E',IFLUX )
      CALL RCCOMA(ZI(IMATE),'THER',PHENOM,ICODRE)

C====
C 1.3 PREALABLES LIES A LA RECUPERATION DES DONNEES MATERIAUX EN
C     THERMIQUE LINEAIRE ISOTROPE OU ORTHOTROPE
C====
      LAMBDA = 0.D0
      IF ( PHENOM .EQ. 'THER') THEN
         NOMRES(1) = 'LAMBDA'
         CALL RCVALB(FAMI,KPG,SPT,POUM,ZI(IMATE),' ',PHENOM,1,'INST',
     &               ZR(ITEMP),1,NOMRES,VALRES,ICODRE,1)
         LAMBDA = VALRES(1)
         ANISO = .FALSE.

      ELSEIF ( PHENOM .EQ. 'THER_ORTH') THEN
         NOMRES(1) = 'LAMBDA_L'
         NOMRES(2) = 'LAMBDA_T'
         CALL RCVALB(FAMI,KPG,SPT,POUM,ZI(IMATE),' ',PHENOM,1,'INST',
     &               ZR(ITEMP),2,NOMRES,VALRES,ICODRE,1)
         LAMBOR(1) = VALRES(1)
         LAMBOR(2) = VALRES(2)
         ANISO = .TRUE.

      ELSEIF ( PHENOM .EQ. 'THER_NL') THEN
        ANISO = .FALSE.

      ELSE
        CALL U2MESS('F','ELEMENTS2_63')
      ENDIF

C====
C 1.4 PREALABLES LIES A L'ANISOTROPIE
C====
      ORIG(1) = 0.D0
      ORIG(2) = 0.D0
      GLOBAL  = .FALSE.
      IF ( ANISO ) THEN
        CALL JEVECH('PCAMASS','L',ICAMAS)
        IF (ZR(ICAMAS).GT.0.D0) THEN
          GLOBAL = .TRUE.
          ALPHA  = ZR(ICAMAS+1)*R8DGRD()
          P(1,1) =  COS(ALPHA)
          P(2,1) =  SIN(ALPHA)
          P(1,2) = -SIN(ALPHA)
          P(2,2) =  COS(ALPHA)
        ELSE
          ORIG(1) = ZR(ICAMAS+4)
          ORIG(2) = ZR(ICAMAS+5)
        ENDIF
      ENDIF

C====
C 2. CALCULS TERMES DE FLUX
C====
      DO 101 KP=1,NPG
        K=(KP-1)*NNO
        IFPG=(KP-1)*2
        CALL DFDM2D ( NNO,KP,IPOIDS,IDFDE,ZR(IGEOM),DFDX,DFDY,POIDS )
        TPG   = 0.0D0
        FLUXX = 0.0D0
        FLUXY = 0.0D0
        IF ( .NOT.GLOBAL .AND. ANISO ) THEN
          POINT(1)=0.D0
          POINT(2)=0.D0
          DO 103 NUNO=1,NNO
            POINT(1) = POINT(1) + ZR(IVF+K+NUNO-1)*ZR(IGEOM+2*NUNO-2)
            POINT(2) = POINT(2) + ZR(IVF+K+NUNO-1)*ZR(IGEOM+2*NUNO-1)
 103      CONTINUE
          XU = ORIG(1) - POINT(1)
          YU = ORIG(2) - POINT(2)
          XNORM = SQRT( XU**2 + YU**2 )
          XU = XU / XNORM
          YU = YU / XNORM
          P(1,1) =  XU
          P(2,1) =  YU
          P(1,2) = -YU
          P(2,2) =  XU
        ENDIF

C     CALCUL DE T ET DE GRAD(T) AUX POINTS DE GAUSS
        DO 110 J=1,NNO
          TPG   = TPG   + ZR(ITEMPE+J-1)*ZR(IVF+K+J-1)
          FLUXX = FLUXX + ZR(ITEMPE+J-1)*DFDX(J)
          FLUXY = FLUXY + ZR(ITEMPE+J-1)*DFDY(J)
 110    CONTINUE

        IF (PHENOM.EQ.'THER_NL') THEN
           CALL RCVALB(FAMI,KPG,SPT,POUM,ZI(IMATE),' ',PHENOM,1,
     &                  'TEMP',TPG,1,'LAMBDA',LAMBDA,ICODRE,1)
        ENDIF
        IF (.NOT.ANISO) THEN
          FLUGLO(1) = LAMBDA*FLUXX
          FLUGLO(2) = LAMBDA*FLUXY
        ELSE
          FLULOC(1) = P(1,1)*FLUXX + P(2,1)*FLUXY
          FLULOC(2) = P(1,2)*FLUXX + P(2,2)*FLUXY
          FLULOC(1) = LAMBOR(1)*FLULOC(1)
          FLULOC(2) = LAMBOR(2)*FLULOC(2)
          FLUGLO(1) = P(1,1)*FLULOC(1) + P(1,2)*FLULOC(2)
          FLUGLO(2) = P(2,1)*FLULOC(1) + P(2,2)*FLULOC(2)
        ENDIF

        FPG(IFPG+1) = -FLUGLO(1)
        FPG(IFPG+2) = -FLUGLO(2)

 101  CONTINUE
C
      DO 90 KP=1,NPG
        ZR(IFLUX+(KP-1)*NBCMP-1+1) = FPG(2*(KP-1)+1)
        ZR(IFLUX+(KP-1)*NBCMP-1+2) = FPG(2*(KP-1)+2)
 90   CONTINUE

      END
