      SUBROUTINE XTEDD2(NDIM,NNES,NNM,NDDL,JSTNO,OPTION,
     &                  SINGE,SINGM,NDLS,
     &                  MMAT,VTMP)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 08/12/2009   AUTEUR PROIX J-M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2009  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE PROIX J-M.PROIX
C
C     BUT: SUPPRIMER LES DDLS "EN TROP" (VOIR BOOK III 09/06/04
C     ET  BOOK IV  30/07/07) POUR LE CONTACT XFEM GRAND GLISSEMENT
C
C     TRAVAIL EFFECTUE EN COLLABORATION AVEC I.F.P.
C
      IMPLICIT NONE
      INTEGER      NDIM,NNES,NNM,NDDL,SINGE,SINGM,NDLS,JSTNO
      CHARACTER*16  OPTION
      REAL*8       MMAT(168,168),VTMP(168)

C IN   NDIM   : DIMENSION DE L'ESPACE
C IN   NNES   : NOMBRE DE NOEUDS SOMMETS DE LA MAILLE ESCLAVE
C IN   NNM    : NOMBRE DE NOEUDS DE LA MAILLE MAITRE
C IN   NDDL   : NOMBRE DE DDL TOTAL DE L'ÉLÉMENT
C IN   JSTNO  : POINTEUR DU STATUT DES NOEUDS
C IN   OPTION : OPTION DE CALCUL DU TE
C IN   SINGE  : NOMBRE DE FONCTION SINGULIERE ESCLAVE
C IN   SINGM  : NOMBRE DE FONCTION SINGULIERE MAITRE
C IN   NDLS   : NOMBRE DE DDLS D'UN NOEUD SOMMET ESCLAVE
C IN/OUT  MAT : MATRICE DE RIGIDITÉ
C IN/OUT VECT : VECTEUR SECOND MEMBRE
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX --------------------
C
       INTEGER      JPOS,I,J
       CHARACTER*19  POSDDL
       REAL*8       R8MAEM,DMAX,DMIN
C
C-------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- REMPLISSAGE DU VECTEUR POS : POSITION DES DDLS A SUPPRIMER
C
      POSDDL = '&&XTEDD2.POSDDL'
      CALL WKVECT(POSDDL,'V V I',NDDL,JPOS)
      IF (SINGE.EQ.1) THEN
C --- LA MAILLE ESCLAVE EST HEAVISIDE CRACK-TIP
        DO 10 I=1,NNES
          IF (ZI(JSTNO-1+I).EQ.1) THEN
C --- LE NOEUD EST HEAVISIDE, ON ELIMINE CRACK-TIP
            DO 20 J=1,NDIM
              ZI(JPOS-1+NDLS*(I-1)+2*NDIM+J)=1
  20        CONTINUE
          ELSEIF (ZI(JSTNO-1+I).EQ.2) THEN
C --- LE NOEUD EST CRACK-TIP, ON ELIMINE HEAVISIDE
            DO 30 J=1,NDIM
              ZI(JPOS-1+NDLS*(I-1)+NDIM+J)=1
  30        CONTINUE
          ENDIF
  10    CONTINUE
      ENDIF
      IF (SINGM.EQ.1) THEN
C --- LA MAILLE MAITRE EST HEAVISIDE CRACK-TIP
        DO 40 I=1,NNM
          IF (ZI(JSTNO-1+NNES+I).EQ.1) THEN
C --- LE NOEUD EST HEAVISIDE, ON ELIMINE CRACK-TIP
            DO 50 J=1,NDIM
              ZI(JPOS-1+NDLS*NNES+
     &                   (2+SINGM)*NDIM*(I-1)+2*NDIM+J)=1
  50        CONTINUE
          ELSEIF (ZI(JSTNO-1+NNES+I).EQ.2) THEN
C --- LE NOEUD EST CRACK-TIP, ON ELIMINE HEAVISIDE
            DO 60 J=1,NDIM
              ZI(JPOS-1+NDLS*NNES+
     &                   (2+SINGM)*NDIM*(I-1)+NDIM+J)=1
  60        CONTINUE
          ENDIF
  40    CONTINUE
      ENDIF
C
      IF ( OPTION.EQ.'RIGI_CONT'.OR.OPTION.EQ.'RIGI_FROT') THEN
C --- CALCUL DU COEFFICIENT DIAGONAL POUR
C --- L'ELIMINATION DES DDLS HEAVISIDE
C --- MISE A ZERO DES TERMES HORS DIAGONAUX (I,J)
C --- ET MISE A UN DES TERMES DIAGONAUX (I,I)
        DMIN=R8MAEM()
        DMAX=0.D0
        DO 70 I = 1,NDDL
          IF (ABS(MMAT(I,I)).GT.DMAX) THEN
            DMAX=MMAT(I,I)
          ELSE IF (ABS(MMAT(I,I)).LT.DMIN) THEN
            DMIN=MMAT(I,I)
          ENDIF
  70    CONTINUE
        DO 80 I = 1,NDDL
          IF (ZI(JPOS-1+I).EQ.0) GOTO 80
          DO 90 J = 1,NDDL
            IF (J.NE.I) THEN
              MMAT(I,J) = 0.D0
              MMAT(J,I) = 0.D0
            ENDIF
            IF (J.EQ.I) MMAT(I,J) = (DMAX+DMIN)/2.0D0
 90      CONTINUE
 80    CONTINUE
C
      ELSE IF (OPTION.EQ.'CHAR_MECA_CONT' .OR.
     &         OPTION.EQ.'CHAR_MECA_FROT') THEN
C --- MISE A ZERO DES TERMES I
        DO 100 I = 1,NDDL
          IF (ZI(JPOS-1+I).EQ.0) GOTO 100
            VTMP(I) = 0.D0
 100    CONTINUE
      ENDIF
C
      CALL JEDETR(POSDDL)
C
      CALL JEDEMA()
      END
