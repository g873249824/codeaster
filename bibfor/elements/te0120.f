      SUBROUTINE TE0120(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 04/04/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================

      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE
C ......................................................................
C    - FONCTION REALISEE: OPTIMISATION LOCALE POUR LES LOIS DELOCALISEES
C                         RESOLUTION DU PROBLEME D'ECOULEMENT
C    - OPTION           : DECO_LOCA
C ......................................................................


C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      CHARACTER*8 TYPMOD(2),ELREFE
      CHARACTER*24 CARAC,FF

      INTEGER NDIM,NNO,NNOS, NPG1,JTAB(7)
      INTEGER ICARAC,IFF,IPOIDS,IVF,IGRAD
      INTEGER IDFDE,IDFDN,IDFDK,IGEOM
      INTEGER IMATE,ITREF,ITEMPM,ITEMPP,IPROJ,IRESID
      INTEGER IDEPLM,ICONTM,IDDEPL,ICOMPO,ICARCR,IR,IENER
      INTEGER IVARIM,IVADEP,ILAGRP,IVARIX,LGPG,IVARIP

      REAL*8  VFF(126), DFF(378), DFDI1(24), DFDI2(81)
      INTEGER N, K

      CALL ELREF1(ELREFE)

C   DECODAGE DE LA MODELISATION ET DE LA DIMENSION DE L'ESPACE
      IF (NOMTE(3:4).EQ.'AX') THEN
        TYPMOD(1) = 'AXIS    '
        NDIM = 2
      ELSE IF (NOMTE(3:4).EQ.'CP') THEN
        TYPMOD(1) = 'C_PLAN  '
        NDIM = 2
      ELSE IF (NOMTE(3:4).EQ.'DP') THEN
        TYPMOD(1) = 'D_PLAN  '
        NDIM = 2
      ELSE
        TYPMOD(1) = '3D      '
        NDIM = 3
      END IF


C   FONCTIONS DE FORMES ET POINTS DE GAUSS : FAMILLE 1 (VAL, GRAD)

      IF (NDIM.EQ.3) THEN

C      ELEMENTS ISOPARAMETRIQUES 3D
        CARAC = '&INEL.'//NOMTE(6:13)//'.CARACTE'
        CALL JEVETE(CARAC,'L',ICARAC)
        NNO   = ZI(ICARAC+1)
        NPG1  = ZI(ICARAC+3)

        FF    = '&INEL.'//NOMTE(6:13)//'.FFORMES'
        CALL JEVETE(FF,'L',IFF)
        IPOIDS = IFF + (NDIM+1)*NNO*NNO
        IVF    = IPOIDS + NPG1
        IDFDE  = IVF + NPG1*NNO
        IDFDN  = IDFDE + 1
        IDFDK  = IDFDN + 1

      ELSE

C      ELEMENTS ISOPARAMETRIQUES 2D
        CARAC = '&INEL.'//ELREFE//'.CARAC'
        CALL JEVETE(CARAC,'L',ICARAC)
        NNO   = ZI(ICARAC)
        NPG1  = ZI(ICARAC+2)

        FF = '&INEL.'//ELREFE//'.FF'
        CALL JEVETE(FF,'L',IFF)
        IPOIDS = IFF
        IVF    = IPOIDS + NPG1
        IDFDE  = IVF + NPG1*NNO
        IDFDK  = IDFDE + NPG1*NNO

      END IF

C -- PASSAGE P2 --> P1

      CALL EFP2P1(NOMTE, NPG1, ZR(IVF), ZR(IDFDE), VFF, DFF, NNOS)


C PARAMETRES EN ENTREE
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)
      CALL JEVECH('PDEPLMR','L',IDEPLM)
      CALL JEVECH('PCONTMR','L',ICONTM)
      CALL JEVECH('PDEPLDR','L',IDDEPL)
      CALL JEVECH('PCOMPOR','L',ICOMPO)
      CALL JEVECH('PCARCRI','L',ICARCR)
      CALL JEVECH('PPENCST','L',IR)
      CALL JEVECH('PVARDEP','L',IVADEP)
      CALL JEVECH('PLAGDEP','L',ILAGRP)
      CALL JEVECH('PVARIMR','L',IVARIM)
      CALL TECACH(.TRUE.,.TRUE.,'PVARIMR',7,JTAB)
      LGPG = MAX(JTAB(6),1)*JTAB(7)


C VARIABLES DE COMMANDE
      CALL JEVECH('PTEREF','L',ITREF)
      CALL JEVECH('PTEMPMR','L',ITEMPM)
      CALL JEVECH('PTEMPPR','L',ITEMPP)


C PARAMETRES EN SORTIE
      CALL JEVECH('PPROJEC','E',IPROJ)
      CALL JEVECH('PRESIDU','E',IRESID)
      CALL JEVECH('PGRADIA','E',IGRAD)
      CALL JEVECH('PENEREL','E',IENER)
      CALL JEVECH('PVARIPR','E',IVARIP)
      CALL JEVECH('PVARIMP','L',IVARIX)
      CALL R8COPY(NPG1*LGPG,ZR(IVARIX),1,ZR(IVARIP),1)


C CALCUL DES VARIABLES DELOCALISEES PAR MINIMISATION LOCALE

      IF (NDIM.EQ.2) THEN
        CALL DELOCA(NDIM,OPTION,TYPMOD,NPG1,ZR(IPOIDS), NNO,
     &          ZR(IVF), ZR(IDFDE), ZR(IDFDE), ZR(IDFDK), DFDI2,
     &          NNOS,VFF,
     +          DFF,DFF,DFF(1+NNOS*NPG1),DFDI1,ZR(IGEOM),
     +          ZI(IMATE),ZK16(ICOMPO),ZR(ICARCR),ZR(IR),ZR(ITREF),
     +          ZR(ITEMPM),ZR(ITEMPP),ZR(IDEPLM),ZR(ICONTM),ZR(IDDEPL),
     +          LGPG,ZR(IVARIM),ZR(IVADEP),ZR(ILAGRP),ZR(IPROJ),
     +          ZR(IRESID),ZR(IGRAD),ZR(IENER),ZR(IVARIP))

      ELSE
        CALL DELOCA(NDIM,OPTION,TYPMOD,NPG1,ZR(IPOIDS),NNO,
     &          ZR(IVF),ZR(IDFDE),ZR(IDFDN),ZR(IDFDK), DFDI2,
     &          NNOS, VFF,
     +          DFF,DFF(2),DFF(3), DFDI1,ZR(IGEOM),
     +          ZI(IMATE),ZK16(ICOMPO),ZR(ICARCR),ZR(IR),ZR(ITREF),
     +          ZR(ITEMPM),ZR(ITEMPP),ZR(IDEPLM),ZR(ICONTM),ZR(IDDEPL),
     +          LGPG,ZR(IVARIM),ZR(IVADEP),ZR(ILAGRP),ZR(IPROJ),
     +          ZR(IRESID),ZR(IGRAD),ZR(IENER),ZR(IVARIP))
      END IF


      END
