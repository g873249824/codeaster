      SUBROUTINE FONEXT (NOMA,CNXINV,JBASNO,INOEXT,INOSEG,NBNOFF,JBORL,
     &                   JDIROL,JNVDIR,ISEG)

      IMPLICIT NONE

      INTEGER             JBASNO,INOEXT,INOSEG,NBNOFF,JBORL,JDIROL
      INTEGER             JNVDIR,ISEG
      CHARACTER*8         NOMA
      CHARACTER*19        CNXINV

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 11/04/2012   AUTEUR LADIER A.LADIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C FONCTION REALISEE:
C
C     CALCUL DU VECTEUR DE DIRECTION DE PROPAGATION AUX EXTREMITES DU
C     FOND DE FISSURE
C
C     ENTREES:
C        NOMA   : NOM DU MAILLAGE
C        CNXINV : CONNECTIVITE INVERSE
C        INOEXT : INDICE DU NOEUD EXTREMITE DU FOND
C        INOSEG : INDICE DU NOEUD APPARTENANT AU MEME SEGMENT DU FOND
C                 QUE INOEXT
C        NBNOFF : NOMBRE DE NOEUDS AU FOND DE FISSURE
C        JBORL  : ADRESSE DU VECTEUR PERMETTANT DE SAVOIR SI LE VECTEUR
C                  DE DIRECTION DE PROPAGATION A DEJA ETE RECALCULE OU
C                  NON AUX POINTS EXTREMITES DU FOND (POUR SAVOIR SI ON
C                  DOIT REMPLACER LA VALEUR EXISTANTE OU LA LUI AJOUTER)
C        JDIROL : ADRESSE DES VECTEURS DIRECTIONS DE PROPAGATION 
C                  INITIAUX (CAD SANS MODIFICATION DES VECTEURS AUX
C                  POINTS EXTREMITES DU FOND)
C        JNVDIR : ADRESSE DU VECTEUR CONTENANT 0 OU 1 AUX POINTS
C                  EXTREMITES DU FOND:
C                  0: LE PRODUIT SCALAIRE ENTRE LA NORMALE A LA FACE DE
C                     BORD ET LE VDIR INITIAL ESI INFERIEUR A 0
C                  1: LE PRODUIT SCALAIRE EST SUPERIEUR OU EGAL A 0
C        ISEG   : INDICE DU SEGMENT DU FOND
C
C     ENTREE/SORTIE:
C        JBASNO : BASE LOCALE AUX NOEUDS DU FOND
C
C-----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
      CHARACTER*32     JEXATR,JEXNUM
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER       I,IBID,IFA,IMA,INO,IRET,ITYPMA
      INTEGER       JCONX1,JCONX2,JCOOR,JMA,JMANOE
      INTEGER       NBF,NBFACB,NBNO,NDIME,NMAEXT,NMANOE,NUNO
      INTEGER       NUNOA,NUNOB,NUNOC,NUMPT
      INTEGER       IBID3(12,3),INOBOR(2),FA(6,4)
      REAL*8        COORG(3),VECTN(12),NORME,VECT(3),PROJ
      CHARACTER*8   K8B,TYPMA
      LOGICAL       FABORD,NOFAC
C     -----------------------------------------------------------------
C
      CALL JEMARQ()
      NUMPT=1
      IF (ISEG.NE.1)NUMPT=NBNOFF
C
C     RECUPERATION DES INFORMATIONS RELATIVES AU MAILLAGE
C
      CALL JEVEUO(NOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA//'.CONNEX','LONCUM'),'L',JCONX2)
      CALL JEVEUO(NOMA//'.COORDO    .VALE','L',JCOOR)
      CALL JEVEUO(NOMA//'.TYPMAIL','L',JMA)
C
C     RECUPERATION DES MAILLES CONTENANT LE NOEUD EXTREMITE DU FOND
      CALL JELIRA(JEXNUM(CNXINV,INOEXT),'LONMAX',NMANOE,K8B)
      CALL JEVEUO(JEXNUM(CNXINV,INOEXT),'L',JMANOE)

C     BOUCLE SUR LE NOMBRE DE MAILLES CONNECTEES AU NOEUD EXTREMITE 
      DO 1000 IMA=1,NMANOE
        NMAEXT=ZI(JMANOE-1+(IMA-1)+1)

        ITYPMA=ZI(JMA-1+NMAEXT)
        CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ITYPMA),TYPMA)

        CALL DISMOI('F','DIM_TOPO',TYPMA,'TYPE_MAILLE',NDIME,K8B,IRET)

C       ON NE PREND QUE LES MAILLES EN 3D
        IF (NDIME.NE.3) GOTO 1000
C       CALCUL DU CENTRE DE GRAVITE DE LA MAILLE
        CALL CENGRA(NOMA,NMAEXT,COORG)
        CALL CONFAC(TYPMA,IBID3,IBID,FA,NBF)
        NBFACB=0
        INOBOR(1)=0
        INOBOR(2)=0
C       BOUCLE SUR LE NOMBRE DE FACES DE LA MAILLE
        DO 1100 IFA=1,NBF
          NBNO = 4
          IF (FA(IFA,4).EQ.0) NBNO = 3
          NOFAC=.FALSE.
C         BOUCLE SUR LE NOMBRE DE NOEUDS DE LA FACE
          DO 1110 INO=1,NBNO
            NUNO = ZI(JCONX1-1+ZI(JCONX2+NMAEXT-1)+FA(IFA,INO)-1)
            IF (NUNO.EQ.INOSEG) GOTO 1100
            IF (NUNO.EQ.INOEXT) NOFAC=.TRUE.
C         FIN BOUCLE SUR LES NOEUDS
 1110     CONTINUE

          IF (NOFAC) THEN
            NUNOA = ZI(JCONX1-1+ZI(JCONX2+NMAEXT-1)+FA(IFA,1)-1)
            NUNOB = ZI(JCONX1-1+ZI(JCONX2+NMAEXT-1)+FA(IFA,2)-1)
            NUNOC = ZI(JCONX1-1+ZI(JCONX2+NMAEXT-1)+FA(IFA,3)-1)

C           ON VERIFIE SI LA FACE COURANTE EST UNE FACE DE BORD
            CALL XFABOR(NOMA,CNXINV,NUNOA,NUNOB,NUNOC,FABORD)
            IF (FABORD) THEN
              CALL XNORME(NUMPT,INOBOR,VECTN,NBFACB,NUNOA,NUNOB,
     &                    NUNOC,JCOOR,COORG)
C             ON VERIFIE QUE LA NORMALE A LA FACE N'EST PAS
C             COLINEAIRE AU VECTEUR NORMAL AU PLAN DE FISSURE
              VECT(1)=VECTN(1+3*(NBFACB-1))
              VECT(2)=VECTN(2+3*(NBFACB-1))
              VECT(3)=VECTN(3+3*(NBFACB-1))
              CALL NORMEV(VECT,NORME)

              PROJ=VECT(1)*ZR(JBASNO-1+6*(NUMPT-1)+1)
     &            +VECT(2)*ZR(JBASNO-1+6*(NUMPT-1)+2)
     &            +VECT(3)*ZR(JBASNO-1+6*(NUMPT-1)+3)

              IF (ABS(PROJ).GE.0.95D0)THEN
                NBFACB = NBFACB-1
                GOTO 1100
              ENDIF

            ENDIF
          ENDIF
C       FIN BOUCLE SUR LES FACES
 1100   CONTINUE
        IF (NBFACB.NE.0) THEN
          CALL XEXTRE(INOBOR,VECTN,NBFACB,JBASNO,JBORL,JDIROL,JNVDIR)
        ENDIF
C     FIN BOUCLE SUR LES MAILLES
 1000 CONTINUE

      CALL NORMEV(ZR(JBASNO-1+6*(NUMPT-1)+4),NORME)

      CALL JEDEMA()
      END
