      SUBROUTINE TE0489(OPTION,NOMTE)
      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 01/02/2011   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     BUT:
C       CALCUL DES INDICATEURS LOCAUX DE DECHARGE
C                 ET DE PERTE DE RADIALITE POUR LES NORMES :
C              VMIS      : SECOND INVARIANT DU TENSEUR DES CONTRAINTES
C                          DEVIATORIQUES
C              TOTAL     : SECOND INVARIANT DU TENSEUR DES CONTRAINTES
C              VMIS_CINE : SECOND INVARIANT DU DEVIATEUR DU TENSEUR
C                          SIGMA - X
C                          OU SIGMA EST LE TENSEUR DES CONTRAINTES
C                          ET X     EST LE TENSEUR DE RAPPEL
C              TOTAL_CINE: SECOND INVARIANT DU TENSEUR SIGMA - X

C    ON NOTE SIGMA2 = SIGMA(M,T+DT)
C            SIGMA1 = SIGMA(M,T)
C            DSIGMA = SIGMA2 - SIGMA1

C    A)LES INDICATEURS LOCAUX DE DECHARGE :
C      I = (NORME(SIGMA2) - NORME(SIGMA1)/NORME(SIGMA2)
C               SONT CALCULES :

C    B)LES INDICATEURS LOCAUX DE PERTE DE RADIALITE :
C      I = 1 - ABS(DSIGMA : SIGMA1)/(NORME(DSIGMA)*NORME(SIGMA1))
C               SONT CALCULES :


C          ELEMENTS ISOPARAMETRIQUES 2D ET 3D

C          OPTIONS : 'DERA_ELGA'

C     ENTREES  ---> OPTION : OPTION DE CALCUL
C              ---> NOMTE  : NOM DU TYPE ELEMENT
C
C ......................................................................
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      INTEGER MXCMEL
      PARAMETER (MXCMEL=162)
      INTEGER NBPGMX
      PARAMETER (NBPGMX=27)

      INTEGER NBSIGM,JTAB(3)
      INTEGER IRET,NPG1,IPOIDS,IVF,IDFDE,JGANO,ICOMPO,IDERA
      INTEGER NNO,NBSIG,NNOS,ISIGTM,ISIGTP,IDVAR1
      INTEGER IDVAR2,NBSIG2,NPG,I,K,NDIM,IGAU

      REAL*8 SIGMA1(MXCMEL),SIGMA2(MXCMEL)
      REAL*8 SIGT1(MXCMEL),SIGT2(MXCMEL)
      REAL*8 DCHAV(NBPGMX),DCHAT(NBPGMX)
      REAL*8 RADIV(NBPGMX),RADIT(NBPGMX)
      REAL*8 TRX1,TRX2
      REAL*8 X1(MXCMEL),X2(MXCMEL)
      REAL*8 TRSIG1,TRSIG2
      REAL*8 ZERO,UNTIER

      CHARACTER*16 COMPOR
C
C ----------------------------------------------------------------------
C
C ---- INITIALISATIONS :
C      ---------------
      ZERO = 0.0D0
      UNTIER = 1.0D0/3.0D0

      DO 10 I = 1,MXCMEL
        SIGT1(I) = ZERO
        SIGT2(I) = ZERO
        SIGMA1(I) = ZERO
        SIGMA2(I) = ZERO
        X1(I) = ZERO
        X2(I) = ZERO
   10 CONTINUE

      DO 20 I = 1,NBPGMX
        DCHAV(I) = ZERO
        DCHAT(I) = ZERO
        RADIV(I) = ZERO
        RADIT(I) = ZERO
   20 CONTINUE


C ----     DIMENSION DE L'ELEMENT :
C ----     NOMBRE DE CONTRAINTES ASSOCIE A L'ELEMENT :
      NBSIG = NBSIGM()

C ---- RECUPERATION DE LA CARTE DE COMPORTEMENT :
C      -----------------------------------------------------
      CALL JEVECH('PCOMPOR','L',ICOMPO)
      COMPOR = ZK16(ICOMPO)
C
C ---- RECUPERATION DES CONTRAINTES A L'INSTANT T :
C
      CALL TECACH('OOO','PCONTMR',3,JTAB,IRET)
      NPG = JTAB(3)
      ISIGTM = JTAB(1)
C
C ---- RECUPERATION DES CONTRAINTES A L'INSTANT T+DT :
C
      CALL JEVECH('PCONTPR','L',ISIGTP)

      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG1,IPOIDS,IVF,IDFDE,JGANO)
      CALL ASSERT(NPG.EQ.NPG1)
C
C ---- AFFECTATION DES VECTEURS DE TRAVAIL SIGMA1 ET SIGMA2
C ---- REPRESENTANT LES TENSEURS DE CONTRAINTES RESPECTIVEMENT
C ---- AUX INSTANTS T ET T+DT :
C      ----------------------
        K = 0
C
        DO 40 IGAU = 1,NPG
          DO 30 I = 1,NBSIG
            K = K + 1
            SIGT1(I+ (IGAU-1)*NBSIG) = ZR(ISIGTM+K-1)
            SIGT2(I+ (IGAU-1)*NBSIG) = ZR(ISIGTP+K-1)
            SIGMA1(I+ (IGAU-1)*NBSIG) = ZR(ISIGTM+K-1)
            SIGMA2(I+ (IGAU-1)*NBSIG) = ZR(ISIGTP+K-1)
   30     CONTINUE
   40   CONTINUE

      IF (COMPOR(1:14).NE.'VMIS_CINE_LINE') THEN
C
C ---- CAS DE LA NORME VMIS : CALCUL DES DEVIATEURS DES CONTRAINTES
C ---- SIGMA1 ET SIGMA2 :
C      ----------------

        DO 70 IGAU = 1,NPG

          TRSIG1 = SIGMA1(1+ (IGAU-1)*NBSIG) +
     &             SIGMA1(2+ (IGAU-1)*NBSIG) + SIGMA1(3+ (IGAU-1)*NBSIG)
          
          TRSIG2 = SIGMA2(1+ (IGAU-1)*NBSIG) +
     &             SIGMA2(2+ (IGAU-1)*NBSIG) + SIGMA2(3+ (IGAU-1)*NBSIG)
          SIGMA1(1+ (IGAU-1)*NBSIG) = SIGMA1(1+ (IGAU-1)*NBSIG) -
     &                                UNTIER*TRSIG1
          SIGMA1(2+ (IGAU-1)*NBSIG) = SIGMA1(2+ (IGAU-1)*NBSIG) -
     &                                UNTIER*TRSIG1
          SIGMA1(3+ (IGAU-1)*NBSIG) = SIGMA1(3+ (IGAU-1)*NBSIG) -
     &                                UNTIER*TRSIG1

          SIGMA2(1+ (IGAU-1)*NBSIG) = SIGMA2(1+ (IGAU-1)*NBSIG) -
     &                                UNTIER*TRSIG2
          SIGMA2(2+ (IGAU-1)*NBSIG) = SIGMA2(2+ (IGAU-1)*NBSIG) -
     &                                UNTIER*TRSIG2
          SIGMA2(3+ (IGAU-1)*NBSIG) = SIGMA2(3+ (IGAU-1)*NBSIG) -
     &                                UNTIER*TRSIG2
   70   CONTINUE
C
C ---- DANS LE CAS D'UN ECROUISSAGE CINEMATIQUE
C ---- RECUPERATION DES COMPOSANTES DU TENSEUR DE RAPPEL
C ---- AUX INSTANTS T ET T+DT :
C      ----------------------
      ELSE IF (COMPOR(1:14).EQ.'VMIS_CINE_LINE') THEN
        
        CALL JEVECH('PVARIMR','L',IDVAR1)
        CALL JEVECH('PVARIPR','L',IDVAR2)

C ----   AFFECTATION DES VECTEURS DE TRAVAIL X1 ET X2 REPRESENTANT
C ----   LES TENSEURS DE RAPPEL RESPECTIVEMENT AUX INSTANTS T
C ----   ET T+DT :
C        -------
        NBSIG2 = 7

        DO 60 IGAU = 1,NPG
          DO 50 I = 1,NBSIG
            X1(I+ (IGAU-1)*NBSIG) = ZR(IDVAR1+I+ (IGAU-1)*NBSIG2-1)
            X2(I+ (IGAU-1)*NBSIG) = ZR(IDVAR2+I+ (IGAU-1)*NBSIG2-1)
   50     CONTINUE
   60   CONTINUE

C ---- CAS DE LA NORME TOTAL_CINE : CALCUL DES CONTRAINTES
C ---- (SIGMA1-X1) ET (SIGMA2-X2) :
C      -------------------------
C
        K = 0
        DO 100 IGAU = 1,NPG
          DO 90 I = 1,NBSIG
          K = K + 1

            SIGT1(I+ (IGAU-1)*NBSIG) = ZR(ISIGTM+K-1) -
     &                                  X1(I+ (IGAU-1)*NBSIG)
            SIGT2(I+ (IGAU-1)*NBSIG) = ZR(ISIGTP+K-1) -
     &                                  X2(I+ (IGAU-1)*NBSIG)
            SIGMA1(I+ (IGAU-1)*NBSIG) = ZR(ISIGTM+K-1) -
     &                                  X1(I+ (IGAU-1)*NBSIG)
            SIGMA2(I+ (IGAU-1)*NBSIG) = ZR(ISIGTP+K-1) -
     &                                  X2(I+ (IGAU-1)*NBSIG)
   90     CONTINUE
  100   CONTINUE

C ---- CAS DE LA NORME VMIS_CINE : CALCUL DES DEVIATEURS DES CONTRAINTES
C ---- (SIGMA1-X1) ET (SIGMA2-X2) :
C      -------------------------
C
        DO 80 IGAU = 1,NPG

          TRSIG1 = SIGMA1(1+ (IGAU-1)*NBSIG) +
     &             SIGMA1(2+ (IGAU-1)*NBSIG) + SIGMA1(3+ (IGAU-1)*NBSIG)
          
          TRSIG2 = SIGMA2(1+ (IGAU-1)*NBSIG) +
     &             SIGMA2(2+ (IGAU-1)*NBSIG) + SIGMA2(3+ (IGAU-1)*NBSIG)

          TRX1 = X1(1+ (IGAU-1)*NBSIG) + X1(2+ (IGAU-1)*NBSIG) +
     &           X1(3+ (IGAU-1)*NBSIG)

          TRX2 = X2(1+ (IGAU-1)*NBSIG) + X2(2+ (IGAU-1)*NBSIG) +
     &           X2(3+ (IGAU-1)*NBSIG)

          SIGMA1(1+ (IGAU-1)*NBSIG) = SIGMA1(1+ (IGAU-1)*NBSIG) -
     &                                UNTIER* (TRSIG1-TRX1)
          SIGMA1(2+ (IGAU-1)*NBSIG) = SIGMA1(2+ (IGAU-1)*NBSIG) -
     &                                UNTIER* (TRSIG1-TRX1)
          SIGMA1(3+ (IGAU-1)*NBSIG) = SIGMA1(3+ (IGAU-1)*NBSIG) -
     &                                UNTIER* (TRSIG1-TRX1)
          SIGMA1(4+ (IGAU-1)*NBSIG) = SIGMA1(4+ (IGAU-1)*NBSIG)

          SIGMA2(1+ (IGAU-1)*NBSIG) = SIGMA2(1+ (IGAU-1)*NBSIG) -
     &                                UNTIER* (TRSIG2-TRX2)
          SIGMA2(2+ (IGAU-1)*NBSIG) = SIGMA2(2+ (IGAU-1)*NBSIG) -
     &                                UNTIER* (TRSIG2-TRX2)
          SIGMA2(3+ (IGAU-1)*NBSIG) = SIGMA2(3+ (IGAU-1)*NBSIG) -
     &                                UNTIER* (TRSIG2-TRX2)
          SIGMA2(4+ (IGAU-1)*NBSIG) = SIGMA2(4+ (IGAU-1)*NBSIG)

          IF (NDIM.EQ.3) THEN
            SIGMA1(5+ (IGAU-1)*NBSIG) = SIGMA1(5+ (IGAU-1)*NBSIG)
            SIGMA1(6+ (IGAU-1)*NBSIG) = SIGMA1(6+ (IGAU-1)*NBSIG)

            SIGMA2(5+ (IGAU-1)*NBSIG) = SIGMA2(5+ (IGAU-1)*NBSIG)
            SIGMA2(6+ (IGAU-1)*NBSIG) = SIGMA2(6+ (IGAU-1)*NBSIG)
          END IF
   80   CONTINUE

      END IF

C ---- CALCUL DE L'INDICATEUR LOCAL DE DECHARGE DCHA :
C ----  I = (NORME(SIGMA2) - NORME(SIGMA1))/NORME(SIGMA2) :
C      --------------------------------------------------
      CALL DCHAPG(SIGT1 ,SIGT2 ,NPG,NBSIG,DCHAT)
      CALL DCHAPG(SIGMA1,SIGMA2,NPG,NBSIG,DCHAV)

C ---- CALCUL DE L'INDICATEUR LOCAL DE PERTE DE RADIALITE RADI:
C ----  I = 1- ABS(SIGMA1:DSIGMA)/(NORME(SIGMA1)*NORME(DSIGMA) :
C      -------------------------------------------------------
      CALL RADIPG(SIGT1 ,SIGT2 ,NPG,NBSIG,RADIT)
      CALL RADIPG(SIGMA1,SIGMA2,NPG,NBSIG,RADIV)

C ---- RECUPERATION ET AFFECTATION DU VECTEUR EN SORTIE
C ---- AVEC LE VECTEUR DES INDICATEURS LOCAUX :
C      --------------------------------------
      CALL JEVECH('PDERAPG','E',IDERA)

      DO 170 IGAU = 1,NPG
        ZR(IDERA+(IGAU-1)*4-1+1) = DCHAV(IGAU)
        ZR(IDERA+(IGAU-1)*4-1+2) = DCHAT(IGAU)
        ZR(IDERA+(IGAU-1)*4-1+3) = RADIV(IGAU)
        ZR(IDERA+(IGAU-1)*4-1+4) = RADIT(IGAU)
  170 CONTINUE
C
      END
