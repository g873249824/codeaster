      SUBROUTINE DEEUT1 ( LAMBDA, LAGUGT, KDLTID,
     >                    MATCOD, INSTAN, RAYON ,
     >                    THTNUL, AXI   , DPAXI,
     >                    TEMPER, DLAGTG, DLTNUL, GRADU , GRADTH )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 19/07/99   AUTEUR UFBHHGN G.NICOLAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C      DERIVATION EULERIENNE - UTILITAIRE NUMERO 1
C
      IMPLICIT NONE
C
      REAL*8 LAMBDA(3), LAGUGT(4), KDLTID
C
      REAL*8 INSTAN, RAYON
      REAL*8 TEMPER, DLAGTG
      REAL*8 GRADU(3,3), GRADTH(3,3)
C
      INTEGER MATCOD
C
      LOGICAL THTNUL, DLTNUL, AXI, DPAXI
C
C ......................................................................
C
C    - FONCTION REALISEE : CALCUL DES TENSEURS
C     LAGUGT =
C     0.5 * ( MATRICE DE HOOKE )
C     * ( T(GRAD(U),GRAD(THETA)) + T(GRAD(U),GRAD(THETA))T )
C                ET
C     KDLTID = K * DLAGTE
C
C      REMARQUES :
C         ON RETOURNE AUSSI LA MATRICE DE HOOKE CAR ELLE SERT DANS UN
C         DES CAS D'APPELS
C         LA NUMEROTATION DES TENSEURS EST CELLE DE LA DOCUMENTATION
C
C    - ELEMENTS ISOPARAMETRIQUES 2D
C
C    - ARGUMENTS:
C OUT LAMBDA : MATRICE DE HOOKE
C OUT LAGUGT : TENSEUR LAMBDA*T((GRAD(U),GRAD(THETA))SYMETRISE)
C              L'OPERATEUR T EST LE PRODUIT MATRICIEL 2D
C OUT KDLTID : TENSEUR K * DLAGTE * IDENTITE
C IN  MATCOD : CODAGE ENTIER DU MATERIAU
C IN  INSTAN : INSTANT COURANT
C IN  RAYON  : RAYON DU POINT DE CALCUL SI 2D AXISYMETRIQUE
C IN  THTNUL : VRAI SI LE CHAMP THETA EST NUL SUR L'ELEMENT
C IN  AXI    : VRAI SI 2D AXISYMETRIQUE
C IN  DPAXI  : VRAI SI 2D AXISYMETRIQUE OU DEFORMATIONS PLANES
C IN  TEMPER : TEMPERATURE
C IN  DLAGTE : DERIVEE LAGRANGIENNE DE LA TEMPERATURE
C IN  DLTNUL : VRAI SI LA DERIVEE DE T EST NULLE SUR L'ELEMENT
C IN  GRADU  : TENSEUR DU GRADIENT DU CHAMP DE DEPLACEMENT U
C IN  GRADTH : TENSEUR DU GRADIENT DU CHAMP THETA
C ......................................................................
C
      INTEGER NBRES
      PARAMETER ( NBRES = 3 )
C
      CHARACTER*2 CODRET(NBRES)
      CHARACTER*8 NOMRES(NBRES), NOMPAR(2)
      CHARACTER*16 PHENOM
C
      REAL*8 R8AUX
      REAL*8 GRUGRT(3,3)
      REAL*8 VALRES(NBRES), VALPAR(2)
      REAL*8 E, NU, ALPHA, COEFK
C
      INTEGER IAUX
C
C====
C 1. INTERPOLATION DES COEFFICIENTS EN FONCTION DE LA TEMPERATURE ET
C    DU TEMPS
C====
C
      CALL RCCOMA ( MATCOD, 'ELAS', PHENOM, CODRET )
C
      NOMRES(1) = 'E'
      NOMRES(2) = 'NU'
      IF ( DLTNUL ) THEN
        IAUX = 2
      ELSE
        IAUX = 3
        NOMRES(3) = 'ALPHA'
      ENDIF
      NOMPAR(1) = 'INST'
      NOMPAR(2) = 'TEMP'
      VALPAR(1) = INSTAN
      VALPAR(2) = TEMPER
C
      CALL RCVALA ( MATCOD, PHENOM, 2, NOMPAR, VALPAR, IAUX,
     >              NOMRES, VALRES, CODRET, 'FM' )
C
      E     = VALRES(1)
      NU    = VALRES(2)
      IF ( .NOT.DLTNUL ) THEN
        ALPHA = VALRES(3)
        IF ( DPAXI ) THEN
          COEFK = - ALPHA * E / ( 1.D0 - 2.D0*NU )
        ELSE
          COEFK = - ALPHA * E / ( 1.D0 - NU )
        ENDIF
      ENDIF
C
C====
C 2. CALCUL DE LA MATRICE DE HOOKE
C    REMARQUE : ON N'UTILISE PAS LE PROGRAMME GENERAL DMATMC,
C               CAR ON EST TOUJOURS DANS LE CAS ELASTIQUE
C               ISOTROPE. COMME ON VIENT DE RECUPERER E ET NU,
C               CELA VA PLUS VITE DE DONNER LES COEFFICIENTS.
C====
C
      R8AUX = 1.D0 / ( (1.D0+NU)*(1.D0-2.D0*NU) )
      LAMBDA(1) = R8AUX * E * (1.D0-NU)
      LAMBDA(2) = R8AUX * E * NU
      LAMBDA(3) = E / (1.D0+NU)
C
C====
C 3. TENSEUR : LAGUGT = 0.5 * ( MATRICE DE HOOKE )
C     * ( T(GRAD(U),GRAD(THETA)) + T(GRAD(U),GRAD(THETA))T )
C     L'OPERATEUR T EST LE PRODUIT MATRICIEL. SON RESULTAT
C     EST STOCKE DANS LE TABLEAU GRUGRT
C     RAPPEL :  GRADTH(I,K) = D THETA I / D X K
C               GRADU (I,K) = D U I / D X K
C====
C
      IF ( THTNUL ) THEN
C
        LAGUGT(1) = 0.D0
        LAGUGT(2) = 0.D0
        LAGUGT(3) = 0.D0
        LAGUGT(4) = 0.D0
C
      ELSE
C
        GRUGRT(1,1) = GRADU(1,1)*GRADTH(1,1) + GRADU(1,2)*GRADTH(2,1)
        GRUGRT(1,2) = GRADU(1,1)*GRADTH(1,2) + GRADU(1,2)*GRADTH(2,2)
        GRUGRT(2,1) = GRADU(2,1)*GRADTH(1,1) + GRADU(2,2)*GRADTH(2,1)
        GRUGRT(2,2) = GRADU(2,1)*GRADTH(1,2) + GRADU(2,2)*GRADTH(2,2)
C
        LAGUGT(1) = LAMBDA(1)*GRUGRT(1,1) + LAMBDA(2)*GRUGRT(2,2)
        LAGUGT(2) = LAMBDA(2)*GRUGRT(1,1) + LAMBDA(1)*GRUGRT(2,2)
        LAGUGT(3) = LAMBDA(2)*GRUGRT(1,1) + LAMBDA(2)*GRUGRT(2,2)
        LAGUGT(4) = 5.D-1 * LAMBDA(3) * ( GRUGRT(1,2) + GRUGRT(2,1) )
C
        IF ( AXI ) THEN
          GRUGRT(3,3) = GRADU(3,3)*GRADTH(3,3)
          LAGUGT(1) = LAGUGT(1) + LAMBDA(2)*GRUGRT(3,3)
          LAGUGT(2) = LAGUGT(2) + LAMBDA(2)*GRUGRT(3,3)
          LAGUGT(3) = LAGUGT(3) + LAMBDA(1)*GRUGRT(3,3)
        ENDIF
C
      ENDIF
C
C====
C 4. TENSEUR : K * DLAGTE * IDENTITE
C====
C
      IF ( DLTNUL ) THEN
        KDLTID = 0.D0
      ELSE
        KDLTID = COEFK * DLAGTG
      ENDIF
C
      END
