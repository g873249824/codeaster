      SUBROUTINE GLRCMM (ZIMAT,MATR,EP,SURFGP,P,
     &                 EPST,DEPS,DSIG,ECR,DELAS,DSIDEP,CRIT,CODRET)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 23/03/2010   AUTEUR SFAYOLLE S.FAYOLLE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     ROUTINE DE RECUPERATION DE PARAMETRES
C     ET DE LANCEMENT DU CALCUL DU COMPORTEMENT
C
C IN  ZIMAT : NUMERO DU MATERIAU
C IN  MATR : TABLEAU DES PARAMETRES MATERIAUX HOMOGENEISES
C IN  EP : EPAISSEUR TOTALE
C IN  SURFGP : SURFACE ASSOCIEE AU POINT DE GAUSS
C IN  P : MATRICE DE PASSAGE GLOBAL -> LOCAL
C IN  EPST : TENSEUR DEFORMATION TOTALE
C IN  DEPS : INCREMENT DE DEFORMATION
C IN  CRIT : CRITERES DE CONVERGENCE LOCAUX
C            (1) = NB ITERATIONS MAXI A CONVERGENCE
C                  (ITER_INTE_MAXI == ITECREL)
C            (2) = TYPE DE JACOBIEN A T+DT
C                  (TYPE_MATR_COMP == MACOMP)
C                   0 = EN VITESSE     >SYMETRIQUE
C                   1 = EN INCREMENTAL >NON-SYMETRIQUE
C            (3) = VALEUR TOLERANCE DE CONVERGENCE
C                  (RESI_INTE_RELA == RESCREL)
C            (5) = NOMBRE D'INCREMENTS POUR LE
C                  REDECOUPAGE LOCAL DU PAS DE TEMPS
C                  (ITER_INTE_PAS  == ITEDEC)
C                  -1,0,1 = PAS DE REDECOUPAGE
C                   N = NOMBRE DE PALIERS
C            (6) = TYPE D INTEGRATION LOCAL POUR
C                  LA LOI DE COMPORTEMENT
C                  (RESO_INTE == INTLOC)
C                  0 = IMPLICITE
C                  1 = RUNGE_KUTTA
C
C OUT DSIG : 
C OUT ECR : TABLEAU DES VARIABLES INTERNES
C OUT DELAS : MATRICE ELASTIQUE
C OUT DSIDEP : MATRICE TANGENTE
C OUT CODRET  : CODE RETOUR DE L'INTEGRATION INTEGRATION DU
C               0 => PAS DE PROBLEME
C               1 => ABSENCE DE CONVERGENCE
C RESPONSABLE SFAYOLLE S.FAYOLLE

      INTEGER I, ZIMAT
      INTEGER CODRET

      REAL*8 EP, SURFGP, P(3,3), DEPS(*), EPST(*)
      REAL*8 DSIG(*), MATR(*), ECR(*)
      REAL*8 VGLOB(3), VLOC(3), Q(2,2), ALPHOR
      REAL*8 MAXMP(2),MINMP(2),R8BID
      REAL*8 MP1N0,MP2N0, CRIT(*)
      REAL*8 NORMN,NORMM,DSIDEP(6,*),DELAS(6,*),VALRES(4)

      CHARACTER*2 CODRES(8)
      CHARACTER*8 NOMRES(8)
      CHARACTER*16 PHENOM

      CALL JEMARQ()

      PHENOM = 'GLRC_DAMAGE'

C     TRANSFORMATION DES DONNEES

      IF (ECR(12).LT.5.D0) THEN
        DO 10, I = 1,3
          VGLOB(I) = ECR(10 + I)
 10     CONTINUE
        CALL MATMUL(P,VGLOB,3,3,1,VLOC)

        ALPHOR = ATAN2(VLOC(2),VLOC(1))

        ECR(11) = ALPHOR
        ECR(12) = 10.D0
        ECR(13) = 10.D0
      ELSE
        ALPHOR = ECR(11)
      ENDIF

C     MATRICE DE PASSATE ORTHO -> LOCAL
      Q(1,1) = COS(ALPHOR)
      Q(2,1) = SIN(ALPHOR)
      Q(1,2) = -Q(2,1)
      Q(2,2) = Q(1,1)

      NOMRES(1) = 'FMEX1'
      NOMRES(2) = 'FMEX2'
      NOMRES(3) = 'FMEY1'
      NOMRES(4) = 'FMEY2'
      NOMRES(5) = 'MAXMP1'
      NOMRES(6) = 'MINMP1'
      NOMRES(7) = 'MAXMP2'
      NOMRES(8) = 'MINMP2'

      DO 50, I=1,2
        CALL RCVALA(ZIMAT,' ',PHENOM,1,'X ',0.D0,2,NOMRES(2*(I-1)+1),
     &            VALRES,CODRES,'FM')
        MP1N0 = VALRES(1)
        MP2N0 = VALRES(2)

        CALL RCVALA(ZIMAT,' ',PHENOM,0,' ',R8BID,2,NOMRES(2*(I-1)+5),
     &            VALRES,CODRES,'FM')
        MAXMP(I) = VALRES(1)
        MINMP(I) = VALRES(2)

        IF ( (MP1N0  .LT.  0.D0).OR.(MP2N0  .GT.  0.D0)
     &      .OR.     (MAXMP(I)-MINMP(I) .LE. 0.D0)   ) THEN
          CALL U2MESS('F','ELEMENTS_87')
        ENDIF
 50   CONTINUE

      NOMRES(1) = 'NORMM'
      NOMRES(2) = 'NORMN'
      CALL RCVALA(ZIMAT,' ',PHENOM,0,' ',R8BID,2,NOMRES,
     &          VALRES,CODRES,'  ')
      NORMM = VALRES(1)
      NORMN = VALRES(2)

C     ROUTINE DE POST ET PRE TRAITEMENT
C     POUR L INTEGRATION DE LA LOI DE COMPORTEMENT GLRC_DAMAGE
      CALL GLRCDD(ZIMAT,MAXMP,MINMP,MATR,EP,SURFGP,Q,EPST,DEPS
     &           ,DSIG,ECR,DELAS,DSIDEP,NORMM,NORMN,CRIT,CODRET)

      CALL JEDEMA()

      END
