      SUBROUTINE TE0456(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 26/04/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================

      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE
C ----------------------------------------------------------------------
C FONCTION REALISEE:  CALCUL DE L'OPTION FORC_REFE POUR LES ELEMENTS
C                     INCOMPRESSIBLES GRANDES DEFOMRATIONS EN 2D ET 3D

C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------


      CHARACTER*8 LIELRF(10),TYPMOD(2)
      INTEGER NDIM,NNO1,NNO2,NNO3,NNOS,NPG,JGN,NTROU
      INTEGER IW,IVF1,IVF2,IVF3,IDF1,IDF2,IDF3
      INTEGER VU(3,27),VG(27),VP(27)
      INTEGER IGEOM,IREFCO,IVECTU
      REAL*8 DFF1(4*27),SIGREF,EPSREF,R8VIDE
      LOGICAL LTEATT
C ----------------------------------------------------------------------


C - FONCTIONS DE FORME
      CALL ELREF2(NOMTE,10,LIELRF,NTROU)
      CALL ASSERT(NTROU.GE.3)
      CALL ELREF4(LIELRF(3),'RIGI',NDIM,NNO3,NNOS,NPG,IW,IVF3,IDF3,JGN)
      CALL ELREF4(LIELRF(2),'RIGI',NDIM,NNO2,NNOS,NPG,IW,IVF2,IDF2,JGN)
      CALL ELREF4(LIELRF(1),'RIGI',NDIM,NNO1,NNOS,NPG,IW,IVF1,IDF1,JGN)

C - TYPE DE MODELISATION
      IF (NDIM.EQ.2 .AND. LTEATT(' ','AXIS','OUI')) THEN
        TYPMOD(1) = 'AXIS  '
      ELSE IF (NDIM.EQ.2 .AND. NOMTE(3:4).EQ.'PL') THEN
        TYPMOD(1) = 'D_PLAN  '
      ELSE IF (NDIM .EQ. 3) THEN
        TYPMOD(1) = '3D'
      ELSE
        CALL U2MESK('F','ELEMENTS_34',1,NOMTE)
      END IF
      TYPMOD(2) = 'INCO'

C - ACCES AUX COMPOSANTES DU VECTEUR DDL
      CALL NIINIT(NOMTE,TYPMOD,NDIM,NNO1,NNO2,NNO3,VU,VG,VP)

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PREFCO', 'L',IREFCO)
      CALL JEVECH('PVECTUR','E',IVECTU)

      SIGREF = ZR(IREFCO)
      EPSREF = ZR(IREFCO+1)

      IF (SIGREF.EQ.R8VIDE())
     &   CALL U2MESK('F','ELEMENTS5_8',1,'SIGM_REFE')
      IF (EPSREF.EQ.R8VIDE())
     &  CALL U2MESK('F','ELEMENTS5_8',1,'EPSI_REFE')

      CALL NIREFE(NDIM,NNO1,NNO2,NNO3,NPG,IW,ZR(IVF1),ZR(IVF2),
     &            ZR(IVF3),IDF1,DFF1,VU,VG,VP,TYPMOD,ZR(IGEOM),
     &            SIGREF,EPSREF,ZR(IVECTU))


      END
