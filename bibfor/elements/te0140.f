      SUBROUTINE TE0140(OPTION,NOMTE)
C     ------------------------------------------------------------------
C MODIF ELEMENTS  DATE 26/03/2013   AUTEUR CHEIGNON E.CHEIGNON 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*16 OPTION,NOMTE
C     ------------------------------------------------------------------
C     CALCULE LA MATRICE DE RIGIDITE ELEMENTAIRE DES ELEMENTS DE POUTRE
C     D'EULER ET DE TIMOSHENKO
C     ------------------------------------------------------------------
C IN  OPTION : K16 : NOM DE L'OPTION A CALCULER
C      'RIGI_MECA '     : CALCUL DE LA MATRICE DE RIGIDITE
C      'RIGI_FLUI_STRU' : CALCUL DE LA MATRICE DE RIGIDITE (ABS_CURV)
C IN  NOMTE  : K16 : NOM DU TYPE ELEMENT
C      'MECA_POU_D_E'  : POUTRE DROITE D'EULER       (SECTION VARIABLE)
C      'MECA_POU_D_T'  : POUTRE DROITE DE TIMOSHENKO (SECTION VARIABLE)
C      'MECA_POU_C_T'  : POUTRE COURBE DE TIMOSHENKO(SECTION CONSTANTE)
C      'MECA_POU_D_EM' : POUTRE DROITE MULTIFIBRE D EULER (SECT. CONST)
C      'MECA_POU_D_TG' : POUTRE DROITE DE TIMOSHENKO (GAUCHISSEMENT)
C      'MECA_POU_D_TGM': POUTRE DROITE DE TIMOSHENKO (GAUCHISSEMENT)
C                         MULTI-FIBRES SECTION CONSTANTE
C     ------------------------------------------------------------------


      INTEGER IADZI,IAZK24
      INTEGER I, IMATE, LMAT, LORIEN, LRCOU
      INTEGER LX, NBPAR, NBRES, NC, NNO, LSECT,IRET
      PARAMETER (NBRES=2)
      REAL*8 VALRES(NBRES)
      REAL*8 ANGARC, ANGS2, DEUX , E, RAD, TRIGOM
      REAL*8 VALPAR, XL, XNU, G, UN, ZERO
      INTEGER CODRES(NBRES),KPG,SPT
      CHARACTER*8 NOMPAR,NOMRES(NBRES),NOMAIL,FAMI,POUM
      CHARACTER*16 OPTI
      REAL*8 PGL(3,3),PGL1(3,3),PGL2(3,3),KLV(105)
      REAL*8       A,XIY,XIZ,ALFAY,ALFAZ,XJX,XJG,EZ,EY,MAT(105)
      INTEGER INBFIB,NBFIB,JACF
      REAL*8  CARSEC(6)
C     ------------------------------------------------------------------
      DATA NOMRES/'E','NU'/
C     ------------------------------------------------------------------
      ZERO = 0.D0
      UN   = 1.D0
      DEUX = 2.D0
      FAMI='FPG1'
      KPG=1
      SPT=1
      POUM='+'
C     ------------------------------------------------------------------

C     --- RECUPERATION DES CARACTERISTIQUES MATERIAUX ---

      IF (OPTION(1:9).EQ.'RIGI_MECA') THEN
         OPTI = 'ELAS'
      ELSE IF (OPTION(1:14).EQ.'RIGI_FLUI_STRU') THEN
         OPTI = 'ELAS_FLUI'
      ELSE
C OPTION NON PROGRAMMEE
         CALL ASSERT(.FALSE.)
      END IF
      IF ( NOMTE.NE.'MECA_POU_D_TG' .AND.
     &     NOMTE.NE.'MECA_POU_D_TGM') THEN
         CALL MOYTEM('NOEU',2,1,'+',VALPAR,IRET)
      ELSE
         CALL MOYTEM('RIGI',3,1,'+',VALPAR,IRET)
      ENDIF
      NBPAR = 1
      NOMPAR = 'TEMP'

      CALL JEVECH('PMATERC','L',IMATE)
      IF((NOMTE.NE.'MECA_POU_D_EM') .AND.
     &   (NOMTE.NE.'MECA_POU_D_TGM')  )THEN
         CALL RCVALB(FAMI,KPG,SPT,POUM,ZI(IMATE),' ',OPTI,NBPAR,
     &               NOMPAR,VALPAR,NBRES,NOMRES,VALRES,CODRES,1)
         E = VALRES(1)
         XNU = VALRES(2)
         G = E/ (DEUX* (UN+XNU))
      END IF

C     --- RECUPERATION DES ORIENTATIONS ---
      CALL JEVECH('PCAORIE','L',LORIEN)

      DO 25 I = 1 , 105
            KLV(I) = 0.D0
 25   CONTINUE

C     --- CALCUL DE LA MATRICE DE RIGIDITE LOCALE ---
      IF ((NOMTE.EQ.'MECA_POU_D_EM') .OR.
     &    (NOMTE.EQ.'MECA_POU_D_TGM') ) THEN
         CALL PMFRIG(NOMTE,ZI(IMATE),KLV)
      ELSEIF (NOMTE.NE.'MECA_POU_D_TG') THEN
         CALL PORIGI(NOMTE,E,XNU,KLV)
      END IF

      CALL JEVECH('PMATUUR','E',LMAT)

      IF (NOMTE.EQ.'MECA_POU_D_EM' .OR.
     &    NOMTE.EQ.'MECA_POU_D_E' .OR.
     &    NOMTE.EQ.'MECA_POU_D_T') THEN
         NNO = 2
         NC = 6
         CALL MATROT(ZR(LORIEN),PGL)
         CALL UTPSLG(NNO,NC,PGL,KLV,ZR(LMAT))

      ELSE IF (NOMTE.EQ.'MECA_POU_C_T') THEN
         CALL JEVECH('PGEOMER','L',LX)
         LX = LX - 1
         XL = SQRT( (ZR(LX+4)-ZR(LX+1))**2 +
     &              (ZR(LX+5)-ZR(LX+2))**2 +
     &              (ZR(LX+6)-ZR(LX+3))**2 )
         CALL JEVECH('PCAARPO','L',LRCOU)
         RAD = ZR(LRCOU)
         ANGARC = ZR(LRCOU+1)
         ANGS2 = TRIGOM('ASIN',XL/ (DEUX*RAD))
         CALL MATRO2(ZR(LORIEN),ANGARC,ANGS2,PGL1,PGL2)
         CALL CHGREP('LG',PGL1,PGL2,KLV,ZR(LMAT))

      ELSEIF (NOMTE.EQ.'MECA_POU_D_TGM') THEN
         NNO = 2
         NC  = 7
         CALL MATROT ( ZR(LORIEN) , PGL )
         CALL UTPSLG ( NNO, NC, PGL, KLV, ZR(LMAT) )
      ELSEIF (NOMTE.EQ.'MECA_POU_D_TG') THEN
C     --- CARACTERISTIQUES GENERALES DES SECTIONS ---
         CALL JEVECH('PCAGNPO','L',LSECT)
         LSECT = LSECT - 1
         A = ZR(LSECT+1)
         XIY = ZR(LSECT+2)
         XIZ = ZR(LSECT+3)
         ALFAY = ZR(LSECT+4)
         ALFAZ = ZR(LSECT+5)
         EY = -ZR(LSECT+6)
         EZ = -ZR(LSECT+7)
         XJX = ZR(LSECT+8)
         XJG = ZR(LSECT+12)
         NNO = 2
         NC  = 7
C     --- COORDONNEES DES NOEUDS ---
         CALL JEVECH('PGEOMER','L',LX)
         LX = LX - 1
         XL = SQRT( (ZR(LX+4)-ZR(LX+1))**2 +
     &              (ZR(LX+5)-ZR(LX+2))**2 +
     &              (ZR(LX+6)-ZR(LX+3))**2 )
         IF (XL.EQ.ZERO) THEN
           CALL TECAEL(IADZI,IAZK24)
           NOMAIL = ZK24(IAZK24-1+3)(1:8)
           CALL U2MESK('F','ELEMENTS2_43',1,NOMAIL)
         ENDIF
C     --- CALCUL DES MATRICES ELEMENTAIRES ----
         IF ( OPTION(1:9) .EQ. 'RIGI_MECA' .OR.
     &        OPTION(1:9) .EQ. 'RIGI_FLUI') THEN
            CALL PTKA21(KLV,E,A,XL,XIY,XIZ,XJX,XJG,G,ALFAY,
     &                  ALFAZ,EY,EZ)
         ENDIF
C        --- PASSAGE DU REPERE LOCAL AU REPERE GLOBAL ---
         CALL MATROT ( ZR(LORIEN) , PGL )
         CALL UTPSLG ( NNO, NC, PGL, KLV, ZR(LMAT) )
      ELSE
         CALL U2MESK('F','ELEMENTS2_42',1,NOMTE)
      END IF

      END
