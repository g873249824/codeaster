      SUBROUTINE TE0593 ( OPTION , NOMTE )
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 11/04/2002   AUTEUR CIBHHLV L.VIVAN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C-----------------------------------------------------------------------
C    - CE PROGRAMME EST INSPIRE DE TE0073
C      LES MODIFICATIONS DE L'UN OU DE L'AUTRE DOIVENT ETRE SIMULTANEES
C
C    - FONCTION REALISEE:  CALCUL DES VECTEURS ELEMENTAIRES
C                          OPTION : 'CHAR_DLAG_TEXT_F'
C
C      - (1-THTIMP) .(H-) . (DLAGT-) . T*
C      + ( THTIMP.(H+).((TEXT+)-(T+))+(1-THTIMP)(H-).((TEXT-)-(T-)) ) .
C          DIV_SURF(THETA) . T*
C      + ( THTIMP.GRAD(H+)+(1-THTIMP)GRAD(H-) ).THETA .
C        ( THTIMP((TEXT+)-(T+))+(1-THTIMP)((TEXT-)-(T-)) ) . T*
C      + (THTIMP(H+)+(1-THTIMP)(H-)) .
C        (THTIMP.GRAD(TEXT+)+(1-THTIMP)GRAD(TEXT-).THETA) . T*
C
C    - H ET TEXT SONT CONSTANTS PAR ELEMENT, DONC LES DEUX DERNIERS
C      TERMES SONT NULS
C      ON EST FORCEMENT EN TRANSITOIRE, VU QUE H ET/OU TEXT
C      DEPENDENT DU TEMPS
C
C    - BORDS D'ELEMENTS ISOPARAMETRIQUES 2D
C
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C   -------------------------------------------------------------------
C     SUBROUTINES APPELLEES:
C       JEVEUX: JEVETE, JEVECH.
C       ELEMENT_FINI: CONNEC, VFF2DN.
C       GEOM. DIFF. : SUBAC1, SUMETR, SUBACV.
C       DIVERS: FOINTE.
C     FONCTIONS INTRINSEQUES:
C       R8PREM, ABS.
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C      28/08/00 (OB): TOILETTAGE FORTRAN. CALCUL DE LA
C                     DIVERGENCE SURFACIQUE PAR LA BASE CONTRAVARIANTE
C                     -> SUPPRESSION DU RECOURS AU GRADIENT ET A LA
C                     DIVERGENCE VOLUMIQUE APPROXIMES DE THETA QUI EST
C                     PAR DEFINITION SURFACIQUE !
C-----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE
      
C DECLARATION PARAMETRES D'APPELS
      CHARACTER*16        OPTION , NOMTE
      
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

C DECLARATION VARIABLES LOCALES      
      INTEGER       NBRES
      PARAMETER     ( NBRES=3 )
      CHARACTER*8   NOMPAR(NBRES),ELREFE
      CHARACTER*24  CARAC,FF
      REAL*8     COORSE(18),VECTT(9), R, Z, NX, NY, POIDS, R8AUX, THETAR
      REAL*8     EPSI, R8PREM, FLUX, TEXT, HMO, HPL, TPOIMO, TMO, TPL
      REAL*8     THTIMP, UNMTHE, VALPAR(NBRES)
      REAL*8     COVA(3,3),METR(2,2),JAC,CNVA(3,2), A(2,2), DIVS
      INTEGER    IGEOM, IVECTT, ICARAC, IFF, IPOIDS, IVF, IDFDE, ITEMPS
      INTEGER    NNO, NPG, NSE, NNOP2, C(6,9), ISE, KP, I, K
      INTEGER    ICODE, IDLAGT, ICOEFH, ITEX, ITEMPM, ITEMPP, ITHETA
      INTEGER    IVF2, IDFDE2
      LOGICAL    AXI, THEGA1

C====
C 1. INITIALISATIONS
C====
      CALL ELREF1(ELREFE)

      EPSI = R8PREM ()
      CARAC='&INEL.'//ELREFE//'.CARAC'
      CALL JEVETE(CARAC,'L',ICARAC)
      NNO = ZI(ICARAC)
      NPG = ZI(ICARAC+2)
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PVECTTH','L',ITHETA)
      CALL JEVECH('PVECTTR','E',IVECTT)
      CALL CONNEC ( NOMTE, ZR(IGEOM), NSE, NNOP2, C )
C
      DO 101 , I = 1 , NNOP2
        VECTT(I)=0.D0
  101 CONTINUE
C
C====
C 2. CALCUL
C====
C
C 2.1. ==> FIN DES INITIALISATIONS
C
      FF   ='&INEL.'//ELREFE//'.FF'
      CALL JEVETE(FF,'L',IFF)
      IPOIDS=IFF
      IVF   =IPOIDS+NPG
      IDFDE =IVF   +NPG*NNO
      CALL JEVECH('PCOEFHF','L',ICOEFH)
      CALL JEVECH('PT_EXTF','L',ITEX)
      CALL JEVECH('PTEMPSR','L',ITEMPS)
      CALL JEVECH('PTEMPER','L',ITEMPM)
      CALL JEVECH('PTEMPEP','L',ITEMPP)
      CALL JEVECH('PDLAGTE','L',IDLAGT)

      THTIMP = ZR(ITEMPS+2)
      UNMTHE = 1.D0 - THTIMP
      IF ( ABS(UNMTHE).LE.EPSI) THEN
        THEGA1 = .TRUE.
      ELSE
        THEGA1 = .FALSE.
      ENDIF

      IF ( NOMTE(3:4) .EQ. 'AX' ) THEN
        AXI = .TRUE.
      ELSE
        AXI = .FALSE.
      ENDIF

      NOMPAR(1) = 'X'
      NOMPAR(2) = 'Y'
      NOMPAR(3) = 'INST'

C 2.2. ==> BOUCLE SUR LES SOUS-ELEMENTS

      DO 200 , ISE=1,NSE

C 2.2.1. ==> COORDONNEES LOCALES

        DO 201 , I = 1 , NNO
          COORSE(2*I-1) = ZR(IGEOM+2*C(ISE,I)-2)
          COORSE(2*I)   = ZR(IGEOM+2*C(ISE,I)-1)
  201   CONTINUE

C 2.2.2. ==> BOUCLE SUR LES POINTS DE GAUSS

        DO 202 , KP = 1 , NPG

          K = (KP-1)*NNO

C 2.2.3. ==> CALCUL DES ELEMENTS DE GEOMETRIE DIFFERENTIELLE       
      
C CALCUL DE LA BASE COVARIANTE
          IVF2=IVF+K
          IDFDE2=IDFDE+K
          CALL SUBAC1(AXI,NNO,ZR(IVF2),ZR(IDFDE2),ZR(IGEOM),COVA)

C CALCUL DU TENSEUR METRIQUE
          CALL SUMETR(COVA,METR,JAC)

C CALCUL DES DEUX PREMIERS VECTEURS DE LA BASE CONTRAVARIANTE
          CALL SUBACV(COVA,METR,JAC,CNVA,A)

C 2.2.4. ==> CALCUL DE LA DIVERGENCE SURFACIQUE PROPREMENT DITE
          CALL VFF2DN ( NNO, ZR(IPOIDS+KP-1), ZR(IDFDE+K),
     >                  COORSE, NX, NY, POIDS )

C CALCUL DIRECT DE LA DIVERGENCE SURFACIQUE EN 1D
C DIV_SURF(THETA) = SIGMA SUR LES NOEUDS DE
C                 DERIVEE_FONCT_FORME/PREMIERE_VAR (POINT_DE_GAUSS) *
C                (THETA_X(PDG)*PREMIER_VECTEUR_CONTRAVARIANT_X(PDG) +
C                 IDEM EN Y)
          DIVS = 0.D0
          R = 0.D0
          Z = 0.D0
          TMO    = 0.D0
          TPL    = 0.D0
          TPOIMO = 0.D0
          DO 203 , I = 1 , NNO
            R8AUX = ZR(IVF+K+I-1)
            R = R + COORSE(2*I-1) * R8AUX
            Z = Z + COORSE(2*I)   * R8AUX
            TMO    = TMO    + ZR(ITEMPM+C(ISE,I)-1)*R8AUX
            TPL    = TPL    + ZR(ITEMPP+C(ISE,I)-1)*R8AUX
            TPOIMO = TPOIMO + ZR(IDLAGT+C(ISE,I)-1)*R8AUX
            R8AUX  = ZR(IDFDE+K+I-1)
            DIVS   = DIVS + R8AUX*(ZR(ITHETA+2*I-2)*CNVA(1,1) +
     >                           ZR(ITHETA+2*I-1)*CNVA(2,1))
  203     CONTINUE

C 2.2.5. ==> TRAITEMENT PARTICULIER LIE A L'AXI (1/R ET POIDS)        

C EN 2D-AXI, MODIFICATION DU POIDS ET TERME COMPLEMENTAIRE SUR
C LA DIVERGENCE EN THETAR/R
C IL N'Y A AUCUN RISQUE QUE R SOIT NUL, CAR CELA SIGNIFIERAIT UNE
C CL DE FLUX SUR L'AXE, CE QUI EST IMPOSSIBLE. DONC ON PEUT DIVISER
C PAR R.

          IF ( AXI ) THEN
            THETAR = 0.D0
            DO 204 , I = 1 , NNO
              THETAR = THETAR + ZR(ITHETA+2*C(ISE,I)-2) * ZR(IVF+K+I-1)
  204       CONTINUE
            POIDS = POIDS*R
            DIVS = DIVS + THETAR / R
          ENDIF

C 2.2.6. ==> CALCUL DU FLUX INSTANTANE

          VALPAR(1) = R
          VALPAR(2) = Z
          VALPAR(3) = ZR(ITEMPS)

          CALL FOINTE('FM',ZK8(ICOEFH),3,NOMPAR,VALPAR,HPL,ICODE)
          CALL FOINTE('FM',ZK8(ITEX)  ,3,NOMPAR,VALPAR,TEXT,ICODE)
          FLUX = HPL * ( TEXT - TPL )

          VALPAR(3) = ZR(ITEMPS)-ZR(ITEMPS+1)
          CALL FOINTE('FM',ZK8(ICOEFH),3,NOMPAR,VALPAR,HMO,ICODE)
          IF ( .NOT.THEGA1 ) THEN
            CALL FOINTE('FM',ZK8(ITEX),3,NOMPAR,VALPAR,TEXT,ICODE)
            FLUX = THTIMP * FLUX
     >           + UNMTHE * HMO * ( TEXT - TMO )
          ENDIF

C 2.2.7. ==> CALCUL DES DEUX PREMIERES INTEGRALES

C CUMUL DE
C      - (1-THTIMP) .(H-) . (DLAGT-) . T*
C      + ( THTIMP.(H+).((TEXT+)-(T+))+(1-THTIMP)(H-).((TEXT-)-(T-)) ) .
C        (DIV(THETA)-DTHETA/DN.N) . T*

          R8AUX = ( - UNMTHE * HMO * TPOIMO + FLUX * DIVS ) * POIDS

          DO 205 , I = 1 , NNO
            VECTT(C(ISE,I)) = VECTT(C(ISE,I)) + R8AUX * ZR(IVF+K+I-1)
  205     CONTINUE

  202   CONTINUE

  200 CONTINUE

C====
C 3. BASCULE DANS LE VECTEUR GENERAL
C====

      DO 300 , I = 1 , NNOP2
        ZR(IVECTT-1+I)=VECTT(I)
  300 CONTINUE

      END
