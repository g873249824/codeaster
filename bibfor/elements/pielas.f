       SUBROUTINE  PIELAS(NDIM  ,NPG   ,KPG   ,COMPOR,TYPMOD,
     &                    MATE  ,ELGEOM,LGPG  ,VIM   ,EPSM  ,
     &                    EPSP  ,EPSD  ,SIGMA ,ETAMIN,ETAMAX,
     &                    TAU   ,COPILO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 16/03/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
       IMPLICIT NONE
       INTEGER       NDIM, KPG,NPG
       INTEGER       MATE
       CHARACTER*8   TYPMOD(*)
       CHARACTER*16  COMPOR(*)
       INTEGER       LGPG
       REAL*8        VIM(LGPG,NPG)
       REAL*8        EPSM(6),EPSP(6),EPSD(6)
       REAL*8        COPILO(5,NPG)
       REAL*8        ETAMIN,ETAMAX,TAU
       REAL*8        SIGMA(6)
       REAL*8        ELGEOM(10,*)
C       
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (PILOTAGE - PRED_ELAS/DEFORMATION)
C
C PILOTAGE PAR PREDICTION ELASTIQUE
C
C ----------------------------------------------------------------------
C
C
C IN  NDIM   : DIMENSION DE L'ESPACE
C IN  NPG    : NOMBRE DE POINTS DE GAUSS
C IN  KPG    : NUMERO DU POINT DE GAUSS
C IN  TYPMOD : TYPE DE MODELISATION
C IN  MATE   : MATERIAU CODE
C IN  ELGEOM : TABLEAUX DES ELEMENTS GEOMETRIQUES SPECIFIQUES AUX LOIS
C              DE COMPORTEMENT (DIMENSION MAXIMALE FIXEE EN DUR, EN
C              FONCTION DU NOMBRE MAXIMAL DE POINT DE GAUSS)
C IN  COMPOR : COMPORTEMENT
C IN  LGPG   : "LONGUEUR" DES VARIABLES INTERNES POUR 1 POINT DE GAUSS
C             CETTE LONGUEUR EST UN MAJORANT DU NBRE REEL DE VAR. INT.
C IN  VIM    : VARIABLES INTERNES EN T-
C IN  EPSM   : DEFORMATIONS AU TEMPS MOINS
C IN  EPSP   : CORRECTION DE DEFORMATIONS DUES AUX CHARGES FIXES
C IN  EPSD   : CORRECTION DE DEFORMATIONS DUES AUX CHARGES PILOTEES
C IN  SIGMA  : CONTRAINTES AVEC SQRT(2)
C IN  ETAMIN : BORNE INF. PILOTAGE
C IN  ETAMAX : BORNE SUP. PILOTAGE
C IN  TAU    : 2ND MEMBRE DE L'EQUATION F(ETA)=TAU
C OUT COPILO : COEFFICIENTS A0 ET A1 POUR CHAQUE POINT DE GAUSS
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER  NDIMSI
      REAL*8   R8VIDE
C
C ----------------------------------------------------------------------
C

C
C --- INITIALISATIONS
C
      NDIMSI = 2*NDIM
C
C --- CALCUL SUIVANT COMPORTEMENT
C      
      IF (COMPOR(1).EQ.'ENDO_FRAGILE') THEN
        CALL DAXPY (NDIMSI,1.D0  ,EPSM  ,1     ,EPSP  ,1)
        CALL PIPEEF(NDIM  ,TYPMOD,TAU   ,MATE ,VIM(1,KPG),
     &              EPSP  ,EPSD  , 
     &              COPILO(1,KPG),COPILO(2,KPG),COPILO(3,KPG),
     &              COPILO(4,KPG),COPILO(5,KPG))

      ELSE IF (COMPOR(1).EQ.'VMIS_ISOT_TRAC' .OR.
     &         COMPOR(1).EQ.'VMIS_ISOT_LINE') THEN
        CALL PIPEPL(NDIM  ,COMPOR(1) ,TYPMOD,TAU   ,MATE ,
     &              SIGMA ,VIM(1,KPG),EPSP  ,EPSD  ,COPILO(1,KPG),
     &              COPILO(2,KPG),COPILO(3,KPG),COPILO(4,KPG),
     &              COPILO(5,KPG))

      ELSEIF (COMPOR(1).EQ.'ENDO_ISOT_BETON') THEN
        CALL DAXPY(NDIMSI, 1.D0, EPSM,1, EPSP,1)

        IF (ETAMIN.EQ.R8VIDE() .OR. ETAMAX.EQ.R8VIDE()) THEN
          CALL U2MESS('F','PILOTAGE_89')
        ENDIF  

        CALL PIPEDS(NDIM         ,TYPMOD,TAU   ,MATE  ,VIM(1,KPG),
     &              EPSM         ,EPSP  ,EPSD  ,ETAMIN,ETAMAX    ,
     &              COPILO(1,KPG),COPILO(2,KPG),
     &              COPILO(3,KPG),COPILO(4,KPG),COPILO(5,KPG))

      ELSEIF (COMPOR(1).EQ.'ENDO_ORTH_BETON') THEN
        CALL DAXPY(NDIMSI, 1.D0, EPSM,1, EPSP,1)

        IF (ETAMIN.EQ.R8VIDE() .OR. ETAMAX.EQ.R8VIDE()) THEN
          CALL U2MESS('F','PILOTAGE_90')
        ENDIF  

        CALL PIPEDO(NDIM         ,TYPMOD,TAU   ,MATE  ,VIM(1,KPG),
     &              EPSM         ,EPSP  ,EPSD  ,ETAMIN,ETAMAX    ,
     &              COPILO(1,KPG),COPILO(2,KPG),
     &              COPILO(3,KPG),COPILO(4,KPG),COPILO(5,KPG))
      ELSEIF (COMPOR(1).EQ.'BETON_DOUBLE_DP') THEN
        CALL DAXPY(NDIMSI, 1.D0, EPSM,1, EPSP,1)
        
        CALL PIPEDP(KPG   ,1     ,NDIM      ,TYPMOD,MATE  ,
     &              EPSM  ,SIGMA ,VIM(1,KPG),EPSP  ,EPSD  ,
     &              ELGEOM(1,KPG),COPILO(1,KPG),COPILO(2,KPG))

      ELSE
        CALL U2MESK('F','PILOTAGE_88',1,COMPOR(1))
      END IF
      END
