      SUBROUTINE CRESO1(SOLVEU,METHOD,PRECO,RENUM,SYME,SDFETI,EPS,
     &  RESIRE,TBLOC,NPREC,NMAXIT,ISTOP,NIREMP,IFM,NUMSD,NBMA,
     &  VERIF,TESTCO,NBREOR,TYREOR,SCALIN,INUMSD,IMAIL,NOMSD,INFOFE,
     &  STOGI)
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 10/01/2005   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
C-----------------------------------------------------------------------
C    - FONCTION REALISEE:  CREATION DES OBJETS JEVEUX DE LA STRUCTURE
C      DE DONNEES SOLVEUR. UTILITAIRE DE BAS NIVEAU LANCE PAR CRESOL.
C
C IN SOLVEU   : NOM DE LA SD SOLVEUR
C IN METHOD....NIREMP : SES PARAMETRES, POUR SIGNIFICATION VOIR CRESOL.
C IN IFM     : PARAMETRE POUR MONITORING.
C IN NUMSD   : NUMERO DE SOUS-DOMAINE
C IN NBMA    : NBRE DE MAILLES
C IN VERIF   : PARAMETRE POUR DEMANDER LA VERIFICATION DE SDFETI
C IN TESTCO  : PARAMETRE POUR TESTER LA CONTINUITE
C IN NBREOR/TYREOR : PARAMETRES POUR LA REOTHOGONALISATION DES
C              DIRECTIONS DE DESCENTE AVEC FETI
C IN SCALIN  : PARAMETRE DE SCALING POUR LE PRECONDITIONNEMENT FETI
C IN INUMSD : ADRESSE OBJET JEVEUX SDFETI//'.MAILLE.NUMSD' DESIGNANT
C   LE NUMERO DE SOUS-DOMAINE D'APPARTENANCE D'UNE MAILLE PHYSIQUE DU
C   MODELE DONNEE
C IN IMAIL   : ADRESSE JEVEUX DE L'OBJET MODELE//'.MAILLE'
C IN NOMSD   : NOM DU SOUS-DOMAINE
C IN INFOFE  : NIVEAU DE MONITORING POUR FETI
C IN STOGI   : PARAMETRE DE STOCKAGE DE LA MATRICE GI 
C   -------------------------------------------------------------------
C     SUBROUTINES APPELLEES:
C       MESSAGE:UTIMSD.
C       JEVEUX:WKVECT,JEMARQ,JEDEMA.
C
C     FONCTIONS INTRINSEQUES:
C       NONE.
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C       02/11/03 (OB): CREATION.
C----------------------------------------------------------------------
C RESPONSABLE BOITEAU O.BOITEAU
C CORPS DU PROGRAMME
      IMPLICIT NONE

C DECLARATION PARAMETRES D'APPELS
      INTEGER      NPREC,NMAXIT,ISTOP,NIREMP,IFM,NUMSD,NBMA,NBREOR,
     &             INUMSD,IMAIL
      REAL*8       EPS,RESIRE,TBLOC,TESTCO
      CHARACTER*3  SYME     
      CHARACTER*8  METHOD,PRECO,RENUM,VERIF,TYREOR,SCALIN,NOMSD,STOGI
      CHARACTER*19 SOLVEU
      CHARACTER*24 SDFETI,INFOFE

C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX --------------------

C DECLARATION VARIABLES LOCALES
      INTEGER      ISLVK,ISLVR,ISLVI,I,NBMASD,IFETA,IBUFF,
     &             NBCHA,IFLII,IFLIN,IFLIM,INUMCH,DECAL,J,
     &             IRET,IFREF
      CHARACTER*2  K2BID
      CHARACTER*3  K3BID
      CHARACTER*8  K8BID
      CHARACTER*24 K24B,NOMLOG
      CHARACTER*32 JEXNOM,JEXNUM
      
C------------------------------------------------------------------
      CALL JEMARQ()

C --------------------------------------------------------------
C CREATION DES DIFFERENTS ATTRIBUTS DE LA S.D. SOLVEUR
C --------------------------------------------------------------
      CALL WKVECT(SOLVEU(1:19)//'.SLVK','V V K24',9,ISLVK)
      CALL WKVECT(SOLVEU(1:19)//'.SLVR','V V R',4,ISLVR)
      CALL WKVECT(SOLVEU(1:19)//'.SLVI','V V I',5,ISLVI)

C --------------------------------------------------------------
C REMPLISSAGE DE LA SD SOLVEUR
C --------------------------------------------------------------
      ZK24(ISLVK)   = METHOD
      ZK24(ISLVK+1) = PRECO
      ZK24(ISLVK+2) = VERIF
      ZK24(ISLVK+3) = RENUM
      ZK24(ISLVK+4) = SYME
      ZK24(ISLVK+5) = SDFETI
      ZK24(ISLVK+6) = TYREOR
      ZK24(ISLVK+7) = SCALIN
      ZK24(ISLVK+8) = STOGI
      
      ZR(ISLVR)   = EPS
      ZR(ISLVR+1) = RESIRE
      ZR(ISLVR+2) = TBLOC
      ZR(ISLVR+3) = TESTCO

      ZI(ISLVI)   = NPREC
      ZI(ISLVI+1) = NMAXIT
      ZI(ISLVI+2) = ISTOP
      ZI(ISLVI+3) = NIREMP
      ZI(ISLVI+4) = NBREOR
      
      
C MONITORING
      IF (INFOFE(1:1).EQ.'T') THEN
        WRITE(IFM,*)
        WRITE(IFM,*)'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD'
        IF (NUMSD.EQ.0) THEN
          WRITE(IFM,*)'<FETI/CRESO1> DOMAINE GLOBAL'
        ELSE
          WRITE(IFM,*)'<FETI/CRESO1> NUMERO DE SOUS-DOMAINE: ',
     &      NUMSD       
        ENDIF   
        WRITE(IFM,*)'<FETI/CRESO1> CREATION OBJETS JEVEUX ',
     &    SOLVEU(1:19),' SUR LA BASE V' 
        WRITE(IFM,*)'.SLVK: ',METHOD,' ',PRECO,' ',VERIF,' ',
     &    RENUM,' ',SYME,' ',SDFETI(1:8),' ',TYREOR,' ',SCALIN,
     &    ' ',STOGI
        WRITE(IFM,*)'.SLVR: ',EPS,' ',RESIRE,' ',TBLOC,' ',
     &     TESTCO
        WRITE(IFM,*)'.SLVI: ',NPREC,' ',NMAXIT,' ',ISTOP,
     &    ' ',NIREMP,' ',NBREOR
        WRITE(IFM,*)
      ENDIF     
                        
      IF (INFOFE(2:2).EQ.'T') 
     &  CALL UTIMSD(IFM,2,.FALSE.,.TRUE.,SOLVEU(1:19),1,'V')

C REMPLISSAGE DU VECTEUR AUXILIAIRE SDFETI(1:8)//'.MAILLE.NUMSD'
      IF (NUMSD.NE.0) THEN
        CALL JELIRA(JEXNUM(SDFETI(1:19)//'.FETA',NUMSD),'LONMAX',NBMASD
     &    ,K8BID)
        CALL JEVEUO(JEXNUM(SDFETI(1:19)//'.FETA',NUMSD),'L',IFETA)
        DO 5 I=1,NBMASD
          IBUFF=ZI(IFETA+I-1)
          IF (ZI(INUMSD+IBUFF-1).GT.0) THEN
C MAILLE COMMUNE A PLUSIEURS SOUS-DOMAINES            
              CALL UTDEBM('F','CRESO1','LA MAILLE DE NUMERO')
              CALL UTIMPI('S',': ',1,IBUFF)
              CALL UTIMPI('L','APPARTIENT A PLUSIEURS SOUS-DOMAINES!',
     &         0,0)
              CALL UTFINM()       
          ELSE
            ZI(INUMSD+IBUFF-1)=NUMSD
          ENDIF
    5   CONTINUE
      ELSE IF ((NUMSD.EQ.0).AND.(METHOD(1:4).EQ.'FETI')) THEN
        IF (INFOFE(2:2).EQ.'T') THEN
          NOMLOG=SDFETI(1:8)//'.MAILLE.NUMSD' 
          CALL UTIMSD(IFM,2,.FALSE.,.TRUE.,NOMLOG(1:19),1,'V')
        ENDIF      
C VERIFICATION QUE TOUTES LES MAILLES PHYSIQUES DU MODELE SONT DANS UN
C SOUS-DOMAINE      
        DO 7 I=1,NBMA
          IBUFF=ZI(INUMSD+I-1)
          IF (IBUFF.LT.0) THEN
C MAILLE PAS DANS LA PARTITION FETI       
            IF (ZI(IMAIL-1+I).NE.0) THEN
C MAILLE POURTANT DANS LE MODELE            
              CALL UTDEBM('F','CRESO1','LA MAILLE DU MODELE DE NUMERO')
              CALL UTIMPI('S',': ',1,I)
              CALL UTIMPI('L','APPARTIENT A AUCUN SOUS-DOMAINE !',0,0)
              CALL UTFINM()
            ENDIF
          ENDIF 
    7   CONTINUE                
      ENDIF
      
      IF (INFOFE(1:1).EQ.'T') THEN 
        WRITE(IFM,*)'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD'        
        WRITE(IFM,*)
      ENDIF             
C FIN ------------------------------------------------------
      CALL JEDEMA()
      END
