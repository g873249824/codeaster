      SUBROUTINE CRESO1(SOLVEU,METHOD,PRECO,RENUM,SYME,SDFETI,EPS,
     &                  RESIRE,TBLOC,NPREC,NMAXIT,ISTOP,NIREMP,IFM,
     &                  NUMSD,NBMA,VERIF,TESTCO,NBREOR,TYREOR,SCALIN,
     &                  INUMSD,IMAIL,INFOFE,STOGI,TESTOK,NBREOI,
     &                  ACMA,ACSM,REACRE)
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C-----------------------------------------------------------------------
C    BUT :  REMPLISSAGE DE LA SD SOLVEUR FETI (NIVEAU 2)
C-----------------------------------------------------------------------
C IN SOLVEU   : NOM DE LA SD SOLVEUR
C IN METHOD....NIREMP : SES PARAMETRES, POUR SIGNIFICATION VOIR CRESOL.
C IN IFM     : PARAMETRE POUR MONITORING.
C IN NUMSD   : NUMERO DE SOUS-DOMAINE
C IN NBMA    : NBRE DE MAILLES
C IN VERIF   : PARAMETRE POUR DEMANDER LA VERIFICATION DE SDFETI
C IN TESTCO  : PARAMETRE POUR TESTER LA CONTINUITE
C IN NBREOR/TYREOR : PARAMETRES POUR LA REOTHOGONALISATION DES
C              DIRECTIONS DE DESCENTE AVEC FETI
C IN SCALIN  : PARAMETRE DE SCALING POUR LE PRECONDITIONNEMENT FETI
C IN INUMSD : ADRESSE OBJET JEVEUX '&FETI.MAILLE.NUMSD' DESIGNANT
C   LE NUMERO DE SOUS-DOMAINE D'APPARTENANCE D'UNE MAILLE PHYSIQUE DU
C   MODELE DONNEE
C IN IMAIL   : ADRESSE JEVEUX DE L'OBJET MODELE//'.MAILLE'
C IN INFOFE  : NIVEAU DE MONITORING POUR FETI
C IN STOGI   : PARAMETRE DE STOCKAGE DE LA MATRICE GI
C IN TESTOK  : FLAG SUR LA MISE EN OEUVRE DE TESTS DE COHERENCE
C IN NBREOI  : NBRE DE PAS DE TEMPS UTLILISES POUR REORTHO SI LIST_INST
C IN ACMA/ACSM : ACCELERATION POUR PB A MULTIPLES MATRICES ET
C               SECONDS MEMBRES
C IN REACRE  : FREQUENCE DE REACTUALISATION DU RESIDU
C----------------------------------------------------------------------
C RESPONSABLE BOITEAU O.BOITEAU
C CORPS DU PROGRAMME
      IMPLICIT NONE

C DECLARATION PARAMETRES D'APPELS
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      INTEGER SDSOLV,ZSLVK ,ZSLVR ,ZSLVI
      INTEGER NPREC,NMAXIT,ISTOP,NIREMP,IFM,NUMSD,NBMA,NBREOR,INUMSD,
     &        IMAIL,NBREOI,REACRE
      REAL*8 EPS,RESIRE,TBLOC,TESTCO
      CHARACTER*3 SYME
      CHARACTER*8 PRECO,RENUM,VERIF,TYREOR,SCALIN,STOGI,
     &            ACMA,ACSM
      CHARACTER*16 METHOD
      CHARACTER*19 SOLVEU
      CHARACTER*24 SDFETI,INFOFE
      LOGICAL TESTOK

      INTEGER VALI(2)

C DECLARATION VARIABLES LOCALES
      INTEGER ISLVK,ISLVR,ISLVI,I,NBMASD,IFETA,IBUFF
      CHARACTER*8 K8BID
      CHARACTER*24 NOMLOG,SDFETA

C------------------------------------------------------------------
      CALL JEMARQ()

C --------------------------------------------------------------
C CREATION DES DIFFERENTS ATTRIBUTS DE LA S.D. SOLVEUR
C --------------------------------------------------------------
      ZSLVK = SDSOLV('ZSLVK')
      ZSLVR = SDSOLV('ZSLVR')
      ZSLVI = SDSOLV('ZSLVI')
      CALL WKVECT(SOLVEU(1:19)//'.SLVK','V V K24',ZSLVK ,ISLVK )
      CALL WKVECT(SOLVEU(1:19)//'.SLVR','V V R'  ,ZSLVR ,ISLVR )
      CALL WKVECT(SOLVEU(1:19)//'.SLVI','V V I'  ,ZSLVI ,ISLVI )

C --------------------------------------------------------------
C REMPLISSAGE DE LA SD SOLVEUR
C --------------------------------------------------------------
      ZK24(ISLVK-1+1)  = METHOD
      ZK24(ISLVK-1+2)  = PRECO
      ZK24(ISLVK-1+3)  = VERIF
      ZK24(ISLVK-1+4)  = RENUM
      ZK24(ISLVK-1+5)  = SYME
      ZK24(ISLVK-1+6)  = SDFETI
      ZK24(ISLVK-1+7)  = TYREOR
      ZK24(ISLVK-1+8)  = SCALIN
      ZK24(ISLVK-1+9)  = STOGI
      ZK24(ISLVK-1+10)  = ACMA
      ZK24(ISLVK-1+11) = ACSM
      ZK24(ISLVK-1+12) = 'XXXX'

      ZR(ISLVR-1+1) = EPS
      ZR(ISLVR-1+2) = RESIRE
      ZR(ISLVR-1+3) = TBLOC
      ZR(ISLVR-1+4) = TESTCO

      ZI(ISLVI-1+1) = NPREC
      ZI(ISLVI-1+2) = NMAXIT
      ZI(ISLVI-1+3) = ISTOP
      ZI(ISLVI-1+4) = NIREMP
      ZI(ISLVI-1+5) = NBREOR
      ZI(ISLVI-1+6) = NBREOI
      ZI(ISLVI-1+7) = REACRE
      ZI(ISLVI-1+8) = 0


C --------------------------------------------------------------
C SI ON UTILISE FETI
C --------------------------------------------------------------
C MONITORING
      IF (METHOD(1:4).EQ.'FETI') THEN
        IF (INFOFE(1:1).EQ.'T') THEN
          IF (NUMSD.EQ.0) THEN
            WRITE (IFM,*) '<FETI/CRESO1> DOMAINE GLOBAL'

          ELSE
            WRITE (IFM,*) '<FETI/CRESO1> SD: ',NUMSD
          END IF
        END IF
        IF (INFOFE(2:2).EQ.'T') CALL UTIMSD(IFM,2,.FALSE.,.TRUE.,
     &                               SOLVEU(1:19),1,'V')
      END IF

C REMPLISSAGE DU VECTEUR AUXILIAIRE '&FETI.MAILLE.NUMSD'
      IF (NUMSD.NE.0) THEN
        SDFETA = SDFETI(1:19)//'.FETA'
        CALL JELIRA(JEXNUM(SDFETA,NUMSD),'LONMAX',NBMASD,K8BID)
        CALL JEVEUO(JEXNUM(SDFETA,NUMSD),'L',IFETA)
        DO 10 I = 1,NBMASD
          IBUFF = ZI(IFETA+I-1)
          IF (ZI(INUMSD+IBUFF-1).GT.0) THEN
C MAILLE COMMUNE A PLUSIEURS SOUS-DOMAINES
             VALI (1) = IBUFF
             CALL U2MESI('F', 'ALGORITH16_98',1,VALI)
          ELSE
             ZI(INUMSD+IBUFF-1) = NUMSD
          END IF
   10   CONTINUE

      ELSE IF ((NUMSD.EQ.0) .AND. (METHOD(1:4).EQ.'FETI')) THEN
        IF (INFOFE(2:2).EQ.'T') THEN
          NOMLOG = '&FETI.MAILLE.NUMSD'
          CALL UTIMSD(IFM,2,.FALSE.,.TRUE.,NOMLOG(1:19),1,'V')
        END IF
        IF (TESTOK) THEN
C VERIFICATION QUE TOUTES LES MAILLES PHYSIQUES DU MODELE SONT DANS UN
C SOUS-DOMAINE SI ON EST EN SEQUENTIEL
          DO 20 I = 1,NBMA
            IBUFF = ZI(INUMSD+I-1)
            IF (IBUFF.LT.0) THEN
C MAILLE PAS DANS LA PARTITION FETI
              IF (ZI(IMAIL-1+I).NE.0) THEN
C MAILLE POURTANT DANS LE MODELE
                VALI (1) = I
                CALL U2MESI('F', 'ELEMENTS4_76',1,VALI)
              END IF
            END IF
   20     CONTINUE
        END IF
      END IF

C FIN ------------------------------------------------------
      CALL JEDEMA()
      END
