      SUBROUTINE TE0560(OPTION,NOMTE)

C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*16 OPTION,NOMTE
C ......................................................................
C    - FONCTION REALISEE:  CALCUL DES OPTIONS NON-LINEAIRES MECANIQUES
C                          EN 2D (CPLAN ET DPLAN) ET AXI
C                          POUR LES ELEMNTS GRAD_VARI
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................

      LOGICAL MATSYM,LTEATT

      INTEGER DLNS
      INTEGER NNO,NPG1,I,IMATUU,LGPG,LGPG1,NDIM
      INTEGER IPOIDS,IVF,IDFDE,IGEOM,IMATE
      INTEGER NNOB,IVFB,IDFDEB,JGANOB
      INTEGER ICONTM,IVARIM
      INTEGER IINSTM,IINSTP,IDEPLM,IDEPLP,ICOMPO,ICARCR
      INTEGER IVECTU,ICONTP,IVARIP,NNOS,JGANO
      INTEGER IVARIX,IRET,IDIM
      INTEGER JTAB(7),JCRET,CODRET

      REAL*8 XYZ(3)
      REAL*8 ANGMAS(7)

      INTEGER ICODR1
      CHARACTER*8 TYPMOD(2)
      CHARACTER*16 PHENOM


      IF (OPTION(1:9).EQ.'MASS_MECA') THEN
        CALL ELREFV(NOMTE,'MASS',NDIM,NNO,NNOB,NNOS,NPG1,IPOIDS,IVF,
     &              IVFB,IDFDE,IDFDEB,JGANO,JGANOB)
      ELSE
        CALL ELREFV(NOMTE,'RIGI',NDIM,NNO,NNOB,NNOS,NPG1,IPOIDS,IVF,
     &              IVFB,IDFDE,IDFDEB,JGANO,JGANOB)
      ENDIF

C     TYPE DE MODELISATION
      IF (LTEATT(' ','AXIS','OUI')) THEN
        TYPMOD(1) = 'AXIS    '
      ELSE IF (LTEATT(' ','C_PLAN','OUI')) THEN
        TYPMOD(1) = 'C_PLAN  '
      ELSE IF (LTEATT(' ','D_PLAN','OUI')) THEN
        TYPMOD(1) = 'D_PLAN  '
      ELSE IF (NOMTE(1:4).EQ.'MNVG') THEN
        TYPMOD(1) = '3D      '
      ELSE
C     NOM D'ELEMENT ILLICITE
        CALL ASSERT(NOMTE(1:4).EQ.'MNVG')
      END IF

      TYPMOD(2) = 'GDVARINO'
      CODRET = 0

C     PARAMETRES EN ENTREE

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)

      IF (OPTION(1:9).EQ.'MASS_MECA') THEN
C ---------------- CALCUL MATRICE DE MASSE ------------------------

        CALL JEVECH('PMATUUR','E',IMATUU)

        IF (NDIM.EQ.2) THEN
C     2 DEPLACEMENT + VARI
          DLNS = 3
        ELSEIF (NDIM.EQ.3) THEN
C     3 DEPLACEMENT + VARI
          DLNS = 4
        ELSE
          CALL ASSERT(NDIM .EQ. 3)
        ENDIF

        CALL MASSUP(OPTION,NDIM,DLNS,NNO,NNOB,ZI(IMATE),PHENOM,
     &              NPG1,IPOIDS,IDFDE,ZR(IGEOM),ZR(IVF),
     &              IMATUU,ICODR1,IGEOM,IVF)

C --------------- FIN CALCUL MATRICE DE MASSE -----------------------
      ELSE

        CALL JEVECH('PCONTMR','L',ICONTM)
        CALL JEVECH('PVARIMR','L',IVARIM)
        CALL JEVECH('PDEPLMR','L',IDEPLM)
        CALL JEVECH('PDEPLPR','L',IDEPLP)
        CALL JEVECH('PCOMPOR','L',ICOMPO)
        CALL JEVECH('PCARCRI','L',ICARCR)

        CALL TECACH('OON','PVARIMR',7,JTAB,IRET)
        LGPG1 = MAX(JTAB(6),1)*JTAB(7)
        LGPG = LGPG1

C     ORIENTATION DU MASSIF
C     COORDONNEES DU BARYCENTRE ( POUR LE REPRE CYLINDRIQUE )

        XYZ(1) = 0.D0
        XYZ(2) = 0.D0
        XYZ(3) = 0.D0

        DO 150 I = 1,NNO
          DO 140 IDIM = 1,NDIM
            XYZ(IDIM) = XYZ(IDIM)+ZR(IGEOM+IDIM+NDIM*(I-1)-1)/NNO
 140      CONTINUE
 150    CONTINUE
        CALL RCANGM ( NDIM, XYZ, ANGMAS )

C     VARIABLES DE COMMANDE

        CALL JEVECH('PINSTMR','L',IINSTM)
        CALL JEVECH('PINSTPR','L',IINSTP)

C     PARAMETRES EN SORTIE

        IF (OPTION(1:10).EQ.'RIGI_MECA_' .OR.
     &      OPTION(1:9).EQ.'FULL_MECA') THEN
          CALL NMTSTM(ZK16(ICOMPO),IMATUU,MATSYM)
        END IF

        IF (OPTION(1:9).EQ.'RAPH_MECA' .OR.
     &      OPTION(1:9).EQ.'FULL_MECA') THEN
          CALL JEVECH('PVECTUR','E',IVECTU)
          CALL JEVECH('PCONTPR','E',ICONTP)
          CALL JEVECH('PVARIPR','E',IVARIP)

C     ESTIMATION VARIABLES INTERNES A L'ITERATION PRECEDENTE
          CALL JEVECH('PVARIMP','L',IVARIX)
          CALL DCOPY(NPG1*LGPG,ZR(IVARIX),1,ZR(IVARIP),1)
        ELSE
          IVECTU=1
          ICONTP=1
          IVARIP=1
        END IF

        IF (OPTION.EQ.'RIGI_MECA_ELAS' .OR.
     &      OPTION.EQ.'FULL_MECA_ELAS' .OR.
     &      OPTION.EQ.'RAPH_MECA') THEN

          CALL NMGVNO('ELAS',NDIM,NNO,NNOB,NPG1,IPOIDS,ZR(IVF),
     &                 ZR(IVFB),IDFDE,IDFDEB,
     &                 ZR(IGEOM),TYPMOD,OPTION,ZI(IMATE),
     &                 ZK16(ICOMPO),LGPG,ZR(ICARCR),
     &                 ZR(IINSTM),ZR(IINSTP),
     &                 ZR(IDEPLM),ZR(IDEPLP),ANGMAS,ZR(ICONTM),
     &                 ZR(IVARIM),ZR(ICONTP),ZR(IVARIP),
     &                 ZR(IMATUU),ZR(IVECTU),CODRET)
        ELSE
          CALL NMGVNO('RIGI',NDIM,NNO,NNOB,NPG1,IPOIDS,ZR(IVF),
     &                 ZR(IVFB),IDFDE,IDFDEB,
     &                 ZR(IGEOM),TYPMOD,OPTION,ZI(IMATE),
     &                 ZK16(ICOMPO),LGPG,ZR(ICARCR),
     &                 ZR(IINSTM),ZR(IINSTP),
     &                 ZR(IDEPLM),ZR(IDEPLP),ANGMAS,ZR(ICONTM),
     &                 ZR(IVARIM),ZR(ICONTP),ZR(IVARIP),
     &                 ZR(IMATUU),ZR(IVECTU),CODRET)
        ENDIF

      ENDIF

      IF (ZK16(ICOMPO+2) .NE. 'PETIT')  CALL U2MESK('F','ELEMENTS3_16',1
     &,   ZK16(ICOMPO+2))



        IF (OPTION(1:9).EQ.'FULL_MECA' .OR.
     &      OPTION(1:9).EQ.'RAPH_MECA') THEN
          CALL JEVECH('PCODRET','E',JCRET)
          ZI(JCRET) = CODRET
        END IF

      END
