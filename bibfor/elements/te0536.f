      SUBROUTINE TE0536(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 06/05/2003   AUTEUR CIBHHPD D.NUNEZ 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE
C ----------------------------------------------------------------------
C     FONCTION REALISEE:  CALCUL DES OPTIONS :
C     FORC_NODA, SIEF_ELNO_ELGA ET VARI_ELNO_ELGA
C     ELEMENT  POU_D_EM POUTRE DROITE D'EULER MULTIFIBRES

C     FORC_NODA : ON PREND LES EFFORTS GENERALISES AU POINT DE GAUSS
C       DE L'ELEMENT
C       (STOCKES EN PLUS A LA FIN DES CONTRAINTES DANS LES FIBRES)
C       ET ON LES TRANSPORTES AUX NOEUDS EN PASSANT DANS LE REPERE GLOB
C     SIEF_ELNO_ELGA : IDEM SANS PASSER DANS LE REPERE GLOBAL
C     VARI_ELNO_ELGA : ON MET LES VALEURS DU POINT DE GAUSS AUX NOEUDS

C IN  OPTION : OPTION DE CALCUL
C IN  NOMTE  : NOM DU TYPE ELEMENT
C ----------------------------------------------------------------------
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI,JTAB(7)
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR

C ----------------------------------------------------------------------

      INTEGER ICONTE,ICONTN,IORIEN,IGEOM,IVECTU
      INTEGER ICOMPO,IVARIN,IVARIG,NBVAR,LGPG
      INTEGER NNO,NC,ND,I,IRET
      INTEGER LX
      PARAMETER (NNO=2,NC=6,ND=NC*NNO)
      REAL*8 PGL(3,3),FL(ND)
      REAL*8 NX,TY,TZ,MX,MY,MZ,XL,XL2,DEUX
      PARAMETER (DEUX=2.D+0)
      INTEGER NBFIB,IPOS

      INTEGER IADZI,IAZK24,NUMMAI
C ----------------------------------------------------------------------



C     --- RECUPERATION DES CARACTERISTIQUES DES FIBRES :
      CALL JEVECH('PNBSP_I','L',I)
      NBFIB = ZI(I)


      IF (OPTION.EQ.'FORC_NODA' .OR. OPTION.EQ.'SIEF_ELNO_ELGA') THEN
C     ----------------------------------------------------------------
C       ==> ON DEVRAIT CALCULER CALCULE INTEGRALE(BT*SIGMA) AU 2 NOEUDS
C        ICI ON RECUPERE SIMPLEMENT CE QUI EST STOKE DANS ICONTE

        CALL JEVECH('PGEOMER','L',IGEOM)

        IF (OPTION.EQ.'FORC_NODA') THEN
          CALL TECACH('OON','PCONTMR',7,JTAB,IRET)
        ELSE
          CALL TECACH('OON','PCONTRR',7,JTAB,IRET)
        END IF
        ICONTE = JTAB(1)
        IF (JTAB(7).NE. (NBFIB+6)) CALL UTMESS('F','TE0536','STOP1')

C ---   LONGUEUR DE L'ELEMENT ---
        LX = IGEOM - 1
        XL = SQRT((ZR(LX+4)-ZR(LX+1))**2+ (ZR(LX+5)-ZR(LX+2))**2+
     +       (ZR(LX+6)-ZR(LX+3))**2)
        XL2 = XL/DEUX

C ---   ON UTILISE LE STOCKAGE
        IPOS=ICONTE+NBFIB
        NX=ZR(IPOS-1+1)
        TY=ZR(IPOS-1+2)
        TZ=ZR(IPOS-1+3)
        MX=ZR(IPOS-1+4)
        MY=ZR(IPOS-1+5)
        MZ=ZR(IPOS-1+6)

C ---   ET ENFIN LE VECTEUR NODAL

        FL(7) = NX
        FL(8) = TY
        FL(9) = TZ
        FL(10) = MX
        DO 10 I = 1,4
          FL(I) = -FL(I+6)
   10   CONTINUE
        FL(5) = -MY + TZ*XL2
        FL(6) = -MZ - TY*XL2
        FL(11) = MY + TZ*XL2
        FL(12) = MZ - TY*XL2
C DEBUG
C      IF(NUMMAI.EQ.1)WRITE(6,2222)FL
C 2222 FORMAT('FL536',12(2X,D10.4))
C FIN DEBUG

C ---   FORC_NODA : PASSAGE DU REPERE LOCAL AU REPERE GLOBAL ---
C ---   SIEF_ELNO_ELGA : ON MET DIRECTEMENT DANS PSIEFNOR ---
        IF (OPTION.EQ.'FORC_NODA') THEN
          CALL JEVECH('PCAORIE','L',IORIEN)
          CALL MATROT(ZR(IORIEN),PGL)
          CALL JEVECH('PVECTUR','E',IVECTU)
          CALL UTPVLG(NNO,NC,PGL,FL,ZR(IVECTU))
        ELSE
          CALL JEVECH('PSIEFNOR','E',ICONTN)
          DO 20 I = 1,12
            ZR(ICONTN+I-1) = FL(I)
   20     CONTINUE
        END IF

      ELSE IF (OPTION.EQ.'VARI_ELNO_ELGA') THEN
C  ==> VARI_ELNO_ELGA : ON MET LES VALEURS DU POINT DE GAUSS AUX NOEUDS

C  STOP STOP STOP STOP STOP STOP
C  J'AI UN PROBLEME AVEC LE NOMBRE DE VARIABLES AUX NOEUDS
C  QUI DEVRAIT ETRE MULTIPLIE PAR LE NOMBRE DE FIBRES
C  ON NE PEUT PAS MAGOUILLER COMME AUX POINTS DE GAUSS EN METTANT
C  UN NOMBRE TRES GRAND DANS LE CATALOGUE A PVARI_R
C  STOP STOP STOP STOP STOP STOP

C  CETTE OPTION EST DESACTIVEE DANS LE CATALOGUE
        CALL UTMESS('F','TE0536',
     +              'OPTION "VARI_ELNO_ELGA" IMPOSSIBLE ACTUELLEMENT')
        CALL JEVECH('PVARIGR','L',IVARIG)
        CALL JEVECH('PVARINR','E',IVARIN)

C ---   RECUPERATION DES RENSEIGNEMENTS VARIABLES INTERNES
        CALL JEVECH('PCOMPOR','L',ICOMPO)
        CALL TECACH('OON','PVARIGR',7,JTAB,IRET)
        LGPG = MAX(JTAB(6),1)*JTAB(7)
        READ (ZK16(ICOMPO+1),'(I16)') NBVAR
C ---   ON RECOPIE
        DO 30 I = 0,NBVAR*NBFIB
          ZR(IVARIN+I) = ZR(IVARIG+I)
          ZR(IVARIN+LGPG+I) = ZR(IVARIG+LGPG+I)
   30   CONTINUE
      END IF

      END
