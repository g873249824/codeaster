      SUBROUTINE GKMET4(NNOFF,NDIMTE,CHFOND,PAIR,IADRGK,
     &                   IADGKS,IADGKI,ABSCUR,NUM)
      IMPLICIT NONE

      INTEGER         NNOFF,IADRGK,IADGKS,IADGKI,NUM
      CHARACTER*24    CHFOND,ABSCUR
      LOGICAL          PAIR


C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 05/09/2006   AUTEUR REZETTE C.REZETTE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================

C ......................................................................
C      METHODE TEST POUR LE CALCUL DE G(S)
C      K1(S) K2(S) ET K3(S) DANS LE CADRE X-FEM
C
C ENTREE
C
C     MODELE   --> NOM DU MODELE
C     NNOFF    --> NOMBRE DE NOEUDS DU FOND DE FISSURE
C     NORMFF   --> VALEURS DE LA NORMALE SUR LE FOND DE FISSURE
C     FOND     --> NOMS DES NOEUDS DU FOND DE FISSURE
C     IADRGK    --> ADRESSE DE VALEURS DE GKTHI
C                 (G, K1, K2, K3 POUR LES CHAMPS THETAI)
C
C  SORTIE
C
C   IADGKS     --> ADRESSE DE VALEURS DE GKS 
C                   (VALEUR DE G(S), K1(S), K2(S), K3(S))
C   IADGKI     --> ADRESSE DE VALEURS DE GKTHI
C                  (G, K1, K2, K3 POUR LES CHAMPS THETAI)
C   ABSCUR     --> VALEURS DES ABSCISSES CURVILIGNES S
C      NUM     --> 5 (TEST)
C
      INTEGER      IFON,IADABS,IVECT,IMATR
      INTEGER      I,IBID,KK,J,NDIMTE,NUMP,NN
      REAL*8       S1,S2,DELTA,S3,SN2,SN1,SN
      REAL*8       GTHI(NNOFF),K1TH(NNOFF),K2TH(NNOFF),K3TH(NNOFF)
      REAL*8       GS(NDIMTE),K1S(NDIMTE),K2S(NDIMTE),K3S(NDIMTE)
      REAL*8       BETAS(NNOFF)
      CHARACTER*24 LISSG,VECT,MATR

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX --------------------
C
      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24CM
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24CM(1),ZK32(1),ZK80(1)
C
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      CALL JEMARQ()
      

      CALL JEVEUO(CHFOND,'L',IFON)
      CALL JEVEUO(ABSCUR,'E',IADABS)      
      DO 10 I=1,NNOFF
        ZR(IADABS-1+(I-1)+1)=ZR(IFON-1+4*(I-1)+4)
10    CONTINUE
      DO 11 I=1,NDIMTE
        ZR(IADABS-1+(I-1)+1)=ZR(IFON-1+4*(I-1)+4)
        GTHI(I)=ZR(IADRGK-1+(I-1)*5+1)
        K1TH(I)=ZR(IADRGK-1+(I-1)*5+2)
        K2TH(I)=ZR(IADRGK-1+(I-1)*5+3)
        K3TH(I)=ZR(IADRGK-1+(I-1)*5+4)
11    CONTINUE
      
      NUM = 5
C
      MATR = '&&METHO3.MATRI'

      CALL WKVECT(MATR,'V V R8',NDIMTE*NDIMTE,IMATR)

      DO 40 I = 1,NDIMTE-2
        NUMP = 2*I-1
        S1 = ZR(IADABS+NUMP-1)
        S2 = ZR(IADABS+NUMP-1+2)
        DELTA = (S2-S1)/6.D0
C
        KK = IMATR+(I-1  )*NDIMTE+I-1
        ZR(KK )= ZR(KK) +               2.D0*DELTA
        ZR(IMATR+(I-1+1)*NDIMTE+I-1  )=  1.D0*DELTA
C
        ZR(IMATR+(I-1  )*NDIMTE+I-1+1)=  1.D0*DELTA
        ZR(IMATR+(I-1+1)*NDIMTE+I-1+1)=  2.D0*DELTA
        
 40   CONTINUE
      I = NDIMTE -1
      NUMP = 2*(I-1)
      IF (PAIR) THEN
        S1 = ZR(IADABS+NUMP-1)
        S2 = ZR(IADABS+NUMP-1+1)
        DELTA = (S2-S1)/6.D0        
        KK = IMATR+(I-1  )*NDIMTE+I-1
        ZR(KK )= ZR(KK) +         3.5D0*DELTA
        ZR(IMATR+(I-1+1)*NDIMTE+I-1  )=  1.D0*DELTA
        ZR(IMATR+(I-1  )*NDIMTE+I-1+1)=  1.D0*DELTA
        ZR(IMATR+(I-1+1)*NDIMTE+I-1+1)= 0.5D0*DELTA
      ELSE
        S1 = ZR(IADABS+NUMP)
        S2 = ZR(IADABS+NUMP+2)
        DELTA = (S2-S1)/6.D0        
        KK = IMATR+(I-1  )*NDIMTE+I-1
        ZR(KK )= ZR(KK) +               2.D0*DELTA
        ZR(IMATR+(I-1+1)*NDIMTE+I-1  )=  1.D0*DELTA
        ZR(IMATR+(I-1  )*NDIMTE+I-1+1)=  1.D0*DELTA
        ZR(IMATR+(I-1+1)*NDIMTE+I-1+1)=  2.D0*DELTA
      ENDIF


C     SYSTEME LINEAIRE:  MATR*GS = GTHI
      CALL GSYSTE(MATR,NDIMTE,NDIMTE,GTHI,GS)
      
C     SYSTEME LINEAIRE:  MATR*K1S = K1TH
      CALL GSYSTE(MATR,NDIMTE,NDIMTE,K1TH,K1S)

C     SYSTEME LINEAIRE:  MATR*K2S = K2TH
      CALL GSYSTE(MATR,NDIMTE,NDIMTE,K2TH,K2S)

C     SYSTEME LINEAIRE:  MATR*K3S = K3TH
      CALL GSYSTE(MATR,NDIMTE,NDIMTE,K3TH,K3S)

C     CALCUL DES ANGLES DE PROPAGATION DE FISSURE LOCAUX BETA
      DO 80 I=1,NDIMTE
        BETAS(I) = 0.0D0      
        IF (K2S(I).NE.0.D0) BETAS(I) = 2.0D0*ATAN2(0.25D0*(K1S(I)/K2S(I)
     &    -SIGN(1.0D0,K2S(I))*SQRT((K1S(I)/K2S(I))**2.0D0+8.0D0)),1.0D0)
 80   CONTINUE
     
      DO 60 I=1,NDIMTE-1
        NN = 2*I-1
        ZR(IADGKS-1+(NN-1)*5+1)=GS(I)
        ZR(IADGKS-1+(NN-1)*5+2)=K1S(I)
        ZR(IADGKS-1+(NN-1)*5+3)=K2S(I)
        ZR(IADGKS-1+(NN-1)*5+4)=K3S(I)
        ZR(IADGKS-1+(NN-1)*5+5)=BETAS(I)
        S1 = ZR(IADABS+NN-1)
        S2 = ZR(IADABS+NN-1+1)
        S3 = ZR(IADABS+NN-1+2)

        ZR(IADGKS-1+(NN-1+1)*5+1)=GS(I)+(S2-S1)*(GS(I+1)-GS(I))/(S3-S1)
        ZR(IADGKS-1+(NN-1+1)*5+2)=K1S(I)+(S2-S1)*
     &                        (K1S(I+1)-K1S(I))/(S3-S1)
        ZR(IADGKS-1+(NN-1+1)*5+3)=K2S(I)+(S2-S1)*
     &                        (K2S(I+1)-K2S(I))/(S3-S1)
        ZR(IADGKS-1+(NN-1+1)*5+4)=K3S(I)+(S2-S1)*
     &                      (K3S(I+1)-K3S(I))/(S3-S1)
        ZR(IADGKS-1+(NN-1+1)*5+5)=BETAS(I)+(S2-S1)*
     &                      (BETAS(I+1)-BETAS(I))/(S3-S1)
60    CONTINUE

      IF(PAIR)THEN
        NN=2*(NDIMTE-2)
        S1 = ZR(IADABS+NN-1)
        S2 = ZR(IADABS+NN-1+1)
        S3 = ZR(IADABS+NN-1+2)
        ZR(IADGKS-1+(NNOFF-1)*5+1)=ZR(IADGKS-1+(NNOFF-2)*5+1)+ (S3-S2)*
     &   (ZR(IADGKS-1+(NNOFF-3)*5+1)-ZR(IADGKS-1+(NNOFF-2)*5+1))/(S1-S2)
        ZR(IADGKS-1+(NNOFF-1)*5+2)=ZR(IADGKS-1+(NNOFF-2)*5+2)+ (S3-S2)*
     &   (ZR(IADGKS-1+(NNOFF-3)*5+2)-ZR(IADGKS-1+(NNOFF-2)*5+2))/(S1-S2)
        ZR(IADGKS-1+(NNOFF-1)*5+3)=ZR(IADGKS-1+(NNOFF-2)*5+3)+ (S3-S2)*
     &   (ZR(IADGKS-1+(NNOFF-3)*5+3)-ZR(IADGKS-1+(NNOFF-2)*5+3))/(S1-S2)
        ZR(IADGKS-1+(NNOFF-1)*5+4)=ZR(IADGKS-1+(NNOFF-2)*5+4)+ (S3-S2)*
     &   (ZR(IADGKS-1+(NNOFF-3)*5+4)-ZR(IADGKS-1+(NNOFF-2)*5+4))/(S1-S2)
        ZR(IADGKS-1+(NNOFF-1)*5+5)=ZR(IADGKS-1+(NNOFF-2)*5+5)+ (S3-S2)*
     &   (ZR(IADGKS-1+(NNOFF-3)*5+5)-ZR(IADGKS-1+(NNOFF-2)*5+5))/(S1-S2)
      ELSE
        ZR(IADGKS-1+(NNOFF-1)*5+1)=GS(NDIMTE)
        ZR(IADGKS-1+(NNOFF-1)*5+2)=K1S(NDIMTE)
        ZR(IADGKS-1+(NNOFF-1)*5+3)=K2S(NDIMTE)
        ZR(IADGKS-1+(NNOFF-1)*5+4)=K3S(NDIMTE)
        ZR(IADGKS-1+(NNOFF-1)*5+5)=BETAS(NDIMTE)
      ENDIF

      DO 70 I=1,NNOFF*5
          ZR(IADGKI-1+I)=ZR(IADRGK-1+I)
 70   CONTINUE



      CALL JEDETR('&&METHO3.MATRI')
      CALL JEDETR('&&METHO3.VECT')

      CALL JEDEMA()
      END
