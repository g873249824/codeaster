      SUBROUTINE GAREAC(XDM,XDP,DGAMMA)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 10/05/2012   AUTEUR CHEIGNON E.CHEIGNON 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
      IMPLICIT NONE
      REAL*8 XDM(3),XDP(3),DGAMMA
C            CONFIGURATION MANAGEMENT OF EDF VERSION


C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      REAL*8  YTR(3),ZTR(3)
      REAL*8  ANGLM(3),PGLM(3,3),ANGLP(3),PGLP(3,3)
      REAL*8  AX,NORM,R8MIEM
      REAL*8  XDMNOR(3),XDPNOR(3)
      REAL*8  PTR2GL(3,3),PTRBTR(3,3),PLO2TR(3,3),VTEMP(3),TRIGOM
      REAL*8  YTEMP(3),YLOCP(3),DDOT,PSCAL,PSTRX,PSTRY,PSLTY,PSLTZ

C --- ON REGARDE SI L'ORIENTATION A CHANGER
C     SI NON DGAMMA = 0
      NORM = SQRT(DDOT(3,XDM,1,XDM,1))
      XDMNOR = XDM/NORM
      NORM = SQRT(DDOT(3,XDP,1,XDP,1))
      XDPNOR = XDP/NORM
      IF (ABS(DDOT(3,XDPNOR-XDMNOR,1,XDPNOR-XDMNOR,1)).LT.R8MIEM())THEN
        DGAMMA=0.D0
        GOTO 9999
      ENDIF


C --- CONSTRUCTION DE LA BASE NATURELLE DE LA TRANSFORMATION
C     CETTE BASE EST CHOISIE POUR QUE LA TRANSFORMATION DE
C     XDMNOR VERS XDPNOR SOIT UNE ROTATION D'AXE Z
C     LE 1ER VECTEUR EST XDMNOR

      AX = DDOT(3,XDPNOR,1,XDMNOR,1)
      YTR = XDPNOR-AX*XDMNOR
      NORM =SQRT(DDOT(3,YTR,1,YTR,1))
      IF (NORM.LE.R8MIEM())THEN
        DGAMMA = 0
        GOTO 9999
      ENDIF
      YTR=YTR/NORM
      CALL PROVEC(XDMNOR,YTR,ZTR)
      PTR2GL(1,1)=XDMNOR(1)
      PTR2GL(2,1)=XDMNOR(2)
      PTR2GL(3,1)=XDMNOR(3)
      PTR2GL(1,2)=YTR(1)
      PTR2GL(2,2)=YTR(2)
      PTR2GL(3,2)=YTR(3)
      PTR2GL(1,3)=ZTR(1)
      PTR2GL(2,3)=ZTR(2)
      PTR2GL(3,3)=ZTR(3)


C --- CONSTRUCTION DE LA MATRICE DE TRANSFORMATION DANS LA BASE DE
C     NATURELLE DE LA TRANSFORMATION

      PSTRX = DDOT(3,XDMNOR,1,XDPNOR,1)
      PSTRY = DDOT(3,YTR,1,XDPNOR,1)

      PTRBTR(1,1) = PSTRX
      PTRBTR(1,2) = - PSTRY
      PTRBTR(1,3) = 0
      PTRBTR(2,1) = PSTRY
      PTRBTR(2,2) = PSTRX
      PTRBTR(2,3) = 0
      PTRBTR(3,1) = 0
      PTRBTR(3,2) = 0
      PTRBTR(3,3) = 1

C --- CALCUL DE LA BASE LOCAL A T- EN CONSIDERANT GAMMA NUL
      CALL ANGVX(XDM,ANGLM(1),ANGLM(2))
      ANGLM(3) = 0
      CALL MATROT(ANGLM,PGLM)
C     LES LIGNES DE PGLM SONT LES 3 VECTEURS DE LA BASE LOCAL

C --- CONSTRUCTION DE LA MATRICE DE PASSAGE BASE LOCAL T- -> BASE TR
C     LES DEUX BASES ONT LE MEME VECTEUR X
C     C'EST UNE ROTATION AUTOUR DE XDMNOR
      VTEMP(1)=PGLM(2,1)
      VTEMP(2)=PGLM(2,2)
      VTEMP(3)=PGLM(2,3)
      PSLTY =DDOT(3,YTR,1,VTEMP,1)

      VTEMP(1)=PGLM(3,1)
      VTEMP(2)=PGLM(3,2)
      VTEMP(3)=PGLM(3,3)
      PSLTZ =DDOT(3,YTR,1,VTEMP,1)

      PLO2TR(1,1) = 1
      PLO2TR(1,2) = 0
      PLO2TR(1,3) = 0

      PLO2TR(2,1) = 0
      PLO2TR(2,2) = PSLTY
      PLO2TR(2,3) = PSLTZ

      PLO2TR(3,1) = 0
      PLO2TR(3,2) = - PSLTZ
      PLO2TR(3,3) = PSLTY

C --- CALCUL DE YLOC A T+

C     PTR2GL * PTRBTR * PLO2TR *  (0 1 0)T
      VTEMP(1)=PLO2TR(1,2)
      VTEMP(2)=PLO2TR(2,2)
      VTEMP(3)=PLO2TR(3,2)
      CALL PROMAT(PTRBTR,3,3,3,VTEMP,3,3,1,YTEMP)
      CALL PROMAT(PTR2GL,3,3,3,YTEMP,3,3,1,YLOCP)

C --- CALCUL DE LA BASE LOCAL A T+ EN CONSIDERANT GAMMA NUL
      CALL ANGVX(XDP,ANGLP(1),ANGLP(2))
      ANGLP(3) = 0
      CALL MATROT(ANGLP,PGLP)
C     LES LIGNES DE PGLP SONT LES 3 VECTEURS DE LA BASE LOCAL

      VTEMP(1)=PGLP(2,1)
      VTEMP(2)=PGLP(2,2)
      VTEMP(3)=PGLP(2,3)
      PSCAL = DDOT(3,YLOCP,1,VTEMP,1)
      IF (PSCAL.GT.1.D0)THEN
        PSCAL=1.0D0
      ELSEIF (PSCAL.LT.-1.D0)THEN
        PSCAL=-1.0D0
      ENDIF
      DGAMMA = TRIGOM('ACOS',PSCAL)
      VTEMP(1)=PGLP(3,1)
      VTEMP(2)=PGLP(3,2)
      VTEMP(3)=PGLP(3,3)
      IF (DDOT(3,YLOCP,1,VTEMP,1).LT.0) THEN
         DGAMMA= -DGAMMA
      ENDIF

 9999 CONTINUE

      END
