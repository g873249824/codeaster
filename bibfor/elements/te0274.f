      SUBROUTINE TE0274 ( OPTION , NOMTE )
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 04/04/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C----------------------------------------------------------------------
C     BUT: CALCUL DES VECTEURS ELEMENTAIRES EN THERMIQUE
C          CORRESPONDANT AU FLUX NON-LINEAIRE
C          ELEMENTS DE FACE 2D
C
C         OPTION : 'CHAR_THER_FLUNL'
C                  'CHAR_SENS_FLUNL'
C
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C       11/03/02 (OB): MODIFICATIONS POUR INSERER LE CALCUL DE SENSI
C       BILITE PAR RAPPORT AU FLUX NON-LINEAIRE OU EN PRESENCE DE FLUX
C       NON-LINEAIRE.
C       + MODIFS FORMELLES: IMPLICIT NONE, IDENTATION...
C----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE

      CHARACTER*16  OPTION,NOMTE
      CHARACTER*24  CARAC,FF
      CHARACTER*8   ELREFE
      REAL*8        POIDS,R,NX,NY,THETA,ALPHA,RBID,TPG,COORSE(18),
     &              VECTT(9),TPGM,DALPHA
      INTEGER       NNO,KP,NPG,ICARAC,IFF,IPOIDS,IVF,IDFDE,IGEOM,K,I,
     &              J,L,LI,IFLUX,IVECTT,NNOP2,C(6,9),ISE,NSE,ITEMPS,
     &              IVAPRM,TETYPS,ITEMPR
      CHARACTER*8   COEF
      LOGICAL       LSENS,LAXI

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

C====
C 1.1 PREALABLES: RECUPERATION ADRESSES FONCTIONS DE FORMES...
C====

      CALL ELREF1(ELREFE)
      CALL JEMARQ()

      CARAC='&INEL.'//ELREFE//'.CARAC'
      CALL JEVETE(CARAC,'L',ICARAC)
      NNO=ZI(ICARAC)
      NPG=ZI(ICARAC+2)
      FF = '&INEL.'//ELREFE//'.FF'
      CALL JEVETE(FF,'L',IFF)
      IPOIDS=IFF
      IVF   =IPOIDS+NPG
      IDFDE =IVF   +NPG*NNO
      IF (NOMTE(3:4).EQ.'AX') THEN
        LAXI = .TRUE.
      ELSE
        LAXI = .FALSE.
      ENDIF
      IF (OPTION(6:9).EQ.'SENS') THEN
        LSENS = .TRUE.
      ELSE IF (OPTION(6:9).EQ.'THER') THEN
        LSENS = .FALSE.
      ELSE
        CALL UTMESS('F','TE0274','OPTION DE CALCUL INVALIDE')
      ENDIF

C====
C 1.2 PREALABLES LIES AUX RECHERCHES DE DONNEES GENERALES
C====

C CALCUL DE SENSIBILITE PART I
      IF (LSENS) THEN
C RECUPERATION DE (DT/DS)-. LA PRESENCE DE CE PARAMETRE, OPTIONNEL EN
C CALCUL DE SENSIBILITE, SIGNIFIE QU'IL FAUT ASSEMBLER LE TERME COMPLEN
C TAIRE. SINON, IL FAUT ASSEMBLER LE TERME CORRESPONDANT A LA DERIVEE
C PAR RAPPORT AU FLUX NON-LINEAIRE
        CALL TECACH(.TRUE.,.FALSE.,'PTEMPER',1,ITEMPR)
        IF (ITEMPR.EQ.0) THEN
C DERIVEE PAR RAPPORT AU FLUX
          TETYPS = 2
        ELSE
C TERME COMPLEMENTAIRE
          TETYPS = 1
C CHAMP CORRESPONDANT AUX FLUX STD
          CALL JEVECH('PVAPRMO','L',IVAPRM)
        ENDIF
      ELSE
        TETYPS = 0
C RECUPERATION DE T-
        CALL JEVECH('PTEMPER','L',ITEMPR)
      ENDIF

      CALL JEVECH('PGEOMER','L',IGEOM )
      CALL JEVECH('PTEMPSR','L',ITEMPS)
C FLUX NON-LIN (PB STD OU TERME COMPLEMENTAIRE SENSIBILITE) OU
C DERIVEE DU FLUX (SENSIBILITE PAR RAPPORT AU FLUX)
      CALL JEVECH('PFLUXNL','L',IFLUX )
      CALL JEVECH('PVECTTR','E',IVECTT)

C====
C 1.3 PREALABLES LIES AUX CALCULS
C====

      THETA  = ZR(ITEMPS+2)
      COEF   = ZK8(IFLUX)
      IF ( COEF(1:7) .EQ. '&FOZERO' ) GOTO 999

      CALL CONNEC ( NOMTE, ZR(IGEOM), NSE, NNOP2, C )
      DO 10 I=1,NNOP2
        VECTT(I)=0.D0
10    CONTINUE

C====
C 2. CALCULS TERMES STD OU SENSIBLE
C====
C BOUCLE SUR LES SOUS-ELEMENTS

      DO 100 ISE=1,NSE

        DO 102 I=1,NNO
          DO 102 J=1,2
            COORSE(2*(I-1)+J) = ZR(IGEOM-1+2*(C(ISE,I)-1)+J)
  102   CONTINUE

C BOUCLE SUR LES POINTS DE GAUSS
        DO 101 KP=1,NPG
          K = (KP-1)*NNO
          CALL VFF2DN (NNO,ZR(IPOIDS+KP-1),ZR(IDFDE+K),COORSE,NX,NY,
     &                 POIDS)
          TPG = 0.D0
          IF (TETYPS.NE.2) THEN
            DO 104 I=1,NNO
C CALCUL DE T- EN STD (OU (DT/DS)- POUR TERME COMPLEMENTAIRE EN SENSI)
              L = (KP-1)*NNO+I
              TPG = TPG + ZR(ITEMPR-1+C(ISE,I)) * ZR(IVF+L-1)
  104       CONTINUE
          ENDIF

C CALCUL DE SENSIBILITE PART II
          TPGM = 0.D0
          IF (TETYPS.EQ.1) THEN
            DO 106 I=1,NNO
C CALCUL DE T- POUR TERME COMPLEMENTAIRE EN SENSIBILITE
              L = (KP-1)*NNO+I
              TPGM = TPGM + ZR(IVAPRM-1+C(ISE,I)) * ZR(IVF+L-1)
  106       CONTINUE
          ENDIF

C CALCUL DU JACOBIEN EN AXI
          IF (LAXI) THEN
            R   = 0.D0
            DO 108 I=1,NNO
              L = (KP-1)*NNO+I
              R   = R   +  COORSE(2*(I-1)+1) * ZR(IVF+L-1)
  108       CONTINUE
            POIDS = POIDS*R
          ENDIF

C OBTENTION DES PARAMETRES MATERIAU, SENSIBILITE PART III
          IF (.NOT.LSENS) THEN
            CALL FODERI(COEF,TPG,ALPHA,RBID)
          ELSE
            CALL FODERI(COEF,TPGM,ALPHA,DALPHA)
          ENDIF

CCDIR$ IVDEP
          IF (TETYPS.EQ.0) THEN
            DO 110 I=1,NNO
              LI = IVF+(KP-1)*NNO+I-1
              VECTT(C(ISE,I)) = VECTT(C(ISE,I)) + POIDS *
     &                          (1.D0-THETA)*ALPHA*ZR(LI)
  110       CONTINUE
          ELSE IF (TETYPS.EQ.1) THEN
            DO 112 I=1,NNO
              LI = IVF+(KP-1)*NNO+I-1
              VECTT(C(ISE,I)) = VECTT(C(ISE,I)) + POIDS *
     &                          (1.D0-THETA)*DALPHA*TPG*ZR(LI)
  112       CONTINUE
          ELSE IF (TETYPS.EQ.2) THEN
            DO 114 I=1,NNO
              LI = IVF+(KP-1)*NNO+I-1
              VECTT(C(ISE,I))=VECTT(C(ISE,I))+POIDS*ALPHA*ZR(LI)
  114       CONTINUE
          ENDIF

C FIN BOUCLE SUR LES PTS DE GAUSS
 101    CONTINUE
C FIN BOUCLE SUR LES SOUS-ELEMENTS
 100  CONTINUE
C
      DO 200 I=1,NNOP2
        ZR(IVECTT-1+I)=VECTT(I)
200   CONTINUE
C
 999  CONTINUE
C FIN ------------------------------------------------------------------
      CALL JEDEMA()
      END
