      SUBROUTINE TE0274(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C----------------------------------------------------------------------
C     BUT: CALCUL DES VECTEURS ELEMENTAIRES EN THERMIQUE
C          CORRESPONDANT AU FLUX NON-LINEAIRE
C          ELEMENTS DE FACE 2D

C         OPTION : 'CHAR_THER_FLUNL'

C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE

      INCLUDE 'jeveux.h'

      CHARACTER*16 OPTION,NOMTE
      REAL*8 POIDS,R,NX,NY,THETA,ALPHA,RBID,TPG,COORSE(18),VECTT(9)
      INTEGER NNO,NNOS,JGANO,NDIM,KP,NPG,IPOIDS,IVF,IDFDE,IGEOM,I,J,L,
     &        LI,IFLUX,IVECTT,NNOP2,C(6,9),ISE,NSE,ITEMPR,ITEMPS,
     &        IBID
      CHARACTER*8 COEF, ELREFE,ALIAS8
      LOGICAL LAXI,LTEATT


C====
C 1.1 PREALABLES: RECUPERATION ADRESSES FONCTIONS DE FORMES...
C====
      CALL JEMARQ()

      CALL ELREF1(ELREFE)
C
      IF ( LTEATT(' ','LUMPE','OUI')) THEN
         CALL TEATTR(' ','S','ALIAS8',ALIAS8,IBID)
         IF (ALIAS8(6:8).EQ.'SE3')  ELREFE='SE2'
      END IF
C
      CALL ELREF4(ELREFE,'RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,
     +            IVF,IDFDE,JGANO)
C
      IF (LTEATT(' ','AXIS','OUI')) THEN
        LAXI = .TRUE.
      ELSE
        LAXI = .FALSE.
      END IF

C====
C 1.2 PREALABLES LIES AUX RECHERCHES DE DONNEES GENERALES
C====

C RECUPERATION DE T-
      CALL JEVECH('PTEMPER','L',ITEMPR)

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PTEMPSR','L',ITEMPS)
C FLUX NON-LIN
      CALL JEVECH('PFLUXNL','L',IFLUX)
      CALL JEVECH('PVECTTR','E',IVECTT)

C====
C 1.3 PREALABLES LIES AUX CALCULS
C====

      THETA = ZR(ITEMPS+2)
      COEF = ZK8(IFLUX)
      IF (COEF(1:7).EQ.'&FOZERO') GO TO 130

      CALL CONNEC(NOMTE,NSE,NNOP2,C)
      DO 10 I = 1,NNOP2
        VECTT(I) = 0.D0
   10 CONTINUE

C====
C 2. CALCULS TERMES
C====
C BOUCLE SUR LES SOUS-ELEMENTS

      DO 110 ISE = 1,NSE

        DO 30 I = 1,NNO
          DO 20 J = 1,2
            COORSE(2* (I-1)+J) = ZR(IGEOM-1+2* (C(ISE,I)-1)+J)
   20     CONTINUE
   30   CONTINUE

C BOUCLE SUR LES POINTS DE GAUSS
        DO 100 KP = 1,NPG
          CALL VFF2DN(NDIM,NNO,KP,IPOIDS,IDFDE,COORSE,NX,NY,POIDS)
          TPG = 0.D0
          DO 40 I = 1,NNO
C CALCUL DE T-
            L = (KP-1)*NNO + I
            TPG = TPG + ZR(ITEMPR-1+C(ISE,I))*ZR(IVF+L-1)
   40     CONTINUE

C CALCUL DU JACOBIEN EN AXI
          IF (LAXI) THEN
            R = 0.D0
            DO 60 I = 1,NNO
              L = (KP-1)*NNO + I
              R = R + COORSE(2* (I-1)+1)*ZR(IVF+L-1)
   60       CONTINUE
            POIDS = POIDS*R
          END IF

          CALL FODERI(COEF,TPG,ALPHA,RBID)
C
          DO 70 I = 1,NNO
            LI = IVF + (KP-1)*NNO + I - 1
            VECTT(C(ISE,I)) = VECTT(C(ISE,I)) +
     &                  POIDS* (1.D0-THETA)*ALPHA*ZR(LI)
   70     CONTINUE
C FIN BOUCLE SUR LES PTS DE GAUSS
  100   CONTINUE
C FIN BOUCLE SUR LES SOUS-ELEMENTS
  110 CONTINUE

      DO 120 I = 1,NNOP2
        ZR(IVECTT-1+I) = VECTT(I)
  120 CONTINUE

  130 CONTINUE
C FIN ------------------------------------------------------------------
      CALL JEDEMA()
      END
