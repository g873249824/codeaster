      SUBROUTINE TE0365(OPTION,NOMTE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 18/09/2006   AUTEUR MABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C 
      IMPLICIT   NONE
      CHARACTER*16 OPTION,NOMTE
C      
C ----------------------------------------------------------------------
C  CALCUL DES SECONDS MEMBRES DE CONTACT ET DE FROTTEMENT DE COULOMB STD
C        AVEC LA METHODE CONTINUE DE L'ECP
C  OPTION : 'CHAR_MECA_CONT' (CALCUL DU SECOND MEMBRE DE CONTACT)
C           'CHAR_MECA_FROT' (CALCUL DU SECOND MEMBRE DE
C                              FROTTEMENT STANDARD )
C
C  ENTREES  ---> OPTION : OPTION DE CALCUL
C           ---> NOMTE  : NOM DU TYPE ELEMENT
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C      
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      INTEGER I,II,J,IRET
      REAL*8  COEFFF,COEFFA,COEFCA,COEASP,ASPERI,CN
      INTEGER NNE,NNM,NDIM,NDDL
      INTEGER INDCO,INADH,INDASP,INDM
      INTEGER IGEOM,IDEPL,IVECT,JPCF,IDEPM,IACCM,IVITM
      INTEGER INI1,INI2,INI3,INDNOR,INDRAC
      INTEGER INDNOB,INDNOQ,IMA,IMABAR,TYPBAR
      REAL*8 XPC,YPC,XPR,YPR,HPG,JACOBI,LAMBDA,MERESE,R8BID
      REAL*8 TAU1(3),TAU2(3),NORM(3)
      REAL*8 FFPC(9),DFFPC(2,9),DDFFPC(3,9)
      REAL*8 FFPR(9),DFFPR(2,9),DDFFPR(3,9)       
      REAL*8 GEOME(3),DEPLE(6),DEPLM(6),GEOMM(3),RESE(3) 
      REAL*8 DEPLME(6),DEPLMM(6),JDEPP,JDEPM
      REAL*8 ALPHA,DELTA,DELTAT,JEUSUP,JEU
      INTEGER IFROTT,ICOMPL,IAXIS,IFORM
      REAL*8 ACCME(6),ACCMM(6),VITME(6),VITMM(6),JEVITP,R8BI33(3,3)   
      CHARACTER*8 ESC,MAIT
      REAL*8 VTMP(81)
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INFOS SUR LA MAILLE DE CONTACT      
C      
      CALL MMELEM(NOMTE,
     &            NDIM,NDDL,ESC,NNE,MAIT,NNM)
      IF (NDDL.GT.81) THEN
        CALL UTMESS('F','TE0365','VECTEUR SOUS DIMENSIONNE (DVLP)')
      ENDIF     
      IF ((NDIM.NE.2).AND.(NDIM.NE.3)) THEN
        CALL UTMESS('F','TE0365','DIMENSION INCORRECTE (DVLP)')
      ENDIF  
C
C --- INITIALISATION DU VECTEUR DE TRAVAIL
C   
      DO 3  J = 1,NDDL
        VTMP(J) = 0.D0
3     CONTINUE  
C
C --- RECUPERATION DES DONNEES DE LA CARTE DU CONTACT (VOIR MMCART)
C
      CALL JEVECH('PCONFR','L',JPCF)
      XPC      = ZR(JPCF-1+1)
      YPC      = ZR(JPCF-1+10)      
      XPR      = ZR(JPCF-1+2)
      YPR      = ZR(JPCF-1+3)    
      TAU1(1)  = ZR(JPCF-1+4)
      TAU1(2)  = ZR(JPCF-1+5)
      TAU1(3)  = ZR(JPCF-1+6)
      TAU2(1)  = ZR(JPCF-1+7)
      TAU2(2)  = ZR(JPCF-1+8)
      TAU2(3)  = ZR(JPCF-1+9)
      INDCO    = NINT(ZR(JPCF-1+11))
      LAMBDA   = ZR(JPCF-1+12)
      COEFCA   = ZR(JPCF-1+13)
      COEFFA   = ZR(JPCF-1+14)
      COEFFF   = ZR(JPCF-1+15)     
      IFROTT   = NINT(ZR(JPCF-1+16))
      INDNOR   = NINT(ZR(JPCF-1+17))
      IAXIS    = NINT(ZR(JPCF-1+18))
      HPG      = ZR(JPCF-1+19)
      DELTAT   = ZR(JPCF-1+20)
      IFORM    = NINT(ZR(JPCF-1+21))
      INDM     = NINT(ZR(JPCF-1+22))
      INI1     = NINT(ZR(JPCF-1+23))
      INI2     = NINT(ZR(JPCF-1+24)) 
      INI3     = NINT(ZR(JPCF-1+25))   
      INDASP   = NINT(ZR(JPCF-1+26))      
      ICOMPL   = NINT(ZR(JPCF-1+27))   
      ASPERI   = ZR(JPCF-1+28)
      COEASP   = ZR(JPCF-1+29)
      CN       = ZR(JPCF-1+30) 
      ALPHA    = ZR(JPCF-1+31) 
      DELTA    = ZR(JPCF-1+32)
      JEUSUP   = ZR(JPCF-1+33)
      IMA      = NINT(ZR(JPCF-1+34))
      IMABAR   = NINT(ZR(JPCF-1+35))
      INDNOB   = NINT(ZR(JPCF-1+36))
      INDNOQ   = NINT(ZR(JPCF-1+37))      
      TYPBAR   = NINT(ZR(JPCF-1+38))
      INDRAC   = NINT(ZR(JPCF-1+39))  
C
C --- RECUPERATION DE LA GEOMETRIE ET DES CHAMPS DE DEPLACEMENT
C
      CALL JEVECH('PGEOMER','E',IGEOM)
      CALL JEVECH('PDEPL_P','E',IDEPL)
      CALL JEVECH('PDEPL_M','L',IDEPM)
      IF (ICOMPL .EQ. 1) THEN
        CALL JEVECH('PDEPLAR','L',IVITM)
        CALL JEVECH('PCHDYNR','L',IACCM)
      END IF      
C
C --- REACTUALISATION DE LA GEOMETRIE      
C      
      CALL MMREAC(NDIM,NNE,NNM,
     &            IGEOM,IDEPM)
C
C --- FONCTIONS DE FORMES ET DERIVEES POUR LE
C --- POINT DE CONTACT
C    
      IF (IMA .NE. IMABAR) THEN
        TYPBAR = -1
      ENDIF    
      CALL MMMFFD(ESC,XPC,YPC,TYPBAR,
     &            FFPC,DFFPC,DDFFPC,IRET)
C
C --- JACOBIEN POUR LE POINT DE CONTACT
C   
      CALL MMMJAC(ESC,IGEOM,FFPC,DFFPC,IAXIS,NDIM,
     &            JACOBI,IRET)
C
C --- FONCTIONS DE FORMES ET DERIVEES POUR LA
C --- PROJECTION DU POINT DE CONTACT
C
      CALL MMMFFD(MAIT,XPR,YPR,TYPBAR,
     &            FFPR,DFFPR,DDFFPR,IRET)
C
C --- CALCUL DE LA NORMALE
C     
      CALL MMNORM(NDIM,TAU1,TAU2,NORM)
C
C --- GEOMETRIE ET DEPLACEMENTS DU POINT DE CONTACT ET
C --- DE SON PROJETE
C      
      CALL MMGEOM(NDIM,NNE,NNM,ICOMPL,
     &            IGEOM,IDEPL,IDEPM,IVITM,IACCM,
     &            FFPC,FFPR,
     &            GEOME,GEOMM,
     &            DEPLE,DEPLM,DEPLME,DEPLMM,
     &            VITME,ACCME,VITMM,ACCMM)     
C
C --- MODIFICATIONS DES DEPLACZMENTS (RACCORD/FISSURE)
C     
      CALL MMGEO2(NDIM,
     &            IMA,IMABAR,INDNOB,INDRAC,INDNOQ,
     &            IDEPL,
     &            DEPLE)
C
C --- COEFFICIENT ACCELERATION POUR FORMULATION EN VITESSE
C
      IF (IFORM .EQ. 2) THEN
        COEFCA = COEFCA/DELTAT
      ENDIF       
C
C --- TRAITEMENT EN FOND DE FISSURE 
C     
      IF (INDNOB .GT. 0) THEN
        INDCO = 1
      END IF
C
C --- TRAITEMENT DU RACCORD SURFACIQUE     
C
      IF (INDRAC .GT. 0) THEN
        INDCO = 1
      END IF
C
C --- NOEUDS EXCLUS PAR PROJECTION HORS ZONE 
C
      IF (INDNOR .EQ. 1) THEN
        INDCO = 0
      ENDIF
C
C --- RECUPERATION DES VECTEURS 'OUT' (A REMPLIR => MODE ECRITURE)
C
      CALL JEVECH('PVECTUR','E',IVECT)
C      
C --- CALCUL DES SECOND MEMBRES DE CONTACT/FROTTEMENT
C

      IF (OPTION.EQ.'CHAR_MECA_CONT') THEN
        IF (INDASP.EQ.0) THEN
C
C --- CALCUL DU VECTEUR - CAS SANS CONTACT (HORS ASPERITES)
C            
          CALL MMVEC0(NDIM,NNE,
     &                DEPLE,
     &                HPG,FFPC,JACOBI,
     &                COEFCA,
     &                VTMP) 
         
          GO TO 220

        ELSE IF (INDASP.EQ.1) THEN
          IF (INDCO.EQ.1) THEN
C
C --- EVALUATION DES JEUX - CAS DU CONTACT
C          
            CALL MMMJEU(NDIM,JEUSUP,ICOMPL,NORM,ALPHA,DELTA,DELTAT,
     &                  GEOME,GEOMM,
     &                  DEPLE,DEPLM,DEPLME,DEPLMM, 
     &                  VITME,VITMM,ACCME,ACCMM,    
     &                  JEU,JDEPP,JDEPM,JEVITP)
C
C --- VECTEUR SECOND MEMBRE SI CONTACT AVEC COMPLIANCE
C  
            CALL MMVEC1(NDIM,NNE,NNM,
     &                  IMA,IMABAR,INDNOB,INDRAC,
     &                  HPG,FFPC,FFPR,JACOBI, 
     &                  JDEPM,JDEPP,DEPLE,
     &                  COEFCA,ICOMPL,IFORM,COEASP,ASPERI,JEU,NORM,
     &                  VTMP)
     
          ELSE IF (INDCO.EQ.0) THEN
C
C --- CALCUL DU VECTEUR - CAS SANS CONTACT (DANS ASPERITES)
C            
            CALL MMVEC0(NDIM,NNE,
     &                  DEPLE,
     &                  HPG,FFPC,JACOBI,
     &                  COEFCA,
     &                  VTMP)
     
            IF (ICOMPL .EQ. 1) THEN
C
C --- EVALUATION DES JEUX 
C          
              CALL MMMJEU(NDIM,JEUSUP,ICOMPL,NORM,ALPHA,DELTA,DELTAT,
     &                    GEOME,GEOMM,
     &                    DEPLE,DEPLM,DEPLME,DEPLMM, 
     &                    VITME,VITMM,ACCME,ACCMM,    
     &                    JEU,JDEPP,JDEPM,JEVITP)         
C  
C --- DDL DES DEPLACEMENTS DE LA SURFACE CINEMATIQUE
C
              DO 72 I = 1,NNE
                DO 62 J = 1,NDIM
                  II = (I-1)*(2*NDIM)+J
                  VTMP(II) = -HPG*JACOBI*
     &                       (-COEASP*((JEU-ASPERI)**2)-CN*JEVITP)*
     &                       FFPC(I)*NORM(J)
   62           CONTINUE
   72         CONTINUE
C
C --- DDL DES DEPLACEMENTS DE LA SURFACE GEOMETRIQUE
C
              DO 92 I = 1,NNM
                DO 82 J = 1,NDIM
                  II = NNE*(2*NDIM)+(I-1)*(NDIM)+J              
                  VTMP(II) = HPG*JACOBI*
     &                       (-COEASP*((JEU-ASPERI)**2)-CN*JEVITP)*
     &                       FFPR(I)*NORM(J)
   82           CONTINUE
   92         CONTINUE

            ENDIF  
          ENDIF  
          GO TO 220
        ELSE
          CALL UTMESS('F','TE0365','SITUATION DE CONTACT IMPOSSIBLE')
        ENDIF

      ELSE IF (OPTION.EQ.'CHAR_MECA_FROT') THEN


        IF (COEFFF.EQ.0.D0) INDCO = 0
        IF (IFROTT.NE.3)    INDCO = 0
        IF (LAMBDA.EQ.0.D0) INDCO = 0


        IF (INDCO.EQ.0) THEN    
C
C --- CALCUL DU VECTEUR - CAS SANS CONTACT (HORS ASPERITES)
C
          CALL MMVEF0(NDIM,NNE,
     &                HPG,FFPC,JACOBI,DEPLE,
     &                TAU1,TAU2,
     &                VTMP)

          GO TO 220

        ELSE IF (INDCO.EQ.1) THEN
C
C ---  ON CALCULE L'ETAT DE CONTACT ADHERENT OU GLISSANT
C 
          CALL TTPRSM(NDIM,DEPLE,DEPLM,
     &                COEFFA,NORM,TAU1,TAU2,
     &                INADH,R8BI33,RESE,R8BID)
C
C --- SI GLISSANT, NORMALISATION RESE
C
          IF (INADH.EQ.0) THEN
            CALL NORMEV(RESE,MERESE)
          ENDIF   
C
C --- VECTEUR FROTTEMENT
C
          CALL MMVEF1(NDIM,NNE,NNM,
     &                INDM,INI1,INI2,INI3,
     &                HPG,FFPC,FFPR,JACOBI,
     &                RESE,DEPLE,
     &                LAMBDA,COEFFA,COEFFF,TAU1,TAU2,NORM,
     &                VTMP)
        ELSE
          CALL UTMESS('F','TE0365','SITUATION DE CONTACT IMPOSSIBLE')
        END IF
      ELSE
        CALL UTMESS('F','TE0365','OPTION INCONNUE ')
      END IF
  220 CONTINUE

C
C --- RECOPIE VALEURS FINALES
C
      DO 6 I=1,NDDL
        ZR(IVECT-1+I)=VTMP(I)
C        write(38,*) 'VAL:',I,VTMP(I)
6     CONTINUE
C
      CALL JEDEMA()
      END
