      SUBROUTINE CGNOOR(MAFOUR,NOMAIL,MOTFAC,IOCC,NBMC,MOTCLE,TYPMCL,
     &                  TYPLIG,NBMA,NDORIG,NDEXTR,TYPM,VECORI)
      IMPLICIT   NONE
      INTEGER IOCC,NBMC,NBMA
      CHARACTER*(*) TYPLIG
      CHARACTER*24 MAFOUR
      CHARACTER*8 NOMAIL,NDORIG,NDEXTR,TYPM
      CHARACTER*16 MOTCLE(*),TYPMCL(*)
      CHARACTER*(*) MOTFAC
      REAL*8 VECORI(3)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 13/12/2011   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PELLET J.PELLET
C-----------------------------------------------------------------------
C  CETTE ROUTINE EST UTILISEE DANS DEFI_GROUP ET DEFI_FOND_FISS

C FONCTION REALISEE:
C  * CREER LA LISTE DES NUMEROS DES SEGX FORMANT UNE LIGNE (MAFOUR,NBMA)
C  * CALCULER LE NOM DES 2 NOEUDS EXTREMITES DE MAFOUR: NDORIG ET NDEXTR
C    (NDORIG EST TOUJOURS CALCULE. MAIS PARFOIS NDEXTR=' ')
C  * CALCULER LE TYPE DES SEGMENTS (SEG2/SEG3/SEG4)
C  * CALCULER LE VECTEUR D'ORIENTATION SI NECESSAIRE (VECORI)

C CETTE FONCTION REALISE AUSSI CERTAINES VERIFICATIONS :
C  * TOUTES LES MAILLES DE MAFOUR SONT DES SEGX
C  * TOUTES LES MAILLES DE MAFOUR SONT DE MEME TYPE SEG2/3/4
C  * MAFOUR DEFINIT UNE LIGNE CONTINUE SANS BIFURCATION

C ATTENTION : LA LISTE MAFOUR N'EST PAS TRIEE
C
C     ENTREES:
C        MAFOUR     : NOM DE L'OBJET QUI CONTIENDRA LES MAILLES SEG
C        NOMAIL     : NOM DU MAILLAGE
C        MOTFAC     : MOT-CLE FACTEUR
C        IOCC       : OCCURENCE COURANTE DE MOTFAC
C        NBMC       : NOMBRE DE MOT-CLE SIMPLE
C        MOTCLE     : MOT-CLE SIMPLE TYPE MA OU GROUP_MA A TRAITER
C        TYPMCL     : TYPE D'ENTITE ENTREE SOUS LE MOT-CLE
C        TYPLIG     : TYPE DE LIGNE : 'FERME' (OU NON)
C                     SI TYPLIG.EQ.' ' ET SI NDORIG=NDEXTR (/=' '),
C                     ON CONSIDERE QUE TYPLIG='FERME'
C     SORTIES:
C        MAFOUR     : L'OBJET EST ALLOUE ET REMPLI
C        NBMA       : NOMBRE DE MAILLES CONSIDEREES
C        NDORIG     : NOM DU NOEUD ORIGINE
C        NDEXTR     : NOM DU NOEUD EXTREMITE
C        TYPM       : TYPE DE MAILLE DE LA LISTE MAFOUR (SEG2/SEG3/SEG4)
C        VECORI     : 3 COORDONNEES EVENTUELLEMENT DONNEES PAR VECT_ORIE
C                     (0,0,0) SINON
C-----------------------------------------------------------------------
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------

      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXNOM

C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      INTEGER JMAIL,JTYPM,IATYMA
      INTEGER IER,IM,N1,N2,NID,NIG,NBNOT
      INTEGER NUNORI,TROUV,IBID,IN,ND
      INTEGER EXISTE,IRET,IMA
      INTEGER JCOUR1,JCOUR2,JCOUR3,JCOUR4
      CHARACTER*8 K8B,NOMMA,TYPMP
      CHARACTER*16 K16BID,NOMCMD
      CHARACTER*24 CONEC,TYPP,NOMMAI,NOMNOE,MESMAI,VALK(2)
      LOGICAL BUG
      INTEGER IARG
C DEB-------------------------------------------------------------------
      CALL JEMARQ()

      CALL GETRES(K8B,K16BID,NOMCMD)

C     ------------------------------------------------------------------
C     INITIALISATION DE VARIABLES
C     ------------------------------------------------------------------
      MESMAI='&&CGNOOR.MES_MAILLES'
      CONEC=NOMAIL//'.CONNEX         '
      TYPP=NOMAIL//'.TYPMAIL        '
      NOMMAI=NOMAIL//'.NOMMAI         '
      NOMNOE=NOMAIL//'.NOMNOE         '
      CALL DISMOI('F','NB_NO_MAILLA',NOMAIL,'MAILLAGE',NBNOT,K8B,IER)
      CALL JEVEUO(TYPP,'L',IATYMA)


C     ------------------------------------------------------------------
C     RECUPERATION DES MAILLES SOUS LES MOT-CLES "MOTCLE"
C       => MESMAI : NOMS DES MAILLES
C       => MAFOUR : NUMEROS DES MAILLES
C     ------------------------------------------------------------------
      CALL RELIEM(' ',NOMAIL,'NO_MAILLE',MOTFAC,IOCC,NBMC,MOTCLE,TYPMCL,
     &            MESMAI,NBMA)

      IF (NBMA.EQ.0) CALL U2MESS('F','ELEMENTS_66')
      CALL JEVEUO(MESMAI,'L',JMAIL)
      CALL WKVECT(MAFOUR,'V V I',NBMA,JCOUR2)
      DO 10,IM=1,NBMA
        CALL JENONU(JEXNOM(NOMMAI,ZK8(JMAIL-1+IM)),IMA)
        ZI(JCOUR2-1+IM)=IMA
   10 CONTINUE


C     ------------------------------------------------------------------
C     --- VERIFICATION DE L'EXISTENCE DES MAILLES
C     --- VERIFICATION QUE LES MAILLES SONT TOUTES SEG2, SEG3, SEG4 :
C     ------------------------------------------------------------------
      TYPMP=' '
      IER=0
      DO 20,IM=1,NBMA
        NOMMA=ZK8(JMAIL-1+IM)
        CALL JEEXIN(JEXNOM(NOMMAI,NOMMA),EXISTE)
        IF (EXISTE.EQ.0) THEN
          IER=IER+1
          CALL U2MESG('E','ELEMENTS5_19',1,NOMMA,1,IOCC,0,0.D0)
        ELSE
          CALL JENONU(JEXNOM(NOMMAI,NOMMA),IBID)
          JTYPM=IATYMA-1+IBID
          CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ZI(JTYPM)),TYPM)
          IF (TYPM(1:3).NE.'SEG') THEN
            IF (NOMCMD.NE.'DEFI_GROUP') CALL U2MESS('F','RUPTURE0_63')
            IER=IER+1
            CALL U2MESG('E','ELEMENTS5_20',1,NOMMA,1,IOCC,0,0.D0)
          ENDIF
          IF (IM.GT.1) THEN
            IF (TYPM.NE.TYPMP) THEN
              IER=IER+1
              CALL U2MESG('E','ELEMENTS5_21',1,NOMMA,1,IOCC,0,0.D0)
            ENDIF
          ENDIF
          TYPMP=TYPM
        ENDIF
   20 CONTINUE
      IF (IER.GT.0) THEN
        CALL U2MESI('F','ELEMENTS5_15',1,IOCC)
      ENDIF


C --- LECTURE DU NOM DU NOEUD ORIGINE (S'IL EST FOURNI)
      CALL GETVTX(MOTFAC,'NOEUD_ORIG',IOCC,IARG,0,K8B,N1)
      CALL GETVTX(MOTFAC,'GROUP_NO_ORIG',IOCC,IARG,0,K8B,N2)
      IF (N1.NE.0) THEN
        CALL GETVTX(MOTFAC,'NOEUD_ORIG',IOCC,IARG,1,NDORIG,N1)
      ELSEIF (N2.NE.0) THEN
        CALL GETVTX(MOTFAC,'GROUP_NO_ORIG',IOCC,IARG,1,K8B,N2)
        CALL UTNONO(' ',NOMAIL,'NOEUD',K8B,NDORIG,IRET)
        IF (IRET.EQ.10) THEN
          CALL U2MESK('F','ELEMENTS_67',1,K8B)
        ELSEIF (IRET.EQ.1) THEN
          VALK(1)='GROUP_NO_ORIG'
          VALK(2)=NDORIG
          CALL U2MESK('A','ELEMENTS5_17',2,VALK)
        ENDIF
      ELSE
        NDORIG=' '
      ENDIF


C --- LECTURE DU NOM DU NOEUD EXTREMITE (S'IL EST FOURNI)
      CALL GETVTX(MOTFAC,'NOEUD_EXTR',IOCC,IARG,0,K8B,N1)
      CALL GETVTX(MOTFAC,'GROUP_NO_EXTR',IOCC,IARG,0,K8B,N2)
      IF (N1.NE.0) THEN
        CALL GETVTX(MOTFAC,'NOEUD_EXTR',IOCC,IARG,1,NDEXTR,N1)
      ELSEIF (N2.NE.0) THEN
        CALL GETVTX(MOTFAC,'GROUP_NO_EXTR',IOCC,IARG,1,K8B,N2)
        CALL UTNONO(' ',NOMAIL,'NOEUD',K8B,NDEXTR,IRET)
        IF (IRET.EQ.10) THEN
          CALL U2MESK('F','ELEMENTS_67',1,K8B)
        ELSEIF (IRET.EQ.1) THEN
          VALK(1)='GROUP_NO_EXTR'
          VALK(2)=NDEXTR
          CALL U2MESK('A','ELEMENTS5_17',2,VALK)
        ENDIF
      ELSE
        NDEXTR=' '
      ENDIF


C     ------------------------------------------------------------------
C     --- CONSTRUCTION
C     --- 1 - VECTEUR DE TRAVAIL LOCAL CONTENANT LES NOEUDS EXTREMITES
C     ---     DE CHAQUE MAILLE
C     --- 2 - VECTEUR DE TRAVAIL LOCAL CONTENANT POUR CHAQUE NOEUD
C     ---     DU MAILLAGE :
C     ---     - 0 SI LE NOEUD N'APPARTIENT AUX MAILLES
C     ---     - 1 SI INTERNE (APPARTIENT A DEUX MAILLES)
C     ---     - 2 SI EXTREMITE
C     ------------------------------------------------------------------
      CALL WKVECT('&&CGNOOR.NOEUDS_EXTREM','V V I',2*NBMA,JCOUR1)
      CALL WKVECT('&&CGNOOR.TYPE_NOEUD','V V I',NBNOT,JCOUR4)
      DO 30 IM=1,NBMA
        CALL I2EXTF(ZI(JCOUR2-1+IM),1,CONEC(1:15),TYPP(1:16),NIG,NID)
        ZI(JCOUR1-1+IM)=NIG
        ZI(JCOUR1-1+NBMA+IM)=NID
        ZI(JCOUR4-1+NIG)=ZI(JCOUR4-1+NIG)+1
        ZI(JCOUR4-1+NID)=ZI(JCOUR4-1+NID)+1
   30 CONTINUE


C --- VERIFICATION QUE LA LIGNE EST CONTINUE ET UNIQUE
      N1=0
      N2=0
      BUG=.FALSE.
      DO 40 IM=1,NBNOT
C        COMPTAGE DES EXTREMITES
        IF (ZI(JCOUR4-1+IM).EQ.1)N1=N1+1
C        COMPTAGE NOEUDS APPARTENANT A PLUS DE DEUX MAILLES
        IF (ZI(JCOUR4-1+IM).GT.2)N2=N2+1
   40 CONTINUE
C     IL NE PEUT Y AVOIR QUE 2 NOEUDS EXTREMITES
      IF (N1.GT.2)BUG=.TRUE.
C     IL NE DOIT PAS Y AVOIR DE NOEUDS APPARTENANT A PLUS DE DEUX
C     MAILLES
      IF (N2.NE.0)BUG=.TRUE.
      IF (BUG) THEN
        CALL U2MESS('F','ELEMENTS5_16')
      ENDIF


C     -- CALCUL DE VECORI:
C     --------------------
      VECORI(1)=0.D0
      VECORI(2)=0.D0
      VECORI(3)=0.D0
      IF (NOMCMD.EQ.'DEFI_GROUP'.AND.MOTFAC.EQ.'CREA_GROUP_NO') THEN
        CALL GETVR8(MOTFAC,'VECT_ORIE',IOCC,IARG,3,VECORI,N1)
        IF ((NDORIG.EQ.NDEXTR).AND.(NDORIG.NE.' ')) THEN
          IF (N1.LE.0) CALL U2MESS('A','ELEMENTS_70')
        ENDIF
      ENDIF



C     ------------------------------------------------------------------
C     --- VERIFICATION DU NOEUD EXTREMITE :
C     ------------------------------------------------------------------
      IF (NDEXTR.NE.' ') THEN
        CALL JENONU(JEXNOM(NOMNOE,NDEXTR),NUNORI)

C       ON VERIFIE QU'IL S'AGIT BIEN D'UNE EXTREMITE
        TROUV=0
        DO 50 IM=1,NBMA
          IF (ZI(JCOUR1-1+IM).EQ.NUNORI)TROUV=TROUV+1
          IF (ZI(JCOUR1-1+NBMA+IM).EQ.NUNORI)TROUV=TROUV+1
   50   CONTINUE

        IF (TROUV.EQ.0) CALL U2MESK('F','ELEMENTS_68',1,NDORIG)
        IF (TYPLIG.EQ.'FERME') THEN
          IF (TROUV.NE.2) CALL U2MESK('F','ELEMENTS_69',1,NDEXTR)
        ELSE
          IF (.NOT.(TYPLIG.EQ.' '.AND.NDORIG.EQ.NDEXTR)) THEN
            IF (TROUV.NE.1) CALL U2MESK('F','ELEMENTS_69',1,NDEXTR)
          ENDIF
        ENDIF
      ENDIF



C     ------------------------------------------------------------------
C     --- VERIFICATION DU NOEUD ORIGINE :
C     ------------------------------------------------------------------
      IF (NDORIG.NE.' ') THEN
        CALL JENONU(JEXNOM(NOMNOE,NDORIG),NUNORI)

C       ON VERIFIE QU'IL S'AGIT BIEN D'UNE EXTREMITE
        TROUV=0
        DO 51 IM=1,NBMA
          IF (ZI(JCOUR1-1+IM).EQ.NUNORI)TROUV=TROUV+1
          IF (ZI(JCOUR1-1+NBMA+IM).EQ.NUNORI)TROUV=TROUV+1
   51   CONTINUE

        IF (TROUV.EQ.0) CALL U2MESK('F','ELEMENTS_68',1,NDORIG)
        IF (TYPLIG.EQ.'FERME') THEN
          IF (TROUV.NE.2) CALL U2MESK('F','ELEMENTS_69',1,NDORIG)
        ELSE
          IF (.NOT.(TYPLIG.EQ.' '.AND.NDORIG.EQ.NDEXTR)) THEN
            IF (TROUV.NE.1) CALL U2MESK('F','ELEMENTS_69',1,NDORIG)
          ENDIF
        ENDIF

      ELSE

C     ------------------------------------------------------------------
C     --- SI L'ORIGINE EST DONNEE
C     --- CONSTRUCTION D'UN VECTEUR DE TRAVAIL LOCAL POUR TROUVER
C     --- L'ORIGINE
C     ------------------------------------------------------------------
        CALL WKVECT('&&CGNOOR.NOEUD_APPARIES','V V I',2*NBMA,JCOUR3)
C       LISTE DES NOEUDS DEJA APPARIES
        DO 60 IN=1,NBMA*2
          ZI(JCOUR3-1+IN)=0
   60   CONTINUE

C       PARCOURS DE L'ENSEMBLE DES NOEUDS
        DO 90 IN=1,NBMA*2
          IF (ZI(JCOUR3-1+IN).NE.0)GOTO 80
          NUNORI=ZI(JCOUR1-1+IN)

          DO 70 ND=IN+1,NBMA*2
            IF (ZI(JCOUR1-1+ND).EQ.NUNORI) THEN
              ZI(JCOUR3-1+ND)=1
              GOTO 80

            ENDIF
   70     CONTINUE

C         NUNORI N'APPARAIT QU'UNE FOIS : C'EST L'ORIGINE
          GOTO 100

   80     CONTINUE
   90   CONTINUE
        CALL U2MESS('F','ELEMENTS_71')

  100   CONTINUE
        CALL JENUNO(JEXNUM(NOMNOE,NUNORI),NDORIG)
        CALL U2MESK('I','ELEMENTS_72',1,NDORIG)
        CALL JEDETR('&&CGNOOR.NOEUD_APPARIES')

      ENDIF

      CALL JEDETR('&&CGNOOR.NOEUDS_EXTREM')
      CALL JEDETR('&&CGNOOR.TYPE_NOEUD')
      CALL JEDETR('&&CGNOOR.MES_MAILLES')

      CALL JEDEMA()
      END
