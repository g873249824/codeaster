      SUBROUTINE JNI090(ELREFE,NMAXOB,LIOBJ,NBOBJ)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/10/2002   AUTEUR VABHHTS J.PELLET 
C RESPONSABLE VABHHTS J.PELLET
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN DECLARATIONS NORMALISEES  JEVEUX ---------------------

      CHARACTER*8 ELREFE
      CHARACTER*16 ELREFL
      INTEGER LFF,LL,NDERIV,NMAXOB,NBOBJ
      CHARACTER*24 CARAC,FFO,CHMAT1,CHMAT2,LIOBJ(NMAXOB)
      REAL*8 R8VIDE
      REAL*8 X(4),X1,X2,X3,X4,D1,D2,D3,D4,DF2DE(4)
      REAL*8 COOPG(4),POIPG(4),FF(27),DFF(3,3*27),GM(16)
      INTEGER NBPG(2),NBFPG,IRET,ICARAC,IF0,IFX,NCAR
      INTEGER NBSEC,NBCOU,M,IFG,NDIM,NNO,NNOS,I,I1,L
      INTEGER ICOU,ISECT,JMAT1,JMAT2,LCARAC

C NBCOU = NBRE DE COUCHES D'INTEGRATION,

C NBSEC = NBRE DE SECTEURS D'INTEGRATION,
C M = NBRE DE MODES DE FOURIER (3 OU 6)
C LES NOMBRES DE POINTS D'INTEGRATION SONT :
C - DANS LA LONGUEUR : 2 FAMILLES
C      PREMIERE FAMILLE : SOUS-INTEGREE
C      DEUXIEME FAMILLE : INTEGRATION COMPLETE (MASSE ET CHARGEMENTS)
C                            NPG1     NPG2
C           TUYAU 3 NOEUDS : 2        3
C           TUYAU 4 NOEUDS : 3        4
C - DANS L'EPAISSEUR : 2*NBCOU+1        PAR DEFAUT 7
C - SUR LA CIRCONFERENCE : 2*NBSEC+1    PAR DEFAUT 33


      CALL JEMARQ()
      CALL CARREF(ELREFE,NDIM,NNO,NNOS,NBFPG,NBPG,X)

      IF (ELREFE.EQ.'MET3SEG3' .OR. ELREFE.EQ.'MET3SEG4') THEN
        NBSEC = 16
        NBCOU = 3
        M = 3
      ELSE IF (ELREFE.EQ.'MET6SEG3') THEN
        NBSEC = 16
        NBCOU = 3
        M = 6
      ELSE
        CALL UTMESS('F','INI090',' ELEMENT NON PREVU')
      END IF


      ELREFL = ELREFE
      CARAC = '&INEL.'//ELREFE//'.CARAC'
      FFO = '&INEL.'//ELREFE//'.FF'
      CHMAT1 = '&INEL.'//ELREFL//'M1'
      CHMAT2 = '&INEL.'//ELREFL//'M2'
      NBOBJ = 4
      CALL ASSERT(NMAXOB.GT.NBOBJ)
      LIOBJ(1) = CARAC
      LIOBJ(2) = FFO
      LIOBJ(3) = CHMAT1
      LIOBJ(4) = CHMAT2

C     -- SI DEJA INITIALISE : ON SORT
      CALL JEEXIN(CARAC,IRET)
      IF (IRET.NE.0) GO TO 80

      LCARAC = 8
      CALL WKVECT(CARAC,'G V I',LCARAC,ICARAC)
      ZI(ICARAC) = NNO
      ZI(ICARAC+1) = NBFPG
      ZI(ICARAC+2) = NBPG(1)
      ZI(ICARAC+3) = NBPG(2)
      ZI(ICARAC+4) = NBCOU
      ZI(ICARAC+5) = NBSEC
      ZI(ICARAC+6) = M
      ZI(ICARAC+7) = NNOS


C CREATION ET REMPLISSAGE DE .FF GRACE A ELRFGF.F ELRFVF.F ELRFDF.F
      LFF = 2*NBPG(1) + 3*NNO*NBPG(1) + 2*NBPG(2) + 3*NNO*NBPG(2) +
     &      2* (NBCOU+NBSEC+1)

      CALL WKVECT(FFO,'G V R',LFF,IF0)
      IFX = IF0

      DO 50 IFG = 1,NBFPG
        CALL ELRFGF(ELREFE,IFG,NBPG,4,COOPG,4,POIPG)

C        COORDONNEES DES POINTS DE GAUSS

        DO 10 I = 1,NBPG(IFG)
          ZR(IFX-1+I) = COOPG(I)
   10   CONTINUE
        IFX = IFX + NBPG(IFG)

C        VALEURS DES POIDS DE GAUSS

        DO 20 I = 1,NBPG(IFG)
          ZR(IFX-1+I) = POIPG(I)
   20   CONTINUE
        IFX = IFX + NBPG(IFG)

C        FONCTIONS DE FORME ET DERIVEES PREMIERES ET SECONDES

        DO 40 I = 1,NBPG(IFG)
          X(1) = COOPG(I)

          CALL ELRFVF(ELREFE,X,27*NDIM,FF,NNO)
          CALL ELRFDF(ELREFE,X,27*NDIM,DFF,NNO,NDERIV)
          IF (NNO.EQ.3) THEN
            DF2DE(1) = 1.D0
            DF2DE(2) = 1.D0
            DF2DE(3) = -2.D0
          ELSE IF (NNO.EQ.4) THEN
            X1 = -1.D0
            X2 = 1.D0
            X3 = -1.D0/3.D0
            X4 = 1.D0/3.D0
            D1 = (X1-X2)* (X1-X3)* (X1-X4)
            D2 = (X2-X1)* (X2-X3)* (X2-X4)
            D3 = (X3-X1)* (X3-X2)* (X3-X4)
            D4 = (X4-X1)* (X4-X2)* (X4-X3)
            DF2DE(1) = ((X(1)-X2)+ (X(1)-X3)+ (X(1)-X2)+ (X(1)-X4)+
     &                 (X(1)-X3)+ (X(1)-X4))/D1

            DF2DE(2) = ((X(1)-X1)+ (X(1)-X3)+ (X(1)-X1)+ (X(1)-X4)+
     &                 (X(1)-X3)+ (X(1)-X4))/D2

            DF2DE(3) = ((X(1)-X1)+ (X(1)-X2)+ (X(1)-X1)+ (X(1)-X4)+
     &                 (X(1)-X2)+ (X(1)-X4))/D3

            DF2DE(4) = ((X(1)-X1)+ (X(1)-X2)+ (X(1)-X1)+ (X(1)-X3)+
     &                 (X(1)-X2)+ (X(1)-X3))/D4
          END IF

          LL = NNO* (I-1)
          DO 30 L = 1,NNO
            I1 = LL + L
            ZR(IFX-1+I1) = FF(L)
            ZR(IFX-1+NNO*NBPG(IFG)+I1) = DFF(1,L)
            ZR(IFX-1+2*NNO*NBPG(IFG)+I1) = DF2DE(L)
   30     CONTINUE
   40   CONTINUE
        IFX = IFX + 3*NNO*NBPG(IFG)
   50 CONTINUE

C  LES POIDS POUR L'INTEGRATION DANS L'EPAISSEUR
C  ICOU=INDICE DE DEBUT TABLEAU POUR L'EPAISSEUR
C  INUTILE MAINTENANT ...

      ICOU = IFX - 1
      ZR(ICOU+1) = R8VIDE()
      DO 60 I = 1,NBCOU - 1
        ZR(ICOU+2*I) = R8VIDE()
        ZR(ICOU+2*I+1) = R8VIDE()
   60 CONTINUE
      ZR(ICOU+2*NBCOU) = R8VIDE()
      ZR(ICOU+2*NBCOU+1) = R8VIDE()

C  LES POIDS POUR L'INTEGRATION SUR LA CIRCONFERENCE
C  ISECT=INDICE DE DEBUT TABLEAU POUR LA CIRCONFERENCE
C  UTILE UNIQUEMENT DANS MECA_STATIQUE (NBSEC=16)

      ISECT = ICOU + 2*NBCOU + 1

      ZR(ISECT+1) = R8VIDE()
      DO 70 I = 1,NBSEC - 1
        ZR(ISECT+2*I) = R8VIDE()
        ZR(ISECT+2*I+1) = R8VIDE()
   70 CONTINUE
      ZR(ISECT+2*NBSEC) = R8VIDE()
      ZR(ISECT+2*NBSEC+1) = R8VIDE()

      NNOS = 2
      NCAR = NNOS*NBPG(1) + 2
      CALL WKVECT(CHMAT1,'G V R',NCAR,JMAT1)
      ZR(JMAT1) = NNOS
      ZR(JMAT1+1) = NBPG(1)
      IFX = IF0
      CALL INIMTU(ZR(IFX),NNOS,NBPG(1),GM,ZR(JMAT1+2))

      NCAR = NNOS*NBPG(2) + 2
      CALL WKVECT(CHMAT2,'G V R',NCAR,JMAT2)
      ZR(JMAT2) = NNOS
      ZR(JMAT2+1) = NBPG(2)
      IFX = IF0 + 2*NBPG(1) + 3*NNO*NBPG(1)
      CALL INIMTU(ZR(IFX),NNOS,NBPG(2),GM,ZR(JMAT2+2))

   80 CONTINUE
      CALL JEDEMA()
      END
