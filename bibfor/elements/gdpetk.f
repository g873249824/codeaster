      SUBROUTINE GDPETK (TETAG,TETAPG,PETIKM,   PETIK)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 26/04/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C FONCTION: POUR UN ELEMENT DE POUTRE EN GRAND DEPLACEMENT, CALCULE LE
C           VECTEUR-COURBURE AUX POINTS DE GAUSS, EN AXES GENERAUX,
C           VECTEUR DENOMME 'PETIT K'.
C
C     IN  : TETAG     : VECTEUR-INCREMENT DE ROTATION A GAUCHE
C           TETAPG    : DERIVEE DE TETAG PAR RAPPORT A L'ABS. CURVILIGNE
C           PETIKM    : VECTEUR-COURBURE A L'ITERATION PRECEDENTE
C
C     OUT : PETIK     : VECTEUR-COURBURE ACTUEL
C ------------------------------------------------------------------
      IMPLICIT REAL*8(A-H,O-Z)
      REAL*8 TETAG(3),TETAPG(3),PETIKM(3),PETIK(3),PETIK1(3),
     &PETIK2(3),V1(3),AMAT1(3,3),AMAT2(3,3),AMAT3(3,3)
C
      EPSIL = 1.D-8
      DEMI  = 5.D-1
      UN    = 1.D0
C
C*** PETIK1: VECTEUR BETA (SIMO: 'A THREE-DIMENSIONAL FINITE-STRAIN ROD
C***                       MODEL-PART 2'.)
      TETA2=DDOT(3,TETAG,1,TETAG,1)
      IF (ABS(TETA2).LT.EPSIL) GO TO 11
      TETA1 = SQRT (TETA2)
      CALL PROVEC (TETAG,TETAPG,   V1)
      COEF1 = SIN(TETA1) / TETA1
      PROSCA=DDOT(3,TETAG,1,TETAPG,1)
      COEF2 = (UN-COEF1) * PROSCA / TETA2
      COEF3 = DEMI * (SIN(DEMI*TETA1)/(DEMI*TETA1))**2
      DO 2 I=1,3
      PETIK1(I) = COEF1*TETAPG(I) + COEF2*TETAG(I) + COEF3*V1(I)
    2 CONTINUE
      GO TO 20
C
C*** TETAG EST TRES PETIT ET BETA VAUT PRATIQUEMENT TETAPRIM
   11 CONTINUE
      DO 12 I=1,3
      PETIK1(I) = TETAPG(I)
   12 CONTINUE
C
   20 CONTINUE
C
C
      CALL MAROTA (TETAG,   AMAT1)
      CALL ANTISY (PETIKM,UN,   AMAT2)
      CALL PROMAT (AMAT1,3,3,3,AMAT2,3,3,3,   AMAT3)
      CALL TRANSP (AMAT1,3,3,3,   AMAT2,3)
      CALL PROMAT (AMAT3,3,3,3,AMAT2,3,3,3,   AMAT1)
      CALL AXIAL (AMAT1,   PETIK2)
C
      DO 32 I=1,3
      PETIK(I) = PETIK1(I) + PETIK2(I)
   32 CONTINUE
      END
