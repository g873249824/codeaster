      SUBROUTINE TE0532(OPTION,NOMTE)
      IMPLICIT   NONE
      CHARACTER*16 OPTION,NOMTE

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 20/12/2005   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C.......................................................................
C
C                CONTACT X-FEM MÉTHODE CONTINUE : 
C         CONVERGENCE DE LA BOUCLE SUR LES CONTRAINTES ACTIVES
C
C
C  OPTION : 'XCVBCA' (X-FEM CONVERGENCE BOUCLE CONTRAINTES ACTIVES )

C  ENTREES  ---> OPTION : OPTION DE CALCUL
C           ---> NOMTE  : NOM DU TYPE ELEMENT
C
C......................................................................
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX --------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR 
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX --------------------

      INTEGER      I,J,L,IJ,IFA,IPGF,INO,ISSPG,NI,NJ,NLI,NLJ,PLI,PLJ
      INTEGER      JINDCO,JDONCO,JLST,IPOIDS,IVF,IDFDE,JGANO,IGEOM
      INTEGER      IDEPM,IDEPL,IMATT,JPTINT,JAINT,JCFACE,JLONCH
      INTEGER      IPOIDF,IVFF,IDFDEF,IADZI,IAZK24,IBID,JOUT1,JOUT2
      INTEGER      NDIM,DDLH,DDLC,DDLS,NNO,NNOS,NNOM,NNOF
      INTEGER      NPG,NPGF,XOULA,INCOCA,INTEG,NFE,SINGU
      INTEGER      INDCO(60),NINTER,NFACE,CFACE(5,3)

      CHARACTER*8   ELREF,TYPMA,FPG
      REAL*8        HE,SIGN,VTMP(204),SOMME,FFI,REAC,JAC,FFP(27),PREC
      REAL*8        ND(3),DN,SAUT(3),LAMBDA,LST,R,RR
      PARAMETER    (PREC=3.D-2)
      LOGICAL       IMPRIM
C......................................................................

      CALL JEMARQ()
C
      IMPRIM=.FALSE.
      INCOCA=1
 
      CALL ELREF1(ELREF)
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,JGANO)
C
C     INITIALISATION DES DIMENSIONS DES DDLS X-FEM
      CALL XTEINI(NOMTE,DDLH,NFE,SINGU,DDLC,NNOM,DDLS,IBID)
C
C     RECUPERATION DES ENTRÉES / SORTIE
      CALL JEVECH('PGEOMER','E',IGEOM)
C     DEPLACEMENT À L'ÉQUILIBRE PRÉCÉDENT  (DEPMOI) : 'PDEPL_M'
      CALL JEVECH('PDEPL_M','L',IDEPM)
C     DEPLACEMENT COURANT (DEPPLU) : 'PDEPL_P'
      CALL JEVECH('PDEPL_P','L',IDEPL)
      CALL JEVECH('PINDCOI','L',JINDCO)
      CALL JEVECH('PDONCO','L',JDONCO)
      CALL JEVECH('PLST','L',JLST)
      CALL JEVECH('PPINTER','L',JPTINT)
      CALL JEVECH('PAINTER','L',JAINT)
      CALL JEVECH('PCFACE','L',JCFACE)
      CALL JEVECH('PLONCHA','L',JLONCH)

      CALL JEVECH('PINCOCA','E',JOUT1)
      CALL JEVECH('PINDCOO','E',JOUT2)

C     RÉCUPÉRATIONS DES DONNÉES SUR LE CONTACT ET
C     SUR LA TOPOLOGIE DES FACETTES
      DO 10 I=1,60
        INDCO(I) = ZI(JINDCO-1+I)
 10   CONTINUE
      
      NINTER=ZI(JLONCH-1+1)
      NFACE=ZI(JLONCH-1+2)
      DO 15 I=1,NFACE
        DO 16 J=1,3
          CFACE(I,J)=ZI(JCFACE-1+3*(I-1)+J)
   16   CONTINUE
 15   CONTINUE
C
      IF (NINTER.LT.3)  GOTO 9999
C
C     SCHEMA D'INTEGRATION NUMERIQUE
      INTEG = NINT(ZR(JDONCO-1+4))
      IF (INTEG.EQ.1) FPG='XCON'
      IF (INTEG.EQ.4) FPG='FPG4'
      IF (INTEG.EQ.6) FPG='FPG6'
      IF (INTEG.EQ.7) FPG='FPG7'
C
      CALL TECAEL(IADZI,IAZK24)
      TYPMA=ZK24(IAZK24-1+3+ZI(IADZI-1+2)+3)

C      IMPRESSION (1ere partie)
      IF (IMPRIM) THEN
        WRITE(6,*)' '
        WRITE(6,697)
 697    FORMAT(4X,'I_IN',7X,'DN',11X,'REAC',7X,'I_OUT')
      ENDIF
C
C     BOUCLE SUR LES FACETTES
      DO 100 IFA=1,NFACE
C
C       LA FAMILLE 'XCON' A 12 PG INTEGRE ORDRE I+J=6
        CALL ELREF4('TR3',FPG,IBID,NNOF,IBID,NPGF,IPOIDF,IVFF,
     &                                                     IDFDEF,IBID)
                
C       BOUCLE SUR LES POINTS DE GAUSS DES FACETTES
        DO 110 IPGF=1,NPGF
C
C         INDICE DE CE POINT DE GAUSS DANS INDCO
          ISSPG=NPGF*(IFA-1)+IPGF
C
C         CALCUL DE JAC (PRODUIT DU JACOBIEN ET DU POIDS)        
C         ET DES FF DE L'ÉLÉMENT PARENT AU POINT DE GAUSS
C         ET LA NORMALE ND ORIENTÉE DE ESCL -> MAIT
          CALL XJACFF(ELREF,FPG,JPTINT,IFA,CFACE,IPGF,NNO,IGEOM,
     &                                                    JAC,FFP,ND)

C         CALCUL DE RR = SQRT(DISTANCE AU FOND DE FISSURE)
          IF (SINGU.EQ.1) THEN
            LST=0.D0   
            DO 112 I=1,NNO
              LST=LST+ZR(JLST-1+I)*FFP(I)
 112        CONTINUE
            R=ABS(LST)
            RR=SQRT(R)
          ENDIF

C         CALCUL DU SAUT ET DE DN EN CE PG (DEPMOI + DEPDEL)
          CALL LCINVN(NDIM,0.D0,SAUT)
          DO 140 I = 1,NNO
            DO 141 J = 1,NDIM
              SAUT(J) = SAUT(J) - 2.D0 * FFP(I) * 
     &                         (   ZR(IDEPM-1+DDLS*(I-1)+NDIM+J)
     &                           + ZR(IDEPL-1+DDLS*(I-1)+NDIM+J) )
 141        CONTINUE
            DO 142 J = 1,SINGU*NDIM
              SAUT(J) = SAUT(J) - 2.D0 * FFP(I) * RR *
     &                         (   ZR(IDEPM-1+DDLS*(I-1)+2*NDIM+J)
     &                           + ZR(IDEPL-1+DDLS*(I-1)+2*NDIM+J) )
 142        CONTINUE
 140      CONTINUE
          DN = 0.D0
          DO 143 J = 1,NDIM
            DN = DN + SAUT(J)*ND(J)
 143      CONTINUE

C         CALCUL DE LA REACTION A PARTIR DES LAMBDA DE DEPPLU
          REAC = 0.D0
          DO 150 I = 1,NNOF
            FFI=ZR(IVFF-1+NNOF*(IPGF-1)+I)
            NI=XOULA(CFACE,IFA,I,JAINT,TYPMA)
            CALL XPLMAT(NDIM,DDLH,NFE,DDLC,NNO,NNOM,NI,PLI)
            LAMBDA = ZR(IDEPL-1+PLI)
            REAC = REAC + FFI * LAMBDA
 150      CONTINUE
              
          
C         ON REGARDE LA DISTACE DN DES POINTS SUPPOSÉS NON CONTACTANT :
C         INTERPÉNÉPRATION EQUIVAUT À DN > 0 (ICI DN > 1E-16 )
          IF (INDCO(ISSPG).EQ.0) THEN

            IF (DN.GT.PREC) THEN
              ZI(JOUT2-1+ISSPG) = 1
              INCOCA = 0
              WRITE(6,*)'DN ',DN
            ELSE
              ZI(JOUT2-1+ISSPG) = INDCO(ISSPG)
            END IF           
C
C         ON REGARDE LA REACTION POUR LES POINTS SUPPOSÉS CONTACTANT : 
          ELSE IF (INDCO(ISSPG).EQ.1) THEN

            IF (REAC.GT.-1.D-3) THEN
C            IF (REAC.GT.0.D0) THEN
              ZI(JOUT2-1+ISSPG) = 0
              INCOCA = 0
            ELSE
              ZI(JOUT2-1+ISSPG) = INDCO(ISSPG)
            END IF
C
          ELSE
C           SI INDCO N'EST NI ÉGAL À 0 NI ÉGAL À 1
            CALL UTMESS('F','TE0532','PB DE STATUT DE CONTACT') 
          END IF
C
C         IMPRESSION (2eme partie)
          IF (IMPRIM) THEN
            WRITE(6,698)INDCO(ISSPG),DN,REAC,ZI(JOUT2-1+ISSPG)
 698        FORMAT(5X,I1,4X,E11.5,4X,E11.5,4X,I1)       
          ENDIF

 110    CONTINUE
 100  CONTINUE
C
 9999 CONTINUE

C     ENREGISTREMENT DES CHAMPS DE SORTIE
      ZI(JOUT1)=INCOCA

      CALL JEDEMA()
      END
