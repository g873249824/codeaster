      SUBROUTINE GDMD (X0PG,PN,PM,   D)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 03/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C FONCTION: POUR UN ELEMENT DE POUTRE EN GRAND DEPLACEMENT, CALCULE LA
C           MATRICE D AUX POINTS DE GAUSS. LA MATRICE D INTERVIENT DANS
C           LA RIGIDITE GEOMETRIQUE COMME LA MATRICE DE COMPORTEMENT C
C           INTERVIENT DANS LA RIGIDITE MATERIELLE.
C
C     IN  : VALEURS AU POINT DE GAUSS
C           X0PG      : DERIVEES DES COORDONNEES PAR RAP. A L'ABS. CURV.
C           PN        : RESULTANTE DES FORCES EN AX.GENE.
C           PM        : MOMENT RESULTANT EN AXES GENERAUX
C
C     OUT : D         : MATRICE 9*9
C ------------------------------------------------------------------
      IMPLICIT NONE
      REAL*8 X0PG(3),PN(3),PM(3),D(9,9),PNTILD(3,3),PMTILD(3,3)
C
C-----------------------------------------------------------------------
      INTEGER I ,J 
      REAL*8 DDOT ,SCAL ,UN ,ZERO 
C-----------------------------------------------------------------------
      ZERO = 0.D0
      UN   = 1.D0
      DO 2 J=1,9
      DO 1 I=1,9
      D(I,J) = ZERO
    1 CONTINUE
    2 CONTINUE
      CALL ANTISY (PN,UN,   PNTILD)
      CALL ANTISY (PM,UN,   PMTILD)
      DO 6 I=1,3
      DO 5 J=1,3
      D(I,6+J) = -PNTILD(I,J)
      D(3+I,6+J) = -PMTILD(I,J)
      D(6+I,  J) =  PNTILD(I,J)
    5 CONTINUE
    6 CONTINUE
      SCAL=DDOT(3,PN,1,X0PG,1)
      DO 10 J=1,3
      DO  9 I=1,3
      D(6+I,6+J) = PN(I) * X0PG(J)
    9 CONTINUE
      D(6+J,6+J) = D(6+J,6+J) - SCAL
   10 CONTINUE
      END
