      SUBROUTINE TUTEMP(OPTION,NOMTE,NBRDDL,F,B,VOUT,PASS,VTEMP)
      IMPLICIT NONE
C MODIF ELEMENTS  DATE 29/04/2004   AUTEUR JMBHH01 J.M.PROIX 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      CHARACTER*16 OPTION
C ......................................................................

C    - FONCTION REALISEE:  CALCUL DU SECOND MEMBRE : TRAVAIL DE LA
C                          DILATATION THERMIQUE
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C ......................................................................

      INTEGER NBRDDL,NBSECM,NBCOUM
      PARAMETER (NBSECM=32,NBCOUM=10)
      REAL*8 H,A,L,TPG1,VALPAR,TMOY1,TINF1,TSUP1,BETA,R
      REAL*8 POICOU(2*NBCOUM+1),POISEC(2*NBSECM+1)
      REAL*8 F(NBRDDL),B(4,NBRDDL),VOUT(NBRDDL),SIG(4)
      REAL*8 PI,DEUXPI,FI,E,NU,ALPHA,VALRES(3)
      REAL*8 PGL(3,3),PGL1(3,3),PGL2(3,3),PGL3(3,3),OMEGA
      REAL*8 TMOY(4),TSUP(4),TINF(4),C(2,2),COE1,PGL4(3,3)
      REAL*8 TEMPGM(4),TEMPGS(4),TEMPGI(4),TREF,VALPU(2)
      REAL*8 HK,POIDS,R8PI,RAYON,THETA,SINFI,XPG(4)
      REAL*8 VTEMP(NBRDDL),PASS(NBRDDL,NBRDDL)
      CHARACTER*2 CODRES(3),BL2
      CHARACTER*8 NOMRES(3),NOMPU(2),NOMPAR
      CHARACTER*16 PHENOM,NOMTE
      INTEGER NNO,NPG,NBCOU,NBSEC,M,LORIEN,ICOUDE,I
      INTEGER IPOIDS,IVF,ICOU,ITEMP,NBPAR,ITEMPF,ITAB(8)
      INTEGER ICAGEP,IGEOM,JOUT,JTREF,IER,IMATE,J
      INTEGER IGAU,ISECT,K,IBID,ICOUD2,MMT
      INTEGER JNBSPI,IRET
      INTEGER NDIM,NNOS,JCOOPG,IDFDK,JDFD2,JGANO

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      CALL ELREF5(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,JCOOPG,IVF,IDFDK,
     &            JDFD2,JGANO)

      PI = R8PI()
      DEUXPI = 2.D0*PI

      CALL JEVECH('PNBSP_I','L',JNBSPI)
      NBCOU = ZI(JNBSPI-1+1)
      NBSEC = ZI(JNBSPI-1+2)


      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PCAGEPO','L',ICAGEP)
      CALL JEVECH('PCAORIE','L',LORIEN)
      H = ZR(ICAGEP+1)
      A = ZR(ICAGEP) - H/2.D0

C A= RMOY, H = EPAISSEUR
C RINT = RAYON INTERIEUR


      M = 3
      IF (NOMTE.EQ.'MET6SEG3') M = 6


      DO 10 I = 1,NPG
        XPG(I) = ZR(JCOOPG-1+I)
   10 CONTINUE


C     LES POIDS POUR L'INTEGRATION DANS L'EPAISSEUR

      POICOU(1) = 1.D0/3.D0
      DO 20 I = 1,NBCOU - 1
        POICOU(2*I) = 4.D0/3.D0
        POICOU(2*I+1) = 2.D0/3.D0
   20 CONTINUE
      POICOU(2*NBCOU) = 4.D0/3.D0
      POICOU(2*NBCOU+1) = 1.D0/3.D0

C     LES POIDS POUR L'INTEGRATION SUR LA CIRCONFERENCE

      POISEC(1) = 1.D0/3.D0
      DO 30 I = 1,NBSEC - 1
        POISEC(2*I) = 4.D0/3.D0
        POISEC(2*I+1) = 2.D0/3.D0
   30 CONTINUE
      POISEC(2*NBSEC) = 4.D0/3.D0
      POISEC(2*NBSEC+1) = 1.D0/3.D0

C     FIN DES POIDS D'INTEGRATION

C CALCUL DE L = LONGUEUR DU COUDE

      CALL CARCOU(ZR(LORIEN),L,PGL,RAYON,THETA,PGL1,PGL2,PGL3,PGL4,NNO,
     &            OMEGA,ICOUD2)

      IF (ICOUD2.GE.10) THEN
        ICOUDE = ICOUD2 - 10
        MMT = 0
      ELSE
        ICOUDE = ICOUD2
        MMT = 1
      END IF

C---- RECUPERATION TEMPERATURE
C===============================================================
C          -- RECUPERATION DE LA TEMPERATURE :
C     -- SI LA TEMPERATURE N'EST PAS DONNEE:
      NBPAR = 0
      NOMPAR = ' '
      VALPAR = 0.D0
C          -- SI LA TEMPERATURE EST CONNUE AUX NOEUDS :
      CALL TECACH('ONN','PTEMPER',8,ITAB,IRET)
      ITEMP = ITAB(1)
      IF (ITEMP.GT.0) THEN
        NBPAR = 1
        NOMPAR = 'TEMP'
        TPG1 = 0.D0
        DO 40 I = 1,NNO
          CALL DXTPIF(ZR(ITEMP+3* (I-1)),ZL(ITAB(8)+3* (I-1)))
          TMOY(I) = ZR(ITEMP+3* (I-1))
          TINF(I) = ZR(ITEMP+3* (I-1)+1)
          TSUP(I) = ZR(ITEMP+3* (I-1)+2)
          TPG1 = TPG1 + (TSUP(I)+TINF(I)+TMOY(I))/3.D0
   40   CONTINUE
        VALPAR = TPG1/NNO
      END IF
C          -- SI LA TEMPERATURE EST UNE FONCTION DE 'INST' ET 'EPAIS'
      CALL TECACH('NNN','PTEMPEF',1,ITEMPF,IRET)
      IF (ITEMPF.GT.0) THEN
        NBPAR = 1
        NOMPAR = 'TEMP'
        NOMPU(1) = 'INST'
        NOMPU(2) = 'EPAIS'
        CALL JEVECH('PTEMPSR','L',IBID)
        VALPU(1) = ZR(IBID)
        VALPU(2) = 0.D0
        CALL FOINTE('FM',ZK8(ITEMPF),2,NOMPU,VALPU,TMOY1,IER)
        VALPU(2) = -H/2.D0
        CALL FOINTE('FM',ZK8(ITEMPF),2,NOMPU,VALPU,TINF1,IER)
        VALPU(2) = +H/2.D0
        CALL FOINTE('FM',ZK8(ITEMPF),2,NOMPU,VALPU,TSUP1,IER)
        TPG1 = 0.D0
        DO 50,I = 1,NNO
          TMOY(I) = TMOY1
          TINF(I) = TINF1
          TSUP(I) = TSUP1
          TPG1 = TPG1 + (TSUP(I)+TINF(I)+TMOY(I))/3.D0
   50   CONTINUE
        VALPAR = TPG1/NNO
      END IF
C===============================================================

C---- RECUPERATION DU COMPORTEMENT

      CALL JEVECH('PMATERC','L',IMATE)
      CALL RCCOMA(ZI(IMATE),'ELAS',PHENOM,CODRES)
      NOMRES(1) = 'E'
      NOMRES(2) = 'NU'
      NOMRES(3) = 'ALPHA'
      BL2 = '  '

      CALL RCVALA(ZI(IMATE),' ',PHENOM,NBPAR,NOMPAR,VALPAR,2,NOMRES,
     &            VALRES,CODRES,'FM')
      CALL RCVALA(ZI(IMATE),' ',PHENOM,NBPAR,NOMPAR,VALPAR,1,NOMRES(3),
     &            VALRES(3),CODRES(3),BL2)
      E = VALRES(1)
      NU = VALRES(2)
      ALPHA = VALRES(3)

      IF (CODRES(3).NE.'OK') THEN
        CALL UTMESS('A','TE0589','ALPHA EST PRIS EGAL A 0')
        ALPHA = 0.D0
      END IF

C DEFINITION DE LA MATRICE DE COMPORTEMENT C
C POUR LA DILATATION

      BETA = 1.D0/ (1.D0-NU**2)

      C(1,1) = E*BETA*ALPHA
      C(1,2) = E*NU*BETA*ALPHA

      C(2,1) = E*NU*BETA*ALPHA
      C(2,2) = E*BETA*ALPHA


C     FIN DE LA CONSTRUCTION DE LA MATRICE DE COMPORTEMENT C

      CALL JEVECH('PTEREF','L',JTREF)
      TREF = ZR(JTREF)

      IF (OPTION.EQ.'CHAR_MECA_TEMP_R') THEN

C----- CAS DILATATION THERMIQUE

C===============================================================


C  PASSAGE DE LA TEMPERATURE AUX NOEUDS A LA TEMPERATURE AUX
C  POINT DE GAUSS

        DO 70,IGAU = 1,NPG
          TEMPGI(IGAU) = 0.D0
          TEMPGM(IGAU) = 0.D0
          TEMPGS(IGAU) = 0.D0
          DO 60,K = 1,NNO
            HK = ZR(IVF-1+NNO* (IGAU-1)+K)
            TEMPGI(IGAU) = HK*TINF(K) + TEMPGI(IGAU)
            TEMPGM(IGAU) = HK*TMOY(K) + TEMPGM(IGAU)
            TEMPGS(IGAU) = HK*TSUP(K) + TEMPGS(IGAU)
   60     CONTINUE
   70   CONTINUE

        DO 80,I = 1,NBRDDL
          F(I) = 0.D0
   80   CONTINUE

C     DEBUT CONSTRUCTION DE B

C BOUCLE SUR LES POINTS DE GAUSS

        DO 130 IGAU = 1,NPG

          COE1 = (TEMPGI(IGAU)+TEMPGS(IGAU)+TEMPGM(IGAU))/3.D0 - TREF
          SIG(1) = (C(1,1)+C(1,2))*COE1
          SIG(2) = (C(2,1)+C(2,2))*COE1
          SIG(3) = 0.D0
          SIG(4) = 0.D0

C BOUCLE SUR LES POINTS DE SIMPSON DANS L'EPAISSEUR

          DO 120 ICOU = 1,2*NBCOU + 1
            IF (MMT.EQ.0) THEN
              R = A
            ELSE
              R = A + (ICOU-1)*H/ (2.D0*NBCOU) - H/2.D0
            END IF


C BOUCLE SUR LES POINTS DE SIMPSON SUR LA CIRCONFERENCE

            DO 110 ISECT = 1,2*NBSEC + 1
              IF (ICOUDE.EQ.0) THEN
                CALL BCOUDE(IGAU,ICOU,ISECT,L,H,A,M,NNO,NBCOU,
     &                      NBSEC,ZR(IVF),ZR(IDFDK),ZR(JDFD2),MMT,B)
              ELSE IF (ICOUDE.EQ.1) THEN
                FI = (ISECT-1)*DEUXPI/ (2.D0*NBSEC)

                SINFI = SIN(FI)
                L = THETA* (RAYON+R*SINFI)
                CALL BCOUDC(IGAU,ICOU,ISECT,H,A,M,OMEGA,XPG,NNO,
     &                      NBCOU,NBSEC,ZR(IVF),ZR(IDFDK),ZR(JDFD2),
     &                      RAYON,THETA,MMT,B)
              END IF

              DO 90 J = 1,NBRDDL
                VOUT(J) = B(1,J)*SIG(1) + B(2,J)*SIG(2)
   90         CONTINUE


C  STOCKAGE DU VECTEUR VOUT DANS FI

              POIDS = ZR(IPOIDS-1+IGAU)*POICOU(ICOU)*POISEC(ISECT)*
     &                (L/2.D0)*H*DEUXPI/ (4.D0*NBCOU*NBSEC)*R

              DO 100 I = 1,NBRDDL
                F(I) = F(I) + VOUT(I)*POIDS
  100         CONTINUE

C  FIN STOCKAGE

  110       CONTINUE
  120     CONTINUE
  130   CONTINUE
        IF (ICOUDE.EQ.0) THEN
          CALL VLGGL(NNO,NBRDDL,PGL,F,'LG',PASS,VTEMP)
        ELSE
          CALL VLGGLC(NNO,NBRDDL,PGL1,PGL2,PGL3,PGL4,F,'LG',PASS,VTEMP)
        END IF
        CALL JEVECH('PVECTUR','E',JOUT)
        DO 140,I = 1,NBRDDL
          ZR(JOUT-1+I) = F(I)
  140   CONTINUE
      END IF
      END
