      SUBROUTINE JNI093(ELREFE,NMAXOB,LIOBJ,NBOBJ)
      IMPLICIT NONE
      CHARACTER*8 ELREFE
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/10/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN DECLARATIONS NORMALISEES  JEVEUX ---------------------

      INTEGER NBPG(10),LCARAC,NNO,IRET,ICARAC,LFF
      INTEGER IFF,IPOIDS,IVF,IDFDE,I,K
      INTEGER NDIM,IDFD2E,NNOS
      INTEGER NDERIV,NFF,NPG,ICOG,IPG,NDF,LZR,L,LL,I1
      INTEGER LDESR,INO,NBFPG,JMAT,DIMB,NBPG1,NMAXOB,NBOBJ
      REAL*8 X(27),XG(2)
      REAL*8 DFF(3,27),FF(27),XI3
      CHARACTER*16 ELREFL
      CHARACTER*24 CARAC,FFO,DESR,MAPGNO,LIOBJ(NMAXOB)
C DEB -----------------------------------------------------------------
      CALL ASSERT((ELREFE.EQ.'SEG2') .OR. (ELREFE.EQ.'SEG3'))

      ELREFL = ELREFE
      CARAC = '&INEL.'//ELREFE//'.CARAC'
      FFO = '&INEL.'//ELREFE//'.FF'
      DESR = '&INEL.'//ELREFE//'.DESR'
      MAPGNO = '&INEL.'//ELREFL//'.B'

      NBOBJ = 4
      CALL ASSERT(NMAXOB.GT.NBOBJ)
      LIOBJ(1) = CARAC
      LIOBJ(2) = FFO
      LIOBJ(3) = DESR
      LIOBJ(4) = MAPGNO

      DO 10 I = 1,10
        NBPG(I) = 0
   10 CONTINUE

      CALL CARREF(ELREFE,NDIM,NNO,NNOS,NBFPG,NBPG,X)
      CALL ASSERT(NBFPG.EQ.1)


      CALL JEEXIN(CARAC,IRET)
      IF (IRET.NE.0) GO TO 70


      LCARAC = 4
      CALL WKVECT(CARAC,'G V I',LCARAC,ICARAC)
      ZI(ICARAC) = NNO
      ZI(ICARAC+1) = 1
      ZI(ICARAC+2) = NBPG(1)
      NPG = NBPG(1)

      LFF = NPG + NPG*NNO*2 + NPG + NPG*NNO
      CALL WKVECT(FFO,'G V R',LFF,IFF)

      IPOIDS = IFF
      IVF = IPOIDS + NPG
      IDFDE = IVF + NPG*NNO
      ICOG = IDFDE + NPG*NNO

      CALL ELRFGF(ELREFE,1,NBPG,NBPG(1),ZR(ICOG),27,ZR(IPOIDS))

      DO 30 IPG = 1,NBPG(1)
        K = (IPG-1)*NNO
        XG(1) = ZR(ICOG+IPG-1)
        CALL ELRFVF(ELREFE,XG(1),NNO,ZR(IVF+K),NFF)
        CALL ELRFDF(ELREFE,XG(1),NNO,DFF,NDF,NDERIV)
        DO 20 INO = 1,NNO
          ZR(IDFDE+K+INO-1) = DFF(1,INO)
   20   CONTINUE
   30 CONTINUE


C         -- DERIVEES SECONDES :
      IF (ELREFE.EQ.'SEG3') THEN
        IDFD2E = ICOG + NPG
        DO 40 I = 1,NPG
          K = IDFD2E + (I-1)*3
          ZR(K) = 1.D0
          ZR(K+1) = 1.D0
          ZR(K+2) = -2.D0
   40   CONTINUE
      END IF


C        -- OBJET DESR:
C        ------------------------------------
      LDESR = 50

      CALL WKVECT(DESR,'G V R',LDESR,LZR)

C --------- DEFINITION DES 5 POINTS DE GAUSS SUR L'EPAISSEUR

      ZR(LZR-1+1) = -0.906179845938664D0
      ZR(LZR-1+2) = -0.538469310105683D0
      ZR(LZR-1+3) = 0.D0
      ZR(LZR-1+4) = 0.538469310105683D0
      ZR(LZR-1+5) = 0.906179845938664D0

C --------- DEFINITION DES 5 POIDS DE GAUSS CORRESPONDANTS

      ZR(LZR-1+6) = 0.236926885056189D0
      ZR(LZR-1+7) = 0.478628670499366D0
      ZR(LZR-1+8) = 0.568888888888889D0
      ZR(LZR-1+9) = 0.478628670499366D0
      ZR(LZR-1+10) = 0.236926885056189D0

C --------- VALEURS DES 3 PARABOLES POUR LA DISTRIBUTION DE LA
C           TEMPERATURE AUX 5 PTS DE GAUSS PRECEDANTS

      DO 60 I = 1,5
        XI3 = ZR(LZR-1+I)

        FF(1) = 1 - XI3*XI3
        FF(2) = -XI3* (1-XI3)/2.D0
        FF(3) = XI3* (1+XI3)/2.D0

        LL = 3* (I-1)
        DO 50 L = 1,3
          I1 = 10 + LL + L
          ZR(LZR-1+I1) = FF(L)
   50   CONTINUE
   60 CONTINUE


C        MATRICE DE PASSAGE GAUSS -> NOEUDS (POUR COQUES 1D) :
C        ---------------------------------------------------------------

      IF (ELREFE.EQ.'SEG3') THEN
        NNOS = NNO
        NBPG1 = NBPG(1)
        CALL ASSERT(NBPG1.EQ.4)
        DIMB = NNOS*NBPG1 + 2
        CALL WKVECT(MAPGNO,'G V R',DIMB,JMAT)

        ZR(JMAT-1+1) = NNOS
        ZR(JMAT-1+2) = NBPG1
        JMAT = JMAT + 2

        ZR(JMAT-1+1) = -0.404757759277077842D0
        ZR(JMAT-1+2) = -0.811318624479813455D-02
        ZR(JMAT-1+3) = 0.204105950199032896D0
        ZR(JMAT-1+4) = 1.20876511436318768D0
        ZR(JMAT-1+5) = -0.811318624479813455D-02
        ZR(JMAT-1+6) = -0.404757759277077842D0
        ZR(JMAT-1+7) = 1.20876511436318768D0
        ZR(JMAT-1+8) = 0.204105950199032896D0
        ZR(JMAT-1+9) = 0.592326652015330704D0
        ZR(JMAT-1+10) = 0.592326652015330704D0
        ZR(JMAT-1+11) = -0.923265924951577888D-01
        ZR(JMAT-1+12) = -0.923265924951577888D-01
      END IF

   70 CONTINUE

      END
