      SUBROUTINE EF0154(NOMTE)
C ======================================================================
      IMPLICIT  NONE
      INCLUDE 'jeveux.h'
      CHARACTER*16 NOMTE
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 08/10/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C     CALCUL  EFGE_ELNO
C
C
      REAL*8 PGL(3,3),KLC(6,6),ENERTH
      REAL*8 UGR(6),ULR(6),FLR(6)
      INTEGER CODRES
      CHARACTER*1 STOPZ(3)
      CHARACTER*4 FAMI
      CHARACTER*8 NOMAIL
      CHARACTER*16 CH16
      LOGICAL LTEIMP
      REAL*8 A,EPSTH,E,R8BID,RHO,XFL1,XFL4,XL,XMAS,XRIG
      INTEGER I,IF,ITYPE,J,JDEPL,JEFFO,JENDE,JFREQ,JDEFO,KANL
      INTEGER LMATER,LORIEN,LSECT,IRET,LX,NC,NNO,IADZI,IAZK24
      INTEGER JVITE
C     ------------------------------------------------------------------

      LTEIMP=.FALSE.
      NNO=2
      NC=3
      FAMI='RIGI'
C
      IF ((NOMTE.NE.'MECA_BARRE') .AND. (NOMTE.NE.'MECA_2D_BARRE')) THEN
        CH16=NOMTE
        CALL U2MESK('F','ELEMENTS2_42',1,CH16)
      ENDIF
C
C     --- RECUPERATION DES CARACTERISTIQUES MATERIAUX ---
      CALL JEVECH('PMATERC','L',LMATER)

      CALL VERIFT(FAMI,1,1,'+',ZI(LMATER),'ELAS',1,EPSTH,IRET)

      CALL RCVALB(FAMI,1,1,'+',ZI(LMATER),' ','ELAS',0,' ',R8BID,1,'E',
     &            E,CODRES,1)
      IF (EPSTH.NE.0.D0)LTEIMP=.TRUE.
C
C     --- RECUPERATION DES COORDONNEES DES NOEUDS ---
      CALL JEVECH('PGEOMER','L',LX)
      LX=LX-1
C
      IF (NOMTE.EQ.'MECA_BARRE') THEN
        CALL LONELE(ZR(LX),3,XL)
      ELSEIF (NOMTE.EQ.'MECA_2D_BARRE') THEN
        CALL LONELE(ZR(LX),2,XL)
      ENDIF
C
      IF (XL.EQ.0.D0) THEN
        CALL TECAEL(IADZI,IAZK24)
        NOMAIL=ZK24(IAZK24-1+3)(1:8)
        CALL U2MESK('F','ELEMENTS2_43',1,NOMAIL)
      ENDIF
C
C     --- RECUPERATION DES CARACTERISTIQUES GENERALES DES SECTIONS ---
      CALL JEVECH('PCAGNBA','L',LSECT)
      A=ZR(LSECT)
C
C     --- RECUPERATION DES ORIENTATIONS ALPHA,BETA,GAMMA ---
      CALL JEVECH('PCAORIE','L',LORIEN)
C     --- MATRICE DE ROTATION PGL
      CALL MATROT(ZR(LORIEN),PGL)
C
C     --- RECUPERATION DES DEPLACEMENTS OU DES VITESSES ----
      DO 10 I=1,6
        UGR(I)=0.D0
   10 CONTINUE
C
C
C ON RECUPERE DES DEPLACEMENTS
C
      CALL JEVECH('PDEPLAR','L',JDEPL)
      IF (NOMTE.EQ.'MECA_BARRE') THEN
        DO 20 I=1,6
          UGR(I)=ZR(JDEPL+I-1)
   20   CONTINUE
      ELSEIF (NOMTE.EQ.'MECA_2D_BARRE') THEN
        UGR(1)=ZR(JDEPL+1-1)
        UGR(2)=ZR(JDEPL+2-1)
        UGR(4)=ZR(JDEPL+3-1)
        UGR(5)=ZR(JDEPL+4-1)
      ENDIF
C
C
C     --- VECTEUR DANS REPERE LOCAL  ULR = PGL * UGR
C
      CALL UTPVGL(NNO,NC,PGL,UGR,ULR)
C
C     --- RIGIDITE ELEMENTAIRE ---
      DO 40 I=1,6
        DO 30 J=1,6
          KLC(I,J)=0.D0
   30   CONTINUE
   40 CONTINUE
C
      XRIG=E*A/XL
      KLC(1,1)=XRIG
      KLC(1,4)=-XRIG
      KLC(4,1)=-XRIG
      KLC(4,4)=XRIG

C
C        --- VECTEUR EFFORT LOCAL  FLR = KLC * ULR
      CALL PMAVEC('ZERO',6,KLC,ULR,FLR)
C
C        --- TENIR COMPTE DES EFFORTS DUS A LA DILATATION ---
      IF (LTEIMP) THEN
C              --- CALCUL DES FORCES INDUITES ---
        XFL1=-EPSTH*E*A
        XFL4=-XFL1
        FLR(1)=FLR(1)-XFL1
        FLR(4)=FLR(4)-XFL4
      ENDIF
C
      CALL JEVECH('PEFFORR','E',JEFFO)
      ZR(JEFFO)=-FLR(1)
      ZR(JEFFO+1)=FLR(4)
C
      END
