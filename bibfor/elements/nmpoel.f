      SUBROUTINE NMPOEL(KLV,XL,NNO,NC,PGL,UGL,ITEMP,TEMPM,TEMPP,
     + TREF,ALPHAM,ALPHAP,E,EM,NU,EFFM,FL,EFFL)
C
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 KLV(78),PGL(3,3),UGL(12),TEMPM,TEMPP,TREF,ALPHAM,ALPHAP
      REAL*8 FL(12),EFFL(12),E,EM,NU,EFFM(12),XL
      INTEGER NNO,NC,ITEMP,I,J
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 26/05/97   AUTEUR JMBHH01 J.M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C     POU_D_E OU POU_D_T : COMPORTEMENT ELASTIQUE
C     CALCUL DE LA MATRICE TANGENTE OPTION FULL_MECA OU RIGI_MECA_TANG
C     DES FORCES NODALES ET EFFORTS OPTION FULL_MECA OU RAPH_MECA
C     PRISE EN COMPTE DE LA TEMPERATURE SOUS L'HYPOTHESE : NU = CSTE
C
C IN  KLV    : R8  : MATRICE DE RIGIDITE ELASTIQUE
C IN  NNO    : IS  : NOMBRE DE NOEUDS
C IN  NC     : IS  : NOMBRE DE DDL
C IN  PGL    : R8  : MATRICE DE PASSAGE
C IN  UGL    : R8  : DEPLACEMENT EN REPERE GLOBAL
C IN  ITEMP  : IS  : =0 : PAS DE TEMPERATURE
C IN  TEMPM  : R8  : TEMPERATURE A L'INSTANT ACTUEL
C IN  TEMPP  : R8  : TEMPERATURE A L'INSTANT PRECEDENT
C IN  ALPHAM : R8  : COEFFICIENT DE DILATATION A L'INSTANT PRECEDENT
C IN  ALPHAP : R8  : COEFFICIENT DE DILATATION A L'INSTANT ACTUEL
C IN  E      : R8  : MODULE D'YOUNG A L'INSTANT ACTUEL
C IN  EM     : R8  : MODULE D'YOUNG A L'INSTANT PRECEDENT
C IN  NU     : R8  : COEFFICIENT DE POISSON A L'INSTANT ACTUEL
C IN  NUM    : R8  : COEFFICIENT DE POISSON A L'INSTANT PRECEDENT
C IN  EFFM   : R8  : EFFORTS INTERNES REPRE LOCAL INSTANT PRECEDENT
C OUT FL     : R8  : FORCE NODALES REPERE LOCAL
C OUT EFFL   : R8  : EFFORTS INTERNES REPERE LOCAL
C
      REAL*8 KLC(12,12),UL(12),F,TM,TP,UG(12)

C
      CALL VECMA (KLV,78,KLC,12)
      CALL UTPVGL ( NNO, NC, PGL, UGL , UL )
      CALL PMAVEC ('ZERO',12,KLC,UL,FL)
C
      IF (ITEMP.NE.0) THEN
         DO 20 I =1,12
            UG(I) = 0.D0
 20      CONTINUE
         TM = TEMPM - TREF
         TP = TEMPP - TREF
         F = ALPHAP * TP - ALPHAM * TM
         IF ( F .NE. 0.D0 ) THEN
            UG(1) = -F * XL
            UG(7) = -UG(1)
            DO 35 I=1,6
               DO 30 J=1,6
                  FL(I)   = FL(I)   - KLC(I,J)     * UG(J)
                  FL(I+6) = FL(I+6) - KLC(I+6,J+6) * UG(J+6)
   30          CONTINUE
   35       CONTINUE
         ENDIF
      ENDIF
C
C       DANS LE CALCUL DES EFFORTS, IL FAUDRAIT CALCULER COMME
C       EN THERMO_PLASTICITE 3D : (A+)/(A-)*(SIGMA-) + (A+)DEPS
C       C'EST A DIRE POUR LES POUTRES :
C                   -1
C       F+ = (K+) (K-) (SIGMA-) + (K+)*DELTA_U
C                                                        -1
C       POUR NE PAS CALCULER L'INVERSE DE LA RIGIDITE (K-)
C       ON SUPPOSE QU'ELLE NE VARIE QUE PAR LE MODULE D'YOUNG.
C
C       SI LE COEFFICIENT DE POISSON EST NON CONSTANT
C       LA PROGRAMMATION ACTUELLE N EN TIENT PAS COMPTE
C       EN FAIT, NU VARIE PEU EN FONCTION DE LA TEMPERATURE
C
      DO 700 I = 1,6
         EFFL(I)   = -FL(I)   + EFFM(I)*E/EM
         EFFL(I+6) =  FL(I+6) + EFFM(I+6)*E/EM
         FL(I)   = FL(I)   - EFFM(I)*E/EM
         FL(I+6) = FL(I+6) + EFFM(I+6)*E/EM
 700  CONTINUE
C
      END
