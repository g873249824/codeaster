      SUBROUTINE NMPOEL(NOMTE, NPG,   KLV,  XL,   NNO,    NC,
     &                  PGL,   PGL1,  PGL2, UGL,  EPSTHE, E,
     &                  EM,    EFFM,  FL,   EFFL,ANGS2,RAD)
C
      IMPLICIT   NONE
      CHARACTER*(*) NOMTE
      REAL*8 KLV(*),PGL(*),UGL(*),EFFL(*),EFFM(*),FL(*)
      REAL*8 PGL1(*),PGL2(*),ALONG,ANGS2,RAD
      REAL*8 E,EM,EPSTHE
      INTEGER NNO,NC,NPG
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 30/06/2008   AUTEUR FLEJOU J-L.FLEJOU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     POU_D_E OU POU_D_T : COMPORTEMENT ELASTIQUE
C     CALCUL DE LA MATRICE TANGENTE OPTION FULL_MECA OU RIGI_MECA_TANG
C     DES FORCES NODALES ET EFFORTS OPTION FULL_MECA OU RAPH_MECA
C
C IN  NOMTE  : K   : NOM DE L'ELEMENT
C IN  NPG    : IS  : NOMBRE DE POINT DE GAUSS
C IN  KLV    : R8  : MATRICE DE RIGIDITE ELASTIQUE
C IN  NNO    : IS  : NOMBRE DE NOEUDS
C IN  NC     : IS  : NOMBRE DE DDL
C IN  PGL    : R8  : MATRICE DE PASSAGE POUR POUTRE DROITE
C IN  PGL1   : R8  : MATRICE DE PASSAGE POUR POUTRE COURBE NOEUD 1
C IN  PGL2   : R8  : MATRICE DE PASSAGE POUR POUTRE COURBE NOEUD 2
C IN  UGL    : R8  : DEPLACEMENT EN REPERE GLOBAL
C IN  ITEMP  : IS  : =0 : PAS DE TEMPERATURE
C IN  TEMPM  : R8  : TEMPERATURE A L'INSTANT ACTUEL
C IN  TEMPP  : R8  : TEMPERATURE A L'INSTANT PRECEDENT
C IN  ALPHAM : R8  : COEFFICIENT DE DILATATION A L'INSTANT PRECEDENT
C IN  ALPHAP : R8  : COEFFICIENT DE DILATATION A L'INSTANT ACTUEL
C IN  E      : R8  : MODULE D'YOUNG A L'INSTANT ACTUEL
C IN  EM     : R8  : MODULE D'YOUNG A L'INSTANT PRECEDENT
C IN  NUM    : R8  : COEFFICIENT DE POISSON A L'INSTANT PRECEDENT
C IN  EFFM   : R8  : EFFORTS INTERNES REPRE LOCAL INSTANT PRECEDENT
C OUT FL     : R8  : FORCE NODALES REPERE LOCAL
C OUT EFFL   : R8  : EFFORTS INTERNES REPERE LOCAL
C
      REAL*8  KLC(12,12),UL(12),UG(12),XL
      INTEGER I,J

C
      CALL VECMA (KLV,78,KLC,12)
      IF(NOMTE.NE.'MECA_POU_C_T') THEN
         CALL UTPVGL ( NNO, NC, PGL, UGL , UL )
      ELSE
         CALL UTPVGL ( 1, 6, PGL1, UGL(1) , UL(1) )
         CALL UTPVGL ( 1, 6, PGL2, UGL(7) , UL(7) )
      ENDIF
      CALL PMAVEC ('ZERO',12,KLC,UL,FL)
C
      IF (EPSTHE.NE.0) THEN
         DO 20 I =1,12
            UG(I) = 0.D0
 20      CONTINUE
         IF ( EPSTHE .NE. 0.D0 ) THEN
            IF(NOMTE.EQ.'MECA_POU_C_T') THEN
               ALONG  = 2.D0 * RAD * EPSTHE * SIN(ANGS2)
               UG(1) = -ALONG * COS(ANGS2)
               UG(2) =  ALONG * SIN(ANGS2)
               UG(7) = -UG(1)
               UG(8) =  UG(2)
            ELSE
               UG(1) = -EPSTHE * XL
               UG(7) = -UG(1)
            ENDIF
            DO 35 I=1,6
               DO 30 J=1,6
                  FL(I)   = FL(I)   - KLC(I,J)     * UG(J)
                  FL(I+6) = FL(I+6) - KLC(I+6,J+6) * UG(J+6)
   30          CONTINUE
   35       CONTINUE
         ENDIF
      ENDIF
C
C       DANS LE CALCUL DES EFFORTS, IL FAUDRAIT CALCULER COMME
C       EN THERMO_PLASTICITE 3D : (A+)/(A-)*(SIGMA-) + (A+)DEPS
C       C'EST A DIRE POUR LES POUTRES :
C                   -1
C       F+ = (K+) (K-) (SIGMA-) + (K+)*DELTA_U
C                                                        -1
C       POUR NE PAS CALCULER L'INVERSE DE LA RIGIDITE (K-)
C       ON SUPPOSE QU'ELLE NE VARIE QUE PAR LE MODULE D'YOUNG.
C
C       SI LE COEFFICIENT DE POISSON EST NON CONSTANT
C       LA PROGRAMMATION ACTUELLE N EN TIENT PAS COMPTE
C       EN FAIT, NU VARIE PEU EN FONCTION DE LA TEMPERATURE
C
C
C     EFFORTS INTERNES, FORCE NODALES REPERE LOCAL
      IF ( NPG .EQ. 2 ) THEN
         DO 700 I = 1,6
            EFFL(I)   = -FL(I)   + EFFM(I)*E/EM
            EFFL(I+6) =  FL(I+6) + EFFM(I+6)*E/EM
            FL(I)     = -EFFL(I)
            FL(I+6)   =  EFFL(I+6)
700      CONTINUE
      ELSE
         DO 710 I = 1,6
            EFFL(I)    = -FL(I)   + EFFM(I)*E/EM
            EFFL(I+12) =  FL(I+6) + EFFM(I+12)*E/EM
C           SI NPG=3, LE POINT DU MILIEU C'EST LA MOYENNE
            EFFL(I+6)  = (EFFL(I) + EFFL(I+12))*0.5D0
            FL(I)      = -EFFL(I)
            FL(I+6)    =  EFFL(I+12)
710      CONTINUE
      ENDIF
      END
