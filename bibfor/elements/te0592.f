      SUBROUTINE TE0592 ( OPTION , NOMTE )
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 11/04/2002   AUTEUR CIBHHLV L.VIVAN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C-----------------------------------------------------------------------
C   - CE PROGRAMME EST INSPIRE DE TE0072
C      LES MODIFICATIONS DE L'UN OU DE L'AUTRE DOIVENT ETRE SIMULTANEES
C
C    - FONCTION REALISEE:  CALCUL DES VECTEURS ELEMENTAIRES
C                          OPTION : 'CHAR_DLAG_TEXT_R'
C
C      EN TRANSITOIRE :
C
C        H . (TEXT-THTIMP(T+)-(1-THTIMP)(T-)) . DIV_SURF(THETA) . T*
C      - H . (1-THTIMP) . (DLAGT-) . T*
C      + GRAD(H).THETA . ( TEXT-THTIMP(T+)-(1-THTIMP)(T-) ) . T*
C      + H . (GRAD(TEXT).THETA) . T*
C
C      EN STATIONNAIRE :
C
C        H . (TEXT-T) . DIV_SURF(THETA) . T*
C      + GRAD(H).THETA . (TEXT-T) . T*
C      + H . (GRAD(TEXT).THETA) . T*
C
C      LA DIFFERENCIATION TRANSITOIRE/STATIONNAIRE SE FAIT SUR LA
C      VALEUR DU PARAMETRE D'IMPLICITATION.
C
C    - H ET TEXT SONT CONSTANTS PAR ELEMENT, DONC LES DEUX DERNIERS
C      TERMES EN GRAD(H) ET GRAD(TEXT) SONT NULS
C
C    - BORDS D'ELEMENTS ISOPARAMETRIQUES 2D
C
C    - EN STATIONNAIRE OU LORSQUE THETA_IMPLICITE TRES PROCHE DE UN:
C      ON NE FAIT AUCUN CALCUL SUR UN ELEMENT OU LE CHAMP THETA EST NUL
C      SUR TOUS LES NOEUDS. EN EFFET, DANS CE CAS LA DIVERGENCE
C      SURFACIQUE DE THETA EST NULLE SUR TOUS LES POINTS DE GAUSS DE
C      L'ELEMENT. DU COUP, LA CONTRIBUTION AU SECOND MEMBRE EST NULLE.
C
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C   -------------------------------------------------------------------
C     SUBROUTINES APPELLEES:
C       JEVEUX: JEVETE, JEVECH.
C       ELEMENT_FINI: CONNEC, VFF2DN.
C       GEOM. DIFF. : SUBAC1, SUMETR, SUBACV.
C
C     FONCTIONS INTRINSEQUES:
C       R8PREM, ABS.
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C      28/08/00 (OB): TOILETTAGE FORTRAN. CALCUL DE LA
C                     DIVERGENCE SURFACIQUE PAR LA BASE CONTRAVARIANTE
C                     -> SUPPRESSION DU RECOURS AU GRADIENT ET A LA
C                     DIVERGENCE VOLUMIQUE APPROXIMES DE THETA QUI EST
C                     PAR DEFINITION SURFACIQUE !
C                     SI THETA EST NUL ET STATIONNAIRE, ON NE FAIT 
C                     AUCUN CALCUL.
C-----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE

C DECLARATION PARAMETRES D'APPELS
      CHARACTER*16        OPTION , NOMTE

C DECLARATION VARIABLES LOCALES      
      CHARACTER*24 CARAC,FF
      CHARACTER*8        ELREFE
      REAL*8     COORSE(18),VECTT(9), R, NX, NY, POIDS, EPSI, R8PREM
      REAL*8     R8AUX, THETAR, TPG, TEMPNO(9), DLAGTM, THTIMP
      REAL*8     COVA(3,3),METR(2,2),JAC,CNVA(3,2), A(2,2), DIVS, UNMTHE
      INTEGER    IGEOM, IVECTT, ICARAC, IDEB, IFIN, IFF, IPOIDS, IVF
      INTEGER    IDFDE, NNO, NPG, NSE, NNOP2, C(6,9), ISE, KP, I, K
      INTEGER    IDLAGT, ICOEFH, ITEX, ITEMPM, ITEMPP, ITHETA, ITEMPS
      INTEGER    IVF2, IDFDE2
      LOGICAL    AXI, THEGA1, THTNUL

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
      CHARACTER*6        PGC
      COMMON  / NOMAJE / PGC
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

C====
C 1. INITIALISATIONS ET CONTROLE DE LA NULLITE DE THETA
C====

      EPSI = R8PREM ()
      CALL ELREF1(ELREFE)
      CARAC='&INEL.'//ELREFE//'.CARAC'
      CALL JEVETE(CARAC,'L',ICARAC)
      NNO = ZI(ICARAC)
      NPG = ZI(ICARAC+2)
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PVECTTH','L',ITHETA)
      CALL JEVECH('PVECTTR','E',IVECTT)
      CALL CONNEC ( NOMTE, ZR(IGEOM), NSE, NNOP2, C )

      DO 101 , I = 1 , NNOP2
        VECTT(I)=0.D0
  101 CONTINUE

      IDEB = ITHETA
      IFIN = ITHETA + 2*NNO - 1
      THTNUL = .TRUE.
      DO 102 , I = IDEB , IFIN
        IF ( ABS(ZR(I)).GT.EPSI ) THEN
          THTNUL = .FALSE.
        ENDIF
  102 CONTINUE

C====
C 2. CALCUL QUAND LE VECTEUR THETA N'EST PAS NUL OU LORSQU'IL EST NUL
C    SI ON EST EN TRANSITOIRE.
C====

      CALL JEVECH('PTEMPSR','L',ITEMPS)
      THTIMP = ZR(ITEMPS+2)
      UNMTHE = 1.D0 - THTIMP
      IF ( ABS(UNMTHE).LE.EPSI ) THEN
        THEGA1 = .TRUE.
      ELSE
        THEGA1 = .FALSE.
      ENDIF
      IF ((.NOT.THTNUL).OR.((THTNUL).AND.(.NOT.THEGA1))) THEN

C 2.1. ==> FIN DES INITIALISATIONS

      FF   ='&INEL.'//ELREFE//'.FF'
      CALL JEVETE(FF,'L',IFF)
      IPOIDS=IFF
      IVF   =IPOIDS+NPG
      IDFDE =IVF   +NPG*NNO

      CALL JEVECH('PCOEFHR','L',ICOEFH)
      CALL JEVECH('PT_EXTR','L',ITEX)
      CALL JEVECH('PTEMPER','L',ITEMPM)
      CALL JEVECH('PTEMPEP','L',ITEMPP)
      CALL JEVECH('PDLAGTE','L',IDLAGT)

      IF ( NOMTE(3:4) .EQ. 'AX' ) THEN
        AXI = .TRUE.
      ELSE
        AXI = .FALSE.
      ENDIF

C 2.2. ==> BOUCLE SUR LES SOUS-ELEMENTS

      DO 200 , ISE = 1 , NSE

C 2.2.1. ==> COORDONNEES LOCALES

        DO 201 , I = 1 , NNO
          COORSE(2*I-1) = ZR(IGEOM+2*C(ISE,I)-2)
          COORSE(2*I)   = ZR(IGEOM+2*C(ISE,I)-1)
  201   CONTINUE

C 2.2.2. ==> TEMPERATURES AUX NOEUDS
C            EN TRANSITOIRE  : THTIMP.(T+) + (1-THTIMP).(T-)
C            EN STATIONNAIRE : T

        IF ( THEGA1 ) THEN
          DO 2221 , I = 1 , NNO
            TEMPNO(I) = ZR(ITEMPM+C(ISE,I)-1)
 2221     CONTINUE
        ELSE
          DO 2222 , I = 1 , NNO
            TEMPNO(I) = THTIMP*ZR(ITEMPP+C(ISE,I)-1)
     >                + UNMTHE*ZR(ITEMPM+C(ISE,I)-1)
 2222     CONTINUE
        ENDIF

C 2.2.3. ==> BOUCLE SUR LES POINTS DE GAUSS

        DO 202 , KP = 1 , NPG

          K = (KP-1)*NNO

C 2.2.4. ==> CALCUL DES ELEMENTS DE GEOMETRIE DIFFERENTIELLE       
      
C CALCUL DE LA BASE COVARIANTE
          IVF2=IVF+K
          IDFDE2=IDFDE+K
          CALL SUBAC1(AXI,NNO,ZR(IVF2),ZR(IDFDE2),ZR(IGEOM),COVA)

C CALCUL DU TENSEUR METRIQUE
          CALL SUMETR(COVA,METR,JAC)

C CALCUL DES DEUX PREMIERS VECTEURS DE LA BASE CONTRAVARIANTE
          CALL SUBACV(COVA,METR,JAC,CNVA,A)

C 2.2.5. ==> CALCUL DE LA DIVERGENCE SURFACIQUE PROPREMENT DITE
          CALL VFF2DN ( NNO, ZR(IPOIDS+KP-1), ZR(IDFDE+K),
     >                  COORSE, NX, NY, POIDS )
C CALCUL DIRECT DE LA DIVERGENCE SURFACIQUE EN 1D
C DIV_SURF(THETA) = SIGMA SUR LES NOEUDS DE
C                 DERIVEE_FONCT_FORME/PREMIERE_VAR (POINT_DE_GAUSS) *
C                (THETA_X(PDG)*PREMIER_VECTEUR_CONTRAVARIANT_X(PDG) +
C                 IDEM EN Y)
          DIVS = 0.D0
          TPG    = 0.D0
          DLAGTM = 0.D0
          DO 203 , I = 1 , NNO
            R8AUX = ZR(IVF+K+I-1)
            TPG    = TPG    + TEMPNO(I)*R8AUX
            DLAGTM = DLAGTM + ZR(IDLAGT+C(ISE,I)-1)*R8AUX
            R8AUX = ZR(IDFDE+K+I-1)
            DIVS = DIVS + R8AUX*(ZR(ITHETA+2*I-2)*CNVA(1,1) +
     >                           ZR(ITHETA+2*I-1)*CNVA(2,1))
  203     CONTINUE

C 2.2.6. ==> TRAITEMENT PARTICULIER LIE A L'AXI (1/R ET POIDS)        

C EN 2D-AXI, CALCUL DU RAYON, MODIFICATION DU POIDS ET TERME
C COMPLEMENTAIRE SUR LA DIVERGENCE EN THETAR/R
C IL N'Y A AUCUN RISQUE QUE R SOIT NUL, CAR CELA SIGNIFIERAIT UNE
C CL DE FLUX SUR L'AXE, CE QUI EST IMPOSSIBLE. DONC ON PEUT DIVISER
C PAR R.

          IF ( AXI ) THEN
            R = 0.D0
            THETAR = 0.D0
            DO 204 , I = 1 , NNO
              R      = R +                COORSE(2*I-1) * ZR(IVF+K+I-1)
              THETAR = THETAR + ZR(ITHETA+2*C(ISE,I)-2) * ZR(IVF+K+I-1)
  204       CONTINUE
            POIDS = POIDS*R
            DIVS = DIVS + THETAR / R
          ENDIF

C 2.2.7. ==> CALCUL DE LA PREMIERE INTEGRALE (EN STATIONNAIRE) ET DES
C             DEUX PREMIERES SINON        

C CUMUL DE :
C STATIONNAIRE :  H . (TEXT-T) . DIV_SURF(THETA) . T*
C TRANSITOIRE :   H.(TEXT-THTIMP.(T+)-(1-THTIMP)(T-)).DIV_SURF(THETA).T*
C               - H .(1-THTIMP) . (DLAGT-).T*

          R8AUX = (ZR(ITEX)-TPG) * DIVS
          IF ( .NOT.THEGA1 ) THEN
            R8AUX = R8AUX - UNMTHE * DLAGTM
          ENDIF
          R8AUX = R8AUX * ZR(ICOEFH) * POIDS
          DO 205 , I = 1 , NNO
            VECTT(C(ISE,I))= VECTT(C(ISE,I)) + R8AUX * ZR(IVF+K+I-1)
  205     CONTINUE

  202   CONTINUE

  200 CONTINUE

      ENDIF

C====
C 3. BASCULE DANS LE VECTEUR GENERAL
C====

      DO 300 , I = 1 , NNOP2
        ZR(IVECTT-1+I)=VECTT(I)
  300 CONTINUE

      END
