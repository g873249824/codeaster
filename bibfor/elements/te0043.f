      SUBROUTINE TE0043(OPTION,NOMTE)
      IMPLICIT      NONE
      INCLUDE 'jeveux.h'

      CHARACTER*(*) OPTION,NOMTE
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     CALCUL DES CHARGES DE PESANTEUR DANS LES ELEMENTS DISCRETS
C     ------------------------------------------------------------------
C IN  OPTION : K16 : NOM DE L'OPTION A CALCULER
C        'CHAR_MECA_PESA_R'  : CALCUL DES CHARGES DE PESANTEUR
C        'CHAR_MECA_ROTA_R'  : CALCUL DES CHARGES DE ROTATION
C IN  NOMTE  : K16 : NOM DU TYPE D'ELEMENT DISCRET :
C         MECA_DIS_T_N
C         MECA_DIS_T_L
C         MECA_DIS_TR_N
C         MECA_DIS_TR_L
C         MECA_2D_DIS_T_N
C         MECA_2D_DIS_T_L
C         MECA_2D_DIS_TR_N
C         MECA_2D_DIS_TR_L
C     ------------------------------------------------------------------

C      CHARACTER*32   JEXNUM,JEXNOM,JEXR8,JEXATR

      REAL*8         PGL(3,3),MAT(144),R8BID,OMEGA,R8PREM
      INTEGER        INFODI,LROTA,LDIS,LORIEN,LPESA,LVECTU,ITYPE
      INTEGER        NBTERM,NNO,NC,NDIM,IREP,I,IBID
      CHARACTER*8    K8BID
      CHARACTER*20   KMESS(5)
C     ------------------------------------------------------------------

      IF ( (OPTION.NE.'CHAR_MECA_PESA_R').AND.
     &     (OPTION.NE.'CHAR_MECA_ROTA_R') ) THEN
         KMESS(1) = OPTION
         KMESS(2) = NOMTE
         KMESS(3) = 'TE0043'
         CALL U2MESK('F','DISCRETS_14',3,KMESS)
      ENDIF
C

C     ON VERIFIE QUE LES CARACTERISTIQUES ONT ETE AFFECTEES
C     LE CODE DU DISCRET
      CALL INFDIS('CODE',IBID,R8BID,NOMTE)
C     LE CODE STOKE DANS LA CARTE
      CALL INFDIS('TYDI',INFODI,R8BID,K8BID)
      IF (INFODI.NE.IBID) THEN
         CALL U2MESK('F+','DISCRETS_25',1,NOMTE)
         CALL INFDIS('DUMP',IBID,R8BID,'F+')
      ENDIF
C     DISCRET DE TYPE MASSE
      CALL INFDIS('DISM',INFODI,R8BID,K8BID)
      IF (INFODI.EQ.0) THEN
         CALL U2MESK('A+','DISCRETS_26',1,NOMTE)
         CALL INFDIS('DUMP',IBID,R8BID,'A+')
      ENDIF

C     [M] : SYMETRIQUE ?
      CALL INFDIS('SYMM',INFODI,R8BID,K8BID)
C --- INFORMATIONS SUR LES DISCRETS :
C        NBTERM   =  NOMBRE DE COEFFICIENTS DANS K
C        NNO      =  NOMBRE DE NOEUDS
C        NC       =  NOMBRE DE COMPOSANTE PAR NOEUD
C        NDIM     =  DIMENSION DE L'ELEMENT
C        ITYPE    =  TYPE DE L'ELEMENT
      CALL INFTED(NOMTE,INFODI,NBTERM,NNO,NC,NDIM,ITYPE)

C     --- CALCUL DES VECTEURS ELEMENTAIRES ----
      IF (OPTION.EQ.'CHAR_MECA_PESA_R') THEN
C        --- MATRICE DE RIGIDITE LOCALE ---
         CALL JEVECH('PCADISM','L',LDIS)
         CALL JEVECH('PCAORIE','L',LORIEN)
         CALL MATROT(ZR(LORIEN),PGL)

C        --- GLOBAL VERS LOCAL ? ---
C        --- IREP = 2 = MATRICE EN REPERE LOCAL ==> PASSER EN GLOBAL ---
         CALL INFDIS('REPM',IREP,R8BID,K8BID)
         IF (IREP.EQ.2) THEN
            IF (NDIM.EQ.3) THEN
               IF (INFODI.EQ.1) THEN
                  CALL UTPSLG(NNO,NC,PGL,ZR(LDIS),MAT)
               ELSEIF (INFODI.EQ.2) THEN
                  CALL UTPPLG(NNO,NC,PGL,ZR(LDIS),MAT)
               ENDIF
            ELSE IF (NDIM.EQ.2) THEN
               IF (INFODI.EQ.1) THEN
                  CALL UT2MLG(NNO,NC,PGL,ZR(LDIS),MAT)
               ELSEIF (INFODI.EQ.2) THEN
                  CALL UT2PLG(NNO,NC,PGL,ZR(LDIS),MAT)
               ENDIF
            END IF
         ELSE
            DO 10 I = 1,NBTERM
               MAT(I) = ZR(LDIS+I-1)
10          CONTINUE
         ENDIF

C        --- CHAMP DE PESANTEUR ---
         CALL JEVECH('PPESANR','L',LPESA)
C        --- VECTEUR CHARGEMENT ---
         CALL JEVECH('PVECTUR','E',LVECTU)

C        --- ON Y VA ---
         LVECTU = LVECTU - 1
         IF (NOMTE.EQ.'MECA_DIS_TR_L') THEN
            IF (INFODI.EQ.1) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(03)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(06)*ZR(LPESA)*ZR(LPESA+3)
               ZR(LVECTU+7) = MAT(28)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+8) = MAT(36)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+9) = MAT(45)*ZR(LPESA)*ZR(LPESA+3)
            ELSEIF (INFODI.EQ.2) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(14)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(27)*ZR(LPESA)*ZR(LPESA+3)
               ZR(LVECTU+7) = MAT(79)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+8) = MAT(92)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+9) = MAT(105)*ZR(LPESA)*ZR(LPESA+3)
            ENDIF
         ELSE IF (NOMTE.EQ.'MECA_DIS_TR_N') THEN
            IF (INFODI.EQ.1) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(03)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(06)*ZR(LPESA)*ZR(LPESA+3)
            ELSEIF (INFODI.EQ.2) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(08)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(15)*ZR(LPESA)*ZR(LPESA+3)
            ENDIF
         ELSE IF (NOMTE.EQ.'MECA_DIS_T_L') THEN
            IF (INFODI.EQ.1) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(03)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(06)*ZR(LPESA)*ZR(LPESA+3)
               ZR(LVECTU+4) = MAT(10)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+5) = MAT(15)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+6) = MAT(21)*ZR(LPESA)*ZR(LPESA+3)
            ELSEIF (INFODI.EQ.2) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(08)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(15)*ZR(LPESA)*ZR(LPESA+3)
               ZR(LVECTU+4) = MAT(22)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+5) = MAT(29)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+6) = MAT(36)*ZR(LPESA)*ZR(LPESA+3)
            ENDIF
         ELSE IF (NOMTE.EQ.'MECA_DIS_T_N') THEN
            IF (INFODI.EQ.1) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(03)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(06)*ZR(LPESA)*ZR(LPESA+3)
            ELSEIF (INFODI.EQ.2) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(05)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(09)*ZR(LPESA)*ZR(LPESA+3)
            ENDIF
         ELSE IF (NOMTE.EQ.'MECA_2D_DIS_TR_L') THEN
            IF (INFODI.EQ.1) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(03)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+4) = MAT(10)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+5) = MAT(15)*ZR(LPESA)*ZR(LPESA+2)
            ELSEIF (INFODI.EQ.2) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(08)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+4) = MAT(22)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+5) = MAT(29)*ZR(LPESA)*ZR(LPESA+2)
            ENDIF
         ELSE IF (NOMTE.EQ.'MECA_2D_DIS_TR_N') THEN
            IF (INFODI.EQ.1) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(03)*ZR(LPESA)*ZR(LPESA+2)
            ELSEIF (INFODI.EQ.2) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(05)*ZR(LPESA)*ZR(LPESA+2)
            ENDIF
         ELSE IF (NOMTE.EQ.'MECA_2D_DIS_T_L') THEN
            IF (INFODI.EQ.1) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(03)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(06)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+4) = MAT(10)*ZR(LPESA)*ZR(LPESA+2)
            ELSEIF (INFODI.EQ.2) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(06)*ZR(LPESA)*ZR(LPESA+2)
               ZR(LVECTU+3) = MAT(11)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+4) = MAT(16)*ZR(LPESA)*ZR(LPESA+2)
            ENDIF
         ELSE IF (NOMTE.EQ.'MECA_2D_DIS_T_N') THEN
            IF (INFODI.EQ.1) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(03)*ZR(LPESA)*ZR(LPESA+2)
            ELSEIF (INFODI.EQ.2) THEN
               ZR(LVECTU+1) = MAT(01)*ZR(LPESA)*ZR(LPESA+1)
               ZR(LVECTU+2) = MAT(04)*ZR(LPESA)*ZR(LPESA+2)
            ENDIF
         ELSE
            KMESS(1) = OPTION
            KMESS(2) = NOMTE
            KMESS(3) = 'TE0043'
            CALL U2MESK('F','DISCRETS_15',3,KMESS)
         END IF
      END IF
C
C
      IF (OPTION.EQ.'CHAR_MECA_ROTA_R') THEN
C        DISCRET DE TYPE MASSE ?
         CALL INFDIS('DISM',INFODI,R8BID,K8BID)
C        SI C'EST UN DISCRET DE MASSE :
C           L'OPTION N'EST PAS DEVELOPPEE SAUF SI OMEGA=0
C        DANS TOUS LES CAS ON RENVOI UN EFFORT NUL
         IF ( INFODI.EQ.1 ) THEN
            CALL JEVECH('PROTATR','L',LROTA)
            OMEGA = ZR(LROTA)
            IF ( ABS(OMEGA).GE.R8PREM() ) THEN
               KMESS(1) = NOMTE
               KMESS(2) = OPTION
               CALL U2MESK('F','CALCULEL_30',2,KMESS)
            ENDIF
         ENDIF
         CALL JEVECH('PVECTUR','E',LVECTU)
         DO 20 I=1, NNO*NC
            ZR(LVECTU-1+I)=0.0D0
20       CONTINUE
      ENDIF

      END
