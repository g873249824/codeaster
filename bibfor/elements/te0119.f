      SUBROUTINE TE0119(OPTION,NOMTE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 15/06/2009   AUTEUR MEUNIER S.MEUNIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2009  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE MEUNIER S.MEUNIER
C
      IMPLICIT     NONE
      CHARACTER*16 NOMTE,OPTION
C
C ----------------------------------------------------------------------
C
C CALCUL DES MATRICES DE COUPLAGE ARLEQUIN
C OPTION ARLQ_MATR
C
C CREATION DES 2 MATRICES DE COUPLAGE POUR LES ELEMENTS ISOPARAMETRIQUES
C 2D, 3D
C
C
C ----------------------------------------------------------------------
C
C
C IN  OPTION : OPTION DE CALCUL
C IN  NOMTE  : NOM DU TYPE ELEMENT
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER     NBNOMX
      PARAMETER   (NBNOMX = 27)
      INTEGER     NBGAMX
      PARAMETER   (NBGAMX = 64)
C
      INTEGER      NNS
      INTEGER      NPGS,IPOIDS,IVFS  ,IDFDES
      REAL*8       LCARA
      INTEGER      JCOORS,JFAMIL,JINFOR
      INTEGER      NDIM,IBID
      CHARACTER*8  NOMFAM,ELRFS
      INTEGER      NN1,NN2
      INTEGER      INCLU
      CHARACTER*6  LINCLU
C
C ----------------------------------------------------------------------
C
C --- COORDONNEES DES CONNECTIVITES DE LA MAILLE SUPPORT
C
      CALL JEVECH('PGEOMER','L',JCOORS)
C
C --- FAMILLE D'INTEGRATION
C
      CALL JEVECH('PFAMILK','L',JFAMIL)
      NOMFAM = ZK8(JFAMIL)
C
C --- ELREFE DE LA MAILLE SUPPORT
C
      CALL ELREF1(ELRFS)
C
C --- SCHEMA INTEGRATION MAILLE SUPPORT
C
      CALL ELREF4(' '   ,NOMFAM,
     &            NDIM  ,NNS   ,IBID  ,NPGS  ,IPOIDS,
     &            IVFS  ,IDFDES,IBID)
C
C --- INFORMATIONS SUR MAILLES COUPLEES
C
      CALL JEVECH('PINFORR','L',JINFOR)
      NDIM   = NINT(ZR(JINFOR+1-1))
      NN1    = NINT(ZR(JINFOR+2-1))
      NN2    = NINT(ZR(JINFOR+3-1))
      LCARA  = ZR(JINFOR+4-1)
      INCLU  = NINT(ZR(JINFOR+5-1))
C
C --- TYPE D'INCLUSION
C
      LINCLU = ' '
C
      IF (INCLU.EQ.1) THEN
        LINCLU = 'INCLU1'
        IF (NNS.NE.NN1) THEN
          CALL ASSERT(.FALSE.)
        ENDIF
      ELSEIF (INCLU.EQ.2) THEN
        LINCLU = 'INCLU2'
        IF (NNS.NE.NN2) THEN
          CALL ASSERT(.FALSE.)
        ENDIF
      ELSEIF (INCLU.EQ.3) THEN
        LINCLU = 'SSMAIL'
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- VERIFICATIONS
C
      IF (NDIM.GT.3)      CALL ASSERT(.FALSE.)
      IF (NDIM.LT.2)      CALL ASSERT(.FALSE.)
      IF (NN1 .GT.NBNOMX) CALL ASSERT(.FALSE.)
      IF (NN2 .GT.NBNOMX) CALL ASSERT(.FALSE.)
      IF (NNS .GT.NBNOMX) CALL ASSERT(.FALSE.)
      IF (NPGS.GT.NBGAMX) CALL ASSERT(.FALSE.)
C
      CALL ARLAPL(NDIM  ,NNS ,NN1   ,NN2 ,LCARA ,LINCLU,NOMTE,
     &            JCOORS,NPGS,IPOIDS,IVFS,IDFDES)
C
      END
