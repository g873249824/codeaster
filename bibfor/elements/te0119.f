      SUBROUTINE TE0119(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 04/04/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE
C ----------------------------------------------------------------------
C     BUT: CALCUL DE LA MATRICE DE PASSAGE NOEUDS -> GAUSS
C          POUR LES ELEMENTS ISOPARAMETRIQUES 3D
C ----------------------------------------------------------------------
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      CHARACTER*24 CARAC,FF
      INTEGER NNO,KP,INO,K,ICARAC,IFF,IVF
      INTEGER NPG,NPG1,JMANO,IPOIDS,NDIM,NNO2

      INTEGER JTAB(7),IADZI,IAZK24

C
      LOGICAL AXI,DPLAN,TRAITE
      LOGICAL VOL2,BORD2,VOL3,BORD3
      LOGICAL ISTHT3
      LOGICAL ISTHQ4
      LOGICAL ISTHT6
      LOGICAL ISTHQ8
      LOGICAL ISTHS2
      LOGICAL ISTHS3
      LOGICAL ISTHF8,ISTHF6
C
      LOGICAL ISTH10,ISTH13,ISTH15,ISTH20
      INTEGER NSOM
C
      INTEGER NNOMAX,NVOMAX,NSOMAX
      PARAMETER(NNOMAX=20,NVOMAX=4,NSOMAX=8)
      INTEGER VOISIN(NVOMAX,NNOMAX)
      INTEGER NBVOS(NSOMAX)
C
      LOGICAL P2P1,LUMPED
      CHARACTER*8 ELREFE
      LOGICAL THLU
      INTEGER FAMLUM,NBFMAX,IFAM
      PARAMETER (NBFMAX=10)
      INTEGER NBPG(NBFMAX),NBFPG
      INTEGER I,NNOS,IDFDE,IDFDN,IDFDK
C
C
C  ON APPELLE CAETHM AVEC POUR LES ELEMENTS VOLUMIQUES
C  2D EN METTANT VOL2 SACHANT QUE ALORS POUR LES ELEMENTS
C  3D IL NE FERA RIEN CE DONT ON S APERCEVRA PAR L ARGUMENT
C     TRAITE
C

      CALL ELREF1(ELREFE)
      BORD2 = .FALSE.
      BORD3 = .FALSE.
      VOL2  = .FALSE.
      VOL3  = .TRUE.
C
      CALL CAETHM(NOMTE,VOL2,BORD2,VOL3,BORD3,
     > ELREFE,AXI,DPLAN,TRAITE,
     > ISTHS2,ISTHS3,ISTHF8,ISTHF6,ISTH10,ISTH13,ISTH15,ISTH20,
     > ISTHT3,ISTHQ4,ISTHT6,ISTHQ8,
     > NNOMAX,NVOMAX,NSOMAX,
     > NSOM,VOISIN,NBVOS,P2P1,LUMPED)
C

      CARAC = '&INEL.'//ELREFE//'.CARACTE'
      CALL JEVETE(CARAC,'L',ICARAC)
      FF = '&INEL.'//ELREFE//'.FFORMES'
      CALL JEVETE(FF,'L',IFF)
C
      CALL TECAEL(IADZI,IAZK24)
      NNO=ZI(IADZI+1)
      NDIM = ZI(ICARAC)
      NNO2 = ZI(ICARAC+1)
      CALL ASSERT(NNO.EQ.NNO2)
C
      IF ( ISTH10.OR.ISTH13.OR.ISTH15.OR.ISTH20)THEN
        NBFPG = ZI(ICARAC+3-1)
        IF ( NBFPG.GT.NBFMAX) THEN
         CALL UTMESS('F','TE0119','TROP DE FAMILLES DE GAUSS')
        ENDIF
        DO 1 I = 1,NBFPG
          NBPG(I) = ZI(ICARAC+3-1+I)
  1     CONTINUE
        NNOS = ZI(ICARAC+3-1+NBFPG+1)
          IF ( LUMPED) THEN
            CALL ALTHLU(ELREFE,THLU,FAMLUM)
            NPG=NNOS
            IFAM = FAMLUM
          ELSE
            NPG= NBPG(1)
            IFAM = 1
            IF (ELREFE.EQ.'PENTA15') THEN
              NPG = NBPG(2)
              IFAM = 2
            END IF
          ENDIF
C
           CALL ADFF3D(NDIM,NNO,NBFPG,NBPG,IFAM,
     >     IPOIDS,IVF,IDFDE,IDFDN,IDFDK)
C
           IPOIDS = IFF + IPOIDS
           IVF    = IFF + IVF
           IDFDE  = IFF + IDFDE
           IDFDN  = IFF + IDFDN
           IDFDK  = IFF + IDFDK
      ELSE
       NPG1 = ZI(ICARAC+3)
       NPG = NPG1
       IPOIDS = IFF + (NDIM+1)*NNO*NNO
       IVF = IPOIDS + NPG1
      ENDIF


      CALL TECACH(.TRUE.,.TRUE.,'PMANOPG',7,JTAB)
      CALL ASSERT(JTAB(6).EQ.(NPG*NNO+2))
      JMANO = JTAB(1)
      ZR(JMANO-1+1) = NNO
      ZR(JMANO-1+2) = NPG

      DO 20 KP = 1,NPG
        K = (KP-1)*NNO
        DO 10 INO = 1,NNO
          ZR(JMANO-1+2+NNO* (KP-1)+INO) = ZR(IVF+K+INO-1)
   10   CONTINUE
   20 CONTINUE

      END
