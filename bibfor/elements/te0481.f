      SUBROUTINE TE0481 ( OPTION , NOMTE )
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 04/04/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT NONE
      CHARACTER*16        OPTION , NOMTE
C ----------------------------------------------------------------------
C FONCTION REALISEE:  CALCUL DE L'OPTION FORC_NODA POUR LES ELEMENTS
C                     INCOMPRESSIBLES EN 3D
C
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................

      CHARACTER*8   ELREFE,ELREF2
      CHARACTER*24  FF,FF2,CARAC,CARAC2
      REAL*8        FINTU(3,20), FINTA(2,8),DFDI(60)
      REAL*8        DEPLM(3,20),DDEPL(3,20)
      REAL*8        GONFLM(2,8),DGONFL(2,8)
      INTEGER       NNO1,NNO2,NPG1,NBELR
      INTEGER       IPOI1,IFF,IVF1,IDFDE1,IDFDN1,IDFDK1
      INTEGER       IPOI2,IFF2, IVF2, IDEPLM,IDEPLP
      INTEGER       ICARA1,ICARA2,JVAL2
      INTEGER       ICONTM,IGEOM,IVECTU
      INTEGER       K1,L1,L2,KP,I,I1,N,KK,KL

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      CALL ELREF1(ELREFE)
      IF ( NOMTE(6:10).EQ.'TETRA') THEN
        ELREF2 = 'TETRI4'
      ELSEIF      ( NOMTE(6:9)  .EQ. 'HEXA'  ) THEN
        ELREF2 = 'HEXI8'
      ELSE
        CALL UTMESS('F','TE0481','ELEMENT:'//NOMTE(6:10)//
     +                'NON IMPLANTE')
      ENDIF

C    RECUPERATION DES FONCTIONS DE FORME

      CARAC = '&INEL.'//ELREFE//'.CARACTE'
      CALL JEVETE(CARAC,'L',ICARA1)
      NNO1   = ZI(ICARA1+1)
      NPG1   = ZI(ICARA1+3)

      FF = '&INEL.'//ELREFE//'.FFORMES'
      CALL JEVETE(FF,'L',IFF)
      IPOI1   = IFF   +4*NNO1*NNO1
      IVF1    = IPOI1   + NPG1
      IDFDE1  = IVF1    + NPG1*NNO1
      IDFDN1  = IDFDE1  + 1
      IDFDK1  = IDFDN1  + 1

      CARAC2 = '&INEL.'//ELREF2//'.CARACTE'
      CALL JEVETE(CARAC2,'L',ICARA2)
      NNO2   = ZI(ICARA2+1)
      FF2 = '&INEL.'//ELREF2//'.FFORMES'
      CALL JEVETE(FF2,'L',IFF2)
      IPOI2 = IFF2 + 4*NNO2*NNO2
      IVF2 = IPOI2 + NPG1

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PCONTMR','L',ICONTM)
      CALL JEVECH('PDEPLMR','L',IDEPLM)
      CALL JEVECH('PDEPLPR','L',IDEPLP)
      CALL JEVECH('PVECTUR','E',IVECTU)

C        REMISE EN FORME DES DONNEES
      KK = 0
      DO 10 N = 1, NNO1
        DO 20 I = 1,5
          IF (I.LE.3) THEN
            DEPLM(I,N) = ZR(IDEPLM+KK)
            DDEPL(I,N) = ZR(IDEPLP+KK)
            KK = KK + 1
          END IF
          IF (I.GE.4 .AND. N.LE.NNO2) THEN
            GONFLM(I-3,N) = ZR(IDEPLM+KK)
            DGONFL(I-3,N) = ZR(IDEPLP+KK)
            KK = KK + 1
          END IF
 20     CONTINUE
 10   CONTINUE

C - CALCUL DES FORCES INTERIEURES

      CALL NIFN3D(NNO1, NNO2,NPG1,ZR(IPOI1),ZR(IVF1),ZR(IVF2),
     &        ZR(IDFDE1),ZR(IDFDN1),ZR(IDFDK1),DFDI,ZR(IGEOM),
     &        ZR(ICONTM),DEPLM,DDEPL,GONFLM, DGONFL,
     &        FINTU , FINTA )

C - STOCKAGE DES FORCES INTERIEURES
      KK = 0

      DO 30 N = 1, NNO1
      DO 40 I = 1,5
        IF (I.LE.3) THEN
          ZR(IVECTU+KK) = FINTU(I,N)
          KK = KK + 1
        END IF
        IF (I.GE.4 .AND. N.LE.NNO2) THEN
          ZR(IVECTU+KK) = FINTA(I-3,N)
          KK = KK + 1
        END IF
 40   CONTINUE
 30   CONTINUE

      END
