      SUBROUTINE TE0141(OPTION,NOMTE)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*(*) OPTION,NOMTE
C     ------------------------------------------------------------------
C MODIF ELEMENTS  DATE 06/05/2003   AUTEUR CIBHHPD D.NUNEZ 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     CALCULE LA MATRICE DE MASSE ELEMENTAIRE DES ELEMENTS DE POUTRE
C     D'EULER ET DE TIMOSHENKO
C     ------------------------------------------------------------------
C IN  OPTION : K16 : NOM DE L'OPTION A CALCULER
C        'MASS_MECA'      : CALCUL DE LA MATRICE DE MASSE COHERENTE
C        'MASS_MECA_DIAG' : CALCUL DE LA MATRICE DE MASSE CONCENTREE
C        'MASS_FLUI_STRU' : CALCUL DE LA MATRICE DE MASSE AJOUTEE
C        'M_GAMMA'        : CALCUL DU VECTEUR M_GAMMA
C IN  NOMTE  : K16 : NOM DU TYPE ELEMENT
C        'MECA_POU_D_E' : POUTRE DROITE D'EULER (SECTION VARIABLE)
C        'MECA_POU_D_EM': POUTRE DROITE D'EULER (SECTION MULTIFIBRES)
C        'MECA_POU_D_T' : POUTRE DROITE DE TIMOSHENKO (SECTION VARIABLE)
C        'MECA_POU_C_T' : POUTRE COURBE DE TIMOSHENKO(SECTION CONSTANTE)
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      PARAMETER (NBRES=6)
      REAL*8 VALRES(NBRES)
      CHARACTER*2 CODRES(NBRES)
      CHARACTER*8 NOMPAR,NOMRES(NBRES)
      CHARACTER*16 CH16
      REAL*8 PGL(3,3),PGL1(3,3),PGL2(3,3),MLV(78)
      REAL*8 MATV(78),MATP(12,12)
C     ------------------------------------------------------------------
      DATA NOMRES/'E','NU','RHO','RHO_F_IN','RHO_F_EX','CM'/
C     ------------------------------------------------------------------
      ZERO = 0.D0
      DEUX = 2.D0
C     ------------------------------------------------------------------

C     --- RECUPERATION DES CARACTERISTIQUES MATERIAUX ---

      CALL JEVECH('PMATERC','L',LMATER)
      CALL TECACH('ONN','PTEMPER',1,ITEMPE,IRET)
      IF (ITEMPE.EQ.0) THEN
        NBPAR = 0
        NOMPAR = ' '
        VALPAR = ZERO
      ELSE
        NBPAR = 1
        NOMPAR = 'TEMP'
        VALPAR = ZR(ITEMPE)
      END IF

      IF (OPTION.EQ.'MASS_FLUI_STRU') THEN
        CALL JEVECH('PCAGEPO','L',LCAGE)
        CALL JEVECH('PABSCUR','L',LABSC)
        ABSMOY = (ZR(LABSC-1+1)+ZR(LABSC-1+2))/DEUX
        CALL RCVALA(ZI(LMATER),'ELAS_FLUI',1,'ABSC',ABSMOY,NBRES,NOMRES,
     &              VALRES,CODRES,'FM')
        E = VALRES(1)
        XNU = VALRES(2)
        RHOS = VALRES(3)
        RHOFI = VALRES(4)
        RHOFE = VALRES(5)
        CM = VALRES(6)
        PHIE = ZR(LCAGE-1+1)*DEUX
        IF (PHIE.EQ.0.D0) THEN
          CALL UTMESS('F','ELEMENTS DE POUTRE (TE0141)',
     &          'MAUVAISE DEFINITION DES CARACTERISTIQUES DE LA SECTION'
     &                )
        END IF
        PHII = (PHIE-DEUX*ZR(LCAGE-1+2))
        CALL RHOEQU(RHO,RHOS,RHOFI,RHOFE,CM,PHII,PHIE)

      ELSE IF (OPTION.EQ.'MASS_MECA' .OR.
     &         OPTION.EQ.'MASS_MECA_DIAG' .OR. OPTION.EQ.'M_GAMMA') THEN
        CALL RCVALA(ZI(LMATER),'ELAS',NBPAR,NOMPAR,VALPAR,3,NOMRES,
     &              VALRES,CODRES,'FM')
        E = VALRES(1)
        XNU = VALRES(2)
        RHO = VALRES(3)

      ELSE
        CH16 = OPTION
        CALL UTMESS('F','ELEMENTS DE POUTRE (TE0141)',
     &              'L''OPTION "'//CH16//'" EST INCONNUE')
      END IF

C     --- RECUPERATION DES ORIENTATIONS ---

      CALL JEVECH('PCAORIE','L',LORIEN)

C     --- CALCUL DE LA MATRICE DE MASSE LOCALE ---

      KANL = 1
      IF (OPTION.EQ.'MASS_MECA_DIAG') KANL = 0
      IF (NOMTE(1:13).EQ.'MECA_POU_D_EM') THEN
        CALL PMFMAS(NOMTE,RHO,KANL,MLV)
      ELSE
        CALL POMASS(NOMTE,E,XNU,RHO,KANL,MLV)
      END IF

      IF (OPTION.EQ.'M_GAMMA') THEN
        CALL JEVECH('PDEPLAR','L',IACCE)
        CALL JEVECH('PVECTUR','E',IVECT)
        IF (NOMTE(1:12).EQ.'MECA_POU_D_E' .OR.
     &      NOMTE(1:12).EQ.'MECA_POU_D_T') THEN
          NNO = 2
          NC = 6
          CALL MATROT(ZR(LORIEN),PGL)
          CALL UTPSLG(NNO,NC,PGL,MLV,MATV)

        ELSE IF (NOMTE(1:12).EQ.'MECA_POU_C_T') THEN
          CALL JEVECH('PGEOMER','L',LX)
          LX = LX - 1
          XL = SQRT((ZR(LX+4)-ZR(LX+1))**2+ (ZR(LX+5)-ZR(LX+2))**2+
     &         (ZR(LX+6)-ZR(LX+3))**2)
          CALL JEVECH('PCAARPO','L',LRCOU)
          RAD = ZR(LRCOU)
          ANGARC = ZR(LRCOU+1)
          ANGS2 = TRIGOM('ASIN',XL/ (DEUX*RAD))
          CALL MATRO2(ZR(LORIEN),ANGARC,ANGS2,PGL1,PGL2)
          CALL CHGREP('LG',PGL1,PGL2,MLV,MATV)

        ELSE
          CH16 = NOMTE
          CALL UTMESS('F','ELEMENTS DE POUTRE (TE0140)',
     &                '"'//CH16//'"    NOM D''ELEMENT INCONNU.')
        END IF
        CALL VECMA(MATV,78,MATP,12)
        CALL PMAVEC('ZERO',12,MATP,ZR(IACCE),ZR(IVECT))
      ELSE
        CALL JEVECH('PMATUUR','E',LMAT)

        IF (NOMTE(1:12).EQ.'MECA_POU_D_E' .OR.
     &      NOMTE(1:12).EQ.'MECA_POU_D_T') THEN
          NNO = 2
          NC = 6
          CALL MATROT(ZR(LORIEN),PGL)
          CALL UTPSLG(NNO,NC,PGL,MLV,ZR(LMAT))

        ELSE IF (NOMTE(1:12).EQ.'MECA_POU_C_T') THEN
          CALL JEVECH('PGEOMER','L',LX)
          LX = LX - 1
          XL = SQRT((ZR(LX+4)-ZR(LX+1))**2+ (ZR(LX+5)-ZR(LX+2))**2+
     &         (ZR(LX+6)-ZR(LX+3))**2)
          CALL JEVECH('PCAARPO','L',LRCOU)
          RAD = ZR(LRCOU)
          ANGARC = ZR(LRCOU+1)
          ANGS2 = TRIGOM('ASIN',XL/ (DEUX*RAD))
          CALL MATRO2(ZR(LORIEN),ANGARC,ANGS2,PGL1,PGL2)
          CALL CHGREP('LG',PGL1,PGL2,MLV,ZR(LMAT))

        ELSE
          CH16 = NOMTE
          CALL UTMESS('F','ELEMENTS DE POUTRE (TE0140)',
     &                '"'//CH16//'"    NOM D''ELEMENT INCONNU.')
        END IF
      END IF

      END
