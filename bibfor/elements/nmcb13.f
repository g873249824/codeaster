      SUBROUTINE NMCB13(EPS,SIG,ESEC,E,D,BETA,A,B,Y,Y00)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 08/03/2004   AUTEUR REZETTE C.REZETTE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT NONE
C ---  CALCUL DE SIGMA DANS LE CAS 1 & 3 PAR DICHOTOMIE
      REAL*8 EPS,SIG,ESEC,E,D,BETA,A,B,Y,Y0,Y00
      REAL*8 X1,X2,XG,XD,FCTD,PAS,ERREUR,TOL
      INTEGER NBPAS
      REAL*8 D13,YY,ZERO,UN,DEUX,PETIT
      PARAMETER (TOL=1.D-6,NBPAS=50)
      PARAMETER (ZERO=0.0D+0,UN=1.D+0,PETIT=1.D-8,DEUX=2.D+0)

C     DANS LE CAS NO 1 OU 3, ON RECHERCHE D13 DANS (0,1)
      X1 = D - 0.01D0
      X2 = UN
      PAS = (X2-X1)/DBLE(NBPAS)

C --- VERIFICATION DE DEPASSEMENT DU SEUIL
      D13 = D
      Y0 = Y00
      YY = (E*EPS+BETA)* (E*EPS+BETA) - BETA*BETA/ (UN-D13)/ (UN-D13)
      YY = YY/ (DEUX*E)
      IF (YY.LE.Y0) THEN
        Y = YY
        ESEC = E* (UN-D)
        SIG = EPS*ESEC - BETA*D
        GO TO 20
      END IF

      XG = D
      XD = X1

C --- BOUCLE TANT QUE ERREUR
   10 CONTINUE
C       VALEUR DE LA FONCTION A LA BORNE DROITE D13=XD
      D13 = XD
      YY = (E*EPS+BETA)* (E*EPS+BETA)/ (DEUX*E) -
     &     (BETA*BETA/ (UN-D13)/ (UN-D13))/ (DEUX*E)
      Y0 = Y00
      IF (YY.GT.Y0) THEN
        FCTD = UN - (UN+ (A* (YY-Y0))**B)* (UN-D13)
      ELSE
        FCTD = UN
      END IF
      IF (FCTD.LT.ZERO) THEN
        XG = XD
        XD = XD + PAS
      ELSE
        XD = XG
        PAS = PAS/DEUX
        XD = XD + PAS
      END IF
      IF (XG.GT.X2) THEN
        CALL UTMESS('F','NMCB13','PAS DE ZERO, CONVERGENCE IMPOSSIBLE')
      END IF
      ERREUR = ABS(FCTD)
      IF ((ERREUR.GT.TOL) .AND. (PAS.GE.PETIT)) GO TO 10
C --- FIN BOUCLE TANT QUE ERREUR

C --- SI D13>D , EVOLUTION
CCCCCCC
CCC      Y = Y00 + UN/A* (D13/ (UN-D13))** (UN/B)
CCCCCCC
      IF (D13.LT.0.D0) THEN
         IF (ABS(D13).LT.TOL) THEN
             Y = Y00
         ELSE
             Y = Y00 + UN/A* (D13/ (UN-D13))** (UN/B)
         ENDIF
      ELSE
         Y = Y00 + UN/A* (D13/ (UN-D13))** (UN/B)
      ENDIF
CCCCCCC
      IF (D13.GE.D) THEN
        D = D13
      END IF
      IF (D.GT. (UN-PETIT)) THEN
        D = UN - PETIT
      END IF

C --- MODULE SECANT
      ESEC = E* (UN-D)
C --- CONTRAINTE
      SIG = EPS*ESEC - BETA*D

   20 CONTINUE
      END
