      SUBROUTINE TE0567(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 23/01/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE PELLET J.PELLET
      IMPLICIT NONE
      CHARACTER*16 OPTION,NOMTE

C ----------------------------------------------------------------------
C FONCTION REALISEE:  CALCUL DE L'OPTION FORC_NODA POUR LES ELEMENTS
C                     INCOMPRESSIBLES OSGS EN 3D AVEC LA METHODE OSGS

C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................


C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      INTEGER JGANO1,NNO1,NNO2,NPG1,NTROU
      INTEGER IPOI1,IVF1,IDFDE1,IMATE,IRETC
      INTEGER IPOI2,IVF2,IDEPLM,ICOMPO
      INTEGER ICONTM,IGEOM,IVECTU,NDIM,NPG2,IDFDE2
      INTEGER JGANO2,I,N,KK,NNO1S,NNO2S
      INTEGER NIV,IFM,IBID

      REAL*8 FINTU(3,20),FINTA(1,8),FINTP(3,20),DFDI(60)
      REAL*8 DEPLM(3,20),PRESM(1,8),PIM(3,20),HK,STAB
      CHARACTER*8 LIELRF(10)

      IF(OPTION(1:9) .NE. 'FORC_NODA') CALL ASSERT(.FALSE.)

      CALL ELREF2(NOMTE,10,LIELRF,NTROU)
      CALL ELREF4(' ','RIGI',NDIM,NNO1,NNO1S,NPG1,IPOI1,IVF1,
     &            IDFDE1,JGANO1)
      CALL ELREF4(LIELRF(1),'RIGI',NDIM,NNO2,NNO2S,NPG2,IPOI2,IVF2,
     &            IDFDE2,JGANO2)

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)
      CALL JEVECH('PCONTMR','L',ICONTM)
      CALL JEVECH('PDEPLMR','L',IDEPLM)
      CALL JEVECH('PVECTUR','E',IVECTU)
C - ON RECUPERE LES INFOS SUR LE COMPORTEMENT
      CALL TECACH('ONN','PCOMPOR',1,ICOMPO,IRETC)

C - REMISE EN FORME DES DONNEES

      KK = 0
      DO 20 N = 1,NNO1
        DO 10 I = 1,7
          IF (I.LE.3) THEN
            DEPLM(I,N) = ZR(IDEPLM+KK)
            KK = KK + 1
          END IF
          IF (I.EQ.4 .AND. N.LE.NNO2) THEN
            PRESM(I-3,N) = ZR(IDEPLM+KK)
            KK = KK + 1
          END IF
          IF (I.GE.5) THEN
            PIM(I-4,N)= ZR(IDEPLM+KK)
            KK = KK + 1
          END IF
   10   CONTINUE
   20 CONTINUE

      CALL INFNIV(IFM,NIV)
      CALL UTHK(NOMTE,IGEOM,HK,3,IBID,IBID,IBID,IBID,NIV,IFM)
      STAB = 1.D-4*HK*HK

C - CALCUL DES FORCES INTERIEURES
      IF (ZK16(ICOMPO+2) (1:5).EQ.'PETIT') THEN
        CALL NIFN3O(NNO1,NNO2,NPG1,IPOI1,IVF1,IVF2,IDFDE1,DFDI,
     &              ZR(IGEOM),.FALSE.,ZR(ICONTM),ZI(IMATE),ZK16(ICOMPO),
     &              DEPLM,PRESM,PIM,STAB,FINTU,FINTA,FINTP)

      ELSE IF (ZK16(ICOMPO+2) (1:10).EQ.'SIMO_MIEHE') THEN
        CALL U2MESS('F','ELEMENTS5_9')
      ELSE
        CALL U2MESK('F','ELEMENTS3_16',1,ZK16(ICOMPO+2))
      END IF

C - STOCKAGE DES FORCES INTERIEURES
      KK = 0
      DO 40 N = 1,NNO1
        DO 30 I = 1,7
          IF (I.LE.3) THEN
            ZR(IVECTU+KK) = FINTU(I,N)
            KK = KK + 1
          END IF
          IF (I.EQ.4 .AND.N.LE.NNO2) THEN
            ZR(IVECTU+KK) = FINTA(I-3,N)
            KK = KK + 1
          END IF
          IF (I.GE.5) THEN
            ZR(IVECTU+KK) = FINTP(I-4,N)
            KK = KK + 1
          END IF
   30   CONTINUE
   40 CONTINUE

      END
