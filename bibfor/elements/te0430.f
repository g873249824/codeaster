      SUBROUTINE TE0430(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 12/02/2013   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*16 OPTION,NOMTE
C ......................................................................
C    - FONCTION REALISEE:  CALCUL DES OPTIONS DE CHARGEMENT :
C                                  - CHAR_MECA_EPSI_R
C                                  - CHAR_MECA_PESA_R
C                                  - CHAR_MECA_TEMP_R
C                                  - FORC_NODA
C                                  - REFE_FORC_NODA
C                          POUR LES GRILLES MEMBRANES EXCENTREES OU NON
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................

      INTEGER CODRES(2)
      CHARACTER*4 FAMI
      CHARACTER*8 NOMRES(2)
      INTEGER NDDL,NNO,NPG,I,KPG,N,NDIM,NNOS,JGANO
      INTEGER IPOIDS,IVF,IDFDE,IGEOM,IMATE,ICONTM,IVECTU,IRET
      INTEGER IPESA,IEPSIN,IADZI,IAZK24
      REAL*8 DFF(2,8),VFF(8),B(6,8),P(3,6),JAC,EPSTHE,EPSREF
      REAL*8 DIR11(3),DENSIT,PGL(3,3),DISTN,VECN(3)
      REAL*8 SIG,RHO,R8VIDE,VALRES(2)
      LOGICAL LEXC

C - BOOLEEN POUR LES GRILLES EXCENTREES

      LEXC = (NOMTE(1:4).EQ.'MEGC')

C - FONCTIONS DE FORMES ET POINTS DE GAUSS

      FAMI = 'RIGI'
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,JGANO)

C - PARAMETRES EN ENTREE

      CALL JEVECH('PGEOMER','L',IGEOM)

      IF (OPTION.EQ.'FORC_NODA') THEN
        CALL JEVECH('PCONTMR','L',ICONTM)

      ELSEIF (OPTION.EQ.'REFE_FORC_NODA') THEN
        CALL JEVECH('PMATERC','L',IMATE)

      ELSEIF (OPTION.EQ.'CHAR_MECA_EPSI_R') THEN
        CALL JEVECH('PMATERC','L',IMATE)
        CALL JEVECH('PEPSINR','L',IEPSIN)

      ELSEIF (OPTION.EQ.'CHAR_MECA_PESA_R') THEN
        CALL JEVECH('PMATERC','L',IMATE)
        CALL JEVECH('PPESANR','L',IPESA)

      ELSEIF (OPTION.EQ.'CHAR_MECA_TEMP_R') THEN
        CALL JEVECH('PMATERC','L',IMATE)

      ENDIF

C - PARAMETRES EN SORTIE

      CALL JEVECH('PVECTUR','E',IVECTU)

C - LECTURE DES CARACTERISTIQUES DE GRILLE ET
C   CALCUL DE LA DIRECTION D'ARMATURE

      CALL CARGRI(LEXC,DENSIT,DISTN,DIR11)

C - SI EXCENTREE : RECUPERATION DE LA NORMALE ET DE L'EXCENTREMENT

      IF (LEXC) THEN

        IF (NOMTE.EQ.'MEGCTR3') THEN
          CALL DXTPGL(ZR(IGEOM),PGL)
        ELSEIF (NOMTE.EQ.'MEGCQU4') THEN
          CALL DXQPGL(ZR(IGEOM),PGL,'S',IRET)
        ENDIF

        DO 8 I=1,3
          VECN(I)=DISTN*PGL(3,I)
8       CONTINUE
        NDDL=6

      ELSE
        NDDL  = 3
      ENDIF

C - DEBUT DE LA BOUCLE SUR LES POINTS DE GAUSS

      DO 800 KPG=1,NPG

C - MISE SOUS FORME DE TABLEAU DES VALEURS DES FONCTIONS DE FORME
C   ET DES DERIVEES DE FONCTION DE FORME

        DO 11 N=1,NNO
          VFF(N)  =ZR(IVF+(KPG-1)*NNO+N-1)
          DFF(1,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2)
          DFF(2,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2+1)
11      CONTINUE

C - CALCUL DE LA MATRICE "B" : DEPL NODAL --> EPS11 ET DU JACOBIEN

        CALL NMGRIB(NNO,ZR(IGEOM),DFF,DIR11,LEXC,VECN,B,JAC,P)

C - BRANCHEMENT DES DIFFERENTES OPTIONS

        IF ((OPTION.EQ.'FORC_NODA').OR.
     &      (OPTION.EQ.'CHAR_MECA_TEMP_R').OR.
     &      (OPTION.EQ.'CHAR_MECA_EPSI_R')) THEN

C - FORC_NODA : IL SUFFIT DE RECOPIER SIGMA

          IF (OPTION.EQ.'FORC_NODA') THEN
            SIG = ZR(ICONTM+KPG-1)

C - CHAR_MECA_EPSI_R : SIG = E*EPSIN

          ELSEIF (OPTION.EQ.'CHAR_MECA_EPSI_R') THEN
            NOMRES(1) = 'E'
            CALL RCVALB(FAMI,KPG,1,'+',ZI(IMATE),' ','ELAS',
     &                  0,' ',0.D0,1,
     &                  NOMRES,VALRES,CODRES, 1)
            SIG=VALRES(1)*ZR(IEPSIN)

C - CHAR_MECA_TEMP_R : SIG = E*EPSTHE

          ELSEIF (OPTION.EQ.'CHAR_MECA_TEMP_R') THEN
            CALL VERIFT(FAMI,KPG,1,'+',ZI(IMATE),'ELAS',1,EPSTHE,IRET)
            IF (IRET.NE.0) THEN
               CALL TECAEL(IADZI,IAZK24)
               CALL U2MESK('F','CALCULEL2_81',1,ZK24(IAZK24-1+3))
            ENDIF
            NOMRES(1) = 'E'
            CALL RCVALB(FAMI,KPG,1,'+',ZI(IMATE),' ','ELAS',
     &                  0,' ',0.D0,1,
     &                  NOMRES,VALRES,CODRES, 1)
            SIG=VALRES(1)*EPSTHE
          ENDIF

          DO 100 N=1,NNO
            DO 100 I=1,NDDL
              ZR(IVECTU+(N-1)*NDDL+I-1)=ZR(IVECTU+(N-1)*NDDL+I-1)
     &                          +B(I,N)*SIG*ZR(IPOIDS+KPG-1)*JAC*DENSIT
100       CONTINUE

C - REFE_FORC_NODA : ON CALCULE DES FORCES DE REFERENCE
C      (N'EST VALABLE QUE POUR LES GRILLES MEMBRANES)

        ELSEIF (OPTION.EQ.'REFE_FORC_NODA') THEN

          CALL TEREFE('EPSI_REFE','GRILLE',EPSREF)
          IF (EPSREF.EQ.R8VIDE()) CALL ASSERT(.FALSE.)
          IF (LEXC)               CALL ASSERT(.FALSE.)

          NOMRES(1) = 'E'
          CALL RCVALB(FAMI,KPG,1,'+',ZI(IMATE),' ','ELAS',
     &                0,' ',0.D0,1,
     &                NOMRES,VALRES,CODRES, 1)
          SIG=VALRES(1)*EPSREF

          DO 110 N=1,NNO
            DO 110 I=1,NDDL
              ZR(IVECTU+(N-1)*NDDL+I-1) = ZR(IVECTU+(N-1)*NDDL+I-1)
     &               + SIG*SQRT(ABS(JAC))*DENSIT/NPG
110       CONTINUE

C - CHAR_MECA_PESA_R

        ELSEIF (OPTION.EQ.'CHAR_MECA_PESA_R') THEN
          CALL RCVALB(FAMI,KPG,1,'+',ZI(IMATE),' ','ELAS',0,' ',0.D0,1,
     &                 'RHO',RHO,CODRES, 1)
          DO 130 N=1,NNO
            DO 130 I=1,3
              ZR(IVECTU+(N-1)*NDDL+I-1)=ZR(IVECTU+(N-1)*NDDL+I-1)+
     &               RHO*ZR(IPOIDS+KPG-1)*ZR(IPESA)*ZR(IPESA+I)*
     &                VFF(N)*DENSIT*JAC
130       CONTINUE
        ENDIF

C - FIN DE LA BOUCLE SUR LES POINTS DE GAUSS
800   CONTINUE

      END
