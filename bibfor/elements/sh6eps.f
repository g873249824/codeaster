      SUBROUTINE SH6EPS(XETEMP,XIDEPP,DEPLOC,DUSDX)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 13/01/2011   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
C               ELEMENT SHB6
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER LAG
      REAL*8 XE(18),XIDEPP(*)
      REAL*8 XXG5(5),XCOQ(3,3),BKSIP(3,6,5),B(3,6)
      REAL*8 XCENT(3),PPP(3,3)
      REAL*8 XL(3,3),XXX(3),YYY(3),BLOCAL(3,6)
      REAL*8 DEPS(6),UE(3,6),XEGLOB(3,6)
      REAL*8 DEPSLO(6),DEPLOC(*),DUSDX(*),RR2(3,3)
      REAL*8 XETEMP(*),RR12(3,3),DUSX(9),PPPT(3,3)
      REAL*8 BLOC(6,18),UELOC(3,6),XMODIF(18)
C
C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C------------FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
CCCCCCCCCCCCCC ENTREES CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C          ICLE=7    ON CALCULE LES CONTRAINTES
C    OPTION=SIEF_ELGA    ON CALCULE LES CONTRAINTES
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C INITIALISATIONS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C INFOS:
C XE EST RANGE COMME CA:
C (XNOEUD1 YNOEUD1 ZNOEUD1, XNOEUD2 YNOEUD2 ZNOEUD2,...)
C DANS SHB8_TEST_NUM: ATTENTION A LA NUMEROTATION DES NOEUDS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      IF (NOMSHB.EQ.'SHB8') THEN
C
C ON DEFINI LES POINTS GAUSS ET LES POIDS
C
      XXG5(1) = -0.906179845938664D0
      XXG5(2) = -0.538469310105683D0
      XXG5(3) =  0.D0
      XXG5(4) =  0.538469310105683D0
      XXG5(5) =  0.906179845938664D0
C
C -----------------------------------------------------
C ON VERIFIE QUE LA CONNECTIVITE DONNE UN REPERE DIRECT
C SI CE N EST PAS LE CAS ON PERMUTE LES NOEUDS
C -----------------------------------------------------
C
C     ON FAIT UNE COPIE DE XETEMP DANS XE
      DO 10 I = 1,18
         XE(I) = XETEMP(I)
   10 CONTINUE
      DO 360 J = 1,6
         DO 350 I = 1,3
            UE(I,J) = XIDEPP((J-1)*3+I)
  350    CONTINUE
  360 CONTINUE
C
C CALCUL DE BKSIP(3,8,IP) DANS REPERE DE REFERENCE
C      BKSIP(1,*,IP) = VECTEUR BX AU POINT GAUSS IP
C      BKSIP(2,*,IP) = VECTEUR BY AU POINT GAUSS IP
C      BKSIP(3,*,IP) = VECTEUR BZ AU POINT GAUSS IP
C
      CALL SH6KSI(5,XXG5,BKSIP)
C
      DO 450 IP = 1,5
C
C DEFINITION DES 4 POINTS  COQUES
C
         ZETA = XXG5(IP)
         ZLAMB = 0.5D0*(1.D0-ZETA)
         DO 380 I = 1,3
            DO 370 J = 1,3
              XCOQ(J,I) = ZLAMB*XE((I-1)*3+J) +
     &              (1.D0-ZLAMB)*XE((I-1+3)*3+J)
  370       CONTINUE
  380    CONTINUE
C
C CALCUL DE PPP 3*3 PASSAGE DE GLOBAL A LOCAL,COQUE
C XCENT : COORD GLOBAL DU CENTRE DE L'ELEMENT
C
         CALL RLOSH6(XCOQ,XCENT,PPP,XL,XXX,YYY,RBID)
         DO 382 I = 1,3
            DO 381 J = 1,3
              PPPT(J,I) = PPP(I,J)
  381       CONTINUE
  382    CONTINUE
C
C CALCUL DE B : U_GLOBAL ---> EPS_GLOBAL
C
         CALL S6CALB(BKSIP(1,1,IP),XE,B,AJAC)
         CALL MULMAT(3,3,6,PPPT,B,BLOCAL)
C
C CALCUL DE EPS DANS LE REPERE GLOBAL: 1 POUR DEFORMATIONS LINEAIRES
C                                     2 POUR TERMES CARRES EN PLUS
         DO 390 I = 1,6
            DEPS(I) = 0.D0
  390    CONTINUE
C Transformer matrice BLOCAL(3,6) dans le repère local en BLOC(6,18) 
C dans le repère local et en tenant
C compte également des modifications sur les termes croisés ZY,ZX :
         DATA XMODIF/1.D0,0.D0,0.D0,
     &          0.D0,1.D0,0.D0,
     &          0.D0,0.D0,1.D0,
     &          1.D0,1.D0,0.D0,
     &          0.D0,0.45D0,0.45D0,
     &          0.45D0,0.D0,0.45D0/
         CALL ASSEBG(BLOC,BLOCAL,XMODIF)
C Transformer les déplacements UE dans le repère global en UELOC local:
         CALL MULMAT(3,3,6,PPPT,UE,UELOC)
C
         LAG = 0
C
         IF (LAG.EQ.1) THEN
C ON AJOUTE LA PARTIE NON-LINEAIRE DE EPS
            CALL DEPSH6(2,BLOC,UELOC,DEPS,DUSX)
         ELSE
            CALL DEPSH6(1,BLOC,UELOC,DEPS,DUSX)
         END IF
C
         DO 420 I = 1,9
           DUSDX(I+ (IP-1)*9) = DUSX(I)
  420    CONTINUE
C
C CONTRAINTES ECRITES SOUS LA FORME:
C               [SIG] = [S_11, S_22, S_33, S_12, S_23, S_13]
         DO 440 I = 1,6
C ON LAISSE LES CONTRAINTES DANS LE REPERE LOCAL POUR LA PLASTICITE
            DEPLOC((IP-1)*6+I) = DEPS(I)
  440    CONTINUE
  450 CONTINUE
C
      END
