      SUBROUTINE VECTAN(NB1,NB2,XI,XR,VECTA,VECTN,VECTPT)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 15/05/96   AUTEUR F6BHHBU D.BUI 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
      INTEGER NB1,NB2,L1,L2,I1,I2,J,I,K
      REAL*8 XI(3,*),XR(*)
      REAL*8 VECTA(9,2,3),VECTN(9,3),VECTPT(9,2,3)
C
         L1=828
         L2=900
C
C     CONSTRUCTION DES VECTEURS AA AUX NB2 NOEUDS I
C     (STOCKE DANS VECTA)
C
      DO 10 I=1,NB2
         I1=L1+8*(I-1)
         I2=L2+8*(I-1)
      DO 20 K=1,3
         VECTA(I,1,K)=0.D0
         VECTA(I,2,K)=0.D0
      DO 30 J=1,NB1
         VECTA(I,1,K)=VECTA(I,1,K)+XR(I1+J)*XI(K,J)
         VECTA(I,2,K)=VECTA(I,2,K)+XR(I2+J)*XI(K,J)
 30   CONTINUE
 20   CONTINUE
C
C     CONSTRUCTION DU VECTEUR N AUX NB2 NOEUDS I
C     (STOCKE DANS VECTN)
C
         VECTN(I,1)= VECTA(I,1,2)*VECTA(I,2,3)
     &              -VECTA(I,1,3)*VECTA(I,2,2)
         VECTN(I,2)= VECTA(I,1,3)*VECTA(I,2,1)
     &              -VECTA(I,1,1)*VECTA(I,2,3)
         VECTN(I,3)= VECTA(I,1,1)*VECTA(I,2,2)
     &              -VECTA(I,1,2)*VECTA(I,2,1)
C
         RNORM=SQRT(VECTN(I,1)*VECTN(I,1)+VECTN(I,2)*VECTN(I,2)
     &                                   +VECTN(I,3)*VECTN(I,3))
         VECTN(I,1)=VECTN(I,1)/RNORM
         VECTN(I,2)=VECTN(I,2)/RNORM
         VECTN(I,3)=VECTN(I,3)/RNORM
C
C     CONSTRUCTION DES VECTEURS TA AUX NOEUDS I
C     (STOCKE DANS VECTPT)
C
         RNORM=SQRT(VECTA(I,1,1)*VECTA(I,1,1)
     &             +VECTA(I,1,2)*VECTA(I,1,2)
     &             +VECTA(I,1,3)*VECTA(I,1,3))
      DO 25 K=1,3
         VECTPT(I,1,K)=VECTA(I,1,K)/RNORM
 25   CONTINUE
C
         VECTPT(I,2,1)= VECTN(I,2)*VECTPT(I,1,3)
     &                 -VECTN(I,3)*VECTPT(I,1,2)
         VECTPT(I,2,2)= VECTN(I,3)*VECTPT(I,1,1)
     &                 -VECTN(I,1)*VECTPT(I,1,3)
         VECTPT(I,2,3)= VECTN(I,1)*VECTPT(I,1,2)
     &                 -VECTN(I,2)*VECTPT(I,1,1)
 10   CONTINUE
C
C     STOCKAGE DES NB2 MATRICES DE PASSAGE LOCALES GLOBALE (3,3) DANS XR
C
      DO 40 IB=1,NB2
         L=9*(IB-1)
      DO 50 J =1,3
      DO 60 I =1,3
         K=L+(J-1)*3+I
         IF (I.LE.2) THEN
            XR(1090+K)=VECTPT(IB,I,J)
         ELSE
            XR(1090+K)=VECTN(IB,J)
         ENDIF
 60   CONTINUE
 50   CONTINUE
 40   CONTINUE
C
      END
