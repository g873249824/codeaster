      SUBROUTINE TE0060(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 16/01/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C----------------------------------------------------------------------
C     BUT: CALCUL DES VECTEURS ELEMENTAIRES EN THERMIQUE
C          CORRESPONDANT AU TERME D'ECHANGE (FONCTION)
C          SUR DES FACES D'ELEMENTS ISOPARAMETRIQUES 3D
C
C          OPTION : 'CHAR_THER_TEXT_F/R'
C                   'CHAR_THER_RAYO_F/R'
C
C     ENTREES  ---> OPTION : OPTION DE CALCUL
C              ---> NOMTE  : NOM DU TYPE ELEMENT
C----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE

      CHARACTER*8    NOMPAR(4)
      CHARACTER*16   NOMTE,OPTION
      REAL*8         NX,NY,NZ,SX(9,9),SY(9,9),SZ(9,9),JAC,THETA,
     &               VALPAR(4),XX,YY,ZZ,TEM,ECHN,ECHNP1,TEXN,TEXNP1,
     &               SIGM1,SIGMN,EPS1,EPSN,TPF1,TPFN,TZ0,R8T0,
     &               R8PREM
      INTEGER        IPOIDS,IVF,IDFDX,IDFDY,IGEOM,ITEMPS,I,
     &               NDIM,NNO,IPG,NPG1,IVECTT,ITEXT,IECH,IRAY,INO,
     &               IDEC,JDEC,KDEC,LDEC,ITEMP,JNO,J,IER,JGANO,
     &               NNOS
      LOGICAL        LTEXT

C --------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C -----------FIN  COMMUNS NORMALISES  JEVEUX  --------------------------

C====
C 1.1 PREALABLES: RECUPERATION ADRESSES FONCTIONS DE FORMES...
C====
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG1,IPOIDS,IVF,IDFDX,JGANO)
      IDFDY  = IDFDX  + 1

      TZ0  = R8T0()

C INITS.
      IF (OPTION(11:14).EQ.'TEXT') THEN
        LTEXT = .TRUE.
      ELSE IF (OPTION(11:14).EQ.'RAYO') THEN
        LTEXT = .FALSE.
      ELSE
CC OPTION DE CALCUL INVALIDE
        CALL ASSERT(.FALSE.)
      ENDIF
C====
C 1.2 PREALABLES LIES AUX RECHERCHES DE DONNEES GENERALES
C====
      IF (LTEXT) THEN
C CHAR_.._TEXT : 2 TYPES DE CALCUL

        CALL JEVECH('PTEMPER','L',ITEMP)
        CALL JEVECH('PCOEFHF','L',IECH)
        CALL JEVECH('PT_EXTF','L',ITEXT)

      ELSE
C CHAR_..._RAYO: 4 TYPES DE CALCUL

C CHAMP DE RAYONNEMENT
        CALL JEVECH('PRAYONF','L',IRAY)
        CALL JEVECH('PTEMPER','L',ITEMP)
C FIN DU IF LTEXT
      ENDIF

C TRONC COMMUN
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PTEMPSR','L',ITEMPS)
      CALL JEVECH('PVECTTR','E',IVECTT)

C====
C 1.3 PREALABLES LIES AUX CALCULS
C====
      THETA     = ZR(ITEMPS+2)
      NOMPAR(1) = 'X'
      NOMPAR(2) = 'Y'
      NOMPAR(3) = 'Z'
      NOMPAR(4) = 'INST'
      DO 10 I = 1,NNO
        ZR(IVECTT+I-1) = 0.0D0
10    CONTINUE

C    CALCUL DES PRODUITS VECTORIELS OMI X OMJ

      DO 1 INO = 1,NNO
        I = IGEOM + 3*(INO-1) -1
          DO 2 JNO = 1,NNO
            J = IGEOM + 3*(JNO-1) -1
              SX(INO,JNO) = ZR(I+2) * ZR(J+3) - ZR(I+3) * ZR(J+2)
              SY(INO,JNO) = ZR(I+3) * ZR(J+1) - ZR(I+1) * ZR(J+3)
              SZ(INO,JNO) = ZR(I+1) * ZR(J+2) - ZR(I+2) * ZR(J+1)
2         CONTINUE
1     CONTINUE

C====
C 2. CALCULS TERMES DE MASSE
C====
C    BOUCLE SUR LES POINTS DE GAUSS

      DO 101 IPG=1,NPG1
        KDEC = (IPG-1)*NNO*NDIM
        LDEC = (IPG-1)*NNO
        NX = 0.0D0
        NY = 0.0D0
        NZ = 0.0D0

C    CALCUL DE LA NORMALE AU POINT DE GAUSS IPG
        DO 102 I=1,NNO
          IDEC = (I-1)*NDIM
          DO 102 J=1,NNO
            JDEC = (J-1)*NDIM
            NX=NX+ZR(IDFDX+KDEC+IDEC) * ZR(IDFDY+KDEC+JDEC) * SX(I,J)
            NY=NY+ZR(IDFDX+KDEC+IDEC) * ZR(IDFDY+KDEC+JDEC) * SY(I,J)
            NZ=NZ+ZR(IDFDX+KDEC+IDEC) * ZR(IDFDY+KDEC+JDEC) * SZ(I,J)
102     CONTINUE
        JAC = SQRT(NX*NX + NY*NY + NZ*NZ)
        TEM = 0.D0
        XX  = 0.D0
        YY  = 0.D0
        ZZ  = 0.D0

        IF (ITEMP.NE.0) THEN
          DO 104 I = 1,NNO
C CALCUL DE T-
            TEM = TEM + ZR(ITEMP+I-1) * ZR(IVF+LDEC+I-1)
104       CONTINUE
        ENDIF

        DO 106 I = 1,NNO
C CALCUL DE LA POSITION GEOMETRIQUE DU PT DE GAUSS
          XX  = XX  + ZR(IGEOM+3*I-3) * ZR(IVF+LDEC+I-1)
          YY  = YY  + ZR(IGEOM+3*I-2) * ZR(IVF+LDEC+I-1)
          ZZ  = ZZ  + ZR(IGEOM+3*I-1) * ZR(IVF+LDEC+I-1)
106     CONTINUE

        VALPAR(1) = XX
        VALPAR(2) = YY
        VALPAR(3) = ZZ
        VALPAR(4) = ZR(ITEMPS)

C====
C 2.1 OPTION CHAR_THER_TEXT_F/R
C====
        IF (LTEXT) THEN

          CALL FOINTE('FM',ZK8(ITEXT),4,NOMPAR,VALPAR,TEXNP1,IER)

          IF( THETA .NE. 1.0D0 ) THEN
            VALPAR(4) = ZR(ITEMPS)-ZR(ITEMPS+1)
            CALL FOINTE('FM',ZK8(ITEXT),4,NOMPAR,VALPAR,TEXN,IER)

          ELSE
            TEXN = 0.D0
          ENDIF

          VALPAR(4) = ZR(ITEMPS)
          CALL FOINTE('FM',ZK8(IECH),4,NOMPAR,VALPAR,ECHNP1,IER)

          IF( THETA .NE. 1.0D0 ) THEN
            VALPAR(4) = ZR(ITEMPS)-ZR(ITEMPS+1)
            CALL FOINTE('FM',ZK8(IECH),4,NOMPAR,VALPAR,ECHN,IER)

          ELSE
            ECHN = 0.D0
          ENDIF

          DO 120 I=1,NNO
            ZR(IVECTT+I-1) = ZR(IVECTT+I-1) +
     &      JAC * ZR(IPOIDS+IPG-1) * ZR(IVF+LDEC+I-1) *
     &      ( THETA*ECHNP1*TEXNP1+(1.0D0-THETA)*ECHN*(TEXN-TEM))
120       CONTINUE

C====
C 2.2 OPTION CHAR_THER_RAYO_F/R
C====
        ELSE

          CALL FOINTE('FM',ZK8(IRAY),4,NOMPAR,VALPAR,SIGM1,IER)
          IF( THETA .NE. 1.0D0 ) THEN
            VALPAR(4) = ZR(ITEMPS)-ZR(ITEMPS+1)
            CALL FOINTE('FM',ZK8(IRAY),4,NOMPAR,VALPAR,SIGMN,IER)
          ELSE
            SIGMN = 0.D0
          ENDIF

          VALPAR(4) = ZR(ITEMPS)
          CALL FOINTE('FM',ZK8(IRAY+1),4,NOMPAR,VALPAR,EPS1,IER)
          IF( THETA .NE. 1.0D0 ) THEN
            VALPAR(4) = ZR(ITEMPS)-ZR(ITEMPS+1)
            CALL FOINTE('FM',ZK8(IRAY+1),4,NOMPAR,VALPAR,EPSN,IER)
          ELSE
            EPSN = 0.D0
          ENDIF

          VALPAR(4) = ZR(ITEMPS)
          CALL FOINTE('FM',ZK8(IRAY+2),4,NOMPAR,VALPAR,TPF1,IER)
          IF( THETA .NE. 1.0D0 ) THEN
            VALPAR(4) = ZR(ITEMPS)-ZR(ITEMPS+1)
            CALL FOINTE('FM',ZK8(IRAY+2),4,NOMPAR,VALPAR,TPFN,IER)
          ELSE
            TPFN = 0.D0
          ENDIF

          DO 130 I=1,NNO
            ZR(IVECTT+I-1) = ZR(IVECTT+I-1) +
     &        JAC * ZR(IPOIDS+IPG-1) * ZR(IVF+LDEC+I-1) *
     &       (       THETA *SIGM1*EPS1* (TPF1+TZ0)**4+
     &      (1.0D0-THETA)*SIGMN*EPSN*((TPFN+TZ0)**4-(TEM+TZ0)**4))
130       CONTINUE
C FIN DU IF LTEXT
        ENDIF
C FIN BOUCLE SUR LES PTS DE GAUSS
101   CONTINUE
      END
