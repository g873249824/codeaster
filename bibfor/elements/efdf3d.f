      SUBROUTINE EFDF3D ( IPOIDS, KPG, NNO2, IDFDE2,
     &                                 NNO1, DFRDE1, DFRDN1, DFRDK1,
     &                    COOR, DFDX, DFDY, DFDZ, POIDS )

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 30/03/2004   AUTEUR CIBHHLV L.VIVAN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================

      IMPLICIT NONE
      INTEGER  NNO1, NNO2, IPOIDS, KPG, IDFDE2
      REAL*8   DFRDE1(*),DFRDN1(*),DFRDK1(*)
      REAL*8   POIDS, COOR(*),DFDX(*),DFDY(*), DFDZ(*)
C ......................................................................
C    - FONCTION REALISEE:  CALCUL DES DERIVEES DES FONCTIONS DE FORME
C               P1 PAR RAPPORT A UNE GEOMETRIE P2
C
C IN  POIDSG  : POIDS DU POINT DE GAUSS DE REFERENCE
C IN  NNO     : NOMBRE DE NOEUDS (P2 OU P1)
C IN  DFRDE   : DERIVEE DES FONCTIONS DE FORME DE REFERENCE (P2 OU P1)
C IN  DFRDN   : DERIVEE DES FONCTIONS DE FORME DE REFERENCE (P2 OU P1)
C IN  DFRDK   : DERIVEE DES FONCTIONS DE FORME DE REFERENCE (P2 OU P1)
C IN  COOR    : COORDONEES DES NOEUDS
C OUT DFDX    : DERIVEE DES FONCTIONS DE FORME P1 / P2
C OUT DFDY    : DERIVEE DES FONCTIONS DE FORME P1 / P2
C OUT POIDS   : POIDS DU POINT DE GAUSS EN GEOMETRIE REELLE
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      CHARACTER*8   NOMAIL
      INTEGER       I, J, K, II, IADZI, IAZK24
      REAL*8        POIDSG, G(3,3), JAC, DE, DN, DK, R8GAEM
      REAL*8        J11,J12,J13,J21,J22,J23,J31,J32,J33


      CALL R8INIR(9, 0.D0, G,1)
      POIDSG = ZR(IPOIDS+KPG-1)

      DO 100 I=1,NNO2
        K  = 3*NNO2*(KPG-1)
        II = 3*(I-1)
        DE = ZR(IDFDE2-1+K+II+1)
        DN = ZR(IDFDE2-1+K+II+2)
        DK = ZR(IDFDE2-1+K+II+3)
        DO 101 J=1,3
          G(1,J) = G(1,J) + COOR(II+J) * DE
          G(2,J) = G(2,J) + COOR(II+J) * DN
          G(3,J) = G(3,J) + COOR(II+J) * DK
101     CONTINUE
100   CONTINUE

      J11 = G(2,2) * G(3,3) - G(2,3) * G(3,2)
      J21 = G(3,1) * G(2,3) - G(2,1) * G(3,3)
      J31 = G(2,1) * G(3,2) - G(3,1) * G(2,2)
      J12 = G(1,3) * G(3,2) - G(1,2) * G(3,3)
      J22 = G(1,1) * G(3,3) - G(1,3) * G(3,1)
      J32 = G(1,2) * G(3,1) - G(3,2) * G(1,1)
      J13 = G(1,2) * G(2,3) - G(1,3) * G(2,2)
      J23 = G(2,1) * G(1,3) - G(2,3) * G(1,1)
      J33 = G(1,1) * G(2,2) - G(1,2) * G(2,1)

      JAC = G(1,1) * J11 + G(1,2) * J21 + G(1,3) * J31

      IF(ABS(JAC).LE.1.D0/R8GAEM()) THEN
         CALL TECAEL(IADZI,IAZK24)
         NOMAIL= ZK24(IAZK24-1+3)(1:8)
         CALL UTMESS('F','EFDF3D',
     &     ' LA TRANSFORMATION GEOMETRIQUE EST SINGULIERE'
     &   //' POUR LA MAILLE :'//NOMAIL//' (JACOBIEN =0.)')
      ENDIF

      DO 200 I=1,NNO1
        J = 3*(I-1) + 1
        DFDX(I) = (J11*DFRDE1(J) + J12*DFRDN1(J) + J13*DFRDK1(J))/JAC
        DFDY(I) = (J21*DFRDE1(J) + J22*DFRDN1(J) + J23*DFRDK1(J))/JAC
        DFDZ(I) = (J31*DFRDE1(J) + J32*DFRDN1(J) + J33*DFRDK1(J))/JAC
200   CONTINUE

      POIDS = ABS(JAC)*POIDSG
      END
