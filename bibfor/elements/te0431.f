      SUBROUTINE TE0431(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*16 OPTION,NOMTE
C ......................................................................
C    - FONCTION REALISEE:  CALCUL DES OPTIONS DE COMPORTEMENT :
C                                  - FULL_MECA
C                                  - FULL_MECA_ELAS
C                                  - RAPH_MECA
C                                  - RIGI_MECA
C                                  - RIGI_MECA_ELAS
C                                  - RIGI_MECA_TANG
C                          POUR LES GRILLES MEMBRANES EXCENTREES OU NON
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................

      INTEGER CODRES(2)
      CHARACTER*4 FAMI
      CHARACTER*8 NOMRES(2)
      INTEGER NDDL,NNO,NNOS,NPG,NDIM,I,J,J1,N,M,KPG,KK,KKD,LGPG,COD(9)
      INTEGER IMATUU,IPOIDS,IVF,IDFDE,IGEOM,IMATE,ICAMAS,ICONTM,IVARIM
      INTEGER JGANO,JTAB(7),JCRET,IDEPLM,IDEPLP,ICOMPO,ICARCR,IRET
      INTEGER IVECTU,ICONTP,IVARIP,IVARIX,ICACOQ
      REAL*8 DFF(2,8),B(6,8),P(3,6),JAC
      REAL*8 ALPHA,BETA,DIR11(3),DENSIT,PGL(3,3),DISTN,VECN(3)
      REAL*8 EPSM,DEPS,SIGM,SIG,TMP,RIG,VALRES(2)
      REAL*8 R8VIDE,ANGMAS(3),R8DGRD,R8NNEM
      LOGICAL VECTEU,MATRIC,LEXC

C - BOOLEEN UTILES

      VECTEU = ((OPTION(1:9).EQ.'FULL_MECA').OR.
     &          (OPTION     .EQ.'RAPH_MECA'))
      MATRIC = ((OPTION(1:9).EQ.'FULL_MECA').OR.
     &          (OPTION(1:9).EQ.'RIGI_MECA'))
      LEXC = (NOMTE(1:4).EQ.'MEGC')

C - FONCTIONS DE FORMES ET POINTS DE GAUSS

      FAMI = 'RIGI'
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,JGANO)

C - PARAMETRES EN ENTREE

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PCACOQU','L',ICACOQ)

      IF (OPTION.EQ.'RIGI_MECA') THEN
        CALL JEVECH('PMATERC','L',IMATE)

      ELSEIF ((OPTION(1:9) .EQ.'FULL_MECA').OR.
     &        (OPTION      .EQ.'RAPH_MECA').OR.
     &        (OPTION(1:10).EQ.'RIGI_MECA_')) THEN
        CALL JEVECH('PCONTMR','L',ICONTM)
        CALL JEVECH('PCARCRI','L',ICARCR)
        CALL JEVECH('PCOMPOR','L',ICOMPO)
        CALL JEVECH('PDEPLPR','L',IDEPLP)
        CALL JEVECH('PDEPLMR','L',IDEPLM)
        CALL JEVECH('PMATERC','L',IMATE)
        CALL TECACH('OON','PVARIMR',7,JTAB,IRET)
        LGPG = MAX(JTAB(6),1)*JTAB(7)
        CALL JEVECH('PVARIMR','E',IVARIM)
        CALL JEVECH('PVARIMP','L',IVARIX)

C --- ORIENTATION DU MASSIF

        CALL TECACH('NNN','PCAMASS',1,ICAMAS,IRET)
        CALL R8INIR(3, R8NNEM(), ANGMAS ,1)
        IF (ICAMAS.GT.0) THEN
          IF (ZR(ICAMAS).GT.0.D0) THEN
           ANGMAS(1) = ZR(ICAMAS+1)*R8DGRD()
           ANGMAS(2) = ZR(ICAMAS+2)*R8DGRD()
           ANGMAS(3) = ZR(ICAMAS+3)*R8DGRD()
          ENDIF
        ENDIF
      ENDIF

C - PARAMETRES EN SORTIE

      IF ((OPTION(1:9).EQ.'RAPH_MECA').OR.
     &    (OPTION(1:9).EQ.'FULL_MECA')) THEN
        CALL JEVECH('PVECTUR','E',IVECTU)
        CALL JEVECH('PCONTPR','E',ICONTP)
        CALL JEVECH('PVARIPR','E',IVARIP)
        CALL JEVECH('PCODRET','E',JCRET)

C --- ESTIMATION VARIABLES INTERNES A L'ITERATION PRECEDENTE

        CALL DCOPY(NPG*LGPG,ZR(IVARIX),1,ZR(IVARIP),1)
      ELSE
        IVARIP=1
      ENDIF

      IF ((OPTION(1:4).EQ.'FULL').OR.
     &    (OPTION(1:4).EQ.'RIGI')) THEN
        CALL JEVECH('PMATUUR','E',IMATUU)
      ENDIF

C - INITIALISATION CODES RETOURS

      DO 1955 KPG=1,NPG
         COD(KPG)=0
1955  CONTINUE

C - LE VECTEUR NORME QUI INDIQUE LA DIRECTION D'ARMATURE

      DENSIT = ZR(ICACOQ)
      ALPHA = ZR(ICACOQ+1) * R8DGRD()
      BETA  = ZR(ICACOQ+2) * R8DGRD()
      DIR11(1) = COS(BETA)*COS(ALPHA)
      DIR11(2) = COS(BETA)*SIN(ALPHA)
      DIR11(3) = SIN(BETA)

C - SI EXCENTREE : RECUPERATION DE LA NORMALE ET DE L'EXCENTREMENT

      IF (LEXC) THEN

        IF (NOMTE.EQ.'MEGCTR3') THEN
          CALL DXTPGL(ZR(IGEOM),PGL)
        ELSEIF (NOMTE.EQ.'MEGCQU4') THEN
          CALL DXQPGL(ZR(IGEOM),PGL,'S',IRET)
        ENDIF

        DISTN = ZR(ICACOQ+3)
        DO 8 I=1,3
          VECN(I)=DISTN*PGL(3,I)
8       CONTINUE
        NDDL=6

      ELSE
        DISTN = R8VIDE()
        NDDL  = 3
      ENDIF

C - DEBUT DE LA BOUCLE SUR LES POINTS DE GAUSS

      DO 800 KPG=1,NPG

C --- MISE SOUS FORME DE TABLEAU DES VALEURS DES FONCTIONS DE FORME
C     ET DES DERIVEES DE FONCTION DE FORME

        DO 11 N=1,NNO
          DFF(1,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2)
          DFF(2,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2+1)
11      CONTINUE

C --- CALCUL DE LA MATRICE "B" : DEPL NODAL --> EPS11 ET DU JACOBIEN

        CALL NMGRIB(NNO,ZR(IGEOM),DFF,DIR11,LEXC,VECN,B,JAC,P)

C --- RIGI_MECA : ON DONNE LA RIGIDITE ELASTIQUE

        IF (OPTION.EQ.'RIGI_MECA') THEN
          NOMRES(1) = 'E'
          CALL RCVALB(FAMI,KPG,1,'+',ZI(IMATE),' ','ELAS',0,' ',0.D0,1,
     &                 NOMRES,VALRES,CODRES, 1)
          RIG=VALRES(1)

C --- RAPH_MECA, FULL_MECA*, RIGI_MECA_* : ON PASSE PAR LA LDC 1D

        ELSEIF ((OPTION      .EQ.'RAPH_MECA').OR.
     &          (OPTION(1:9) .EQ.'FULL_MECA').OR.
     &          (OPTION(1:10).EQ.'RIGI_MECA_')) THEN
          SIGM = ZR(ICONTM+KPG-1)

C         CALCUL DE LA DEFORMATION DEPS11
          EPSM=0.D0
          DEPS=0.D0
          DO 20 I=1,NNO
            DO 20 J=1,NDDL
              EPSM=EPSM+B(J,I)*ZR(IDEPLM+(I-1)*NDDL+J-1)
              DEPS=DEPS+B(J,I)*ZR(IDEPLP+(I-1)*NDDL+J-1)
20        CONTINUE

          CALL NMCO1D(FAMI,KPG,1,ZI(IMATE),ZK16(ICOMPO),OPTION,
     &                EPSM,DEPS,
     &                ANGMAS,
     &                SIGM,ZR(IVARIM+(KPG-1)*LGPG),
     &                SIG,ZR(IVARIP+(KPG-1)*LGPG),RIG,COD(KPG))

          IF ((OPTION     .EQ.'RAPH_MECA').OR.
     &        (OPTION(1:9).EQ.'FULL_MECA')) THEN
            ZR(ICONTP+KPG-1)=SIG
          ENDIF

        ENDIF

C --- RANGEMENT DES RESULTATS

        IF (VECTEU) THEN
          DO 100 N=1,NNO
            DO 100 I=1,NDDL
              ZR(IVECTU+(N-1)*NDDL+I-1)=ZR(IVECTU+(N-1)*NDDL+I-1)
     &                          +B(I,N)*SIG*ZR(IPOIDS+KPG-1)*JAC*DENSIT
100       CONTINUE
        ENDIF

        IF (MATRIC) THEN
          DO 200 N=1,NNO
            DO 200 I=1,NDDL
              KKD = (NDDL*(N-1)+I-1) * (NDDL*(N-1)+I) /2
              DO 200 J=1,NDDL
                DO 200 M=1,N
                  IF (M.EQ.N) THEN
                    J1 = I
                  ELSE
                    J1 = NDDL
                  ENDIF

C                 RIGIDITE ELASTIQUE
                  TMP=B(I,N)*RIG*B(J,M)*ZR(IPOIDS+KPG-1)*JAC*DENSIT
C                 STOCKAGE EN TENANT COMPTE DE LA SYMETRIE
                  IF (J.LE.J1) THEN
                     KK = KKD + NDDL*(M-1)+J
                     ZR(IMATUU+KK-1) = ZR(IMATUU+KK-1) + TMP
                  END IF
200       CONTINUE
        ENDIF

C - FIN DE LA BOUCLE SUR LES POINTS DE GAUSS
800   CONTINUE

      IF ((OPTION(1:9).EQ.'FULL_MECA').OR.
     &    (OPTION(1:9).EQ.'RAPH_MECA')) THEN
        CALL CODERE(COD,NPG,ZI(JCRET))
      ENDIF

      END
