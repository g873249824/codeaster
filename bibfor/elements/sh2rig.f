      SUBROUTINE SH2RIG(XETEMP,PARA,RE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 12/08/2008   AUTEUR DESROCHES X.DESROCHES 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
C               ELEMENT SHB20
C
      IMPLICIT REAL *8(A-H,O-Z)
      INTEGER LAG,IRDC
      REAL*8 EYG(5),ENU(5),PARA(11)
      REAL*8 XE(60),RE(60,60),LAMBDA
      REAL*8 XCOQ(3,4),BKSIP(3,20,20),B(3,20)
      REAL*8 XCENT(3),PPP(3,3),PPPT(3,3)
      REAL*8 XL(3,4),XXX(3),YYY(3),SOM,PPPT1,PPPT2,PPPT3
      REAL*8 TMPTAB(6,60),TMPKE(60,60),CMATLO(6,6)
      REAL*8 TMPKE2(60,60),XETEMP(*)
      REAL*8 XXG5(20),XYG5(20),XZG5(20),PXG5(20),EM2(3,3,3,3)
      REAL*8 BGL(6,60),BGLT(60,6),EM(6,6),EM3333(3,3,3,3)

C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C------------FIN  COMMUNS NORMALISES  JEVEUX  --------------------------

C
CCCCCCCCCCCCCC ENTREES CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C          ICLE=2    ON CALCULE LA MATRICE DE RAIDEUR
CCCCCCCCCCCCCC SORTIE CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C INITIALISATIONS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C INFOS:
C XE EST RANGE: NOEUD1 YNOEUD1 ZNOEUD1, XNOEUD2 YNOEUD2 ZNOEUD2,...)
C DANS SHB8_TEST_NUM: ATTENTION A LA NUMEROTATION DES NOEUDS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C ON DEFINIT LES POINTS DE GAUSS ET LES POIDS
C
C Des points de gauss sur la facette 1-2-3:
C
      XZG5(1) = -0.906179845938664D0
      XZG5(2) = -0.538469310105683D0
      XZG5(3) =  0.D0
      XZG5(4) =  0.538469310105683D0
      XZG5(5) =  0.906179845938664D0
C
      PXG5(1) =  0.236926885056189D0
      PXG5(2) =  0.478628670499366D0
      PXG5(3) =  0.568888888888889D0
      PXG5(4) =  0.478628670499366D0
      PXG5(5) =  0.236926885056189D0
C
      DO 8 IZ =1,5
         XXG5(IZ)    = -0.577350269189625D0
         XXG5(IZ+5)  =  0.577350269189625D0
         XXG5(IZ+10) =  0.577350269189625D0
         XXG5(IZ+15) = -0.577350269189625D0
         XYG5(IZ)    = -0.577350269189625D0
         XYG5(IZ+5)  = -0.577350269189625D0
         XYG5(IZ+10) =  0.577350269189625D0
         XYG5(IZ+15) =  0.577350269189625D0
         XZG5(IZ+5)  = XZG5(IZ)
         PXG5(IZ+5)  = PXG5(IZ)
         XZG5(IZ+10) = XZG5(IZ)
         PXG5(IZ+10) = PXG5(IZ)
         XZG5(IZ+15) = XZG5(IZ)
         PXG5(IZ+15) = PXG5(IZ)
   8  CONTINUE
C
C TYPE DE LOI DE COMPORTEMENT:
C     IRDC = 1 : SHB8 TYPE PLEXUS
C     IRDC = 2 : C.P.
C     IRDC = 3 : 3D COMPLETE
C
C      IRDC = 1
C     ON FAIT UNE COPIE DE XETEMP DANS XE
      DO 9 I = 1,60
        XE(I) = XETEMP(I)
   9  CONTINUE
C
      IRDC=PARA(5)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                  C
C ON CALCULE LA RAIDEUR : SORTIE DANS RE                           C  
C                                                                  C
C SI IETAN = 1 , ALORS ON CALCULE AUSSI                            C
C                LA MATRICE TANGENTE PLASTIQUE                     C
C                                                                  C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C      IETAN   = PARA(4)
C
C INTIALISATION LONGUEUR DES COTES
C CALCUL DES COEFF D ELANCEMENT A METTRE DANS LA MATRICE DE CPT
C
        XXL1 = 0.D0
        XXL2 = 0.D0
        TT1  = 0.D0
        TT2  = 0.D0
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C STABILISATION ADAPTATIVE EN FONCTION DE LA DISTORTION DE L'ELEMENT
C
        DO 10 I=1,3
C DISTANCE ENTRE 1 ET 5 (EPAISSEUR)
         TT1   = TT1+(XE(I+12)-XE(I))**2
C DISTANCE ENTRE 3 ET 7 (EPAISSEUR)
         TT2   = TT2+(XE(I+18)-XE(I+6))**2      
C DISTANCE ENTRE 1 ET 2
         XXL1  = XXL1+(XE(I+3)-XE(I))**2
C DISTANCE ENTRE 2 ET 3
         XXL2  = XXL2+(XE(I+6)-XE(I+3))**2
   10   CONTINUE
        XXL1   = SQRT(XXL1)
        XXL2   = SQRT(XXL2)
        TT1    = 0.5D0*(SQRT(TT1)+SQRT(TT2))
        COELA1 = 5.D0/6.D0
        COELA2 = 5.D0/6.D0
C ELANCEMENT DANS DIRECTION 2
        ELT    = 6.D0*TT1/XXL1
        IF(COELA1.GT.ELT) COELA1=ELT
C ELANCEMENT DANS DIRECTION 1
        ELT    = 6.D0*TT1/XXL2
        IF(COELA2.GT.ELT) COELA2=ELT
C POUR L'INSTANT, ON NE MET PAS EN SERVICE:
        COELA1 = 1.D0
        COELA2 = 1.D0
C
        CALL R8INIR(3600,0.D0,RE,1)
        CALL R8INIR(36,0.D0,CMATLO,1)
C
C ON DEFINIT CMATLOC: MATRICE DE COMPORTEMENT
C
        XNU = PARA(2)
        LAMBDA = PARA(1)*PARA(2)/(1.D0-PARA(2)*PARA(2))
        XMU = 0.5D0*PARA(1)/(1.D0+PARA(2))
        CMATLO(1,1) = LAMBDA + 2.D0*XMU
        CMATLO(2,2) = LAMBDA + 2.D0*XMU
        IF (IRDC.EQ.1) THEN
C COMPORTEMENT SHB6 PLEXUS
          CMATLO(3,3) = PARA(1)
        ENDIF
C
        IF (IRDC.EQ.2) THEN
C COMPORTEMENT C.P.
          CMATLO(3,3) = 0.D0
        ENDIF
C
        CMATLO(1,2) = LAMBDA
        CMATLO(2,1) = LAMBDA
        CMATLO(4,4) = XMU
        CMATLO(5,5) = XMU
        CMATLO(6,6) = XMU
C
        IF (IRDC.EQ.3) THEN
C COMPORTEMENT LOI TRIDIM MMC 3D
         XNU = PARA(2)
         XCOOEF = PARA(1)/((1.D0+XNU)*(1.D0-2.D0*XNU))
         CMATLO(1,1) = (1.D0-XNU)*XCOOEF
         CMATLO(2,2) = (1.D0-XNU)*XCOOEF
         CMATLO(3,3) = (1.D0-XNU)*XCOOEF
         CMATLO(1,2) = XNU*XCOOEF
         CMATLO(2,1) = XNU*XCOOEF
         CMATLO(1,3) = XNU*XCOOEF
         CMATLO(3,1) = XNU*XCOOEF
         CMATLO(2,3) = XNU*XCOOEF
         CMATLO(3,2) = XNU*XCOOEF
         CMATLO(4,4) = (1.D0-2.D0*XNU)*0.5D0*XCOOEF
         CMATLO(5,5) = (1.D0-2.D0*XNU)*0.5D0*XCOOEF
         CMATLO(6,6) = (1.D0-2.D0*XNU)*0.5D0*XCOOEF
        ENDIF
C
C CALCUL DE BKSIP(3,20,IP) DANS REPERE DE REFERENCE
C      BKSIP(1,*,IP) = VECTEUR BX AU POINT GAUSS IP
C      BKSIP(2,*,IP) = VECTEUR BY AU POINT GAUSS IP
C      BKSIP(3,*,IP) = VECTEUR BZ AU POINT GAUSS IP
C
        CALL SH2KSI(20,XXG5,XYG5,XZG5,BKSIP)
C
C DEBUT DE LA BOUCLE SUR LES 5 PTS GAUSS
C
        DO 240 IP=1,20
C
C DEFINITION DES 4 POINTS  COQUES  
C
         ZETA  = XZG5(IP)
         ZLAMB = 0.5D0*(1.D0-ZETA)    
         DO 30 I=1,4
            DO 20 J=1,3
               XCOQ(J,I) = ZLAMB*XE((I-1)*3+J) 
     &          + (1.D0-ZLAMB)*XE(I*3+9+J)
  20        CONTINUE
  30     CONTINUE
C
C CALCUL DE PPP 3*3 PASSAGE DE GLOBAL A LOCAL,COQUE
C XCENT : COORD GLOBAL DU CENTRE DE L'ELEMENT
C
         CALL RLOSHB(XCOQ,XCENT,PPP,XL,XXX,YYY,RBID)
C
C CALCUL DE B EN GLOBAL
C
C ATTENTION A L'ORDRE DE EPSILON:
C  FARID DANS SON PAPIER: 11 22 33 12 13 23
C  HARID DANS PLEXUS:     11 22 33 12 23 13
C
         CALL S2CALB(BKSIP(1,1,IP),XE,B,AJAC)
         CALL R8INIR(360,0.D0,BGL,1)
         CALL ASBGL2(BGL,B)
         CALL R8INIR(360,0.D0,BGLT,1)
         DO 50 I = 1,6
            DO 40 J = 1,60
              BGLT(J,I) = BGL(I,J)
  40        CONTINUE
  50     CONTINUE
C
C IL NE RESTE PLUS QU'A FAIRE: BGLT * C * BGL
C
         DO 70 I=1,6
           DO 60 J=1,6
             EM(I,J)=CMATLO(I,J)
  60       CONTINUE
  70     CONTINUE
C 
C Passer EM du repère d'élément au repère global
C
         CALL R8INIR(81,0.D0,EM3333,1)
         CALL TRAN63(EM,EM3333,2)
         DO 90 I = 1,3
            DO 80 J = 1,3
              PPPT(J,I) = PPP(I,J)
  80        CONTINUE
  90     CONTINUE
C	 
         DO 170 K=1,3
          DO 160 L=1,3
           DO 150 P=1,3
            DO 140 Q=1,3
C
             SOM=0.D0
             DO 130 J=1,3
             PPPT1 = PPPT(J,L)
              DO 120 I=1,3
              PPPT2 = PPPT(I,K)
               DO 110 M=1,3
                PPPT3 = PPPT(M,P)
                DO 100 N=1,3
                 SOM=SOM+
     &       PPPT1*PPPT2*EM3333(I,J,M,N)*PPPT3*PPPT(N,Q)
  100           CONTINUE
  110          CONTINUE
  120         CONTINUE
  130        CONTINUE
             EM2(K,L,P,Q)=SOM
C 
  140       CONTINUE
  150      CONTINUE
  160     CONTINUE
  170    CONTINUE
         CALL TRAN63(EM,EM2,1)
C
         CALL R8INIR(360,0.D0,TMPTAB,1)
         CALL R8INIR(3600,0.D0,TMPKE,1)
         CALL R8INIR(3600,0.D0,TMPKE2,1)
         CALL MULMAT(6,6,60,EM,BGL,TMPTAB)
         CALL MULMAT(60,6,60,BGLT,TMPTAB,TMPKE2)
C
C ASSEMBLAGE: KE=KE + POIDS*JACOBIAN*TMPKE
C      
         DO 190 J=1,20
            DO 180 I=1,60
               TMPKE(I,(J-1)*3+1)=TMPKE2(I,J)
               TMPKE(I,(J-1)*3+2)=TMPKE2(I,J+20)
               TMPKE(I,(J-1)*3+3)=TMPKE2(I,J+40)
  180       CONTINUE
  190    CONTINUE
         CALL R8INIR(3600,0.D0,TMPKE2,1)
         DO 210 I=1,20
            DO 200 J=1,60
               TMPKE2((I-1)*3+1,J)=TMPKE(I,J)
               TMPKE2((I-1)*3+2,J)=TMPKE(I+20,J)
               TMPKE2((I-1)*3+3,J)=TMPKE(I+40,J)
  200       CONTINUE
  210    CONTINUE
         DO 230 J=1,60
            DO 220 I=1,60
               RE(I,J)=RE(I,J) + AJAC*PXG5(IP)*TMPKE2(I,J)
  220       CONTINUE
  230    CONTINUE
  240   CONTINUE
        END
