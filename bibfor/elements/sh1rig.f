      SUBROUTINE SH1RIG(XETEMP,PARA,RE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 22/12/2008   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
C               ELEMENT SHB15
C
      IMPLICIT REAL*8(A-H,O-Z)
      INTEGER P,Q,IRDC
      REAL*8 PARA(11)
      REAL*8 XE(45),RE(45,45),LAMBDA
      REAL*8 XCOQ(3,3),BKSIP(3,15,15),B(3,15)
      REAL*8 XCENT(3),PPP(3,3),PPT(3,3)
      REAL*8 XL(3,3),XXX(3),YYY(3)
      REAL*8 TMPTAB(6,45),TMPKE(45,45),CMATLO(6,6)
      REAL*8 TMPKE2(45,45),SOM,PPT1,PPT2,PPT3
      REAL*8 BGL(6,45),BGLT(45,6),EM(6,6),EM3333(3,3,3,3)
      REAL*8 EM2(3,3,3,3),XXG5(15),XYG5(15),XZG5(15),PXG5(15)
      REAL*8 XETEMP(*)

C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C------------FIN  COMMUNS NORMALISES  JEVEUX  --------------------------

C           
CCCCCCCCCCCCCC ENTREES CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C          ICLE=2    ON CALCULE LA MATRICE DE RAIDEUR
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C INITIALISATIONS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C INFOS:
C XE EST RANGE COMME CA: (XNOEUD1 YNOEUD1 ZNOEUD1, XNOEUD2 YNOEUD2
C... ZNOEUD2)      
C DANS SHB6_TEST_NUM: ATTENTION A LA NUMEROTATION DES NOEUDS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C ON DEFINIT LES POINTS GAUSS ET LES POIDS
C
C     
      DO 10 IP=1,5
         XZG5(IP)    =  0.5D0
         XYG5(IP)    =  0.5D0
         XZG5(IP+5)  =  0.5D0
         XYG5(IP+5)  =  0.D0
         XZG5(IP+10) =  0.D0
         XYG5(IP+10) =  0.5D0
   10 CONTINUE
C 
      DO 20 IP=1,3
         XXG5(5*(IP-1)+1) = -0.906179845938664D0
         XXG5(5*(IP-1)+2) = -0.538469310105683D0
         XXG5(5*(IP-1)+3) =  0.D0
         XXG5(5*(IP-1)+4) =  0.538469310105683D0
         XXG5(5*(IP-1)+5) =  0.906179845938664D0
C
         PXG5(5*(IP-1)+1) =  0.236926885056189D0/6.D0
         PXG5(5*(IP-1)+2) =  0.478628670499366D0/6.D0
         PXG5(5*(IP-1)+3) =  0.568888888888889D0/6.D0
         PXG5(5*(IP-1)+4) =  0.478628670499366D0/6.D0
         PXG5(5*(IP-1)+5) =  0.236926885056189D0/6.D0
   20 CONTINUE
C      WRITE(6,*),'SHB15'
C
C
C     ON FAIT UNE COPIE DE XETEMP DANS XE
      DO 30 I = 1,45
        XE(I) = XETEMP(I)
   30 CONTINUE      
C
C TYPE DE LOI DE COMPORTEMENT:
C     IRDC = 1 : SHB6 MEME TYPE QUE SHB8 DANS PLEXUS
C     IRDC = 2 : C.P.
C     IRDC = 3 : 3D COMPLETE
C
      IRDC = NINT(PARA(5))
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                  C
C ON CALCULE LA RAIDEUR : SORTIE DANS RE                           C  
C                                                                  C
C SI IETAN = 1 , ALORS ON CALCULE AUSSI                            C
C                LA MATRICE TANGENTE PLASTIQUE                     C
C                                                                  C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C INTIALISATION LONGUEUR DES COTES
C CALCUL DES COEFF D ELANCEMENT A METTRE DANS LA MATRICE DE CPT
C
      XXL1 = 0.D0
      XXL2 = 0.D0
      TT1  = 0.D0
      TT2  = 0.D0
C
C STABILISATION ADAPTATIVE EN FONCTION DE LA DISTORTION DE L'ELEMENT
C
      DO 40 I=1,3
C DISTANCE ENTRE 1 ET 4 (EPAISSEUR)
           TT1   = TT1+(XE(I+9)-XE(I))**2
C DISTANCE ENTRE 2 ET 5 (EPAISSEUR)
           TT2   = TT2+(XE(I+12)-XE(I+3))**2      
C DISTANCE ENTRE 1 ET 2
           XXL1  = XXL1+(XE(I+3)-XE(I))**2
C DISTANCE ENTRE 2 ET 3
           XXL2  = XXL2+(XE(I+6)-XE(I+3))**2
   40 CONTINUE
      XXL1   = SQRT(XXL1)
      XXL2   = SQRT(XXL2)
      TT1    = 0.5D0*(SQRT(TT1)+SQRT(TT2))
      COELA1 = 5.D0/6.D0
      COELA2 = 5.D0/6.D0
C ELANCEMENT DANS DIRECTION 2
C        WRITE(6,*) 'XXL1',XXL1
      ELT    = 6.D0*TT1/XXL1
      IF(COELA1.GT.ELT) COELA1=ELT
C ELANCEMENT DANS DIRECTION 1
      ELT    = 6.D0*TT1/XXL2
      IF(COELA2.GT.ELT) COELA2=ELT
C POUR L'INSTANT, ON NE MET PAS EN SERVICE:
      COELA1 = 1.D0
      COELA2 = 1.D0
C
      CALL R8INIR(2025,0.D0,RE,1)
      CALL R8INIR(36,0.D0,CMATLO,1)
C
C ON DEFINI CMATLO: MATRICE DE COMPORTEMENT
C
        XNU = PARA(2)
        LAMBDA = PARA(1)*PARA(2)/(1.D0-PARA(2)*PARA(2))
        XMU = 0.5D0*PARA(1)/ (1.D0+PARA(2))
        CMATLO(1,1) = LAMBDA + 2.D0*XMU
        CMATLO(2,2) = LAMBDA + 2.D0*XMU
        IF (IRDC.EQ.1) THEN
C COMPORTEMENT SHB6 PLEXUS
           CMATLO(3,3) = PARA(1)
        ENDIF
C
        IF (IRDC.EQ.2) THEN
C COMPORTEMENT C.P.
          CMATLO(3,3) = 0.D0
        ENDIF
C
        CMATLO(1,2) = LAMBDA
        CMATLO(2,1) = LAMBDA
        CMATLO(4,4) = XMU
        CMATLO(5,5) = XMU
        CMATLO(6,6) = XMU
C
        IF (IRDC.EQ.3) THEN
C COMPORTEMENT LOI TRIDIM MMC 3D
         XNU = PARA(2)
         XCOOEF = PARA(1)/((1.D0+XNU)*(1.D0-2.D0*XNU))
         CMATLO(1,1) = (1.D0-XNU)*XCOOEF
         CMATLO(2,2) = (1.D0-XNU)*XCOOEF
         CMATLO(3,3) = (1.D0-XNU)*XCOOEF
         CMATLO(1,2) = XNU*XCOOEF
         CMATLO(2,1) = XNU*XCOOEF
         CMATLO(1,3) = XNU*XCOOEF
         CMATLO(3,1) = XNU*XCOOEF
         CMATLO(2,3) = XNU*XCOOEF
         CMATLO(3,2) = XNU*XCOOEF
         CMATLO(4,4) = (1.D0-2.D0*XNU)*0.5D0*XCOOEF
         CMATLO(5,5) = (1.D0-2.D0*XNU)*0.5D0*XCOOEF
         CMATLO(6,6) = (1.D0-2.D0*XNU)*0.5D0*XCOOEF
        ENDIF
CC
C CALCUL DE BKSIP(3,15,IP) DANS REPERE DE REFERENCE
C      BKSIP(1,*,IP) = VECTEUR Ni,ksi  AU POINT GAUSS IP
C      BKSIP(2,*,IP) = VECTEUR Ni,eta  AU POINT GAUSS IP
C      BKSIP(3,*,IP) = VECTEUR Ni,zeta AU POINT GAUSS IP
C
        CALL SH1KSI(15,XXG5,XYG5,XZG5,BKSIP)
C
C DEBUT DE LA BOUCLE SUR LES 15 PTS GAUSS
C
        DO 270 IP=1,15
C
C DEFINITION DES 3 POINTS  COQUES  
C
           ZETA  = XXG5(IP)
           ZLAMB = 0.5D0*(1.D0-ZETA)    
           DO 60 I=1,3
              DO 50 J=1,3
                 XCOQ(J,I) = ZLAMB*XE((I-1)*3+J) 
     &               + (1.D0-ZLAMB)*XE(3*I+6+J)
   50         CONTINUE
   60      CONTINUE
C
C CALCUL DE PPP 3*3 PASSAGE DE GLOBAL A LOCAL,COQUE
C XCENT : COORD GLOBAL DU CENTRE DE L'ELEMENT
C
           CALL RLOSH6(XCOQ,XCENT,PPP,XL,XXX,YYY,RBID)
C
C CALCUL DE B EN GLOBAL
C
C ATTENTION A L'ORDRE DE EPSILON:
C  FARID DANS SON PAPIER: 11 22 33 12 13 23
C  FARID DANS PLEXUS:     11 22 33 12 23 13
C
           CALL S1CALB(BKSIP(1,1,IP),XE,B,AJAC)
           CALL R8INIR(270,0.D0,BGL,1)
           CALL ASBGL1(BGL,B)
C
C IL FAUT TRANSPOSER BGL_LOC
C
           CALL R8INIR(270,0.D0,BGLT,1)
           DO 80 I = 1,6
             DO 70 J = 1,45
               BGLT(J,I) = BGL(I,J)
   70        CONTINUE
   80      CONTINUE
C
C
C IL NE RESTE PLUS QU'A FAIRE: BGLT * C * BGL
C
           DO 100 I=1,6
             DO 90 J=1,6
               EM(I,J)=CMATLO(I,J)
   90        CONTINUE
  100      CONTINUE
C 
C Passer EM du repère d'élément au repère global
C
           CALL R8INIR(81,0.D0,EM3333,1)
C	   CALL R8INIR(81,0.D0,EM2,1)
           CALL TRAN63(EM,EM3333,2)
           DO 120 I = 1,3
             DO 110 J = 1,3
               PPT(J,I) = PPP(I,J)
  110        CONTINUE
  120      CONTINUE
           DO 200 K=1,3
            DO 190 L=1,3
             DO 180 P=1,3
              DO 170 Q=1,3
C
               SOM=0.D0
               DO 160 J=1,3
                PPT1 = PPT(J,L)
                DO 150 I=1,3
                 PPT2 = PPT(I,K)
                 DO 140 M=1,3
                  PPT3 = PPT(M,P)
                  DO 130 N=1,3
                   SOM=SOM+
     &             PPT1*PPT2*EM3333(I,J,M,N)*PPT3*PPT(N,Q)
  130             CONTINUE
  140            CONTINUE
  150           CONTINUE
  160          CONTINUE
               EM2(K,L,P,Q)=SOM
C      
  170         CONTINUE
  180        CONTINUE
  190       CONTINUE
  200      CONTINUE
           CALL TRAN63(EM,EM2,1)
C
           CALL R8INIR(270,0.D0,TMPTAB,1)
           CALL R8INIR(2025,0.D0,TMPKE,1)
           CALL R8INIR(2025,0.D0,TMPKE2,1)
           CALL MULMAT(6,6,45,EM,BGL,TMPTAB)
           CALL MULMAT(45,6,45,BGLT,TMPTAB,TMPKE2)
C
C ASSEMBLAGE: KE=KE + POIDS*JACOBIAN*TMPKE
C      
           DO 220 J=1,15
            DO 210 I=1,45
               TMPKE(I,(J-1)*3+1)=TMPKE2(I,J)
               TMPKE(I,(J-1)*3+2)=TMPKE2(I,J+15)
               TMPKE(I,(J-1)*3+3)=TMPKE2(I,J+30)
  210       CONTINUE
  220      CONTINUE
           CALL R8INIR(2025,0.D0,TMPKE2,1)
           DO 240 I=1,15
            DO 230 J=1,45
               TMPKE2((I-1)*3+1,J)=TMPKE(I,J)
               TMPKE2((I-1)*3+2,J)=TMPKE(I+15,J)
               TMPKE2((I-1)*3+3,J)=TMPKE(I+30,J)
  230       CONTINUE
  240      CONTINUE
           DO 260 J=1,45
            DO 250 I=1,45
               RE(I,J)=RE(I,J)+AJAC*PXG5(IP)*TMPKE2(I,J)
  250       CONTINUE
  260      CONTINUE
  270   CONTINUE
        END
