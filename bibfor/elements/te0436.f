      SUBROUTINE TE0436(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*16 OPTION,NOMTE
C ----------------------------------------------------------------------
C    - FONCTION REALISEE:  CALCUL DES OPTIONS DE POST-TRAITEMENT :
C                                  - SIEF_ELGA
C                                  - EPOT_ELEM
C                                  - EPSI_ELGA
C                                  - MASS_INER
C                          POUR LES MEMBRANES
C    - ARGUMENTS :
C        DONNEES :      OPTION       -->  OPTION DE CALCUL
C                       NOMTE        -->  NOM DU TYPE ELEMENT
C ----------------------------------------------------------------------

      INTEGER  CODRES(2)
      CHARACTER*4  FAMI
      INTEGER  NDDL,NNO,NNOS,NPG,NDIM,NCOMP
      INTEGER  I,J,N,C,CC,KPG,IRET
      INTEGER  IPOIDS,IVF,IDFDE,JGANO
      INTEGER  IGEOM,ICACOQ,IMATE,IDEPL,ICONTP,INR,IDEFO,IMASS
      REAL*8  DFF(2,8),VFF(8),B(3,3,8),JAC
      REAL*8  ALPHA,BETA,EPOT
      REAL*8  EPSM(3),EPSG(3,9),EPSTHE,SIG(3),SIGG(3,9),RIG(6,6),RHO
      REAL*8  R8DGRD,R8PREM
      REAL*8  X(8),Y(8),Z(8),SURFAC,CDG(3),PPG,XXI,YYI,ZZI,MATINE(6)
      REAL*8  VRO

C - NOMBRE DE COMPOSANTES DES TENSEURS

      NCOMP = 3
      NDDL  = 3

C - FONCTIONS DE FORMES ET POINTS DE GAUSS

      FAMI = 'RIGI'
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,JGANO)

C - PARAMETRES EN ENTREE

      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PCACOQU','L',ICACOQ)

      IF ((OPTION.EQ.'SIEF_ELGA').OR.
     &    (OPTION.EQ.'EPOT_ELEM')) THEN
        CALL JEVECH('PDEPLAR','L',IDEPL)
        CALL JEVECH('PMATERC','L',IMATE)

      ELSEIF (OPTION.EQ.'EPSI_ELGA') THEN
        CALL JEVECH('PDEPLAR','L',IDEPL)
        CALL R8INIR(3*9,0.D0,EPSG,1)

      ELSEIF (OPTION.EQ.'MASS_INER') THEN
        CALL JEVECH('PMATERC','L',IMATE)
      ENDIF

C - PARAMETRES EN SORTIE

      IF (OPTION.EQ.'SIEF_ELGA') THEN
        CALL JEVECH('PCONTRR','E',ICONTP)
        CALL R8INIR(3*9,0.D0,SIGG,1)

      ELSEIF (OPTION.EQ.'EPOT_ELEM') THEN
        CALL JEVECH('PENERDR','E',INR)
        EPOT = 0.D0

      ELSEIF (OPTION.EQ.'EPSI_ELGA') THEN
        CALL JEVECH('PDEFOPG','E',IDEFO)

      ELSEIF (OPTION.EQ.'MASS_INER') THEN
        CALL JEVECH('PMASSINE','E',IMASS)
        CALL RCVALB(FAMI,KPG,1,'+',ZI(IMATE),' ','ELAS_MEMBRANE',
     &              0,' ',0.D0,1,'RHO',RHO,CODRES, 1)
        IF(RHO.LE.R8PREM()) THEN
          CALL U2MESS('F','ELEMENTS5_45')
        ENDIF
      ENDIF

C - LE VECTEUR NORME QUI DETERMINE LE REPERE LOCAL DE LA MEMBRANE
C   (COMPORTEMENT ANISOTROPE)

      ALPHA = ZR(ICACOQ) * R8DGRD()
      BETA  = ZR(ICACOQ+1) * R8DGRD()

C - COORDONNEES PHYSIQUES DES NOEUDS

      IF (OPTION.EQ.'MASS_INER') THEN
        DO 10 I = 1,NNO
          X(I) = ZR(IGEOM+3* (I-1))
          Y(I) = ZR(IGEOM+3*I-2)
          Z(I) = ZR(IGEOM+3*I-1)
10      CONTINUE
        CALL R8INIR(3,0.D0,CDG,1)
        CALL R8INIR(6,0.D0,MATINE,1)
        SURFAC = 0.D0
      ENDIF


C - DEBUT DE LA BOUCLE SUR LES POINTS DE GAUSS

      DO 800 KPG=1,NPG

C --- MISE SOUS FORME DE TABLEAU DES VALEURS ET DES DERIVEES
C     DES FONCTIONS DE FORME

        DO 110 N=1,NNO
          VFF(N)  =ZR(IVF+(KPG-1)*NNO+N-1)
          DFF(1,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2)
          DFF(2,N)=ZR(IDFDE+(KPG-1)*NNO*2+(N-1)*2+1)
110     CONTINUE

C --- CALCUL DE LA MATRICE "B" :
C              DEPL NODAL --> DEFORMATIONS MEMBRANAIRES ET JACOBIEN

        CALL MBCINE(NNO,ZR(IGEOM),DFF,ALPHA,BETA,B,JAC)

C --- SIEF_ELGA, EPOT_ELEM : ON CALCULE LA CONTRAINTE AU PG

        IF ((OPTION.EQ.'SIEF_ELGA').OR.
     &      (OPTION.EQ.'EPOT_ELEM')) THEN

C         CALCUL DE LA DEFORMATION MEMBRANAIRE DANS LE REPERE LOCAL
          CALL R8INIR(3,0.D0,EPSM,1)
          DO 130 N=1,NNO
            DO 130 I=1,NDDL
              DO 130 C=1,NCOMP
                EPSM(C)=EPSM(C)+B(C,I,N)*ZR(IDEPL+(N-1)*NDDL+I-1)
130       CONTINUE

C         RETRAIT DE LA DEFORMATION THERMIQUE
          CALL VERIFT(FAMI,KPG,1,'+',ZI(IMATE),'ELAS_MEMBRANE',1,
     &                EPSTHE,IRET)
          EPSM(1) = EPSM(1) - EPSTHE
          EPSM(2) = EPSM(2) - EPSTHE

C         CALCUL DE LA CONTRAINTE AU PG
          CALL MBRIGI(FAMI,KPG,IMATE,RIG)

          CALL R8INIR(3,0.D0,SIG,1)
          DO 140 C=1,NCOMP
            DO 140 CC=1,NCOMP
              SIG(C) = SIG(C) + EPSM(CC)*RIG(CC,C)
140       CONTINUE

          IF (OPTION.EQ.'EPOT_ELEM') THEN
            DO 150 C=1,NCOMP
              EPOT = EPOT+(SIG(C)*EPSM(C)*ZR(IPOIDS+KPG-1)*JAC)/2
150         CONTINUE
          ELSE
            DO 160 C=1,NCOMP
              SIGG(C,KPG) = SIG(C)
160         CONTINUE
          ENDIF

C --- EPSI_ELGA : ON CALCULE LA DEFORMATION AU PG

        ELSEIF (OPTION.EQ.'EPSI_ELGA') THEN

C         CALCUL DE LA DEFORMATION MEMBRANAIRE DANS LE REPERE LOCAL
          DO 200 N=1,NNO
            DO 200 I=1,NDDL
              DO 200 C=1,NCOMP
                EPSG(C,KPG)= EPSG(C,KPG)
     &                     + B(C,I,N)*ZR(IDEPL+(N-1)*NDDL+I-1)
200       CONTINUE

C --- MASS_INER : ON SOMME LA CONTRIBUTION DU PG A LA MASSE TOTALE

        ELSEIF (OPTION.EQ.'MASS_INER') THEN
          SURFAC = SURFAC + ZR(IPOIDS+KPG-1)*JAC
          PPG = ZR(IPOIDS+KPG-1)*JAC
          DO 300 I=1,NNO
            CDG(1) = CDG(1) + PPG*VFF(I)*X(I)
            CDG(2) = CDG(2) + PPG*VFF(I)*Y(I)
            CDG(3) = CDG(3) + PPG*VFF(I)*Z(I)
            XXI = 0.D0
            YYI = 0.D0
            ZZI = 0.D0
            DO 310 J=1,NNO
              XXI = XXI + X(I)*VFF(I)*VFF(J)*X(J)
              YYI = YYI + Y(I)*VFF(I)*VFF(J)*Y(J)
              ZZI = ZZI + Z(I)*VFF(I)*VFF(J)*Z(J)
              MATINE(2) = MATINE(2) + X(I)*VFF(I)*VFF(J)*Y(J)*PPG
              MATINE(4) = MATINE(4) + X(I)*VFF(I)*VFF(J)*Z(J)*PPG
              MATINE(5) = MATINE(5) + Y(I)*VFF(I)*VFF(J)*Z(J)*PPG
310         CONTINUE
            MATINE(1) = MATINE(1) + PPG*(YYI+ZZI)
            MATINE(3) = MATINE(3) + PPG*(XXI+ZZI)
            MATINE(6) = MATINE(6) + PPG*(XXI+YYI)
300       CONTINUE
        ENDIF

C - FIN DE LA BOUCLE SUR LES POINTS DE GAUSS
800   CONTINUE

      IF (OPTION.EQ.'SIEF_ELGA') THEN
        DO 500 KPG=1,NPG
          DO 500 C=1,NCOMP
            ZR(ICONTP+(KPG-1)*NCOMP+C-1)=SIGG(C,KPG)
500     CONTINUE

      ELSEIF (OPTION.EQ.'EPOT_ELEM') THEN
        ZR(INR) = EPOT

      ELSEIF (OPTION.EQ.'EPSI_ELGA') THEN
        DO 510 KPG=1,NPG
          DO 510 C=1,NCOMP
            ZR(IDEFO+(KPG-1)*NCOMP+C-1) = EPSG(C,KPG)
510     CONTINUE

      ELSEIF (OPTION.EQ.'MASS_INER') THEN
        VRO = RHO / SURFAC
        ZR(IMASS)   = RHO * SURFAC
        ZR(IMASS+1) = CDG(1)/SURFAC
        ZR(IMASS+2) = CDG(2)/SURFAC
        ZR(IMASS+3) = CDG(3)/SURFAC
        ZR(IMASS+4) = MATINE(1)*RHO - VRO*(CDG(2)*CDG(2)+CDG(3)*CDG(3))
        ZR(IMASS+5) = MATINE(3)*RHO - VRO*(CDG(1)*CDG(1)+CDG(3)*CDG(3))
        ZR(IMASS+6) = MATINE(6)*RHO - VRO*(CDG(1)*CDG(1)+CDG(2)*CDG(2))
        ZR(IMASS+7) = MATINE(2)*RHO - VRO*(CDG(1)*CDG(2))
        ZR(IMASS+8) = MATINE(4)*RHO - VRO*(CDG(1)*CDG(3))
        ZR(IMASS+9) = MATINE(5)*RHO - VRO*(CDG(2)*CDG(3))
      ENDIF

      END
