      SUBROUTINE MMVFPE(PHASEP,NDIM  ,NNE   ,NNM   ,NORM  ,
     &                  TAU1  ,TAU2  ,MPROJT,WPG   ,FFE   ,
     &                  FFM   ,JACOBI,JEU   ,COEFCP,COEFFP,
     &                  LAMBDA,COEFFF,DLAGRC,DLAGRF,DVITE ,
     &                  RESE  ,NRESE ,VECTEE,VECTMM)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 18/04/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      CHARACTER*9  PHASEP
      INTEGER      NDIM,NNE,NNM
      REAL*8       WPG,FFE(9),FFM(9),JACOBI
      REAL*8       DLAGRC,DLAGRF(2),DVITE(3)
      REAL*8       RESE(3),NRESE  
      REAL*8       NORM(3)
      REAL*8       TAU1(3),TAU2(3),MPROJT(3,3)       
      REAL*8       COEFCP,COEFFP,JEU
      REAL*8       LAMBDA,COEFFF
      REAL*8       VECTEE(27),VECTMM(27)
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - CALCUL)
C
C CALCUL DES VECTEURS - FORME FORTE - CAS POIN_ELEM
C
C ----------------------------------------------------------------------
C
C
C IN  PHASEP : 'SANS' - PAS DE CONTACT
C              'CONT' - CONTACT
C              'ADHE' - CONTACT ADHERENT
C              'GLIS' - CONTACT GLISSANT
C              'SANS_PENA' - PENALISATION - PAS DE CONTACT
C              'CONT_PENA' - PENALISATION - CONTACT
C              'ADHE_PENA' - PENALISATION - CONTACT ADHERENT
C              'GLIS_PENA' - PENALISATION - CONTACT GLISSANT
C IN  NDIM   : DIMENSION DU PROBLEME
C IN  NNE    : NOMBRE DE NOEUDS ESCLAVE
C IN  NNM    : NOMBRE DE NOEUDS MAITRES
C IN  WPG    : POIDS DU POINT INTEGRATION DU POINT DE CONTACT
C IN  FFE    : FONCTIONS DE FORMES DEPL_ESCL
C IN  FFM    : FONCTIONS DE FORMES DEPL_MAIT
C IN  JACOBI : JACOBIEN DE LA MAILLE AU POINT DE CONTACT
C IN  JEU    : VALEUR DU JEU
C IN  NORM   : NORMALE
C IN  COEFCP : COEF_PENA_CONT
C IN  COEFFP : COEF_PENA_FROT
C IN  LAMBDA : VALEUR DU MULT. DE CONTACT (SEUIL DE TRESCA)
C IN  COEFFF : COEFFICIENT DE FROTTEMENT DE COULOMB
C IN  DLAGRF : INCREMENT DEPDEL DES LAGRANGIENS DE FROTTEMENT
C IN  DLAGRC : INCREMENT DEPDEL DU LAGRANGIEN DE CONTACT
C IN  DVITE  : SAUT DE "VITESSE" [[DELTA X]]
C IN  RESE   : SEMI-MULTIPLICATEUR GTK DE FROTTEMENT 
C               GTK = LAMBDAF + COEFFR*VITESSE
C IN  NRESE  : NORME DU SEMI-MULTIPLICATEUR GTK DE FROTTEMENT
C IN  TAU1   : PREMIER VECTEUR TANGENT
C IN  TAU2   : SECOND VECTEUR TANGENT
C IN  MPROJT : MATRICE DE PROJECTION TANGENTE
C OUT VECTEE : VECTEUR ELEMENTAIRE DEPL_ESCL
C OUT VECTMM : VECTEUR ELEMENTAIRE DEPL_MAIT
C
C ----------------------------------------------------------------------
C
      IF (PHASEP(1:4).EQ.'CONT') THEN
        IF (PHASEP(6:9).EQ.'PENA') THEN
          CALL MMMVUU('CONT_PENA',NDIM  ,NNE   ,NNM   ,NORM  ,
     &                TAU1  ,TAU2  ,MPROJT,WPG   ,FFE   ,
     &                FFM   ,JACOBI,JEU   ,COEFCP,COEFFP,
     &                LAMBDA,COEFFF,DLAGRC,DLAGRF,DVITE ,
     &                RESE  ,NRESE ,VECTEE,VECTMM)
        ELSE
          CALL MMMVUU('CONT',NDIM  ,NNE   ,NNM   ,NORM  ,
     &                TAU1  ,TAU2  ,MPROJT,WPG   ,FFE   ,
     &                FFM   ,JACOBI,JEU   ,COEFCP,COEFFP,
     &                LAMBDA,COEFFF,DLAGRC,DLAGRF,DVITE ,
     &                RESE  ,NRESE ,VECTEE,VECTMM)
        ENDIF
      ELSEIF (PHASEP(1:4).EQ.'ADHE') THEN
        IF (PHASEP(6:9).EQ.'PENA') THEN
          CALL MMMVUU('ADHE_PENA',NDIM  ,NNE   ,NNM   ,NORM  ,
     &                TAU1  ,TAU2  ,MPROJT,WPG   ,FFE   ,
     &                FFM   ,JACOBI,JEU   ,COEFCP,COEFFP,
     &                LAMBDA,COEFFF,DLAGRC,DLAGRF,DVITE ,
     &                RESE  ,NRESE ,VECTEE,VECTMM)
        ELSE
          CALL MMMVUU('ADHE',NDIM  ,NNE   ,NNM   ,NORM  ,
     &                TAU1  ,TAU2  ,MPROJT,WPG   ,FFE   ,
     &                FFM   ,JACOBI,JEU   ,COEFCP,COEFFP,
     &                LAMBDA,COEFFF,DLAGRC,DLAGRF,DVITE ,
     &                RESE  ,NRESE ,VECTEE,VECTMM)
        ENDIF
      ELSEIF (PHASEP(1:4).EQ.'GLIS') THEN
        IF (PHASEP(6:9).EQ.'PENA') THEN
          CALL MMMVUU('GLIS_PENA',NDIM  ,NNE   ,NNM   ,NORM  ,
     &                TAU1  ,TAU2  ,MPROJT,WPG   ,FFE   ,
     &                FFM   ,JACOBI,JEU   ,COEFCP,COEFFP,
     &                LAMBDA,COEFFF,DLAGRC,DLAGRF,DVITE ,
     &                RESE  ,NRESE ,VECTEE,VECTMM)
        ELSE
          CALL MMMVUU('GLIS' ,NDIM  ,NNE   ,NNM   ,NORM  ,
     &                TAU1  ,TAU2  ,MPROJT,WPG   ,FFE   ,
     &                FFM   ,JACOBI,JEU   ,COEFCP,COEFFP,
     &                LAMBDA,COEFFF,DLAGRC,DLAGRF,DVITE ,
     &                RESE  ,NRESE ,VECTEE,VECTMM)
        ENDIF
      ENDIF
C
      END
