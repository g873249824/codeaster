      SUBROUTINE TE0364 ( OPTION, NOMTE )
      IMPLICIT   NONE
      CHARACTER*16         OPTION, NOMTE
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 03/11/2008   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C  CALCUL CALCUL DES MATRICES DE CONTACT ET DE FROTTEMENT
C  DE COULOMB STANDARD  AVEC LA METHODE CONTINUE (ECP)
C
C  OPTION : 'RIGI_CONT' (CALCUL DES MATRICES DE CONTACT )
C           'RIGI_FROT' (CALCUL DES MATRICES DE FROTTEMENT STANDARD)
C
C  ENTREES  ---> OPTION : OPTION DE CALCUL
C           ---> NOMTE  : NOM DU TYPE ELEMENT
C ----------------------------------------------------------------------
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX --------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX --------------------
C
      INTEGER I,J,K,IJ
      INTEGER NNE,NNM,NDDL,NDIM,INDCO,INADH,INDASP,ICOMPL,INDM
      INTEGER IGEOM,IDEPL,IMATT,JPCF,CMP,IAXIS
      INTEGER IDEPM,IFROTT,IFORM,NBCPS,NBDM
      INTEGER INI1,INI2,INI3,INDNOR,INDRAC,IUSURE,INDPIV
      INTEGER INDNOB,IMA,IMABAR,TYPBAR
      INTEGER IUSUP,TYALGC,TYALGF
      REAL*8 COEFFF,COEFFA,COEFCA,COEASP,CN
      REAL*8 COEFFS,COEFCS,COEFFP,COEFCP
      REAL*8 XPR,YPR,XPC,YPC,HPG,LAMBDA
      REAL*8 NOOR,R8PREM
      REAL*8 MMAT(81,81),TAU1(3),TAU2(3),NORM(3)
      REAL*8 RESE(3),NRESE
      REAL*8 DELTAT,ASPERI,JEU
      REAL*8 DELTA,ALPHA,JEUSUP
      REAL*8 GEOMM(3),GEOME(3),C(3,3)
      REAL*8 DEPLME(6),DEPLM(6),DEPLE(6),DEPLMM(6)
      REAL*8 R8BID,R8BID3(3),R8BID6(6)
      REAL*8 MPROJ(3,3)
      REAL*8 FFPC(9),DFFPC(2,9),DDFFPC(3,9),JACOBI
      REAL*8 FFPR(9),DFFPR(2,9),DDFFPR(3,9)
      REAL*8 PRFUSU,KW,HW,DISSIP,GEOMI(3),BIDON(3),VECT(3)
      CHARACTER*8 ESC,MAIT
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INFOS SUR LA MAILLE DE CONTACT
C
      CALL MMELEM (NOMTE,NDIM,NDDL,ESC,NNE,MAIT,NNM)
      CALL ASSERT (NDDL.LE.81)
C
C --- INITIALISATIONS
C
      DO 40 J = 1,81
        DO 30 I = 1,81
          MMAT(I,J) = 0.D0
   30   CONTINUE
   40 CONTINUE
      DO 280 I = 1,6
        DEPLME(I) = 0.D0
        DEPLMM(I) = 0.D0
        DEPLE(I) = 0.D0
        DEPLM(I) = 0.D0
        R8BID6(I) = 0.D0
  280 CONTINUE
      DO 300 J = 1,3
        DO 290 I = 1,3
          MPROJ(I,J)  = 0.D0
          C(I,J) = 0.D0
  290   CONTINUE
        NORM(J) = 0.D0
        RESE(J) = 0.D0
        GEOMM(J) = 0.D0
        GEOME(J) = 0.D0
        GEOMI(J) = 0.D0
        BIDON(J) = 0.D0
        VECT(J) = 0.D0
        R8BID3(J) = 0.D0
  300 CONTINUE
      DISSIP = 0.D0 
      PRFUSU = 0.D0
       
C
C --- RECUPERATION DES DONNEES DE LA CARTE DU CONTACT (VOIR MMCART)
C
      CALL JEVECH ( 'PCONFR', 'L', JPCF )
      XPC      =      ZR(JPCF-1+1)
      YPC      =      ZR(JPCF-1+10)
      XPR      =      ZR(JPCF-1+2)
      YPR      =      ZR(JPCF-1+3)
      TAU1(1)  =      ZR(JPCF-1+4)
      TAU1(2)  =      ZR(JPCF-1+5)
      TAU1(3)  =      ZR(JPCF-1+6)
      TAU2(1)  =      ZR(JPCF-1+7)
      TAU2(2)  =      ZR(JPCF-1+8)
      TAU2(3)  =      ZR(JPCF-1+9)
      INDCO    = NINT(ZR(JPCF-1+11))
      LAMBDA   =      ZR(JPCF-1+12)
      COEFCA   =      ZR(JPCF-1+13)
      COEFFA   =      ZR(JPCF-1+14)
      COEFFF   =      ZR(JPCF-1+15)
      IFROTT   = NINT(ZR(JPCF-1+16))
      INDNOR   = NINT(ZR(JPCF-1+17))
      IAXIS    = NINT(ZR(JPCF-1+18))
      HPG      =      ZR(JPCF-1+19)
      DELTAT   =      ZR(JPCF-1+20)
      IFORM    = NINT(ZR(JPCF-1+21))
      INDM     = NINT(ZR(JPCF-1+22))
      INI1     = NINT(ZR(JPCF-1+23))
      INI2     = NINT(ZR(JPCF-1+24))
      INI3     = NINT(ZR(JPCF-1+25))
      INDASP   = NINT(ZR(JPCF-1+26))
      ICOMPL   = NINT(ZR(JPCF-1+27))
      ASPERI   =      ZR(JPCF-1+28)
      COEASP   =      ZR(JPCF-1+29)
      CN       =      ZR(JPCF-1+30)
      ALPHA    =      ZR(JPCF-1+31)
      DELTA    =      ZR(JPCF-1+32)
      JEUSUP   =      ZR(JPCF-1+33)
      IMA      = NINT(ZR(JPCF-1+34))
      IMABAR   = NINT(ZR(JPCF-1+35))
      INDNOB   = NINT(ZR(JPCF-1+36))
      TYPBAR   = NINT(ZR(JPCF-1+38))
      INDRAC   = NINT(ZR(JPCF-1+39))
      IUSURE   = NINT(ZR(JPCF-1+40))
      KW       =      ZR(JPCF-1+41)
      HW       =      ZR(JPCF-1+42)
      INDPIV   = NINT(ZR(JPCF-1+43))
      TYALGC   = NINT(ZR(JPCF-1+44))
      COEFCS   =      ZR(JPCF-1+45)
      COEFCP   =      ZR(JPCF-1+46)
      TYALGF   = NINT(ZR(JPCF-1+47))
      COEFFS   =      ZR(JPCF-1+48)
      COEFFP   =      ZR(JPCF-1+49)
C
C --- RECUPERATION DE LA GEOMETRIE ET DES CHAMPS DE DEPLACEMENT
C
      CALL JEVECH ( 'PGEOMER', 'E', IGEOM )
      CALL JEVECH ( 'PDEPL_P', 'E', IDEPL )
      CALL JEVECH ( 'PDEPL_M', 'L', IDEPM )
      IF (IUSURE.EQ.1)  CALL JEVECH ( 'PUSULAR', 'L', IUSUP )
C
      IF ( IFROTT .EQ. 3 ) THEN
C ------ COMPOSANTES 3D : LAGS_C   LAGS_F1  LAGS_F2
C ------ COMPOSANTES 2D : LAGS_C   LAGS_F1
         NBCPS = NDIM
         NBDM  = NDIM + NBCPS
      ELSE
C ------ COMPOSANTE : LAGS_C
         NBCPS = 1
         NBDM  = NDIM + NBCPS
      ENDIF
C
C --- REACTUALISATION DE LA GEOMETRIE
C
      CALL MMREAC (NBDM,NDIM,NNE,NNM,IGEOM,IDEPM)
C
C --- FONCTIONS DE FORMES ET DERIVEES POUR LE
C --- POINT DE CONTACT
C
      IF (IMA .NE. IMABAR)  TYPBAR = -1
C
      CALL MMMFFD (ESC,NDIM,NNE,XPC,YPC,TYPBAR,FFPC,DFFPC,DDFFPC)
C
C --- JACOBIEN POUR LE POINT DE CONTACT
C
      CALL MMMJAC (ESC,IGEOM,FFPC,DFFPC,IAXIS,
     &             NDIM,JACOBI)
C
C --- FONCTIONS DE FORMES ET DERIVEES POUR LA
C --- PROJECTION DU POINT DE CONTACT
C
      CALL MMMFFD (MAIT,NDIM,NNM,XPR,YPR,TYPBAR,FFPR,DFFPR,DDFFPR)
C
C --- CALCUL DE LA NORMALE
C  
      CALL MMNORM (NDIM,TAU1,TAU2,NORM,NOOR)
      IF (NOOR.LE.R8PREM()) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- GEOMETRIE ET DEPLACEMENTS DU POINT DE CONTACT ET
C --- DE SON PROJETE
C
      CALL MMGEOM (NBDM,NDIM,NNE,NNM,0,IGEOM,IDEPL,IDEPM,0,
     &             0,0,FFPC,FFPR,GEOME,GEOMM,
     &             DEPLE,DEPLM,DEPLME,DEPLMM,
     &             R8BID6,R8BID6,R8BID6,R8BID6,
     &             0,R8BID6,R8BID3)
C  -----
C ------------------------------------------------------------
C CALCUL USURE IMPLICITE
C ------------------------------------------------------------
C CALCUL DE !![[U]]_TAU!!      

      IF (IUSURE .EQ. 1) THEN
        PRFUSU = ZR(IUSUP-1+1)
        DO 321 I = 1,NDIM
          DO 311 J = 1,NDIM
            C(I,J) = -1.D0*NORM(I)*NORM(J)
311       CONTINUE
321     CONTINUE

        DO 331 I = 1,NDIM
          C(I,I) = 1.D0 + C(I,I)
331     CONTINUE

        DO 312 I = 1,NDIM
          GEOMI (I)= (DEPLE(I)-DEPLM(I)) - (DEPLME(I)-DEPLMM(I))
          BIDON (I)= 0.D0
          VECT  (I)= 0.D0
312     CONTINUE

        DO 332 I=1,NDIM
          DO 342  K=1,NDIM
            BIDON(I)=C(I,K)*GEOMI(K) + BIDON(I)
342       CONTINUE
332     CONTINUE
      
        DISSIP = 0.D0
        DO 352 K = 1,NDIM
          DISSIP = DISSIP + (BIDON(K)*BIDON(K))
352     CONTINUE
        DISSIP = SQRT(DISSIP)

C CALCUL DE !![[U]]_TAU!!

        DO 372 I=1,NDIM
          DO 382  J=1,NDIM
            VECT(I)=C(I,J)*BIDON(J)+VECT(I)
382       CONTINUE
372     CONTINUE
      ELSE
        PRFUSU = 0.D0
        DISSIP = 0.D0
      END IF
C ------------------------------------------------------------
C CALCUL USURE
C ------------------------------------------------------------

C
C --- COEFFICIENT ACCELERATION POUR FORMULATION EN VITESSE
C
      IF (IFORM .EQ. 2) THEN
        COEFCA = COEFCA/DELTAT/ALPHA
        COEFCS = COEFCS/DELTAT/ALPHA
      ENDIF
C
C --- TRAITEMENT EN FOND DE FISSURE
C
      IF (INDNOB .GT. 0)  INDCO = 1
C
C --- TRAITEMENT DU RACCORD SURFACIQUE
C
      IF (INDRAC .GT. 0)  INDCO = 1
C
C --- NOEUDS EXCLUS PAR PROJECTION HORS ZONE
C
      IF (INDNOR .EQ. 1)  INDCO = 0
C
C --- NOEUDS EXCLUS PAR SANS GROUP_NO
C
      IF (INDM .GE. 1) THEN
         CMP = 0
         DO 9 I = 1,NDIM
            IF (TAU1(I).NE.0.D0) CMP = I
 9       CONTINUE
      END IF
C
C --- RECUPERATION DE LA MATRICE 'OUT'
C
      CALL JEVECH ( 'PMATUUR', 'E', IMATT )
C
C --- CALCUL DES MATRICES DE CONTACT
C
      IF (OPTION.EQ.'RIGI_CONT') THEN
C         ---------------------
        IF (INDPIV.EQ.1) INDCO = 0
        IF (INDASP.EQ.0) THEN
C
C --- CALCUL DE LA MATRICE A - CAS SANS CONTACT (HORS ASPERITES)
C
          CALL MMMAA0 (NBDM,NDIM,NNE,HPG,FFPC,JACOBI,
     &                 TYALGC,COEFCA,COEFCS,COEFCP, MMAT)
C
        ELSE IF (INDASP.EQ.1) THEN
          IF (INDCO.EQ.1) THEN
C
C --- EVALUATION DES JEUX - CAS DU CONTACT
C
            CALL MMMJEU (NDIM,JEUSUP,0,NORM,ALPHA,DELTA,DELTAT,
     &                   GEOME,GEOMM,DEPLE,DEPLM,DEPLME,DEPLMM,
     &                   R8BID6,R8BID6,R8BID6,R8BID6,
     &                   JEU,R8BID,R8BID,PRFUSU,IFORM,R8BID6,R8BID3)
C
C --- CALCUL DE LA MATRICE A - CAS DU CONTACT
C
            CALL MMMAA1 (NBDM,NDIM,NNE,NNM,IMA,IMABAR,INDNOB,INDRAC,
     &                   HPG,FFPC,FFPR,JACOBI,
     &                   TYALGC,COEFCA,COEFCS,COEFCP,ICOMPL,
     &                   COEASP,ASPERI,JEU,NORM,IUSURE,KW,HW,
     &                   DISSIP,VECT,DEPLE, MMAT)
C
C --- CONTRIBUTION DE LA COMPLIANCE A LA MATRICE A - CAS DU CONTACT
C
            IF (ICOMPL .EQ. 1) THEN
              CALL MMMAA2 (NBDM,NDIM,NNE,NNM,HPG,FFPC,FFPR,JACOBI,
     &                     ICOMPL,COEASP,ASPERI,JEU,NORM,
     &                     CN,ALPHA,DELTA,DELTAT, MMAT)
            ENDIF

          ELSE IF (INDCO .EQ. 0) THEN
C
C --- CALCUL DE LA MATRICE A - CAS SANS CONTACT
C
            CALL MMMAA0 (NBDM,NDIM,NNE,HPG,FFPC,JACOBI,
     &                   TYALGC,COEFCA,COEFCS,COEFCP, MMAT)
          ENDIF
        ELSE
          CALL U2MESS('F','ELEMENTS3_80')
        END IF

      ELSE IF (OPTION.EQ.'RIGI_FROT') THEN
C              ---------------------
        IF (COEFFF.EQ.0.D0) INDCO = 0
        IF (LAMBDA.EQ.0.D0) INDCO = 0
        IF (IFROTT.NE.3)    INDCO = 0
        IF (INDPIV.EQ.1)    INDCO = 0

        IF (INDCO.EQ.0) THEN
C
C --- CALCUL DE B ET DE BT - CAS SANS CONTACT
C
          CALL MMMAB0 (NBDM,NBCPS,NDIM,NNE,HPG,FFPC,JACOBI,
     &                 TAU1,TAU2, MMAT)
C
        ELSE IF (INDCO.EQ.1) THEN
C
C ---  ON CALCULE L'ETAT DE CONTACT ADHERENT OU GLISSANT
C
          CALL TTPRSM (NDIM,DEPLE,DEPLM,TYALGF,COEFFA,COEFFS,COEFFP,
     &                 NORM,TAU1,TAU2,INADH,MPROJ,RESE,NRESE)
C
          IF (INADH.EQ.1) THEN
C
C --- CALCUL DE B ET DE BT - CAS ADHERENT
C
            CALL MMMAB1 (NBDM,NBCPS,NDIM,NNE,NNM,INDM,INI1,INI2,INI3,
     &                   CMP,HPG,FFPC,FFPR,JACOBI,
     &                   LAMBDA,TYALGF,COEFFA,COEFFS,COEFFP,
     &                   COEFFF,TAU1,TAU2,MPROJ, MMAT)
          ELSE IF (INADH.EQ.0) THEN
C
C --- CALCUL DE B ET DE BT - CAS GLISSANT
C
            CALL MMMAB2 (NBDM,NBCPS,NDIM,NNE,NNM,HPG,FFPC,FFPR,
     &                   JACOBI,LAMBDA,TYALGF,COEFFA,COEFFS,COEFFP,
     &                   COEFFF,TAU1,TAU2,RESE,NRESE,MPROJ, MMAT)
          END IF
        ELSE
          CALL U2MESS('F','ELEMENTS3_80')
        END IF
      ELSE
C       SI OPTION NI 'RIGI_CONT' NI 'RIGI_FROT'
        CALL ASSERT(OPTION.EQ.'RIGI_FROT' .OR.
     &              OPTION.EQ.'RIGI_CONT')  
      END IF
C
C --- FIN DE CHANGEMENT ET COPIE
C
      DO 760 J = 1,NDDL
         DO 750 I = 1,J
            IJ = (J-1)*J/2 + I
            ZR(IMATT+IJ-1) = MMAT(I,J)
 750     CONTINUE
 760  CONTINUE
C
      CALL JEDEMA()
      END
