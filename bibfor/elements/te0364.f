      SUBROUTINE TE0364(OPTION,NOMTE )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 18/04/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      CHARACTER*16  OPTION,NOMTE
C
C ----------------------------------------------------------------------
C
C
C  CALCUL CALCUL DES MATRICES DE CONTACT ET DE FROTTEMENT
C  DE COULOMB STANDARD  VEC LA METHODE CONTINUE
C
C  OPTION : 'RIGI_CONT' (CALCUL DES MATRICES DE CONTACT )
C           'RIGI_FROT' (CALCUL DES MATRICES DE FROTTEMENT STANDARD)
C
C  ENTREES  ---> OPTION : OPTION DE CALCUL
C           ---> NOMTE  : NOM DU TYPE ELEMENT
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX --------------------
C
      INTEGER      I,J,IJ
      INTEGER      NNE,NNM,NNL
      INTEGER      NDDL,NDIM,NBCPS,NBDM
      INTEGER      TYPBAR,TYPRAC
      INTEGER      NDEXFR
      REAL*8       COEFFF,LAMBDA
      REAL*8       COEFCR,COEFCS,COEFCP
      REAL*8       COEFFR,COEFFS,COEFFP
      REAL*8       WPG,JACOBI
      REAL*8       MMAT(81,81)
      REAL*8       NORM(3),TAU1(3),TAU2(3)
      REAL*8       MPROJN(3,3),MPROJT(3,3)
      REAL*8       RESE(3),NRESE
      REAL*8       JEUSUP
      REAL*8       DELTAT,BETA,GAMMA,THETA
      REAL*8       DLAGRF(2),DVITE(3)
      CHARACTER*8  TYPMAE,TYPMAM
      CHARACTER*9  PHASEP
      LOGICAL      LAXIS,LELTF    
      REAL*8       KAPPAN,KAPPAV,ASPERI
      LOGICAL      LFROTT,LCOMPL
      LOGICAL      LPENAC,LPENAF
      LOGICAL      LOPTF,LUSURE,LDYNA,LFOVIT,LCONT
      LOGICAL      LASPE,LADHE
      LOGICAL      DEBUG
      INTEGER      JMATT
      REAL*8       PRFUSU,CWEAR
      REAL*8       FFE(9),FFM(9),FFL(9)
C
      REAL*8       MATRCC(9,9)
      REAL*8       MATREE(27,27),MATRMM(27,27)
      REAL*8       MATREM(27,27),MATRME(27,27)
      REAL*8       MATRCE(9,27) ,MATRCM(9,27)
      REAL*8       MATRMC(27,9) ,MATREC(27,9)
      REAL*8       MATRFF(18,18)
      REAL*8       MATRFE(18,27),MATRFM(18,27)
      REAL*8       MATRMF(27,18),MATREF(27,18)
C
      CHARACTER*24 TYPELT
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      CALL MATINI(81,81,0.D0,MMAT  )
      CALL MATINI( 9, 9,0.D0,MATRCC)
      CALL MATINI(27,27,0.D0,MATREE)
      CALL MATINI(27,27,0.D0,MATRMM)
      CALL MATINI(27,27,0.D0,MATREM)
      CALL MATINI(27,27,0.D0,MATRME)
      CALL MATINI( 9,27,0.D0,MATRCE)
      CALL MATINI( 9,27,0.D0,MATRCM)
      CALL MATINI(27, 9,0.D0,MATREC)
      CALL MATINI(27, 9,0.D0,MATRMC)
      CALL MATINI(18,18,0.D0,MATRFF)
      CALL MATINI(18,27,0.D0,MATRFE)
      CALL MATINI(18,27,0.D0,MATRFM)
      CALL MATINI(27,18,0.D0,MATREF)
      CALL MATINI(27,18,0.D0,MATRMF)
      DEBUG  = .FALSE.
C
C --- TYPE DE MAILLE DE CONTACT
C
      TYPELT = 'POIN_ELEM'
      LOPTF  = OPTION.EQ.'RIGI_FROT'         
C
C --- PREPARATION DES CALCULS - INFOS SUR LA MAILLE DE CONTACT
C
      CALL MMELEM(NOMTE ,NDIM  ,NDDL  ,TYPMAE,NNE   ,
     &            TYPMAM,NNM   ,NNL   ,NBCPS ,NBDM  ,
     &            LAXIS ,LELTF )
C
C --- PREPARATION DES CALCULS - LECTURE DES COEFFICIENTS
C
      CALL MMMLCF(COEFFF,COEFCR,COEFCS,COEFCP,COEFFR,
     &            COEFFS,COEFFP,LPENAC,LPENAF)
C
C --- PREPARATION DES CALCULS - LECTURE FONCTIONNALITES AVANCEES
C
      CALL MMMLAV(LCOMPL,LFROTT,LUSURE,LDYNA ,LFOVIT,
     &            ASPERI,KAPPAN,KAPPAV,DELTAT,BETA  ,
     &            GAMMA ,THETA ,PRFUSU,CWEAR ,JEUSUP,
     &            NDEXFR,TYPBAR,TYPRAC)
C
C --- PREPARATION DES DONNEES
C
      IF (TYPELT.EQ.'POIN_ELEM') THEN
C
C ----- CALCUL DES QUANTITES
C
        CALL MMTPPE(TYPMAE,TYPMAM,NDIM  ,NNE   ,NNM   ,
     &              NNL   ,NBDM  ,DELTAT,THETA ,LAXIS ,
     &              LDYNA ,LFOVIT,TYPBAR,JEUSUP,PRFUSU,
     &              FFE   ,FFM   ,FFL   ,NORM  ,TAU1  ,
     &              TAU2  ,MPROJN,MPROJT,JACOBI,WPG   ,
     &              DLAGRF,DVITE ,COEFCR,COEFCS)
C
C ----- STATUTS
C
        CALL MMMSTA(NDIM  ,LELTF ,LPENAF,LOPTF ,DVITE ,
     &              DLAGRF,COEFFR,COEFFP,COEFFF,TAU1  ,
     &              TAU2  ,MPROJT,LCONT ,LASPE ,LADHE ,
     &              LAMBDA,RESE  ,NRESE )
C
C ----- PHASE DE CALCUL
C
        CALL MMMPHA(LOPTF ,LCONT ,LASPE ,LADHE ,TYPBAR,
     &              TYPRAC,LPENAC,LPENAF,PHASEP)
C       
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- CALCUL FORME FORTE
C
      IF (TYPELT.EQ.'POIN_ELEM') THEN
        CALL MMTFPE(PHASEP,NDIM  ,NBCPS ,NNE   ,NNM   ,
     &              NNL   ,COEFCP,COEFFP,COEFFS,COEFFF,
     &              LAMBDA,RESE  ,NRESE ,MPROJN,MPROJT,
     &              NORM  ,TAU1  ,TAU2  ,FFE   ,FFM   ,
     &              FFL   ,WPG   ,JACOBI,MATREE,MATRMM,
     &              MATREM,MATRME,MATREC,MATRMC,MATREF,
     &              MATRMF)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- CALCUL FORME FAIBLE
C      
      IF (TYPELT.EQ.'POIN_ELEM') THEN                      
        CALL MMTAPE(PHASEP,LELTF ,NDIM  ,NNL   ,NNE   ,
     &              NNM   ,NBCPS ,WPG   ,JACOBI,FFL   ,
     &              FFE   ,FFM   ,NORM  ,TAU1  ,TAU2  ,
     &              MPROJT,RESE  ,NRESE ,LAMBDA,COEFFF,
     &              COEFFS,COEFFP,COEFCP,COEFCS,MATRCC,
     &              MATRFF,MATRCE,MATRCM,MATRFE,MATRFM)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- CALCULS - FONCTIONNALITES AVANCEES
C
      CALL MMMTAV(PHASEP,LUSURE,NDIM  ,NNE   ,NNM   ,
     &            NNL   ,NBDM  ,FFE   ,FFM   ,FFL   ,
     &            WPG   ,JACOBI,COEFCR,NORM  ,MPROJT,
     &            CWEAR ,PRFUSU,MATRCC,MATRCE,MATRCM,
     &            MATREC,MATRMC,MATREE,MATRMM,MATREM,
     &            MATRME)
C
C --- MODIFICATIONS EXCLUSION/BARSOUM/RACCORD
C
      CALL MMMTEX(TYPBAR,TYPRAC,NDEXFR,NDIM  ,NNL   ,
     &            NNE   ,NNM   ,NBCPS ,WPG   ,FFL   ,
     &            COEFCS,JACOBI,MATRCC,MATRCE,MATRCM,
     &            MATREC,MATRMC,MATRFF,MATRFE,MATRFM,
     &            MATREF,MATRMF)
C
C --- ASSEMBLAGE FINAL
C
      CALL MMMTAS(NBDM  ,NDIM  ,NNL   ,NNE   ,NNM   ,
     &            NBCPS ,MATRCC,MATREE,MATRMM,MATREM,
     &            MATRME,MATRCE,MATRCM,MATRMC,MATREC,
     &            MATRFF,MATRFE,MATRFM,MATRMF,MATREF,
     &            MMAT  )

      IF((LPENAC.AND.(OPTION.EQ.'RIGI_CONT'))
     &    .OR.(LPENAF.AND.(OPTION.EQ.'RIGI_FROT')))THEN
C
C --- RECUPERATION DE LA MATRICE 'OUT' NON SYMETRIQUE
C
        CALL JEVECH('PMATUNS','E',JMATT )
C
C --- FIN DE CHANGEMENT ET COPIE
C
        DO 760 J = 1,NDDL
           DO 750 I = 1,NDDL
             IJ = J+NDDL*(I-1)
             ZR(JMATT+IJ-1) = MMAT(I,J)
             IF (DEBUG) THEN
               CALL MMMTDB(MMAT(I,J),'IJ',I,J)
             ENDIF
 750       CONTINUE
 760    CONTINUE
      ELSE
C
C --- RECUPERATION DE LA MATRICE 'OUT' SYMETRIQUE
C
        CALL JEVECH('PMATUUR','E',JMATT )
C
C --- FIN DE CHANGEMENT ET COPIE
C
        DO 761 J = 1,NDDL
           DO 751 I = 1,J
             IJ = (J-1)*J/2 + I
             ZR(JMATT+IJ-1) = MMAT(I,J)
             IF (DEBUG) THEN
               CALL MMMTDB(MMAT(I,J),'IJ',I,J)
             ENDIF
 751       CONTINUE
 761    CONTINUE
C
      ENDIF

      CALL JEDEMA()
      END
