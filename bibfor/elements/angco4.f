      SUBROUTINE ANGCO4(COOR,ZK1,IZK,ICOUDE,ZK2,RAYON,THETA,
     &ANGL1,ANGL2,ANGL3,ANGL4,PGL1,PGL2,PGL3,PGL4,OMEGA,DN1N2,EPSI,CRIT)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 08/04/2008   AUTEUR MEUNIER S.MEUNIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      REAL*8  COOR(*),RAYON,THETA,EPSI
      REAL*8  COOR3(12)
      REAL*8  PGL1(3,3),PGL2(3,3),PGL3(3,3),VALTES,R8PREM
C     ON POURRAIT SE PASSER DE PGLI
      REAL*8  ANGL1(3),ANGL2(3),ANGL3(3),RAYON1,OMEGA1
      REAL*8 RAYON2, THETA1, THETA2,ANGL4(3),PGL4(3,3),TEST
      REAL*8  ZK1(3),ZK2(3),ZKINI(3),ZK4(3),ZK3(3),EPSI2
      REAL*8  OMEGA,DN1N2,OMEGA2,COO1(3),COO2(3),DN1N4,DN3N2
      CHARACTER*8  CRIT
C ......................................................................
C
C    - FONCTION REALISEE:  CALCUL DE LA GEOMETRIE COUDE
C                          TUYAU
C    - ARGUMENTS
C        DONNEES:      COOR       -->  CORDONNEES DE SNOEUDS
C         SORTIE:      ICOUDE      =0 DROIT =1 COUDE
C         SORTIE:      ANGL1,2,3
C ......................................................................
C
      INTEGER    ICOUDE,I,IZK,ICOUD1, ICOUD2

C     POUR VERIFICATIONS (PAS TRES EXIGEANTES) SUR LA GEOMETRIE
C     SINON, IL FAUDRAIT INTRODUIRE UN AUTRE MOT CLE PRECISON2
C     DIFFERENT DE PRECISION

      EPSI2 = 1.D-4
C
C     POINTS 1 4 3

      DO 1 I=1,3
         COOR3(I)=COOR(I)
         COOR3(3+I)=COOR(9+I)
         COOR3(6+I)=COOR(6+I)
         ZKINI(I)=ZK1(I)
1     CONTINUE


       CALL ANGCOU(COOR3,ZKINI,IZK,ICOUD1,ZK4,RAYON1,THETA1,
     & ANGL1,ANGL4,ANGL3,PGL1,PGL4,PGL3,OMEGA1,DN1N4,EPSI,CRIT,
     & ZK3)

C     POINTS 3 2 4

      DO 2 I=1,3
         COOR3(I)  =COOR(6+I)
         COOR3(3+I)=COOR(3+I)
         COOR3(6+I)=COOR(9+I)
         ZKINI(I)=ZK3(I)
2     CONTINUE

       CALL ANGCOU(COOR3,ZKINI,IZK,ICOUD2,ZK2,RAYON2,THETA2,
     & ANGL3,ANGL2,ANGL4,PGL3,PGL2,PGL4,OMEGA2,DN3N2,EPSI,CRIT,
     & ZK4)

      DO 3 I=1,3
         COO1(I)  =COOR(I)
         COO2(I) = COOR(3+I)
3     CONTINUE
      DN1N2 = SQRT( ( COO1(1)-COO2(1) )**2 +
     &              ( COO1(2)-COO2(2) )**2 +
     &              ( COO1(3)-COO2(3) )**2 )

      IF (ICOUD2.NE.ICOUD1) THEN
         CALL ASSERT(.FALSE.)
      ELSE
         ICOUDE=ICOUD2
         RAYON=RAYON2
      ENDIF

      VALTES = ABS(RAYON1)
      IF (CRIT.EQ.'RELATIF') THEN
         IF (VALTES.LT.R8PREM()) THEN
            TEST = R8PREM()
         ELSE
            TEST = EPSI2*VALTES
         ENDIF
      ELSEIF (CRIT.EQ.'ABSOLU') THEN
         TEST = EPSI2
      ENDIF

      IF (ABS(RAYON2-RAYON1).GT.TEST) THEN
         CALL ASSERT(.FALSE.)
      ELSE
         RAYON=RAYON2
      ENDIF

      VALTES = ABS(THETA1)
      IF (CRIT.EQ.'RELATIF') THEN
         IF (VALTES.LT.R8PREM()) THEN
            TEST = R8PREM()
         ELSE
            TEST = EPSI2*VALTES
         ENDIF
      ELSEIF (CRIT.EQ.'ABSOLU') THEN
         TEST = EPSI2
      ENDIF

      IF (ABS(THETA2-THETA1).GT.TEST) THEN
         CALL ASSERT(.FALSE.)
      ELSE
         THETA=1.5D0*THETA1
      ENDIF

      VALTES = ABS(OMEGA1)
      IF (CRIT.EQ.'RELATIF') THEN
         IF (VALTES.LT.R8PREM()) THEN
            TEST = R8PREM()
         ELSE
            TEST = EPSI2*VALTES
         ENDIF
      ELSEIF (CRIT.EQ.'ABSOLU') THEN
         TEST = EPSI2
      ENDIF

      IF (ABS(OMEGA2-OMEGA1).GT.TEST) THEN
         CALL ASSERT(.FALSE.)
      ELSE
         OMEGA=OMEGA1
      ENDIF
      END
