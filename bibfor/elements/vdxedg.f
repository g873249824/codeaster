      SUBROUTINE VDXEDG(NOMTE,OPTION,XI,NB1,NPGSR,EDGPG,EFFGT)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 05/02/2013   AUTEUR LEBOUVIER F.LEBOUVIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      REAL*8 EDGPG(*)
C
C CALCUL DE L'OPTION EDGE_ELGA POUR LES COQUE_3D
C
      CHARACTER*16 NOMTE
      CHARACTER*(*) OPTION
      INTEGER NB1 ,NB2  ,NPGSR,NPGSN
      INTEGER IRET,IRET1,IRET2,IRET3
C-----------------------------------------------------------------------
      INTEGER I ,INTE ,INTSN ,INTSR ,J
      INTEGER JCARA ,JDEPG ,K ,K1 ,KWGT ,LZI
      INTEGER LZR 
C-----------------------------------------------------------------------
      REAL*8 XI(3,9)
      REAL*8 VECTA(9,2,3),VECTN(9,3),VECTPT(9,2,3)
      REAL*8 VECTG(2,3),VECTT(3,3)
      REAL*8 HSFM(3,9),HSS(2,9),HSJ1M(3,9),HSJ1S(2,9)
      REAL*8 BTDM(4,3,42), BTDS(4,2,42)
      REAL*8 BTDM1(4,3,42),BTDS1(4,2,42)
      REAL*8 HSF(3,9),HSJ1FX(3,9),WGT
      REAL*8 BTDF(3,42), BTILD(5,42)
      REAL*8 BTDF1(3,42),BTILD1(5,42)
      REAL*8 DEPL(42),ROTF(9)
      REAL*8 EFFGT(8,9)
      REAL*8 EPSIF(5),EPSIM(5)
      REAL*8 EPAIS
      REAL*8 ZERO,UN
C
C --- INITIALISATION
C
      ZERO = 0.0D0
      UN   = 1.0D0
      CALL R8INIR ( 4 * 3 * 42 , 0.D0 , BTDM1 , 1 )
      CALL R8INIR ( 4 * 2 * 42 , 0.D0 , BTDS1 , 1 )
      CALL R8INIR ( 3 * 42     , 0.D0 , BTDF1 , 1 )
C
C     RECUPERATION DES OBJETS
C
      CALL JEVETE('&INEL.'//NOMTE(1:8)//'.DESI',' ', LZI )
      NB1  =ZI(LZI-1+1)
      NB2  =ZI(LZI-1+2)
      NPGSR=ZI(LZI-1+3)
      NPGSN=ZI(LZI-1+4)
C
      CALL JEVETE('&INEL.'//NOMTE(1:8)//'.DESR',' ', LZR )
C
      CALL JEVECH ('PCACOQU' , 'L' , JCARA)
      EPAIS = ZR(JCARA)
C
      CALL VECTAN(NB1,NB2,XI,ZR(LZR),VECTA,VECTN,VECTPT)
C
      CALL JEVECH('PDEPLAR', 'L', JDEPG)
C
      CALL TRNDGL(NB2,VECTN,VECTPT,ZR(JDEPG),DEPL,ROTF)
C
      KWGT=0
C
C  ---- MEMBRANE ET CISAILLEMENT
C
        DO 150 INTSR=1,NPGSR
          CALL MAHSMS(0,NB1,XI,UN,INTSR,ZR(LZR),EPAIS,VECTN,
     &                                       VECTG,VECTT,HSFM,HSS)
C
          CALL HSJ1MS(EPAIS,VECTG,VECTT,HSFM,HSS,HSJ1M,HSJ1S)
C
          CALL BTDMSR(NB1,NB2,UN,INTSR,ZR(LZR),EPAIS,VECTPT,
     &                                       HSJ1M,HSJ1S,BTDM,BTDS)
 150    CONTINUE
C
C  ---- FLEXION
C
        DO 200 INTSN=1,NPGSN
C
          CALL MAHSF(1,NB1,XI,UN,INTSN,ZR(LZR),EPAIS,VECTN,
     &                                             VECTG,VECTT,HSF)
C
          CALL HSJ1F(INTSN,ZR(LZR),EPAIS,VECTG,VECTT,HSF,
     &                                                  KWGT,HSJ1FX,WGT)
C
          CALL BTDFN(1,NB1,NB2,UN,INTSN,ZR(LZR),EPAIS,VECTPT,
     &                                                      HSJ1FX,BTDF)
C
C     CALCUL DE BTDMN, BTDSN : M=MEMBRANE , S=CISAILLEMENT , N=NORMAL
C     FORMATION DE BTILD
C
        CALL BTDMSN(1,NB1,INTSN,NPGSR,ZR(LZR),BTDM ,BTDF1,BTDS1,BTILD1)
        CALL BTDMSN(1,NB1,INTSN,NPGSR,ZR(LZR),BTDM1,BTDF, BTDS, BTILD)
C
      DO 10 I=1,5
         EPSIM(I)=ZERO
      DO 20 K=1,5*NB1+2
         EPSIM(I)=EPSIM(I)+BTILD1(I,K)*DEPL(K)
 20   CONTINUE
 10   CONTINUE
C
      DO 30 I=1,5
         EPSIF(I)=ZERO
      DO 40 K=1,5*NB1+2
         EPSIF(I)=EPSIF(I)+BTILD(I,K)*DEPL(K)
 40   CONTINUE
 30   CONTINUE
      EPSIF(1)=EPSIF(1)/EPAIS
      EPSIF(2)=EPSIF(2)/EPAIS
      EPSIF(3)=EPSIF(3)/EPAIS
      EPSIF(4)=EPSIF(4)
      EPSIF(5)=EPSIF(5)
C
C STOCKAGE DES DEFORMATIONS DE MEMBRANE , FLEXION ET DE CISAILLMEENT
C  DANS EDGPG
C
C --- DEFOMATIONS DE MEMBRANE
      EDGPG((INTSN-1)*8+1)=EPSIM(1)
      EDGPG((INTSN-1)*8+2)=EPSIM(2)
      EDGPG((INTSN-1)*8+3)=EPSIM(3)
C --- DEFORMATION DE FLEXION
      EDGPG((INTSN-1)*8+4)=EPSIF(1)
      EDGPG((INTSN-1)*8+5)=EPSIF(2)
      EDGPG((INTSN-1)*8+6)=EPSIF(3)
C --- DEFORMATION DE CISAILLEMENT
      EDGPG((INTSN-1)*8+7)=EPSIF(4)
      EDGPG((INTSN-1)*8+8)=EPSIF(5)

 200    CONTINUE
      IF(OPTION(1:9).EQ.'DEGE_ELNO') THEN
        CALL VDDEGE(NOMTE,NB1,NPGSR,ZR(LZR),EDGPG,EFFGT)
      ENDIF
C
C --- DETERMINATION DES REPERES LOCAUX DE L'ELEMENT AUX POINTS
C --- D'INTEGRATION ET STOCKAGE DE CES REPERES DANS LE VECTEUR .DESR :
C     --------------------------------------------------------------
      K = 0
      DO 110 INTSR=1,NPGSR
        CALL VECTGT(0,NB1,XI,ZERO,INTSR,ZR(LZR),EPAIS,VECTN,VECTG,VECTT)
C
        DO 120 J = 1, 3
          DO 130 I = 1, 3
            K = K + 1
            ZR(LZR+2000+K-1) = VECTT(I,J)
 130      CONTINUE
 120    CONTINUE
 110  CONTINUE
C
      END
