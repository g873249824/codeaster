      SUBROUTINE TE0443(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 11/03/2013   AUTEUR IDOUX L.IDOUX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================

      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*16 OPTION,NOMTE
C......................................................................
C
C    - FONCTION REALISEE: CHANGEMENT DE REPERE POUR LES COQUE_3D
C
C    - ARGUMENTS:
C        DONNEES:      OPTION       -->  OPTION DE CALCUL
C                        'REPE_TENS'  :  TENSEURS
C                        'REPE_GENE'  :  QUANTITES GENERALISEES
C                      NOMTE        -->  NOM DU TYPE ELEMENT
C ......................................................................


      INTEGER       NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDX,JGANO,IRET(4)
      INTEGER       JGEOM,JIN,JOUT,JANG,NP,I,ITAB(7),IRET1,IRET2,NBSP
      INTEGER       VALI(2)
C-----------------------------------------------------------------------
      INTEGER INTSN ,J ,JCARA ,K ,LZI ,LZR ,NB1 
      INTEGER NB2 ,NCMP ,NCPMAX ,NPGSN ,NPTMAX ,NSPMAX 
      REAL*8 EPAIS ,ZERO 
C-----------------------------------------------------------------------
      PARAMETER    (NPTMAX=9,NCPMAX=8,NSPMAX=162)
      REAL*8         ALPHA, BETA, S
      REAL*8        MATVN1(2,2,10), MATVG1(2,2,10)
      REAL*8        MATVN2(2,2,10), MATVG2(2,2,10)
      REAL*8        VECTA(9,2,3),VECTN(9,3),VECTPT(9,2,3)
      REAL*8        VECTG(2,3),VECTT(3,3),CONIN(NPTMAX*NCPMAX*NSPMAX)
      REAL*8        REP
      CHARACTER*8   PAIN, PAOUT
      ZERO = 0.0D0
C
      CALL JEVECH ('PCACOQU' , 'L' , JCARA)
      EPAIS = ZR(JCARA)
C
      IF (OPTION.NE.'REPE_TENS' .AND.
     &    OPTION.NE.'REPE_GENE') THEN
CC OPTION DE CALCUL INVALIDE
        CALL ASSERT(.FALSE.)
      END IF
C
      IF (OPTION.EQ.'REPE_TENS') THEN
        NCMP = 6
        CALL TECACH('ONO','PCOGAIN','L',7,ITAB,IRET(1))
        CALL TECACH('ONO','PCONOIN','L',7,ITAB,IRET(2))
        CALL TECACH('ONO','PDEGAIN','L',7,ITAB,IRET(3))
        CALL TECACH('ONO','PDENOIN','L',7,ITAB,IRET(4))
        IRET1 = IRET(1) + IRET(2) + IRET(3) + IRET(4)
        CALL ASSERT(IRET1.EQ.6)
C
        IF(IRET(1).EQ.0) THEN
           PAIN  = 'PCOGAIN'
           PAOUT = 'PCOGAOUT'
        ELSE IF(IRET(2).EQ.0) THEN
           PAIN  = 'PCONOIN'
           PAOUT = 'PCONOOUT'
        ELSE IF(IRET(3).EQ.0) THEN
           PAIN  = 'PDEGAIN'
           PAOUT = 'PDEGAOUT'
        ELSE IF(IRET(4).EQ.0) THEN
           PAIN  = 'PDENOIN'
           PAOUT = 'PDENOOUT'
        ENDIF
C
      ELSE IF (OPTION.EQ.'REPE_GENE') THEN
        NCMP = 8
        CALL TECACH('ONO','PEFGAIN','L',7,ITAB,IRET(1))
        CALL TECACH('ONO','PEFNOIN','L',7,ITAB,IRET(2))
        CALL TECACH('ONO','PDGGAIN','L',7,ITAB,IRET(3))
        CALL TECACH('ONO','PDGNOIN','L',7,ITAB,IRET(4))
        IRET1 = IRET(1) + IRET(2) + IRET(3) + IRET(4)
        CALL ASSERT(IRET1.EQ.6)
C
        IF(IRET(1).EQ.0) THEN
           PAIN  = 'PEFGAIN'
           PAOUT = 'PEFGAOUT'
        ELSE IF(IRET(2).EQ.0) THEN
           PAIN  = 'PEFNOIN'
           PAOUT = 'PEFNOOUT'
        ELSE IF(IRET(3).EQ.0) THEN
           PAIN  = 'PDGGAIN'
           PAOUT = 'PDGGAOUT'
        ELSE IF(IRET(4).EQ.0) THEN
           PAIN  = 'PDGNOIN'
           PAOUT = 'PDGNOOUT'
        ENDIF
      ENDIF
C
C  APPEL A ELREF4 POUR RECUPERER NNO ET NPG
C
      CALL ELREF4(' ','MASS',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDX,JGANO)
C
      IF (PAIN(4:5).EQ.'NO') THEN
        NP = NNO
      ELSE IF (PAIN(4:5).EQ.'GA') THEN
        NP = NPG
      ENDIF

      CALL JEVECH('PGEOMER','L',JGEOM)
      CALL JEVECH('PANGREP','L',JANG)
      CALL JEVECH(PAIN,'L',JIN)
      CALL JEVECH(PAOUT,'E',JOUT)
      CALL TECACH('OOO',PAIN,'L',7,ITAB,IRET2)
      NBSP = ITAB(7)
      IF((NBSP.NE.1).AND.(MOD(NBSP,3).NE.0)) THEN
        CALL U2MESI('F','ELEMENTS5_54',1,NBSP)
      END IF

      ALPHA = ZR(JANG)
      BETA  = ZR(JANG+1)
      REP   = ZR(JANG+2)
      CALL JEVETE('&INEL.'//NOMTE(1:8)//'.DESI',' ', LZI )
      NB1  =ZI(LZI-1+1)
      NB2  =ZI(LZI-1+2)
      NPGSN=ZI(LZI-1+4)
      CALL JEVETE('&INEL.'//NOMTE(1:8)//'.DESR',' ', LZR )
C
C ---  CALCUL DES MATRICES DE PASSAGE GLOBAL-INTRINSEQUE
C
      CALL VECTAN(NB1,NB2,ZR(JGEOM),ZR(LZR),VECTA,VECTN,VECTPT)
C
C --- DETERMINATION DES REPERES  LOCAUX DE L'ELEMENT AUX POINTS
C --- D'INTEGRATION ET STOCKAGE DE CES REPERES DANS LE VECTEUR .DESR :
C     --------------------------------------------------------------
      K = 0
      DO 110 INTSN=1,NPGSN
        CALL VECTGT(1,NB1,ZR(JGEOM),ZERO,INTSN,ZR(LZR),EPAIS,VECTN,
     &              VECTG,VECTT)
        DO 120 J = 1, 3
          DO 130 I = 1, 3
            K = K + 1
            ZR(LZR+2000+K-1) = VECTT(I,J)

 130      CONTINUE
 120    CONTINUE
 110  CONTINUE
C
      CALL ASSERT(NCMP.LE.NCPMAX)
      CALL ASSERT(NP.LE.NPTMAX)
      VALI(1)=NSPMAX
      VALI(2)=NBSP
      IF(NBSP.GT.NSPMAX)CALL U2MESI('F','ELEMENTS5_4',2,VALI)
C
C     LE TABLEAU CONIN A ETE ALLOUE DE FACON STATIQUE POUR
C     OPTIMISER LE CPU CAR LES APPELS A WKVECT DANS LES TE SONT COUTEUX.
C
      CALL VDREPE( NOMTE,MATVN1,MATVG1)
C
C  ON PREND L INVERSE DES MATRICES
C  (CAR ON REVIENT EN REPERE INTRINSEQUE)
C
      IF(REP.EQ.0.D0.OR.REP.EQ.2) THEN
        IF (PAIN(4:5).EQ.'NO') THEN
          DO 8 I=1,NP
            S = MATVN1(1,2,I)
            MATVN1(2,1,I) =  S
            MATVN1(1,2,I) = -S
8         CONTINUE
        ELSE IF (PAIN(4:5).EQ.'GA') THEN
          DO 9 I=1,NP
            S = MATVG1(1,2,I)
            MATVG1(2,1,I) =  S
            MATVG1(1,2,I) = -S
9         CONTINUE
        ENDIF
      ENDIF

      IF(REP.EQ.0.D0) THEN

C --- PASSAGE DES CONTRAINTES DU REPERE LOCAL 1
C --- A L'ELEMENT AU REPERE INTRINSEQUE DE LA COQUE
C     ---------------------------------------
        IF (OPTION.EQ.'REPE_TENS' ) THEN
          IF (PAIN(4:5).EQ.'NO') THEN
            CALL VDSIRO(NP,NBSP,MATVN1,'IU','N',ZR(JIN),CONIN)
          ELSE IF (PAIN(4:5).EQ.'GA') THEN
            CALL VDSIRO(NP,NBSP,MATVG1,'IU','G',ZR(JIN),CONIN)
          ENDIF
        ELSE IF (OPTION.EQ.'REPE_GENE' ) THEN
          IF (PAIN(4:5).EQ.'NO') THEN
            CALL VDEFRO(NP,MATVN1,ZR(JIN),CONIN)
          ELSE IF (PAIN(4:5).EQ.'GA') THEN
            CALL VDEFRO(NP,MATVG1,ZR(JIN),CONIN)
          ENDIF
        ENDIF
C
C ---  CALCUL DES MATRICES DE PASSAGE DU CHGT DE REPERE
C       -----------------------------------------------
        CALL JEVETE('&INEL.'//NOMTE(1:8)//'.DESI',' ', LZI )
        CALL JEVETE('&INEL.'//NOMTE(1:8)//'.DESR',' ', LZR )
        CALL VDREP2(ALPHA,BETA,ZI(LZI),ZR(LZR),MATVN2,MATVG2)

C ---   PASSAGE DES QUANTITES DU REPERE INTRINSEQUE
C ---   A L'ELEMENT AU REPERE LOCAL DE LA COQUE
C       ---------------------------------------
        IF (OPTION.EQ.'REPE_TENS' ) THEN
          IF (PAIN(4:5).EQ.'NO') THEN
            CALL VDSIRO(NP,NBSP,MATVN2,'IU','N',CONIN,ZR(JOUT))
          ELSE IF (PAIN(4:5).EQ.'GA') THEN
            CALL VDSIRO(NP,NBSP,MATVG2,'IU','G',CONIN,ZR(JOUT))
          ENDIF
        ELSE IF (OPTION.EQ.'REPE_GENE' ) THEN
          IF (PAIN(4:5).EQ.'NO') THEN
            CALL VDEFRO(NP,MATVN2,CONIN,ZR(JOUT))
          ELSE IF (PAIN(4:5).EQ.'GA') THEN
            CALL VDEFRO(NP,MATVG2,CONIN,ZR(JOUT))
          ENDIF
        ENDIF
C
C --- PASSAGE DES CONTRAINTES DU REPERE INTRINSEQUE
C --- A L'ELEMENT AU REPERE LOCAL 1 DE LA COQUE
C     REPERE = 'COQUE_INTR_UTIL'
C     ---------------------------------------
      ELSE IF(REP.EQ.1.D0) THEN

C --- PASSAGE DES CONTRAINTES DU REPERE INTRINSEQUE 
C --- A L'ELEMENT AU REPERE LOCAL 1 DE LA COQUE
C     REPERE = 'COQUE_INTR_UTIL'
C     ---------------------------------------
        IF (OPTION.EQ.'REPE_TENS' ) THEN
          IF (PAIN(4:5).EQ.'NO') THEN
            CALL VDSIRO(NP,NBSP,MATVN1,'IU','N',ZR(JIN),ZR(JOUT))
          ELSE IF (PAIN(4:5).EQ.'GA') THEN
            CALL VDSIRO(NP,NBSP,MATVG1,'IU','G',ZR(JIN),ZR(JOUT))
          ENDIF
        ELSE IF (OPTION.EQ.'REPE_GENE' ) THEN
          IF (PAIN(4:5).EQ.'NO') THEN
            CALL VDEFRO(NP,MATVN1,ZR(JIN),ZR(JOUT))
          ELSE IF (PAIN(4:5).EQ.'GA') THEN
            CALL VDEFRO(NP,MATVG1,ZR(JIN),ZR(JOUT))
          ENDIF
        ENDIF
C
C --- PASSAGE DES CONTRAINTES DU REPERE LOCAL 1
C --- A L'ELEMENT AU REPERE INTRINSEQUE DE LA COQUE
C     REPERE = 'COQUE_UTIL_INTR'
C     ---------------------------------------
      ELSE IF(REP.EQ.2.D0) THEN
        IF (OPTION.EQ.'REPE_TENS' ) THEN
          IF (PAIN(4:5).EQ.'NO') THEN
            CALL VDSIRO(NP,NBSP,MATVN1,'IU','N',ZR(JIN),ZR(JOUT))
          ELSE IF (PAIN(4:5).EQ.'GA') THEN
            CALL VDSIRO(NP,NBSP,MATVG1,'IU','G',ZR(JIN),ZR(JOUT))
          ENDIF
        ELSE IF (OPTION.EQ.'REPE_GENE' ) THEN
          IF (PAIN(4:5).EQ.'NO') THEN
            CALL VDEFRO(NP,MATVN1,ZR(JIN),ZR(JOUT))
          ELSE IF (PAIN(4:5).EQ.'GA') THEN
            CALL VDEFRO(NP,MATVG1,ZR(JIN),ZR(JOUT))
          ENDIF
        ENDIF
      ENDIF

      END
