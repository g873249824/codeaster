      SUBROUTINE TE0061(OPTION,NOMTE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ELEMENTS  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     BUT: CALCUL DU SECOND MEMBRE ELEMENTAIRE EN THERMIQUE CORRESPON-
C          DANT A UN PROBLEME TRANSITOIRE
C          ELEMENTS ISOPARAMETRIQUES 3D

C          OPTION : 'CHAR_THER_EVOL'

C     ENTREES  ---> OPTION : OPTION DE CALCUL
C              ---> NOMTE  : NOM DU TYPE ELEMENT
C----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE


      INCLUDE 'jeveux.h'

      INTEGER NBRES
      PARAMETER (NBRES=4)
      CHARACTER*8 NOMRES(NBRES)
      INTEGER ICODRE(NBRES)
      CHARACTER*16 NOMTE,OPTION,PHENOM
      REAL*8 VALRES(NBRES),VALPAR(1),THETA,LAMBOR(3),POINT(3),DFDX(27),
     &       DFDY(27),DFDZ(27),TEM,POIDS,DIRE(3),ORIG(3),
     &       LAMBDA,FLUGLO(3),FLULOC(3),P(3,3),ANGL(3),
     &       ZERO,DELTAT,CP,R8DGRD,
     &       ALPHA,BETA,DTEMDX,DTEMDY,DTEMDZ
      INTEGER JGANO,IPOIDS,IVF,IDFDE,IGEOM,IMATE,NNO,
     &        KP,NPG1,I,ITEMP,ITPS,N1,N2,NDIM,
     &        IVECTT,ICAMAS,L,NUNO,NNOS,NPG2,IPOID2,IVF2,
     &        IDFDE2
      LOGICAL ANISO,GLOBAL,LTEATT

C====
C 1.1 PREALABLES: RECUPERATION ADRESSES FONCTIONS DE FORMES...
C====
      ZERO = 0.0D0

      IF ( (LTEATT(' ','LUMPE','OUI')).AND.
     &    (NOMTE(6:10).NE.'PYRAM')) THEN
         CALL ELREF4(' ','NOEU',NDIM,NNO,NNOS,NPG2,IPOID2,IVF2,
     &            IDFDE2,JGANO)
      ELSE
         CALL ELREF4(' ','MASS',NDIM,NNO,NNOS,NPG2,IPOID2,IVF2,
     &           IDFDE2, JGANO)
      ENDIF

      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG1,IPOIDS,IVF,IDFDE,JGANO)

C====
C 1.2 PREALABLES LIES AUX RECHERCHES DE DONNEES GENERALES
C====
      CALL JEVECH('PGEOMER','L',IGEOM)
      CALL JEVECH('PMATERC','L',IMATE)
      CALL JEVECH('PVECTTR','E',IVECTT)
      CALL JEVECH('PTEMPER','L',ITEMP)
      CALL JEVECH('PTEMPSR','L',ITPS)
      VALPAR(1) = ZR(ITPS)
      DELTAT = ZR(ITPS+1)
      THETA = ZR(ITPS+2)
      CALL RCCOMA(ZI(IMATE),'THER',PHENOM,ICODRE)

C====
C 1.3 PREALABLES LIES A LA RECUPERATION DES DONNEES MATERIAUX
C====
      IF (PHENOM.EQ.'THER') THEN
        NOMRES(1) = 'LAMBDA'
        NOMRES(2) = 'RHO_CP'
        ANISO = .FALSE.
        CALL RCVALB('FPG1',1,1,'+',ZI(IMATE),' ',PHENOM,1,'INST',
     &               VALPAR,2,NOMRES,VALRES,ICODRE,1)
        LAMBDA = VALRES(1)
        CP = VALRES(2)
      ELSE IF (PHENOM.EQ.'THER_ORTH') THEN
        NOMRES(1) = 'LAMBDA_L'
        NOMRES(2) = 'LAMBDA_T'
        NOMRES(3) = 'LAMBDA_N'
        NOMRES(4) = 'RHO_CP'
        ANISO = .TRUE.
        CALL RCVALB('FPG1',1,1,'+',ZI(IMATE),' ',PHENOM,1,'INST',
     &              VALPAR,4,NOMRES,VALRES,ICODRE,1)
        LAMBOR(1) = VALRES(1)
        LAMBOR(2) = VALRES(2)
        LAMBOR(3) = VALRES(3)
        CP = VALRES(4)
      ELSE
        CALL U2MESS('F','ELEMENTS2_63')
      END IF

C====
C 1.4 PREALABLES LIES A L'ANISOTROPIE
C====
      IF (ANISO) THEN
        CALL JEVECH('PCAMASS','L',ICAMAS)
        IF (ZR(ICAMAS).GT.ZERO) THEN
          GLOBAL = .TRUE.
          ANGL(1) = ZR(ICAMAS+1)*R8DGRD()
          ANGL(2) = ZR(ICAMAS+2)*R8DGRD()
          ANGL(3) = ZR(ICAMAS+3)*R8DGRD()
          CALL MATROT(ANGL,P)
        ELSE
          GLOBAL = .FALSE.
          ALPHA = ZR(ICAMAS+1)*R8DGRD()
          BETA = ZR(ICAMAS+2)*R8DGRD()
          DIRE(1) = COS(ALPHA)*COS(BETA)
          DIRE(2) = SIN(ALPHA)*COS(BETA)
          DIRE(3) = -SIN(BETA)
          ORIG(1) = ZR(ICAMAS+4)
          ORIG(2) = ZR(ICAMAS+5)
          ORIG(3) = ZR(ICAMAS+6)
        END IF
      END IF

C====
C 3.1 CALCULS TERMES DE RIGIDITE
C    POUR LES ELEMENTS LUMPES ET NON LUMPES
C====

C ---   BOUCLE SUR LES POINTS DE GAUSS :
C       ------------------------------
        DO 160 KP = 1,NPG1

          L = (KP-1)*NNO
          CALL DFDM3D ( NNO, KP, IPOIDS, IDFDE,
     &                  ZR(IGEOM), DFDX, DFDY, DFDZ, POIDS )

          DTEMDX = ZERO
          DTEMDY = ZERO
          DTEMDZ = ZERO
          DO 110 I = 1,NNO
C CALCUL DE GRAD(T-)
            DTEMDX = DTEMDX + ZR(ITEMP+I-1)*DFDX(I)
            DTEMDY = DTEMDY + ZR(ITEMP+I-1)*DFDY(I)
            DTEMDZ = DTEMDZ + ZR(ITEMP+I-1)*DFDZ(I)
  110     CONTINUE

          IF (.NOT.ANISO) THEN
            FLUGLO(1) = LAMBDA*DTEMDX
            FLUGLO(2) = LAMBDA*DTEMDY
            FLUGLO(3) = LAMBDA*DTEMDZ
          ELSE
            IF (.NOT.GLOBAL) THEN
              POINT(1) = ZERO
              POINT(2) = ZERO
              POINT(3) = ZERO
              DO 130 NUNO = 1,NNO
                POINT(1) = POINT(1) + ZR(IVF+L+NUNO-1)*
     &                     ZR(IGEOM+3*NUNO-3)
                POINT(2) = POINT(2) + ZR(IVF+L+NUNO-1)*
     &                     ZR(IGEOM+3*NUNO-2)
                POINT(3) = POINT(3) + ZR(IVF+L+NUNO-1)*
     &                     ZR(IGEOM+3*NUNO-1)
  130         CONTINUE
              CALL UTRCYL(POINT,DIRE,ORIG,P)
            END IF
            FLUGLO(1) = DTEMDX
            FLUGLO(2) = DTEMDY
            FLUGLO(3) = DTEMDZ
            N1 = 1
            N2 = 3
            CALL UTPVGL(N1,N2,P,FLUGLO,FLULOC)
            FLULOC(1) = LAMBOR(1)*FLULOC(1)
            FLULOC(2) = LAMBOR(2)*FLULOC(2)
            FLULOC(3) = LAMBOR(3)*FLULOC(3)
            N1 = 1
            N2 = 3
            CALL UTPVLG(N1,N2,P,FLULOC,FLUGLO)
          END IF

C --- AFFECTATION DES TERMES DE RIGIDITE :
C     ----------------------------------
          DO 140 I = 1,NNO
            ZR(IVECTT+I-1) = ZR(IVECTT+I-1)
     &                  - POIDS* ((1.0D0-THETA)*
     &                 (DFDX(I)*FLUGLO(1)+DFDY(I)*FLUGLO(2)+
     &                 DFDZ(I)*FLUGLO(3)))
  140     CONTINUE
  160   CONTINUE

C====
C 3.2 CALCULS TERMES DE MASSE
C    POUR LES ELEMENTS LUMPES
C====

C ---   BOUCLE SUR LES POINTS DE GAUSS :
C       ------------------------------
        DO 210 KP = 1,NPG2

          L = (KP-1)*NNO
          CALL DFDM3D ( NNO, KP, IPOID2, IDFDE2,
     &                  ZR(IGEOM), DFDX, DFDY, DFDZ, POIDS )
          TEM = ZERO
          DO 170 I = 1,NNO
C CALCUL DE T-
            TEM = TEM + ZR(ITEMP+I-1)*ZR(IVF2+L+I-1)
  170     CONTINUE

C --- AFFECTATION DU TERME DE MASSE :
C     -----------------------------
          DO 190 I = 1,NNO
            ZR(IVECTT+I-1) = ZR(IVECTT+I-1)
     &             + POIDS*CP/DELTAT*ZR(IVF2+L+I-1)*TEM
  190     CONTINUE
  210   CONTINUE


      END
