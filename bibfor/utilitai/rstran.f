      SUBROUTINE RSTRAN(INTERP,RESU,MOTCLE,IOCC,KDISC,KRANG,NBDISC,IER)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*(*) INTERP,MOTCLE
      CHARACTER*19 RESU,KDISC,KRANG
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 27/08/2012   AUTEUR ALARCON A.ALARCON 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET

C     POUR INTERP = 'NON'
C        RECUPERATION DES DISCRETISATIONS ET DES NUMEROS DE RANGEMENT 
C        ASSOCIES DANS LA STRUCTURE DE DONNEES "RESU"
C     POUR INTERP = 'LIN', 'LOG', ...
C        RECUPERATION DES INSTANTS UTILISATEURS
C     ------------------------------------------------------------------
C IN  : INTERP : TYPE D'INTERPOLATION
C IN  : RESU   : NOM DE LA STRUCTURE DE DONNEES
C IN  : MOTCLE : MOT CLE FACTEUR
C IN  : IOCC   : NUMERO D'OCCURENCE
C IN  : KDISC  : NOM JEVEUX POUR STOCKER LES INSTANTS
C IN  : KRANG  : NOM JEVEUX POUR STOCKER LES NUMEROS DE RANGEMENT
C OUT : NBDISC : NOMBRE D'INSTANTS/FREQUENCES TROUVES
C OUT : IER    : CODE RETOUR, = 0    : OK
C                             = 100  : PLUSIEURS CHAMPS TROUVES
C                             = 110  : AUCUN CHAMP TROUVE
C                             SINON  : NOOK
C     ------------------------------------------------------------------
      INTEGER VALI
      REAL*8 VALR
      CHARACTER*4 TYPE
      CHARACTER*8 K8B,CRIT
      CHARACTER*16 NOMCMD
      CHARACTER*19 LISTR
      CHARACTER*8 KVAL
      COMPLEX*16 CVAL
      CHARACTER*24 TYPRES
      INTEGER      IARG
C------------------------------------------------------------------
C
C-----------------------------------------------------------------------
      INTEGER I ,IBID ,IER ,IER1 ,IOCC ,IORD ,IRET 
      INTEGER IVAL ,JBID ,JDISC ,JORDR ,JRANG ,L ,LACCR 
      INTEGER LDISC ,LLI ,LT ,N ,NBI ,NBI2 ,NBDISC 
      INTEGER NBTROU ,NNO ,NTO ,NUTROU 
      REAL*8 EPSI ,RBID ,TUSR 
C-----------------------------------------------------------------------
      CALL JEMARQ()
      IER = 0
      NBDISC = 0
      TYPE = 'R8  '
      CALL GETRES(K8B,K8B,NOMCMD)
      CALL GETVR8(MOTCLE,'PRECISION',IOCC,IARG,1,EPSI,N)
      CALL GETVTX(MOTCLE,'CRITERE',IOCC,IARG,1,CRIT,N)
C
      CALL JEEXIN(RESU//'.DISC',IER1)
      IF (IER1.GT.0) THEN
C     --- CAS D'UNE SD DYNA_GENE (HARM_GENE OU TRAN_GENE)
        CALL JEVEUO(RESU//'.DISC','L',LDISC)
        CALL JELIRA(RESU//'.DISC','LONMAX',NBI,K8B)
      ELSE
C     --- CAS D'UNE SD RESULTAT
        CALL RSLIPA(RESU,'INST','&&RSTRAN.LIINST',LDISC,NBI)
      ENDIF
C
      CALL JEEXIN(RESU//'.ORDR',IRET)
      IF (IRET.EQ.0) THEN
        CALL U2MESS('F','ALGORITH17_26')
C        CALL WKVECT('&&RSTRAN.ORDR','V V I',NBI,JORDR)
C        DO 10 I = 1,NBI
C          ZI(JORDR+I-1) = I
C   10   CONTINUE
      ELSE
        CALL JEVEUO(RESU//'.ORDR','L',JORDR)
        CALL JELIRA(RESU//'.ORDR','LONUTI',NBI2,K8B)
        IF (NBI.NE.NBI2) CALL U2MESS('F','ALGORITH17_27')
      END IF
C
C     --- RECHERCHE A PARTIR D'UN NUMERO D'ORDRE ---
C
      CALL GETVIS(MOTCLE,'NUME_ORDRE',IOCC,IARG,0,IBID,NNO)
      IF (NNO.NE.0) THEN
        NBDISC = -NNO
        CALL WKVECT(KRANG,'V V I',NBDISC,JRANG)
        CALL WKVECT(KDISC,'V V R8',NBDISC,JDISC)
        CALL WKVECT('&&RSTRAN.NUME','V V I',NBDISC,JBID)
        CALL GETVIS(MOTCLE,'NUME_ORDRE',IOCC,IARG,NBDISC,ZI(JBID),NNO)
        DO 40 I = 0,NBDISC - 1
          DO 20 IORD = 0,NBI - 1
            IF (ZI(JBID+I).EQ.ZI(JORDR+IORD)) GO TO 30
   20     CONTINUE
          IER = IER + 110
          VALI = ZI(JBID+I)
          CALL U2MESG('A','UTILITAI8_17',0,' ',1,VALI,0,0.D0)
          GO TO 40
   30     CONTINUE
          ZI(JRANG+I) = IORD + 1
          ZR(JDISC+I) = ZR(LDISC+IORD)
   40   CONTINUE
        GO TO 100
      END IF
C
C     --- RECHERCHE A PARTIR D'UN INSTANT ---
C
      CALL GETVR8(MOTCLE,'INST',IOCC,IARG,0,RBID,LT)
      IF (LT.EQ.0) THEN
        CALL GETVID(MOTCLE,'LIST_INST',IOCC,IARG,1,LISTR,LLI)
        IF (LLI.NE.0) THEN
          CALL JEVEUO(LISTR//'.VALE','L',LACCR)
          CALL JELIRA(LISTR//'.VALE','LONMAX',NBDISC,K8B)
        ELSE
          GO TO 80
        END IF
      ELSE
        NBDISC = -LT
        CALL WKVECT('&&RSTRAN.INSTANTS','V V R',NBDISC,LACCR)
        CALL GETVR8(MOTCLE,'INST',IOCC,IARG,NBDISC,ZR(LACCR),L)
      END IF
      CALL WKVECT(KRANG,'V V I',NBDISC,JRANG)
      CALL WKVECT(KDISC,'V V R8',NBDISC,JDISC)
      DO 70 I = 0,NBDISC - 1
        TUSR = ZR(LACCR+I)
        IF (INTERP(1:3).NE.'NON') THEN
          ZI(JRANG+I) = I + 1
          ZR(JDISC+I) = TUSR
          GO TO 70
        END IF
        CALL RSINDI(TYPE,LDISC,1,JORDR,IVAL,TUSR,KVAL,CVAL,EPSI,CRIT,
     &              NBI,NBTROU,NUTROU,1)
        IF (NBTROU.EQ.0) THEN
          IER = IER + 110
          VALR = TUSR
          CALL U2MESG('A','UTILITAI8_18',0,' ',0,0,1,VALR)
          GO TO 70
        ELSE IF (NBTROU.NE.1) THEN
          IER = IER + 100
          VALR = TUSR
          VALI = -NBTROU
          CALL U2MESG('F','UTILITAI8_19',0,' ',1,VALI,1,VALR)
          GO TO 70
        END IF
        DO 50 IORD = 0,NBI - 1
          IF (NUTROU.EQ.ZI(JORDR+IORD)) GO TO 60
   50   CONTINUE
   60   CONTINUE
        ZI(JRANG+I) = IORD + 1
        ZR(JDISC+I) = ZR(LDISC+IORD)
   70 CONTINUE
      GO TO 100
C
   80 CONTINUE
C
C     --- RECHERCHE A PARTIR D'UNE FREQUENCE ---
C
      CALL GETTCO(RESU(1:8),TYPRES)
      IF(TYPRES(1:9).EQ.'HARM_GENE') THEN
        CALL GETVR8(MOTCLE,'FREQ',IOCC,IARG,0,RBID,LT)
        IF (LT.EQ.0) THEN
          CALL GETVID(MOTCLE,'LIST_FREQ',IOCC,IARG,1,LISTR,LLI)
          IF (LLI.NE.0) THEN
            CALL JEVEUO(LISTR//'.VALE','L',LACCR)
            CALL JELIRA(LISTR//'.VALE','LONMAX',NBDISC,K8B)
          ELSE
            GO TO 81
          END IF
        ELSE
          NBDISC = -LT
          CALL WKVECT('&&RSTRAN.FREQUENCES','V V R',NBDISC,LACCR)
          CALL GETVR8(MOTCLE,'FREQ',IOCC,IARG,NBDISC,ZR(LACCR),L)
        END IF
        CALL WKVECT(KRANG,'V V I',NBDISC,JRANG)
        CALL WKVECT(KDISC,'V V R8',NBDISC,JDISC)
        DO 71 I = 0,NBDISC - 1
          TUSR = ZR(LACCR+I)
          CALL RSINDI(TYPE,LDISC,1,JORDR,IVAL,TUSR,KVAL,CVAL,EPSI,CRIT,
     &                NBI,NBTROU,NUTROU,1)
          IF (NBTROU.EQ.0) THEN
            IER = IER + 110
            VALR = TUSR
            CALL U2MESG('A','UTILITAI8_18',0,' ',0,0,1,VALR)
            GO TO 71
          ELSE IF (NBTROU.NE.1) THEN
            IER = IER + 100
            VALR = TUSR
            VALI = -NBTROU
            CALL U2MESG('F','UTILITAI8_19',0,' ',1,VALI,1,VALR)
            GO TO 71
          END IF
          DO 51 IORD = 0,NBI - 1
            IF (NUTROU.EQ.ZI(JORDR+IORD)) GO TO 61
   51     CONTINUE
   61     CONTINUE
          ZI(JRANG+I) = IORD + 1
          ZR(JDISC+I) = ZR(LDISC+IORD)
   71   CONTINUE
        GO TO 100
      END IF
C
C  --- PAR DEFAUT, TOUT ORDRE
C
   81 CONTINUE
C
      CALL GETVTX(MOTCLE,'TOUT_INST',IOCC,IARG,1,K8B,NTO)
      CALL GETVTX(MOTCLE,'TOUT_ORDRE',IOCC,IARG,1,K8B,NTO)
      NBDISC = NBI
      CALL WKVECT(KRANG,'V V I',NBDISC,JRANG)
      CALL WKVECT(KDISC,'V V R8',NBDISC,JDISC)
      DO 90 IORD = 0,NBDISC - 1
        ZI(JRANG+IORD) = IORD + 1
        ZR(JDISC+IORD) = ZR(LDISC+IORD)
   90 CONTINUE

  100 CONTINUE
      CALL JEDETR('&&RSTRAN.ORDR')
      CALL JEDETR('&&RSTRAN.NUME')
      CALL JEDETR('&&RSTRAN.INSTANTS')
      CALL JEDETR('&&RSTRAN.FREQUENCES')
      CALL JEDETR('&&RSTRAN.LIINST')
C
      CALL JEDEMA()
      END
