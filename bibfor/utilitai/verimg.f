      SUBROUTINE VERIMG(NOM)
      IMPLICIT NONE
      CHARACTER*(*) NOM
      CHARACTER*32 JEXNUM
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 05/09/2006   AUTEUR CIBHHPD L.SALMONA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C ----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- FIN COMMUNS NORMALISES  JEVEUX  --------------------------
C -DEB------------------------------------------------------------------

      INTEGER NBLIA, I, NBSTR
      INTEGER NBCO1, NBLI1, NBCO2, NBLI2, NBCO3, NBLI3, ILIPR
      INTEGER ICHK, N1CHK, N2CHK, N3CHK,LICHK
      CHARACTER*8 ANSW, NSSME, NSSNO
      CHARACTER*24 FAMLI
      CHARACTER*1 CMES

      CHARACTER*1 KBID
      INTEGER I2

      CALL JEMARQ()
 
C-----VERIFICATION DE MODG.DESC
      CALL VERIOB(NOM(1:8)//'      .MODG.DESC','EXIS',0)
      CALL VERIOB(NOM(1:8)//'      .MODG.DESC','LONMAX_EGAL',3) 
      
C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.DESC 
      CALL VERIOB(NOM(1:8)//'      .MODG.DESC','I',0)
           
C ----VERIFICATION COMPOSANTES  
      CALL JEVEUO(NOM(1:8)//'      .MODG.DESC','L',ICHK)
      N1CHK = ZI(ICHK)
      N2CHK = ZI(ICHK+1)
      N3CHK = ZI(ICHK+2)
      
      IF(N1CHK.LT.0) THEN
      CALL UTMESS(CMES,'VERIMG',' ERREUR MODG.DESC COMP 1 ')
      ENDIF
      
      IF(N2CHK.LT.0)THEN
      CALL UTMESS(CMES,'VERIMG',' ERREUR MODG.DESC COMP 2 ')
      ENDIF
      
      IF(N3CHK.LT.0)THEN
      CALL UTMESS(CMES,'VERIMG',' ERREUR MODG.DESC COMP 3 ')
      ENDIF

C-----------------------------------------------------     
 
C-----RECUPERATION DE LA LONGUEUR DE L'OBJET MODG.LIDF
C-----VERIFICATION DE LA COHERENCE DES LONGUEUR NBLIA 
 
      CALL JELIRA(NOM(1:8)//'      .MODG.LIDF','NUTIOC',NBLIA,KBID)
      
C-----VERIFICATION DE MODG.LIDF ----------------     
      CALL VERIOB(NOM(1:8)//'      .MODG.LIDF','EXIS',0)
       
      FAMLI=NOM(1:8)//'      .MODG.LIDF'
        
C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.LIDF 
      CALL VERIOB(NOM(1:8)//'      .MODG.LIDF','K',0)
      
      DO 10 I=1,NBLIA

      CALL VERIOB(JEXNUM(FAMLI,I),'EXIS',0)
      CALL VERIOB(JEXNUM(FAMLI,I),'LONMAX_EGAL',5)

C ----VERIFICATION COMPOSANTE 5
      CALL JEVEUO(JEXNUM(FAMLI,I),'L',ICHK)
      ANSW = ZK8(ICHK+4)
      
      IF((ANSW.NE.'OUI').AND.(ANSW.NE.'NON')) THEN
      CALL UTMESS(CMES,'VERIMG','COMPOSANTE 5 DE 
     & L OBJET MODG.LIDF NON VALIDE')
      ENDIF

10    CONTINUE

C-----VERIFICATION DE MODG.LIPR ---------------- 
      CALL VERIOB(NOM(1:8)//'      .MODG.LIPR','EXIS',0)
      CALL VERIOB(NOM(1:8)//'      .MODG.LIPR','LONMAX_EGAL',9*NBLIA) 
      
C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.LIPR 
      CALL VERIOB(NOM(1:8)//'      .MODG.LIPR','I',0)        
      CALL JEVEUO(NOM(1:8)//'      .MODG.LIPR','L',ILIPR)

C-----VERIFICATION DE MODG.LIMA ----------------     
      CALL VERIOB(NOM(1:8)//'      .MODG.LIMA','EXIS',0)      
      CALL VERIOB(NOM(1:8)//'      .MODG.LIMA','LON_COLL',3*NBLIA) 
    
C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.LIMA 
      CALL VERIOB(NOM(1:8)//'      .MODG.LIMA','R',0)

      FAMLI=NOM(1:8)//'      .MODG.LIMA'

C-----BOUCLE POUR VERIFICATION DE MODG.LIPR ET MODG.LIMA

      DO 20 I=1,NBLIA   
     
C----------------------------------------------
      NBLI1 = ZI(ILIPR + 9 * (I - 1))
      NBCO1 = ZI(ILIPR + 9 * (I - 1)+ 1)
      LICHK = ZI(ILIPR + 9 * (I - 1)+ 2)

      IF((NBLI1.LE.0).OR.(NBCO1.LE.0).OR.(LICHK.NE.(3*I-2)))THEN
      CALL UTMESS(CMES,'VERIMG','MATRICE DE LIAISON 1 DE 
     & L OBJET MODG.LIMA NON VALIDE')
      ENDIF

C----------------------------------------------
      NBLI2 = ZI(ILIPR + 9 * (I - 1)+3)
      NBCO2 = ZI(ILIPR + 9 * (I - 1)+ 4)
      LICHK = ZI(ILIPR + 9 * (I - 1)+ 5)

      IF((NBLI2.LE.0).OR.(NBCO2.LE.0).OR.(LICHK.NE.(3*I-1)))THEN
      CALL UTMESS(CMES,'VERIMG','MATRICE DE LIAISON 2 DE 
     & L OBJET MODG.LIMA NON VALIDE')
      ENDIF   
         
C----------------------------------------------
      NBLI3 = ZI(ILIPR + 9 * (I - 1)+6)
      NBCO3 = ZI(ILIPR + 9 * (I - 1)+ 7)
      LICHK = ZI(ILIPR + 9 * (I - 1)+ 8) 
  
      IF((NBLI3.LE.0).OR.(NBCO3.LE.0).OR.(LICHK.NE.(3*I)))THEN
      CALL UTMESS(CMES,'VERIMG','MATRICE DE LIAISON 3 DE 
     & L OBJET MODG.LIMA NON VALIDE')
      ENDIF      

      CALL VERIOB(JEXNUM(FAMLI,3*I-2),'EXIS',0)    
      CALL VERIOB(JEXNUM(FAMLI,3*I-2),'LONMAX_EGAL',NBLI1 * NBCO1)  
         
      CALL VERIOB(JEXNUM(FAMLI,3*I-1),'EXIS',0)    
      CALL VERIOB(JEXNUM(FAMLI,3*I-1),'LONMAX_EGAL',NBLI2 * NBCO2)  
       
      CALL VERIOB(JEXNUM(FAMLI,3*I),'EXIS',0)    
      CALL VERIOB(JEXNUM(FAMLI,3*I),'LONMAX_EGAL',NBLI3 * NBCO3)   
          
20    CONTINUE

C-----RECUPERATION DE LA LONGUEUR DE L'OBJET MODG.SSME
C-----VERIFICATION DE LA COHERENCE DES LONGUEUR NBSTR 
 
      CALL JELIRA(NOM(1:8)//'      .MODG.SSME','NUTIOC',NBSTR,KBID)


C-----VERIFICATION DE MODG.SSME ET MODG.SSNO
      CALL VERIOB(NOM(1:8)//'      .MODG.SSME','EXIS',0)   

            
C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.SSME
      CALL VERIOB(NOM(1:8)//'      .MODG.SSME','K',0)
      
C ----VERIFICATION DE MODG.SSNO
      CALL VERIOB(NOM(1:8)//'      .MODG.SSNO','EXIS',0)
      CALL VERIOB(NOM(1:8)//'      .MODG.SSNO','LON_NOM',NBSTR) 
      
C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.SSNO
      CALL VERIOB(NOM(1:8)//'      .MODG.SSNO','K',0)     
           
      FAMLI=NOM(1:8)//'      .MODG.SSME'
       
      DO 30 I=1,NBSTR

C------VERFICATION DE LA SOUS STRUCTURATION DYNAMIQUE
C------POUR CHAQUE OBJET SSME
      CALL JEVEUO(JEXNUM(FAMLI,I),'L',ICHK)
      NSSME = ZK8(ICHK)    

      CALL VERIMC(NSSME(1:8))
           
30    CONTINUE

C-----VERIFICATION DE MODG.SSOR 
      CALL VERIOB(NOM(1:8)//'      .MODG.SSOR','EXIS',0)     
      CALL VERIOB(NOM(1:8)//'      .MODG.SSOR','LON_COLL',NBSTR) 

C-----VERIFICATION DE LA NATURE DE L'OBJET MODG.SSOR
      CALL VERIOB(NOM(1:8)//'      .MODG.SSOR','R',0)
      FAMLI=NOM(1:8)//'      .MODG.SSOR'
      DO 40 I=1,NBSTR

      CALL VERIOB(JEXNUM(FAMLI,I),'EXIS',0)
      CALL VERIOB(JEXNUM(FAMLI,I),'LONMAX_EGAL',3)  
      
40    CONTINUE

C-----VERIFICATION DE MODG.SSTR
      CALL VERIOB(NOM(1:8)//'      .MODG.SSTR','EXIS',0)
      CALL VERIOB(NOM(1:8)//'      .MODG.SSTR','LON_COLL',NBSTR) 
      
C-----VERIFICATION DE LA NATURE DE L'OBJET MODG.SSTR
      CALL VERIOB(NOM(1:8)//'      .MODG.SSTR','R',0)
        
      FAMLI=NOM(1:8)//'      .MODG.SSTR'
      
      DO 50 I=1,NBSTR

      CALL VERIOB(JEXNUM(FAMLI,I),'EXIS',0)
      CALL VERIOB(JEXNUM(FAMLI,I),'LONMAX_EGAL',3)  
      
50    CONTINUE

      CALL JEDEMA()

      END
