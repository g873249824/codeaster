      SUBROUTINE UTFLM2(MAILLA,TABMAI,NBMA,DIM,TYPMAI,NBTROU,TATROU)
      IMPLICIT NONE
      INTEGER DIM,NBTROU,NBMA
      INTEGER TABMAI(NBMA),TATROU(NBMA)
      CHARACTER*8 MAILLA
      CHARACTER*(*)TYPMAI
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 16/04/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE DELMAS J.DELMAS
C
C     BUT:
C       FILTRER UNE LISTE DE MAILLE D'APRES LEUR DIMENSION VERSION 2
C       *           *        *                                     *
C       IDEM QUE UTFLMD MAIS AVEC UNE LISTE DE MAILLE
C
C
C     ARGUMENTS:
C     ----------
C
C      ENTREE :
C-------------
C IN   MAILLA    : NOM DU MAILLAGE
C IN   TABMAI    : LISTE DES MAILLES
C IN   NBMA      : LONGUEUR DE LA LISTE
C IN   NDIM      : DIMENSION DES MAILLES A TROUVER (-1,0,1,2,3)
C IN   TYPMAI    : SI DIM=-1, ON FILTRE SUR TYPMAI='QUAD4'/'TRIA3'/...
C                  SINON, ON NE SE SERT PAS DE TYPMAI
C      SORTIE :
C-------------
C OUT  NBTROU    : NOMBRE DE MAILLE TROUVEES
C OUT  TATROU    : LISTE DES MAILLES TROUVEES
C     REMARQUE : TATROU EST SUPPOSE DE LONGUEUR SUFFISANTE (>= NBTROU)
C
C.......................................................................
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)

      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXNOM
C
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      INTEGER NBTYP,I,II,IRET,ITROU,ITYCH
      INTEGER ITYPMA,IDIMTO,JTYPMA,IT,ITEMPO

      CHARACTER*1 K1BID
      CHARACTER*8 K8BID
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL ASSERT(NBMA.GT.0)
C
      CALL JELIRA('&CATA.TM.NOMTM','NOMMAX',NBTYP,K1BID)

C     -- SI DIM=-1, ON TRIE SUR TYPMAI :
      IF (DIM.EQ.-1) THEN
        CALL JENONU(JEXNOM('&CATA.TM.NOMTM',TYPMAI),ITYCH)
        IF (ITYCH.EQ.0) CALL U2MESK('F','CALCULEL2_67',1,TYPMAI)

      ELSE
C
        CALL WKVECT('&&UTFLM2.TYPE_MAILLE','V V K8',NBTYP,ITYPMA)
        CALL WKVECT('&&UTFLM2.DIME_TOPO','V V I',NBTYP,IDIMTO)
        CALL WKVECT('&&UTFLM2.LISTE_TYPMAI','V V I',NBMA,IT)
C
C ------RECUPERATION DE TOUS LES TYPES DE MAILLE
C        ET DE LEUR DIMENSION TOPOLOGIQUE
C
        DO 10 I = 1,NBTYP
          CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',I),ZK8(ITYPMA-1+I))
          CALL DISMOI('F','DIM_TOPO',ZK8(ITYPMA-1+I),'TYPE_MAILLE',
     &                                       ZI(IDIMTO-1+I),K8BID,IRET)
   10   CONTINUE
      ENDIF

C
C ----RECUPERATION DE LA LISTE DES TYPES DE MAILLE DU MAILLAGE
C
      CALL JEVEUO(MAILLA//'.TYPMAIL        ','L',JTYPMA)

      CALL WKVECT('&&UTFLM2.LISTE_M_TEMP','V V I',NBMA,ITEMPO)

      NBTROU = 0
      II = 1
      DO 20 I = 1, NBMA
C
C ------RECUPERATION DU TYPE DE LA MAILLE I
C
        IF (DIM.NE.-1) THEN
C
C --------SI LA DIMENSION TOPOLOGIQUE EST LA BONNE ON GARDE LA MAILLE
C
          ZI(IT-1+I) = ZI(JTYPMA-1+TABMAI(I))
          IF (ZI(IDIMTO-1+ZI(IT-1+I)).EQ.DIM) THEN
            ZI(ITEMPO-1+II) = TABMAI(I)
            NBTROU = NBTROU + 1
            II = II + 1
          ENDIF
        ELSE
C
C --------TRI SUR LE TYPE DE LA MAILLE :
C
          IF (ZI(JTYPMA-1+TABMAI(I)).EQ.ITYCH) THEN
            ZI(ITEMPO-1+II) = TABMAI(I)
            NBTROU = NBTROU + 1
            II = II + 1
          ENDIF
        ENDIF
   20 CONTINUE

      IF (NBTROU.EQ.0) GOTO 9999
C
C ----SI LA LISTE N'EST PAS VIDE ON RECOPIE DANS TATROU DE TAILLE NBMA
C
      DO 30 ITROU = 1, NBTROU
          TATROU(ITROU) = ZI(ITEMPO-1+ITROU)
   30 CONTINUE
C
 9999 CONTINUE
C
      CALL JEDETR('&&UTFLM2.TYPE_MAILLE')
      CALL JEDETR('&&UTFLM2.DIME_TOPO')
      CALL JEDETR('&&UTFLM2.LISTE_M_TEMP')
      CALL JEDETR('&&UTFLM2.LISTE_TYPMAI')
C
      CALL JEDEMA()
C
      END
