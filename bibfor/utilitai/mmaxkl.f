      SUBROUTINE MMAXKL ( LATABL,MODELE,THETAI,MATE,COMPOR,
     &              NCHA,SYMECH,CHFOND,NNOFF,BASLOC,COURB,
     &              NDEG,THLAGR,GLAGR,THLAG2,PAIR,NDIMTE,
     &              THETLG,ALPHA,NBPRUP,NOPRUP,FISS,
     &              LONVEC,IVEC,VCHAR,RESUCO)
      IMPLICIT NONE
C
      INTEGER NCHA,NBPRUP,LONVEC,IVEC,NNOFF,NDEG,NDIMTE
      REAL*8 ALPHA
      CHARACTER*8 MODELE,THETAI,FISS,LATABL
      CHARACTER*8 SYMECH,RESUCO
      CHARACTER*16 OPTION,NOPRUP(*)
      CHARACTER*19 VCHAR
      CHARACTER*24 CHFOND,MATE,COMPOR,THETLG,BASLOC,COURB
      LOGICAL THLAGR,GLAGR,PAIR,THLAG2

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 06/04/2007   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C TOLE CRS_512
C      OPERATEUR :     CALC_G
C
C     ----------------------------------------------------------------
C
C     BUT: MAXIMISATION DE K LOCAL SOUS CONTRAINTES BORNES
C
C     ----------------------------------------------------------------
C
C     NBCO        /IN/:NOMBRE DE SITUATIONS
C     TYPCH       /IN/:TYPE DE CHARGEMENT
C     KL1         /IN/:K1_LOCAL POUR CHAQUE SITUATION
C     KL2         /IN/:K2_LOCAL POUR CHAQUE SITUATION
C     KL3         /IN/:K3_LOCAL POUR CHAQUE SITUATION
C     GL          /IN/:G_LOCAL POUR CHAQUE SITUATION
C     ABCUR       /IN/:ABSCISSE CURVILIGNE DU FOND DE FISSURE
C     LONVEC      /IN/:NOMBRE DE CHAMPS DE DEPLACEMENTS
C     NNOFF       /IN/:NOMBRE DE NOEUD EN FOND DE FISSURE
C     RESULT     /OUT/:TABLE RESULTAT
C
C ----------------------------------------------------------------------
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
      CHARACTER*32      JEXNUM
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      INTEGER      I,J,K,ICOEF,IKM1,IKM2,IKM3,NBCOL,INOPR,ITYPR
      INTEGER VALI
      INTEGER      IPR,IPI,IRET,IORD,JINST,NBORN,ITYPC,NBVAL
      INTEGER      IK1,IK2,IK3,LABSCU,IGL,ICHA,IBID,IGLM
      INTEGER      INOM,ITYP,ICST,MXVAL,NBV,ITMP
      REAL*8        R8BID,MGMAX,KMOY,TIME
      COMPLEX*16   CBID
C
      CHARACTER*3  CHNU
      CHARACTER*4  K4B
      CHARACTER*8  K8B
      CHARACTER*16 K16BID,OPTIO2
      CHARACTER*24 DEPLA,DEPMAX
      CHARACTER*24 VALK
      LOGICAL EXITIM
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C CALCUL DE K POUR CHACUNE DES SITUATIONS

      DO 1 I = 1,LONVEC

         IORD = ZI(IVEC-1+I)
         CALL MEDOM1(MODELE,MATE,K8B,VCHAR,NCHA,K4B,RESUCO,IORD)
         CALL JEVEUO(VCHAR,'L',ICHA)
         CALL RSEXCH(RESUCO,'DEPL',IORD,DEPLA,IRET)
         IF (IRET.NE.0) THEN
           VALK = 'DEPL'
           VALI = IORD
           CALL U2MESG('F', 'CALCULEL6_27',1,VALK,1,VALI,0,0.D0)
         END IF
         CALL RSADPA(RESUCO,'L',1,'INST',IORD,0,JINST,K8B)
         TIME = ZR(JINST)
         EXITIM = .TRUE.

         OPTIO2 = 'CALC_K_G'
         CALL CAKG3D(OPTIO2,LATABL,MODELE,DEPLA,THETAI,MATE,COMPOR,
     &              NCHA,ZK8(ICHA),SYMECH,CHFOND,NNOFF,BASLOC,COURB,
     &              IORD,NDEG,THLAGR,GLAGR,THLAG2,PAIR,NDIMTE,
     &              THETLG,ALPHA,EXITIM,TIME,NBPRUP,NOPRUP,FISS)
   1  CONTINUE
C
C EXTRACTION DES RESULTATS DE LA TABLE
C
      CALL TBEXVE(LATABL,'K1_LOCAL','&&MMAXKL.K1LOC','V',NBVAL,K8B)
      CALL JEVEUO('&&MMAXKL.K1LOC','L',IK1)
      CALL TBEXVE(LATABL,'K2_LOCAL','&&MMAXKL.K2LOC','V',NBVAL,K8B)
      CALL JEVEUO('&&MMAXKL.K2LOC','L',IK2)
      CALL TBEXVE(LATABL,'K3_LOCAL','&&MMAXKL.K3LOC','V',NBVAL,K8B)
      CALL JEVEUO('&&MMAXKL.K3LOC','L',IK3)
      CALL TBEXVE(LATABL,'ABS_CURV','&&MMAXKL.ABSCUR','V',NBVAL,K8B)
      CALL JEVEUO('&&MMAXKL.ABSCUR','L',LABSCU)
      CALL TBEXVE(LATABL,'G_LOCAL','&&MMAXKL.GLOC','V',NBVAL,K8B)
      CALL JEVEUO('&&MMAXKL.GLOC','L',IGL)
C
C
C RECUPERATION DU TYPE DE CHARGE ET MAXIMISATION DE K
C
      CALL GETFAC ('SIGNES', NBORN )
      IF (NBORN.NE.0) THEN
        CALL WKVECT('&&MMAXKL.TYPE_CHAR','V V K8',
     &               LONVEC,ITYPC)
        MXVAL = 0
        CALL GETVIS('SIGNES','CHARGE_NS',1,1,MXVAL,IBID,NBV)
        MXVAL = -NBV
        CALL WKVECT('&&MMAXKL.TMP','V V I',MXVAL,ITMP)
        CALL GETVIS('SIGNES','CHARGE_NS',1,1,MXVAL,ZI(ITMP),NBV)
        DO 2 I=1, MXVAL
          ZK8(ITYPC+ZI(ITMP+I-1)-1) = 'NON_SIGNE'
2         CONTINUE
        CALL JEDETR('&&MMAXKL.TMP')
        MXVAL = 0
        CALL GETVIS('SIGNES','CHARGE_S',1,1,MXVAL,IBID,NBV)
        MXVAL = -NBV
        CALL WKVECT('&&MMAXKL.TMP','V V I',MXVAL,ITMP)
        CALL GETVIS('SIGNES','CHARGE_S',1,1,MXVAL,ZI(ITMP),NBV)
        DO 3 I=1, MXVAL
          ZK8(ITYPC+ZI(ITMP+I-1)-1) = 'SIGNE'
3         CONTINUE
        CALL JEDETR('&&MMAXKL.TMP')
      ELSE
        CALL U2MESS('F','UTILITAI2_51')
      ENDIF

      CALL WKVECT('&&MMAXKL.COEF','V V R8',LONVEC,ICOEF)
      DO 10 I=1, LONVEC
        KMOY = 0.D0
        IF (ZK8(ITYPC+I-1) .NE. 'SIGNE') THEN
          DO 11 J=1, NNOFF
            KMOY = KMOY + ZR(IK1+J-1+(I-1)*NNOFF)
 11       CONTINUE
          IF (KMOY .LE. 0.D0) THEN
            ZR(ICOEF+I-1) = -1
          ELSE
            ZR(ICOEF+I-1) = 1
          ENDIF
        ELSE
            ZR(ICOEF+I-1) = 1
        ENDIF
 10   CONTINUE

      CALL WKVECT('&&MMAXKL.KMAX1','V V R8',NNOFF,IKM1)
      CALL WKVECT('&&MMAXKL.KMAX2','V V R8',NNOFF,IKM2)
      CALL WKVECT('&&MMAXKL.KMAX3','V V R8',NNOFF,IKM3)
      DO 20 J=1, NNOFF
        ZR(IKM1+J-1) = 0.D0
        ZR(IKM2+J-1) = 0.D0
        ZR(IKM3+J-1) = 0.D0
        DO 21 I=1, LONVEC
         ZR(IKM1+J-1)=ZR(IKM1+J-1)+ZR(ICOEF+I-1)*ZR(IK1+J-1+(I-1)*NNOFF)
         ZR(IKM2+J-1)=ZR(IKM2+J-1)+ZR(ICOEF+I-1)*ZR(IK2+J-1+(I-1)*NNOFF)
         ZR(IKM3+J-1)=ZR(IKM3+J-1)+ZR(ICOEF+I-1)*ZR(IK3+J-1+(I-1)*NNOFF)
 21     CONTINUE
 20   CONTINUE


C
C CALCUL DE G LOCAL MAX
C
      CALL WKVECT('&&MMAXKL.TYP','V V K8',LONVEC,ITYP)
      CALL WKVECT('&&MMAXKL.DEP','V V K24',LONVEC,INOM)
      DO 60 I = 1,LONVEC
         IORD = ZI(IVEC-1+I)
         CALL RSEXCH(RESUCO,'DEPL',IORD,DEPLA,IRET)
         ZK24(INOM+I-1) = DEPLA
         ZK8(ITYP+I-1) = 'R'
 60   CONTINUE

      DEPMAX = 'MMAXKL.DEPMAX'
      CALL VTCMBL(LONVEC,ZK8(ITYP),ZR(ICOEF),
     &                      ZK8(ITYP),ZK24(INOM),ZK8(ITYP),DEPMAX)
      OPTIO2 = 'CALC_K_G'
      CALL CAKG3D(OPTIO2,LATABL,MODELE,DEPMAX,THETAI,MATE,COMPOR,
     &              0,ZK8(ICHA),SYMECH,CHFOND,NNOFF,BASLOC,COURB,
     &              1,NDEG,THLAGR,GLAGR,THLAG2,PAIR,NDIMTE,
     &              THETLG,ALPHA,EXITIM,TIME,NBPRUP,NOPRUP,FISS)

      CALL TBEXVE(LATABL,'G_LOCAL','&&MMAXKL.GMAX','V',NBVAL,K8B)
      CALL JEVEUO('&&MMAXKL.GMAX','L',IGLM)
      CALL DETRSD('TABLE',LATABL)

C
C CREATION DU TABLEAU RESULTAT
C
      NBCOL = LONVEC + 6
      CALL WKVECT('&&MMAXKL.NORU','V V K16',NBCOL,INOPR)
      CALL WKVECT('&&MMAXKL.TYPR','V V K8',NBCOL,ITYPR)
      DO 30 I=1,LONVEC
          CALL CODENT(I,'G',CHNU)
          ZK16(INOPR+I-1) = 'Q_'//CHNU
          ZK8 (ITYPR+I-1) = 'I'
 30   CONTINUE
      ZK16(INOPR+LONVEC) = 'NUM_PT'
      ZK8 (ITYPR+LONVEC) = 'I'
      ZK16(INOPR+LONVEC+1) = 'ABS_CURV'
      ZK8 (ITYPR+LONVEC+1) = 'R'
      ZK16(INOPR+LONVEC+2) = 'K1_LOCAL'
      ZK8 (ITYPR+LONVEC+2) = 'R'
      ZK16(INOPR+LONVEC+3) = 'K2_LOCAL'
      ZK8 (ITYPR+LONVEC+3) = 'R'
      ZK16(INOPR+LONVEC+4) = 'K3_LOCAL'
      ZK8 (ITYPR+LONVEC+4) = 'R'
      ZK16(INOPR+LONVEC+5) = 'G_LOCAL'
      ZK8 (ITYPR+LONVEC+5) = 'R'
C
C
      CALL TBCRSD ( 'T4', 'V' )
      CALL TBAJPA ( 'T4',NBCOL,ZK16(INOPR),ZK8(ITYPR) )
      CALL WKVECT('&&MMAXKL.TABR','V V R',5,IPR)
      CALL WKVECT('&&MMAXKL.TABI','V V I',LONVEC+1,IPI)

      DO 40 I=1, LONVEC
        DO 41 K=1, LONVEC
          ZI(IPI+K-1) = 0
 41     CONTINUE
          ZI(IPI+I-1) = 1

        DO 42 J=1, NNOFF
          ZI(IPI+LONVEC) = J
          ZR(IPR) = ZR(LABSCU+J-1)
          ZR(IPR+1) = ZR(IK1+J+(I-1)*NNOFF-1)
          ZR(IPR+2) = ZR(IK2+J+(I-1)*NNOFF-1)
          ZR(IPR+3) = ZR(IK3+J+(I-1)*NNOFF-1)
          ZR(IPR+4) = ZR(IGL+J+(I-1)*NNOFF-1)
          CALL TBAJLI ( 'T4', NBCOL, ZK16(INOPR),
     &                       ZI(IPI), ZR(IPR), CBID, K8B, 0 )
 42     CONTINUE
 40   CONTINUE

      DO 50 J=1, NNOFF
        DO 51 K=1, LONVEC
          ZI(IPI+K-1) = ZR(ICOEF+K-1)
 51     CONTINUE
          ZI(IPI+LONVEC) = J
          ZR(IPR) = ZR(LABSCU+J-1)
          ZR(IPR+1) = ZR(IKM1+J-1)
          ZR(IPR+2) = ZR(IKM2+J-1)
          ZR(IPR+3) = ZR(IKM3+J-1)
          ZR(IPR+4) = ZR(IGLM+J-1+NNOFF*LONVEC)
          CALL TBAJLI ( 'T4', NBCOL, ZK16(INOPR),
     &                       ZI(IPI), ZR(IPR), CBID, K8B, 0 )
 50   CONTINUE

      CALL COPISD('TABLE','G','T4',LATABL)

      CALL DETRSD('TABLE','T4')
      CALL JEDETR('&&MMAXKL.TABR')
      CALL JEDETR('&&MMAXKL.TABI')
      CALL JEDETR('&&MMAXKL.TYP')
      CALL JEDETR('&&MMAXKL.NORU')
      CALL JEDETR('&&MMAXKL.TYPR')
      CALL JEDETR('&&MMAXKL.DEP')
      CALL JEDETR('&&MMAXKL.TYPE_CHAR')
      CALL JEDETR('&&MMAXKL.COEF')
      CALL JEDETR('&&MMAXKL.KMAX1')
      CALL JEDETR('&&MMAXKL.KMAX2')
      CALL JEDETR('&&MMAXKL.KMAX3')

      CALL JEDEMA()
      END
