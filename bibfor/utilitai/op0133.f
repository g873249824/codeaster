      SUBROUTINE OP0133 ( IER )
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER             IER
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 11/07/2005   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     COMMANDE :  DIST_LIGN_3D
C     CREE FONCTION EVOLUTION DES DISTANCES
C     MINIMALES ENTRE 2 LIGNES D'ELEMENTS
C     OU UNE LIGNE ET UN POINT FIXE
C
C     OBJETS SIMPLES CREES EN GLOBALE:
C     NOMFON//'.PROL'
C     NOMFON//'.VALE'
C
C ----------------------------------------------------------------------
C     ----- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER           ZI
      COMMON / IVARJE / ZI(1)
      REAL*8            ZR
      COMMON / RVARJE / ZR(1)
      COMPLEX*16        ZC
      COMMON / CVARJE / ZC(1)
      LOGICAL           ZL
      COMMON / LVARJE / ZL(1)
      CHARACTER*8       ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                       ZK24
      CHARACTER*32                                ZK32
      CHARACTER*80                                         ZK80
      COMMON / KVARJE / ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
      CHARACTER*32      JEXNUM, JEXNOM, JEXR8, JEXATR
C     ----- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      REAL*8       TIME,LAM,MU,DELT,DLAM,DMU,S,DIST,ALPHA
      REAL*8       A(3),B(3),C(3),U(3),V(3),W(3),PREC
      INTEGER      NBVAL,NBCOUP,JPRO,JVAL,NBCMAX,IRET
      CHARACTER*4  CTYP
      CHARACTER*8  K8B, RESUC1, RESUCO, MODELE, CRIT, NOMA
      CHARACTER*16 NOMCMD, TYSD, CONCEP
      CHARACTER*19 NOMFON
      CHARACTER*16 TYPFON,VERIF
      CHARACTER*24 CHPRO, CHVAL, NOMPAR, NOMRES, CHBID
      CHARACTER*24 LISTMA, LISTM2
      CHARACTER*19 KNUM, K19BID
      CHARACTER*24 CHGEOM, CHGEO2, CHAMGD
      LOGICAL      EXITIM
      CHARACTER*8  K8BID
      CHARACTER*1  K1BID
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- RECUPERATION DU NIVEAU D'IMPRESSION
      CALL INFMAJ
      CALL INFNIV(IFM,NIV)
C
      CALL GETRES(NOMFON,TYPFON,NOMCMD)
      EXITIM = .FALSE.
C
      CHVAL=NOMFON//'.VALE'
      CHBID='&&OP0133.VALEURS_LUES'
      CHPRO=NOMFON//'.PROL'
      CALL JEEXIN(CHVAL,IRET)
      IF (IRET.NE.0) CALL JEDETR(CHVAL)
      CALL JEEXIN(CHPRO,IRET)
      IF (IRET.NE.0) CALL JEDETR(CHPRO)
      CALL GETVID(' ','RESULTAT',0,1,1,RESUCO,N0)
      CALL GETVID(' ','MODELE',0,1,1,MODELE,N1)
      CALL JEVEUO(MODELE//'.MODELE    .NOMA','L',ICHAR)
      CHGEOM = ZK8(ICHAR)//'.COORDO'
      NOMA = CHGEOM(1:8)
      ALPHA = 1.0D0
C
      KNUM = '&&OP0133.NUME_ORDRE'
      CALL GETVR8 ( ' ', 'PRECISION', 1,1,1, PREC, NP )
      CALL GETVTX ( ' ', 'CRITERE'  , 1,1,1, CRIT, NC )
      CALL RSUTNU ( RESUCO, ' ', 0, KNUM, NBORDR, PREC, CRIT, IRET )
      IF (IRET.NE.0) GOTO 9999
      CALL JEVEUO ( KNUM, 'L', JORDR )
C
      CALL GETTCO(RESUCO,TYSD)
      CALL JEEXIN(RESUCO//'           .INST',IRET)
      IF (IRET.NE.0) EXITIM = .TRUE.
      NCMAX = NBORDR
      NBVAL = 2*NCMAX
      CALL JECREO(CHBID,'V V R')
      CALL JEECRA(CHBID,'LONMAX',NBVAL,' ')
      CALL JEVEUO(CHBID,'E',JVALLU)
      DO 1 IVAL=1,NBVAL
         ZR(JVALLU-1+IVAL)=0.D0
    1 CONTINUE
      NBCOUP = 0
      CHGEO2 = '&&OP0133.CH_GEOMER'
      CALL GETVEM(NOMA,'GROUP_MA',' ','GROUP_MA_1',
     +     0,1,0,K8BID,NBG)
      CALL GETVEM(NOMA,'GROUP_MA',' ','GROUP_MA_2',
     +     0,1,0,K8BID,NBG2)
      NBG = -NBG
      NBG2 = -NBG2
      CALL JECREO ('&&OP0133.GROUP', 'V V K8')
      CALL JEECRA ('&&OP0133.GROUP', 'LONMAX', NBG, ' ')
      CALL JEVEUO ('&&OP0133.GROUP', 'E', JGROUP)
      IN=0
      IN2=0
      INTO=0
      INT2=0
      CALL GETVEM(NOMA,'GROUP_MA',' ','GROUP_MA_1',
     +     0,1,NBG,ZK8(JGROUP),N)
      DO 110 I=1,NBG
         CALL JELIRA(JEXNOM(NOMA//'.GROUPEMA',ZK8(JGROUP-1+I)),
     +                              'LONMAX',NMAGR,K1BID)
         INTO=INTO+NMAGR
  110 CONTINUE
      NBMA = INTO
      LISTMA = '&&OP0133.LISTE'
      CALL WKVECT(LISTMA,'V V I',2*INTO,JNUMA)
      DO 112 I=1,NBG
         CALL JEVEUO(JEXNOM(NOMA//'.GROUPEMA',ZK8(JGROUP-1+I)),
     +                  'L',JNGROU)
         CALL JELIRA(JEXNOM(NOMA//'.GROUPEMA',ZK8(JGROUP-1+I)),
     +                  'LONMAX',NMAGR,K1BID)
         DO 113 J=1,NMAGR
            IN=IN+1
            CALL JEVEUO(JEXNUM(NOMA//'.CONNEX',ZI(JNGROU-1+J)),'L',JNO)
            ZI(JNUMA+2*IN-2)=ZI(JNO)
            ZI(JNUMA+2*IN-1)=ZI(JNO+1)
  113    CONTINUE
  112 CONTINUE
C    CAS D'UN POINT FIXE
      IF (NBG2.NE.0) GOTO 15
      CALL GETVR8(' ','POIN_FIXE',0,1,3,U(1),N)
      GOTO 16
   15 CONTINUE
C    CAS D'UNE DEUXIEME LIGNE
      CALL JECREO ('&&OP0133.GROU2', 'V V K8')
      CALL JEECRA ('&&OP0133.GROU2', 'LONMAX', NBG2, ' ')
      CALL JEVEUO ('&&OP0133.GROU2', 'E', JGROU2)
      CALL GETVEM(NOMA,'GROUP_MA',' ','GROUP_MA_2',
     +     0,1,NBG2,ZK8(JGROU2),N)
      DO 111 I=1,NBG2
         CALL JELIRA(JEXNOM(NOMA//'.GROUPEMA',ZK8(JGROU2-1+I)),
     +                              'LONMAX',NMAG2,K1BID)
         INT2=INT2+NMAG2
  111 CONTINUE
      NBMA2 = INT2
      LISTM2 = '&&OP0133.LIST2'
      CALL WKVECT(LISTM2,'V V I',2*INT2,JNUMA2)
      DO 114 I=1,NBG2
         CALL JEVEUO(JEXNOM(NOMA//'.GROUPEMA',ZK8(JGROU2-1+I)),
     +                  'L',JNGRO2)
         CALL JELIRA(JEXNOM(NOMA//'.GROUPEMA',ZK8(JGROU2-1+I)),
     +                  'LONMAX',NMAG2,K1BID)
         DO 115 J=1,NMAG2
            IN2=IN2+1
            CALL JEVEUO(JEXNUM(NOMA//'.CONNEX',ZI(JNGRO2-1+J)),'L',JNO)
            ZI(JNUMA2+2*IN2-2)=ZI(JNO)
            ZI(JNUMA2+2*IN2-1)=ZI(JNO+1)
  115    CONTINUE
  114 CONTINUE
   16 CONTINUE
      JMIN1=0
      JMIN2=0
      DO 10 I = 1,NBORDR
         NBCOUP = NBCOUP + 1
         IORDR = ZI(JORDR+I-1)
         CALL RSEXCH(RESUCO,'DEPL',IORDR,CHAMGD,IRET)
         IF (IRET.GT.0) GOTO 10
         CALL VTGPLD(CHGEOM,ALPHA,CHAMGD,'V',CHGEO2)
         CALL JEVEUO(CHGEO2(1:19)//'.VALE','L',JGEOM)
         IF ( EXITIM ) THEN
            CALL RSADPA ( RESUCO,'L',1,'INST',IORDR,0,IAINST,K8B)
            TIME = ZR(IAINST)
         ELSE
            TIME = 0.D0
         ENDIF
         ZR(JVALLU+2*NBCOUP-2)=TIME
         DIST=1.D20
         DO 11 IMA = 1,NBMA
            NOA1=ZI(JNUMA+2*IMA-2)
            NOA2=ZI(JNUMA+2*IMA-1)
            A(1)=ZR(JGEOM+3*NOA2-3)-ZR(JGEOM+3*NOA1-3)
            A(2)=ZR(JGEOM+3*NOA2-2)-ZR(JGEOM+3*NOA1-2)
            A(3)=ZR(JGEOM+3*NOA2-1)-ZR(JGEOM+3*NOA1-1)
            IF (NBG2.NE.0) GOTO 13
C    CAS D'UN POINT FIXE
               B(1)=U(1)-ZR(JGEOM+3*NOA1-3)
               B(2)=U(2)-ZR(JGEOM+3*NOA1-2)
               B(3)=U(3)-ZR(JGEOM+3*NOA1-1)
               S=DDOT(3,A,1,A,1)
               DLAM=DDOT(3,A,1,B,1)
               LAM=DLAM/S
               IF (LAM.LT.0.D0) LAM=0.D0
               IF (LAM.GT.1.D0) LAM=1.D0
               W(1)=B(1)-LAM*A(1)
               W(2)=B(2)-LAM*A(2)
               W(3)=B(3)-LAM*A(3)
               S=DDOT(3,W,1,W,1)
               S=SQRT(S)
               DIST=MIN(DIST,S)
               IF (S.EQ.DIST) JMIN1=IMA
            GOTO 11
 13         CONTINUE
C    CAS D'UNE DEUXIEME LIGNE
            DO 12 IMA2 = 1,NBMA2
               NOB1=ZI(JNUMA2+2*IMA2-2)
               NOB2=ZI(JNUMA2+2*IMA2-1)
               B(1)=ZR(JGEOM+3*NOB2-3)-ZR(JGEOM+3*NOB1-3)
               B(2)=ZR(JGEOM+3*NOB2-2)-ZR(JGEOM+3*NOB1-2)
               B(3)=ZR(JGEOM+3*NOB2-1)-ZR(JGEOM+3*NOB1-1)
               C(1)=ZR(JGEOM+3*NOB1-3)-ZR(JGEOM+3*NOA1-3)
               C(2)=ZR(JGEOM+3*NOB1-2)-ZR(JGEOM+3*NOA1-2)
               C(3)=ZR(JGEOM+3*NOB1-1)-ZR(JGEOM+3*NOA1-1)
               CALL PROVEC(A,B,U)
               DELT=DDOT(3,U,1,U,1)
               CALL PROVEC(U,C,V)
               DMU=DDOT(3,V,1,A,1)
               DLAM=DDOT(3,V,1,B,1)
               IF (DELT.EQ.0.D0) THEN
                  LAM = 0.D0
                  MU = 0.D0
               ELSE
                  LAM=DLAM/DELT
                  MU=DMU/DELT
                  IF (LAM.LT.0.D0) LAM=0.D0
                  IF (MU.LT.0.D0) MU=0.D0
                  IF (LAM.GT.1.D0) LAM=1.D0
                  IF (MU.GT.1.D0) MU=1.D0
               END IF
               W(1)=C(1)+MU*B(1)-LAM*A(1)
               W(2)=C(2)+MU*B(2)-LAM*A(2)
               W(3)=C(3)+MU*B(3)-LAM*A(3)
               S=DDOT(3,W,1,W,1)
               S=SQRT(S)
               DIST=MIN(DIST,S)
               IF (S.EQ.DIST) THEN
                  JMIN1=IMA
                  JMIN2=IMA2
               END IF
 12         CONTINUE
 11      CONTINUE
         ZR(JVALLU+2*NBCOUP-1)=DIST
         IF (NIV.GT.1) THEN
          IF (NBG2.NE.0) THEN
           WRITE(IFM,*) 'ORDRE=',NBCOUP,'ELE 1:',JMIN1,'ELE 2:',JMIN2
          ELSE
           WRITE(IFM,*) 'ORDRE=',NBCOUP,'ELE 1:',JMIN1
          END IF
         END IF
 10   CONTINUE
C
C     CREATION ET REMPLISSAGE DE L'OBJET NOMFON.VAL
C
      CALL JECREO(CHVAL,'G V R')
      CALL JEECRA(CHVAL,'LONMAX',NBVAL,' ')
      CALL JEECRA(CHVAL,'LONUTI',NBVAL,' ')
      CALL JEVEUO(CHVAL,'E',JVAL)
      DO 4 IVAL=1,NBCOUP
         ZR(JVAL-1+IVAL)=ZR(JVALLU-1+2*IVAL-1)
         ZR(JVAL-1+NBCOUP+IVAL)=ZR(JVALLU-1+2*IVAL)
    4 CONTINUE
C
C     CREATION ET REMPLISSAGE DE L'OBJET NOMFON.PRO
C
      CALL JECREO(CHPRO,'G V K16')
      CALL JEECRA(CHPRO,'LONMAX',5,' ')
      CALL JEVEUO(CHPRO,'E',JPRO)
      ZK16(JPRO)='FONCTION'
      ZK16(JPRO+1)='LIN LIN '
      ZK16(JPRO+2)='INST'
      ZK16(JPRO+3)='DIST'
      ZK16(JPRO+4)='CC'
C
C     --- VERIFICATION QU'ON A BIEN CREER UNE FONCTION ---
C         ET REMISE DES ABSCISSES EN ORDRE CROISSANT
      CALL ORDONN(NOMFON,NOMCMD,0)
C
C     --- IMPRESSIONS ---
      CALL JEVEUO(CHPRO,'L',JPRO)
      CALL JELIRA(CHVAL,'LONUTI',NBCOUP,K1BID)
      NBCOUP = NBCOUP / 2
      IF (NIV.GT.1) CALL FOIMPR(NOMFON,NIV,IFM,0,K19BID)
 9999 CONTINUE
      CALL JEDEMA()
      END
