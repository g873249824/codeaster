      SUBROUTINE VSDMAI(NOMSD)
      IMPLICIT NONE
      CHARACTER*(*) NOMSD
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 10/10/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET
C ----------------------------------------------------------------------
C BUT : VERISD/MAILLAGE
C ----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32,JEXNUM,JEXNOM,JEXATR
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------

      INTEGER IRET,IG,NBG,IACNX1,ILCNX1,IE,NBE,JGROUP,NUE
      INTEGER INO,NUNO,IMA,JLMA,I1,I2,JLNO,K
      INTEGER JDIME,N1,NBNO,NBMA,NBSM,NBNL,NBSMX,DIMCO,NBNOM
      INTEGER VERIOB,IEX1
      CHARACTER*4 KBID
      CHARACTER*8 MA
      CHARACTER*19 CH19
C -DEB------------------------------------------------------------------

      CALL JEMARQ()


      MA = NOMSD

      CALL JEEXIN(MA//'.NOMMAI',I1)
      CALL JEEXIN(MA//'.NOMACR',I2)
      CALL ASSERT(I1.GT.0 .OR. I2.GT.0)
      IF (I1.GT.0) THEN
      ENDIF
      IF (I2.GT.0) THEN
      ENDIF
      CALL JEVEUO(MA//'.DIME','L',JDIME)
      NBNO = ZI(JDIME-1+1)
      NBNL = ZI(JDIME-1+2)
      NBMA = ZI(JDIME-1+3)
      NBSM = ZI(JDIME-1+4)
      NBSMX = ZI(JDIME-1+5)
      DIMCO = ZI(JDIME-1+6)
      CALL ASSERT(DIMCO.EQ.2 .OR. DIMCO.EQ.3)
      CALL ASSERT(NBMA.GT.0 .OR. NBSM.GT.0)

C     -- VERIFICATION SSS :
      CALL ASSERT(NBSM.LE.NBSMX)
      IF (NBSM.GT.0) THEN
        CALL JELIRA(MA//'.PARA_R','LONMAX',N1,KBID)
        CALL ASSERT(N1.EQ.14*NBSM)
        CALL JELIRA(MA//'.SUPMAIL','NMAXOC',N1,KBID)
        CALL ASSERT(N1.EQ.NBSM)
        CALL JELIRA(MA//'.NOMACR','LONMAX',N1,KBID)
        CALL ASSERT(N1.EQ.NBSM)
      ENDIF
      IF (NBNL.GT.0) THEN
        CALL ASSERT(NBSM.GT.0)
        CALL JELIRA(MA//'.TYPL','LONMAX',N1,KBID)
        CALL ASSERT(N1.EQ.NBNL)
      ENDIF

C     -- VERIFICATION NBMA :
      IF (NBMA.GT.0) THEN
        CALL JELIRA(MA//'.CONNEX','NMAXOC',N1,KBID)
        CALL ASSERT(N1.EQ.NBMA)
        CALL JELIRA(MA//'.TYPMAIL','LONMAX',N1,KBID)
        CALL ASSERT(N1.EQ.NBMA)
        CALL JELIRA(MA//'.NOMMAI','NOMUTI',N1,KBID)
        CALL ASSERT(N1.EQ.NBMA)
      ENDIF

C     -- VERIFICATION NBNO :
      CALL ASSERT(NBNO.GT.0)
      CALL JELIRA(MA//'.NOMNOE','NOMUTI',N1,KBID)
      CALL ASSERT(N1.EQ.(NBNO+NBNL))
      CALL JELIRA(MA//'.COORDO    .VALE','LONMAX',N1,KBID)
      CALL ASSERT(N1.EQ.3*NBNO)


C     -- VERIFICATION DE LA CONNECTIVITE:
C     -----------------------------------
      CALL JEEXIN(MA//'.CONNEX',IRET)
      IF (IRET.GT.0) THEN
        CALL JEVEUO(MA//'.CONNEX','L',IACNX1)
        CALL JEVEUO(JEXATR(MA//'.CONNEX','LONCUM'),'L',ILCNX1)
        DO 20,IMA = 1,NBMA
          NBNOM = ZI(ILCNX1+IMA) - ZI(ILCNX1-1+IMA)
          CALL ASSERT(NBNOM.GE.1 .AND. NBNOM.LE.27)
          DO 10,INO = 1,NBNOM
            NUNO = ZI(IACNX1+ZI(ILCNX1-1+IMA)-2+INO)
            CALL ASSERT(NUNO.GE.1 .AND. NUNO.LE.NBNO)
   10     CONTINUE
   20   CONTINUE
      ENDIF


C     -- VERIFICATION DES GROUP_NO :
C     -----------------------------------
      CALL JEEXIN(MA//'.GROUPENO',IRET)
      IF (IRET.GT.0) THEN
        CALL ASSERT(NBNO.GT.0)
        CALL WKVECT('&&VSDMAI.LNO','V V I',NBNO,JLNO)
        CALL JELIRA(MA//'.GROUPENO','NOMUTI',NBG,KBID)
        DO 50,IG = 1,NBG
          CALL JELIRA(JEXNUM(MA//'.GROUPENO',IG),'LONMAX',NBE,KBID)
          CALL JEVEUO(JEXNUM(MA//'.GROUPENO',IG),'L',JGROUP)
          DO 30,IE = 1,NBE
            NUE = ZI(JGROUP-1+IE)
            CALL ASSERT(NUE.GE.1 .AND. NUE.LE.NBNO)
            ZI(JLNO-1+NUE) = ZI(JLNO-1+NUE) + 1
   30     CONTINUE
          DO 40,K = 1,NBNO
C            -- PAS DE DOUBLONS DANS .GROUPENO :
            CALL ASSERT(ZI(JLNO-1+K).LE.1)
            ZI(JLNO-1+K) = 0
   40     CONTINUE
   50   CONTINUE
        CALL JEDETR('&&VSDMAI.LNO')
      ENDIF


C     -- VERIFICATION DES GROUP_MA :
C     -----------------------------------
      CALL JEEXIN(MA//'.GROUPEMA',IRET)
      IF (IRET.GT.0) THEN
        CALL ASSERT(NBMA.GT.0)
        CALL WKVECT('&&VSDMAI.LMA','V V I',NBMA,JLMA)
        CALL JELIRA(MA//'.GROUPEMA','NOMUTI',NBG,KBID)
        DO 80,IG = 1,NBG
          CALL JELIRA(JEXNUM(MA//'.GROUPEMA',IG),'LONMAX',NBE,KBID)
          CALL JEVEUO(JEXNUM(MA//'.GROUPEMA',IG),'L',JGROUP)
          DO 60,IE = 1,NBE
            NUE = ZI(JGROUP-1+IE)
            CALL ASSERT(NUE.GE.1 .AND. NUE.LE.NBMA)
            ZI(JLMA-1+NUE) = ZI(JLMA-1+NUE) + 1
   60     CONTINUE
          DO 70,K = 1,NBMA
C            -- PAS DE DOUBLONS DANS .GROUPEMA :
            CALL ASSERT(ZI(JLMA-1+K).LE.1)
            ZI(JLMA-1+K) = 0
   70     CONTINUE
   80   CONTINUE
        CALL JEDETR('&&VSDMAI.LMA')
      ENDIF




   90 CONTINUE
      CALL JEDEMA()
      END
