      SUBROUTINE NUNUCO(NUMEDD,DEFICO,LCONT ,SDNUCO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXNOM
      CHARACTER*24 NUMEDD,DEFICO
      LOGICAL      LCONT
      CHARACTER*24 SDNUCO
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (INITIALISATION)
C
C CREATION DE LA SD POUR REPERAGE DDL DE CONTACT
C
C ----------------------------------------------------------------------
C
C
C IN  NUMEDD : NOM DE LA NUMEROTATION
C IN  DEFICO : NOM DE LA SD DEFINITION DU CONTACT
C IN  LCONT  : IL Y A DU CONTACT
C IN  SDNUCO : NOM DE LA S.D. DDL DE CONTACT
C
C
C
C
      CHARACTER*8   NOMGD,MODELE,NOMA,K8BID
      CHARACTER*24  NOLILI
      LOGICAL       EXISDG,LXFCM,CFDISL
      INTEGER       NEC,NBNOEU,NCMPMX
      INTEGER       NLILI,NEQ
      INTEGER       IER,IBID,ICO
      INTEGER       INDIK8,ILAGC,ILAGF1,ILAGF2
      INTEGER       INO,I,K,INOC,IVAL,IADG
      INTEGER       JCMP,IANUEQ,IAPRNO
      INTEGER       IFM,NIV
      INTEGER       JNUCO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- MODELE XFEM ?
C
      LXFCM = .FALSE.
      IF (LCONT) THEN
        LXFCM = CFDISL(DEFICO,'FORMUL_XFEM')
      ENDIF
C
C --- MODELE ASSOCIE AU NUME_DDL
C
      CALL DISMOI('F','NOM_MODELE',NUMEDD,'NUME_DDL',IBID  ,MODELE,IER)
C
C --- NOM DU MAILLAGE
C
      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE'  ,IBID  ,NOMA  ,IER)
C
C --- NOMBRE DE NOEUDS DU MAILLAGE
C
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNOEU,K8BID ,IER)
C
C --- NOMBRE DE COMPOSANTES ASSOCIEES A LA GRANDEUR DEPL_R
C
      NOMGD  = 'DEPL_R'
      CALL DISMOI('F','NB_EC',NOMGD,'GRANDEUR',NEC,K8BID,IER)
      CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'LONMAX',NCMPMX,K8BID)
      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'L',JCMP)
C
C --- LOCALISATION DE LAGS_C DANS LA LISTE DES DDLS ASSOCIES
C --- A LA GRANDEUR DEPL_R
C
      ILAGC  = INDIK8(ZK8(JCMP),'LAGS_C' ,1,NCMPMX)
      ILAGF1 = INDIK8(ZK8(JCMP),'LAGS_F1',1,NCMPMX)
      ILAGF2 = INDIK8(ZK8(JCMP),'LAGS_F2',1,NCMPMX)
      CALL ASSERT(ILAGC.NE.0)
      CALL ASSERT(ILAGF1.NE.0)
      CALL ASSERT(ILAGF2.NE.0)
C
C --- RECUPERATION DU NOMBRE D'INCONNUES DU MODELE
C
      CALL JELIRA(NUMEDD(1:14)//'.NUME.NUEQ','LONUTI',NEQ,K8BID)
      CALL WKVECT(SDNUCO,'V V I',NEQ,JNUCO)
C
C --- RECUPERATION DU .PRNO ASSOCIE AU MAILLAGE
C
      CALL JELIRA(NUMEDD(1:14)//'.NUME.PRNO','NMAXOC',NLILI,K8BID)
      K = 0
      DO 40 I = 1, NLILI
        CALL JENUNO(JEXNUM(NUMEDD(1:14)//'.NUME.LILI',I),NOLILI)
        IF (NOLILI(1:8).NE.'&MAILLA ') GOTO 40
        K = I
  40  CONTINUE
      CALL ASSERT (K.NE.0)
C
      CALL JEVEUO(JEXNUM(NUMEDD(1:14)//'.NUME.PRNO',K),'L',IAPRNO)
C
C --- TABLEAU DES NUMEROS D'EQUATIONS
C
      CALL JEVEUO(NUMEDD(1:14)//'.NUME.NUEQ','L',IANUEQ)
C
C --- AFFECTATION DU TABLEAU DES NUMEROS DES INCONNUES
C
      INOC = 0
      IF (LXFCM) GOTO 999
      DO 50 INO = 1, NBNOEU
        INOC = INOC + 1
        IVAL = ZI(IAPRNO+(INO-1)*(NEC+2)+1-1)
        IADG = IAPRNO+(INO-1)*(NEC+2)+3-1
        IF (EXISDG(ZI(IADG),ILAGC)) THEN
          ICO = 0
          DO 70 I = 1, ILAGC-1
            IF (EXISDG(ZI(IADG),I)) ICO = ICO + 1
  70      CONTINUE
          ZI(JNUCO+IVAL+ICO-1) = 1
        ENDIF
        IF (EXISDG(ZI(IADG),ILAGF1)) THEN
          ICO = 0
          DO 71 I = 1, ILAGF1-1
            IF (EXISDG(ZI(IADG),I)) ICO = ICO + 1
  71      CONTINUE
          ZI(JNUCO+IVAL+ICO-1) = 1
        ENDIF
        IF (EXISDG(ZI(IADG),ILAGF2)) THEN
          ICO = 0
          DO 72 I = 1, ILAGF2-1
            IF (EXISDG(ZI(IADG),I)) ICO = ICO + 1
  72      CONTINUE
          ZI(JNUCO+IVAL+ICO-1) = 1
        ENDIF
  50  CONTINUE
C
  999 CONTINUE
C
      CALL JEDEMA()
      END
