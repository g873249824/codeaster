      SUBROUTINE UTCHDL(CHAM19,NOMMA,NOMAIL,NONOEU,NUPO,NUSP,IVARI,
     &                  NOCMP1,IDDL)
      IMPLICIT NONE
      INTEGER NUPO,IVARI,IDDL,NUSP
      CHARACTER*(*) CHAM19,NOMMA,NOMAIL,NONOEU,NOCMP1
C ----------------------------------------------------------------------
C MODIF UTILITAI  DATE 06/04/2007   AUTEUR PELLET J.PELLET 

C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET
C A_UTILI

C BUT: RECUPERER UN NUMERO DE DDL DANS UN CHAM_ELEM
C ----------------------------------------------------------------------
C IN  : CHAM19 : NOM DU CHAM_ELEM
C IN  : NOMMA  : NOM DU MAILLAGE
C IN  : NOMAIL : NOM DE LA MAILLE A EXTRAIRE
C IN  : NONOEU : NOM D'UN NOEUD (POUR LES CHAM_ELEM "AUX NOEUDS").
C IN  : NUPO   : NUMERO D'UN POINT (POUR LES CHAM_ELEM "GAUSS").
C IN  : NUSP   : NUMERO DU SOUS_POINT A TESTER SUR LA MAILLE NOMAIL
C                (SI NUSP=0 : IL N'Y A PAS DE SOUS-POINT)
C IN  : NOCMP1 : NOM DU DDL A EXTRAIRE SUR LE POINT CHERCHE
C IN  : IVARI  : NUMERO DE LA CMP (POUR VARI_R)
C OUT : IDDL   : NUMERO DU DDL DANS LE .CELV
C   CONVENTION : IDDL=0 -> ON N'A PAS TROUVE LE DDL CHERCHE
C ----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXNOM
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ----------------------------
C     ------------------------------------------------------------------
      INTEGER IBID,GD,NBEC,INCMP
      INTEGER VALI(2)
      INTEGER IACELK,JCELD,NEC,ICMP,NCMPMX,IANCMP,INDIK8,IMA
      INTEGER INO,IACONX,NBNO,IPO,INDIIS,NUPO2,IGR,IEL
      INTEGER IMOLO,JMOLO,ISPT,JLPT,JLCUPT,NBPT,IPT,ICO
      INTEGER K,IADG,KCMP,CUMU,NBSPT,ADIEL,LGCATA,NCDYN
      CHARACTER*1 AOF
      CHARACTER*24 VALK(2)
      CHARACTER*8 K8B,NOCMP,NOMAIZ,NONOEZ,NOMMAZ,NOMGD
      CHARACTER*16 NOMCMD
      CHARACTER*19 NOLIGR,CHM19Z,NCMP
      LOGICAL EXISDG,DIFF,TROUVE,NOGRAN
C     ------------------------------------------------------------------

      CALL JEMARQ()
      IDDL = 0

      CALL GETRES(K8B,K8B,NOMCMD)
      IF (NOMCMD.EQ.'TEST_RESU') THEN
        AOF='A'
      ELSE
        AOF='F'
      END IF

      CHM19Z = CHAM19
      NOMAIZ = NOMAIL(1:8)
      NONOEZ = NONOEU(1:8)
      NOMMAZ = NOMMA(1:8)
      NCMP = '&&UTCHDL.N_CMP'
      CALL JEVEUO(CHM19Z//'.CELK','L',IACELK)
      NOLIGR = ZK24(IACELK) (1:19)
      TROUVE = .FALSE.
      NOGRAN = .FALSE.



C     1. ON VERIFIE QUE LE CHAM_ELEM N'EST PAS TROP DYNAMIQUE :
C     ---------------------------------------------------------
C     CALL CELVER(CHM19Z,'NBSPT_1','STOP',IBID)


      CALL JEVEUO(CHM19Z//'.CELD','L',JCELD)
      GD = ZI(JCELD)
      CALL JENUNO(JEXNUM('&CATA.GD.NOMGD',GD),NOMGD)
      NEC = NBEC(GD)


C     2. ON RECHERCHE LE NUMERO DE LA CMP CHERCHEE : ICMP
C     -------------------------------------------------------
      NOCMP = NOCMP1
      IF (NOMGD.EQ.'VARI_R') THEN
        NOCMP = 'VARI'
        ICMP = IVARI
        IF (ICMP.LE.0) ICMP = 0
      ELSE
        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GD),'LONMAX',NCMPMX,K8B)
        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GD),'L',IANCMP)
        ICMP = INDIK8(ZK8(IANCMP),NOCMP,1,NCMPMX)
        CALL WKVECT(NCMP,'V V K8',NCMPMX,INCMP)

      END IF
      IF (ICMP.EQ.0) THEN
         VALK(1) = NOCMP
         VALK(2) = NOMGD
         CALL U2MESK(AOF,'UTILITAI5_30', 2 ,VALK)
        IDDL=0
        GOTO 9999
      END IF


C     3. ON VERIFIE LA MAILLE : IMA
C     -----------------------------
      CALL JENONU(JEXNOM(NOMMAZ//'.NOMMAI',NOMAIZ),IMA)
      IF (IMA.LE.0) THEN
         VALK(1) = NOMAIZ
         VALK(2) = NOMMAZ
         CALL U2MESK(AOF,'UTILITAI5_31', 2 ,VALK)
        IDDL=0
        GOTO 9999
      END IF


C     4. ON VERIFIE LE NOEUD : CALCUL DE NUPO2
C     ------------------------------------------
      IF (NONOEU(1:1).NE.' ') THEN
        CALL DISMOI(AOF,'TYPE_CHAMP',CHM19Z,'CHAMP',IBID,K8B,IBID)
        IF (K8B(1:4).NE.'ELNO') THEN
          CALL U2MESK(AOF,'UTILITAI5_32',1,CHM19Z)
        END IF
        CALL JENONU(JEXNOM(NOMMAZ//'.NOMNOE',NONOEZ),INO)
        IF (INO.LE.0) THEN
           VALK(1) = NONOEZ
           VALK(2) = NOMMAZ
           CALL U2MESK(AOF,'ALGORITH_21', 2 ,VALK)
        END IF
C        -- ON CHERCHE LE "IPO" CORRESPONDANT A INO:
        CALL JEVEUO(JEXNUM(NOMMAZ//'.CONNEX',IMA),'L',IACONX)
        CALL JELIRA(JEXNUM(NOMMAZ//'.CONNEX',IMA),'LONMAX',NBNO,K8B)
        IPO = INDIIS(ZI(IACONX),INO,1,NBNO)
        IF (IPO.LE.0) THEN
           VALK(1) = NONOEZ
           VALK(2) = NOMAIZ
           CALL U2MESK(AOF,'SOUSTRUC_59', 2 ,VALK)
        END IF
        NUPO2 = IPO
      ELSE
        NUPO2 = NUPO
      END IF


C     5. CALCUL DE IGR ET IEL :
C     ------------------------------------------
      CALL NUMEL2(CHM19Z,IMA,IGR,IEL)
      IF ((IGR.LE.0) .OR.(IEL.LE.0)) THEN
         VALK(1) = NOMAIZ
         VALK(2) = NOLIGR
        CALL U2MESK(AOF,'UTILITAI5_34', 2 ,VALK)
      ENDIF
      NBSPT = ZI(JCELD-1+ZI(JCELD-1+4+IGR)+4+4* (IEL-1)+1)
      ADIEL = ZI(JCELD-1+ZI(JCELD-1+4+IGR)+4+4* (IEL-1)+4)
      NCDYN = ZI(JCELD-1+ZI(JCELD-1+4+IGR)+4+4* (IEL-1)+2)



C     6. CALCUL DE IDDL :
C     ------------------------------------------
      IMOLO = ZI(JCELD-1+ZI(JCELD-1+4+IGR)+2)
      IF (IMOLO.LE.0) THEN
        CALL U2MESK(AOF,'UTILITAI5_35',1,NOMAIZ)
      END IF
      CALL JEVEUO(JEXNUM('&CATA.TE.MODELOC',IMOLO),'L',JMOLO)


C     -- NUMERO DE SOUS_POINT :
C     ------------------------
      IF (NUSP.EQ.0) THEN
        ISPT = 1
      ELSE
        ISPT = NUSP
      END IF
      IF (ISPT.GT.NBSPT) THEN
          CALL U2MESS(AOF,'UTILITAI5_36')
          IDDL=0
          GOTO 9999
      END IF


C     6.1 CAS : NOMGD /= VARI_R :
C     ----------------------------
      IF (NOMGD.NE.'VARI_R') THEN
        DIFF = (ZI(JMOLO-1+4).GT.10000)
        NBPT = MOD(ZI(JMOLO-1+4),10000)
        IF (NUPO2.GT.NBPT) THEN
            CALL U2MESS(AOF,'UTILITAI5_37')
            IDDL=0
            GOTO 9999
        END IF
        CALL WKVECT('&&UTCHDL.LONG_PT','V V I',NBPT,JLPT)
        CALL WKVECT('&&UTCHDL.LONG_PT_CUMU','V V I',NBPT,JLCUPT)

C         -- CALCUL DU NOMBRE DE CMPS POUR CHAQUE POINT
C            ET DU CUMUL SUR LES POINTS PRECEDENTS :
        DO 20,IPT = 1,NBPT
          ICO = 0
          K = 1
          IF (DIFF) K = IPT
          IADG = JMOLO - 1 + 4 + (K-1)*NEC + 1
          DO 10,KCMP = 1,NCMPMX
            IF (EXISDG(ZI(IADG),KCMP)) THEN
              ICO = ICO + 1
              ZK8(INCMP+ICO-1) = ZK8(IANCMP+KCMP-1)
              IF (NOCMP.EQ.ZK8(INCMP+ICO-1)) TROUVE = .TRUE.
            END IF
   10     CONTINUE
          ZI(JLPT-1+IPT) = ICO
   20   CONTINUE
        IF ((.NOT.TROUVE) .AND. (.NOT.NOGRAN)) THEN
          CALL U2MESK(AOF,'UTILITAI5_38',1,NOCMP)
        END IF



        CUMU = 0
        DO 30,IPT = 1,NBPT
          ZI(JLCUPT-1+IPT) = CUMU
          CUMU = CUMU + ZI(JLPT-1+IPT)
   30   CONTINUE


        DO 50,IPT = 1,NBPT
          K = 1
          IF (DIFF) K = IPT
          IADG = JMOLO - 1 + 4 + (K-1)*NEC + 1
          ICO = 0
          DO 40,KCMP = 1,NCMPMX
            IF (EXISDG(ZI(IADG),KCMP)) THEN
              ICO = ICO + 1


              IDDL = ADIEL - 1 + NBSPT*ZI(JLCUPT-1+IPT) +
     &               (ISPT-1)*ZI(JLPT-1+IPT) + ICO
              IF ((IPT.EQ.NUPO2) .AND. (KCMP.EQ.ICMP)) GO TO 60

            END IF
   40     CONTINUE
   50   CONTINUE
C       -- ON N'A PAS TROUVE LE POINT LE SOUS-POINT OU LA COMPOSANTE :
        IDDL=0
        GO TO 9999
   60   CONTINUE


C     6.2 CAS : NOMGD = VARI_R :
C     ----------------------------
      ELSE
        LGCATA = ZI(JCELD-1+ZI(JCELD-1+4+IGR)+3)
        DIFF = (ZI(JMOLO-1+4).GT.10000)
        IF (DIFF) CALL U2MESS(AOF,'CALCULEL_46')
        NBPT = MOD(ZI(JMOLO-1+4),10000)
        IF (NBPT.NE.LGCATA) CALL U2MESS(AOF,'CALCULEL_2')


        IPT = NUPO2

        IF (ICMP.GT.NCDYN) THEN
          VALK(1) = NOMAIZ
          VALI (1) = NCDYN
          VALI (2) = ICMP
          CALL U2MESG('AOF', 'UTILITAI7_5',1,VALK,2,VALI,0,0.D0)
          IDDL=0
          GO TO 9999
        ELSE

          IF ((ISPT.LE.NBSPT).AND.(IPT.LE.NBPT)) THEN
            IDDL = ADIEL - 1 + ((IPT-1)*NBSPT+ISPT-1)*NCDYN + ICMP
          ELSE
            CALL ASSERT(.FALSE.)
          END IF
        END IF
      END IF


9999  CONTINUE
      CALL JEDETR('&&UTCHDL.LONG_PT')
      CALL JEDETR('&&UTCHDL.LONG_PT_CUMU')
      CALL JEDETR('&&UTCHDL.N_CMP')

      CALL JEDEMA()
      END
