      SUBROUTINE MODOPT ( RESUCO, MODELE, LESOPT, NBOPT )
      IMPLICIT   NONE
      INTEGER             NBOPT
      CHARACTER*8         RESUCO, MODELE
      CHARACTER*24        LESOPT
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 21/02/2012   AUTEUR MACOCCO K.MACOCCO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C    CETTE ROUTINE AJOUTE DES OPTIONS DE CALCUL DANS CALC_ELEM SI
C    CELLES-CI ONT ETE OMISES :
C
C    SI ERZ1_ELEM ALORS SIEF_ELGA PUIS SIZ1_NOEU
C    SI SIZ1_NOEU ALORS SIEF_ELGA
C    SI ERZ2_ELEM ALORS SIEF_ELGA PUIS SIZ2_NOEU
C    SI SIZ2_NOEU ALORS SIEF_ELGA
C    SI ERME_ELEM ALORS SIGM_ELNO ou SIEF_ELNO
C    SI ERTH_ELEM ALORS FLUX_ELNO
C
C ----------------------------------------------------------------------
C     ----- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER           ZI
      COMMON / IVARJE / ZI(1)
      REAL*8            ZR
      COMMON / RVARJE / ZR(1)
      COMPLEX*16        ZC
      COMMON / CVARJE / ZC(1)
      LOGICAL           ZL
      COMMON / LVARJE / ZL(1)
      CHARACTER*8       ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                       ZK24
      CHARACTER*32                                ZK32
      CHARACTER*80                                         ZK80
      COMMON / KVARJE / ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
C     ----- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      INTEGER       J, JOPT, JOPT2
      INTEGER       I, INDK16, IRET, IRXFEM, NBOPT2
      INTEGER       IERZ1, IERZ2, INOZ1, INOZ2, IERTH, IERME      
      CHARACTER*16  TYSD
      CHARACTER*24  LESOP2
      LOGICAL       YATHM, PERMAN

C DEB ------------------------------------------------------------------
C
      CALL JEMARQ()
C
      CALL GETTCO ( RESUCO, TYSD )
      CALL JEVEUO(LESOPT,'L',JOPT)
C
      IERZ1 = INDK16( ZK16(JOPT), 'ERZ1_ELEM', 1, NBOPT )
C
      IERZ2 = INDK16( ZK16(JOPT), 'ERZ2_ELEM', 1, NBOPT )
C
      INOZ1 = INDK16( ZK16(JOPT), 'SIZ1_NOEU', 1, NBOPT )
C
      INOZ2 = INDK16( ZK16(JOPT), 'SIZ2_NOEU', 1, NBOPT )
C
      IERTH = INDK16( ZK16(JOPT), 'ERTH_ELEM', 1, NBOPT )
C
      IERME = INDK16( ZK16(JOPT), 'ERME_ELEM', 1, NBOPT )
C
      IF (IERZ1+IERZ2+INOZ1+INOZ2+IERTH+IERME.EQ.0) THEN
        GOTO 9999
      ENDIF
C
      LESOP2 = '&&OP0058.NEW_OPTION'
      CALL JEDUPO ( LESOPT , 'V', LESOP2 , .FALSE. )
      CALL JEDETR ( LESOPT )
      CALL WKVECT ( LESOPT , 'V V K16' , NBOPT+20 , JOPT )
      CALL JEVEUO ( LESOP2 , 'L', JOPT2 )
C
      NBOPT2 = 1
C
C     EST-CE DU XFEM ?
      CALL EXIXFE(MODELE, IRXFEM)
      IF (IRXFEM.NE.0)THEN
         CALL RSCHEX ( RESUCO, 'SISE_ELNO', IRET )
         IF ( IRET .EQ. 0 ) THEN
            ZK16(JOPT+NBOPT2-1) = 'SISE_ELNO'
            NBOPT2 = NBOPT2 + 1
         ENDIF
      ENDIF
C
      IF (IERME.NE.0) THEN
C        EST-CE DE LA THM ?
         CALL EXITHM ( MODELE, YATHM, PERMAN)
         IF (YATHM) THEN
            CALL RSCHEX ( RESUCO, 'SIEF_ELNO', IRET )
            IF ( IRET .EQ. 0 ) THEN
               ZK16(JOPT+NBOPT2-1) = 'SIEF_ELNO'
               NBOPT2 = NBOPT2 + 1
            ENDIF            
         ELSE
            CALL RSCHEX ( RESUCO, 'SIGM_ELNO', IRET )
            IF ( IRET .EQ. 0 ) THEN
               ZK16(JOPT+NBOPT2-1) = 'SIGM_ELNO'
               NBOPT2 = NBOPT2 + 1
            ENDIF
         ENDIF
      ENDIF
C
      IF( ( IERZ1 .NE. 0 ).OR.
     &    ( IERZ2 .NE. 0 ).OR.
     &    ( INOZ1 .NE. 0 ).OR.
     &    ( INOZ2 .NE. 0 )) THEN
        IF ( TYSD .EQ. 'EVOL_ELAS' ) THEN
           CALL RSCHEX ( RESUCO, 'SIEF_ELGA', IRET )
           IF ( IRET .EQ. 0 ) THEN
              CALL U2MESS('A','UTILITAI2_52')
              ZK16(JOPT+NBOPT2-1) = 'SIEF_ELGA'
              NBOPT2 = NBOPT2 + 1
           ENDIF
        ENDIF
      ENDIF
C
      IF ( IERZ1 .NE. 0 ) THEN
         CALL RSCHEX ( RESUCO, 'SIZ1_NOEU', IRET )
         IF ( IRET .EQ. 0 ) THEN
            ZK16(JOPT+NBOPT2-1) = 'SIZ1_NOEU'
            NBOPT2 = NBOPT2 + 1
         ENDIF
      ENDIF
C
      IF ( IERZ2 .NE. 0 ) THEN
         CALL RSCHEX ( RESUCO, 'SIZ2_NOEU', IRET )
         IF ( IRET .EQ. 0 ) THEN
            ZK16(JOPT+NBOPT2-1) = 'SIZ2_NOEU'
            NBOPT2 = NBOPT2 + 1
         ENDIF
      ENDIF
C
      IF ( IERTH .NE. 0) THEN
         CALL RSCHEX ( RESUCO, 'FLUX_ELNO', IRET )
         IF ( IRET .EQ. 0 ) THEN
            ZK16(JOPT+NBOPT2-1) = 'FLUX_ELNO'
            NBOPT2 = NBOPT2 + 1
         ENDIF
      ENDIF
C
      NBOPT2 = NBOPT2 - 1
C
      DO 10 I = 1 , NBOPT
         DO 12 J = 1 , NBOPT2
            IF ( ZK16(JOPT2+I-1) .EQ. ZK16(JOPT+J-1) ) GOTO 10
 12      CONTINUE
         NBOPT2 = NBOPT2 + 1
         ZK16(JOPT+NBOPT2-1) = ZK16(JOPT2+I-1)
 10   CONTINUE
C
      NBOPT = NBOPT2
      CALL JEDETR ( LESOP2 )
C
 9999 CONTINUE
      CALL JEDEMA()
      END
