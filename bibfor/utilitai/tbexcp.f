      SUBROUTINE TBEXCP ( TABIN, BASOUT, TABOUT, NPARA, LIPAPA ) 
      IMPLICIT   NONE
      INTEGER             NPARA
      CHARACTER*(*)       TABIN, BASOUT, TABOUT, LIPAPA(*)
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 22/02/2000   AUTEUR CIBHHLV L.VIVAN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     EXTRAIRE DES COLONNES D'UNE TABLE
C ----------------------------------------------------------------------
C IN  : TABIN  : NOM DE LA TABLE DONT ON VEUT EXTRAIRE DES COLONNES
C IN  : BASOUT : BASE DE CREATION DE "TABOUT"
C IN  : TABOUT : NOM DE LA TABLE QUI CONTIENDRA LES COLONNES EXTRAITES
C IN  : NPARA  : NOMBRE DE PARAMETRES IMPLIQUES DANS L'EXTRACTION
C IN  : LIPAPA : LISTE DES PARAMETRES DE L'EXTRACTION
C ----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
C ----------------------------------------------------------------------
      INTEGER      JTBNP, JTBNP2, NBPART, NBLIGN, JNUMI, JPARR, JTYPE
      INTEGER      JTBLP, JTBLP2, I, J, K, IRET, NBPARA
      CHARACTER*1  BASE
      CHARACTER*8  K8B
      CHARACTER*19 NOMTAB, NEWTAB
      CHARACTER*24 INPAR, JNPAR, NOMJV, NEWJV, NOMJVL, NEWJVL
C     ------------------------------------------------------------------
C
      CALL JEMARQ()
C
      NOMTAB = TABIN
      NEWTAB = TABOUT
      BASE   = BASOUT(1:1)
C
C     --- VERIFICATION DE LA BASE ---
C
      IF ( BASE.NE.'V' .AND. BASE.NE.'G' ) THEN
         CALL UTMESS('F','TBEXCP','TYPE BASE INCONNU :'//BASE)
      ENDIF
C
C     --- VERIFICATION DE LA TABLE ---
C
      CALL JEEXIN ( NOMTAB//'.TBBA', IRET )
      IF ( IRET .EQ. 0 ) THEN
         CALL UTMESS('F','TBEXCP','LA TABLE N''EXISTE PAS') 
      ENDIF
C
      CALL JEVEUO ( NOMTAB//'.TBNP' , 'E', JTBNP )
      NBPART = ZI(JTBNP  )
      NBLIGN = ZI(JTBNP+1)
      IF ( NBPART .EQ. 0 ) THEN
         CALL UTMESS('F','TBEXCP','PAS DE PARAMETRES DEFINIS') 
      ENDIF
      IF ( NBLIGN .EQ. 0 ) THEN
         CALL UTMESS('F','TBEXCP','PAS DE LIGNES DEFINIS') 
      ENDIF
C
C     --- VERIFICATION QUE LES PARAMETRES EXISTENT DANS LA TABLE ---
C
      CALL WKVECT ( '&&TBEXCP.NUMERO', 'V V I'  , NPARA, JNUMI)
      CALL WKVECT ( '&&TBEXCP.N_PARA', 'V V K24', NPARA, JPARR)
      CALL WKVECT ( '&&TBEXCP.T_PARA', 'V V K8' , NPARA, JTYPE)
      NBPARA = 0
      CALL JEVEUO ( NOMTAB//'.TBLP' , 'L', JTBLP )
      DO 10 I = 1 , NPARA
         INPAR = LIPAPA(I)
         DO 12 J = 1 , NBPART
            JNPAR = ZK24(JTBLP+4*(J-1))
            IF ( INPAR .EQ. JNPAR ) THEN
               DO 14 K = 1 , NBPARA
                  IF ( ZI(JNUMI+K-1) .EQ. J ) GOTO 10
 14            CONTINUE
               NBPARA = NBPARA + 1
               ZI(JNUMI+NBPARA-1) = J
               ZK8(JTYPE+NBPARA-1) = ZK24(JTBLP+4*(J-1)+1)(1:8)
               ZK24(JPARR+NBPARA-1) = INPAR
               GOTO 10
            ENDIF
 12      CONTINUE
         CALL UTDEBM('A','IMPR_TABLE','ERREUR DANS LES DONNEES') 
         CALL UTIMPK('L',' LE PARAMETRE N''EXISTE PAS : ',1,INPAR)
         CALL UTFINM( )
 10   CONTINUE
C
C     --- CREATION DE LA TABLE ---
C
      CALL TBCRSD ( NEWTAB , BASOUT )
      CALL TBAJPA ( NEWTAB, NBPARA, ZK24(JPARR), ZK8(JTYPE) )
C
      CALL JEVEUO ( NEWTAB//'.TBNP' , 'E', JTBNP2 )
      ZI(JTBNP2  ) = NBPARA
      ZI(JTBNP2+1) = NBLIGN
C
      CALL JEVEUO ( NEWTAB//'.TBLP' , 'E', JTBLP2 )
C
      DO 30 I = 1 , NBPARA
         NEWJV  = ZK24(JTBLP2+4*(I-1)+2)
         NEWJVL = ZK24(JTBLP2+4*(I-1)+3)
         J = ZI(JNUMI+I-1)
         NOMJV  = ZK24(JTBLP+4*(J-1)+2)
         NOMJVL = ZK24(JTBLP+4*(J-1)+3)
         CALL JEDUPO ( NOMJV , BASE, NEWJV , .FALSE. )
         CALL JEDUPO ( NOMJVL, BASE, NEWJVL, .FALSE. )
         CALL JELIRA ( NOMJV , 'LONUTI', NBLIGN, K8B )
         CALL JEECRA ( NEWJV , 'LONUTI', NBLIGN, ' ' )
         CALL JELIRA ( NOMJVL, 'LONUTI', NBLIGN, K8B )
         CALL JEECRA ( NEWJVL, 'LONUTI', NBLIGN, ' ' )
 30   CONTINUE
C
      CALL JEDETR ( '&&TBEXCP.NUMERO' )
      CALL JEDETR ( '&&TBEXCP.N_PARA' )
      CALL JEDETR ( '&&TBEXCP.T_PARA' )
C
      CALL JEDEMA()
C
      END
