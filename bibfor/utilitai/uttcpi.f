      SUBROUTINE UTTCPI (NOMMES,IFM,TYPIMP)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 26/02/2013   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PELLET J.PELLET
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNOM
      CHARACTER *(*)  NOMMES,TYPIMP
      INTEGER IFM
C ----------------------------------------------------------------------
C BUT : IMPRIMER UNE MESURE DE TEMPS
C
C IN  NOMMES    : NOM IDENTIFIANT LA MESURE
C
C IN  IFM       : UNITE LOGIQUE POUR LES IMPRESSIONS
C IN  TYPIMP = 'CUMU' : ON IMPRIME LE "CUMUL" DE LA MESURE
C            = 'INCR' : ON IMPRIME L'INCREMENT DE LA MESURE
C
C ON APPELLE "INCREMENT" LA DIFFERENCE DE TEMPS ENTRE 2 APPELS
C SUCCESSIFS à UTTCPI(NOMMES,*,'INCR')
C ----------------------------------------------------------------------
C REMARQUE : LES VALEURS STOCKEES SONT ACCUMUEES VIA UTTCPU
      LOGICAL LJEV
      INTEGER INDI ,IBID,JVALMS,K,JNOML,NBFOIS,JVALMI
      INTEGER RANG, NBPROC,NPROMX,I1
      PARAMETER (NPROMX=1000)
      CHARACTER*8 NUMES
      CHARACTER*50 NOMMEL
      REAL*8 XTOTA,XUSER,XSYST,XELAP,MOYENN(3),ECTYPE(3)
      REAL*8 XTOTAP(NPROMX),XSYSTP(NPROMX),XELAPP(NPROMX)
      COMPLEX*16 CBID
      LOGICAL LMESUR


C     -- COMMONS POUR MESURE DE TEMPS :
      INTEGER  MTPNIV,MTPSTA,INDMAX
      PARAMETER (INDMAX=5)
      CHARACTER*80 SNOLON(INDMAX)
      REAL*8 VALMES(INDMAX*7),VALMEI(INDMAX*7)
      COMMON /MESTP1/ MTPNIV,MTPSTA
      COMMON /MESTP2/ SNOLON
      COMMON /MESTP3/ VALMES,VALMEI

C ----------------------------------------------------------------------

C     1. CALCUL DE INDI ET LJEV :
C     -------------------------------
C     -- POUR CERTAINES MESURES, ON NE PEUT PAS FAIRE DE JEVEUX :
C        ON GARDE ALORS LES INFOS DANS LES COMMON MESTPX
      IF (NOMMES.EQ.'CPU.MEMD.1') THEN
         INDI=1
      ELSEIF (NOMMES.EQ.'CPU.MEMD.2') THEN
         INDI=2
      ELSE
         LJEV=.TRUE.
         CALL JENONU(JEXNOM('&&UTTCPU.NOMMES',NOMMES),INDI)
         IF (INDI.EQ.0) GOTO 9999
         GOTO 9998
      ENDIF
      CALL ASSERT(INDI.LE.INDMAX)
      LJEV=.FALSE.

9998  CONTINUE

      IF (LJEV) THEN
        CALL JEVEUO('&&UTTCPU.VALMES','L',JVALMS)
        NBFOIS = NINT(ZR(JVALMS-1+7*(INDI-1)+2))
      ELSE
        NBFOIS = NINT(VALMES(7*(INDI-1)+2))
      ENDIF
C
      LMESUR=.TRUE.
      IF (NBFOIS.EQ.0) THEN
        LMESUR=.FALSE.
      ENDIF
C
      IF (LMESUR) THEN
        IF (LJEV) THEN
          XUSER = ZR(JVALMS-1+7*(INDI-1)+5)
          XSYST = ZR(JVALMS-1+7*(INDI-1)+6)
          XELAP = ZR(JVALMS-1+7*(INDI-1)+7)
        ELSE
          XUSER = VALMES(7*(INDI-1)+5)
          XSYST = VALMES(7*(INDI-1)+6)
          XELAP = VALMES(7*(INDI-1)+7)
        ENDIF
      ELSE
          XUSER=0.D0
          XSYST=0.D0
          XELAP=0.D0
      ENDIF
C
      IF (TYPIMP.EQ.'CUMU') THEN

      ELSEIF (TYPIMP.EQ.'INCR') THEN
        IF (LMESUR) THEN
          IF (LJEV) THEN
            CALL JEVEUO('&&UTTCPU.VALMEI','E',JVALMI)
            XUSER = XUSER - ZR(JVALMI-1+7*(INDI-1)+5)
            XSYST = XSYST - ZR(JVALMI-1+7*(INDI-1)+6)
            XELAP = XELAP - ZR(JVALMI-1+7*(INDI-1)+7)

            DO 2,K=1,7
              ZR(JVALMI-1+7*(INDI-1)+K)=ZR(JVALMS-1+7*(INDI-1)+K)
2           CONTINUE
          ELSE
            CALL JEVEUO('&&UTTCPU.VALMEI','E',JVALMI)
            XUSER = XUSER - VALMEI(7*(INDI-1)+5)
            XSYST = XSYST - VALMEI(7*(INDI-1)+6)
            XELAP = XELAP - VALMEI(7*(INDI-1)+7)

            DO 3,K=1,7
              VALMEI(7*(INDI-1)+K)=VALMES(7*(INDI-1)+K)
3           CONTINUE
          ENDIF
        ELSE
          XUSER=0.D0
          XSYST=0.D0
          XELAP=0.D0
        ENDIF

      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF

C     -- NOMMEL, NUMES :
      IF (LJEV) THEN
        CALL JEVEUO('&&UTTCPU.NOMLON','L',JNOML)
        NOMMEL=ZK80(JNOML-1+INDI)(1:50)
      ELSE
        NOMMEL=SNOLON(INDI)(1:50)
      ENDIF
      I1= INDEX(NOMMEL,'#')
      CALL ASSERT(I1.GT.1 .AND. I1.LE.8)
      NUMES='#'//NOMMEL(1:I1-1)
      NOMMEL=NOMMEL(I1+1:)


C     -- EN SEQUENTIEL, ON IMPRIME LES 3 NOMBRES MESURES
C     ------------------------------------------------------
      IF (LMESUR) THEN
        XTOTA=XUSER+XSYST
        WRITE(IFM,1003) NUMES,NOMMEL,XTOTA,XSYST,XELAP
      ENDIF

C     -- EN PARALLELE, ON IMPRIME EN PLUS LA MOYENNE ET
C        L'ECART TYPE (SUR L'ENSEMBLE DES PROCS)
C        SI MTPSTA = 1
C     ------------------------------------------------------
      IF (MTPSTA.EQ.1) THEN
        CALL MPICM0(RANG,NBPROC)
        CALL ASSERT(NBPROC.LE.NPROMX)
        IF (NBPROC.GT.1) THEN
          DO 11,K=1,NBPROC
            XTOTAP(K)=0.D0
            XSYSTP(K)=0.D0
            XELAPP(K)=0.D0
11        CONTINUE
          XTOTAP(RANG+1)=XTOTA
          XSYSTP(RANG+1)=XSYST
          XELAPP(RANG+1)=XELAP
          CALL MPICM1('MPI_MAX','R',NBPROC,IBID,IBID,XTOTAP,CBID)
          CALL MPICM1('MPI_MAX','R',NBPROC,IBID,IBID,XSYSTP,CBID)
          CALL MPICM1('MPI_MAX','R',NBPROC,IBID,IBID,XELAPP,CBID)
          CALL STATI1(NBPROC,XTOTAP,MOYENN(1),ECTYPE(1))
          CALL STATI1(NBPROC,XSYSTP,MOYENN(2),ECTYPE(2))
          CALL STATI1(NBPROC,XELAPP,MOYENN(3),ECTYPE(3))
          IF (LMESUR) THEN
            NOMMEL='    (MOYENNE    DIFF. PROCS)'
            WRITE(IFM,1003) NUMES,NOMMEL,MOYENN(1),MOYENN(2),MOYENN(3)
            NOMMEL='    (ECART-TYPE DIFF. PROCS)'
            WRITE(IFM,1003) NUMES,NOMMEL,ECTYPE(1),ECTYPE(2),ECTYPE(3)
          ENDIF
        ENDIF
      ENDIF

9999  CONTINUE

1003  FORMAT (A8,A50,'CPU (USER+SYST/SYST/ELAPS):',3(F10.2))
      END
