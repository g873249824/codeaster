      REAL*8 FUNCTION NDYNRE ( SDDYNA, CHAINE)
C      
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 06/05/2013   AUTEUR GREFFET N.GREFFET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*19  SDDYNA
      CHARACTER*(*) CHAINE
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (SDDYNA - UTILITAIRE)
C
C INTERROGE SDDYNA POUR RENVOYER UN REEL
C      
C ----------------------------------------------------------------------
C
C
C OUT NDYNRE : PARAMETRE REEL DE L'OBJET .PARA_SCHEMA DEMANDE
C IN  SDDYNA : NOM DE LA SD DEDIEE A LA DYNAMIQUE
C IN  CHAINE : NOM DU PARAMETRE
C
C ----------------------------------------------------------------------
C
      INTEGER      JPSCHE,JCFSC
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      CALL JEVEUO(SDDYNA(1:15)//'.PARA_SCH','L',JPSCHE)
      CALL JEVEUO(SDDYNA(1:15)//'.COEF_SCH','L',JCFSC)
      
      IF (CHAINE.EQ.'BETA')THEN
        NDYNRE = ZR(JPSCHE+1-1)
      ELSEIF (CHAINE.EQ.'GAMMA')THEN
        NDYNRE = ZR(JPSCHE+2-1)
      ELSEIF (CHAINE.EQ.'PHI')THEN
        NDYNRE = ZR(JPSCHE+3-1)
      ELSEIF (CHAINE.EQ.'THETA')THEN
        NDYNRE = ZR(JPSCHE+4-1)     
      ELSEIF (CHAINE.EQ.'KAPPA')THEN  
        NDYNRE = ZR(JPSCHE+5-1)
      ELSEIF (CHAINE.EQ.'COEF_MASS_SHIFT')THEN
        NDYNRE = ZR(JPSCHE+6-1)  
      ELSEIF (CHAINE.EQ.'ALPHA')THEN
        NDYNRE = ZR(JPSCHE+7-1)       
C
      ELSEIF (CHAINE.EQ.'COEF_MATR_RIGI')THEN
        NDYNRE = ZR(JCFSC+1-1)
      ELSEIF (CHAINE.EQ.'COEF_MATR_AMOR')THEN
        NDYNRE = ZR(JCFSC+2-1) 
      ELSEIF (CHAINE.EQ.'COEF_MATR_MASS')THEN
        NDYNRE = ZR(JCFSC+3-1) 
C        
      ELSEIF (CHAINE.EQ.'COEF_DEPL_DEPL')THEN
        NDYNRE = ZR(JCFSC+4-1)        
      ELSEIF (CHAINE.EQ.'COEF_DEPL_VITE')THEN
        NDYNRE = ZR(JCFSC+5-1) 
      ELSEIF (CHAINE.EQ.'COEF_DEPL_ACCE')THEN
        NDYNRE = ZR(JCFSC+6-1) 
      ELSEIF (CHAINE.EQ.'COEF_VITE_DEPL')THEN
        NDYNRE = ZR(JCFSC+7-1)        
      ELSEIF (CHAINE.EQ.'COEF_VITE_VITE')THEN
        NDYNRE = ZR(JCFSC+8-1) 
      ELSEIF (CHAINE.EQ.'COEF_VITE_ACCE')THEN
        NDYNRE = ZR(JCFSC+9-1)         
      ELSEIF (CHAINE.EQ.'COEF_ACCE_DEPL')THEN
        NDYNRE = ZR(JCFSC+10-1)        
      ELSEIF (CHAINE.EQ.'COEF_ACCE_VITE')THEN
        NDYNRE = ZR(JCFSC+11-1) 
      ELSEIF (CHAINE.EQ.'COEF_ACCE_ACCE')THEN
        NDYNRE = ZR(JCFSC+12-1)
C
      ELSEIF (CHAINE.EQ.'COEF_DEPL')THEN
        NDYNRE = ZR(JCFSC+13-1)
      ELSEIF (CHAINE.EQ.'COEF_VITE')THEN
        NDYNRE = ZR(JCFSC+14-1)
      ELSEIF (CHAINE.EQ.'COEF_ACCE')THEN
        NDYNRE = ZR(JCFSC+15-1)
C
      ELSEIF (CHAINE.EQ.'COEF_MPAS_FEXT_PREC')THEN
        NDYNRE = ZR(JCFSC+16-1)
      ELSEIF (CHAINE.EQ.'COEF_MPAS_EQUI_COUR')THEN
        NDYNRE = ZR(JCFSC+17-1)    
      ELSEIF (CHAINE.EQ.'COEF_MPAS_FINT_PREC')THEN
        NDYNRE = ZR(JCFSC+18-1) 
      ELSEIF (CHAINE.EQ.'COEF_MPAS_FEXT_COUR')THEN
        NDYNRE = ZR(JCFSC+19-1)   
C
      ELSEIF (CHAINE.EQ.'COEF_FDYN_MASSE')THEN
        NDYNRE = ZR(JCFSC+20-1)        
      ELSEIF (CHAINE.EQ.'COEF_FDYN_AMORT')THEN
        NDYNRE = ZR(JCFSC+21-1)   
      ELSEIF (CHAINE.EQ.'COEF_FDYN_RIGID')THEN
        NDYNRE = ZR(JCFSC+22-1) 
C
      ELSEIF (CHAINE.EQ.'COEF_FORC_INER')THEN
        NDYNRE = ZR(JCFSC+23-1)
C
      ELSEIF (CHAINE.EQ.'INST_PREC')THEN
        NDYNRE = ZR(JCFSC+24-1)
C                        
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
      CALL JEDEMA()

      END
