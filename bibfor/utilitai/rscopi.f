      SUBROUTINE RSCOPI(BASE,SD1,SD2)
      IMPLICIT NONE
      CHARACTER*(*) BASE,SD1,SD2
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 03/10/2000   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET

C   BUT:
C   DUPLIQUER UNE STRUCTURE DE DONNEES "RESULTAT".
C             EN DUPLIQUANT TOUS LES CHAMPS CONTENU DANS LE .TACH

C     IN:
C     BASE     : 'G' , 'V' , ... : BASE DE CREATION DE SD2
C     SD1 (K*) : NOM DE LA SD A DUPPLIQUER
C     SD2 (K*) : NOM DE LA SD A CREER

C     OUT:
C     SD2 EST CREEE ET A LE MEME CONTENU QUE SD1

C-----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXNOM
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------

      INTEGER IBID,I,J,NBCHAM,NBORDR,IRET,NBAC,NBPARA,NBPA,JPA,IPARA,
     &        IATAVA,JORDR
      LOGICAL DEJFAI
      CHARACTER*1 BAS2,KBID
      CHARACTER*4 TYPE,TYPACC
      CHARACTER*5 NOMOBJ
      CHARACTER*16 NOPARA,NOMSY
      CHARACTER*19 SDR1,SDR2,CH1,CH2
      CHARACTER*24 NOMPAR

C DEB-------------------------------------------------------------------

      CALL JEMARQ()
      BAS2 = BASE

      SDR1 = SD1
      SDR2 = SD2
      CALL JELIRA(SDR1//'.DESC','NOMMAX',NBCHAM,KBID)
      CALL JELIRA(SDR1//'.ORDR','LONMAX',NBORDR,KBID)
      CALL JEVEUO(SDR1//'.ORDR','L',JORDR)

C     --- LE .DESC, .NOVA, .TAVA, .ORDR ---

      CALL JEDUPO(SDR1//'.DESC',BAS2,SDR2//'.DESC',.FALSE.)
      CALL JEDUPO(SDR1//'.NOVA',BAS2,SDR2//'.NOVA',.FALSE.)
      CALL JEDUPO(SDR1//'.TAVA',BAS2,SDR2//'.TAVA',.FALSE.)
      CALL JEDUPO(SDR1//'.ORDR',BAS2,SDR2//'.ORDR',.FALSE.)

C     --- LE .TACH ---

      CALL JECREC(SDR2//'.TACH','G V K24','NU','CONTIG','CONSTANT',
     &            NBCHAM)
      CALL JEECRA(SDR2//'.TACH','LONMAX',NBORDR,' ')

C     --- ON DUPLIQUE LES CHAMPS ---

      DO 20 I = 1,NBCHAM
        CALL JENUNO(JEXNUM(SDR1//'.DESC',I),NOMSY)
        DO 10 J = 0,NBORDR - 1
          CALL RSEXCH(SD1,NOMSY,ZI(JORDR+J),CH1,IRET)
          IF (IRET.EQ.0) THEN
            CALL RSEXCH(SD2,NOMSY,ZI(JORDR+J),CH2,IRET)
            CALL COPICH(BAS2,CH1,CH2)
            CALL RSNOCH(SD2,NOMSY,ZI(JORDR+J),' ')
          END IF
   10   CONTINUE
   20 CONTINUE

C     --- LES VARIABLES ET PARAMETRES D'ACCES ---

      NOMPAR = '&&RSCOPI.NOMS_PARA '
      CALL RSNOPA(SDR1,2,NOMPAR,NBAC,NBPA)
      NBPARA = NBAC + NBPA
      CALL JEVEUO(NOMPAR,'L',JPA)

      DEJFAI = .FALSE.
      DO 30 J = 1,NBPARA
        NOPARA = ZK16(JPA+J-1)
        CALL JENONU(JEXNOM(SDR1//'.NOVA',NOPARA),IPARA)
        CALL JEVEUO(JEXNUM(SDR1//'.TAVA',IPARA),'L',IATAVA)
        NOMOBJ = ZK8(IATAVA-1+1) (1:5)
        TYPACC = ZK8(IATAVA-1+4) (1:4)

        CALL JELIRA(SDR1//NOMOBJ,'TYPE',IBID,TYPE(1:1))

        IF (TYPACC.EQ.'PARA' .AND. TYPE(1:1).EQ.'R') THEN
          IF (DEJFAI) GO TO 30
          DEJFAI = .TRUE.
          NOMOBJ = '.PARA'
        END IF
        CALL JEDUPO(SDR1//NOMOBJ,BAS2,SDR2//NOMOBJ,.FALSE.)

   30 CONTINUE
      CALL JEDETR(NOMPAR)

      CALL JEDEMA
      END
