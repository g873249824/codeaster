      SUBROUTINE FOCACA ( OPTION, NOMFON, SORTIE, BASE )
      IMPLICIT NONE
      CHARACTER*(*)       OPTION, NOMFON, SORTIE
      CHARACTER*1                                 BASE
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 17/12/2002   AUTEUR CIBHHGB G.BERTRAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C     ------------------------------------------------------------------
C
C     SUPPRESSION DE LA DERIVE D UN ACCELEROGRAMME
C     ENTREES : 
C          OPTION : 'OUI' : SUPPRESSION TENDANCE DEPLACEMENT
C          NOMFON : NOM DE L ACCELEROGRAMME INITIAL
C          SORTIE : NOM DE L ACCELEROGRAMME TRAITE
C          BASE   : TYPE DE LA BASE
C
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16            ZK16
      CHARACTER*24                    ZK24
      CHARACTER*32                            ZK32
      CHARACTER*80                                    ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
      CHARACTER*8  METHOD
      CHARACTER*19 NOMFI, NOMFS
      CHARACTER*24 VALE, PROL
      CHARACTER*1 K1BID
      INTEGER I, LWKS, NBVAL, LVAR, NBPTS, LFON, LRES, LPRO, LPROS
      REAL*8 XIYI, XI, YI, XI2, A1, A0, CSTE
C     ----------------------------------------------------------------
C
      CALL JEMARQ()
      NOMFI = NOMFON
      NOMFS = SORTIE
      METHOD='TRAPEZE'
      CSTE = 0.D0
C
C     ---  NOMBRE DE POINTS ----
      VALE = NOMFI//'.VALE'
      CALL JELIRA(VALE,'LONUTI',NBVAL,K1BID)
      CALL JEVEUO(VALE,'L',LVAR)
      NBPTS = NBVAL/2
      LFON  = LVAR + NBPTS
C
C     --- CREATION DU TABLEAU DES VALEURS ---
      CALL WKVECT(NOMFS//'.VALE',BASE//' V R',NBVAL,LRES)
C
C     --- RECOPIE DES VARIABLES ---
      DO 410 I = 0 , NBPTS-1
         ZR(LRES+I) = ZR(LVAR+I)
  410 CONTINUE
      LRES = LRES + NBPTS
C
C     CREATION VECTEUR DE TRAVAIL
      CALL WKVECT ('&&FOCACA.WKS', 'V V R8', NBPTS, LWKS)
C
C     CALCUL DE LA TENDANCE DE L ACCELERO : Y = A1*X +A0
      XIYI = 0.D0
      XI = 0.D0
      YI = 0.D0
      XI2 = 0.D0
      DO 500 I = 1, NBPTS
        XIYI = XIYI + ZR(LVAR-1 + I)*ZR(LFON-1 + I)
        XI = XI + ZR(LVAR-1 + I)
        YI = YI + ZR(LFON-1 + I)
        XI2 = XI2 + ZR(LVAR-1 + I)*ZR(LVAR-1 + I)
  500 CONTINUE
      A1 = (NBPTS*XIYI - XI*YI) / (NBPTS*XI2 - XI*XI)
      A0 = (XI2*XI - XI*XIYI) / (NBPTS*XI2 - XI*XI)
C
C     SUPPRESSION DE LA TENDANCE DE L ACCELERO
      DO 501 I = 1, NBPTS
        ZR(LWKS-1 + I) = ZR(LFON-1 + I) - A1*ZR(LVAR-1 + I) - A0
  501 CONTINUE
C
C     CALCUL DE LA VITESSE : INTEGRATION
      CALL FOC2IN(METHOD,NBPTS,ZR(LVAR),ZR(LWKS),CSTE,ZR(LRES))
C
C     CALCUL DE LA TENDANCE DE LA VITESSE : Y = A1*X +A0
      XIYI = 0.D0
      YI = 0.D0
      DO 600 I = 1, NBPTS
        XIYI = XIYI + ZR(LVAR-1 + I)*ZR(LRES-1 + I)
        YI = YI + ZR(LRES-1 + I)
  600 CONTINUE
      A1 = (NBPTS*XIYI - XI*YI) / (NBPTS*XI2 - XI*XI)
      A0 = (XI2*XI - XI*XIYI) / (NBPTS*XI2 - XI*XI)
C
C     SUPPRESSION DE LA TENDANCE DE LA VITESSE
      DO 601 I = 1, NBPTS
        ZR(LWKS-1 + I) = ZR(LRES-1 + I) - A1*ZR(LVAR-1 + I) - A0
  601 CONTINUE
C
      IF (OPTION .EQ. 'OUI') THEN
C       SUPPRESSION DE LA TENDANCE DEPLACEMENT
C       CALCUL DU DEPLACEMENT : INTEGRATION
        CALL FOC2IN(METHOD,NBPTS,ZR(LVAR),ZR(LWKS),CSTE,ZR(LRES))
C
C       CALCUL DE LA TENDANCE DU DEPLACEMENT : Y = A1*X +A0
        XIYI = 0.D0
        YI = 0.D0
        DO 700 I = 1, NBPTS
          XIYI = XIYI + ZR(LVAR-1 + I)*ZR(LRES-1 + I)
          YI = YI + ZR(LRES-1 + I)
  700   CONTINUE
        A1 = (NBPTS*XIYI - XI*YI) / (NBPTS*XI2 - XI*XI)
        A0 = (XI2*XI - XI*XIYI) / (NBPTS*XI2 - XI*XI)
C
C       SUPPRESSION DE LA TENDANCE DU DEPLACEMENT
        DO 701 I = 1, NBPTS
          ZR(LWKS-1 + I) = ZR(LRES-1 + I) - A1*ZR(LVAR-1 + I) - A0
  701   CONTINUE
C
C       REGENERATION DE LA VITESSE : DERIVATION
        CALL FOC2DE(NBPTS,ZR(LVAR),ZR(LWKS),ZR(LRES))
C
C       RECOPIE DE LA VITESSE DANS LE VECTEUR DE TRAVAIL
        DO 702 I = 1, NBPTS
          ZR(LWKS-1 + I) = ZR(LRES-1 + I)
  702   CONTINUE
      ENDIF
C
C     REGENERATION DE L ACCELERO : DERIVATION
      CALL FOC2DE(NBPTS,ZR(LVAR),ZR(LWKS),ZR(LRES))
C
C     --- RECOPIE DU .PROL ---
      PROL = NOMFI//'.PROL'
      CALL JEVEUO(PROL,'L',LPRO)

      PROL = NOMFS//'.PROL'
      CALL WKVECT(PROL,BASE//' V K16',5,LPROS)
      ZK16(LPROS  ) = 'FONCTION'
      ZK16(LPROS+1) = ZK16(LPRO+1)
      ZK16(LPROS+2) = ZK16(LPRO+2)
      ZK16(LPROS+3) = ZK16(LPRO+3)
      ZK16(LPROS+4) = ZK16(LPRO+4)
C
      CALL JEDETR ('&&FOCACA.WKS')
C
      CALL JEDEMA()
      END
