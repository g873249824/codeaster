      SUBROUTINE RFNOCH
      IMPLICIT NONE
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 05/03/2013   AUTEUR BRIE N.BRIE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     OPERATEUR "RECU_FONCTION"   MOT CLE "NOEUD_CHOC"
C     ------------------------------------------------------------------
      INCLUDE 'jeveux.h'
      INTEGER       IFM,NIV
      INTEGER       IBID, N, NC, NG, INT, IND, NSST, IRET, JREFE1
      CHARACTER*8   K8B,NOMA, SST, BASEMO, NOEUD, INTITU
      CHARACTER*24  VALK(2), NOGNO
      CHARACTER*16  PARAX,PARAY, NOMCMD, TYPCON
      CHARACTER*19  LISTR, NOMFON, RESU
      INTEGER      IARG
C     ------------------------------------------------------------------
      CALL JEMARQ()
C
      CALL INFMAJ
      CALL INFNIV(IFM,NIV)
C
      CALL GETRES ( NOMFON, TYPCON, NOMCMD )
C
      CALL GETVTX ( ' ', 'INTITULE'  , 0,IARG,1, INTITU, INT  )
      CALL GETVID ( ' ', 'RESU_GENE' , 0,IARG,1, RESU  , N    )
      CALL GETVTX ( ' ', 'PARA_X'    , 0,IARG,1, PARAX , N    )
      CALL GETVTX ( ' ', 'PARA_Y'    , 0,IARG,1, PARAY , N    )
      CALL GETVID ( ' ', 'LIST_PARA' , 0,IARG,1, LISTR , IND  )
      CALL GETVTX ( ' ', 'SOUS_STRUC', 0,IARG,1, SST   , NSST )
C
      CALL GETVTX ( ' ', 'NOEUD_CHOC'   , 0,IARG,1, NOEUD, NC )
      CALL GETVTX ( ' ', 'GROUP_NO_CHOC', 0,IARG,1, NOGNO, NG )
C
      IF ( NC .NE. 0 ) THEN
C
        CALL FOCRCH ( NOMFON, RESU, NOEUD, PARAX, PARAY, 'G', INT,
     &                INTITU, IND, LISTR, SST, NSST, IRET )
C
      ELSE
C
         CALL JEVEUO ( RESU//'.REFD', 'L', JREFE1 )
         BASEMO = ZK24(JREFE1+4)(1:8)
         CALL DISMOI('F','NOM_MAILLA',BASEMO,'RESULTAT',IBID,
     &                 NOMA,IRET)
C
         CALL UTNONO ( ' ', NOMA, 'NOEUD', NOGNO, NOEUD, IRET )
         IF (IRET.EQ.10) THEN
            CALL U2MESK('F','ELEMENTS_67',1,NOGNO)
         ELSEIF (IRET.EQ.1) THEN
            VALK(1) = NOGNO
            VALK(2) = NOEUD
            CALL U2MESK('A', 'SOUSTRUC_87',2,VALK)
         ENDIF
C
         CALL FOCRCH ( NOMFON, RESU, NOEUD, PARAX, PARAY, 'G', INT,
     &                 INTITU, IND, LISTR, SST, NSST, IRET )
      ENDIF
C
      CALL FOATTR(' ',1,NOMFON)
C
C     --- VERIFICATION QU'ON A BIEN CREER UNE FONCTION ---
C         ET REMISE DES ABSCISSES EN ORDRE CROISSANT
      CALL ORDONN(NOMFON,0)
C
      CALL TITRE
      IF (NIV.GT.1) CALL FOIMPR(NOMFON,NIV,IFM,0,K8B)

      CALL JEDEMA()
      END
