      SUBROUTINE RSAGSD(NOMSD,ILONG)
      IMPLICIT   NONE
      INTEGER ILONG
      CHARACTER*(*) NOMSD
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 08/09/2003   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET
C       REDIMENSIONNEMENT D'UNE STRUCTURE DE DONNEES "RESULTAT-COMPOSE"
C       (LA TAILLE EST DOUBLEE SI LA LONGEUR VAUT 0)
C ----------------------------------------------------------------------
C IN  : NOMSD  : NOM DE LA STRUCTURE "RESULTAT" A AGRANDIR
C IN  : ILONG  : NOUVELLE LONGUEUR DE LA S.D.
C ----------------------------------------------------------------------
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
      CHARACTER*32 JEXNUM,JEXNOM
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C ----------------------------------------------------------------------
      INTEGER IUNDEF,ISNNEM,IRET,IBID,NBCHAM,NBORDR,NBORLU,NEWNB,NEWORD,
     &        NEWORL,JTACHG,JTACHV,JORDRG,I,J,K,JORDRV,NBAC,NBPA,NBPARA,
     &        JPA,IPARA,ILEN,ILOTY,JPARAV,JPARA,IATAVA,NBPR,NEWNBT
      REAL*8 RUNDEF,R8VIDE
      LOGICAL DEJFAI
      CHARACTER*4 TYPE,TYPACC
      CHARACTER*5 NOMOBJ
      CHARACTER*8 K8B
      CHARACTER*16 NOPARA
      CHARACTER*19 NOMD2,NOMT2,NOMPAR
C ----------------------------------------------------------------------
      CALL JEMARQ()
      NOMD2 = NOMSD
      NOMT2 = '&&RSAGSD'
      RUNDEF = R8VIDE()
      IUNDEF = ISNNEM()

      IF (ILONG.LT.0) THEN
        CALL UTMESS('F','RSAGSD','NOUVELLE LONGUEUR INVALIDE, < 0 ')
      END IF
      CALL JEEXIN(NOMD2//'.DESC',IRET)
      IF (IRET.EQ.0) THEN
        CALL UTMESS('F','RSAGSD','STRUCTURE DE DONNEES INEXISTANTE :'//
     &              NOMD2)
      END IF

      CALL JELIRA(NOMD2//'.DESC','NOMMAX',NBCHAM,K8B)
      CALL JELIRA(NOMD2//'.ORDR','LONMAX',NBORDR,K8B)
      CALL JELIRA(NOMD2//'.ORDR','LONUTI',NBORLU,K8B)
      IF (ILONG.EQ.0) THEN
        NEWNB = 2*NBORDR
      ELSE
        NEWNB = ILONG
      END IF
      NEWORD = MIN(NEWNB,NBORDR)
      NEWORL = MIN(NEWNB,NBORLU)
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

C                  --- LE .DESC, .NOVA, .TAVA ---

C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

C     CES OBJETS NE SONT PAS MODIFIES

C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

C                   --- LE .TACH ET LE .ORDR ---

C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      CALL JEVEUO(NOMD2//'.TACH','L',JTACHG)
      CALL WKVECT(NOMT2//'.TACH','V V K24',NEWORD*NBCHAM,JTACHV)
      CALL JEVEUO(NOMD2//'.ORDR','L',JORDRG)
      CALL WKVECT(NOMT2//'.ORDR','V V I',NEWORL,JORDRV)
      DO 10 I = 0,NEWORL - 1
        ZI(JORDRV+I) = ZI(JORDRG+I)
   10 CONTINUE
      DO 30 I = 0,NBCHAM - 1
        DO 20 J = 0,NEWORD - 1
          ZK24(JTACHV+J+I*NEWORD) = ZK24(JTACHG+J+I*NBORDR)
   20   CONTINUE
   30 CONTINUE
      CALL JEDETR(NOMD2//'.TACH')
      CALL JEDETR(NOMD2//'.ORDR')
      CALL JECREC(NOMD2//'.TACH','G V K24','NU','CONTIG','CONSTANT',
     &            NBCHAM)
      CALL JEECRA(NOMD2//'.TACH','LONMAX',NEWNB,' ')
      CALL JEVEUO(NOMD2//'.TACH','E',JTACHG)
      DO 40,K = 1,NBCHAM
        CALL JECROC(JEXNUM(NOMD2//'.TACH',K))
   40 CONTINUE

      CALL WKVECT(NOMD2//'.ORDR','G V I',NEWNB,JORDRG)
      CALL JEECRA(NOMD2//'.ORDR','LONUTI',NEWORL,' ')

      DO 50 I = 0,NEWORL - 1
        ZI(JORDRG+I) = ZI(JORDRV+I)
   50 CONTINUE
      DO 70 I = 0,NBCHAM - 1
        DO 60 J = 0,NEWORD - 1
          ZK24(JTACHG+J+I*NEWNB) = ZK24(JTACHV+J+I*NEWORD)
   60   CONTINUE
   70 CONTINUE

      CALL JEDETR(NOMT2//'.TACH')
      CALL JEDETR(NOMT2//'.ORDR')
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

C              --- LES VARIABLES ET PARAMETRES D'ACCES ---

C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      NOMPAR = '&&RSAGSD.NOMS_PARA '
      CALL RSNOPA(NOMSD,2,NOMPAR,NBAC,NBPA)
      NBPARA = NBAC + NBPA
      CALL JEVEUO(NOMPAR,'L',JPA)

C     --- RECHERCHE DU NOMBRE DE PARAMETRES REELS AFIN DE
C                                    DIMENSIONNER LE .PARA ---

      NBPR = 0
      DO 80 J = 1,NBPARA
        NOPARA = ZK16(JPA+J-1)
        CALL JENONU(JEXNOM(NOMD2//'.NOVA',NOPARA),IPARA)
        IF (IPARA.EQ.0) THEN
          CALL UTDEBM('F','RSAGSD','PARAMETRE INCONNU: ')
          CALL UTIMPK('L','PARAMETRE : ',1,NOPARA)
          CALL UTIMPK('S',' POUR LE RESULTAT : ',1,NOMD2)
          CALL UTFINM()
        END IF
        CALL JEVEUO(JEXNUM(NOMD2//'.TAVA',IPARA),'L',IATAVA)
        NOMOBJ = ZK8(IATAVA-1+1) (1:5)
        TYPACC = ZK8(IATAVA-1+4) (1:4)
        CALL JELIRA(NOMD2//NOMOBJ,'TYPE',IBID,TYPE(1:1))
        IF (TYPACC.EQ.'PARA' .AND. TYPE(1:1).EQ.'R') THEN
          NBPR = NBPR + 1
        END IF
   80 CONTINUE
      NBPR = MAX(1,NBPR)

      DEJFAI = .FALSE.
      DO 190 J = 1,NBPARA
        NOPARA = ZK16(JPA+J-1)
        CALL JENONU(JEXNOM(NOMD2//'.NOVA',NOPARA),IPARA)

        CALL JEVEUO(JEXNUM(NOMD2//'.TAVA',IPARA),'L',IATAVA)
        NOMOBJ = ZK8(IATAVA-1+1) (1:5)
        TYPACC = ZK8(IATAVA-1+4) (1:4)

        CALL JELIRA(NOMD2//NOMOBJ,'TYPE',IBID,TYPE(1:1))
        ILEN = LEN(TYPE) - 1
        IF (TYPE(1:1).EQ.'K' .AND. ILEN.GT.0) THEN
          CALL JELIRA(NOMD2//NOMOBJ,'LTYP',ILOTY,K8B)
          CALL CODENT(ILOTY,'G',K8B)
          TYPE = TYPE(1:1)//K8B(1:ILEN)
        END IF

        NEWNBT = NEWNB
        IF (TYPACC.EQ.'PARA' .AND. TYPE(1:1).EQ.'R') THEN
          IF (DEJFAI) GO TO 190
          DEJFAI = .TRUE.
          NOMOBJ = '.PARA'
          NEWNBT = NBPR*NEWNB
        END IF
        CALL JEDUPO(NOMD2//NOMOBJ,'V',NOMT2//NOMOBJ,.FALSE.)
        CALL JELIRA(NOMT2//NOMOBJ,'LONMAX',NBORDR,K8B)
        CALL JEVEUO(NOMT2//NOMOBJ,'L',JPARAV)
        CALL JEDETR(NOMD2//NOMOBJ)

        IF (TYPE(1:1).EQ.'I') THEN
          CALL WKVECT(NOMD2//NOMOBJ,'G V I',NEWNBT,JPARA)
          DO 90 I = 0,NBORDR - 1
            ZI(JPARA+I) = ZI(JPARAV+I)
   90     CONTINUE
          DO 100 I = NBORDR,NEWNBT - 1
            ZI(JPARA+I) = IUNDEF
  100     CONTINUE
        ELSE IF (TYPE(1:1).EQ.'R') THEN
          CALL WKVECT(NOMD2//NOMOBJ,'G V R',NEWNBT,JPARA)
          DO 110 I = 0,NBORDR - 1
            ZR(JPARA+I) = ZR(JPARAV+I)
  110     CONTINUE
          DO 120 I = NBORDR,NEWNBT - 1
            ZR(JPARA+I) = RUNDEF
  120     CONTINUE
        ELSE IF (TYPE(1:1).EQ.'C') THEN
          CALL WKVECT(NOMD2//NOMOBJ,'G V C',NEWNBT,JPARA)
          DO 130 I = 0,NBORDR - 1
            ZC(JPARA+I) = ZC(JPARAV+I)
  130     CONTINUE
        ELSE IF (TYPE(1:3).EQ.'K80') THEN
          CALL WKVECT(NOMD2//NOMOBJ,'G V K80',NEWNBT,JPARA)
          DO 140 I = 0,NBORDR - 1
            ZK80(JPARA+I) = ZK80(JPARAV+I)
  140     CONTINUE
        ELSE IF (TYPE(1:3).EQ.'K32') THEN
          CALL WKVECT(NOMD2//NOMOBJ,'G V K32',NEWNBT,JPARA)
          DO 150 I = 0,NBORDR - 1
            ZK32(JPARA+I) = ZK32(JPARAV+I)
  150     CONTINUE
        ELSE IF (TYPE(1:3).EQ.'K24') THEN
          CALL WKVECT(NOMD2//NOMOBJ,'G V K24',NEWNBT,JPARA)
          DO 160 I = 0,NBORDR - 1
            ZK24(JPARA+I) = ZK24(JPARAV+I)
  160     CONTINUE
        ELSE IF (TYPE(1:3).EQ.'K16') THEN
          CALL WKVECT(NOMD2//NOMOBJ,'G V K16',NEWNBT,JPARA)
          DO 170 I = 0,NBORDR - 1
            ZK16(JPARA+I) = ZK16(JPARAV+I)
  170     CONTINUE
        ELSE IF (TYPE(1:2).EQ.'K8') THEN
          CALL WKVECT(NOMD2//NOMOBJ,'G V K8',NEWNBT,JPARA)
          DO 180 I = 0,NBORDR - 1
            ZK8(JPARA+I) = ZK8(JPARAV+I)
  180     CONTINUE
        END IF

        CALL JEDETR(NOMT2//NOMOBJ)

  190 CONTINUE

      CALL JEDETR(NOMPAR)

      CALL JEDEMA()
      END
