      SUBROUTINE DISMOI(CODMES,QUESTI,NOMOB,TYPECO,REPI,REPK,IERD)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER                                      REPI,     IERD
      CHARACTER*(*)     CODMES,QUESTI,NOMOB,TYPECO,     REPK
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 17/06/2003   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE                            VABHHTS J.PELLET
C     ------------------------------------------------------------------
C     IN:
C       CODMES : 'F','E','A','I',... PARAMETRE TRANSMIT A UTMESS.
C       QUESTI : TEXTE PRECISANT LA QUESTION POSEE
C       NOMOB  : NOM D'UN OBJET DE CONCEPT DONNE
C       TYPECO : TYPE DU CONCEPT NOMOB
C     OUT:
C       REPI   : REPONSE ( SI ENTIERE )
C       REPK   : REPONSE ( SI CHAINE DE CARACTERES )
C       IERD   : CODE RETOUR (0--> OK, 1--> PB )
C
C     ------------------------------------------------------------------
C     VARIABLES LOCALES:
C     ------------------
      CHARACTER*32 NOMO1,REPK1
      CHARACTER*24 TYPEC1
      CHARACTER*1 CODME2
C --------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR,JEXR8
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C --------------- FIN COMMUNS NORMALISES  JEVEUX  --------------------
C
C DEB-------------------------------------------------------------------
C
      CODME2=CODMES
      IERD=0
C
C     --ON RECOPIE LES ARGUMENTS "CARACTERE" EN ENTREE
C       DANS DES VARIABLES DE LONGUEUR FIXE (K24) :
C
      TYPEC1 = TYPECO
      NOMO1  = NOMOB
C
C     -- SUIVANT LE TYPE DU CONCEPT, ON APPELLE DIFFERENTS DISMIJ:
C
      IF (TYPEC1.EQ.'MATR_ASSE') THEN
         CALL DISMMS(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'RESULTAT') THEN
         CALL DISMRS(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'CATALOGUE') THEN
         CALL DISMCT(CODME2,QUESTI,NOMO1(1:1),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'INCONNU') THEN
         CALL DISMIC(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'MACR_ELEM_STAT') THEN
         CALL DISMML(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'CHAM_MATER') THEN
         CALL DISMCM(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'CHAM_NO') THEN
         CALL DISMCN(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'CARTE') THEN
         CALL DISMCA(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'CHAMP') THEN
         CALL DISMCP(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'GRANDEUR') THEN
         CALL DISMGD(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'PHENOMENE') THEN
         CALL DISMPH(CODME2,QUESTI,NOMO1(1:16),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'PHEN_MODE') THEN
         CALL DISMPM(CODME2,QUESTI,NOMO1(1:32),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'NUME_DDL') THEN
         CALL DISMNU(CODME2,QUESTI,NOMO1(1:14),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'PROF_CHNO') THEN
         CALL DISMPN(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'MATR_ELEM') THEN
         CALL DISMME(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'VECT_ELEM') THEN
         CALL DISMME(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'LIGREL') THEN
         CALL DISMLG(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'MAILLAGE') THEN
         CALL DISMMA(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'CHARGE') THEN
         CALL DISMCH(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'MODELE') THEN
         CALL DISMMO(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'CHAM_ELEM') THEN
         CALL DISMCE(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'RESUELEM') THEN
         CALL DISMRE(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'INTERF_DYNA') THEN
         CALL DISMLI(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'NUME_EQUA') THEN
         CALL DISMNE(CODME2,QUESTI,NOMO1(1:19),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'TYPE_ELEM') THEN
         CALL DISMTE(CODME2,QUESTI,NOMO1(1:16),REPI,REPK1,IERD)
      ELSE IF (TYPEC1.EQ.'TYPE_MAILLE') THEN
         CALL DISMTM(CODME2,QUESTI,NOMO1(1:8),REPI,REPK1,IERD)
      ELSE
         REPK1 = TYPECO
         CALL UTMESS(CODME2,'DISMOI: ',
     +               'LE TYPE DE CONCEPT : "'//REPK1//'" EST INCONNU')
         IERD=1
      END IF
C
 9999 CONTINUE
      REPK = REPK1
      END
