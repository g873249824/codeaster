      SUBROUTINE FOCACO(NOMFO1,NOMFO2,SORTIE,BASE)
      IMPLICIT NONE
      CHARACTER*(*)      SORTIE, NOMFO1, NOMFO2
      CHARACTER*1        BASE
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 17/12/2002   AUTEUR CIBHHGB G.BERTRAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C    COMBINAISON DE DEUX FONCTION
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      INTEGER         NBINST,LPROS,LPRO1,LPRO2,LVAR1,LVAR2,LRES,NBPT1
     &                ,IRET,I,LPRTMP,LVATMP
      CHARACTER*1     K1BID
      CHARACTER*8     NOMF1,NOMF2
      CHARACTER*16    NOPAR1,NORES1,NOPAR2,NORES2
      CHARACTER*19    FONTMP
      CHARACTER*24    VALE,PROL
C     ----------------------------------------------------------------
C
      CALL JEMARQ()
      VALE(20:24) = '.VALE'
      PROL(20:24) = '.PROL'
C
C     --- RECUPERATION DU .PROL DE LA FONCTION 1 : F(X) ---
C
      PROL(1:19)  = NOMFO1
      CALL JEVEUO(PROL,'L',LPRO1)
      NOPAR1 = ZK16(LPRO1+2)
      NORES1 = ZK16(LPRO1+3)
C
C     --- RECUPERATION DU .PROL DE LA FONCTION 2 : X(t) ---
C
      PROL(1:19)  = NOMFO2
      CALL JEVEUO(PROL,'L',LPRO2)
      NOPAR2 = ZK16(LPRO2+2)
      NORES2 = ZK16(LPRO2+3)
C
C     --- VERIFICATION DE COHERENCE DE NOM_PARA1 ---------------------
C     --- VERIFICATION QUE L'ON A NOMPARA1=NOMRESU2(=X) --------------
C
      IF (NOPAR1 .NE. NORES2) THEN
        NOMF1=NOMFO1
        NOMF2=NOMFO2
          CALL UTMESS ('F','FOCACO',
     +          'LE "NOM_PARA" DE LA FONCTION "'//NOMF1//'" :'//
     +          NOPAR1// 'EST DIFFERENT DU "NOM_RESU" DE LA'//
     +          'FONCTION "'//NOMF2//'":'//NORES2//' ! ')
       ENDIF
C
C     --- CREATION DU .PROL DE LA FONCTION COMPOSEE  F(t)=F(X(t)) ---
C
      PROL(1:19)  = SORTIE
      CALL WKVECT(PROL,BASE//' V K16',5,LPROS)
      ZK16(LPROS  ) = 'FONCTION'
      ZK16(LPROS+1) = ZK16(LPRO1+1)
      ZK16(LPROS+2) = NOPAR2
      ZK16(LPROS+3) = NORES1
      ZK16(LPROS+4) = ZK16(LPRO1+4)
C
C     --- DETERMINATION DES ABSCISSES ET ORDONNEES DE DEFINITION
C     --- DE LA FONCTION 1 : F(X)
C
      VALE(1:19) = NOMFO1
      CALL JELIRA(VALE,'LONUTI',NBPT1,K1BID)
      CALL JEVEUO(VALE,'L',LVAR1)
      NBPT1 = NBPT1/2
C
C     --- DETERMINATION DE LA LISTE DES INSTANTS ---
C
      VALE(1:19) = NOMFO2
      CALL JELIRA(VALE,'LONMAX',NBINST,K1BID)
      CALL JEVEUO(VALE,'L',LVAR2)
      NBINST = NBINST/2
C
C     FONCTION TEMPORAIRE QUI CONTIENT t(X)
      FONTMP='&&FOCACO.XREORDO   '
      CALL WKVECT(FONTMP//'.VALE',BASE//' V R',2*NBINST,LVATMP)
      CALL WKVECT(FONTMP//'.PROL',BASE//' V K16',5,LPRTMP)
      ZK16(LPRTMP-1+1) = ZK16(LPRO2-1+1)
      ZK16(LPRTMP-1+2) = ZK16(LPRO2-1+2)
      ZK16(LPRTMP-1+3) = ZK16(LPRO2-1+3)
      ZK16(LPRTMP-1+4) = ZK16(LPRO2-1+4)
      ZK16(LPRTMP-1+5) = ZK16(LPRO2-1+5)
C
      DO 10 I = 0 , NBINST-1
         ZR(LVATMP+I)     = ZR(LVAR2+NBINST+I)
         ZR(LVATMP+NBINST+I) = ZR(LVAR2+I)
 10   CONTINUE
C
C     ------ DEBUT DU REMPLISSAGE ------
      VALE(1:19) = SORTIE
      CALL WKVECT(VALE,BASE//' V R',2*NBINST,LRES)
C
C     REORDONNE LES VALEURS DE X
      CALL UTTRIF(ZR(LVATMP),NBINST,ZK16(LPRTMP))
C
      DO 11 I = 0 , NBINST-1
         ZR(LRES+I) = ZR(LVATMP+NBINST+I)
 11   CONTINUE
C
      CALL FOINTR(NOMFO1,ZK16(LPRO1),NBPT1,ZR(LVAR1),ZR(LVAR1+NBPT1),
     +            NBINST,ZR(LVATMP),ZR(LRES+NBINST),IRET)
C
C     DESTRUCTION DU VECTEUR TEMPORAIRE
      CALL JEDETR(FONTMP//'.VALE')
      CALL JEDETR(FONTMP//'.PROL')
C
      CALL JEDEMA()
      END
