      SUBROUTINE OP0003 (IER)
      IMPLICIT NONE
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 29/09/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MCOURTOI M.COURTOIS
C     LECTURE DE LA DEFINITION D'UNE FONCTION
C     STOCKAGE DANS UN OBJET DE TYPE FONCTION
C ----------------------------------------------------------------------
C     ----------- COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER       ZI
      COMMON/IVARJE/ZI(1)
      REAL*8        ZR
      COMMON/RVARJE/ZR(1)
      COMPLEX*16    ZC
      COMMON/CVARJE/ZC(1)
      LOGICAL       ZL
      COMMON/LVARJE/ZL(1)
      CHARACTER*8   ZK8
      CHARACTER*16         ZK16
      CHARACTER*24                 ZK24
      CHARACTER*32                         ZK32
      CHARACTER*80                                 ZK80
      COMMON/KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----------- FIN COMMUNS NORMALISES  JEVEUX  ----------------------
      INTEGER      I, IER, IRET, IBID, IVAL, JVAL, JFON, IFM
      INTEGER      JPAR, LPARA, LPAR2, L, LPRO, N1, N2, N3, N4, N5, NIV
      INTEGER      JNOE, N, NBVAL, LVAL, LFON
      INTEGER      NBCOUP, NBCOU2, NBLR, NBLV, NBRMA, NBLN, NBVC, NBVR
      REAL*8       MIN1, MIN2, MIN3, R8BID, R8MAEM
      CHARACTER*2  PROLGD
      CHARACTER*4  INTERP(2)
      CHARACTER*8  K8B, NOMPAR, NOMRES, NOMMAI
      CHARACTER*16 NOMCMD, TYPFON, VERIF
      CHARACTER*19 NOMFON, LISTPA, LISTFO
      CHARACTER*24 NOMMAS
      CHARACTER*1  K1BID
C     ------------------------------------------------------------------
C
      CALL JEMARQ()
C
      CALL GETRES(NOMFON,TYPFON,NOMCMD)
      VERIF = ' '
      CALL GETVTX(' ','VERIF'     ,0,1,1,VERIF,N1)
      CALL GETVR8(' ','VALE'      ,0,1,0,R8BID,N2)
      CALL GETVR8(' ','VALE_C'    ,0,1,0,R8BID,N3)

      CALL GETVID(' ','NOEUD_PARA',0,1,0,K8B  ,NBLN)
      CALL GETVID(' ','VALE_PARA' ,0,1,0,K8B  ,NBLR)
      CALL GETVR8(' ','VALE_Y'    ,0,1,0,R8BID,NBLV)
      NBVR = ABS(N2)
      NBVC = ABS(N3)
      NBLN = ABS(NBLN)
      NBLV = ABS(NBLV)
C
      IF ( NBVC.NE.0 ) THEN
         IF ( NBVC .LT. 3 ) THEN
            CALL U2MESS('F','UTILITAI2_66')
         ENDIF
         NBCOUP = NBVC / 3
         IF ( MOD(NBVC,3) .NE. 0 ) THEN
            CALL U2MESS('F','UTILITAI2_67')
         ENDIF
         CALL WKVECT('&&OP0003.TEMP.PARA','V V R',NBVC,LPARA)
         CALL WKVECT('&&OP0003.TEMP.PAR2','V V R',NBCOUP,LPAR2)
         CALL GETVR8(' ','VALE_C',0,1,NBVC,ZR(LPARA),L)
         DO 2 I = 0,NBCOUP-1
            ZR(LPAR2+I) = ZR(LPARA+3*I)
 2       CONTINUE
C        VERIF QUE LES PARAMETRES SONT STRICT CROISSANTS
         IF(VERIF.EQ.'CROISSANT')THEN
           IRET=2
           CALL FOVERF(ZR(LPAR2),NBCOUP,IRET)
           IF(IRET.NE.2) CALL U2MESS('F','CALCULEL_13')
         ENDIF
      ELSEIF ( NBVR.NE.0 .AND. NBLN.EQ.0 ) THEN
         IF ( NBVR .LT. 2 ) THEN
            CALL U2MESS('F','UTILITAI2_66')
         ENDIF
         NBCOUP = NBVR / 2
         IF ( MOD(NBVR,2) .NE. 0 ) THEN
            CALL U2MESS('F','UTILITAI2_68')
         ENDIF
         CALL WKVECT('&&OP0003.TEMP.PARA','V V R',NBVR  ,LPARA)
         CALL WKVECT('&&OP0003.TEMP.PAR2','V V R',NBCOUP,LPAR2)
         CALL GETVR8(' ','VALE',0,1,NBVR,ZR(LPARA),L)
         DO 4 I = 0,NBCOUP-1
            ZR(LPAR2+I) = ZR(LPARA+2*I)
 4       CONTINUE
C        VERIF QUE LES PARAMETRES SONT STRICT CROISSANTS
         IF(VERIF.EQ.'CROISSANT')THEN
           IRET=2
           CALL FOVERF(ZR(LPAR2),NBCOUP,IRET)
           IF(IRET.NE.2) CALL U2MESS('F','CALCULEL_13')
         ENDIF
      ENDIF

C
C --- RECUPERATION DU NIVEAU D'IMPRESSION
      CALL INFMAJ
      CALL INFNIV(IFM,NIV)
C
      CALL GETVTX(' ','NOM_PARA'   ,0,1,1,NOMPAR,N1)
      CALL GETVTX(' ','NOM_RESU'   ,0,1,1,NOMRES,N2)
      CALL GETVTX(' ','INTERPOL'   ,0,1,2,INTERP,N3)
      IF ( N3 .EQ. 1 ) INTERP(2) = INTERP(1)
      CALL GETVTX(' ','PROL_GAUCHE',0,1,1,PROLGD(1:1),N4)
      CALL GETVTX(' ','PROL_DROITE',0,1,1,PROLGD(2:2),N5)

C
      CALL WKVECT(NOMFON//'.PROL','G V K16',5,LPRO)
      IF ( NBLN .NE. 0) THEN
         ZK16(LPRO) = 'FONCTION'
         ZK16(LPRO+1) = INTERP(1)//INTERP(2)
         ZK16(LPRO+2) = NOMPAR
         ZK16(LPRO+3) = NOMRES
         ZK16(LPRO+4) = PROLGD
      ELSE
        IF ( NBVC.NE.0 ) THEN
         ZK16(LPRO) = 'FONCT_C '
        ELSE
         ZK16(LPRO) = 'FONCTION'
        ENDIF
        ZK16(LPRO+1) = INTERP(1)//INTERP(2)
        ZK16(LPRO+2) = NOMPAR
        ZK16(LPRO+3) = NOMRES
        ZK16(LPRO+4) = PROLGD
      ENDIF
C
C     MINI DES ABSCISSES
      MIN1=R8MAEM()
C     MINI DES ORDONNEES
      MIN2=R8MAEM()
C     MINI DES ORDONNEES (PARTIE IMAGINAIRE)
      MIN3=R8MAEM()
C
      IF ( NBLN .NE. 0 ) THEN
         CALL GETVID(' ','MAILLAGE',0,1,1,NOMMAI,IBID)
         NOMMAS = NOMMAI//'.NOMMAI'
         CALL JELIRA(NOMMAS,'NOMUTI',NBRMA,K1BID)
C
         CALL WKVECT('&&OP0003.VALEURS_LUES','V V R' ,NBLV,JVAL)
         CALL WKVECT('&&OP0003.NOEUDS_LUES' ,'V V K8',NBLN,JNOE)
         IF ( NBLV .NE. NBLN) THEN
           CALL U2MESS('F','UTILITAI2_69')
         ENDIF
         CALL GETVR8(' ','VALE_Y',0,1,NBLV,ZR(JVAL) ,N)
         CALL GETVEM(NOMMAI,'NOEUD',' ','NOEUD_PARA',
     &         0,1,NBLV,ZK8(JNOE),N)
         NBVAL = 2*(NBRMA+1)
         CALL WKVECT(NOMFON//'.VALE','G V R',NBVAL,LVAL)
C
         K8B = INTERP(1)
         CALL DEFCUR(ZR(JVAL),ZK8(JNOE),NBLV,ZR(LVAL),NBVAL,NOMMAI,
     &                   NBRMA,PROLGD,K8B)
C
         DO 09 IVAL = 0,NBLV-1
            IF(ZR(JVAL+IVAL).LT.MIN1) MIN1=ZR(JVAL+IVAL)
 09      CONTINUE
      ELSEIF ( NBVC.NE.0 ) THEN
         CALL WKVECT('&&OP0003.VALEURS_LUES','V V R',NBVC,JVAL)
         CALL GETVR8(' ','VALE_C',0,1,NBVC,ZR(JVAL),N)
         CALL WKVECT(NOMFON//'.VALE','G V R',NBVC,LVAL)
         NBCOUP = NBVC / 3
         LFON = LVAL + NBCOUP - 1
         DO 10 IVAL = 0,NBCOUP-1
            ZR(LVAL+ IVAL     ) = ZR(JVAL+3*IVAL)
            ZR(LFON+(IVAL*2)+1) = ZR(JVAL+3*IVAL+1)
            ZR(LFON+(IVAL*2)+2) = ZR(JVAL+3*IVAL+2)
            IF(ZR(LVAL+IVAL).LT.MIN1) MIN1=ZR(LVAL+IVAL)
            IF(ZR(LVAL+(IVAL*2)+1).LT.MIN2) MIN2=ZR(LVAL+(IVAL*2)+1)
            IF(ZR(LVAL+(IVAL*2)+2).LT.MIN3) MIN3=ZR(LVAL+(IVAL*2)+2)
 10      CONTINUE
C
      ELSEIF ( NBVR.NE.0 .AND. NBLN.EQ.0 ) THEN
         CALL WKVECT('&&OP0003.VALEURS_LUES','V V R',NBVR,JVAL)
         CALL GETVR8(' ','VALE',0,1,NBVR,ZR(JVAL),N)
         CALL WKVECT(NOMFON//'.VALE','G V R',NBVR,LVAL)
         NBCOUP = NBVR / 2
         LFON = LVAL + NBCOUP
         DO 20 IVAL = 0,NBCOUP-1
            ZR(LVAL+IVAL) = ZR(JVAL+2*IVAL)
            ZR(LFON+IVAL) = ZR(JVAL+2*IVAL+1)
            IF(ZR(LVAL+IVAL).LT.MIN1) MIN1=ZR(LVAL+IVAL)
            IF(ZR(LFON+IVAL).LT.MIN2) MIN2=ZR(LFON+IVAL)
 20      CONTINUE
C
      ELSEIF ( NBLR.NE.0 ) THEN
         CALL GETVID(' ','VALE_PARA',1,1,1,LISTPA,N1)
         CALL GETVID(' ','VALE_FONC',1,1,1,LISTFO,N1)
         CALL JELIRA(LISTPA//'.VALE','LONMAX',NBCOUP,K1BID)
         CALL JELIRA(LISTFO//'.VALE','LONMAX',NBCOU2,K1BID)
         IF (NBCOU2.NE.NBCOUP) THEN
           IF (NBCOU2.LT.NBCOUP) THEN
             CALL UTMESS('F','OP0003','IL MANQUE DES VALEURS DANS '//
     &                  LISTFO//' ,LISTE PLUS PETITE QUE '//LISTPA)
C        CALL U2MESK('F','UTILITAI2_70', 2 ,VALK)
           ENDIF
           IF (NBCOUP.LT.NBCOU2) THEN
             CALL UTMESS('F','OP0003','IL MANQUE DES VALEURS DANS '//
     &                  LISTPA//' ,LISTE PLUS PETITE QUE '//LISTFO)
C        CALL U2MESK('F','UTILITAI2_70', 2 ,VALK)
           ENDIF
         ENDIF
         NBVAL = NBCOUP * 2
         CALL WKVECT(NOMFON//'.VALE','G V R',NBVAL,LVAL)
         CALL JEVEUO(LISTPA//'.VALE','L',JPAR)
         CALL JEVEUO(LISTFO//'.VALE','L',JFON)
         LFON = LVAL + NBCOUP
         DO 30 IVAL = 0,NBCOUP-1
            ZR(LVAL+IVAL) = ZR(JPAR+IVAL)
            ZR(LFON+IVAL) = ZR(JFON+IVAL)
            IF(ZR(LVAL+IVAL).LT.MIN1) MIN1=ZR(LVAL+IVAL)
            IF(ZR(LFON+IVAL).LT.MIN2) MIN2=ZR(LFON+IVAL)
 30      CONTINUE
      ENDIF
C
C     --- VERIFICATION QUE LES VALEURS SONT >=0 SI INTERPOLATION 'LOG'
C     JE NE VOIS PAS A QUOI CELA PEUT CORRESPONDRE SUR UNE FONCTION
C     A VALEURS COMPLEXES, MAIS AUTANT LE LAISSER POSSIBLE
      IF ((INTERP(1).EQ.'LOG'.AND.MIN1.LE.0.D0)
     &.OR.(INTERP(2).EQ.'LOG'.AND.(MIN2.LE.0.D0.OR.MIN3.LE.0.D0))) THEN
         CALL U2MESS('F','UTILITAI2_71')
      ENDIF
C
C     --- VERIFICATION QU'ON A BIEN CREER UNE FONCTION ---
C         ET REMISE DES ABSCISSES EN ORDRE CROISSANT
C         CE N'EST PAS LA PEINE SI LA CROISSANTE STRICTE A ETE IMPOSEE
      IF(VERIF.NE.'CROISSANT')THEN
         CALL ORDONN(NOMFON,NOMCMD,0)
      ENDIF
C
C     --- CREATION D'UN TITRE ---
      CALL TITRE
C
C     --- IMPRESSIONS ---
      IF (NIV.GT.1) CALL FOIMPR(NOMFON,NIV,IFM,0,K8B)
C
      CALL JEDEMA()
      END
