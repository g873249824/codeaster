      SUBROUTINE CHKCMP(MODELE,MAILLA,
     &                  NBCMP,LISCMP,NBENT,LISENT,TYPENT,
     &                  TYPERR,SUBERR)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 29/09/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT     NONE
      CHARACTER*8  MODELE
      CHARACTER*8  MAILLA
      INTEGER      NBCMP
      CHARACTER*8  LISCMP(*)
      INTEGER      NBENT
      CHARACTER*8  LISENT(*)
      CHARACTER*8  TYPENT
      CHARACTER*1  TYPERR
      CHARACTER*6  SUBERR
C
C ----------------------------------------------------------------------
C ROUTINE UTILITAIRE
C ----------------------------------------------------------------------
C
C VERIFIE QU'UNE LISTE DE COMPOSANTE (LISCMP) EST BIEN PRESENTE
C SUR UN NOEUD OU UN GROUP_NO (LISENT)
C
C IN  MODELE : NOM DU MODELE
C IN  MAILLA : NOM DU MAILLAGE
C IN  NBCMP  : LONGUEUR DE LA LISTE DES COMPOSANTES A EXAMINER
C IN  LISCMP : LISTE DES COMPOSANTES A EXAMINER
C IN  NBENT  : LONGUEUR DE LA LISTE DES ENTITES A EXAMINER
C IN  LISENT : LISTE ENTITES A EXAMINER
C IN  TYPENT : TYPE DES ENTITES A EXAMINER (NOEUD OU GROUP_NO)
C IN  TYPERR : TYPE D'ARRET (ALARME, ERREUR,...)
C IN  SUBERR : SOUS-PROGRAMME AFFICHE DANS L'ERREUR
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
      CHARACTER*32       JEXNOM,JEXNUM
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      IBID,IER,INO,IGNO,I,J,ICMP
      INTEGER      NCMPMX,NBEC,NBNO
      INTEGER      INDIK8
      LOGICAL      EXISDG
      CHARACTER*1  K1BID
      CHARACTER*8  NOMGD,NOMNO,K8BID
      CHARACTER*16 PHENO
      INTEGER      JPRNM,JNO,JGD
      CHARACTER*24 GRPNO,NOMNOE
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      GRPNO  = MAILLA//'.GROUPENO'
      NOMNOE = MAILLA//'.NOMNOE'

      CALL DISMOI('F','PHENOMENE',MODELE,'MODELE',IBID,PHENO,IER)
      CALL DISMOI('F','NOM_GD',PHENO,'PHENOMENE',IBID,NOMGD,IER)
      CALL DISMOI('F','NB_EC',NOMGD,'GRANDEUR',NBEC,K1BID,IER)

      CALL JENONU(JEXNOM('&CATA.GD.NOMCMP',NOMGD),IER)
      CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'LONMAX',
     &     NCMPMX,K8BID)
      CALL JEVEUO(MODELE//'.MODELE    .PRNM','L',JPRNM)
      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'L',JGD)
C
C --- VERIFICATION QUE LES NOEUDS SUPPORTENT LES COMPOSANTES FOURNIES
C
      IF (TYPENT(1:8).EQ.'GROUP_NO') THEN
        DO 10 IGNO = 1,NBENT
          CALL JELIRA(JEXNOM(GRPNO,LISENT(IGNO)),'LONMAX',NBNO,K8BID)
          CALL JEVEUO(JEXNOM(GRPNO,LISENT(IGNO)),'L',JNO)
          DO 11 I = 1,NBNO
            INO = ZI(JNO+I-1)
            DO 12 J = 1,NBCMP
              ICMP = INDIK8(ZK8(JGD),LISCMP(J),1,NCMPMX)
              IF (.NOT.EXISDG(ZI(JPRNM-1+(INO-1)*NBEC+1),ICMP)) THEN
                CALL JENUNO(JEXNUM(NOMNOE,INO),NOMNO)
                CALL UTDEBM(TYPERR,SUBERR,' ')
                CALL UTIMPK('L','LE NOEUD',1,NOMNO)
                CALL UTIMPK('S','NE SUPPORTE PAS LA COMPOSANTE',
     &                      1,LISCMP(J))
                CALL UTFINM()
              ENDIF
  12        CONTINUE
  11      CONTINUE
  10    CONTINUE
      ELSEIF (TYPENT(1:5).EQ.'NOEUD') THEN
        DO 20 I=1,NBENT
          NOMNO = LISENT(I)
          CALL JENONU(JEXNOM(NOMNOE,NOMNO),INO)
          DO 21 J=1,NBCMP
            ICMP = INDIK8(ZK8(JGD),LISCMP(J),1,NCMPMX)
            IF (.NOT.EXISDG(ZI(JPRNM-1+(INO-1)*NBEC+1),ICMP)) THEN
              CALL UTDEBM(TYPERR,SUBERR,' ')
              CALL UTIMPK('L','LE NOEUD',1,NOMNO)
              CALL UTIMPK('L','LE NOEUD',1,NOMNO)
              CALL UTIMPK('S','NE SUPPORTE PAS LA COMPOSANTE',
     &                    1,LISCMP(J))
              CALL UTFINM()
            ENDIF
  21      CONTINUE
  20    CONTINUE
      ELSE
        CALL U2MESS('F','UTILITAI_22')
      ENDIF
C
      CALL JEDEMA()
C
      END
