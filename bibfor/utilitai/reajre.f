      SUBROUTINE REAJRE(MATELZ,RESUEZ,BASEZ)
      IMPLICIT NONE
      CHARACTER*(*)     MATELZ,RESUEZ,BASEZ
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 16/02/2010   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C      BUT: AJOUTER DANS LE MATR_ELEM (OU VECT_ELEM) MATELZ LE
C           RESUELEM RESUEZ
C           SI RESUEZ=' ', ON CREE UN MATR_ELEM (OU VECT_ELEM) VIERGE
C
C     IN  : MATELZ = NOM DE LA SD MATR_ELEM OU VECT_ELEM
C           RESUEZ = NOM DE LE SD RESU_ELEM
C           BASEZ  = BASE DE CREATION ('V' OU 'G')
C
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER IRET,NLMAX,NLUTI,NDIM,JRELR,I,IRET1,IRET2,JRERR
      LOGICAL ZEROSD
      PARAMETER(NDIM=10)
      CHARACTER*1 BASE
      CHARACTER*4 CBID,DETR
      CHARACTER*19 MATELE,RESUEL
C
      CALL JEMARQ()
C
      RESUEL=RESUEZ
      MATELE=MATELZ
      BASE=BASEZ
C
      CALL JEEXIN(MATELE//'.RELR',IRET)
C
C     ALLOCATION
      IF(IRET.EQ.0)THEN
         CALL WKVECT(MATELE//'.RELR', BASE//' V K24',NDIM,JRELR)
         CALL JEECRA(MATELE//'.RELR', 'LONUTI', 0 , CBID )
      ENDIF

C     EXISTENCE DU RESU_ELEM ?
      IF(RESUEL.EQ.' ')GOTO 999

C     ATTENTION : PARFOIS, RESUEL N'EST PAS UN RESUELEM MAIS UN CHAM_NO
      CALL EXISD('RESUELEM',RESUEL,IRET1)
      CALL EXISD('CHAM_NO',RESUEL,IRET2)
      IF((IRET1.EQ.0).AND.(IRET2.EQ.0)) GOTO 999

C     GLUTE: SI 'SECM_ZZ1', IL NE FAUT PAS DETRUIRE LES RESUELEM NULS
C     CAR LA PROGRAMMATION DE SINOZ1 SUPPOSE TOUJOURS 4 SECONDS MEMBRES
      DETR='OUI'
      CALL JEEXIN(MATELE//'.RERR', IRET)
      IF (IRET.GT.0) THEN
        CALL JEVEUO(MATELE//'.RERR','L',JRERR)
        IF (ZK24(JRERR-1+2).EQ.'SECM_ZZ1') DETR='NON'
C       -- POUR LES SECONDS MEMBRES, ON EVITE DE DETRUIRE :
        IF (ZK24(JRERR-1+2)(1:4).EQ.'CHAR') DETR='NON'
      ENDIF

C     SI LE RESU_ELEM EST TOUT NUL, ON PEUT LE DETRUIRE :
      IF (IRET1.GT.0 .AND. DETR.EQ.'OUI') THEN
        IF (ZEROSD('RESUELEM',RESUEL))  THEN
          CALL DETRSD('RESUELEM',RESUEL)
          GOTO 999
        ENDIF
      ENDIF
C
C     REDIMENSIONNEMENT
      CALL JELIRA(MATELE//'.RELR', 'LONMAX', NLMAX, CBID )
      CALL JELIRA(MATELE//'.RELR', 'LONUTI', NLUTI, CBID )
      IF(NLMAX.EQ.NLUTI) CALL JUVECA(MATELE//'.RELR',NLMAX+NDIM)
C
C     STOCKAGE
      CALL JEVEUO(MATELE//'.RELR', 'E' , JRELR)
      ZK24(JRELR+NLUTI) = RESUEL
      CALL JEECRA(MATELE//'.RELR','LONUTI',NLUTI+1,CBID)

 999  CONTINUE

      CALL JEDEMA()

      END
