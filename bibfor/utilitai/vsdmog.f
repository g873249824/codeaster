      SUBROUTINE VSDMOG(NOM)
      IMPLICIT NONE
      CHARACTER*(*) NOM
      CHARACTER*32 JEXNUM
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 10/10/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE VABHHTS J.PELLET
C ----------------------------------------------------------------------
C BUT : VERISD/MODELE_GENE
C ----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- FIN COMMUNS NORMALISES  JEVEUX  --------------------------
C -DEB------------------------------------------------------------------

      INTEGER NBLIA,I,NBSTR
      INTEGER NBCO1,NBLI1,NBCO2,NBLI2,NBCO3,NBLI3,ILIPR
      INTEGER ICHK,N1CHK,N2CHK,N3CHK,LICHK
      INTEGER VERIOB,IEX1
      CHARACTER*8 ANSW,NSSME,NSSNO
      CHARACTER*24 FAMLI
      CHARACTER*1 CMES

      CHARACTER*1 KBID
      INTEGER I2

      CALL JEMARQ()

C-----VERIFICATION DE MODG.DESC
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.DESC','EXIS_V',0,' ')
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.DESC','LONMAX',3,' ')
      CALL ASSERT(IEX1.EQ.1)

C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.DESC
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.DESC','TYPE_I',0,' ')

C ----VERIFICATION COMPOSANTES
      CALL JEVEUO(NOM(1:8)//'      .MODG.DESC','L',ICHK)
      N1CHK = ZI(ICHK)
      N2CHK = ZI(ICHK+1)
      N3CHK = ZI(ICHK+2)

      IF (N1CHK.LT.0) THEN
        CALL U2MESS(CMES,'SDVERI_10')
      ENDIF

      IF (N2CHK.LT.0) THEN
        CALL U2MESS(CMES,'SDVERI_11')
      ENDIF

      IF (N3CHK.LT.0) THEN
        CALL U2MESS(CMES,'SDVERI_12')
      ENDIF

C-----------------------------------------------------

C-----RECUPERATION DE LA LONGUEUR DE L'OBJET MODG.LIDF
C-----VERIFICATION DE LA COHERENCE DES LONGUEUR NBLIA

      CALL JELIRA(NOM(1:8)//'      .MODG.LIDF','NUTIOC',NBLIA,KBID)

C-----VERIFICATION DE MODG.LIDF ----------------
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.LIDF','EXIS_XD',0,' ')

      FAMLI = NOM(1:8)//'      .MODG.LIDF'

C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.LIDF
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.LIDF','TYPE_K8',0,' ')

      DO 10 I = 1,NBLIA

        IEX1 = VERIOB('O',JEXNUM(FAMLI,I),'EXIS_OC',0,' ')
        IEX1 = VERIOB('O',JEXNUM(FAMLI,I),'LONMAX',5,' ')

C ----VERIFICATION COMPOSANTE 5
        CALL JEVEUO(JEXNUM(FAMLI,I),'L',ICHK)
        ANSW = ZK8(ICHK+4)

        IF ((ANSW.NE.'OUI') .AND. (ANSW.NE.'NON')) THEN
          CALL U2MESS(CMES,'SDVERI_13')
        ENDIF

   10 CONTINUE

C-----VERIFICATION DE MODG.LIPR ----------------
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.LIPR','EXIS_V',0,' ')
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.LIPR','LONMAX',9*NBLIA,
     &       ' ')

C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.LIPR
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.LIPR','TYPE_I',0,' ')
      CALL JEVEUO(NOM(1:8)//'      .MODG.LIPR','L',ILIPR)

C-----VERIFICATION DE MODG.LIMA ----------------
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.LIMA','EXIS_XD',0,' ')
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.LIMA','NUTIOC',3*NBLIA,
     &       ' ')

C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.LIMA
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.LIMA','TYPE_R',0,' ')

      FAMLI = NOM(1:8)//'      .MODG.LIMA'

C-----BOUCLE POUR VERIFICATION DE MODG.LIPR ET MODG.LIMA

      DO 20 I = 1,NBLIA

C----------------------------------------------
        NBLI1 = ZI(ILIPR+9* (I-1))
        NBCO1 = ZI(ILIPR+9* (I-1)+1)
        LICHK = ZI(ILIPR+9* (I-1)+2)

        IF ((NBLI1.LE.0) .OR. (NBCO1.LE.0) .OR.
     &      (LICHK.NE. (3*I-2))) THEN
          CALL U2MESS(CMES,'SDVERI_14')
        ENDIF

C----------------------------------------------
        NBLI2 = ZI(ILIPR+9* (I-1)+3)
        NBCO2 = ZI(ILIPR+9* (I-1)+4)
        LICHK = ZI(ILIPR+9* (I-1)+5)

        IF ((NBLI2.LE.0) .OR. (NBCO2.LE.0) .OR.
     &      (LICHK.NE. (3*I-1))) THEN
          CALL U2MESS(CMES,'SDVERI_15')
        ENDIF

C----------------------------------------------
        NBLI3 = ZI(ILIPR+9* (I-1)+6)
        NBCO3 = ZI(ILIPR+9* (I-1)+7)
        LICHK = ZI(ILIPR+9* (I-1)+8)

        IF ((NBLI3.LE.0) .OR. (NBCO3.LE.0) .OR. (LICHK.NE. (3*I))) THEN
          CALL U2MESS(CMES,'SDVERI_16')
        ENDIF

        IEX1 = VERIOB('O',JEXNUM(FAMLI,3*I-2),'EXIS_OC',0,' ')
        IEX1 = VERIOB('O',JEXNUM(FAMLI,3*I-2),'LONMAX',NBLI1*NBCO1,' ')

        IEX1 = VERIOB('O',JEXNUM(FAMLI,3*I-1),'EXIS_OC',0,' ')
        IEX1 = VERIOB('O',JEXNUM(FAMLI,3*I-1),'LONMAX',NBLI2*NBCO2,' ')

        IEX1 = VERIOB('O',JEXNUM(FAMLI,3*I),'EXIS_OC',0,' ')
        IEX1 = VERIOB('O',JEXNUM(FAMLI,3*I),'LONMAX',NBLI3*NBCO3,' ')

   20 CONTINUE

C-----RECUPERATION DE LA LONGUEUR DE L'OBJET MODG.SSME
C-----VERIFICATION DE LA COHERENCE DES LONGUEUR NBSTR

      CALL JELIRA(NOM(1:8)//'      .MODG.SSME','NUTIOC',NBSTR,KBID)


C-----VERIFICATION DE MODG.SSME ET MODG.SSNO
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSME','EXIS_XC',0,' ')


C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.SSME
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSME','TYPE_K8',0,' ')

C ----VERIFICATION DE MODG.SSNO
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSNO','EXIS_N',0,' ')
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSNO','NOMUTI',NBSTR,' ')

C ----VERIFICATION DE LA NATURE DE L'OBJET MODG.SSNO
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSNO','TYPE_K8',0,' ')

      FAMLI = NOM(1:8)//'      .MODG.SSME'

      DO 30 I = 1,NBSTR

C------VERFICATION DE LA SOUS STRUCTURATION DYNAMIQUE
C------POUR CHAQUE OBJET SSME
        CALL JEVEUO(JEXNUM(FAMLI,I),'L',ICHK)
        NSSME = ZK8(ICHK)

        CALL VSDMCD(NSSME(1:8))

   30 CONTINUE

C-----VERIFICATION DE MODG.SSOR
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSOR','EXIS_XC',0,' ')
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSOR','NUTIOC',NBSTR,' ')

C-----VERIFICATION DE LA NATURE DE L'OBJET MODG.SSOR
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSOR','TYPE_R',0,' ')
      FAMLI = NOM(1:8)//'      .MODG.SSOR'
      DO 40 I = 1,NBSTR

        IEX1 = VERIOB('O',JEXNUM(FAMLI,I),'EXIS_OC',0,' ')
        IEX1 = VERIOB('O',JEXNUM(FAMLI,I),'LONMAX',3,' ')

   40 CONTINUE

C-----VERIFICATION DE MODG.SSTR
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSTR','EXIS_XC',0,' ')
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSTR','NUTIOC',NBSTR,' ')

C-----VERIFICATION DE LA NATURE DE L'OBJET MODG.SSTR
      IEX1 = VERIOB('O',NOM(1:8)//'      .MODG.SSTR','TYPE_R',0,' ')

      FAMLI = NOM(1:8)//'      .MODG.SSTR'

      DO 50 I = 1,NBSTR

        IEX1 = VERIOB('O',JEXNUM(FAMLI,I),'EXIS_OC',0,' ')
        IEX1 = VERIOB('O',JEXNUM(FAMLI,I),'LONMAX',3,' ')

   50 CONTINUE

      CALL JEDEMA()

      END
