      SUBROUTINE VERIJ7(COUI,TYPESD,NOMSD,PN,VCO,M80,NVU,NTROU)
      IMPLICIT NONE
      CHARACTER*(*) COUI
      CHARACTER*(*) TYPESD,NOMSD,PN,M80
      INTEGER VCO(*),NVU,NTROU
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 10/10/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C ----------------------------------------------------------------------
C    ROUTINE SERVANT A MASQUER LA RECURSIVITE DE VERIJ6
C    ET A TRAITER LES OJB TERMINAUX
C ----------------------------------------------------------------------
C  BUT : "COCHER" DANS VCO LES OBJETS POTENTIELLEMENT
C         CREES DANS LA SD NOMSD DE TYPE TYPESD

C IN K*   COUI   :
C    /'C'     : NOMSD EST LIE A LA SD SUP. PAR COMPOSITION
C    /'I_XXX' : NOMSD EST LIE A LA SD SUP. PAR L'INDIRECTION XXX
C IN K*   TYPESD : TYPE DE LA STRUCTURE DE DONNEE A COCHER
C IN K8   NOMSD  : NOM DE LA STRUCTURE DE DONNEE A COCHER
C IN K24  PN     : POINTEUR DE NOM CONTENANT LES OBJETS REELLEMENT CREES
C IN/JXVAR M80   : NOM DE L'OBJET MEMORISANT LES SD VISITEES
C                  (POUR EVITER LES RECURSIONS INFINIES)
C IN/OUT  NVU    : NOMBRE DE SD DEJA VISITEES
C OUT V(I) VCO   : VECTEUR QUE L'ON COCHE (1-> COCHE)
C IN/OUT  NTROU  : NOMBRE D'OJB EXISTANT (CUMULE)

C ----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR,JEXR8
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ----------------------------

C     COMMON VERIJK : POUR ETABLIR LE CATALOGUE A PARTIR DE LA REALITE
C                     DES TESTS.
C     PRCATA : 'OUI' : IL FAUT IMPRIMER LES CARACTERISTIQUES DES
C                      OBJETS TROUVES.
C              'NON' : ON N'IMPRIME RIEN
C     DERNSD : TYPE DE LA SD DE PLUS BAS NIVEAU (PARCOURS DE L'ARBRE)
      CHARACTER*16 DERNSD,PRCATA
      COMMON /VERIJK/DERNSD,PRCATA

      CHARACTER*16 DERNM1
      CHARACTER*24 NOMS24,KBID,SUFFIX
      CHARACTER*80 VISIT
      INTEGER I1,INDK80,JM80,ITROU,N1 ,NTROU1,IEXI,L1,L2
C     ------------------------------------------------------------------
C     RETURN

      NOMS24=NOMSD
      IF (NOMS24.EQ.' ') GOTO 9999

      CALL ASSERT(COUI.EQ.'C'.OR.COUI(1:2).EQ.'I_')

      IF (TYPESD.NE.'OJB') THEN
C       -- ON SAUVEGARDE DERNSD "AVANT" POUR POUVOIR LE RETABLIR
C          EN FIN DE ROUTINE
        DERNM1=DERNSD
        DERNSD=TYPESD
      ENDIF



      IF (TYPESD.EQ.'OJB') THEN
         CALL JENONU(JEXNOM(PN,NOMS24),I1)
         IF (I1.GT.0) VCO(I1)=1
C        -- IMPRESSION DES CARACTéRISTIQUES DE NOMS24
         IF (PRCATA.EQ.'OUI') CALL VERIJ8(NOMS24,COUI)
         CALL JEEXIN(NOMS24,IEXI)
         IF (IEXI.GT.0) NTROU=NTROU+1
      ELSE
        NTROU1=NTROU
        VISIT=' '
        VISIT(1:16)=TYPESD
        VISIT(17:40)=NOMS24

C       -- AGRANDISSEMENT DE M80 ?
        CALL JELIRA(M80,'LONMAX',N1,KBID)
        IF (NVU+1.GE.N1) CALL JUVECA(M80,2*N1)

C       -- SI DEJA_VU, ON ARRETE :
        CALL JEVEUO(M80,'E',JM80)
        ITROU=INDK80(ZK80(JM80),VISIT,1,NVU)
        IF (ITROU.GT.0)   GO TO 9998

        NVU=NVU+1
        ZK80(JM80-1+NVU)=VISIT

        CALL VERIJ6(COUI,TYPESD,NOMS24,PN,VCO,M80,NVU,NTROU)

C       -- SI PRCATA=OUI ET QUE LA SD N'EST PAS VIDE:
        IF ((PRCATA.EQ.'OUI').AND.(NTROU.GT.NTROU1))  THEN
           CALL ASSERT(TYPESD.EQ.DERNSD)
           CALL VERIJL(DERNSD,L1)
           WRITE(6,1001) DERNSD,L1,NOMS24

           IF (DERNSD.NE.DERNM1) THEN
C             SUFFIX :
              IF (COUI.EQ.'C') THEN
                 CALL VERIJL(DERNM1,L2)
                 CALL ASSERT(L1.GE.L2)
                 SUFFIX=' '
                 IF (L1.GT.L2) THEN
                    SUFFIX='>'//NOMS24(L2+1:L1)//'<'
                 ELSE
                    SUFFIX='>$VIDE<'
                 ENDIF
              ELSE
                 SUFFIX='>#'//COUI//'<'
              ENDIF

              WRITE(6,1002) DERNM1, SUFFIX, DERNSD
           ENDIF
        ENDIF
      ENDIF


9998  CONTINUE

C     -- ON RETALIT DERNSD (ON REMONTE DANS L'ARBRE)
      IF (TYPESD.NE.'OJB') DERNSD=DERNM1


9999  CONTINUE
 1001 FORMAT ('AJACOT|PRCATA_2|',A16,'|',I3,'|',A24,'| NON_VIDE')
 1002 FORMAT ('AJACOT|PRCATA_3|',A16,'|',A24,'|',A16,'| NON_VIDE')
      END
