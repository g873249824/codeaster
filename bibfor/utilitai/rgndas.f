      SUBROUTINE RGNDAS(NU,IEQ,NOMNO,NOMCMP,TYDDL,LIGREL,INFOBL)
      IMPLICIT   NONE
      INCLUDE 'jeveux.h'
      INTEGER IEQ
      CHARACTER*(*) NU,NOMNO,NOMCMP,TYDDL,LIGREL,INFOBL
C RESPONSABLE PELLET J.PELLET
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     RETROUVER LE NOM DU NOEUD ET LE CMP CORRESPONDANT A UN NUMERO
C     D'EQUATION DANS UN SYSTEME ASSEMBLE.
C ----------------------------------------------------------------------
C IN  : NU     : NOM D'UN NUME_DDL OU D'UN NUME_DDL_GENE
C IN  : IEQ    : NUMERO D'UNE EQUATION DANS UN SYSTEME ASSEMBLE
C OUT : NOMNO  : NOM DU NOEUD ASSOCIE A IEQ
C OUT : NOMCMP : NOM DE LA CMP ASSOCIE A IEQ
C OUT : TYDDL :   / 'A' : DDL PHYSIQUE (NOEUD, CMP)
C                 / 'B' : LAGRANGE ASOCIE A UN DDL IMPOSE
C                 / 'C' : LAGRANGE ASSOCIE A UNE RELATION LINEAIRE
C                 / 'D' : DDL GENERALISE
C OUT : LIGREL : NOM DU LIGREL SI LE NOEUD EST 'B' OU 'C' (BLANC SINON)
C OUT : INFOBL : INFORMATIONS COMPLEMENTAIRES
C ----------------------------------------------------------------------
      INTEGER IBID,GD,NBEC,NEC,JPRNO,JNUEQ,IET,ICO
      INTEGER JDESC,IER,NLILI,I,ILO,NBNO,INO,IDEB,NCMP
      INTEGER ICMP,IIEQ,NUNO,NUCMP,NCMPMX,IADG1,JREFE
      INTEGER INOCMP,NUDDL,NEQ,NUSST,NULIA,JDEEQ,JORIG,IEXI
      CHARACTER*8 NOMA,K8B,NOMEQ,NOMNO2,NOMCM2,MODGEN,KN1,KN2
      CHARACTER*24 VALK
      CHARACTER*19 NUME
      LOGICAL TROUVE,EXISDG,LNUGE

C DEB-------------------------------------------------------------------

      CALL JEMARQ()
      NUME(1:14)=NU
      NUME(15:19)='.NUME'
      LIGREL=' '
      INFOBL=' '
      NOMNO=' '
      NOMCMP=' '
      TYDDL='?'


C     -- LNUGE : .TRUE.  : NUME EST UN NUME_DDL_GENE
C                .FALSE. : NUME EST UN NUME_DDL
      CALL JEEXIN(NUME//'.DESC',IEXI)
      LNUGE=(IEXI.GT.0)


C     -- 1. CAS NUME_DDL :
C     ---------------------
      IF (.NOT.LNUGE) THEN
        CALL DISMOI('F','NOM_MAILLA',NU,'NUME_DDL',IBID,NOMA,IER)
        CALL DISMOI('F','NUM_GD_SI',NU,'NUME_DDL',GD,K8B,IER)
        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GD),'LONMAX',NCMPMX,K8B)
        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',GD),'L',INOCMP)
        CALL JEVEUO(NUME//'.DEEQ','L',JDEEQ)
        CALL JEVEUO(NUME//'.NUEQ','L',JNUEQ)

C       -- 1.1 CAS FACILE : DDL PHYSIQUE :
        NUNO=ZI(JDEEQ-1+2*(IEQ-1)+1)
        NUDDL=ZI(JDEEQ-1+2*(IEQ-1)+2)
        IF (NUNO.GT.0 .AND. NUDDL.GT.0) THEN
          TYDDL='A'
          CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NUNO),NOMNO)
          NOMCMP=ZK8(INOCMP-1+NUDDL)
          GOTO 70

        ENDIF

C       -- 1.2 CAS MOINS FACILE : DDL PORTE PAR NOEUD TARDIF :
C          CALCUL DE TROUVE, NUNO, NUCMP :
        CALL JELIRA(NUME//'.PRNO','NMAXOC',NLILI,K8B)
        CALL ASSERT(NLILI.GT.1)
        NEC=NBEC(GD)
        TROUVE=.FALSE.
        DO 30 I=2,NLILI
          CALL JENUNO(JEXNUM(NUME//'.LILI',I),LIGREL)
          CALL JELIRA(JEXNUM(NUME//'.PRNO',I),'LONMAX',ILO,K8B)
          IF (ILO.LE.0)GOTO 30
          CALL JEVEUO(JEXNUM(NUME//'.PRNO',I),'L',JPRNO)
          NBNO=ILO/(NEC+2)
          DO 20 INO=1,NBNO
            IDEB=ZI(JPRNO-1+(INO-1)*(NEC+2)+1)
            NCMP=ZI(JPRNO-1+(INO-1)*(NEC+2)+2)
            DO 10 ICMP=1,NCMP
              IIEQ=ZI(JNUEQ-1+IDEB-1+ICMP)
              IF (IEQ.EQ.IIEQ) THEN
                TROUVE=.TRUE.
                NUNO=INO
                NUCMP=ICMP
                GOTO 40

              ENDIF
   10       CONTINUE
   20     CONTINUE
   30   CONTINUE
   40   CONTINUE
        CALL ASSERT(TROUVE)
        CALL ASSERT(NUNO.GT.0)


C       -- CALCUL DE NOMCMP :
        IADG1=JPRNO-1+(NUNO-1)*(NEC+2)+3
        ICO=0
        DO 50 ICMP=1,NCMPMX
          IF (EXISDG(ZI(IADG1),ICMP)) THEN
            ICO=ICO+1
            IF (ICO.EQ.NUCMP)GOTO 60
          ENDIF
   50   CONTINUE
   60   CONTINUE
        CALL ASSERT(ICMP.LE.NCMPMX)
        NOMCMP=ZK8(INOCMP-1+ICMP)
        CALL ASSERT(NOMCMP.EQ.'LAGR')


C       -- ON REMPLIT INFOBL:
        NUNO=ZI(JDEEQ-1+2*(IEQ-1)+1)
        NUDDL=ZI(JDEEQ-1+2*(IEQ-1)+2)
C         -- SI NUNO = 0  C'EST UNE LIAISON_DDL :
        IF (NUNO.EQ.0) THEN
          TYDDL='C'
          INFOBL='NOEUD DE LIAISON_DDL'
        ELSE
          TYDDL='B'
          CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NUNO),NOMNO2)
          NOMCM2=ZK8(INOCMP-1+(-NUDDL))
          INFOBL='NOEUD: '//NOMNO2//' CMP: '//NOMCM2
        ENDIF


C     -- 2. CAS NUME_DDL_GENE :
C     --------------------------
      ELSE
        TYDDL='D'
        LIGREL=' '
        INFOBL=' '
        CALL JEVEUO(NUME//'.DESC','L',JDESC)
        CALL ASSERT(ZI(JDESC).EQ.2)
        CALL JEVEUO(NUME//'.DEEQ','L',JDEEQ)
        CALL JELIRA(NUME//'.DEEQ','LONMAX',NEQ,K8B)
        NEQ=NEQ/2
        NUNO=ZI(JDEEQ+2*IEQ-1)
        NUCMP=ZI(JDEEQ+2*IEQ-2)
        IF (NUNO.GT.0) THEN
          CALL JEVEUO(JEXNUM(NUME//'.ORIG',1),'L',JORIG)
          NUSST=ZI(JORIG+NUNO-1)
          CALL JEEXIN(NUME//'.REFE',IEXI)
          IF (IEXI.GT.0) THEN
            CALL JEVEUO(NUME//'.REFE','L',JREFE)
          ELSE
            CALL JEVEUO(NUME//'.REFN','L',JREFE)
          ENDIF
          MODGEN=ZK24(JREFE)
          CALL JEEXIN(MODGEN//'      .MODG.SSNO',IEXI)
          IF (IEXI.GT.0) THEN
            CALL JENUNO(JEXNUM(MODGEN//'      .MODG.SSNO',NUSST),NOMNO)
          ELSE
            NOMNO='UNFOUND'
          ENDIF
          NOMCMP(1:3)='GEN'
          WRITE (NOMCMP(4:8),'(I5)')NUCMP
        ELSE
          NUNO=-NUNO
          CALL JEVEUO(JEXNUM(NUME//'.ORIG',2),'L',JORIG)
          NULIA=ZI(JORIG+NUNO+1)
          NOMNO(1:3)='TAR'
          WRITE (NOMNO(4:8),'(I5)')NUNO
          NOMCMP(1:3)='LAG'
          WRITE (NOMCMP(4:8),'(I5)')NUCMP
          WRITE (NOMCMP(4:8),'(I5)')NUCMP
          WRITE (KN1(1:7),'(I7)')IEQ
          WRITE (KN2(1:4),'(I4)')NULIA
          INFOBL='EQUATION:'//KN1//'   LIAISON:'//KN2
        ENDIF
      ENDIF

   70 CONTINUE
      CALL JEDEMA()
      END
