      SUBROUTINE FOCRR3 ( NOMFON, RESU, NOPARA, BASE, IER )
      IMPLICIT   NONE
      INCLUDE 'jeveux.h'
      INTEGER             IER
      CHARACTER*1         BASE
      CHARACTER*16        NOPARA
      CHARACTER*19        NOMFON, RESU
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     RECUPERATION D'UNE FONCTION DANS UNE STRUCTURE "RESULTAT"
C                                 PARAMETRE = F(VARIABLE D'ACCES)
C     ------------------------------------------------------------------
C VAR : NOMFON : NOM DE LA FONCTION
C IN  : RESU   : NOM DE LA STRUCTURE RESULTAT
C IN  : NOPARA : NOM DU PARAMETRE
C IN  : BASE   : BASE OU L'ON CREE LA FONCTION
C OUT : IER    : CODE RETOUR, = 0 : OK
C     ------------------------------------------------------------------
      INTEGER      NBORDR, IRET, KORDR, LPRO, LFON, LVAR,
     &             IORDR, LACCE, LXLGUT, NBACC, NBPAR, IAD1, IAD2
      CHARACTER*8   TYPE
      CHARACTER*16 NOMACC
      CHARACTER*19 KNUME
C     ------------------------------------------------------------------
C
      CALL JEMARQ()
      IER = 0
      KNUME = '&&FOCRR3.NUME_ORDR'
C
C     --- RECUPERATION DES NUME_ORDRE FOURNIS PAR L'UTILISATEUR ---
C
      CALL RSUTN1 ( RESU, NOPARA, ' ', 1, KNUME, NBORDR )
      CALL JEVEUO ( KNUME, 'L', KORDR )
C
C     --- RECUPERATION DE LA VARIABLE D'ACCES ---
C
      CALL RSNOPA ( RESU, 0, '&&FOCRR3.VAR.ACCES', NBACC, NBPAR )
      CALL JEEXIN ( '&&FOCRR3.VAR.ACCES', IRET )
      IF ( IRET .GT. 0 ) THEN
         CALL JEVEUO ( '&&FOCRR3.VAR.ACCES', 'L', LACCE )
         NOMACC = ZK16(LACCE)
      ELSE
         CALL U2MESS('F','UTILITAI2_4')
      ENDIF
      CALL JEDETR ( '&&FOCRR3.VAR.ACCES' )
C
C     --- CREATION DE LA FONCTION SORTIE ---
C
C     --- REMPLISSAGE DU .PROL ---
      CALL ASSERT(LXLGUT(NOMFON).LE.24)
      CALL WKVECT ( NOMFON//'.PROL', BASE//' V K24', 6, LPRO )
      ZK24(LPRO  ) = 'FONCTION'
      ZK24(LPRO+1) = 'NON NON '
      ZK24(LPRO+2) = NOMACC(1:8)
      ZK24(LPRO+3) = NOPARA(1:8)
      ZK24(LPRO+4) = 'EE      '
      ZK24(LPRO+5) = NOMFON
C
C     --- REMPLISSAGE DU .VALE ---
      CALL WKVECT ( NOMFON//'.VALE', BASE//' V R', 2*NBORDR, LVAR )
      LFON = LVAR + NBORDR
C
      DO 20 IORDR = 1 , NBORDR
C
         CALL RSADPA (RESU,'L',1,NOMACC,ZI(KORDR+IORDR-1),1,IAD1,TYPE)
         IF ( TYPE(1:1) .EQ. 'R' ) THEN
            ZR(LVAR+IORDR-1) = ZR(IAD1)
         ELSE
            CALL U2MESS('F','UTILITAI2_5')
         ENDIF
C
         CALL RSADPA (RESU,'L',1,NOPARA,ZI(KORDR+IORDR-1),1,IAD2,TYPE)
         IF ( TYPE(1:1) .EQ. 'R' ) THEN
            ZR(LFON+IORDR-1) = ZR(IAD2)
         ELSE
            CALL U2MESS('F','UTILITAI2_6')
         ENDIF
C
 20   CONTINUE
C
      CALL JEDETR( KNUME )
C
      CALL JEDEMA()
      END
