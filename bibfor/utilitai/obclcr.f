      SUBROUTINE OBCLCR(SUBCCN,TYPCOL,LARCOL,TITHAU,TITLI1,
     &                  TITLI2,TITLI3,TYPVAL,CNOVAL,SDCOLO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 18/09/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE      'jeveux.h'
      CHARACTER*6  SUBCCN
      CHARACTER*15 TYPCOL
      INTEGER      LARCOL,TITHAU
      CHARACTER*16 TITLI1,TITLI2,TITLI3
      CHARACTER*1  TYPVAL
      CHARACTER*4  CNOVAL
      CHARACTER*24 SDCOLO
C
C ----------------------------------------------------------------------
C
C ROUTINE UTILITAIRE (GESTION STRUCTS - TABLEAU_COLONNE)
C
C GENERATION D'UNE COLONNE
C
C ----------------------------------------------------------------------
C
C
C IN  SUBCCN : ROUTINE DE CREATION
C IN  TYPCOL : CODE POUR TYPE DE COLONNE
C IN  LARCOL : LARGEUR DE LA COLONNE
C IN  TITHAU : HAUTEUR DU TITRE
C IN  TITLI1 : LIGNE 1 DU TITRE DE LA COLONNE
C IN  TITLI2 : LIGNE 2 DU TITRE DE LA COLONNE
C IN  TITLI3 : LIGNE 3 DU TITRE DE LA COLONNE
C IN  TYPVAL : TYPE DE LA VALEUR DANS LA COLONNE (I/R/K)
C IN  CNOVAL : COMPORTEMENT EN CAS DE VALEUR NON AFFECTEE AU MOMENT DE
C              L'IMPRESSION DE LA COLONNE
C              'VIDE' - ON IMPRIMERA RIEN (BLANC)
C              'ERRE' - PROVOQUERA UNE ERREUR A U
C              'SANS' - ON IMPRIMERA 'SANS OBJET'
C OUT SDCOLO : SD COLONNE D'UN TABLEAU
C
C ----------------------------------------------------------------------
C
      LOGICAL LINTE,LREEL,LCHAI
      LOGICAL LNVVID,LNVERR,LNVSAN
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- GENERATION DU STRUCT AVEC NOM AUTOMATIQUE
C
      CALL OBLGEN(SUBCCN,TYPCOL,SDCOLO)
      CALL OBCREA('TABLEAU_COLONNE',SDCOLO)
C
C --- LARGEUR DE LA COLONNE
C
      CALL OBSETI(SDCOLO,'LARGEUR'      ,LARCOL)
C
C --- TITRE DE LA COLONNE
C
      CALL OBSETI(SDCOLO,'HAUTEUR_TITRE',TITHAU)
      CALL ASSERT((TITHAU.GT.0).AND.(TITHAU.LE.3))
      CALL OBSETK(SDCOLO,'TITRE_LIGN_1' ,TITLI1)
      IF (TITHAU.GE.2) CALL OBSETK(SDCOLO,'TITRE_LIGN_2' ,TITLI2)
      IF (TITHAU.EQ.3) CALL OBSETK(SDCOLO,'TITRE_LIGN_3' ,TITLI3)
C
C --- TYPE DE LA COLONNE
C
      CALL OBSETK(SDCOLO,'TYPE_COLONNE',TYPCOL)
C
C --- TYPE DE LA VALEUR DANS LA COLONNE
C
      LINTE  = .FALSE.
      LREEL  = .FALSE.
      LCHAI  = .FALSE.
      IF (TYPVAL.EQ.'I') THEN
        LINTE = .TRUE.
      ELSEIF (TYPVAL.EQ.'R') THEN
        LREEL = .TRUE.
      ELSEIF (TYPVAL.EQ.'K') THEN
        LCHAI = .TRUE.
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
      CALL OBSETB(SDCOLO,'ENTIER',LINTE)
      CALL OBSETB(SDCOLO,'REEL'  ,LREEL)
      CALL OBSETB(SDCOLO,'CHAINE',LCHAI)
      CALL OBSETB(SDCOLO,'VALE_AFFE',.FALSE.)
      LNVVID = .FALSE.
      LNVERR = .FALSE.
      LNVSAN = .FALSE.
C
C --- COMPORTEMENT SI VALEUR NON AFFECTE
C
      IF (CNOVAL.EQ.'VIDE') THEN
        LNVVID = .TRUE.
      ELSEIF (CNOVAL.EQ.'ERRE') THEN
        LNVERR = .TRUE.
      ELSEIF (CNOVAL.EQ.'SANS') THEN
        LNVSAN = .TRUE.
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
      CALL OBSETB(SDCOLO,'NON_AFFE_ERREUR' ,LNVERR)
      CALL OBSETB(SDCOLO,'NON_AFFE_VIDE'   ,LNVVID)
      CALL OBSETB(SDCOLO,'NON_AFFE_SANSOBJ',LNVSAN)
C
      CALL JEDEMA()
      END
