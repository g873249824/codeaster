      SUBROUTINE ANGROT(V1,V2,AXE,ANGLE)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF UTILITAI  DATE 29/09/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ======================================================================
C     CALCUL DE L'ANGLE ENTRE DEUX VECTEURS EN 3D, SUIVANT UN AXE (SENS)
C     IN : V1(3)
C     IN : V2(3)
C     IN : AXE(3) : VECTEUR COLINEAIRE A V1 X V2
C     OUT : ANGLE
C     ATTENTION L'ORDRE V1, V2 EST IMPORTANT POUR LE SIGNE DE ANGLE
C     L'ANGLE RETOURNE EST COMPRIS ENTRE -PI ET PI (ATAN2)

      REAL*8 V1(3),V2(3),ANGLE,COSPHI,SINPHI,V1V2(3),NV1,NV2,NORM(3),NV3
      REAL*8 VERIF(3),NVERIF,R8MIEM,PSCAL,AXE(3),R8PI,GDB,AXE2(3),R8PREM
      REAL*8 EPSI
      INTEGER I

      EPSI=1.D-10
      CALL ANGVEC(V1,V2,ANGLE)
      IF (ABS(ANGLE).LE.1.D-6) THEN
         GOTO 9999
      ENDIF
      IF (ABS(ANGLE-R8PI()).LE.1.D-6) THEN
         GOTO 9999
      ENDIF
      DO 10 I=1,3
        AXE2(I)=AXE(I)
 10   CONTINUE
      CALL NORMEV(AXE2,NV3)
      IF (NV3.LT.EPSI) THEN
         CALL U2MESS('F','UTILITAI_5')
      ENDIF
      CALL PROVEC ( V1 , V2 , V1V2)
      CALL PROVEC ( V1V2 , AXE2 , VERIF)
      CALL NORMEV(VERIF,NV3)
      IF (NV3.GT.EPSI) THEN
         CALL U2MESS('F','UTILITAI_6')
      ENDIF
      CALL NORMEV(V1V2,NV3)
      IF (NV3.LT.EPSI) THEN
         PSCAL=0.D0
         DO 30 I=1,3
            PSCAL=PSCAL+V1(I)*V2(I)
 30      CONTINUE
          IF (PSCAL.GT.0.D0) THEN
            ANGLE=0.D0
         ELSE
            ANGLE=R8PI()
         ENDIF
      ELSE
         PSCAL = 0.D0
         DO 20 I=1,3
            PSCAL = PSCAL + AXE2(I)*V1V2(I)
 20      CONTINUE
         IF (ABS(ABS(PSCAL)-1.D0).GT.EPSI) THEN
            CALL U2MESS('F','UTILITAI_7')
         ENDIF
         ANGLE= ANGLE*PSCAL
      ENDIF
9999  CONTINUE
      END
