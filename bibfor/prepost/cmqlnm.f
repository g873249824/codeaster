      SUBROUTINE CMQLNM(MAIN,NOMAQU,NBMA,NONOMI,NBNM)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 20/12/2010   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      INTEGER NBMA,NBNM
      CHARACTER*8 MAIN
      CHARACTER*24 NOMAQU,NONOMI
C ----------------------------------------------------------------------
C         TRANSFORMATION DES MAILLES QUADRATIQUES -> LINEAIRE
C-----------------------------------------------------------------------
C     -   ON RECUPERE LES NOEUDS MILIEUX
C     -   ON VERIFIE QUE LES NOEUDS MILIEUX COMMUNS A PLUSIEURS MAILLES
C         QUADRATIQUES APPARTIENNENT AUX MAILLES REFERENCEES.
C         SI DEUX MAILLES QUADRATIQUES SE PARTAGENT UN NOEUD MILIEU ET
C         QUE L'UTILISATEUR NE LINEARISE QU'UNE DES 2 MAILLES, ALORS
C         ON EMET UNE ALARME
C-----------------------------------------------------------------------
C IN        MAIN   K8  NOM DU MAILLAGE INITIAL
C IN        NOMAQU K24 NOM DE L'OBJET JEVEUX QUI CONTIENT LE NUMERO
C                      DES MAILLES QUADRATIQUES
C IN        NBMA   I   NOMBRE DE MAILLES QUADRATIQUES TRAITEES
C IN        NONOMI K24 NOM DE L'OBJET JEVEUX A ALLOUER CONTENANT LES
C                      NUMEROS DES NOEUDS A SUPPRIMER
C OUT       NBNM   I   NOMBRE DE NOEUDS MILIEUX A RECUPERER
C-----------------------------------------------------------------------

C  ======      ====      =================   ========================
C  MAILLE      TYPE      NB NOEUDS MILIEUX   POSITION DU PREMIER NOEUD
C  ======      ====      =================   MILIEU DANS LA MAILLE
C                                            ========================

C  SEG3         4             1                    3
C  TRIA6        9             3                    4
C  QUAD8       14             4                    5
C  QUAD9       16             5                    5
C  TETRA10     19             6                    5
C  PENTA15     21             9                    7
C  PENTA18     22            12                    7
C  PYRAM13     24             8                    6
C  HEXA20      26            12                    9
C  HEXA27      27            19                    9


C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXATR
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
      LOGICAL ISASUP

      INTEGER JTYP,IACNX1,ILCNX1,JDIME,II,NBMATO,JTABMA,NUMMA,IACNX2
      INTEGER ILCNX2,NBTYMA,NBNOTO,NBMACO,JJ,JMAQU,NBNOSU,NUMAMO,NBNOMI
      INTEGER PONOMI,JCO,NUNOMI,NBM1,KK,NUMA2,JNOMI,JTABNO
      PARAMETER(NBTYMA=27)
      INTEGER NBNMTM(NBTYMA),PPNM(NBTYMA)

C     NBNMTM: NOMBRE DE NOEUDS MILIEU PAR TYPE DE MAILLE
C     PPNM:   POSITION DU PREMIER NOEUD MILIEU PAR TYPE DE MAILLE

      DATA NBNMTM /3*0,1,4*0,3,4*0,4,0,5,2*0, 6,0,9,12,0,8,0,12,19/
      DATA PPNM   /3*0,3,4*0,4,4*0,5,0,5,2*0, 5,0,7,7, 0,6,0,9, 9/

      CALL JEMARQ()

      CALL ASSERT(NBMA.GT.0)

      CALL JEVEUO(NOMAQU,'L',JMAQU)
      CALL JEVEUO(MAIN//'.TYPMAIL','L',JTYP)
      CALL JEVEUO(MAIN//'.CONNEX','L',IACNX1)
      CALL JEVEUO(JEXATR(MAIN//'.CONNEX','LONCUM'),'L',ILCNX1)

      CALL JEVEUO(MAIN//'.DIME','L',JDIME)
      NBMATO = ZI(JDIME+2)
      NBNOTO = ZI(JDIME)

      CALL WKVECT('&&CMQLNM.TAB_MA','V V I',NBMATO,JTABMA)
      DO 10 II = 1,NBMATO
        ZI(JTABMA+II-1) = 0
   10 CONTINUE

      DO 20 II = 1,NBMA
        NUMMA = ZI(JMAQU+II-1)
        ZI(JTABMA+NUMMA-1) = 1
   20 CONTINUE

      CALL WKVECT('&&CMQLNM.TAB_NO','V V I',NBNOTO,JTABNO)
      DO 70 II = 1,NBNOTO
        ZI(JTABNO+II-1) = 0
   70 CONTINUE

C     CREATION DE LA CONNECTIVITE INVERSE
      CALL CNCINV(MAIN,0,0,'V','&&CMQLNM.CONINV')
      CALL JEVEUO('&&CMQLNM.CONINV','L',IACNX2)
      CALL JEVEUO(JEXATR('&&CMQLNM.CONINV','LONCUM'),'L',ILCNX2)

C     BOUCLE SUR LES MAILLES A MODIFIER
      NBNOSU = 0
      DO 30 II = 1,NBMA
        NUMAMO = ZI(JMAQU+II-1)
        NBNOMI = NBNMTM(ZI(JTYP+NUMAMO-1))
        PONOMI = PPNM(ZI(JTYP+NUMAMO-1))

        JCO=IACNX1+ ZI(ILCNX1-1+NUMAMO)-1
C       BOUCLE SUR LES NOEUDS MILIEUX DE CES MAILLES
        DO 40 JJ = 1,NBNOMI
          NUNOMI = ZI(JCO+PONOMI-1+JJ-1)

C         SI LE NOEUD A DEJA ETE TRAITE ON NE LE TRAITE PAS
          IF ( ZI(JTABNO+NUNOMI-1).NE.0 ) GOTO 40

          NBM1 = ZI(ILCNX2+NUNOMI)-ZI(ILCNX2-1+NUNOMI)

C         BOUCLE SUR LES MAILLES AUXQUELLES SONT LIEES CE NOEUD
          ISASUP = .TRUE.
          DO 50 KK=1,NBM1
            NUMA2 = ZI(IACNX2+ZI(ILCNX2-1+NUNOMI)-1+KK-1)
C           SI UNE DE CES MAILLES N'EST PAS A MODIFIER ALORS ON
C           NE DOIT PAS SUPPRIMER LE NOEUD
            IF ( ZI(JTABMA+NUMA2-1).EQ.0 ) ISASUP = .FALSE.
   50     CONTINUE
          IF ( ISASUP ) THEN
            ZI(JTABNO+NUNOMI-1) = 2
            NBNOSU = NBNOSU + 1
          ELSE
            ZI(JTABNO+NUNOMI-1) = 1
          ENDIF
   40   CONTINUE
   30 CONTINUE

      CALL JEDETR('&&CMQLNM.TAB_MA')

      CALL WKVECT(NONOMI,'V V I',NBNOSU,JNOMI)

      NBNM = NBNOSU

      NBNOSU = 0
      DO 60 II = 1,NBNOTO
        IF ( ZI(JTABNO+II-1).EQ.2 ) THEN
          NBNOSU = NBNOSU+1
          ZI(JNOMI+NBNOSU-1) = II
        ENDIF
   60 CONTINUE

      CALL ASSERT(NBNOSU.EQ.NBNM)

      CALL JEDETR('&&CMQLNM.TAB_NO')

 9999 CONTINUE

      CALL JEDEMA()

      END
