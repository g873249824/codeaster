      SUBROUTINE IRDESR(IFI,NBNO,PRNO,NUEQ,NEC,DG,NCMPMX,VALE,NOMGD,
     +              NOMCMP,TITR,NOMNOE,NOMSD,NOMSYM,IR,NUMNOE,LMASU)
      IMPLICIT REAL*8 (A-H,O-Z)
C
      INTEGER           IFI,NBNO,PRNO(*),NUEQ(*),NEC,DG(*),NCMPMX
      INTEGER                                       IR,NUMNOE(*)
      REAL*8                                          VALE(*)
      CHARACTER*(*)                                     NOMGD,NOMCMP(*)
      CHARACTER*(*)     TITR,NOMNOE(*),NOMSD,NOMSYM
      LOGICAL           LMASU
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 04/12/97   AUTEUR D6BHHAM A.M.DONORE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C--------------------------------------------------------------------
C        ECRITURE D'UN CHAM_NO SUR FICHIER UNIVERSEL, DATASET TYPE 55
C        A VALEURS REELLES
C      ENTREE:
C         IFI   : UNITE LOGIQUE DU FICHIER UNIVERSEL
C                NBNO  : NOMBRE DE NOEUDS DU LIGREL ( DU MAILLAGE)
C         PRNO  : OBJET .PRNO DU PROF_CHNO
C         NUEQ  : OBJET .NUEQ DU PROF_CHNO
C         NEC   : NOMBRE D'ENTIERS-CODES
C         DG    : ENTIERS CODES
C         NCMPMX: NOMBRE MAXI DE CMP DE LA GRANDEUR NOMGD
C         VALE  : VALEURS DU CHAM_NO
C         NOMGD : NOM DE LA GRANDEUR  DEPL_R, TEMP_R, SIEF_R, EPSI_R,...
C         NOMCMP: NOMS DES CMP
C         TITR  : 1 LIGNE DE TITRE
C         NOMNOE: NOMS DES NOEUDS
C         NUMNOE: NUMEROS DES NOEUDS
C         NOMSD : NOM DU RESULTAT
C         NOMSYM: NOM SYMBOLIQUE
C         IR    : NUMERO D'ORDRE DU CHAMP
C         LMASU : INDIQUE SI MAILLAGE SUPERTAB  .TRUE. MAILLAGE SUPERTAB
C
C
C     ----------- COMMUNS NORMALISES  JEVEUX  --------------------------
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL,EXISTE,EXISDG
      CHARACTER*8  ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32,JEXNUM,JEXNOM
      CHARACTER*80 ZK80
C     ------------------------------------------------------------------
      CHARACTER*4  FITYPE
      CHARACTER*8  NOCMP
      CHARACTER*24 NOMST
      CHARACTER*80 ENTETE(10),TITRE,TEXTE
      INTEGER      NBCHS
      INTEGER      IMPRE,IENTE,IUTIL
      LOGICAL      AFAIRE
C
C  --- INITIALISATIONS ----
C
      CALL JEMARQ()
C
      CALL WKVECT('&&IRDESR.NOMGDS','V V K8',NCMPMX,INOGDS)
      CALL WKVECT('&&IRDESR.NOMCHS','V V K8',NCMPMX,INOCHS)
      CALL WKVECT('&&IRDESR.NBCMPS','V V I',NCMPMX,IBCMPS)
      CALL WKVECT('&&IRDESR.IPCMPS','V V I',NCMPMX*NCMPMX,ICMPS)
      CALL WKVECT('&&IRDESR.LTABL','V V L',NCMPMX,ITABL)
C
      NOMST= '&&IRECRI.SOUS_TITRE.TITR'
      CALL JEVEUO(NOMST,'L',JTITR)
      TITRE = ZK80(JTITR)
      DO 1 I=1,NCMPMX
        ZL(ITABL-1+I)=.FALSE.
   1  CONTINUE
C
C --- ALLOCATION DES TABLEAUX DE TRAVAIL ---
C
      CALL JEEXIN('&&IRDESR.VAL',IRET)
      IF (IRET.NE.0) CALL JEDETR('&&IRDESR.VAL')
      CALL WKVECT('&&IRDESR.VAL','V V R',NCMPMX,IRVAL)
C
C ---- RECHERCHE DES GRANDEURS SUPERTAB -----
C
      CALL IRGAGS(NCMPMX,NOMCMP,NOMSYM,NBCHS,ZK8(INOCHS),
     +               ZI(IBCMPS),ZK8(INOGDS),ZI(ICMPS))
C
C ---- BOUCLE SUR LES DIVERSES GRANDEURS SUPERTAB ----
      DO 10 ICHS = 1,NBCHS
        IF ( ICHS .GT. 1 ) THEN
          AFAIRE=.FALSE.
          DO 2 ICP=1,ZI(IBCMPS-1+ICHS)
            AFAIRE = (AFAIRE.OR.ZL(ITABL-1+
     +                  ZI(ICMPS-1+(ICHS-1)*NCMPMX+ICP)))
   2      CONTINUE
          IF(.NOT. AFAIRE) GO TO 10
        ENDIF
        IENTE = 1
        IMPRE = 0
        CALL ECRTES(NOMSD,TITR,ZK8(INOGDS-1+ICHS),IR,'NOEU',
     +            ZI(IBCMPS-1+ICHS),2,ENTETE)
        IDEBU = 1
        ENTETE(4) = ' '
        TEXTE = ' '
        DO 5 ICP=1,ZI(IBCMPS-1+ICHS)
          NOCMP = NOMCMP(ZI(ICMPS-1+(ICHS-1)*NCMPMX+ICP))
          IUTIL = LXLGUT(NOCMP)
          IFIN  = IDEBU+IUTIL
          TEXTE(IDEBU:IFIN) = NOCMP(1:IUTIL)//' '
          IDEBU = IFIN+1
  5     CONTINUE
        IUTIL = LXLGUT(TEXTE)
        JMAX = LXLGUT(TITRE)
        JMAX  = MIN(JMAX,(80-IUTIL-2))
        ENTETE(4)= TITRE(1:JMAX)//' - '//TEXTE(1:IUTIL)
        DO 11 INNO = 1,NBNO
          INO = NUMNOE(INNO)
          DO 17 IEC=1,NEC
            DG(IEC)=PRNO((INO-1)*(NEC+2)+2+IEC)
  17      CONTINUE
C
C              NCMP : NOMBRE DE CMPS SUR LE NOEUD INO
C              IVAL : ADRESSE DU DEBUT DU NOEUD INO DANS .NUEQ
          IVAL = PRNO((INO-1)* (NEC+2)+1)
          NCMP = PRNO((INO-1)* (NEC+2)+2)
          IF (NCMP.EQ.0) GO TO 11
C
          DO 25 IC = 1,ZI(IBCMPS-1+ICHS)
           ZR(IRVAL-1+IC) = 0.0D0
   25     CONTINUE
          ICOMPT = 0
          DO 12 ICMP = 1,NCMPMX
              IF (EXISDG(DG,ICMP)) THEN
                  IF(ICHS.EQ.1) ZL(ITABL-1+ICMP)= .TRUE.
                  ICOMPT = ICOMPT + 1
                  DO 13 ICMS = 1,ZI(IBCMPS-1+ICHS)
                     ICMSUP = ZI(ICMPS-1+(ICHS-1)*NCMPMX+ICMS)
                     IF (ICMP.EQ.ICMSUP) THEN
                       IMPRE = 1
                       ZR(IRVAL-1+ICMS) = VALE(NUEQ(IVAL-1+ICOMPT))
                       GOTO 12
                     ENDIF
   13             CONTINUE
              ENDIF
   12     CONTINUE

          IF (IMPRE.EQ.1) THEN
            IF(IENTE.EQ.1) THEN
              WRITE(IFI,'(A80)') (ENTETE(I),I=1,10)
              IENTE=0
            ENDIF
            IF (LMASU) THEN
                CALL LXLIIS(NOMNOE(INNO)(3:8),INO,IER)
            ENDIF
            WRITE (IFI,'(I10,5X,A,A)') INO,'% NOEUD ',NOMNOE(INNO)
            WRITE (IFI,'(6(1PE13.5))') (ZR(IRVAL-1+I),
     +                      I=1,ZI(IBCMPS-1+ICHS))
            IMPRE=0
          ENDIF
   11 CONTINUE
      IF (IENTE.EQ.0) WRITE (IFI,'(A)') '    -1'
   10 CONTINUE
      CALL JEDETR('&&IRDESR.VAL')
      CALL JEDETR('&&IRDESR.NOMGDS')
      CALL JEDETR('&&IRDESR.NOMCHS')
      CALL JEDETR('&&IRDESR.NBCMPS')
      CALL JEDETR('&&IRDESR.IPCMPS')
      CALL JEDETR('&&IRDESR.LTABL')
      CALL JEDEMA()
      END
