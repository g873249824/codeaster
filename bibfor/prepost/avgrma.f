      SUBROUTINE AVGRMA(VWORK, TDISP, VNBPG, NBPGT, NBORDR, NMAINI,
     &                  NBMAP, NUMPAQ, TSPAQ, NOMCRI,NOMFOR,GRDVIE,
     &                  FORVIE,FORDEF, PROAXE,CESR)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 02/04/2013   AUTEUR TRAN V-X.TRAN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ANGLES J.ANGLES
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'
      INTEGER      TDISP, NBMAP, VNBPG(NBMAP), NBPGT, NBORDR, NMAINI
      INTEGER      NUMPAQ, TSPAQ
      REAL*8       VWORK(TDISP)
      CHARACTER*8  GRDVIE
      CHARACTER*16 NOMCRI, PROAXE, NOMFOR, FORVIE
      CHARACTER*19 CESR
      LOGICAL      FORDEF, POST
C ---------------------------------------------------------------------
C BUT: DETERMINER LE PLAN DANS LEQUEL LE DOMMAGE EST MAXIMAL
C ---------------------------------------------------------------------
C ARGUMENTS:
C VWORK     IN    R  : VECTEUR DE TRAVAIL CONTENANT
C                      L'HISTORIQUE DES TENSEURS DES CONTRAINTES
C                      ATTACHES A CHAQUE POINT DE GAUSS DES MAILLES
C                      DU <<PAQUET>> DE MAILLES.
C TDISP     IN    I  : DIMENSION DU VECTEUR VWORK
C VNBPG     IN    I  : VECTEUR CONTENANT LE NOMBRE DE
C                      POINT DE GAUSS DE CHAQUE MAILLE DU MAILLAGE.
C NBPGT     IN    I  : NOMBRE TOTAL DE POINTS DE GAUSS A TRAITER.
C NBORDR    IN    I  : NOMBRE DE NUMERO D'ORDRE STOCKE DANS LA
C                      STRUCTURE DE DONNEES RESULTAT.
C NMAINI    IN    I  : NUMERO DE LA 1ERE MAILLE DU <<PAQUET>> DE
C                      MAILLES COURANT.
C NBMAP     IN    I  : NOMBRE DE MAILLES DANS LE <<PAQUET>> DE
C                      MAILLES COURANT.
C NUMPAQ    IN    I  : NUMERO DU PAQUET DE MAILLES COURANT.
C TSPAQ     IN    I  : TAILLE DU SOUS-PAQUET DU <<PAQUET>> DE MAILLES
C                      COURANT.
C NOMCRI    IN    K16: NOM DU CRITERE AVEC PLANS CRITIQUES.
C PROAXE    IN    K16: TYPE DE PROJECTION (UN OU DEUX AXES).
C CESR      IN    K19: NOM DU CHAMP SIMPLE DESTINE A RECEVOIR LES
C                      RESULTATS.
C
C REMARQUE :
C  - LA TAILLE DU SOUS-PAQUET EST EGALE A LA TAILLE DU <<PAQUET>> DE
C    MAILLES DIVISEE PAR LE NOMBRE DE NUMERO D'ORDRE (NBORDR).
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
      INTEGER       JVECTN, JVECTU, JVECTV, NBVECM
      INTEGER       JCERD, JCERL, JCERV, IRET, ICESD, ICESL, ICESV, IBID
      INTEGER       TNECES, TDISP2, LOR8EM, LOISEM, JVECPG, N, K
      INTEGER       IDEB, DIM, J, NGAM, TAB2(18), IFIN
      INTEGER       L, NBPG, NBPGP, KWORK, SOMPGW, IMAP
      INTEGER       IPG
      INTEGER       ICMP, JAD
      INTEGER       VALI(2)
C
      REAL*8        FATSOC, DGAM, GAMMA, PI, R8PI, DPHI, TAB1(18), PHI0
      REAL*8        VALA, VALB, COEFPA, CUDOMX
      REAL*8        NXM(2), NYM(2), NZM(2)
      REAL*8        VRESU(24)
C
      CHARACTER*8  CHMAT1, NOMMAT
      CHARACTER*10 OPTIO
      CHARACTER*19 CHMAT, CESMAT
      INTEGER      IARG
C
C
C-----------------------------------------------------------------------
C234567                                                              012
C-----------------------------------------------------------------------
      DATA  TAB1/ 180.0D0, 60.0D0, 30.0D0, 20.0D0, 15.0D0, 12.857D0,
     &             11.25D0, 10.588D0, 10.0D0, 10.0D0, 10.0D0, 10.588D0,
     &             11.25D0, 12.857D0, 15.0D0, 20.0D0, 30.0D0, 60.0D0 /
C
      DATA  TAB2/ 1, 3, 6, 9, 12, 14, 16, 17, 18, 18, 18, 17, 16, 14,
     &           12, 9, 6, 3 /
C
      PI = R8PI()
C-----------------------------------------------------------------------

      CALL JEMARQ()

C CONSTRUCTION DU VECTEUR NORMAL SUR UNE DEMI SPHERE
C CONSTRUCTION DU VECTEUR U DANS LE PLAN TANGENT, SUR UNE DEMI SPHERE
C CONSTRUCTION DU VECTEUR V DANS LE PLAN TANGENT, SUR UNE DEMI SPHERE

      CALL WKVECT('&&AVGRMA.VECT_NORMA', 'V V R', 627, JVECTN)
      CALL WKVECT('&&AVGRMA.VECT_TANGU', 'V V R', 627, JVECTU)
      CALL WKVECT('&&AVGRMA.VECT_TANGV', 'V V R', 627, JVECTV)


C OBTENTION DES ADRESSES '.CESD', '.CESL' ET '.CESV' DU CHAMP SIMPLE
C DESTINE A RECEVOIR LES RESULTATS : DOMMAGE_MAX, COORDONNEES VECTEUR
C NORMAL CORRESPONDANT

      CALL JEVEUO(CESR//'.CESD','L',JCERD)
      CALL JEVEUO(CESR//'.CESL','E',JCERL)
      CALL JEVEUO(CESR//'.CESV','E',JCERV)

C RECUPERATION MAILLE PAR MAILLE DU MATERIAU DONNE PAR L'UTILISATEUR

      CALL GETVID(' ','CHAM_MATER',1,IARG,1,CHMAT1,IRET)
      CHMAT = CHMAT1//'.CHAMP_MAT'
      CESMAT = '&&AVGRMA.CESMAT'
      CALL CARCES(CHMAT,'ELEM',' ','V',CESMAT,'A',IRET)
      CALL JEVEUO(CESMAT//'.CESD','L',ICESD)
      CALL JEVEUO(CESMAT//'.CESL','L',ICESL)
      CALL JEVEUO(CESMAT//'.CESV','L',ICESV)

C DEFINITION DU VECTEUR CONTENANT LES VALEURS DU CISAILLEMENT POUR TOUS
C LES INSTANTS ET TOUS LES PLANS

      TNECES = 209*NBORDR*2
      CALL JEDISP(1, TDISP2)
      TDISP2 =  (TDISP2 * LOISEM()) / LOR8EM()
      IF (TDISP2 .LT. TNECES ) THEN
         VALI (1) = TDISP2
         VALI (2) = TNECES
         CALL U2MESG('F', 'PREPOST5_8',0,' ',2,VALI,0,0.D0)
      ELSE
         CALL WKVECT( '&&AVGRMA.VECTPG', 'V V R', TNECES, JVECPG )
      ENDIF

C COEFFICIENT PERMETTANT D'UTILISER LES MEMES ROUTINES POUR LES
C CONTRAINTES ET LES DEFORMATIONS

      IF (( NOMCRI(1:16) .EQ. 'FATESOCI_MODI_AV' ) .OR.
     &      FORDEF )THEN
         FATSOC = 1.0D4
      ELSE
         FATSOC = 1.0D0
      ENDIF

C CONSTRUCTION DES VECTEURS N, U ET V

      DGAM = 10.0D0

      N = 0
      K = 1
      IDEB = 1
      DIM = 627
      DO 300 J=1, 18
         GAMMA=(J-1)*DGAM*(PI/180.0D0)
         DPHI=TAB1(J)*(PI/180.0D0)
         NGAM=TAB2(J)
         IFIN = NGAM
         PHI0 = DPHI/2.0D0

         CALL VECNUV(IDEB, IFIN, GAMMA, PHI0, DPHI, N, K, DIM,
     &               ZR(JVECTN), ZR(JVECTU), ZR(JVECTV))

 300  CONTINUE

C CONSTRUCTION DU VECTEUR : CISAILLEMENT = F(NUMERO D'ORDRE) EN CHAQUE
C POINT DE GAUSS DU PAQUET DE MAILLES.
      L = 1
      NBPG = 0
      NBPGP = 0
      KWORK = 0
      SOMPGW = 0

      DO 400 IMAP=NMAINI, NMAINI+(NBMAP-1)
         IF ( IMAP .GT. NMAINI ) THEN
           KWORK = 1
           SOMPGW = SOMPGW + VNBPG(IMAP-1)
         ENDIF
         NBPG = VNBPG(IMAP)
C SI LA MAILLE COURANTE N'A PAS DE POINTS DE GAUSS, LE PROGRAMME
C PASSE DIRECTEMENT A LA MAILLE SUIVANTE.
         IF (NBPG .EQ. 0) THEN
           GOTO 400
         ENDIF

         NBPGP = NBPGP + NBPG
         IF ( (L*INT(NBPGT/10.0D0)) .LT. NBPGP ) THEN
           WRITE(6,*)NUMPAQ,'   ',(NBPGP-NBPG)
           L = L + 1
         ENDIF

C RECUPERATION DU NOM DU MATERIAU AFFECTE A LA MAILLE COURANTE
C ET DES PARAMETRES ASSOCIES AU CRITERE CHOISI POUR LA MAILLE COURANTE.

         OPTIO = 'DOMA_ELGA'
         CALL RNOMAT (ICESD, ICESL, ICESV, IMAP, NOMCRI, IBID, IBID,
     &                IBID, OPTIO, VALA, VALB, COEFPA, NOMMAT)



         NBVECM = 209

         POST = .FALSE.

         DO 420 IPG=1, NBPG


C REMPLACER PAR AVPLCR
            CALL AVPLCR (NBVECM, ZR(JVECTN), ZR(JVECTU), ZR(JVECTV),
     &           NBORDR,KWORK, SOMPGW, VWORK, TDISP, TSPAQ,IPG,
     &           NOMCRI,NOMFOR,GRDVIE, FORVIE, FORDEF, FATSOC,PROAXE,
     &           NOMMAT, VALA,COEFPA, POST, CUDOMX, NXM, NYM, NZM )

C RECUPERER LES RESULTATS
            DO 600 ICMP=1, 24
               VRESU(ICMP) = 0.0D0
 600        CONTINUE
 
            VRESU(2) = NXM(1)
            VRESU(3) = NYM(1)
            VRESU(4) = NZM(1)
            VRESU(11) = CUDOMX
            VRESU(13) = NXM(2)
            VRESU(14) = NYM(2)
            VRESU(15) = NZM(2)
            
C 12. AFFECTATION DES RESULTATS DANS UN CHAM_ELEM SIMPLE

            DO 610 ICMP=1, 24
               CALL CESEXI('C',JCERD,JCERL,IMAP,IPG,1,ICMP,JAD)

               CALL ASSERT (JAD .NE. 0)
               JAD = ABS(JAD)
               ZL(JCERL - 1 + JAD) = .TRUE.
               ZR(JCERV - 1 + JAD) = VRESU(ICMP)

 610        CONTINUE

 420     CONTINUE
 400  CONTINUE

C MENAGE

      CALL DETRSD('CHAM_ELEM_S',CESMAT)

      CALL JEDETR('&&AVGRMA.VECT_NORMA')
      CALL JEDETR('&&AVGRMA.VECT_TANGU')
      CALL JEDETR('&&AVGRMA.VECT_TANGV')
C
      CALL JEDEMA()
      END
