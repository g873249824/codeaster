      SUBROUTINE IRCAME ( IFI, NOCHMD,
     >                    NBCMP, NOMCMP,
     >                    NUMPT, INSTAN, UNIINS, NUMORD,
     >                    ADSK, ADSD, ADSC, ADSV, ADSL,
     >                    NBENEC, LIENEC,
     >                    SUPNOE, CODRET )
C_______________________________________________________________________
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 03/11/2004   AUTEUR MCOURTOI M.COURTOIS 
C RESPONSABLE GNICOLAS G.NICOLAS
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     ECRITURE D'UN CHAMP - FORMAT MED
C        -  -       - -            --
C-----------------------------------------------------------------------
C     ENTREES :
C       IFI    : UNITE LOGIQUE D'IMPRESSION DU CHAMP
C       NOCHMD : NOM MED DU CHAMP A ECRIRE
C       NCMPRF : NOMBRE DE COMPOSANTES DU CHAMP DE REFERENCE
C       NBCMP  : NOMBRE DE COMPOSANTES A ECRIRE. S'IL EST NUL, ON
C                PREND TOUT
C       NOMCMP : NOMS DES COMPOSANTES A ECRIRE
C       NUMPT  : NUMERO DE PAS DE TEMPS
C       INSTAN : VALEUR DE L'INSTANT A ARCHIVER
C       UNIINS : UNITE DE L'INSTANT A ARCHIVER
C       NUMORD : NUMERO D'ORDRE DU CHAMP
C       ADSK, D, ... : ADRESSES DES TABLEAUX DES CHAMPS SIMPLIFIES
C       NBVATO : NOMBRE DE VALEURS TOTALES
C       NBENEC : NOMBRE D'ENTITES A ECRIRE (O, SI TOUTES)
C       LIENEC : LISTE DES ENTITES A ECRIRE SI EXTRAIT
C       SUPNOE : VRAI OU FAUX SELON QUE L'ON A UN CHAMP AUX NOEUDS
C     SORTIES:
C       CODRET : CODE DE RETOUR (0 : PAS DE PB, NON NUL SI PB)
C_______________________________________________________________________
C
      IMPLICIT NONE
C
C 0.1. ==> ARGUMENTS
C
      CHARACTER*8 UNIINS
      CHARACTER*32 NOCHMD
      CHARACTER*(*) NOMCMP(*)
C
      INTEGER NBCMP, NUMPT, NUMORD, IFI
      INTEGER ADSK, ADSD, ADSC, ADSV, ADSL
      INTEGER NBVATO, NCMPRF
      INTEGER NBENEC
      INTEGER LIENEC(*)
      INTEGER TYPENT, TYGEOM
C
      REAL*8 INSTAN
C
      INTEGER CODRET
C
      LOGICAL SUPNOE
C
C 0.2. ==> COMMUNS
C
C --------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER      ZI
      REAL*8       ZR
      CHARACTER*8  ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX --------------------------
C
C 0.3. ==> VARIABLES LOCALES
C
      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'IRCAME' )
C
      INTEGER NTYMAX
      PARAMETER (NTYMAX=48)
      INTEGER EDLEAJ
      PARAMETER (EDLEAJ=2)
      INTEGER EDNOEU
      PARAMETER (EDNOEU=3)
      INTEGER EDMAIL
      PARAMETER (EDMAIL=0)
      INTEGER TYPNOE
      PARAMETER (TYPNOE=0)
      INTEGER EDNOPG
      PARAMETER (EDNOPG=1)
C
      CHARACTER*8 SAUX08, K8BID
      CHARACTER*8 NOMAAS
      CHARACTER*8 NOMTYP(NTYMAX)
      CHARACTER*24 NTLCMP, NTNCMP, NTUCMP, NTVALE, NTPROA, NMCMFI
      CHARACTER*32 NOMAMD, SAUX32
      CHARACTER*32 NOMPRF, NOPFTY(0:NTYMAX)
      CHARACTER*200 NOFIMD
C
      INTEGER NDIM, TYPGEO(NTYMAX)
      INTEGER NBTYP,NNOTYP(NTYMAX)
      INTEGER RENUMD(NTYMAX)
      INTEGER NMATYP(NTYMAX)
      INTEGER NVAL, NVALTY(NTYMAX), NBPGTY(NTYMAX), NBSPTY(NTYMAX)
      INTEGER NBREPG
      INTEGER IFM, NIVINF
      INTEGER LNOMAM
      INTEGER NCMPVE, NBENTY, NVALEC, NBPG, NBSP
      INTEGER TYMAST
      INTEGER ADVALE
C
      INTEGER IDFIMD
      INTEGER IAUX, JAUX, LETYPE
      INTEGER EXISTC, NBCMFI, NBVAL
C
      LOGICAL LGAUX
      LOGICAL EXISTM
C
      CALL JEMARQ ( )
C
C====
C 1. PREALABLES
C====
C
C 1.1. ==> RECUPERATION DU NIVEAU D'IMPRESSION
C
      CALL INFNIV ( IFM, NIVINF )
C
C 1.2. ==> NOMS DES TABLEAUX DE TRAVAIL
C               12   345678   9012345678901234
      NTLCMP = '&&'//NOMPRO//'.LISTE_N0MCMP   '
      NTNCMP = '&&'//NOMPRO//'.NOMCMP         '
      NTUCMP = '&&'//NOMPRO//'.UNITECMP       '
      NTVALE = '&&'//NOMPRO//'.VALEURS        '
      NTPROA = '&&'//NOMPRO//'.PROFIL_ASTER   '
      NMCMFI = '&&'//NOMPRO//'.NOMCMP_FICHIER '
C
C 1.3. ==> NOM DU FICHIER MED
C
      IAUX = IFI
      CALL CODENT ( IAUX, 'G', SAUX08 )
      NOFIMD = 'fort.'//SAUX08
      IF ( NIVINF.GT.1 ) THEN
        WRITE (IFM,*) NOMPRO, ' : NOM DU FICHIER MED : ', NOFIMD
      ENDIF
C
C 1.4. ==> LES NOMBRES CARACTERISTIQUES
C
      NBVATO = ZI(ADSD)
      NCMPRF = ZI(ADSD+1)
C
C 1.4. ==> LE MAILLAGE
C
C 1.4.1. ==> NOM ET DIMENSION DU MAILLAGE ASTER
C
      NOMAAS = ZK8(ADSK-1+1)
      CALL DISMOI ( 'F', 'DIM_GEOM', NOMAAS, 'MAILLAGE', NDIM,
     >              SAUX32, CODRET )
      IF ( CODRET.NE.0 ) THEN
        CALL UTMESS ( 'F', NOMPRO, 'MAILLAGE INTROUVABLE ?' )
      ENDIF
C
C 1.4.2. ==> CREATION DU NOM DU MAILLAGE POUR MED
C
      CALL MDNOMA ( NOMAMD, LNOMAM, NOMAAS, CODRET )
      IF ( CODRET.NE.0 ) THEN
        CALL CODENT ( CODRET,'G',SAUX08 )
        CALL UTMESS ( 'F', NOMPRO, 'MED:ERREUR MDNOMA NUMERO '//SAUX08 )
      ENDIF
C
C 1.4.3. ==> CE MAILLAGE EST-IL DEJA PRESENT DANS LE FICHIER ?
C
      IAUX = 0
      CALL MDEXMA ( NOFIMD, NOMAMD, IAUX, EXISTM, JAUX, CODRET )
C
C 1.4.4. ==> SI LE MAILLAGE EST ABSENT, ON L'ECRIT
C
      IF ( .NOT.EXISTM ) THEN
        SAUX08 = 'MED     '
        LGAUX = .FALSE.
        K8BID = '        '
        CALL IRMAIL ( SAUX08, IFI, IAUX, NOMAAS, LGAUX, K8BID, JAUX,
     >                NIVINF )
      ENDIF
C
C====
C 2. PREPARATION DU CHAMP A ECRIRE
C====
C
C 2.1. ==> NUMEROS, NOMS ET UNITES DES COMPOSANTES A ECRIRE
C
      CALL UTLICM ( NBCMP, NOMCMP,
     >              ZK8(ADSK+1), NCMPRF, ZK8(ADSC),
     >              NCMPVE, NTLCMP, NTNCMP, NTUCMP )
C
C 2.2. ==> . RECUPERATION DES NB/NOMS/NBNO/NBITEM DES TYPES DE MAILLES
C            DANS CATALOGUE
C          . RECUPERATION DES TYPES GEOMETRIE CORRESPONDANT POUR MED
C          . VERIF COHERENCE AVEC LE CATALOGUE
C
      CALL LRMTYP ( NBTYP, NOMTYP,
     >              NNOTYP, TYPGEO, RENUMD )
C
C 2.3. ==> PROFILS ET NOMBRE D'ENTITES A ECRIRE
C    (LE FICHIER EXISTE DEJA CAR SOIT ON A TROUVE UN MAILLAGE DEDANS,
C     SOIT ON EST PASSE PAR IRMAIL/IRMHDF DONC MODE MED_LECTURE_AJOUT
C     DANS IRCMPR/IRCMPF)
C
      CALL IRCMPR ( NOFIMD,
     >              NCMPRF, NCMPVE, NTLCMP,
     >              NBVATO, NBENEC, LIENEC, ADSD, ADSL,
     >              SUPNOE, NOMAAS//'.TYPMAIL ',
     >              NMATYP, NOPFTY, NTPROA,
     >              NVAL, NVALTY, NBPGTY, NBSPTY )
C
C====
C 3. REPERAGE DU CHAMP
C    EXISTE-T-IL DEJA ?
C    ON DOIT PARCOURIR TOUS LES SUPPORTS POSSIBLES POUR CE CHAMP
C====
C
      EXISTC = 0
C
      DO 31 , LETYPE = 0 , NBTYP
C
        IF ( CODRET.EQ.0 ) THEN
C
        IF ( LETYPE.EQ.0 ) THEN
          IAUX = LETYPE
          NVALEC = NVAL
        ELSE
          IAUX = RENUMD(LETYPE)
          NVALEC = NVALTY(IAUX)
        ENDIF
C
        IF ( NVALEC.NE.0 ) THEN
C
          IF ( IAUX.EQ.0 ) THEN
            TYPENT = EDNOEU
            TYGEOM = TYPNOE
          ELSE
            TYPENT = EDMAIL
            TYGEOM = TYPGEO(IAUX)
          ENDIF
C
          CALL JEDETC('V',NMCMFI,1)

          CALL MDEXCH ( NOFIMD,
     >                  NOCHMD, NUMPT, NUMORD, NCMPVE, NTNCMP,
     >                  NVALEC, TYPENT, TYGEOM,
     >                  JAUX, NBCMFI, NMCMFI, NBVAL, CODRET )
C
          EXISTC = MAX ( EXISTC, JAUX )
C
        ENDIF
C
        ENDIF
C
   31 CONTINUE
C
      IF ( EXISTC.LE.2 ) THEN
C
C====
C 4. OUVERTURE FICHIER MED EN MODE 'LECTURE_AJOUT'
C    CELA SIGNIFIE QUE LE FICHIER EST ENRICHI MAIS ON NE PEUT PAS
C    ECRASER UNE DONNEE DEJA PRESENTE.
C    (LE FICHIER EXISTE DEJA CAR SOIT ON A TROUVE UN MAILLAGE DEDANS,
C     SOIT ON EST PASSE PAR IRMAIL/IRMHDF)
C====
C
      CALL EFOUVR (IDFIMD, NOFIMD, EDLEAJ, CODRET)
      IF ( CODRET.NE.0 ) THEN
        CALL UTDEBM ( 'A', NOMPRO, 'FICHIER ' )
        CALL UTIMPK ( 'S', 'MED : ', 1, NOFIMD )
        CALL UTIMPK ( 'L', 'MAILLAGE : ', 1, NOMAMD )
        CALL UTIMPI ( 'L', 'ERREUR EFOUVR NUMERO ', 1, CODRET )
        CALL UTFINM ()
        CALL UTMESS ( 'F', NOMPRO, 'PROBLEME A L OUVERTURE DU FICHIER' )
      ENDIF
C
C====
C 6. CREATION DU CHAMP
C====
C
      CALL IRCMCC ( IDFIMD,
     >              NOCHMD, EXISTC,
     >              NCMPVE, NTNCMP, NTUCMP,
     >              CODRET )
C
C====
C 7. ECRITURE POUR CHAQUE TYPE DE SUPPORT
C    ON PARCOURT TOUS LES TYPES POSSIBLES POUR MED ET ON DECLENCHE LES
C    ECRITURES SI LE CHAMP A DES VALEURS SUR DES MAILLES DE CE TYPE
C    LA RENUMEROTATION PERMET DE TRAITER LES MAILLES DANS L'ORDRE
C    CROISSANT DE LEUR TYPE MED. CE N'EST PAS OBLIGATOIRE, MAIS C'EST
C    UNE HABITUDE. DONC ON LA GARDE COMME CE N'EST PAS PLUS CHER.
C====
C
      DO 71 , LETYPE = 0 , NBTYP
C
        IF ( CODRET.EQ.0 ) THEN
C
C 7.1. ==> CARACTERISTIQUES DU CHAMP
C
        IF ( LETYPE.EQ.0 ) THEN
          IAUX = LETYPE
          NVALEC = NVAL
        ELSE
          IAUX = RENUMD(LETYPE)
          NVALEC = NVALTY(IAUX)
        ENDIF
C
        IF ( NVALEC.NE.0 ) THEN
C
          TYMAST = IAUX
          IF ( IAUX.EQ.0 ) THEN
            NBENTY = NBVATO
            NBPG = 1
            NBSP = 1
            TYPENT = EDNOEU
            TYGEOM = TYPNOE
            NBREPG = EDNOPG
          ELSE
            NBENTY = NMATYP(IAUX)
            NBPG = NBPGTY(IAUX)
            NBSP = NBSPTY(IAUX)
            TYPENT = EDMAIL
            TYGEOM = TYPGEO(IAUX)
            NBREPG = NBPG*NBSP
          ENDIF
          NOMPRF = NOPFTY(IAUX)
C
C 7.2. ==> CREATION DES TABLEAUX DE VALEURS A ECRIRE
C
          IAUX = NCMPVE*NBSP*NBPG*NVALEC
          CALL WKVECT ( NTVALE, 'V V R', IAUX, ADVALE )
C
          CALL IRCMVA ( NTLCMP, NCMPVE, NCMPRF,
     >                  NVALEC, NBPG, NBSP,
     >                  ADSV, ADSD, ADSL,
     >                  NOMAAS//'.TYPMAIL ', TYMAST,
     >                  ZR(ADVALE), NTPROA )
C
C 7.3. ==> ECRITURE VRAIE
C
          CALL IRCMEC ( IDFIMD, NOMAMD,
     >                  NOCHMD, NOMPRF,
     >                  NUMPT, INSTAN, UNIINS, NUMORD,
     >                  NTVALE,
     >                  NCMPVE, NBENTY, NBREPG, NVALEC,
     >                  TYPENT, TYGEOM,
     >                  CODRET )
C
          CALL JEDETC('V',NTVALE,1)
C
        ENDIF
C
        ENDIF
C
   71 CONTINUE
C
C====
C 8. FERMETURE DU FICHIER MED  
C====
C
      CALL EFFERM ( IDFIMD, CODRET )
      IF ( CODRET.NE.0 ) THEN
        CALL UTDEBM ( 'A', NOMPRO, 'FICHIER ' )
        CALL UTIMPK ( 'S', 'MED : ', 1, NOFIMD )
        CALL UTIMPK ( 'L', 'CHAMP : ', 1, NOCHMD )
        CALL UTIMPI ( 'L', 'ERREUR EFFERM NUMERO ', 1, CODRET )
        CALL UTFINM ()
        CALL UTMESS ( 'F', NOMPRO, 'PROBLEME A LA FERMETURE DU FICHIER')
      ENDIF
C
C====
C 9. PROBLEME
C====
C
      ELSE
C
        CALL UTDEBM ( 'A', NOMPRO, 'FICHIER ' )
        CALL UTIMPK ( 'S', 'MED : ', 1, NOFIMD )
        CALL UTIMPK ( 'L', 'CHAMP : ', 1, NOCHMD )
        CALL UTIMPI ( 'L', 'RETOUR DE MDEXCH : EXISTC = ', 1, EXISTC )
        CALL UTFINM ()
        CALL UTMESS ('F',NOMPRO,'LE CHAMP EST ECRIT DANS LE FICHIER !')
C
      ENDIF
C
C====
C 10. LA FIN
C====
C
      WRITE (IFM,*) ' '
C
      CALL JEDETC('V','&&'//NOMPRO,1)
C
      CALL JEDEMA ( )
C
      END
