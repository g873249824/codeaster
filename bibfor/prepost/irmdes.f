      SUBROUTINE IRMDES ( IDFIMD, TITRE, NBTITR, INFMED )
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 03/06/2005   AUTEUR MCOURTOI M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE GNICOLAS G.NICOLAS
C-----------------------------------------------------------------------
C     ECRITURE FORMAT MED - LA DESCRIPTION
C        -  -         -        ---
C-----------------------------------------------------------------------
C     ENTREE:
C       IDFIMD : IDENTIFIANT DU FICHIER MED
C       TITRE  : TITRE
C       INFMED : NIVEAU DES INFORMATIONS A IMPRIMER
C-----------------------------------------------------------------------
C
      IMPLICIT NONE
C
C 0.1. ==> ARGUMENTS
C
      INTEGER IDFIMD 
      INTEGER INFMED,NBTITR
C
      CHARACTER*(*) TITRE(*)
C
C 0.2. ==> COMMUNS
C
C 0.3. ==> VARIABLES LOCALES
C
      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'IRMDES' )
C
      INTEGER CODRET
      INTEGER IAUX, JAUX
      INTEGER NUVERS, NUSOUV, NIVOSV
C
      CHARACTER*8 SAUX08
      CHARACTER*8 CVERS
      CHARACTER*16 DATEVE, MACH, OS, PROC
      CHARACTER*24 LADATE
      CHARACTER*200 DESCRI
C
      LOGICAL BDVP, LEXP
C
      INTEGER LXLGUT, LTIT, IDEB, IT
C
C====
C 1. PREALABLES
C====
C
      CALL JEMARQ()
C
C====
C 2. REPERAGE DES CONDITIONS DU CALCUL
C====
C
C 2.1. ==> LA DATE
C
      CALL ENLIRD (LADATE)
C
C 2.2. ==> REPERAGE DE LA VERSION UTILISEE
C 2.2.1. ==> CARACTERISTIQUES PRINCIPALES DE LA VERSION
C          NUVERS : VERSION ASTER
C          NUSOUV : SOUS-VERSION D'ASTER
C          NIVOSV : NIVEAU DE SOUS-VERSION D'ASTER
C          DATEVE : DATE DE LA MISE A JOUR DE CETTE VERSION
C          LEXP   : BOOLEEN POUR INDIQUER QUE C'EST UNE VERSION
C                   D'EXPLOITATION OU UNE VERSION NORMALE
C
      CALL VERSIO ( NUVERS, NUSOUV, NIVOSV, DATEVE, LEXP )
C
C
C 2.2.3. ==> EST-CE LA VERSION DE DEVELOPPEMENT ?
C          BDVP  : BOOLEEN POUR INDIQUER QUE C'EST UNE VERSION
C                   DE DEVELOPPEMENT OU UNE VERSION NORMALE
C
      IF ( NIVOSV.EQ.0 ) THEN
        CVERS = '  .     '
C                12345678
        BDVP = .FALSE.
      ELSE
        CVERS = '  .  .  '
        BDVP = .TRUE.
        CALL CODENT ( NIVOSV, 'D0', CVERS(7:8) )
      ENDIF
      CALL CODENT ( NUVERS, 'D ', CVERS(1:2) )
      CALL CODENT ( NUSOUV, 'D0', CVERS(4:5) )
C
C 2.3. ==> REPERAGE DE LA MACHINE
C
      CALL NODNAM ( 1, MACH, OS, PROC )
C
C====
C 3. LA DESCRIPTION
C====
C
C 3.1. ==> CREATION
C
      DESCRI  = ' '
      DESCRI (1:13) = 'CODE_ASTER - '
C                      1234567890123
      DESCRI (14:21) = CVERS
      DESCRI (22:24) = ' - '
C                       234
      IF ( BDVP ) THEN
        DESCRI (25:60) = 'VERSION DE DEVELOPPEMENT          - '
      ELSE IF ( LEXP ) THEN
        DESCRI (25:60) = 'VERSION D''EXPLOITATION            - '
      ELSE
        DESCRI (25:60) = 'VERSION DE DEVELOPPEMENT FIGEE    - '
      ENDIF
C
      DESCRI (61:79) = MACH//' - '
      DESCRI (80:98) = OS//' - '
C
      DESCRI (99:116) = LADATE(1:15)//' - '
C
      LTIT = 0
      IDEB = 117
      DO 30 IT = 1 , NBTITR
         IAUX = LXLGUT(TITRE(IT))
         LTIT = LTIT + IAUX + 1
         IF ( LTIT.GT.84 ) GOTO 32
         DESCRI(IDEB:IDEB+IAUX) = TITRE(IT)(1:IAUX)//'-'
         IDEB = IDEB + IAUX + 1
         IF ( IDEB.GT.200 ) GOTO 32
   30 CONTINUE
   32 CONTINUE
C
C 3.2. ==> ECRITURE
C
      IF ( INFMED.GT.1 ) THEN
        CALL UTMESS ('I',NOMPRO,'DESCRIPTION DU FICHIER MED : '//DESCRI)
      ENDIF
C
      CALL EFFIDE ( IDFIMD, DESCRI, CODRET )
      IF ( CODRET.NE.0 ) THEN
        CALL CODENT ( CODRET,'G',SAUX08 )
        CALL UTMESS ('F',NOMPRO,'MED: ERREUR EFFIDE NUMERO '//SAUX08)
      ENDIF
C
C====
C 4. LA FIN
C====
C
      CALL JEDEMA()
C
      END
