      SUBROUTINE XPOCO2(MALINI,DIRNO,NBNO,DIRMA,NBMA,
     &                  CNS1,CNS2,CES1,CES2,CESVI1,CESVI2,RESUCO)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 06/07/2010   AUTEUR CARON A.CARON 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT

      IMPLICIT NONE

      CHARACTER*8   MALINI,RESUCO
      CHARACTER*19  CNS1,CNS2,CES1,CES2,CESVI1,CESVI2
      INTEGER       NBNO,DIRNO(NBNO),NBMA,DIRMA(NBMA)
C
C   COPIE DES DEPLACMENTS DES NOEUDS DU MAILLAGE MA1
C   CONTENUS DANS LES TABLEAUX D'INDIRECTION DIRMA ET DIRNO
C
C   IN
C       MALINI : NOM DU MAILLAGE SAIN
C       DIRNO : TABLEAU DE CORRESPONDANCE DES NUMEROS DE NOEUDS
C       NBNO  : LONGUEUR DE DIRNO
C       CNS1   : CHAMP_NO_S DU DEPLACEMENT EN ENTREE
C       CES1   : CHAMP_ELEM_S DE CONTRAINTES EN ENTREE
C       RESUCO : NOM DU CONCEPT RESULTAT D'ORIGINE
C   OUT
C       CNS2   : CHAMP_NO_S DU DEPLACEMENT EN SORTIE
C       CES2   : CHAMP_ELEM_S DE CONTRAINTES EN SORTIE


C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C---------------- FIN COMMUNS NORMALISES  JEVEUX  ----------------------

      INTEGER      IER,I,J,NDIM,NBCMP,JCNSD1,JCNSC1,JCNSV1,JCNSV2,JCNSL2
      INTEGER      JCESV1,JCESD1,JCESL1,JCESV2,JCESD2,JCESL2,IAD1,IAD2
      INTEGER      JCVIV1,JCVID1,JCVIL1,JCVIV2,JCVID2,JCVIL2
      INTEGER      IMA,NPG1,NCMP1,NPG2,NCMP2,IPG,ICMP,IMA2,NPGV1,NPGV2
      INTEGER      NCMV1,NCMV2
      CHARACTER*8  K8B
      CHARACTER*16  TYSD
      INTEGER      IVIEX,IRET
     
      
      CALL JEMARQ()

      CALL DISMOI('F','DIM_GEOM',MALINI,'MAILLAGE',NDIM,K8B,IER)

C     ------------------------------------------------------------------
C                         DEPLACEMENT
C     ------------------------------------------------------------------
      CALL JEVEUO(CNS1//'.CNSV','L',JCNSV1)
      CALL JEVEUO(CNS1//'.CNSD','L',JCNSD1)
      CALL JEVEUO(CNS1//'.CNSC','L',JCNSC1)
      CALL JEVEUO(CNS2//'.CNSV','E',JCNSV2)
      CALL JEVEUO(CNS2//'.CNSL','E',JCNSL2)

      NBCMP = ZI(JCNSD1-1+2)

C     VERIF QUE LES 2 PREMIERES COMPOSANTES DU CHAMP DEP1 SONT DX DY
      CALL ASSERT(ZK8(JCNSC1-1+1).EQ.'DX'.AND.ZK8(JCNSC1-1+2).EQ.'DY')

      DO 100 I=1,NBNO
        IF (DIRNO(I).NE.0) THEN
          DO 110 J=1,NDIM
            ZR(JCNSV2-1+2*NDIM*(DIRNO(I)-1)+J)=
     &               ZR(JCNSV1-1+NBCMP*(I-1)+J)
            ZL(JCNSL2-1+2*NDIM*(DIRNO(I)-1)+J)=.TRUE.
 110      CONTINUE
        ENDIF
 100  CONTINUE
C
      CALL GETTCO(RESUCO,TYSD)

      IF (TYSD(1:9).NE.'MODE_MECA') THEN
C     ------------------------------------------------------------------
C                          CONTRAINTES
C     ------------------------------------------------------------------
        CALL JEVEUO(CES1//'.CESV','L',JCESV1)
        CALL JEVEUO(CES1//'.CESD','L',JCESD1)
        CALL JEVEUO(CES1//'.CESL','L',JCESL1)
        CALL JEVEUO(CES2//'.CESV','E',JCESV2)
        CALL JEVEUO(CES2//'.CESD','L',JCESD2)
        CALL JEVEUO(CES2//'.CESL','E',JCESL2)

        CALL JEEXIN(CESVI1//'.CESV',IRET)
        IF(IRET .NE. 0) THEN      
          CALL JEVEUO(CESVI1//'.CESV','L',JCVIV1)
          CALL JEVEUO(CESVI1//'.CESD','L',JCVID1)
          CALL JEVEUO(CESVI1//'.CESL','L',JCVIL1)
        ENDIF
        IVIEX = IRET

        CALL JEEXIN(CESVI2//'.CESV',IRET)
        IF(IRET .NE. 0) THEN      
          CALL JEVEUO(CESVI2//'.CESV','E',JCVIV2)
          CALL JEVEUO(CESVI2//'.CESD','L',JCVID2)
          CALL JEVEUO(CESVI2//'.CESL','E',JCVIL2)
        ENDIF
        IVIEX = IVIEX*IRET


        DO 10 IMA = 1,NBMA
          IMA2 = DIRMA(IMA)

          IF (IMA2.EQ.0) GOTO 10
          NPG1  = ZI(JCESD1-1+5+4* (IMA-1)+1)
          NCMP1 = ZI(JCESD1-1+5+4* (IMA-1)+3)
        
          NPG2  = ZI(JCESD2-1+5+4* (IMA2-1)+1)
          NCMP2 = ZI(JCESD2-1+5+4* (IMA2-1)+3)
          CALL ASSERT(NPG1.EQ.NPG2)
          CALL ASSERT(NCMP1.EQ.NCMP2)
        
          IF(IVIEX .NE. 0) THEN
            NPGV1  = ZI(JCVID1-1+5+4* (IMA-1)+1)
            NCMV1 = ZI(JCVID1-1+5+4* (IMA-1)+3)
            NPGV2  = ZI(JCVID2-1+5+4* (IMA2-1)+1)
            NCMV2 = ZI(JCVID2-1+5+4* (IMA2-1)+3)
            CALL ASSERT(NPG2.EQ.NPGV2)
            CALL ASSERT(NPGV1.EQ.NPG2)
            CALL ASSERT(NCMV1.LE.NCMV2)
          ENDIF
        
          DO 20 IPG = 1,NPG1
            DO 30 ICMP = 1,NCMP1
              CALL CESEXI('C',JCESD1,JCESL1,IMA,IPG,1,ICMP,IAD1)
              CALL ASSERT(IAD1.GT.0) 
              CALL CESEXI('C',JCESD2,JCESL2,DIRMA(IMA),IPG,1,ICMP,IAD2)
              CALL ASSERT(IAD2.GT.0) 
              ZL(JCESL2-1+IAD2) = .TRUE.
              ZR(JCESV2-1+IAD2) = ZR(JCESV1-1+IAD1)
 30         CONTINUE
            IF(IVIEX .NE. 0) THEN
              DO 40 ICMP = 1,NCMV1
                CALL CESEXI('C',JCVID1,JCVIL1,IMA,IPG,1,ICMP,IAD1)
                CALL ASSERT(IAD1.GT.0) 
                CALL CESEXI('C',JCVID2,JCVIL2,DIRMA(IMA),IPG,1,
     &                      ICMP,IAD2)
                CALL ASSERT(IAD2.LT.0) 
                IAD2 = -IAD2
                ZL(JCVIL2-1+IAD2) = .TRUE.
                ZR(JCVIV2-1+IAD2) = ZR(JCVIV1-1+IAD1)
 40           CONTINUE
            ENDIF
 20       CONTINUE
 10     CONTINUE
      ENDIF
      CALL JEDEMA()
      END
