      SUBROUTINE ASCCOH ( ALPHA, RM, RC, NBTRAN, EP1, EP2, EPI, TETA1,
     +                    TETA2, LTRAN, LDEFAU, SUREP, AZIM, BETA, NC,
     +                    NT, NS, DSF, SF, FISS )
      IMPLICIT   NONE 
      REAL*8     ALPHA, RM, RC, EP1, EP2, EPI, TETA1, TETA2, LTRAN,
     +           LDEFAU, SUREP, AZIM, BETA, SF
      INTEGER    NBTRAN, NC, NT, NS
      LOGICAL    FISS, DSF
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 02/10/2002   AUTEUR F1BHHAJ J.ANGLES 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C     MACR_ASCOUF_MAIL
C
C     VERIFICATIONS DE COHERENCES 
C
C-----------------------------------------------------------------------
C
      REAL*8   PI, R8PI, LCOUDE, LTRANF, DEXT  
C     ------------------------------------------------------------------
C
      PI = R8PI()
C   
C     DONNEES GLOBALES
C   
      IF (ALPHA.LT.20.D0.OR.ALPHA.GT.90.D0) THEN
       CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
       CALL UTIMPR('L','ANGLE DU COUDE :',1,ALPHA)
       CALL UTFINM()
       GOTO 9999
      END IF
      IF (SUREP.LT.0.D0.OR.SUREP.GT.(RM-EP1/2.D0)) THEN
       CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
       CALL UTIMPR('L','SUREPAISSEUR :',1,SUREP)
       CALL UTIMPR('L','VALEUR LIMITE AUTORISEE (RM-EP1/2) :',
     +              1,RM-EP1/2.D0)
       CALL UTFINM()
       GOTO 9999
      END IF
      IF (RC.LE.(RM+EP1/2.D0)) THEN
       CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
       CALL UTIMPR('L','LE RAYON DE CINTRAGE :',1,RC)
       CALL UTIMPR('L','DOIT ETRE SUPERIEUR A (RM+EP1/2) :',
     +              1,RM+EP1/2.D0)
       CALL UTFINM()
       GOTO 9999
      END IF
C
C   COUDE FISSURE
C      
      IF (FISS) THEN
C      
      IF ((RM/EP1).LT.5.D0.OR.(RM/EP1).GT.12.D0) THEN
       CALL UTDEBM('F','ASCCOH',
     +             'VALEUR HORS DOMAINE DE VALIDITE (5,12)')
       CALL UTIMPR('L','RAPPORT RM/EP1 :',1,RM/EP1)
       CALL UTFINM()
       GOTO 9999
      END IF      
      IF (DSF) THEN
       IF ((SF.LE.0.D0).OR.(SF.GE.(ALPHA*RC*PI/180.D0))) THEN  
         CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
         CALL UTIMPR('L','ABSCISSE CURVILIGNE CENTRE FISSURE :',1,SF)
         CALL UTIMPR('L','VALEUR LIMITE AUTORISEE :',1,
     +               ALPHA*RC*PI/180.D0)
         CALL UTFINM()        
         GOTO 9999
       END IF
      END IF
      IF ((AZIM.LT.0.D0).OR.(AZIM.GT.180.D0)) THEN  
       CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
       CALL UTIMPR('L','AZIMUT CENTRE FISSURE :',1,AZIM)
       CALL UTIMPR('L','VALEUR LIMITE AUTORISEE :',1,180.D0)
       CALL UTFINM()
       GOTO 9999
      END IF
      IF (NC.LE.1) THEN  
       CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
       CALL UTIMPI('L','NOMBRE DE COURONNES :',1,NC)
       CALL UTFINM()
       GOTO 9999
      END IF   
      IF (MOD(NT,2).NE.0) THEN  
       CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
       CALL UTIMPI('L','NOMBRE DE TRANCHES :',1,NT)
       CALL UTFINM()
       GOTO 9999
      END IF
      IF (NS.LE.1) THEN  
       CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
       CALL UTIMPI('L','NOMBRE DE SECTEURS :',1,NS)
       CALL UTFINM()
       GOTO 9999
      END IF    
      IF ((.NOT.DSF).AND.((BETA.LT.0.D0).OR.
     +     (BETA.GT.ALPHA))) THEN  
       CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
       CALL UTIMPR('L','POSITION ANGULAIRE  CENTRE FISSURE :',1,BETA)
       CALL UTIMPR('L','POSI_ANGUL DOIT ETRE >= 0 ET <= ',1,ALPHA)
       CALL UTFINM()
       GOTO 9999
      END IF
C        
      END IF
C
C   TRANSITION D'EPAISSEUR
C
      IF (NBTRAN.NE.0) THEN
        LCOUDE = ALPHA * RC * PI / 180.D0
        DEXT = 2.D0*RM + EP1
C        
        IF ((LTRAN.LT.LDEFAU).OR.(LTRAN.GT.LCOUDE)) THEN
          CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
          CALL UTIMPR('L','DEBUT TRANSITION D''EPAISSEUR :',1,LTRAN)
          CALL UTIMPR('L','VALEUR MINIMALE AUTORISEE :',1,LDEFAU)
          CALL UTIMPR('L','VALEUR MAXIMALE AUTORISEE :',1,LCOUDE)
          CALL UTFINM()
        ENDIF
C        
        IF ((TETA1.LT.0.D0).OR.(TETA1.GT.30.D0)) THEN
          CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
          CALL UTIMPR('L','ANGLE DE TRANSITION TETA1 :',1,TETA1)
          CALL UTIMPR('L','VALEUR MINIMALE AUTORISEE :',1,0.D0)
          CALL UTIMPR('L','VALEUR MAXIMALE AUTORISEE :',1,30.D0)
          CALL UTFINM()
        ENDIF
C
C   TRANSITION D'EPAISSEUR A UNE PENTE
C
        IF (NBTRAN.EQ.1) THEN
C        
          IF ((EP1.LT.12.D0).OR.(EP1.GT.80.D0)) THEN
            CALL UTDEBM ('F','ASCCOH','VALEUR HORS DOMAINE DE VAIDITE')
            CALL UTIMPR('L','EPAISSEUR AVANT LA TRANSITION :',1,EP1)
            CALL UTIMPR('L','VALEUR MINIMUM AUTORISEE : ',1,12.D0)
            CALL UTIMPR('L','VALEUR MAXIMUM AUTORISEE : ',1,80.D0)
            CALL UTFINM()
          ENDIF
C          
          IF ((EP2.LT.20.D0).OR.(EP2.GT.110.D0)) THEN
            CALL UTDEBM ('F','ASCCOH','VALEUR HORS DOMAINE DE VAIDITE')
            CALL UTIMPR('L','EPAISSEUR APRES LA TRANSITION :',1,EP2)
            CALL UTIMPR('L','VALEUR MINIMUM AUTORISEE : ',1,20.D0)
            CALL UTIMPR('L','VALEUR MAXIMUM AUTORISEE : ',1,110.D0)
            CALL UTFINM()
          ENDIF
C          
          IF (EP1.GT.EP2) THEN
            CALL UTMESS ('F','ASCCOH','L''EPAISSEUR AVANT LA TRANSITION'
     +                   //' DOIT ETRE INFERIEURE A CELLE APRES LA'
     +                   //' TRANSITION')
          ENDIF
C
          LTRANF = LTRAN + ((EP2-EP1)/(TAN(TETA1)))
          IF (LTRANF.GT.LCOUDE) THEN 
            CALL UTDEBM ('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
            CALL UTIMPR ('L','FIN TRANSITION D''EPAISSEUR : ',1,LTRANF)
            CALL UTIMPR ('L','VALEUR LIMITE AUTORISEE : ',1,LCOUDE)
            CALL UTFINM()
          ENDIF
C
          IF ((DEXT.LT.112.D0).OR.(DEXT.GT.880.D0)) THEN
            CALL UTDEBM ('F','ASCCOH','VALEUR HORS DOMAINE DE VAIDITE')
            CALL UTIMPR('L','DIAM EXT DU TUBE AVANT TRANSITION:',1,DEXT)
            CALL UTIMPR('L','VALEUR MINIMUM AUTORISEE : ',1,112.D0)
            CALL UTIMPR('L','VALEUR MAXIMUM AUTORISEE : ',1,880.D0)
            CALL UTFINM()
          ENDIF
C
C   TRANSITION D'EPAISSEUR A DEUX PENTES
C
        ELSE
C
          IF ((TETA2.LT.0.D0).OR.(TETA2.GT.45.D0)) THEN
            CALL UTDEBM('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
            CALL UTIMPR('L','ANGLE DE TRANSITION TETA2 :',1,TETA2)
            CALL UTIMPR('L','VALEUR MINIMALE AUTORISEE :',1,0.D0)
            CALL UTIMPR('L','VALEUR MAXIMALE AUTORISEE :',1,45.D0)
            CALL UTFINM()
          ENDIF
C
          IF ((EP1.LT.7.D0).OR.(EP1.GT.35.D0)) THEN
            CALL UTDEBM ('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
            CALL UTIMPR('L','EPAISSEUR AVANT 1ERE TRANSITION :',1,EP1)
            CALL UTIMPR('L','VALEUR MINIMUM AUTORISEE : ',1,7.D0)
            CALL UTIMPR('L','VALEUR MAXIMUM AUTORISEE : ',1,35.D0)
            CALL UTFINM()
          ENDIF
C          
          IF ((EP2.LT.15.D0).OR.(EP2.GT.40.D0)) THEN
            CALL UTDEBM ('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
            CALL UTIMPR('L','EPAISSEUR APRES 2EME TRANSITION :',1,EP2)
            CALL UTIMPR('L','VALEUR MINIMUM AUTORISEE : ',1,15.D0)
            CALL UTIMPR('L','VALEUR MAXIMUM AUTORISEE : ',1,40.D0)
            CALL UTFINM()
          ENDIF
C          
          IF ((EPI.LT.15.D0).OR.(EPI.GT.40.D0)) THEN
            CALL UTDEBM ('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
            CALL UTIMPR('L','EPAISSEUR INTERMEDIAIRE :',1,EPI)
            CALL UTIMPR('L','VALEUR MINIMUM AUTORISEE : ',1,15.D0)
            CALL UTIMPR('L','VALEUR MAXIMUM AUTORISEE : ',1,40.D0)
            CALL UTFINM()
          ENDIF
C          
          IF (EP1.GT.EPI) THEN
            CALL UTMESS ('F','ASCCOH','L''EPAISSEUR AVANT LA TRANSITION'
     +                   //' DOIT ETRE INFERIEURE A L''EPAISSEUR'
     +                   //' INTERMEDIAIRE')
          ENDIF
          IF (EP2.LT.EPI) THEN
            CALL UTMESS ('F','ASCCOH','L''EPAISSEUR APRES LA TRANSITION'
     +                   //' DOIT ETRE SUPERIEURE A L''EPAISSEUR'
     +                   //' INTERMEDIAIRE')
          ENDIF
C
          LTRANF = LTRAN + (EPI-EP1)/(TAN(TETA1))
          LTRANF = LTRANF + (EP2-EPI)/(TAN(TETA2))
          IF (LTRANF.GT.LCOUDE) THEN 
            CALL UTDEBM ('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
            CALL UTIMPR ('L','FIN TRANSITION D''EPAISSEUR : ',1,LTRANF)
            CALL UTIMPR ('L','VALEUR LIMITE AUTORISEE : ',1,LCOUDE)
            CALL UTFINM()
          ENDIF
C
          IF ((DEXT.LT.77.D0).OR.(DEXT.GT.355.D0)) THEN
            CALL UTDEBM ('F','ASCCOH','VALEUR HORS DOMAINE DE VALIDITE')
            CALL UTIMPR('L','DIAM EXT DU TUBE AVANT TRANSITION:',1,DEXT)
            CALL UTIMPR('L','VALEUR MINIMUM AUTORISEE : ',1,77.D0)
            CALL UTIMPR('L','VALEUR MAXIMUM AUTORISEE : ',1,355.D0)
            CALL UTFINM()
          ENDIF
C
        ENDIF
C
      ENDIF
C                                         
9999  CONTINUE       
      END
