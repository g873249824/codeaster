      SUBROUTINE IRCMPF ( NOFIMD, NVALTY, PROFIL, NOPROF )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 11/05/2011   AUTEUR SELLENET N.SELLENET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE SELLENET N.SELLENET
C_______________________________________________________________________
C  ECRITURE D'UN CHAMP - FORMAT MED - PROFIL
C     -  -       -              -     -  -
C_______________________________________________________________________
C     ENTREES :
C       NOFIMD : NOM DU FICHIER MED
C       NVALTY : NOMBRE DE VALEURS DU TYPE
C       PROFIL : PROFIL ENTIER
C     SORTIES :
C       NOPROF : NOM DU PROFIL AU SENS MED
C_______________________________________________________________________
C
      IMPLICIT NONE
C
C 0.1. ==> ARGUMENTS
C
      INTEGER NVALTY, PROFIL(NVALTY)
C
      CHARACTER*(*) NOFIMD
      CHARACTER*(*) NOPROF
C
C 0.2. ==> COMMUNS
C
C --------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER      ZI
      CHARACTER*8  ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /IVARJE/ZI(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX --------------------------
C
C 0.3. ==> VARIABLES LOCALES
C
      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'IRCMPF' )
      INTEGER EDLECT
      PARAMETER (EDLECT=0)
      INTEGER EDLEAJ
      PARAMETER (EDLEAJ=1)
C
      INTEGER IFM, NIVINF
C
      INTEGER IDFIMD
      INTEGER NBPROF, LGPROF, ADPROF, ADNOPF, NRPRTY
      INTEGER IAUX, JAUX
      INTEGER CODRET
C
      CHARACTER*8 SAUX08
      CHARACTER*24 NTPROF, NTNOPF
      CHARACTER*64 NOPR64
C
C====
C 1. PREALABLES
C====
C 1.1. ==> RECUPERATION DU NIVEAU D'IMPRESSION
C
      CALL INFNIV ( IFM, NIVINF )
C
      IF ( NIVINF.GT.1 ) THEN
        WRITE (IFM,1001) 'DEBUT DE '//NOMPRO
      ENDIF
 1001 FORMAT(/,4X,10('='),A,10('='),/)
C
C 1.2. ==> NOMS DES TABLEAUX
C               12   345678   9012345678901234
      NTPROF = '&&'//NOMPRO//'.PROFIL_MED_LU  '
      NTNOPF = '&&'//NOMPRO//'.NOM_PROFIL_MED '
C
C 1.3. ==> A PRIORI, PAS DE PROFIL DANS LE FICHIER
C
      NRPRTY = 0
C
C====
C 2. ON OUVRE LE FICHIER EN LECTURE
C====
C
      CALL MFOUVR ( IDFIMD, NOFIMD, EDLECT, CODRET )
      IF ( CODRET.NE.0 ) THEN
        SAUX08='MFOUVR  '
        CALL U2MESG('F','DVP_97',1,SAUX08,1,CODRET,0,0.D0)
      ENDIF
C
C====
C 3. REPERAGE DU NOMBRE DE PROFILS DEJA ENREGISTRES
C    S'IL Y EN A, ON ALLOUE UN TABLEAU POUR STOCKER LEURS NOMS
C====
C
      CALL MFNPRO ( IDFIMD, NBPROF, CODRET )
      IF ( CODRET.NE.0 ) THEN
        SAUX08='MFNPRO  '
        CALL U2MESG('F','DVP_97',1,SAUX08,1,CODRET,0,0.D0)
      ENDIF

C
      IF ( NIVINF.GT.1 ) THEN
        WRITE (IFM,*) '   NOMBRE DE PROFILS DANS LE FICHIER : ',NBPROF
      ENDIF
C
      IF ( NBPROF.NE.0 ) THEN
        CALL WKVECT ( NTNOPF, 'V V K80', NBPROF, ADNOPF )
      ENDIF
C
C====
C 4. LECTURE DE CHACUN DES PROFILS ET COMPARAISON AVEC CELUI RETENU
C====
C
      DO 41 , IAUX = 1 , NBPROF
C
C 4.1. ==> NOM ET NOMBRE DE VALEURS DU IAUX-EME PROFIL
C
        CALL MFPROI ( IDFIMD, IAUX, NOPR64, LGPROF, CODRET )
        NOPROF = NOPR64
        IF ( CODRET.NE.0 ) THEN
          SAUX08='MFPROI  '
          CALL U2MESG('F','DVP_97',1,SAUX08,1,CODRET,0,0.D0)
        ENDIF
C
        IF ( NIVINF.GT.1 ) THEN
          WRITE (IFM,4101) IAUX, NOPROF, LGPROF
        ENDIF
 4101   FORMAT(5X,'LECTURE DU PROFIL NUMERO',I8,
     &       /,5X,'...NOM       : ',A,
     &       /,5X,'... LONGUEUR : ',I8)
C
        ZK80(ADNOPF+IAUX-1) = NOPROF
C
C 4.2. ==> SI LA LONGUEUR EST LA MEME ET QU'ON N'A TOUJOURS PAS TROUVE
C          UN PPOFIL IDENTIQUE, ON LIT LE PROFIL COURANT ET ON COMPARE
C
        IF ( NVALTY.EQ.LGPROF .AND. NRPRTY.EQ.0 ) THEN
C
C 4.2.1. ==> LECTURE DES VALEURS DU PROFIL
C
          CALL WKVECT ( NTPROF, 'V V I', LGPROF, ADPROF )
C
          CALL MFPFLL ( IDFIMD, ZI(ADPROF), LGPROF, NOPROF, CODRET )
          IF ( CODRET.NE.0 ) THEN
            SAUX08='MFPFLL  '
            CALL U2MESG('F','DVP_97',1,SAUX08,1,CODRET,0,0.D0)
          ENDIF
C
          IF ( NIVINF.GT.1 ) THEN
            WRITE (IFM,4201) ZI(ADPROF),ZI(ADPROF+LGPROF-1)
          ENDIF
 4201     FORMAT(5X,'... 1ERE ET DERNIERE VALEURS : ',2I8)
C
C 4.2.2. ==> ON COMPARE TERME A TERME.
C            DES QU'UNE VALEUR DIFFERE, ON PASSE AU PROFIL SUIVANT.
C            SI TOUS LES TERMES SONT EGAUX, C'EST LE BON PROFIL !
C            ON PEUT SORTIR DE LA RECHERCHE DES PROFILS.
C
          DO 422 , JAUX = 1 , LGPROF
            IF ( PROFIL(JAUX).NE.ZI(ADPROF+JAUX-1) ) THEN
              GOTO 423
            ENDIF
  422     CONTINUE
C
          NRPRTY = IAUX
C
          IF ( NIVINF.GT.1 ) THEN
            WRITE (IFM,4202)
          ENDIF
 4202     FORMAT('...... CE PROFIL EST IDENTIQUE A CELUI VOULU')
C
          GOTO 51
C
C 4.2.3. ==> MENAGE AVANT D'EXAMINER UN NOUVEAU PROFIL
C
  423     CONTINUE
C
          CALL JEDETR ( NTPROF )
C
        ENDIF
C
   41 CONTINUE
C
C====
C 5. FERMETURE DU FICHIER
C====
C
   51 CONTINUE
C
      CALL MFFERM ( IDFIMD, CODRET )
      IF ( CODRET.NE.0 ) THEN
        SAUX08='MFFERM  '
        CALL U2MESG('F','DVP_97',1,SAUX08,1,CODRET,0,0.D0)
      ENDIF
C
C====
C 6. SI AUCUN PROFIL N'A ETE TROUVE, ON ECRIT LE NOTRE DANS LE FICHIER
C====
C
      IF ( NRPRTY.EQ.0 ) THEN
C
C 6.1. ==> OUVERTURE FICHIER MED EN MODE 'LECTURE_AJOUT'
C    CELA SIGNIFIE QUE LE FICHIER EST ENRICHI MAIS ON NE PEUT PAS
C    ECRASER UNE DONNEE EXISTANTE
C
        CALL MFOUVR (IDFIMD,NOFIMD,EDLEAJ,CODRET)
        IF ( CODRET.NE.0 ) THEN
          SAUX08='MFOUVR  '
          CALL U2MESG('F','DVP_97',1,SAUX08,1,CODRET,0,0.D0)
        ENDIF
C
C 6.2. ==> ELABORATION D'UN NOM DE PROFIL
C          IL SERA DU TYPE 'PROFIL_00000000N'
C          POUR ETRE SUR DE FINIR PAR TROUVER UN NOM QUI N'A PAS SERVI,
C          IL SUFFIT D'ESSAYER PLUS DE NUMEROS QUE DE PROFILS DEJA
C          ENREGISTRES. QUELLE RUSE DIABOLIQUE !
C
        NOPROF(17:64)='                                                '
C                      123456789012345678901234567890123456789012345678
C
        DO 62 , IAUX = 1 , NBPROF + 1
C
          CALL CODENT( IAUX , 'D0' , SAUX08  )
C                         12345678
          NOPROF(1:16) = 'PROFIL__'//SAUX08
C
CGN        WRITE (IFM,*) 'TEST DU NOM DE PROFIL : ',NOPROF
          DO 621 , JAUX = 0 , NBPROF-1
CGN        WRITE (IFM,*) '... COMPARAISON AVEC  : ',ZK80(ADNOPF+JAUX)
            IF ( NOPROF.EQ.ZK80(ADNOPF+JAUX)(1:64) ) THEN
              GOTO 62
            ENDIF
  621     CONTINUE
          GOTO 622
   62   CONTINUE
C
  622   CONTINUE
C
C 6.3. ==> ECRITURE DU PROFIL
C
CGN      PRINT 1789,(PROFIL(IAUX),IAUX=1,NVALTY)
CGN 1789  FORMAT(10I5)
        IF ( NIVINF.GT.1 ) THEN
          WRITE (IFM,6301) NOPROF, NVALTY, PROFIL(1), PROFIL(NVALTY)
 6301     FORMAT(4X,'PROFIL A CREER :',
     &         /,4X,'. NOM                      = ',A,
     &         /,4X,'. LONGUEUR                 = ',I8,
     &         /,4X,'. 1ERE ET DERNIERE VALEURS = ',2I8)
        ENDIF
        CALL MFPFLE ( IDFIMD, PROFIL, NVALTY, NOPROF, CODRET )
        IF ( CODRET.NE.0 ) THEN
          SAUX08='MFPFLE  '
          CALL U2MESG('F','DVP_97',1,SAUX08,1,CODRET,0,0.D0)
        ENDIF
C
C 6.4. ==> FERMETURE FICHIER MED
C
        CALL MFFERM ( IDFIMD, CODRET )
        IF ( CODRET.NE.0 ) THEN
          SAUX08='MFFERM  '
          CALL U2MESG('F','DVP_97',1,SAUX08,1,CODRET,0,0.D0)
        ENDIF
C
      ENDIF
C
C====
C 7. LA FIN
C====
C
      CALL JEDETC('V','&&'//NOMPRO,1)
C
      IF ( NIVINF.GT.1 ) THEN
        WRITE (IFM,1001) 'FIN DE '//NOMPRO
      ENDIF
C
      END
