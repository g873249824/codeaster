      SUBROUTINE LRREFD(RESU,PRCHND)
      IMPLICIT  NONE
      CHARACTER*8 RESU
      CHARACTER*19 PRCHND
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 28/06/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     BUT:
C       * REMPLIR LE .REFD A PARTIR DES DONNEES UTILISATEUR
C       * RETOURNER LE NOM D'UN PROF_CHNO QUI SERVIRA A NUMEROTER
C         LES CHAM_NO DE "DEPL" (DEPL/VITE/ACCE)
C       * PEUT RETOURNER PRCHND=' '
C
C     ARGUMENTS:
C     ----------
C
C      ENTREE :
C-------------
C IN   RESU     : NOM DE LA SD_RESULTAT
C
C      SORTIE :
C-------------
C OUT  PRCHND   : PROFIL DES CHAM_NO DEPL/VITE/ACCE
C
C ......................................................................
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)

      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      INTEGER IRET,IRET1,IRET2,IBID
      INTEGER JREFD

      CHARACTER*8 MATRA,MATRB
      CHARACTER*14 NUDDB, NUDDA
      CHARACTER*19 PRONU1, PRONU2
      LOGICAL IDENSD
C
C ----------------------------------------------------------------------
C
C     SI L'UTILISATEUR NE DONNE PAS DE NUME_DDL ON LE DEDUIT DE LA
C     DE LA MATRICE DE RIGIDITE (MATRB).
C
      CALL JEMARQ()

      PRCHND = ' '
      MATRA  = ' '
      MATRB  = ' '
      NUDDA  = ' '
      NUDDB  = ' '

      IBID = 1

      CALL GETVID(' ','MATR_A',IBID,1,1,MATRA,IRET1)
      CALL GETVID(' ','MATR_B',IBID,1,1,MATRB,IRET2)

      IF (IRET2.EQ.1) THEN
        CALL U2MESS('I','PREPOST_14')
        CALL DISMOI('F','NOM_NUME_DDL',MATRB,'MATR_ASSE',
     &                 IBID,NUDDB,IRET)
        CALL DISMOI('F','PROF_CHNO',NUDDB,'NUME_DDL',
     &                   IBID,PRCHND,IRET)
      ENDIF

C     VERIFICATION : LES NUME_DDL DES MATRICES A ET B SONT IDENTIQUES
      IF (IRET1.EQ.1 .AND. IRET2.EQ.1) THEN
        CALL DISMOI('F', 'NOM_NUME_DDL', MATRA, 'MATR_ASSE',
     &              IBID, NUDDA, IRET)
        IF (NUDDB.NE.NUDDA) THEN
          PRONU1=(NUDDB//'.NUME')
          PRONU2=(NUDDA//'.NUME')
          IF (.NOT.IDENSD('PROF_CHNO',PRONU1,PRONU2)) THEN
            CALL U2MESS('F','ALGELINE2_79')
          ENDIF
        ENDIF
      ENDIF

      CALL WKVECT(RESU//'           .REFD','G V K24',7,JREFD)
      ZK24(JREFD-1+1) = MATRA
      ZK24(JREFD-1+2) = MATRB
      ZK24(JREFD-1+3) = ' '
      ZK24(JREFD-1+4) = NUDDB
      ZK24(JREFD-1+5) = ' '
      ZK24(JREFD-1+6) = ' '
      ZK24(JREFD-1+7) = ' '
C
      CALL JEDEMA()
C
      END
