      SUBROUTINE ASCFIS(ALPHA, RM, RC, EP, SUREP, GEOM, AXEA,
     +                  AXEC, AZIM, POS, SF, DSF, BETA, ORIEN,
     +                  AXEAP, AXECP, SFP)
      IMPLICIT NONE
      REAL*8      ALPHA, RM, RC, EP, SUREP, AZIM, SF, BETA, AXEC, 
     +            ORIEN, AXEA, AXEAP, AXECP, SFP
      LOGICAL     DSF
      CHARACTER*8 POS,GEOM
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF PREPOST  DATE 08/03/99   AUTEUR AUBHHMB M.BONNAMY 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C TOLE  CRP_7
C     MACR_ASCOUF_MAIL
C 
C     TAILLE INITIALE DU DEFAUT FISSURE SUR LA PLAQUE EN
C     FONCTION DES DONNEES SUR LE COUDE OU LE TUBE SUIVANT LA
C     TRANSFORMATION CHOISIE
C
C-----------------DONNEES FOURNIES PAR L'UTILISATEUR--------------------
C
C     ALPHA = ANGLE DU COUDE
C     RM    = RAYON MOYEN DU COUDE
C     RC    = RAYON DE CINTRAGE DU COUDE
C     EP    = EPAISSEUR DU COUDE
C     SUREP = VALEUR DE LA SUREPAISSEUR
C     GEOM  = TYPE DE GEOMETRIE MODELISEE (COUDE OU TUBE)   
C     AXEA  = PROFONDEUR FISSURE (DEMI PETIT AXE)
C     AXEC  = DEMI GRAND AXE FISSURE
C     AZIM  = POSITION AZIMUTALE DU CENTRE DE LA FISSURE 
C     POS   = POSITION EN PEAU (EXTERNE OU INTERNE)
C     SF    = ABCISSE CURVILIGNE LONGITUDINALE DU CENTRE DE LA FISSURE
C     DSF   = BOOLEEN EXPRESSION POSITION CENTRE FISSURE 
C     BETA  = POSITION ANGULAIRE DU CENTRE DE LA FISSURE
C     ORIEN = ORIENTATION DE LA FISSURE
C
C----------------------DONNEES FOURNIES PAR ASTER-----------------------
C
C     AXEAP = PROFONDEUR DE LA FISSURE (PETIT AXE) SUR LA PLAQUE
C     AXECP = LONGUEUR DE LA FISSURE (GRAND AXE) SUR LA PLAQUE
C     SFP   = ABCISSE CURVILIGNE LONGITUDINALE CENTRE FISSURE
C             SUR LA PLAQUE
C
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER           ZI
      COMMON / IVARJE / ZI(1)
      REAL*8            ZR
      COMMON / RVARJE / ZR(1)
      COMPLEX*16        ZC
      COMMON / CVARJE / ZC(1)
      LOGICAL           ZL
      COMMON / LVARJE / ZL(1)
      CHARACTER*8       ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                       ZK24
      CHARACTER*32                                ZK32
      CHARACTER*80                                         ZK80
      COMMON / KVARJE / ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ----------------------------
C      
      REAL*8   ASCFON
      EXTERNAL ASCFON
      REAL*8   X,PI,AZIMR,BETAR,MU,ZSUR1,ZSUR2,ALPHAR,BSUP,BINF,
     +         DIST,BEMB,BCOUD,F0,W,AXECC,YFISS,R8PI
      LOGICAL  NEWT,COUDE,TUBE
      INTEGER  IFM,IUNIFI
C 
      IFM   = IUNIFI('MESSAGE')
      NEWT  = .FALSE.
      COUDE = (GEOM.EQ.'COUDE')
      TUBE  = (GEOM.EQ.'TUBE' )
C      
      IF (POS.EQ.'DEB_INT') THEN
         IF (AZIM.GE.120.D0.AND.AZIM.LE.240.D0) THEN
          X = RM-EP/2.D0 - SUREP
         ELSE
          X = RM-EP/2.D0
         END IF
      ELSE
        X = RM+EP/2.D0
      END IF
      PI = R8PI()
      AZIMR = AZIM*2.D0*PI/360.D0 
C
C -- CALCUL COTE AXIALE DU CENTRE FISSURE SUR LA PLAQUE EN FONCTION
C    DE L'ABSCISSE CURVILIGNE DONNEE SUR LE COUDE OU DE LA POSITION
C    ANGULAIRE 
C
      IF (DSF) THEN
C
        IF (COUDE) THEN 
           SFP = SF/(1.D0+X/RC*COS(AZIMR))
        ELSE
           SFP = SF
        END IF
C
      ELSE
C
        BETAR = BETA*2.D0*PI/360.D0
        IF (COUDE) THEN 
           SF  = BETAR*(RC+X*COS(AZIMR))
           SFP = SF/(1.D0+X/RC*COS(AZIMR))
        ELSE
           SF  = BETAR*RC
           SFP = SF
        END IF
C
      END IF
C
      WRITE(IFM,*) 
      IF (COUDE) THEN
       WRITE(IFM,20) 'COTE AXIALE CENTRE FISSURE SUR COUDE : ',SF
      ELSE IF (TUBE) THEN
       WRITE(IFM,20) 'COTE AXIALE CENTRE FISSURE SUR TUBE  : ',SF 
      END IF  
      WRITE(IFM,20) 'COTE AXIALE CENTRE FISSURE SUR PLAQUE : ',SFP
      WRITE(IFM,5) 
C
C   ON ENVISAGE LE CAS OU UNE PARTIE DE L'AXE EST DANS LES
C   DROITES DES EMBOUTS. LA TRANSFORMATION N'EST FAITE QUE SUR LA 
C   PARTIE RESTANT DANS LE COUDE.
C
      IF (COUDE) THEN
        DIST = ALPHA*2.D0*PI/360.D0*(RC+X*COS(AZIMR))
      ELSE
        DIST = ALPHA*2.D0*PI/360.D0*RC
      END IF
      BCOUD = 0.D0
      BEMB  = 0.D0
C
      IF (ABS(ORIEN).LT.1.D-2) THEN
C
C -- FISSURE LONGITUDINALE (0 DEGRE)
C
        BSUP = SF + AXEC
        BINF = SF - AXEC
        IF (BSUP.GT.DIST) THEN
          BCOUD = DIST - BINF
          BEMB  = BSUP - DIST
        ELSE IF (BINF.LT.0.D0) THEN
          BCOUD = BSUP 
          BEMB  = ABS(BINF)
        ELSE IF (BINF.GE.0.D0.AND.BSUP.LE.DIST) THEN
          BCOUD = 2.D0*AXEC
        END IF
C
      ELSE IF (ABS(ORIEN-90.D0).LT.1.D-2) THEN
C
C -- FISSURE CIRCONFERENTIELLE (90 DEGRES)
C
        BSUP = SF
        BINF = SF
        IF (BSUP.GT.DIST) THEN
          BCOUD = DIST - BINF
          BEMB  = BSUP - DIST
        ELSE IF (BINF.LT.0.D0) THEN
          BCOUD = BSUP 
          BEMB  = ABS(BINF)
        ELSE IF (BINF.GE.0.D0.AND.BSUP.LE.DIST) THEN
          BCOUD = 2.D0*AXEC
        END IF
C
      ELSE
C
C -- FISSURE A +/- 45 DEGRES SUR INTRADOS OU EXTRADOS
C      
        BSUP = SF + SQRT(2.D0)/2.D0*AXEC
        BINF = SF - SQRT(2.D0)/2.D0*AXEC
        IF (BSUP.GT.DIST) THEN
          BCOUD = (DIST - BINF)*SQRT(2.D0)
          BEMB  = (BSUP - DIST)*SQRT(2.D0)
        ELSE IF (BINF.LT.0.D0) THEN
          BCOUD = BSUP*SQRT(2.D0) 
          BEMB  = ABS(BINF)*SQRT(2.D0)
        ELSE IF (BINF.GE.0.D0.AND.BSUP.LE.DIST) THEN
          BCOUD = 2.D0*AXEC
        END IF
C
      END IF 
C
      WRITE(IFM,20) 'PARTIE DU GRAND AXE DANS LE COUDE  : ',BCOUD
      WRITE(IFM,20) 'PARTIE DU GRAND AXE DANS L''EMBOUT : ',BEMB
C      
C
C -- CALCUL DE LA TAILLE DU GRAND AXE FISSURE SUR LA PLAQUE
C
C
      IF (ABS(ORIEN).LT.1.D-2) THEN
C
C -- FISSURE LONGITUDINALE (0 DEGRE)
C
        IF (COUDE) THEN
           AXECP = BCOUD/(1.D0+X/RC*COS(AZIMR)) + BEMB
        ELSE
           AXECP = BCOUD + BEMB
        END IF
C
      ELSE IF (ABS(ORIEN-90.D0).LT.1.D-2) THEN
C
C -- FISSURE CIRCONFERENTIELLE (90 DEGRES)
C
        AXECP = (BCOUD+BEMB)*RM/X
C
      ELSE
C
        IF (COUDE) THEN
C
C   ------- TRANSFORMATION COUDE
C 
           IF (AZIM.EQ.0.D0.OR.AZIM.EQ.180.D0) THEN
C
C -- FISSURE A +/- 45 DEGRES SUR INTRADOS OU EXTRADOS
C
              AXECP = BCOUD*RM*SQRT(2.D0)/( X*
     &                 SQRT(1.D0+(RM/X+RM/RC*COS(AZIMR))**2) )
     &                 + BEMB*SQRT( (1.D0+(X/RM)**2)*0.5D0 )
            ELSE
C
C -- FISSURE A +/- 45 DEGRES AILLEURS
C
              F0 = -BCOUD
              CALL ASCNEW(F0,BCOUD,W,ASCFON)
              AXECP = W
              AXECC = ASCFON(AXECP)+BCOUD
              AXECP = W + BEMB*SQRT( (1.D0+(X/RM)**2)*0.5D0 )
              NEWT = .TRUE.
C
             END IF
C
        ELSE IF (TUBE) THEN
C
C   ------- TRANSFORMATION TUBE
C
            AXECP = (BCOUD+BEMB)*SQRT( (1.D0+(X/RM)**2)*0.5D0 ) 
C
        ELSE
C
C   ------- PAS DE TRANSFORMATION (PLAQUE)
C
            AXECP = BCOUD + BEMB
C
        END IF              
C
      END IF
C
      WRITE(IFM,5)
      IF (COUDE) THEN     
      WRITE(IFM,20) 'TAILLE GRAND AXE COUDE DONNE : ',2.D0*AXEC
      ELSE IF(TUBE) THEN
      WRITE(IFM,20) 'TAILLE GRAND AXE TUBE DONNE  : ',2.D0*AXEC
      END IF      
      WRITE(IFM,20) 'TAILLE GRAND AXE PLAQUE DEDUIT : ',AXECP
      IF (NEWT) THEN
       WRITE(IFM,20) 'METHODE DE NEWTON FISSURE A 45 DEGRES -->'      
       WRITE(IFM,20) 'TAILLE GRAND AXE COUDE RECALCULE : ',AXECC
      END IF
      WRITE(IFM,5)
      IF (COUDE .AND. BEMB .GT. 0. AND. BSUP.GT.DIST) THEN
         SFP =  ALPHA*2.D0*PI*RC/360.D0 - AXECP/2.D0 + BEMB
         WRITE(IFM,20) 'CORRECTION CENTRE : FISSURE A CHEVAL SUR EMBOUT'
         WRITE(IFM,20) 'ABSC. CURV. AXIALE CENTRE FISSURE '
     &             //'SUR PLAQUE : ',SFP
       END IF
       IF (COUDE .AND. BEMB .GT. 0. AND. BINF. LT. 0.D0) THEN
         SFP = + AXECP/2.D0 - BEMB
         WRITE(IFM,20) 'CORRECTION CENTRE : FISSURE A CHEVAL SUR EMBOUT'
         WRITE(IFM,20) 'ABSC. CURV. AXIALE CENTRE FISSURE '
     &             //'SUR PLAQUE : ',SFP
       END IF
C
C -- CORRECTION DU PETIT AXE DE LA FISSURE QUAND CELLE-CI SE TROUVE SUR
C    LA ZONE DE SUREPAISSEUR
C
      ALPHAR = ALPHA*2.D0*PI/360.D0
      ZSUR1 = ALPHAR*RC/10.D0
      ZSUR2 = ALPHAR*RC*9.D0/10.D0
      YFISS = (AZIMR-PI/2.D0)*RM
      MU = 0.D0
C
      IF (AZIM.GE.120.D0.AND.AZIM.LE.240.D0) THEN
         IF (SFP.GE.ZSUR1.AND.SFP.LE.ZSUR2) THEN
             MU = 1.D0
         ELSE IF (SFP.LT.ZSUR1) THEN
             MU = SFP/ZSUR1
         ELSE IF (SFP.GT.ZSUR2) THEN
             MU = (ALPHAR*RC-SFP)/ZSUR1
         END IF
      ELSE IF (AZIM.GE.90.D0.AND.AZIM.LE.120.D0) THEN
         IF (SFP.GE.ZSUR1.AND.SFP.LE.ZSUR2) THEN
             MU = YFISS/(PI/6.D0*RM) 
         ELSE IF (SFP.LT.ZSUR1) THEN
             MU = YFISS*SFP/(PI/6.D0*RM*ZSUR1)
         ELSE IF (SFP.GT.ZSUR2) THEN
             MU = YFISS*(ALPHAR*RC-SFP)/(PI/6.D0*RM*ZSUR1)
         END IF
      ELSE IF (AZIM.GE.240.D0.AND.AZIM.LE.270.D0) THEN
         IF (SFP.GE.ZSUR1.AND.SFP.LE.ZSUR2) THEN
             MU = (YFISS-5.D0*PI/6.D0*RM)/(PI/6.D0*RM) 
         ELSE IF (SFP.LT.ZSUR1) THEN
             MU = (YFISS-5.D0*PI/6.D0*RM)*SFP/(PI/6.D0*RM*ZSUR1)
         ELSE IF (SFP.GT.ZSUR2) THEN
             MU = (YFISS-5.D0*PI/6.D0*RM)*(ALPHAR*RC-SFP)
     &             /(PI/6.D0*RM*ZSUR1)
         END IF
      END IF
C
      IF (SUREP.NE.0.D0) THEN
C
         AXEAP = AXEA * EP / ( EP + MU*SUREP )
         WRITE(IFM,5) 
         WRITE(IFM,*) '--> CORRECTION DUE A LA SUREPAISSEUR'     
         WRITE(IFM,*) '--> TAILLE PETIT AXE PLAQUE : ',AXEAP
         WRITE(IFM,5)  
C
      ELSE
C
         AXEAP = AXEA
C
      END IF
C
 5    FORMAT(37('-'))
10    FORMAT(T1,A,T39,F9.5)
20    FORMAT(T1,A,T56,F8.2)
C
      END 
