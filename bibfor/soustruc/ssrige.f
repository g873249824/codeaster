      SUBROUTINE SSRIGE(NOMU)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF SOUSTRUC  DATE 28/02/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
C     ARGUMENTS:
C     ----------
      CHARACTER*8 NOMU
C ----------------------------------------------------------------------
C     BUT: TRAITER LE MOT CLEF "RIGI_MECA" DE L'OPERATEUR MACR_ELEM_STAT
C          CALCULER LA MATRICE DE RIGIDITE CONDENSEE DU MACR_ELEM_STAT.
C
C     IN: NOMU   : NOM DU MACR_ELEM_STAT
C
C     OUT: LES OBJETS SUIVANTS DU MACR_ELEM_STAT SONT CALCULES:
C          .PHI_IE ET .KP_EE
C
C ----------------------------------------------------------------------
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER       NCHACI, NPREC
      REAL*8        EPSI, RTBLOC,JEVTBL
      CHARACTER*1   BASE
      CHARACTER*8   MATEL, KBID, LIPARA(5), NOMO, CARA, MATERI
      CHARACTER*14  NU
      CHARACTER*19  MATAS
      CHARACTER*24  MATE
      LOGICAL       EXISTE, ASS1ER, EXIMAT
C
      CALL JEMARQ()
      NU   = NOMU
      BASE = 'V'
C
      MATEL = '&&MATEL'
      MATAS = NOMU//'.RIGIMECA'
C
      CALL JEVEUO(NOMU//'.DESM' ,'L',IADESM)
      NCHACI = ZI(IADESM-1+6)
C
      CALL JEVEUO(NOMU//'.REFM' ,'E',IAREFM)
      NOMO   = ZK8(IAREFM-1+1)
      CARA   = ZK8(IAREFM-1+4)
      MATERI = ZK8(IAREFM-1+3)
      IF ( MATERI .EQ. '        ' ) THEN
         MATE = ' '
      ELSE
         CALL RCMFMC ( MATERI , MATE )
       ENDIF
C
      CALL JEVEUO(NOMU//'.VARM' ,'E',IAVARM)
      TIME = ZR(IAVARM-1+2)
C
C        -- CALCULS MATRICES ELEMENTAIRES DE RIGIDITE:
      CALL MERIME(NOMO,NCHACI,ZK8(IAREFM-1+8+1),MATE,CARA,
     +            .TRUE.,TIME,MATEL,IBID,BASE)
C
C        -- NUME_DDL:
      CALL NUMDDL(NU,'G',1,MATEL,'RCMK')
      CALL CRNSLV(NU,'LDLT','RCMK','G')
C
C        -- ON MET LES DDLS INTERNES AVANT LES EXTERNES
C           AVANT DE CONSTRUIRE LE PROFIL :
      CALL SSRIU1(NOMU)
      CALL PROMOR(NU,'G')
      RTBLOC=JEVTBL()
      CALL SMOSLI(NU//'.SMOS',NU//'.SLCS','G',RTBLOC)
      ZR(IAVARM-1+1)=RTBLOC
C
C        -- ASSEMBLAGE:
      CALL ASSMAM('G',MATAS,1,MATEL,1.0D0,NU,'ZERO',1)

      CALL SSRIU2(NOMU)
C
C        -- MISE A JOUR DE .REFM(5) ET REFM(6)
      ZK8(IAREFM-1+5)=NU(1:8)
      ZK8(IAREFM-1+6)='OUI_RIGI'
C
 9999 CONTINUE
      CALL JEDETR(NOMU//'      .NEWN')
      CALL JEDETR(NOMU//'      .OLDN')
      CALL JEDETR(NU//'     .ADNE')
      CALL JEDETR(NU//'     .ADLI')
      CALL JEDETR(MATAS(1:19)//'.LILI')
      CALL JEDETR(MATAS(1:19)//'.&VDI')
      CALL JEDETR(MATAS(1:19)//'.&TRA')
      CALL DETRSD('MATR_ELEM',MATEL)
C
      CALL JEDEMA()
      END
