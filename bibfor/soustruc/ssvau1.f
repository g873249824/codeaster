      SUBROUTINE SSVAU1(NOMACR,IAVEIN,IAVEOU)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF SOUSTRUC  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE

C     ARGUMENTS:
C     ----------
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      CHARACTER*8 NOMACR
      INTEGER IAVEIN,IAVEOU
C ----------------------------------------------------------------------
C     BUT:
C         "CONDENSER" UN  VECTEUR CHARGEMENT D'UN MACR_ELEM_STAT :
C          EN ENTREE :
C            VECIN  (     1,NDDLI      )  =  F_I (EVENT. TOURNE)
C            VECIN  (NDDLI+1,NDDLI+NDDLE) =  F_E (EVENT. TOURNE)

C          EN SORTIE :
C            VECOUT(       1,NDDLI      ) = (KII**-1)*F_I
C            VECOUT(NDDLI+1,NDDLI+NDDLE)  =  FP_E
C            OU FP_E = F_E - K_EI*(KII**-1)*F_I

C     IN: NOMACR : NOM DU MACR_ELEM_STAT
C         IAVEIN : ADRESSE DANS ZR DU VECTEUR A CONDENSER.(VECIN)
C         IAVEOU : ADRESSE DANS ZR DU VECTEUR CONDENSE.(VECOUT)

C         IMPORTANT : LES 2 ADRESSES IAVEIN ET IAVEOU PEUVENT ETRE
C                     IDENTIQUES (CALCUL EN PLACE).

C     OUT:   LE VECTEUR VECOUT EST CALCULE.
C ----------------------------------------------------------------------


      CHARACTER*8 KBID
      INTEGER SCDI,SCHC,IBLO
      CHARACTER*19 MATAS,STOCK,NU

C-----------------------------------------------------------------------
      INTEGER IADESM ,IASCBL ,IASCDI ,IASCHC ,IASCIB ,IBLOLD ,J
      INTEGER JREFA ,JUALF ,K ,KK ,LMAT ,NBBLOC ,NDDLE
      INTEGER NDDLI ,NDDLT
C-----------------------------------------------------------------------
      CALL JEMARQ()

      MATAS=NOMACR//'.RIGIMECA'
      NU=NOMACR
      NU=NU(1:14)//'.NUME'
      STOCK=NU(1:14)//'.SLCS'
      CALL JEVEUO(STOCK//'.SCIB','L',IASCIB)


      CALL JEVEUO(NOMACR//'.DESM','L',IADESM)
      NDDLE=ZI(IADESM-1+4)
      NDDLI=ZI(IADESM-1+5)
      NDDLT=NDDLI+NDDLE


C     -- ON RECOPIE VECIN DANS VECOUT POUR EVITER LES EFFETS DE BIAIS:
C     ---------------------------------------------------------------
      DO 10,KK=1,NDDLT
        ZR(IAVEOU-1+KK)=ZR(IAVEIN-1+KK)
   10 CONTINUE


C     -- ON COMMENCE PAR CONDITIONNER LE SECOND MEMBRE INITIAL (.CONL)
C     ------------------- -------------------------------------------
      CALL MTDSCR(MATAS)
      CALL JEVEUO(MATAS(1:19)//'.&INT','E',LMAT)
      CALL MRCONL('MULT',LMAT,NDDLT,'R',ZR(IAVEOU),1)


C     -- CALCUL DE QI0 = (K_II**(-1))*F_I DANS : VECOUT(1->NDDLI):
C     ------------------- ----------------------------------------
      CALL JEVEUO(ZK24(ZI(LMAT+1))(1:19)//'.REFA','L',JREFA)
      CALL JEVEUO(ZK24(JREFA-1+2)(1:14)//'.SLCS.SCHC','L',IASCHC)
      CALL MTDSC2(ZK24(ZI(LMAT+1)),'SCDI','L',IASCDI)
      CALL MTDSC2(ZK24(ZI(LMAT+1)),'SCBL','L',IASCBL)
      CALL JELIRA(MATAS//'.UALF','NMAXOC',NBBLOC,KBID)

      CALL RLDLR8(ZK24(ZI(LMAT+1)),ZI(IASCHC),ZI(IASCDI),ZI(IASCBL),
     &            NDDLI,NBBLOC,ZR(IAVEOU),1)


C     -- CALCUL DE FP_E = F_E-K_EI*QI0 DANS : VECOUT(NDDLI+1,NDDLT):
C     -----------------------------------------------------------------
      IBLOLD=0
      DO 30,J=1,NDDLE
        IBLO=ZI(IASCIB-1+NDDLI+J)
        SCDI=ZI(IASCDI-1+NDDLI+J)
        SCHC=ZI(IASCHC-1+NDDLI+J)
        IF (IBLO.NE.IBLOLD) THEN
          IF (IBLOLD.GT.0) CALL JELIBE(JEXNUM(MATAS//'.UALF',IBLOLD))
          CALL JEVEUO(JEXNUM(MATAS//'.UALF',IBLO),'L',JUALF)
        ENDIF
        IBLOLD=IBLO
        KK=0
        DO 20,K=NDDLI+J+1-SCHC,NDDLI
          KK=KK+1
          ZR(IAVEOU-1+NDDLI+J)=ZR(IAVEOU-1+NDDLI+J)-
     &                         ZR(IAVEOU-1+K)*ZR(JUALF-1+SCDI-SCHC+KK)
   20   CONTINUE
   30 CONTINUE
      IF (IBLOLD.GT.0) CALL JELIBE(JEXNUM(MATAS//'.UALF',IBLOLD))


      CALL JELIBE(ZK24(JREFA-1+2)(1:14)//'.SLCS.SCHC')

      CALL JEDEMA()
      END
