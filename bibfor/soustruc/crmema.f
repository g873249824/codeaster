      SUBROUTINE CRMEMA(PROMES,IAMPEE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF SOUSTRUC  DATE 27/11/2007   AUTEUR ANDRIAM H.ANDRIAMBOLOLONA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================

C CALCUL DE LA PSEUDO-MATRICE MASSE POUR LA MODIFICATION STRUCTURALE
C
C   IN  : PROMES : NOM DU CONCEPT PROJ_MESU_MODAL (POUR BASE DE PROJ)
C   IN  : IAMPEE : ADRESSE DE LA MATRICE MACR_ELEM MASSE
C
      IMPLICIT NONE

      CHARACTER*8  PROMES
      INTEGER      IAMPEE
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CHARACTER*8  BASEMO,NOMRES,K8BID,TYP,TRAV,MODMES,SOL,MODLMS
      CHARACTER*8  NOMGD,VALS,U,V,WKS,MODELE,MA
      CHARACTER*16 NOMCHP,NORESU,MAELM,K16BID
      CHARACTER*19 CHAMNO,CH1S,NU
      CHARACTER*24 VNOEUD,VRANGE,BASEPR,NOEUMS,BASEIT,VSU,MESINT
      CHARACTER*24 VALK(2),MODID,VREF,REFMS
      CHARACTER*32 JEXNUM,JEXNOM

      INTEGER      NBMESU,NBVECB,NBORD,IADESM,ISOL,AFFICI(2)
      INTEGER VALI
      INTEGER      LORD,LRED,LRANGE,LINT,IER,IPOSI,IPULS
      INTEGER      IMOD,JMOD,IRET,LLNCMP,IDDL,LMESU,JDDL,IEXIST
      INTEGER      IPOSJ,INO,NDDLE,NDDLI,ICO,IPOS
      INTEGER      LNOEUD,LTRAV,LREDI,LWKS,IADEEQ,LREFMS,LREF
      INTEGER      JCNSD,JCNSC,JCNSV,JCNSK
      INTEGER      IBID,NBCMPI,NUMGD,LMAELM
      INTEGER      LU,LVALS,LV,LVSU

      REAL*8       R8PREM,MASG,EPS

C ----------------------------------------------------------------------

      CALL JEMARQ()

      CALL GETRES(NOMRES,K8BID,K8BID)

C RECUPERATION DES ELEMENTS RELATIFS A L'EXPANSION
      NOEUMS = PROMES//'.PROJM    .PJMNO'
      CALL JELIRA(NOEUMS,'LONUTI',NBMESU,K8BID)

      REFMS = PROMES//'.PROJM    .PJMRF'
      CALL JEVEUO(REFMS,'L',LREFMS)
      K16BID=ZK16(LREFMS-1 +1)
      MODLMS=K16BID(1:8)
      NOMCHP=ZK16(LREFMS-1 +2)
      K16BID=ZK16(LREFMS-1 +3)
      BASEMO=K16BID(1:8)

      BASEPR = PROMES//'.PROJM    .PJMBP'
      CALL JEVEUO(BASEPR,'L',LRED)
      CALL JELIRA(BASEPR,'LONUTI',NBVECB,K8BID)
      NBVECB = NBVECB/NBMESU
C NBVECB : NOMBRE DE VECTEURS DE BASE

C RECUPERATION DES ELEMENTS RELATIFS AU MACRO ELEMENT
      NORESU = NOMRES
      NU = NORESU(1:14)//'.NUME'
      CALL JEVEUO(NOMRES//'.DESM','L',IADESM)
      NDDLE = ZI(IADESM-1+4)
      NDDLI = ZI(IADESM-1+5)

      BASEIT = NOMRES//'.PROJM    .PJMBP'
      VSU = NOMRES//'.PROJM    .PJMIG'

C RECUPERATION DES ELEMENTS RELATIFS AU MODES MESURES
      CALL GETVID ('DEFINITION','MODE_MESURE',1,1,1,MODMES,IBID)
      VREF = NOMRES//'.PROJM    .PJMRF'
      CALL JEEXIN(VREF,IEXIST)
      IF (IEXIST.EQ.0) THEN
        CALL WKVECT (VREF, 'G V K16', 5, LREF)
        ZK16(LREF-1 +1) = MODLMS
        ZK16(LREF-1 +2) = NOMCHP
        ZK16(LREF-1 +3) = BASEMO
        ZK16(LREF-1 +4) = MODMES
        ZK16(LREF-1 +5) = PROMES
      ENDIF

      MODID = NOMRES//'.PROJM    .PJMMM'
      CALL JEEXIN(MODID,IEXIST)
      IF (IEXIST.EQ.0) THEN
        CALL REMOME(PROMES,MODMES,NOMRES)
      ENDIF
      CALL JEVEUO(MODID,'L',LMESU)
      CALL JELIRA(MODID,'LONUTI',NBORD,K8BID)
      NBORD = NBORD/NBMESU
C NBORD : NOMBRE DE NUMERO D'ORDRE

      TRAV = '&TRAV'
      WKS = '&WKS'

C ===============================
C  TEST : CALCUL INVERSE MATRICE DE PASSAGE DEJA REALISE
C ===============================
      CALL JEEXIN(VSU,IEXIST)
      IF (IEXIST.EQ.0) THEN

C CREATION DE LA BASE RESTREINTE AUX DDL EXTERIEUR
        CALL GETVID ('DEFINITION','MODELE',1,1,1,MODELE,IBID)
        CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,MA,IRET)

        CALL WKVECT (BASEIT, 'G V R', NDDLE*NBVECB, LREDI)
        CALL JEVEUO ( BASEMO//'           .ORDR' , 'L' , LORD )
        CH1S='&BASEIT.CH1S'

        DO 220 IMOD = 1,NBVECB
          CALL RSEXCH (BASEMO,NOMCHP,ZI(LORD-1+IMOD),CHAMNO,IRET)
          IF (IRET .NE. 0) THEN
            VALK (1) = BASEMO
            VALK (2) = NOMCHP
            VALI = ZI(LORD-1+IMOD)
            CALL U2MESG('F', 'SOUSTRUC_84',2,VALK,1,VALI,0,0.D0)
          END IF

C TRANSFORMATION DE CHAMNO EN CHAM_NO_S : CH1S
          CALL DETRSD('CHAM_NO_S',CH1S)
          CALL CNOCNS(CHAMNO,'V',CH1S)

C RECUPERATION DU CHAMP AU NOEUD
          CALL JEVEUO(CH1S//'.CNSK','L',JCNSK)
          CALL JEVEUO(CH1S//'.CNSD','L',JCNSD)
          CALL JEVEUO(CH1S//'.CNSC','L',JCNSC)
          CALL JEVEUO(CH1S//'.CNSV','L',JCNSV)

          NBCMPI = ZI(JCNSD-1 + 2)
          NOMGD = ZK8(JCNSK-1 + 2)

          CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMGD),NUMGD)
          CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',NUMGD),'L',LLNCMP)

          IF (IMOD .EQ. 1) THEN
C CREATION DE LA LISTE DES DDL EXTERIEUR
            VNOEUD = NOMRES//'.PROJM    .PJMNO'
            VRANGE = NOMRES//'.PROJM    .PJMRG'
            CALL WKVECT (VNOEUD, 'G V I', NDDLE, LNOEUD)
            CALL WKVECT (VRANGE, 'G V K8', NDDLE, LRANGE)
          ENDIF

          CALL JEVEUO(NU//'.DEEQ','L',IADEEQ)

          DO 850 IDDL=1,NDDLE
            INO=ZI(IADEEQ-1+NDDLI*2+(IDDL-1)*2+1)
            ICO=ZI(IADEEQ-1+NDDLI*2+(IDDL-1)*2+2)
            IF (IMOD .EQ. 1) THEN
              TYP=ZK8(LLNCMP-1+ICO)
              ZI(LNOEUD-1+IDDL) = INO
              ZK8(LRANGE-1+IDDL) = TYP
            ENDIF
            IPOS = (IMOD-1)*NDDLE + IDDL
            ZR(LREDI-1 +IPOS) = ZR(JCNSV-1 +(INO-1)*NBCMPI+ICO)
850       CONTINUE

220     CONTINUE

        CALL JEECRA (VNOEUD,'LONUTI',NDDLE,K8BID )
        CALL JEECRA (VRANGE,'LONUTI',NDDLE,K8BID )
        CALL JEECRA (BASEIT,'LONUTI',NDDLE*NBVECB,K8BID )

C FIN CREATION DE LA BASE RESTREINTE AUX DDL EXTERIEUR (LREDI)

C ===============================
C CALCUL MATRICE DE PASSAGE TIT (NOTATION MC)
C ===============================

C MESINT : MATRICE DE PASSAGE TIT (CAPTEUR -> INTERFACE)
        MESINT = NOMRES//'.TIT'
        CALL WKVECT (MESINT, 'V V R', NDDLE*NBMESU, LINT)

C CALCUL DU PSEUDO INVERSE DE LA BASE REDUITE AUX DDL MESURE

        IF (NBMESU.LT.NBVECB) THEN
          AFFICI(1) = NBMESU
          AFFICI(2) = NBVECB
          CALL U2MESI('F','SOUSTRUC_82',2,AFFICI)
        END IF

        VALS = '&VALS'
        U = '&U'
        V = '&V'

        CALL WKVECT(VALS,'V V R',NBVECB,LVALS)
        CALL WKVECT(U,'V V R',NBMESU*NBMESU,LU)
        CALL WKVECT(V,'V V R',NBMESU*NBVECB,LV)

C CALCUL PSEUDO INVERSE BASE REDUITE AUX DDL MESURE (LTRAV)

        SOL = '&SOLUT'
        CALL WKVECT (SOL, 'V V R', NBMESU*NBMESU, ISOL)

        CALL WKVECT (WKS, 'V V R', NBMESU, LWKS)

        DO 83 IDDL = 1,NBMESU
          DO 84 JDDL = 1,NBMESU
            IPOS = (JDDL-1)*NBMESU+IDDL
            IF (IDDL .EQ. JDDL) THEN
              ZR(ISOL-1 +IPOS) = 1.D0
            ELSE
              ZR(ISOL-1 +IPOS) = 0.D0
            ENDIF
 84       CONTINUE
 83     CONTINUE
C
        EPS = 1.D2*R8PREM()
        CALL WKVECT(TRAV,'V V R',NBVECB*NBMESU,LTRAV)
        DO 85 IDDL = 1,NBVECB*NBMESU
          ZR(LTRAV-1+IDDL) = ZR(LRED-1+IDDL)
85      CONTINUE

        CALL RSLSVD (NBMESU, NBMESU, NBVECB,ZR(LTRAV),ZR(LVALS),
     &     ZR(LU),ZR(LV),NBMESU,ZR(ISOL),EPS,IER,ZR(LWKS) )

        CALL JEDETR (TRAV)
        IF (IER.NE.0) CALL U2MESS('F','UTILITAI3_8')

        CALL WKVECT (TRAV, 'V V R', NBVECB*NBMESU, LTRAV)

        DO 630 IMOD = 1,NBVECB
          DO 650 JDDL = 1,NBMESU
            IPOS = (JDDL-1)*NBMESU+IMOD
            IPOSJ = (JDDL-1)*NBVECB+IMOD
            ZR(LTRAV-1+IPOSJ) = ZR(ISOL-1+IPOS)
650       CONTINUE
630     CONTINUE

        CALL JEDETR (VALS)
        CALL JEDETR (U)
        CALL JEDETR (V)

        CALL JEDETR (WKS)
        CALL JEDETR (SOL)

C FIN CALCUL PSEUDO INVERSE BASE REDUITE AUX DDL MESURE (LTRAV)

        DO 250 IDDL = 1,NDDLE
          DO 260 JDDL = 1,NBMESU
            IPOS = (JDDL-1)*NDDLE + IDDL
            ZR(LINT-1+IPOS) = 0.D0
            DO 270 IMOD = 1,NBVECB
              IPOSI = (IMOD-1)*NDDLE+IDDL
              IPOSJ = (JDDL-1)*NBVECB+IMOD
              ZR(LINT-1+IPOS) = ZR(LINT-1+IPOS) +
     &              ZR(LREDI-1+IPOSI)*ZR(LTRAV-1+IPOSJ)
270         CONTINUE
260       CONTINUE
250     CONTINUE

        CALL JEDETR (TRAV)

C ===============================
C FIN CALCUL MATRICE DE PASSAGE TIT (LINT)
C ===============================


C ===============================
C CALCUL DU PSEUDO INVERSE DE (TIT*PHI) PAR SVD (NOTATION MC)
C MATRICE DE PASSAGE COORDONNEES GENERALISEES -> DDL_INTERFACE
C ICI PHI : MODES PROPRES IDENTIFIES
C ===============================

C CALCUL DU PRODUIT TIT*PHIid : LTRAV
        CALL WKVECT(TRAV,'V V R',NDDLE*NBORD,LTRAV)

        DO 300 IDDL = 1,NDDLE
          DO 310 JMOD = 1,NBORD
            IPOS = (JMOD-1)*NDDLE + IDDL
            ZR(LTRAV-1+IPOS) = 0.D0
            DO 320 JDDL = 1,NBMESU
              IPOSI = (JDDL-1)*NDDLE+IDDL
              IPOSJ = (JMOD-1)*NBMESU+JDDL
              ZR(LTRAV-1+IPOS) = ZR(LTRAV-1+IPOS) +
     &              ZR(LINT-1+IPOSI)*ZR(LMESU-1+IPOSJ)
320         CONTINUE
310       CONTINUE
300     CONTINUE

        CALL JEDETR (MESINT)

        IF (NDDLE.LT.NBORD) THEN
          AFFICI(1) = NDDLE
          AFFICI(2) = NBORD
          CALL U2MESI('F','SOUSTRUC_83',2,AFFICI)
        END IF

        CALL WKVECT(VALS,'V V R',NBORD,LVALS)
        CALL WKVECT(U,'V V R',NDDLE*NDDLE,LU)
        CALL WKVECT(V,'V V R',NDDLE*NBORD,LV)

        CALL WKVECT (SOL, 'V V R', NDDLE*NDDLE, ISOL)

        CALL WKVECT (WKS, 'V V R', NDDLE, LWKS)

        DO 183 IDDL = 1,NDDLE
          DO 184 JDDL = 1,NDDLE
            IPOS = (JDDL-1)*NDDLE+IDDL
            IF (IDDL .EQ. JDDL) THEN
              ZR(ISOL-1 +IPOS) = 1.D0
            ELSE
              ZR(ISOL-1 +IPOS) = 0.D0
            ENDIF
184       CONTINUE
183     CONTINUE

C CALCUL DE L'INVERSE DU PRODUIT TIT*PHIid : LVSU

        CALL WKVECT (VSU, 'G V R', NBORD*NDDLE, LVSU)

        CALL RSLSVD (NDDLE, NDDLE, NBORD,ZR(LTRAV),ZR(LVALS),
     &     ZR(LU),ZR(LV),NDDLE,ZR(ISOL),EPS,IER,ZR(LWKS) )

        IF (IER.NE.0) CALL U2MESS('F','UTILITAI3_8')

        CALL JEDETR (WKS)

        DO 130 IMOD = 1,NBORD
          DO 150 JDDL = 1,NDDLE
            IPOS = (JDDL-1)*NBORD+IMOD
            IPOSJ = (JDDL-1)*NDDLE+IMOD
            ZR(LVSU-1+IPOS) = ZR(ISOL-1+IPOSJ)
150       CONTINUE
130     CONTINUE

        CALL JEECRA (VSU,'LONUTI',NBORD*NDDLE,K8BID )

        CALL JEDETR (SOL)

        CALL JEDETR (TRAV)

        CALL JEDETR (VALS)
        CALL JEDETR (U)
        CALL JEDETR (V)

      ELSE
        CALL JEVEUO(VSU,'L',LVSU)
      ENDIF

C ===============================
C FIN TEST : CALCUL INVERSE MATRICE DE PASSAGE DEJA REALISE
C ===============================

C  CALCUL DE VSUT : LTRAV
      CALL WKVECT (TRAV, 'V V R', NDDLE*NBORD, LTRAV)
      CALL WKVECT (WKS, 'V V R', NBORD*NDDLE, LWKS)

      DO 570 IMOD = 1,NBORD
        CALL RSADPA(MODMES,'L',1,'MASS_GENE',IMOD,0,IPULS,K8BID)
        MASG = ZR(IPULS)
        DO 560 IDDL = 1,NDDLE
          IPOS = (IDDL-1)*NBORD+IMOD
          IPOSI = (IMOD-1)*NDDLE+IDDL
          ZR(LTRAV-1+IPOSI)=ZR(LVSU-1+IPOS)*SQRT(MASG)
          ZR(LWKS-1+IPOS)=ZR(LVSU-1+IPOS)*SQRT(MASG)
560     CONTINUE
570   CONTINUE

C ===============================
C CALCUL DES TERMES DE LA <MATRICE ELEMENTAIRE>
C ===============================

      MAELM = NOMRES//'.MAEL_M'
      CALL WKVECT (MAELM, 'V V R', NDDLE*NDDLE, LMAELM)

      DO 420 IDDL = 1,NDDLE
        DO 430 JDDL = 1,NDDLE
          IPOS = (JDDL-1)*NDDLE+IDDL
          ZR(LMAELM-1+IPOS) = 0.D0
          DO 450 IMOD = 1,NBORD
            IPOSI = (IMOD-1)*NDDLE+IDDL
            IPOSJ = (JDDL-1)*NBORD+IMOD
            ZR(LMAELM-1+IPOS) = ZR(LMAELM-1+IPOS) +
     &         ZR(LTRAV-1+IPOSI)*ZR(LWKS-1+IPOSJ)
450       CONTINUE
430     CONTINUE
420   CONTINUE

C RANGEMENT DES RESULTATS DANS IAMPEE

      DO 700 IDDL = 1,NDDLE
        DO 710 JDDL = 1,IDDL
          IPOS = (IDDL-1)*IDDL/2 + JDDL
          IPOSI = (JDDL-1)*NDDLE + IDDL
          ZR(IAMPEE-1+IPOS) = ZR(LMAELM-1+IPOSI)
710     CONTINUE
700   CONTINUE

      CALL JEDETR (TRAV)
      CALL JEDETR (WKS)
      CALL JEDETR (MAELM)

C ===============================
C FIN CALCUL DES TERMES DES <MATRICE ELEMENTAIRE>
C ===============================

      CALL JEDEMA ( )
C
      END
