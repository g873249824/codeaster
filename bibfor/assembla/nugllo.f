      SUBROUTINE NUGLLO(NU,BASE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ASSEMBLA  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE SELLENET N.SELLENET
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXATR
      CHARACTER*14 NU
      CHARACTER*2 BASE
C----------------------------------------------------------------------
C---- OBJET : CREATION D'UN CHAMP .NUML A LA S.D. NUME_DDL NU
C             CE .NUML DECRIT LA NUMEROTATION LOCALE UTILE POUR MUMPS
C             FONCTIONNANT EN AVEC UNE MATRICE ASSEMBLEE DISTRIBUEE
C----------------------------------------------------------------------
C IN K14 NU     : NOM DU NUME_DDL
C IN K2   BASE  : BASE(1:1) : BASE POUR CREER LE NUME_DDL
C                    (SAUF LE PROF_CHNO)
C               : BASE(2:2) : BASE POUR CREER LE PROF_CHNO
C----------------------------------------------------------------------


      INTEGER NBMA,JCONX1,JCONX2,IER,IBID,JDIME
      INTEGER JNUMSD,RANG,NUMA,NBNOMA,NBNO,INO,NUNO
      INTEGER NEC,NLILI,NEQL,IDPRN1,IDPRN2,ILI,NTOT
      INTEGER IDPR21,IDPR22,NUMINC,NUMEC,NDDL
      INTEGER JTANO,NEQG,JTAEQ,IDDL,JNULG
      INTEGER JNUEQL,DDL1G,DDL1L,JDELGG,JDELGL,J1
      INTEGER JADNE,JADLI,IGREL,IEL,IGR,NEL,K1,N1,J,ILIB
      INTEGER JDELGT,JDDLP,NBPROC,VALI(1),JNUGL,IEQG

      CHARACTER*8 K8B,NOMA,PARTIT,MO
      CHARACTER*19 LIGRMO,NOMLIG
      CHARACTER*24 KBID
C----------------------------------------------------------------------
      INTEGER ZZPRNO,IZZPR2,ZZPRN2,NUNOEL,L
      INTEGER ZZNGEL,ZZNELG,ZZLIEL,ZZNSUP,ZZNEMA,JPRTK
      LOGICAL LDGREL,LDIST

C---- FONCTION D ACCES AUX ELEMENTS DES CHAMPS PRNO DES S.D. LIGREL
C     REPERTORIEES DANS LE CHAMP LILI DE NUME_DDL ET A LEURS ADRESSES
C     ZZPRNO(ILI,NUNOEL,1) = NUMERO DE L'EQUATION ASSOCIEES AU 1ER DDL
C                            DU NOEUD NUNOEL DANS LA NUMEROTATION LOCALE
C                            AU LIGREL ILI DE .LILI
C     ZZPRNO(ILI,NUNOEL,2) = NOMBRE DE DDL PORTES PAR LE NOEUD NUNOEL
C     ZZPRNO(ILI,NUNOEL,2+1) = 1ER CODE
C     ZZPRNO(ILI,NUNOEL,2+NEC) = NEC IEME CODE

C      IZZPRN(ILI,NUNOEL,L) = (IDPRN1-1+ZI(IDPRN2+ILI-1)+
C     &                       (NUNOEL-1)* (NEC+2)+L-1)
      ZZPRNO(ILI,NUNOEL,L)=ZI(IDPRN1-1+ZI(IDPRN2+ILI-1)+
     &                     (NUNOEL-1)*(NEC+2)+L-1)

      IZZPR2(ILI,NUNOEL,L)=(IDPR21-1+ZI(IDPR22+ILI-1)+
     &                     (NUNOEL-1)*(NEC+2)+L-1)
      ZZPRN2(ILI,NUNOEL,L)=ZI(IDPR21-1+ZI(IDPR22+ILI-1)+
     &                     (NUNOEL-1)*(NEC+2)+L-1)

C---- NBRE DE GROUPES D'ELEMENTS (DE LIEL) DU LIGREL ILI

      ZZNGEL(ILI)=ZI(JADLI+3*(ILI-1))

C---- NBRE D ELEMENTS DU LIEL IGREL DU LIGREL ILI DU REPERTOIRE TEMP.
C     .MATAS.LILI(DIM DU VECTEUR D'ENTIERS .LILI(ILI).LIEL(IGREL) )

      ZZNELG(ILI,IGREL)=ZI(ZI(JADLI+3*(ILI-1)+2)+IGREL)-
     &                  ZI(ZI(JADLI+3*(ILI-1)+2)+IGREL-1)-1

C---- FONCTION D ACCES AUX ELEMENTS DES CHAMPS LIEL DES S.D. LIGREL
C     REPERTORIEES DANS LE REPERTOIRE TEMPORAIRE .MATAS.LILI
C     ZZLIEL(ILI,IGREL,J) =
C      SI LA JIEME MAILLE DU LIEL IGREL DU LIGREL ILI EST:
C          -UNE MAILLE DU MAILLAGE : SON NUMERO DANS LE MAILLAGE
C          -UNE MAILLE TARDIVE : -POINTEUR DANS LE CHAMP .NEMA

      ZZLIEL(ILI,IGREL,J)=ZI(ZI(JADLI+3*(ILI-1)+1)-1+
     &                    ZI(ZI(JADLI+3*(ILI-1)+2)+IGREL-1)+J-1)

C---- NBRE DE NOEUDS DE LA MAILLE TARDIVE IEL ( .NEMA(IEL))
C     DU LIGREL ILI REPERTOIRE .LILI
C     (DIM DU VECTEUR D'ENTIERS .LILI(ILI).NEMA(IEL) )

      ZZNSUP(ILI,IEL)=ZI(ZI(JADNE+3*(ILI-1)+2)+IEL)-
     &                ZI(ZI(JADNE+3*(ILI-1)+2)+IEL-1)-1

C---- FONCTION D ACCES AUX ELEMENTS DES CHAMPS NEMA DES S.D. LIGREL
C     REPERTORIEES DANS LE REPERTOIRE TEMPO. .MATAS.LILI

      ZZNEMA(ILI,IEL,J)=ZI(ZI(JADNE+3*(ILI-1)+1)-1+
     &                  ZI(ZI(JADNE+3*(ILI-1)+2)+IEL-1)+J-1)

C----------------------------------------------------------------------

C---- SUPPRESSION DU .NUML
      CALL DETRSD('NUML_DDL',NU)

C---- RECHERCHE DU MAILLAGE ET DU NOMBRE DE MAILLES ET DE NOEUDS
      CALL DISMOI('F','NOM_MAILLA',NU,'NUME_DDL',IBID,NOMA,IER)
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8B,IER)
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNOMA,K8B,IER)

C---- ON VERIFIE QU'IL N'Y A PAS DE SUPER-MAILLES
      CALL JEVEUO(NOMA//'.DIME','L',JDIME)
      CALL ASSERT(ZI(JDIME+3).EQ.0)

C---- ON RAMENE EN MEMOIRE LES OBJETS DU .NUME :
C     CALCUL DE NEQG, NLILI
      CALL JEVEUO(NU//'     .ADNE','L',JADNE)
      CALL JEVEUO(NU//'     .ADLI','L',JADLI)
      CALL JEVEUO(NU//'.NUME.DELG','L',JDELGG)
      CALL JEVEUO(NU//'.NUME.PRNO','L',IDPRN1)
      CALL JEVEUO(JEXATR(NU//'.NUME.PRNO','LONCUM'),'L',IDPRN2)
      CALL JELIRA(NU//'.NUME.PRNO','NMAXOC',NLILI,KBID)
      CALL JEVEUO(NU//'.NUME.NEQU','L',J1)
      NEQG=ZI(J1)

C---- ON CREE LE TABLEAU &&NUGLLO.TAB_NO DONT LE ROLE EST DE SE SOUVENIR
C     SI UN NOEUD DU MAILLAGE A DEJA ETE TRAITE (ECONOMIE DE CPU)
      CALL WKVECT('&&NUGLLO.TAB_NO','V V I',NBNOMA,JTANO)

C---- CREATION DU TABLEAU &&NUGLLO.TAB_EQ QUI SERVIRA A CREER LE .NUEQ
      CALL WKVECT('&&NUGLLO.TAB_EQ','V V I',NEQG,JTAEQ)
      CALL WKVECT(NU//'.NUML.NUGL',BASE(1:1)//' V I',NEQG,JNUGL)

C---- RECHERCHE DU TABLEAU PARTITION
      CALL DISMOI('F','NOM_MODELE',NU,'NUME_DDL',IBID,MO,IER)
      CALL DISMOI('F','NOM_LIGREL',MO,'MODELE',IBID,LIGRMO,IER)
      CALL DISMOI('F','PARTITION',LIGRMO,'LIGREL',IBID,PARTIT,IER)
      LDIST=.FALSE.
      LDGREL=.FALSE.
      CALL MPICM0(RANG,NBPROC)
      IF (PARTIT.NE.' ') THEN
        CALL ASSERT(NBPROC.GT.1)
        LDIST=.TRUE.
        CALL JEVEUO(PARTIT//'.PRTK','L',JPRTK)
        LDGREL=ZK24(JPRTK-1+1) .EQ. 'GROUP_ELEM'
        IF (.NOT.LDGREL) THEN
          CALL JEVEUO(PARTIT//'.NUPROC.MAILLE','L',JNUMSD)
        ENDIF
      ENDIF
      CALL ASSERT(LDIST)

C---- ALLOCATION DU PRNO DE NUML :
      CALL JECREC(NU//'.NUML.PRNO',BASE(1:1)//' V I ','NU','CONTIG',
     &            'VARIABLE',NLILI)
      DO 10 ILI=1,NLILI
        CALL JELIRA(JEXNUM(NU//'.NUME.PRNO',ILI),'LONMAX',N1,KBID)
        CALL JEECRA(JEXNUM(NU//'.NUML.PRNO',ILI),'LONMAX',N1,KBID)
C       -- CALCUL DU NOMBRE D'ENTIERS CODES :
        IF (ILI.EQ.1)NEC=N1/NBNOMA-2
   10 CONTINUE

C---- LECTURE DE LA CONNECTIVITE
      CALL JEVEUO(NOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA//'.CONNEX','LONCUM'),'L',JCONX2)

C---- RECHERCHE DES ADRESSES DU .PRNO DE .NUML
      CALL JEVEUO(NU//'.NUML.PRNO','E',IDPR21)
      CALL JEVEUO(JEXATR(NU//'.NUML.PRNO','LONCUM'),'L',IDPR22)

      CALL WKVECT('&&NUGLLO.DDL_PRES','V V I',NEQG,JDDLP)
      CALL WKVECT('&&NUGLLO.DELG_TMP','V V I',NEQG,JDELGT)


C---- REMPLISSAGE DU .PRNO ET DU TABLEAU &&NUGLLO.TAB_EQ
C     QUI SERVIRA A CREER LE .NUEQ
C     --------------------------------------------------------------
      NUMINC=1
      DO 100 ILI=2,NLILI
        CALL JENUNO(JEXNUM(NU//'.NUME.LILI',ILI),NOMLIG)
        IF (ILI.EQ.2) CALL ASSERT(NOMLIG.EQ.LIGRMO)
        DO 90 IGR=1,ZZNGEL(ILI)
          IF (LDGREL .AND. MOD(IGR,NBPROC).NE.RANG)GOTO 90
          NEL=ZZNELG(ILI,IGR)
          DO 80 IEL=1,NEL
            NUMA=ZZLIEL(ILI,IGR,IEL)
            CALL ASSERT(NUMA.NE.0)
            IF (LDIST .AND. .NOT.LDGREL) THEN
              IF (NUMA.GT.0) THEN
                IF (ZI(JNUMSD-1+NUMA).NE.RANG)GOTO 80
              ELSE
                IF (RANG.NE.0)GOTO 80
              ENDIF
            ENDIF

            IF (NUMA.GT.0) THEN
C             -- MAILLE DU MAILLAGE :
              NBNO=ZI(JCONX2+NUMA)-ZI(JCONX2+NUMA-1)
              DO 40 INO=1,NBNO
                NUNO=ZI(JCONX1-1+ZI(JCONX2+NUMA-1)+INO-1)
                IF (ZI(JTANO+NUNO-1).EQ.1)GOTO 40

                DDL1G=ZZPRNO(1,NUNO,1)
                NDDL=ZZPRNO(1,NUNO,2)

                ZI(IZZPR2(1,NUNO,1))=NUMINC
                ZI(IZZPR2(1,NUNO,2))=NDDL
                DO 20 NUMEC=1,NEC
                  ZI(IZZPR2(1,NUNO,2+NUMEC))=ZZPRNO(1,NUNO,2+NUMEC)
   20           CONTINUE

                DO 30 IDDL=1,NDDL
                  ZI(JDDLP+DDL1G+IDDL-1)=1
                  ZI(JTAEQ+NUMINC-1+IDDL-1)=DDL1G+IDDL-1
   30           CONTINUE
                NUMINC=NUMINC+NDDL
                ZI(JTANO+NUNO-1)=1
   40         CONTINUE

            ELSE
C             -- MAILLE TARDIVE :
              NUMA=-NUMA
              NBNO=ZZNSUP(ILI,NUMA)
              DO 70 K1=1,NBNO
                NUNO=ZZNEMA(ILI,NUMA,K1)
                IF (NUNO.LT.0) THEN
                  NUNO=-NUNO
                  ILIB=ILI
                ELSE
                  IF (ZI(JTANO+NUNO-1).EQ.1)GOTO 70
                  ILIB=1
                  ZI(JTANO+NUNO-1)=1
                ENDIF
                DDL1G=ZZPRNO(ILIB,NUNO,1)
                IF (ZI(JDDLP+DDL1G).EQ.1)GOTO 70
                ZI(IZZPR2(ILIB,NUNO,1))=NUMINC
                NDDL=ZZPRNO(ILIB,NUNO,2)
                ZI(IZZPR2(ILIB,NUNO,2))=NDDL
                DO 50 NUMEC=1,NEC
                  ZI(IZZPR2(ILIB,NUNO,2+NUMEC))=ZZPRNO(ILIB,NUNO,
     &              2+NUMEC)
   50           CONTINUE
                DO 60 IDDL=1,NDDL
                  ZI(JDDLP+DDL1G+IDDL-1)=1
                  ZI(JTAEQ+NUMINC-1+IDDL-1)=DDL1G+IDDL-1
                  ZI(JDELGT+NUMINC-1+IDDL-1)=ZI(JDELGG+DDL1G-1+IDDL-1)
   60           CONTINUE
                NUMINC=NUMINC+NDDL
   70         CONTINUE
            ENDIF
   80     CONTINUE
   90   CONTINUE
  100 CONTINUE
      NEQL=NUMINC-1


C---- ON VERIFIE QUE CHAQUE PROC A AU MOINS UN DDL
      IF (NEQL.EQ.0) THEN
        VALI(1)=RANG
        CALL U2MESI('F','ASSEMBLA_4',1,VALI)
      ENDIF

C---- CREATION DU .NUML.DELG
      CALL WKVECT(NU//'.NUML.DELG',BASE(1:1)//' V I',NEQL,JDELGL)
      DO 110 J=1,NEQL
        ZI(JDELGL-1+J)=ZI(JDELGT-1+J)
  110 CONTINUE

C---- CREATION DU .NUML.NEQU
      CALL WKVECT(NU//'.NUML.NEQU',BASE(1:1)//' V I',2,J1)
      ZI(J1)=NEQL

C---- CREATION DU .NUML.NULG ET DU .NUML.NUEQ
      CALL WKVECT(NU//'.NUML.NULG',BASE(1:1)//' V I',NEQL,JNULG)
      CALL WKVECT(NU//'.NUML.NUEQ',BASE(1:1)//' V I',NEQL,JNUEQL)

      DO 140 ILI=1,NLILI
        CALL JELIRA(JEXNUM(NU//'.NUML.PRNO',ILI),'LONMAX',NTOT,KBID)
        NTOT=NTOT/(NEC+2)

        DO 130 INO=1,NTOT
          DDL1L=ZZPRN2(ILI,INO,1)
          NDDL=ZZPRN2(ILI,INO,2)
          DO 120 IDDL=1,NDDL
            IEQG=ZI(JTAEQ+DDL1L-1+IDDL-1)
            CALL ASSERT(IEQG.GT.0)

            ZI(JNULG+DDL1L-1+IDDL-1)=IEQG
            ZI(JNUEQL+DDL1L-1+IDDL-1)=DDL1L+IDDL-1
            ZI(JNUGL+IEQG-1)=DDL1L-1+IDDL
  120     CONTINUE
  130   CONTINUE
  140 CONTINUE

      CALL JEDETR('&&NUGLLO.TAB_NO')
      CALL JEDETR('&&NUGLLO.TAB_EQ')
      CALL JEDETR('&&NUGLLO.DELG_TMP')
      CALL JEDETR('&&NUGLLO.DDL_PRES')

      END
