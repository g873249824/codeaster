      SUBROUTINE NURENU(NU,BASE)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*14 NU
      CHARACTER*2  BASE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ASSEMBLA  DATE 18/12/2012   AUTEUR SELLENET N.SELLENET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE SELLENET N.SELLENET
C ----------------------------------------------------------------------
C  NUME_DDL - RENUMEROTATION POUR MATR_DISTR AVEC PETSC
C  --         ----
C ----------------------------------------------------------------------
C
C   LE BUT DE CETTE ROUTINE EST DE CREER L'OBJET .NUML.NLGP QUI
C    FOURNIT UNE NUMEROTATION GLOBALE CONTIGUE DU PDV PETSC
C
C IN  :
C   NU      K14  NOM DU NUME_DDL
C   BASE    K2   BASE(1:1) : BASE POUR CREER LE NUME_DDL
C                    (SAUF LE PROF_CHNO)
C                BASE(2:2) : BASE POUR CREER LE PROF_CHNO
C
      INTEGER      RANG,NBPROC,JPDDL,JNEQUL,NEQL,IDDL,NBRDDL,JNBDDL
      INTEGER      IPROC,NBDDPR,JNEQUG,NEQG,JNULG,DECALS,DECALD,IAUX
      INTEGER      JORDJO,NJOINT,NUMPRO,NBDDLJ,JJOINT,JNEWNU,NUMDDL
      INTEGER      NUM
C
      INTEGER*4    IBID4
C
      REAL*8       RBID
      PARAMETER    (RBID=0.D0)
C
      CHARACTER*4  CHNBJO
      CHARACTER*24 KBID,NONBDD,NOJOIN
      PARAMETER    (NONBDD='&&NUPODD.NBDDL')
C
      CALL JEMARQ()
C
      CALL MPICM0(RANG,NBPROC)
C
      CALL JEVEUO(NU//'.NUML.PDDL','L',JPDDL)
      CALL JEVEUO(NU//'.NUML.NEQU','L',JNEQUL)
      CALL JEVEUO(NU//'.NUME.NEQU','L',JNEQUG)
      NEQL=ZI(JNEQUL)
      NEQG=ZI(JNEQUG)
C
      NBRDDL=0
      DO 10 IDDL=0,NEQL-1
        IF ( ZI(JPDDL+IDDL).EQ.RANG ) NBRDDL=NBRDDL+1
   10 CONTINUE
C
      CALL WKVECT(NONBDD,'V V I',NBPROC,JNBDDL)
      ZI(JNBDDL+RANG)=NBRDDL
      CALL MPICM2('MPI_SUM',NONBDD)
      NBDDPR=ZI(JNBDDL)
      DO 20 IPROC=1,NBPROC-1
        ZI(JNBDDL+IPROC)=ZI(JNBDDL+IPROC)+NBDDPR
        NBDDPR=ZI(JNBDDL+IPROC)
   20 CONTINUE
      CALL ASSERT(NEQG.EQ.NBDDPR)
C
      CALL WKVECT(NU//'.NUML.NLGP',BASE(1:1)//' V I',NEQL,JNULG)
      DECALS=0
      IF ( RANG.NE.0 ) DECALS=ZI(JNBDDL+RANG-1)
      CALL JEDETR(NONBDD)
C
      DECALD=1
      DO 30 IDDL=0,NEQL-1
        IF ( ZI(JPDDL+IDDL).EQ.RANG ) THEN
          ZI(JNULG+IDDL)=DECALS+DECALD
          DECALD=DECALD+1
        ENDIF
   30 CONTINUE
C
      CALL JEVEUO(NU//'.NUML.JOIN','L',JORDJO)
      CALL JELIRA(NU//'.NUML.JOIN','LONMAX',NJOINT,KBID)
C
      DO 40, IAUX=0,NJOINT-1
        NUMPRO=ZI(JORDJO+IAUX)
        IF ( NUMPRO.EQ.-1 ) GOTO 40
C
        NUM=IAUX+1
        CALL CODENT(NUM,'G',CHNBJO)
        NOJOIN=NU//'.NUML.'//CHNBJO
        CALL JEVEUO(NOJOIN,'L',JJOINT)
        CALL JELIRA(NOJOIN,'LONMAX',NBDDLJ,KBID)
        CALL WKVECT('&&NURENU.TMP','V V I',NBDDLJ,JNEWNU)
        IF ( RANG.LT.NUMPRO ) THEN
C     !!! VERIFIER QU'ON EST OK SUR LES NUM GLOBAUX
          DO 50, IDDL=0,NBDDLJ-1
            NUMDDL=ZI(JJOINT+IDDL)
            ZI(JNEWNU+IDDL)=ZI(JNULG+NUMDDL-1)
   50     CONTINUE
          CALL MPIPPV('MPI_SEND','I',NBDDLJ,ZI(JNEWNU),
     &                IBID4,RBID,NUMPRO,IAUX)
        ELSE IF ( RANG.GT.NUMPRO ) THEN
C     !!! VERIFIER QU'ON EST OK SUR LES NUM GLOBAUX
          CALL MPIPPV('MPI_RECV','I',NBDDLJ,ZI(JNEWNU),
     &                IBID4,RBID,NUMPRO,IAUX)
          DO 60, IDDL=0,NBDDLJ-1
            NUMDDL=ZI(JJOINT+IDDL)
            ZI(JNULG+NUMDDL-1)=ZI(JNEWNU+IDDL)
   60     CONTINUE
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
        CALL JEDETR('&&NURENU.TMP')
   40 CONTINUE
C
      CALL JEDEMA()
C
      END
