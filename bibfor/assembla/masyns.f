      SUBROUTINE  MASYNS(MATAS)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ASSEMBLA  DATE 27/07/2009   AUTEUR LEFEBVRE J-P.LEFEBVRE 
C RESPONSABLE PELLET J.PELLET
      IMPLICIT NONE
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C  BUT :
C   TRANSFORMER UNE MATR_ASSE SYMETRIQUE EN UNE MATR_ASSE NON-SYMETRIQUE
C   POUR CELA, ON DUPPLIQUE LES VALEURS DE LA MOITIE SUPERIEURE
C
C  ARGUMENT :
C    MATAS K19  JXVAR : MATR_ASSE A RENDRE NON-SYMETRIQUE
C
C ========================= DEBUT DES DECLARATIONS ====================
      CHARACTER*(*)  MATAS
      CHARACTER*1    BASE,KTYP,KBID
      CHARACTER*19   MAT19
      INTEGER JREFA,I,NBLOC,IBID,LGBLOC,IDBLOI,IDBLOS

C -----  COMMUNS NORMALISES  JEVEUX
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32, JEXNUM
      CHARACTER*80 ZK80
C---------------------------------------------------------------------
      CALL JEMARQ()

      MAT19 = MATAS(1:19)
      CALL JELIRA(MAT19//'.VALM','CLAS',IBID,BASE)
      CALL JELIRA(MAT19//'.VALM','TYPE',IBID,KTYP)
      CALL ASSERT(KTYP.EQ.'R'.OR.KTYP.EQ.'C')
      CALL JEVEUO(MAT19//'.REFA','E',JREFA)
      CALL ASSERT(ZK24(JREFA-1+9).EQ.'MS')
      ZK24(JREFA-1+9)='MR'

      CALL JELIRA(MAT19//'.VALM','NMAXOC',NBLOC,KBID)
      CALL ASSERT(NBLOC.EQ.1)
      CALL JELIRA(JEXNUM(MAT19//'.VALM',1),'LONMAX',LGBLOC,KBID)


      CALL JEDUPO(MAT19//'.VALM','V','&&MASYNS.VALM',.FALSE.)
      CALL JEDETR(MAT19//'.VALM')
      CALL JEAGCO('&&MASYNS.VALM',MAT19//'.VALM',2,0,BASE)
      CALL JEDETR('&&MASYNS.VALM')


      CALL JEVEUO(JEXNUM(MAT19//'.VALM',1),'L',IDBLOS)
      CALL JEVEUO(JEXNUM(MAT19//'.VALM',2),'E',IDBLOI)
      IF (KTYP.EQ.'R') THEN
        DO 20 I = 1, LGBLOC
         ZR(IDBLOI+I-1) = ZR(IDBLOS+I-1)
 20     CONTINUE
      ELSE
        DO 21 I = 1, LGBLOC
         ZC(IDBLOI+I-1) = ZC(IDBLOS+I-1)
 21     CONTINUE
      ENDIF


      CALL JEDEMA()
      END
