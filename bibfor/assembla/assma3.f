      SUBROUTINE ASSMA3(LMASYM,LMESYM,TT,IGR,IEL,C1,
     &                  RANG,IFEL2,IFEL3,IFEL4,IFEL5,IFM,JFNUSD,JNUEQ,
     &                  JNUMSD,JRESL,JRSVI,NBVEL,NNOE,LFETI,LLICH,
     &                  LLICHD,LLICHP,LLIMO,LDIST,LDGREL,ILIMA,JADLI,
     &                  JADNE,JPRN1,JPRN2,JNULO1,JNULO2,JPOSD1,JPOSD2,
     &                  ADMODL,LCMODL,MODE,NEC,NMXCMP,NCMP,JSMHC,
     &                  JSMDI,ICONX1,ICONX2,LIGRE1,LIGRE2,INFOFE,JTMP2,
     &                  LGTMP2,JVALM,ILINU,IDD,ELLAGR,EXIVF,JDESC,
     &                  JREPE,JPTVOI,JELVOI,CODVOI)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ASSEMBLA  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PELLET
C TOLE CRP_21
      IMPLICIT NONE
C-----------------------------------------------------------------------
C BUT : ASSEMBLER UN ELEMENT FINI
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
      INCLUDE 'jeveux.h'
      LOGICAL LMASYM,LMESYM
      CHARACTER*19 LIGRE1,LIGRE2
      CHARACTER*(*) EXIVF
      CHARACTER*2 TT
      REAL*8 C1
      CHARACTER*24 INFOFE
      INTEGER IEL,ADMODL,RANG,COMPT,ICONX1,ICONX2,JADLI,JADNE
      INTEGER I1,I2,IAD1,IAD11,IAD2,IAD21
      INTEGER IAUX1,IAUX2,IAUX3,IDD,IFEL2,IFEL3,IFEL4,IFEL5
      INTEGER IFM,IGR,JFNUSD,ILIMA,ILINU,NBTERM
      INTEGER JFEL4,JNUEQ,JNULO1,JNUMSD,JPOSD1,JPRN1,JPRN2
      INTEGER JRESL,JRSVI,JSMDI,JSMHC,JTMP2,JVALM(2),LGTMP2
      INTEGER LCMODL,K1,K2,N2,N3,JNULO2,JPOSD2
      INTEGER MODE,N1,NBVEL,NCMP,NDDL1,NDDL2
      INTEGER NEC,NMXCMP,NNOE,NUMA,NK2,DECAEL,JDESC
      LOGICAL LFEL2,LFETI,LLICH,LLICHD,LLICHP,LLIMO,LDIST,LDGREL

      CHARACTER*16 CODVOI
      INTEGER NVOIMA,NSCOMA,JREPE,JPTVOI,JELVOI,NBVOIS
      PARAMETER(NVOIMA=100,NSCOMA=4)
      INTEGER LIVOIS(1:NVOIMA),TYVOIS(1:NVOIMA),NBNOVO(1:NVOIMA)
      INTEGER NBSOCO(1:NVOIMA),LISOCO(1:NVOIMA,1:NSCOMA,1:2)
      INTEGER NBI1MX,NBI1
      PARAMETER (NBI1MX=27*27*10*10)
      INTEGER TI1(NBI1MX)
      INTEGER TI2(NBI1MX)
C-----------------------------------------------------------------------
C     FONCTIONS FORMULES :
C-----------------------------------------------------------------------
      INTEGER ZZCONX,ZZLIEL
      INTEGER ZZNEMA,ZZPRNO,POSDD1,POSDD2,NUMLO1,NUMLO2
      INTEGER IMAIL,J,ILI,IGREL,NUNOEL,L,KNO,KDDL,K,ELLAGR
      INTEGER NNOV,IGR2,MODE2,NUMAV,KVOIS

      ZZCONX(IMAIL,J)=ZI(ICONX1-1+ZI(ICONX2+IMAIL-1)+J-1)
      ZZLIEL(ILI,IGREL,J)=ZI(ZI(JADLI+3*(ILI-1)+1)-1+
     &                    ZI(ZI(JADLI+3*(ILI-1)+2)+IGREL-1)+J-1)
      ZZNEMA(ILI,IEL,J)=ZI(ZI(JADNE+3*(ILI-1)+1)-1+
     &                  ZI(ZI(JADNE+3*(ILI-1)+2)+IEL-1)+J-1)
      ZZPRNO(ILI,NUNOEL,L)=ZI(JPRN1-1+ZI(JPRN2+ILI-1)+
     &                     (NUNOEL-1)*(NEC+2)+L-1)

      NUMLO1(KNO,K)=ZI(JNULO1-1+2*(KNO-1)+K)
      NUMLO2(KNO,K)=ZI(JNULO2-1+2*(KNO-1)+K)
      POSDD1(KNO,KDDL)=ZI(JPOSD1-1+NMXCMP*(KNO-1)+KDDL)
      POSDD2(KNO,KDDL)=ZI(JPOSD2-1+NMXCMP*(KNO-1)+KDDL)
C----------------------------------------------------------------------

      NBTERM=0
      NBI1=0
C     NUMA : NUMERO DE LA MAILLE
      NUMA=ZZLIEL(ILIMA,IGR,IEL)

C     -- MONITORING:
C     ----------------
      IF ((INFOFE(5:5).EQ.'T') .AND.LFETI) THEN
        WRITE (IFM,*)'<FETI/ASSMAM>','IDD',IDD,'LIGREL',LIGRE1,'ILIMA',
     &    ILIMA
        WRITE (IFM,*)'IGR',IGR,'IEL',IEL,'NUMA',NUMA
        IF (LLIMO)WRITE (IFM,*)'.LOGI',ZI(JFNUSD-1+ABS(NUMA))
        IF (LLICH) THEN
          IF (LLICHD) THEN
            WRITE (IFM,*)'LIGREL DE CHARGE '//'PROJETE DE FILS ',LIGRE2
          ELSE
            WRITE (IFM,*)'LIGREL DE CHARGE INITIAL'
          ENDIF
          WRITE (IFM,*)'MAILLE ET/OU NOEUD TARDIF'
        ENDIF
      ENDIF


C     -- SI FETI :
C     --------------
      IF (LFETI) THEN
C       SI ON EST DANS UN CALCUL FETI SUR UN SOUS-DOMAINE,
C       ON SE POSE LA QUESTION DE L'APPARTENANCE DE LA MAILLE NUMA
C       AU SOUS-DOMAINE IDD
        IF (NUMA.GT.0) THEN
          IF (LLICH) CALL U2MESS('F','ASSEMBLA_6')
C         ELLE APPARTIENT AU GREL IGR DU LIGREL PHYSIQUE ILIMA
          IF (ZI(JFNUSD-1+NUMA).NE.IDD)GOTO 110
        ELSE
C         ELLE APPARTIENT AU GREL IGR DU LIGREL TARDIF ILIMA
          IF (LLIMO) CALL U2MESS('F','ASSEMBLA_7')
        ENDIF
      ENDIF


C     -- SI LES CALCULS ONT ETE DISTRIBUES :
C     --------------------------------------
      IF (LDIST.AND..NOT.LDGREL) THEN
C       SI ON EST DANS UN CALCUL DISTRIBUE, ON SE POSE
C       LA QUESTION DE L'APPARTENANCE DE LA MAILLE NUMA AUX
C       DONNEES ATTRIBUEES AU PROC SI MAILLE PHYSIQUE: CHAQUE PROC
C       NE TRAITE QUE CELLES ASSOCIEES AUX SD QUI LUI SONT ATTRIBUES
C       SI MAILLE TARDIVE: ELLES SONT TRAITEES PAR LE PROC 0
        IF (NUMA.GT.0) THEN
          IF (ZI(JNUMSD-1+NUMA).NE.RANG)GOTO 110
        ELSE
          IF (RANG.NE.0)GOTO 110
        ENDIF
      ENDIF


C     ---------------------------------------------------------------
C     OBJET TEMPORAIRE .TMP2 :
C     .TMP2 : (1:2*DIM(MATR_ELEM)) POSITION RELATIVE DANS LES BLOCS
C     POUR LE I-EME REEL DE LA MATRICE ELEM :
C     TMP2(2*(I-1)+1) --> NUMERO DU BLOC OU S'INJECTE I.
C     TMP2(2*(I-1)+2) --> POSITION DANS LE BLOC DU REEL I.
C     ---------------------------------------------------------------




C     ----------------------------
C     1. CALCUL DE NDDL1 ET IAD1 :
C        + MISE A JOUR DE ELLAGR
C     ----------------------------


C     1.1. MAILLE DU MAILLAGE :
C     ------------------------
      IF (NUMA.GT.0) THEN

        DO 10 K1=1,NNOE
          N1=ZZCONX(NUMA,K1)
          IAD1=ZZPRNO(1,N1,1)
          CALL CORDDL(ADMODL,LCMODL,JPRN1,JPRN2,1,MODE,NEC,NCMP,N1,K1,
     &                NDDL1,ZI(JPOSD1-1+NMXCMP*(K1-1)+1))
          CALL ASSERT(NDDL1.LE.NMXCMP)
          ZI(JNULO1-1+2*(K1-1)+1)=IAD1
          ZI(JNULO1-1+2*(K1-1)+2)=NDDL1
   10   CONTINUE



C     1.2. MAILLE TARDIVE :
C     ------------------------
      ELSE
        NUMA=-NUMA

C       -- SI FETI & LIGREL TARDIF:
        IF (LLICHD) THEN
C         SI POUR FETI, MAILLE TARDIVE DUPLIQUEE, ON SE POSE
C         LA QUESTION DE L'APPARTENANCE DE CETTE MAILLE TARDIVE
C         AU SOUS-DOMAINE IDD VIA L'OBJET .FEL2 (C'EST LE PENDANT
C         DE &FETI.MAILLE.NUMSD POUR LES MAILLES DU MODELE)
C         LFEL2=.TRUE. ON ASSEMBLE LES CONTRIBUTIONS DE
C         CETTE MAILLE TARDIVE
C         LFEL2=.FALSE. ON LA SAUTE
          LFEL2=.FALSE.
          IAUX1=ZI(IFEL2+2*(NUMA-1)+1)
          IF (IAUX1.GT.0) THEN
C           C'EST UNE MAILLE TARDIVE NON SITUEE SUR UNE INTERFACE
C           ELLE CONCERNE LE SD, ON L'ASSEMBLE
            IF (IAUX1.EQ.IDD)LFEL2=.TRUE.
          ELSEIF (IAUX1.LT.0) THEN
C           C'EST UNE MAILLE TARDIVE SITUEE SUR UNE INTERFACE,
C           DONC PARTAGEE ENTRE PLUSIEURS SOUS-DOMAINES
            COMPT=0
            IAUX2=(ZI(IFEL4)/3)-1
            DO 20 JFEL4=0,IAUX2
              IAUX3=IFEL4+3*JFEL4+3
              IF (ZI(IAUX3).EQ.NUMA) THEN
                COMPT=COMPT+1
                IF (ZI(IAUX3-1).EQ.IDD) THEN
C                 ELLE CONCERNE LE SD, ON L'ASSEMBLE
                  LFEL2=.TRUE.
                  GOTO 30

                ENDIF
C               ON A LU TOUTES LES VALEURS, ON SORT DE LA BOUCLE
                IF (COMPT.EQ.-IAUX1)GOTO 30
              ENDIF
   20       CONTINUE
   30       CONTINUE
          ENDIF
C         ON SAUTE LA CONTRIBUTION
          IF (.NOT.LFEL2)GOTO 110
        ENDIF


C       MISE A JOUR DE ELLAGR :
C       LA MAILLE EST UN ELEMENT DE DUALISATION DE CL (LAGRANGE) SI:
C         - TRIA3 TARDIF (NNOE=3, NUMA <0)
C         - N1 EST UN NOEUD PHYSIQUE (>0)
C         - N2 ET N3 SONT DES NOEUDS TARDIFS PORTANT 1 CMP: 'LAGR'
C       --------------------------------------------------------------
        IF ((ELLAGR.EQ.0) .AND. (NNOE.EQ.3)) THEN
          N1=ZZNEMA(ILIMA,NUMA,1)
          N2=ZZNEMA(ILIMA,NUMA,2)
          N3=ZZNEMA(ILIMA,NUMA,3)
          IF ((N1.GT.0) .AND. (N2.LT.0) .AND. (N3.LT.0)) THEN
C           -- POUR L'INSTANT ON NE VERIFIE PAS QUE N2 ET N3 NE
C              PORTENT QUE LA CMP 'LAGR'
            ELLAGR=1
          ENDIF
        ENDIF


        DO 60 K1=1,NNOE
C         N1 : INDICE DU NOEUDS DS LE .NEMA DU LIGREL
C              DE CHARGE GLOBAL OU LOCAL
          N1=ZZNEMA(ILIMA,NUMA,K1)
          IF (N1.LT.0) THEN
C           NOEUD TARDIF
            N1=-N1

            IF (LLICHP) THEN
C             SI FETI & LIGREL TARDIF
C             SI POUR FETI, NOEUD TARDIF DUPLIQUE,
C             VERITABLE N1 DANS LE LIGREL DUPL
              IAUX1=ZI(IFEL3+2*(N1-1)+1)
              IF (IAUX1.GT.0) THEN
C               C'EST UN NOEUD TARDIF LIE A UN DDL PHYSIQUE
C               NON SUR L'INTERFACE
                N1=-ZI(IFEL3+2*(N1-1))

              ELSEIF (IAUX1.LT.0) THEN
C               C'EST UN NOEUD TARDIF LIE A UN DDL PHYSIQUE
C               DE L'INTERFACE
                IAUX2=(ZI(IFEL5)/3)-1
                DO 40 JFEL4=0,IAUX2
                  IAUX3=IFEL5+3*JFEL4+3
                  IF (ZI(IAUX3).EQ.N1) THEN
                    IF (ZI(IAUX3-1).EQ.IDD) THEN
C                     VOICI SON NUMERO LOCAL CONCERNANT LE SD
                      N1=-ZI(IAUX3-2)
                    ENDIF
                  ENDIF
   40           CONTINUE
              ENDIF
            ENDIF


C           -- NUMERO D'EQUATION DU PREMIER DDL DE N1
            IAD1=ZZPRNO(ILINU,N1,1)
            CALL CORDDL(ADMODL,LCMODL,JPRN1,JPRN2,ILINU,MODE,NEC,NCMP,
     &                  N1,K1,NDDL1,ZI(JPOSD1-1+NMXCMP*(K1-1)+1))

          ELSE
C           -- NOEUD PHYSIQUE
            IAD1=ZZPRNO(1,N1,1)
            CALL CORDDL(ADMODL,LCMODL,JPRN1,JPRN2,1,MODE,NEC,NCMP,N1,K1,
     &                  NDDL1,ZI(JPOSD1-1+NMXCMP*(K1-1)+1))
          ENDIF

          ZI(JNULO1-1+2*(K1-1)+1)=IAD1
          ZI(JNULO1-1+2*(K1-1)+2)=NDDL1
   60   CONTINUE
      ENDIF



C     -----------------------------------------------------------
C     2. ON BOUCLE SUR LES TERMES DE LA MATRICE ELEMENTAIRE
C        POUR NOTER OU ILS DOIVENT ETRE RECOPIES
C     -----------------------------------------------------------

      DO 100 K1=1,NNOE
        IAD1=NUMLO1(K1,1)
        NDDL1=NUMLO1(K1,2)
        IF (LMESYM) THEN
          NK2=K1
        ELSE
          NK2=NNOE
        ENDIF
        DO 90 I1=1,NDDL1
          DO 80 K2=1,NK2
            IAD2=NUMLO1(K2,1)
            NDDL2=NUMLO1(K2,2)
            IF (LMESYM .AND. (K2.EQ.K1))NDDL2=I1
            DO 70 I2=1,NDDL2
              IAD11=ZI(JNUEQ-1+IAD1+POSDD1(K1,I1)-1)
              IAD21=ZI(JNUEQ-1+IAD2+POSDD1(K2,I2)-1)
              NBI1=NBI1+1
              TI1(NBI1)=IAD11
              TI2(NBI1)=IAD21
   70       CONTINUE
   80     CONTINUE
   90   CONTINUE
  100 CONTINUE
      CALL ASSERT(NBI1.LE.NBI1MX)
      CALL ASRET2(LMASYM,JTMP2,LGTMP2,NBTERM,JSMHC,JSMDI,NBI1,TI1,TI2)


C     -- SI LE RESUELEM EST 'VOISIN_VF', IL FAUT ENCORE ASSEMBLER LES
C        CONTRIBUTIONS DES ELEMENTS VOISINS :
C     -----------------------------------------------------------------
      IF (EXIVF.EQ.'OUI') THEN
        CALL ASSERT (.NOT.LMESYM)
        CALL VOIUTI(NUMA,CODVOI,NVOIMA,NSCOMA,JREPE,JPTVOI,JELVOI,
     &                  NBVOIS,LIVOIS,TYVOIS,NBNOVO,NBSOCO,LISOCO)
        CALL ASSERT(NBVOIS.LE.30)
        DO 101, KVOIS=1,NBVOIS
          NUMAV=LIVOIS(KVOIS)
          NNOV =NBNOVO(KVOIS)
          IGR2=ZI(JREPE-1+2*(NUMAV-1)+1)
          MODE2=ZI(JDESC+IGR2+1)

          DO 102 K2=1,NNOV
            N2=ZZCONX(NUMAV,K2)
            IAD2=ZZPRNO(1,N2,1)
            CALL CORDDL(ADMODL,LCMODL,JPRN1,JPRN2,1,MODE2,NEC,NCMP,
     &                  N2,K2,NDDL2,ZI(JPOSD2-1+NMXCMP*(K2-1)+1))
            CALL ASSERT(NDDL2.LE.NMXCMP)
            ZI(JNULO2-1+2*(K2-1)+1)=IAD2
            ZI(JNULO2-1+2*(K2-1)+2)=NDDL2
  102     CONTINUE


          DO 103 K1=1,NNOE
            IAD1=NUMLO1(K1,1)
            NDDL1=NUMLO1(K1,2)
            DO 93 I1=1,NDDL1
              DO 83 K2=1,NNOV
                IAD2=NUMLO2(K2,1)
                NDDL2=NUMLO2(K2,2)
                DO 73 I2=1,NDDL2
                  IAD11=ZI(JNUEQ-1+IAD1+POSDD1(K1,I1)-1)
                  IAD21=ZI(JNUEQ-1+IAD2+POSDD2(K2,I2)-1)
                  CALL ASRETM(LMASYM,JTMP2,LGTMP2,NBTERM,JSMHC,
     &                        JSMDI,IAD11,IAD21)
   73           CONTINUE
   83         CONTINUE
   93       CONTINUE
  103     CONTINUE

  101   CONTINUE
      ENDIF



C     -----------------------------------------------------------
C     3. ON RECOPIE EFFECTIVEMENT LES TERMES:
C        (NBTERM CONTIENT LE NOMBRE DE TERMES (R/C) A TRAITER)
C     -----------------------------------------------------------
      IF (EXIVF.EQ.'OUI') THEN
        DECAEL=ZI(JRSVI-1+IEL)-1
      ELSE
        DECAEL=NBVEL*(IEL-1)
      ENDIF
      CALL ASCOPR(LMASYM,LMESYM,TT,JTMP2,NBTERM,JRESL+DECAEL,C1,JVALM)

  110 CONTINUE
      END
