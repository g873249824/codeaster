      SUBROUTINE ASCOPR(LMASYM,LMESYM,TT,JTMP2,NRMAX,JRESL,RCOEF,JVALM)
      IMPLICIT NONE
      CHARACTER*2 TT
      INTEGER JTMP2,NRMAX,JRESL
      INTEGER JVALM(2)
      LOGICAL LMASYM,LMESYM
      REAL*8 RCOEF
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ASSEMBLA  DATE 11/02/2008   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     ROUTINE QUI ACCUMULE LES TERMES ELEMENTAIRES DANS LES BLOCS DE LA
C     MATRICE ASSEMBLEE POUR UNE MATRICE REELLE
C-----------------------------------------------------------------------
C IN  K2  TT    : /'RR' : COPIE R->R
C                 /'CC' : COPIE C->C
C                 /'RC' : COPIE R->C
C IN  I   JTMP2 : ADRESSE JEVEUX DE L'OBJET ".TMP2"
C IN  I   NRMAX  : NOMBRE DE REELS A CHARGER.
C IN  I   JRESL : ADRESSE JEVEUX DE L'OBJET ".RESL(IEL)".
C IN  L   LMASYM   : .TRUE. => LA MATR_ASSE EST SYMETRIQUE (2 BLOCS)
C IN  L   LMESYM   : .TRUE. => LA MATRICE ELEMANTAIRE EST SYMETRIQUE
C IN  R   RCOEF   : COEFFICIENT REEL MULTIPLICATEUR.
C IN  I   JVALM  : LISTE DES ADRESSES DES BLOCS DE .VALM
C-----------------------------------------------------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
C-----------------------------------------------------------------------
      INTEGER IBLOC,IADLOC,J,JVALB,KFOIS,NBFOIS,PERMBL(2)
C-----------------------------------------------------------------------

C     -- SI ON ASSEMBLE UNE MATRICE ELEMENTAIRE SYMETRIQUE DANS
C        UNE MATRICE ASSEMBLEE NON SYMETRIQUE, IL FAUT COPIER 2 FOIS
      NBFOIS=1
      IF (LMASYM) THEN
        CALL ASSERT(LMESYM)
      ELSE
        IF (LMESYM) NBFOIS=2
      ENDIF


      DO 1, KFOIS=1,NBFOIS

        IF (KFOIS.EQ.1) THEN
          PERMBL(1)=1
          PERMBL(2)=2
        ELSE
          PERMBL(1)=2
          PERMBL(2)=1
        ENDIF


        IF (TT.EQ.'RR') THEN
C       ---------------------------
CCDIR$   IVDEP
          DO 10,J=1,NRMAX
            IBLOC=ZI(JTMP2-1+2*(J-1)+1)
            JVALB=JVALM(PERMBL(IBLOC))
            IADLOC=ZI(JTMP2-1+2*(J-1)+2)
            ZR(JVALB+IADLOC-1)=ZR(JVALB+IADLOC-1)+RCOEF*ZR(JRESL-1+J)
   10     CONTINUE


        ELSEIF (TT.EQ.'CC') THEN
C       ---------------------------
CCDIR$   IVDEP
          DO 11,J=1,NRMAX
            IBLOC=ZI(JTMP2-1+2*(J-1)+1)
            JVALB=JVALM(PERMBL(IBLOC))
            IADLOC=ZI(JTMP2-1+2*(J-1)+2)
            ZC(JVALB+IADLOC-1)=ZC(JVALB+IADLOC-1)+RCOEF*ZC(JRESL-1+J)
   11     CONTINUE


        ELSEIF (TT.EQ.'RC') THEN
C       ---------------------------
CCDIR$   IVDEP
          DO 12,J=1,NRMAX
            IBLOC=ZI(JTMP2-1+2*(J-1)+1)
            JVALB=JVALM(PERMBL(IBLOC))
            IADLOC=ZI(JTMP2-1+2*(J-1)+2)
            ZC(JVALB+IADLOC-1)=ZC(JVALB+IADLOC-1)+
     &                         DCMPLX(RCOEF*ZR(JRESL-1+J),0.D0)
   12     CONTINUE


        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF

1     CONTINUE

      END
