      SUBROUTINE ASMATR(NBMAT,TLIMAT,LICOEF,NU,SOLVEU,INFCHA,CUMUL,
     &                  BASE,TYPE,MATAZ)
C MODIF ASSEMBLA  DATE 17/10/2006   AUTEUR MABBAS M.ABBAS 
C RESPONSABLE VABHHTS J.PELLET
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE   
      CHARACTER*(*) BASE,MATAZ,TLIMAT(*),LICOEF,NU
      INTEGER       NBMAT,TYPE      
      CHARACTER*(*) SOLVEU,INFCHA
      CHARACTER*4   CUMUL
      

C-----------------------------------------------------------------------

C --- DESCRIPTION DES PARAMETRES

C IN  I   NBMAT2  : NOMBRE DE MATR_ELEM DE LA LISTE TLIMAT
C IN  K8  TLIMAT : LISTE DES MATR_ELEM
C IN  K24 LICOEF : NOM DU VECTEUR CONTENANT LES COEF. MULT.
C                  DES MATR_ELEM
C                  SI LICOEF=' ' ON PREND 1.D0 COMME COEF.
C IN  K14 NU     : NOM DU NUME_DDL
C IN  K19 SOLVEU : NOM DU SOLVEUR
C IN  K19 INFCHA : NOM DE L'OBJET INFCHA
C                  (POUR LES CHARGES CINEMATIQUES)
C IN  K4 CUMUL : 'ZERO' OU 'CUMU'
C                 'ZERO':SI UN OBJET DE NOM MATAS ET DE TYPE
C                        MATR_ASSE EXISTE ON ECRASE SON CONTENU.
C                 'CUMU':SI UN OBJET DE NOM MATAS ET DE TYPE
C                        MATR_ASSE EXISTE ON CUMULE DANS .VALM
C IN  K1  BASE   : BASE SUR LAQUELLE ON CREE L'OBJET MATAZ
C IN  I   TYPE  : TYPE DES MATRICES ELEMENTAIRES A ASSEMBLER
C                          1 --> REELLES
C                          2 --> COMPLEXES
C OUT K19  MATAZ : L'OBJET MATAZ DE TYPE MATR_ASSE EST CREE ET REMPLI
C IN  K19  MATAZ : NOM DE L'OBJET DE TYPE MATR_ASSE A CREER
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C       05/12/03 (OB): AJOUT POUR SOLVEUR FETI.
C----------------------------------------------------------------------
C     FONCTIONS JEVEUX
C-----------------------------------------------------------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR
C-----------------------------------------------------------------------
C     COMMUNS   JEVEUX
C-----------------------------------------------------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

      CHARACTER*1 TYPSYM,TYPMAT
      CHARACTER*2 TYMASY
      CHARACTER*3 SYME
      CHARACTER*7 SYMEL
      CHARACTER*8 MATEL,K8BID
      CHARACTER*24 METRES,LICOE2
      INTEGER NBMAT2,K
      CHARACTER*8   TLIMA2(150)
      CHARACTER*19 SOLVE2,INFCH2,MATAS
      INTEGER ILICOE,I,ISLVK,INDSYM,IRET,IBID,IDBGAV,ILIMAT,IER
      INTEGER IDLRE2,NBRESU,IRESU,JREFA
CDEB-------------------------------------------------------------------
      CALL JEMARQ()
      CALL JEDBG2(IDBGAV,0)

      SOLVE2 = SOLVEU
      INFCH2 = INFCHA
      LICOE2 = LICOEF
      MATAS  = MATAZ
      NBMAT2 = NBMAT

      IF (CUMUL.EQ.'ZERO') CALL DETRSD('MATR_ASSE',MATAS)
      IF (NBMAT2.GT.150) CALL ASSERT(.FALSE.)
      DO 10,K = 1,NBMAT2
        TLIMA2(K) = TLIMAT(K)
   10 CONTINUE


C     -- TRAITEMENT DE LA LISTE DES COEF. MULTIPLICATEURS :
      IF (LICOE2.EQ.' ') THEN
        CALL WKVECT('&&ASMATR.LICOEF','V V R',NBMAT2,ILICOE)
        DO 20 I = 1,NBMAT2
          ZR(ILICOE+I-1) = 1.D0
   20   CONTINUE
      ELSE
        CALL JEVEUO(LICOE2,'L',ILICOE)
      END IF


      CALL WKVECT('&&ASMATR.LMATEL','V V K8',NBMAT2,ILIMAT)

C PREPARATION DE LA LISTE DE MATR_ELEM RESYMETRISES SI NECESSAIRES
      INDSYM = 0
      TYPSYM = TYPMAT(NBMAT2,TLIMA2)

      CALL JEVEUO(SOLVE2//'.SLVK','L',ISLVK)
      SYME = ZK24(ISLVK+5-1)
      IF (SYME.EQ.'OUI') THEN
        DO 30 I = 1,NBMAT2
          CALL DISMOI('F','TYPE_MATRICE',TLIMA2(I),'MATR_ELEM',IBID,
     &                SYMEL,IER)
          IF (SYMEL.EQ.'NON_SYM') THEN
            CALL GCNCON('.',MATEL)
            ZK8(ILIMAT+I-1) = MATEL
            CALL RESYME(TLIMA2(I),BASE,MATEL)
          ELSE
            ZK8(ILIMAT+I-1) = TLIMA2(I)
          END IF
   30   CONTINUE
        TYPSYM = 'S'
      ELSE
        DO 40 I = 1,NBMAT2
          ZK8(ILIMAT+I-1) = TLIMA2(I)
   40   CONTINUE
      END IF


C REMPLISSAGE DE LA MATR_ASSE MATAS

      METRES = ZK24(ISLVK)



      IF (METRES.EQ.'GCPC') THEN
C     ================================
        IF (TYPSYM.EQ.'S') THEN
          CALL ASSMAM(BASE,MATAS,NBMAT2,ZK8(ILIMAT),ZR(ILICOE),NU,
     &              CUMUL,  TYPE)
        ELSE IF (TYPSYM.EQ.'N') THEN
          CALL U2MESK('F','ASSEMBLA_1',1,TYPSYM)
        END IF


      ELSE
C     ====
        CALL JEEXIN(MATAS//'.REFA',IRET)
        IF (IRET.GT.0) THEN
          CALL JEVEUO(MATAS//'.REFA','L',JREFA)
          TYMASY=ZK24(JREFA-1+9)
          IF (TYMASY.EQ.'MR') THEN
            INDSYM = 1
          END IF
        END IF

        IF (TYPSYM.EQ.'S' .AND. INDSYM.EQ.0) THEN
          CALL ASSMAM(BASE,MATAS,NBMAT2,ZK8(ILIMAT),ZR(ILICOE),NU,
     &              CUMUL,  TYPE)
        ELSE IF (TYPSYM.EQ.'N' .OR. INDSYM.EQ.1) THEN
          IF (METRES.EQ.'FETI')
     &      CALL U2MESS('F','ASSEMBLA_2')
          CALL JEEXIN(MATAS//'.REFA',IRET)
          IF (IRET.NE.0) THEN
            CALL JEVEUO(MATAS//'.REFA','L',JREFA)
            TYMASY=ZK24(JREFA-1+9)
            IF (TYMASY.EQ.'MS') THEN
              CALL MASYNS(MATAS)
            END IF
          END IF
          CALL ASSMMN(BASE,MATAS,NBMAT2,ZK8(ILIMAT),ZR(ILICOE),NU,
     &               CUMUL, TYPE)
        END IF

      END IF



C- TRAITEMENT DES CHARGES CINEMATIQUES :
C  ======================================
      CALL JEVEUO(MATAS//'.REFA','L',JREFA)
      CALL ASSERT(ZK24(JREFA-1+3).NE.'ELIMF')
      CALL ASCIMA(INFCH2//'.LCHA',INFCH2//'.INFC',NU,MATAS,CUMUL)
      CALL JEDETR('&&ASMATR.LICOEF')


C     -- MENAGE :
C     -------------------
      IF (SYME.EQ.'OUI') THEN
        DO 60 I = 1,NBMAT2
          CALL DISMOI('F','TYPE_MATRICE',TLIMA2(I),'MATR_ELEM',IBID,
     &                SYMEL,IER)
          IF (SYMEL.EQ.'NON_SYM') THEN
            CALL JEVEUO(ZK8(ILIMAT+I-1)//'.LISTE_RESU','E',IDLRE2)
            CALL JELIRA(ZK8(ILIMAT+I-1)//'.LISTE_RESU','LONUTI',NBRESU,
     &                  K8BID)
            DO 50 IRESU = 1,NBRESU
              CALL JEDETR(ZK24(IDLRE2+IRESU-1) (1:8)//
     &                    '           .DESC')
              CALL JEDETR(ZK24(IDLRE2+IRESU-1) (1:8)//
     &                    '           .NOLI')
              CALL JEDETR(ZK24(IDLRE2+IRESU-1) (1:8)//
     &                    '           .RESL')
   50       CONTINUE
            CALL JEDETR(ZK8(ILIMAT+I-1)//'.LISTE_RESU')
            CALL JEDETR(ZK8(ILIMAT+I-1)//'.REFE_RESU')
          END IF
   60   CONTINUE
      END IF



C     CALL VERISD('MATRICE',MATAS)
      CALL JEDETR('&&ASMATR.LMATEL')
      CALL JEDBG2(IBID,IDBGAV)
      CALL JEDEMA()
      END
