      SUBROUTINE PROMOR(NUZ,BASE)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*(*) NUZ
      CHARACTER*1 BASE
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ASSEMBLA  DATE 10/07/2007   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     CALCUL DE LA STRUCTURE COMPACTE D'UNE MATRICE SYMETRIQUE
C     ------------------------------------------------------------------
C IN  K*14 NU     : NOM DE L'OBJET DE S.D. NUME_DDL A COMPLETER.
C OUT K*14 NU     :L'OBJET NU DE S.D. NUME_DDL EST COMPLETE D'UN .SLC*
C             'S':SYMETRIQUE
C             'A':NON SYMETRIQUE A PROFIL SYMETRIQUE (PAS IMPLEMENTE)
C IN  K1  BASE    : BASE DE CREATION DU STOCKAGE
C     ------------------------------------------------------------------
C     ------------------------------------------------------------------

C     ------------------------------------------------------------------
C     FONCTIONS JEVEUX
C     ------------------------------------------------------------------
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR
C     ------------------------------------------------------------------
C     COMMUNS   JEVEUX
C     ------------------------------------------------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      CHARACTER*8 ZK8,MA,MO,KBID,EXIELE
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C-----------------------------------------------------------------------
C----------------------------------------------------------------------
C     VARIABLES LOCALES
      CHARACTER*14 NU
      LOGICAL LFETI
C     ------------------------------------------------------------------
      PARAMETER (NNOEMA=100)
C     NNOEMA : NBRE MAXI DE NOEUDS PAR MAILLE ADMIS PAR LE S.P.
      PARAMETER (NDDLMA=100)
C     NNOEMA : NBRE MAXI DE DDLS PAR NOEUD ADMIS PAR LE S.P.
      INTEGER POSDDL(NDDLMA,NNOEMA)
      CHARACTER*24 KNULIL,NOMLI,KSMHC,KSMDI,KHBID,KSUIV
      INTEGER HMAX,ITBLOC
C-----------------------------------------------------------------------
C     FONCTIONS LOCALES D'ACCES AUX DIFFERENTS CHAMPS DES
C     S.D. MANIPULEES DANS LE SOUS PROGRAMME
C-----------------------------------------------------------------------
      INTEGER ZZCONX,ZZNBNE,ZZLIEL,ZZNGEL,ZZNSUP,ZZNELG
      INTEGER ZZNEMA,ZZPRNO
      INTEGER VALI(2)
C---- FONCTION D ACCES AU CHAMP CONNEX DE LA S.D. MAILLA DE TYPE
C     MAILLAGE
C     ZZCONX(IMAIL,J) = NUMERO DANS LA NUMEROTATION DU MAILLAGE
C         DU NOEUD J DE LA MAILLE IMAIL
      ZZCONX(IMAIL,J) = ZI(ICONX1-1+ZI(ICONX2+IMAIL-1)+J-1)

C---- NBRE DE NOEUDS DE LA MAILLE IMAIL DU MAILLAGE

      ZZNBNE(IMAIL) = ZI(ICONX2+IMAIL) - ZI(ICONX2+IMAIL-1)

C---- FONCTION D ACCES AUX ELEMENTS DES CHAMPS LIEL DES S.D. LIGREL
C     REPERTORIEES DANS LE REPERTOIRE TEMPORAIRE .MATAS.LILI
C     ZZLIEL(ILI,IGREL,J) =
C      SI LA JIEME MAILLE DU LIEL IGREL DU LIGREL ILI EST:
C          -UNE MAILLE DU MAILLAGE : SON NUMERO DANS LE MAILLAGE
C          -UNE MAILLE TARDIVE : -POINTEUR DANS LE CHAMP .NEMA

      ZZLIEL(ILI,IGREL,J) = ZI(ZI(IADLIE+3* (ILI-1)+1)-1+
     &                      ZI(ZI(IADLIE+3* (ILI-1)+2)+IGREL-1)+J-1)

C---- NBRE DE GROUPES D'ELEMENTS (DE LIEL) DU LIGREL ILI

      ZZNGEL(ILI) = ZI(IADLIE+3* (ILI-1))

C---- NBRE DE NOEUDS DE LA MAILLE TARDIVE IEL ( .NEMA(IEL))
C     DU LIGREL ILI REPERTOIRE .LILI
C     (DIM DU VECTEUR D'ENTIERS .LILI(ILI).NEMA(IEL) )

      ZZNSUP(ILI,IEL) = ZI(ZI(IADNEM+3* (ILI-1)+2)+IEL) -
     &                  ZI(ZI(IADNEM+3* (ILI-1)+2)+IEL-1) - 1

C---- NBRE D ELEMENTS DU LIEL IGREL DU LIGREL ILI DU REPERTOIRE TEMP.
C     .MATAS.LILI(DIM DU VECTEUR D'ENTIERS .LILI(ILI).LIEL(IGREL) )

      ZZNELG(ILI,IGREL) = ZI(ZI(IADLIE+3* (ILI-1)+2)+IGREL) -
     &                    ZI(ZI(IADLIE+3* (ILI-1)+2)+IGREL-1) - 1

C---- NBRE D ELEMENTS SUPPLEMENTAIRE (.NEMA) DU LIGREL ILI DU
C     REPERTOIRE TEMPORAIRE .MATAS.LILI


C---- FONCTION D ACCES AUX ELEMENTS DES CHAMPS NEMA DES S.D. LIGREL
C     REPERTORIEES DANS LE REPERTOIRE TEMPO. .MATAS.LILI

      ZZNEMA(ILI,IEL,J) = ZI(ZI(IADNEM+3* (ILI-1)+1)-1+
     &                    ZI(ZI(IADNEM+3* (ILI-1)+2)+IEL-1)+J-1)

C---- FONCTION D ACCES AUX ELEMENTS DES CHAMPS PRNO DES S.D. LIGREL
C     REPERTORIEES DANS NU.LILI DE LA S.D. NUME_DDL ET A LEURS ADRESSES
C     ZZPRNO(ILI,NUNOEL,1) = NUMERO DE L'EQUATION ASSOCIEES AU 1ER DDL
C                            DU NOEUD NUNOEL DANS LA NUMEROTATION LOCALE
C                            AU LIGREL ILI DE .LILI
C     ZZPRNO(ILI,NUNOEL,2) = NOMBRE DE DDL PORTES PAR LE NOEUD NUNOEL
C     ZZPRNO(ILI,NUNOEL,2+1) = 1ER CODE
C     ZZPRNO(ILI,NUNOEL,2+NEC) = NEC IEME CODE

      ZZPRNO(ILI,NUNOEL,L) = ZI(IDPRN1-1+ZI(IDPRN2+ILI-1)+
     &                       (NUNOEL-1)* (NEC+2)+L-1)
C----------------------------------------------------------------------
C                DEBUT DES INSTRUCTIONS
C----------------------------------------------------------------------



C-----RECUPERATION DU NIVEAU D'IMPRESSION

      CALL INFNIV(IFM,NIV)

C FETI OR NOT FETI ?
      CALL JEEXIN('&FETI.MAILLE.NUMSD',IRET)
      IF (IRET.NE.0) THEN
        CALL INFMUE()
        CALL INFNIV(IFM,NIV)
        LFETI=.TRUE.
      ELSE
        LFETI=.FALSE.
      ENDIF

C----------------------------------------------------------------------
      CALL JEMARQ()
      NU = NUZ

      CALL DISMOI('F','NOM_MODELE',NU,'NUME_DDL',IBID,MO,IER)
      IF (MO.EQ.' ') THEN
        NBSS=0
      ELSE
        CALL DISMOI('F','NB_SS_ACTI',MO,'MODELE',NBSS,KBID,IERD)
      ENDIF
      CALL DISMOI('F','NUM_GD_SI',NU,'NUME_DDL',IGD,KBID,IER)
      CALL DISMOI('F','NOM_MAILLA',NU,'NUME_DDL',IBID,MA,IER)

      CALL JEEXIN(MA//'.CONNEX',IRET)
      IF (IRET.GT.0) THEN
        CALL JEVEUO(MA//'.CONNEX','L',ICONX1)
        CALL JEVEUO(JEXATR(MA//'.CONNEX','LONCUM'),'L',ICONX2)
      END IF
      CALL JEVEUO(NU//'     .ADNE','E',IADNEM)
      CALL JEVEUO(NU//'     .ADLI','E',IADLIE)
      CALL JEVEUO(NU//'.NUME.NEQU','L',IADEQU)
      CALL JELIRA(NU//'.NUME.PRNO','NMAXOC',NLILI,KBID)
      CALL JEVEUO(NU//'.NUME.PRNO','L',IDPRN1)
      CALL JEVEUO(JEXATR(NU//'.NUME.PRNO','LONCUM'),'L',IDPRN2)
      CALL JEVEUO(NU//'.NUME.NUEQ','L',JNUEQ)

      NEC = NBEC(IGD)
      NEQU = ZI(IADEQU)


      KSMHC = NU//'.SMOS.SMHC'
      KSMDI = NU//'.SMOS.SMDI'

C---- CREATION DU TABLEAU DE TRAVAIL ISUIV ET DU .SMHC
C         IIMAX   LONGUEUR MAXIMUM ADMISSIBLE DE KHBID ET ISUIV
C                 DANS LA ROUTINE MOINSR IIMAX EST AUGMENTE SI NECESS.
C         KHBID   TABLE DES NUMEROS DE LIGNE
C         ISUIV   TABLE DES CHAINAGES DE LA STRUCTURE CHAINEE
C                (SMDI,SMHC,ISUIV) QUI EST CONTRUITE AVANT D'OBTENIR LA
C                   STRUCTURE COMPACTE (SMDI,SMHC) DE LA MATRICE .
C         LM      TABLEAU DES NUMEROS GLOBAUX DES DDLS
      KHBID = '&&PROMOR.SMOS.SMHC'
      KSUIV = '&&PROMOR.ANCIEN.ISUIV'

C     ON COMMENCE AVEC IIMAX=10
      IIMAX = 10
      CALL WKVECT(KHBID,'V V I',IIMAX,JHBID)
      CALL WKVECT(KSUIV,'V V I',IIMAX,JSUIV)


C     -- ALLOCATION DU VECTEUR &&PROMOR.ANCIEN.LM
C        MXDDLT= NOMBRE MAXIMUM DE DDLS PORTES PAR UNE MAILLE OU UNE
C                SOUS-STRUCTURE STATIQUE
C     ----------------------------------------------------------------
C     A L'HEURE ACTUELLE, L'ELEMENT PORTANT LE PLUS DE DDLS EST LE
C     MECA_XHT_HEXA20 (360 DDLS), AUXQUELS IL FAUT RAJOUTER LES 
C     DDLS DES MAILLES CONNECTÉES -> ON ABOUTIT A 420 DDLS AU PIRE
      MXDDLT = 420
      IF (NBSS.GT.0) THEN
        CALL DISMOI('F','NB_SM_MAILLA',MO,'MODELE',NBSMA,KBID,IERD)
        CALL JEVEUO(MO//'.MODELE    .SSSA','L',IASSSA)
        DO 10,IMA = 1,NBSMA
          IF (ZI(IASSSA-1+IMA).EQ.0) GO TO 10
          CALL JELIRA(JEXNUM(MA//'.SUPMAIL',IMA),'LONMAX',NNOE,KBID)
          NDDLT = 15*NNOE
          MXDDLT = MAX(MXDDLT,NDDLT)
   10   CONTINUE
      END IF
      CALL WKVECT('&&PROMOR.ANCIEN.LM','V V I',MXDDLT,IDLM)



C---- NOM DES PRINCIPAUX OBJETS JEVEUX LIES AU CHAMP .NUME DE NU
      KNULIL = NU//'.NUME.LILI'

C---- ALLOCATION DE .SMOS.SMDI
      CALL WKVECT(KSMDI,BASE//' V I',NEQU,JSMDI)

C---- INITIALISATION DES TABLEAUX POUR LE STOCKAGE MORSE

C     ATTENTION:   PENDANT LA CONSTRUCTION DE LA STRUCTURE CHAINEE
C                  (ZI(JSMDI+.),SMHC,ISUIV) DE LA MATRICE ON A
C     ZI(JSMDI+.): POINTEUR DEBUT DE CHAINE
C     ZI(JSMHC-1+II) : MAILLON QUI CONTIENT L'INDICE COLONNE
C                       DE LA CHAINE II
C     ISUIV(II)     : MAILLON SUIVANT DE LA MEME CHAINE.

C     NEQX   : COMPTEUR DU NOMBRE D'EQUATION (CONTROLE)
      NEQX = 0

C     IILIB  : 1-ERE PLACE LIBRE
      IILIB = 1


C---- CALCUL DES HAUTEURS DE COLONNE : .MATAS.SMHC(J)
C     ON SUPPOSE QUE '&MAILLA' EST LE 1ER NOM DU REPERTOIRE .LILI
C     CE QUI A PRIORI EST VRAI PAR CONSTRUCTION
      ILIMNU = 1

C---- BOUCLE SUR LES LIGREL DU REPERTOIRE KNULIL

      DO 130 ILI = 2,NLILI
        CALL JENUNO(JEXNUM(KNULIL,ILI),NOMLI)
        IF (NOMLI(1:8).EQ.MO) THEN
          CALL DISMOI('F','NB_SS_ACTI',MO,'MODELE',NBSS,KBID,IERD)
        ELSE
          NBSS = 0
        END IF


C       -- TRAITEMENT DES ELEMENTS FINIS CLASSIQUES:
C       --------------------------------------------
        CALL DISMOI('F','EXI_ELEM',NOMLI,'LIGREL',IBID,EXIELE,IERD)
        IF (EXIELE(1:3).EQ.'NON') GO TO 145

        DO 80 IGR = 1,ZZNGEL(ILI)
          NEL = ZZNELG(ILI,IGR)
          DO 70 IEL = 1,NEL
            NDDLT = 0
            NUMA = ZZLIEL(ILI,IGR,IEL)
            IF (NUMA.GT.0) THEN
              NNOE = ZZNBNE(NUMA)
              DO 30 K1 = 1,NNOE
                N1 = ZZCONX(NUMA,K1)
                IAD1 = ZZPRNO(ILIMNU,N1,1)
                NDDL1 = ZZPRNO(ILIMNU,N1,2)
                DO 20 IDDL = 1,NDDL1
                  ZI(IDLM+NDDLT+IDDL-1) = ZI(JNUEQ-1+IAD1+IDDL-1)
   20           CONTINUE
                NDDLT = NDDLT + NDDL1
   30         CONTINUE
            ELSE
              NUMA = -NUMA
              NNOE = ZZNSUP(ILI,NUMA)
              DO 50 K1 = 1,NNOE
                N1 = ZZNEMA(ILI,NUMA,K1)
                IF (N1.LT.0) THEN
                  N1 = -N1
                  IAD1 = ZZPRNO(ILI,N1,1)
                  NDDL1 = ZZPRNO(ILI,N1,2)
                ELSE
                  IAD1 = ZZPRNO(ILIMNU,N1,1)
                  NDDL1 = ZZPRNO(ILIMNU,N1,2)
                END IF
                DO 40 IDDL = 1,NDDL1
                  ZI(IDLM+NDDLT+IDDL-1) = ZI(JNUEQ-1+IAD1+IDDL-1)
   40           CONTINUE
                NDDLT = NDDLT + NDDL1
   50         CONTINUE
            END IF

C           -- TRI EN ORDRE CROISSANT POUR L'INSERTION DES COLONNES
            CALL ASSERT(NDDLT.LT.MXDDLT)
            CALL UTTRII(ZI(IDLM),NDDLT)

C           -- INSERTION DES COLONNES DE L'ELEMENT DANS
C               LA STRUCTURE CHAINEE
            DO 60 IDDL = 0,NDDLT - 1
              JDDL = JSMDI + ZI(IDLM+IDDL) - 1
              IF (ZI(JDDL).EQ.0) NEQX = NEQX + 1
              CALL MOINSR(ZI(IDLM+IDDL),IDDL+1,IDLM,JSMDI,JSUIV,KSUIV,
     &                    JHBID,KHBID,IILIB,IIMAX)
   60       CONTINUE
   70     CONTINUE
   80   CONTINUE


C         -- TRAITEMENT DES SOUS-STRUCTURES STATIQUES :
C         ---------------------------------------------
  145    CONTINUE
        IF (NBSS.GT.0) THEN
          CALL DISMOI('F','NB_SM_MAILLA',MO,'MODELE',NBSMA,KBID,IERD)
          CALL JEVEUO(MO//'.MODELE    .SSSA','L',IASSSA)
          DO 120,IMA = 1,NBSMA
            IF (ZI(IASSSA-1+IMA).EQ.0) GO TO 120
            NDDLT = 0
            CALL JEVEUO(JEXNUM(MA//'.SUPMAIL',IMA),'L',IAMAIL)
            CALL JELIRA(JEXNUM(MA//'.SUPMAIL',IMA),'LONMAX',NNOE,KBID)
            DO 100 K1 = 1,NNOE
              N1 = ZI(IAMAIL-1+K1)
              CALL ASSERT(N1.NE.0)
              IAD1 = ZZPRNO(ILIMNU,N1,1)
              NDDL1 = ZZPRNO(ILIMNU,N1,2)
              DO 90 IDDL = 1,NDDL1
                ZI(IDLM+NDDLT+IDDL-1) = ZI(JNUEQ-1+IAD1+IDDL-1)
   90         CONTINUE
              NDDLT = NDDLT + NDDL1
  100       CONTINUE
            CALL ASSERT(NDDLT.LT.MXDDLT)
            CALL UTTRII(ZI(IDLM),NDDLT)
            DO 110 IDDL = 0,NDDLT - 1
              JDDL = JSMDI + ZI(IDLM+IDDL) - 1
              IF (ZI(JDDL).EQ.0) NEQX = NEQX + 1
              CALL MOINSR(ZI(IDLM+IDDL),IDDL+1,IDLM,JSMDI,JSUIV,KSUIV,
     &                    JHBID,KHBID,IILIB,IIMAX)
  110       CONTINUE
  120     CONTINUE
        END IF
  130 CONTINUE

      IF (NEQX.NE.NEQU) THEN
        VALI (1) = NEQU
        VALI (2) = NEQX
        CALL U2MESG('F', 'ASSEMBLA_65',0,' ',2,VALI,0,0.D0)
      END IF
      CALL JEDETR('&&PROMOR.ANCIEN.LM   ')

C     DESIMBRIQUATION DE CHAINES POUR OBTENIR LA STRUCTURE COMPACTE
C     (ZI(JSMDI),SMHC) DE LA MATRICE

      CALL WKVECT(KSMHC,BASE//' V I',IIMAX,JSMHC)
      CALL MOINIP(NEQX,NCOEF,ZI(JSMDI),ZI(JSUIV),ZI(JHBID),ZI(JSMHC))

      CALL JEDETR('&&PROMOR.ANCIEN.ISUIV')

C---- LA TAILE DU BLOC EST EGALE AU NOMBRE DE COEFF. STOCKES
      ITBLOC = NCOEF
      CALL JEDETR(KHBID)


C---- HMAX = HAUTEUR MAXIMUM DES COLONNES

      HMAX = 0
      DO 140 IEQUA = 1,NEQU - 1
        HMAX = MAX(HMAX,ZI(JSMDI+IEQUA)-ZI(JSMDI+IEQUA-1))
  140 CONTINUE
      IF (NIV.GE.1) THEN
        WRITE (IFM,*) '--- NOMBRE DE COEFFICIENTS NON NULS DANS LA '//
     &    'MATRICE : ',NCOEF
C        WRITE(IFM,*)'--- HAUTEUR MAXIMUM D''UNE COLONNE : ',HMAX
      END IF
      NBLC = 1


C---- CREATION DE L'OBJET .IABL (POUR LES PERFS DE CHARGER):

C---- CREATION ET REMPLISSAGE DE .SMDE

      CALL WKVECT(NU//'.SMOS.SMDE',BASE//' V I',6,JSMDE)
      ZI(JSMDE-1+1) = NEQU
      ZI(JSMDE-1+2) = ITBLOC
      ZI(JSMDE-1+3) = NBLC

      IF (LFETI) CALL INFBAV()
      CALL JEDEMA()
  111 FORMAT (1X,'LIGNE ',I4)
  101 FORMAT (1X,12I5)
      END
