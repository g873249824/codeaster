      SUBROUTINE ARLCHA(DIME  ,NOMARL,CINE  ,NOM1  ,NOM2  ,
     &                  CHARGE,EQ)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 13/10/2009   AUTEUR CAO B.CAO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C
C
C ======================================================================
C RESPONSABLE MEUNIER S.MEUNIER
C
      IMPLICIT NONE
      INTEGER       DIME
      CHARACTER*10  NOM1,NOM2
      CHARACTER*8   CINE(3),CHARGE,NOMARL
      LOGICAL       EQ(5,*)
C
C ----------------------------------------------------------------------
C
C ROUTINE ARLEQUIN
C
C TRANSFORMATION DES MATRICES ARLEQUIN MORSE EN RELATIONS LINEAIRES
C
C ----------------------------------------------------------------------
C
C
C IN  DIME   : DIMENSION DE L'ESPACE
C IN  NOMARL : SD ARLEQUIN
C IN  NOM1   : NOM DE LA SD DE STOCKAGE MAILLES GROUP_MA_1
C IN  NOM2   : NOM DE LA SD DE STOCKAGE MAILLES GROUP_MA_2
C IN  CINE   : CINEMATIQUES DES GROUPES DE MAILLE
C IN  CHARGE : NOM UTILISATEUR DE LA CHARGE
C IN  EQ     : EQUATIONS DE COUPLAGE SELECTIONNEES (CF ARLCLR)
C
C SD EN SORTIE:
C
C CHARGE.CHME.LIGRE : LIGREL DE CHARGE
C CHARGE.CHME.CIMPO : CARTE COEFFICIENTS IMPOSES
C CHARGE.CHME.CMULT : CARTE COEFFICIENTS MULTIPLICATEURS
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      REAL*8        PRECBB,PREC2,ARLGER
      CHARACTER*19  LIGRE,CIMPO,CMULT
      CHARACTER*16  NOMMO1,NOMMO2
      CHARACTER*8   K8BID
      INTEGER       NNC,DDC,NMTE,NTRG,MAXMT
      INTEGER       VLMT0,VLMT1,VLMT2,MTMO0,MTMO1,MTMO2,NTERM0,NTERM1,
     &              NTERM2,NTERM3,NTERM4,NTERM5,IRET
      INTEGER       PMAT0,PMAT1,IAUX,JAUX,IND1,IND2,NEL0,NEL,NDD0,NDD,
     &              NLAGR0,NLAGR
      LOGICAL       INDA1,INDA2,INDAC
      REAL*8        VLR
      INTEGER       IFM,NIV
      INTEGER       NTECMP
      PARAMETER     (NTECMP=6)
      CHARACTER*16  TECMP(NTECMP)
      INTEGER       NELEM(NTECMP)
C
      DATA TECMP / 'D_DEPL_R_DX ','D_DEPL_R_DY ','D_DEPL_R_DZ ',
     &             'D_DEPL_R_DRX','D_DEPL_R_DRY','D_DEPL_R_DRZ' /
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFNIV(IFM,NIV)
C
C --- INITIALISATIONS ET PARAMETRES
C
      PRECBB = ARLGER(NOMARL,'PRECBB')
      PREC2  = PRECBB**(1.D0/3.D0)
      LIGRE  = CHARGE(1:8)//'.CHME.LIGRE'
      CIMPO  = CHARGE(1:8)//'.CHME.CIMPO'
      CMULT  = CHARGE(1:8)//'.CHME.CMULT'
C
C --- NUMERO D'ASSEMBLAGE
C
      INDA1 = (CINE(1).EQ.'COQUE   ')
      INDA2 = (CINE(2).EQ.'COQUE   ')
      INDAC = (CINE(3).EQ.'COQUE   ')
      IND1 = 0
      IF (INDA1) IND1 = IOR(IND1,1)
      IF (INDAC) IND1 = IOR(IND1,2)
      IND2 = 0
      IF (INDA2) IND2 = IOR(IND2,1)
      IF (INDAC) IND2 = IOR(IND2,2)
      DDC = DIME
      IF (INDAC) DDC = DDC + DIME - 1
      IF ((IND1.LT.0).OR.(IND1.GT.3)) CALL ASSERT(.FALSE.)
      IF ((IND2.LT.0).OR.(IND2.GT.3)) CALL ASSERT(.FALSE.)
C
C --- LECTURE DONNEES MATRICES MORSES
C
      NOMMO1 = NOM1(1:10)//'.MORSE'
      CALL JELIRA(NOMMO1(1:16)//'.INO','NMAXOC',NNC,ZK8)
      NMTE = DDC*NNC
      CALL JEVEUO(NOMMO1(1:16)//'.VALE','L',VLMT0)
      CALL JEVEUO(NOMMO1(1:16)//'.INO','L',VLMT1)
      CALL JEVEUO(JEXATR(NOMMO1(1:16)//'.INO','LONCUM'),'L',VLMT2)
C
      NOMMO2 = NOM2(1:10)//'.MORSE'
      CALL JEVEUO(NOMMO2(1:16)//'.VALE','L',MTMO0)
      CALL JEVEUO(NOMMO2(1:16)//'.INO','L',MTMO1)
      CALL JEVEUO(JEXATR(NOMMO2(1:16)//'.INO','LONCUM'),'L',MTMO2)
C
C --- NUMERO DES DDLS
C
      DO 10 IAUX = 1, NTECMP
        CALL JENONU(JEXNOM('&CATA.TE.NOMTE',TECMP(IAUX)),NELEM(IAUX))
 10   CONTINUE
C
C --- SELECTION DES EQUATIONS DE COUPLAGE
C
      CALL WKVECT('&&ARLCHA.MAX','V V R',2*NNC,MAXMT)
C
C --- CALCUL MAXIMA TERMES POUR ADIMENSIONNEMENT
C
      CALL ARLMAX(DIME,INDA1,INDAC,NNC,ZR(VLMT0),
     &            ZI(VLMT2),ZR(MAXMT))
      CALL ARLMAX(DIME,INDA2,INDAC,NNC,ZR(MTMO0),
     &            ZI(MTMO2),ZR(MAXMT))
C
      PMAT0 = MAXMT
      VLR = 0.D0
      DO 30 IAUX = 1, NNC
        IF (ZR(PMAT0).GT.VLR) VLR = ZR(PMAT0)
        PMAT0 = PMAT0 + 2
 30   CONTINUE
C
      PMAT0 = MAXMT-2
      VLR  = VLR*PREC2
      DO 40 IAUX = 1, NNC
        PMAT0 = PMAT0 + 2
        IF (ZR(PMAT0).GE.VLR) GOTO 40
        DO 50 JAUX = 1, 5
          EQ(JAUX,IAUX) = .FALSE.
 50     CONTINUE
 40   CONTINUE
C
C --- COMPTE NOMBRE D'EQUATIONS DE COUPLAGE
C
      NMTE = 0
      DO 60 IAUX = 1, NNC
        DO 60 JAUX = 1, DDC
          IF (EQ(JAUX,IAUX)) NMTE = NMTE + 1
 60   CONTINUE
C
C --- ADIMENSIONNEMENT ET COMPTE DES TERMES DES EQUATIONS
C
      NTRG = 0
      CALL ARLCH0(DIME  ,INDA1   ,INDAC   ,NNC   ,ZI(VLMT2),
     &            ZR(MAXMT),PRECBB,EQ    ,ZR(VLMT0),NTRG)
      CALL ARLCH0(DIME  ,INDA2   ,INDAC   ,NNC   ,ZI(MTMO2),
     &            ZR(MAXMT),PRECBB,EQ    ,ZR(MTMO0),NTRG)
      CALL JEDETR('&&ARLCHA.MAX')
C
C --- ALLOCATION / AGRANDISSEMENT .CHME
C
      CALL JEEXIN(LIGRE//'.LIEL',IRET)
      IF (IRET.NE.0) THEN
        CALL JELIRA(LIGRE//'.LIEL','LONT',NEL,K8BID)
        CALL JEVEUO(LIGRE//'.LIEL','L',NTERM0)
        NEL0 = -ZI(NTERM0-2+NEL)
      ELSE
        NEL0 = 0
      ENDIF
C
C --- CREATION OU EXTENSION DES CARTES .CMULT ET .CIMPO
C
      CALL CRAGCH(NTRG,'REEL','REEL',LIGRE)
C
C --- CREATION OU EXTENSION DU LIGREL DE CHARGE LIGRCH
C
      CALL CRAGLC(NTRG,LIGRE)
C
C --- LECTURE OBJETS CHARGE
C
      CALL JEVEUO(CIMPO(1:19)//'.DESC','E',NTERM0)
      CALL JEVEUO(CIMPO(1:19)//'.NOLI','E',NTERM1)
      CALL JEVEUO(CIMPO(1:19)//'.LIMA','E',NTERM2)
C
      CALL JEVEUO(CMULT(1:19)//'.DESC','E',NTERM3)
      CALL JEVEUO(CMULT(1:19)//'.NOLI','E',NTERM4)
      CALL JEVEUO(CMULT(1:19)//'.LIMA','E',NTERM5)

      NDD0 = ZI(NTERM0+2)
      ZI(NTERM0+2) = ZI(NTERM0+1)
      ZI(NTERM3+2) = ZI(NTERM3+1)

      NDD = NDD0
      PMAT0 = 3 + 2*NDD0
      PMAT1 = PMAT0 + NDD0 + 2*NTRG

      NEL = NEL0

      DO 70 IAUX = 1, NTRG

        ZK24(NTERM1+NDD) = LIGRE
        ZK24(NTERM4+NDD) = LIGRE
        NDD = NDD + 1
        NEL = NEL + 1
        ZI(NTERM0+PMAT0  )  = -3
        ZI(NTERM3+PMAT0  )  = -3
        ZI(NTERM0+PMAT0+1)  = NDD
        ZI(NTERM3+PMAT0+1)  = NDD
        ZI(NTERM0+PMAT1  )  = 2
        ZI(NTERM3+PMAT1  )  = 2
        ZI(NTERM2-1+NDD) = -NEL
        ZI(NTERM5-1+NDD) = -NEL
        CALL JECROC(JEXNUM(CIMPO(1:19)//'.LIMA',NDD))
        CALL JEECRA(JEXNUM(CIMPO(1:19)//'.LIMA',NDD),'LONMAX',1,' ')
        CALL JECROC(JEXNUM(CMULT(1:19)//'.LIMA',NDD))
        CALL JEECRA(JEXNUM(CMULT(1:19)//'.LIMA',NDD),'LONMAX',1,' ')
        CALL JECROC(JEXNUM(LIGRE(1:19)//'.LIEL',NEL))
        CALL JEECRA(JEXNUM(LIGRE(1:19)//'.LIEL',NEL),'LONMAX',2,' ')
        CALL JECROC(JEXNUM(LIGRE(1:19)//'.NEMA',NEL))
        CALL JEECRA(JEXNUM(LIGRE(1:19)//'.NEMA',NEL),'LONMAX',4,' ')
        PMAT0 = PMAT0 + 2
        PMAT1 = PMAT1 + 1

 70   CONTINUE

      CALL JEVEUO(LIGRE(1:19)//'.NBNO','E',NTERM0)
      NLAGR0 = ZI(NTERM0)
      ZI(NTERM0) = NLAGR0 + 2*NMTE

      CALL POSLAG('12',PMAT0,PMAT1)
      CALL JEVEUO(LIGRE//'.LGNS','E',NTERM0)
      NTERM0 = NTERM0 + NLAGR0

      DO 80 IAUX = 1, NMTE
        ZI(NTERM0  ) = PMAT0
        ZI(NTERM0+1) = PMAT1
        NTERM0 = NTERM0 + 2
 80   CONTINUE
C
C --- ECRITURE .CHME
C
      CALL JEVEUO(CIMPO(1:19)//'.VALE','E',NTERM0)
      CALL JEVEUO(CMULT(1:19)//'.VALE','E',NTERM1)
      CALL JEVEUO(LIGRE(1:19)//'.LIEL','E',NTERM2)
      CALL JEVEUO(JEXNUM(LIGRE(1:19)//'.NEMA',NEL0+1),'E',NTERM3)
      NTERM3 = NTERM3 - 4*NEL0
      NDD = NDD0
      NEL = NEL0
C
C --- MATRICE MORSE 1
C
      NLAGR = NLAGR0

      GOTO (90,100,110) IND1

      CALL ARLCH1(DIME  ,NNC   ,0     ,NELEM    ,ZR(VLMT0),
     &            ZI(VLMT1),ZI(VLMT2),PRECBB,EQ    ,NDD   ,
     &            NEL   ,NLAGR   ,ZR(NTERM0),ZR(NTERM1),ZI(NTERM2),
     &            ZI(NTERM3))
      GOTO 120

 90   CONTINUE
      CALL ARLCH2(DIME  ,NNC   ,0     ,NELEM    ,ZR(VLMT0),
     &            ZI(VLMT1),ZI(VLMT2),PRECBB,EQ    ,NDD   ,
     &            NEL   ,NLAGR   ,ZR(NTERM0),ZR(NTERM1),ZI(NTERM2),
     &            ZI(NTERM3))
      GOTO 120

 100  CONTINUE
      CALL ARLCH3(DIME  ,NNC   ,0     ,NELEM    ,ZR(VLMT0),
     &            ZI(VLMT1),ZI(VLMT2),PRECBB,EQ    ,NDD   ,
     &            NEL   ,NLAGR   ,ZR(NTERM0),ZR(NTERM1),ZI(NTERM2),
     &            ZI(NTERM3))
      GOTO 120

 110  CONTINUE
      CALL ARLCH4(DIME  ,NNC   ,0     ,NELEM    ,ZR(VLMT0),
     &            ZI(VLMT1),ZI(VLMT2),PRECBB,EQ    ,NDD   ,
     &            NEL   ,NLAGR   ,ZR(NTERM0),ZR(NTERM1),ZI(NTERM2),
     &            ZI(NTERM3))

 120  CONTINUE
C
C --- MATRICE MORSE 2
C
      NLAGR = NLAGR0

      GOTO (130,140,150) IND2

      CALL ARLCH1(DIME  ,NNC   ,1     ,NELEM    ,ZR(MTMO0),
     &            ZI(MTMO1),ZI(MTMO2),PRECBB,EQ    ,NDD   ,
     &            NEL   ,NLAGR   ,ZR(NTERM0),ZR(NTERM1),ZI(NTERM2),
     &            ZI(NTERM3))
      GOTO 160

 130  CONTINUE
      CALL ARLCH2(DIME  ,NNC   ,1     ,NELEM    ,ZR(MTMO0),
     &            ZI(MTMO1),ZI(MTMO2),PRECBB,EQ    ,NDD   ,
     &            NEL   ,NLAGR   ,ZR(NTERM0),ZR(NTERM1),ZI(NTERM2),
     &            ZI(NTERM3))
      GOTO 160

 140  CONTINUE
      CALL ARLCH3(DIME  ,NNC   ,1     ,NELEM    ,ZR(MTMO0),
     &            ZI(MTMO1),ZI(MTMO2),PRECBB,EQ    ,NDD   ,
     &            NEL   ,NLAGR   ,ZR(NTERM0),ZR(NTERM1),ZI(NTERM2),
     &            ZI(NTERM3))
      GOTO 160

 150  CONTINUE
      CALL ARLCH4(DIME  ,NNC   ,1     ,NELEM    ,ZR(MTMO0),
     &            ZI(MTMO1),ZI(MTMO2),PRECBB,EQ    ,NDD   ,
     &            NEL   ,NLAGR   ,ZR(NTERM0),ZR(NTERM1),ZI(NTERM2),
     &            ZI(NTERM3))

 160  CONTINUE
C
      CALL JEDEMA()

      END
