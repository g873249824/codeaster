      SUBROUTINE LIMACX(CHAR  ,MOTFAC,FONREE,NZOCO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 30/04/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8  CHAR  
      CHARACTER*16 MOTFAC 
      CHARACTER*4  FONREE       
      INTEGER      NZOCO        
C     
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE XFEM - LECTURE DONNEES)
C
C LECTURE DES FISSURES EN CONTACT
C      
C ----------------------------------------------------------------------
C
C
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  MOTFAC : MOT-CLE FACTEUR (VALANT 'CONTACT')
C IN  FONREE : FONC OU REEL SUIVANT L'OPERATEUR
C IN  NZOCO  : NOMBRE DE ZONES DE CONTACT
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*24 FORMCO
      INTEGER      JFORM
      INTEGER      IZONE,FORM
      INTEGER      IOCC,IBID,IER
      CHARACTER*8  FISS,NOMO
C      CHARACTER*16 SIGNE
C      CHARACTER*24 XFIESC,XSIESC,XSIMAI
C      INTEGER      JFIESC,JSIESC,JSIMAI
      CHARACTER*24 XCONTA,XFIMAI
      INTEGER      JCONTX,JFIMAI
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C 
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C 
      FORMCO = CHAR(1:8)//'.CONTACT.FORMCO'             
      CALL JEVEUO(FORMCO,'L',JFORM)
C
C --- INITIALISATIONS
C      
C
C --- MODELE
C
      CALL DISMOI('F','NOM_MODELE',CHAR(1:8),'CHARGE',IBID,NOMO,IER)   
C
C --- TYPE DE FORMULATION (DISCRETE/CONTINUE/XFEM)
C
      IZONE  = 1
      FORM   = ZI(JFORM-1+IZONE) 
      IF (FORM.NE.3) CALL ASSERT(.FALSE.)
      IF (FONREE.EQ.'FONC') CALL ASSERT(.FALSE.)
C
C --- CREATION DES SD
C
C     XFIESC = CHAR(1:8)//'.CONTACT.XFIESC'   
C     XSIESC = CHAR(1:8)//'.CONTACT.XSIESC'   
C     XSIMAI = CHAR(1:8)//'.CONTACT.XSIMAI' 
C     CALL WKVECT(XFIESC,'G V K8',NZOCO,JFIESC) 
C     CALL WKVECT(XSIESC,'G V I' ,NZOCO,JSIESC)             
C     CALL WKVECT(XSIMAI,'G V I' ,NZOCO,JSIMAI) 
      XFIMAI = CHAR(1:8)//'.CONTACT.XFIMAI' 
      XCONTA = CHAR(1:8)//'.CONTACT.XFEM'
      CALL WKVECT(XFIMAI,'G V K8',NZOCO,JFIMAI) 
      CALL WKVECT(XCONTA,'G V I' ,2    ,JCONTX)
      ZI(JCONTX-1+1) = NZOCO  
      ZI(JCONTX-1+2) = 1      
C
C --- LECTURE DES FISSURES EN CONTACT
C
      DO 10 IOCC = 1,NZOCO
        CALL GETVID(MOTFAC,'FISS_MAIT',IOCC,1,1,FISS,IBID)
        ZK8(JFIMAI-1+IOCC) = FISS
C       CALL GETVID(MOTFAC,'FISS_ESCL',IOCC,1,1,FISS,IBID)
C       ZK8(JFIESC-1+IOCC) = FISS
C       CALL GETVID(MOTFAC,'SIGN_MAIT',IOCC,1,1,SIGNE,IBID)
C       IF (SIGNE(1:1).EQ.'+') THEN
C         ZI(JSIMAI-1+IOCC) = 1
C       ELSEIF (SIGNE(1:1).EQ.'-') THEN
C         ZI(JSIMAI-1+IOCC) = -1        
C       ELSE
C         CALL ASSERT(.FALSE.)
C       ENDIF
C       CALL GETVID(MOTFAC,'SIGN_ESCL',IOCC,1,1,SIGNE,IBID)        
C       IF (SIGNE(1:1).EQ.'+') THEN
C         ZI(JSIESC-1+IOCC) = 1
C       ELSEIF (SIGNE(1:1).EQ.'-') THEN
C         ZI(JSIESC-1+IOCC) = -1        
C       ELSE
C          CALL ASSERT(.FALSE.)
C       ENDIF                        
  10  CONTINUE                
C      
      CALL JEDEMA()
      END
