      SUBROUTINE CARALV(CHAR  ,NZOCO ,IFORM )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 26/03/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*8  CHAR
      INTEGER      NZOCO,IFORM
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (TOUTES METHODES - LECTURE DONNEES)
C
C QUELQUES PARAMETRES GLOBAUX
C
C ----------------------------------------------------------------------
C
C
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  NZOCO  : NOMBRE DE ZONES DE CONTACT
C IN  IFORM  : TYPE DE FORMULATION (DISCRETE/CONTINUE/XFEM)
C
C ----------------------------------------------------------------------
C
      INTEGER      IZONE,MMINFI
      LOGICAL      LMAIL,LGLIS
      LOGICAL      MMINFL,LVERI,LALL,LSANS,LEXIS,LPENA,LNOEU,LXCZM
      LOGICAL      LNEWTG
      LOGICAL      LCINIT
      INTEGER      CTCINI
      CHARACTER*24 DEFICO
      CHARACTER*24 PARACI
      INTEGER      JPARCI
      LOGICAL      CFDISL
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      DEFICO = CHAR(1:8)//'.CONTACT'
      LMAIL  = (IFORM.EQ.1) .OR. (IFORM.EQ.2)
C
C --- ACCES SD CONTACT
C
      PARACI = DEFICO(1:16)//'.PARACI'
      CALL JEVEUO(PARACI,'E',JPARCI)
C
C --- ALL VERIF ?
C
      IF (LMAIL) THEN
        IZONE  = 1
        LALL   = MMINFL(DEFICO,'VERIF',IZONE)
        DO 10 IZONE = 2,NZOCO
          LVERI  = MMINFL(DEFICO,'VERIF',IZONE )
          LALL   = LALL.AND.LVERI
 10     CONTINUE
        IF (LALL) THEN
          ZI(JPARCI+8-1) = 1
        ENDIF
C
        LEXIS = .FALSE.
        DO 20 IZONE = 1,NZOCO
          LVERI  = MMINFL(DEFICO,'VERIF',IZONE )
          LEXIS  = LEXIS.OR.LVERI
 20     CONTINUE
        IF (LEXIS) THEN
          ZI(JPARCI+23-1) = 1
        ENDIF
C
C ----- REAC_GEOM= 'SANS' / ALGO_RESO_GEOM='POINT_FIXE' FORCES
C ----- SI TOUT EN MODE VERIF
C
        IF (LALL) THEN
          LNEWTG = CFDISL(DEFICO,'GEOM_NEWTON')
          IF (LNEWTG) THEN
            ZI(JPARCI+1-1)  = 0
            ZI(JPARCI+9-1)  = 0
            CALL U2MESS('I','CONTACT2_3')
            CALL U2MESS('I','CONTACT2_4')
          ELSE
            LSANS  = CFDISL(DEFICO,'REAC_GEOM_SANS')
            IF (.NOT. LSANS) THEN
              ZI(JPARCI+1-1) = 0
              CALL U2MESS('I','CONTACT2_3')
            ENDIF
          ENDIF
        ENDIF
      ENDIF
C
C --- Y-A-T IL DE LA PENALISATION (-> MATRICE NON-SYME) ?
C
      IF ((IFORM.EQ.2).OR.(IFORM.EQ.3)) THEN
        LEXIS  = .FALSE.
        DO 40 IZONE = 1,NZOCO
          LPENA  = (MMINFL(DEFICO,'ALGO_CONT_PENA',IZONE ).OR.
     &              MMINFL(DEFICO,'ALGO_FROT_PENA',IZONE ))
          LEXIS  = LEXIS.OR.LPENA
 40     CONTINUE
        IF (LEXIS) THEN
          ZI(JPARCI+22-1) = 1
        ENDIF
      ENDIF
C
C --- TOUT INTEGRE AUX NOEUDS ?
C
      IF (IFORM.EQ.2) THEN
        IZONE  = 1
        LALL   = (MMINFI(DEFICO,'INTEGRATION'      ,IZONE ).EQ.1)
        DO 50 IZONE = 2,NZOCO
          LNOEU  = (MMINFI(DEFICO,'INTEGRATION'      ,IZONE ).EQ.1)
          LALL   = LALL.AND.LNOEU
 50     CONTINUE
        IF (LALL) THEN
          ZI(JPARCI+24-1) = 1
        ENDIF
      ELSEIF (IFORM.EQ.1) THEN
        ZI(JPARCI+24-1) = 1
      ELSEIF (IFORM.EQ.3) THEN
        ZI(JPARCI+24-1) = 1
      ENDIF
C
C --- Y-A-T IL GLISSIERE ?
C
      IF (IFORM.EQ.2) THEN
        LEXIS  = .FALSE.
        DO 60 IZONE = 1,NZOCO
          LGLIS  = MMINFL(DEFICO,'GLISSIERE_ZONE',IZONE )
          LEXIS  = LEXIS.OR.LGLIS
 60     CONTINUE
        IF (LEXIS) THEN
          ZI(JPARCI+26-1) = 1
        ENDIF
      ENDIF
C
C --- EXISTE-T-IL AU MOINS UNE ZONE EN XFEM+CZM ?
C
      IF (IFORM.EQ.3) THEN
        LEXIS  = .FALSE.
        DO 70 IZONE = 1,NZOCO
          LXCZM  = MMINFL(DEFICO,'CONT_XFEM_CZM',IZONE )
          LEXIS  = LEXIS.OR.LXCZM
 70     CONTINUE
        IF (LEXIS) THEN
          ZI(JPARCI+21-1) = 1
        ENDIF
      ENDIF
C
C --- EST-CE QUE TOUTES LES ZONES SONT EN CONTACT_INIT INTERPENETRE ?
C
      IF (IFORM.EQ.2) THEN
        LCINIT  = .TRUE.
        DO 80 IZONE = 1,NZOCO
          CTCINI = MMINFI(DEFICO,'CONTACT_INIT',IZONE )
          LCINIT = LCINIT.AND.(CTCINI.EQ.2)
 80     CONTINUE
        IF (LCINIT) THEN
          ZI(JPARCI-1+11) = 1
        ENDIF
      ENDIF
C
      CALL JEDEMA()
C
      END
