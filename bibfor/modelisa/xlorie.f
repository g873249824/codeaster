      SUBROUTINE XLORIE(FISS)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 31/07/2012   AUTEUR LADIER A.LADIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*8 FISS
C
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (CREATION DES SD)
C
C LECTURE DONNEES ORIENTATION FOND DE FISSURE - CREATION XCARFO
C
C ----------------------------------------------------------------------
C
C
C OUT FISS   : NOM DE LA SD FISS_XFEM
C                 FISS//'.CARAFOND'
C
C
C
      INTEGER      IBID,IR,IN,NCOUCH
      REAL*8       RAYON
      CHARACTER*16 TYPENR
      CHARACTER*24 XCARFO
      INTEGER      JCARAF
      INTEGER      IARG
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- CREATION DU VECTEUR DE STOCKAGE
C
      XCARFO = FISS(1:8)//'.CARAFOND'
      CALL WKVECT(XCARFO,'G V R',2,JCARAF)
C
C --- REMPLISSAGE DU VECTEUR DE STOCKAGE
C
C     TYPE ENRICHISSEMENT (TOPOLOGIQUE OU GEOMETRIQUE)
      CALL GETVTX(' ','TYPE_ENRI_FOND',1,IARG,1,TYPENR,IBID)
      CALL ASSERT(TYPENR.EQ.'TOPOLOGIQUE'.OR.TYPENR.EQ.'GEOMETRIQUE')
      IF (TYPENR.EQ.'TOPOLOGIQUE') THEN
        RAYON  = 0.D0
        NCOUCH = 0
      ELSEIF (TYPENR.EQ.'GEOMETRIQUE') THEN
        CALL GETVR8(' ','RAYON_ENRI',1,IARG,1,RAYON,IR)
        CALL GETVIS(' ','NB_COUCHES',1,IARG,1,NCOUCH,IN)
        IF (IR.EQ.0) THEN
          RAYON = 0.D0
          IF (NCOUCH.GT.7) CALL U2MESI('A','XFEM_5',1,NCOUCH)
        ELSEIF (IR.EQ.1) THEN
C         ON NE PEUT PAS DEFINIR DE REGLE "EXCLUS" DANS LE CAPY
C         SINON, DANS LE CAS OU ON NE RENSEIGNE RIEN, IL Y A ERREUR
          IF (IN.EQ.1) CALL U2MESS('F','XFEM_17')
          IF (RAYON.LE.0.D0) CALL U2MESS('F','XFEM_6')
          NCOUCH = 0
        ENDIF
      ENDIF

C      WRITE(6,*) 'RAYON  = ',RAYON
C      WRITE(6,*) 'NCOUCH = ',NCOUCH

      CALL ASSERT(RAYON*NCOUCH.EQ.0.D0)

C     ATTENTION, ON NE PEUT PAS TRANSFORMER NCOUCH EN RAYON EQUIVALENT
C     ICI CAR EN CAS DE PROPAGATION AVEC PROPA_XFEM, LE RAYON EQUIVALENT
C     NE SERAIT PAS RE-ACTUALISE. IL FAUT STOCKER RAYON ET NCOUCH ET NE
C     CALCULER LE RAYON EQUIVALENT QU'AU DERNIER MOMENT (XENRCH)
      ZR(JCARAF-1+1  ) = RAYON
      ZR(JCARAF-1+2) = NCOUCH
C
C
      CALL JEDEMA()
      END
