      SUBROUTINE DGLRDM()
      IMPLICIT NONE

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 11/01/2011   AUTEUR SFAYOLLE S.FAYOLLE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE SFAYOLLE S.FAYOLLE
C ----------------------------------------------------------------------
C
C BUT : DETERMINATION DES PARAMETRES MATERIAU POUR LE MODELE GLRC_DM
C
C IN:
C       LOI     : LOI DE COMPORTEMENT DE PLAQUE BETON ARME (GLRC_DM OU
C                 GLRC_DAMAGE)
C       IMATE   : ADRESSE DU MATERIAU (ACIER ET BETON)
C       COMPOR  : COMPORTMENT
C       EP      : EPAISSEUR DE LA PLAQUE
C       OMY     : SECTION D'ACIER D'UN LIT DE CABLES SUIVANT Y (MÂ²/ML)
C       OMX     : SECTION D'ACIER D'UN LIT DE CABLES SUIVANT X (MÂ²/ML)
C       RY      : POSITION ADIMENSIONNEE DU LIT DE CABLES SUIVANT Y
C       RX      : POSITION ADIMENSIONNEE DU LIT DE CABLES SUIVANT X
C       METHODE_ENDO : CHOIX DE LA METHODE DE CALCUL DE L'ENDOMMAGEMENT
C                 "ENDO_NAISS" : ON CONSIDERE UNE EVOLUTION
C                 INFINITESIMALE JUSTE APRES APPARITION DU PREMIER
C                 ENDOMMAGEMENT
C                 "ENDO_LIM"   : ON CONSIDERE DES ENDOMMAGMENTS
C                                IMPORTANTS
C                 "ENDO_INT"   : ON CALCULE LE RAPPORT
C                                PENTE D'ENDOMMAGEMENT/PENTE ELASTIQUE
C       PENTE   : METHODE RETENUE POUR CALCULER LA PENTE D'ENDOMMAGEMENT
C                 "ACIER_PLAS"     = RECALAGE A LA PLASTICITE DES ACIERS
C                 "UTIL" = RECALAGE A LA DEFO GENE MAX DE L'ELEMENT
C                 "RIGI_ACIER"= PENTE REPRISE DES RAIDEURS DES ACIERS
C       CISAIL  : RECALAGE PAR RAPPORT AU TEST DE CISAILLEMENT PUR
C       COMPR   : PARAMETRES D'ENDOMMAGEMENT INSERE PAR L'UTILISATEUR
C                 (GAMMA OU SEUIL D'ENDOMMAGEMENT)
C       INFO    : IMPRESSION DES PARAMETRES DE LA LOI GLRC_DM
C OUT:
C       RHO     : MASSE VOLUMIQUE DE LA STRUCTURE
C       AMORA   : AMORTISSEMENT ALPHA
C       AMORB   : AMORTISSEMENT BETA
C       EM      : PARAMETRE D ELASTICITE - MEMBRANE
C       NUM     : PARAMETRE D ELASTICITE - MEMBRANE
C       EF      : PARAMETRE D ELASTICITE - FLEXION
C       NUF     : PARAMETRE D ELASTICITE - FLEXION
C       GT      : PARAMETRE GAMMA POUR LA MEMBRANE EN TRACTION
C       GC      : PARAMETRE GAMMA POUR LA MEMBRANE EN COMPRESSION
C       GF      : PARAMETRE GAMMA POUR LA FLEXION
C       SYT     : SEUIL D'ENDOMMAGEMENT EN TRACTION
C       SYC     : SEUIL D'ENDOMMAGEMENT EN COMPRESSION
C       SYF     : SEUIL D'ENDOMMAGEMENT EN FLEXION
C ----------------------------------------------------------------------
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      LOGICAL ULEXIS

      INTEGER  NA
      PARAMETER (NA=10)
      INTEGER NNAP,IBID,ILIT,JLM,JMELK
      INTEGER JMELR,JMELC,LONOBJ
      INTEGER ICOMPR, IRET, ICISAI
      INTEGER IBID1,IBID2,IBID3
      INTEGER NIMPR,IMPR,IFR,IENDO,IPENTE

      REAL*8  EA(3*NA),SYA(3*NA),EB,NUB,SYTB,B,B1,A
      REAL*8  H,NP,EMAXM,EMAXF
      REAL*8  PENDT,PENDF,SYC,GT,GF,GC
      REAL*8  NUM,NUF,EM,EF,SYT,DXD,SYF,DXP,DRP,MP,RHO,DRD,EMC,NUMC
      REAL*8  PELAST,PELASF,AMORA,AMORB,RHOB,RHOA,ALPHA,BETA
      REAL*8  OMX(3*NA),OMY(3*NA)
      REAL*8  RX(3*NA),RY(3*NA)
      REAL*8  VALRES(5),R8B

      CHARACTER*2 CODRES(5)
      CHARACTER*8 MATER,K8B,COMPR,NOMRES(5)
      CHARACTER*19 MENDOM
      CHARACTER*19 CISAIL,PENTE
      CHARACTER*16 TYPE,NOMCMD,FICHIE

      CALL JEMARQ()

      A=0.D0
      B=0.D0
      B1=0.D0
      GC=0.D0
      SYC=0.D0

C - DEFINITION DU NOMBRE DE NAPPE DANS L'EPAISSEUR
      CALL GETFAC('NAPPE'  ,NNAP)
      IF (NNAP .NE. 1) THEN
        CALL U2MESS('A','ALGORITH6_7')
      ENDIF

C - VARIABLE D IMPRESSION DES PARAMETRES GLRC_DM
      NIMPR = 0
      CALL GETVIS(' ','INFO',1,1,1,IMPR,IBID1)
      IF (IMPR .EQ. 2) THEN
         NIMPR = 1
         IFR    = 8
         FICHIE = ' '
         IF ( .NOT. ULEXIS( IMPR ) ) THEN
            CALL ULOPEN ( IMPR, ' ', FICHIE, 'NEW', 'O' )
         ENDIF
      END IF

C - RELEVE DES CARACTERISTIQUES DU BETON
      CALL GETVID('BETON','MATER',1,1,1,MATER,IBID)
      NOMRES(1) = 'E'
      NOMRES(2) = 'NU'
      NOMRES(3) = 'RHO'
      NOMRES(4) = 'AMOR_ALP'
      NOMRES(5) = 'AMOR_BET'
      K8B = ' '
      CALL GETVR8('BETON','EPAIS',1,1,1,H,IBID)
      CALL RCVALE(MATER,'ELAS            ',0,K8B,R8B,5,
     &            NOMRES,VALRES,CODRES,'  ')
      IF (CODRES(1) .NE. 'OK' .OR.
     &    CODRES(2) .NE. 'OK') CALL U2MESS('A','ALGORITH6_8')

      EB  = VALRES(1)
      NUB = VALRES(2)
      RHOB = VALRES(3)

      IF(CODRES(4) .NE. 'OK') THEN
        AMORA = 0.0D0
      ELSE
        AMORA = VALRES(4)
      ENDIF
      IF(CODRES(5) .NE. 'OK') THEN
        AMORB = 0.0D0
      ELSE
        AMORB = VALRES(5)
      ENDIF

      NOMRES(1) = 'SYT'
      CALL RCVALE(MATER,'BETON_ECRO_LINE ',0,K8B,R8B,1,
     &            NOMRES,VALRES,CODRES,'  ')
      IF (CODRES(1) .NE. 'OK') CALL U2MESS('A','ALGORITH6_9')
      SYTB = VALRES(1)

C - RECUPERATION DU PARAMETRE DE COMPRESSION SAISI PAR L'UTILISATEUR
      CALL GETVTX(' ','COMPR',1,1,1,COMPR,IBID2)
      IF (COMPR .EQ. 'GAMMA') THEN
        CALL GETVR8(' ','GC',1,1,1,GC,IBID1)
      ELSE IF (COMPR .EQ. 'SEUIL') THEN
        CALL GETVR8(' ','SYC',1,1,1,SYC,IBID1)
      ENDIF

C - CARACTERISATION DES PARAMETRES DE COMPRESSION ENTRES PAR
C   L'UTILISATEUR
      IF (SYC .NE. 0.0D0) THEN
        ICOMPR=1
      ELSEIF (GC .NE. 0.0D0) THEN
        ICOMPR=2
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C DEFINITION DES PROPRIETES MECANIQUE DU FERRAILLAGE
C      IF(NNAP .GT. 0) THEN
C        DO 10, ILIT = 1,NNAP
          ILIT = 1
          CALL GETVID('NAPPE','MATER',ILIT,1,1,MATER,IBID)
          NOMRES(1) = 'E'
          NOMRES(2) = 'NU'
          NOMRES(3) = 'RHO'
C          NOMRES(4) = 'AMOR_ALPHA'
C          NOMRES(5) = 'AMOR_BETA'
          CALL RCVALE(MATER,'ELAS            ',0,K8B,R8B,3,
     &            NOMRES,VALRES,CODRES,'  ')

          IF (CODRES(1) .NE. 'OK' .OR.
     &        CODRES(2) .NE. 'OK') CALL U2MESS('A','ALGORITH6_10')
          EA(ILIT) = VALRES(1)
C         NUA(ILIT)=VALRES(2) ON NE PREND PAS EN COMPTE L EFFET DE
C         POISSON SUR LES ARMATURES
          RHOA = VALRES(3)
C          IF(CODRES(4) .NE. 'OK') THEN
C            AMORA = 0.0D0
C          ELSE
C            AMORA = VALRES(4)
C          ENDIF
C          IF(CODRES(5) .NE. 'OK') THEN
C            AMORB = 0.0D0
C          ELSE
C            AMORB = VALRES(5)
C          ENDIF
          NOMRES(1) = 'SY'
          CALL RCVALE(MATER,'ECRO_LINE       ',0,K8B,R8B,1,
     &            NOMRES,VALRES,CODRES,'  ')
          IF (CODRES(1) .EQ. 'OK') THEN
            SYA(ILIT) = VALRES(1)
          ELSE
            SYA(ILIT) = -1.D0
          ENDIF

          CALL GETVR8('NAPPE','OMX',ILIT,1,1,OMX(ILIT),IBID)
          CALL GETVR8('NAPPE','OMY',ILIT,1,1,OMY(ILIT),IBID)
          CALL GETVR8('NAPPE','RX',ILIT,1,1,RX(ILIT),IBID)
          CALL GETVR8('NAPPE','RY',ILIT,1,1,RY(ILIT),IBID)
          IF ((OMX(ILIT) .NE. OMY(ILIT)) .OR.
     &        (RX(ILIT) .NE. RY(ILIT))) THEN
            CALL U2MESS('A','ALGORITH6_6')
          ENDIF
C Mise en cohérence avec GLRC_DAMAGE
C Développement fait pour -0.5<RX<0.5
C or pour la cohérence avec GLRC_DAMAGE
C on se met dans le cas -1<RX<1
C pour repasser dans les conditions initiale on multiplie RX par 1/2
          RX(ILIT)=RX(ILIT)*0.5D0
          RY(ILIT)=RY(ILIT)*0.5D0
C Fin mise en cohérence avec GLRC_DAMAGE

          B=EA(ILIT)*(OMX(ILIT)+OMY(ILIT))
C B1=B1+EA(ILIT)*(RX(ILIT)+RY(ILIT))/2.*(OMX(ILIT)+OMY(ILIT))
C B1 = 0 du à la symétrie de la plaque
          B1=0.D0
          A=EA(ILIT)*(OMX(ILIT)+OMY(ILIT))*((RX(ILIT)+RY(ILIT))/2.D0)**2
C 10     CONTINUE
C      ENDIF
C RECUPARATION DE LA MASSE VOLUMIQUE EQUIVALENTE ET DES COEFFICIENTS
C D'AMORTISSEMENT DE RAYLEIGH

C ATTENTION CA NE FONCTIONNE PAS SI ON A PLUSIEURS ARMATURES
      CALL GETVR8(' ','RHO',1,1,1,RHO,IRET)
      IF (IRET .EQ. 0) THEN
        RHO=RHOB + RHOA/H*2.D0*(OMX(1)+OMY(1))
      ENDIF
      CALL GETVR8(' ','AMOR_ALPHA',1,1,1,ALPHA,IBID1)
      IF (IBID1 .EQ. 0) THEN
        ALPHA=AMORA
      ENDIF
      CALL GETVR8(' ','AMOR_BETA',1,1,1,BETA,IBID1)
      IF (IBID1 .EQ. 0) THEN
        BETA=AMORB
      ENDIF

C RECUPERATION DES MOTS CLES "CISAIL", "METHODE_ENDO" et "PENTE"
      CALL GETVTX(' ','PENTE',1,1,1,PENTE,IBID1)
      IF (PENTE .EQ. 'UTIL') THEN
        IPENTE = 3
C - RECUPERATION DE LA DEFORMATION MAXIMALE EN MEMBRANE (EPSI_MAX_M)
C - RECUPERATION DE LA DEFORMATION MAXIMALE EN FLEXION (COUR_MAX_F)
        CALL GETVR8(' ','EPSI_MEMB',1,1,1,EMAXM,IBID1)
        CALL GETVR8(' ','EPSI_FLEX',1,1,1,EMAXF,IBID1)
      ELSEIF (PENTE .EQ. 'PLAS_ACIER') THEN
        IF(SYA(ILIT) .LE. 0.D0)  CALL U2MESS('F','ALGORITH6_11')
        IPENTE = 2
      ELSEIF (PENTE .EQ. 'RIGI_ACIER') THEN
        IPENTE = 1
      ENDIF

      CALL GETVTX(' ','CISAIL',1,1,1,CISAIL,IBID2)
      IF (CISAIL .EQ. 'OUI') THEN
        ICISAI = 1
      ELSE
        ICISAI = 0
      ENDIF

      CALL GETVTX(' ','METHODE_ENDO',1,1,1,MENDOM,IBID3)
      IF (MENDOM(1:10) .EQ. 'ENDO_NAISS') THEN
        IENDO=1
      ELSE IF (MENDOM(1:8) .EQ. 'ENDO_LIM') THEN
        IENDO=2
      ELSE IF (MENDOM(1:10) .EQ. 'ENDO_INTER') THEN
        IENDO=3
      ENDIF
C - CALCUL DES PARAMETRES ELASTIQUE HOMOGENEISES EM,NUM,EF,NUF
      CALL GETRES(MATER,TYPE,NOMCMD)
      CALL DGELAS(EB,NUB,H,B,A,EM,NUM,EF,NUF,ICISAI)
C - DETERMINATION DES POINTS DE FISSURATION (DXD,SYT) ET (DRD,SYF)
C   ET DES PENTES ELASTIQUES
      CALL DGSEUI(EM,NUM,EF,NUF,EB,NUB,SYTB,H,ICISAI,
     &            SYT,SYC,DXD,SYF,DRD,PELAST,PELASF,ICOMPR)
C - DETERMINATION DES PENTES POST ELASTIQUE
      CALL DGPLAS(EA,SYA,EB,NUB,SYTB,NUM,NUF,A,B1,B,SYT,SYF,DXD,DRD,H,
     &            IPENTE,ICISAI,EMAXM,EMAXF,NNAP,RX,RY,NP,DXP,PENDT,
     &            DRP,MP,PENDF)
C - DETERMINATION DES PARAMETRES D ENDOMMAGEMENT
      CALL DGENDO(EM,EF,H,SYT,SYC,NUM,NUF,PENDT,
     &            PELAST,PENDF,PELASF,IENDO,ICISAI,
     &            ICOMPR,GT,GF,GC,IPENTE,NP,DXP)
C-----REMPLISSAGE DU MATERIAU
      CALL WKVECT(MATER//'.MATERIAU.NOMRC ','G V K16',2,JLM)
      ZK16(JLM  ) = 'GLRC_DM         '
      ZK16(JLM+1) = 'ELAS            '
C---------ELASTIQUE---------------
      LONOBJ = 5
      CALL WKVECT(MATER//'.ELAS      .VALK','G V K8',2*LONOBJ,JMELK)
      CALL JEECRA(MATER//'.ELAS      .VALK','LONUTI',LONOBJ,' ')
      CALL WKVECT(MATER//'.ELAS      .VALR','G V R',LONOBJ,JMELR)
      CALL JEECRA(MATER//'.ELAS      .VALR','LONUTI',LONOBJ,' ')
      CALL WKVECT(MATER//'.ELAS      .VALC','G V C',LONOBJ,JMELC)
      CALL JEECRA(MATER//'.ELAS      .VALC','LONUTI',0,' ')
      ZK8(JMELK  ) = 'E       '
      ZR(JMELR   ) = EM
      ZK8(JMELK+1) = 'NU      '
      ZR(JMELR+1 ) = NUM
      ZK8(JMELK+2) = 'RHO     '
      ZR(JMELR+2 ) = RHO
      IF(AMORA .GT. 0.0D0) THEN
        ZK8(JMELK+3) = 'AMOR_ALP'
        ZR(JMELR+3 ) = ALPHA
      ENDIF
      IF(AMORB .GT. 0.0D0) THEN
        ZK8(JMELK+4) = 'AMOR_BET'
        ZR(JMELR+4 ) = BETA
      ENDIF
C---------GLRC_DM---------------
      LONOBJ = 9
      CALL WKVECT(MATER//'.GLRC_DM   .VALK','G V K8',2*LONOBJ,JMELK)
      CALL JEECRA(MATER//'.GLRC_DM   .VALK','LONUTI',LONOBJ,' ')
      CALL WKVECT(MATER//'.GLRC_DM   .VALR','G V R',LONOBJ,JMELR)
      CALL JEECRA(MATER//'.GLRC_DM   .VALR','LONUTI',LONOBJ,' ')
      CALL WKVECT(MATER//'.GLRC_DM   .VALC','G V C',LONOBJ,JMELC)
      CALL JEECRA(MATER//'.GLRC_DM   .VALC','LONUTI',0,' ')
      ZK8(JMELK  ) = 'EF      '
      ZR(JMELR   ) = EF
      ZK8(JMELK+1) = 'NUF     '
      ZR(JMELR+1 ) = NUF
      ZK8(JMELK+2) = 'EPAIS   '
      ZR(JMELR+2)  = H
      ZK8(JMELK+3) = 'GAMMA_T '
      ZR(JMELR+3 ) = GT
      ZK8(JMELK+4) = 'GAMMA_F '
      ZR(JMELR+4 ) = GF
      ZK8(JMELK+5) = 'GAMMA_C '
      ZR(JMELR+5 ) = GC
      ZK8(JMELK+6) = 'SYT     '
      ZR(JMELR+6 ) = SYT
      ZK8(JMELK+7) = 'SYF     '
      ZR(JMELR+7 ) = SYF
      ZK8(JMELK+8) = 'SYC     '
      ZR(JMELR+8 ) = SYC
C---------IMPRESSION-------------
      IF (NIMPR.GT.0) THEN
        WRITE (IFR,*)
        WRITE (IFR,*)
        WRITE (IFR,*) 'PARAMETRES HOMOGENEISES POUR GLRC_DM :'
        WRITE (IFR,*) 'PENTE = :',PENTE
        WRITE (IFR,*) 'METHODE_ENDO = :',MENDOM
        WRITE (IFR,*) 'CISAILLEMENT = :',CISAIL
        WRITE (IFR,*) 'MODULE D YOUNG ET COEFFICIENT DE POISSON',
     &                ' EFFECTIFS EN MEMBRANE:'
        WRITE (IFR,*) 'EM =  :',EM
        WRITE (IFR,*) 'NUM =  :',NUM
        WRITE (IFR,*) 'MODULE D YOUNG ET COEFFICIENT DE POISSON',
     &                ' EFFECTIFS EN FLEXION:'
        WRITE (IFR,*) 'EF =  :',EF
        WRITE (IFR,*) 'NUF =  :',NUF
        WRITE (IFR,*) 'LIMITES ELASTIQUES EN TRACTION, FLEXION ET',
     &                ' COMPRESSION :'
        WRITE (IFR,*) 'SYT =   :',SYT
        WRITE (IFR,*) 'SYF =   :',SYF
        WRITE (IFR,*) 'SYC =   :',SYC
        WRITE (IFR,*) 'PARAMETRES D ENDOMMAGEMENT:'
        WRITE (IFR,*) 'GAMMAT = ',GT
        WRITE (IFR,*) 'GAMMAF = ',GF
        WRITE (IFR,*) 'GAMMAC = ',GC
      END IF
      CALL JEDEMA()
      END
