      SUBROUTINE CADDLI(NOMCMD,MOTFAC,FONREE,CHAR)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 20/05/2003   AUTEUR MABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE

      CHARACTER*4 FONREE
      CHARACTER*8 CHAR
      CHARACTER*16 NOMCMD,MOTFAC

C     BUT: CREER LES CARTES CHAR.CHME.CMULT ET CHAR.CHME.CIMPO
C          ET REMPLIR LIGRCH, EN SE SERVANT DE L'OBJET .PRNM
C          POUR AFFECTER LE BON NOMBRE DE DEGRES DE LIBERTE A CHAQUE NOE

C ARGUMENTS D'ENTREE:

C      NOMCMD  : NOM DE LA COMMANDE
C      MOTFAC  : DDL_IMPO OU TEMP_IMPO OU PRES_IMPO
C      FONREE  : TYPE DE LA VALEUR IMPOSEE :
C                REEL OU FONC OU COMP
C      CHAR    : NOM UTILISATEUR DU RESULTAT DE CHARGE




C     ----------- COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNOM,JEXNUM
C---------------- FIN COMMUNS NORMALISES  JEVEUX  ----------------------
C-----------------------------------------------------------------------
C---------------- DECLARATION DES VARIABLES LOCALES  -------------------

      INTEGER NMOCL,IEVOL
      PARAMETER (NMOCL=300)
      INTEGER DDLIMP(NMOCL),NDDLI,N,NMCL,I,J,NDDLA,IBID
      INTEGER IER,N1,N2,NBEC,JNOMA,NBNOEU,JPRNM,JVAL
      INTEGER JDIREC,JDIMEN,NBNO,IALINO,K,INO
      REAL*8 VALIMR(NMOCL),RBID,COEFR
      COMPLEX*16 VALIMC(NMOCL),CBID

      CHARACTER*1 K1BID
      CHARACTER*3 TYMOCL(NMOCL)
      CHARACTER*8 MOD,NOMA,K8BID,EVOTH,NOMFON
      CHARACTER*8 NOMN,VALIMF(NMOCL),DDL
      CHARACTER*16 MOTCLE(NMOCL),MOTCL2(5),TYMOC2(5)
      CHARACTER*19 LIGRMO,LISREL
      CHARACTER*24 NOMNOE
 
C--- Variables pour le mot-clef "LIAISON = ENCASTRE"      
      CHARACTER*16 MOTLIA(NMOCL)
      CHARACTER*72 VALLIA(NMOCL)
      INTEGER NDLIA,LIAIMP(NMOCL)
      CHARACTER*8 CMP1,CMP2,CMP3,CMP4,CMP5,CMP6   
      INTEGER  ICMP1,ICMP2,ICMP3,ICMP4,ICMP5,ICMP6,ICMP7  
      LOGICAL EXISDG 
      INTEGER INDIK8
      CHARACTER*8  NOMG,NOMCMP(NMOCL)
      INTEGER INOM,NBCMP
      CHARACTER*9 NOMTE
      INTEGER IDX,IDY,IDZ,IDRX,IDRY,IDRZ
C-------------------------------------------------------------


      CALL JEMARQ()

      MOTCL2(1) = 'NOEUD'
      TYMOC2(1) = 'NOEUD'
      MOTCL2(2) = 'GROUP_NO'
      TYMOC2(2) = 'GROUP_NO'
      MOTCL2(3) = 'MAILLE'
      TYMOC2(3) = 'MAILLE'
      MOTCL2(4) = 'GROUP_MA'
      TYMOC2(4) = 'GROUP_MA'
      MOTCL2(5) = 'TOUT'
      TYMOC2(5) = 'TOUT'
C
      LISREL = '&&CADDLI.RLLISTE'
      CALL GETFAC(MOTFAC,NDDLI)
      IF (NDDLI.EQ.0) GO TO 9999
      
C
C ---------------------------------------------------
C 1.  RECUPERATION DES MOTS-CLES DDL SOUS XXX_IMPO
C     MOTCLE(J) : K8 CONTENANT LE J-EME MOT-CLE DDL
C     NDDLA     : NOMBRE DE MOTS CLES DU TYPE DDL
C ---------------------------------------------------
      CALL GETMFM(MOTFAC,0,MOTCLE,TYMOCL,N)
      NMCL = -N
      IF (NMCL.GT.NMOCL) THEN
        CALL UTDEBM('F','CADDLI','NOMBRE DE MOTCLES SUPERIEUR AU MAX')
        CALL UTIMPI('L','NMAXOCL= ',1,NMOCL)
        CALL UTIMPI('L','NMOCL  = ',1,NMCL)
        CALL UTFINM()
      END IF
      CALL GETMFM(MOTFAC,NMCL,MOTCLE,TYMOCL,N)

C --- RECUPERATION DU MOT-CLEF "LIAISON"


      I = 1
      DO 9 J = 1,NMCL
        IF (MOTCLE(J).EQ.'LIAISON') THEN
          MOTLIA(I) = MOTCLE(J)
          I = I + 1
        END IF
   9  CONTINUE
      NDLIA = I-1
      
      
      I = 1
      DO 10 J = 1,NMCL
        IF (MOTCLE(J).NE.'TOUT' .AND. MOTCLE(J).NE.'GROUP_NO' .AND.
     +      MOTCLE(J).NE.'NOEUD' .AND. MOTCLE(J).NE.'GROUP_MA' .AND.
     +      MOTCLE(J).NE.'MAILLE' .AND. MOTCLE(J).NE.'EVOL_THER' .AND.
     +      MOTCLE(J).NE.'DDL'.AND.MOTCLE(J).NE.'LIAISON') THEN
C---- PREDETERMINATION DES LIGNES CONTENANT DX, DY, DZ, DRX, DRY, DRZ
          IF (MOTCLE(J).EQ.'DX') THEN
           IDX = I
          ENDIF
          IF (MOTCLE(J).EQ.'DY') THEN
           IDY = I
          ENDIF
          IF (MOTCLE(J).EQ.'DZ') THEN
           IDZ = I
          ENDIF
          IF (MOTCLE(J).EQ.'DRX') THEN
           IDRX = I
          ENDIF
          IF (MOTCLE(J).EQ.'DRY') THEN
           IDRY = I
          ENDIF
          IF (MOTCLE(J).EQ.'DRZ') THEN
           IDRZ = I
          ENDIF
          MOTCLE(I) = MOTCLE(J)
          I = I + 1
        END IF
       
   10 CONTINUE
      NDDLA = I - 1


    
C
C --- RECUPERATION DES NOMS DES DDLS DISPO 
C       -> STOCKAGE DANS NOMCMP (TABLEAU K8 de LONGUEUR NBCMP)
C
      NOMG = 'DEPL_R'
      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP',NOMG),'L',INOM)
      CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP',NOMG),'LONMAX',NBCMP,K1BID)

      NBCMP = NBCMP -1

      DO 14 I = 1,NBCMP
        NOMCMP(I) = ZK8(INOM-1+I)
 14   CONTINUE

C --- MODELE ASSOCIE AU LIGREL DE CHARGE ---
      CALL DISMOI('F','NOM_MODELE',CHAR(1:8),'CHARGE',IBID,MOD,IER)
      LIGRMO = MOD(1:8)//'.MODELE'

      CALL DISMOI('F','NB_NO_MAILLA',LIGRMO,'LIGREL',N1,K8BID,IER)
      CALL JELIRA(LIGRMO//'.PRNM','LONMAX',N2,K1BID)
      NBEC = N2/N1
      IF (NBEC.GT.10) THEN
        CALL UTMESS('F','CADDLI',
     +              'LE DESCRIPTEUR_GRANDEUR ASSOCIE AU MODELE'//
     +              ' NE TIENT PAS SUR DIX ENTIERS CODES')
      END IF

C --- MAILLAGE ASSOCIE AU MODELE ---

      CALL JEVEUO(LIGRMO//'.NOMA','L',JNOMA)
      NOMA = ZK8(JNOMA)

      NOMNOE = NOMA//'.NOMNOE'
      CALL JELIRA(NOMNOE,'NOMMAX',NBNOEU,K1BID)

      CALL JEVEUO(LIGRMO//'.PRNM','L',JPRNM)




C ---------------------------------------------------
C 2   ALLOCATION DE TABLEAUX DE TRAVAIL
C ---------------------------------------------------
C   OBJETS INTERMEDIAIRES PERMETTANT D'APPLIQUER LA REGLE DE SURCHARGE

C        -  VECTEUR (K8) CONTENANT LES NOMS DES NOEUDS
C        -  TABLEAU DES VALEURS DES DDLS DES NOEUDS BLOQUES
C                         DIM NBNOEU * NBCOMP
C        -  VECTEUR (IS) CONTENANT LE DESCRIPTEUR GRANDEUR ASSOCIE AUX
C                         DDLS IMPOSES PAR NOEUD

      IF (FONREE.EQ.'REEL') THEN
        CALL WKVECT('&&CADDLI.VALDDL','V V R',NDDLA*NBNOEU,JVAL)
      ELSE IF (FONREE.EQ.'COMP') THEN
        CALL WKVECT('&&CADDLI.VALDDL','V V C',NDDLA*NBNOEU,JVAL)
      ELSE IF (FONREE.EQ.'FONC') THEN
        CALL WKVECT('&&CADDLI.VALDDL','V V K8',NDDLA*NBNOEU,JVAL)
      ELSE
        CALL UTMESS('F','CADDLI','STOP 1')
      END IF
      CALL WKVECT('&&CADDLI.DIRECT','V V R',3*NBNOEU,JDIREC)
      CALL WKVECT('&&CADDLI.DIMENSION','V V I',NBNOEU,JDIMEN)

C
C ---  ON REGARDE S'IL Y A UN NOEUD DE LA LISTE 
C
      CMP1 = 'DX'
      CMP2 = 'DY'
      CMP3 = 'DZ'
      CMP4 = 'DRX'
      CMP5 = 'DRY'
      CMP6 = 'DRZ'
C
      ICMP1 = INDIK8(NOMCMP,CMP1,1,NBCMP)
      ICMP2 = INDIK8(NOMCMP,CMP2,1,NBCMP)
      ICMP3 = INDIK8(NOMCMP,CMP3,1,NBCMP)
      ICMP4 = INDIK8(NOMCMP,CMP4,1,NBCMP)
      ICMP5 = INDIK8(NOMCMP,CMP5,1,NBCMP)
      ICMP6 = INDIK8(NOMCMP,CMP6,1,NBCMP)

C --------------------------------------------------------------
C 3   BOUCLE SUR LES OCCURENCES DU MOT-CLE FACTEUR DDL IMPOSE
C --------------------------------------------------------------

      DO 60 I = 1,NDDLI


C        3.1- RECUPERATION DE LA LISTE DES NOEUDS :
C        ----------------------------------------------
        CALL RELIEM(MOD,NOMA,'NU_NOEUD',MOTFAC,I,5,MOTCL2,TYMOC2,
     +              '&&CADDLI.NUNOTMP',NBNO)
        CALL JEVEUO('&&CADDLI.NUNOTMP','L',IALINO)



C        3.2- RECUPERATION DE LA VALEUR IMPOSEE  (MOCLE(J)):
C        ---------------------------------------------------        
        IF (FONREE.EQ.'REEL') THEN
          DO 20 J = 1,NDDLA
            CALL GETVR8(MOTFAC,MOTCLE(J),I,1,1,VALIMR(J),DDLIMP(J))
   20     CONTINUE

        ELSE IF (FONREE.EQ.'COMP') THEN
          DO 30 J = 1,NDDLA
            CALL GETVC8(MOTFAC,MOTCLE(J),I,1,1,VALIMC(J),DDLIMP(J))
   30     CONTINUE


        ELSE IF (FONREE.EQ.'FONC') THEN
          DO 40 J = 1,NDDLA
            CALL GETVID(MOTFAC,MOTCLE(J),I,1,1,VALIMF(J),DDLIMP(J))
   40     CONTINUE
        END IF


                              
C        3.3- AFFECTATION DES RELATIONS LINEAIRES :
C        ----------------------------------------------
C       -- ON VERIFIE QUE SI EVOL_THER, IL EST EMPLOYE SEUL :
        IEVOL=0
        IF (NOMCMD.EQ.'AFFE_CHAR_THER_F') THEN
          CALL GETVID('TEMP_IMPO','EVOL_THER',I,1,1,EVOTH,IEVOL)
          IF (IEVOL.EQ.1) THEN
          DO 41 J = 1,NDDLA
            CALL GETVID(MOTFAC,MOTCLE(J),I,1,1,VALIMF(J),DDLIMP(J))
            IF (DDLIMP(J).NE.0) CALL UTMESS('F','CADDLI',
     &    'LE MOT CLEF EVOL_THER EST INCOMPATIBLE AVEC:'//MOTCLE(J))
   41     CONTINUE
          END IF
        END IF


        DO 50 K = 1,NBNO
          INO = ZI(IALINO-1+K)
          CALL JENUNO(JEXNUM(NOMNOE,INO),NOMN)
C---  GESTION DU MOT-CLEF "LIAISON"
          DO 21 J = 1,NDLIA         
            CALL GETVTX(MOTFAC,MOTLIA(J),I,1,1,VALLIA(J),LIAIMP(J))
            IF (VALLIA(J).EQ.'ENCASTRE') THEN
               IF (EXISDG(ZI(JPRNM-1+(INO-1)*NBEC+1),ICMP1)) THEN
                  VALIMR(IDX) = 0
                  DDLIMP(IDX) = 1
               ENDIF
               IF (EXISDG(ZI(JPRNM-1+(INO-1)*NBEC+1),ICMP2)) THEN
                  VALIMR(IDY) = 0
                  DDLIMP(IDY) = 1
               ENDIF
               IF (EXISDG(ZI(JPRNM-1+(INO-1)*NBEC+1),ICMP3)) THEN
                  VALIMR(IDZ) = 0
                  DDLIMP(IDZ) = 1
               ENDIF               
               IF (EXISDG(ZI(JPRNM-1+(INO-1)*NBEC+1),ICMP4)) THEN
                  VALIMR(IDRX) = 0
                  DDLIMP(IDRX) = 1
               ENDIF     
               IF (EXISDG(ZI(JPRNM-1+(INO-1)*NBEC+1),ICMP5)) THEN
                  VALIMR(IDRY) = 0
                  DDLIMP(IDRY) = 1
               ENDIF
               IF (EXISDG(ZI(JPRNM-1+(INO-1)*NBEC+1),ICMP6)) THEN
                  VALIMR(IDRZ) = 0
                  DDLIMP(IDRZ) = 1
               ENDIF
            ENDIF
   21   CONTINUE 
C
C         -- CAS EVOL_THER/DDL (POUR AFFE_CHAR_THER_F):
C         ---------------------------------------------
          IF (IEVOL.EQ.1) THEN
            CALL GCNCON('_',NOMFON)
            DDL='TEMP'
            CALL FOCRR1(NOMFON,EVOTH,'G','TEMP',' ',NOMN,
     &                   DDL,0,0)
            COEFR=1.D0
            CALL AFRELA (COEFR,CBID,DDL,NOMN,0,RBID,1,RBID,CBID,
     +                   NOMFON,'REEL','FONC','12',LISREL)


C         -- AUTRES CAS:
C         ---------------
          ELSE
               CALL AFDDLI(ZR(JVAL),ZK8(JVAL),ZC(JVAL),
     +                ZI(JPRNM-1+ (INO-1)*NBEC+1),NDDLA,FONREE,NOMN,INO,
     +                DDLIMP,VALIMR,VALIMF,VALIMC,MOTCLE,
     +                NBEC,ZR(JDIREC+3* (INO-1)),ZI(JDIMEN+INO-1),
     +                LISREL)
            ENDIF
   50   CONTINUE

   60 CONTINUE

      CALL AFLRCH(LISREL,CHAR)

      CALL JEDETR('&&CADDLI.VALDDL')
      CALL JEDETR('&&CADDLI.DIRECT')
      CALL JEDETR('&&CADDLI.DIMENSION')
      CALL JEDETR('&&CADDLI.NUNOTMP')



9999  CONTINUE
      CALL JEDEMA()
      END
