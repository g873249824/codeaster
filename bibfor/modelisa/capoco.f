      SUBROUTINE CAPOCO(CHAR  ,MOTFAC)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 22/12/2009   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8  CHAR
      CHARACTER*16 MOTFAC
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES MAILLEES - LECTURE DONNEES)
C
C LECTURE DES CARACTERISTIQUES DE POUTRE
C REMPLISSAGE DE LA SD DEFICO(1:16)//'.JEUPOU'
C      
C ----------------------------------------------------------------------
C 
C
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  MOTFAC : MOT-CLE FACTEUR (VALANT 'CONTACT')
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      IRET,NOC
      INTEGER      ICESC,ICESD,ICESL,ICESV,NPMAX,ISEC
      INTEGER      POSMAE,NUMMAE
      INTEGER      JDECMA
      INTEGER      IZONE,ISURFE,IMAE
      INTEGER      NBMAE
      INTEGER      INDIK8,RANGR0,RANGR1,RANGR2,IAD1,IAD2
      REAL*8       R1,R2,RAYON
      LOGICAL      YA
      INTEGER      CFDISI,NZOCO,NMACO   
      CHARACTER*8  CARAEL
      CHARACTER*24 DEFICO
      CHARACTER*24 JEUPOU,CONTMA
      INTEGER      JMACO,JJPOU
      CHARACTER*19 CARSD,CARTE
      LOGICAL      MMINFL,LDPOU
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ
C
C --- INITIALISATIONS
C
      DEFICO    = CHAR(1:8)//'.CONTACT' 
      NZOCO     = CFDISI(DEFICO,'NZOCO') 
      NMACO     = CFDISI(DEFICO,'NMACO')            
C 
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C      
      CONTMA = DEFICO(1:16)//'.MAILCO'
      CALL JEVEUO(CONTMA,'L',JMACO)    
C
C --- CREATION VECTEUR
C
      JEUPOU = DEFICO(1:16)//'.JEUPOU'
      CALL WKVECT(JEUPOU,'G V R',NMACO ,JJPOU )
C
C --- RECUPERATION DU CARA_ELEM
C
      YA = .FALSE.
      DO 10 IZONE = 1 , NZOCO
        LDPOU  = MMINFL(DEFICO,'DIST_POUTRE',IZONE )
        IF (LDPOU) THEN
          YA = .TRUE.
          CALL GETVID(MOTFAC,'CARA_ELEM',IZONE,1,1,CARAEL,NOC)
          IF (NOC.EQ.0) THEN
            CALL ASSERT(.FALSE.)
          ENDIF
        ENDIF   
 10   CONTINUE
C
      IF ( .NOT. YA ) THEN
        GOTO 999
      ENDIF
C      
C --- TRANSFO. CARTE CARA_ELEM EN CHAM_ELEM_S
C
      CARTE = CARAEL//'.CARGEOPO'
      CARSD = '&&CAPOCO.CARGEOPO'
      CALL CARCES(CARTE ,'ELEM',' ','V',CARSD ,IRET  )
C
C --- RECUPERATION DES GRANDEURS (TSEC, R1, R2) 
C --- REFERENCEE PAR LA CARTE CARGEOPO         
C
      CALL JEVEUO(CARSD//'.CESC','L',ICESC)
      CALL JEVEUO(CARSD//'.CESD','L',ICESD)
      CALL JEVEUO(CARSD//'.CESL','L',ICESL)
      CALL JEVEUO(CARSD//'.CESV','L',ICESV)
C
C --- ON RECUPERE LE RAYON EXTERIEUR DE LA POUTRE
C
      NPMAX  = ZI(ICESD-1+2)
      RANGR0 = INDIK8(ZK8(ICESC),'TSEC    ',1,NPMAX)
      RANGR1 = INDIK8(ZK8(ICESC),'R1      ',1,NPMAX)
      RANGR2 = INDIK8(ZK8(ICESC),'R2      ',1,NPMAX)
C
      DO 20 IZONE = 1 , NZOCO
        LDPOU  = MMINFL(DEFICO,'DIST_POUTRE',IZONE )

        
        IF (LDPOU) THEN   
C
          CALL CFZONE(DEFICO,IZONE ,'ESCL',ISURFE) 
          CALL CFNBSF(DEFICO,ISURFE,'MAIL',NBMAE ,JDECMA) 
C
          DO 30 IMAE = 1 ,NBMAE
C          
            POSMAE = JDECMA+IMAE
            NUMMAE = ZI(JMACO+POSMAE-1)
C
C --- TYPE DE SECTION (UNIQUEMENT CIRCULAIRE !)
C          
            CALL CESEXI('C',ICESD,ICESL,NUMMAE,1,1,RANGR0,IAD1)
            IF (IAD1.GT.0) THEN
              ISEC   = NINT( ZR(ICESV-1+ABS(IAD1)) )
            ELSE
              ISEC   = 0  
            ENDIF  
            IF (ISEC.NE.2) THEN
              CALL U2MESS('F','CONTACT3_32')
            ENDIF
C
C --- RECUPERATION RAYON
C
            CALL CESEXI('C',ICESD,ICESL,NUMMAE,1,1,RANGR1,IAD1)
            CALL CESEXI('C',ICESD,ICESL,NUMMAE,1,1,RANGR2,IAD2)
C
            IF (IAD1.GT.0) THEN
              R1 = ZR(ICESV-1+IAD1)
            ELSE
              CALL ASSERT(.FALSE.)
            ENDIF
C
            IF (IAD2.GT.0) THEN
              R2 = ZR(ICESV-1+IAD2)
            ELSE
              CALL ASSERT(.FALSE.)
            ENDIF
          
            IF (R1.NE.R2) THEN
              CALL U2MESS('1','CONTACT3_37')
            ENDIF
          
            RAYON  = (R1+R2)/2.D0
C
C --- STOCKAGE
C          
            ZR(JJPOU+POSMAE-1) = RAYON
 30       CONTINUE
        ENDIF
 20   CONTINUE
C
      CALL DETRSD('CHAM_ELEM_S',CARSD )
C
 999  CONTINUE
C
      CALL JEDEMA
C
      END
