      SUBROUTINE CBONDP(CHAR,NOMA)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 31/01/2012   AUTEUR IDOUX L.IDOUX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C     BUT: TRAITE LE MOT_CLE : ONDE_PLANE
C
C ARGUMENTS D'ENTREE:
C      CHAR   : NOM UTILISATEUR DE LA CHARGE
C      NOMA   : NOM DU MAILLAGE
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      REAL*8 DIR(3),DIST, DURE
      CHARACTER*24 ONDP(7),SIGNAL
      CHARACTER*8 CHAR,NOMA,TYPMCL(2),MODELE
      CHARACTER*2 TYPE
      INTEGER NONDP, LXLGUT, JMA, NBMA, IARG
      CHARACTER*16  MOTCLE(2)
      CHARACTER*19  CARTE, LIGRMO

      CALL JEMARQ()
      CALL GETFAC('ONDE_PLANE', NONDP)

      IF (NONDP.EQ.0) GOTO 9999
      CALL GETVR8('ONDE_PLANE','DIRECTION',1,IARG,0,DIR,NDIR)
      NDIR = - NDIR
      CALL GETVR8 ('ONDE_PLANE','DIRECTION',1,IARG,NDIR,DIR,NBID)
      IF (NDIR.EQ.2) DIR(3) = 0.D0
      CALL GETVTX('ONDE_PLANE','TYPE_ONDE',1,IARG,1,TYPE,NTY)
      CALL GETVID('ONDE_PLANE','FONC_SIGNAL',1,IARG,1,SIGNAL,NSI)

      ONDP(1) = CHAR//'.DIRX'
      ONDP(2) = CHAR//'.DIRY'
      ONDP(3) = CHAR//'.DIRZ'
      ONDP(4) = CHAR//'.TYPE'
      ONDP(5) = SIGNAL
      ONDP(6) = CHAR//'.MAIL'

C --- CREATION DES FONCTIONS NECESSAIRES

      DO 10 I = 1,6
        IF (I.NE.5) THEN
           CALL ASSERT(LXLGUT(ONDP(I)).LE.24)
           CALL WKVECT(ONDP(I)(1:19)//'.PROL','G V K24',6,JPRO)
           ZK24(JPRO)   = 'CONSTANT'
           ZK24(JPRO+1) = 'LIN LIN '
           ZK24(JPRO+2) = 'TOUTPARA'
           ZK24(JPRO+3) = 'TOUTRESU'
           ZK24(JPRO+4) = 'CC      '
           ZK24(JPRO+5) = ONDP(I)
        ENDIF
10    CONTINUE

C --- REMPLISSAGE DES .VALE CORRESPONDANTS

      CALL WKVECT(ONDP(1)(1:19)//'.VALE','G V R',2,LVAL)
      ZR(LVAL) = 1.D0
      ZR(LVAL+1) = DIR(1)

      CALL WKVECT(ONDP(2)(1:19)//'.VALE','G V R',2,LVAL)
      ZR(LVAL) = 1.D0
      ZR(LVAL+1) = DIR(2)

      CALL WKVECT(ONDP(3)(1:19)//'.VALE','G V R',2,LVAL)
      ZR(LVAL) = 1.D0
      ZR(LVAL+1) = DIR(3)

      IF (NDIR.EQ.3) THEN
         IF (TYPE.EQ.'P ') THEN
            TYPR = 0.D0
         ELSEIF (TYPE.EQ.'SV') THEN
            TYPR = 1.D0
         ELSEIF (TYPE.EQ.'SH') THEN
            TYPR = 2.D0
         ELSEIF (TYPE.EQ.'S ') THEN
            CALL U2MESS('F','MODELISA3_61')
         ENDIF
      ELSE
         IF (TYPE.EQ.'P ') THEN
            TYPR = 0.D0
         ELSEIF (TYPE.EQ.'S ') THEN
            TYPR = 1.D0
         ELSEIF (TYPE.EQ.'SV'.OR.TYPE.EQ.'SH') THEN
            CALL U2MESS('F','MODELISA3_62')
         ENDIF
      ENDIF

      CALL WKVECT(ONDP(4)(1:19)//'.VALE','G V R',2,LVAL)
      ZR(LVAL) = 1.D0
      ZR(LVAL+1) = TYPR
      
CKH ---- DEBUT MODIF
CKH ---- ON RECUPERE LES MAILLES

      MOTCLE(1) = 'GROUP_MA'
      MOTCLE(2) = 'MAILLE'
      TYPMCL(1) = 'GROUP_MA'
      TYPMCL(2) = 'MAILLE'
C
C --- STOCKAGE DANS LA CARTE
C
      CALL GETVID(' ','MODELE',0,IARG,1,MODELE,JMA)
      LIGRMO = MODELE//'.MODELE'
      
      CALL RELIEM(LIGRMO,NOMA,'NO_MAILLE','ONDE_PLANE',1,2,
     &            MOTCLE,TYPMCL,ONDP(6),NBMA)
      IF (NBMA.EQ.0) GOTO 100
      
      CALL WKVECT(ONDP(6)(1:19)//'.NBMA','G V I',1,LVAL)
      ZI(LVAL) = NBMA
      
      CALL JEVEUO (ONDP(6),'L',JMA)
      CALL WKVECT(ONDP(6)(1:19)//'.VALE','G V K8',NBMA,LVAL)
      DO 5 I=1,NBMA
        ZK8(LVAL+I-1) = ZK8(JMA+I-1)
  5     CONTINUE

 100  CONTINUE
CKH ---FIN MODIF

      IF (NDIR.NE.0) CALL CAONDP(CHAR,NOMA,ONDP)

9999  CONTINUE
      CALL JEDEMA()
      END
