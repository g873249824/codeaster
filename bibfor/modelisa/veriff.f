      SUBROUTINE VERIFF(NBFONC,NOMFON,NBP1,NBP2,LONG)
      IMPLICIT NONE
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 03/09/2012   AUTEUR BERRO H.BERRO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C-----------------------------------------------------------------------
C     VERIFICATION DE LA COHERENCE DES DISCRETISATIONS SPATIALES DES
C     FONCTIONS DE FORME
C     CARACTERISATION DES DISCRETISATIONS
C     APPELANT : SPECFF
C-----------------------------------------------------------------------
C IN  : NBFONC : NOMBRE DE TABLE_FONCTIONS
C IN  : NOMFON : LISTE DES NOMS DES CONCEPTS DE TYPE TABLE_FONCTION
C OUT : NBP1   : NOMBRE DE POINTS DE DISCRETISATION DES FONCTIONS DE
C                FORME SUR LA PREMIERE DIRECTION D'ESPACE DU REPERE
C OUT : NBP2   : NOMBRE DE POINTS DE DISCRETISATION DES FONCTIONS DE
C                FORME SUR LA DEUXIEME DIRECTION D'ESPACE DU REPERE
C OUT : LONG   : LONGUEUR EXCITEE  LONG = L
C
C
C REMARQUE : DICRETISATION ATTENDUE DES FONCTIONS
C
C LA TABLE FONCTION DOIT CONTENIR DEUX FONCTIONS DE FORME, CHACUNE
C DISCRETISEE SUR UN INTERVALLE 0,L
C
C LA PREMIERE FONCTION DE FORME EST SELON LA PREMIERE DIRECTION D'ESPACE
C  DU REPERE GLOBAL ORTHOGONALE A LA POUTRE (SENS DIRECT).
C
C LA SECONDE EST SELON LA SECONDE DIRECTION D'ESPACE DU REPERE GLOBAL
C ORTHOGONALE A LA POUTRE (SENS DIRECT).
C
C
      INCLUDE 'jeveux.h'
      INTEGER      NBFONC,NBP1,NBP2
      CHARACTER*8  NOMFON(NBFONC)
      REAL*8       LONG
C
      CHARACTER*8  K8BID
      CHARACTER*19 TBFONC, FONC1, FONC2
      CHARACTER*24 LSTFON,TBNP,TBLP,VALE1,VALE2
      REAL*8       L1,L2
C
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
      INTEGER IFO ,ILEXC ,INBP1 ,INBP2 ,IVALE1, IVALE2
      INTEGER ITBNP, ITBLP, ILFON, VALI(1)
C-----------------------------------------------------------------------
      CALL JEMARQ()
C
C-----VECTEURS DE TRAVAIL POUR LE STOCKAGE DES VALEURS DE L, NBP1 ET
C-----NBP2 POUR CHAQUE FONCTION
C
      CALL WKVECT('&&VERIFF.TEMP.LEXC','V V R',NBFONC,ILEXC)
      CALL WKVECT('&&VERIFF.TEMP.NBP1','V V I',NBFONC,INBP1)
      CALL WKVECT('&&VERIFF.TEMP.NBP2','V V I',NBFONC,INBP2)
C
C-----BOUCLE SUR LE NOMBRE DE TABLE_FONCTIONS DE FORME
C
      DO 10 IFO = 1,NBFONC
C
        TBFONC = NOMFON(IFO)
        TBNP = TBFONC//'.TBNP'
        CALL JEVEUO(TBNP,'L',ITBNP)
C
C       --- VERIFICATION QUE LA TABLE DES FONCTIONS DE FORME EST 
C         - VALIDE
        VALI(1) = IFO
        IF ((ZI(ITBNP).NE.1).AND.(ZI(ITBNP+1).NE.2)) THEN
          CALL U2MESI ('F','MODELISA7_67', 1, VALI)
        ENDIF
C
        TBLP = TBFONC//'.TBLP'
        CALL JEVEUO(TBLP,'L',ITBLP)
        IF (ZK24(ITBLP)(1:8).NE.'FONCTION') THEN
          CALL U2MESI ('F','MODELISA7_68', 1, VALI)
        ENDIF
C
        LSTFON = ZK24(ITBLP+2)
        CALL JEVEUO(LSTFON,'L',ILFON)
        FONC1 = ZK8(ILFON)  //'           '
        FONC2 = ZK8(ILFON+1)//'           '
C
        CALL JELIBE(LSTFON)
        CALL JELIBE(TBLP)
        CALL JELIBE(TBNP)
C
        VALE1 = FONC1//'.VALE'
        VALE2 = FONC2//'.VALE'
 
        CALL JELIRA(VALE1,'LONUTI',NBP1,K8BID)
        NBP1 = NBP1/2
C
        CALL JELIRA(VALE2,'LONUTI',NBP2,K8BID)
        NBP2 = NBP2/2
C
C-------ON VERIFIE QUE L'ON A AU MOINS 2 VALEURS DANS CHAQUE FONCTION
C
        IF ((NBP1.LT.2).OR.(NBP2.LT.2)) THEN
          CALL U2MESI ('F','MODELISA7_67', 1, VALI)
        ENDIF
C
        CALL JEVEUO(VALE1,'L',IVALE1)
        CALL JEVEUO(VALE2,'L',IVALE2)
C
C-------ON VERIFIE QUE LA PREMIERE VALEUR DU PARAMETRE EST 0
C
        IF ((ZR(IVALE1).NE.0.D0).OR.(ZR(IVALE1).NE.0.D0)) THEN
          CALL U2MESI ('F','MODELISA7_69', 1, VALI)
        ENDIF

C       --- ON VERIFIE QUE LE PARAMETRE L EST LE MEME DS LES 2 FONCTIONS
        L1 = ZR(IVALE1+NBP1-1)
        L2 = ZR(IVALE2+NBP2-1)
        IF (L1.NE.L2) THEN
          CALL U2MESI ('F','MODELISA7_70', 1, VALI)
        ELSE
          ZI(INBP1+IFO-1) = NBP1
          ZI(INBP2+IFO-1) = NBP2
          ZR(ILEXC+IFO-1) = L1
        ENDIF

        CALL JELIBE(VALE1)
        CALL JELIBE(VALE2)

C
  10  CONTINUE
C
C-----VERIFICATION DE LA COHERENCE DES DISCRETISATIONS DE TOUTES LES
C-----FONCTIONS :  - LA LONGUEUR EXCITEE L DOIT ETRE COMMUNE
C-----             - NBP1 ET NBP2 DOIVENT ETRE COMMUNS
C
      IF (NBFONC.GT.1) THEN
        DO 30 IFO = 1,NBFONC-1
          IF (ZR(ILEXC+IFO-1).NE.ZR(ILEXC+IFO)) THEN
            CALL U2MESS('F','MODELISA7_71')
          ENDIF
          IF (ZI(INBP1+IFO-1).NE.ZI(INBP1+IFO) .OR.
     &        ZI(INBP2+IFO-1).NE.ZI(INBP2+IFO)) THEN
            CALL U2MESS('F','MODELISA7_72')
          ENDIF
  30    CONTINUE
      ENDIF
C
C-----ON RENVOIE LES GRANDEURS CARACTERISTIQUES COMMUNES AUX
C-----DISCRETISATIONS DES FONCTIONS
C
      LONG = ZR(ILEXC)
      NBP1 = ZI(INBP1)
      NBP2 = ZI(INBP2)
C
      CALL JEDETR('&&VERIFF.TEMP.LEXC')
      CALL JEDETR('&&VERIFF.TEMP.NBP1')
      CALL JEDETR('&&VERIFF.TEMP.NBP2')
      CALL JEDEMA()
      END
