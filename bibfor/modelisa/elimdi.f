      SUBROUTINE ELIMDI(CHARGE,LISREL,NOMGD,NBDUAL,NBSURC)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE PELLET J.PELLET
      INCLUDE 'jeveux.h'
      CHARACTER*8 CHARGE,NOMGD
      CHARACTER*19 LISREL
      INTEGER NBDUAL,NBSURC
C -----------------------------------------------------------------
C  MODIFICATION DE LA SD_LISTE_RELA  LISREL :
C
C  SI METHODE='ELIMINATION' :
C      * ON CREE UNE SD_CHAR_CINE POUR LES RELATIONS N'AYANT
C        QU'UN SEUL TERME.
C      * ON SUPPRIME DE LISREZ LES RELATIONS ELIMINEES
C -----------------------------------------------------------------
C   OUT : NBDUAL : NOMBRE DE RELATIONS A DUALISER
C   OUT : NBSURC : NOMBRE DE RELATIONS EN DOUBLON
C
C
C --------- VARIABLES LOCALES ---------------------------
      CHARACTER*24 METH
      CHARACTER*19 CHARCI
      CHARACTER*4 TYPCOE,TYPVAL
      CHARACTER*8 NONO,NOCMP,MAILLA,TYPECI
      CHARACTER*8 KBID,MODELE
      INTEGER NELIM,IRELA,NBTERM,JRLSU,JRLNT,JRLCO,JRLDD
      INTEGER JRLPO,JRLTC,JRLNR,NBRELA,JRLNO,IBID,INDSUR
      INTEGER INDIK8,NUCMP,JAFCI,JAFCK,JAFCV,IDECA1,NUNO
      INTEGER JRLTV,JRLBE,IER,NELIM1,ICO,JNCMP,NBCMP,JPRNM
      INTEGER NUCMP2,ICMP,NBEC,NDUMIN
      LOGICAL ELIM,EXISDG
      INTEGER GETEXM
      REAL*8 RCOEF
      INTEGER      IARG


      CALL JEMARQ()

      CALL JEVEUO(LISREL//'.RLSU','E',JRLSU)
      CALL JEVEUO(LISREL//'.RLNR','L',JRLNR)
      CALL JEVEUO(LISREL//'.RLNT','L',JRLNT)
      CALL JEVEUO(LISREL//'.RLCO','L',JRLCO)
      CALL JEVEUO(LISREL//'.RLDD','L',JRLDD)
      CALL JEVEUO(LISREL//'.RLNO','L',JRLNO)
      CALL JEVEUO(LISREL//'.RLPO','L',JRLPO)
      CALL JEVEUO(LISREL//'.RLTC','L',JRLTC)
      CALL JEVEUO(LISREL//'.RLTV','L',JRLTV)
      CALL JEVEUO(LISREL//'.RLBE','L',JRLBE)

      NBRELA=ZI(JRLNR)
      CALL ASSERT(NBRELA.GT.0)
      TYPCOE=ZK8(JRLTC)(1:4)
      TYPVAL=ZK8(JRLTV)(1:4)


      IF (GETEXM(' ','METHODE') .EQ. 1) THEN
        CALL GETVTX(' ', 'METHODE',0,IARG,1,METH,IBID)
        CALL ASSERT(IBID.EQ.1)
        ELIM=(METH.EQ.'ELIMINATION')
      ELSE
        ELIM=.FALSE.
      ENDIF
      IF (.NOT.ELIM) GOTO 9998



C     1. Y-A-T-IL DES RELATIONS CANDIDATES A L'ELIMINATION ?
C        ON ELIMINE LES RELATIONS N'AYANT QU'UN SEUL TERME
C     -------------------------------------------------------
      NELIM=0
      DO 10 IRELA=1,NBRELA
        INDSUR=ZI(JRLSU-1+IRELA)
        IF (INDSUR.EQ.1) GOTO 10
        CALL ASSERT(INDSUR.EQ.0)
        NBTERM=ZI(JRLNT+IRELA-1)
        IF (NBTERM.EQ.1) THEN
          NELIM=NELIM+1
          ZI(JRLSU-1+IRELA)=2
        ENDIF
 10   CONTINUE
      IF (NELIM.EQ.0) GOTO 9998


C     1B. ON CONSERVE QUELQUES RELATIONS DUALISEES POUR QUE
C        STAT_NON_LINE PUISSE CALCULER RESI_GLOB_RELA
C        NDUMIN : NOMBRE MINIMUM DE RELATIONS DUALISEES A CONSERVER
C     ---------------------------------------------------------------
      NDUMIN=0
      NELIM=MAX(NELIM-NDUMIN,0)

      ICO=0
      DO 11 IRELA=1,NBRELA
        INDSUR=ZI(JRLSU-1+IRELA)
        IF (INDSUR.EQ.2) THEN
          ICO=ICO+1
          IF (ICO.GT.NELIM) THEN
            ZI(JRLSU-1+IRELA)=0
          ELSE
          ENDIF
        ENDIF
 11   CONTINUE
      IF (NELIM.EQ.0) GOTO 9998



C     2. ALLOCATION/RECUPERATION DE LA SD_CHAR_CINE :
C     ----------------------------------------------
      CHARCI=CHARGE//'.ELIM'
      CALL DISMOI('F','NOM_MODELE',CHARGE,'CHARGE',IBID,MODELE,IBID)
      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,MAILLA,IBID)
      CALL JEEXIN(CHARCI//'.AFCK',IER)
      IF (IER.EQ.0) THEN
        CALL WKVECT(CHARCI//'.AFCK','G V K8',3,JAFCK)
        ZK8(JAFCK-1+2)=MODELE
        TYPECI='CIXX_YY'
        IF (NOMGD.EQ.'DEPL_R') THEN
          TYPECI(3:4)='ME'
        ELSEIF (NOMGD.EQ.'TEMP_R') THEN
          TYPECI(3:4)='TH'
        ELSEIF (NOMGD.EQ.'PRES_C') THEN
          TYPECI(3:4)='AC'
        ENDIF
        IF (TYPVAL.EQ.'REEL') THEN
          TYPECI(6:7)='RE'
        ELSEIF (TYPVAL.EQ.'COMP') THEN
          TYPECI(6:7)='CX'
        ELSEIF (TYPVAL.EQ.'FONC') THEN
          TYPECI(6:7)='FO'
        ENDIF
        ZK8(JAFCK-1+1)=TYPECI

        CALL WKVECT(CHARCI//'.AFCI','G V I',3*NELIM+1,JAFCI)
        ZI(JAFCI-1+1)=NELIM

        IF (TYPVAL.EQ.'REEL') THEN
          CALL WKVECT(CHARCI//'.AFCV','G V R',NELIM,JAFCV)
        ELSEIF (TYPVAL.EQ.'COMP') THEN
          CALL WKVECT(CHARCI//'.AFCV','G V C',NELIM,JAFCV)
        ELSEIF (TYPVAL.EQ.'FONC') THEN
          CALL WKVECT(CHARCI//'.AFCV','G V K8',NELIM,JAFCV)
        ENDIF
        ICO=0
      ELSE
        CALL JEVEUO(CHARCI//'.AFCI','L',JAFCI)
        NELIM1=ZI(JAFCI-1+1)
        CALL JUVECA(CHARCI//'.AFCI',3*(NELIM1+NELIM)+1)
        CALL JUVECA(CHARCI//'.AFCV',(NELIM1+NELIM))
        CALL JEVEUO(CHARCI//'.AFCI','E',JAFCI)
        ZI(JAFCI-1+1)=NELIM1+NELIM
        ICO=NELIM1
      ENDIF



C     3. REMPLISSAGE DE LA SD_CHAR_CINE :
C     ------------------------------------
      CALL JEVEUO(CHARCI//'.AFCI','E',JAFCI)
      CALL JEVEUO(CHARCI//'.AFCV','E',JAFCV)
      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'L',JNCMP)
      CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'LONMAX',NBCMP,KBID)
      CALL JELIRA(LISREL//'.RLCO','TYPE',IBID,KBID)
      CALL ASSERT(KBID.EQ.'R'.OR.KBID.EQ.'C')
      IF (KBID.EQ.'R') CALL ASSERT(TYPCOE.EQ.'REEL')
      IF (KBID.EQ.'C') CALL ASSERT(TYPCOE.EQ.'COMP')
      CALL DISMOI('F','NB_EC',NOMGD,'GRANDEUR',NBEC,KBID,IBID)
      CALL JEVEUO(MODELE//'.MODELE    .PRNM','L',JPRNM)

      DO 21 IRELA=1,NBRELA
        IF (ZI(JRLSU-1+IRELA).NE.2) GOTO 21

        ICO=ICO+1
        IDECA1=ZI(JRLPO-1+IRELA)-ZI(JRLNT-1+IRELA)+1

C       -- ON VERIFIE QUE LE COEFFICIENT EST BIEN 1. :
        IF (TYPCOE.EQ.'REEL') THEN
          RCOEF=ZR(JRLCO-1+IDECA1)
        ELSEIF (TYPVAL.EQ.'COMP') THEN
          RCOEF=ABS(ZC(JRLCO-1+IDECA1))
        ENDIF
        CALL ASSERT(ABS(RCOEF-1.D0).LT.1.D-4)

        NONO=ZK8(JRLNO-1+IDECA1)
        NOCMP=ZK8(JRLDD-1+IDECA1)
        CALL JENONU(JEXNOM(MAILLA//'.NOMNOE',NONO),NUNO)
        NUCMP=INDIK8(ZK8(JNCMP),NOCMP,1,NBCMP)
        CALL ASSERT(NUCMP.GT.0)

C       -- ON COMPTE LES CMPS PORTEES PAR LE NOEUD <= NUCMP
        NUCMP2 = 0
        DO 122 ICMP = 1, NBCMP
           IF (EXISDG(ZI(JPRNM-1+NBEC*(NUNO-1)+1),ICMP)) THEN
              NUCMP2 = NUCMP2 + 1
              IF (ICMP.EQ.NUCMP) GOTO 123
           ENDIF
 122    CONTINUE
        CALL ASSERT(.FALSE.)
 123    CONTINUE

        ZI(JAFCI+3*(ICO-1)+1)=NUNO
        ZI(JAFCI+3*(ICO-1)+2)=NUCMP2
        IF (TYPVAL.EQ.'REEL') THEN
          ZR(JAFCV-1+ICO)=ZR(JRLBE-1+IRELA)
        ELSEIF (TYPVAL.EQ.'COMP') THEN
          ZC(JAFCV-1+ICO)=ZC(JRLBE-1+IRELA)
        ELSEIF (TYPVAL.EQ.'FONC') THEN
          CALL ASSERT(ZK24(JRLBE-1+IRELA)(9:24).EQ.' ')
          ZK8(JAFCV-1+ICO)=ZK24(JRLBE-1+IRELA)(1:8)
        ENDIF

 21   CONTINUE



C     4. CALCUL DE NBDUAL ET NBSURC:
C     ------------------------------
 9998 CONTINUE
      NBDUAL=0
      NBSURC=0
      DO 22 IRELA=1,NBRELA
        IF (ZI(JRLSU-1+IRELA).EQ.0) NBDUAL=NBDUAL+1
        IF (ZI(JRLSU-1+IRELA).EQ.1) NBSURC=NBSURC+1
 22   CONTINUE

      CALL JEDEMA()
      END
