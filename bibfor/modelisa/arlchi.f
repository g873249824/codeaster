      SUBROUTINE ARLCHI(MAIL  ,NOM1  ,NOM2  ,MAILAR,QUADRA,
     &                  TYPMAI,LCARA ,TABCPL,NBCHEL,CHAMES)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 19/10/2010   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MEUNIER S.MEUNIER
C
      IMPLICIT NONE
      CHARACTER*8  MAILAR,MAIL
      CHARACTER*10 QUADRA
      CHARACTER*24 TABCPL
      CHARACTER*10 NOM1,NOM2
      CHARACTER*16 TYPMAI
      REAL*8       LCARA
      INTEGER      NBCHEL
      CHARACTER*19 CHAMES(NBCHEL)
C
C ----------------------------------------------------------------------
C
C ROUTINE ARLEQUIN
C
C CREATION DES CHAM_ELEM_S POUR APPEL A CALCUL - ARLQ_MATR
C
C ----------------------------------------------------------------------
C
C
C IN  MAIL   : NOM DU MAILLAGE
C IN  NOM1   : NOM DE LA SD DE STOCKAGE MAILLES GROUP_MA_1
C IN  NOM2   : NOM DE LA SD DE STOCKAGE MAILLES GROUP_MA_2
C IN  MAILAR : NOM DU PSEUDO-MAILLAGE
C IN  QUADRA : SD DES QUADRATURES A CALCULER
C IN  TYPMAI : SD CONTENANT NOM DES TYPES ELEMENTS (&&CATA.NOMTM)
C IN  LCARA  : LONGUEUR CARACTERISTIQUE POUR TERME DE COUPLAGE (PONDERA
C              TION DES TERMES DE COUPLAGE)
C IN  TABCPL : TABLEAU DE CORRESPONDANCE
C               POUR CHAQUE PSEUDO-MAILLE -> NUM. COUPLE
C IN  NBCHEL : NOMBRE DE CHAM_ELEM CREES
C I/O CHAMES : IN  -> NOM DES CHAM_ELEM_S A CREER
C              OUT -> CHAM_ELEM_S
C
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      CHARACTER*32 JEXNUM,JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER       NBNOMX
      INTEGER       IFM,NIV
      CHARACTER*19  NGRM1,NGRM2
      INTEGER       JGRP1,JGRP2
      INTEGER       JTYP,JDIME,JCOOR,JCUMU,JCONX
      INTEGER       JQNUME,JQMAMA,JQMAFA,JQTYPM
      INTEGER       NBMA,NDIM,NBNOC1,NBNOC2
      INTEGER       NUMMC1,NUMMC2
      INTEGER       NCMPI,NCMPF,NCMPR,NCMPC
      INTEGER       IFAM,ICPL,IMA,IGM,ICMP
      INTEGER       FAMIL
      CHARACTER*8   TMS,TMC1,TMC2,NOMFAM,ELREF1,ELREF2,K8BID,GRNOM
      INTEGER       JTABCP,JTYPMM
      CHARACTER*24  GRPMA
      CHARACTER*19  CTFAMI,CTINFO
      CHARACTER*19  CTREF1,CTCOO1
      CHARACTER*19  CTREF2,CTCOO2
      INTEGER       IRET
      INTEGER       NBGRM,NMAIN1,NMAIN2,NMASS
      CHARACTER*2   CH2
      REAL*8        CNO1(81),CNO2(81),R8MAEM, R8MAX
      LOGICAL       LINCL1,LINCL2

      INTEGER      NBVLI,NBVLR,NBVLK
      PARAMETER   ( NBVLI = 1 , NBVLR = 1 , NBVLK = 1 )
      INTEGER      VALI(NBVLI)
      REAL*8       VALR(NBVLR)
      CHARACTER*24 VALK(NBVLK)

      CHARACTER*6  NOMPRO
      PARAMETER   (NOMPRO='ARLCHI')

      CHARACTER*8  VFAMI,VINFO(5)
      CHARACTER*8  VREF1,VCOO1(81),VREF2,VCOO2(81)
      INTEGER      JFAMV,JFAMD,JFAML,JINFV,JINFD,JINFL
      INTEGER      JREF1V,JREF1D,JREF1L,JCOO1V,JCOO1D,JCOO1L
      INTEGER      JREF2V,JREF2D,JREF2L,JCOO2V,JCOO2D,JCOO2L
      INTEGER      JADF,JADI,JADC,JADR
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('ARLEQUIN',IFM,NIV)
C
C --- AFFICHAGE
C
      CALL ARLDBG(NOMPRO,NIV,IFM,1,NBVLI,VALI,NBVLR,VALR,NBVLK,VALK)
C
C --- INITIALISATIONS
C
      CTFAMI = CHAMES(1)
      CTINFO = CHAMES(2)
      CTREF1 = CHAMES(3)
      CTCOO1 = CHAMES(4)
      CTREF2 = CHAMES(5)
      CTCOO2 = CHAMES(6)
C
      R8MAX = R8MAEM()
C
C --- INFO SUR LE PSEUDO-MAILLAGE
C
      CALL JEVEUO(MAILAR(1:8)//'.DIME','L',JDIME)
      NBMA = ZI(JDIME - 1 + 3)
      NDIM = ZI(JDIME - 1 + 6)

      IF (NDIM.EQ.2) THEN
        NBNOMX = 9
      ELSEIF (NDIM.EQ.3) THEN
        NBNOMX = 27
      ELSE
         CALL ASSERT(.FALSE.)
      ENDIF
C
C --- LECTURE SD CONTENANT NOM DES TYPES ELEMENTS (&&CATA.NOMTM)
C
      CALL JEVEUO(TYPMAI,'L',JTYPMM)
C
C --- LECTURE DONNEES MAILLAGE
C
      CALL JEVEUO(MAIL(1:8)//'.TYPMAIL','L',JTYP)
      CALL JEVEUO(MAIL(1:8)//'.COORDO    .VALE','L',JCOOR)
      CALL JEVEUO(MAIL(1:8)//'.CONNEX','L',JCONX)
      CALL JEVEUO(JEXATR(MAIL(1:8)//'.CONNEX','LONCUM'),'L',JCUMU)
C
C --- LECTURE DONNEES GROUPE DE MAILLES
C
      NGRM1 = NOM1(1:10)//'.GROUPEMA'
      NGRM2 = NOM2(1:10)//'.GROUPEMA'
      CALL JEVEUO(NGRM1(1:19),'L',JGRP1)
      CALL JEVEUO(NGRM2(1:19),'L',JGRP2)
C
C --- GROUPES DE MAILLES
C
      NMAIN1 = 0
      NMAIN2 = 0
      NMASS  = 0
      GRPMA  = MAILAR(1:8)//'.GROUPEMA       '
      CALL JEEXIN(GRPMA,IRET)
       IF (IRET.NE.0) THEN
         CALL JELIRA(GRPMA,'NUTIOC',NBGRM,K8BID)
         IF ((NBGRM.GE.1).AND.(NBGRM.LE.3)) THEN
           DO 51 IGM = 1,NBGRM
            CALL JENUNO(JEXNUM(GRPMA,IGM),GRNOM)
            IF (GRNOM.EQ.'INCLU1') THEN
              CALL JELIRA(JEXNUM(GRPMA,IGM),'LONUTI',NMAIN1,K8BID)
            ELSEIF (GRNOM.EQ.'INCLU2') THEN
              CALL JELIRA(JEXNUM(GRPMA,IGM),'LONUTI',NMAIN2,K8BID)
            ELSEIF (GRNOM.EQ.'SOUS') THEN
              CALL JELIRA(JEXNUM(GRPMA,IGM),'LONUTI',NMASS ,K8BID)
            ELSE
              CALL ASSERT(.FALSE.)
            ENDIF
  51       CONTINUE
         ELSE
           CALL ASSERT(.FALSE.)
         ENDIF
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- TABLEAU DE CORRESPONDANCE NUM. ABS. MAILLE CREEE -> COUPLE
C
      CALL JEVEUO(TABCPL,'L',JTABCP)
C
C --- LECTURE DONNEES QUADRATURES
C
      CALL JEVEUO(QUADRA(1:10)//'.MAMA'  ,'L',JQMAMA)
      CALL JEVEUO(QUADRA(1:10)//'.MAFA'  ,'L',JQMAFA)
      CALL JEVEUO(QUADRA(1:10)//'.NUMERO','L',JQNUME)
      CALL JEVEUO(QUADRA(1:10)//'.TYPEMA','L',JQTYPM)
C
C --- REMPLISSAGE COMPOSANTES DES CHAM_ELEM_S
C
      NCMPF = 1
      VFAMI = 'Z1'
C
      NCMPI = 5
      DO 10 ICMP = 1,NCMPI
        CALL CODENT(ICMP,'G',CH2)
        VINFO(ICMP) = 'X'//CH2
  10  CONTINUE
C
      CALL CESCRE('V',CTFAMI,'ELEM',MAILAR,'NEUT_K8',NCMPF,VFAMI,
     &            -1,-1,-1)
      CALL CESCRE('V',CTINFO,'ELEM',MAILAR,'NEUT_R',NCMPI,VINFO,
     &            -1,-1,-5)

C
C --- REMPLISSAGE COMPOSANTES DES CHAM_ELEM_S
C
      NCMPR = 1
      VREF1 = 'Z1'
      VREF2 = 'Z1'
C
      NCMPC = NDIM*NBNOMX
      DO 13 ICMP = 1,NCMPC
        CALL CODENT(ICMP,'G',CH2)
        VCOO1(ICMP) = 'X'//CH2
        VCOO2(ICMP) = 'X'//CH2
  13  CONTINUE

      CALL CESCRE('V',CTREF1,'ELEM',MAILAR,'NEUT_K8',NCMPR,VREF1,
     &            -1,-1,-1)
      CALL CESCRE('V',CTCOO1,'ELEM',MAILAR,'NEUT_R',NCMPC,VCOO1,
     &            -1,-1,-NCMPC)
      CALL CESCRE('V',CTREF2,'ELEM',MAILAR,'NEUT_K8',NCMPR,VREF2,
     &            -1,-1,-1)
      CALL CESCRE('V',CTCOO2,'ELEM',MAILAR,'NEUT_R',NCMPC,VCOO2,
     &            -1,-1,-NCMPC)
C
C --- ACCES AUX CHAM_ELEM_S - VALEURS
C
      CALL JEVEUO(CTFAMI//'.CESV','E',JFAMV)
      CALL JEVEUO(CTFAMI//'.CESD','E',JFAMD)
      CALL JEVEUO(CTFAMI//'.CESL','E',JFAML)

      CALL JEVEUO(CTINFO//'.CESV','E',JINFV)
      CALL JEVEUO(CTINFO//'.CESD','E',JINFD)
      CALL JEVEUO(CTINFO//'.CESL','E',JINFL)

      CALL JEVEUO(CTREF1//'.CESV','E',JREF1V)
      CALL JEVEUO(CTREF1//'.CESD','E',JREF1D)
      CALL JEVEUO(CTREF1//'.CESL','E',JREF1L)

      CALL JEVEUO(CTCOO1//'.CESV','E',JCOO1V)
      CALL JEVEUO(CTCOO1//'.CESD','E',JCOO1D)
      CALL JEVEUO(CTCOO1//'.CESL','E',JCOO1L)

      CALL JEVEUO(CTREF2//'.CESV','E',JREF2V)
      CALL JEVEUO(CTREF2//'.CESD','E',JREF2D)
      CALL JEVEUO(CTREF2//'.CESL','E',JREF2L)

      CALL JEVEUO(CTCOO2//'.CESV','E',JCOO2V)
      CALL JEVEUO(CTCOO2//'.CESD','E',JCOO2D)
      CALL JEVEUO(CTCOO2//'.CESL','E',JCOO2L)
C
C --- REMPLISSAGE VALEURS DES CHAM_ELEM_S
C
      DO 90 IMA = 1,NBMA
C
C --- NUMERO DU COUPLE ATTACHE A LA MAILLE
C
        ICPL   = ZI(JTABCP+IMA -1)
        IFAM   = ZI(JQMAFA+ICPL-1)
C
C --- NUMERO DE FAMILLE D'INTEGRATION
C
        FAMIL  = ZI(JQNUME+IFAM-1)
C
C --- TYPE DE LA MAILLE SUPPORT INTEGRATION
C
        TMS    = ZK8(JQTYPM+IFAM-1)
C
C --- NOM FAMILLE INTEGRATION
C
        CALL CFAMIL(TMS   ,FAMIL ,NOMFAM)
C
C --- REMPLISSAGE CTFAMI
C
        CALL CESEXI('S', JFAMD,JFAML,IMA,1,1,1,JADF)
        IF (JADF.LT.0) THEN
           ZK8(JFAMV-1-JADF) = NOMFAM
           ZL(JFAML-1-JADF) = .TRUE.
        ENDIF
C
C --- INFO. SUR COUPLE DE MAILLES
C
        CALL ARLICP(ICPL  ,JQMAMA,JGRP1  ,JGRP2  ,
     &              NUMMC1,NUMMC2,
     &              LINCL1,LINCL2)
C
C --- COORDONNEES -SOLIDES- DE LA MAILLE COUPLE 1
C
        CALL COSOLI(NUMMC1,ZI(JCONX),ZI(JCUMU),ZR(JCOOR),NDIM,
     &              CNO1)
        NBNOC1   = ZI(JCUMU+NUMMC1) - ZI(JCUMU+NUMMC1-1)
        TMC1     = ZK8(JTYPMM+ZI(JTYP-1+NUMMC1)-1)
        CALL ARLT2R(TMC1   ,ELREF1)
C
C --- COORDONNEES -SOLIDES- DE LA MAILLE COUPLE 2
C
        CALL COSOLI(NUMMC2,ZI(JCONX),ZI(JCUMU),ZR(JCOOR),NDIM,
     &              CNO2)
        NBNOC2   = ZI(JCUMU+NUMMC2) - ZI(JCUMU+NUMMC2-1)
        TMC2     = ZK8(JTYPMM+ZI(JTYP-1+NUMMC2)-1)

        CALL ARLT2R(TMC2   ,ELREF2)
C
C --- REMPLISSAGE CTINFO
C
        CALL CESEXI('S', JINFD,JINFL,IMA,1,1,1,JADI)
        IF (JADI.LT.0) THEN
           ZR(JINFV-1-JADI) = NDIM
           ZL(JINFL-1-JADI) = .TRUE.
        ENDIF

        CALL CESEXI('S', JINFD,JINFL,IMA,1,1,2,JADI)
        IF (JADI.LT.0) THEN
           ZR(JINFV-1-JADI) = NBNOC1
           ZL(JINFL-1-JADI) = .TRUE.
        ENDIF

        CALL CESEXI('S', JINFD,JINFL,IMA,1,1,3,JADI)
        IF (JADI.LT.0) THEN
           ZR(JINFV-1-JADI) = NBNOC2
           ZL(JINFL-1-JADI) = .TRUE.
        ENDIF

        CALL CESEXI('S', JINFD,JINFL,IMA,1,1,4,JADI)
        IF (JADI.LT.0) THEN
           ZR(JINFV-1-JADI) = LCARA
           ZL(JINFL-1-JADI) = .TRUE.
        ENDIF

        CALL CESEXI('S', JINFD,JINFL,IMA,1,1,5,JADI)
        IF (JADI.LT.0) THEN
           IF (LINCL1) THEN
              ZR(JINFV-1-JADI) = 1
           ELSEIF (LINCL2) THEN
              ZR(JINFV-1-JADI) = 2
           ELSE
              ZR(JINFV-1-JADI) = 3
           ENDIF
           ZL(JINFL-1-JADI) = .TRUE.
        ENDIF
C
C --- REMPLISSAGE CTCOO1/CTCOO2
C
        DO 500 ICMP = 1,NCMPC
C         CTCOO1
          CALL CESEXI('S', JCOO1D,JCOO1L,IMA,1,1,ICMP,JADC)
          IF (JADC.LT.0) THEN
             IF (ICMP.LE.(NDIM*NBNOC1)) THEN
                ZR(JCOO1V-1-JADC) = CNO1(ICMP)
                ZL(JCOO1L-1-JADC) = .TRUE.
             ELSE
                ZR(JCOO1V-1-JADC) = R8MAX
                ZL(JCOO1L-1-JADC) = .TRUE.
             ENDIF
          ENDIF

C         CTCOO2
          CALL CESEXI('S', JCOO2D,JCOO2L,IMA,1,1,ICMP,JADC)
          IF (JADC.LT.0) THEN
             IF (ICMP.LE.(NDIM*NBNOC2)) THEN
                ZR(JCOO2V-1-JADC) = CNO2(ICMP)
                ZL(JCOO2L-1-JADC) = .TRUE.
             ELSE
                ZR(JCOO2V-1-JADC) = R8MAX
                ZL(JCOO2L-1-JADC) = .TRUE.
             ENDIF
          ENDIF
  500   CONTINUE
C
C --- REMPLISSAGE CTREF1/CTREF2
C
        CALL CESEXI('S', JREF1D,JREF1L,IMA,1,1,1,JADR)
        IF (JADR.LT.0) THEN
           ZK8(JREF1V-1-JADR) = ELREF1
           ZL(JREF1L-1-JADR) = .TRUE.
        ENDIF

        CALL CESEXI('S', JREF2D,JREF2L,IMA,1,1,1,JADR)
        IF (JADR.LT.0) THEN
           ZK8(JREF2V-1-JADR) = ELREF2
           ZL(JREF2L-1-JADR) = .TRUE.
        ENDIF

   90 CONTINUE
C
C --- AFFICHAGE
C
      CALL ARLDBG(NOMPRO,NIV,IFM,2,NBVLI,VALI,NBVLR,VALR,NBVLK,VALK)


      CALL JEDEMA()
      END
