      SUBROUTINE ORDLRL(CHARGE,LISREL,NOMGD)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C RESPONSABLE PELLET J.PELLET
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      INCLUDE 'jeveux.h'
      CHARACTER*19 LISREL
      CHARACTER*8 CHARGE,NOMGD
C -----------------------------------------------------------------
C     MISE A JOUR DE L'OBJET DE TYPE  LISTE_RELA ET DE NOM
C     LISREL  :
C               LES RELATIONS SONT REORDONNEES  PAR ORDRE DE NOEUD
C               CROISSANT ET POUR UN NOEUD DONNE PAR DDL CROISSANT
C
C               LES RELATIONS STRICTEMENT EGALES SONT ELIMINEES
C               (I.E. ON NE GARDE QUE LA RELATION DE PLUS GRAND
C                     INDICE DANS LISREL)
C -----------------------------------------------------------------
C     L'OBJET LISREL DOIT OBLIGATOIREMENT EXISTER
C -----------------------------------------------------------------
C  CHARGE        - IN/JXIN    - K8  - : NOM DE LA SD_CHARGE
C  LISREL        - IN/JXVAR   - K19  - : NOM DE LA LISTE_RELA
C -------------------------------------------------------
C
C
C --------- VARIABLES LOCALES ---------------------------
      CHARACTER*24 VALK(2)
      INTEGER NMOCL
      PARAMETER(NMOCL=300)
      COMPLEX*16 COPROC,RAPCOC
      CHARACTER*4 TYPCOE
      CHARACTER*8 NOMNOE,KBID
      CHARACTER*8 NOMA,MOD,CMP,NOMCMP(NMOCL)
      CHARACTER*16 KIDREL
      CHARACTER*19 LIGRMO
      INTEGER VALI(2)
      LOGICAL EXISDG
C --------- FIN  DECLARATIONS  VARIABLES LOCALES --------
      REAL*8 COPROR,DIFREL,EPS1,EPS2,EPSREL,R8GAEM,R8PREM,RAPCOE,COEMAX
      INTEGER I,IBID,ICMP,ICOMP,IDCOMA,IDDL,IDDL1,IDDL2,IDECA1,IDECA2
      INTEGER  IDECAL,IER,IERD,IN,INDIK8,INDMAX,INO
      INTEGER INOCC,INOM,INOREL,IPNTR1,IPNTR2,IPNTRL,IRELA,IRELA1,IRELA2
      INTEGER JNOMA,JPRNM,JRLCO,JRLCO1,JRLCO2,JRLCOC,JRLCOF,JRLCOR,JRLDD
      INTEGER JRLNO,IDNOE1,IDNOE2,IDNOEU,JRLNR,JRLNT,JRLPO,JRLSU,JRLTC
      INTEGER NBCMP,NBEC,NBRELA,NBTEMA,NBTER1,NBTER2,NBTERM
      INTEGER NDDLA,NIDREL
C
      CALL JEMARQ()

      EPS1=1.D2*R8PREM()
      EPS2=1.D0/R8GAEM()


      CALL DISMOI('F','NOM_MODELE',CHARGE,'CHARGE',IBID,MOD,IER)
      LIGRMO=MOD(1:8)//'.MODELE'
      CALL JEVEUO(LIGRMO//'.LGRF','L',JNOMA)
      NOMA=ZK8(JNOMA)

      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'L',INOM)
      CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'LONMAX',NBCMP,KBID)
      NDDLA=NBCMP-1
      IF (NDDLA.GT.NMOCL) THEN
        VALI(1)=NMOCL
        VALI(2)=NDDLA
        CALL U2MESG('F','MODELISA8_29',0,' ',2,VALI,0,0.D0)
      ENDIF
C
      DO 10 I=1,NBCMP
        NOMCMP(I)=ZK8(INOM-1+I)
   10 CONTINUE
      CALL DISMOI('F','NB_EC',NOMGD,'GRANDEUR',NBEC,KBID,IERD)
C
C --- ACCES A L'OBJET .PRNM ---
C
      IF (NBEC.GT.10) THEN
        CALL U2MESS('F','MODELISA_94')
      ELSE
        CALL JEVEUO(LIGRMO//'.PRNM','L',JPRNM)
      ENDIF
C
C --- ACCES AUX COMPOSANTES DE LA LISTE_RELA
C
      CALL JEVEUO(LISREL//'.RLCO','E',JRLCO)
      CALL JEVEUO(LISREL//'.RLDD','E',JRLDD)
      CALL JEVEUO(LISREL//'.RLNO','E',JRLNO)
      CALL JEVEUO(LISREL//'.RLNT','E',JRLNT)
      CALL JEVEUO(LISREL//'.RLPO','E',JRLPO)
      CALL JEVEUO(LISREL//'.RLSU','E',JRLSU)
      CALL JEVEUO(LISREL//'.RLTC','E',JRLTC)
C
C --- TYPE DE VALEUR DES COEFFICIENTS DES RELATIONS ---
C
      TYPCOE=ZK8(JRLTC)(1:4)
C
C --- NOMBRE DE RELATIONS DE LA LISTE_RELA
C
      CALL JEVEUO(LISREL//'.RLNR','L',JRLNR)
      NBRELA=ZI(JRLNR)
C
C --- NOMBRE DE TERMES  MAX IMPLIQUES DANS UNE RELATION
C
      NBTEMA=0
      DO 20 IRELA=1,NBRELA
C ---          NOMBRE DE TERMES DE LA RELATION       ---
        IF (NBTEMA.LT.ZI(JRLNT+IRELA-1))NBTEMA=ZI(JRLNT+IRELA-1)
   20 CONTINUE
C
C --- CREATION D'UN VECTEUR DE TRAVAIL DESTINE A CONTENIR
C --- L'INDICE DU PLUS GRAND COEFFICIENT EN VALEUR ABSOLUE
C --- (MODULE) D'UNE RELATION
C
      CALL WKVECT('&&ORDLRL.COEFMAX','V V I',NBRELA,IDCOMA)
C
C --- CREATION D'UN VECTEUR DE TRAVAIL DESTINE A CONTENIR
C --- LES NUMEROS DES NOEUDS D'UNE RELATION
C
      CALL WKVECT('&&ORDLRL.NOEUD_RELA','V V I',NBTEMA,INOREL)
C
C --- CREATION D'UN VECTEUR DE TRAVAIL DESTINE A CONTENIR
C --- LE NOMBRE D'OCCURENCES DE CHAQUE NOEUD APPRAISSANT
C --- DANS UNE RELATION
C
      CALL WKVECT('&&ORDLRL.NOEUD_OCC','V V I',NBTEMA,INOCC)
C
C --- CREATION D'UN VECTEUR DE TRAVAIL DESTINE A CONTENIR
C --- LES COEFFICIENTS REELS D'UNE RELATION
C
      CALL WKVECT('&&ORDLRL.COEF_R','V V R',NBTEMA,JRLCOR)
C
C --- CREATION D'UN VECTEUR DE TRAVAIL DESTINE A CONTENIR
C --- LES COEFFICIENTS COMPLEXES D'UNE RELATION
C
      CALL WKVECT('&&ORDLRL.COEF_C','V V C',NBTEMA,JRLCOC)



C     1. ON ORDONNE LES TERMES DE CHAQUE RELATION POUR POUVOIR
C        LES COMPRARER PLUS FACILEMENT ET DETECTER LES DOUBLONS
C     ----------------------------------------------------------
      DO 100 IRELA=1,NBRELA
        IPNTRL=ZI(JRLPO+IRELA-1)
        NBTERM=ZI(JRLNT+IRELA-1)
        IDECAL=IPNTRL-NBTERM
        JRLCOF=JRLCO+IDECAL
        IDNOEU=JRLNO+IDECAL
        IDDL=JRLDD+IDECAL
C
        IF (TYPCOE.EQ.'COMP') THEN
          DO 30 INO=1,NBTERM
            ZC(JRLCOC+INO-1)=ZC(JRLCOF+INO-1)
   30     CONTINUE
        ELSE
          DO 40 INO=1,NBTERM
            ZR(JRLCOR+INO-1)=ZR(JRLCOF+INO-1)
   40     CONTINUE
        ENDIF

        DO 50 INO=1,NBTERM
          NOMNOE=ZK8(IDNOEU+INO-1)
          CALL JENONU(JEXNOM(NOMA//'.NOMNOE',NOMNOE),IN)
          ZI(INOREL+INO-1)=IN
          CMP=ZK8(IDDL+INO-1)
          ICMP=INDIK8(NOMCMP,CMP,1,NBCMP)
          IF (.NOT.EXISDG(ZI(JPRNM-1+(IN-1)*NBEC+1),ICMP)) THEN
            VALK(1)=CMP
            VALK(2)=NOMNOE
            CALL U2MESG('F','MODELISA8_30',2,VALK,0,0,0,0.D0)
          ENDIF
   50   CONTINUE


C       -- REARRANGEMENT DES TABLEAUX DE LA RELATION SELON
C       L'ORDRE CROISSANT DES NOEUDS ET L'ORDRE
C       CROISSANT DES DDLS POUR UN NOEUD DONNE
        CALL ORDREL(ZI(INOREL),ZK8(IDNOEU),ZK8(IDDL),ZR(JRLCOR),
     &              ZC(JRLCOC),ZI(INOCC),NBTERM,ZK8(INOM),NDDLA)

C       -- REAFFECTATION DU TABLEAU DES COEFFICIENTS
        IF (TYPCOE.EQ.'COMP') THEN
          DO 60 INO=1,NBTERM
            ZC(JRLCOF+INO-1)=ZC(JRLCOC+INO-1)
   60     CONTINUE
        ELSE
          DO 70 INO=1,NBTERM
            ZR(JRLCOF+INO-1)=ZR(JRLCOR+INO-1)
   70     CONTINUE
        ENDIF
C
        COEMAX=0.0D0
        IF (TYPCOE.EQ.'COMP') THEN
          DO 80 INO=1,NBTERM
            IF (ABS(ZC(JRLCOC+INO-1)).GT.COEMAX) THEN
              COEMAX=ABS(ZC(JRLCOC+INO-1))
              INDMAX=INO
            ENDIF
   80     CONTINUE
        ELSE
          DO 90 INO=1,NBTERM
            IF (ABS(ZR(JRLCOR+INO-1)).GT.COEMAX) THEN
              COEMAX=ABS(ZR(JRLCOR+INO-1))
              INDMAX=INO
            ENDIF
   90     CONTINUE
        ENDIF
        ZI(IDCOMA+IRELA-1)=INDMAX
  100 CONTINUE



C     2. IDENTIFICATION DES RELATIONS REDONDANTES A 1 TERME
C     ----------------------------------------------------------------
      CALL JECREO('&&ORDLRL.KIDREL','V N K16')
      CALL JEECRA('&&ORDLRL.KIDREL','NOMMAX',NBRELA,KBID)
      DO 171 IRELA1=NBRELA,1,-1
        NBTER1=ZI(JRLNT+IRELA1-1)
        IF (NBTER1.GT.1) GOTO 171
        IPNTR1=ZI(JRLPO+IRELA1-1)
        IDECA1=IPNTR1-NBTER1
        IDNOE1=JRLNO+IDECA1
        IDDL1=JRLDD+IDECA1
        KIDREL=ZK8(IDNOE1)//ZK8(IDDL1)
        CALL JENONU(JEXNOM('&&ORDLRL.KIDREL',KIDREL),NIDREL)
        IF (NIDREL.EQ.0) THEN
          CALL JECROC(JEXNOM('&&ORDLRL.KIDREL',KIDREL))
        ELSE
          ZI(JRLSU+IRELA1-1)=1
        ENDIF
  171 CONTINUE
      CALL JEDETR('&&ORDLRL.KIDREL')



C     3. IDENTIFICATION DES RELATIONS REDONDANTES A PLUSIEURS TERMES
C     ----------------------------------------------------------------
      DO 170 IRELA1=NBRELA,2,-1
        NBTER1=ZI(JRLNT+IRELA1-1)
        IF (NBTER1.EQ.1) GOTO 170
        IPNTR1=ZI(JRLPO+IRELA1-1)
        IDECA1=IPNTR1-NBTER1
        JRLCO1=JRLCO+IDECA1
        IDNOE1=JRLNO+IDECA1
        IDDL1=JRLDD+IDECA1
C
        INDMAX=ZI(IDCOMA+IRELA1-1)
C
        IF (TYPCOE.EQ.'COMP') THEN
          IF (ABS(ZC(JRLCO1+INDMAX-1)).LT.EPS2) THEN
            CALL U2MESS('F','MODELISA5_92')
          ENDIF
        ELSE
          IF (ABS(ZR(JRLCO1+INDMAX-1)).LT.EPS2) THEN
            CALL U2MESS('F','MODELISA5_92')
          ENDIF
        ENDIF


C       --  CAS DES COEF. COMPLEXES
C       -----------------------------------
        IF (TYPCOE.EQ.'COMP') THEN
          DO 130 IRELA2=1,IRELA1-1
            NBTER2=ZI(JRLNT+IRELA2-1)
            IPNTR2=ZI(JRLPO+IRELA2-1)
            IDECA2=IPNTR2-NBTER2
            JRLCO2=JRLCO+IDECA2
            IDNOE2=JRLNO+IDECA2
            IDDL2=JRLDD+IDECA2
            COPROC=ZC(JRLCO2+INDMAX-1)/ZC(JRLCO1+INDMAX-1)

            IF (NBTER1.EQ.NBTER2) THEN
              ICOMP=0
              DO 110 INO=1,NBTER1
                IF (ZK8(IDNOE1+INO-1).EQ.ZK8(IDNOE2+INO-1)) THEN
                  IF (ZK8(IDDL1+INO-1).EQ.ZK8(IDDL2+INO-1)) THEN
                    RAPCOC=COPROC*ZC(JRLCO1+INO-1)
                    EPSREL=EPS1*ABS(ZC(JRLCO1+INO-1))
                    DIFREL=ABS(ZC(JRLCO2+INO-1)-RAPCOC)
                    IF (DIFREL.LE.EPSREL)GOTO 110
                    ICOMP=1
                    GOTO 120
                  ELSE
                    ICOMP=1
                    GOTO 120
                  ENDIF
                ELSE
                  ICOMP=1
                  GOTO 120
                ENDIF
  110         CONTINUE
  120         CONTINUE
              IF (ICOMP.EQ.0) ZI(JRLSU+IRELA2-1)=1
            ENDIF
  130     CONTINUE


C       --  CAS DES COEF. REEL
C       -----------------------------------
        ELSE
          DO 160 IRELA2=1,IRELA1-1
            NBTER2=ZI(JRLNT+IRELA2-1)
            IPNTR2=ZI(JRLPO+IRELA2-1)
            IDECA2=IPNTR2-NBTER2
            JRLCO2=JRLCO+IDECA2
            IDNOE2=JRLNO+IDECA2
            IDDL2=JRLDD+IDECA2
            COPROR=ZR(JRLCO2+INDMAX-1)/ZR(JRLCO1+INDMAX-1)

            IF (NBTER1.EQ.NBTER2) THEN
              ICOMP=0
              DO 140 INO=1,NBTER1
                IF (ZK8(IDNOE1+INO-1).EQ.ZK8(IDNOE2+INO-1)) THEN
                  IF (ZK8(IDDL1+INO-1).EQ.ZK8(IDDL2+INO-1)) THEN
                    RAPCOE=COPROR*ZR(JRLCO1+INO-1)
                    EPSREL=EPS1*ABS(ZR(JRLCO1+INO-1))
                    DIFREL=ABS(ZR(JRLCO2+INO-1)-RAPCOE)
                    IF (DIFREL.LE.EPSREL)GOTO 140
                    ICOMP=1
                    GOTO 150
                  ELSE
                    ICOMP=1
                    GOTO 150
                  ENDIF
                ELSE
                  ICOMP=1
                  GOTO 150
                ENDIF
  140         CONTINUE
  150         CONTINUE
              IF (ICOMP.EQ.0) ZI(JRLSU+IRELA2-1)=1
            ENDIF
  160     CONTINUE
        ENDIF
  170 CONTINUE


C ---  MENAGE  ---
      CALL JEDETR('&&ORDLRL.NOEUD_RELA')
      CALL JEDETR('&&ORDLRL.NOEUD_OCC')
      CALL JEDETR('&&ORDLRL.COEFMAX')
      CALL JEDETR('&&ORDLRL.COEF_R')
      CALL JEDETR('&&ORDLRL.COEF_C')
C
      CALL JEDEMA()
      END
