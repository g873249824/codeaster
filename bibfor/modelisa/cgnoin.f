      SUBROUTINE CGNOIN(MOFAZ,IOCC,NOMAZ,LISNOZ,NBNO)
      IMPLICIT   NONE
      INTEGER IOCC,NBNO
      CHARACTER*(*) MOFAZ,NOMAZ,LISNOZ
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 02/02/2010   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
C       CGNOIN -- TRAITEMENT DE L'OPTION INCLUSION
C                 DU MOT FACTEUR CREA_GROUP_NO DE
C                 LA COMMANDE DEFI_GROUP
C
C -------------------------------------------------------
C  MOFAZ         - IN    - K16  - : MOT FACTEUR 'CREA_GROUP_NO'
C  IOCC          - IN    - I    - : NUMERO D'OCCURENCE DU MOT-FACTEUR
C  NOMAZ         - IN    - K8   - : NOM DU MAILLAGE
C  LISNOZ        - JXVAR - K24  - : NOM DE LA LISTE DE NOEUDS RETENUS
C  NBNO          - OUT   -  I   - : LONGUEUR DE CETTE LISTE
C -------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER NBMC,NBNO1,JMA1,NBNO2,JNO2
      INTEGER N1,IER,JTRAV,JPJNB
      INTEGER INO2,JLISNO,I,IBID,IRET
      COMPLEX*16 C16B
      CHARACTER*8 NOMA2,K8BID,NCAS,NOMA1
      CHARACTER*16 MOTCLE(2),TYMOCL(2)
      CHARACTER*16 MOTFAC
      CHARACTER*24 MESMA1,MESNO2,LISNOI
      CHARACTER*16 CORRES
      CHARACTER*19 TABLG
      LOGICAL LDMAX
      REAL*8 DISTMA,ARMIN,R8B
C     -----------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS :
C     ---------------
      MOTFAC=MOFAZ
      NOMA2=NOMAZ
      LISNOI=LISNOZ


C --- RECUPERATION DES MAILLES DE GROUP_MA_1 :
C     -----------------------------------------
      CALL GETVID(MOTFAC,'MAILLAGE_INCL',IOCC,0,1,NOMA1,N1)
      IF (N1.EQ.0) NOMA1=NOMA2
      MESMA1='&&CGNOIN.MAILLE1'
      NBMC=1
      MOTCLE(1)='GROUP_MA_INCL'
      TYMOCL(1)='GROUP_MA'
      CALL RELIEM(' ',NOMA1,'NU_MAILLE',MOTFAC,IOCC,NBMC,MOTCLE,TYMOCL,
     &            MESMA1,NBNO1)
      CALL ASSERT(NBNO1.GT.0)
      CALL JEVEUO(MESMA1,'L',JMA1)


C --- RECUPERATION DES NOEUDS DE GROUP_MA :
C     ------------------------------------------
      MESNO2='&&CGNOIN.NOEUD2'
      NBMC=1
      MOTCLE(1)='GROUP_MA'
      TYMOCL(1)='GROUP_MA'
      CALL RELIEM(' ',NOMA2,'NU_NOEUD',MOTFAC,IOCC,NBMC,MOTCLE,TYMOCL,
     &            MESNO2,NBNO2)
      CALL ASSERT(NBNO2.GT.0)
      CALL JEVEUO(MESNO2,'L',JNO2)


C --- CREATION DE LA SD CORRESP_2_MAILLA   :
C     -----------------------------------------
      CORRES='&&CGNOIN.CORRES'
      CALL GETVTX(MOTFAC,'CAS_FIGURE',IOCC,0,1,NCAS,N1)

      LDMAX=.TRUE.
      CALL GETVR8(MOTFAC,'DISTANCE_MAX',IOCC,0,1,DISTMA,N1)
      IF (N1.EQ.0) THEN

C       POUR QUE LES NOEUDS SITUES SUR LES FRONTIERES INTER-ELEMENTS
C       SOIENT SUREMENT RETENUS, IL FAUT UNE PETITE TOLERANCE :
C       0.01*AR_MIN :
        CALL LTNOTB(NOMA2,'CARA_GEOM',TABLG)
        CALL TBLIVA (TABLG, 0, ' ', IBID, R8B, C16B, K8BID,
     &                K8BID,R8B , 'AR_MIN', K8BID, IBID, ARMIN, C16B,
     &                K8BID, IRET)
        CALL ASSERT(IRET.EQ.0)
        CALL ASSERT(ARMIN.GT.0.D0)
        DISTMA=0.01D0*ARMIN
      ENDIF

      IF (NCAS.EQ.'2D') THEN
        CALL PJ2DCO('PARTIE',NOMA1,NOMA2,NBNO1,ZI(JMA1),NBNO2,
     &              ZI(JNO2),' ',' ',CORRES,LDMAX,DISTMA)
      ELSEIF (NCAS.EQ.'3D') THEN
        CALL PJ3DCO('PARTIE',NOMA1,NOMA2,NBNO1,ZI(JMA1),NBNO2,
     &              ZI(JNO2),' ',' ',CORRES,LDMAX,DISTMA)
      ELSEIF (NCAS.EQ.'2.5D') THEN
        CALL PJ4DCO('PARTIE',NOMA1,NOMA2,NBNO1,ZI(JMA1),NBNO2,
     &              ZI(JNO2),' ',' ',CORRES,LDMAX,DISTMA)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF


C --- EXPLOITATION DE LA SD CORRESP_2_MAILLA POUR DETERMINER
C     LES NOEUDS A RETENIR :
C     --------------------------------------------------------
      CALL DISMOI('F','NB_NO_MAILLA',NOMA2,'MAILLAGE',NBNO2,K8BID,IER)
      CALL WKVECT('&&CGNOIN.LITRAV','V V I',NBNO2,JTRAV)
      CALL JEVEUO(CORRES//'.PJEF_NB','L',JPJNB)


      NBNO=0
      DO 20,INO2=1,NBNO2
        IF (ZI(JPJNB-1+INO2).GT.0)THEN
          NBNO=NBNO+1
          ZI(JTRAV-1+NBNO)=INO2
        ENDIF
   20 CONTINUE



C
C --- ALLOCATION DU VECTEUR DES NUMEROS DES MAILLES RETENUES
C     --------------------------------------------------------
      CALL WKVECT(LISNOI,'V V I',MAX(NBNO,1),JLISNO)
      DO 30 I=1,NBNO
        ZI(JLISNO-1+I)=ZI(JTRAV-1+I)
   30 CONTINUE

      CALL JEDETR('&&CGNOIN.LITRAV')
      CALL JEDETR(MESMA1)
      CALL JEDETR(MESNO2)
      CALL DETRSD('CORRESP_2_MAILLA',CORRES)

      CALL JEDEMA()

      END
