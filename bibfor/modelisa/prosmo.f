      SUBROUTINE PROSMO(MATREZ,LIMAT,NBMAT,BASEZ,NUMEDD,FACSYM)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 25/09/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C.======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)

C     PROSMO  --  LE BUT DE CETTE ROUTINE EST DE CONSTRUIRE LA MATR_ASSE
C                 DE NOM MATRES QUI VA RESULTER DE LA COMBINAISON
C                 LINEAIRE DES NBMAT MATR_ASSE DE LA LISTE LISMAT
C                 DE NOMS DE MATR_ASSE. LES MATRICES ONT UN STOCKAGE
C                 MORSE


C   ARGUMENT        E/S  TYPE         ROLE
C    MATREZ         OUT    K*     NOM DE LA MATR_ASSE RESULTANT DE LA
C                                 COMBINAISON LINEAIRE DES MATR_ASSE
C                                 DE LA LISTE LISMAT.
C    LIMAT          IN    K24     LISTE DES MATR_ASSE A COMBINER
C                                 DES MATR_ASSE A COMBINER.
C    NBMAT          IN    I       ON FAIT LA COMBINAISON LINEAIRE
C                                 DES NBMAT PREMIERS MATR_ASSE DE LA
C                                 LISTE LIMAT.
C    BASEZ          IN    K*      NOM DE LA BASE SUR LAQUELLE ON
C                                 CONSTRUIT LA MATR_ASSE.
C    NUMEDD         IN    K14    NOM DU NUME_DDL SUR LEQUEL S'APPUIERA
C                                 LA MATR_ASSE MATREZ
C        SI NUMEDD  =' ', LE NOM DU NUME_DDL SERA OBTENU PAR GCNCON
C        SI NUMEDD /=' ', ON PRENDRA NUMEDD COMME NOM DE NUME_DDL

C    FACSYM   IN    L   /.TRUE. : ON FAIT LA FACTORISATION SYMBOLIQUE
C                                 DE LA MATRICE (MLTPRE)
C                       /.FALSE. : ON NE LA FAIT PAS


C.========================= DEBUT DES DECLARATIONS ====================
C ----- COMMUNS NORMALISES  JEVEUX
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL,FACSYM
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXNOM,JEXATR
C -----  ARGUMENTS
      INTEGER NBMAT
      CHARACTER*(*) MATREZ,BASEZ,NUMEDD
      CHARACTER*24 LIMAT(NBMAT)
C -----  VARIABLES LOCALES
      CHARACTER*1 K1BID,BASE
      CHARACTER*8 METHOD
      CHARACTER*14 NUMDDL,NUMDD1,NUMDDI
      CHARACTER*19 MATRES,MAT1,MATI,MATII
      CHARACTER*19 PFCHNO
      CHARACTER*24 KHCOL,KADIA,KABLO,KIABL,KDESC,KREFA,KCONL,KVALE,
     &             KABLO1,KHCO1,KREFE,KREFI,KLISTE

C.========================= DEBUT DU CODE EXECUTABLE ==================

      CALL JEMARQ()

C --- INITIALISATIONS :
C     ---------------
      BASE = BASEZ
      MATRES = MATREZ

      UN = 1.0D0

C --- NOM DU NUME_DDL A CONSTRUIRE :
C     ----------------------------
      IF (NUMEDD.EQ.' ') THEN
        CALL GCNCON('_',NUMDDL(1:8))
        NUMDDL(9:14) = '.NUDDL'
      ELSE
        NUMDDL = NUMEDD
      END IF

C --- NOM DE LA PREMIERE MATR_ASSE :
C     ----------------------------
      MAT1 = LIMAT(1) (1:19)

C --- RECUPERATION DU NUME_DDL ATTACHE A LA PREMIERE MATR_ASSE  :
C     --------------------------------------------------------
      CALL DISMOI('F','NOM_NUME_DDL',MAT1,'MATR_ASSE',IBID,NUMDD1,IER)


C --- COPIE DE LA METHODE DE NUMEROTATION DE LA PREMIERE MATR_ASSE
C --- DANS LE NUMEDDL DE LA MATRICE RESULTANTE :
C     ----------------------------------------
      CALL JEDUPO(NUMDD1//'.MLTF.RENU',BASE,NUMDDL//'.MLTF.RENU',
     &            .FALSE.)

C --- RECOPIE DU PROF_CHNO DE LA PREMIERE MATRICE SUR LA MATRICE
C --- RESULTANTE :
C     ---------
      CALL JEDUPO(NUMDD1//'.NUME.DEEQ',BASE,NUMDDL//'.NUME.DEEQ',
     &            .FALSE.)
      CALL JEDUPO(NUMDD1//'.NUME.DELG',BASE,NUMDDL//'.NUME.DELG',
     &            .FALSE.)
      CALL JEDUPO(NUMDD1//'.NUME.LILI',BASE,NUMDDL//'.NUME.LILI',
     &            .FALSE.)
      CALL JEDUPO(NUMDD1//'.NUME.LPRN',BASE,NUMDDL//'.NUME.LPRN',
     &            .FALSE.)
      CALL JEDUPO(NUMDD1//'.NUME.NUEQ',BASE,NUMDDL//'.NUME.NUEQ',
     &            .FALSE.)
      CALL JEDUPO(NUMDD1//'.NUME.PRNO',BASE,NUMDDL//'.NUME.PRNO',.TRUE.)
      CALL JEDUPO(NUMDD1//'.NUME.REFN',BASE,NUMDDL//'.NUME.REFN',
     &            .FALSE.)

C --- RECUPERATION DU NOMBRE D'EQUATIONS DE LA PREMIERE MATRICE
C --- A COMBINER (C'EST LE MEME POUR TOUTES LES MATRICES) :
C     ---------------------------------------------------
      CALL JEVEUO(NUMDD1//'.SMOS.DESC','L',IDESC1)
      NEQ = ZI(IDESC1+1-1)


C --- CREATION ET AFFECTATION DU TABLEAU .ABLO DES NUMEROS
C --- DES LIGNES DE DEBUT ET DE FIN DU BLOC :
C     ====================================

      KABLO = NUMDDL//'.SMOS.ABLO'
      CALL WKVECT(KABLO,BASE//' V I',2,IDABLO)
      ZI(IDABLO) = 0
      ZI(IDABLO+1) = NEQ


C --- CREATION ET AFFECTATION DU TABLEAU .ADIA DES POSITIONS
C --- DES TERMES DIAGONAUX DANS LES BLOCS :
C     ===================================
      KADIA = NUMDDL//'.SMOS.ADIA'
      CALL WKVECT(KADIA,BASE//' V I',NEQ,IADIA)

      DO 40 I = 1,NBMAT

C ---   NOM DE LA MATR_ASSE COURANTE :
        MATI = LIMAT(I) (1:19)
        MATII = LIMAT(I) (1:18)
        KLISTE = '&&PROSMO'//MATII

C ---   RECUPERATION DU NUME_DDL ATTACHE A LA IEME MATR_ASSE  :
        CALL DISMOI('F','NOM_NUME_DDL',MATI,'MATR_ASSE',IBID,NUMDDI,IER)

C ---   RECUPERATION DU .HCOL CORRESPONDANT :
        CALL JEVEUO(NUMDDI//'.SMOS.HCOL','L',IDHCOI)

C ---   RECUPERATION DU .ADIA CORRESPONDANT :
        CALL JEVEUO(NUMDDI//'.SMOS.ADIA','L',IADI)

C       CONVERSION DU TABLEAU HCOL DE CHACUNE DES MATRICES A COMBINER
C       EN UNE COLLECTION KLISTE DE NEQ VECTEURS

        CALL JEDETC('V',KLISTE,1)
        CALL JECREC(KLISTE,'V V I','NU','CONTIG','VARIABLE',NEQ)
        ICUM = 0
        DO 10 J = 1,NEQ
          IF (J.EQ.1) THEN
            NBTER = 1
          ELSE
            NBTER = ZI(IADI+J-1) - ZI(IADI+ (J-1)-1)
          END IF
          CALL JECROC(JEXNUM(KLISTE,J))
          CALL JEECRA(JEXNUM(KLISTE,J),'LONMAX',NBTER,' ')
   10   CONTINUE

        DO 30 J = 1,NEQ
          IF (J.EQ.1) THEN
            NBTER = 1
          ELSE
            NBTER = ZI(IADI+J-1) - ZI(IADI+ (J-1)-1)
          END IF
          CALL JEVEUO(JEXNUM(KLISTE,J),'E',IDLIST)
          DO 20 K = 1,NBTER
            ZI(IDLIST+K-1) = ZI(IDHCOI+ICUM+ (K-1))
   20     CONTINUE
          ICUM = ICUM + NBTER
   30   CONTINUE

   40 CONTINUE

      LHCOL = 0
      CALL WKVECT('&&PROSMO.TRAV2','V V I',NEQ,IDTR2)

      DO 70 J = 1,NEQ
        LL = 1
        NTERM = 0

C       CREATION D'UN TABLEAU DE TRAVAIL ISSU DE LA CONCATENATION
C       DES JEMES VECTEURS DES COLLECTIONS KLISTE

        CALL WKVECT('&&PROSMO.TRAV1','V V I',NEQ*NBMAT,IDTR1)
        DO 60 I = 1,NBMAT
          MATII = LIMAT(I) (1:18)
          KLISTE = '&&PROSMO'//MATII
          CALL JEVEUO(JEXNUM(KLISTE,J),'L',IDLIST)
          CALL JELIRA(JEXNUM(KLISTE,J),'LONMAX',NBTER,K1BID)
          DO 50 K = 1,NBTER
            ZI(IDTR1+LL-1) = ZI(IDLIST+K-1)
            LL = LL + 1
   50     CONTINUE
          NTERM = NTERM + NBTER
   60   CONTINUE

C       ON TRIE ET ORDONNE LE TABLEAU TRAV1 EN ELIMINANT LES DOUBLONS
C       LE NOMBRE NTERM DONNE LE NOMBRE DE TERMES A STOCKER POUR CHAQUE
C       LIGNE DE LA MATRICE RESULTANTE

        CALL UTTRII(ZI(IDTR1),NTERM)
        ZI(IDTR2+J-1) = NTERM
        IF (J.EQ.1) THEN
          ZI(IADIA+1-1) = NTERM
        ELSE
          ZI(IADIA+J-1) = ZI(IADIA+ (J-1)-1) + NTERM
        END IF
        LHCOL = LHCOL + NTERM
        CALL JEDETR('&&PROSMO.TRAV1')
   70 CONTINUE


C --- CREATION ET AFFECTATION DU TABLEAU .HCOL DIMENSIONNE
C     AU NOMBRE EXACT LHCOL D'ELEMENTS STOCKES :
C     ========================================
      L = 1
      KHCOL = NUMDDL//'.SMOS.HCOL'
      CALL WKVECT(KHCOL,BASE//' V I',LHCOL,IDHCOL)
      DO 110 J = 1,NEQ
        LL = 1
        NTERM = 0
        CALL WKVECT('&&PROSMO.TRAV1','V V I',NEQ*NBMAT,IDTR1)
        DO 90 I = 1,NBMAT
          MATII = LIMAT(I) (1:18)
          KLISTE = '&&PROSMO'//MATII
          CALL JEVEUO(JEXNUM(KLISTE,J),'L',IDLIST)
          CALL JELIRA(JEXNUM(KLISTE,J),'LONMAX',NBTER,K1BID)
          DO 80 K = 1,NBTER
            ZI(IDTR1+LL-1) = ZI(IDLIST+K-1)
            LL = LL + 1
   80     CONTINUE
          NTERM = NTERM + NBTER
   90   CONTINUE
        CALL UTTRII(ZI(IDTR1),NTERM)
        DO 100 K = 1,NTERM
          ZI(IDHCOL+L-1) = ZI(IDTR1+K-1)
          L = L + 1
  100   CONTINUE
        CALL JEDETR('&&PROSMO.TRAV1')
  110 CONTINUE


C --- CREATION ET AFFECTATION DU TABLEAU .IABL FAISANT CORRESPONDRE
C --- A UN NUMERO DE LIGNE DONNE, LE BLOC AUQUEL IL APPARTIENT :
C     ========================================================
      KIABL = NUMDDL//'.SMOS.IABL'
      CALL WKVECT(KIABL,BASE//' V I',NEQ,IDIABL)
      DO 120 I = 1,NEQ
        ZI(IDIABL+I-1) = 1
  120 CONTINUE


C --- CREATION ET AFFECTATION DU TABLEAU .DESC DE DESCRIPTION
C --- DE LA MATRICE :
C     =============
      KDESC = NUMDDL//'.SMOS.DESC'

      CALL WKVECT(KDESC,BASE//' V I',6,IDDESC)

C --- RECUPERATION DE LA TAILLE DU BLOC DE LA MATRICE RESULTANTE
C --- (NOMBRE DE TERMES NON NULS DE LA MATRICE)
      ITBLOC = ZI(IADIA+NEQ-1)

      ZI(IDDESC+1-1) = NEQ
      ZI(IDDESC+2-1) = ITBLOC
      ZI(IDDESC+3-1) = 1


C --- CREATION ET AFFECTATION DE LA COLLECTION .VALE
C --- DES BLOCS DE LA MATRICE :
C     =========================
      KVALE = MATRES//'.VALE'

      NBLOC = 1
      CALL JECREC(KVALE,BASE//' V R','NU','DISPERSE','CONSTANT',NBLOC)

      CALL JEECRA(KVALE,'LONMAX',ITBLOC,' ')
      CALL JEECRA(KVALE,'DOCU',IBID,'MS')

      CALL JECROC(JEXNUM(KVALE,NBLOC))
      CALL JEVEUO(JEXNUM(KVALE,NBLOC),'E',IDKVAL)
      CALL JELIBE(JEXNUM(KVALE,NBLOC))


C --- CREATION ET AFFECTATION DU TABLEAU .REFA DES REFERENCES
C --- DE LA MATRICE :
C     =============
      KREFA = MATRES//'.REFA'
      KCONL = MATRES//'.CONL'
      CALL WKVECT(KREFA,BASE//' V K24',4,IDREFA)

      ZK24(IDREFA+2-1) = NUMDDL//'.NUME'
      ZK24(IDREFA+3-1) = NUMDDL//'.SMOS'

C --- BOUCLE SUR LES MATRICES A COMBINER :
C     ----------------------------------
      DO 130 I = 1,NBMAT

C ---   NOM DE LA MATR_ASSE COURANTE :
C       ----------------------------
        MATI = LIMAT(I) (1:19)
        KREFI = MATI//'.REFA'
        CALL JEVEUO(KREFI,'L',IDREFI)
        IF (ZK24(IDREFI+1-1).NE.' ') THEN
          ZK24(IDREFA+1-1) = ZK24(IDREFI+1-1)
          GO TO 140
        END IF
  130 CONTINUE
  140 CONTINUE

C --- ON AFFECTE L'ETAT 'ASSEMBLE' A LA MATRICE :
C     -----------------------------------------
      CALL JEECRA(KREFA,'DOCU',IBID,'ASSE')


C --- CREATION ET AFFECTATION DE L'OBJET .REFE REFERENCANT LE
C --- NUME_DDL DE LA MATRICE :
C     ======================
      KREFE = NUMDDL//'.SMOS.REFE'
      CALL WKVECT(KREFE,BASE//' V K24',1,IDREFE)

      ZK24(IDREFE+1-1) (1:14) = NUMDDL

C --- ON AFFECTE LE STOCKAGE MORSE A LA MATRICE :
C     -----------------------------------------
      CALL JEECRA(KREFE,'DOCU',IBID,'SMOS')


C --- CREATION ET AFFECTATION DU VECTEUR .CONL DE CONDITIONNEMENT
C --- DES INCONNUES DE LAGRANGE :
C     =========================
      CALL WKVECT(KCONL,BASE//' V R',NEQ,IDCONL)

      DO 150 IEQ = 1,NEQ
        ZR(IDCONL+IEQ-1) = UN
  150 CONTINUE

C --- TAILLE DE LA MATRICE :
C     ====================
      LMAT = L - 1

C --- RECUPERATION DE LA METHODE DE RENUMEROTATION ATTACHEE
C --- A LA MATRICE RESULTANTE :
C     =======================
      CALL JEVEUO(NUMDDL//'.MLTF.RENU','L',IDRENU)
      METHOD = ZK8(IDRENU)

C --- SI LA MATRICE EST DIAGONALE ON CHOISIT LA NUMEROTATION 'MDA' :
C     =============================================================
      IF (LMAT.EQ.NEQ) METHOD = 'MDA'

C --- CREATION DES TABLEAUX .MLTF ISSUS DE LA NUMEROTATION
C --- MINIMUM DEGREE
C     ==============
      CALL JEDETC(BASE,NUMDDL//'.MLTF',1)
      IF (FACSYM) CALL MLTPRE(NUMDDL,BASE,METHOD)
      CALL JEDUPO(NUMDD1//'.MLTF.RENU',BASE,NUMDDL//'.MLTF.RENU',
     &            .FALSE.)


      CALL JEDETR('&&PROSMO.TRAV2')
      DO 160 I = 1,NBMAT
        MATII = LIMAT(I) (1:18)
        KLISTE = '&&PROSMO'//MATII
        CALL JEDETC('V',KLISTE,1)
  160 CONTINUE

      CALL JEDEMA()

      END
