      SUBROUTINE OP5902(NBOCCP,COMPOR)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 19/12/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PROIX J.M.PROIX

C     COMMANDE:  DEFI_COMPOR MOT-CLE POLYCRISTAL

      INCLUDE 'jeveux.h'

      CHARACTER*8 COMPOR, MONO,CHAINE
      CHARACTER*16 KBID, LOCA,NOMS(6),NOMVAR(100)
      REAL*8 FVOL,ORIE(3),DL,DA,EULER(3),FVOLT
      INTEGER IOCC,NLOC,NBOCCP,NDL,NDA,ITBINT,NUMS(3)
      INTEGER I,NMONO,IMK,IMI,IPK,IPI,IPR,IORIE,IRRA
      INTEGER NCPRI,NCPRK,NCPRR,JCPRK,JCPRR,JCPRI,NVIT,LMK,IFVOL,IPL
      INTEGER IMONO,NBMONO,INDIK8,NVLOC,INDVAR
      INTEGER NBSYST,NBSYSM
      INTEGER IARG



      CALL JEMARQ()

      CALL GETVTX(' ','LOCALISATION',0,IARG,1,LOCA,NLOC)
      DL=0.D0
      DA=0.D0
      NVLOC=0
      IF (LOCA.EQ.'BETA') THEN
        CALL GETVR8(' ','DL',0,IARG,1,DL,NDL)
        CALL GETVR8(' ','DA',0,IARG,1,DA,NDA)
        NVLOC=2
      ENDIF


C     organisation de CPRI :
C     1 : TYPE =2 pour POLYCRISTAL
C     2 : NBPHAS pour POLYCRISTAL
C     3 : NVITOT pour POLYCRISTAL
C     4 : NOMBRE DE MONOCRISTAUX différents
C     5 : NBFAMILLES DE SYS GLIS pour Phase 1
C     6 : Numero du MONO 1
C     7 : NVI du Mono 1
C     8 : NBFAMILLES DE SYS GLIS pour Phase 2
C     9 : Numero du MONO 2
C     10 : NVI du Mono 2
C      etc...
C     avant dernier : dimension de CPRK
C     nombre de paramètres de localisation

      NCPRI=4+3*NBOCCP+1+1+1
      CALL WKVECT(COMPOR//'.CPRI', 'G V I',NCPRI,IPI)
      ZI(IPI)=2
      ZI(IPI+1)=NBOCCP
      CALL WKVECT('&&OP0059.LISTEMONO','V V K8',NBOCCP,IPL)

      NBMONO=0
      NCPRK=0

      DO 13 IOCC=1,NBOCCP
         CALL GETVID('POLYCRISTAL','MONOCRISTAL',IOCC,IARG,1,MONO,
     &                NMONO)
C        On ne stocke pas les doublons
         IMONO=INDIK8(ZK8(IPL),MONO,1,NBMONO)
         IF (IMONO.EQ.0) THEN
            NBMONO=NBMONO+1
            ZK8(IPL-1+NBMONO)=MONO
            ZI(IPI-1+4+3*(IOCC-1)+2)=NBMONO
            CALL JELIRA(MONO//'.CPRK','LONMAX',LMK,KBID)
            NCPRK=NCPRK+LMK+2
         ELSE
            ZI(IPI-1+4+3*(IOCC-1)+2)=IMONO
         ENDIF
  13  CONTINUE
      NCPRK=NCPRK+1
      IF (NBMONO.GT.5) THEN
         CALL U2MESG('F','COMPOR2_16',0,' ',1,ITBINT,0,0.D0)
      ELSE
         ZI(IPI-1+4)=NBMONO
      ENDIF
      IRRA=0

C     organisation de CPRK :
C     On ne stocke que les monocristaux DIFFERENTS
C     1   : Nom méthode localisation
C     2   : Nom Monocristal 1 + NBFAM + CPRK du monocristal 1
C     n+2 : Nom Monocristal 2 + NBFAM + CPRK du monocristal 2
C     ..: etc...
      CALL WKVECT(COMPOR//'.CPRK', 'G V K24',NCPRK,IPK)
      JCPRK=1
      ITBINT=0
      DO 15 IMONO=1,NBMONO
         MONO=ZK8(IPL-1+IMONO)
         CALL JELIRA(MONO//'.CPRK','LONMAX',LMK,KBID)
         CALL JEVEUO(MONO//'.CPRK','L',IMK)
         CALL JEVEUO(MONO//'.CPRI','L',IMI)
C        RECOPIE DU VECTEUR K16 DU MONOCRISTAL DANS CELUI DU POLY
         ZK24(IPK-1+JCPRK+1)=MONO
         WRITE(ZK24(IPK-1+JCPRK+2),'(I24)') ZI(IMI-1+5)
         DO 14 I=1,LMK
            ZK24(IPK-1+JCPRK+2+I)=ZK24(IMK-1+I)
 14      CONTINUE
         JCPRK=JCPRK+LMK+2
         IF (ZK24(IMK-1+3).EQ.'MONO_DD_CC_IRRA') IRRA=1
         IF (ZK24(IMK-1+3).EQ.'MONO_DD_CFC_IRRA') IRRA=2

 15   CONTINUE

      NCPRR=4*NBOCCP+2

      CALL WKVECT(COMPOR//'.CPRR', 'G V R',NCPRR,IPR)
      JCPRR=0
      JCPRI=4
      NVIT=0
      FVOLT=0.D0
      NBSYST=0
      NBSYSM=0
      DO 16 IOCC=1,NBOCCP
         IMONO=ZI(IPI-1+4+3*(IOCC-1)+2)
         MONO=ZK8(IPL-1+IMONO)
         CALL JEVEUO(MONO//'.CPRI','L',IMI)
         ZI(IPI-1+JCPRI+1)=ZI(IMI-1+5)
         ZI(IPI-1+JCPRI+3)=ZI(IMI-1+7)

C        NVI DU MONOCRISTAL : 6+4*NS + 3 + (NS SI IRRA) +3 )
C       (EVP + NS(ALPHAS, GAMMAS, PS) + RHO_IRRA + 3)
C        NOMBRE DE VAR INT POLYCRISTAL SANS IRRA :
C         7   + 6*NG  +NG*(NS*(ALPHAS,GAMMAS,PS))+6*NG+1
C        EVP+P+EVPG*NG+NG*(NS*(ALPHAS,GAMMAS,PS))+SIG*NG+1)
C        =7   + 6*NG  +NG*(NMONO-9)+6*NG+1=NG*(NMONO+3)+8
C        NOMBRE DE VAR INT POLYCRISTAL AVEC IRRA :
C         7   + 6*NG  +NG*(NS*(ALPHAS,GAMMAS,PS))+12*NG+6*NG+1
C        =7   + 6*NG  +NG*(NMONO-9)+6*NG+1=NG*(NMONO+3)+8

         NBSYSM=MAX(NBSYSM,ZI(IMI-1+8))
         NBSYST=NBSYST+ZI(IMI-1+8)
C        ON ENLEVE LES TAUS ET LES 3 VARIABLES INTERNES P,SCLIV,INDIC
         NVIT=NVIT+ZI(IMI-1+7)+3-ZI(IMI-1+8)
         JCPRI=JCPRI+3
         CALL GETVR8('POLYCRISTAL','FRAC_VOL',IOCC,IARG,1,FVOL,
     &                IFVOL)
         CALL GETVR8('POLYCRISTAL','ANGL_REP',IOCC,IARG,3,ORIE,
     &                IORIE)
         IF (IORIE.EQ.0) THEN
             CALL GETVR8('POLYCRISTAL','ANGL_EULER',IOCC,IARG,3,
     &                   EULER,
     &                IORIE)
             CALL EULNAU(EULER,ORIE)
         ENDIF
         FVOLT=FVOLT+FVOL
         ZR(IPR-1+JCPRR+1)=FVOL
         ZR(IPR-1+JCPRR+2)=ORIE(1)
         ZR(IPR-1+JCPRR+3)=ORIE(2)
         ZR(IPR-1+JCPRR+4)=ORIE(3)
         JCPRR=JCPRR+4
 16   CONTINUE

      IF (ABS(FVOLT-1.D0).GT.1.D-3) THEN
         CALL U2MESR ('F', 'COMPOR2_8', 1, FVOLT)
      ENDIF

      ZR(IPR-1+JCPRR+1)=DL
      ZR(IPR-1+JCPRR+2)=DA

C      NOMBRE DE VAR INT TOTAL + 8 (TENSEUR B OU EVP + NORME+INDIC)
      NVIT=NVIT+8
      ZI(IPI-1+3)=NVIT
      ZI(IPI-1+NCPRI-2)=JCPRK
      ZI(IPI-1+NCPRI-1)=NVLOC

      ZK24(IPK)=LOCA

C     IMPRESSION DES VARIABLES INTERNES
      INDVAR=0
      NOMS(1)='POLYCRISTAL'
      NOMS(2)=LOCA
      NUMS(1)=NBOCCP
      NUMS(2)=NBMONO
      NUMS(3)=NVIT
      CALL U2MESG('I','COMPOR2_27',2,NOMS,3,NUMS,0,0.D0)

      NOMVAR(1)='EPSPXX'
      NOMVAR(2)='EPSPYY'
      NOMVAR(3)='EPSPZZ'
      NOMVAR(4)='EPSPXY'
      NOMVAR(5)='EPSPXZ'
      NOMVAR(6)='EPSPYZ'
      NOMVAR(7)='EPSPEQ'
      DO 558 I=1,7
        CALL U2MESG('I','COMPOR2_24',1,NOMVAR(I),1,I,0,0.D0)
 558  CONTINUE
      INDVAR=INDVAR+7
      CALL U2MESG('I','COMPOR2_28',0,' ',1,INDVAR+1,0,0.D0)
      NOMVAR(1)='EPSPXX(GRAIN_I)'
      NOMVAR(2)='EPSPYY(GRAIN_I)'
      NOMVAR(3)='EPSPZZ(GRAIN_I)'
      NOMVAR(4)='EPSPXY(GRAIN_I)'
      NOMVAR(5)='EPSPXZ(GRAIN_I)'
      NOMVAR(6)='EPSPYZ(GRAIN_I)'
      DO 559 I=1,6
        CALL U2MESG('I','COMPOR2_24',1,NOMVAR(I),1,INDVAR+I,0,0.D0)
 559  CONTINUE
      INDVAR=INDVAR+6*NBOCCP
      CALL U2MESG('I','COMPOR2_30',0,' ',1,INDVAR,0,0.D0)

      CALL U2MESG('I','COMPOR2_28',0,' ',1,INDVAR+1,0,0.D0)

      DO 554 I=1,NBSYSM
         CALL CODENT(I,'G',CHAINE)
         NOMVAR(3*I-2)='ALPHA'//CHAINE
         NOMVAR(3*I-1)='GAMMA'//CHAINE
         NOMVAR(3*I  )='P'//CHAINE
 554  CONTINUE
      DO 556 I=1,3*NBSYSM
         CALL U2MESG('I','COMPOR2_24',1,NOMVAR(I),1,INDVAR+I,0,0.D0)
 556  CONTINUE

      INDVAR=INDVAR+3*NBSYST

      CALL U2MESG('I','COMPOR2_30',0,' ',1,INDVAR,0,0.D0)

      IF (IRRA.EQ.1) THEN
         CALL U2MESG('I','COMPOR2_28',0,' ',1,INDVAR+1,0,0.D0)
         DO 557 I=1,12
            CALL CODENT(I,'G',CHAINE)
            NOMVAR(I)='RHO_IRRA_'//CHAINE
 557     CONTINUE
         DO 560 I=1,12
            CALL U2MESG('I','COMPOR2_24',1,NOMVAR(I),1,INDVAR+I,0,0.D0)
 560     CONTINUE
         INDVAR=INDVAR+12*NBOCCP
         CALL U2MESG('I','COMPOR2_30',0,' ',1,INDVAR,0,0.D0)
      ENDIF

      IF (IRRA.EQ.2) THEN
         CALL U2MESG('I','COMPOR2_28',0,' ',1,INDVAR+1,0,0.D0)
         DO 571 I=1,12
            CALL CODENT(I,'G',CHAINE)
            NOMVAR(I)='RHO_LOOPS_'//CHAINE
 571     CONTINUE
         DO 572 I=1,12
            CALL CODENT(I,'G',CHAINE)
            NOMVAR(12+I)='PHI_VOIDS_'//CHAINE
 572     CONTINUE
         DO 573 I=1,24
            CALL U2MESG('I','COMPOR2_24',1,NOMVAR(I),1,INDVAR+I,0,0.D0)
 573     CONTINUE
         INDVAR=INDVAR+24*NBOCCP
         CALL U2MESG('I','COMPOR2_30',0,' ',1,INDVAR,0,0.D0)
      ENDIF

      CALL U2MESG('I','COMPOR2_28',0,' ',1,INDVAR+1,0,0.D0)

      DO 555 I=1,6
         NOMVAR(1)='SIGMAXX(GRAIN_I)'
         NOMVAR(2)='SIGMAYY(GRAIN_I)'
         NOMVAR(3)='SIGMAZZ(GRAIN_I)'
         NOMVAR(4)='SIGMAXY(GRAIN_I)'
         NOMVAR(5)='SIGMAXZ(GRAIN_I)'
         NOMVAR(6)='SIGMAYZ(GRAIN_I)'
 555  CONTINUE
      DO 561 I=1,6
         CALL U2MESG('I','COMPOR2_24',1,NOMVAR(I),1,INDVAR+I,0,0.D0)
 561  CONTINUE
      INDVAR=INDVAR+6*NBOCCP
      CALL U2MESG('I','COMPOR2_30',0,' ',1,INDVAR,0,0.D0)
      INDVAR=INDVAR+1
      NOMVAR(1)='INDIPLAS'
      CALL U2MESG('I','COMPOR2_29',1,NOMVAR(1),1,NVIT,0,0.D0)
      CALL ASSERT(INDVAR.EQ.NVIT)
C FIN ------------------------------------------------------------------
      CALL JEDEMA()
      END
