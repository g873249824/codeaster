      SUBROUTINE CHARME ( FONREE )

C MODIF MODELISA  DATE 24/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*4         FONREE

C ----------------------------------------------------------------------

C      OPERATEURS :     AFFE_CHAR_MECA ET AFFE_CHAR_MECA_C
C                                      ET AFFE_CHAR_MECA_F

C      MOTS-CLES ACTUELLEMENT TRAITES:

C        MODELE
C        EPSA_CALCULEE
C        EVOL_CHAR
C        PESANTEUR
C        ROTATION
C        DDL_IMPO, FACE_IMPO, ARETE_IMPO,
C        LIAISON_DDL, LIAISON_OBLIQUE
C        FORCE_NODALE
C        CHARGE_REP: FORCE_CONTOUR FORCE_INTERNE FORCE_ARETE
C                    FORCE_FACE    FORCE_POUTRE  FORCE_COQUE
C        RELA_CINE_BP
C        PRE_INIT
C        PRES_REP
C        FLUX_THM_REP
C        FORCE_ELEC
C        INTE_ELEC
C        VITE_FACE
C        ONDE_FLUI
C        IMPE_FACE
C        ONDE_PLANE
C        CONTACT
C        LIAISON_GROUP
C        LIAISON_UNIF
C        LIAISON_SOLIDE
C        LIAISON_ELEM
C        LIAISON_CHAMNO
C        LIAISON_COQUE
C        LIAISON_MAIL
C        LIAISON_CYCL
C        LIAISON_INTERF
C ----------------------------------------------------------------------
      INTEGER      NBOCC(6),I,IGREL,INEMA,IRET,NDIM,IBID,JLGRF
      CHARACTER*5  PARAM(7),PARA
      CHARACTER*8  CHAR, NOMA, NOMO
      CHARACTER*16 TYPE, OPER , CHREP(6), MOTFAC
      CHARACTER*19 LIGRCH, LIGRMO

      DATA CHREP / 'FORCE_CONTOUR' , 'FORCE_INTERNE' , 'FORCE_ARETE' ,
     &             'FORCE_FACE'    , 'FORCE_POUTRE'  , 'FORCE_COQUE'   /
      DATA PARAM / 'F1D2D'         , 'F3D3D'         , 'F1D3D'       ,
     &             'F2D3D'         , 'F1D1D'         , 'FCO3D'       ,
     &             'FCO2D'         /
C     ------------------------------------------------------------------


      CALL GETRES ( CHAR, TYPE, OPER )

C --- NOMS DE LIGREL, MAILLAGE , DIMENSION DU PB

      CALL CAGENE ( CHAR, OPER, LIGRMO, NOMA, NDIM )
      NOMO = LIGRMO(1:8)

C --- ALLOCATION DU LIGREL DE CHARGE
C             (DDL-IMPO, FORCE_NO, FACE_IMPO, ARETE_IMPO, LIAISON_GROUP)

      CALL ALLIGR ( CHAR, OPER, NOMA, FONREE, LIGRCH )

      IGREL = 0
      INEMA = 0

C --- FORCE_NODALE ---

      IF (FONREE.NE.'COMP') THEN
C         ================
         CALL CAFONO ( CHAR, LIGRCH, IGREL, INEMA, NOMA, LIGRMO, FONREE)
      ENDIF

C --- CHARGES REPARTIES: FORCE_CONTOUR FORCE_INTERNE FORCE_ARETE
C                        FORCE_FACE    FORCE_POUTRE  FORCE_COQUE

      DO 10 I = 1,6
         IF (FONREE.EQ.'COMP'.AND.CHREP(I).NE.'FORCE_POUTRE') THEN
           NBOCC(I) = 0
         ELSE
           CALL GETFAC ( CHREP(I) , NBOCC(I) )
         ENDIF
   10 CONTINUE

C --- VERIFICATION DE LA DIMENSION DES TYPE_ELEM DU MODELE ---

      IF (NDIM.GT.3) CALL U2MESS('A','MODELISA4_4')

      IF ( NDIM .EQ. 3 ) THEN
         DO 20 I = 1 , 6
            IF ( NBOCC(I) .NE. 0 ) THEN

               CALL CACHRE ( CHAR , LIGRMO ,  NOMA , NDIM ,
     &                       FONREE , PARAM(I) , CHREP(I) )

            ENDIF
   20    CONTINUE

      ELSE
         DO 15 I = 4 , 5
            IF ( NBOCC(I) .NE. 0 ) THEN
C            --------- FORCE_FACE    INTERDIT EN 2D
C            --------- FORCE_POUTRE  INTERDIT EN 2D
               CALL U2MESK('A','MODELISA4_5',1,CHREP(I))
           ENDIF
   15    CONTINUE
         DO 25 I = 1 , 6
            IF ( NBOCC(I) .NE. 0 ) THEN

               PARA = PARAM(I)
C    CAS DE FORCE INTERNE EN 2D
               IF ( I .EQ. 2 ) PARA = 'F2D2D'
C    CAS DES COQCYL AXI
               IF ( I .EQ. 6 .AND. NDIM . EQ. 2 ) PARA = 'FCO2D'
               CALL CACHRE ( CHAR , LIGRMO ,  NOMA , NDIM ,
     &                       FONREE , PARA , CHREP(I) )
            ENDIF
   25    CONTINUE
      ENDIF

      IF (FONREE.NE.'COMP') THEN
C         ================

C --- DEFORMATION INITIALE ----

         CALL CBCHEI ( CHAR, NOMA, LIGRMO, NDIM, FONREE )

C --- PRE_SIGM----

         CALL CBSINT ( CHAR, NOMA, LIGRMO, NDIM, FONREE )

C --- PRESSION ---

         CALL CBPRES ( CHAR, NOMA, LIGRMO, NDIM, FONREE )

C --- VITE_FACE ---

         CALL CBVITN ( CHAR, NOMA, LIGRMO, FONREE )

C --- IMPE_FACE ---

         CALL CBIMPD ( CHAR, NOMA, LIGRMO, FONREE )

      ENDIF

C --- TEMPERATURE, PRESSION, PESANTEUR, ROTATION, FORCES ELECTROS
C     DEFORMATIONS PLANES GENERALISEES, LIAISON UNILATERALE,
C     DEFORMATIONS ANELASTIQUES, RELA_CINE_BP ---

      IF (FONREE.EQ.'REEL') THEN
C         ================
         CALL CBPRCA ( CHAR )
         CALL CBPESA ( CHAR, NOMA, NDIM, LIGRMO )
         CALL CBROTA ( CHAR, NOMA, NDIM, LIGRMO )
         CALL CAPREC ( CHAR, NOMA )

C --- FORCE_ELEC ----

         CALL CBELEC ( CHAR, LIGRMO, NOMA )

C --- FORCES DE LAPLACE ----

         CALL CBLAPL ( CHAR, LIGRMO, NOMA )

C --- ONDE_FLUI ---

         CALL CBONDE ( CHAR, NOMA, LIGRMO, FONREE )

C --- DDL_POUTRE ---

         CALL CADDLP ( FONREE, CHAR )

      ENDIF

C --- ONDE_PLANE ---

      IF (FONREE.EQ.'FONC') THEN
C         ================
         CALL CBONDP( CHAR, NOMA )
      ENDIF

C --- SI DDL_IMPO OU(ET) FACE_IMPO OU(ET) ARETE_IMPO:
C        DESTRUCTION DES 3 OBJETS TEMPORAIRES SERVANT A LA SURCHARGE

      CALL JEEXIN ( '&&CAFACI.DESGI', IRET )
      IF (IRET.NE.0) THEN
         CALL JEDETR ( '&&CAFACI.VALDDL'      )
         CALL JEDETR ( '&&CAFACI.DESGI'       )
         CALL JEDETR ( '&&CAFACI.NOMS_NOEUDS' )
      ENDIF

C --- DDL_IMPO ---

      MOTFAC = 'DDL_IMPO        '
      CALL CADDLI ( OPER, MOTFAC, FONREE, CHAR )

C --- LIAISON_XFEM ---

      CALL CAXFEM ( FONREE, CHAR )

C --- LIAISON_DDL ---

      CALL CALIAI ( FONREE, CHAR )

      IF (FONREE.EQ.'REEL') THEN
C         ================

C --- LIAISON_MAIL ---

         CALL CALIRC ( CHAR )

C --- LIAISON_CYCL ---

         CALL CALYRC ( CHAR )

C --- LIAISON_ELEM ---

         CALL CALIEL ( FONREE, CHAR )

C --- LIAISON_CHAMNO ---

         CALL CALICH ( CHAR )

C --- LIAISON_RBE3 ---

         CALL CARBE3 ( CHAR )

C --- VECT_ASSE ---

         CALL CAVEAS (CHAR)

C --- VECT_ISS ---

         CALL CAVEIS (CHAR)

C --- CHAMNO_IMPO ---

         CALL CAIMCH ( CHAR )

C --- LIAISON_INTERF ---

         CALL CALIMC (CHAR)

      ENDIF

      IF (FONREE.NE.'COMP') THEN
C         ================

C --- FACE_IMPO ---
         CALL CAFACI ( FONREE, CHAR )

C --- ARETE_IMPO ---
         CALL CAAREI ( FONREE, CHAR )

C --- LIAISON_OBLIQUE ---
         CALL CALIOB ( FONREE, CHAR )

C --- LIAISON_GROUP ---
         CALL CALIAG ( FONREE, CHAR )

C --- LIAISON_UNIF ---
         CALL CAGROU ( FONREE, CHAR )

C --- LIAISON_SOLIDE ---
         CALL CALISO ( CHAR )

C --- LIAISON_COQUE ---
         CALL CALICP ( CHAR )

      ENDIF


C --- MISE A JOUR DU LIGREL DE CHARGE :
      CALL JEEXIN (LIGRCH//'.LGRF', IRET )
      IF (IRET.NE.0) THEN
        CALL ADALIG(LIGRCH)
        CALL CORMGI('G', LIGRCH)
        CALL JEECRA(LIGRCH//'.LGRF','DOCU',IBID,'MECA')
        CALL INITEL(LIGRCH)
C       -- LIEN ENTRE LE LIGREL DE CHARGE ET LE MODELE :
        CALL JEVEUO(LIGRCH//'.LGRF','E',JLGRF)
        ZK8(JLGRF-1+2)=LIGRMO(1:8)
      ENDIF


      IF (FONREE.NE.'COMP') THEN
C       -- VERIFICATION DES NORMALES AUX MAILLES SURFACIQUES EN 3D
C       -- ET LINEIQUES EN 2D
        CALL CHVENO ( FONREE, NOMA, NOMO )
      ENDIF

      END
