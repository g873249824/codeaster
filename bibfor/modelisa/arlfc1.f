      SUBROUTINE ARLFC1(MAIL  ,DIME  ,NOM1  ,CINE1 ,NOM2  ,
     &                  CINE2 ,NOMC  ,NOMARL )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 13/10/2009   AUTEUR CAO B.CAO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MEUNIER S.MEUNIER
C
      IMPLICIT NONE
      CHARACTER*10  NOM1,NOM2,NOMC
      CHARACTER*8   MAIL,CINE1,CINE2,NOMARL
      INTEGER       DIME
C
C ----------------------------------------------------------------------
C
C ROUTINE ARLEQUIN
C
C ALLOCATION ET ECRITURE DES POINTEURS DES MATRICES DE COUPLAGE ARLEQUIN
C LORSQUE LE GROUPE DE MAILLE DE COLLAGE EST CELUI DES MULTIPLICATEURS
C
C ----------------------------------------------------------------------
C
C
C IN  MAIL   : NOM UTILISATEUR DU MAILLAGE
C IN  DIME   : DIMENSION DE L'ESPACE GLOBAL
C IN  NOM1   : NOM DE LA SD POUR LES MAILLES GROUPE 1
C IN  NOM2   : NOM DE LA SD POUR LES MAILLES GROUPE 2
C IN  CINE1  : CINEMATIQUE DU PREMIER GROUPE DE MAILLE
C IN  CINE2  : CINEMATIQUE DU DEUXIEME GROUPE DE MAILLE
C IN  NOMARL : NOM DE LA SD PRINCIPALE ARLEQUIN
C I/O NOMC   : NOM DE LA SD POUR LE COLLAGE
C
C
C SD DE SORTIE
C NOMC.INO        : LISTE TRIEE DES NOEUDS LIGNE DE LA MATRICE MORSE
C                   (NO1, NO2, NO3, ... ) AVEC NO1 < NO2 < NO3 < ...
C NOM*.MORSE.DIME : DIMENSION DE LA MATRICE NODALE (* = 1, 2)
C NOM*.MORSE.INO  : LISTES TRIEES DES NOEUDS COLONNES MATRICE MORSE
C                   (XC V I NUMERO VARIABLE)
C                 [LIGNE 1] (NO1.1, NO1.2, ...) AVEC NO1.1 < NO1.2 < ...
C                 [LIGNE 2] (NO2.1, NO2.2, ...) AVEC NO2.1 < NO2.2 < ...
C                    ...
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
C
      CHARACTER*32       JEXNUM ,JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      CHARACTER*16  NOMMO1,NOMMO2
      CHARACTER*24  NOMAPP
      CHARACTER*8   K8BID
      INTEGER       DIM1,DIM2,NNO,NDML1,NDML2,NNC,NM2
      INTEGER       NBEV1,NBEV2,CNIN1,CNIN2
      INTEGER       JCONX,JCUMU,JNGRM1
      INTEGER       JCNCI,JCNCUM,JNAPP,JAPCUM,JNGRM2
      INTEGER       JFILN1,JCOMT1,JCOMT2,JFILMA,JFILN2
      INTEGER       JCINO,JMINO1,JMINO2
      INTEGER       IAUX,JAUX,KAUX,PMAT0,PMAT1,PMAT2,PMAT3,PMAT4,PMAT5
      INTEGER       JCOLM,IBID
      LOGICAL       IRET
C
      CHARACTER*6  NOMPRO
      PARAMETER   (NOMPRO='ARLFC1')
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      CALL JEVEUO(NOMC(1:10)//'.MAILLE','E',JCOLM)
C
C --- NOMS OBJETS MORSE
C
      NOMMO1 = NOM1(1:10)//'.MORSE'
      NOMMO2 = NOM2(1:10)//'.MORSE'
C
C --- DIMENSION DES MATRICES NODALES ARLEQUIN
C
      CALL ARLMDI(DIME  ,CINE1 ,CINE2 ,DIM1  ,DIM2  )
C
C --- LECTURE DONNEES MAILLAGE
C
      CALL JEVEUO(MAIL(1:8)//'.CONNEX','L',JCONX)
      CALL JEVEUO(JEXATR(MAIL(1:8)//'.CONNEX','LONCUM'),'L',JCUMU)
C
C --- LECTURE DONNEES GROUPE DE MAILLES
C
      CALL JEVEUO(NOM1(1:10)//'.GROUPEMA','L',JNGRM1)
      CALL JEVEUO(NOM2(1:10)//'.GROUPEMA','L',JNGRM2)
      CALL JELIRA(NOM2(1:10)//'.GROUPEMA','LONMAX',NM2,K8BID)
C
C --- LECTURE CONNECTIVITES INVERSES
C
      CALL JEVEUO(NOM1(1:10)//'.CNCINV','L',JCNCI)
      CALL JELIRA(NOM1(1:10)//'.CNCINV','NMAXOC',NNO,K8BID)
      CALL JEVEUO(JEXATR(NOM1(1:10)//'.CNCINV','LONCUM'),'L',JCNCUM)
C
C --- LECTURE GRAPHE APPARIEMENT
C
      NOMAPP = NOMARL(1:8)//'.GRAPH'
      CALL JEVEUO(NOMAPP,'L',JNAPP)
      CALL JEVEUO(JEXATR(NOMAPP,'LONCUM'),'L',JAPCUM)
C
C --- ALLOCATION OBJETS TEMPORAIRES
C
      CALL WKVECT('&&'//NOMPRO//'.COMPTEUR1','V V I',NNO,JCOMT1)
      CALL WKVECT('&&'//NOMPRO//'.COMPTEUR2','V V I',NNO,JCOMT2)
      CALL WKVECT('&&'//NOMPRO//'.FILTRE.N1','V V L',NNO,JFILN1)
      CALL WKVECT('&&'//NOMPRO//'.FILTRE.N2','V V L',NNO,JFILN2)
      CALL WKVECT('&&'//NOMPRO//'.FILTRE.MA','V V L',NM2,JFILMA)

      DO 10 IAUX = 1, NNO
        ZL(JFILN2-1+IAUX) = .FALSE.
 10   CONTINUE

      NDML1 = 0
      NDML2 = 0
      NNC = 0
C
C --- DIMENSIONS DES MATRICES
C
      PMAT1 = ZI(JCNCUM)
      IRET = .TRUE.

      DO 20 NBEV1 = 1, NNO

        PMAT0 = PMAT1
        PMAT1 = ZI(JCNCUM+NBEV1)
        IF (ZI(JCNCI-1+PMAT0).EQ.0) GOTO 20

        IF (IRET) THEN

          IRET = .FALSE.

          DO 30 CNIN2 = 1, NM2
            ZL(JFILMA-1+CNIN2) = .FALSE.
 30       CONTINUE

          DO 40 NBEV2 = 1, NNO
            ZL(JFILN1-1+NBEV2) = .FALSE.
 40       CONTINUE

        ENDIF

        DO 50 IAUX = PMAT0, PMAT1-1

          CNIN1 = ZI(JCNCI-1+IAUX)
          IF (.NOT.ZL(JCOLM+CNIN1-1)) GOTO 50

          JAUX = ZI(JNGRM1-1+CNIN1)
          PMAT2 = ZI(JCUMU-1+JAUX)
          PMAT3 = ZI(JCUMU+JAUX)

          DO 60 JAUX = PMAT2, PMAT3-1

            NBEV2 = ZI(JCONX-1+JAUX)
            IF (ZL(JFILN1-1+NBEV2)) GOTO 60
            ZL(JFILN1-1+NBEV2) = .TRUE.
            ZL(JFILN2-1+NBEV2) = .TRUE.
            ZI(JCOMT1-1+NBEV1) = ZI(JCOMT1-1+NBEV1) + 1
            NDML1 = NDML1 + 1

 60       CONTINUE

          PMAT2 = ZI(JAPCUM-1+CNIN1)
          PMAT3 = ZI(JAPCUM+CNIN1)

          DO 70 JAUX = PMAT2, PMAT3-1

            CNIN2 = ZI(JNAPP-1+JAUX)
            IF (ZL(JFILMA-1+CNIN2)) GOTO 70
            ZL(JFILMA-1+CNIN2) = .TRUE.
            KAUX = ZI(JNGRM2-1+CNIN2)
            PMAT4 = ZI(JCUMU-1+KAUX)
            PMAT5 = ZI(JCUMU+KAUX)

            DO 80 KAUX = PMAT4, PMAT5-1

              NBEV2 = ZI(JCONX-1+KAUX)
              IF (ZL(JFILN1-1+NBEV2)) GOTO 80
              ZL(JFILN1-1+NBEV2) = .TRUE.

              IF (ZL(JFILN2-1+NBEV2)) THEN
                CALL U2MESS('F','ARLEQUIN_17')
              ENDIF

              ZI(JCOMT2-1+NBEV1) = ZI(JCOMT2-1+NBEV1) + 1
              NDML2 = NDML2 + 1
              IRET = .TRUE.

 80         CONTINUE

 70       CONTINUE

 50     CONTINUE

        IF (IRET) NNC = NNC + 1

 20   CONTINUE
C
C --- ALLOCATION OBJET MORSES
C
      CALL ARLCMO(NOMMO1,'V',NDML1,NNC,DIM1)
      CALL ARLCMO(NOMMO2,'V',NDML2,NNC,DIM2)
      CALL JEVEUO(NOMMO1(1:16)//'.INO','E',JMINO1)
      CALL JEVEUO(NOMMO2(1:16)//'.INO','E',JMINO2)
C
C --- ALLOCATION OBJET INO
C
      CALL WKVECT(NOMC(1:10)//'.INO','V V I',NNC,JCINO)
C
      NNC = 0
      DO 90 NBEV1 = 1, NNO
        IF (ZI(JCOMT2-1+NBEV1).EQ.0) GOTO 90
        ZI(JCINO+NNC) = NBEV1
        NNC = NNC + 1
        CALL JECROC(JEXNUM(NOMMO1(1:16)//'.INO',NNC))
        CALL JEECRA(JEXNUM(NOMMO1(1:16)//'.INO',NNC),'LONMAX',
     &              ZI(JCOMT1-1+NBEV1),' ')
        CALL JECROC(JEXNUM(NOMMO2(1:16)//'.INO',NNC))
        CALL JEECRA(JEXNUM(NOMMO2(1:16)//'.INO',NNC),'LONMAX',
     &              ZI(JCOMT2-1+NBEV1),' ')
 90   CONTINUE
C
C --- ECRITURE DU PROFIL DES MATRICES
C
      PMAT1 = ZI(JCNCUM)

      DO 100 NBEV1 = 1, NNO

        PMAT0 = PMAT1
        PMAT1 = ZI(JCNCUM+NBEV1)
        IF (ZI(JCOMT2-1+NBEV1).EQ.0) GOTO 100

        DO 110 CNIN2 = 1, NM2
          ZL(JFILMA-1+CNIN2) = .FALSE.
 110    CONTINUE

        DO 120 NBEV2 = 1, NNO
          ZL(JFILN1-1+NBEV2) = .FALSE.
 120    CONTINUE

        NDML1 = 0
        NDML2 = 0

        DO 130 IAUX = PMAT0, PMAT1-1

          CNIN1 = ZI(JCNCI-1+IAUX)
          IF (.NOT.ZL(JCOLM+CNIN1-1)) GOTO 130
          JAUX = ZI(JNGRM1-1+CNIN1)
          PMAT2 = ZI(JCUMU-1+JAUX)
          PMAT3 = ZI(JCUMU+JAUX)

          DO 140 JAUX = PMAT2, PMAT3-1

            NBEV2 = ZI(JCONX-1+JAUX)
            IF (ZL(JFILN1-1+NBEV2)) GOTO 140
            ZL(JFILN1-1+NBEV2) = .TRUE.
            ZI(JMINO1+NDML1) = NBEV2
            NDML1 = NDML1 + 1

 140      CONTINUE

          PMAT2 = ZI(JAPCUM-1+CNIN1)
          PMAT3 = ZI(JAPCUM+CNIN1)

          DO 150 JAUX = PMAT2, PMAT3-1

            CNIN2 = ZI(JNAPP-1+JAUX)
            IF (ZL(JFILMA-1+CNIN2)) GOTO 150
            ZL(JFILMA-1+CNIN2) = .TRUE.
            KAUX = ZI(JNGRM2-1+CNIN2)
            PMAT4 = ZI(JCUMU-1+KAUX)
            PMAT5 = ZI(JCUMU+KAUX)

            DO 160 KAUX = PMAT4, PMAT5-1

              NBEV2 = ZI(JCONX-1+KAUX)
              IF (ZL(JFILN1-1+NBEV2)) GOTO 160
              ZL(JFILN1-1+NBEV2) = .TRUE.
              ZI(JMINO2+NDML2) = NBEV2
              NDML2 = NDML2 + 1

 160        CONTINUE

 150      CONTINUE

 130    CONTINUE

        CALL TRI(ZI(JMINO1),IBID,0,NDML1)
        CALL TRI(ZI(JMINO2),IBID,0,NDML2)
        JMINO1 = JMINO1 + NDML1
        JMINO2 = JMINO2 + NDML2

 100  CONTINUE
C
C --- DESALLOCATIONS
C
      CALL JEDETR('&&'//NOMPRO//'.FILTRE.MA')
      CALL JEDETR('&&'//NOMPRO//'.COMPTEUR2')
      CALL JEDETR('&&'//NOMPRO//'.COMPTEUR1')
      CALL JEDETR('&&'//NOMPRO//'.FILTRE.N1')
      CALL JEDETR('&&'//NOMPRO//'.FILTRE.N2')

      CALL JEDEMA()

      END
