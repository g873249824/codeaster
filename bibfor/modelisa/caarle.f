      SUBROUTINE CAARLE(CHARGE)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 06/04/2004   AUTEUR DURAND C.DURAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C ----------------------------------------------------------------------
C              CREATION D'UN CHARGEMENT DE TYPE ARLEQUIN
C ----------------------------------------------------------------------
C VARIABLES D'ENTREE
C CHARACTER*8   CHARGE  : SD CHARGE
C
C SD DE SORTIE 
C CHARGE.POIDS_MAILLE   : VECTEUR DE PONDERATION DES MAILLES DU MAILLAGE
C                        (P1, P2, ...) AVEC P* POIDS DE LA MAILLE *
C
C SD D'ENTREE / SORTIE
C CHARGE.CHME.LIGRE     : LIGREL DE CHARGE
C CHARGE.CHME.CIMPO     : CARTE COEFFICIENTS IMPOSES
C CHARGE.CHME.CMULT     : CARTE COEFFICIENTS MULTIPLICATEURS
C ----------------------------------------------------------------------

      IMPLICIT NONE

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
C --- VARIABLES
      CHARACTER*16 NBOIT1,NBOIT2,NBOITC,NMORS1,NMORS2
      CHARACTER*10 NOM1,NOM2,NOMC,NOMN,NOMT,NOMH,QUAD
      CHARACTER*8  CHARGE,MOD,MAIL,CARA,MODEL(3),CINE(3)
      INTEGER      DM(3),DIME,NNO,NOC,N1,N2,NC,NMAX(2)
      INTEGER      IOC,I,P0,P1,P2,Q0,Q1
      REAL*8       A1,A2

      CALL GETFAC('ARLEQUIN',NOC)
      IF (NOC.EQ.0) GOTO 70

      NOM1 = CHARGE//'.1'
      NOM2 = CHARGE//'.2'
      NOMC = CHARGE//'.C'
      NOMN = CHARGE//'.N'
      NOMT = CHARGE//'.T'
      NOMH = CHARGE//'.H'
      QUAD = CHARGE//'.Q'
      NBOIT1 = NOM1//'.BOITE'
      NBOIT2 = NOM2//'.BOITE'
      NBOITC = NOMC//'.BOITE'
      NMORS1 = NOM1//'.MORSE'
      NMORS2 = NOM2//'.MORSE'

      CALL JEMARQ()

C --- VECTEUR NOM TYPE DE MAILLES 

      CALL JELIRA('&CATA.TM.NOMTM','NOMMAX',NC,ZK8)
      CALL WKVECT('&&ARL.NOMTM','V V K8',NC,Q0)
      DO 10 I = 1, NC
        CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',I),ZK8(Q0-1+I))
 10   CONTINUE

C --- VECTEUR CHARGE.P_MAIL

      CALL GETVID(' ','MODELE',0,1,1,MOD,I)
      CALL JEVEUO(MOD//'.MODELE    .NOMA','L',P0)
      MAIL = ZK8(P0)
      CALL JEVEUO(MAIL//'.DIME','L',P0)
      NNO = ZI(P0)
      NC = ZI(P0+2)

      CALL WKVECT(CHARGE//'.POIDS_MAILLE','G V R',NC,Q1)
      DO 20 I = 1, NC
        ZR(Q1-1+I) = 1.D0
 20   CONTINUE

C --- MOT-CLEF FACTEUR ARLEQUIN

      DO 30 IOC = 1, NOC

C ----- LECTURE PONDERATION

        CALL GETVR8('ARLEQUIN','POIDS_1',IOC,1,1,A1,I)

        IF (I.EQ.0) THEN
          CALL GETVR8('ARLEQUIN','POIDS_2',IOC,1,1,A2,I)
          A1 = 1.D0 - A2
        ELSE
          A2 = 1.D0 - A1
        ENDIF

        IF ((A1.LE.0.D0).OR.(A2.LE.0.D0)) THEN
          CALL UTMESS('F','CAARLE','IL FAUT 0 < POIDS < 1')
        ENDIF 

C ----- LECTURE ET VERIFICATION DES LISTES DE GROUPES DE MAILLES

        CALL GETVID('ARLEQUIN','GROUP_MA_1',IOC,1,0,ZK8,N1)
        CALL GETVID('ARLEQUIN','GROUP_MA_2',IOC,1,0,ZK8,N2)
        CALL GETVID('ARLEQUIN','GROUP_MA_COLL',IOC,1,0,ZK8,NC)

        CALL WKVECT('&&CAARLE.GMA1','V V K8',-N1,P0)
        CALL WKVECT('&&CAARLE.GMA2','V V K8',-N2,P1)
        CALL WKVECT('&&CAARLE.GMAC','V V K8',-NC,P2)

        CALL GETVID('ARLEQUIN','GROUP_MA_1',IOC,1,-N1,ZK8(P0),N1)
        CALL GETVID('ARLEQUIN','GROUP_MA_2',IOC,1,-N2,ZK8(P1),N2)
        CALL GETVID('ARLEQUIN','GROUP_MA_COLL',IOC,1,-NC,ZK8(P2),NC)

        CALL ARLVER(MOD,ZK8(P0),N1,NOM1,MODEL(1),CINE(1),DM(1))
        CALL ARLVER(MOD,ZK8(P1),N2,NOM2,MODEL(2),CINE(2),DM(2))
        CALL ARLVER(MOD,ZK8(P2),NC,NOMC,MODEL(3),CINE(3),DM(3))

        CALL JEDETR('&&CAARLE.GMA1')
        CALL JEDETR('&&CAARLE.GMA2')
        CALL JEDETR('&&CAARLE.GMAC')

        IF ((MODEL(1).NE.MODEL(2)).OR.(MODEL(2).NE.MODEL(3)))
     &    CALL UTMESS('F','AFFE_CHAR_MECA','LES MODELISATIONS DE GROUP'
     &   //'_MA_1, GROUP_MA_2 ET GROUP_MA_COLL DOIVENT ETRE LES MEMES')

        IF ((CINE(1).NE.CINE(3)).AND.(CINE(2).NE.CINE(3)))
     &    CALL UTMESS('F','AFFE_CHAR_MECA','LA CINEMATIQUE DE GROUP_MA'
     &        //'_COLL DOIT ETRE CELLE DE GROUP_MA_1 OU DE GROUP_MA_2')

C ----- DIMENSION

        IF (MODEL(1)(1:2).EQ.'3D') THEN
          DIME = 3
        ELSE
          DIME = 2
        ENDIF

C ----- LISSAGE DES NORMALES
      
        IF ((CINE(1).EQ.'COQUE   ').OR.(CINE(2).EQ.'COQUE   ')) THEN
        
          CALL JEEXIN(NOMN,I)

          IF (I.EQ.0) THEN

            CALL GETVID('ARLEQUIN','CARA_ELEM',IOC,1,1,CARA,I)

            IF (I.EQ.0) CALL UTMESS('F','AFFE_CHAR_MECA','IL FAUT LE '
     &    //'MOT-CLEF CARA_ELEM LORSQU''ON UTILISE DES ELEMENTS COQUES')
            CALL LISNOR(CARA,DIME,NOMN,NOMT,NOMH)

          ENDIF

        ENDIF

C ----- MISE EN BOITES DES MAILLES

        CALL BOITE(MAIL,NOM1//'.GROUPEMA',NOMN,DIME,ZK8(Q0),NBOIT1)
        CALL BOITE(MAIL,NOM2//'.GROUPEMA',NOMN,DIME,ZK8(Q0),NBOIT2)
        CALL BOITE(MAIL,NOMC//'.GROUPEMA',NOMN,DIME,ZK8(Q0),NBOITC)

C ----- TRAITEMENTS SUR LA ZONE DE COLLAGE

        CALL ARLMTR(MAIL,NOMC,NOMN,ZK8(Q0))
        CALL JEVEUO(NOMC//'.GROUPEMA','L',P0)
        CALL LBORD(MAIL,ZI(P0),NC,ZK8(Q0),'V',NOMC//'.GROUPEMA')
        CALL CNCINV(MAIL,ZI(P0),NC,'V',NOMC//'.CNCINV')
        CALL GRMAMA(MAIL,NOMC//'.CNCINV',NC,DM(3),'V',NOMC//'.GRMAMA')
        CALL JEVEUO(JEXATR(NOMC//'.CNCINV','LONCUM'),'L',P0)
        
        NMAX(1) = 0
        P1 = ZI(P0)
        DO 40 I = 1, NNO
          P0 = P0 + 1
          P2 = ZI(P0)
          IF ((P2-P1).GT.NMAX(1)) NMAX(1) = P2-P1         
          P1 = P2
 40     CONTINUE

C ----- APPARIEMENT MAILLES ZONE DE COLLAGE / MAILLES ZONE 1
        
        CALL BISSEC(NBOIT1)
        CALL JEVEUO(NOM1//'.GROUPEMA','L',P1)
        CALL CNCINV(MAIL,ZI(P1),N1,'V',NOM1//'.CNCINV')
        CALL GRMAMA(MAIL,NOM1//'.CNCINV',N1,DM(1),'V',NOM1//'.GRMAMA')
        CALL JEVEUO(JEXATR(NOM1//'.CNCINV','LONCUM'),'L',P0)

        NMAX(2) = 0
        P1 = ZI(P0)
        DO 50 I = 1, NNO
          P0 = P0 + 1
          P2 = ZI(P0)
          IF ((P2-P1).GT.NMAX(2)) NMAX(2) = P2-P1         
          P1 = P2
 50     CONTINUE

        CALL ARLAPP(MAIL,NOMC,NOM1,NOMN,NMAX,ZK8(Q0))
        CALL JEDETR(NOM1//'.ARBRE.CELL')
        CALL JEDETR(NOM1//'.ARBRE.LIMA')
        CALL JEDETR(NOM1//'.CNCINV')

C ----- PONDERATION DES MAILLES ZONE 1

        CALL ARLAPH(NOM1,NOMC,A1,ZR(Q1))
        CALL JEDETR(NOM1//'.GRMAMA')

C ----- CALCUL MATRICE DE COUPLAGE ZONE DE COLLAGE / MAILLE ZONE 1

        CALL ARLFAM(MAIL,NOMC,NOM1,ZK8(Q0),QUAD)
        CALL ARLFAC(MAIL,DIME,NOMC,CINE(3),NOM1,CINE(1),NMORS1)
        CALL JEDETR(NOMC//'.'//NOM1)

        CALL ARLCAL(MAIL,DIME,QUAD,NOMC,CINE(3),NOM1,
     &              CINE(1),ZK8(Q0),NOMN,NOMT,NOMH,NMORS1)
 
        CALL JEDETR(NOM1//'.GROUPEMA')
        CALL JEDETR(NBOIT1//'.DIME')
        CALL JEDETR(NBOIT1//'.MINMAX')
        CALL JEDETR(NBOIT1//'.SOMMET')
        CALL JEDETR(NBOIT1//'.PAN')
        CALL JEDETR(NBOIT1//'.H')
        CALL JEDETR(QUAD//'.LIMAMA')
        CALL JEDETR(QUAD//'.MAMA')
        CALL JEDETR(QUAD//'.NUMERO')
        CALL JEDETR(QUAD//'.TYPEMA')

C ----- APPARIEMENT MAILLES ZONE DE COLLAGE / MAILLES ZONE 2
        
        CALL BISSEC(NBOIT2)
        CALL JEVEUO(NOM2//'.GROUPEMA','L',P2)
        CALL CNCINV(MAIL,ZI(P2),N2,'V',NOM2//'.CNCINV')
        CALL GRMAMA(MAIL,NOM2//'.CNCINV',N2,DM(2),'V',NOM2//'.GRMAMA')
        CALL JEVEUO(JEXATR(NOM2//'.CNCINV','LONCUM'),'L',P0)
 
        NMAX(2) = 0
        P1 = ZI(P0)
        DO 60 I = 1, NNO
          P0 = P0 + 1
          P2 = ZI(P0)
          IF ((P2-P1).GT.NMAX(2)) NMAX(2) = P2-P1         
          P1 = P2
 60     CONTINUE

        CALL ARLAPP(MAIL,NOMC,NOM2,NOMN,NMAX,ZK8(Q0))
        CALL JEDETR(NOM2//'.ARBRE.CELL')
        CALL JEDETR(NOM2//'.ARBRE.LIMA')
        CALL JEDETR(NOM2//'.CNCINV')

C ----- PONDERATION DES MAILLES ZONE 2

        CALL ARLAPH(NOM2,NOMC,A2,ZR(Q1))
        CALL JEDETR(NOM2//'.GRMAMA')

C ----- CALCUL MATRICE DE COUPLAGE ZONE DE COLLAGE / MAILLE ZONE 2

        CALL ARLFAM(MAIL,NOMC,NOM2,ZK8(Q0),QUAD)
        CALL ARLFAC(MAIL,DIME,NOMC,CINE(3),NOM2,CINE(2),NMORS2)
        CALL JEDETR(NOMC//'.'//NOM2)

        CALL ARLCAL(MAIL,DIME,QUAD,NOMC,CINE(3),NOM2,
     &              CINE(2),ZK8(Q0),NOMN,NOMT,NOMH,NMORS2)

        CALL JEDETR(NOM2//'.GROUPEMA')
        CALL JEDETR(NBOIT2//'.DIME')
        CALL JEDETR(NBOIT2//'.MINMAX')
        CALL JEDETR(NBOIT2//'.SOMMET')
        CALL JEDETR(NBOIT2//'.PAN')
        CALL JEDETR(NBOIT2//'.H')
        CALL JEDETR(QUAD//'.LIMAMA')
        CALL JEDETR(QUAD//'.MAMA')
        CALL JEDETR(QUAD//'.NUMERO')
        CALL JEDETR(QUAD//'.TYPEMA')

C ----- DESALLOCATIONS
 
        CALL JEDETR(NOMC//'.INO')
        CALL JEDETR(NOMC//'.GROUPEMA')
        CALL JEDETR(NOMC//'.GROUPEMA.BORD')
        CALL JEDETR(NOMC//'.CNCINV')
        CALL JEDETR(NOMC//'.GRMAMA')
        CALL JEDETR(NBOIT1//'.MMGLOB')
        CALL JEDETR(NBOIT2//'.MMGLOB')
        CALL JEDETR(NBOITC//'.DIME')
        CALL JEDETR(NBOITC//'.MINMAX')
        CALL JEDETR(NBOITC//'.PAN')
        CALL JEDETR(NBOITC//'.SOMMET')
        CALL JEDETR(NBOITC//'.MMGLOB')
        CALL JEDETR(NBOITC//'.H')

C ----- ASSEMBLAGE EN CHARGE .CHME

        CALL ARLCHA(DIME,CINE,NMORS1,NMORS2,CHARGE)

        CALL JEDETR(NMORS1//'.DIME')
        CALL JEDETR(NMORS1//'.INO')
        CALL JEDETR(NMORS1//'.VALE')
        CALL JEDETR(NMORS2//'.DIME')
        CALL JEDETR(NMORS2//'.INO')
        CALL JEDETR(NMORS2//'.VALE')
          
 30   CONTINUE

C --- DESALLOCATION
      
      CALL JEDETR('&&ARL.NOMTM')
      CALL JEEXIN(NOMN,I)
      IF (I.NE.0) THEN 
        CALL JEDETR(NOMN)
        CALL JEDETR(NOMT)
        CALL JEDETR(NOMH)
      ENDIF

      CALL JEDEMA()

 70   CONTINUE

      END
