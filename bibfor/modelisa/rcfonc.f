      SUBROUTINE RCFONC(QUEST,NOMRC,JPROL,JVALE,NBVALE,SIGY,E,NU,P,
     &                  RP,RPRIM,AIRERP,SIELEQ,DP)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 04/10/2011   AUTEUR MACOCCO K.MACOCCO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*1      QUEST
      INTEGER          JPROL,JVALE,NBVALE
      REAL*8           E,NU,SIGY,P,SIELEQ,RP,RPRIM,AIRERP,DP
      CHARACTER*(*)    NOMRC
C ----------------------------------------------------------------------
C     INTERPOLATION SUR UNE FONCTION DE TYPE R(P)
C
C IN  QUEST   : 'S' -> CALCUL DE LA LIMITE ELASTIQUE
C                 OUT: SIGY
C               'V' -> CALCUL DE RP, RPRIM ET AIRERP
C                 IN: P  OUT: RP,RPRIM,AIRERP
C               'E' -> CALCUL DE L'INCREMENT DP, RACINE DE L'EQUATION
C                 IN : E(T+),NU(T+),P-,SIELEQ+
C                 OUT: RP(P+),RPRIM(P+),AIRERP(P+),DP
C IN  NOMRC   : NOM DE LA RELATION DE COMPORTEMENT
C               NOMRC = 'TRACTION' OU 'META_TRACTION'
C IN  JPROL   : ADRESSE DE L'OBJET .PROL DE LA S.D. FONCTION R(P)
C IN  JVALE   : ADRESSE DE L'OBJET .VALE DE LA S.D. FONCTION R(P)
C IN  NBVALE  : NOMBRE DE VALEURS DE LA FONCTION R(P)
C OUT SIGY    : LIMITE D'ELASTICITE
C IN  E       : MODULE D'YOUNG
C IN  NU      : COEFFICIENT DE POISSON
C IN  P       : VARIABLE INTERNE
C OUT RP      : VALEUR DE R(P).
C OUT RPRIM   : VALEUR DE LA DERIVEE DE R(P) EN P
C OUT AIRERP  : AIRE SOUS LA COURBE R(P)
C IN  SIELEQ  : CONTRAINTE ELASTIQUE EQUIVALENTE
C OUT DP      : INCREMENT DE DEFORMATION PLASTIQUE CUMULEE.
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      LOGICAL       TESSUP
      CHARACTER*1   PRO
      CHARACTER*24  NOM
      INTEGER       JP,JR,I,I0
      REAL *8       TROIMU,P0,RP0,PP,EQU


C - DESCRIPTIF DE LA COURBE R(P)
      JP = JVALE
      JR = JVALE + NBVALE
      PRO = ZK24(JPROL+4)(2:2)
      NOM = ZK24(JPROL+5)
      

C - LIMITE D'ELASTICITE
      IF (QUEST.EQ.'S') THEN
       IF (NOMRC(1:8).EQ.'TRACTION') THEN
        SIGY = ZR(JR)
        GOTO 9999
       ELSE
        CALL U2MESS('F','MODELISA6_62')
       ENDIF
      ENDIF

C - INITIALISATION
      IF (P.LT.0) CALL U2MESS('F','MODELISA6_59')

C DISTINCTION ENTRE TRACTION ET META_TRACTION CAR
C POUR TRACTION:C EST LA COURBE SIGMA(P)
C LE PREMIER POINT CORRESPOND A LA LIMITE D ELASTICITE
C POUR META_TRACTION:C EST LA COURBE R(P)
C DONC IL Y A UN COUPLE DE MOINS QUE DANS TRACTION

      IF(NOMRC(1:8).EQ.'TRACTION') THEN
       AIRERP = 0.D0
       TESSUP = .FALSE.

C - PARCOURS JUSQU'A P
       DO 10 I=1,NBVALE-1
        IF (P.LT.ZR(JP+I)) THEN
         I0 = I-1
         GOTO 20
        ENDIF
        AIRERP = AIRERP+(ZR(JR+I)+ZR(JR+I-1))*
     &                  (ZR(JP+I)-ZR(JP+I-1))
10     CONTINUE
       TESSUP = .TRUE.
       IF (PRO.EQ.'E') THEN
        CALL U2MESG('F','MODELISA6_60',1,NOM,0,0,1,ZR(JP-1+NBVALE))
       ENDIF
       I0=NBVALE-1
20     CONTINUE

C - CALCUL DES VALEURS DE R(P), R'(P) ET AIRE(P)

       IF (QUEST.EQ.'V') THEN
        IF (TESSUP) THEN
         IF (PRO.EQ.'L') THEN
          RPRIM = (ZR(JR+I0)-ZR(JR+I0-1))/
     &            (ZR(JP+I0)-ZR(JP+I0-1))
         ELSE
          RPRIM = 0.D0
         ENDIF
        ELSE
         RPRIM = (ZR(JR+I0+1)-ZR(JR+I0))/
     &           (ZR(JP+I0+1)-ZR(JP+I0))
        ENDIF
        P0  = ZR(JP+I0)
        RP0 = ZR(JR+I0)
        RP     = RP0 + RPRIM*(P-P0)
        AIRERP = (AIRERP+(RP0+RP)*(P-P0))*0.5D0
        GOTO 9999
       ENDIF
      ENDIF

      IF(NOMRC(1:13).EQ.'META_TRACTION') THEN
       AIRERP = 0.D0
       TESSUP = .FALSE.

C - PARCOURS JUSQU'A P
       DO 11 I=1,NBVALE
        IF (P.LT.ZR(JP+I-1)) THEN
         I0 = I-1
         GOTO 21
        ENDIF
11     CONTINUE
       TESSUP = .TRUE.
       IF (PRO.EQ.'E') THEN
        CALL U2MESG('F','MODELISA6_60',1,NOM,0,0,1,ZR(JP-1+NBVALE))
       ENDIF
       I0=NBVALE-1
21     CONTINUE

C - CALCUL DES VALEURS DE R(P) ET R'(P)

       IF (QUEST.EQ.'V') THEN
        IF (TESSUP) THEN
         IF (PRO.EQ.'L') THEN
          RPRIM = (ZR(JR+I0)-ZR(JR+I0-1))/
     &            (ZR(JP+I0)-ZR(JP+I0-1))
         ELSE
          RPRIM = 0.D0
         ENDIF
        RP = ZR(JR+I0)+ RPRIM*(P-ZR(JP+I0))
        ELSE
        IF(I0.EQ.0)  THEN
         RPRIM = ZR(JR)/ZR(JP)
         P0  = 0.D0
         RP0 = 0.D0
        ELSE
          RPRIM = (ZR(JR+I0)-ZR(JR+I0-1))/
     &            (ZR(JP+I0)-ZR(JP+I0-1))
          P0  = ZR(JP+I0-1)
          RP0 = ZR(JR+I0-1)
         ENDIF
        RP   = RP0 + RPRIM*(P-P0)
        ENDIF
        GOTO 9999
       ENDIF
      ENDIF

C - RESOLUTION DE L'EQUATION R(P+DP) + 3 MU DP = SIELEQ

      TROIMU = 1.5D0*E/(1+NU)
      DO 30 I=I0+1,NBVALE-1
       EQU = ZR(JR+I) + TROIMU*(ZR(JP+I)-P) - SIELEQ
       IF (EQU.GT.0) THEN
        I0 = I-1
        GOTO 40
       ENDIF
       AIRERP = AIRERP+(ZR(JR+I)+ZR(JR+I-1))*
     &                 (ZR(JP+I)-ZR(JP+I-1))
30    CONTINUE
      TESSUP = .TRUE.
      IF (PRO.EQ.'E') THEN
        CALL U2MESG('F','MODELISA6_60',1,NOM,0,0,1,ZR(JP-1+NBVALE))
      ENDIF 
      I0 = NBVALE-1
40    CONTINUE

C - CALCUL DES VALEURS DE DP, R(P+DP), R'(P+DP) ET AIRE(P+DP)

      IF (TESSUP) THEN
       IF (PRO.EQ.'L') THEN
        RPRIM = (ZR(JR+I0)-ZR(JR+I0-1))/
     &          (ZR(JP+I0)-ZR(JP+I0-1))
       ELSE
        RPRIM = 0.D0
       ENDIF
      ELSE
       RPRIM = (ZR(JR+I0+1)-ZR(JR+I0))/
     &         (ZR(JP+I0+1)-ZR(JP+I0))
      ENDIF
      P0  = ZR(JP+I0)
      RP0 = ZR(JR+I0)
      DP     = (SIELEQ-RP0-RPRIM*(P-P0))/(TROIMU+RPRIM)
      PP     = P+DP
      RP     = RP0 + RPRIM*(PP-P0)
      AIRERP = (AIRERP+(RP0+RP)*(PP-P0))*0.5D0

9999  CONTINUE
      END
