      SUBROUTINE AFFONO(VALR,VALK,DESC,PRNM,NBCOMP,FONREE,NOMN,INO,
     &                  NSURCH,FORIMP,VALFOR,VALFOF,MOTCLE,VERIF,NBEC)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 25/11/98   AUTEUR CIBHHGB G.BERTRAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
      INTEGER      PRNM(1),NBCOMP,DESC,INO,NSURCH,FORIMP(NBCOMP)
      REAL*8       VALR(1),VALFOR(NBCOMP)
      LOGICAL      VERIF,EXISDG
      CHARACTER*4  FONREE
      CHARACTER*8  VALK(1),NOMN,VALFOF(NBCOMP)
      CHARACTER*16 MOTCLE(NBCOMP)
C
C BUT : * DETECTER ET PRENDRE EN COMPTE LES SURCHARGES DANS FORCE_NODALE
C        1 REMPLIR LES TABLEAUX DESCRIPTEUR DE FORCES IMPOSEES
C        2 COMPTER LE NOMBRE DE SURCHARGES DE FORCE_NODALE
C          POUR PERMETTE L'ALLOCATION DES CARTES A LA BONNE DIMENSION
C        3 EMET UN MESSAGE D'ALARME EN CAS DE SURCHARGE
C
C ARGUMENTS D'ENTREE:
C
C   PRNM   : DESCRIPTEUR GRANDEUR SUR LE NOEUD INO
C   NBCOMP : NOMBRE DE DDLS DANS FORCE_NODALE
C   FONREE : AFFE_CHAR_XXXX OU AFFE_CHAR_XXXX_F
C   NOMN   : NOM DU NOEUD INO OU EST EFFECTUEE L'AFFECTATION
C   INO    : NUMERO DU NOEUD OU EST EFFECTUEE L'AFFECTATION
C   FORIMP : INDICATEUR DE PRESENCE OU ABSENCE DE FORCE SUR CHAQUE DDL
C   VALFOR : VALEURS AFFECTEES SUR CHAQUE DDL (FONREE = 'REEL')
C   VALFOF : VALEURS AFFECTEES SUR CHAQUE DDL (FONREE = 'FONC')
C   MOTCLE : TABLEAU DES NOMS DES DDLS DANS FORCE_NODALE
C   VERIF  : BOOLEEN ( TRUE ---> VERIFICATION SI LE DDL AFFECTE
C                                EST PRESENT SUR LE NOEUD
C                      FALSE --> ON PASSE ET ON INCREMENTE LA SURCHARGE)
C   NBEC   : NOMBRE D'ENTIERS CODES REPRESENTANT LA GRANDEUR
C
C ARGUMENTS D'ENTREE MODIFIES:
C
C      VALR  : VALEURS DES DDLS DE FORCES  (FONREE = 'REEL')
C      VALK  : VALEURS DES DDLS DE FORCES  (FONREE = 'FONC')
C      DESC  : TABLEAU CONTENANT LE DESCRIPTEUR DES AFFECTATIONS
C              (CODES A PARTIR DU PREMIER BIT)
C     NSURCH : COMPTEUR DU NOMBRE DE SURCHARGES DANS FORCE_NODALE
C
C
C****************************************************************
      INDIGD = 0
      DO 10 IEC = 1, NBEC
        IF (PRNM(IEC).NE.0)  THEN
          INDIGD = 1
          GO TO 20
        ENDIF
  10  CONTINUE
      IF (INDIGD.EQ.0) GOTO 9999
  20  CONTINUE
      NSURC0 = NSURCH
      DO 30 J = 1, NBCOMP
         IF(FORIMP(J).NE.0) THEN
           IF(IAND(DESC,2**(J-1)).EQ.0) THEN
C  VERIFICATION SUR LES 6 PREMIERS DDL : FX FY FZ MX MY MZ
             IF (.NOT.EXISDG(PRNM,J).AND.J.LE.6) THEN
               IF (.NOT.VERIF) THEN
                  IF(NSURC0.EQ.NSURCH) NSURCH = NSURCH + 1
               ELSE
                  CALL UTDEBM('F','AFFONO','LE DDL')
                  CALL UTIMPK('S',' ',1,MOTCLE(J))
                  CALL UTIMPK('S','EST INTERDIT POUR LE NOEUD',1,NOMN)
                  CALL UTFINM()
               ENDIF
             ELSE
               DESC = IOR(DESC,2**(J-1))
             ENDIF
           ELSE
             IF(NSURC0.EQ.NSURCH) NSURCH = NSURCH + 1
          CALL UTDEBM('I','AFFONO','AFFECTATION DEJA EFFECTUEE DU DDL')
             CALL UTIMPK('S',' ',1,MOTCLE(J))
             CALL UTIMPK('S','DU NOEUD',1,NOMN)
             CALL UTIMPK('S',' ',1,'ON APPLIQUE LA REGLE DE SURCHARGE')
             CALL UTFINM()
           END IF
           IF(FONREE.EQ.'REEL') THEN
             VALR(NBCOMP*(INO-1)+J) = VALFOR(J)
           ELSE IF(FONREE.EQ.'FONC') THEN
             VALK(NBCOMP*(INO-1)+J) = VALFOF(J)
           ENDIF
         END IF
 30   CONTINUE
C
 9999 CONTINUE
      END
