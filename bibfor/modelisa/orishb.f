      SUBROUTINE ORISHB(NOMA)
      IMPLICIT   NONE
      CHARACTER*8 NOMA
C.======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 29/09/2003   AUTEUR JMBHH01 J.M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================

C     ORISHB  --  LE BUT EST DE REORIENTER, SI C'EST NECESSAIRE,
C                 LES MAILLES DU GROUPES DE MAILLES DONNES POUR
C                 QUE LES ELEMETNS SHB8 FONCTIONNENT
C      ETAPE 1 : LA FACE DU BAS (1234) DOIT AVOIR UNE NORMALE
C                TOURNEE VERS L'INTÈRIEUR



C   ARGUMENT        E/S  TYPE         ROLE
C    NOMA         IN/OUT   K*      NOM DU MAILLAGE

C.========================= DEBUT DES DECLARATIONS ====================
C ----- COMMUNS NORMALISES  JEVEUX
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXNOM
C -----  VARIABLES LOCALES
      INTEGER IOCC,NG,JJJ,NGR,IGR,NIV,IFM,IMA,NUMA,INO,JGRO,JDES,NBMAIL,
     &        NBNO,NUTYMA,IDTYMA,JCOOR,NUNO(8)
      REAL*8 COOR(24),PS
      CHARACTER*8 K8B,GMAT,TYPEL
      CHARACTER*16 MOTFAC
      CHARACTER*24 GRMAMA,CONNEX

C.========================= DEBUT DU CODE EXECUTABLE ==================

      CALL JEMARQ()
      CALL INFNIV(IFM,NIV)

      GRMAMA = NOMA//'.GROUPEMA'
      CONNEX = NOMA//'.CONNEX'
      CALL JEVEUO(NOMA//'.TYPMAIL','L',IDTYMA)
      CALL JEVEUO(NOMA//'.COORDO    .VALE','L',JCOOR)
      MOTFAC='ORIE_SHB8'
      IOCC=1
      CALL GETVEM(NOMA,'GROUP_MA',MOTFAC,'GROUP_MA',IOCC,1,0,K8B,NG)
      IF (NG.NE.0) THEN
        NG = -NG
        CALL WKVECT('&&ORISHB.WORK','V V K8',NG,JJJ)
        CALL GETVEM(NOMA,'GROUP_MA',MOTFAC,'GROUP_MA',IOCC,1,NG,
     &              ZK8(JJJ),NGR)

C      POUR CHAQUE GROUPE DE MAILLES     
        DO 30 IGR = 1,NGR
        
          GMAT = ZK8(JJJ+IGR-1)

          CALL JELIRA(JEXNOM(GRMAMA,GMAT),'LONMAX',NBMAIL,K8B)
          CALL JEVEUO(JEXNOM(GRMAMA,GMAT),'L',JGRO)
          
C      POUR CHAQUE MAILLE DU GROUPE
  
          DO 20 IMA = 1,NBMAIL
            NUMA = ZI(JGRO-1+IMA)
            NUTYMA = ZI(IDTYMA+NUMA-1)
            CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',NUTYMA),TYPEL)

            IF (TYPEL(1:5).EQ.'HEXA8') THEN
            
              CALL JELIRA(JEXNUM(CONNEX,NUMA),'LONMAX',NBNO,K8B)
              
C RECUP DES COORDONNES DES NOEUDS DE LA MAILLE
              CALL PACOOR(NOMA,NUMA,NBNO,COOR)
              
              CALL ORISH8(COOR,PS)

C RENUMEROTATION SEULEMENT SI PS < 0
              
              IF (PS.LT.0.D0) THEN
              
                CALL JEVEUO(JEXNUM(CONNEX,NUMA),'E',JDES)
                
                DO 10 INO = 1,NBNO
                  NUNO(INO) = ZI(JDES+INO-1)
   10           CONTINUE
   
C RENUMERATION ELEMENT 1234 DEVIENT 1432 ET 5678 DEVIENT 5876

                ZI(JDES+1-1) = NUNO(1)
                ZI(JDES+2-1) = NUNO(4)
                ZI(JDES+3-1) = NUNO(3)
                ZI(JDES+4-1) = NUNO(2)
                ZI(JDES+5-1) = NUNO(5)
                ZI(JDES+6-1) = NUNO(8)
                ZI(JDES+7-1) = NUNO(7)
                ZI(JDES+8-1) = NUNO(6)

              END IF
            END IF

   20     CONTINUE
   30   CONTINUE
      END IF

      CALL JEDEMA()
      END
