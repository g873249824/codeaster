      SUBROUTINE XMACON(CHAR  ,NOMA  ,NOMO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 06/10/2009   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8  CHAR
      CHARACTER*8  NOMA
      CHARACTER*8  NOMO
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE XFEM - LECTURE DONNEES)
C CREATION DES SDS SPECIFIQUES FORMULATION XFEM
C
C ----------------------------------------------------------------------
C ROUTINE SPECIFIQUE A L'APPROCHE <<GRANDS GLISSEMENTS AVEC XFEM>>,
C TRAVAIL EFFECTUE EN COLLABORATION AVEC I.F.P.
C ----------------------------------------------------------------------
C
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  NOMA   : NOM DU MAILLAGE
C IN  NOMO   : NOM DU MODELE
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)      
      CHARACTER*32 JEXNUM,JEXATR
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER NDIM,JMA,ITYPMA
      INTEGER CFMMVD,ZMESX,ZTABF,NINTER,PINT,NZONE
      INTEGER JMAESC,JTABF,NTMAE,NBMA,NBMZ
      INTEGER JCESD2,JCESV2,JCESL2
      INTEGER JLSN,JCESD3,JCESV3,JCESL3,JCONX1,JCONX2
      INTEGER JZOFI,JDIMC,JCESD,JCESL,JCESV,JCESC
      INTEGER IZONE,IMAE,IMA,NBPC,NNO,NTPC,IRET,IAD
      INTEGER IAD1,IAD2,IAD3,NNGL,INO,NFACE
      REAL*8  LSN 
      CHARACTER*8  NOMFIS,NOMZON,K8BID,TYPMA,ELREF
      CHARACTER*24 MAESCL,TABFIN
      CHARACTER*19 CHS1,CHS2,CHS3,FACLON,AINTER
      CHARACTER*19 CARSD,CARTE,MAI
      LOGICAL  PINTNO,ESCLAV,MAITRE,MALIN,ISMALI
      INTEGER  JCMCF,ZCMCF,TYPINT,NNINT
      INTEGER  ZXAIN,XXMMVD
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C 
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C
      MAESCL = CHAR(1:8)//'.CONTACT.MAESCL'
      TABFIN = CHAR(1:8)//'.CONTACT.TABFIN'
C     
      CALL JEVEUO(CHAR(1:8)//'.CONTACT.CARACF','L',JCMCF)
C
      ZMESX  = CFMMVD('ZMESX')
      ZTABF  = CFMMVD('ZTABF')
      ZCMCF  = CFMMVD('ZCMCF')
      ZXAIN  = XXMMVD('ZXAIN')
C
      CHS1 = '&&XMACON.CHS1'
      CHS2 = '&&XMACON.CHS2'     
      CHS3 = '&&XMACON.CHS3'         
C
C --- ON RECUPERE LE NOMBRE TOTAL DE MAILLES DU MAILLAGE ET SA DIMENSION
C
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8BID,IRET)
      CALL DISMOI('F','DIM_GEOM',NOMA,'MAILLAGE',NDIM,K8BID,IRET)

C --- SI ON N'EST PAS EN 2D, ON SORT
C      IF (NDIM.EQ.3) CALL U2MESS('F','XFEM_26')
C
C --- ON RECUPERE LE NOMBRE DE ZONES DE CONTACT
C
      CALL JEVEUO(CHAR(1:8)//'.CONTACT.NDIMCO','L',JDIMC)
      NZONE=ZI(JDIMC+1)
C
C --- ON RECUPERE LE MAPPING ZONE CONTACT - NOM FISSURE
C
      CALL JEVEUO(CHAR(1:8)//'.CONTACT.XFIMAI','L',JZOFI)
C
C --- ON RECUPERE LE MAPPING MAILLE XFEM - NOM FISSURE 
C --- DONT ELLE APPARTIENT
C
      CARTE = NOMO(1:8)//'.XMAFIS'
      CARSD = '&&XMACON.MAFI'
      CALL CARCES ( CARTE, 'ELEM', ' ', 'V', CARSD, IRET )
      CALL JEVEUO(CARSD//'.CESC','L',JCESC)
      CALL JEVEUO(CARSD//'.CESD','L',JCESD)
      CALL JEVEUO(CARSD//'.CESL','L',JCESL)
      CALL JEVEUO(CARSD//'.CESV','L',JCESV)
C
C --- ON RECUPERE LA CONNECTIVITE DU MAILLAGE
C
      CALL JEVEUO(NOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA//'.CONNEX','LONCUM'),'L',JCONX2)

      MAI=NOMA//'.TYPMAIL'
      CALL JEVEUO(MAI,'L',JMA)
C     
C --- ON TRANSFORME LE CHAMP LSN EN CHAMP SIMPLE
C
      CALL CNOCNS(NOMO//'.LNNO','V',CHS1)
      CALL JEVEUO(CHS1//'.CNSV','L',JLSN)
C 
C --- NOMBRE TOTAL DES MAILLES ESCLAVES DE CONTACT.
C
      NTMAE = 0 
      FACLON = NOMO//'.TOPOFAC.LO'       
      CALL CELCES(FACLON,'V',CHS2)
      CALL JEVEUO(CHS2//'.CESD','L',JCESD2)
      CALL JEVEUO(CHS2//'.CESV','L',JCESV2)
      CALL JEVEUO(CHS2//'.CESL','L',JCESL2)
C
      DO 110 IMA = 1,NBMA
        CALL CESEXI('C',JCESD2,JCESL2,IMA,1,1,1,IAD)
        IF (IAD.GT.0) THEN
          IF (ZI(JCESV2-1+IAD).GT.0) THEN
            NTMAE = NTMAE + 1
          ENDIF
        ENDIF
 110  CONTINUE
C
C --- CREATION DU TABLEAU DES MAILLES ESCLAVES MAESC
C
      CALL WKVECT(MAESCL,'G V I',ZMESX*NTMAE+1,JMAESC)
C
C --- REMPLISSAGE DU TABLEAU DES MAILLES ESCLAVES MAESC
C
      AINTER = NOMO//'.TOPOFAC.AI' 
      CALL CELCES(AINTER,'V',CHS3)
      CALL JEVEUO(CHS3//'.CESD','L',JCESD3)
      CALL JEVEUO(CHS3//'.CESV','L',JCESV3)
      CALL JEVEUO(CHS3//'.CESL','L',JCESL3)
C
      ZI(JMAESC) = 0
      NTMAE = 0
      NTPC = 0
C
      DO 200 IZONE = 1,NZONE
        NBMZ   = 0
        NOMZON = ZK8(JZOFI-1+IZONE)
        DO 210 IMA = 1,NBMA
          CALL CESEXI('C',JCESD2,JCESL2,IMA,1,1,1,IAD)
          IF (IAD.GT.0)  THEN
             NINTER = ZI(JCESV2-1+IAD)
             IF (NINTER.GT.1) THEN
               CALL CESEXI('C',JCESD,JCESL,IMA,1,1,1,IAD1)
               IF (IAD1.GT.0) NOMFIS  = ZK8(JCESV-1+IAD1)
               IF (NOMZON.NE.NOMFIS) GO TO 210
               NBMZ = NBMZ+1
               ZI(JMAESC+ZMESX*(NTMAE+NBMZ-1)+1)= IMA
               ZI(JMAESC+ZMESX*(NTMAE+NBMZ-1)+2)= IZONE
C 
C --- ON RECUPERE LE TYPE DE LA MAILLE                  
C --- ON VERIFIE QUE LE MAILLAGE NE CONTIENT QUE DES ELEMENTS LIN EN 3D
C
               ITYPMA=ZI(JMA-1+IMA)
               CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ITYPMA),TYPMA)
               IF (NDIM.EQ.3) THEN
                 ELREF = 'TR3'
                 MALIN = ISMALI(TYPMA)
                 IF (.NOT.MALIN) CALL U2MESS('F','XFEM_27')
               ELSEIF (NDIM.EQ.2) THEN
                  ELREF = 'SE2'
               ENDIF
C              
C --- ON RECUPERE LE TYPE DE SCHEMAS D'INTEGRATION               
               TYPINT = NINT(ZR(JCMCF+ZCMCF*(IZONE-1)+1))
C --- ON RECUPERE LE NOMBRE DE POINTS D'INTEGRATION
               CALL XMELIN(ELREF,TYPINT,NNINT)
C --- ON RECUPERE LE NOMBRE DE FACETTES DE CONTACT
               CALL CESEXI('C',JCESD2,JCESL2,IMA,1,1,2,IAD2)
               NFACE = ZI(JCESV2-1+IAD2)

C --- PINTNO EST VRAI SI TOUT LES POINTS D'INTERSECTIONS DE LA MAILLE
C --- SONT SUR DES NOEUDS, IL EST ALORS POSSIBLE QUE LA FISSURE COUPE
C --- CONFORMEMENT LES MAILLES.
               PINTNO=.TRUE.
               DO 211 PINT = 1,NINTER
                 CALL CESEXI('S',JCESD3,JCESL3,IMA,
     &                      1,1,ZXAIN*(PINT-1)+1,IAD3)
                 CALL ASSERT(IAD3.GT.0)
                 IF (ZR(JCESV3-1+IAD3).GT.0) THEN
                   PINTNO=.FALSE.
                 ENDIF
211            CONTINUE
C --- SI TOUT LES PTS D'INTERS SONT SUR DES NOEUDS
C --- ON REGARDE SI LE STATUT DE LA MAILLE EN COURS EST 
C --- NORMAL, EXCLUSIVEMENT MAÎTRE OU EXCLUSIVEMENT ESCLAVE
               IF (PINTNO) THEN
                 ESCLAV = .FALSE.
                 MAITRE = .FALSE.
C --- ON RECUPERE LE NOMBRE DE NOEUDS DE LA MAILLE
                 CALL JELIRA(JEXNUM(NOMA//'.CONNEX',IMA),
     &                   'LONMAX',NNO,K8BID)
                 IF ((TYPMA.EQ.'TRIA6').OR.(TYPMA.EQ.'QUAD8')) NNO=NNO/2
                 DO 212 INO=1,NNO
C --- ON VERIFIE QUE LE NOEUD N'EST PAS INTERSECTÉ
                   DO 213 PINT = 1,NINTER
                     CALL CESEXI('S',JCESD3,JCESL3,IMA,
     &                      1,1,ZXAIN*(PINT-1)+2,IAD3)
                     CALL ASSERT(IAD3.GT.0)
                     IF (ZR(JCESV3-1+IAD3).EQ.INO) GOTO 212
213                CONTINUE
                   NNGL=ZI(JCONX1-1+ZI(JCONX2+IMA-1)+INO-1)
                   LSN = ZR(JLSN-1+NNGL)
                   IF (LSN.LT.0) THEN
C --- AU MOINS UN NOEUD NON INTERS EST DU COTE ESCLAVE (LSN <0)
                     ESCLAV = .TRUE.
                   ELSEIF (LSN.GT.0) THEN
C --- AU MOINS UN NOEUD NON INTERS EST DU COTE MAITRE (LSN >0)
                     MAITRE = .TRUE.
                   ENDIF
 212             CONTINUE                  
                 IF (ESCLAV) THEN
                   IF (MAITRE) THEN
C --- C'EST UNE MAILLE ESCLAVE NORMALE (DÉCOUPAGE NON CONFORME)
                     ZI(JMAESC+ZMESX*(NTMAE+NBMZ-1)+4)=0
                   ELSE
C --- C'EST UNE MAILLE EXCLUSIVEMENT ESCLAVE
                     ZI(JMAESC+ZMESX*(NTMAE+NBMZ-1)+4)=-1
                   ENDIF
                   ZI(JMAESC+ZMESX*(NTMAE+NBMZ-1)+3)=NNINT
                   NTPC = NTPC + NNINT*NFACE
                 ELSE
C --- C'EST UNE MAILLE EXCLUSIVEMENT MAÎTRE              
                   ZI(JMAESC+ZMESX*(NTMAE+NBMZ-1)+4)=1
                   ZI(JMAESC+ZMESX*(NTMAE+NBMZ-1)+3)=0
                 ENDIF
               ELSEIF (.NOT.PINTNO) THEN
                 ZI(JMAESC+ZMESX*(NTMAE+NBMZ-1)+4)=0
                 ZI(JMAESC+ZMESX*(NTMAE+NBMZ-1)+3)=NNINT
                 NTPC = NTPC + NNINT*NFACE
               ENDIF
             ENDIF
          ENDIF
 210    CONTINUE
        NTMAE = NTMAE + NBMZ
 200  CONTINUE      

      ZI(JMAESC) = NTMAE
C
C --- CREATION DE TABLEAU TABFIN 
C
      CALL WKVECT(TABFIN,'G V R',ZTABF*NTPC+1,JTABF)
C
C --- MENAGE
C
      CALL DETRSD('CHAM_ELEM_S',CHS1)
      CALL DETRSD('CHAM_ELEM_S',CHS2)
      CALL DETRSD('CHAM_ELEM_S',CHS3)
C
      CALL JEDEMA()
      END
