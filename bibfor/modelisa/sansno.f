      SUBROUTINE SANSNO(CHAR  ,MOTFAC,NOMA  ,SANS  ,PSANS ,
     &                  NBMOCL,TYMOCL,LIMOCL)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C REPONSABLE
C
      IMPLICIT      NONE
      INCLUDE 'jeveux.h'
      CHARACTER*8   CHAR
      CHARACTER*16  MOTFAC
      CHARACTER*24  SANS,PSANS
      CHARACTER*8   NOMA
      INTEGER       NBMOCL
      CHARACTER*16  TYMOCL(NBMOCL),LIMOCL(NBMOCL)
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES MAILLEES - LECTURE DONNEES)
C
C LECTURE DES NOEUDS DANS LE MOT-CLEF <MOTGR/MOT> ET STOCKE DANS LA
C SD NOMSD
C
C ----------------------------------------------------------------------
C
C
C NB: ON ELIMINE LES NOEUDS N'APPARTENANT PAS AUX SURFACES DE CONTACT
C
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  MOTFAC : MOT-CLE FACTEUR (VALANT 'CONTACT')
C IN  NOMA   : NOM DU MAILLAGE
C IN  NBMOCL : NOMBRE DE MOT-CLEFS A SCRUTER
C IN  LIMOCL : LISTE DES MOTS CLE A SCRUTER
C IN  TYMOCL : LISTE DES TYPES DE MOTS CLE A SCRUTER :
C               / 'GROUP_MA'
C               / 'GROUP_NO'
C               / 'MAILLE'
C               / 'NOEUD'
C OUT SANS   : LISTE DES NOEUDS LUS DANS LES MOT-CLEFS
C OUT PSANS  : POINTEUR PAR ZONE DES NOEUDS LUS DANS LES MOT-CLEFS
C
C
C
C
      CHARACTER*24 CONTNO,PZONE
      INTEGER      JNOCO,JZONE
      INTEGER      JPSANS,JSANS
      INTEGER      STOCNO
      INTEGER      I,NBNO
      INTEGER      IZONE,INO,ISURF
      INTEGER      JDECNO,POSNO,NUMNO
      INTEGER      NBELIM,NUELIM,IELIM,NBVELI
      INTEGER      JTRAV,LTRAV
      CHARACTER*24 LISTNO
      INTEGER      JELIM
      CHARACTER*24 DEFICO
      INTEGER      CFDISI,NZOCO,NNOCO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      DEFICO = CHAR(1:8)//'.CONTACT'
      NZOCO  = CFDISI(DEFICO,'NZOCO')
      NNOCO  = CFDISI(DEFICO,'NNOCO')
      LISTNO = '&&SANSNO.SANSNO'
C
C --- ACCES AUX STRUCTURES DE DONNEES DE CONTACT
C
      PZONE  = DEFICO(1:16)//'.PZONECO'
      CONTNO = DEFICO(1:16)//'.NOEUCO'
C
      CALL JEVEUO(PZONE, 'L',JZONE)
      CALL JEVEUO(CONTNO,'L',JNOCO)
C
C --- CREATION DES VECTEURS
C
      LTRAV  = NZOCO*NNOCO
      CALL WKVECT('&&SANSNO.TRAV','V V I',LTRAV,JTRAV)
      CALL WKVECT(PSANS ,'G V I',NZOCO+1,JPSANS)
C
C --- INITIALISATIONS
C
      ZI(JPSANS) = 0
      STOCNO     = 0
C
      DO 70 IZONE = 1,NZOCO
C
C --- LECTURE DES NOEUDS DONNES SOUS SANS_*
C
        CALL RELIEM(' '   ,NOMA  ,'NU_NOEUD',MOTFAC,IZONE ,
     &              NBMOCL,LIMOCL,TYMOCL    ,LISTNO,NBELIM)
C
C --- NOMBRE DE NOEUDS A ELIMINER POUR LA ZONE
C
        IF (NBELIM.NE.0) THEN
          CALL JEVEUO(LISTNO,'L',JELIM)
        ENDIF
C
C --- VERIF SI NOEUD APPARTIENT A SURFACE DE CONTACT
C
        NBVELI = 0
        DO 50 IELIM = 1, NBELIM
          NUELIM = ZI(JELIM+IELIM-1)
          CALL CFZONE(DEFICO,IZONE ,'ESCL',ISURF )
          CALL CFNBSF(DEFICO,ISURF ,'NOEU',NBNO  ,JDECNO)
          DO 40 INO = 1,NBNO
            POSNO  = JDECNO+INO
            NUMNO  = ZI(JNOCO+POSNO-1)
            IF (NUMNO .EQ.NUELIM) THEN
              NBVELI = NBVELI + 1
              ZI(JTRAV+STOCNO-1+NBVELI) = NUELIM
              GOTO 50
            ENDIF
   40     CONTINUE
   50   CONTINUE
C
C --- MISE A JOUR POINTEUR
C
        STOCNO = STOCNO + NBVELI
        IF (STOCNO.GT.LTRAV) CALL ASSERT(.FALSE.)
        ZI(JPSANS+IZONE) = ZI(JPSANS+IZONE-1) + NBVELI
C
  70  CONTINUE
C
C --- CREATION DU VECTEUR
C
      IF (STOCNO.EQ.0) THEN
        CALL WKVECT(SANS,'G V I',1     ,JSANS)
      ELSE
        CALL WKVECT(SANS,'G V I',STOCNO,JSANS)
C
C --- TRANSFERT DU VECTEUR
C
        DO 170 I = 1,STOCNO
          IF (ZI(JTRAV+I-1).NE.0) THEN
            ZI(JSANS-1+I) = ZI(JTRAV-1+I)
          ENDIF
  170   CONTINUE
      ENDIF
C
C --- DESTRUCTION DES VECTEURS DE TRAVAIL TEMPORAIRES
C
      CALL JEDETR(LISTNO)
      CALL JEDETR('&&SANSNO.TRAV')
C
      CALL JEDEMA()
      END
