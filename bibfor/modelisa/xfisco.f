      SUBROUTINE XFISCO(NOMA  ,MODELX)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 21/12/2010   AUTEUR MASSIN P.MASSIN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE MASSIN P.MASSIN
      IMPLICIT NONE
      CHARACTER*8   NOMA, MODELX

C CREATION D'UN CHAMP ÉLÉMENTAIRE DE CONNECTIVITÉ DES FISSURES BRANCHÉES

C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER     JNBSP,JCESD,JCESV,JCESL,IBID,IRET,NNCP
      INTEGER     JCESD2,JCESV2,JCESL2,JJONF,JJONC,IAD,IAD3
      INTEGER     IMA,NBMA,IFISS,IFIS2,IFIS3,NFISS,NFIS2
      CHARACTER*19  CES,CES2,LIGREL,CHGLO
      CHARACTER*8   NOMFIS,NOMFI3,LICMP(2),KBID,VALK(3)
C     ------------------------------------------------------------------

      CALL JEMARQ()
C
C --- RECUPERATION DU NOMBRE DE SOUS POINT (NBRE DE FISSURES VUES)
C
      CALL JEVEUO('&&XTYELE.NBSP','L',JNBSP)
C
C --- CONSTRUCTION DU CHAMP SIMPLE TEMPORAIRE
C
      CES = '&&XFISCO.CES'
      LICMP(1) = 'X1'
      LICMP(2) = 'X2'

      CALL CESCRE('V',CES,'ELEM',NOMA,'NEUT_I',2,LICMP,
     &              IBID,ZI(JNBSP),-2)
      CALL JEVEUO(CES//'.CESD','L',JCESD)
      CALL JEVEUO(CES//'.CESV','E',JCESV)
      CALL JEVEUO(CES//'.CESL','E',JCESL)
C
C --- RECUPERATION DU CHAMP ELEM S CONTENANT LE NOM DES FISSURES VUES
C
      CES2 = '&&XCONNO.CES2'
      CALL JEVEUO(CES2//'.CESD','L',JCESD2)
      CALL JEVEUO(CES2//'.CESV','E',JCESV2)
      CALL JEVEUO(CES2//'.CESL','E',JCESL2)
C
C --- RECUPERATION NOMBRE DE MAILLES
C
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,KBID,IRET)
C
C --- BOUCLE SUR LES MAILLES
C
      DO 100 IMA = 1, NBMA
        NFISS = ZI(JNBSP-1+IMA)
C
C --- BOUCLE SUR LES FISSURE DE LA MAILLE
C
        DO 110 IFISS = 1, NFISS
          CALL CESEXI('S',JCESD2,JCESL2,IMA,1,IFISS,1,IAD)
          CALL ASSERT(IAD.GT.0)
          NOMFIS = ZK8(JCESV2-1+IAD)
          CALL JEEXIN(NOMFIS//'.JONFISS',IRET)
          IF (IRET.NE.0) THEN
            CALL JEVEUO(NOMFIS//'.JONFISS','L',JJONF)
            CALL JEVEUO(NOMFIS//'.JONCOEF','L',JJONC)
            CALL JELIRA(NOMFIS//'.JONFISS','LONMAX',NFIS2,KBID)
C
C --- BOUCLE SUR LES FISSURES DE LA MAILLE IFIS3, AUTRE QUE IFISS
C
            DO 130 IFIS3=1,NFISS
              IF (IFIS3.EQ.IFISS) GOTO 130
C
C --- RECUPERATION DU NOM GLOBALE  NOMFI3 DE IFIS3
C
              CALL CESEXI('S',JCESD2,JCESL2,IMA,1,IFIS3,1,IAD)
              NOMFI3 = ZK8(JCESV2-1+IAD)
C
C --- ON REGARDE SI LA FISSURE NOMFI3 EST CONNECTÉ À NOMFIS
C
              DO 120 IFIS2=1,NFIS2
                IF (ZK8(JJONF-1+IFIS2).EQ.NOMFI3) THEN
                  IF (IFIS3.GT.IFISS) THEN
                    VALK(1) = NOMFIS
                    VALK(2) = NOMFI3
                    CALL U2MESK('F','XFEM_46', 2 ,VALK)
                  ENDIF
                  CALL CESEXI('S',JCESD,JCESL,IMA,1,IFISS,1,IAD)
                  IF (IAD.GT.0) THEN
                    CALL CESEXI('S',JCESD,JCESL,IMA,1,IFIS3,1,IAD3)
                    IF (ZI(JCESV-1+IAD).EQ.ZI(JCESV-1+IAD3)) THEN
                      IAD = -IAD
                    ELSE
                      VALK(1) = NOMFIS
                      VALK(3) = NOMFI3
                      CALL U2MESK('F','XFEM_47', 3 ,VALK)
                    ENDIF
                  ENDIF
                  VALK(2) = NOMFI3
                  ZL(JCESL-1-IAD) = .TRUE.
                  ZI(JCESV-1-IAD) = IFIS3
                  CALL CESEXI('S',JCESD,JCESL,IMA,1,IFISS,2,IAD)
                  IF (IAD.GT.0) IAD = -IAD
                  ZL(JCESL-1-IAD) = .TRUE.
                  ZI(JCESV-1-IAD) = ZI(JJONC-1+IFIS2)
                ENDIF
 120          CONTINUE
 130        CONTINUE
          ENDIF
C
C --- SI ON A RIEN TROUVER
C
          CALL CESEXI('S',JCESD,JCESL,IMA,1,IFISS,1,IAD)
          IF (IAD.LT.0) THEN
            ZL(JCESL-1-IAD) = .TRUE.
            ZI(JCESV-1-IAD) = 0
            CALL CESEXI('S',JCESD,JCESL,IMA,1,IFISS,2,IAD)
            CALL ASSERT(IAD.LT.0)
            ZL(JCESL-1-IAD) = .TRUE.
            ZI(JCESV-1-IAD) = 0
          ENDIF
 110    CONTINUE

 100  CONTINUE
C
C --- CONVERSION CHAM_ELEM_S -> CHAM_ELEM
C
      CHGLO = MODELX(1:8)//'.FISSCO'
      LIGREL = MODELX(1:8)//'.MODELE'
      CALL CESCEL(CES,LIGREL,'TOPOSE','PFISCO','OUI',NNCP,'V',CHGLO,'F',
     &            IBID)
      CALL DETRSD('CHAM_ELEM_S',CES)

      CALL JEDEMA()
      END
