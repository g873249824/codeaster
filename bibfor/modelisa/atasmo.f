      SUBROUTINE ATASMO(NEQ,AZ,APDDL,APPTR,NUMEDZ,ATAZ,BASEZ,NBLIA,NMUL,
     &                  NUMATZ)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_4
      IMPLICIT NONE

C     ATASMO  --  LE BUT DE CETTE ROUTINE EST DE CREER LA MATR_ASSE
C                 DE NOM ATA.
C                 LE .VALM DE CETTE MATR_ASSE VA CONTENIR LES TERMES
C                 DU PRODUIT DE MATRICES AT*A.
C                 A EST 'CONCEPTUELLEMENT' UNE MATRICE RECTANGLE
C                 DE 'HAUTEUR' NBLIG ET DE LARGEUR NEQ.
C                 A EST 'INFORMATIQUEMENT' UNE COLLECTION NUMEROTEE
C                 COMPORTANT NBLIG OBJETS QUI SONT DES VECTEURS DE REELS
C                 DE LONGUEUR NEQ.
C                 CHACUN DE CES VECTEURS EST UNE LIGNE DE LA MATRICE A.
C                 LA MATR_ASSE ATA VA DONC ETRE SYMETRIQUE ET A
C                 VALMURS REELLES. D'AUTRE PART ON VA LUI AFFECTER
C                 UN PROFIL MORSE.

C   ARGUMENT        E/S  TYPE         ROLE
C    AZ              IN    K*     NOM DE LA COLLECTION DES VECTEURS
C                                 LIGNES (I.E. AZ EST LA MATRICE
C                                 RECTANGULAIRE POUR LAQUELLE ON VA
C                                 CALCULER LE PRODUIT AZ_T*AZ).
C    NUMEDZ         IN    K*      NOM DU NUME_DDL DECRIVANT LES
C                                 LIGNES DE LA MATRICE AZ
C    BASEZ           IN    K*     NOM DE LA BASE SUR LAQUELLE ON
C                                 CREE LA MATR_ASSE.
C    ATAZ           OUT    K*     NOM DE LA MATR_ASSE SYMETRIQUE
C                                 A VALMURS REELLES DONT LE .VALM
C                                 CONTIENT LE PRODUIT AT*A.
C                                 LE PROFIL DE CETTE MATRICE EST
C                                 EN LIGNE DE CIEL.
C                                 CE PROFIL EST DETERMINE DANS LA
C                                 ROUTINE.
C    NUMATZ         OUT    K*     NOM DU NUME_DDL A CREER POUR ATAZ
C                                 ON LE DETRUIT S'Il EXISTE DEJA
C.========================= DEBUT DES DECLARATIONS ====================
      INCLUDE 'jeveux.h'
      CHARACTER*8 MA
C -----  ARGUMENTS
      CHARACTER*(*) AZ,NUMEDZ,ATAZ,BASEZ,NUMATZ
      INTEGER       NEQ,NBLIA,NMUL
      INTEGER       APDDL(*),APPTR(*)
C -----  VARIABLES LOCALES
      INTEGER J,K,IIMAX,JHBID,IDSUIV,DIMACV,JACNBT,JCONL,NBLIG,NBLIG2
      INTEGER JAC1ER,ILIG,IDLIGM,NDDLT,JACV,JACI,IILIB,IDLM,IDDL
      INTEGER IEQ,JSMHC,JSMDI,NCOEF,JVALM,DECAL,IER,JREFA
      INTEGER I,JSMDE,IBID,II1,II2,III,II,JJ,JDECAL,NDDLTM,KDEB
      CHARACTER*1 K1BID,BASE
      CHARACTER*14 NUMDDL,NUMEDD
      CHARACTER*19 ATA
      CHARACTER*24 KSMHC,KSMDI,KREFA,KCONL,KVALM
      CHARACTER*24 A,KSUIV,KHBID
      REAL*8 UN,VI,VJ,VIJ

C ========================= DEBUT DU CODE EXECUTABLE ==================
      CALL JEMARQ()


C --- 1. INITIALISATIONS :
C     ---------------------
      BASE = BASEZ
      A = AZ
      ATA = ATAZ
      NUMEDD = NUMEDZ
      NBLIG = NBLIA*NMUL
      NUMDDL = NUMATZ
      CALL DETRSD('MATR_ASSE',ATA)
      CALL DETRSD('NUME_DDL',NUMDDL)
      CALL COPISD('NUME_EQUA',BASE,NUMEDD//'.NUME',NUMDDL//'.NUME')
C     UNE DROLE DE GLUTE A RESORBER :
      CALL JEDUP1(NUMEDD//'.MLTF.RENU',BASE,NUMDDL//'.MLTF.RENU')
      CALL JEDUP1(NUMEDD//'.NSLV',BASE,NUMDDL//'.NSLV')

      UN = 1.0D0


      CALL JELIRA(A,'NMAXOC',NBLIG2,K1BID)
      CALL ASSERT(NBLIG.GT.0)
      CALL ASSERT(NBLIG.LE.NBLIG2)

      KSMDI = NUMDDL//'.SMOS.SMDI'
      CALL WKVECT(KSMDI,BASE//' V I',NEQ,JSMDI)


C     IIMAX   LONGUEUR MAXIMUM ADMISSIBLE DE KHBID ET ISUIV
C             DANS LA ROUTINE MOINSR IIMAX EST AUGMENTE SI NECESS.
C     KHBID   TABLE DES NUMEROS DE LIGNE
C     ISUIV   TABLE DES CHAINAGES DE LA STRUCTURE CHAINEE
C            (SMDI,SMHC,ISUIV) QUI EST CONTRUITE AVANT D'OBTENIR LA
C               STRUCTURE COMPACTE (SMDI,SMHC) DE LA MATRICE .
      KHBID = '&&ATASMO.SMOS.SMHC'
      KSUIV = '&&ATASMO.ANCIEN.ISUIV'
C     ON COMMENCE AVEC IIMAX=100
      IIMAX = 100
      CALL WKVECT(KHBID,'V V I',IIMAX,JHBID)
      CALL WKVECT(KSUIV,'V V I',IIMAX,IDSUIV)


C     2. CALCUL DE DIMACV
C        DIMACV= NOMBRE TOTAL DE TERMES NON NULS DANS A
C        -- ALLOCATION DE &&ATASMO.ACOMPAC_NBT
C        -- ALLOCATION DE &&ATASMO.ACOMPAC_1ER
C     ----------------------------------------------------------------
      DIMACV = 0
      CALL WKVECT('&&ATASMO.ACOMPAC_NBT','V V I',NBLIG,JACNBT)
      CALL WKVECT('&&ATASMO.ACOMPAC_1ER','V V I',NBLIG,JAC1ER)
      DO 20 J = 1,NMUL
        DO 10 ILIG = 1,NBLIA
          CALL JEVEUO(JEXNUM(A,ILIG+(J-1)*NBLIA),'L',IDLIGM)
          NDDLTM = APPTR(ILIG+1) - APPTR(ILIG)
          NDDLT = 0
          DO 15 I = 1,NDDLTM
            IF (ZR(IDLIGM-1+I).NE.0.D0) NDDLT = NDDLT + 1
   15     CONTINUE
C           CALL ASSERT(NDDLT.GT.0)
          ZI(JACNBT-1+ILIG+(J-1)*NBLIA) = NDDLT
          ZI(JAC1ER-1+ILIG+(J-1)*NBLIA) = DIMACV + 1
          DIMACV = DIMACV + NDDLT
          CALL JELIBE(JEXNUM(A,ILIG+(J-1)*NBLIA))
   10   CONTINUE
   20 CONTINUE
C       CALL ASSERT(DIMACV.GT.0)
      DIMACV = MAX(DIMACV,1)


C     3. COMPACTAGE DE A : ON NE CONSERVE QUE LES TERMES /= 0 AINSI
C        QUE LES INDICES CORRESPONDANT :
C     ----------------------------------------------------------------
      CALL WKVECT('&&ATASMO.ACOMPAC_I','V V I',DIMACV,JACI)
      CALL WKVECT('&&ATASMO.ACOMPAC_V','V V R',DIMACV,JACV)
      K = 0
      DO 40 J = 1,NMUL
        DO 30 ILIG = 1,NBLIA
          CALL JEVEUO(JEXNUM(A,ILIG+(J-1)*NBLIA),'L',IDLIGM)
          NDDLT = APPTR(ILIG+1) - APPTR(ILIG)
          JDECAL = APPTR(ILIG)
          KDEB = K
          DO 35,I = 1,NDDLT
            IF (ZR(IDLIGM-1+I).NE.0.D0) THEN
              K = K + 1
              ZI(JACI-1+K) = APDDL(JDECAL+I)
              ZR(JACV-1+K) = ZR(IDLIGM-1+I)
            ENDIF
   35     CONTINUE
C         ON DOIT TRIER LE TABLEAU DES NUMEROS D'EQUATIONS
C         CAR MOINSR S'ATTEND A UN TABLEAU ORDONNE
C         LE TABLEAU DES VALEURS EST AUSSI PERMUTE POUR
C         RESPECTER CE TRI
          CALL TRIR(ZI(JACI+KDEB),ZR(JACV+KDEB),1,K-KDEB)
          CALL JELIBE(JEXNUM(A,ILIG+(J-1)*NBLIA))
   30   CONTINUE
   40 CONTINUE


C     4. OBJETS DU NUME_DDL : .SMHC ET .SMDI :
C     ----------------------------------------
C     IILIB  : 1-ERE PLACE LIBRE
      IILIB = 1
      CALL WKVECT('&&ATASMO.LMBID','V V I',1,IDLM)

C     4.1 : ON FORCE LA PRESENCE DES TERMES DIAGONAUX:
      DO 50 IEQ = 1,NEQ
        ZI(IDLM) = IEQ
        CALL MOINSR(ZI(IDLM),1,IDLM,JSMDI,IDSUIV,KSUIV,JHBID,KHBID,
     &              IILIB,IIMAX)
   50 CONTINUE


C     4.2 : ON INSERE LES VRAIS TERMES :
      DO 70 ILIG = 1,NBLIG
C       NDDLT : NOMBRE DE TERMES NON NULS POUR ILIG
        NDDLT = ZI(JACNBT-1+ILIG)
        IDLM = JACI - 1 + ZI(JAC1ER-1+ILIG)

C       -- INSERTION DES COLONNES DE L'ELEMENT DANS
C           LA STRUCTURE CHAINEE
        DO 60 IDDL = 0,NDDLT - 1
          CALL MOINSR(ZI(IDLM+IDDL),IDDL+1,IDLM,JSMDI,IDSUIV,KSUIV,
     &                JHBID,KHBID,IILIB,IIMAX)
   60   CONTINUE
   70 CONTINUE


C     DESIMBRIQUATION DE CHAINES POUR OBTENIR LA STRUCTURE COMPACTE
C     (ZI(JSMDI),SMHC) DE LA MATRICE
      KSMHC = NUMDDL//'.SMOS.SMHC'
      CALL WKVECT(KSMHC,BASE//' V S',IIMAX,JSMHC)
      CALL MOINIP(NEQ,NCOEF,ZI(JSMDI),ZI(IDSUIV),ZI(JHBID),ZI4(JSMHC))


C     5. OBJET DU NUME_DDL :  .SMDE :
C     ----------------------------------------------------
      CALL WKVECT(NUMDDL//'.SMOS.SMDE',BASE//' V I',6,JSMDE)
      ZI(JSMDE+1-1) = NEQ
      ZI(JSMDE+2-1) = NCOEF
      ZI(JSMDE+3-1) = 1



C     6. OBJETS: MATR_ASSE.REFA ET MATR_ASSE.CONL:
C     --------------------------------------------------
      KREFA = ATA//'.REFA'
      CALL WKVECT(KREFA,BASE//' V K24',11,JREFA)
      CALL DISMOI('F','NOM_MAILLA',NUMEDD,'NUME_DDL',IBID,MA,IER)
      ZK24(JREFA-1+1) = MA
      ZK24(JREFA-1+2) = NUMDDL
      ZK24(JREFA-1+9) = 'MS'
      ZK24(JREFA-1+10) = 'NOEU'
      ZK24(JREFA-1+11) = 'MPI_COMPLET'
      KCONL = ATA//'.CONL'
      CALL WKVECT(KCONL,BASE//' V R',NEQ,JCONL)
      DO 90 I = 1,NEQ
        ZR(JCONL+I-1) = UN
   90 CONTINUE


C     7. OBJET: MATR_ASSE.VALM :
C     --------------------------------------------------
      KVALM = ATA//'.VALM'
      CALL JECREC(KVALM,BASE//' V R','NU','DISPERSE','CONSTANT',1)
      CALL JEECRA(KVALM,'LONMAX',NCOEF,' ')
      CALL JECROC(JEXNUM(KVALM,1))
      CALL JEVEUO(JEXNUM(KVALM,1),'E',JVALM)
      DO 140 ILIG = 1,NBLIG
C       NDDLT : NOMBRE DE TERMES NON NULS POUR ILIG
        NDDLT = ZI(JACNBT-1+ILIG)
        IDLM = JACI - 1 + ZI(JAC1ER-1+ILIG)
        DECAL = ZI(JAC1ER-1+ILIG)

C       -- CALCUL DE .VALM(II,JJ) :
        DO 130,J = 1,NDDLT
          VJ = ZR(JACV-1+DECAL-1+J)
          JJ = ZI(JACI-1+DECAL-1+J)
          CALL ASSERT(JJ.LE.NEQ)
          II2 = ZI(JSMDI-1+JJ)
          IF (JJ.EQ.1) THEN
            II1 = 1
          ELSE
            II1 = ZI(JSMDI-1+JJ-1) + 1
          END IF
          CALL ASSERT(II2.GE.II1)
          DO 120,I = 1,J
            VI = ZR(JACV-1+DECAL-1+I)
            II = ZI(JACI-1+DECAL-1+I)
            VIJ = VI*VJ
C           -- CUMUL DE VIJ DANS .VALM :
            DO 100,III = II1,II2
              IF (ZI4(JSMHC-1+III).EQ.II) GO TO 110
  100       CONTINUE
            CALL ASSERT(.FALSE.)
  110       CONTINUE
            ZR(JVALM-1+III) = ZR(JVALM-1+III) + VIJ
  120     CONTINUE
  130   CONTINUE
  140 CONTINUE


C     9. MENAGE :
C     ------------
      CALL JEDETR('&&ATASMO.SMOS.SMHC')
      CALL JEDETR('&&ATASMO.ANCIEN.ISUIV')
      CALL JEDETR('&&ATASMO.ACOMPAC_NBT')
      CALL JEDETR('&&ATASMO.ACOMPAC_1ER')
      CALL JEDETR('&&ATASMO.ACOMPAC_V')
      CALL JEDETR('&&ATASMO.ACOMPAC_I')
      CALL JEDETR('&&ATASMO.LMBID')

      CALL JEDEMA()
      END
