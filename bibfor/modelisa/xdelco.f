      SUBROUTINE XDELCO(NOMO ,FISS,LISREL,NREL  )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 08/12/2009   AUTEUR PROIX J-M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C
      IMPLICIT NONE
      INTEGER      NREL
      CHARACTER*8  NOMO,FISS
      CHARACTER*19 LISREL
C      
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (PREPARATION - AFFE_CHAR_MECA)
C
C SUPPRIMER LES DDLS DE CONTACT SUR LES MAILLES X-FEM PORTANT 
C DES DDLS DE CONTACT (VOIR  BOOK IV  18/08/04 ET 14/12/04)
C
C ----------------------------------------------------------------------
C
C
C IN  GRMA   : LISTE DES MAILLES "HEAV" ET "HECT"
C IN  NOMO   : NOM DE L'OBJET MODELE
C IN  FISS   : NOM DE LA FISSURE
C OUT LISREL : LISTE DES RELATIONS À IMPOSER
C OUT NREL   : NOMBRE DE RELATIONS À IMPOSER
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32 JEXNUM,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER     NBDDL
      PARAMETER  (NBDDL=3)
      CHARACTER*8 DDLC(NBDDL),K8B
C
      REAL*8  BETAR,RBID
      INTEGER JCESD1,JCESD2,JCESV1,JCESV2,JCESL1,JCESL2,IER,JTMDIM
      INTEGER JCESK1,JCONX1,JCONX2,IAD,JMA,ITYPMA,JSTANO,JTYPMA
      INTEGER I,IMA,INO,IA,IBID
      INTEGER NDIM,JDIME,NBMA,GROUP
      INTEGER NOMIL,N,IN,NBNOMA,NMAABS,NDIME,NBNOTO
      INTEGER NINTER,NFACE,NUNO
      CHARACTER*8  NOMA,TYPMA,NOMNO,K8BID
      CHARACTER*19 CHS,CHS1,CHS2,INACT
      CHARACTER*19 STNO,AINTER,FACLON
      COMPLEX*16   CBID(2)
      LOGICAL      LINACT(27),ISMALI
      INTEGER      NBAR,AR(12,2),JINACT
      LOGICAL      MALIN,EXILI,LLIN
      INTEGER      ZXAIN,XXMMVD
      CHARACTER*24 GRMA(3)
C      
      DATA DDLC /'LAGS_C','LAGS_F1','LAGS_F2'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INTIALISATIONS
C      
      BETAR  = 0.D0
      CHS    = '&&XDELCO.CHS'
      CHS1   = '&&XDELCO.LONCHA'
      CHS2   = '&&XDELCO.AINTER'
      AINTER =NOMO//'.TOPOFAC.AI'
      FACLON =NOMO//'.TOPOFAC.LO'
      STNO   =FISS//'.STNO'
      INACT  ='&&XDELCO.INACT'
      ZXAIN  =XXMMVD('ZXAIN')
      GRMA(1)=FISS//'.MAILFISS  .HEAV'
      GRMA(2)=FISS//'.MAILFISS  .CTIP'
      GRMA(3)=FISS//'.MAILFISS  .HECT'
C
C --- TRANSFORMATION EN CHAM_NO_S ET CHAM_ELEM_S
C
      CALL CNOCNS(STNO  ,'V',CHS)
      CALL CELCES(FACLON,'V',CHS1)
      CALL CELCES(AINTER,'V',CHS2)
C
C --- ACCES AU CHAM_NO_S
C
      CALL JEVEUO(CHS(1:19)//'.CNSV','L',JSTANO)
C
C --- ACCES AU CHAM_ELEM_S 
C     
      CALL JEVEUO(CHS1(1:19)//'.CESD','L',JCESD1)
      CALL JEVEUO(CHS2(1:19)//'.CESD','L',JCESD2)
      CALL ASSERT(ZI(JCESD1).EQ.ZI(JCESD2))
      CALL JEVEUO(CHS1(1:19)//'.CESV','L',JCESV1)
      CALL JEVEUO(CHS1(1:19)//'.CESL','L',JCESL1)
      CALL JEVEUO(CHS1(1:19)//'.CESK','L',JCESK1)
      CALL JEVEUO(CHS2(1:19)//'.CESV','L',JCESV2)
      CALL JEVEUO(CHS2(1:19)//'.CESL','L',JCESL2)
C
C --- DONNÉES RELATIVES AU MAILLAGE
C 
      NOMA   = ZK8(JCESK1-1+1)
      CALL JEVEUO('&CATA.TM.TMDIM','L',JTMDIM)
      CALL JEVEUO(NOMA(1:8)//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA(1:8)//'.CONNEX','LONCUM'),'L',JCONX2)
      CALL JEVEUO(NOMA(1:8)//'.TYPMAIL','L',JTYPMA)
      CALL JEVEUO(NOMA(1:8)//'.DIME','L',JDIME)
      NDIM   = ZI(JDIME-1+6) 
C
C --- CAS LINEAIRE, MARQUEURS
C          0: NOEUD NON TRAITE
C          1: NOEUD A DESACTIVER
C          2: NOEUD ACTIF
C          AUCUN NOEUD TRAITE AU DEBUT
C
      CALL DISMOI('F','NB_NO_MAILLA',NOMO,'MODELE',NBNOTO,K8B,IBID)
      CALL WKVECT(INACT,'V V I',NBNOTO,JINACT)
      DO 90 I=1,NBNOTO
        ZI(JINACT-1+I) = 0
 90   CONTINUE
C
C --- PREMIERE PASSE, INITIALISATION
C
      DO 60 GROUP=1,3
C
C --- ACCES A LA LISTE DES MAILLES
C
        CALL JEEXIN(GRMA(GROUP),IER)
        IF (IER.EQ.0) GO TO 60
        CALL JEVEUO(GRMA(GROUP),'L',JMA)
        CALL JELIRA(GRMA(GROUP),'LONMAX',NBMA,K8BID)
C
C --- BOUCLE SUR LES MAILLES DE GRMA(GROUP)
C
        EXILI=.FALSE.
        DO 50 IMA = 1,NBMA
C
C --- NUMERO ABSOLU DE LA MAILLE TRAITÉE
C
          NMAABS = ZI(JMA-1+IMA)
          NBNOMA = ZI(JCONX2+NMAABS) - ZI(JCONX2+NMAABS-1)
C         NDIME : DIMENSION TOPOLOGIQUE DE LA MAILLE
          NDIME= ZI(JTMDIM-1+ZI(JTYPMA-1+NMAABS))
C         POUR ZAPPER LES MAILLES DE BORD
          IF (NDIM.NE.NDIME) GOTO 50
          IF (NBNOMA.GT.27) CALL ASSERT(.FALSE.)
          ITYPMA = ZI(JTYPMA-1+NMAABS)
          CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ITYPMA),TYPMA)
C         MAILLE LINEAIRE ?
          LLIN = ISMALI(TYPMA)
          IF (LLIN) THEN
C           INDICATEUR DE LA MAILLE COURANTE
            MALIN=.TRUE.
C           INDICATEUR DE LA PRESENCE DE MAILLES LINEAIRES
            EXILI=.TRUE.
          ELSE
            MALIN=.FALSE.
          ENDIF
C          LINEAIRE: LAMBDA INACTIF SAUF SUR LES NOEUDS DEJA TRAITES
          IF (MALIN) THEN
            DO 10 INO = 1,NBNOMA
              NUNO=ZI(JCONX1-1+ZI(JCONX2+NMAABS-1)+INO-1)
              IF (ZI(JINACT-1+NUNO).EQ.0) ZI(JINACT-1+NUNO) = 1
   10       CONTINUE
          ENDIF
C
   50   CONTINUE
   60 CONTINUE
C
C --- DEUXIEME PASSE, ON ELIMINE
C
      DO 120 GROUP=1,3
C
C --- ACCES A LA LISTE DES MAILLES
C
        CALL JEEXIN(GRMA(GROUP),IER)
        IF (IER.EQ.0) GO TO 120
        CALL JEVEUO(GRMA(GROUP),'L',JMA)
        CALL JELIRA(GRMA(GROUP),'LONMAX',NBMA,K8BID)
C
C --- BOUCLE SUR LES MAILLES DE GRMA(GROUP)
C
        DO 150 IMA = 1,NBMA
C
C --- NUMERO ABSOLU DE LA MAILLE TRAITÉE
C
          NMAABS = ZI(JMA-1+IMA)
          NBNOMA = ZI(JCONX2+NMAABS) - ZI(JCONX2+NMAABS-1)
C         NDIME : DIMENSION TOPOLOGIQUE DE LA MAILLE
          NDIME= ZI(JTMDIM-1+ZI(JTYPMA-1+NMAABS))
C         POUR ZAPPER LES MAILLES DE BORD
          IF (NDIM.NE.NDIME) GOTO 150
C       
C --- NOMBRE DE POINTS D'INTERSECTION
C     
          CALL CESEXI('S',JCESD1,JCESL1,NMAABS,1,1,1,IAD)
          NINTER = ZI(JCESV1-1+IAD)
          CALL CESEXI('S',JCESD1,JCESL1,NMAABS,1,1,2,IAD)
          NFACE  = ZI(JCESV1-1+IAD)
C
          IF (NBNOMA.GT.27) CALL ASSERT(.FALSE.)
          ITYPMA = ZI(JTYPMA-1+NMAABS)
          CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ITYPMA),TYPMA)
C         MAILLE LINEAIRE ?
          LLIN = ISMALI(TYPMA)
          IF (LLIN) THEN
C           INDICATEUR DE LA MAILLE COURANTE
            MALIN=.TRUE.
C           INDICATEUR DE LA PRESENCE DE MAILLES LINEAIRES
            EXILI=.TRUE.
          ELSE
            MALIN=.FALSE.
          ENDIF
C            CAS QUADRATIQUE: LAMBDA INACTIF SUR TOUS LES NOEUDS
          IF (.NOT.MALIN) THEN
            DO 130 INO = 1,NBNOMA
              LINACT(INO) = .TRUE.
 130        CONTINUE
          ENDIF
C
C --- CONNECTIVITE D'ARETES
C
          IF (MALIN) THEN
            CALL CONARE(TYPMA,AR,NBAR)
          ENDIF
C
C --- BOUCLE SUR LES INTERSECTIONS :
C     SI NINTER < 0, ON EST EN QUADRATIQUE, DONC PAS DE CONTACT
C     SI NINTER = 0, ON PASSE DIRECTEMENT A LA SUPPRESSION DES LAMBDAS
C     SI NINTER > 0, ON BOUCLE POUR DETERMINER LES LAMBDAS ACTIFS
          IF (NINTER.LT.0) THEN
            GOTO 150
          ELSEIF (NINTER.GT.0) THEN
            IF (MALIN.AND.NFACE.GT.0) THEN
C             CAS LINEAIRE
              DO 100 I = 1,NINTER
                CALL CESEXI('S',JCESD2,JCESL2,NMAABS,1,1,
     &                                         ZXAIN*(I-1)+1,IAD)
                IA = NINT(ZR(JCESV2-1+IAD))
                CALL CESEXI('S',JCESD2,JCESL2,NMAABS,1,1,
     &                                         ZXAIN*(I-1)+2,IAD)
                IN = NINT(ZR(JCESV2-1+IAD))

                IF (IA.EQ.0) THEN
C                 INTERSECTION SUR UN NOEUD SOMMET, UN SEUL ACTIVÉ
                  NUNO = ZI(JCONX1-1+ZI(JCONX2+NMAABS-1)+IN-1)
                  ZI(JINACT-1+NUNO) = 2
                ELSE
C                 INTERSECTION SUR UNE ARETE, TOUS SOMMETS ACTIVÉS
                  DO 110 INO=1,NBNOMA
                    NUNO = ZI(JCONX1-1+ZI(JCONX2+NMAABS-1)+INO-1)
                    ZI(JINACT-1+NUNO) = 2
 110              CONTINUE
               ENDIF
 100          CONTINUE
            ELSEIF (.NOT.MALIN) THEN
C             CAS QUADRATIQUE
              DO 20 I = 1,NINTER
                CALL CESEXI('S',JCESD2,JCESL2,NMAABS,1,1,
     &                                         ZXAIN*(I-1)+1,IAD)
                IA = NINT(ZR(JCESV2-1+IAD))
                CALL CESEXI('S',JCESD2,JCESL2,NMAABS,1,1,
     &                                         ZXAIN*(I-1)+2,IAD)
                IN = NINT(ZR(JCESV2-1+IAD))
                IF (IA.EQ.0) THEN
C                  INTERSECTION SUR UN NOEUD SOMMET, UN SEUL ACTIVÉ
                  LINACT(IN) = .FALSE.
                ELSE
C                  INTERSECTION SUR UNE ARETE, NOEUD MILIEU ACTIF
                  CALL ASSERT(IN.EQ.0)
                  N = NOMIL(TYPMA,IA)
                  LINACT(N)  = .FALSE.
                ENDIF
 20           CONTINUE
            END IF
          END IF
C
C --- ON SUPPRIME LES LAMBDAS DE CONTACT/FROTTEMENT INACTIFS
C     MAILLE PAR MAILLE DANS LE CAS QUADRATIQUE
C
          IF (.NOT.MALIN) THEN
            DO 40 INO = 1,NBNOMA
              NUNO = ZI(JCONX1-1+ZI(JCONX2+NMAABS-1)+INO-1)
              CALL JENUNO(JEXNUM(NOMA(1:8)//'.NOMNOE',NUNO),NOMNO)
              IF (LINACT(INO)) THEN
                DO 30 I = 1,NDIM
                  CALL AFRELA(1.D0,CBID,DDLC(I),NOMNO,0,RBID,1,BETAR,
     &                     CBID,K8BID,'REEL','REEL','12',0.D0,LISREL)
                  NREL = NREL + 1
   30           CONTINUE
              END IF
 40         CONTINUE
          END IF
 150    CONTINUE
 120  CONTINUE
C
C --- SUPPRESSION APRES QUE TOUT LE MONDE SOIT TRAITE
C     DANS LE CAS LINEAIRE
C
      IF (EXILI) THEN
          DO 70 INO = 1,NBNOTO
            CALL JENUNO(JEXNUM(NOMA(1:8)//'.NOMNOE',INO),NOMNO)
            IF (ZI(JINACT-1+INO).EQ.1) THEN
              DO 80 I = 1,NDIM
                CALL AFRELA(1.D0,CBID,DDLC(I),NOMNO,0,RBID,1,BETAR,CBID,
     &                   K8BID,'REEL','REEL','12',0.D0,LISREL)
                NREL = NREL + 1
   80         CONTINUE
            END IF
 70       CONTINUE

      END IF
C
C --- MENAGE
C
      CALL JEDETR('&&XDELCO.CHS')
      CALL JEDETR('&&XDELCO.LONCHA')
      CALL JEDETR('&&XDELCO.AINTER')
      CALL JEDETR('&&XDELCO.INACT')
C
      CALL JEDEMA()
      END
