      SUBROUTINE AFLRCH(LISREZ,CHARGZ)
      IMPLICIT REAL*8 (A-H,O-Z)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 10/07/2007   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      CHARACTER*19 LISREL
      CHARACTER*8 CHARGE
      CHARACTER*(*) LISREZ,CHARGZ
C -------------------------------------------------------
C     AFFECTATION DE L'OBJET DE TYPE  LISTE_RELA ET DE NOM
C     LISREL A L'OBJET DE TYPE CHARGE ET DE NOM CHARGE
C -------------------------------------------------------
C     LES OBJETS LISREL ET CHARGE DOIVENT OBLIGATOIREMENT EXISTER

C     L'OBJET LISREL EST DETRUIT A LA FIN DE LA ROUTINE
C -------------------------------------------------------
C  LISREL        - IN    - K24  - : NOM DE LA SD LISTE_RELA
C                - JXVAR -      -
C -------------------------------------------------------
C  CHARGE        - IN    - K8   - : NOM DE LA SD CHARGE
C                - JXVAR -      -
C -------------------------------------------------------

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ------
      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ------

C --------- VARIABLES LOCALES ---------------------------
      PARAMETER (NMOCL=300)
      COMPLEX*16 BETAC
      CHARACTER*4 TYPVAL,TYPCOE
      CHARACTER*24 VALK(2)
      CHARACTER*7 TYPCHA
      CHARACTER*19 BETAF
      CHARACTER*8 MOD,NOMG,NOMNOE,KBID
      CHARACTER*8 NOMA,CMP,NOMCMP(NMOCL)
      CHARACTER*9 NOMTE
      CHARACTER*19 CA1,CA2
      CHARACTER*19 LIGRMO,LIGRCH
      CHARACTER*123 TEXTE
      INTEGER NTYPEL(NMOCL)
      INTEGER VALI(2)
      LOGICAL EXISDG,SURCHA
      CHARACTER*1 K1BID
C --------- FIN  DECLARATIONS  VARIABLES LOCALES --------
      CALL JEMARQ()
      LISREL = LISREZ
      CHARGE = CHARGZ

      SURCHA = .FALSE.

C --- RECUPERATION DU NIVEAU D'IMPRESSION
      CALL INFNIV(IFM,NIV)


C --- MODELE ASSOCIE AU LIGREL DE CHARGE

      CALL DISMOI('F','NOM_MODELE',CHARGE(1:8),'CHARGE',IBID,MOD,IER)

C ---  LIGREL DU MODELE

      LIGRMO = MOD(1:8)//'.MODELE'

C --- MAILLAGE ASSOCIE AU MODELE

      CALL JEVEUO(LIGRMO//'.LGRF','L',JNOMA)
      NOMA = ZK8(JNOMA)

C --- TYPE DE LA CHARGE ---

      CALL DISMOI('F','TYPE_CHARGE',CHARGE(1:8),'CHARGE',IBID,TYPCHA,
     &            IER)

C --- ACCES AU LIGREL DE CHARGE ---

      IF (TYPCHA(1:4).EQ.'MECA') THEN
        LIGRCH = CHARGE(1:8)//'.CHME.LIGRE'
      ELSE IF (TYPCHA(1:4).EQ.'THER') THEN
        LIGRCH = CHARGE(1:8)//'.CHTH.LIGRE'
      ELSE IF (TYPCHA(1:4).EQ.'ACOU') THEN
        LIGRCH = CHARGE(1:8)//'.CHAC.LIGRE'
      END IF

C --- REARRANGEMENT DES RELATIONS DE LA LISTE DE RELATIONS
C --- PAR ORDRE DE NUMERO DE NOEUD CROISSANT
C --- ET ELIMINATION DES RELATIONS REDONDANTES EN
C --- APPLIQUANT LE PRINCIPE DE SURCHARGE

      CALL ORDLRL(LIGRCH,LISREL)

C --- ACCES AUX CARTES DE LA CHARGE ---

      IF (LIGRCH(12:13).EQ.'TH') THEN
        CA1 = CHARGE(1:8)//'.CHTH.CMULT'
        CA2 = CHARGE(1:8)//'.CHTH.CIMPO'
      ELSE IF (LIGRCH(12:13).EQ.'ME') THEN
        CA1 = CHARGE(1:8)//'.CHME.CMULT'
        CA2 = CHARGE(1:8)//'.CHME.CIMPO'
      ELSE IF (LIGRCH(12:13).EQ.'AC') THEN
        CA1 = CHARGE(1:8)//'.CHAC.CMULT'
        CA2 = CHARGE(1:8)//'.CHAC.CIMPO'
      END IF

C --- TYPE DES VALEURS DES COEFFICIENTS DES RELATIONS

      CALL JEVEUO(LISREL//'.RLTC','L',IDTYCO)
      TYPCOE = ZK8(IDTYCO) (1:4)

C --- TYPE DES VALEURS AU SECOND MEMBRE DES RELATIONS

      CALL JEVEUO(LISREL//'.RLTV','L',IDTYVA)
      TYPVAL = ZK8(IDTYVA) (1:4)

C --- NOMBRE DE RELATIONS DE LA LISTE DE RELATIONS

      CALL JEVEUO(LISREL//'.RLNR','L',IDNBRE)
      NBRELA = ZI(IDNBRE)

C --- NOMBRE TOTAL DE TERMES IMPLIQUES DANS LES RELATIONS
C --- DE LA LISTE DE RELATIONS (SERT AU REDIMENSIONNEMENT
C --- DU LIGREL DE CHARGE ET DES CARTES .CMULT ET .CIMPO
C --- DE LA CHARGE)

      CALL JEVEUO(LISREL//'.RLPO','L',IDPOIN)
      NBTELI = ZI(IDPOIN+NBRELA-1)

C --- VERIFICATION DE L'ADEQUATION DE LA TAILLE DU LIGREL DE
C --- CHARGE A SON AFFECTATION PAR LES MAILLES TARDIVES DUES
C --- AUX RELATIONS LINEAIRES
C --- SI LE LIGREL DE CHARGE N'EXISTE PAS, ON LE CREE

      CALL CRAGLC(NBTELI,LIGRCH)

C --- VERIFICATION DE L'ADEQUATION DE LA TAILLE DES CARTES
C --- .CMULT ET .CIMPO DE LA CHARGE A LEUR AFFECTATION
C --- PAR LES MAILLES TARDIVES DUES AUX RELATIONS LINEAIRES
C --- SI LES CARTES .CMULT ET .CIMPO N'EXISTENT PAS, ON
C --- LES CREE

      CALL CRAGCH(NBTELI,TYPCOE,TYPVAL,LIGRCH)

C --- RECUPERATION DES NOMS DES DDLS ET DES NUMEROS
C --- D'ELEMENTS DE LAGRANGE ASSOCIES

      IF (LIGRCH(12:13).EQ.'TH') THEN
        NOMG = 'TEMP_R'
        NOMTE = 'D_TEMP_R_'
      ELSE IF (LIGRCH(12:13).EQ.'ME') THEN
        NOMG = 'DEPL_R'
        NOMTE = 'D_DEPL_R_'
      ELSE IF (LIGRCH(12:13).EQ.'AC') THEN
        NOMG = 'PRES_C'
        NOMTE = 'D_PRES_C_'
      END IF
      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP',NOMG),'L',INOM)
      CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP',NOMG),'LONMAX',NBCMP,K1BID)
      NDDLA = NBCMP - 1
      IF (NDDLA.GT.NMOCL) THEN
            VALI (1) = NMOCL
            VALI (2) = NDDLA
        CALL U2MESG('F', 'MODELISA8_29',0,' ',2,VALI,0,0.D0)
      END IF
      DO 10 I = 1,NBCMP
        NOMCMP(I) = ZK8(INOM-1+I)
        CALL JENONU(JEXNOM('&CATA.TE.NOMTE',NOMTE//NOMCMP(I) (1:7)),
     &              NTYPEL(I))
   10 CONTINUE
      CALL DISMOI('F','NB_EC',NOMG,'GRANDEUR',NBEC,KBID,IERD)

C --- ACCES A L'OBJET .PRNM ---

      IF (NBEC.GT.10) THEN
        CALL U2MESS('F','MODELISA_94')
      ELSE
        CALL JEVEUO(LIGRMO//'.PRNM','L',JPRNM)
      END IF

C --- LES CARTES CA1 ET CA2 DOIVENT OBLIGATOIREMENT AVOIR ETE
C --- CREEES AU PREALABLE
      CALL JEEXIN(CA1//'.DESC',IRET)
      IF (IRET.EQ.0) THEN
        CALL U2MESK('F','MODELISA_95',1,CA1)
      END IF
C --- ACCES AUX OBJETS DES CARTES CA1 ET CA2
      CALL JEVEUO(CA1//'.NCMP','E',JNCMP1)
      CALL JEVEUO(CA1//'.VALV','E',JVALV1)
      CALL JEVEUO(CA1//'.VALE','E',JVALE1)
      CALL JEVEUO(CA2//'.NCMP','E',JNCMP2)
      CALL JEVEUO(CA2//'.VALV','E',JVALV2)
      CALL JEVEUO(CA2//'.VALE','E',JVALE2)

C --- INITIALISATIONS ---

      NUMEL = 0
C --- NOMBRE DE NOEUDS TARDIFS ---
      CALL JEVEUO(LIGRCH//'.NBNO','E',JNBNO)
C --- NOMBRE DE MAILLES TARDIVES DU LIGREL DE CHARGE
      CALL DISMOI('F','NB_MA_SUP',LIGRCH,'LIGREL',INEMA,KBID,IER)
C --- NOMBRE DE GRELS DU LIGREL ---
      CALL DISMOI('F','NB_GREL',LIGRCH,'LIGREL',IGREL,KBID,IER)

C --- ACCES AUX COMPOSANTES DE LA LISTE DE RELATIONS

      CALL JEVEUO(LISREL//'.RLCO','L',IDCOE)
      CALL JEVEUO(LISREL//'.RLDD','L',IDL)
      CALL JEVEUO(LISREL//'.RLNO','L',IDNOE)
      CALL JEVEUO(LISREL//'.RLNT','L',IDTERM)
      CALL JEVEUO(LISREL//'.RLPO','L',IDPOIN)
      CALL JEVEUO(LISREL//'.RLSU','L',IDSURC)
      CALL JEVEUO(LISREL//'.RLBE','L',IDBETA)
      CALL JEVEUO(LISREL//'.RLLA','L',IDLAGR)

C --- BOUCLE SUR LES RELATIONS DE LA LISTE DE RELATIONS

      DO 60 IRELA = 1,NBRELA

        INDSUR = ZI(IDSURC+IRELA-1)
        IF (INDSUR.EQ.1) THEN
          SURCHA = .TRUE.
          GO TO 60
        END IF

        IPNTRL = ZI(IDPOIN+IRELA-1)
        NBTERM = ZI(IDTERM+IRELA-1)
        IF (TYPVAL.EQ.'REEL') THEN
          BETA = ZR(IDBETA+IRELA-1)
        ELSE IF (TYPVAL.EQ.'COMP') THEN
          BETAC = ZC(IDBETA+IRELA-1)
        ELSE IF (TYPVAL.EQ.'FONC') THEN
          BETAF = ZK24(IDBETA+IRELA-1)
        END IF
        IDECAL = IPNTRL - NBTERM
        IDCOEF = IDCOE + IDECAL
        IDNOEU = IDNOE + IDECAL
        IDDL = IDL + IDECAL

C ---          INITIALISATIONS POUR LA RELATION COURANTE
        NUMEL = 0
        INEMA0 = INEMA
        ZI(JNBNO) = ZI(JNBNO) + 2
C ---          BOUCLE SUR LE NOMBRE DE NOEUDS LIES PAR
C ---          LA RELATION
        DO 40 INO = 1,NBTERM
C ---                 NOM DU NOEUD              ---
          NOMNOE = ZK8(IDNOEU+INO-1)
C ---                 NUMERO DU NOEUD              ---
          CALL JENONU(JEXNOM(NOMA//'.NOMNOE',NOMNOE),IN)

          CMP = ZK8(IDDL+INO-1)

          ICMP = INDIK8(NOMCMP,CMP,1,NBCMP)
          IF (.NOT.EXISDG(ZI(JPRNM-1+ (IN-1)*NBEC+1),ICMP)) THEN
            VALK (1) = CMP
            VALK (2) = NOMNOE
            CALL U2MESG('F', 'MODELISA8_30',2,VALK,0,0,0,0.D0)
          ELSE
            DO 20 KDDL = 1,NBCMP
              IF (CMP.EQ.NOMCMP(KDDL)) THEN
                NUMEL = NTYPEL(KDDL)
                GO TO 30
              END IF
   20       CONTINUE
          END IF
C ---                 POUR L'INSTANT PAS DE VERIF QUE LE DDL LIE
C ---                 EST IMPLIQUE DANS UNE AUTRE RELATION
   30     CONTINUE

          IF (NUMEL.NE.0) THEN
            IGREL = IGREL + 1
            CALL NOLIGR(LIGRCH,IGREL,NUMEL,1,IN,'        ',3,1,INEMA,
     &                  ZI(JNBNO),ZK8(IDLAGR+IRELA-1))
          ELSE
            TEXTE(1:9) = 'LE NOEUD '
            TEXTE(18:80) = ' NE FAIT PAS PARTIE DU MODELE. '
            WRITE (TEXTE(10:17),'(A)') NOMNOE
            CALL U2MESK('F','JEVEUX_1',1,TEXTE)
          END IF

C ---          FIN DE LA BOUCLE SUR LES NOEUDS DE LA RELATION
   40   CONTINUE

C ---          STOCKAGE DANS LES CARTES CA1 ET CA2

        NBNEMA = INEMA - INEMA0
        IF (NBNEMA.NE.NBTERM) THEN
          TEXTE = ' LE NOMBRE DE NOEUDS N''EST'//
     &            ' PAS EGAL AU NOMBRE DE DDL'
          CALL U2MESK('F','JEVEUX_1',1,TEXTE)
        END IF
        ZK8(JNCMP1) = 'A1'
        ZK8(JNCMP2) = 'C'
        DO 50 J = 1,NBNEMA
          IF (TYPCOE.EQ.'COMP') THEN
            ZC(JVALV1) = ZC(IDCOEF-1+J)
          ELSE
            ZR(JVALV1) = ZR(IDCOEF-1+J)
          END IF
          NUNEWM = - (INEMA0+J)
          CALL NOCART(CA1,-3,' ','NUM',1,' ',NUNEWM,LIGRCH,1)
          IF (J.LT.NBNEMA) THEN
            IF (TYPVAL.EQ.'REEL') THEN
              ZR(JVALV2) = 0.D0
            ELSE IF (TYPVAL.EQ.'COMP') THEN
              ZC(JVALV2) = (0.0D0,0.0D0)
            ELSE
              ZK24(JVALV2) = '&FOZERO'
            END IF
          ELSE
            IF (TYPVAL.EQ.'REEL') THEN
              ZR(JVALV2) = BETA
            ELSE IF (TYPVAL.EQ.'COMP') THEN
              ZC(JVALV2) = BETAC
            ELSE
              ZK24(JVALV2) = BETAF
            END IF
          END IF
          CALL NOCART(CA2,-3,' ','NUM',1,' ',NUNEWM,LIGRCH,1)
   50   CONTINUE
C --- FIN DE LA BOUCLE SUR LES RELATIONS  ---
   60 CONTINUE


C --- IMPRESSION DES RELATIONS REDONDANTES ET DONC SUPPRIMEES :
C     -------------------------------------------------------
      IF (SURCHA .AND. (NIV.EQ.2)) THEN
        WRITE (IFM,*) 'LES RELATIONS SUIVANTES SONT '//
     &    'REDONDANTES ET DONC SUPPRIMEES EN APPLIQUANT '//
     &    'LE PRINCIPE DE SURCHARGE.'

        DO 70 IRELA = 1,NBRELA
          INDSUR = ZI(IDSURC+IRELA-1)
          IF (INDSUR.NE.1) GO TO 70
          IPNTRL = ZI(IDPOIN+IRELA-1)
          NBTERM = ZI(IDTERM+IRELA-1)
          IF (TYPVAL.EQ.'REEL') THEN
            BETA = ZR(IDBETA+IRELA-1)
          ELSE IF (TYPVAL.EQ.'COMP') THEN
            BETAC = ZC(IDBETA+IRELA-1)
          ELSE IF (TYPVAL.EQ.'FONC') THEN
            BETAF = ZK24(IDBETA+IRELA-1)
          END IF
          IDECAL = IPNTRL - NBTERM
          IDCOEF = IDCOE + IDECAL
          IDNOEU = IDNOE + IDECAL
          IDDL = IDL + IDECAL
          CALL IMPRE2(LISREL//'.RLCO',LISREL//'.RLDD',LISREL//'.RLNO',
     &                LISREL//'.RLBE',ZI(IDSURC+IRELA-1),
     &                ZI(IDPOIN+IRELA-1),ZI(IDTERM+IRELA-1),TYPCOE,
     &                TYPVAL,IRELA)
   70   CONTINUE
      END IF

C --- DESTRUCTION DES OBJETS DE LA LISTE DE RELATIONS
C --- (PEUT-ETRE PROVISOIRE)

      CALL JEDETR(LISREL//'.RLCO')
      CALL JEDETR(LISREL//'.RLDD')
      CALL JEDETR(LISREL//'.RLNO')
      CALL JEDETR(LISREL//'.RLBE')
      CALL JEDETR(LISREL//'.RLNT')
      CALL JEDETR(LISREL//'.RLPO')
      CALL JEDETR(LISREL//'.RLSU')
      CALL JEDETR(LISREL//'.RLNR')
      CALL JEDETR(LISREL//'.RLTC')
      CALL JEDETR(LISREL//'.RLTV')
      CALL JEDETR(LISREL//'.RLLA')

      CALL JEDEMA()
      END
