      SUBROUTINE AFLRCH(LISREZ,CHARGZ)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 16/09/2008   AUTEUR PELLET J.PELLET 
C RESPONSABLE PELLET J.PELLET
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      CHARACTER*19 LISREL
      CHARACTER*8 CHARGE
      CHARACTER*(*) LISREZ,CHARGZ
C -------------------------------------------------------
C     AFFECTATION DE L'OBJET DE TYPE  LISTE_RELA ET DE NOM
C     LISREL A L'OBJET DE TYPE CHARGE ET DE NOM CHARGE
C -------------------------------------------------------
C     LES OBJETS LISREL ET CHARGE DOIVENT OBLIGATOIREMENT EXISTER

C     L'OBJET LISREL EST DETRUIT A LA FIN DE LA ROUTINE
C -------------------------------------------------------
C  LISREL        - IN    - K24  - : NOM DE LA SD LISTE_RELA
C                - JXVAR -      -
C -------------------------------------------------------
C  CHARGE        - IN    - K8   - : NOM DE LA SD CHARGE
C                - JXVAR -      -
C -------------------------------------------------------

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ------
      CHARACTER*32 JEXNUM,JEXNOM
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ------

C --------- VARIABLES LOCALES ---------------------------
      INTEGER NMOCL
      PARAMETER(NMOCL=300)
      COMPLEX*16 BETAC
      CHARACTER*4 TYPVAL,TYPCOE
      CHARACTER*24 VALK(2)
      CHARACTER*7 TYPCHA
      CHARACTER*19 BETAF
      CHARACTER*8 MOD,NOMGD,NOMNOE,KBID
      CHARACTER*8 NOMA,CMP,NOMCMP(NMOCL)
      CHARACTER*9 NOMTE
      CHARACTER*19 CA1,CA2
      CHARACTER*19 LIGRMO,LIGRCH
      CHARACTER*123 TEXTE
      INTEGER NTYPEL(NMOCL)
      INTEGER VALI(2)
      LOGICAL EXISDG
      CHARACTER*1 K1BID
      REAL*8 BETA
      INTEGER I,IBID,ICMP,IDDL,IDECAL,IER,IERD,IFM,IGREL
      INTEGER IN,INDIK8,INDSUR,INEMA,INEMA0,INO,INOM,IPNTRL,IRELA
      INTEGER IRET,J,JNBNO,JNCMP1,JNCMP2,JNOMA,JPRNM,JRLBE,JRLCO
      INTEGER JRLCOF,JRLDD,JRLLA,JRLNO,IDNOEU,JRLNR,JRLNT,JRLPO
      INTEGER JRLSU,JRLTC,JRLTV,JVALE1,JVALE2,JVALV1,JVALV2,KDDL
      INTEGER NBCMP,NBEC,NBNEMA,NBRELA,NBTELI,NBTERM,NDDLA
      INTEGER NIV,NUMEL,NUNEWM,NBDUAL,NBSURC
C --------- FIN  DECLARATIONS  VARIABLES LOCALES --------
      CALL JEMARQ()
      LISREL=LISREZ
      CHARGE=CHARGZ
      CALL INFNIV(IFM,NIV)


      CALL DISMOI('F','NOM_MODELE',CHARGE,'CHARGE',IBID,MOD,IER)
      LIGRMO=MOD(1:8)//'.MODELE'
      CALL JEVEUO(LIGRMO//'.LGRF','L',JNOMA)
      NOMA=ZK8(JNOMA)
      CALL DISMOI('F','TYPE_CHARGE',CHARGE,'CHARGE',IBID,TYPCHA,
     &            IER)

      IF (TYPCHA(1:4).EQ.'MECA') THEN
        LIGRCH=CHARGE//'.CHME.LIGRE'
        NOMGD='DEPL_R'
        NOMTE='D_DEPL_R_'
      ELSEIF (TYPCHA(1:4).EQ.'THER') THEN
        LIGRCH=CHARGE//'.CHTH.LIGRE'
        NOMGD='TEMP_R'
        NOMTE='D_TEMP_R_'
      ELSEIF (TYPCHA(1:4).EQ.'ACOU') THEN
        LIGRCH=CHARGE//'.CHAC.LIGRE'
        NOMGD='PRES_C'
        NOMTE='D_PRES_C_'
      ENDIF


C     -- REARRANGEMENT DES RELATIONS DE LA LISTE DE RELATIONS
C     -- PAR ORDRE DE NUMERO DE NOEUD CROISSANT
C     -- ET SUPPRESSION DES RELATIONS REDONDANTES EN
C     -- APPLIQUANT LE PRINCIPE DE SURCHARGE
      CALL ORDLRL(CHARGE,LISREL,NOMGD)

C     -- TRAITEMENT DU MOT CLE METHODE='ELIMINATION':
      CALL ELIMDI(CHARGE,LISREL,NOMGD,NBDUAL,NBSURC)
      IF (NBDUAL.EQ.0) GOTO 9998


      IF (LIGRCH(12:13).EQ.'TH') THEN
        CA1=CHARGE//'.CHTH.CMULT'
        CA2=CHARGE//'.CHTH.CIMPO'
      ELSEIF (LIGRCH(12:13).EQ.'ME') THEN
        CA1=CHARGE//'.CHME.CMULT'
        CA2=CHARGE//'.CHME.CIMPO'
      ELSEIF (LIGRCH(12:13).EQ.'AC') THEN
        CA1=CHARGE//'.CHAC.CMULT'
        CA2=CHARGE//'.CHAC.CIMPO'
      ENDIF

      CALL JEVEUO(LISREL//'.RLTC','L',JRLTC)
      TYPCOE=ZK8(JRLTC)(1:4)

C --- TYPE DES VALEURS AU SECOND MEMBRE DES RELATIONS
      CALL JEVEUO(LISREL//'.RLTV','L',JRLTV)
      TYPVAL=ZK8(JRLTV)(1:4)

C --- NOMBRE DE RELATIONS DE LA LISTE DE RELATIONS
      CALL JEVEUO(LISREL//'.RLNR','L',JRLNR)
      NBRELA=ZI(JRLNR)

C --- NOMBRE TOTAL DE TERMES IMPLIQUES DANS LES RELATIONS
C --- DE LA LISTE DE RELATIONS (SERT AU REDIMENSIONNEMENT
C --- DU LIGREL DE CHARGE ET DES CARTES .CMULT ET .CIMPO
C --- DE LA CHARGE)
      CALL JEVEUO(LISREL//'.RLPO','L',JRLPO)
      NBTELI=ZI(JRLPO+NBRELA-1)

C --- VERIFICATION DE L'ADEQUATION DE LA TAILLE DU LIGREL DE
C --- CHARGE A SON AFFECTATION PAR LES MAILLES TARDIVES DUES
C --- AUX RELATIONS LINEAIRES
C --- SI LE LIGREL DE CHARGE N'EXISTE PAS, ON LE CREE
      CALL CRAGLC(NBTELI,LIGRCH)

C --- VERIFICATION DE L'ADEQUATION DE LA TAILLE DES CARTES
C --- .CMULT ET .CIMPO DE LA CHARGE A LEUR AFFECTATION
C --- PAR LES MAILLES TARDIVES DUES AUX RELATIONS LINEAIRES
C --- SI LES CARTES .CMULT ET .CIMPO N'EXISTENT PAS, ON
C --- LES CREE
      CALL CRAGCH(NBTELI,TYPCOE,TYPVAL,LIGRCH)



      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'L',INOM)
      CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'LONMAX',NBCMP,K1BID)
      NDDLA=NBCMP-1
      IF (NDDLA.GT.NMOCL) THEN
        VALI(1)=NMOCL
        VALI(2)=NDDLA
        CALL U2MESG('F','MODELISA8_29',0,' ',2,VALI,0,0.D0)
      ENDIF
      CALL ASSERT(NBCMP.LE.NMOCL)
      DO 10 I=1,NBCMP
        NOMCMP(I)=ZK8(INOM-1+I)
        CALL JENONU(JEXNOM('&CATA.TE.NOMTE',NOMTE//NOMCMP(I)(1:7)),
     &              NTYPEL(I))
   10 CONTINUE
      CALL DISMOI('F','NB_EC',NOMGD,'GRANDEUR',NBEC,KBID,IERD)


      IF (NBEC.GT.10) THEN
        CALL U2MESS('F','MODELISA_94')
      ELSE
        CALL JEVEUO(LIGRMO//'.PRNM','L',JPRNM)
      ENDIF

C --- LES CARTES CA1 ET CA2 DOIVENT OBLIGATOIREMENT AVOIR ETE
C --- CREEES AU PREALABLE
      CALL JEEXIN(CA1//'.DESC',IRET)
      IF (IRET.EQ.0) CALL U2MESK('F','MODELISA_95',1,CA1)
      CALL JEVEUO(CA1//'.NCMP','E',JNCMP1)
      CALL JEVEUO(CA1//'.VALV','E',JVALV1)
      CALL JEVEUO(CA1//'.VALE','E',JVALE1)
      CALL JEVEUO(CA2//'.NCMP','E',JNCMP2)
      CALL JEVEUO(CA2//'.VALV','E',JVALV2)
      CALL JEVEUO(CA2//'.VALE','E',JVALE2)


      NUMEL=0
      CALL JEVEUO(LIGRCH//'.NBNO','E',JNBNO)
      CALL DISMOI('F','NB_MA_SUP',LIGRCH,'LIGREL',INEMA,KBID,IER)
      CALL DISMOI('F','NB_GREL',LIGRCH,'LIGREL',IGREL,KBID,IER)


      CALL JEVEUO(LISREL//'.RLCO','L',JRLCO)
      CALL JEVEUO(LISREL//'.RLDD','L',JRLDD)
      CALL JEVEUO(LISREL//'.RLNO','L',JRLNO)
      CALL JEVEUO(LISREL//'.RLNT','L',JRLNT)
      CALL JEVEUO(LISREL//'.RLPO','L',JRLPO)
      CALL JEVEUO(LISREL//'.RLSU','L',JRLSU)
      CALL JEVEUO(LISREL//'.RLBE','L',JRLBE)
      CALL JEVEUO(LISREL//'.RLLA','L',JRLLA)



      DO 60 IRELA=1,NBRELA
        INDSUR=ZI(JRLSU+IRELA-1)
        IF (INDSUR.NE.0) GOTO 60

        IPNTRL=ZI(JRLPO+IRELA-1)
        NBTERM=ZI(JRLNT+IRELA-1)
        IF (TYPVAL.EQ.'REEL') THEN
          BETA=ZR(JRLBE+IRELA-1)
        ELSEIF (TYPVAL.EQ.'COMP') THEN
          BETAC=ZC(JRLBE+IRELA-1)
        ELSEIF (TYPVAL.EQ.'FONC') THEN
          BETAF=ZK24(JRLBE+IRELA-1)
        ENDIF
        IDECAL=IPNTRL-NBTERM
        JRLCOF=JRLCO+IDECAL
        IDNOEU=JRLNO+IDECAL
        IDDL=JRLDD+IDECAL

        NUMEL=0
        INEMA0=INEMA
        ZI(JNBNO)=ZI(JNBNO)+2
        DO 40 INO=1,NBTERM
          NOMNOE=ZK8(IDNOEU+INO-1)
          CALL JENONU(JEXNOM(NOMA//'.NOMNOE',NOMNOE),IN)

          CMP=ZK8(IDDL+INO-1)

          ICMP=INDIK8(NOMCMP,CMP,1,NBCMP)
          IF (.NOT.EXISDG(ZI(JPRNM-1+(IN-1)*NBEC+1),ICMP)) THEN
            VALK(1)=CMP
            VALK(2)=NOMNOE
            CALL U2MESG('F','MODELISA8_30',2,VALK,0,0,0,0.D0)
          ELSE
            DO 20 KDDL=1,NBCMP
              IF (CMP.EQ.NOMCMP(KDDL)) THEN
                NUMEL=NTYPEL(KDDL)
                GOTO 30

              ENDIF
   20       CONTINUE
          ENDIF
   30     CONTINUE

          IF (NUMEL.NE.0) THEN
            IGREL=IGREL+1
            CALL NOLIGR(LIGRCH,IGREL,NUMEL,1,IN,'        ',3,1,INEMA,
     &                  ZI(JNBNO),ZK8(JRLLA+IRELA-1))
          ELSE
            TEXTE(1:9)='LE NOEUD '
            TEXTE(18:80)=' NE FAIT PAS PARTIE DU MODELE. '
            WRITE (TEXTE(10:17),'(A)')NOMNOE
            CALL U2MESK('F','JEVEUX_1',1,TEXTE)
          ENDIF
   40   CONTINUE



C       --  STOCKAGE DANS LES CARTES CA1 ET CA2
        NBNEMA=INEMA-INEMA0
        IF (NBNEMA.NE.NBTERM) THEN
          TEXTE=' LE NOMBRE DE NOEUDS N''EST'//
     &          ' PAS EGAL AU NOMBRE DE DDL'
          CALL U2MESK('F','JEVEUX_1',1,TEXTE)
        ENDIF
        ZK8(JNCMP1)='A1'
        ZK8(JNCMP2)='C'
        DO 50 J=1,NBNEMA
          IF (TYPCOE.EQ.'COMP') THEN
            ZC(JVALV1)=ZC(JRLCOF-1+J)
          ELSE
            ZR(JVALV1)=ZR(JRLCOF-1+J)
          ENDIF
          NUNEWM=-(INEMA0+J)
          CALL NOCART(CA1,-3,' ','NUM',1,' ',NUNEWM,LIGRCH,1)
          IF (J.LT.NBNEMA) THEN
            IF (TYPVAL.EQ.'REEL') THEN
              ZR(JVALV2)=0.D0
            ELSEIF (TYPVAL.EQ.'COMP') THEN
              ZC(JVALV2)=(0.0D0,0.0D0)
            ELSE
              ZK24(JVALV2)='&FOZERO'
            ENDIF
          ELSE
            IF (TYPVAL.EQ.'REEL') THEN
              ZR(JVALV2)=BETA
            ELSEIF (TYPVAL.EQ.'COMP') THEN
              ZC(JVALV2)=BETAC
            ELSE
              ZK24(JVALV2)=BETAF
            ENDIF
          ENDIF
          CALL NOCART(CA2,-3,' ','NUM',1,' ',NUNEWM,LIGRCH,1)
   50   CONTINUE
   60 CONTINUE



C     -- IMPRESSION DES RELATIONS REDONDANTES ET DONC SUPPRIMEES :
C     ------------------------------------------------------------
9998  CONTINUE
      IF ((NBSURC.GT.0).AND.(NIV.GE.2)) THEN
        WRITE (IFM,*)'LES RELATIONS SUIVANTES SONT '//
     &    'REDONDANTES ET DONC SUPPRIMEES EN APPLIQUANT '//
     &    'LE PRINCIPE DE SURCHARGE.'

        DO 70 IRELA=1,NBRELA
          INDSUR=ZI(JRLSU+IRELA-1)
          IF (INDSUR.NE.1)GOTO 70
          IPNTRL=ZI(JRLPO+IRELA-1)
          NBTERM=ZI(JRLNT+IRELA-1)
          IF (TYPVAL.EQ.'REEL') THEN
            BETA=ZR(JRLBE+IRELA-1)
          ELSEIF (TYPVAL.EQ.'COMP') THEN
            BETAC=ZC(JRLBE+IRELA-1)
          ELSEIF (TYPVAL.EQ.'FONC') THEN
            BETAF=ZK24(JRLBE+IRELA-1)
          ENDIF
          IDECAL=IPNTRL-NBTERM
          JRLCOF=JRLCO+IDECAL
          IDNOEU=JRLNO+IDECAL
          IDDL=JRLDD+IDECAL
          CALL IMPRE2(LISREL//'.RLCO',LISREL//'.RLDD',LISREL//'.RLNO',
     &                LISREL//'.RLBE',ZI(JRLSU+IRELA-1),
     &                ZI(JRLPO+IRELA-1),ZI(JRLNT+IRELA-1),TYPCOE,TYPVAL,
     &                IRELA)
   70   CONTINUE
      ENDIF


9999  CONTINUE
      CALL JEDETR(LISREL//'.RLCO')
      CALL JEDETR(LISREL//'.RLDD')
      CALL JEDETR(LISREL//'.RLNO')
      CALL JEDETR(LISREL//'.RLBE')
      CALL JEDETR(LISREL//'.RLNT')
      CALL JEDETR(LISREL//'.RLPO')
      CALL JEDETR(LISREL//'.RLSU')
      CALL JEDETR(LISREL//'.RLNR')
      CALL JEDETR(LISREL//'.RLTC')
      CALL JEDETR(LISREL//'.RLTV')
      CALL JEDETR(LISREL//'.RLLA')

      CALL JEDEMA()
      END
