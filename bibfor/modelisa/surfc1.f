      SUBROUTINE SURFC1(CHAR,NOMA,IFM)
C      
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 07/05/2007   AUTEUR PROIX J-M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C 
      IMPLICIT NONE
      CHARACTER*8 CHAR
      CHARACTER*8 NOMA
      INTEGER     IFM      
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE DISCRETE - AFFICHAGE DONNEES)
C
C AFFICHAGE LES INFOS CONTENUES DANS LA SD CONTACT POUR LA FORMULATION
C DISCRETE
C      
C ----------------------------------------------------------------------
C
C
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  NOMA   : NOM DU MAILLAGE
C IN  IFM    : UNITE D'IMPRESSION
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32 JEXNUM
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFMMVD,ZMETH,ZCONV,ZCARF,ZTOLE,ZTGDE,ZPOUD
      INTEGER      NZOCO,NNOCO
      INTEGER      IZONE,INO,FORM
      CHARACTER*8  NOMNOE,CHAIN1,CHAIN2
      REAL*8       JSUP     
      CHARACTER*24 NOEUMA
C
      CHARACTER*24 FORMCO,METHCO
      INTEGER      JFORM ,JMETH  
C           
      CHARACTER*24 NDIMCO,CONTNO
      INTEGER      JDIM  ,JNOCO 
C
      CHARACTER*24 TANPOU,DIRCO ,JEUSUP,NORLIS,TANDEF,TOLECO 
      INTEGER      JPOUDI,JDIR  ,JJSUP ,JNORLI,JTGDEF,JTOLE  
C      
      CHARACTER*24 CARFRO,CONVCO,JEUFO1,JEUFO2
      INTEGER      JCARF ,JCONV ,JJFO1 ,JJFO2  
      CHARACTER*24 JEUPOU,JEUCOQ
      INTEGER      JJPOU ,JJCOQ 
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ
C
C --- ACCES SD DU MAILLAGE
C
      NOEUMA = NOMA(1:8)//'.NOMNOE'
C   
C --- COMMUNS TOUTES FORMULATIONS 
C 
      FORMCO = CHAR(1:8)//'.CONTACT.FORMCO'
      METHCO = CHAR(1:8)//'.CONTACT.METHCO' 
      CALL JEVEUO(FORMCO,'L',JFORM)      
      CALL JEVEUO(METHCO,'L',JMETH) 
      ZMETH  = CFMMVD('ZMETH')  
      NZOCO  = ZI(JMETH)
C
      IZONE  = 1
      FORM   = ZI(JFORM-1+IZONE)
      IF (FORM.NE.1) THEN
        GOTO 999
      ENDIF   
C   
C --- COMMUNS AVEC FORM. MAILLEES (DISCRET ET CONTINUE MAIS PAS XFEM)
C  
      NDIMCO = CHAR(1:8)//'.CONTACT.NDIMCO'
      CONTNO = CHAR(1:8)//'.CONTACT.NOEUCO' 
      CALL JEVEUO(NDIMCO,'L',JDIM)
      CALL JEVEUO(CONTNO,'L',JNOCO) 
      NNOCO  = ZI(JDIM+4)
C   
C --- COMMUNS AVEC FORM. DISCRETE
C  
      TANPOU = CHAR(1:8)//'.CONTACT.TANPOU'
      DIRCO  = CHAR(1:8)//'.CONTACT.DIRCO'
      JEUSUP = CHAR(1:8)//'.CONTACT.JSUPCO'
      NORLIS = CHAR(1:8)//'.CONTACT.NORLIS'
      TANDEF = CHAR(1:8)//'.CONTACT.TANDEF'
      TOLECO = CHAR(1:8)//'.CONTACT.TOLECO' 
C
      CALL JEVEUO(TANPOU,'L',JPOUDI)
      CALL JEVEUO(DIRCO ,'L',JDIR)
      CALL JEVEUO(JEUSUP,'L',JJSUP)
      CALL JEVEUO(NORLIS,'L',JNORLI)
      CALL JEVEUO(TANDEF,'L',JTGDEF)
      CALL JEVEUO(TOLECO,'L',JTOLE)
C 
      ZPOUD = CFMMVD('ZPOUD')
      ZTGDE = CFMMVD('ZTGDE') 
      ZTOLE = CFMMVD('ZTOLE')                          
C   
C --- SPECIFIQUES FORM. DISCRETE
C 
      CARFRO = CHAR(1:8)//'.CONTACT.CARFRO'
      CONVCO = CHAR(1:8)//'.CONTACT.CONVCO'
      JEUFO1 = CHAR(1:8)//'.CONTACT.JFO1CO'
      JEUFO2 = CHAR(1:8)//'.CONTACT.JFO2CO' 
      JEUPOU = CHAR(1:8)//'.CONTACT.JEUPOU'
      JEUCOQ = CHAR(1:8)//'.CONTACT.JEUCOQ'
C
      CALL JEVEUO(CARFRO,'L',JCARF)
      CALL JEVEUO(CONVCO,'L',JCONV)
      CALL JEVEUO(JEUFO1,'L',JJFO1)
      CALL JEVEUO(JEUFO2,'L',JJFO2)
      CALL JEVEUO(JEUPOU,'L',JJPOU)
      CALL JEVEUO(JEUCOQ,'L',JJCOQ)     
C 
      ZCONV = CFMMVD('ZCONV')      
      ZCARF = CFMMVD('ZCARF')                     
C
C --- IMPRESSIONS POUR L'UTILISATEUR
C 
      WRITE (IFM,*)      
      WRITE (IFM,*) '<CONTACT> INFOS SPECIFIQUES SUR LA FORMULATION'//
     &              ' DISCRETE'
      WRITE (IFM,*)           
C 
C --- IMPRESSIONS POUR LES JEUX SUPPS
C 
      WRITE (IFM,*) '<CONTACT> ... JEU SUPP.' 
      DO 20 IZONE = 1,NZOCO
        CHAIN1 = ZK8(JJFO1+IZONE-1)
        CHAIN2 = ZK8(JJFO2+IZONE-1)
        JSUP   = ZR(JJSUP+IZONE-1)      
        WRITE (IFM,*) '<CONTACT> ...... ZONE : ',IZONE          
        WRITE (IFM,1030) JSUP
        IF (CHAIN1.NE.' ') THEN
          WRITE (IFM,1031) CHAIN1
        ENDIF
        IF (CHAIN2.NE.' ') THEN
          WRITE (IFM,1032) CHAIN2
        ENDIF        
 20   CONTINUE      
C          
 1030 FORMAT (' <CONTACT> ...... TYPE REEL              : ',E12.5) 
 1031 FORMAT (' <CONTACT> ...... TYPE FONC. SUR ESCLAVE : ',A8) 
 1032 FORMAT (' <CONTACT> ...... TYPE FONC. SUR MAITRE  : ',A8)    
C
C --- IMPRESSIONS POUR LES POUTRES
C 
      IF ( (ZR(JJPOU-1+NNOCO+1).GT.0.5D0)) THEN
        WRITE (IFM,*) '<CONTACT> ... JEU SUPP. PAR DIST_POUT'
        DO 60 INO = 1 , NNOCO
          IF ( ZR(JJPOU-1+INO).EQ.0.D0 ) GOTO 60
          CALL JENUNO(JEXNUM(NOEUMA,ZI(JNOCO-1+INO)),NOMNOE)
          WRITE (IFM,1014) NOMNOE, ZR(JJPOU-1+INO)
 60     CONTINUE
      END IF
C 
C --- IMPRESSIONS POUR LES COQUES
C 
      IF ( (ZR(JJCOQ-1+NNOCO+1).GT.0.5D0)) THEN
        WRITE (IFM,*) '<CONTACT> ... JEU SUPP. PAR DIST_COQUE'
        DO 70 INO = 1 , NNOCO
          IF ( ZR(JJCOQ-1+INO).EQ.0.D0 ) GOTO 70
          CALL JENUNO(JEXNUM(NOEUMA,ZI(JNOCO-1+INO)),NOMNOE)
          WRITE (IFM,1016) NOMNOE, ZR(JJCOQ-1+INO)
 70     CONTINUE
      END IF
C      
 1014 FORMAT (' <CONTACT> ...... NOEUD: ',A8,' RAYON_POUTRE  : ',E12.5)
 1016 FORMAT (' <CONTACT> ...... NOEUD: ',A8,' DEMI-EPAISSEUR: ',E12.5)
C 
C --- IMPRESSIONS POUR LES PARAMETRES DE CONVERGENCE
C 
      WRITE (IFM,*) '<CONTACT> ... PARAMETRES DE CONVERGENCE'     
      DO 10 IZONE = 1,NZOCO
        WRITE (IFM,*) '<CONTACT> ...... ZONE : ',IZONE          
        WRITE (IFM,1020) 'STOP_SINGULIER  ',ZI(JCONV+ZCONV*(IZONE-1)+0)
        WRITE (IFM,1020) 'NB_RESOL        ',ZI(JCONV+ZCONV*(IZONE-1)+1)
        WRITE (IFM,1020) 'ITER_MULT_MAXI  ',ZI(JCONV+ZCONV*(IZONE-1)+2)
        WRITE (IFM,1020) 'STOP_INTERP     ',ZI(JCONV+ZCONV*(IZONE-1)+3)
        WRITE (IFM,1020) 'PRE_COND        ',ZI(JCONV+ZCONV*(IZONE-1)+4)
        WRITE (IFM,1020) 'RECH_LINEAIRE   ',ZI(JCONV+ZCONV*(IZONE-1)+5)
 10   CONTINUE
C
 1020 FORMAT (' <CONTACT> ...... PARAM. : ',A16,' - VAL. : ',I5)      
C 
C --- IMPRESSIONS POUR LES PARAMETRES PENALISATION/FROTTEMENT
C 
      WRITE (IFM,*) '<CONTACT> ... PARAMETRES DE PENAL./FROTTEMENT'     
      DO 50 IZONE = 1,NZOCO
        WRITE (IFM,*) '<CONTACT> ...... ZONE : ',IZONE          
        WRITE (IFM,1070) 'E_N             ',ZR(JCARF+ZCARF*(IZONE-1)+1)
        WRITE (IFM,1070) 'E_T             ',ZR(JCARF+ZCARF*(IZONE-1)+2)
        WRITE (IFM,1070) 'COULOMB         ',ZR(JCARF+ZCARF*(IZONE-1)+3)
        WRITE (IFM,1070) 'COEF_MATR_FROT  ',ZR(JCARF+ZCARF*(IZONE-1)+4)
 50   CONTINUE      
C
 1070 FORMAT (' <CONTACT> ...... PARAM. : ',A16,' - VAL. : ',E12.5)  
C
C --- INFOS COMMUNES AVEC FORMULATION CONTINUE
C
      WRITE (IFM,*) '<CONTACT> ... VECT_ORIE_POU'     
      DO 250 IZONE = 1,NZOCO
        WRITE (IFM,*) '<CONTACT> ...... ZONE : ',IZONE        
        IF (ZI(JMETH+ZMETH*(IZONE-1)+2).EQ.2) THEN  
          WRITE (IFM,1071) ZR(JPOUDI+ZPOUD*(IZONE-1)),
     &                     ZR(JPOUDI+ZPOUD*(IZONE-1)+1),
     &                     ZR(JPOUDI+ZPOUD*(IZONE-1)+2)
        ELSE
          WRITE (IFM,1072) 
        ENDIF
 250  CONTINUE 
C
      WRITE (IFM,*) '<CONTACT> ... VECT_NORM_ESCL'     
      DO 251 IZONE = 1,NZOCO
        WRITE (IFM,*) '<CONTACT> ...... ZONE : ',IZONE        
        IF (ZI(JMETH+ZMETH*(IZONE-1)+1).EQ.4) THEN  
          WRITE (IFM,1071) ZR(JDIR+3*(IZONE-1)),
     &                     ZR(JDIR+3*(IZONE-1)+1),
     &                     ZR(JDIR+3*(IZONE-1)+2)
        ELSE
          WRITE (IFM,1072) 
        ENDIF
 251  CONTINUE 
C  
      WRITE (IFM,*) '<CONTACT> ... LISSAGE'     
      DO 252 IZONE = 1,NZOCO
        WRITE (IFM,*) '<CONTACT> ...... ZONE : ',IZONE        
        IF (ZI(JNORLI+(IZONE-1)+1).EQ.0) THEN  
          WRITE (IFM,1073) 'NON        '
        ELSEIF (ZI(JNORLI+(IZONE-1)+1).EQ.1) THEN  
          WRITE (IFM,1073) 'OUI        '
        ELSE
          WRITE (IFM,1073) 'INDEFINI   ' 
          CALL ASSERT(.FALSE.)              
        ENDIF
 252  CONTINUE 
C
      WRITE (IFM,*) '<CONTACT> ... VECT_Y'     
      DO 253 IZONE = 1,NZOCO
        WRITE (IFM,*) '<CONTACT> ...... ZONE : ',IZONE        
        IF (ZI(JMETH+ZMETH*(IZONE-1)+2).EQ.1) THEN  
          WRITE (IFM,1071) ZR(JTGDEF+ZTGDE*(IZONE-1)),
     &                     ZR(JTGDEF+ZTGDE*(IZONE-1)+1),
     &                     ZR(JTGDEF+ZTGDE*(IZONE-1)+2)
        ELSE
          WRITE (IFM,1072) 
        ENDIF
 253  CONTINUE 
C 
 1071 FORMAT (' <CONTACT> ...... (X,Y,Z) : ',E12.5,E12.5,E12.5)   
 1072 FORMAT (' <CONTACT> ...... NON DEFINI')
 1073 FORMAT (' <CONTACT> ...... ',A8) 
C 
C --- IMPRESSIONS POUR LES PARAMETRES DE TOLERANCE
C
      WRITE (IFM,*) '<CONTACT> ... PARAMETRES DE TOLERANCE'     
      DO 300 IZONE = 1,NZOCO
        WRITE (IFM,*) '<CONTACT> ...... ZONE : ',IZONE          
        WRITE (IFM,1070) 'TOLE_PROJ_EXT   ',ZR(JTOLE+ZTOLE*(IZONE-1))
        WRITE (IFM,1070) 'TOLE_PROJ_INT   ',ZR(JTOLE+ZTOLE*(IZONE-1)+1)
        WRITE (IFM,1070) 'ALARME_JEU      ',ZR(JTOLE+ZTOLE*(IZONE-1)+2)
        WRITE (IFM,1070) 'TOLE_INTERP     ',ZR(JTOLE+ZTOLE*(IZONE-1)+3)
        WRITE (IFM,1070) 'RESI_ABSO       ',ZR(JTOLE+ZTOLE*(IZONE-1)+4)
        WRITE (IFM,1070) 'RESI_ITER       ',ZR(JTOLE+ZTOLE*(IZONE-1)+5)
        WRITE (IFM,1070) 'COEF_RESI       ',ZR(JTOLE+ZTOLE*(IZONE-1)+6)
 300  CONTINUE 
C     
 999  CONTINUE
      CALL JEDEMA
      END
