      SUBROUTINE CAZOCO(CHAR  ,MOTFAC,FONREE,NOMA  ,NOMO  ,
     &                  NDIM  ,NZOCO ,IZONE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 01/04/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_20
C RESPONSABLE MABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8  CHAR
      CHARACTER*16 MOTFAC
      CHARACTER*8  NOMA
      CHARACTER*8  NOMO
      CHARACTER*4  FONREE
      INTEGER      NDIM,NZOCO
      INTEGER      IZONE
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (TOUTES METHODES - LECTURE DONNEES)
C
C LECTURE DES PRINCIPALES CARACTERISTIQUES DU CONTACT (SURFACE IZONE)
C      
C ----------------------------------------------------------------------
C
C
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  MOTFAC : MOT-CLE FACTEUR (VALANT 'CONTACT')
C IN  NOMA   : NOM DU MAILLAGE
C IN  NOMO   : NOM DU MODELE
C IN  NDIM   : NOMBRE DE DIMENSIONS DU PROBLEME
C IN  NZOCO  : NOMBRE DE ZONES DE CONTACT
C IN  IZONE  : INDICE POUR LIRE LES DONNEES DANS AFFE_CHAR_MECA
C IN  FONREE : FONC OU REEL SUIVANT L'OPERATEUR
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      NOC
      CHARACTER*16 FORMUL,METHOD,GLIS
      LOGICAL      LGLIS,LMAIL
      CHARACTER*16 VALK(2)
      CHARACTER*24 FORMCO
      INTEGER      JFORM
      INTEGER      OLDFOR,NEWFOR,FORM 
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C 
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C 
      FORMCO = CHAR(1:8)//'.CONTACT.FORMCO'       
      CALL JEVEUO(FORMCO,'E',JFORM)      
C
C --- INITIALISATIONS
C
      FORMUL = ' '
      METHOD = ' '  
      LGLIS  = .FALSE.      
C
C --- RECUPERATION DE LA FORMULATION
C
      CALL GETVTX(MOTFAC,'METHODE',IZONE,1,1,METHOD,NOC) 
      IF (NOC.EQ.0) THEN
        VALK(1) = 'METHODE'
        CALL U2MESK('F','CONTACT3_2',1,VALK)      
      ENDIF
C        
      IF (METHOD(1:8) .EQ. 'PENALISA') THEN
        FORMUL = 'DISCRETE'
      ELSEIF (METHOD(1:8) .EQ. 'LAGRANGI') THEN
        FORMUL = 'DISCRETE'
      ELSEIF (METHOD(1:8) .EQ. 'CONTRAIN') THEN
        FORMUL = 'DISCRETE'
      ELSEIF (METHOD(1:8) .EQ. 'CONTINUE') THEN
        FORMUL = 'CONTINUE'
      ELSEIF (METHOD(1:3) .EQ. 'GCP') THEN
        FORMUL = 'DISCRETE'        
      ELSEIF (METHOD(1:5) .EQ. 'VERIF') THEN
        FORMUL = 'DISCRETE'        
      ELSEIF (METHOD(1:4) .EQ. 'XFEM') THEN
        FORMUL = 'XFEM'               
      ELSE
        VALK(1) = METHOD
        VALK(2) = 'METHODE'
        CALL U2MESK('F','CONTACT3_3',2,VALK) 
      END IF
C
      IF (FORMUL.EQ.'DISCRETE') THEN
        FORM   = 1
      ELSEIF (FORMUL.EQ.'CONTINUE') THEN
        FORM   = 2
      ELSEIF (FORMUL.EQ.'XFEM') THEN
        FORM   = 3
      ELSE
        VALK(1) = FORMUL
        CALL U2MESK('F','CONTACT3_1',1,VALK)
      ENDIF
      ZI(JFORM-1+IZONE) = FORM
C
C --- TEST UNICITE DE LA FORMULATION
C
      IF (IZONE .GT. 1) THEN
        OLDFOR = ZI(JFORM-1+IZONE-1)
        NEWFOR = ZI(JFORM-1+IZONE)
        IF (OLDFOR .NE. NEWFOR) THEN
          CALL U2MESS('F','XFEM2_4')
        END IF
      END IF                 
C
C --- OPTION GLISSIERE
C
      IF ((METHOD(1:8) .EQ. 'CONTRAIN').OR.
     &    (METHOD(1:8) .EQ. 'CONTINUE').OR.
     &    (METHOD(1:4) .EQ. 'XFEM'))    THEN
        CALL GETVTX(MOTFAC,'GLISSIERE',IZONE,1,1,GLIS,NOC)
        IF (GLIS(1:3) .EQ. 'OUI') THEN
          LGLIS = .TRUE.
        ELSE
          LGLIS = .FALSE.
        ENDIF
      ELSE
        LGLIS = .FALSE.      
      ENDIF  
C
C --- CREATION DES SD IDOINES 
C
      IF (IZONE.EQ.1) THEN
        CALL CFMXSD(CHAR  ,FORMUL,NZOCO)
      ENDIF    
C
C --- LECTURE PARAMETRES SPECIFIQUES FORMULATION MAILLEE
C
      LMAIL  = (FORM.EQ.1).OR.(FORM.EQ.2)               
      IF (LMAIL) THEN
        CALL CAZOCM(CHAR  ,MOTFAC,FONREE,NDIM  ,FORMUL,
     &              IZONE )
      ENDIF    
C
C --- LECTURE PARAMETRES SPECIFIQUES SUIVANT FORMULATION
C      
      IF (FORMUL.EQ.'DISCRETE') THEN
        CALL CAZOCD(CHAR  ,MOTFAC,FONREE,NOMA  ,NOMO  ,
     &              NDIM  ,METHOD,LGLIS ,IZONE )
      ELSEIF (FORMUL.EQ.'CONTINUE') THEN
        CALL CAZOCC(CHAR  ,MOTFAC,NOMA  ,NOMO  ,NDIM  ,
     &              LGLIS ,IZONE)
      ELSEIF (FORMUL.EQ.'XFEM') THEN
        CALL CAZOCX(CHAR  ,MOTFAC,LGLIS ,IZONE )
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF 

C
      CALL JEDEMA()                 
C
      END
