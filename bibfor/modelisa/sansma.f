      SUBROUTINE SANSMA(CHAR  ,MOTFAC ,NOMA  ,NZOCO ,NMACO ,
     &                  MOTGRZ,MOTZ   ,SANSMZ,PSANZ ,NUMSUR)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 23/09/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C REPONSABLE
C
      IMPLICIT      NONE
      CHARACTER*8   CHAR
      CHARACTER*16  MOTFAC
      CHARACTER*(*) MOTGRZ,MOTZ,SANSMZ,PSANZ
      CHARACTER*8   NOMA
      INTEGER       NZOCO
      INTEGER       NMACO
      INTEGER       NUMSUR
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES MAILLEES - LECTURE DONNEES)
C
C LECTURE DES MAILLES DANS LE MOT-CLEF <MOTGR/MOT> ET STOCKE DANS LA
C SD SANSMA/PSANS
C      
C ----------------------------------------------------------------------
C
C
C NB: ON ELIMINE LES NOEUDS N'APPARTENANT PAS AUX SURFACES DE CONTACT
C 
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  MOTFAC : MOT-CLE FACTEUR (VALANT 'CONTACT')
C IN  NOMA   : NOM DU MAILLAGE
C IN  NZOCO  : NOMBRE DE ZONES DE CONTACT
C IN  NMACO  : NOMBRE TOTAL DE MAILLES DES SURFACES
C IN  MOTGR  : MOT-CLEF CORRESPONDANT A LA LECTURE D'UN GROUPE DE
C              MAILLES
C IN  MOT    : MOT-CLEF CORRESPONDANT A LA LECTURE DES MAILLES
C IN  NUMSUR : NUMERO DE LA SURFACE A LAQUELLE DOIT APPARTENIR LA
C              MAILLE (NUMERO: MAITRE OU ESCLAVE, 0 SI PAS DE VERIF)
C OUT SANS   : LISTE DES MAILLES LUES DANS LES MOT-CLEFS
C OUT PSANS  : POINTEUR PAR ZONE DES MAILLES LUES DANS LES MOT-CLEFS
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*24 SANS ,PSANS,PZONE,PSURMA,CONTMA
      INTEGER      JSANS,JPSANS,JZONE,JSUMA,JMACO
      INTEGER      JDECMA,STOCMA 
      INTEGER      I,IZONE,ISURF,IMA,LTRAV
      INTEGER      NUMMA,NUELIM,IELIM
      INTEGER      NBMA,NBSURF,NBELIM,JELIM,JTRAV
      CHARACTER*16 MOTGR,MOT
      LOGICAL      LEXCL  
      CHARACTER*24 DEFICO    
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      DEFICO = CHAR(1:8)//'.CONTACT'
      MOTGR  = MOTGRZ       
      MOT    = MOTZ
      SANS   = SANSMZ
      PSANS  = PSANZ
C 
C --- ACCES AUX STRUCTURES DE DONNEES DE CONTACT
C     
      PZONE  = DEFICO(1:16)//'.PZONECO'
      PSURMA = DEFICO(1:16)//'.PSUMACO'
      CONTMA = DEFICO(1:16)//'.MAILCO'      
C
      CALL JEVEUO(PZONE ,'L',JZONE)
      CALL JEVEUO(PSURMA,'L',JSUMA)
      CALL JEVEUO(CONTMA,'L',JMACO)
C
C --- CREATION DES VECTEURS 
C
      LTRAV  = NZOCO*NMACO
      CALL WKVECT('&&SANSMA.TRAV','V V I',NMACO  ,JTRAV)
      CALL WKVECT(PSANS ,'G V I',NZOCO+1,JPSANS)
C
C --- INITIALISATIONS
C 
      ZI(JPSANS) = 0     
      STOCMA     = 0 
C
      DO 70 IZONE = 1,NZOCO
C
C --- LECTURE DES MAILLES DONNEES SOUS SANS_MAILLE OU SANS_GROUP_MA
C 
        CALL PALIMA(NOMA,MOTFAC,MOTGR,MOT,IZONE,
     &              '&&SANSMA.SANSMA')
        CALL JEVEUO('&&SANSMA.SANSMA','E',JELIM)
C
C --- NOMBRE DE MAILLE A ELIMINER POUR LA ZONE
C         
        NBELIM = ZI(JELIM)
C
C --- ACCES A LA SURFACE DE CONTACT
C        
        NBSURF = ZI(JZONE+IZONE) - ZI(JZONE+IZONE-1)
        IF (NUMSUR.GT.NBSURF) THEN
          CALL ASSERT(.FALSE.)      
        ENDIF         
        ISURF  = NBSURF*(IZONE-1)+NUMSUR              
C
C --- VERIF SI MAILLE APPARTIENT A SURFACES DE CONTACT
C  
        IF (NUMSUR.NE.0) THEN
          NBMA   = ZI(JSUMA+ISURF) - ZI(JSUMA+ISURF-1)
          JDECMA = ZI(JSUMA+ISURF-1)         
          DO 50 IELIM = 1, NBELIM
            LEXCL  = .TRUE.
            NUELIM = ZI(JELIM+2*(IELIM-1)+1)
            DO 40 IMA = 1,NBMA          
              NUMMA  = ZI(JMACO+JDECMA+IMA-1)
              IF (NUMMA .EQ.NUELIM) THEN
                LEXCL = .FALSE.
                GOTO 45
              ENDIF         
   40       CONTINUE  
   45       CONTINUE
            IF (LEXCL) THEN
              ZI(JELIM+2*(IELIM-1)+1) = 0
              NBELIM = NBELIM - 1           
            ENDIF         
   50     CONTINUE
        ENDIF  
C
C --- NOMBRE DE MAILLES A ELIMINER POUR LA ZONE APRES FILTRAGE
C
        IF (NBELIM.LT.0) THEN
          CALL ASSERT(.FALSE.)
        ENDIF     
C
C --- MISE A JOUR POINTEUR
C
        ZI(JPSANS+IZONE) = ZI(JPSANS+IZONE-1) + NBELIM 
C
C --- MISE A JOUR SD
C
        DO 100 IELIM = 1,NBELIM
          NUELIM = ZI(JELIM+2*(IELIM-1)+1)
          IF (NUELIM.NE.0) THEN
            ZI(JTRAV+STOCMA+IELIM-1) = NUELIM 
          ENDIF               
  100   CONTINUE 
C
        STOCMA = STOCMA + NBELIM    
        IF (STOCMA.GT.LTRAV) CALL ASSERT(.FALSE.)
C       
  70  CONTINUE
C
C --- CREATION DU VECTEUR
C  
      IF (STOCMA.EQ.0) THEN 
        CALL WKVECT(SANS ,'G V I',1       ,JSANS)
      ELSE
        CALL WKVECT(SANS ,'G V I',STOCMA  ,JSANS) 
C
C --- TRANSFERT DU VECTEUR
C
        DO 170 I = 1,STOCMA
          ZI(JSANS+I-1) = ZI(JTRAV+I-1)
          IF (ZI(JTRAV+I-1).EQ.0) CALL ASSERT(.FALSE.)
  170   CONTINUE
      ENDIF      
C
C --- DESTRUCTION DES VECTEURS DE TRAVAIL TEMPORAIRES
C
      CALL JEDETR('&&SANSMA.SANSMA')
      CALL JEDETR('&&SANSMA.TRAV'  )
C
      CALL JEDEMA()  
      END
