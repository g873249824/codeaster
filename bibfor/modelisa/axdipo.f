      SUBROUTINE AXDIPO(NOMA,CAELEM,MODELE,IAXE)
      IMPLICIT NONE
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 03/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C-----------------------------------------------------------------------
C     DETERMINATION DE L'AXE DIRECTEUR D'UNE POUTRE DROITE
C     APPELANT : SPECFF
C-----------------------------------------------------------------------
C IN  : NOMA   : NOM DU CONCEPT MAILLAGE
C IN  : CAELEM : NOM DU CONCEPT CARA_ELEM
C IN  : MODELE : NOM DU CONCEPT MODELE
C OUT : IAXE   : ENTIER DEFINISSANT L'AXE DIRECTEUR
C       IAXE = 1 L'AXE DIRECTEUR EST L'AXE DES X DU REPERE GLOBAL
C       IAXE = 2 L'AXE DIRECTEUR EST L'AXE DES Y DU REPERE GLOBAL
C       IAXE = 3 L'AXE DIRECTEUR EST L'AXE DES Z DU REPERE GLOBAL
C
C
      INCLUDE 'jeveux.h'
      CHARACTER*8  NOMA,CAELEM,MODELE
      INTEGER      IAXE
C
C-----------------------------------------------------------------------
      INTEGER IALPHA ,IANGL ,IAS ,IASMAX ,IAXE2 ,IBETA ,ICAORI 
      INTEGER ICMP ,ICODE ,IDESC ,IEXCAR ,IGAMMA ,IOK ,IPBL 
      INTEGER IPTMA ,IRANA ,IRANB ,IRANG ,IRET ,ITABL ,ITEL 
      INTEGER IVALE ,IXNW ,JDME ,NBEC ,NBMAIL ,NBMTRD ,NBTEL 
      INTEGER NBTEL1 ,NCMPOR ,NTROUV ,NUMMAI ,NUTYEL 
      REAL*8 ALPHA ,ALPHA2 ,BETA ,BETA2 ,COSA ,COSA2 ,COSB 
      REAL*8 COSB2 ,COSG ,COSG2 ,DIF1 ,DIF2 ,DIF3 ,DIFE1 
      REAL*8 DIFE2 ,DIFE3 ,GAMMA ,GAMMA2 ,R8PREM ,SINA ,SINA2 
      REAL*8 SINB ,SINB2 ,SING ,SING2 ,TOL 
C-----------------------------------------------------------------------
      PARAMETER   (NBTEL=9)
      PARAMETER   (NBTEL1=7)
      INTEGER      NTYELE(NBTEL),POBALI
      REAL*8       VDL(3),VDG(3)
      CHARACTER*1  K1BID
      CHARACTER*3  K3BID
      CHARACTER*8  K8BID,NOMCMP(3)
      CHARACTER*16 NOMELE(NBTEL)
      CHARACTER*19 CARTE, LIGRMO
      CHARACTER*24 MODMAI,MODNEM,CADESC,CAPTMA,CAVALE
C
      DATA NOMCMP/'ALPHA   ','BETA    ','GAMMA   '/
C
      DATA NOMELE/'MECA_POU_D_T    ','MECA_POU_D_E    ',
     &            'MECA_POU_D_T_GD ','MECA_POU_D_TG   ',
     &            'MECA_BARRE      ',
     &            'MECA_DIS_T_L    ','MECA_DIS_TR_L   ',
     &            'MECA_DIS_T_N    ','MECA_DIS_TR_N   '/
C
C-----------------------------------------------------------------------
      CALL JEMARQ()
      TOL = 1.0D+08 * R8PREM()
C
C-----1.RECUPERATION DU NOMBRE DE MAILLES
C
      CALL JELIRA(NOMA//'.NOMMAI','NOMUTI',NBMAIL,K1BID)
C
C-----2.RECUPERATION DE LA MODELISATION DES MAILLES
C       VERIFICATION : PAS DE MAILLES TARDIVES
C
      MODMAI = MODELE//'.MAILLE'
      CALL JEVEUO(MODMAI,'L',JDME)
C
      LIGRMO = MODELE//'.MODELE    '
      MODNEM = LIGRMO//'.NEMA'
      NBMTRD = 0
      CALL JEEXIN(MODNEM,IXNW)
      IF (IXNW.NE.0) CALL JELIRA(MODNEM,'NMAXOC',NBMTRD,K1BID)
      IF (NBMTRD.NE.0)
     &  CALL U2MESS('F','MODELISA2_23')
C
C-----3.RECUPERATION DE LA CARTE D'ORIENTATION DES ELEMENTS
C
      CARTE = CAELEM//'.CARORIEN  '
C
      CADESC = CARTE//'.DESC'
      CALL JEEXIN(CADESC,IEXCAR)
      IF (IEXCAR.EQ.0)
     &  CALL U2MESS('F','MODELISA2_24')
      CALL JEVEUO(CADESC,'L',IDESC)
C
      IASMAX = ZI(IDESC+1)
C
C.....DETERMINATION DES RANGS DES COMPOSANTES <ALPHA> , <BETA> ET
C.....<GAMMA> DE LA GRANDEUR <CAORIE>
C
      CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP','CAORIE'),'LONMAX',
     &            NCMPOR,K1BID)
      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP','CAORIE'),'L',ICAORI)
      IALPHA = 0
      IBETA  = 0
      IGAMMA = 0
      NTROUV = 0
      DO 10 ICMP = 1,NCMPOR
        IF (ZK8(ICAORI+ICMP-1).EQ.NOMCMP(1)) THEN
          IALPHA = ICMP
          NTROUV = NTROUV + 1
        ELSE IF (ZK8(ICAORI+ICMP-1).EQ.NOMCMP(2)) THEN
          IBETA  = ICMP
          NTROUV = NTROUV + 1
        ELSE IF (ZK8(ICAORI+ICMP-1).EQ.NOMCMP(3)) THEN
          IGAMMA = ICMP
          NTROUV = NTROUV + 1
        ENDIF
        IF (NTROUV.EQ.3) GO TO 11
  10  CONTINUE
  11  CONTINUE
      IF (NTROUV.LT.3)
     &  CALL U2MESS('F','MODELISA2_25')
C
      CALL WKVECT('&&AXDIPO.TEMP.TABL','V V I',NCMPOR,ITABL)
      CALL DISMOI('F','NB_EC','CAORIE','GRANDEUR',NBEC,K8BID,IRET)
C
      CAVALE = CARTE//'.VALE'
      CALL JEVEUO(CAVALE,'L',IVALE)
C
C.....EXTENSION DE LA CARTE D'ORIENTATION DES ELEMENTS : CREATION DE
C.....VECTEURS D'ADRESSES DES CARACTERISTIQUES POINTES PAR LE NUMERO
C.....DE MAILLE
C
      CALL ETENCA(CARTE,LIGRMO,IRET)
      IF (IRET.NE.0)
     &  CALL U2MESK('F','MODELISA2_26',1,CARTE)
C
      CAPTMA = CARTE//'.PTMA'
      CALL JEVEUO(CAPTMA,'L',IPTMA)
C
C-----4.RECUPERATION DES NUMEROS DES TYPES ELEMENTS ADMISSIBLES
C
      DO 20 ITEL = 1,NBTEL
        CALL JENONU(JEXNOM('&CATA.TE.NOMTE',NOMELE(ITEL)),NTYELE(ITEL))
  20  CONTINUE
C
C-----5.RECUPERATION DES 3 ANGLES NAUTIQUES POUR TOUS LES ELEMENTS DE
C       LA STRUCTURE DE TYPE :
C              - ELEMENTS DE POUTRE DROITE
C              - ELEMENTS DE BARRE
C              - ELEMENTS DISCRETS DE LIAISON
C       AU PASSAGE ON VERIFIE QUE TOUS LES ELEMENTS SONT D'UN TYPE
C       ADMISSIBLE
C
      CALL WKVECT('&&AXDIPO.TEMP.ANGL','V V R',3*NBMAIL,IANGL)
      POBALI = 0
C
      DO 30 NUMMAI = 1,NBMAIL
C
        NUTYEL = ZI(JDME+NUMMAI-1)
        IOK = 0
        DO 31 ITEL = 1,NBTEL
          IF (NUTYEL.EQ.NTYELE(ITEL)) THEN
            IOK = 1
            GOTO 32
          ENDIF
  31    CONTINUE
  32    CONTINUE
        IF (IOK.EQ.0)
     &    CALL U2MESS('F','MODELISA2_27')
C
        IF (ITEL.LE.NBTEL1) THEN
          IAS = ZI(IPTMA+NUMMAI-1)
          IF (IAS.EQ.0) THEN
            WRITE(K3BID,'(I3)') NUMMAI
            CALL U2MESK('F','MODELISA2_28',1,K3BID)
          ENDIF
          ICODE = ZI(IDESC+3+2*IASMAX+NBEC*(IAS-1))
          CALL DEC2PN(ICODE,ZI(ITABL),NCMPOR)
          IF ((ZI(ITABL+IALPHA-1).EQ.1).AND.
     &        (ZI(ITABL+IBETA -1).EQ.1).AND.
     &        (ZI(ITABL+IGAMMA-1).EQ.1)) THEN
            POBALI = POBALI + 1
            IRANA = 0
            DO 41 ICMP = 1,IALPHA
              IF (ZI(ITABL+ICMP-1).EQ.1) IRANA = IRANA + 1
  41        CONTINUE
            IRANB = 0
            DO 42 ICMP = 1,IBETA
              IF (ZI(ITABL+ICMP-1).EQ.1) IRANB = IRANB + 1
  42        CONTINUE
            IRANG = 0
            DO 43 ICMP = 1,IGAMMA
              IF (ZI(ITABL+ICMP-1).EQ.1) IRANG = IRANG + 1
  43        CONTINUE
            ZR(IANGL+3*(POBALI-1)  ) = ZR(IVALE+NCMPOR*(IAS-1)+IRANA-1)
            ZR(IANGL+3*(POBALI-1)+1) = ZR(IVALE+NCMPOR*(IAS-1)+IRANB-1)
            ZR(IANGL+3*(POBALI-1)+2) = ZR(IVALE+NCMPOR*(IAS-1)+IRANG-1)
          ELSE
            WRITE(K3BID,'(I3)') NUMMAI
            CALL U2MESK('F','MODELISA2_29',1,K3BID)
          ENDIF
        ENDIF
C
  30  CONTINUE
C
      IF (POBALI.EQ.0)
     &  CALL U2MESS('F','MODELISA2_30')
C
C-----6.DETERMINATION DE L'AXE DIRECTEUR DE LA POUTRE A L'AIDE DES
C-----  ANGLES NAUTIQUES DU PREMIER ELEMENT ORIENTE
C-----  AFFECTATION DE IAXE
C
      VDL(1) = 1.D0
      VDL(2) = 0.D0
      VDL(3) = 0.D0
C
      ALPHA = ZR(IANGL)
      BETA  = ZR(IANGL+1)
      GAMMA = ZR(IANGL+2)
C
      SINA = SIN(ALPHA)
      COSA = COS(ALPHA)
      SINB = SIN(BETA)
      COSB = COS(BETA)
      SING = SIN(GAMMA)
      COSG = COS(GAMMA)
      CALL LOCGLO(VDL,SINA,COSA,SINB,COSB,SING,COSG,VDG)
C
      VDG(1) = ABS(VDG(1))
      VDG(2) = ABS(VDG(2))
      VDG(3) = ABS(VDG(3))
      DIF1 = DBLE(ABS(VDG(1) - 1.D0))
      DIF2 = DBLE(ABS(VDG(2) - 1.D0))
      DIF3 = DBLE(ABS(VDG(3) - 1.D0))
C
      IAXE = 0
      IF (DIF1.LT.TOL .AND. VDG(2).LT.TOL .AND. VDG(3).LT.TOL) THEN
        IAXE = 1
      ELSE IF (DIF2.LT.TOL .AND. VDG(1).LT.TOL .AND. VDG(3).LT.TOL) THEN
        IAXE = 2
      ELSE IF (DIF3.LT.TOL .AND. VDG(1).LT.TOL .AND. VDG(2).LT.TOL) THEN
        IAXE = 3
      ENDIF
      IF (IAXE.EQ.0)
     &  CALL U2MESS('F','MODELISA2_31')
C
C-----7.ON VERIFIE QUE LES ORIENTATIONS DES AUTRES ELEMENTS DEFINISSENT
C-----  LE MEME AXE DIRECTEUR
C
      IF (POBALI.GT.1) THEN
        DO 50 IPBL = 2,POBALI
          ALPHA2 = ZR(IANGL+3*(IPBL-1))
          BETA2  = ZR(IANGL+3*(IPBL-1)+1)
          GAMMA2 = ZR(IANGL+3*(IPBL-1)+2)
          DIF1 = DBLE(ABS(ALPHA2 - ALPHA))
          DIF2 = DBLE(ABS(BETA2  - BETA ))
          DIF3 = DBLE(ABS(GAMMA2 - GAMMA))
          IF (DIF1.GT.TOL .OR. DIF2.GT.TOL .OR. DIF3.GT.TOL) THEN
            SINA2 = SIN(ALPHA2)
            COSA2 = COS(ALPHA2)
            SINB2 = SIN(BETA2)
            COSB2 = COS(BETA2)
            SING2 = SIN(GAMMA2)
            COSG2 = COS(GAMMA2)
            CALL LOCGLO(VDL,SINA2,COSA2,SINB2,COSB2,SING2,COSG2,VDG)
            VDG(1) = ABS(VDG(1))
            VDG(2) = ABS(VDG(2))
            VDG(3) = ABS(VDG(3))
            DIFE1 = DBLE(ABS(VDG(1) - 1.D0))
            DIFE2 = DBLE(ABS(VDG(2) - 1.D0))
            DIFE3 = DBLE(ABS(VDG(3) - 1.D0))
            IAXE2 = 0
            IF (DIFE1.LT.TOL .AND. VDG(2).LT.TOL
     &                       .AND. VDG(3).LT.TOL) THEN
              IAXE2 = 1
            ELSE IF (DIFE2.LT.TOL .AND. VDG(1).LT.TOL
     &                            .AND. VDG(3).LT.TOL) THEN
              IAXE2 = 2
            ELSE IF (DIFE3.LT.TOL .AND. VDG(1).LT.TOL
     &                            .AND. VDG(2).LT.TOL) THEN
              IAXE2 = 3
            ENDIF
            IF (IAXE2.NE.IAXE)
     &        CALL U2MESS('F','MODELISA2_32')
          ENDIF
  50    CONTINUE
      ENDIF
C
      CALL JEDETC('V','&&AXDIPO',1)
      CALL JEDETC('V',CARTE,1)
      CALL JEDEMA()
      END
