      SUBROUTINE AXDIPO(NOMA,CAELEM,MODELE,IAXE)
      IMPLICIT NONE
      INTEGER      IAXE
      CHARACTER*8  NOMA,CAELEM,MODELE
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 14/01/2013   AUTEUR FLEJOU J-L.FLEJOU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C-----------------------------------------------------------------------
C     DETERMINATION DE L'AXE DIRECTEUR D'UNE POUTRE DROITE
C     APPELANT : SPECFF
C-----------------------------------------------------------------------
C IN  : NOMA   : NOM DU CONCEPT MAILLAGE
C IN  : CAELEM : NOM DU CONCEPT CARA_ELEM
C IN  : MODELE : NOM DU CONCEPT MODELE
C OUT : IAXE   : ENTIER DEFINISSANT L'AXE DIRECTEUR
C       IAXE = 1 L'AXE DIRECTEUR EST L'AXE DES X DU REPERE GLOBAL
C       IAXE = 2 L'AXE DIRECTEUR EST L'AXE DES Y DU REPERE GLOBAL
C       IAXE = 3 L'AXE DIRECTEUR EST L'AXE DES Z DU REPERE GLOBAL
C
C
      INCLUDE 'jeveux.h'
      CHARACTER*32 JEXNOM
C
C-----------------------------------------------------------------------
      INTEGER        NBTEL,  NBTEL1
      PARAMETER     (NBTEL=9,NBTEL1=7)
C
      INTEGER        IALPHA,IANGL,IAS,IASMAX,IAXE2,IBETA,ICAORI
      INTEGER        ICMP,ICODE,IDESC,IEXCAR,IGAMMA,ITELOK,IPBL
      INTEGER        IPTMA,IRANA,IRANB,IRANG,IRET,ITEL
      INTEGER        IVALE,IXNW,JDME,NBEC,NBMAIL,NBMTRD,INDIK8
      INTEGER        NCMPOR,NUMMAI,NUTYEL,POBALI,IAUX1
      INTEGER        NTYELE(NBTEL)
C
      LOGICAL        NTROUV,EXISDG
C
      REAL*8         ALPHA,ALPHA2,BETA,BETA2,COSA,COSA2,COSB
      REAL*8         COSB2,COSG,COSG2,DIF1,DIF2,DIF3,DIFE1
      REAL*8         DIFE2,DIFE3,GAMMA,GAMMA2,R8PREM,SINA,SINA2
      REAL*8         SINB,SINB2,SING,SING2,TOL
      REAL*8         VDL(3),VDG(3)
C-----------------------------------------------------------------------
      CHARACTER*1    K1BID
      CHARACTER*8    K8BID,NOMCMP(3)
      CHARACTER*16   NOMELE(NBTEL)
      CHARACTER*19   CARTE, LIGRMO
      CHARACTER*24   MODMAI,MODNEM,CADESC,CAPTMA,CAVALE
      CHARACTER*32   KEXNOM
C
      DATA NOMCMP/'ALPHA   ','BETA    ','GAMMA   '/
C
      DATA NOMELE/'MECA_POU_D_T    ','MECA_POU_D_E    ',
     &            'MECA_POU_D_T_GD ','MECA_POU_D_TG   ',
     &            'MECA_BARRE      ',
     &            'MECA_DIS_T_L    ','MECA_DIS_TR_L   ',
     &            'MECA_DIS_T_N    ','MECA_DIS_TR_N   '/
C
C-----------------------------------------------------------------------
      CALL JEMARQ()
      TOL = 1.0D+08 * R8PREM()
C
C     RECUPERATION DU NOMBRE DE MAILLES
      CALL JELIRA(NOMA//'.NOMMAI','NOMUTI',NBMAIL,K1BID)
C
C     RECUPERATION DE LA MODELISATION DES MAILLES
C     VERIFICATION : PAS DE MAILLES TARDIVES
      MODMAI = MODELE//'.MAILLE'
      CALL JEVEUO(MODMAI,'L',JDME)
C
      LIGRMO = MODELE//'.MODELE    '
      MODNEM = LIGRMO//'.NEMA'
      NBMTRD = 0
      CALL JEEXIN(MODNEM,IXNW)
      IF (IXNW.NE.0) CALL JELIRA(MODNEM,'NMAXOC',NBMTRD,K1BID)
      IF (NBMTRD.NE.0) CALL U2MESS('F','MODELISA2_23')
C
C     RECUPERATION DE LA CARTE D'ORIENTATION DES ELEMENTS
      CARTE  = CAELEM//'.CARORIEN  '
      CADESC = CARTE//'.DESC'
      CAVALE = CARTE//'.VALE'
      CALL JEEXIN(CADESC,IEXCAR)
      IF (IEXCAR.EQ.0) CALL U2MESS('F','MODELISA2_24')
C
      CALL JEVEUO(CADESC,'L',IDESC)
      CALL JEVEUO(CAVALE,'L',IVALE)
C
      IASMAX = ZI(IDESC+1)
C
C    DETERMINATION DES RANGS DES COMPOSANTES DE LA GRANDEUR <CAORIE>
C        <ALPHA>  <BETA>  <GAMMA>
      KEXNOM = JEXNOM('&CATA.GD.NOMCMP','CAORIE')
      CALL JELIRA( KEXNOM ,'LONMAX', NCMPOR,K1BID)
      CALL JEVEUO( KEXNOM ,'L',ICAORI)
      IALPHA = 0
      IBETA  = 0
      IGAMMA = 0
      IALPHA = INDIK8( ZK8(ICAORI) , NOMCMP(1) , 1 , NCMPOR )
      IBETA  = INDIK8( ZK8(ICAORI) , NOMCMP(2) , 1 , NCMPOR )
      IGAMMA = INDIK8( ZK8(ICAORI) , NOMCMP(3) , 1 , NCMPOR )
      NTROUV = (IALPHA.EQ.0).OR.(IBETA.EQ.0).OR.(IGAMMA.EQ.0)
      IF ( NTROUV ) CALL U2MESS('F','MODELISA2_25')
C     NOMBRE D'ENTIERS CODES DANS LA CARTE
      CALL DISMOI('F','NB_EC','CAORIE','GRANDEUR',NBEC,K8BID,IRET)
C
C     EXTENSION DE LA CARTE D'ORIENTATION DES ELEMENTS : CREATION DE
C     VECTEURS D'ADRESSES DES CARACTERISTIQUES POINTES PAR LE NUMERO
C     DE MAILLE
      CALL ETENCA(CARTE,LIGRMO,IRET)
      IF (IRET.NE.0) CALL U2MESK('F','MODELISA2_26',1,CARTE)
C
      CAPTMA = CARTE//'.PTMA'
      CALL JEVEUO(CAPTMA,'L',IPTMA)
C
C     RECUPERATION DES NUMEROS DES TYPES ELEMENTS ADMISSIBLES
      DO 20 ITEL = 1,NBTEL
         CALL JENONU(JEXNOM('&CATA.TE.NOMTE',NOMELE(ITEL)),NTYELE(ITEL))
  20  CONTINUE
C
C     RECUPERATION DES 3 ANGLES NAUTIQUES POUR TOUS LES ELEMENTS DE
C     LA STRUCTURE DE TYPE :
C              - ELEMENTS DE POUTRE DROITE
C              - ELEMENTS DE BARRE
C              - ELEMENTS DISCRETS DE LIAISON
C     AU PASSAGE ON VERIFIE QUE TOUS LES ELEMENTS SONT D'UN TYPE
C     ADMISSIBLE
      CALL WKVECT('&&AXDIPO.TEMP.ANGL','V V R',3*NBMAIL,IANGL)
      POBALI = 0
C
      DO 30 NUMMAI = 1,NBMAIL
         NUTYEL = ZI(JDME+NUMMAI-1)
         ITELOK = 0
         DO 31 ITEL = 1,NBTEL
            IF (NUTYEL.EQ.NTYELE(ITEL)) THEN
               ITELOK = ITEL
               GOTO 32
            ENDIF
31       CONTINUE
         CALL U2MESS('F','MODELISA2_27')
32       CONTINUE
C
        IF (ITELOK.LE.NBTEL1) THEN
            IAS = ZI(IPTMA+NUMMAI-1)
            IF (IAS.EQ.0) CALL U2MESI('F','MODELISA2_28',1,NUMMAI)
C
            ICODE = ZI(IDESC-1+3+2*IASMAX+NBEC*(IAS-1)+1)
            IRANA = 0
            DO 41 ICMP = 1,IALPHA
               IF ( EXISDG(ICODE,ICMP) ) IRANA = IRANA + 1
41          CONTINUE
            IRANB = 0
            DO 42 ICMP = 1,IBETA
               IF ( EXISDG(ICODE,ICMP) ) IRANB = IRANB + 1
42          CONTINUE
            IRANG = 0
            DO 43 ICMP = 1,IGAMMA
               IF ( EXISDG(ICODE,ICMP) ) IRANG = IRANG + 1
43          CONTINUE
            NTROUV = (IRANA.EQ.0).OR.(IRANB.EQ.0).OR.(IRANG.EQ.0)
            IF ( NTROUV ) THEN
               CALL U2MESI('F','MODELISA2_29',1,NUMMAI)
            ELSE
               POBALI = POBALI + 1
               IAUX1  = IVALE+NCMPOR*(IAS-1)
               ZR(IANGL+3*(POBALI-1)  ) = ZR(IAUX1+IRANA-1)
               ZR(IANGL+3*(POBALI-1)+1) = ZR(IAUX1+IRANB-1)
               ZR(IANGL+3*(POBALI-1)+2) = ZR(IAUX1+IRANG-1)
            ENDIF
        ENDIF
C
  30  CONTINUE
      IF (POBALI.EQ.0) CALL U2MESS('F','MODELISA2_30')
C
C     DETERMINATION DE L'AXE DIRECTEUR DE LA POUTRE A L'AIDE DES
C     ANGLES NAUTIQUES DU PREMIER ELEMENT ORIENTE : AFFECTATION DE IAXE
      VDL(1) = 1.D0
      VDL(2) = 0.D0
      VDL(3) = 0.D0
C
      ALPHA = ZR(IANGL)
      BETA  = ZR(IANGL+1)
      GAMMA = ZR(IANGL+2)
C
      SINA = SIN(ALPHA)
      COSA = COS(ALPHA)
      SINB = SIN(BETA)
      COSB = COS(BETA)
      SING = SIN(GAMMA)
      COSG = COS(GAMMA)
      CALL LOCGLO(VDL,SINA,COSA,SINB,COSB,SING,COSG,VDG)
C
      VDG(1) = ABS(VDG(1))
      VDG(2) = ABS(VDG(2))
      VDG(3) = ABS(VDG(3))
      DIF1 = DBLE(ABS(VDG(1) - 1.D0))
      DIF2 = DBLE(ABS(VDG(2) - 1.D0))
      DIF3 = DBLE(ABS(VDG(3) - 1.D0))
C
      IAXE = 0
      IF (DIF1.LT.TOL .AND. VDG(2).LT.TOL .AND. VDG(3).LT.TOL) THEN
         IAXE = 1
      ELSE IF (DIF2.LT.TOL .AND. VDG(1).LT.TOL .AND. VDG(3).LT.TOL) THEN
         IAXE = 2
      ELSE IF (DIF3.LT.TOL .AND. VDG(1).LT.TOL .AND. VDG(2).LT.TOL) THEN
         IAXE = 3
      ENDIF
      IF (IAXE.EQ.0) CALL U2MESS('F','MODELISA2_31')
C
C     ON VERIFIE QUE LES ORIENTATIONS DES AUTRES ELEMENTS DEFINISSENT
C     LE MEME AXE DIRECTEUR
      IF (POBALI.GT.1) THEN
         DO 50 IPBL = 2,POBALI
            ALPHA2 = ZR(IANGL+3*(IPBL-1))
            BETA2  = ZR(IANGL+3*(IPBL-1)+1)
            GAMMA2 = ZR(IANGL+3*(IPBL-1)+2)
            DIF1 = DBLE(ABS(ALPHA2 - ALPHA))
            DIF2 = DBLE(ABS(BETA2  - BETA ))
            DIF3 = DBLE(ABS(GAMMA2 - GAMMA))
            IF (DIF1.GT.TOL .OR. DIF2.GT.TOL .OR. DIF3.GT.TOL) THEN
               SINA2 = SIN(ALPHA2)
               COSA2 = COS(ALPHA2)
               SINB2 = SIN(BETA2)
               COSB2 = COS(BETA2)
               SING2 = SIN(GAMMA2)
               COSG2 = COS(GAMMA2)
               CALL LOCGLO(VDL,SINA2,COSA2,SINB2,COSB2,SING2,COSG2,VDG)
               VDG(1) = ABS(VDG(1))
               VDG(2) = ABS(VDG(2))
               VDG(3) = ABS(VDG(3))
               DIFE1 = DBLE(ABS(VDG(1) - 1.D0))
               DIFE2 = DBLE(ABS(VDG(2) - 1.D0))
               DIFE3 = DBLE(ABS(VDG(3) - 1.D0))
               IAXE2 = 0
               IF      (DIFE1.LT.TOL   .AND. VDG(2).LT.TOL
     &                                 .AND. VDG(3).LT.TOL) THEN
                  IAXE2 = 1
               ELSE IF (DIFE2.LT.TOL   .AND. VDG(1).LT.TOL
     &                                 .AND. VDG(3).LT.TOL) THEN
                  IAXE2 = 2
               ELSE IF (DIFE3.LT.TOL   .AND. VDG(1).LT.TOL
     &                                 .AND. VDG(2).LT.TOL) THEN
                  IAXE2 = 3
               ENDIF
               IF (IAXE2.NE.IAXE) CALL U2MESS('F','MODELISA2_32')
            ENDIF
50       CONTINUE
      ENDIF
C
      CALL JEDETR('&&AXDIPO.TEMP.ANGL')
      CALL JEDETC('V',CARTE,1)
C
      CALL JEDEMA()
      END
