      SUBROUTINE OP0101()
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 30/06/2010   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C      OPERATEUR :     AFFE_CHAR_CINE
C
C      MOTS-CLES ACTUELLEMENT TRAITES:   MECA_IMPO
C                                        THER_IMPO
C                                        ACOU_IMPO
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      INTEGER       IOCMI, IOCTI, IOCAI, N1, ITYPE, JAFCK
      CHARACTER*8   CHCINE, MO, K8B,PHENO,EVOIM
      CHARACTER*16  TYPE, OPER
      CHARACTER*19  CHCI19
      LOGICAL CINEF
C
C ======================================================================
C --- DEBUT
C
      CALL JEMARQ()
C
      CALL INFMAJ

C --- RECUPERATION DU RESULTAT
      CALL GETRES (CHCINE,TYPE,OPER)
      CHCI19=CHCINE
      CALL ASSERT(TYPE(1:9).EQ.'CHAR_CINE')
      PHENO=TYPE(11:14)
      CINEF=(OPER(15:16).EQ.'_F')

C --- RECUPERATION DU MODELE :
      CALL GETVID ( ' ', 'MODELE', 1,1,1, MO, N1 )

C --- CREATION DU .AFCK:
      CALL WKVECT (CHCI19//'.AFCK','G V K8',3,JAFCK)
      ZK8(JAFCK-1+2)=MO

      IF (OPER.EQ.'AFFE_CHAR_CINE') THEN
        CALL GETVID(' ','EVOL_IMPO',1,1,1,EVOIM,N1)
        IF (N1.EQ.1) ZK8(JAFCK-1+3)=EVOIM
      ENDIF


C     REMARQUE :
C      - ON AFFECTE UN 'TYPE' A LA CHARGE CINEMATIQUE (ACFK(2))
C        MAIS ON LE MODIFIE PARFOIS DANS CHARCI.
C        PARFOIS :  '_RE' -> '_FT'  (EVOL_IMPO)

      IF (PHENO.EQ.'MECA') THEN
         IF (.NOT.CINEF) THEN
           ZK8(JAFCK-1+1)='CIME_RE'
           CALL CHARCI(CHCINE,'MECA_IMPO',MO,'R')
         ELSE
           ZK8(JAFCK-1+1)='CIME_FT'
           CALL CHARCI(CHCINE,'MECA_IMPO',MO,'F')
         ENDIF
      ELSE IF (PHENO.EQ.'THER') THEN
         IF (.NOT.CINEF) THEN
           ZK8(JAFCK-1+1)='CITH_RE'
           CALL CHARCI(CHCINE,'THER_IMPO',MO,'R')
         ELSE
           ZK8(JAFCK-1+1)='CITH_FT'
           CALL CHARCI(CHCINE,'THER_IMPO',MO,'F')
         ENDIF
      ELSE IF (PHENO.EQ.'ACOU') THEN
         CALL ASSERT (.NOT.CINEF)
         ZK8(JAFCK-1+1)='CIAC_CX'
         CALL CHARCI(CHCINE,'ACOU_IMPO',MO,'C')
      ELSE
         CALL ASSERT(.FALSE.)
      ENDIF




      CALL JEDEMA()
      END
