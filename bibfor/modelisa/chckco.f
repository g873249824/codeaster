      SUBROUTINE CHCKCO(CHAR  ,NOMA  ,NDIMG ,IFORM )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF MODELISA  DATE 23/01/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      CHARACTER*8  CHAR,NOMA
      INTEGER      NDIMG,IFORM
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES MAILLEES - LECTURE DONNEES)
C
C VERIFICATION DES TANGENTES/NORMALES
C
C ----------------------------------------------------------------------
C
C
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  NOMA   : NOM DU MAILLAGE
C IN  NDIMG  : NOMBRE DE DIMENSIONS DU PROBLEME
C IN  IFORM  : TYPE DE FORMULATION (DISCRETE/CONTINUE/XFEM)
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32 JEXNUM
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX ----------------
C
      CHARACTER*24 DEFICO
      INTEGER      INO,POSNO,IZONE
      INTEGER      IMA,POSMA,NUMMA
      INTEGER      NDIM,NNOMA
      INTEGER      POSNNO(9),NUMNNO(9)
      LOGICAL      CFCALD
      CHARACTER*4  TYPNO,TYPMA
      CHARACTER*8  ALIAS,NOMMA
      LOGICAL      MMINFL,LFFISS,LPOUTR,LPOINT
      INTEGER      MMINFI,ITYPE
      INTEGER      CFDISI,NNOCO,NMACO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      DEFICO = CHAR(1:8)//'.CONTACT'
      NNOCO  = CFDISI(DEFICO,'NNOCO')
      NMACO  = CFDISI(DEFICO,'NMACO')
C
C --- BOUCLE SUR LES MAILLES
C
      DO 20 IMA = 1,NMACO
        POSMA  = IMA
C
C ----- NUMERO ABSOLU DE LA MAILLE
C
        CALL CFNUMM(DEFICO,1     ,POSMA ,NUMMA )
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NUMMA ),NOMMA )
C
C ----- TYPE DE LA MAILLE
C
        CALL CFTYPM(DEFICO,POSMA ,TYPMA )
C
C ----- INDICES DANS CONTNO DES NOEUDS DE LA MAILLE
C
        CALL CFPOSN(DEFICO,POSMA ,POSNNO,NNOMA )
C
C ----- INDICES ABSOLUS DANS LE MAILLAGE DES NOEUDS DE LA MAILLE
C
        CALL CFNUMN(DEFICO,NNOMA ,POSNNO,NUMNNO)
C
C ----- TYPE DE LA MAILLE
C
        CALL MMTYPM(NOMA  ,NUMMA ,NNOMA ,ALIAS ,NDIM  )
C
C ----- TYPE DE MAILLE
C
        LPOUTR = (ALIAS(1:2).EQ.'SE').AND.(NDIMG.EQ.3)
        LPOINT = ALIAS.EQ.'PO1'
C
C ----- BOUCLE SUR LES NOEUDS DE LA MAILLE
C
        DO 15 INO = 1,NNOMA
          POSNO  = POSNNO(INO)
C
C ------- ZONE DU NOEUD
C
          CALL CFZONN(DEFICO,POSNO ,IZONE )
C
C ------- TYPE DU NOEUD
C
          CALL CFTYPN(DEFICO,POSNO ,TYPNO )
          IF (.NOT.CFCALD(DEFICO,IZONE ,TYPNO )) THEN
            GOTO 16
          ENDIF
C
C ------- CHOIX DE LA NORMALE SUIVANT UTILISATEUR
C
          IF (TYPNO.EQ.'ESCL') THEN
            ITYPE  = MMINFI(DEFICO,'VECT_ESCL',IZONE)
          ELSEIF (TYPNO.EQ.'MAIT') THEN
            ITYPE  = MMINFI(DEFICO,'VECT_MAIT',IZONE)
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF
C
C ------- CALCUL DES TANGENTES EN CE NOEUD SI ELEMENT POINT
C
          IF (LPOINT) THEN
C
C --------- MAILLE POI1 SEULEMENT ESCLAVE
C
            IF (TYPMA.EQ.'MAIT') THEN
              CALL U2MESK('F','CONTACT3_75',1,NOMMA)
            ENDIF
C
C -------- CHOIX DE LA NORMALE SUIVANT UTILISATEUR
C
            IF ((ITYPE.EQ.0).OR.(ITYPE.EQ.2)) THEN
              CALL U2MESK('F','CONTACT3_60',1,NOMMA)
            ENDIF
            GOTO 15
          ENDIF
C
C ------- CALCUL DES TANGENTES EN CE NOEUD SI ELEMENT POUTRE
C
          IF (LPOUTR) THEN
            IF (ITYPE.EQ.0) THEN
              CALL U2MESK('F','CONTACT3_61',1,NOMMA)
            ENDIF
            GOTO 15
          ENDIF

  16    CONTINUE

  15    CONTINUE
  20  CONTINUE
C
C --- BOUCLE SUR TOUS LES NOEUDS
C
      DO 10 INO = 1,NNOCO
        POSNO     = INO
C
C ----- ZONE DU NOEUD
C
        CALL CFZONN(DEFICO,POSNO ,IZONE )
C
C ----- TYPE DU NOEUD
C
        CALL CFTYPN(DEFICO,POSNO ,TYPNO )
C
C ----- CALCUL OU PAS ?
C
        IF (.NOT.CFCALD(DEFICO,IZONE ,TYPNO )) THEN
          GOTO 91
        ENDIF
C
C ----- TRAITEMENT DU FOND DE FISSURE
C
        IF (IFORM.EQ.2) THEN
          LFFISS = MMINFL(DEFICO,'FOND_FISSURE',IZONE )
        ELSE
          LFFISS = .FALSE.
        ENDIF
C
C ----- CALCUL INTERDIT SI FOND_FISSURE
C
        IF (LFFISS) THEN
          CALL U2MESS('F','CONTACT3_17')
        ENDIF
  91    CONTINUE
  10  CONTINUE
C
      CALL JEDEMA()
      END
