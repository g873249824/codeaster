      SUBROUTINE SURFC1(CHAR,IFM)
C      
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF DEBUG  DATE 18/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C 
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*8 CHAR
      INTEGER     IFM      
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE DISCRETE - AFFICHAGE DONNEES)
C
C AFFICHAGE LES INFOS CONTENUES DANS LA SD CONTACT POUR LA FORMULATION
C DISCRETE
C      
C ----------------------------------------------------------------------
C
C
C IN  CHAR   : NOM UTILISATEUR DU CONCEPT DE CHARGE
C IN  IFM    : UNITE D'IMPRESSION
C
C
C
C
      INTEGER      CFDISI,NZOCO
      INTEGER      IZONE 
      CHARACTER*24 DEFICO
      LOGICAL      CFDISL,MMINFL,LVERI,LGCP,LGLISS
      INTEGER      ISTO,LGBLOC,GCPREA,GCPMAX,GCPPRE,GCPREC
      REAL*8       CFDISR,TOLINT,PRECIS,GCPRES,ALJEU  
      REAL*8       MMINFR,COEFPN,COEFPT,COEFFF,COEFTE  
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ
C
C --- INITIALISATIONS
C
      DEFICO = CHAR(1:8)//'.CONTACT'    
C
C --- INITIALISATIONS
C    
      NZOCO  = CFDISI(DEFICO,'NZOCO')  
      ISTO   = CFDISI(DEFICO,'STOP_SINGULIER')
      LGBLOC = CFDISI(DEFICO,'NB_RESOL')   
      LGCP   = CFDISL(DEFICO,'CONT_GCP'  ) 
      PRECIS = CFDISR(DEFICO,'RESI_ABSO')
      GCPREA = CFDISI(DEFICO,'REAC_ITER') 
      GCPMAX = CFDISI(DEFICO,'ITER_GCP_MAXI')
      GCPPRE = CFDISI(DEFICO,'PRE_COND')
      GCPRES = CFDISR(DEFICO,'COEF_RESI')
      GCPREC = CFDISI(DEFICO,'RECH_LINEAIRE')
      LGLISS = CFDISL(DEFICO,'CONT_DISC_GLIS')
      ALJEU  = CFDISR(DEFICO,'ALARME_JEU') 
C
C --- IMPRESSIONS POUR L'UTILISATEUR
C 
      WRITE (IFM,*)      
      WRITE (IFM,*) '<CONTACT> INFOS SPECIFIQUES SUR LA FORMULATION'//
     &              ' DISCRETE'
      WRITE (IFM,*)           
C 
C --- IMPRESSIONS POUR LES PARAMETRES CONSTANTS
C      
      WRITE (IFM,*) '<CONTACT> ... PARAMETRES CONSTANTS SUR TOUTES '//
     &              ' LES ZONES' 
    
      WRITE (IFM,1070) 'STOP_SINGULIER  ',ISTO
      WRITE (IFM,1070) 'NB_RESOL        ',LGBLOC
      IF (LGLISS) THEN 
        WRITE (IFM,*) '<CONTACT> ...... GLISSIERE : OUI'
      ELSE
        WRITE (IFM,*) '<CONTACT> ...... GLISSIERE : NON'
      ENDIF    
      IF (LGLISS) THEN
        WRITE (IFM,1071) 'ALARME_JEU     ',ALJEU
      ENDIF
C 
      IF (LGCP) THEN  
        WRITE (IFM,1070) 'PRE_COND        ',GCPPRE
        WRITE (IFM,1070) 'RECH_LINEAIRE   ',GCPREC
        WRITE (IFM,1071) 'RESI_ABSO       ',PRECIS
        WRITE (IFM,1070) 'REAC_ITER       ',GCPREA  
        WRITE (IFM,1070) 'ITER_GCP_MAXI   ',GCPMAX               
        WRITE (IFM,1071) 'COEF_RESI       ',GCPRES  
      ENDIF   
C
C --- IMPRESSIONS POUR LES PARAMETRES VARIABLES
C 
      WRITE (IFM,*) '<CONTACT> ... PARAMETRES VARIABLES / ZONE'     
      DO 50 IZONE = 1,NZOCO
        WRITE (IFM,*) '<CONTACT> ...... ZONE : ',IZONE
        LVERI  = MMINFL(DEFICO,'VERIF',IZONE )
        IF (LVERI) THEN
          WRITE (IFM,*) '<CONTACT> ...... ZONE DE VERIFICATION'
          TOLINT = MMINFR(DEFICO,'TOLE_INTERP',IZONE)           
          WRITE (IFM,1071) 'TOLE_INTERP     ',TOLINT
        ELSE
          WRITE (IFM,*) '<CONTACT> ...... ZONE DE CALCUL'
          COEFPN = MMINFR(DEFICO,'E_N',IZONE)
          COEFPT = MMINFR(DEFICO,'E_T',IZONE)
          COEFFF = MMINFR(DEFICO,'COEF_COULOMB',IZONE) 
          COEFTE = MMINFR(DEFICO,'COEF_MATR_FROT',IZONE)
          WRITE (IFM,1071) 'COEF_MATR_FROT  ',COEFTE
          WRITE (IFM,1071) 'E_N             ',COEFPN
          WRITE (IFM,1071) 'E_T             ',COEFPT
          WRITE (IFM,1071) 'COULOMB         ',COEFFF
        ENDIF
 50   CONTINUE      
C
 1070 FORMAT (' <CONTACT> ...... PARAM. : ',A16,' - VAL. : ',I5)   
 1071 FORMAT (' <CONTACT> ...... PARAM. : ',A16,' - VAL. : ',E12.5) 

      CALL JEDEMA
      END
