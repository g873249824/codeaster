      SUBROUTINE LISIMP(LISCHA,IFM  )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF DEBUG  DATE 17/01/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
      IMPLICIT     NONE
      CHARACTER*19 LISCHA
      INTEGER      IFM
C
C ----------------------------------------------------------------------
C
C ROUTINE UTILITAIRE (LISTE_CHARGES)
C
C IMPRESSION DU CONTENU DE LA SD LISTE_CHARGES
C
C ----------------------------------------------------------------------
C
C
C IN  LISCHA : NOM DE LA SD LISTE_CHARGES
C IN  IFM    : NUMERO UNITE LOGIQUE IMPRESSION
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      ICHAR,NBCHAR,IBID
      CHARACTER*8  CHARGE,TYPECH,NOMFCT,K8BID
      CHARACTER*16 TYPAPP,TYPFCT
      INTEGER      CODCHA,TABCOD(30)
      CHARACTER*24 LISGEN,NOMLIS,GENCHA,MOTCLE,K24BID
      INTEGER      JLISG,JLISCI,NBGENR,IGENR,IPOSIT,ICH,INDXCH,NBCH
      CHARACTER*13 PREFOB
      REAL*8       PHASE
      INTEGER      NPUIS
      LOGICAL      LEXIS,LISEXI
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      CALL LISNNB(LISCHA,NBCHAR)
      IF (NBCHAR.EQ.0) THEN
        WRITE(IFM,*) '<LISCHA> PAS DE CHARGES'
        GOTO 99
      ELSE
        WRITE(IFM,*) '<LISCHA> NOMBRE DE CHARGES: ',NBCHAR
      ENDIF
C
C --- LISTE DES GENRES DISPONIBLES
C
      LISGEN = '&&LISIMP.LISGEN'
      CALL LISDEF('LISG',LISGEN,IBID  ,K8BID,NBGENR)
      CALL JEVEUO(LISGEN,'L',JLISG)
C
C --- AFFICHAGE
C
      DO 10 ICHAR = 1,NBCHAR
C
C ----- INFORMATIONS GENERALES
C
        CALL LISLCH(LISCHA,ICHAR ,CHARGE)
        CALL LISLTC(LISCHA,ICHAR ,TYPECH)
        CALL LISLTA(LISCHA,ICHAR ,TYPAPP)
        CALL LISLCO(LISCHA,ICHAR ,CODCHA)
        CALL LISLTF(LISCHA,ICHAR ,TYPFCT)
        CALL LISLLC(LISCHA,ICHAR ,PREFOB)
        WRITE(6,*) 'CHARGE NUMERO : ',ICHAR
        WRITE(6,*) '  * NOM DE LA CHARGE                  : ',CHARGE
        WRITE(6,*) '  * TYPE DE LA CHARGE                 : ',TYPECH
        WRITE(6,*) '  * TYPE D APPLICATION                : ',TYPAPP
        WRITE(6,*) '  * CODE DE LA CHARGE                 : ',CODCHA
        WRITE(6,*) '  * PREFIXE DE L''OBJET DE LA CHARGE   : ',PREFOB
        WRITE(6,*) '  * FONCTION MULTIPLICATRICE:'
        WRITE(6,*) '  ** TYPE                : ',TYPFCT
        IF (TYPFCT(1:5).EQ.'FONCT') THEN
          CALL LISLNF(LISCHA,ICHAR ,NOMFCT)
          WRITE(6,*) '  ** NOM (DEFI_FONCTION) : ',NOMFCT
        ELSE
          CALL LISLNF(LISCHA,ICHAR ,NOMFCT)
          WRITE(6,*) '  ** NOM (INTERNE)       : ',NOMFCT
        ENDIF
C
        IF (TYPFCT(7:10).EQ.'COMP') THEN
          CALL LISCPP(LISCHA,ICHAR ,PHASE ,NPUIS )
          WRITE(6,*) '  ** PHASE               : ',PHASE
          WRITE(6,*) '  ** PUISSANCE           : ',NPUIS
        ENDIF
C
C ----- BOUCLE SUR LES GENRES
C
        WRITE(6,*) '  * GENRES DE LA CHARGE:'
        DO 15 IGENR = 1,NBGENR
          GENCHA = ZK24(JLISG-1+IGENR)
          NOMLIS = '&&LISIMP.NOMLIS'
C
C ------- POSITION ENTIER CODE POUR CE GENRE
C
          CALL LISDEF('POEC',GENCHA,IBID  ,K8BID ,IPOSIT)
          CALL ISDECO(CODCHA,TABCOD,30)
          IF (TABCOD(IPOSIT).EQ.1) THEN
C
C --------- GENRE PRESENT DANS CETTE CHARGE
C
            WRITE(6,*) '  ** GENRE        : ',GENCHA
C
C --------- LISTE DES CHARGES DISPO POUR CE GENRE
C
            CALL LISDEF('IDNS',NOMLIS,IPOSIT,K8BID ,NBCH  )
C
            CALL JEVEUO(NOMLIS,'L',JLISCI)
            DO 20 ICH = 1,NBCH
              INDXCH = ZI(JLISCI-1+ICH)
              LEXIS  = LISEXI(PREFOB,INDXCH)
              CALL LISDEF('MOTC',K24BID,INDXCH,MOTCLE,IBID  )
              IF (LEXIS) THEN
                WRITE(6,*) '  ** MOT-CLEF     : ',MOTCLE
              ENDIF
  20        CONTINUE
            CALL JEDETR(NOMLIS)
          ENDIF
  15    CONTINUE
  10  CONTINUE
C
      CALL JEDETR(LISGEN)
C
  99  CONTINUE
C
      CALL JEDEMA()
      END
