      SUBROUTINE NMERRO(SDERRO,SDTIME,NUMINS,NBITER)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/05/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      INTEGER       NUMINS,NBITER
      CHARACTER*24  SDTIME,SDERRO
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C GESTION DES ERREURS ET EXCEPTIONS
C      
C ----------------------------------------------------------------------
C
C
C IN  NUMINS : NUMERO DU PAS DE TEMPS
C IN  NBITER : NOMBRE D'ITERATIONS DE NEWTON
C IN  SDTIME : SD TIMER
C IN  SDERRO : SD GESTION ERREUR
C                         
C ----------------------------------------------------------------------
C
      REAL*8       RTAB(2) 
      INTEGER      ITAB(2)    
      CHARACTER*8  K8BID
      LOGICAL      LBID
      REAL*8       TPSITE,TPSPAS,TPSRES
      LOGICAL      ECHLDC,ECHEQU,ECHCON(2),ECHPIL
      LOGICAL      MTCPUI,MTCPUP,ITEMAX
      INTEGER      ETAUSR
C      
C ----------------------------------------------------------------------
C
C --- VERIFICATION SI INTERRUPTION DEMANDEE PAR SIGNAL USR1
C
      IF ( ETAUSR().EQ.1 ) THEN
         CALL SIGUSR()
      ENDIF
C
C --- LECTURE TIMERS
C TPSITE : TEMPS MOYEN PAR ITERATION DE NEWTON
C TPSPAS : TEMPS MOYEN PAR PAS DE TEMPS
C TPSRES : TEMPS CPU RESTANT
C
      CALL NMTIME('VAL','ITE',SDTIME,LBID  ,TPSITE)
      CALL NMTIME('VAL','PAS',SDTIME,LBID  ,TPSPAS)      
      CALL NMTIME('VAL','RES',SDTIME,LBID  ,TPSRES)
C
C --- RECUPERE LES CODES ERREURS ACTIFS
C      
      CALL NMERGE('GET','LDC',SDERRO,ECHLDC)  
      CALL NMERGE('GET','PIL',SDERRO,ECHPIL) 
      CALL NMERGE('GET','CC1',SDERRO,ECHCON(1)) 
      CALL NMERGE('GET','CC2',SDERRO,ECHCON(2)) 
      CALL NMERGE('GET','FAC',SDERRO,ECHEQU)
      CALL NMERGE('GET','TIN',SDERRO,MTCPUI)
      CALL NMERGE('GET','TIP',SDERRO,MTCPUP)
      CALL NMERGE('GET','ITX',SDERRO,ITEMAX)      
C
      IF (MTCPUI) THEN
        ITAB(1) = NUMINS
        ITAB(2) = NBITER
        RTAB(1) = TPSITE
        RTAB(2) = TPSRES
        CALL UTEXCM(28,'MECANONLINE_79',0,K8BID,2,ITAB  ,2,RTAB)
      ELSE IF (MTCPUP) THEN
        ITAB(1) = NUMINS
        RTAB(1) = TPSPAS
        RTAB(2) = TPSRES
        CALL UTEXCM(28,'MECANONLINE_80',0,K8BID,1,ITAB  ,2,RTAB)
      ELSE IF (ECHLDC) THEN
        CALL UTEXCP(23,'COMPOR1_9')
      ELSE IF (ECHEQU) THEN
        CALL UTEXCP(25,'MECANONLINE_82')
      ELSE IF (ECHCON(1)) THEN
        CALL UTEXCP(26,'CONTACT2_1')
      ELSE IF (ECHCON(2)) THEN
        CALL UTEXCP(27,'CONTACT2_2')
      ELSE IF (ITEMAX) THEN
        CALL UTEXCP(22,'MECANONLINE_83')
      ELSE IF (ECHPIL) THEN
        CALL UTEXCP(29,'MECANONLINE_84')
      ENDIF
C   
      END
