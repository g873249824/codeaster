      SUBROUTINE XPRDOM(DNOMA,DCNXIN,DISFR,NOMA,CNXINV,FISS,
     &                  DAMAX,NDOMP,EDOMG,RADTOR)
      IMPLICIT NONE

      CHARACTER*8    DNOMA,FISS,NOMA
      CHARACTER*19   DCNXIN,DISFR,CNXINV,NDOMP,EDOMG
      REAL*8         DAMAX,RADTOR

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 21/09/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE COLOMBO D.COLOMBO

C     ------------------------------------------------------------------
C
C       XPRDOM   : X-FEM PROPAGATION : DEFINITION DES DOMAINES POUR LA
C       ------     -     --                           ---
C                  PROJECTION DES LEVEL SETS
C
C  DANS LE CADRE DE LA PROPAGATION X-FEM, SI UNE GRILLE AUXILIAIRE EST
C  UTILISEE, ON DOIT DEFINIR LES DOMAINES DE PROJECTION A LA FOIS SUR
C  LE MAILLAGE PHYSIQUE ET SUR LA GRILLE AUXILIAIRE.
C
C  ENTREE
C  ------
C
C    * MODELE POUR LA REPRESENTATION DES LEVEL SETS (GRILLE AUXILIAIRE)
C      ----------------------------------------------------------------
C     DNOMA  = NOM DU MAILLAGE
C     DCNXIN = CONNECTIVITE INVERSEE DU MAILLAGE DNOMA
C     DISFR  = NOM DU VECTEUR JEVEUX OU LES DISTANCE^2 ENTRE LES NOEUDS
C              DU MAILLAGE DNOMA ET LE FOND DU FISSURE SONT STOCKEES.
C              CE VECTEUR EST DONNE PAR XPRVIT.F.

C
C
C    * MODELE PHYSIQUE
C      ---------------
C     NOMA   = NOME DU MAILLAGE
C     CNXINV = CONNECTIVITE INVERSEE DU MAILLAGE NOMA
C
C
C     FISS   = NOM DU FISSURE AVANT LA PHASE DE MISE A JOUR DES LEVEL
C              SETS
C     DAMAX  = AVANCEE MAXIMALE DE LA FISSURE
C
C
C  SORTIE
C  ------
C
C    * MODELE POUR LA REPRESENTATION DES LEVEL SETS (GRILLE AUXILIAIRE)
C      ----------------------------------------------------------------
C     EDOMG  = NOM DU VECTEUR A CREER POUR STOCKER LA LISTE DU NUMERO
C              DES ELEMENTS DU TORE POUR LA GRILLE AUXILIAIRE
C
C    * MODELE PHYSIQUE
C      ---------------
C     NDOMP  = NOM DU VECTEUR A CREER POUR STOCKER LA LISTE DU NUMERO
C              DES NOEUDS DU TORE POUR LE MODELE PHYSIQUE
C
C     RADTOR = RAYON DU TORE QUI DEFINIT LE DOMAINE
C
C     ------------------------------------------------------------------

C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
      CHARACTER*32    JEXNUM,JEXATR
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------

C     CHARACTERISTICS OF THE MESHES
      INTEGER       DNBNO,DNBMA,JTMDIM

C     DOMAINE LEVEL SETS MESH (AUXILIARY GRID)
      REAL*8        RAYON
      CHARACTER*24  ECONS
      INTEGER       JECONS,JDISFR,NBELNO,JELNO,NBELPR,JEFROM,
     &              NODADJ

C     DOMAINE PHYSICAL MESH
      INTEGER       JFONF,NBPTFF,NBNO,JCOOR,JNTO,NUNOPR,
     &              JNOFLA,JDIST,NODE,NUMELM,JMAI,
     &              ITYPMA,JCONX1,JCONX2,NDIM,JAUX,JNOFL1,JDMAI
      INTEGER       ELDIM
      REAL*8        EPS,XM,YM,ZM,XI1,YI1,ZI1,XJ1,YJ1,ZJ1,XIJ,YIJ,
     &              ZIJ,XIM,YIM,ZIM,S,NORM2,XN,YN,ZN,D,DMIN
      CHARACTER*24  NODFLA,NODFL1,DISTNO

C     GENERAL PURPOSE
      INTEGER       IRET,I,J,K
      CHARACTER*8   K8B
      REAL*8        R8MAEM
      INTEGER       IFM,NIV

C     MULTIPLE CRACK FRONTS
      INTEGER        JFMULT,NUMFON,FON
      INTEGER      IARG

C-----------------------------------------------------------------------
C     DEBUT
C-----------------------------------------------------------------------
      CALL JEMARQ()
      CALL INFMAJ()
      CALL INFNIV(IFM,NIV)

C     CALCULATE THE RADIUS OF THE TORUS AROUND THE CRACK FRONT USED TO
C     DETERMINE WHICH NODES MUST BE CONSIDERED FOR THE PROJECTION.
C     THIS VALUE WILL BE INCREASED BELOW IN ORDER TO INCLUDE ALL THE
C     ELEMENTS CUT BY THE BORDER OF THE TORE.
      CALL GETVR8(' ','RAYON',1,IARG,1,RAYON,IRET)
      RADTOR = (RAYON+DAMAX)**2

C ----------------------------------------------------------------------
C     PHYSICAL MESH: RETREIVE THE NODES INVOLVED IN THE PROJECTION
C ----------------------------------------------------------------------

C     RETRIEVE THE NUMBER OF NODES IN THE MESH
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNO,K8B,IRET)

C     RETRIEVE THE TYPE OF EACH ELEMENT IN THE MESH
      CALL JEVEUO(NOMA//'.TYPMAIL','L',JMAI)

C     RETRIEVE THE DIMENSIONS OF THE EXISTING ELEMENTS
      CALL JEVEUO('&CATA.TM.TMDIM','L',JTMDIM)

C     RETRIEVE THE DEFINITION OF THE ELEMENTS IN TERMS OF NODES
      CALL JEVEUO(NOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA//'.CONNEX','LONCUM'),'L',JCONX2)

C     RETRIEVE THE PROBLEM DIMENSION
      CALL DISMOI('F','DIM_GEOM',NOMA,'MAILLAGE',NDIM,K8B,IRET)

C     RETRIEVE THE COORDINATES OF THE NODES
      CALL JEVEUO(NOMA//'.COORDO    .VALE','L',JCOOR)

C     RETRIEVE THE POINTS ON THE CRACK FRONT
      CALL JEVEUO(FISS//'.FONDFISS','L',JFONF)
      CALL DISMOI('F','NB_POINT_FOND',FISS,'FISS_XFEM',NBPTFF,K8B,IRET)

C     RETRIEVE THE DIFFERENT PIECES OF THE CRACK FRONT
      CALL JEVEUO(FISS//'.FONDMULT','L',JFMULT)
      CALL DISMOI('F','NB_FOND',FISS,'FISS_XFEM',NUMFON,K8B,IRET)

C     CREATE A TEMPORARY LOGICAL VECTOR TO MARK THE NODES THAT HAVE
C     BEEN SELECTED
      NODFLA='&&XPRDOM.NODEFLAG'
      CALL WKVECT(NODFLA,'V V L',NBNO,JNOFLA)
      CALL JEUNDF(NODFLA)
      CALL JEVEUO(NODFLA,'E',JNOFLA)

C     CREATE A TEMPORARY VECTOR TO STORE THE DISTANCES OF EACH NODE
      DISTNO='&&XPRDOM.DISTNO'
      CALL WKVECT(DISTNO,'V V R8',NBNO,JDIST)

      XI1 = ZR(JFONF-1+4*(1-1)+1)
      YI1 = ZR(JFONF-1+4*(1-1)+2)
      ZI1 = ZR(JFONF-1+4*(1-1)+3)

C     COUNTER FOR THE NODES THAT HAVE BEEN SELECTED
      NUNOPR = 0

C     EACH NODE OF THE PHYSICAL MESH IS CONSIDERED
      EPS = 1.D-12
      DO 2000 I=1,NBNO

C        COORDINATES OF NODE M
         XM=ZR(JCOOR-1+(I-1)*3+1)
         YM=ZR(JCOOR-1+(I-1)*3+2)
         ZM=ZR(JCOOR-1+(I-1)*3+3)

C        THE PROJECTION IS NEEDED ONLY FOR THE 3D CASE
         IF (NDIM.EQ.3) THEN
           DMIN = R8MAEM()

C          CONSIDER EACH POINT OF THE CRACK FRONT
           DO 2100 J=1,NBPTFF-1

C            CHECK IF THE CURRENT SEGMENT ON THE FRONT IS OUTSIDE THE
C            MODEL (ONLY IF THERE ARE MORE THAN ONE PIECE FORMING THE
C            FRONT)
             DO 2113 FON=1,NUMFON
                IF (J.EQ.ZI(JFMULT-1+2*FON)) GOTO 2100
2113          CONTINUE

C            COORD PT I, AND J
             XI1 = ZR(JFONF-1+4*(J-1)+1)
             YI1 = ZR(JFONF-1+4*(J-1)+2)
             ZI1 = ZR(JFONF-1+4*(J-1)+3)
             XJ1 = ZR(JFONF-1+4*(J-1+1)+1)
             YJ1 = ZR(JFONF-1+4*(J-1+1)+2)
             ZJ1 = ZR(JFONF-1+4*(J-1+1)+3)
C            VECTORS IJ AND IM
             XIJ = XJ1-XI1
             YIJ = YJ1-YI1
             ZIJ = ZJ1-ZI1
             XIM = XM-XI1
             YIM = YM-YI1
             ZIM = ZM-ZI1

C            PARAM S (PRODUIT SCALAIRE...)
             S   = XIJ*XIM + YIJ*YIM + ZIJ*ZIM
             NORM2 = XIJ*XIJ + YIJ*YIJ + ZIJ*ZIJ
             S     = S/NORM2
C            SI N=P(M) SORT DU SEGMENT
             IF((S-1).GE.EPS) S = 1.D0
             IF(S.LE.EPS)     S = 0.D0
C            COORD DE N
             XN = S*XIJ+XI1
             YN = S*YIJ+YI1
             ZN = S*ZIJ+ZI1
C            DISTANCE MN**2
             D = (XN-XM)*(XN-XM)+(YN-YM)*(YN-YM)+(ZN-ZM)*(ZN-ZM)
             IF(D.LT.DMIN) THEN
               DMIN = D
             ENDIF

2100       CONTINUE

         ELSE

             DMIN = R8MAEM()

C            2D CASE - ONLY ONE POINT AT THE CRACK TIP!
             DO 2114 J=1,NBPTFF

                XI1 = ZR(JFONF-1+4*(J-1)+1)
                YI1 = ZR(JFONF-1+4*(J-1)+2)
                ZI1 = ZR(JFONF-1+4*(J-1)+3)

C               SAVE CPU TIME: THE SQUARE OF THE DISTANCE IS EVALUATED!
                D = (XI1-XM)*(XI1-XM)+(YI1-YM)*(YI1-YM)+
     &              (ZI1-ZM)*(ZI1-ZM)

                IF (D.LT.DMIN) DMIN = D

2114          CONTINUE

         ENDIF

C        STORE THE DISTANCE
         ZR(JDIST-1+I) = DMIN

         IF (DMIN.LE.RADTOR) THEN
C           THE NODE IS INSIDE THE TORUS AND THEREFORE IT IS STORED.
            NUNOPR = NUNOPR+1
            ZL(JNOFLA-1+I) = .TRUE.
         ENDIF

2000  CONTINUE

      NODFL1='&&XPRDOM.NODEFLAG1'
      CALL JEDUPO(NODFLA,'V',NODFL1,.FALSE.)
      CALL JEVEUO(NODFL1,'L',JNOFL1)

C     ALL THE ELEMENTS CONTAINING THE SELECTED NODES MUST BE
C     CONSIDERED. THEIR NODES MUST BE SELECTED.
      NODADJ=0
      DO 1000 I=1,NBNO

         IF (ZL(JNOFL1-1+I)) THEN

C        THE NODE IS INSIDE THE TORUS. RETRIEVE ALL THE ELEMENTS
C        CONTAINING THIS NODE
         CALL JELIRA(JEXNUM(CNXINV,I),'LONMAX',NBELNO,K8B)
         CALL JEVEUO(JEXNUM(CNXINV,I),'L',JELNO)

         DO 1150 J=1,NBELNO

            NUMELM=ZI(JELNO-1+J)

C           ONLY THE ELEMENTS OF THE SAME DIMENSION OF THE MODEL ARE
C           CONSIDERED
            ITYPMA=ZI(JMAI-1+NUMELM)
            ELDIM=ZI(JTMDIM-1+ITYPMA)

            IF(ELDIM.EQ.NDIM) THEN

C              RETRIEVE THE NUMBER OF NODES FORMING THE ELEMENT
               CALL JEVEUO (JEXNUM('&CATA.TM.NBNO' ,ITYPMA),'L',JAUX)

C              RETRIEVE EACH NODE IN THE ELEMENT
               DO 1700 K=1,ZI(JAUX)

                  NODE = ZI(JCONX1-1+ZI(JCONX2-1+NUMELM)+K-1)

                  IF (.NOT.ZL(JNOFLA-1+NODE)) THEN
                     NODADJ = NODADJ+1
                     ZL(JNOFLA-1+NODE) = .TRUE.

C                    UPDATE THE RADIUS OF THE TORUS
                     IF (RADTOR.LT.ZR(JDIST-1+NODE)) THEN
                         RADTOR = ZR(JDIST-1+NODE)
                     ENDIF

                  ENDIF

1700           CONTINUE

            ENDIF

1150     CONTINUE

         ENDIF

1000  CONTINUE

      CALL JEDETR(NODFL1)

C     UPDATE THE NUMBER OF THE SELECTED NODES
      NUNOPR = NUNOPR+NODADJ

C     CREATE THE LIST OF THE SELECTED NODES
      CALL WKVECT(NDOMP,'V V I',NUNOPR,JNTO)

C     TEMPORARY POINTER
      J=0

      DO 1500 I=1,NBNO

         IF (ZL(JNOFLA-1+I)) THEN
            J=J+1
            CALL ASSERT(J.LE.NUNOPR)
            ZI(JNTO-1+J) = I
         ENDIF

1500  CONTINUE

C     DESTROY THE TEMPORARY OBJECTS
      CALL JEDETR(NODFLA)
      CALL JEDETR(DISTNO)

C ----------------------------------------------------------------------
C     LEVEL SETS MESH: RETREIVE THE ELEMENTS THAT MUST BE USED FOR THE
C                      PROJECTION
C ----------------------------------------------------------------------

C     RETRIEVE THE NUMBER OF NODES AND ELEMENTS IN THE MESH
      CALL DISMOI('F','NB_NO_MAILLA',DNOMA,'MAILLAGE',DNBNO,K8B,IRET)
      CALL DISMOI('F','NB_MA_MAILLA',DNOMA,'MAILLAGE',DNBMA,K8B,IRET)

C     RETRIEVE THE TYPE OF EACH ELEMENT IN THE MESH
      CALL JEVEUO(DNOMA//'.TYPMAIL','L',JDMAI)

C     RETRIEVE THE DEFINITION OF THE ELEMENTS IN TERMS OF NODES
      CALL JEVEUO(DNOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(DNOMA//'.CONNEX','LONCUM'),'L',JCONX2)

C     RETRIEVE THE DISTANCE OF EACH NODE FROM THE FRONT
      CALL JEVEUO(DISFR,'L',JDISFR)

C     THE NODES OF THE LEVEL SETS MESH THAT ARE INSIDE THE TORUS ARE
C     RETRIEVED. THE ELEMENTS CONTAINING EACH OF THESE NODES ARE
C     STORED.
      ECONS = '&&XPRDOM.ECONS'
      CALL WKVECT(ECONS,'V V L',DNBMA,JECONS)

      DO 50 I=1,DNBMA
         ZL(JECONS-1+I) = .FALSE.
50    CONTINUE

      DO 100 I=1,DNBNO

         IF (ZR(JDISFR-1+I).LE.RADTOR) THEN

C           THE NODE IS INSIDE THE TORUS. RETRIEVE ALL THE ELEMENTS
C           CONTAINING THIS NODE
            CALL JELIRA(JEXNUM(DCNXIN,I),'LONMAX',NBELNO,K8B)
            CALL JEVEUO(JEXNUM(DCNXIN,I),'L',JELNO)

            DO 150 J=1,NBELNO

               NUMELM = ZI(JELNO-1+J)

C              ONLY THE ELEMENTS OF THE SAME DIMENSION OF THE MODEL ARE
C              CONSIDERED
               ITYPMA = ZI(JDMAI-1+NUMELM)
               ELDIM  = ZI(JTMDIM-1+ITYPMA)

C              MARK THE SELECTED ELEMENT
               IF(ELDIM.EQ.NDIM) ZL(JECONS-1+NUMELM) = .TRUE.

150         CONTINUE

         ENDIF

100   CONTINUE

C     COUNT THE NUMBER OF ELEMENTS INVOLVED IN THE PROJECTION
      NBELPR = 0

      DO 200 I=1,DNBMA
         IF (ZL(JECONS-1+I)) NBELPR = NBELPR+1
200   CONTINUE

C     STORE THE NUMBER OF THESE ELEMENTS ONLY. THESE INFORMATIONS ARE
C     USED FOR THE PROJECTION
      CALL WKVECT(EDOMG,'V V I',NBELPR,JEFROM)

      NBELPR = 0

      DO 300 I=1,DNBMA

         IF (ZL(JECONS-1+I)) THEN

            NBELPR = NBELPR + 1
            ZI(JEFROM-1+NBELPR) = I

         ENDIF

300   CONTINUE

      CALL JEDETR(ECONS)

C-----------------------------------------------------------------------
C     FIN
C-----------------------------------------------------------------------
      CALL JEDEMA()
      END
