      SUBROUTINE CRSDCO ( NOMA, LISCHA, NUMEDD, NEQ, DEFICO, RESOCO )
      IMPLICIT   NONE
      INTEGER            NEQ
      CHARACTER*8        NOMA
      CHARACTER*19       LISCHA
      CHARACTER*24       NUMEDD, DEFICO, RESOCO
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/02/2002   AUTEUR ADBHHVV V.CANO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C ROUTINE APPELEE PAR : NMINIT
C ----------------------------------------------------------------------
C
C CREATION DES STRUCTURES DE DONNEES NECESSAIRES AU TRAITEMENT
C DU CONTACT SANS FROTTEMENT (MOT-CLE "CONTACT" D'AFFE_CHAR_MECA).
C ROUTINE APPELEE AU DEBUT DE L'OPERATEUR STAT_NON_LINE.
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  LISCHA : SD L_CHARGES
C IN  NUMEDD : NUMEROTATION
C IN  NEQ    : NOMBRE D'EQUATIONS DU SYSTEME ASSEMBLE
C OUT DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C              ON LA COMPLETE PAR :
C                - DDLCO  (NUMEROS DES DDL DES NOEUDS DE CONTACT)
C OUT RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32       JEXNUM , JEXNOM
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      IER,NEC,NCHAR,JCHAR,JINF,ICHA,ICON,JAPPAR,JAPMEM
      INTEGER      JAPCOE,JAPPTR,JAPNOR,JAPJEU,JAPDDL,JPDDL,JAPTAN
      INTEGER      INO,JDIM,JNOCO,JDDL,NNOCO,NUMNO,NUNOE,NESMAX,NDDL
      INTEGER      IZONE,NZOCO,JREAC,NDIM,NBLIAI,JZOCO,JCHAM,ICHAM,IDDL
      INTEGER      JBID,II,NBBLOC,RETA,JJEUIN
      CHARACTER*1  K1BID
      CHARACTER*8  K8BID,CHAR,NOMNO
      CHARACTER*19 COCO,LIAC,LIOT,MU,ATMU,DELT0,DELTA,CM1A,MATR,STOC
      CHARACTER*19 CM2A,CM3A,AFMU
      CHARACTER*24 NDIMCO,CONTNO,NOZOCO,CHAMCO,DDLCO,PDDL,APPARI,APMEMO
      CHARACTER*24 APCOEF,APPOIN,APNORM,APJEU,APDDL,APREAC,COEFMU,JEUINI
      INTEGER      JAPCOF,JAPJFX,JAPJFY,JMETH
      CHARACTER*24 APCOFR,APJEFX,APJEFY,METHCO,MAESCL,APTANG
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ ()
C
C --- REPERAGE DE LA CHARGE CONTENANT DU CONTACT
C
      CALL JEEXIN (LISCHA // '.LCHA',IER)
      IF (IER.EQ.0) GOTO 9999
      CALL JELIRA (LISCHA // '.LCHA','LONMAX',NCHAR,K8BID)
      CALL JEVEUO (LISCHA // '.LCHA','L',JCHAR)
      ICON = 0
      CALL JEVEUO (LISCHA // '.INFC','L',JINF)
      DO 10 ICHA = 1, NCHAR
        IF (ZI(JINF+2*NCHAR+2+ICHA).EQ.2) THEN
          CHAR = ZK24(JCHAR+ICHA-1)(1:8)
          ICON = ICON + 1
        END IF
 10   CONTINUE
C
C   ON REGARDE LA METHODE 
C
      MAESCL = DEFICO(1:16)//'.MAESCL'
      CALL JEEXIN(MAESCL,RETA)
      IF (RETA.GT.0) GOTO 9999

      ATMU   = RESOCO(1:14)//'.ATMU'
      CALL JEEXIN (ATMU,IER)
      IF (IER.EQ.0) CALL WKVECT (ATMU,'V V R',NEQ,JBID)
C
      AFMU   = RESOCO(1:14)//'.AFMU'
      CALL JEEXIN (AFMU,IER)
      IF (IER.EQ.0) CALL WKVECT (AFMU,'V V R',NEQ,JBID)
C
      IF (ICON.EQ.0) THEN
        DEFICO = 'BIDON'
        DDLCO = DEFICO(1:16)//'.DDLCO'
        CALL WKVECT (DDLCO,'V V I',1,JDDL)
        GO TO 9999
      END IF
C
      IF (ICON.GT.1) THEN
        CALL UTMESS ('A','CRSDCO_01','IL Y A PLUSIEURS '
     &               //'CHARGES CONTENANT DES CONDITIONS DE CONTACT : '
     &               //'SEULE LA DERNIERE CHARGE SERA PRISE EN COMPTE')
      END IF
C
      DEFICO = CHAR(1:8)//'.CONTACT'
      NDIMCO = DEFICO(1:16)//'.NDIMCO'
      CALL JEVEUO (NDIMCO, 'L',JDIM)
      NDIM = ZI(JDIM)

C --- ARGUMENT POUR PREMIERE UTILISATION DU CONTACT OU NON
      CALL WKVECT (RESOCO(1:14) // '.PREM','V V L',1,JBID)
      ZL(JBID) = .TRUE.
C
C --- NUMEROS DE DDL DE TOUS LES NOEUDS DE CONTACT POTENTIELS
C
      NNOCO = ZI(JDIM+4)
      CONTNO = DEFICO(1:16)//'.NOEUCO'
      NOZOCO = DEFICO(1:16)//'.NOZOCO'
      CHAMCO = DEFICO(1:16)//'.CHAMCO'
      CALL JEVEUO (CONTNO, 'L',JNOCO)
      CALL JEVEUO (NOZOCO, 'L',JZOCO)
      CALL JEVEUO (CHAMCO, 'L',JCHAM)
C
C - POINTEUR
C
      PDDL  = DEFICO(1:16)//'.PDDLCO'
      CALL WKVECT (PDDL,'V V I',NNOCO+1,JPDDL)
      ZI(JPDDL) = 0
      NDDL = 0
C
      DO 20 INO = 1,NNOCO
        IZONE = ZI(JZOCO+INO-1)
        ICHAM = ZI(JCHAM+IZONE-1)
        IF ((ICHAM.EQ.1).OR.(ICHAM.EQ.-1)) THEN
            NDDL = NDDL + NDIM
            ZI(JPDDL+INO) = NDDL
        ELSE IF (ICHAM.EQ.-2) THEN
          NDDL = NDDL + 1
          ZI(JPDDL+INO) = NDDL
        ELSE IF (ICHAM.EQ.-3) THEN
          NDDL = NDDL + 1
          ZI(JPDDL+INO) = NDDL
        END IF
 20   CONTINUE
C
C - NUMEROS DE DDL
C
      DDLCO = DEFICO(1:16)//'.DDLCO'
      CALL WKVECT (DDLCO,'V V I',NDDL,JDDL)
C
      DO 25 INO = 1,NNOCO
        NUMNO = ZI(JNOCO+INO-1)
        CALL JENUNO (JEXNUM(NOMA//'.NOMNOE',NUMNO),NOMNO)
        IZONE = ZI(JZOCO+INO-1)
        ICHAM = ZI(JCHAM+IZONE-1)
        IDDL = ZI(JPDDL+INO-1) + 1
        IF ((ICHAM.EQ.1).OR.(ICHAM.EQ.-1)) THEN
          CALL POSDDL ('NUME_DDL',NUMEDD,NOMNO,'DX',NUNOE,
     &                 ZI(JDDL+IDDL-1))
          CALL POSDDL ('NUME_DDL',NUMEDD,NOMNO,'DY',NUNOE,
     &                 ZI(JDDL+IDDL))
          IF (NDIM.EQ.3) CALL POSDDL ('NUME_DDL',NUMEDD,NOMNO,'DZ',
     &                                NUNOE,ZI(JDDL+IDDL+1))
        ELSE IF (ICHAM.EQ.-2) THEN
          CALL POSDDL ('NUME_DDL',NUMEDD,NOMNO,'PRES',NUNOE,
     &                 ZI(JDDL+IDDL-1))
        ELSE IF (ICHAM.EQ.-3) THEN
          CALL POSDDL ('NUME_DDL',NUMEDD,NOMNO,'TEMP',NUNOE,
     &                 ZI(JDDL+IDDL-1))
        END IF
 25   CONTINUE
C
C --- CREATION DES TABLEAUX D'APPARIEMENT (DIMENSIONNES AU MAX)
C
      NESMAX = ZI(JDIM+8)
C
      APPARI = RESOCO(1:14)//'.APPARI'
      APMEMO = RESOCO(1:14)//'.APMEMO'
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APCOFR = RESOCO(1:14)//'.APCOFR'
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APNORM = RESOCO(1:14)//'.APNORM'
      APTANG = RESOCO(1:14)//'.APTANG'
      APJEU  = RESOCO(1:14)//'.APJEU'
      APJEFX = RESOCO(1:14)//'.APJEFX'
      APJEFY = RESOCO(1:14)//'.APJEFY'
      APDDL  = RESOCO(1:14)//'.APDDL'
      JEUINI = RESOCO(1:14)//'.JEUINI'
C
      CALL WKVECT (APPARI,'V V I',3*NESMAX+1,JAPPAR)
      CALL WKVECT (APMEMO,'V V I',4*NNOCO   ,JAPMEM)
      CALL WKVECT (APCOEF,'V V R',30*NESMAX ,JAPCOE)
      CALL WKVECT (APCOFR,'V V R',60*NESMAX ,JAPCOF)
      CALL WKVECT (APPOIN,'V V I',NESMAX+1  ,JAPPTR)
      CALL WKVECT (APNORM,'V V R',3*NESMAX  ,JAPNOR)
      CALL WKVECT (APTANG,'V V R',6*NESMAX  ,JAPTAN)
      CALL WKVECT (APJEU ,'V V R',NESMAX    ,JAPJEU)
      CALL WKVECT (APJEFX,'V V R',NESMAX    ,JAPJFX)
      CALL WKVECT (APJEFY,'V V R',NESMAX    ,JAPJFY)
      CALL WKVECT (APDDL ,'V V I',30*NESMAX ,JAPDDL)
      CALL WKVECT (JEUINI,'V V R',NESMAX    ,JJEUIN)
C
      METHCO = DEFICO(1:16)//'.METHCO'
      CALL JEVEUO (METHCO,'L',JMETH)
C
      ZI(JAPPAR) = NESMAX
C
C --- INDICATEURS DE REACTUALISATION
C
      NZOCO  = ZI(JDIM+1)
      APREAC = RESOCO(1:14)//'.APREAC'
      CALL WKVECT (APREAC,'V V I',4*NZOCO,JREAC)
      DO 30 IZONE = 1,NZOCO
        ZI(JREAC+4*(IZONE-1))   = 1
        ZI(JREAC+4*(IZONE-1)+1) = 0
        ZI(JREAC+4*(IZONE-1)+2) = 1
        ZI(JREAC+4*(IZONE-1)+3) = 0
 30   CONTINUE
C
C --- CREATION DES OBJETS PROVISOIRES UTILISES DANS LA RESOLUTION
C
C - VECTEURS DE TRAVAIL
C
      COCO   = RESOCO(1:14)//'.COCO'
      LIAC   = RESOCO(1:14)//'.LIAC'
      LIOT   = RESOCO(1:14)//'.LIOT'      
      MU     = RESOCO(1:14)//'.MU'
      COEFMU = RESOCO(1:14)//'.COEFMU'
      DELT0  = RESOCO(1:14)//'.DEL0'
      DELTA  = RESOCO(1:14)//'.DELT'
C
      CALL JEEXIN (COCO,IER)
      IF (IER.EQ.0) CALL WKVECT (COCO,'V V I',9,JBID)
      CALL DISMOI('F','NB_EC','DEPL_R','GRANDEUR',NEC,K1BID,IER)
      ZI(JBID)   = NDIM
      ZI(JBID+5) = NEC
C
      CALL JEEXIN (LIAC,IER)
      IF (IER.EQ.0) CALL WKVECT (LIAC,'V V I',3*NESMAX+1,JBID)
C
      CALL JEEXIN (LIOT,IER)
      IF (IER.EQ.0) CALL WKVECT (LIOT,'V V I',4*NESMAX+4,JBID)
C
      CALL JEEXIN (MU,IER)
      IF (IER.EQ.0) CALL WKVECT (MU,'V V R',6*NESMAX,JBID)
C
      CALL JEEXIN (COEFMU,IER)
      IF (IER.EQ.0) CALL WKVECT (COEFMU,'V V R',NESMAX,JBID)
C
      CALL JEEXIN (DELT0,IER)
      IF (IER.EQ.0) CALL WKVECT (DELT0,'V V R',NEQ,JBID)
C
      CALL JEEXIN (DELTA,IER)
      IF (IER.EQ.0) CALL WKVECT (DELTA,'V V R',NEQ,JBID)
C
C - OBJETS ASSOCIES AUX MATRICES
C
      NBLIAI = NESMAX
      NBBLOC = 1
C
      CM1A   = RESOCO(1:14)//'.CM1A'
      CM2A   = RESOCO(1:14)//'.CM2A'
      CM3A   = RESOCO(1:14)//'.CM3A'
      MATR   = RESOCO(1:14)//'.MATR'
      STOC   = RESOCO(1:14)//'.SLCS'
C
      IF(ZI(JMETH+6).EQ.0.OR.ZI(JMETH+6).EQ.1.
     &  OR.ZI(JMETH+6).EQ.-1) THEN
         CALL JECREC(CM1A,'V V R','NU','DISPERSE','CONSTANT',NBLIAI)
         CALL JEECRA (CM1A,'LONMAX',NEQ,K8BID)
         DO 40 II = 1, NBLIAI
            CALL JECROC (JEXNUM(CM1A,II))
 40      CONTINUE
      ELSE
         CALL JECREC (CM1A,'V V R','NU','DISPERSE','CONSTANT',3*NBLIAI)
         CALL JECREC (CM2A,'V V R','NU','DISPERSE','CONSTANT',3*NBLIAI)
         CALL JECREC (CM3A,'V V R','NU','DISPERSE','CONSTANT',3*NBLIAI)
         CALL JEECRA (CM1A,'LONMAX',NEQ,K8BID)
         CALL JEECRA (CM2A,'LONMAX',NEQ,K8BID)
         CALL JEECRA (CM3A,'LONMAX',NEQ,K8BID)
         DO 42 II = 1, 3*NBLIAI
            CALL JECROC (JEXNUM(CM1A,II))
            CALL JECROC (JEXNUM(CM2A,II))
            CALL JEVEUO (JEXNUM(CM2A,II),'E',JBID)
            CALL JELIBE (JEXNUM(CM2A,II))
            CALL JECROC (JEXNUM(CM3A,II))
            CALL JEVEUO (JEXNUM(CM3A,II),'E',JBID)
            CALL JELIBE (JEXNUM(CM3A,II))
 42      CONTINUE
      ENDIF
C     
      CALL JECREO (MATR//'.REFA','V V K24')
      CALL JEECRA (MATR//'.REFA','LONMAX',4,' ')
      CALL JEVEUO (MATR//'.REFA','E',JBID)
      ZK24(JBID) = NOMA
      ZK24(JBID+1) = RESOCO(1:14)
      ZK24(JBID+2) = STOC
C
      CALL WKVECT (MATR//'.&VDI','V V R',3*NBLIAI,JBID)
      CALL WKVECT (MATR//'.&TRA','V V R',3*NBLIAI,JBID)
      CALL JECREO (MATR//'.LIME','V V K8')
      CALL JEECRA (MATR//'.LIME','LONMAX',1,' ')
      CALL JEVEUO (MATR//'.LIME','E',JBID)
      ZK8(JBID) = ' '
C
      CALL JECREC (MATR//'.VALE','V V R','NU','DISPERSE'
     &     ,'CONSTANT',NBBLOC)
      CALL JEECRA (MATR//'.VALE','LONMAX',
     &     3*NBLIAI*(3*NBLIAI+1)/2,K8BID)
      DO 4 II = 1, NBBLOC
         CALL JECROC (JEXNUM(MATR//'.VALE',II))
 4    CONTINUE
      CALL JEECRA (MATR//'.VALE','DOCU',1,'MS')
C
      CALL JECREO (STOC//'.REFE','V V K24')
      CALL JEECRA (STOC//'.REFE','LONMAX',1,' ')
      CALL JEECRA (STOC//'.REFE','DOCU',1,'SLCS')
      CALL JEVEUO (STOC//'.REFE','E',JBID)
      ZK24(JBID) = '??CONTACT??'
C
      CALL JECREO (STOC//'.DESC','V V I')
      CALL JEECRA (STOC//'.DESC','LONMAX',6,' ')
      CALL JEVEUO (STOC//'.DESC','E',JBID)
      ZI(JBID)   = 3*NBLIAI
      ZI(JBID+1) = 3*NBLIAI*(3*NBLIAI+1)/2
      ZI(JBID+2) = NBBLOC
      ZI(JBID+3) = 3*NBLIAI
C
      CALL JECREO (STOC//'.HCOL','V V I')
      CALL JEECRA (STOC//'.HCOL','LONMAX',3*NBLIAI,' ')
      CALL JEVEUO (STOC//'.HCOL','E',JBID)
      DO 5 II = 1, 3*NBLIAI
         ZI(JBID+II-1) = II
 5    CONTINUE
C
      CALL JECREO (STOC//'.ADIA','V V I')
      CALL JEECRA (STOC//'.ADIA','LONMAX',3*NBLIAI,' ')
      CALL JEVEUO (STOC//'.ADIA','E',JBID)
      DO 6 II = 1, 3*NBLIAI
         ZI(JBID+II-1) = II*(II+1)/2
 6    CONTINUE
C
      CALL JECREO (STOC//'.ABLO','V V I')
      CALL JEECRA (STOC//'.ABLO','LONMAX',NBBLOC+1,' ')
      CALL JEVEUO (STOC//'.ABLO','E',JBID)
      ZI(JBID) = 0
      DO 7 II = 1, NBBLOC
         ZI(JBID+II) = 3*NBLIAI
 7    CONTINUE
C
      CALL JECREO (STOC//'.IABL','V V I')
      CALL JEECRA (STOC//'.IABL','LONMAX',3*NBLIAI,' ')
      CALL JEVEUO (STOC//'.IABL','E',JBID)
      DO 8 II = 1, 3*NBLIAI
         ZI(JBID+II-1) = 1
 8    CONTINUE
C
 9999 CONTINUE
C
C ----------------------------------------------------------------------
C
      CALL JEDEMA ()
      END
