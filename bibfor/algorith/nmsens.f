      SUBROUTINE NMSENS (MODELE,NEQ,NUMEDD,MATE,COMPOR,CARELE,LISCHA,
     &                    COEVIT,COEACC,LAMORT,MASSE,AMORT,NMODAM ,
     &                    VALMOD,BASMOD,LIMPED,NBMODS,
     &                    CMD,SOLVEU,MATRIX,PARTPS,INST,
     &                    NUMINS,SECMBR,NBPASE,INPSCO)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 29/09/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
      IMPLICIT NONE
      CHARACTER*24 MODELE, NUMEDD, MATE  , CARELE, COMPOR, SECMBR(8)
      CHARACTER*24 MASSE,  AMORT
      CHARACTER*19 LISCHA, SOLVEU, MATRIX(2),PARTPS
      CHARACTER*16 CMD
      CHARACTER*13 INPSCO
      CHARACTER*24  VALMOD, BASMOD
      REAL*8       COEVIT, COEACC,INST(3)
      INTEGER      NBPASE,NUMINS,NEQ, NMODAM, NBMODS
      LOGICAL      LAMORT,LIMPED,LOGIC
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
      INTEGER NRPASE, IBID, IAUX, JAUX,JDEPLS,JDEPMS,TYPESE,IFM,NIV
      INTEGER JVITPS,JACCPS, IDIR, JINF, NCHAR, NUMCHT
      LOGICAL LBID
      REAL*8  R8BID,CODONN(3)
      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'NMSENS' )
      CHARACTER*8  RESULT,NOPASE, VEBUDI
      CHARACTER*14 K14BID
      CHARACTER*19 K19BID,CNDONN(3)
      CHARACTER*24 K24BID, INFOCH
      CHARACTER*24 DEPMOS, SIGMOS, VARMOS
      CHARACTER*24 DEPPLS, SIGPLS, VARPLS
      CHARACTER*24 VITPLU, VITMOI, ACCPLU, ACCMOI
      CHARACTER*24 DEPENT, VITENT, ACCENT
      CHARACTER*24 CNFEDO, CNDIDO, CNBUDI
      CHARACTER*24 VALPLU(8), STYPSE


      VEBUDI = '&&VEBUDI'
      CNBUDI = '&&'//NOMPRO//'.BUDI'
C ----------------------------------------------------------------------

      CALL JEMARQ()

      CALL INFNIV(IFM,NIV)
      K14BID=' '
      K19BID=' '
      K24BID=' '


C -- BOUCLE SUR LES PARAMETRES SENSIBLES
C    ------------------------------------
      DO 10 NRPASE=1,NBPASE

C -- NOM DES DIFFERENTS CHAMPS DERIVES

      IAUX = NRPASE
      JAUX = 1
      CALL PSNSLE(INPSCO,IAUX,JAUX,NOPASE)
      JAUX = 3
      CALL PSNSLE(INPSCO,IAUX,JAUX,RESULT)
      JAUX = 4
      CALL PSNSLE(INPSCO,IAUX,JAUX,DEPPLS)
      JAUX = 5
      CALL PSNSLE(INPSCO,IAUX,JAUX,DEPMOS)
      JAUX = 8
      CALL PSNSLE(INPSCO,IAUX,JAUX,SIGPLS)
      JAUX = 9
      CALL PSNSLE(INPSCO,IAUX,JAUX,SIGMOS)
      JAUX = 10
      CALL PSNSLE(INPSCO,IAUX,JAUX,VARPLS)
      JAUX = 11
      CALL PSNSLE(INPSCO,IAUX,JAUX,VARMOS)

      CALL METYSE(NBPASE, INPSCO, NOPASE, TYPESE, STYPSE)

      IF ((TYPESE.EQ.2).OR.(TYPESE.EQ.3)
     &    .OR.(TYPESE.EQ.5)) THEN

        INFOCH = LISCHA//'.INFC'
        CALL JEVEUO (INFOCH,'L',JINF)
        NCHAR = ZI(JINF)
        NUMCHT = ZI(JINF-1+2+2*NCHAR)

        IF (NUMCHT.GT.0) THEN
           CALL U2MESS('A','ALGORITH5_80')
           GO TO 9
        ENDIF

      ENDIF

      IF (CMD(1:4).NE.'DYNA') THEN

C -- CALCUL DES CHARGEMENTS EXTERIEURS DE SENSIBILITE
C -- CAS STATIQUE
        CALL NMCHAR ('SENS', MODELE, NUMEDD, MATE  , CARELE,
     &             COMPOR, LISCHA, K24BID, INST  , K24BID,
     &             K24BID, LBID,   K24BID, K24BID, K24BID,
     &             K24BID, K24BID, K24BID, IBID,   K24BID,
     &             K24BID, IBID,   LBID,   LBID,   0,
     &             K24BID, K24BID, NRPASE, NBPASE, INPSCO,
     &             NOPASE, 1,      K24BID, K19BID, .FALSE.,
     &             SECMBR)
      ELSE
C -- CALCUL DES CHARGEMENTS EXTERIEURS DE SENSIBILITE
C -- CAS DYNAMIQUE

        JAUX = 14
        CALL PSNSLE(INPSCO,IAUX,JAUX,VITPLU)
        JAUX = 15
        CALL PSNSLE(INPSCO,IAUX,JAUX,VITMOI)
        JAUX = 16
        CALL PSNSLE(INPSCO,IAUX,JAUX,ACCPLU)
        JAUX = 17
        CALL PSNSLE(INPSCO,IAUX,JAUX,ACCMOI)
        JAUX = 20
        CALL PSNSLE(INPSCO,IAUX,JAUX,VITENT)

        CALL NMCHAR ('SEDY', MODELE, NUMEDD, MATE  , CARELE,
     &                COMPOR, LISCHA, K24BID, INST  , K24BID,
     &                K24BID, LAMORT, VITPLU, ACCPLU, MASSE,
     &                AMORT,  K24BID, VITENT ,NMODAM ,VALMOD ,
     &                BASMOD, IBID, LIMPED, LBID,  0,
     &                K24BID, K24BID, NRPASE, NBPASE, INPSCO,
     &                NOPASE, 1,      K24BID, K19BID, .FALSE.,
     &                SECMBR)
      END IF

      CALL DESAGG(SECMBR,CNFEDO,K24BID,CNDIDO,K24BID,K24BID,K24BID,
     &            K24BID,K24BID)
      IF (TYPESE.EQ.2) THEN
       CALL VEBUME (MODELE, DEPMOS, LISCHA, VEBUDI)
       CALL ASSVEC ('V',CNBUDI,1,VEBUDI,1.D0,NUMEDD,' ','ZERO',1)
       IDIR = 3
      ELSE
       IDIR = 2
      ENDIF

      CNDONN(1) = CNFEDO
      CNDONN(2) = CNDIDO
      CNDONN(3) = CNBUDI
      CODONN(1) =  1
      CODONN(2) =  1
      CODONN(3) = -1

      CALL NMRESO (K14BID, IDIR  , CODONN, CNDONN, 0,
     &             R8BID, K19BID, K24BID, SOLVEU, MATRIX,
     &             DEPPLS)

C -- MISE A JOUR DES CHAMPS VITESSE ET ACCELARATION DERIVES

      CALL JEVEUO(DEPPLS(1:19)//'.VALE','E',JDEPLS)

      IF (CMD(1:4).EQ.'DYNA') THEN
        CALL JEVEUO(VITPLU(1:19)//'.VALE','E',JVITPS )
        CALL DAXPY(NEQ, COEVIT, ZR(JDEPLS), 1, ZR(JVITPS), 1)

        CALL JEVEUO(ACCPLU(1:19)//'.VALE','E',JACCPS )
        CALL DAXPY(NEQ, COEACC, ZR(JDEPLS), 1, ZR(JACCPS), 1)
      END IF

C -- MISE A JOUR DU CHAMP DE DEPLACEMENT DERIVE

      CALL JEVEUO(DEPMOS(1:19)//'.VALE','L',JDEPMS)
      CALL DAXPY(NEQ, 1.D0, ZR(JDEPMS), 1, ZR(JDEPLS), 1)


C
      CALL NSLDC(MODELE,MATE,COMPOR,INPSCO,NRPASE,TYPESE,NOPASE,STYPSE)

C -- ARCHIVAGE DES RESULTATS

C    AGGLOMERATION DES NOMS DES CHAMPS
      CALL AGGLOM (DEPPLS, SIGPLS, VARPLS, K24BID,
     &             K24BID, K24BID, K24BID, K24BID, 3, VALPLU)

C    ARCHIVAGE
      WRITE(IFM,*)
      WRITE(IFM,*) 'ARCHIVAGE DES CHAMPS DERIVES PAR RAPPORT A '
     &             //NOPASE
      LOGIC = NRPASE.EQ.NBPASE
      IF (CMD(1:4).NE.'DYNA') THEN
        CALL NMARCH (RESULT, NUMINS, PARTPS, .FALSE., COMPOR,
     &             K19BID, VALPLU, K19BID, CMD ,K24BID, K24BID,
     &             IBID,K24BID,K24BID,K24BID,LOGIC,
     &             MODELE, MATE, CARELE, LISCHA)
      ELSE
        CALL NMARCH (RESULT, NUMINS, PARTPS, .FALSE., COMPOR,
     &             K19BID, VALPLU, K19BID, CMD ,VITPLU,ACCPLU ,
     &             NBMODS,DEPENT,VITENT,ACCENT,LOGIC,
     &             MODELE, MATE, CARELE, LISCHA )
      END IF
      WRITE(IFM,*)

C -- REACTUALISATION
C    ETAT AU DEBUT DU NOUVEAU PAS DE TEMPS
      CALL COPISD('CHAMP_GD','V',DEPPLS,DEPMOS)
      CALL COPISD('CHAMP_GD','V',SIGPLS,SIGMOS)
      CALL COPISD('CHAMP_GD','V',VARPLS,VARMOS)
      IF (CMD(1:4).EQ.'DYNA') THEN
       CALL COPISD('CHAMP_GD','V',VITPLU,VITMOI)
       CALL COPISD('CHAMP_GD','V',ACCPLU,ACCMOI)
      ENDIF

 9    CONTINUE

10    CONTINUE

      CALL JEDEMA()
      END
