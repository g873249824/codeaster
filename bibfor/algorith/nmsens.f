      SUBROUTINE NMSENS(MODELE,NUMEDD,MATE  ,COMPOR,CARELE,
     &                  LISCHA,LISCH2,FONACT,SOLVEU,NUMINS,
     &                  CARCRI,COMREF,DEFICO,RESOCO,RESOCU,
     &                  PARCON,MATASS,MAPREC,SDCRIT,SDSENS,
     &                  SDDYNA,SDDISC,SDPILO,VALMOI,POUGD ,
     &                  SOLALG,VEELEM,VEASSE,MEELEM,MEASSE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/09/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      CHARACTER*19 LISCHA,LISCH2,SOLVEU,MATASS,MAPREC
      CHARACTER*19 SDDISC,SDCRIT,SDDYNA 
      CHARACTER*24 MODELE,NUMEDD,MATE  ,CARELE,COMPOR
      CHARACTER*24 POUGD (8),VALMOI(8)
      CHARACTER*24 SDSENS,CARCRI,COMREF
      CHARACTER*24 DEFICO,RESOCO,RESOCU
      CHARACTER*19 MEASSE(*),VEASSE(*)
      CHARACTER*19 MEELEM(*),VEELEM(*)      
      CHARACTER*19 SOLALG(*)
      CHARACTER*14 SDPILO
      REAL*8       PARCON(8)
      INTEGER      NUMINS
      LOGICAL      FONACT(*)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME )
C
C CALCUL DE SENSIBILITE
C
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMPOR : CARTE COMPORTEMENT
C IN  LISCHA : LISTE DES CHARGES
C IN  LISCH2 : NOM DE LA SD INFO CHARGE POUR STOCKAGE DANS LA SD
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  NUMINS : NUMERO D'INSTANT
C IN  SOLVEU : SOLVEUR
C IN  COMREF : VARI_COM DE REFERENCE
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  DEFICO : SD DEFINITION CONTACT
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  RESOCU : SD RESOLUTION LIAISON_UNILATER
C IN  PARCON : PARAMETRES DU CRITERE DE CONVERGENCE REFERENCE
C IN  MATASS : NOM DE LA MATRICE DU PREMIER MEMBRE ASSEMBLEE
C IN  MAPREC : NOM DE LA MATRICE DE PRECONDITIONNEMENT (GCPC)
C IN  SDCRIT : INFORMATIONS RELATIVES A LA CONVERGENCE
C IN  SDDISC : SD DISCRETISATION
C IN  SDDYNA : SD DYNAMIQUE
C IN  SDSENS : SD SENSIBILITE
C IN  SDPILO : SD PILOTAGE
C IN  VALMOI : VARIABLE CHAPEAU POUR ETAT EN T-
C IN  POUGD  : VARIABLE CHAPEAU POUR POUTRES EN GRANDES ROTATIONS
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  VEELEM : VARIABLE CHAPEAU POUR NOM DES VECT_ELEM
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  MEELEM : VARIABLE CHAPEAU POUR NOM DES MATR_ELEM
C IN  MEASSE : VARIABLE CHAPEAU POUR NOM DES MATR_ASSE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      TYPESE
      INTEGER      IFM,NIV
      INTEGER      JDEPLS,JDEPMS,JVITPS,JACCPS
      INTEGER      NEQ,IBID,IRET
      LOGICAL      NDYNLO,FORCE,INCR,LSTAT,LDYNA
      REAL*8       R8BID,NDYNRE,COEVIT,COEACC
      CHARACTER*8  RESULT,NOPASE,K8BID
      CHARACTER*13 INPSCO
      CHARACTER*24 K24BLA
      CHARACTER*24 DEPMOI,SIGMOI,VARMOI,VITMOI,ACCMOI,COMMOI
      CHARACTER*24 DEPPLU,SIGPLU,VARPLU,VITPLU,ACCPLU,COMPLU
      CHARACTER*24 VALPLS(8),VALMOS(8), STYPSE
      INTEGER      NRPASE,NBPASE
      CHARACTER*24 SENSNB,SENSIN
      INTEGER      JSENSN,JSENSI
      CHARACTER*19 NMCHEX,CNCINE,CNPILO,CNDONN
      CHARACTER*19 DEPSO1,DEPSO2
      CHARACTER*19 CNBUDI,VEBUDI      
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- INITIALISATIONS
C
      K24BLA    = ' '
      LSTAT     = NDYNLO(SDDYNA,'STATIQUE')
      LDYNA     = NDYNLO(SDDYNA,'DYNAMIQUE')
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
      CNCINE    = NMCHEX(VEASSE,'VEASSE','CNCINE')
      CNDONN    = '&&CNCHAR.DONN'
      CNPILO    = '&&CNCHAR.PILO'
      CNBUDI    = '&&NMASSS.CNBUDI'
      VEBUDI    = '&&NMASSS.VEBUDI'           
      CALL VTZERO(CNDONN) 
      CALL VTZERO(CNPILO) 
      CALL VTCREB(CNBUDI,NUMEDD,'V','R',NEQ)     
C
C --- ACCES SD SENSIBILITE
C
      SENSIN = SDSENS(1:16)//'.INPSCO '
      SENSNB = SDSENS(1:16)//'.NBPASE '
      CALL JEVEUO(SENSNB,'L',JSENSN)
      CALL JEVEUO(SENSIN,'L',JSENSI)
      INPSCO = ZK16(JSENSI+1-1)
      NBPASE = ZI(JSENSN+1-1)
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C
      DEPSO1 = NMCHEX(SOLALG,'SOLALG','DEPSO1')
      DEPSO2 = NMCHEX(SOLALG,'SOLALG','DEPSO2')        
C
C --- BOUCLE SUR LES PARAMETRES SENSIBLES
C
      DO 10 NRPASE = 1,NBPASE
        CALL NMNSLE(SDSENS,NRPASE,'NOPASE',NOPASE)
        CALL NMNSLE(SDSENS,NRPASE,'RESULT',RESULT)
        CALL NMNSLE(SDSENS,NRPASE,'DEPPLU',DEPPLU)
        CALL NMNSLE(SDSENS,NRPASE,'DEPMOI',DEPMOI)
        CALL NMNSLE(SDSENS,NRPASE,'SIGPLU',SIGPLU)
        CALL NMNSLE(SDSENS,NRPASE,'SIGMOI',SIGMOI)
        CALL NMNSLE(SDSENS,NRPASE,'VARPLU',VARPLU)
        CALL NMNSLE(SDSENS,NRPASE,'VARMOI',VARMOI)
        CALL METYSE(NBPASE,INPSCO,NOPASE,TYPESE,STYPSE)
        IF (LDYNA) THEN
          CALL NMNSLE(SDSENS,NRPASE,'VITPLU',VITPLU)
          CALL NMNSLE(SDSENS,NRPASE,'VITMOI',VITMOI)
          CALL NMNSLE(SDSENS,NRPASE,'ACCPLU',ACCPLU)
          CALL NMNSLE(SDSENS,NRPASE,'ACCMOI',ACCMOI)
        ENDIF
C
C --- CONSTRUCTION CHAMPS SENSIBLES
C
        CALL AGGLOM(DEPPLU,SIGPLU,VARPLU,COMPLU,
     &              VITPLU,ACCPLU,K24BLA,K24BLA,8, VALPLS)
        CALL AGGLOM(DEPMOI,SIGMOI,VARMOI,COMMOI,
     &              VITMOI,ACCMOI,K24BLA,K24BLA,6, VALMOS)     
C
C --- CALCUL DU CHARGEMENT SENSIBLE
C
        IF (LSTAT) THEN
          CALL NMCHSE('SENS',NRPASE,MODELE,NUMEDD,MATE  ,
     &                CARELE,COMPOR,LISCHA,CARCRI,NUMINS,
     &                SDDISC,PARCON,FONACT,DEFICO,RESOCO,
     &                RESOCU,COMREF,VALMOI,VALPLS,POUGD ,
     &                SOLALG,VEELEM,MEASSE,VEASSE,SDSENS,
     &                SDDYNA)
        ELSEIF (LDYNA) THEN
          CALL NMCHSE('SEDY',NRPASE,MODELE,NUMEDD,MATE  ,
     &                CARELE,COMPOR,LISCHA,CARCRI,NUMINS,
     &                SDDISC,PARCON,FONACT,DEFICO,RESOCO,
     &                RESOCU,COMREF,VALMOI,VALPLS,POUGD ,
     &                SOLALG,VEELEM,MEASSE,VEASSE,SDSENS,
     &                SDDYNA)        
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
C
C --- CALCUL DU SECOND MEMBRE
C
        CALL NMASSS(MODELE,NUMEDD,LISCHA,SDDYNA,VEASSE,
     &              TYPESE,DEPMOI,VEBUDI,CNBUDI,CNDONN)
C
C --- RESOLUTION
C
        CALL NMRESO(FONACT,SDPILO,CNDONN,CNPILO,CNCINE,
     &              SOLVEU,MAPREC,MATASS,DEPSO1,DEPSO2)
        CALL COPISD('CHAMP_GD','V',DEPSO1,DEPPLU)     
C
C --- MISE A JOUR DES CHAMPS VITESSE ET ACCELERATION DERIVES
C
        CALL JEVEUO(DEPPLU(1:19)//'.VALE','E',JDEPLS)
        IF (LDYNA) THEN
          COEVIT = NDYNRE(SDDYNA,'COEF_VITE')
          COEACC = NDYNRE(SDDYNA,'COEF_ACCE')
          CALL JEVEUO(VITPLU(1:19)//'.VALE','E',JVITPS )
          CALL DAXPY(NEQ, COEVIT, ZR(JDEPLS), 1, ZR(JVITPS), 1)
          CALL JEVEUO(ACCPLU(1:19)//'.VALE','E',JACCPS )
          CALL DAXPY(NEQ, COEACC, ZR(JDEPLS), 1, ZR(JACCPS), 1)
        END IF
C
C --- MISE A JOUR DU CHAMP DE DEPLACEMENT DERIVE
C
        CALL JEVEUO(DEPMOI(1:19)//'.VALE','L',JDEPMS)
        CALL DAXPY(NEQ, 1.D0, ZR(JDEPMS), 1, ZR(JDEPLS), 1)
C
C --- INTEGRATION DE LA LOI DE COMPORTEMENT DERIVEE
C
        CALL NSLDC (MODELE,MATE  ,CARELE,COMPOR,SDSENS,
     &              INPSCO,NRPASE,TYPESE,NOPASE,STYPSE)
C
C --- ARCHIVAGE DES RESULTATS
C
        CALL NMIMPR('IMPR','ARCH_SENS',NOPASE,R8BID,IBID)
        INCR   = NRPASE.EQ.NBPASE
        FORCE  = .FALSE.
        CALL NMARCH(RESULT,NUMINS,SDDISC,FORCE ,COMPOR,
     &              SDCRIT,K24BLA,K24BLA,VALPLS,INCR  ,
     &              MODELE,MATE  ,CARELE,FONACT,LISCH2,
     &              SDDYNA)
C
C --- REACTUALISATION 
C
        CALL COPISD('CHAMP_GD','V',DEPPLU,DEPMOI)
        CALL COPISD('CHAMP_GD','V',SIGPLU,SIGMOI)
        CALL COPISD('CHAMP_GD','V',VARPLU,VARMOI)
        IF (LDYNA) THEN
          CALL COPISD('CHAMP_GD','V',VITPLU,VITMOI)
          CALL COPISD('CHAMP_GD','V',ACCPLU,ACCMOI)
        ENDIF
10    CONTINUE
C
      CALL DETRSD('CHAMP',CNBUDI)
C
      CALL JEDEMA()
      END
