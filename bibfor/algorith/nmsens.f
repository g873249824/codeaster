      SUBROUTINE NMSENS(MODELE,NUMEDD,MATE  ,COMPOR,CARELE,
     &                  LISCHA,CRITNL,FONACT,SDSENS,SDDYNA,
     &                  SOLVEU,MATASS,MAPREC,SDDISC,INST  ,
     &                  NUMINS,SECMBR,VALMOI,VALPLU,DEPALG,
     &                  POUGD ,CARCRI,PARMET,MEELEM,MEASSE,
     &                  VEELEM)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      CHARACTER*24 MODELE, NUMEDD, MATE  , CARELE, COMPOR
      CHARACTER*24 VALPLU(8),DEPALG(8),SECMBR(8),POUGD (8),VALMOI(8)
      CHARACTER*19 LISCHA, SOLVEU, MATASS,MAPREC,SDDISC,CRITNL
      REAL*8       INST(*)
      INTEGER      NUMINS
      CHARACTER*19 SDDYNA
      CHARACTER*24 SDSENS,RESOCO
      CHARACTER*8  MEELEM(8),VEELEM(30)
      CHARACTER*19 MEASSE(8)
      LOGICAL      FONACT(*)     
      CHARACTER*24 CARCRI 
      REAL*8       PARMET(*)        
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - SENSIBILITE)
C
C      
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      NBDONN,NBPILO
      REAL*8       CODONN(3)
      CHARACTER*19 CNDONN(3)
C  
      INTEGER      JDEPLS,JDEPMS,TYPESE
      INTEGER      IFM,NIV
      INTEGER      JVITPS,JACCPS, JINF, NCHAR, NUMCHT, ICFSC
      INTEGER      NEQ,IRET,IBID
      LOGICAL      NDYNLO,FORCE,INCR,LSENSI,LSTAT,LDYNA
      REAL*8       R8BID,COEVIT,COEACC,INSTAM,INSTAP
      CHARACTER*8  RESULT,NOPASE,K8BID
      CHARACTER*1  BASE
      CHARACTER*14 K14BID
      CHARACTER*19 K19BID,MATRIX(2)
      CHARACTER*24 K24BID,K24BLA,INFOCH
      CHARACTER*24 DEPMOS,SIGMOS,VARMOS
      CHARACTER*24 DEPPLS,SIGPLS,VARPLS
      CHARACTER*24 VITPLU,VITMOI,ACCPLU, ACCMOI
      CHARACTER*24 CNFEDO,CNDIDO,CNBUDI
      CHARACTER*24 VALPLS(8),VALMOS(8), STYPSE
      INTEGER      NRPASE,NBPASE
      CHARACTER*13 INPSCO 
      CHARACTER*24 SENSNB,SENSIN
      INTEGER      JSENSN,JSENSI      
C
      CNBUDI = '&&NMSENS.BUDI'
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()   
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- INITIALISATIONS
C      
      K14BID    = ' '
      K19BID    = ' '
      K24BID    = ' '
      K24BLA    = ' '
      MATRIX(1) = MATASS
      MATRIX(2) = MAPREC
      LSENSI    = .TRUE.
      BASE      = 'V'
      INSTAM    = INST(1) - INST(2)
      INSTAP    = INST(1)
      LSTAT     = NDYNLO(SDDYNA,'STATIQUE')
      LDYNA     = NDYNLO(SDDYNA,'DYNAMIQUE')
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- ACCES SD SENSIBILITE
C
      SENSIN = SDSENS(1:16)//'.INPSCO '     
      SENSNB = SDSENS(1:16)//'.NBPASE '
      CALL JEVEUO(SENSNB,'L',JSENSN)
      CALL JEVEUO(SENSIN,'L',JSENSI) 
      INPSCO = ZK16(JSENSI+1-1)       
      NBPASE = ZI(JSENSN+1-1) 
C
C --- BOUCLE SUR LES PARAMETRES SENSIBLES
C    
      DO 10 NRPASE=1,NBPASE
        CALL NMNSLE(SDSENS,NRPASE,'NOPASE',NOPASE)
        CALL NMNSLE(SDSENS,NRPASE,'RESULT',RESULT)
        CALL NMNSLE(SDSENS,NRPASE,'DEPPLU',DEPPLS)
        CALL NMNSLE(SDSENS,NRPASE,'DEPMOI',DEPMOS)
        CALL NMNSLE(SDSENS,NRPASE,'SIGPLU',SIGPLS)
        CALL NMNSLE(SDSENS,NRPASE,'SIGMOI',SIGMOS)
        CALL NMNSLE(SDSENS,NRPASE,'VARPLU',VARPLS)
        CALL NMNSLE(SDSENS,NRPASE,'VARMOI',VARMOS)
        CALL METYSE(NBPASE,INPSCO,NOPASE,TYPESE,STYPSE)
        IF (LDYNA) THEN
          CALL NMNSLE(SDSENS,NRPASE,'VITPLU',VITPLU) 
          CALL NMNSLE(SDSENS,NRPASE,'VITMOI',VITMOI) 
          CALL NMNSLE(SDSENS,NRPASE,'ACCPLU',ACCPLU) 
          CALL NMNSLE(SDSENS,NRPASE,'ACCMOI',ACCMOI) 
          CALL AGGLOM(K24BLA,K24BLA,K24BLA,K24BLA,
     &                VITPLU,ACCPLU,K24BLA,K24BLA,8, VALPLS) 
        ENDIF

        IF ((TYPESE.EQ.2).OR.
     &      (TYPESE.EQ.3).OR.
     &      (TYPESE.EQ.4).OR.     
     &      (TYPESE.EQ.5)) THEN
          INFOCH = LISCHA//'.INFC'
          CALL JEVEUO(INFOCH,'L',JINF)
          NCHAR  = ZI(JINF)
          NUMCHT = ZI(JINF-1+2+2*NCHAR)
          IF (NUMCHT.GT.0) THEN
            CALL U2MESS('F','SENSIBILITE_14')
          ENDIF
        ENDIF

        IF (LSTAT) THEN
          CALL NMCHSE('SENS',MODELE,NUMEDD,MATE  ,CARELE,
     &                COMPOR,LISCHA,CARCRI,INST  ,FONACT,
     &                PARMET,SOLVEU,VALMOI,VALPLU,POUGD ,
     &                SECMBR,DEPALG,VEELEM,MEELEM,MEASSE,
     &                SDSENS,SDDYNA,NRPASE)
        ELSEIF (LDYNA) THEN
          CALL NMCHSE('SEDY',MODELE,NUMEDD,MATE  ,CARELE,
     &                COMPOR,LISCHA,CARCRI,INST  ,FONACT,
     &                PARMET,SOLVEU,VALMOI,VALPLS,POUGD ,
     &                SECMBR,DEPALG,VEELEM,MEELEM,MEASSE,
     &                SDSENS,SDDYNA,NRPASE)  
        ELSE
          CALL ASSERT(.FALSE.)   
        ENDIF

        CALL DESAGG(SECMBR,CNFEDO,K24BID,CNDIDO,K24BID,
     &              K24BID,K24BID,K24BID,K24BID)
C
C --- CALCUL DU VECTEUR ASSEMBLE DES CONDITIONS DE DIRICHLET
C --- BT.LAMBDA ET B.U
C
        IF (TYPESE.EQ.2) THEN
          CALL AGGLOM(DEPMOS,K24BLA,K24BLA,K24BLA,
     &                K24BLA,K24BLA,K24BLA,K24BLA, 6, VALMOS)        
          CALL NMCALV('LAGR_MECA',
     &                MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &                INSTAM,INSTAP,CARCRI,PARMET,NUMEDD,
     &                VALMOS,VALPLU,DEPALG,POUGD ,SDSENS,
     &                SDDYNA,LSENSI,NRPASE,BASE  ,MEASSE,
     &                VEELEM) 
          CALL NMASSV('LAGR_MECA',
     &                MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &                SOLVEU,NUMEDD,FONACT,R8BID ,R8BID ,
     &                R8BID ,R8BID ,SDDYNA,MEELEM,VALMOS,
     &                VALPLU,SECMBR,DEPALG,POUGD ,VEELEM,
     &                LSENSI,SDSENS,NRPASE,MEASSE,CNBUDI)        
          NBDONN = 3
          NBPILO = 0
        ELSE
          NBDONN = 2
          NBPILO = 0
        ENDIF
C     
C --- RESOLUTION
C
        CNDONN(1) = CNFEDO(1:19)
        CNDONN(2) = CNDIDO(1:19)
        CNDONN(3) = CNBUDI(1:19)
        CODONN(1) =  1
        CODONN(2) =  1
        CODONN(3) = -1
        CALL NMRESO(K14BID,NBDONN,CODONN,CNDONN,NBPILO,
     &              R8BID ,K19BID,K24BID,SOLVEU,MATRIX,
     &              DEPPLS)
C
C --- MISE A JOUR DES CHAMPS VITESSE ET ACCELERATION DERIVES
C
        CALL JEVEUO(DEPPLS(1:19)//'.VALE','E',JDEPLS)
        IF (LDYNA) THEN
          CALL JEVEUO(SDDYNA(1:15)//'.COEF_SCH','L',ICFSC)
          COEVIT = ZR(ICFSC+2-1)
          COEACC = ZR(ICFSC+3-1)
          CALL JEVEUO(VITPLU(1:19)//'.VALE','E',JVITPS )
          CALL DAXPY(NEQ, COEVIT, ZR(JDEPLS), 1, ZR(JVITPS), 1)
          CALL JEVEUO(ACCPLU(1:19)//'.VALE','E',JACCPS )
          CALL DAXPY(NEQ, COEACC, ZR(JDEPLS), 1, ZR(JACCPS), 1)
        END IF
C
C --- MISE A JOUR DU CHAMP DE DEPLACEMENT DERIVE
C
        CALL JEVEUO(DEPMOS(1:19)//'.VALE','L',JDEPMS)
        CALL DAXPY(NEQ, 1.D0, ZR(JDEPMS), 1, ZR(JDEPLS), 1)
C
C --- INTEGRATION DE LA LOI DE COMPORTEMENT DERIVEE
C
        CALL NSLDC(MODELE,MATE  ,CARELE,COMPOR,INPSCO,
     &             NRPASE,TYPESE,NOPASE,STYPSE)
C
C --- ARCHIVAGE DES RESULTATS
C
        CALL AGGLOM(DEPPLS,SIGPLS,VARPLS,K24BLA,
     &              VITPLU,ACCPLU,K24BLA,K24BLA,8, VALPLS)
        CALL NMIMPR('IMPR','ARCH_SENS',NOPASE,R8BID,IBID)
        INCR   = NRPASE.EQ.NBPASE
        FORCE  = .FALSE.
        CALL NMARCH(RESULT,NUMINS,SDDISC,FORCE ,COMPOR,
     &              CRITNL,RESOCO,VALPLS,INCR  ,MODELE,
     &              MATE  ,CARELE,FONACT,LISCHA,SDDYNA)
C
C --- REACTUALISATION - ETAT AU DEBUT DU NOUVEAU PAS DE TEMPS
C
      CALL COPISD('CHAMP_GD','V',DEPPLS,DEPMOS)
      CALL COPISD('CHAMP_GD','V',SIGPLS,SIGMOS)
      CALL COPISD('CHAMP_GD','V',VARPLS,VARMOS)
      IF (LDYNA) THEN
        CALL COPISD('CHAMP_GD','V',VITPLU,VITMOI)
        CALL COPISD('CHAMP_GD','V',ACCPLU,ACCMOI)
      ENDIF
C
10    CONTINUE

      CALL JEDEMA()
      END
