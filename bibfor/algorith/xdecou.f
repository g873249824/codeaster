      SUBROUTINE XDECOU(IT,CONNEC,LSN,IGEOM,NFISS,
     &                             PINTER,NINTER,NPTS,AINTER)
      IMPLICIT NONE

      REAL*8        LSN(*)
      INTEGER       IT,CONNEC(6,6),NINTER,IGEOM,NPTS,NFISS
      CHARACTER*24  PINTER,AINTER
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 28/09/2010   AUTEUR MASSIN P.MASSIN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C                      TROUVER LES PTS D'INTERSECTION ENTRE LES ARETES
C                      ET LE PLAN DE FISSURE
C
C     ENTREE
C       IT       : INDICE DU TETRA EN COURS
C       CONNEC   : CONNECTIVITÃ‰ DES NOEUDS DU TETRA
C       LSN      : VALEURS DE LA LEVEL SET NORMALE
C       IGEOM    : ADRESSE DES COORDONNEES DES NOEUDS DE L'ELT PARENT
C       NFIS     : NOMBRE DE FISSURES "VUES" PAR L'ÉLÉMENT
C
C     SORTIE
C       PINTER   : COORDONNÃ‰ES DES POINTS D'INTERSECTION
C       NINTER   : NB DE POINTS D'INTERSECTION
C       NPTS     : NB DE PTS D'INTERSECTION COINCIDANT AVEC UN NOEUD
C       AINTER   : INFOS ARETE ASSOCIÃ‰E AU POINTS D'INTERSECTION
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      REAL*8          A(3),B(3),C(3),LSNA,LSNB,PADIST,LONGAR,TAMPOR(4)
      REAL*8          ALPHA,LSNP
      INTEGER         AR(12,3),NBAR,NTA,NTB,NA,NB,JPTINT,INS,JAINT
      INTEGER         IA,I,IPT,IBID,PP,PD,K,PTMAX,L,NDIM,IADZI,IAZK24
      INTEGER         NDIME,IRET,IFISS,FISCOU,INO
      CHARACTER*8     TYPMA,NOMA,KBID
      INTEGER        ZXAIN,XXMMVD
      LOGICAL        LCUT

C ----------------------------------------------------------------------

      CALL JEMARQ()
      ZXAIN = XXMMVD('ZXAIN')
      CALL ELREF4(' ','RIGI',NDIME,IBID,IBID,IBID,IBID,IBID,IBID,IBID)

      CALL TECAEL(IADZI,IAZK24)
      NOMA=ZK24(IAZK24)
      CALL DISMOI('F','DIM_GEOM',NOMA,'MAILLAGE',NDIM,KBID,IRET)

C     ATTENTION, NE PAS CONFONDRE NDIM ET NDIME  !!
C     NDIM EST LA DIMENSION DU MAILLAGE
C     NDIME EST DIMENSION DE L'ELEMENT FINI
C     PAR EXEMPLE, POUR LES ELEMENT DE BORDS D'UN MAILLAGE 3D :
C     NDIME = 2 ALORS QUE NDIM = 3

      IF (NDIME .EQ. 3) THEN
         PTMAX=11
      ELSEIF (NDIME.EQ.2) THEN
         PTMAX=3
      ELSEIF (NDIME.EQ.1) THEN
         PTMAX=2
      ENDIF

C --- L'ELEMENT EST TRAVERSÉ PAR QUELLE FISSURE ?
      LCUT   = .FALSE.
      FISCOU = 1
C --- BOUCLE SUR LES FISSURES
      DO 20 IFISS = 1,NFISS
C --- BOUCLE SUR LES NOEUDS DU SOUS-TETRA
        DO 30 INO = 1,NDIME+1
C     (1) RECHERCHE D'UN NOEUD PIVOT (LSN NON NULLE)
          LSNP = LSN((CONNEC(IT,INO)-1)*NFISS+IFISS)
          IF (LSNP.NE.0.D0) THEN
            GOTO 25
          ENDIF
  30    CONTINUE
C --- TOUT LES NOEUDS DU TETRA (TRIA) ONT LSN = 0
        CALL ASSERT(.FALSE.)
  25    CONTINUE
C     (2) PRODUIT DE CE PIVOT PAR LES AUTRES LSN
        DO 40 INO = 1,NDIME+1
          IF (LSNP*LSN((CONNEC(IT,INO)-1)*NFISS+IFISS).LT.0.D0) THEN
            IF (LCUT) THEN
C --- DÉTÉCTION D'UN SE COUPÉ PAR PLUSIEURS FISSURES, ON SORT D'ICI
              NINTER = 99
              GOTO 999
            ELSE
C --- ON RETIENT QUE LA FISSURE FISCOU COUPE LE TETRA (TRIA)
              LCUT = .TRUE.
              FISCOU = IFISS
              GOTO 20
            ENDIF
          ENDIF
  40    CONTINUE
  20  CONTINUE

C     CREATION DU VECTEUR DES COORDONNEES DES POINTS D'INTERSECTION
      CALL WKVECT(PINTER,'V V R',NDIM*PTMAX,JPTINT)

C     VECTEUR REEL A ZXAIN COMPOSANTES, POUR CHAQUE PT D'INTER :
C     - NUMERO ARETE CORRESPONDANTE (0 SI C'EST UN NOEUD SOMMET)
C     - VRAI NUMERO NOEUD CORRESPONDANT (SERT QUE POUR NOEUD SOMMET)
C     - LONGUEUR DE L'ARETE
C     - POSITION DU PT SUR L'ARETE
C     - ARETE VITALE
      CALL WKVECT(AINTER,'V V R',PTMAX*ZXAIN,JAINT)
            
      IF (NDIME .EQ. 2) THEN
        TYPMA='TRIA3'
      ELSEIF (NDIME.EQ.3) THEN
        TYPMA='TETRA4'
      ELSEIF (NDIME.EQ.1) THEN
        TYPMA='SEG2'
      ENDIF

      IPT=0
C     COMPTEUR DE POINT INTERSECTION = NOEUD SOMMENT
      INS=0
      CALL CONARE(TYPMA,AR,NBAR)

C     BOUCLE SUR LES ARETES POUR DETERMINER LES POINTS D'INTERSECTION

C     LE DÉCOUPAGE SE FAIT AVEC LA FISSURE FISCOU, QUI EST CELLE QUI
C     COUPE LE TETRA (TRIA). FISCOU = 1 SI AUCUNE FISSURE NE COUPE. 
C     
      DO 100 IA=1,NBAR
C       NUM NO DU SOUS-ELEMENT
        NTA=AR(IA,1)
        NTB=AR(IA,2)
C       NUM NO DE L'ELEMENT PARENT
        NA=CONNEC(IT,NTA)
        NB=CONNEC(IT,NTB)
        LSNA=LSN((NA-1)*NFISS+FISCOU)
        LSNB=LSN((NB-1)*NFISS+FISCOU)
        CALL VECINI(3,0.D0,A)
        CALL VECINI(3,0.D0,B)
        DO 110 I=1,NDIM
          A(I)=ZR(IGEOM-1+NDIM*(NA-1)+I)
          B(I)=ZR(IGEOM-1+NDIM*(NB-1)+I)
 110    CONTINUE
        LONGAR=PADIST(NDIM,A,B)
        
        IF ((LSNA*LSNB).LE.0) THEN
          IF (LSNA.EQ.0) THEN
C           ON AJOUTE A LA LISTE LE POINT A
            CALL XAJPIN(JPTINT,PTMAX,IPT,INS,A,LONGAR,JAINT,0,NA,0.D0)

          ENDIF
          IF (LSNB.EQ.0) THEN
C           ON AJOUTE A LA LISTE LE POINT B
          CALL XAJPIN(JPTINT,PTMAX,IPT,INS,B,LONGAR,JAINT,0,NB,LONGAR)
          ENDIF
          IF (LSNA.NE.0.AND.LSNB.NE.0) THEN
C           INTERPOLATION DES COORDONNEES DE C
            DO 130 I=1,NDIM
              C(I)=A(I)-LSNA/(LSNB-LSNA)*(B(I)-A(I))
 130        CONTINUE
C           POSITION DU PT D'INTERSECTION SUR L'ARETE
            ALPHA=PADIST(NDIM,A,C)
C           ON AJOUTE A LA LISTE LE POINT C
          CALL XAJPIN(JPTINT,PTMAX,IPT,IBID,C,LONGAR,JAINT,IA,0,ALPHA)
          ENDIF
        ENDIF
 100  CONTINUE
      NINTER=IPT
      NPTS  =INS

C     TRI DES POINTS D'INTERSECTION PAR ORDRE CROISSANT DES ARETES
      DO 200 PD=1,NINTER-1
         PP=PD
         DO 201 I=PP,NINTER
           IF (ZR(JAINT-1+ZXAIN*(I-1)+1).LT.ZR(JAINT-1+ZXAIN*(PP-1)+1))
     &       PP=I
 201     CONTINUE
         DO 202 K=1,4
          TAMPOR(K)=ZR(JAINT-1+ZXAIN*(PP-1)+K)
          ZR(JAINT-1+ZXAIN*(PP-1)+K)=ZR(JAINT-1+ZXAIN*(PD-1)+K)
          ZR(JAINT-1+ZXAIN*(PD-1)+K)=TAMPOR(K)
 202     CONTINUE
         DO 203 K=1,NDIM
           TAMPOR(K)=ZR(JPTINT-1+NDIM*(PP-1)+K)
           ZR(JPTINT-1+NDIM*(PP-1)+K)=ZR(JPTINT-1+NDIM*(PD-1)+K)
           ZR(JPTINT-1+NDIM*(PD-1)+K)=TAMPOR(K)
 203     CONTINUE
 200   CONTINUE

      IF (NDIME.EQ.1) THEN
        IF (NINTER.GT.0) THEN
          DO 199 IPT=1,NINTER
            DO 1999 L=1,NDIM
              C(L)=ZR(JPTINT-1+NDIM*(IPT-1)+L)
 1999       CONTINUE
 199      CONTINUE
        ENDIF
      ENDIF
 
 999  CONTINUE

      CALL JEDEMA()
      END
