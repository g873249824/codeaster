      SUBROUTINE NMCRLS(SDDISC,PROVLI,NUMINI,NUMFIN,LINSTI,
     &                  INSTIN,NBTEMP,DTMIN )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE 
      INCLUDE 'jeveux.h'
      INTEGER      NUMINI,NUMFIN,NBTEMP
      LOGICAL      LINSTI
      REAL*8       INSTIN
      CHARACTER*19 PROVLI
      CHARACTER*19 SDDISC 
      REAL*8       DTMIN    
C
C ----------------------------------------------------------------------
C
C ROUTINE *_NON_LINE (STRUCTURES DE DONNES - DISCRETISATION)
C
C RETAILLAGE DE LA LISTE D'INSTANT PROVISOIRE
C
C ----------------------------------------------------------------------
C
C RETAILLE PROVLI SUIVANT [NUMINI,NUMFIN]
C
C IN  PROVLI : NOM DE LA LISTE D'INSTANT PROVISOIRE
C IN  SDDISC : SD DISCRETISATION
C IN  NUMINI : PREMIER INSTANT
C IN  NUMFIN : DERNIER INSTANT
C IN  LINSTI : .TRUE. SI L'INSTANT INITIAL N'EXISTAIT PAS
C IN  INSTIN : INSTANT INITIAL QUAND ETAT_INIT
C OUT NBTEMP : NOMBE D'INSTANTS DE LA LISTE RETAILLEE
C OUT DTMIN  : INTERVALLE DE TEMPS MINIMUM DE LA LISTE RETAILLEE
C
C
C
C
      INTEGER      POS,I,IBID,NBINST
      REAL*8       DELTAT,R8MAEM,R8BID,VALR(2)
      CHARACTER*8  K8BID
      CHARACTER*24 TPSDIT
      INTEGER      JTEMPS,JINST
C      
C ----------------------------------------------------------------------
C      
      CALL JEMARQ() 
C
C --- INITIALISATIONS
C       
      CALL UTDIDT('L'   ,SDDISC,'LIST',IBID  ,'NBINST',
     &            R8BID ,NBINST,K8BID )    
C
C --- NOMBRE FINAL D'INSTANTS
C
      NBTEMP = (NUMFIN-NUMINI) + 1
      CALL ASSERT(NBTEMP.LE.NBINST)
C
C --- NOMS SD_DISC
C
      TPSDIT = SDDISC(1:19)//'.DITR'
C
C --- ACCES LISTE D'INSTANTS PROVISOIRE
C
      CALL JEVEUO(PROVLI,'L',JINST)
C
C --- CREATION DE LA LISTE D'INSTANTS
C       
      CALL WKVECT(TPSDIT,'V V R',NBTEMP,JTEMPS)
      POS = 0
      DO 20 I = NUMINI, NUMFIN
        ZR(JTEMPS+POS) = ZR(JINST+I)
        POS            = POS+1
 20   CONTINUE      
C
C --- NOUVEL INTERVALLE DE TEMPS MINIMAL : DTMIN
C
      DTMIN  = R8MAEM()
      DO 25 I = 1,NBTEMP-1
        DELTAT = ZR(JTEMPS-1+I+1) - ZR(JTEMPS-1+I)
        DTMIN  = MIN(DELTAT,DTMIN)
 25   CONTINUE
C
C --- SI L'INSTANT INITIAL N'EXISTAIT PAS DANS LA LISTE D'INSTANTS
C --- ON A PRIS PLUS HAUT L'INSTANT LE PLUS PROCHE PRECEDENT : ICI 
C --- ON MET LA BONNE VALEUR COMME INSTANT INITIAL
C
      IF (LINSTI) THEN
        ZR(JTEMPS) = INSTIN
        IF (INSTIN.GE.ZR(JTEMPS+1)) THEN
          VALR(1) = INSTIN
          VALR(2) = ZR(JTEMPS+1)
          CALL U2MESR('F','DISCRETISATION_2',2,VALR)
        ENDIF
      ENDIF 
C
      CALL JEDEMA()

      END
