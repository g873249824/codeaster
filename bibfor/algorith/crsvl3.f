      SUBROUTINE CRSVL3(SOLVEU,NPREC,RAIDE)
      IMPLICIT NONE
      CHARACTER*19 SOLVEU,RAIDE
      INTEGER      NPREC
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 16/04/2012   AUTEUR TARDIEU N.TARDIEU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ----------------------------------------------------------
C  BUT : REMPLISSAGE SD_SOLVEUR POUR UN CALCUL IMPR_STURM +
C        COMPTAGE/METHODE='APM' + SOLVEUR/METHODE='MUMPS'
C        ON ECRASE DONC LES DONNEES SAISIES PAR L'UTILISATEUR, SAUF
C        CELLES DU BLOC COMMUN AUX SOLVEURS DIRECTS, ET ON IMPOSE
C        MULT_FRONT (SI MATR_ASSE) OU LDLT (SI MATR_GENE)
C        AVEC LES MEMES VALEURS PAR DEFAUT QUE CELLE DU CATALOGUE STD
C --- ATTENTION A LA COHERENCE AVEC CRSMSP, CRSVMU ET CRSVLD
C
C IN K19 SOLVEU  : NOM DU SOLVEUR DONNE EN ENTREE
C OUT    SOLVEU  : LE SOLVEUR EST CREE ET INSTANCIE
C IN  IN NPREC   : PRECISION DE LA DETECTION DE SINGULARITE
C IN  K19 RAIDE  : NOM DE LA MATRICE DE RAIDEUR (POUR CRITERE DE CHOIX
C                  DU SOLVEUR)
C ----------------------------------------------------------
C RESPONSABLE BOITEAU O.BOITEAU

C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------

      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C --- FIN DECLARATIONS NORMALISEES JEVEUX --------------------

      INTEGER      ISLVK,ISLVI,ISLVR,IREFA
      REAL*8       JEVTBL

C------------------------------------------------------------------
      CALL JEMARQ()

      CALL U2MESS('I','ALGELINE4_16')
      CALL JEVEUO(RAIDE//'.REFA','L',IREFA)

C --- ON REMPLIT LA SD_SOLVEUR
      CALL JEVEUO(SOLVEU//'.SLVK','E',ISLVK)
      CALL JEVEUO(SOLVEU//'.SLVR','E',ISLVR)
      CALL JEVEUO(SOLVEU//'.SLVI','E',ISLVI)

      IF (ZK24(IREFA+9)(1:4).EQ.'GENE') THEN
C --- ATTENTION A LA COHERENCE AVEC CRSVLD
        ZK24(ISLVK-1+1) = 'LDLT'
        ZK24(ISLVK-1+2) = 'XXXX'
        ZK24(ISLVK-1+3) = 'XXXX'
        ZK24(ISLVK-1+4) = 'SANS'
        ZK24(ISLVK-1+5) = 'NON'
        ZK24(ISLVK-1+6) = 'XXXX'
        ZK24(ISLVK-1+7) = 'XXXX'
        ZK24(ISLVK-1+8) = 'XXXX'
        ZK24(ISLVK-1+9) = 'XXXX'
        ZK24(ISLVK-1+10)= 'XXXX'
        ZK24(ISLVK-1+11)= 'XXXX'
        ZK24(ISLVK-1+12)= 'XXXX'

        ZR(ISLVR-1+1) = 0.D0
        ZR(ISLVR-1+2) = 0.D0
        ZR(ISLVR-1+3) = JEVTBL('TAILLE_BLOC')
        ZR(ISLVR-1+4) = 0.D0

        ZI(ISLVI-1+1) = NPREC
        ZI(ISLVI-1+2) = -9999
        ZI(ISLVI-1+3) = 0
        ZI(ISLVI-1+4) = -9999
        ZI(ISLVI-1+5) = -9999
        ZI(ISLVI-1+6) = -9999
        ZI(ISLVI-1+7) = -9999
      ELSE
C --- ATTENTION A LA COHERENCE AVEC CRSMSP ET CRSVMU
        ZK24(ISLVK-1+1) = 'MULT_FRONT'
        ZK24(ISLVK-1+2) = 'XXXX'
        ZK24(ISLVK-1+3) = 'XXXX'
        ZK24(ISLVK-1+4) = 'METIS'
        ZK24(ISLVK-1+5) = 'NON'
        ZK24(ISLVK-1+6) = 'XXXX'
        ZK24(ISLVK-1+7) = 'XXXX'
        ZK24(ISLVK-1+8) = 'XXXX'
        ZK24(ISLVK-1+9) = 'XXXX'
        ZK24(ISLVK-1+10)= 'XXXX'
        ZK24(ISLVK-1+11)= 'XXXX'
        ZK24(ISLVK-1+12)= 'XXXX'

        ZR(ISLVR-1+1) = 0.D0
        ZR(ISLVR-1+2) = 0.D0
        ZR(ISLVR-1+3) = 0.D0
        ZR(ISLVR-1+4) = 0.D0

        ZI(ISLVI-1+1) = NPREC
        ZI(ISLVI-1+2) = -9999
        ZI(ISLVI-1+3) = 0
        ZI(ISLVI-1+4) = -9999
        ZI(ISLVI-1+5) = -9999
        ZI(ISLVI-1+6) = -9999
        ZI(ISLVI-1+7) = -9999
      ENDIF

      CALL JEDEMA()
      END
