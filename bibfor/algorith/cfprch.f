      SUBROUTINE CFPRCH(DEFICO,RESOCO,DDEPLA,DEPDEL)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/09/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*19 DDEPLA,DEPDEL
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE DISCRETE - ALGORITHME)
C
C PREPARATION DES CHAMPS
C
C ----------------------------------------------------------------------
C
C
C IN  DEFICO : SD DE DEFINITION DU CONTACT
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  DDEPLA : INCREMENT DE SOLUTION SANS CORRECTION DU CONTACT
C IN  DEPDEL : INCREMENT DE DEPLACEMENT CUMULE DEPUIS DEBUT DU PAS
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      IFM,NIV
      INTEGER      IER,IEQ
      INTEGER      CFDISD,NEQ
      CHARACTER*24 ATMU,AFMU
      INTEGER      JATMU,JAFMU
      CHARACTER*19 DDEPLC,DDEPL0,DDELT
      INTEGER      JDDEPC,JDDEP0,JDDELT
      CHARACTER*19 DEPL0
      INTEGER      JDEPL0,JDEPDE
      LOGICAL      CFDISL,LGCP,LCTFD
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> ......... CREATION DES CHAMPS INITIAUX'
      ENDIF
C
C --- PARAMETRES
C
      NEQ    = CFDISD(RESOCO,'NEQ'     )
      LGCP   = CFDISL(DEFICO,'CONT_GCP') 
      LCTFD  = CFDISL(DEFICO,'FROT_DISCRET')
C
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C
      ATMU   = RESOCO(1:14)//'.ATMU'
      AFMU   = RESOCO(1:14)//'.AFMU'
C
C --- ACCES VECTEURS DEPLACEMENTS
C --- DDEPL0: INCREMENT DE SOLUTION SANS CORRECTION DU CONTACT
C --- DDEPLC: INCREMENT DE SOLUTION APRES CORRECTION DU CONTACT
C --- DDELT : INCREMENT DE SOLUTION ITERATION DE CONTACT
C
      DDEPL0 = RESOCO(1:14)//'.DEL0'
      DDEPLC = RESOCO(1:14)//'.DELC'
      DDELT  = RESOCO(1:14)//'.DDEL'
      CALL JEVEUO(DDEPLC(1:19)//'.VALE','E',JDDEPC)
      CALL JEVEUO(DDELT (1:19)//'.VALE','E',JDDELT)
C
C --- RECOPIE DANS DDEPL0 DU CHAMP DE DEPLACEMENTS OBTENU SANS
C --- TRAITER LE CONTACT (LE DDEPLA DONNE PAR STAT_NON_LINE)
C --- CREATION DE DDEPL0 = C-1.B
C
      CALL COPISD('CHAMP_GD','V',DDEPLA,DDEPL0)
C
C --- INITIALISATION INCREMENT SOLUTIONS ITERATION DE CONTACT
C
      CALL R8INIR(NEQ,0.D0,ZR(JDDELT),1)
C
C --- INITIALISATION INCREMENT SOLUTION APRES CORRECTION DU CONTACT
C
      IF (LGCP) THEN
        CALL COPISD('CHAMP_GD','V',DDEPLA,DDEPLC)
      ELSE
        CALL R8INIR(NEQ,0.D0,ZR(JDDEPC),1)
      ENDIF
C
C --- CALCUL INCREMENT DE DEPLACEMENT CUMULE DEPUIS DEBUT 
C --- DU PAS DE TEMPS SANS CORRECTION DU CONTACT -> DEPL0
C
      IF (LCTFD) THEN
        DEPL0  = RESOCO(1:14)//'.DEP0'
        DDEPL0 = RESOCO(1:14)//'.DEL0'
        CALL JEVEUO(DEPL0 (1:19)//'.VALE','E',JDEPL0)
        CALL JEVEUO(DDEPL0(1:19)//'.VALE','L',JDDEP0)
        CALL JEVEUO(DEPDEL(1:19)//'.VALE','L',JDEPDE)
        DO 10 IEQ = 1, NEQ
          ZR(JDEPL0+IEQ-1) = ZR(JDDEP0+IEQ-1)+ZR(JDEPDE+IEQ-1)
 10     CONTINUE
      ENDIF
C
C --- INTIALISATIONS DES FORCES
C
      CALL JEEXIN(AFMU  ,IER   )
      IF (IER.NE.0) THEN
        CALL JEVEUO(AFMU  ,'E',JAFMU )
        CALL R8INIR(NEQ,0.D0,ZR(JAFMU),1)
      ENDIF
      CALL JEEXIN(ATMU  ,IER   )
      IF (IER.NE.0) THEN
        CALL JEVEUO(ATMU  ,'E',JATMU )
        CALL R8INIR(NEQ,0.D0,ZR(JATMU),1)
      ENDIF
C
      CALL JEDEMA()
C
      END
