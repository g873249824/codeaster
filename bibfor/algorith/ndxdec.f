      SUBROUTINE NDXDEC(SDDISC,NUMINS,ACTPAS)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 06/06/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INTEGER      ACTPAS
      INTEGER      NUMINS
      CHARACTER*19 SDDISC
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C GESTION DE LA DECOUPE DU PAS DE TEMPS
C      
C ----------------------------------------------------------------------
C
C
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  NUMINS : NUMERO D'INSTANT
C OUT ACTPAS : BOUCLE TEMPS -> ACTION POUR LA SUITE
C     1 - BOUCLE TEMPS - PAS SUIVANT
C     2 - BOUCLE TEMPS - ON REFAIT LE PAS
C     3 - BOUCLE TEMPS - ARRET DU CALCUL
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C 
      INTEGER     RETOUR,IBID,NECHEC,IECHEC,ITERAT
      LOGICAL     LBID
      REAL*8      R8BID
      CHARACTER*8 K8BID,LCRIT
C 
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      ACTPAS = 0
      RETOUR = 0
      ITERAT = 0
      LCRIT  = 'NON'
C
C --- NECHEC : NOMBRE DE CAUSE DE SOUS-DECOUPAGE
C
      CALL UTDIDT('L'   ,SDDISC,'ECHE',IBID,'NB_OCC',
     &            R8BID ,NECHEC,K8BID )
C
C --- A LA 1ERE CAUSE D'ECHEC VERIFIEE, ON SORT DE LA BOUCLE
C
      DO 10 IECHEC =1,NECHEC
        CALL UTDIDT('L'   ,SDDISC,'ECHE',IECHEC,'VERIF_EVEN',
     &              R8BID ,IBID  ,LCRIT )
        IF (LCRIT.EQ.'OUI') GOTO 20
 10   CONTINUE
 20   CONTINUE
C
C --- VERIFICATION QU'IL A EU AU MOINS UNE CAUSE D'ECHEC
C
      CALL ASSERT(LCRIT.EQ.'OUI')
C
C --- DECOUPAGE DU PAS DE TEMPS
C
      CALL DIDECO(SDDISC,NUMINS,ITERAT,IECHEC,RETOUR)
C
C --- ARRET OU SUBDIVISION DU PAS
C
      IF (RETOUR.EQ.0)  THEN
        ACTPAS = 2
      ELSE   
        ACTPAS = 3
      ENDIF      
C
      CALL JEDEMA()
      END
