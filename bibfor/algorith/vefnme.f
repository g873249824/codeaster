      SUBROUTINE VEFNME(MODELE,SIGMA,CARA,DEPMOI,DEPDEL,VECELZ,MATCOD,
     &                  COMPOR,NH,FNOEVO,PARTPS,CARCRI,CHVARC,LIGREZ,
     &                  LISCHA)

      IMPLICIT NONE
      LOGICAL FNOEVO
      REAL*8 PARTPS(3)
      CHARACTER*(*) MODELE,LIGREZ,LISCHA
      CHARACTER*(*) SIGMA,CARA,DEPMOI,DEPDEL,VECELZ
      CHARACTER*(*) MATCOD,COMPOR,CARCRI,CHVARC
      CHARACTER*8 VECELE,NEWNOM

C ----------------------------------------------------------------------
C MODIF ALGORITH  DATE 28/03/2007   AUTEUR PELLET J.PELLET 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================


C     CALCUL DES VECTEURS ELEMENTAIRES (FORC_NODA)

C IN  MODELE  : NOM DU MODELE (NECESSAIRE SI SIGMA EST UNE CARTE)
C IN  SIGMA   : NOM DU CHAM_ELEM (OU DE LA CARTE) DE CONTRAINTES
C IN  CARA    : NOM DU CARA_ELEM
C IN  DEPMOI  : NOM DU CHAM_NO DE DEPLACEMENTS PRECEDENTS
C IN  DEPDEL  : NOM DU CHAM_NO D'INCREMENT DEPLACEMENTS
C IN  MATCOD  : NOM DU MATERIAU CODE
C IN  COMPOR  : NOM DE LA CARTE DE COMPORTEMENT
C IN  NH      : NUMERO D'HARMONIQUE DE FOURIER
C IN  FNOEVO  : VRAI SI FORCES NODALES EVOLUTIVES I E INSTANT PLUS ET
C               MOINS NECESSAIRES 5 STAT NON LINE TRAITANT DES PROBLEMES
C               PARABOLIQUES : APPLICATION A THM
C IN  PARTPS  : INSTANT PRECEDENT, ACTUEL ET THETA
C IN  CARCRI  : CARTE DES CRITERES ET DE THETA
C IN  CHVARC  : NOM DU CHAMP DE VARIABLE DE COMMANDE
C IN  LIGREZ  : (SOUS-)LIGREL DE MODELE POUR CALCUL REDUIT
C                  SI ' ', ON PREND LE LIGREL DU MODELE
C VAR/JXOUT  VECELZ  : VECT_ELEM RESULTAT.
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------

      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
      CHARACTER*4 TYCH
      CHARACTER*8 K8BID,LPAIN(28),PAOUT,MAILLA,NOMGD,FISS
      CHARACTER*19 LIGREL,LISCH2,PINTTO,CNSETO,HEAVTO,LONCHA
      CHARACTER*19 BASLOC,LSN,LST
      CHARACTER*24 LCHIN(28),RESUEL,CHGEOM
      CHARACTER*24 CHCARA(15),CHPESA
      LOGICAL EXIGEO,EXICAR
      INTEGER IRET,JLVE,NBCHME,IBID,NH,IED,NCHAR,IPESAN,JCHAR,JFISS,IER
      REAL*8 INSTM,INSTP,RBID
      COMPLEX*16 CBID

      CALL JEMARQ()
      NEWNOM = '.0000000'

      CALL DISMOI('F','NOM_MAILLA',DEPMOI,'CHAM_NO',IBID,MAILLA,IED)

      VECELE = VECELZ
      IF (VECELE.EQ.' ') VECELE = '&&VEFNME'
      RESUEL = '&&VEFNME.???????'

      LIGREL = LIGREZ
      IF (LIGREL.EQ.' ') LIGREL = MODELE(1:8)//'.MODELE'
C
      CHPESA = ' '
      LISCH2 = LISCHA
      CALL JEEXIN(LISCH2//'.LCHA',IRET)
      IF (IRET.NE.0) THEN
         CALL JELIRA(LISCH2//'.LCHA','LONMAX',NCHAR,K8BID)
         CALL JEVEUO(LISCH2//'.LCHA','L',JCHAR)
         CALL MECHPE(NCHAR,ZK24(JCHAR),CHPESA)
      END IF
C
C     -- ALLOCATION DU VECT_ELEM RESULTAT :
C     -------------------------------------
      CALL DETRSD('VECT_ELEM',VECELE)
      CALL MEMARE('V',VECELE,MODELE,' ',CARA,'CHAR_MECA')
      CALL WKVECT(VECELE//'.LISTE_RESU','V V K24',1,JLVE)
      CALL JEECRA(VECELE//'.LISTE_RESU','LONUTI',0,K8BID)

      CALL MECARA(CARA,EXICAR,CHCARA)
      CALL MECACT('V','&&VEFNME.NUME_HARM','MAILLA',MAILLA,'HARMON',1,
     &            'NH',NH,RBID,CBID,' ')

C     DETERMINATION DE LA GEOMETRIE (INITIALE OU DEFORMEE)
      CHGEOM = MAILLA//'.COORDO'
      LPAIN(1) = 'PGEOMER'
      LCHIN(1) = CHGEOM
      LPAIN(2) = 'PMATERC'
      LCHIN(2) = MATCOD
      LPAIN(3) = 'PCAGNPO'
      LCHIN(3) = CHCARA(6)
      LPAIN(4) = 'PCAORIE'
      LCHIN(4) = CHCARA(1)
      LPAIN(5) = 'PCOMPOR'
      LCHIN(5) = COMPOR
      LPAIN(6) = 'PCONTMR'
      LCHIN(6) = SIGMA
      LPAIN(7) = 'PDEPLMR'
      LCHIN(7) = DEPMOI
      LPAIN(8) = 'PDEPLPR'
      LCHIN(8) = DEPDEL
      LPAIN(9) = 'PCAARPO'
      LCHIN(9) = CHCARA(9)
      LPAIN(10) = 'PCADISK'
      LCHIN(10) = CHCARA(2)
      LPAIN(11) = 'PCACOQU'
      LCHIN(11) = CHCARA(7)
      LPAIN(12) = 'PHARMON'
      LCHIN(12) = '&&VEFNME.NUME_HARM'
      LPAIN(13) = 'PCAMASS'
      LCHIN(13) = CHCARA(12)

C     PARAMETRES POUR THM
      IF ( FNOEVO) THEN
         INSTM = PARTPS(1)
         INSTP = PARTPS(2)
          CALL MECACT('V','&&VEFNME.CH_INSTAM','MAILLA',MAILLA,
     &            'INST_R',1,'INST',IBID,INSTM,CBID,K8BID)
          CALL MECACT('V','&&VEFNME.CH_INSTAP','MAILLA',MAILLA,
     &            'INST_R',1,'INST',IBID,INSTP,CBID,K8BID)
      ENDIF
C
      LPAIN(14) = 'PCARCRI'
      LCHIN(14) = CARCRI
      LPAIN(15) = 'PINSTMR'
      LCHIN(15) = '&&VEFNME.CH_INSTAM'
      LPAIN(16) = 'PINSTPR'
      LCHIN(16) = '&&VEFNME.CH_INSTAP'
      LPAIN(17) = 'PVARCPR'
      LCHIN(17) = CHVARC
      LPAIN(18) = 'PCAGEPO'
      LCHIN(18) = CHCARA(5)
      LPAIN(19) = 'PNBSP_I'
      LCHIN(19) = CHCARA(1) (1:8)//'.CANBSP'
      LPAIN(20) = 'PFIBRES'
      LCHIN(20) = CHCARA(1) (1:8)//'.CAFIBR'
      LPAIN(21) = 'PPESANR'
      LCHIN(21) = CHPESA

C     CADRE X-FEM
      CALL JEEXIN(MODELE(1:8)//'.FISS',IER)
      IF (IER.NE.0) THEN

        PINTTO=MODELE(1:8)//'.TOPOSE.PINTTO'
        CNSETO=MODELE(1:8)//'.TOPOSE.CNSETO'
        HEAVTO=MODELE(1:8)//'.TOPOSE.HEAVTO'
        LONCHA=MODELE(1:8)//'.TOPOSE.LONCHAM'
        BASLOC=MODELE(1:8)//'.BASLOC'
        LSN   =MODELE(1:8)//'.LNNO'
        LST   =MODELE(1:8)//'.LTNO'

      ELSE
        PINTTO='&&VEFNME.PINTTO.BID'
        CNSETO='&&VEFNME.CNSETO.BID'
        HEAVTO='&&VEFNME.HEAVTO.BID'
        LONCHA='&&VEFNME.LONCHA.BID'
        BASLOC='&&VEFNME.BASLOC.BID'
        LSN   ='&&VEFNME.LNNO.BID'
        LST   ='&&VEFNME.LTNO.BID'
      ENDIF
      LPAIN(22) = 'PPINTTO'
      LCHIN(22) = PINTTO
      LPAIN(23) = 'PCNSETO'
      LCHIN(23) = CNSETO
      LPAIN(24) = 'PHEAVTO'
      LCHIN(24) = HEAVTO
      LPAIN(25) = 'PLONCHA'
      LCHIN(25) = LONCHA
      LPAIN(26) = 'PBASLOR'
      LCHIN(26) = BASLOC
      LPAIN(27) = 'PLSN'
      LCHIN(27) = LSN
      LPAIN(28) = 'PLST'
      LCHIN(28) = LST


      PAOUT = 'PVECTUR'

      CALL GCNCO2(NEWNOM)
      RESUEL(10:16) = NEWNOM(2:8)
      CALL CORICH('E',RESUEL,-1,IBID)

      CALL CALCUL('S','FORC_NODA',LIGREL,28,LCHIN,LPAIN,1,RESUEL,PAOUT,
     &            'V')
      ZK24(JLVE) = RESUEL
      CALL JEECRA(VECELE//'.LISTE_RESU','LONUTI',1,K8BID)

   10 CONTINUE

      VECELZ = VECELE//'.LISTE_RESU'

      CALL DETRSD('CHAMP_GD','&&VEFNME.NUME_HARM')
      CALL DETRSD('CHAMP_GD','&&VEFNME.CH_INSTAM')
      CALL DETRSD('CHAMP_GD','&&VEFNME.CH_INSTAP')

      CALL JEDEMA()
      END
