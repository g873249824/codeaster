      SUBROUTINE RECMST(GRAEXC,GRDMOD,NNOEEX,ILNOEX,ILCPEX,
     &    NMOST1,MODSTA)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C***********************************************************************
C    C. DUVAL
C-----------------------------------------------------------------------
C  BUT: RECUPERER LES INFORMATIONS DE TYPE MODE STATIQUE POUR
      IMPLICIT NONE
C        LE CALCUL DYNAMIQUE ALEATOIRE
C
C-----------------------------------------------------------------------
C
C GRAEXC   /IN / : GRANDEUR EXCITATION
C GRDMOD   /IN / : GRANDEUR A RECUPERE DANS LES MODES DYN ET STAT
C NNOEEX   /IN / : NOMBRE DE NOEUDS EXCITATION
C ILNOEX   /IN / : POINTEUR DANS ZK8 SUR LES NOEUDS EXCITATION
C ILCPEX   /IN / : POINTEUR DANS ZK8 SUR LES DDLS EXCITATION
C NMOST1   /OUT/ : NOMBRE D OCCURENCE DU MOT CLE MODE_STAT
C MODSTA   /OUT/ : CONCEPT MODE_STAT
C                     AUX MODES STATIQUES EN DEPLACEMENT
C                     AUX MODES STATIQUES EN GRANDEUR REPONSE (CALCUL)
C
C
C
C
C
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXNOM
      CHARACTER*8 KBID,MODSTA
      CHARACTER*16 GRAEXC,GRDMOD
      CHARACTER*24 K24BD1,K24BD2,K24BD3
      INTEGER      IARG

C---------MODES STATIQUES
C
C-----------------------------------------------------------------------
      INTEGER I1 ,I2 ,I3 ,I3B ,I4 ,IBID ,ILAMSC
      INTEGER ILAMST ,ILCPEX ,ILNOEX ,ILORMS ,JORDR ,JPARA ,N
      INTEGER NMOST1 ,NMOST2 ,NNOEEX
C-----------------------------------------------------------------------
      CALL JEMARQ()
      CALL GETVID(' ','MODE_STAT',0,IARG,0,KBID,N)
      NMOST1=-N
      IF(N.NE.0)THEN
       CALL GETVID(' ','MODE_STAT',0,IARG,1,MODSTA,IBID)
      ENDIF
C
C---------CONSTITUTION DE LA LISTE DES ADRESSES DES MODES STATIQUES
C
      IF(GRAEXC.NE.'DEPL_R')GOTO 9999
C
      K24BD1=MODSTA//'           .NOEU'
C     CALL JELIRA(K24BD1,'LONMAX',NMOST2,K24BD2)
C     CALL JEVEUO(K24BD1,'L',IAD1)
      CALL JELIRA(MODSTA//'           .ORDR','LONMAX',NMOST2,K24BD2)
      CALL JEVEUO(MODSTA//'           .ORDR','L',JORDR)
      CALL WKVECT('&&OP0131.LISTADORMOSTA','V V I',NNOEEX,ILORMS)
      DO 212,I1=1,NNOEEX
        ZI(ILORMS+I1-1)=0
        DO 213,I2=1,NMOST2
          CALL RSADPA(MODSTA,'L',1,'NOEUD_CMP',ZI(JORDR-1+I2),0,
     &                JPARA,KBID)
          IF((ZK8(ILNOEX+I1-1)//ZK8(ILCPEX+I1-1)).EQ.ZK16(JPARA))
     &               THEN
            ZI(ILORMS+I1-1)=I2
          ENDIF
  213   CONTINUE
  212 CONTINUE
C
C---------CONSTITUTION DES ADRESSES DES MODES STATIQUES
C
      CALL WKVECT('&&OP0131.LISTADRMODSTA','V V I',NNOEEX,ILAMST)
      CALL WKVECT('&&OP0131.LISTADRMODSTAC','V V I',NNOEEX,ILAMSC)
      DO 214,I1=1,NNOEEX
        I2=ZI(ILORMS+I1-1)
        IF (I2.EQ.0) THEN
          PRINT*,'NOEUD-CMP : ',ZK8(ILNOEX+I1-1),ZK8(ILCPEX+I1-1)
          CALL U2MESS('F','ALGORITH10_33')
        ENDIF
        K24BD1=MODSTA//'           .TACH'
        CALL JENONU(JEXNOM(K24BD1(1:19)//'.DESC','DEPL'),IBID)
        CALL JEVEUO(JEXNUM(K24BD1,IBID),'L',I3)
        CALL JENONU(JEXNOM(K24BD1(1:19)//'.DESC',GRDMOD),IBID)
        CALL JEVEUO(JEXNUM(K24BD1,IBID),'L',I3B)
        K24BD2=ZK24(I3+I2-1)
        K24BD3=K24BD2(1:19)//'.VALE'
        CALL JEVEUT(K24BD3,'L',I4)
        ZI(ILAMST+I1-1)=I4
        K24BD2=ZK24(I3B+I2-1)
        K24BD3=K24BD2(1:19)//'.VALE'
        CALL JEVEUT(K24BD3,'L',I4)
        ZI(ILAMSC+I1-1)=I4
  214 CONTINUE
 9999 CONTINUE
      CALL JEDEMA()
      END
