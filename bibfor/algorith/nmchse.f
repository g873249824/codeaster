      SUBROUTINE NMCHSE(MODE  ,MODELE,NUMEDD,MATE  ,CARELE,
     &                  COMPOR,LISCHA,CARCRI,INST  ,FONACT,
     &                  PARMET,SOLVEU,VALMOI,VALPLU,POUGD ,
     &                  SECMBR,DEPALG,VEELEM,MEELEM,MEASSE,
     &                  SDSENS,SDDYNA,NRPASE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 25/03/2008   AUTEUR REZETTE C.REZETTE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21 
C
      IMPLICIT NONE
      INTEGER       NRPASE     
      REAL*8        INST(*),PARMET(*)
      CHARACTER*4   MODE
      CHARACTER*19  LISCHA,SDDYNA,SOLVEU
      CHARACTER*24  MODELE,MATE,CARELE, NUMEDD
      CHARACTER*24  VALMOI(8),VALPLU(8),SECMBR(8),DEPALG(8),POUGD(8)
      CHARACTER*24  COMPOR,CARCRI,SDSENS
      LOGICAL       FONACT(*)
      CHARACTER*19  MEELEM(8),VEELEM(30)
      CHARACTER*19  MEASSE(8)
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - CALCUL)
C
C CALCUL DES EFFORTS EXTERIEURS POUR LA SENSIBILITE
C      
C ----------------------------------------------------------------------
C 
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMPOR : COMPORTEMENT      (VIEUX THM) ('SUIV')
C IN  LISCHA : L_CHARGES
C IN  CARCRI : PARAMETRES LOCAUX (VIEUX THM) ('SUIV')
C IN  INST   : PARAMETRES INTEGRATION EN TEMPS (T+, DT, THETA)
C IN  DEPMOI : DEPLACEMENT              ('SUIV')
C IN  DEPDEL : INCREMENT DE DEPLACEMENT ('SUIV')
C IN  COMPLU : VARIABLES DE COMMANDES A T+ (POUTRES)
C IN  OLDTHM : PARAMETRES POUR VIELLE VERSION THM (DANS VECGME)
C IN  NRPASE : NUMERO DU PARAMETRE SENSIBLE (0=CALCUL CLASSIQUE)
C IN  NBPASE : NOMBRE DE PARAMETRES SENSIBLES
C IN  INPSCO : SD CONTENANT LISTE DES NOMS POUR SENSIBILITE
C IN  SECOLD : SECOND MEMBRE A L'INSTANT PRECEDENT
C IN  CNFOLD : EFFORTS INTERIEURS A L'INSTANT PRECEDENT
C IN  FOPREC : BOOLEEN D'EXISTENCE DE SECOLD
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE (CF NDLECT)
C I/O SECMBR : VECTEURS ASSEMBLES DES CHARGEMENTS ('FIXE' 'SUIV')
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      REAL*8       INSTAP,INSTAM,R8BID
      LOGICAL      NDYNLO,LIMPED,LSENSI  
      CHARACTER*1  BASE 
      CHARACTER*24 CNFEDO,CNDIDO
      CHARACTER*24 K24BID
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()   
C
C --- INITIALISATIONS
C
      BASE   = 'V' 
      INSTAM = INST(1) - INST(2)  
      INSTAP = INST(1)        
C
C --- FONCTIONNALITES ACTIVEES
C    
      LSENSI = .TRUE. 
      LIMPED = NDYNLO(SDDYNA,'IMPE_ABSO')     
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL DESAGG(SECMBR,CNFEDO,K24BID,CNDIDO,K24BID,
     &            K24BID,K24BID,K24BID,K24BID)
C
C --- CHARGEMENT DU A LA DERIVATION (PARTIE COMPORTEMENT)   
C
      CALL NMCALV('FORC_SENS_COMP',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            INSTAM,INSTAP,CARCRI,PARMET,NUMEDD,
     &            VALMOI,VALPLU,DEPALG,POUGD ,SDSENS,
     &            SDDYNA,LSENSI,NRPASE,BASE  ,MEASSE,
     &            VEELEM)
C      
C --- DERIVATION CHARGEMENTS MECANIQUES DONNES              
C
      CALL NMCALV('FORC_SENS_FIXE',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            INSTAM,INSTAP,CARCRI,PARMET,NUMEDD,
     &            VALMOI,VALPLU,DEPALG,POUGD ,SDSENS,
     &            SDDYNA,LSENSI,NRPASE,BASE  ,MEASSE,
     &            VEELEM)
C
C --- ASSEMBLAGE ---> CNFEDO
C
      CALL NMASSV('FORC_SENS',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            SOLVEU,NUMEDD,FONACT,INSTAM,INSTAP,
     &            R8BID ,R8BID ,SDDYNA,MEELEM,VALMOI,
     &            VALPLU,SECMBR,DEPALG,POUGD ,VEELEM,
     &            LSENSI,SDSENS,NRPASE,MEASSE,CNFEDO)
C      
C --- DERIVATION DEPLACEMENTS IMPOSES DONNES               
C
      CALL NMCALV('DEPL_FIXE',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            INSTAM,INSTAP,CARCRI,PARMET,NUMEDD,
     &            VALMOI,VALPLU,DEPALG,POUGD ,SDSENS,
     &            SDDYNA,LSENSI,NRPASE,BASE  ,MEASSE,
     &            VEELEM)
C
C --- ASSEMBLAGE ---> CNDIDO
C
      CALL NMASSV('DEPL_FIXE',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            SOLVEU,NUMEDD,FONACT,INSTAM,INSTAP,
     &            R8BID ,R8BID ,SDDYNA,MEELEM,VALMOI,
     &            VALPLU,SECMBR,DEPALG,POUGD ,VEELEM,
     &            LSENSI,SDSENS,NRPASE,MEASSE,CNDIDO)
C
      IF (MODE.EQ.'SEDY') THEN 
C      
C --- FORCE INERTIE               
C
        CALL NMCALV('FORC_INER',
     &              MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &              INSTAM,INSTAP,CARCRI,PARMET,NUMEDD,
     &              VALMOI,VALPLU,DEPALG,POUGD ,SDSENS,
     &              SDDYNA,LSENSI,NRPASE,BASE  ,MEASSE,
     &              VEELEM)  
        CALL NMCALV('FORC_MODA_CORR',
     &              MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &              INSTAM,INSTAP,CARCRI,PARMET,NUMEDD,
     &              VALMOI,VALPLU,DEPALG,POUGD ,SDSENS,
     &              SDDYNA,LSENSI,NRPASE,BASE  ,MEASSE,
     &              VEELEM)    
        CALL NMCALV('FORC_AMOR',
     &              MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &              INSTAM,INSTAP,CARCRI,PARMET,NUMEDD,
     &              VALMOI,VALPLU,DEPALG,POUGD ,SDSENS,
     &              SDDYNA,LSENSI,NRPASE,BASE  ,MEASSE,
     &              VEELEM) 
C
C --- ASSEMBLAGE
C     
        CALL NMASSV('FORC_SENS_DYNA',
     &              MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &              SOLVEU,NUMEDD,FONACT,INSTAM,INSTAP,
     &              R8BID ,R8BID, SDDYNA,MEELEM,VALMOI,
     &              VALPLU,SECMBR,DEPALG,POUGD ,VEELEM,
     &              LSENSI,SDSENS,NRPASE,MEASSE,CNFEDO)


        IF (LIMPED) THEN
          CALL ASSERT(.FALSE.)
        ENDIF
      ENDIF
C
      CALL JEDEMA()
      END
