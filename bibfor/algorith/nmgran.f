       SUBROUTINE NMGRAN (FAMI,KPG,KSP,TYPMOD,IMATE,COMPOR,
     &                   INSTAM,INSTAP,TPMXM,TPMXP,DEPST,
     &                   SIGM,VIM,OPTION,SIGP,VIP,DSIDEP)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      INTEGER            IMATE,KPG,KSP
      CHARACTER*8        TYPMOD(*)
      CHARACTER*16       COMPOR(3),OPTION
      CHARACTER*(*)      FAMI
      REAL*8             INSTAM,INSTAP
      REAL*8             TPMXM, TPMXP
      REAL*8             DEPST(6)
      REAL*8             SIGM(6),VIM(55),SIGP(6),VIP(55),DSIDEP(6,6)
C ----------------------------------------------------------------------
C     REALISE LA LOI VISCOELASTIQUE DE GRANGER (FLUAGE PROPRE)
C     ELEMENTS ISOPARAMETRIQUES EN PETITES DEFORMATIONS
C
C IN  NDIM    : DIMENSION DE L'ESPACE
C IN  TYPMOD  : TYPE DE MODELISATION
C IN  IMATE   : ADRESSE DU MATERIAU CODE
C IN  COMPOR  : COMPORTEMENT : RELCOM ET DEFORM
C IN  CRIT    : CRITERES DE CONVERGENCE LOCAUX
C IN  INSTAM  : INSTANT DU CALCUL PRECEDENT
C IN  INSTAP  : INSTANT DU CALCUL
C IN  TPMXM   : TEMPERATURE MAX ATTEINTE AU COURS DE L'HISTORIQUE DE
C               CHARGEMENT A T (POUR LE COUPLAGE FLUAGE/FISSURATION)
C IN  TPMXP   : TEMPERATURE MAX ATTEINTE AU COURS DE L'HISTORIQUE DE
C               CHARGEMENT A T+DT (POUR LE COUPLAGE FLUAGE/FISSURATION)
C IN  DEPST   : INCREMENT DE DEFORMATION
C               SI C_PLAN DEPST(3) EST EN FAIT INCONNU (ICI:0)
C                 =>  ATTENTION LA PLACE DE DEPST(3) EST ALORS UTILISEE.
C IN  SIGM    : CONTRAINTES A L'INSTANT DU CALCUL PRECEDENT
C IN  VIM     : VARIABLES INTERNES A L'INSTANT DU CALCUL PRECEDENT
C IN  OPTION  : OPTION DEMANDEE : RIGI_MECA_TANG , FULL_MECA , RAPH_MECA
C OUT SIGP    : CONTRAINTES A L'INSTANT ACTUEL
C OUT VIP     : VARIABLES INTERNES A L'INSTANT ACTUEL
C OUT DSIDEP  : MATRICE CARREE (INUTILISE POUR RAPH_MECA)
C
C               ATTENTION LES TENSEURS ET MATRICES SONT RANGES DANS
C               L'ORDRE :  XX,YY,ZZ,SQRT(2)*XY,SQRT(2)*XZ,SQRT(2)*YZ
C
C ----------------------------------------------------------------------
C
      REAL*8      VALRES(16),TM,TP,TREF
      REAL*8      E,NU,TROISK,DEUXMU
      REAL*8      DELTA, DTEQT,AGEM,AGEP,DAGE,TCEQ
      REAL*8      TEMP, TABS, R8T0,TKM,TKP,TMPRIM,TPPRIM,TKREF
      REAL*8      KRON(6),FTPRIM,HYDRM, HYDRP,SECHM, SECHP, SREF
      REAL*8      EM,NUM,TROIKM,DEUMUM
      REAL*8      DEPSMO, DEPSDV(6),SIGMMO,SIGMDV(6),SIGPMO, SIGPDV(6)
      REAL*8      SMDV(6),SPDV(6),SMMO,SPMO,DSDV(6),DSMO,DEPS(6),DEPS3
      REAL*8      SIGLDV(6), SIGLMO ,SIGMP(6),SIGMPO, SIGMPD(6)
      INTEGER     NDIMSI,IBID,IRET
      INTEGER     I,K,L,N, IISNAN,IRET1,IRET2,IRET3
      INTEGER     ICODRE(16)
      CHARACTER*8 NOMRES(16),MOD
      CHARACTER*8 NOMPAR
      REAL*8      VALPAM,VALPAP
      REAL*8      BENDOM,BENDOP,KDESSM,KDESSP
      REAL*8      J(8),TAUX(8),HYGRM,HYGRP,QSRT,QSRV,VIEIL
      REAL*8      AMDV(6,9),APDV(6,9),AMMO(9),APMO(9),AP(6,9),AM(6,9)
      REAL*8      THER,COEFA(9),COEFC(9),COEFF(9),COEFB,COEFD,COEFT
      REAL*8      COEFG,COEFH,COEFI,COEFJ,COEFV,COEFK(9),EPSTHP,EPSTHM
      LOGICAL     CPLAN
      DATA        KRON/1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
C DEB -----------------------------------------------------------------
C
      CALL RCVARC('F','TEMP','-',FAMI,KPG,KSP,TM,IRET2)
      CALL RCVARC('F','TEMP','+',FAMI,KPG,KSP,TP,IRET3)
      CALL RCVARC('F','TEMP','REF',FAMI,KPG,KSP,TREF,IRET1)
      IF ((IRET1+IRET2+IRET3).GE.1) CALL U2MESS('F','CALCULEL_31')
      NOMPAR = 'TEMP'
C
C     -- 1 INITIALISATIONS :
C     ----------------------
C
C
      CPLAN =  TYPMOD(1) .EQ. 'C_PLAN'
C
C      NDIMSI = 2*NDIM
      MOD      = TYPMOD(1)
      CALL GRANVI (MOD , NDIMSI , IBID , IBID )
      CALL MATINI(6,6,0.D0,DSIDEP)
      IF (.NOT.( COMPOR(1)(1:10) .EQ. 'GRANGER_FP' )) THEN
          CALL U2MESK('F','ALGORITH4_50',1,COMPOR(1))
      ENDIF
      DELTA = INSTAP-INSTAM
      TEMP = (TP+TM)/2
      TABS=R8T0()
      TEMP=TEMP+TABS
      TKM=TM+TABS
      TKP=TP+TABS
      TKREF=TREF+TABS
      L=0
      DO 40 I=1,9
         DO 41 K=1,NDIMSI
            L=L+1
            AM(K,I)=VIM(L)
  41     CONTINUE
         AMMO(I)=0.D0
         DO 42 N=1,3
            AMMO(I)=AMMO(I)+AM(N,I)
  42     CONTINUE
         AMMO(I)=AMMO(I)/3.D0
         DO 43 K=1,NDIMSI
            AMDV(K,I)=AM(K,I)-AMMO(I)*KRON(K)
  43     CONTINUE
  40  CONTINUE
      AGEM = VIM(L+1)
C
C     -- 2 RECUPERATION DES CARACTERISTIQUES
C     ---------------------------------------
      NOMRES(1)='E'
      NOMRES(2)='NU'
      NOMRES(3)='ALPHA'
C
      NOMPAR = 'TEMP'
      VALPAM = TPMXM
      VALPAP = TPMXP
C

      CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS',1,NOMPAR,VALPAM,
     &            2,NOMRES,VALRES,ICODRE, 2)

      CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS',1,NOMPAR,VALPAM,
     &            1,NOMRES(3),VALRES(3),ICODRE(3), 2)
      IF ((IISNAN(TP).EQ.0).AND.(IISNAN(TM).EQ.0)) THEN
        IF ((ICODRE(3).NE.0).OR.(IISNAN(TREF).NE.0)) THEN
          CALL U2MESS('F','CALCULEL_15')
        ELSE
          EPSTHM = VALRES(3)*(TM-TREF)
        ENDIF
      ELSE
        VALRES(3) = 0.D0
        EPSTHM = 0.D0
      ENDIF
      EM  = VALRES(1)
      NUM = VALRES(2)
      DEUMUM = EM/(1.D0+NUM)
      TROIKM = EM/(1.D0-2.D0*NUM)


      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS',1,NOMPAR,VALPAP,
     &            2,NOMRES,VALRES,ICODRE, 2)

      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS',1,NOMPAR,VALPAP,
     &            1,NOMRES(3),VALRES(3),ICODRE(3), 0)

      IF ( ICODRE(3) .NE.0    ) THEN
           VALRES(3) = 0.D0
           EPSTHP = 0.D0
      ELSEIF (((IISNAN(TP).GT.0).OR.(IISNAN(TM).GT.0).OR.
     &   (IISNAN(TREF).GT.0)).AND.(ICODRE(3) .EQ. 0 )) THEN
         CALL U2MESS('F','CALCULEL_15')
      ELSE
           EPSTHP = VALRES(3)*(TP-TREF)
      ENDIF
      E      = VALRES(1)
      NU     = VALRES(2)
      DEUXMU = E/(1.D0+NU)
      TROISK = E/(1.D0-2.D0*NU)
C
C ------- CARAC. RETRAIT ENDOGENE ET RETRAIT DE DESSICCATION
C
      NOMRES(1)='B_ENDOGE'
      NOMRES(2)='K_DESSIC'
      CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS',1,NOMPAR,VALPAM,
     &            1,NOMRES,VALRES,ICODRE, 0)

      IF ( ICODRE(1) .NE.0    ) VALRES(1) = 0.D0
      BENDOM = VALRES(1)
C
      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS',1,NOMPAR,VALPAP,
     &            1,NOMRES,VALRES,ICODRE, 0)

      IF ( ICODRE(1) .NE.0    ) VALRES(1) = 0.D0
      BENDOP = VALRES(1)
C
      CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS',1,NOMPAR,VALPAM,
     &            1,NOMRES(2),VALRES(2),ICODRE, 0)

      IF ( ICODRE(2) .NE.0    ) VALRES(2) = 0.D0
      KDESSM = VALRES(2)
C
      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS',1,NOMPAR,VALPAP,
     &            1,NOMRES(2),VALRES(2),ICODRE, 0)

      IF ( ICODRE(2) .NE.0    ) VALRES(2) = 0.D0
      KDESSP = VALRES(2)
C
C  ------- CARACTERISTIQUES FONCTION DE FLUAGE
C
      NOMRES(1) = 'J1'
      NOMRES(2) = 'J2'
      NOMRES(3) = 'J3'
      NOMRES(4) = 'J4'
      NOMRES(5) = 'J5'
      NOMRES(6) = 'J6'
      NOMRES(7) = 'J7'
      NOMRES(8) = 'J8'
      NOMRES(9) = 'TAUX_1'
      NOMRES(10) = 'TAUX_2'
      NOMRES(11) = 'TAUX_3'
      NOMRES(12) = 'TAUX_4'
      NOMRES(13) = 'TAUX_5'
      NOMRES(14) = 'TAUX_6'
      NOMRES(15) = 'TAUX_7'
      NOMRES(16) = 'TAUX_8'
      COEFJ=0.D0
      DO 110 I=1,8
         CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','GRANGER_FP',0,' ',0.D0,
     &               1,NOMRES(I),VALRES(I),ICODRE(I), 0)
         CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','GRANGER_FP',0,' ',0.D0,
     &               1,NOMRES(I+8),VALRES(I+8),ICODRE(I+8), 0)
         IF ( (ICODRE(I) .NE.0) .AND. (ICODRE(I+8) .NE.0)) THEN
             VALRES(I) = 0.D0
             VALRES(I+8)=1.D0
         ELSEIF ( ((ICODRE(I) .EQ. 0) .AND. (ICODRE(I+8) .NE. 0))
     &   .OR. ((ICODRE(I) .NE. 0) .AND. (ICODRE(I+8) .EQ. 0)))
     &   THEN
             CALL U2MESS('F','ALGORITH8_2')
         ENDIF
         J(I)=VALRES(I)
         TAUX(I)=VALRES(I+8)
         COEFJ=COEFJ+J(I)
 110  CONTINUE
C
C  ------- CARACTERISTIQUES EFFET DE LA TEMPERATURE
C
      IF (COMPOR(1) (1:15) .EQ. 'GRANGER_FP_INDT') THEN
        DTEQT=DELTA
C
        TMPRIM=1.D0
        TPPRIM=1.D0
      ELSE
        NOMRES(1)='QSR_K'
        CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','GRANGER_FP',0,' ',0.D0,
     &              1,   NOMRES(1),VALRES(1),ICODRE(1), 0)
        IF (ICODRE(I) .NE.0) VALRES(1)=0.D0
        QSRT=VALRES(1)
        COEFT=(-QSRT)*(1/TEMP-1/TKREF)
        COEFT=EXP(COEFT)
        DTEQT=COEFT*DELTA
C
        TMPRIM=FTPRIM(TKM, TKREF)
        TPPRIM=FTPRIM(TKP,TKREF)
      ENDIF
C
C  ------- CARACTERISTIQUES EFFET DU VIEILLISSEMENT
C
      IF (COMPOR(1) (1:14) .EQ. 'GRANGER_FP_V') THEN
         NOMRES(1)='QSR_V'
         CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','GRANGER_FP',0,' ',0.D0,
     &               1,NOMRES(1),VALRES(1),ICODRE(1), 0)
         IF (ICODRE(I) .NE.0) VALRES(1)=0.D0
         QSRV=VALRES(1)
C
C  -------- FONCTION MULTIPLICATIVE - VIEILLISSEMENT K
C
C  ------------ AGE EQUIVALENT DU BETON : AGE
         COEFV=(-QSRV)*(1/TEMP-1/TKREF)
         COEFV=EXP(COEFV)
         DAGE = COEFV*DELTA
         AGEP = AGEM+DAGE
         TCEQ = (AGEM+AGEP)/2
         NOMRES(1)='FONC_V'
         CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','V_GRANGER_FP',
     &               1,'INST',TCEQ,1,NOMRES,VALRES,ICODRE, 0)

         VIEIL = VALRES(1)
      ELSE
         VIEIL = 1.D0
         DAGE = DELTA
         AGEP=AGEM+DAGE
      ENDIF
C
C  ------- CARACTERISTIQUES HYGROMETRIE H
C
      NOMRES(1)='FONC_DESORP'
      CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS',
     &            1,NOMPAR,VALPAM,1,NOMRES,VALRES,ICODRE, 2)

         IF  (ICODRE(1) .NE.0)  THEN
             CALL U2MESS('F','ALGORITH7_98')
         ENDIF
      HYGRM=VALRES(1)
      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS',
     &            1,NOMPAR,VALPAP,1,NOMRES,VALRES,ICODRE, 2)

         IF  (ICODRE(1) .NE.0)  THEN
             CALL U2MESS('F','ALGORITH7_98')
         ENDIF
      HYGRP=VALRES(1)

C
C--3  CALCUL DE SIGMP, SIGEL
C   -------------------------
      SIGMMO = 0.D0
      DO 113 K =1,3
         SIGMMO = SIGMMO + SIGM(K)
 113  CONTINUE
      SIGMMO = SIGMMO /3.D0
      DO 140 K=1,NDIMSI
         SIGMDV(K) = SIGM(K)- SIGMMO * KRON(K)
         SIGMP(K)=DEUXMU/DEUMUM*SIGMDV(K) +
     &            TROISK/TROIKM*SIGMMO*KRON(K)
140   CONTINUE
      SIGMPO = 0.D0
      DO 116 K =1,3
         SIGMPO = SIGMPO + SIGMP(K)
 116  CONTINUE
      SIGMPO = SIGMPO /3.D0
      DO 127 K=1,NDIMSI
         SIGMPD(K) = SIGMP(K)- SIGMPO * KRON(K)
 127  CONTINUE
C
C -------  QUELQUES COEFFICIENTS-------------------------
C
      COEFB=0.D0
      DO 150 I=1,8
         COEFB=COEFB+J(I)*(1-(TAUX(I)/DELTA)*(1-EXP(-DTEQT/TAUX(I))))
  150 CONTINUE
      COEFD=(HYGRP*TPPRIM*VIEIL)*COEFB
      DO 135 K=1,NDIMSI
         COEFA(K)=0.D0
         DO 130 I=1,8
            COEFA(K)=COEFA(K)+AMDV(K,I)*(1-EXP(-DTEQT/TAUX(I)))
  130    CONTINUE
         COEFC(K)= (SIGMDV(K)*HYGRM*TMPRIM)*VIEIL*COEFB
         COEFF(K)=COEFA(K)-COEFC(K)
  135 CONTINUE
      COEFA(9)=0.D0
      DO 118 I=1,8
         COEFA(9)=COEFA(9)+AMMO(I)*(1-EXP(-DTEQT/TAUX(I)))
  118 CONTINUE
      COEFC(9)= (SIGMMO*HYGRM*TMPRIM)*VIEIL*COEFB
      COEFF(9)=COEFA(9)-COEFC(9)
      DO 125 K=1,3
         COEFK(K)= COEFF(K)+COEFF(9)
  125 CONTINUE
C
C ------- CALCUL DE DEPSMO ET DEPSDV
C

      CALL RCVARC(' ','HYDR','+',FAMI,KPG,KSP,HYDRP,IRET)
      IF ( IRET.NE.0) HYDRP=0.D0
      CALL RCVARC(' ','HYDR','-',FAMI,KPG,KSP,HYDRM,IRET)
      IF ( IRET.NE.0) HYDRM=0.D0
      CALL RCVARC(' ','SECH','+',FAMI,KPG,KSP,SECHP,IRET)
      IF ( IRET.NE.0) SECHP=0.D0
      CALL RCVARC(' ','SECH','-',FAMI,KPG,KSP,SECHM,IRET)
      IF ( IRET.NE.0) SECHM=0.D0
      CALL RCVARC(' ','SECH','REF',FAMI,KPG,KSP,SREF,IRET)
      IF ( IRET.NE.0) SREF=0.D0
      THER = EPSTHP     - EPSTHM
     &     - BENDOP*HYDRP        + BENDOM*HYDRM
     &     - KDESSP*(SREF-SECHP) + KDESSM*(SREF-SECHM)
      IF (CPLAN) THEN
         DEPS3=-NU/(1.D0-NU)*(DEPST(1)+DEPST(2))
     &            +(1.D0+NU)/(1.D0-NU)*THER
         DEPS3=DEPS3+(3.D0*E/(DEUXMU*2.D0+TROISK))*COEFK(3)
         DEPS3=DEPS3-(3.D0/(DEUXMU*2.D0+TROISK))*SIGMP(3)
      ENDIF
      DEPSMO = 0.D0
      DO 111 K=1,3
         DEPS(K)   = DEPST(K)-THER
         DEPS(K+3) = DEPST(K+3)
         DEPSMO = DEPSMO + DEPS(K)
 111  CONTINUE
      IF (CPLAN) THEN
         DEPS(3)   = DEPS3-THER
         DEPSMO = DEPS(1) + DEPS(2) + DEPS(3)
      ENDIF
      DEPSMO = DEPSMO/3.D0
      DO 115 K=1,NDIMSI
         DEPSDV(K)   = DEPS(K) - DEPSMO * KRON(K)
 115  CONTINUE
C
      DO 129 K=1,NDIMSI
         SIGLDV(K)  = SIGMPD(K) + DEUXMU * DEPSDV(K)
 129  CONTINUE
      SIGLMO = SIGMPO +TROISK*DEPSMO
C
C--4-CALCUL DE SIGP
C------------------------
C
      IF ( (OPTION(1:9) .EQ. 'RAPH_MECA') .OR.
     &     (OPTION(1:9) .EQ. 'FULL_MECA')     ) THEN
         DO 117 K = 1,NDIMSI
           SIGPDV(K)=SIGLDV(K)-E*COEFF(K)
           SIGPDV(K)=SIGPDV(K)/(1+E*COEFD)
 117     CONTINUE
         SIGPMO= SIGLMO-E*COEFF(9)
         SIGPMO = SIGPMO/(1+E*COEFD)
         DO 151 K=1,NDIMSI
            SIGP(K)=SIGPDV(K)+SIGPMO*KRON(K)
  151    CONTINUE
C
C-- 6 CALCUL DE VIP
C   -------------------
C--------CALCUL DE DS
         DO 119 K=1,NDIMSI
            SMDV(K)=SIGMDV(K)*HYGRM*TMPRIM
            SPDV(K)=SIGPDV(K)*HYGRP*TPPRIM
            DSDV(K)=SPDV(K)-SMDV(K)
  119    CONTINUE
         SMMO=SIGMMO*HYGRM*TMPRIM
         SPMO=SIGPMO*HYGRP*TPPRIM
         DSMO = SPMO-SMMO
C--------CALCUL DE APDV, APMO
         DO 160 I=1,8
            DO 170 K=1,NDIMSI
               APDV(K,I)=AMDV(K,I)*EXP(-DTEQT/TAUX(I))
               APDV(K,I)=APDV(K,I)+ DSDV(K)*VIEIL
     &                  *J(I)*(TAUX(I)/DELTA)*(1-EXP(-DTEQT/TAUX(I)))
  170       CONTINUE
            APMO(I)= AMMO(I)*EXP(-DTEQT/TAUX(I))
            APMO(I)=APMO(I)+ DSMO*VIEIL
     &                *J(I)*(TAUX(I)/DELTA)*(1-EXP(-DTEQT/TAUX(I)))
  160    CONTINUE
C
          DO 180 K=1,NDIMSI
             APDV(K,9)=AMDV(K,9)
             DO 190 I=1,8
                APDV(K,9)=APDV(K,9)+J(I)*VIEIL*DSDV(K)
  190        CONTINUE
  180     CONTINUE
          APMO(9)= AMMO(9)
          DO 200 I=1,8
             APMO(9)=APMO(9)+J(I)*VIEIL*DSMO
  200     CONTINUE
C--------CALCUL DES AP ET DES VIP
          L=0
          DO 210 I=1,9
             DO 220 K=1,NDIMSI
                AP(K,I)=APDV(K,I)+APMO(I)*KRON(K)
                L=L+1
                VIP(L)=AP(K,I)
  220        CONTINUE
  210     CONTINUE
          VIP(L+1)=AGEP
      ENDIF
C
C-- 7 CALCUL DE DSIDEP POUR LA MATRICE TANGENTE
C   -------------------------------------------
      IF ( (OPTION(1:14) .EQ. 'RIGI_MECA_TANG').OR.
     &     (OPTION(1:9)  .EQ. 'FULL_MECA' )        ) THEN
         IF ( OPTION(1:9)  .EQ. 'FULL_MECA') THEN
            COEFG=COEFD
            COEFH=(1+E*COEFG)
            COEFI=(1+E*COEFG)
         ELSE
C        (METRICE ELASTIQUE)
             COEFH = 1.D0
             COEFI = 1.D0
         ENDIF
         DO 260 K=1,3
            DO 270 L=1,3
               DSIDEP(K,L) = DSIDEP(K,L)+(TROISK/(3.D0*COEFI))
               DSIDEP(K,L) = DSIDEP(K,L)-DEUXMU/(3.D0*COEFH)
 270        CONTINUE
 260     CONTINUE
         DO 280 K=1,NDIMSI
            DSIDEP(K,K) = DSIDEP(K,K) + DEUXMU/COEFH
 280     CONTINUE
C
C----------- CORRECTION POUR LES CONTRAINTES PLANES :
         IF (CPLAN) THEN
           DO 136 K=1,NDIMSI
             IF (K.EQ.3) GO TO 136
             DO 137 L=1,NDIMSI
               IF (L.EQ.3) GO TO 137
                  DSIDEP(K,L)=DSIDEP(K,L)
     &           - 1.D0/DSIDEP(3,3)*DSIDEP(K,3)*DSIDEP(3,L)
 137        CONTINUE
 136      CONTINUE
         ENDIF
      ENDIF
      END
