      SUBROUTINE NGFINT(OPTION,TYPMOD,NDIM,NDDL,NEPS,NPG,W,B,COMPOR,
     &  FAMI,MAT,ANGMAS,LGPG,CRIT,INSTAM,INSTAP,DDLM,DDLD,NI2LDC,SIGMAM,
     &  VIM,SIGMAP,VIP,FINT,MATR,CODRET)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/03/2012   AUTEUR PROIX J-M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
       IMPLICIT NONE

       CHARACTER*8   TYPMOD(*)
       CHARACTER*(*) FAMI
       CHARACTER*16  OPTION, COMPOR(*)

       INTEGER NDIM,NDDL,NEPS,NPG,MAT,LGPG,CODRET
       REAL*8  W(0:NPG-1),NI2LDC(0:NEPS-1),B(NEPS,NPG,NDDL)
       REAL*8  ANGMAS(3),CRIT(*),INSTAM,INSTAP
       REAL*8  DDLM(NDDL),DDLD(NDDL)
       REAL*8  SIGMAM(0:NEPS*NPG-1),SIGMAP(0:NEPS*NPG-1)
       REAL*8  VIM(LGPG,NPG),VIP(LGPG,NPG),MATR(NDDL,NDDL),FINT(NDDL)
C ----------------------------------------------------------------------
C     RAPH_MECA, RIGI_MECA_* ET FULL_MECA_* 
C ----------------------------------------------------------------------
C IN  OPTION  : OPTION DE CALCUL
C IN  TYPMOD  : TYPE DE MODEELISATION                              (LDC)
C IN  NDIM    : DIMENSION DE L'ESPACE                              (LDC)
C IN  NDDL    : NOMBRE DE DEGRES DE LIBERTE 
C IN  NEPS    : NOMBRE DE COMPOSANTES DE DEFORMATION ET CONTRAINTE
C IN  NPG     : NOMBRE DE POINTS DE GAUSS
C IN  W       : POIDS DES POINTS DE GAUSS 
C IN  B       : MATRICE CINEMATIQUE : DEFORMATION = B.DDL
C IN  COMPOR  : COMPORTEMENT                                       (LDC)
C IN  MAT     : MATERIAU CODE                                      (LDC)
C IN  ANGMAS  : ANGLE DU REPERE LOCAL                              (LDC)
C IN  LGPG    : LONGUEUR DU TABLEAU DES VARIABLES INTERNES
C IN  CRIT    : CRITERES DE CONVERGENCE LOCAUX                     (LDC)
C IN  INSTAM  : INSTANT PRECEDENT                                  (LDC)
C IN  INSTAP  : INSTANT DE CALCUL                                  (LDC)
C IN  DDLM    : DDL A L'INSTANT PRECEDENT
C IN  DDLD    : INCREMENT DES DDL
C IN  LI2LDC  : CONVERSION CONTRAINTE STOCKEE -> CONTRAINTE LDC (RAC2)
C IN  SIGMAM  : CONTRAINTES A L'INSTANT PRECEDENT
C IN  VIM     : VARIABLES INTERNES A L'INSTANT PRECEDENT
C OUT SIGMAP  : CONTRAINTES DE CAUCHY (RAPH_MECA   ET FULL_MECA_*)
C OUT VIP     : VARIABLES INTERNES    (RAPH_MECA   ET FULL_MECA_*)
C OUT FINT    : FORCES INTERIEURES    (RAPH_MECA   ET FULL_MECA_*)
C OUT MATR    : MATRICE DE RIGIDITE   (RIGI_MECA_* ET FULL_MECA_*)
C OUT CODRET  : CODE RETOUR
C ----------------------------------------------------------------------
      INTEGER    NNOMAX,NPGMAX,EPSMAX,DDLMAX
      PARAMETER (NNOMAX=27,NPGMAX=27,EPSMAX=20,DDLMAX=15*NNOMAX)
C ----------------------------------------------------------------------
      LOGICAL RESI,RIGI
      INTEGER NEPG,G,IEG,COD(NPGMAX)
      REAL*8 SIGM(0:EPSMAX*NPGMAX-1),SIGP(0:EPSMAX*NPGMAX-1)
      REAL*8 EPSM(0:EPSMAX*NPGMAX-1),EPSD(0:EPSMAX*NPGMAX-1)
      REAL*8 DSIDEP(0:EPSMAX*EPSMAX*NPGMAX-1),DUM
      REAL*8 KTGB(0:EPSMAX*NPGMAX*DDLMAX-1)
C ----------------------------------------------------------------------
      INTEGER OS,DOS
      OS(G)        = (G-1)*NEPS
      DOS(G)       = (G-1)*NEPS*NEPS
C ----------------------------------------------------------------------

C - INITIALISATION
      
      CALL ASSERT( NPG.LE.NPGMAX)
      CALL ASSERT(NEPS.LE.EPSMAX)
      CALL ASSERT(NDDL.LE.DDLMAX)
      NEPG  = NEPS*NPG
      
      RESI  = OPTION(1:9).EQ.'FULL_MECA' .OR. OPTION(1:9).EQ.'RAPH_MECA'
      RIGI  = OPTION(1:9).EQ.'FULL_MECA' .OR. OPTION(1:9).EQ.'RIGI_MECA'

      IF (RIGI) CALL R8INIR(NEPS*NEPG,0.D0,DSIDEP,1)      
      IF (RESI) CALL R8INIR(NEPG,0.D0,SIGP,1)

      DO 5 G=1,NPG
        COD(G)=0
 5    CONTINUE



C - CALCUL DES DEFORMATIONS GENERALISEES

      CALL DGEMV('N',NEPG,NDDL,1.D0,B,NEPG,DDLM,1,0.D0,EPSM,1)
      CALL DGEMV('N',NEPG,NDDL,1.D0,B,NEPG,DDLD,1,0.D0,EPSD,1)
 


C - CALCUL DE LA LOI DE COMPORTEMENT
    
C    FORMAT LDC DES CONTRAINTES (AVEC RAC2)
      DO 10 IEG = 0,NEPG-1
        SIGM(IEG) = SIGMAM(IEG)*NI2LDC(MOD(IEG,NEPS))
 10   CONTINUE
 
C    LOI DE COMPORTEMENT EN CHAQUE POINT DE GAUSS
      DO 20 G = 1,NPG
        CALL NMCOMP(FAMI,G,1,NDIM,TYPMOD,MAT,COMPOR,CRIT,INSTAM,INSTAP,
     &    NEPS,EPSM(OS(G)),EPSD(OS(G)),NEPS,SIGM(OS(G)),VIM(1,G),OPTION,
     &    ANGMAS,1,DUM,SIGP(OS(G)),VIP(1,G),NEPS*NEPS,DSIDEP(DOS(G)),1,
     &    DUM,COD(G))
        IF(COD(G).EQ.1) GOTO 9000
 20   CONTINUE
 
C    FORMAT RESULTAT DES CONTRAINTES (SANS RAC2)
      IF (RESI) THEN
        DO 30 IEG = 0,NEPG-1
          SIGMAP(IEG) = SIGP(IEG)/NI2LDC(MOD(IEG,NEPS))
 30     CONTINUE
      END IF


 
C - FORCE INTERIEURE 

      IF (RESI) THEN

C      PRISE EN CHARGE DU POIDS DU POINT DE GAUSS
        DO 40 IEG=0,NEPG-1
          SIGP(IEG) = SIGP(IEG)*W(IEG/NEPS)
 40     CONTINUE

C      FINT = SOMME(G) WG.BT.SIGMA
        CALL DGEMV('T',NEPG,NDDL,1.D0,B,NEPG,SIGP,1,0.D0,FINT,1)
      
      END IF  



C - CALCUL DE LA MATRICE DE RIGIDITE (STOCKAGE PAR LIGNES SUCCESSIVES)

      IF (RIGI) THEN

C      PRISE EN CHARGE DU POIDS DU POINT DE GAUSS  WG.DSIDEP    
        DO 50 IEG = 0,NEPS*NEPG-1
          DSIDEP(IEG) = DSIDEP(IEG)*W(IEG/(NEPS*NEPS))
 50     CONTINUE
 
C      CALCUL DES PRODUITS INTERMEDIAIRES (WG.DSIDEP).B POUR CHAQUE G
        DO 60 G = 1,NPG
          CALL DGEMM('N','N',NEPS,NDDL,NEPS,1.D0,DSIDEP(DOS(G)),NEPS,
     &               B(1,G,1),NEPG,0.D0,KTGB(OS(G)),NEPG)
 60     CONTINUE

C      CALCUL DU PRODUIT FINAL SOMME(G) BT. ((WG.DSIDEP).B)  TRANSPOSE
        CALL DGEMM('T','N',NDDL,NDDL,NEPG,1.D0,KTGB,NEPG,B,NEPG,0.D0,
     &             MATR,NDDL)
      
      END IF



C - SYNTHESE DU CODE RETOUR
 9000 CONTINUE
      IF (RESI) CALL CODERE(COD,NPG,CODRET)

      END
