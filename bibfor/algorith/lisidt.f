      SUBROUTINE LISIDT(LISCHA,GENCHZ,MOTCLZ,LISTIC,NBIDEN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 17/01/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
      IMPLICIT      NONE
      CHARACTER*19  LISCHA
      CHARACTER*(*) MOTCLZ,GENCHZ
      CHARACTER*24  LISTIC
      INTEGER       NBIDEN
C
C ----------------------------------------------------------------------
C
C ROUTINE UTILITAIRE (LISTE_CHARGES)
C
C IDENTIFICATION DES CHARGEMENTS ISSUS D'UN MOT-CLEF DONNE
C
C ----------------------------------------------------------------------
C
C
C IN  LISCHA : SD LISTE DES CHARGES
C IN  MOTCLE : MOT-CLEF DANS AFFE_CHAR_*
C IN  GENCHA : GENRE DE LA CHARGE
C OUT LISTIC : OBJET CONTENANT LA LISTE DES OBJETS
C OUT NBIDEN : LONGUEUR UTILE DE LISTIC
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      ICHAR,NBCHAR
      INTEGER      I,IBID
      INTEGER      NBCH,ICH,INDXCH,IPOSIT,ITYPOB
      INTEGER      CODCHA,TABCOD(30)
      INTEGER      JLIST
      CHARACTER*13 PREFOB
      CHARACTER*24 MOTCLE,K24BID,NOMOBJ
      LOGICAL      LOK,LEXIS,LISEXI
      CHARACTER*8  K8BID
      CHARACTER*24 NOMLIS
      INTEGER      JLISCI
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- POSITION ENTIER CODE POUR CE GENRE
C
      NOMLIS = '&&LISIDT.NOMLIS'
      CALL LISDEF('POEC',GENCHZ,IBID  ,K8BID ,IPOSIT)
C
C --- NOMBRE DE CHARGEMENTS
C
      CALL LISNNB(LISCHA,NBCHAR)
C
C --- CREATION LISTE DES INDEX CONTENANT CE CHARGEMENT
C
      CALL WKVECT(LISTIC,'V V K24',NBCHAR,JLIST)
C
C --- BOUCLE SUR LES CHARGES
C
      I = 0
      DO 10 ICHAR = 1,NBCHAR
C
C ----- NOM DU PREFIXE DE L'OBJET DE LA CHARGE
C
        CALL LISLLC(LISCHA,ICHAR ,PREFOB)
C
C ----- GENRES DE CHARGE STOCKE SUR CE CHARGEMENT
C
        CALL LISLCO(LISCHA,ICHAR ,CODCHA)
C
        CALL ISDECO(CODCHA,TABCOD,30)
        IF (TABCOD(IPOSIT).EQ.1) THEN
C
C ------- LISTE DES CHARGES DISPO POUR CE GENRE
C
          CALL LISDEF('IDNS',NOMLIS,IPOSIT,K8BID ,NBCH  )
C
          CALL JEVEUO(NOMLIS,'L',JLISCI)
          LOK    = .FALSE.
          NOMOBJ = ' '
          DO 20 ICH = 1,NBCH
            INDXCH = ZI(JLISCI-1+ICH)
            LEXIS  = LISEXI(PREFOB,INDXCH)
            CALL LISDEF('MOTC',K24BID,INDXCH,MOTCLE,IBID  )
            IF (LEXIS) THEN
              IF (MOTCLE.EQ.MOTCLZ) THEN
                LOK = .TRUE.
                CALL LISDEF('OBJE',PREFOB,INDXCH,NOMOBJ,ITYPOB)
              ENDIF
            ENDIF
  20      CONTINUE
          CALL JEDETR(NOMLIS)
        ENDIF
C
C ----- SAUVEGARDE
C
        IF (LOK) THEN
          I = I + 1
          ZK24(JLIST-1+I) = NOMOBJ
        ENDIF
C
  10  CONTINUE
C
      NBIDEN = I
C
      CALL JEDEMA()
      END
