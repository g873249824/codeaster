      SUBROUTINE NMCRIT(NOMSD ,NBINST,TYPSEL,NUME  ,INST  ,
     &                  FREQ  ,TOLE  ,LSELEC)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 28/02/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE 
      CHARACTER*19 NOMSD
      REAL*8       INST
      CHARACTER*4  TYPSEL
      LOGICAL      LSELEC
      INTEGER      NUME,FREQ,NBINST
      REAL*8       TOLE
C
C ----------------------------------------------------------------------
C
C ROUTINE *_NON_LINE (UTILITAIRE - SELEC. INST.)
C
C L'INSTANT CHOISI DE VALEUR <INST> ET D'ORDRE <NUME> EST-IL 
C SELECTIONNE DANS LA LISTE D'INSTANTS <LIST> OU PAR UN PAS 
C DE FREQUENCE <FREQ> DONNE ?
C
C ----------------------------------------------------------------------
C  
C
C IN  NOMSD  : NOM DE LA SD 
C IN  TYPSEL : TYPE DE SELECTION
C              FREQ - PAR FREQUENCE SUR LES NUMEROS D'ORDRE DE LA LISTE
C              INST - PAR VALEUR D'INSTANT CHERCHE DANS LA LISTE
C IN  DEBUT  : DEBUT DE LA RECHERCHE DE L'INSTANT (SAUVEGARDE AILLEURS
C               POUR GAGNER DU TEMPS CAR LA LISTE EST CROISSANTE)
C IN  INST   : INSTANT CHERCHE SI TYPSEL='INST'
C IN  NUME   : ORDRE DE L'INSTANT SI TYPSEL='FREQ'
C IN  TOLE   : TOLERANCE POUR RECHERCHE DANS LISTE D'INSTANTS
C               >0 PRECISION RELATIVE (A MULTIPLIER PAR DELTA_MIN)
C               <0 PRECISION ABSOLUE
C IN  DTMIN  : DELTA MINIMUM SUR LA LISTE
C IN  FREQ   : FREQUENCE DE SELECTION
C OUT LSELEC : .TRUE. SI INSANT SELECTIONNE
C      
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER      ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8       ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16   ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL      ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8  ZK8
      CHARACTER*16    ZK16
      CHARACTER*24        ZK24
      CHARACTER*32            ZK32
      CHARACTER*80                ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C 
      REAL*8       RESTE
      INTEGER      NBINDI
      CHARACTER*24 SDLIST
      INTEGER      JLIST     
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      LSELEC = .FALSE.
C
C --- SELECTION
C
      IF (TYPSEL.EQ.'FREQ') THEN
        RESTE  = MOD(NUME,FREQ  )
        IF (RESTE.EQ.0.D0) THEN
          LSELEC = .TRUE.
        ELSE
          LSELEC = .FALSE.
        ENDIF
      ELSEIF (TYPSEL.EQ.'INST') THEN
        SDLIST = NOMSD(1:19)//'.LIST'
        IF (NBINST.EQ.1) THEN
          LSELEC = .TRUE.
        ELSE
          CALL JEVEUO(SDLIST,'L',JLIST)
          CALL UTACLI(INST  ,ZR(JLIST),NBINST,TOLE  ,NBINDI)
          IF (NBINDI.GE.0) THEN
            LSELEC  = .TRUE.
          ENDIF
        ENDIF
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
      CALL JEDEMA()      
C
      END
