      SUBROUTINE XMTBCA(NOMA  ,DEFICO,RESOCO,VALINC,MMCVCA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/12/2009   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE NISTOR I.NISTOR
C
      IMPLICIT NONE
      LOGICAL       MMCVCA
      CHARACTER*8   NOMA  
      CHARACTER*24  DEFICO,RESOCO
      CHARACTER*19  VALINC(*)
C      
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (CONTACT - GRANDS GLISSEMENTS)
C
C MISE À JOUR DU STATUT DES POINTS DE CONTACT
C ET RENVOIE MMCVCA (INDICE DE CONVERGENCE DE LA BOUCLE
C SUR LES CONTRAINTES ACTIVES)
C
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DE L'OBJET MAILLAGE
C IN  DEFICO : SD CONTACT (DEFINITION)
C IN  RESOCO : SD CONTACT (RESOLUTION)
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C OUT MMCVCA : INDICE DE CONVERGENCE DE LA BOUCLE SUR LES C.A.
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      NBOUT,NBIN
      PARAMETER    (NBOUT=3, NBIN=4)
      CHARACTER*8  LPAOUT(NBOUT),LPAIN(NBIN)
      CHARACTER*19 LCHOUT(NBOUT),LCHIN(NBIN)
C
      INTEGER      NTPC,SINCO,IPC,IPC2,CFDISI,GROUP,NARET,NARET2
      INTEGER      JTABF
      CHARACTER*24 TABFIN      
      INTEGER      ZTABF,CFMMVD
      INTEGER      JVALV,JVALV1,JVALV2,IBID
      CHARACTER*24 NOSDCO
      INTEGER      JNOSDC      
      CHARACTER*4  KMPIC
      CHARACTER*19 LIGRXF,CICOCA,CINDCO,CINDME
      CHARACTER*19 CPOINT,CAINTE
      CHARACTER*19 OLDGEO,DEPPLU
      CHARACTER*16 OPTION
      LOGICAL      DEBUG
      INTEGER      IFM,NIV,IFMDBG,NIVDBG
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('XFEM',IFM,NIV)
      CALL INFDBG('PRE_CALCUL',IFMDBG,NIVDBG)
C
C --- INITIALISATIONS
C
      OLDGEO = NOMA(1:8)//'.COORDO'
      CPOINT = RESOCO(1:14)//'.XFPO'
      CAINTE = RESOCO(1:14)//'.XFAI'
      NOSDCO = RESOCO(1:14)//'.NOSDCO'
      CALL JEVEUO(NOSDCO,'L',JNOSDC)
      OPTION = 'XCVBCA'
      IF (NIVDBG.GE.2) THEN
        DEBUG  = .TRUE.
      ELSE
        DEBUG  = .FALSE.
      ENDIF
C      
C --- LIGREL DES ELEMENTS TARDIFS DE CONTACT/FROTTEMENT    
C
      LIGRXF = ZK24(JNOSDC+3-1)(1:19)      
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)

C----RECUPERATION DE TABFIN -

      TABFIN = RESOCO(1:14)//'.TABFIN'
      CALL JEVEUO(TABFIN,'E',JTABF )
      ZTABF  = CFMMVD('ZTABF')

      CINDCO = '&&XMTBCA.INDCO'
      CINDME = '&&XMTBCA.INDME'
      CICOCA = '&&XMTBCA.CICOCA'

      NTPC   = CFDISI(DEFICO,'NTPC'     )
C
C --- INITIALISATION DE L'INDICATEUR DE CONVERGENCE DE LA BOUCLE
C --- SUR LES CONTRAINTES ACTIVES (CONVERGENCE <=> INCOCA =1)
C
      SINCO  = 0
      MMCVCA = .TRUE.
C
C --- INITIALISATION DES CHAMPS POUR CALCUL
C
      CALL INICAL(NBIN  ,LPAIN ,LCHIN ,
     &            NBOUT ,LPAOUT,LCHOUT)
C
C --- CREATION DES LISTES DES CHAMPS IN
C
      LPAIN(1)  = 'PGEOMER'
      LCHIN(1)  = OLDGEO(1:19)
      LPAIN(2)  = 'PDEPL_P'
      LCHIN(2)  = DEPPLU(1:19)
      LPAIN(3)  = 'PCAR_PT'
      LCHIN(3)  = CPOINT
      LPAIN(4)  = 'PCAR_AI'
      LCHIN(4)  = CAINTE
C
C --- CREATION DES LISTES DES CHAMPS OUT
C
      LPAOUT(1) = 'PINCOCA'
      LCHOUT(1) = CICOCA
      LPAOUT(2) = 'PINDCOT'
      LCHOUT(2) = CINDCO
      LPAOUT(3) = 'PINDMEM'
      LCHOUT(3) = CINDME
C
C --- APPEL A CALCUL
C
      CALL CALCUL('S',OPTION,LIGRXF,NBIN  ,LCHIN ,LPAIN,
     &                              NBOUT ,LCHOUT,LPAOUT,'V')
C
      IF (DEBUG) THEN
        CALL DBGCAL(OPTION,IFMDBG,
     &              NBIN  ,LPAIN ,LCHIN ,
     &              NBOUT ,LPAOUT,LCHOUT)
      ENDIF
C
C --- ON RECUPÈRE LA VARIABLE DE CHANGEMENT DE STATUT
C
      CALL JEVEUO(CICOCA//'.CELV','L',JVALV)
      CALL DISMOI('F','MPI_COMPLET',CICOCA,'CHAM_ELEM',IBID,KMPIC,IBID)
      IF (KMPIC.NE.'OUI') CALL U2MESS('F','CALCULEL6_54')
C
C --- ON RECUPÈRE LA VARIABLE DE CHANGEMENT DE STATUT
C
      CALL JEVEUO(CINDCO//'.CELV','L',JVALV1)
      CALL DISMOI('F','MPI_COMPLET',CINDCO,'CHAM_ELEM',IBID,KMPIC,IBID)
      IF (KMPIC.NE.'OUI') CALL U2MESS('F','CALCULEL6_54')
C
C --- ON RECUPÈRE LA NOUVELLE MEMOIRE DE CONTACT
C
      CALL JEVEUO(CINDME//'.CELV','L',JVALV2)
      CALL DISMOI('F','MPI_COMPLET',CINDME,'CHAM_ELEM',IBID,KMPIC,IBID)
      IF (KMPIC.NE.'OUI') CALL U2MESS('F','CALCULEL6_54')
C
C --- ON FAIT SINCO = SOMME DES CICOCA SUR LES ÉLTS DU LIGREL
C
      DO 10 IPC = 1,NTPC
         SINCO  = SINCO+ZI(JVALV-1+IPC)
 10   CONTINUE
C
C --- SI SINCO EST STRICTEMENT POSITIF, ON A PAS CONVERGÉ
C
      IF (SINCO.GT.0) MMCVCA = .FALSE.
C
C --- ON INTERVERTI LE STATUT DES ARETES SI NECESSAIRE
C
      DO 11 IPC = 1,NTPC
C --- SI IL Y A UN CHANGEMENT DE STATUT ET QUE LE POINT DE CONTACT
C --- EST CONNECTÉ
        IF (ZI(JVALV-1+IPC).EQ.1) THEN
          GROUP = ZR(JTABF+ZTABF*(IPC-1)+4)
          IF (GROUP.NE.0) THEN
C --- SI LE PT D'INTEGRATION EST SUR UNE ARETE NON VITAL ET DEVIENT
C --- CONTACTANT
            IF ((ZR(JTABF+ZTABF*(IPC-1)+27).EQ.0).AND.
     &                            (ZR(JVALV1-1+IPC).EQ.1)) THEN
              NARET = INT(ZR(JTABF+ZTABF*(IPC-1)+5))
C --- ON REGARDE SI UN PT SUR L'ARETE VITALE DE CE GROUPE DEVIENT OU
C --- RESTE CONTACTANT
              DO 12 IPC2 = 1,NTPC
                IF ((ZR(JTABF+ZTABF*(IPC2-1)+4).EQ.GROUP).AND.
     &                        (ZR(JTABF+ZTABF*(IPC2-1)+27).EQ.1)) THEN
                  IF (ZR(JVALV1-1+IPC2).EQ.1) THEN
C --- LE PT VITAL EST CONTACTANT
                    NARET2 = NARET
                  ELSEIF (ZR(JVALV1-1+IPC2).EQ.0) THEN
C --- ATTENTION,LE PT VITAL EST NON CONTACTNT
                    NARET2 = INT(ZR(JTABF+ZTABF*(IPC2-1)+5))
                  ENDIF
                  GOTO 13
                ENDIF
 12           CONTINUE
 13           CONTINUE
              IF (NARET.NE.NARET2) THEN
               DO 14 IPC2 = 1,NTPC
C --- ON INTERVERTI LE PT NON VITAL AVEC LE PT VITAL
                IF (ZR(JTABF+ZTABF*(IPC2-1)+4).EQ.GROUP) THEN
                  IF (ZR(JTABF+ZTABF*(IPC2-1)+5).EQ.NARET2) THEN
                    ZR(JTABF+ZTABF*(IPC2-1)+27) = 0
                  ELSEIF (ZR(JTABF+ZTABF*(IPC2-1)+5).EQ.NARET) THEN
                    ZR(JTABF+ZTABF*(IPC2-1)+27) = 1
                  ENDIF
                ENDIF
 14            CONTINUE
              ENDIF
            ENDIF
          ENDIF
        ENDIF
 11   CONTINUE      
C
C --- MISE A JOUR DU STATUT DE CONTACT
C
      DO 20 IPC = 1,NTPC
        ZR(JTABF+ZTABF*(IPC-1)+13)=ZR(JVALV1-1+IPC)
 20   CONTINUE
C
C --- MISE A JOUR DE LA MEMOIRE DE CONTACT
C
      DO 30 IPC = 1,NTPC
        ZR(JTABF+ZTABF*(IPC-1)+28)=ZI(JVALV2-1+IPC)
 30   CONTINUE
C 
      CALL JEDEMA()
      END
