      SUBROUTINE NMRVAI(SDSTAT,QUESTZ,PHASE,VALI  )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 17/12/2012   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*(*) QUESTZ
      CHARACTER*24  SDSTAT
      CHARACTER*1   PHASE
      INTEGER       VALI
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C MESURE DE STATISTIQUES - NOMBRE D'OCCURRENCES
C
C ----------------------------------------------------------------------
C
C
C IN  SDSTAT : SD STATISTIQUES
C IN  QUESTI : QUESTION DE STATISTIQUE
C IN  PHASE  : PHASE
C               'E' ECRITURE
C               'N' LECTURE SUR L'ITERATION DE NEWTON COURANTE
C               'P' LECTURE SUR LE PAS COURANT
C               'T' LECTURE SUR TOUT LE TRANSITOIRE
C I/O VALI   : VALEUR ENTIERE
C
C
C
C
      CHARACTER*24 STVIP,STVIT,STVIN
      INTEGER      JSTVIP,JSTVIT,JSTVIN
      CHARACTER*24 QUESTI
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      QUESTI  = QUESTZ
      IF (PHASE.EQ.'E') THEN
        IF (VALI.LE.0) VALI = 0
      ELSE
        VALI = 0
      ENDIF
C
C --- ACCES SDSTAT
C
      STVIP  = SDSTAT(1:19)//'.VLIP'
      STVIT  = SDSTAT(1:19)//'.VLIT'
      STVIN  = SDSTAT(1:19)//'.VLIN'
      CALL JEVEUO(STVIP ,'E',JSTVIP)
      CALL JEVEUO(STVIT ,'E',JSTVIT)
      CALL JEVEUO(STVIN ,'E',JSTVIN)
C
      IF (PHASE.EQ.'E') THEN
        IF (QUESTI.EQ.'PAS') THEN
          ZI(JSTVIT-1+1) = ZI(JSTVIT-1+1) + VALI
          ZI(JSTVIP-1+1) = ZI(JSTVIP-1+1) + VALI
          ZI(JSTVIN-1+1) = ZI(JSTVIN-1+1) + VALI
        ELSEIF (QUESTI.EQ.'ITE') THEN
          ZI(JSTVIT-1+2) = ZI(JSTVIT-1+2) + VALI
          ZI(JSTVIP-1+2) = ZI(JSTVIP-1+2) + VALI
          ZI(JSTVIN-1+2) = ZI(JSTVIN-1+2) + VALI
        ELSEIF (QUESTI.EQ.'INTEGRATION') THEN
          ZI(JSTVIT-1+3) = ZI(JSTVIT-1+3) + VALI
          ZI(JSTVIP-1+3) = ZI(JSTVIP-1+3) + VALI
          ZI(JSTVIN-1+3) = ZI(JSTVIN-1+3) + VALI
        ELSEIF (QUESTI.EQ.'FACTOR') THEN
          ZI(JSTVIT-1+4) = ZI(JSTVIT-1+4) + VALI
          ZI(JSTVIP-1+4) = ZI(JSTVIP-1+4) + VALI
          ZI(JSTVIN-1+4) = ZI(JSTVIN-1+4) + VALI
        ELSEIF (QUESTI.EQ.'SOLVE') THEN
          ZI(JSTVIT-1+5) = ZI(JSTVIT-1+5) + VALI
          ZI(JSTVIP-1+5) = ZI(JSTVIP-1+5) + VALI
          ZI(JSTVIN-1+5) = ZI(JSTVIN-1+5) + VALI
        ELSEIF (QUESTI.EQ.'CONT_GEOM') THEN
          ZI(JSTVIT-1+6) = ZI(JSTVIT-1+6) + VALI
          ZI(JSTVIP-1+6) = ZI(JSTVIP-1+6) + VALI
          ZI(JSTVIN-1+6) = ZI(JSTVIN-1+6) + VALI
        ELSEIF (QUESTI.EQ.'CTCD_ALGO_ITER') THEN
          ZI(JSTVIT-1+7) = ZI(JSTVIT-1+7) + VALI
          ZI(JSTVIP-1+7) = ZI(JSTVIP-1+7) + VALI
          ZI(JSTVIN-1+7) = ZI(JSTVIN-1+7) + VALI
        ELSEIF (QUESTI.EQ.'CTCC_PREP') THEN
          ZI(JSTVIT-1+8) = ZI(JSTVIT-1+8) + VALI
          ZI(JSTVIP-1+8) = ZI(JSTVIP-1+8) + VALI
          ZI(JSTVIN-1+8) = ZI(JSTVIN-1+8) + VALI
        ELSEIF (QUESTI.EQ.'CTCC_MATR') THEN
          ZI(JSTVIT-1+9) = ZI(JSTVIT-1+9) + VALI
          ZI(JSTVIP-1+9) = ZI(JSTVIP-1+9) + VALI
          ZI(JSTVIN-1+9) = ZI(JSTVIN-1+9) + VALI
        ELSEIF (QUESTI.EQ.'CTCC_VECT') THEN
          ZI(JSTVIT-1+10) = ZI(JSTVIT-1+10) + VALI
          ZI(JSTVIP-1+10) = ZI(JSTVIP-1+10) + VALI
          ZI(JSTVIN-1+10) = ZI(JSTVIN-1+10) + VALI
        ELSEIF (QUESTI.EQ.'CTCC_CONT') THEN
          ZI(JSTVIT-1+11) = ZI(JSTVIT-1+11) + VALI
          ZI(JSTVIP-1+11) = ZI(JSTVIP-1+11) + VALI
          ZI(JSTVIN-1+11) = ZI(JSTVIN-1+11) + VALI
        ELSEIF (QUESTI.EQ.'CTCC_FROT') THEN
          ZI(JSTVIT-1+12) = ZI(JSTVIT-1+12) + VALI
          ZI(JSTVIP-1+12) = ZI(JSTVIP-1+12) + VALI
          ZI(JSTVIN-1+12) = ZI(JSTVIN-1+12) + VALI
        ELSEIF (QUESTI.EQ.'CONT_NBLIAC')    THEN
          ZI(JSTVIT-1+13) = VALI
          ZI(JSTVIP-1+13) = VALI
          ZI(JSTVIN-1+13) = VALI
        ELSEIF (QUESTI.EQ.'CONT_NBLIAF')    THEN
          ZI(JSTVIT-1+14) = VALI
          ZI(JSTVIP-1+14) = VALI
          ZI(JSTVIN-1+14) = VALI
        ELSEIF (QUESTI.EQ.'RECH_LINE_ITER') THEN
          ZI(JSTVIT-1+15) = ZI(JSTVIT-1+15) + VALI
          ZI(JSTVIP-1+15) = ZI(JSTVIP-1+15) + VALI
          ZI(JSTVIN-1+15) = ZI(JSTVIN-1+15) + VALI
        ELSEIF (QUESTI.EQ.'FETI_ITER') THEN
          ZI(JSTVIT-1+16) = ZI(JSTVIT-1+16) + VALI
          ZI(JSTVIP-1+16) = ZI(JSTVIP-1+16) + VALI
          ZI(JSTVIN-1+16) = ZI(JSTVIN-1+16) + VALI
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF

      ELSEIF ((PHASE.EQ.'T').OR.
     &        (PHASE.EQ.'P').OR.
     &        (PHASE.EQ.'N')) THEN

        IF (QUESTI.EQ.'PAS') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+1)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+1)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+1)

        ELSEIF (QUESTI.EQ.'ITE') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+2)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+2)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+2)

        ELSEIF (QUESTI.EQ.'INTEGRATION') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+3)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+3)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+3)

        ELSEIF (QUESTI.EQ.'FACTOR') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+4)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+4)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+4)

        ELSEIF (QUESTI.EQ.'SOLVE') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+5)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+5)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+5)

        ELSEIF (QUESTI.EQ.'CONT_GEOM') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+6)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+6)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+6)

        ELSEIF (QUESTI.EQ.'CTCD_ALGO_ITER') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+7)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+7)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+7)

        ELSEIF (QUESTI.EQ.'CTCC_PREP') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+8)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+8)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+8)

        ELSEIF (QUESTI.EQ.'CTCC_MATR') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+9)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+9)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+9)

        ELSEIF (QUESTI.EQ.'CTCC_VECT') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+10)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+10)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+10)

        ELSEIF (QUESTI.EQ.'CTCC_CONT') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+11)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+11)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+11)

        ELSEIF (QUESTI.EQ.'CTCC_FROT') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+12)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+12)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+12)

        ELSEIF (QUESTI.EQ.'CONT_NBLIAC')    THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+13)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+13)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+13)

        ELSEIF (QUESTI.EQ.'CONT_NBLIAF')    THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+14)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+14)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+14)

        ELSEIF (QUESTI.EQ.'RECH_LINE_ITER') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+15)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+15)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+15)

        ELSEIF (QUESTI.EQ.'FETI_ITER') THEN
          IF (PHASE.EQ.'T') VALI = ZI(JSTVIT-1+16)
          IF (PHASE.EQ.'P') VALI = ZI(JSTVIP-1+16)
          IF (PHASE.EQ.'N') VALI = ZI(JSTVIN-1+16)

        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF

      ELSE
        CALL ASSERT(.FALSE.)

      ENDIF
C
      CALL JEDEMA()
      END
