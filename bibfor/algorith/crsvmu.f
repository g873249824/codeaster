      SUBROUTINE CRSVMU(MOTFAC,SOLVEU)
      IMPLICIT   NONE
      CHARACTER*19 SOLVEU
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 07/09/2009   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ----------------------------------------------------------
C  BUT :
C     SAISIE ET CREATION D'UN SOLVEUR MUMPS
C
C IN K19 SOLVEU  : NOM DU SOLVEUR DONNE EN ENTREE
C OUT    SOLVEU  : LE SOLVEUR EST CREE ET INSTANCIE
C ----------------------------------------------------------
C RESPONSABLE PELLET J.PELLET

C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX --------------------

      INTEGER ISTOP,IBID,IFM,NIV,I,PCPIV,NBPROC,RANG,MONIT(12),ILIGR,
     &        ILGRF,JNUMSD,N1,VALI(2),COMPT,JMAIL,NBMA
      REAL*8 EPS
      CHARACTER*3 SYME,KLAG2,KOOC,KMD
      CHARACTER*8 KTYPR,KTYPS,KTYPRN,KTYPP,MODELE,PARTIT,KBID
      CHARACTER*16 MOTFAC
      CHARACTER*19 LIGREL
      CHARACTER*24 KMONIT(12),K24B
      LOGICAL EXISYM,GETEXM,EXIMTD,EXIMOD
C------------------------------------------------------------------
      CALL JEMARQ()


      EPS=0.D0
      ISTOP=0

      CALL INFNIV(IFM,NIV)




      SYME='NON'
      EXISYM=GETEXM(MOTFAC,'SYME')
      IF (EXISYM) CALL GETVTX(MOTFAC,'SYME',1,1,1,SYME,IBID)
      CALL GETVIS(MOTFAC,'PCENT_PIVOT',1,1,1,PCPIV,IBID)
      CALL GETVTX(MOTFAC,'TYPE_RESOL',1,1,1,KTYPR,IBID)
      CALL ASSERT(IBID.EQ.1)
      CALL GETVTX(MOTFAC,'PRETRAITEMENTS',1,1,1,KTYPS,IBID)
      CALL ASSERT(IBID.EQ.1)
      CALL GETVTX(MOTFAC,'POSTTRAITEMENTS',1,1,1,KTYPP,IBID)
      CALL ASSERT(IBID.EQ.1)
      CALL GETVTX(MOTFAC,'RENUM',1,1,1,KTYPRN,IBID)
      CALL ASSERT(IBID.EQ.1)
      CALL GETVTX(MOTFAC,'ELIM_LAGR2',1,1,1,KLAG2,IBID)
      CALL ASSERT(IBID.EQ.1)
      CALL GETVR8(MOTFAC,'RESI_RELA',1,1,1,EPS,IBID)



      CALL ASSERT(IBID.EQ.1)
      CALL GETVTX(MOTFAC,'OUT_OF_CORE',1,1,1,KOOC,IBID)
      CALL ASSERT(IBID.EQ.1)
      
      NBPROC=1
      RANG=0
      CALL MUMMPI(2,IFM,NIV,K24B,RANG,IBID)
      CALL MUMMPI(3,IFM,NIV,K24B,NBPROC,IBID)
      
      KMD=' '
      EXIMTD=GETEXM(MOTFAC,'MATR_DISTRIBUEE')
      IF ( EXIMTD ) THEN
        CALL GETVTX(MOTFAC,'MATR_DISTRIBUEE',1,1,1,KMD,IBID)
        CALL ASSERT(IBID.EQ.1)
        IF ( (NBPROC.EQ.1).AND.(KMD.EQ.'OUI') ) THEN
          KMD='NON'
          CALL U2MESS('A','ASSEMBLA_3')
        ENDIF
      ENDIF

C     -- OBJETS DE MONITORING
      KMONIT(9)='&MUMPS.NB.MAILLE'
      CALL WKVECT(KMONIT(9),'V V I',NBPROC,MONIT(9))
      
C     -- RECHERCHE DU NBRE DE MAILLES PAR PROC SI INF>1 ET SI EXISTENCE
C        D'UN MODELE
      EXIMOD=GETEXM(' ','MODELE')
      COMPT=0
      IF (EXIMOD.AND.(NIV.GE.2)) THEN
        CALL GETVID(' ','MODELE',1,1,1,MODELE,IBID)
        LIGREL=MODELE//'.MODELE'
        CALL JEVEUO(LIGREL//'.LGRF','L',ILGRF)
        PARTIT=ZK8(ILGRF-1+2)
        IF (PARTIT.NE.' ') THEN
C       -- DISTRIBUE      
          CALL JEEXIN(PARTIT//'.NUPROC.MAILLE',IBID)
          CALL ASSERT(IBID.NE.0)
          CALL JEVEUO(PARTIT//'.NUPROC.MAILLE','L',JNUMSD)
          CALL JELIRA(PARTIT//'.NUPROC.MAILLE','LONMAX',N1,KBID)
          IF (ZI(JNUMSD-1+N1).NE.NBPROC) THEN
            VALI(1)=ZI(JNUMSD-1+N1)
            VALI(2)=NBPROC
            CALL U2MESI('F','CALCULEL_13',2,VALI)
          ENDIF
          NBMA=N1-1
          DO 50 I=1,NBMA
            IF (ZI(JNUMSD-1+I).EQ.RANG) COMPT=COMPT+1
   50     CONTINUE
        ELSE
C       -- CENTRALISE
          CALL JEVEUO(MODELE//'.MAILLE','L',JMAIL)
          CALL JELIRA(MODELE//'.MAILLE','LONMAX',NBMA,K24B)
          DO 60 I=1,NBMA
            IF (ZI(JMAIL-1+I).NE.0)COMPT=COMPT+1
   60     CONTINUE
        ENDIF
      ENDIF
      ZI(MONIT(9)+RANG)=COMPT


C     -- OBJETS DE MONITORING
      IF (NIV.GE.2) THEN
        KMONIT(1)='&MUMPS.INFO.MAILLE'
        KMONIT(2)='&MUMPS.INFO.MEMOIRE'
        KMONIT(10)='&MUMPS.INFO.MEM.EIC'
        KMONIT(11)='&MUMPS.INFO.MEM.EOC'
        KMONIT(12)='&MUMPS.INFO.MEM.USE'

        CALL WKVECT(KMONIT(1),'V V I',NBPROC,MONIT(1))
        CALL WKVECT(KMONIT(2),'V V I',NBPROC,MONIT(2))
        CALL WKVECT(KMONIT(10),'V V I',NBPROC,MONIT(10))
        CALL WKVECT(KMONIT(11),'V V I',NBPROC,MONIT(11))
        CALL WKVECT(KMONIT(12),'V V I',NBPROC,MONIT(12))
        DO 110 I=1,NBPROC
          ZI(MONIT(1)+I-1)=0
          ZI(MONIT(2)+I-1)=0
          ZI(MONIT(10)+I-1)=0
          ZI(MONIT(11)+I-1)=0
          ZI(MONIT(12)+I-1)=0
  110   CONTINUE
        CALL MUMMPI(4,IFM,NIV,KMONIT(9),NBPROC,IBID)
      ENDIF


C     -- ON REMPLIT LA SD_SOLVEUR
      CALL CRESO3(SOLVEU,SYME,PCPIV,KTYPR,KTYPS,KTYPRN,KLAG2,EPS,ISTOP,
     &            '???',KOOC,KMD,KTYPP)



  120 CONTINUE

      CALL JEDEMA()
      END
