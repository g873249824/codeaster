      SUBROUTINE CRSVMU(MOTFAC,SOLVEU)
      IMPLICIT   NONE
      CHARACTER*19 SOLVEU
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 16/06/2009   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ----------------------------------------------------------
C  BUT :
C     SAISIE ET CREATION D'UN SOLVEUR MUMPS
C
C IN K19 SOLVEU  : NOM DU SOLVEUR DONNE EN ENTREE
C OUT    SOLVEU  : LE SOLVEUR EST CREE ET INSTANCIE
C ----------------------------------------------------------
C RESPONSABLE PELLET J.PELLET

C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX --------------------

      INTEGER ISTOP,IBID,IFM,NIV,I,PCPIV,NBPROC,RANG,MONIT(12)
      REAL*8 EPS
      CHARACTER*3 SYME,KLAG2,KOOC
      CHARACTER*8 KTYPR,KTYPS,KTYPRN
      CHARACTER*16 MOTFAC
      CHARACTER*24 KMONIT(12),K24B
      LOGICAL EXISYM,GETEXM
C------------------------------------------------------------------
      CALL JEMARQ()


      EPS=0.D0
      ISTOP=0

      CALL INFNIV(IFM,NIV)




      SYME='NON'
      EXISYM=GETEXM(MOTFAC,'SYME')
      IF (EXISYM) CALL GETVTX(MOTFAC,'SYME',1,1,1,SYME,IBID)
      CALL GETVIS(MOTFAC,'PCENT_PIVOT',1,1,1,PCPIV,IBID)
      CALL GETVTX(MOTFAC,'TYPE_RESOL',1,1,1,KTYPR,IBID)
      CALL ASSERT(IBID.EQ.1)
      CALL GETVTX(MOTFAC,'PRETRAITEMENTS',1,1,1,KTYPS,IBID)
      CALL ASSERT(IBID.EQ.1)
      CALL GETVTX(MOTFAC,'RENUM',1,1,1,KTYPRN,IBID)
      CALL ASSERT(IBID.EQ.1)
      CALL GETVTX(MOTFAC,'ELIM_LAGR2',1,1,1,KLAG2,IBID)
      CALL ASSERT(IBID.EQ.1)
      CALL GETVR8(MOTFAC,'RESI_RELA',1,1,1,EPS,IBID)



      CALL ASSERT(IBID.EQ.1)
      CALL GETVTX(MOTFAC,'OUT_OF_CORE',1,1,1,KOOC,IBID)
      CALL ASSERT(IBID.EQ.1)
      NBPROC=1
      RANG=0
      CALL MUMMPI(2,IFM,NIV,K24B,RANG,IBID)
      CALL MUMMPI(3,IFM,NIV,K24B,NBPROC,IBID)

C     -- OBJETS DE MONITORING
      KMONIT(9)='&MUMPS.NB.MAILLE'
      CALL WKVECT(KMONIT(9),'V V I',NBPROC,MONIT(9))




C     -- OBJETS DE MONITORING
      IF (NIV.GE.2) THEN
        CALL MUMMPI(3,IFM,NIV,K24B,NBPROC,IBID)
        KMONIT(1)='&MUMPS.INFO.MAILLE'
        KMONIT(2)='&MUMPS.INFO.MEMOIRE'
        KMONIT(3)='&MUMPS.INFO.CPU.FACS'
        KMONIT(4)='&MUMPS.INFO.CPU.ANAL'
        KMONIT(5)='&MUMPS.INFO.CPU.FACN'
        KMONIT(6)='&MUMPS.INFO.CPU.CAEL'
        KMONIT(7)='&MUMPS.INFO.CPU.ASSE'
        KMONIT(8)='&MUMPS.INFO.CPU.SOLV'
        KMONIT(10)='&MUMPS.INFO.MEM.EIC'
        KMONIT(11)='&MUMPS.INFO.MEM.EOC'
        KMONIT(12)='&MUMPS.INFO.MEM.USE'

        CALL WKVECT(KMONIT(1),'V V I',NBPROC,MONIT(1))
        CALL WKVECT(KMONIT(2),'V V I',NBPROC,MONIT(2))
        CALL WKVECT(KMONIT(3),'V V R',NBPROC,MONIT(3))
        CALL WKVECT(KMONIT(4),'V V R',NBPROC,MONIT(4))
        CALL WKVECT(KMONIT(5),'V V R',NBPROC,MONIT(5))
        CALL WKVECT(KMONIT(6),'V V R',NBPROC,MONIT(6))
        CALL WKVECT(KMONIT(7),'V V R',NBPROC,MONIT(7))
        CALL WKVECT(KMONIT(8),'V V R',NBPROC,MONIT(8))
        CALL WKVECT(KMONIT(10),'V V I',NBPROC,MONIT(10))
        CALL WKVECT(KMONIT(11),'V V I',NBPROC,MONIT(11))
        CALL WKVECT(KMONIT(12),'V V I',NBPROC,MONIT(12))
        DO 110 I=1,NBPROC
          ZI(MONIT(1)+I-1)=0
          ZI(MONIT(2)+I-1)=0
          ZR(MONIT(3)+I-1)=0.D0
          ZR(MONIT(4)+I-1)=0.D0
          ZR(MONIT(5)+I-1)=0.D0
          ZR(MONIT(6)+I-1)=0.D0
          ZR(MONIT(7)+I-1)=0.D0
          ZR(MONIT(8)+I-1)=0.D0
          ZI(MONIT(10)+I-1)=0
          ZI(MONIT(11)+I-1)=0
          ZI(MONIT(12)+I-1)=0
  110   CONTINUE
        CALL MUMMPI(4,IFM,NIV,KMONIT(9),NBPROC,IBID)
      ENDIF


C     -- ON REMPLIT LA SD_SOLVEUR
      CALL CRESO3(SOLVEU,SYME,PCPIV,KTYPR,KTYPS,KTYPRN,KLAG2,EPS,ISTOP,
     &            '???',KOOC)

  120 CONTINUE

      CALL JEDEMA()
      END
