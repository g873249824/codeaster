      SUBROUTINE NMDOCN (MODELE, PARCRI, CARCRI)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/09/2001   AUTEUR PBBHHPB P.BADEL 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE ADBHHVV V.CANO

      IMPLICIT NONE
      REAL*8        PARCRI(11)
      CHARACTER*24  MODELE, CARCRI

C ----------------------------------------------------------------------
C     SAISIE DES CRITERES DE CONVERGENCE : STAT_NON_LINE
C ----------------------------------------------------------------------
C
C      IN  MODELE : NOM DU MODELE
C      OUT PARCRI : PARAMETRES DES CRITERES DE CONVERGENCE
C                     1 : ITER_GLOB_MAXI
C                     2 : RESI_GLOB_RELA
C                     3 : RESI_GLOB_MAXI
C                     4 : ARRET (0=OUI, 1=NON)
C                     5 : ITER_GLOB_ELAS
C                    10 : INCO_GLOB_ABSO (LAGRANGIEN)
C                    11 : DIFF_GLOB_ABSO (LAGRANGIEN)
C IN/JXOUT CARCRI : CARTE DES CRITERES DE CONVERGENCE LOCAUX
C                     0 : ITER_INTE_MAXI
C                     1 : TYPE_MATR_COMP (0: VIT, 1: INC)
C                     2 : RESI_INTE_RELA
C                     3 : THETA (POUR THM)
C                     4 : ITER_INTE_PAS
C                     5 : RESO_INTE (0: EULER_1, 1: RK_2, 2: RK_4)
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------

      INTEGER      ITERAT, ITEINT, ITEPAS, IRET, IRE1, IRE2, IBID
      INTEGER      NUMGD, JACMP, NCMP, IRCMP
      REAL*8       RESI, THETA, R8VIDE
      CHARACTER*1  K1BID
      CHARACTER*8  REP, K8BID
      CHARACTER*16 MATR, RESO
      CHARACTER*24 LIGRMO
      COMPLEX*16   CBID
C-----------------------------------------------------------------------


      CALL JEMARQ()
      LIGRMO = MODELE(1:8) // '.MODELE'


C -- RECUPERATION DES CRITERES DE CONVERGENCE GLOBAUX

      CALL GETVIS('CONVERGENCE','ITER_GLOB_MAXI',1,1,1,ITERAT,IRET)
      PARCRI(1) = ITERAT

      CALL GETVIS('CONVERGENCE','ITER_GLOB_ELAS',1,1,1,ITERAT,IRET)
      PARCRI(5) = ITERAT

      CALL GETVR8('CONVERGENCE','RESI_GLOB_RELA',1,1,1,PARCRI(2),IRE1)
      IF (IRE1.LE.0) PARCRI(2) = R8VIDE()

      CALL GETVR8('CONVERGENCE','RESI_GLOB_MAXI',1,1,1,PARCRI(3),IRE2)
      IF (IRE2.LE.0) PARCRI(3) = R8VIDE()

      IF ( IRE1.LE.0 .AND. IRE2.LE.0 ) PARCRI(2) = 1.D-6

      CALL GETVTX('CONVERGENCE','ARRET',1,1,1,REP,IRET)
      PARCRI(4) = 0
      IF ( IRET .GT. 0 ) THEN
        IF ( REP  .EQ. 'NON' ) PARCRI(4) = 1
      ENDIF
      
C    ALARMES RELATIVES A LA QUALITE DE LA CONVERGENCE   

      IF (PARCRI(2).NE.R8VIDE()  .AND. PARCRI(2).GT.1.0001D-4)
     &  CALL UTMESS('A','NMDOCN','CRITERE DE CONVERGENCE LACHE')

C -- RECUPERATION DES PARAMETRES DE CONVERGENCE LOCAUX

C    LECTURE DES PARAMETRES
      CALL GETVTX('CONVERGENCE','TYPE_MATR_COMP',1,1,1,MATR  ,IRET)
      CALL GETVTX('CONVERGENCE','RESO_INTE'     ,1,1,1,RESO  ,IRET)
      CALL GETVR8('CONVERGENCE','RESI_INTE_RELA',1,1,1,RESI  ,IRET)
      CALL GETVIS('CONVERGENCE','ITER_INTE_MAXI',1,1,1,ITEINT,IRET)

     
      IF (RESI.NE.R8VIDE()  .AND. RESI.GT.1.0001D-6)
     &  CALL UTMESS('A','NMDOCN','CRITERE DE CONVERGENCE POUR '//
     &              ' INTEGRER LE COMPORTEMENT RESI_INTE_RELA LACHE')
     
      ITEPAS = 0
      CALL GETVR8(' '          ,'PARM_THETA'    ,0,1,1,THETA ,IRET)
      CALL GETVIS('CONVERGENCE','ITER_INTE_PAS' ,1,1,1,ITEPAS,IRET)

C    CREATION DE LA CARTE CONSTANTE DES CRITERES DE CONVERGENCE
      CALL JENONU(JEXNOM('&CATA.GD.NOMGD' ,'CARCRI'),NUMGD)
      CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',NUMGD),'L',JACMP)
      CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',NUMGD),'LONMAX',NCMP,K1BID)
      CALL WKVECT('&&NMDOCN.TRAVR','V V R8',NCMP,IRCMP)

      ZR(IRCMP) = ITEINT
      IF(MATR(1:8).EQ.'TANG_VIT') ZR(IRCMP+1) = 0
      IF(MATR(1:8).EQ.'TANG_INC') ZR(IRCMP+1) = 1
      ZR(IRCMP+2) = RESI
      ZR(IRCMP+3) = THETA
      ZR(IRCMP+4) = ITEPAS
      IF(RESO(1:9) .EQ.'IMPLICITE')     ZR(IRCMP+5) = 0
      IF(RESO(1:13).EQ.'RUNGE_KUTTA_2') ZR(IRCMP+5) = 1
      IF(RESO(1:13).EQ.'RUNGE_KUTTA_4') ZR(IRCMP+5) = 2

      CALL MECACT('V',CARCRI,'MODELE',LIGRMO,'CARCRI',NCMP,ZK8(JACMP),
     &             IBID,ZR(IRCMP),CBID,K8BID)


      CALL JEDETR('&&NMDOCN.TRAVR')
      CALL JEDEMA()
      END
