      SUBROUTINE CFGCPR(RESOCO,MATASS,SOLVEU,NEQ   ,NBLIAI,
     &                  SEARCH,ALPHA )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'
      CHARACTER*24 RESOCO
      CHARACTER*16 SEARCH
      INTEGER      NEQ,NBLIAI
      CHARACTER*19 MATASS,SOLVEU
      REAL*8       ALPHA
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (RESOLUTION - GCP)
C
C PROJECTION DU PAS D'AVANCEMENT
C
C ----------------------------------------------------------------------
C 
C
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  SOLVEU : SD SOLVEUR
C IN  MATASS : NOM DE LA MATRICE DU PREMIER MEMBRE ASSEMBLEE
C IN  NBLIAI : NOMBRE DE LIAISONS DE CONTACT
C IN  NEQ    : NOMBRE D'EQUATIONS
C IN  SEARCH : RECHERCHE LINEAIRE
C              'ADMISSIBLE'
C              'NON_ADMISSIBLE'
C I/O ALPHA  : COEFFICIENT DE RECHERCHE LINEAIRE
C
C
C
C
      INTEGER      IFM,NIV
      INTEGER      ILIAI,JDECAL,NBDDL   
      CHARACTER*8  K8BID
      COMPLEX*16   C16BID
      REAL*8       R8BID
      CHARACTER*24 APCOEF,APDDL,APPOIN
      INTEGER      JAPCOE,JAPDDL,JAPPTR
      CHARACTER*19 DIRECT
      INTEGER      JDIREC
      CHARACTER*19 DDEPLC,DDEPL0,DDELT
      INTEGER      JDDEPC,JDDEP0,JDDELT
      CHARACTER*24 SECMBR,CNCIN0
      INTEGER      JSECMB
      CHARACTER*19 MU 
      INTEGER      JMU     
C 
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APDDL  = RESOCO(1:14)//'.APDDL'
      DIRECT = RESOCO(1:14)//'.DIRE'
      MU     = RESOCO(1:14)//'.MU'    
C
      CALL JEVEUO(APPOIN,'L',JAPPTR)
      CALL JEVEUO(APCOEF,'L',JAPCOE)
      CALL JEVEUO(APDDL ,'L',JAPDDL)     
      CALL JEVEUO(DIRECT,'L',JDIREC)
      CALL JEVEUO(MU    ,'E',JMU   ) 
C
C --- ACCES AUX CHAMPS DE TRAVAIL
C --- DDEPL0: INCREMENT DE SOLUTION SANS CORRECTION DU CONTACT
C --- DDEPLC: INCREMENT DE SOLUTION APRES CORRECTION DU CONTACT
C --- DDELT : INCREMENT DE SOLUTION ITERATION DE CONTACT
C
      DDEPL0 = RESOCO(1:14)//'.DEL0'
      DDEPLC = RESOCO(1:14)//'.DELC'
      DDELT  = RESOCO(1:14)//'.DDEL'
      CALL JEVEUO(DDEPL0(1:19)//'.VALE','L',JDDEP0)
      CALL JEVEUO(DDEPLC(1:19)//'.VALE','E',JDDEPC)
      CALL JEVEUO(DDELT (1:19)//'.VALE','E',JDDELT)
C
C --- ACCES AUX CHAMPS DE TRAVAIL
C
      SECMBR = RESOCO(1:14)//'.SECM'
      CNCIN0 = RESOCO(1:14)//'.CIN0'
      CALL JEVEUO(SECMBR(1:19)//'.VALE','E',JSECMB)
C
C --- RECALCUL DE ALPHA POUR UNE SOLUTION ADMISSIBLE
C
      IF (SEARCH.EQ.'ADMISSIBLE') THEN
        DO 60 ILIAI = 1,NBLIAI
          IF (ZR(JDIREC-1+ILIAI).LT.0.D0) THEN
            ALPHA = MIN(ALPHA,-ZR(JMU+ILIAI-1)/ZR(JDIREC-1+ILIAI))
          END IF
   60   CONTINUE
        IF (NIV.EQ.2) THEN
          WRITE (IFM,9050) ALPHA
        ENDIF
      ENDIF
C
C --- MISE A JOUR DE MU
C
      CALL DAXPY(NBLIAI,ALPHA,ZR(JDIREC),1,ZR(JMU),1)
C
C --- DESACTIVATION DE MU POUR UNE SOLUTION NON-ADMISSIBLE
C
      IF (SEARCH.EQ.'NON_ADMISSIBLE') THEN
        DO 70 ILIAI = 1,NBLIAI
          IF (ZR(JMU-1+ILIAI).LT.0.D0) THEN
            ZR(JMU-1+ILIAI) = 0.D0
          ENDIF
   70   CONTINUE
      ENDIF
C
C --- RECALCUL D'UN SOLUTION
C      
      IF (SEARCH.EQ.'NON_ADMISSIBLE') THEN
C
        CALL R8INIR(NEQ,0.D0,ZR(JSECMB),1)
        CALL R8INIR(NEQ,0.D0,ZR(JDDELT),1)
C
C ----- SECOND MEMBRE: [A]T.{MU}
C    
        DO 80 ILIAI = 1,NBLIAI
          JDECAL = ZI(JAPPTR+ILIAI-1)
          NBDDL  = ZI(JAPPTR+ILIAI) - ZI(JAPPTR+ILIAI-1)
          CALL CALATM(NEQ,NBDDL,ZR(JMU-1+ILIAI),ZR(JAPCOE+JDECAL),
     &                ZI(JAPDDL+JDECAL),ZR(JSECMB))
   80   CONTINUE
C
C ----- RESOLUTION [K].{DDELT} = [A]T.{MU} -> {DDELT}
C
        CALL RESOUD(MATASS,K8BID ,SECMBR,SOLVEU,CNCIN0,
     &              'V'   ,DDELT ,K8BID ,0     ,R8BID ,
     &              C16BID,.TRUE.) 
C 
C ----- RECOPIE DE LA SPOLUTION SANS CONTACT
C
        CALL DCOPY(NEQ,ZR(JDDEP0),1,ZR(JDDEPC),1)
        ALPHA = 1.D0
      ENDIF
C
 9050 FORMAT (' <CONTACT><CALC> PAS D''AVANCEMENT APRES PROJECTION : ',
     &       1PE12.5)
C
      CALL JEDEMA()
C
      END
