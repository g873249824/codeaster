      SUBROUTINE XMELE1(NOMA  ,MODELE,DEFICO,LIGREL,NFISS ,
     &                  CHELEM,PARAM,OPTION)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 15/10/2012   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      INCLUDE 'jeveux.h'
      CHARACTER*8   NOMA,MODELE
      CHARACTER*(*)   PARAM,OPTION
      INTEGER       NFISS
      CHARACTER*19  CHELEM,CHELE2
      CHARACTER*19  LIGREL
      CHARACTER*24  DEFICO
C
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (METHODE XFEM - CREATION CHAM_ELEM)
C
C CREATION CHAM_ELEM RELATIFS AU CONTACT
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  MODELE : NOM DU MODELE
C IN  NFISS  : NOMBRE TOTAL DE FISSURES
C IN  LIGREL : NOM DU LIGREL DES MAILLES TARDIVES
C IN  CHELEM : NOM DU CHAM_ELEM A CREER
C IN  PARAM  : NOM DE PARAMETRE
C
C

C
C
      INTEGER       IFM,NIV
      CHARACTER*8   K8BID
      INTEGER       IBID,IAD,IGRP,ISPT,I,IMA,IFIS,IZONE
      INTEGER       NBMA,NBSPG,NMAENR,XXCONI
      CHARACTER*8   NOMFIS,NOMGD
      INTEGER       JCESL,JCESV,JCESD,JMOFIS
      CHARACTER*24  GRP(3)
      INTEGER       MMINFI,JGRP,IRET,JNBSP,JMAIL,ITYELE,IFISS
      LOGICAL       VALL,ISINT,MMINFL
      CHARACTER*19  CHELSI
      REAL*8        VALR,MMINFR
      CHARACTER*16  TYPELE,ENR
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('XFEM',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<XFEM  > CREATION DU CHAM_ELEM PINDCOI '
      ENDIF
C
C --- INITIALISATIONS
C
      NBSPG    = 60
      CHELSI   = '&&XMELE1.CES'
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8BID,IBID)
      ISINT  = (PARAM.EQ.'PINDCOI'.OR.PARAM.EQ.'PMEMCON'
     &           .OR.PARAM.EQ.'PGLISS')
      CALL EXISD('CHAM_ELEM',CHELEM,IRET)
      IF (IRET.EQ.0) THEN
C
C --- CREATION DU CHAM_ELEM_S
C
        CALL CELCES(MODELE//'.TOPOSE.HEA','V','&&XMELE1.HEAV')
        CALL JEVEUO('&&XMELE1.HEAV      .CESD','L', JCESD)
        CALL WKVECT('&&XMELE1.NBSP' ,'V V I',NBMA,JNBSP)
        DO 10 IMA = 1,NBMA
C
C --- NBRE DE SOUS PT DU CHAMP = NBRE DE SOUS PT DE TOPOSE.HEA * NBSPG
C
          ZI(JNBSP-1+IMA) = ZI(JCESD-1+5+4*(IMA-1)+2)*NBSPG
  10    CONTINUE
        IF (ISINT) THEN
          NOMGD = 'NEUT_I'
        ELSE
          NOMGD = 'NEUT_R'
        ENDIF
        CALL CESCRE('V',CHELSI,'ELEM',NOMA,NOMGD,1,'X1',-1,ZI(JNBSP),-1)
        CALL DETRSD('CHAM_ELEM_S','&&XMELE1.HEAV')
        CALL JEDETR('&&XMELE1.NBSP')
      ELSE
C
C --- RECUPERATION DU CHAM_ELEM EXISTANT
C
        CALL CELCES(CHELEM,'V',CHELSI)
      ENDIF
      CALL WKVECT('&&XMELE1.NBSP' ,'V V I',NBMA,JNBSP)   
C
C --- RECUPERATION DES MAILLES DU MODELE
      CALL JEVEUO(MODELE//'.MAILLE','L',JMAIL)
C
C --- ACCES AU CHAM_ELEM_S
C
      CALL JEVEUO(CHELSI//'.CESD','L',JCESD)
      CALL JEVEUO(CHELSI//'.CESL','E',JCESL)
      CALL JEVEUO(CHELSI//'.CESV','E',JCESV)
      CALL JEVEUO(MODELE//'.FISS','L',JMOFIS)
C
C --- ENRICHISSEMENT DU CHAM_ELEM_S POUR LA MULTIFISSURATION
C
      DO 110 IFIS = 1, NFISS
C
C --- ACCES FISSURE COURANTE
C
        NOMFIS = ZK8(JMOFIS-1 + IFIS)
        GRP(1) = NOMFIS(1:8)//'.MAILFISS.HEAV'
        GRP(2) = NOMFIS(1:8)//'.MAILFISS.CTIP'
        GRP(3) = NOMFIS(1:8)//'.MAILFISS.HECT'
C
C --- ZONE DE CONTACT IZONE CORRESPONDANTE
C
        IZONE  = XXCONI(DEFICO,NOMFIS,'MAIT')
C
C --- CONTACT INIT
C
        IF (ISINT) THEN
          IF(PARAM.EQ.'PINDCOI'.OR.PARAM.EQ.'PMEMCON') THEN
            VALL = MMINFI(DEFICO,'CONTACT_INIT',IZONE ).EQ.1
          ELSE IF(PARAM.EQ.'PGLISS') THEN
            VALL = MMINFL(DEFICO,'GLISSIERE_ZONE',IZONE )
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF
        ELSE
          IF(PARAM.EQ.'PSEUIL') THEN
            VALR = MMINFR(DEFICO,'SEUIL_INIT',IZONE )
          ELSE IF(PARAM(1:5).EQ.'PCOHE') THEN
            VALR = 0.D0
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF
          VALL = VALR.NE.0.D0
        ENDIF
C
        IF (VALL) THEN
C
C --- ON COPIE LES CHAMPS CORRESP. AUX ELEM. HEAV, CTIP ET HECT
C
          DO 1000 IGRP = 1,3
            CALL JEEXIN(GRP(IGRP),IRET)
            IF (IRET.NE.0) THEN
              CALL JEVEUO(GRP(IGRP),'L',JGRP)
              CALL JELIRA(GRP(IGRP),'LONMAX',NMAENR,K8BID)
              DO 120 I = 1,NMAENR
                IMA = ZI(JGRP-1+I)
C
C --- ON NE TRAITE QUE LES MAILLES DE CONTACT
C
                ITYELE=ZI(JMAIL-1+IMA)
                CALL JENUNO(JEXNUM('&CATA.TE.NOMTE',ITYELE),TYPELE)
                CALL TEATTR(TYPELE,'S','XFEM',ENR,IBID)
                IF (ENR(3:3).NE.'C'.AND.ENR(4:4).NE.'C') GOTO 120
C
C --- INCREMENTATION DU NUMÉRO DE FISSURE LOCALE
C
                ZI(JNBSP-1+IMA) = ZI(JNBSP-1+IMA) + 1
C
C --- RECOPIE EFFECTIVE DES CHAMPS
C
                DO 150 ISPT = 1,NBSPG
                  CALL CESEXI('S',JCESD,JCESL,IMA,1,(ZI(JNBSP-1+IMA)-1)*
     &                        NBSPG+ISPT,1,IAD)
                  ZL(JCESL-1+ABS(IAD)) = .TRUE.
                  IF(ISINT) ZI(JCESV-1+ABS(IAD)) = 1                
                  IF(.NOT.ISINT) ZR(JCESV-1+ABS(IAD)) = VALR
 150            CONTINUE
 120          CONTINUE
            ENDIF
 1000     CONTINUE
        ENDIF
 110  CONTINUE
C
C --- CONVERSION CHAM_ELEM_S -> CHAM_ELEM
C
      CALL CESCEL(CHELSI,LIGREL,OPTION,PARAM,'OUI',IBID,'V',
     &            CHELEM,'F',IBID)
C
C --- MENAGE
C
      CALL DETRSD('CHAM_ELEM_S',CHELSI)
      CALL JEDETR('&&XMELE1.NBSP')
C
      CALL JEDEMA()
C
      END
