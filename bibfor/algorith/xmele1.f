      SUBROUTINE XMELE1(NOMA  ,MODELE,DEFICO,LIGREL,NFISS ,
     &                  CHELEM,PARAM,OPTION)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      CHARACTER*8   NOMA,MODELE
      CHARACTER*(*)   PARAM,OPTION
      INTEGER       NFISS
      CHARACTER*19  CHELEM
      CHARACTER*19  LIGREL
      CHARACTER*24  DEFICO
C
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (METHODE XFEM - CREATION CHAM_ELEM)
C
C CREATION CHAM_ELEM RELATIFS AU CONTACT
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  MODELE : NOM DU MODELE
C IN  NFISS  : NOMBRE TOTAL DE FISSURES
C IN  LIGREL : NOM DU LIGREL DES MAILLES TARDIVES
C IN  CHELEM : NOM DU CHAM_ELEM A CREER
C IN  PARAM  : NOM DE PARAMETRE
C
C

C
      INTEGER       IFM,NIV
      CHARACTER*8   K8BID
      INTEGER       IBID,IAD,ISPT,I,IMA,IFIS,IZONE,IER
      INTEGER       IFIMA,JCESD1,JCESL1,JCESV1,JXC
      INTEGER       NDIM,NFACE,NFISC,NNINT,NPG,TYPINT,NFISC2
      INTEGER       NBMA,NMAENR,XXCONI,JCESD2,JCESL2,JCESV2
      CHARACTER*8   NOMFIS,NOMGD,ELC,NOMFI2,LICMP3(3)
      INTEGER       JCESL,JCESV,JCESD,JMOFIS,NCMP,ICMP
      CHARACTER*24  GRP
      INTEGER       MMINFI,JGRP,IRET,JNBSP,IFISS
      LOGICAL       VALL,ISINT,MMINFL
      CHARACTER*19  CHELSI,CMAFIS,FACLON,CHNBSP
      REAL*8        VALR,MMINFR
C
      DATA LICMP3    / 'X1', 'X2', 'X3'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('XFEM',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<XFEM  > CREATION DU CHAM_ELEM PINDCOI '
      ENDIF
C
C --- INITIALISATIONS CHAMPS SIMPLES DE TRAVAIL
C
      CHELSI = '&&XMELE1.CES'
      FACLON = '&&XMELE1.FACLO'
      CHNBSP = '&&XMELE1.NBSP'
      CMAFIS = '&&XMELE1.XMAFIS'
C
C --- RECUPERATION DES INFOS SUR LE MAILLAGE ET LE MODELE
C
      CALL JEVEUO(MODELE//'.FISS','L',JMOFIS)
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8BID,IBID)
      CALL DISMOI('F','DIM_GEOM',MODELE,'MODELE',NDIM,K8BID,IER)
      CALL JEVEUO(MODELE//'.XFEM_CONT','L',JXC)
C
C --- ELEMENT DE REFERENCE ASSOCIE A UNE FACETTE DE CONTACT
C
      IF (NDIM .EQ. 3) THEN
        ELC='TR3'
      ELSEIF (NDIM.EQ.2) THEN
        IF(ZI(JXC).LE.2) THEN
          ELC='SE2'
        ELSE
          ELC='SE3'
        ENDIF
      ENDIF
C
C --- INFOS SUR LE TYPE DE LA VALEUR A INITIALISER
C      
      ISINT  = (PARAM.EQ.'PINDCOI'.OR.
     &          PARAM.EQ.'PMEMCON'.OR.
     &          PARAM.EQ.'PGLISS')
      IF (ISINT) THEN
        NOMGD = 'NEUT_I'
      ELSE
        NOMGD = 'NEUT_R'
      ENDIF
C
      IF(PARAM.EQ.'PCOHES') THEN
         NCMP = 3
      ELSE
         NCMP = 1
      ENDIF
C
C --- CREATION DES OBJETS DE TRAVAIL
C
      CALL CELCES(MODELE//'.TOPOFAC.LO','V',FACLON)
      CALL JEVEUO(FACLON(1:19)//'.CESD','L', JCESD2)
      CALL JEVEUO(FACLON(1:19)//'.CESL','L', JCESL2)
      CALL JEVEUO(FACLON(1:19)//'.CESV','L', JCESV2)
      CALL CELCES(MODELE//'.XMAFIS','V',CMAFIS)
      CALL JEVEUO(CMAFIS(1:19)//'.CESD','L', JCESD1)
      CALL JEVEUO(CMAFIS(1:19)//'.CESL','L', JCESL1)
      CALL JEVEUO(CMAFIS(1:19)//'.CESV','L', JCESV1)
      CALL WKVECT(CHNBSP,'V V I',NBMA,JNBSP)
C
C --- TEST EXISTENCE DU CHAM_ELEM OU NON
C
      CALL EXISD('CHAM_ELEM',CHELEM,IRET)
      IF (IRET.NE.0) THEN
        CALL CELCES(CHELEM,'V',CHELSI)
      ELSE
C
C ---  BOUCLE SUR LES FISSURES
C
        DO 11 IFISS = 1,NFISS
C
C --- RECUPERATION NOMBRE DE POINTS DE GAUSS PAR FACETTE
C
          NOMFIS = ZK8(JMOFIS-1 + IFISS)
          IZONE = XXCONI(DEFICO,NOMFIS,'MAIT')
          TYPINT = MMINFI(DEFICO,'INTEGRATION',IZONE )
          CALL XMELIN(ELC,TYPINT,NNINT)
C
C --- RECUP LISTE DES MAILLES DE CONTACT POUR LA FISSURE
C
          GRP    = NOMFIS(1:8)//'.MAILFISS.CONT'
          CALL JEEXIN(GRP,IRET)
          NMAENR = 0
          IF (IRET.NE.0) THEN
             CALL JEVEUO(GRP,'L',JGRP)
             CALL JELIRA(GRP,'LONMAX',NMAENR,K8BID)
          ENDIF
C
C --- BOUCLE SUR LES MAILLES DE CONTACT DE LA FISSURE
C
          DO 10 I = 1,NMAENR
            IMA = ZI(JGRP-1+I)
            CALL ASSERT(IMA.LE.NBMA)
C --- NOMBRE DE FISSURES VUE PAR LA MAILLE
            NFISC  = ZI(JCESD2-1+5+4*(IMA-1)+2)
            NFISC2 = ZI(JCESD1-1+5+4*(IMA-1)+2)
            CALL ASSERT(NFISC.EQ.NFISC2)
            NFACE = 0
C --- BOUCLE SUR CES FISSURES
            DO 12 IFIMA = 1,NFISC
              CALL CESEXI('S',JCESD1,JCESL1,IMA,1,IFIMA,1,IAD)
              NOMFI2 = ZK8(JCESV1-1+IAD)
C
C --- S IL S AGIT DE LA FISSURE COURANTE
C --- ON RECUPERE LE NOMBRE DE FACETTES ET ON INCREMENTE
C --- LE NOMBRE DE SOUS-POINTS
C             
              IF(NOMFIS.EQ.NOMFI2) THEN
                 CALL ASSERT(NFACE.EQ.0)
                 CALL CESEXI('S',JCESD2,JCESL2,IMA,1,IFIMA,2,IAD)
                 NFACE = ZI(JCESV2-1+IAD)
                 CALL ASSERT(NFACE.LE.6)
                 ZI(JNBSP-1+IMA) = ZI(JNBSP-1+IMA)+NFACE*NNINT
              ENDIF
12          CONTINUE
10        CONTINUE
11      CONTINUE
C
        IF(PARAM.EQ.'PCOHES') THEN
        CALL CESCRE('V',CHELSI,'ELEM',NOMA,
     &   NOMGD,1,LICMP3,-1,ZI(JNBSP),-NCMP)
        ELSE
        CALL CESCRE('V',CHELSI,'ELEM',NOMA,
     &   NOMGD,1,'X1',-1,ZI(JNBSP),-NCMP)
        ENDIF
C
C --- RAZ VECTEUR DE DIMENSIONNEMENT
C
      ENDIF
      CALL JEDETR(CHNBSP)      
      CALL WKVECT(CHNBSP,'V V I',NBMA,JNBSP)      
C
C --- ACCES AU CHAM_ELEM_S
C
      CALL JEVEUO(CHELSI//'.CESD','L',JCESD)
      CALL JEVEUO(CHELSI//'.CESL','E',JCESL)
      CALL JEVEUO(CHELSI//'.CESV','E',JCESV)
C
C --- ENRICHISSEMENT DU CHAM_ELEM_S POUR LA MULTIFISSURATION
C
      DO 110 IFIS = 1, NFISS
C
C --- ACCES FISSURE COURANTE
C
        NOMFIS = ZK8(JMOFIS-1 + IFIS)
        GRP = NOMFIS(1:8)//'.MAILFISS.CONT'
        CALL JEEXIN(GRP,IRET)
        IF (IRET.NE.0) CALL JEVEUO(GRP,'L',JGRP)     
C
C --- ZONE DE CONTACT IZONE CORRESPONDANTE
C
        IZONE  = XXCONI(DEFICO,NOMFIS,'MAIT')
        TYPINT = MMINFI(DEFICO,'INTEGRATION',IZONE )
        CALL XMELIN(ELC,TYPINT,NNINT)
C
C --- CONTACT INIT
C
        IF (ISINT) THEN
          IF(PARAM.EQ.'PINDCOI'.OR.PARAM.EQ.'PMEMCON') THEN
            VALL = MMINFI(DEFICO,'CONTACT_INIT',IZONE ).EQ.1
          ELSE IF(PARAM.EQ.'PGLISS') THEN
            VALL = MMINFL(DEFICO,'GLISSIERE_ZONE',IZONE )
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF
        ELSE
          IF(PARAM.EQ.'PSEUIL') THEN
            VALR = MMINFR(DEFICO,'SEUIL_INIT',IZONE )
          ELSE IF(PARAM(1:5).EQ.'PCOHE') THEN
            VALR = 0.D0
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF
          VALL = VALR.NE.0.D0
        ENDIF
C
        IF (VALL) THEN
C
C --- ON COPIE LES CHAMPS CORRESP. AUX ELEM. DE CONTACT
C
          CALL JEEXIN(GRP,IRET)
          IF (IRET.NE.0) THEN
            CALL JEVEUO(GRP,'L',JGRP)
            CALL JELIRA(GRP,'LONMAX',NMAENR,K8BID)
            DO 120 I = 1,NMAENR
              IMA = ZI(JGRP-1+I)
C
C --- INDICE LOCAL DE LA FISSURE COURANTE
C --- ET DECALAGE CORRESPONDANT
C
              NFISC  = ZI(JCESD1-1+5+4*(IMA-1)+2)
              DO 15 IFIMA = 1,NFISC
                CALL CESEXI('S',JCESD1,JCESL1,IMA,1,IFIMA,1,IAD)
                NOMFI2 = ZK8(JCESV1-1+IAD)
                IF(NOMFIS.EQ.NOMFI2) THEN
                   CALL CESEXI('S',JCESD2,JCESL2,IMA,1,IFIMA,2,IAD)
                   NFACE = ZI(JCESV2-1+IAD)
                   NPG = NFACE*NNINT
                ENDIF
15            CONTINUE
C
C --- RECOPIE EFFECTIVE DES CHAMPS
C
              DO 150 ISPT = 1,NPG
                DO 151 ICMP = 1,NCMP
                CALL CESEXI('S',JCESD,JCESL,IMA,1,
     &                      ZI(JNBSP-1+IMA)+ISPT,ICMP,IAD)
                ZL(JCESL-1+ABS(IAD)) = .TRUE.
                IF(ISINT) ZI(JCESV-1+ABS(IAD)) = 1
                IF(.NOT.ISINT) ZR(JCESV-1+ABS(IAD)) = VALR
 151            CONTINUE
 150          CONTINUE
C
C --- INCREMENTATION REPERAGE POUR LES FISSURES SUIVANTES
C
              ZI(JNBSP-1+IMA) = ZI(JNBSP-1+IMA) + NPG
C
 120        CONTINUE
          ENDIF
        ENDIF
 110  CONTINUE
C
C --- CONVERSION CHAM_ELEM_S -> CHAM_ELEM
C
      CALL CESCEL(CHELSI,LIGREL,OPTION,PARAM,'OUI',IBID,'V',
     &            CHELEM,'F',IBID)
C
C --- MENAGE
C
      CALL DETRSD('CHAM_ELEM_S',CHELSI)
      CALL DETRSD('CHAM_ELEM_S',CMAFIS)
      CALL DETRSD('CHAM_ELEM_S',FACLON)
      CALL JEDETR(CHNBSP)
C
      CALL JEDEMA()
C
      END
