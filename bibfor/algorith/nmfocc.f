      SUBROUTINE NMFOCC(PHASE ,
     &                  MODELE,MATE  ,NUMEDD,FONACT,DEFICO,
     &                  RESOCO,SDSTAT,SDTIME,SOLALG,VALINC,
     &                  VEELEM,VEASSE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/03/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      CHARACTER*10  PHASE
      CHARACTER*24  DEFICO,RESOCO
      INTEGER       FONACT(*)
      CHARACTER*19  SOLALG(*),VALINC(*)
      CHARACTER*19  VEELEM(*),VEASSE(*)
      CHARACTER*24  MATE,NUMEDD
      CHARACTER*24  MODELE,SDSTAT,SDTIME
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL - UTILITAIRE)
C
C CALCUL DU SECOND MEMBRE POUR CONTACT/XFEM
C
C ----------------------------------------------------------------------
C
C
C IN  PHASE  : PHASE DE CALCUL
C               'PREDICTION' - PHASE DE PREDICTION
C               'CONVERGENC' - PHASE DE CONVERGENCE
C               'CORRECTION' - PHASE DE CORRECTION
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  MATE   : CHAMP MATERIAU
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  RESOCO : SD POUR LA RESOLUTION DE CONTACT
C IN  SDSTAT : SD STATISTIQUES
C IN  SDTIME : SD TIMER
C IN  VEELEM : VARIABLE CHAPEAU POUR NOM DES VECT_ELEM
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C
C ----------------------------------------------------------------------
C
      INTEGER      IFM,NIV
      LOGICAL      ISFONC,LELTC,LELTF,LALLV,LNEWTC,LNEWTG
      CHARACTER*19 VEELTC,VEELTF
      CHARACTER*19 CNELTF,CNELTC,CNFINT
      CHARACTER*19 DEPMOI,DEPDEL,VITMOI,ACCMOI,VITPLU
      CHARACTER*8  NOMA
      INTEGER      IRET,IBID
C
C ----------------------------------------------------------------------
C
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> CALCUL DU SECOND MEMBRE'
      ENDIF
C
C --- INITIALISATIONS
C
      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE'  ,IBID  ,NOMA  ,IRET)
C
C --- FONCTIONNALITES ACTIVEES
C
      LELTC  = ISFONC(FONACT,'ELT_CONTACT')
      LELTF  = ISFONC(FONACT,'ELT_FROTTEMENT')
      LALLV  = ISFONC(FONACT,'CONT_ALL_VERIF')
      LNEWTC = ISFONC(FONACT,'CONT_NEWTON')
      LNEWTG = ISFONC(FONACT,'GEOM_NEWTON')
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VEASSE,'VEASSE','CNFINT',CNFINT)
      CALL NMCHEX(VALINC,'VALINC','DEPMOI',DEPMOI)
      CALL NMCHEX(VALINC,'VALINC','VITMOI',VITMOI)
      CALL NMCHEX(VALINC,'VALINC','ACCMOI',ACCMOI)
      CALL NMCHEX(VALINC,'VALINC','VITPLU',VITPLU)
      CALL NMCHEX(SOLALG,'SOLALG','DEPDEL',DEPDEL)
      CALL NMCHEX(VEELEM,'VEELEM','CNELTC',VEELTC)
      CALL NMCHEX(VEELEM,'VEELEM','CNELTF',VEELTF)
      CALL NMCHEX(VEASSE,'VEASSE','CNELTC',CNELTC)
      CALL NMCHEX(VEASSE,'VEASSE','CNELTF',CNELTF)
C
C --- PAS DE CALCUL EN NEWTON (IL FAUT RE-EVALUER LES STATUTS D'ABORD)
C
      IF ((PHASE.EQ.'CONVERGENC').AND.(LNEWTC.OR.LNEWTG)) THEN
        GOTO 999
      ENDIF
C
C --- ON ENLEVE
C
      IF (PHASE.EQ.'CORRECTION') THEN
        IF (LELTC.AND.(.NOT.LALLV)) CALL VTAXPY(-1.D0,CNELTC,CNFINT)
        IF (LELTF.AND.(.NOT.LALLV)) CALL VTAXPY(-1.D0,CNELTF,CNFINT)
      ENDIF
C
C --- FORCES ELEMENTS DE CONTACT (XFEM+CONTINU)
C
      IF (LELTC.AND.(.NOT.LALLV)) THEN
        CALL NMTIME(SDTIME,'INI','CTCC_VECT')
        CALL NMTIME(SDTIME,'RUN','CTCC_VECT')
        CALL NMELCV('CONT',MODELE,DEFICO,RESOCO,MATE  ,
     &              DEPMOI,DEPDEL,VITMOI,VITPLU,ACCMOI,
     &              VEELTC)
        CALL ASSVEC('V',CNELTC,1,VEELTC,1.D0,NUMEDD,' ','ZERO',1)
        CALL NMTIME(SDTIME,'END','CTCC_VECT')
        CALL NMRINC(SDSTAT,'CTCC_VECT')
        IF (NIV.EQ.2) THEN
          CALL NMDEBG('VECT',CNELTC,IFM   )
        ENDIF
      ENDIF
C
C --- FORCES ELEMENTS DE FROTTEMENT (XFEM+CONTINU)
C
      IF (LELTF.AND.(.NOT.LALLV)) THEN
        CALL NMTIME(SDTIME,'INI','CTCC_VECT')
        CALL NMTIME(SDTIME,'RUN','CTCC_VECT')
        CALL NMELCV('FROT',MODELE,DEFICO,RESOCO,MATE  ,
     &              DEPMOI,DEPDEL,VITMOI,VITPLU,ACCMOI,
     &              VEELTF)
        CALL ASSVEC('V',CNELTF,1,VEELTF,1.D0,NUMEDD,' ','ZERO',1)
        CALL NMTIME(SDTIME,'END','CTCC_VECT')
        CALL NMRINC(SDSTAT,'CTCC_VECT')
        IF (NIV.EQ.2) THEN
          CALL NMDEBG('VECT',CNELTF,IFM   )
        ENDIF
      ENDIF
C
C --- ON REMET
C
      IF (PHASE.EQ.'CORRECTION') THEN
        IF (LELTC.AND.(.NOT.LALLV)) CALL VTAXPY(1.D0,CNELTC,CNFINT)
        IF (LELTF.AND.(.NOT.LALLV)) CALL VTAXPY(1.D0,CNELTF,CNFINT)
      ENDIF
C
  999 CONTINUE
C
      END
