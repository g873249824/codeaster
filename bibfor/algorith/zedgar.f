      SUBROUTINE ZEDGAR (MATOS,TM,TP,DELTAT,ZM,ZP)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/02/2008   AUTEUR CANO V.CANO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      
      IMPLICIT NONE
      INTEGER  MATOS
      REAL*8   TM,TP,DELTAT,ZM(3),ZP(3)
      
C............................................
C CALCUL PHASE METALLURGIQUE POUR EDGAR 
C............................................
C IN   MATOS  : 
C IN   TM     : TEMPERATURE A L INSTANT MOINS
C IN   TP     : TEMPERATURE A L INSTANT PLUS
C IN   DELTAT : PAS DE TEMPS
C IN   ZM     : PROPORTION DES PHASES A L INSTANT MOINS
C OUT  ZP     : PROPORTION DES PHASES A L INSTANT PLUS

      INTEGER       I,NBPAS
      REAL*8        TDEQ,N,K,A,M,QSR,AR,BR,TDC,TDR,VALRES(10),EPS
      REAL*8        ZALPHM,ZBETAM,ZALPHP,ZBETAP,ZBETEQ
      REAL*8        DZ1,DZ2,DZ3,DZ4
      REAL*8        DELTA,TPOINT,TEQ,TEMP,TI1,TI2
      CHARACTER*24 NOMRES(10)
      CHARACTER*2  CODRET(10)
      LOGICAL       LREFR

C 1 - CARACTERISTIQUE MATERIAU

      EPS = 1.D-9
      NOMRES(1)='TDEQ'
      NOMRES(2)='K'
      NOMRES(3)='N'
      NOMRES(4)='AC'
      NOMRES(5)='M'
      NOMRES(6)='AR'
      NOMRES(7)='BR'
      NOMRES(8)='TDC'
      NOMRES(9)='TDR'
      NOMRES(10)='QSR_K'
      
      CALL RCVALA(MATOS,' ','META_ZIRC', 1, 'TEMP', TP, 9, NOMRES,
     &            VALRES, CODRET, 'FM' )

      CALL RCVALA(MATOS,' ','META_ZIRC', 1, 'TEMP', TP,1, NOMRES(10),
     &                VALRES(10), CODRET(10), ' ' )

      IF (CODRET(10) .NE. 'OK') VALRES(10)=0.D0

      TDEQ = VALRES(1)
      K=VALRES(2)
      N= VALRES(3)
      A=VALRES(4)
      M=VALRES(5)
      AR=VALRES(6)
      BR=VALRES(7)
      TDC=VALRES(8)
      TDR=VALRES(9)
      QSR=VALRES(10)

C 2 - CALCUL DE ZALPHM - ZBETAM - Z BETA EQUIVALENT 
C     ET VITESSE DE LA TEMPERATURE

      ZALPHM = ZM(1)+ZM(2)
      ZBETAM = 1.D0-ZALPHM

      IF (TP .LT. TDEQ) THEN
        ZBETEQ=0.D0
      ELSE
        ZBETEQ=K*(TP-TDEQ)
        ZBETEQ=EXP(-ZBETEQ**N)
        ZBETEQ=1.D0-ZBETEQ
      ENDIF

      TPOINT=(TP-TM)/DELTAT

C 3 - DETERMINATION DU SENS DE L'EVOLUTION METALLURGIQUE
      
      IF ( TPOINT .GT. 0.D0 ) THEN
        LREFR = .FALSE.
      ENDIF
      IF ( TPOINT .LT. 0.D0 ) THEN
        IF ( TP .GT. TDR) THEN
          LREFR = .FALSE.
        ELSE
          LREFR = .TRUE.
        ENDIF
      ENDIF
      IF ( TPOINT .EQ. 0.D0 ) THEN
        IF ( TP .GT. TDR) LREFR = .FALSE.
        IF ( TP .LT. TDC) LREFR = .TRUE.
        IF ((TP.GE.TDC).AND.( TP.LE.TDR)) THEN
          IF (ZBETAM .LE. ZBETEQ ) THEN
            LREFR = .FALSE.
          ELSE
            LREFR = .TRUE.
          ENDIF
        ENDIF
      ENDIF
             
C 4 - DETERMINSATION DE ZBETAP PAR LA METHODE DE RUNGE-KUTTA
C 4.1 - CONTROLE DE L INCREMENT DE TEMPERATURE

      IF ( ABS(TP-TM) .GT. 5.001D0 ) THEN

        NBPAS = INT(ABS(TP-TM)/5.D0-0.001D0)+1
        DELTA = DELTAT/DBLE(NBPAS)        
        DO 10 I = 1 , NBPAS
          TI1 = TM+(TP-TM)*DBLE(I-1)/DBLE(NBPAS)
          TI2 = TM+(TP-TM)*DBLE(I)/DBLE(NBPAS)
          TPOINT = (TI2-TI1)/DELTA
          
          ZBETAP=ZBETAM
          TEMP=TI1
          CALL TEMPEQ(ZBETAP,TDEQ,K,N,TEQ)
          CALL ZEVOLU(LREFR,ZBETAP,TEMP,TDC,TDR,A,QSR,M,TEQ,AR,BR,DZ1)
          DZ1=DZ1*DELTA

          ZBETAP=ZBETAM+DZ1/2.D0
          TEMP=TI1+(TI2-TI1)/2.D0
          CALL TEMPEQ(ZBETAP,TDEQ,K,N,TEQ)
          CALL ZEVOLU(LREFR,ZBETAP,TEMP,TDC,TDR,A,QSR,M,TEQ,AR,BR,DZ2)
          DZ2=DZ2*DELTA

          ZBETAP=ZBETAM+DZ2/2.D0
          CALL TEMPEQ(ZBETAP,TDEQ,K,N,TEQ)
          CALL ZEVOLU(LREFR,ZBETAP,TEMP,TDC,TDR,A,QSR,M,TEQ,AR,BR,DZ3)
          DZ3=DZ3*DELTA

          ZBETAP=ZBETAM+DZ3
          TEMP=TI2
          CALL TEMPEQ(ZBETAP,TDEQ,K,N,TEQ)
          CALL ZEVOLU(LREFR,ZBETAP,TEMP,TDC,TDR,A,QSR,M,TEQ,AR,BR,DZ4)
          DZ4=DZ4*DELTA

          ZBETAP=ZBETAM+(DZ1+2.D0*DZ2+2.D0*DZ3+DZ4)/6.D0
          ZBETAM=ZBETAP
 10     CONTINUE

      ELSE
         
        ZBETAP=ZBETAM
        TEMP=TM
        CALL TEMPEQ(ZBETAP,TDEQ,K,N,TEQ)
        CALL ZEVOLU(LREFR,ZBETAP,TEMP,TDC,TDR,A,QSR,M,TEQ,AR,BR,DZ1)
        DZ1=DZ1*DELTAT

        ZBETAP=ZBETAM+DZ1/2.D0
        TEMP=TM+(TP-TM)/2.D0
        CALL TEMPEQ(ZBETAP,TDEQ,K,N,TEQ)
        CALL ZEVOLU(LREFR,ZBETAP,TEMP,TDC,TDR,A,QSR,M,TEQ,AR,BR,DZ2)
        DZ2=DZ2*DELTAT

        ZBETAP=ZBETAM+DZ2/2.D0
        CALL TEMPEQ(ZBETAP,TDEQ,K,N,TEQ)
        CALL ZEVOLU(LREFR,ZBETAP,TEMP,TDC,TDR,A,QSR,M,TEQ,AR,BR,DZ3)
        DZ3=DZ3*DELTAT

        ZBETAP=ZBETAM+DZ3
        TEMP=TP
        CALL TEMPEQ(ZBETAP,TDEQ,K,N,TEQ)
        CALL ZEVOLU(LREFR,ZBETAP,TEMP,TDC,TDR,A,QSR,M,TEQ,AR,BR,DZ4)
        DZ4=DZ4*DELTAT

        ZBETAP=ZBETAM+(DZ1+2.D0*DZ2+2.D0*DZ3+DZ4)/6.D0

      ENDIF

C 5 - TEST DE COHERENCE

      IF (ZBETAP .LT. EPS) ZBETAP =0.D0

      IF ((.NOT. LREFR ).AND.(ZBETAP .GT. ZBETEQ)) ZBETAP =ZBETEQ
      IF ((LREFR ).AND.(ZBETAP .LT. ZBETEQ)) ZBETAP =ZBETEQ
      IF (ZBETAP .GT. (1.D0-EPS))  ZBETAP = 1.D0

C 6 - CREATION DE TROIS PHASES
      
      ZALPHP=1.D0-ZBETAP
      IF (ZBETAP .GT. 0.1D0) THEN
        ZP(1) =0.D0
      ELSE
        ZP(1)=10.D0*(ZALPHP-0.9D0)*ZALPHP
      ENDIF
      IF (ZP(1) .LT. EPS) ZP(1) =0.D0
      ZP(2)=ZALPHP-ZP(1)
      IF (ZP(2) .LT. EPS) ZP(2) =0.D0
      ZP(3)=TP

      END
