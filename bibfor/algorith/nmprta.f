      SUBROUTINE NMPRTA(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,METHOD,SOLVEU,FONACT,
     &                  PARMET,CARCRI,SDPILO,SDDISC,NUMINS,
     &                  INST  ,VALMOI,VALPLU,POUGD ,SECMBR,
     &                  DEPALG,LICCVG,MATASS,MAPREC,PREMIE,
     &                  PARCRI,DEFICO,RESOCO,CONV  ,CNFINT,
     &                  CNDIRI,SDDYNA,SDSENS,MEELEM,MEASSE,
     &                  VEELEM)
C
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      LOGICAL      PREMIE,FONACT(*)
      INTEGER      NUMINS,LICCVG(*)
      REAL*8       PARMET(*),INST(*)
      REAL*8       PARCRI(*),CONV(*)
      CHARACTER*14 SDPILO
      CHARACTER*16 METHOD(*)
      CHARACTER*19 MATASS,MAPREC
      CHARACTER*19 LISCHA,SOLVEU,SDDISC,SDDYNA
      CHARACTER*19 CNFINT,CNDIRI
      CHARACTER*24 MODELE,NUMEDD, MATE, CARELE, COMREF, COMPOR
      CHARACTER*24 CARCRI 
      CHARACTER*24 VALMOI(8),POUGD(8),VALPLU(8),DEPALG(8),SECMBR(8)
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*24 SDSENS
      CHARACTER*8  MEELEM(8),VEELEM(30)
      CHARACTER*19 MEASSE(8)          
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PREDICTION)
C
C PREDICTION PAR METHODE DE NEWTON-EULER
C      
C ----------------------------------------------------------------------
C
C
C IN       MODELE K24  MODELE
C IN       NUMEDD K24  NUME_DDL
C IN       MATE   K24  CHAMP MATERIAU
C IN       CARELE K24  CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN       COMREF K24  VARI_COM DE REFERENCE
C IN       COMPOR K24  COMPORTEMENT
C IN       LISCHA K19  L_CHARGES
C IN       MEDIRI K24  MATRICES ELEMENTAIRES DE DIRICHLET (B)
C IN       METHOD K16  INFORMATIONS SUR LES METHODES DE RESOLUTION
C IN       SOLVEU K19  SOLVEUR
C IN       PARMET  R8  PARAMETRES DES METHODES DE RESOLUTION
C IN       RIGID  K24  MATRICE DE RIGIDITE (EN DYNAMIQUE SEULEMENT)
C IN       MATASS K19  MATRICE DU PREMIER MEMBRE ASSEMBLEE
C IN       CARCRI K24  PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN       SDPILO K14  SD PILOTAGE
C IN       SDDISC K19  SD DISC_INST
C IN       NUMINS  I   NUMERO D'INSTANT
C IN       INST    R8  PARAMETRES INTEGRATION EN TEMPS (T+, DT, THETA)
C IN       VALMOI K24  ETAT EN T-
C IN       POUGD  K24  DONNES POUR POUTRES GRANDES DEFORMATIONS
C IN       VALPLU K24  ETAT EN T+
C IN       SECMBR K24  VECTEURS ASSEMBLES DES CHARGEMENTS FIXES
C IN       SDDYNA K19  SD DEDIEE A LA DYNAMIQUE (CF NDLECT)
C OUT      LICCVG  I   CODES RETOURS
C                      (5) - MATASS SINGULIERE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      NBDONN,NBPILO
      PARAMETER   (NBDONN = 6,NBPILO = 3)
      REAL*8       CODONN(NBDONN),COPILO(NBPILO)
      CHARACTER*19 CNDONN(NBDONN),CNPILO(NBPILO)
C  
      LOGICAL      NDYNLO,LSSTRU,LEXPL
      REAL*8       INSTAP,DIINST
      CHARACTER*16 OPTION
      CHARACTER*19 MATRIX(2)
      CHARACTER*24 K24BID,K24BLA,DEPALZ(8)
      CHARACTER*24 DEPMOI,SIGMOI,ACCPLU
      CHARACTER*24 DDEPLA,DEPOLD,DEPDEL,DEPPRE(2)
      CHARACTER*24 DEPDE0
      CHARACTER*24 CNFEDO,CNFEPI,CNDIDO,CNDIPI,CNFSDO,CNFSPI
      CHARACTER*24 CNCINE
      CHARACTER*24 CNFNOD,CNBUDI,CNVCPR
      INTEGER      LDCCVG,FACCVG
      CHARACTER*8  VEFINT,VEDIRI
      CHARACTER*8  MERIGI,MESSTR
      CHARACTER*19 SSTRU      
      INTEGER      IFM,NIV
      DATA CNFNOD /'&&NMPRTA.FNOD'/
      DATA CNVCPR /'&&NMPRTA.VCPR'/
      DATA CNBUDI /'&&NMPRTA.BUDI'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... PREDICTION TYPE EULER' 
      ENDIF
C
C --- INITIALISATIONS
C
      INSTAP    = DIINST(SDDISC, NUMINS)
      LSSTRU    = NDYNLO(SDDYNA,'EXPL_GENE')
      LDCCVG    = 0
      FACCVG    = 0 
      MATRIX(1) = MATASS   
      MATRIX(2) = MAPREC        
C
C --- FONCTIONNALITES ACTIVEES
C         
      LEXPL  = NDYNLO(SDDYNA,'EXPLICITE')          
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL DESAGG(VALMOI,DEPMOI,SIGMOI,K24BID,K24BID,
     &            K24BID,K24BID,K24BID,K24BID)
      CALL DESAGG(SECMBR,CNFEDO,CNFEPI,CNDIDO,CNDIPI,
     &            CNFSDO,CNFSPI,K24BID,CNCINE)
      CALL DESAGG(VALPLU,K24BID,K24BID,K24BID,K24BID,
     &            K24BID,ACCPLU,K24BID,K24BID)
      CALL DESAGG(DEPALG,DDEPLA,DEPDEL,DEPOLD,DEPPRE(1),
     &            DEPPRE(2),K24BID,K24BID,K24BID)
      VEFINT = VEELEM(1)   
      VEDIRI = VEELEM(2) 
      MERIGI = MEELEM(1)
      MESSTR = MEELEM(6)
      SSTRU  = MEASSE(6)       
C
C --- INCREMENT DE DEPLACEMENT NUL EN PREDICTION
C      
      DEPDE0 = '&&CNPART.ZERO' 
      CALL AGGLOM(DDEPLA,DEPDE0,DEPOLD,DEPPRE(1),
     &            DEPPRE(2),K24BLA,K24BLA,K24BLA, 8, DEPALZ)
C
C --- CALCUL DE LA MATRICE
C 
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... CALCUL MATRICE' 
      ENDIF
C
      IF (LEXPL) THEN
        CALL NMMATR('EXPLICITE',MODELE,NUMEDD,MATE  ,CARELE,
     &              COMREF,COMPOR,LISCHA,RESOCO,METHOD,
     &              SOLVEU,PARMET,CARCRI,SDDISC,NUMINS,
     &              0     ,VALMOI,POUGD ,VALPLU,MATASS,
     &              MAPREC,OPTION,DEFICO,DEPALG,PREMIE,
     &              FONACT,MEELEM,MEASSE,VEELEM,FACCVG,
     &              SDDYNA)
      ELSE
        CALL NMMATR('PREDICTION',MODELE,NUMEDD,MATE  ,CARELE,
     &              COMREF,COMPOR,LISCHA,RESOCO,METHOD,
     &              SOLVEU,PARMET,CARCRI,SDDISC,NUMINS,
     &              0     ,VALMOI,POUGD ,VALPLU,MATASS,
     &              MAPREC,OPTION,DEFICO,DEPALZ,PREMIE,
     &              FONACT,MEELEM,MEASSE,VEELEM,FACCVG,
     &              SDDYNA)
      ENDIF  
C  
      IF ((FACCVG.EQ.1).OR.(FACCVG.EQ.2)) GOTO 9999
C
C --- CALCUL DU SECOND MEMBRE 
C  
      CALL NMASSP(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &            COMPOR,LISCHA,SOLVEU,FONACT,PARMET,
     &            CARCRI,SDDISC,NUMINS,INST  ,VALMOI,
     &            VALPLU,POUGD ,SECMBR,DEPALZ,SDDYNA,
     &            SDSENS,MEELEM,MEASSE,VEELEM,CNFNOD,
     &            CNBUDI,CNVCPR)
C
C --- RESOLUTION
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... RESOLUTION' 
      ENDIF
      IF (LEXPL) THEN
        CALL NMFINT('RAPH_MECA',
     &              MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &              COMPOR,LISCHA,CARCRI,FONACT,RESOCO,
     &              0     ,SDDYNA,LDCCVG,VALMOI,VALPLU,
     &              POUGD ,DEPALG,MERIGI,MESSTR,VEDIRI,
     &              VEFINT,SSTRU ,CNFINT,CNDIRI)   
        IF (LDCCVG.EQ.1) GOTO 9999
        CALL MXCACC(SOLVEU,SECMBR,CNFINT,CNDIRI,CNVCPR,
     &              ACCPLU,MATRIX,LSSTRU,INSTAP,SDDYNA)
      ELSE
C
C --- PREPARATION DU SECOND MEMBRE
C
        CNDONN(1) = CNFEDO(1:19)
        CNDONN(2) = CNFSDO(1:19)
        CNDONN(3) = CNDIDO(1:19)
        CNDONN(4) = CNFNOD(1:19)
        CNDONN(5) = CNBUDI(1:19)
        CNDONN(6) = CNVCPR(1:19)
        CODONN(1) =  1
        CODONN(2) =  1
        CODONN(3) =  1
        CODONN(4) = -1
        CODONN(5) = -1
        CODONN(6) =  1
        CNPILO(1) = CNFEPI(1:19)
        CNPILO(2) = CNFSPI(1:19)
        CNPILO(3) = CNDIPI(1:19)
        COPILO(1) = 1
        COPILO(2) = 1
        COPILO(3) = 1
C
C --- CALCUL DE L'INCREMENT DE DEPLACEMENT EN TENANT COMPTE DU PILOTAGE
C
        CALL NMRESO(SDPILO,NBDONN,CODONN,CNDONN,NBPILO,
     &              COPILO,CNPILO,CNCINE,SOLVEU,MATRIX,
     &              DEPPRE)
      ENDIF
C
9999  CONTINUE
C
C --- RECOPIE CODE RETOUR ERREURS      
C
      LICCVG(2) = LDCCVG
      LICCVG(5) = FACCVG
C      
      CALL JEDEMA()
      END
