      SUBROUTINE NMPRTA(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,MEDIRI,METHOD,SOLVEU,
     &                  PARMET,CARCRI,PILOTE,PARTPS,NUMINS,
     &                  INST  ,VALMOI,POUGD ,VALPLU,SECMBR,
     &                  DEPPIL,LICCVG,STADYN,VITPLU,ACCPLU,
     &                  MASSE, AMORT ,RIGID, MATASS,PREMIE,
     &                  MEMASS,DEPENT,VITENT,VITKM1,NREAVI,
     &                  LIMPED,LONDE, NONDP, CHONDP,MODEDE,
     &                  NUMEDE,SOLVDE,PARCRI,RESOCO,CONV  , 
     &                  CNRESI,CNDIRI,DEPDEL,LSSTRU,SECOLD,
     &                  CNFOLD,FOPREC,SDDYNA)
C
C MODIF ALGORITH  DATE 04/04/2007   AUTEUR ABBAS M.ABBAS 
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      LOGICAL      PREMIE, LBID, LIMPED, LONDE, FOPREC
      INTEGER      NUMINS, LICCVG(*)
      INTEGER      NONDP , NREAVI
      REAL*8       PARMET(*), INST(*)
      REAL*8       PARCRI(*), CONV(*)
      CHARACTER*8  MODEDE
      CHARACTER*14 PILOTE
      CHARACTER*16 METHOD(*)
      CHARACTER*19 LISCHA, SOLVEU, PARTPS, MATASS, SDDYNA
      CHARACTER*19 SOLVDE, CNRESI, CNDIRI,CNFOLD
      CHARACTER*24 MODELE, NUMEDD, MATE, CARELE, COMREF, COMPOR
      CHARACTER*24 CARCRI, VALMOI, VALPLU, POUGD, SECMBR,SECOLD(8)
      CHARACTER*24 DEPPIL(2), MEDIRI, RIGID
      CHARACTER*24 VITPLU, ACCPLU, MASSE, AMORT, MEMASS
      CHARACTER*24 DEPENT, VITENT, STADYN
      CHARACTER*24 VITKM1, CHONDP
      CHARACTER*24 NUMEDE, RESOCO, DEPDEL
      LOGICAL      LSSTRU
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PREDICTION)
C
C PREDICTION PAR METHODE DE NEWTON-EULER
C      
C ----------------------------------------------------------------------
C
C
C IN       MODELE K24  MODELE
C IN       NUMEDD K24  NUME_DDL
C IN       MATE   K24  CHAMP MATERIAU
C IN       CARELE K24  CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN       COMREF K24  VARI_COM DE REFERENCE
C IN       COMPOR K24  COMPORTEMENT
C IN       LISCHA K19  L_CHARGES
C IN       MEDIRI K24  MATRICES ELEMENTAIRES DE DIRICHLET (B)
C IN       METHOD K16  INFORMATIONS SUR LES METHODES DE RESOLUTION
C IN       SOLVEU K19  SOLVEUR
C IN       PARMET  R8  PARAMETRES DES METHODES DE RESOLUTION
C IN       RIGID  K24  MATRICE DE RIGIDITE (EN DYNAMIQUE SEULEMENT)
C IN       MATASS K19  MATRICE DU PREMIER MEMBRE ASSEMBLEE
C IN       CARCRI K24  PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN       PILOTE K14  SD PILOTAGE
C IN       PARTPS K19  SD DISC_INST
C IN       NUMINS  I   NUMERO D'INSTANT
C IN       INST    R8  PARAMETRES INTEGRATION EN TEMPS (T+, DT, THETA)
C IN       VALMOI K24  ETAT EN T-
C IN       POUGD  K24  DONNES POUR POUTRES GRANDES DEFORMATIONS
C IN       VALPLU K24  ETAT EN T+
C IN       SECMBR K24  VECTEURS ASSEMBLES DES CHARGEMENTS FIXES
C IN/JXOUT DEPPIL K24  PREDICTION DE DEPLACEMENT
C IN       SDDYNA K19  SD DEDIEE A LA DYNAMIQUE (CF NDLECT)
C OUT      LICCVG  I   CODES RETOURS
C                      (5) - MATASS SINGULIERE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      LOGICAL      FNOEVO,NDYNLO
C
C IN  FNOEVO  : VRAI SI FORCES NODALES EVOLUTIVES I E INSTANT PLUS ET
C               MOINS NECESSAIRES 5 STAT NON LINE TRAITANT DES PROBLEMES
C               PARABOLIQUES : APPLICATION A THM
C               ICI VRAI
      INTEGER      IBID
      REAL*8       INSTAM, INSTAP, TR8BID(3), CODONN(6), COPILO(3)
      REAL*8       DIINST
      CHARACTER*8  VEFINT, VEBUDI,K8BID
      CHARACTER*13 K13BID
      CHARACTER*16 K16BID
      CHARACTER*19 MATRIX(2), CNDONN(6), CNPILO(3), CNVCPR
      CHARACTER*24 K24BID
      CHARACTER*24 DEPMOI, SIGMOI, COMMOI, COMPLU,VRCMOI
      CHARACTER*24 DEPDE0
      CHARACTER*24 CNFEDO, CNFEPI, CNDIDO, CNDIPI, CNFSDO, CNFSPI
      CHARACTER*24 CNCINE
      CHARACTER*24 CNFINT, CNBUDI
      INTEGER      JTRA, JRSST,NEQ,JCNFI,IRET,IRE2,JDEPM,NBSS,IRES
      CHARACTER*24 TABTRA
      TABTRA = '&&NMPRTA.TABTRA'

      DATA VEFINT, VEBUDI /'&&VEFINT', '&&VEBUDI'/
      DATA CNFINT, CNBUDI /'&&NMPRTA.FINT', '&&NMPRTA.BUDI'/
      DATA CNVCPR         /'&&NMPRTA.VCPR'/
      DATA VRCMOI         /'&&NMPRTA.VARC.MOINS'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      CALL DESAGG (VALMOI, DEPMOI, SIGMOI, K24BID, COMMOI,
     &                     K24BID, K24BID, K24BID, K24BID)
      CALL DESAGG (SECMBR, CNFEDO, CNFEPI, CNDIDO, CNDIPI,
     &                     CNFSDO, CNFSPI, K24BID, CNCINE)
      CALL DESAGG (VALPLU, K24BID, K24BID, K24BID, COMPLU,
     &                     K24BID, K24BID, K24BID, K24BID)

      INSTAM = DIINST(PARTPS, NUMINS-1)
      INSTAP = DIINST(PARTPS, NUMINS)
      DEPDE0 = '&&CNPART.ZERO'

C ======================================================================
C                   REASSEMBLAGE EVENTUEL DES MATRICES
C ======================================================================
      IF (NDYNLO(SDDYNA,'EXPLICITE')) THEN
        CALL MXMASS(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &              COMPOR,LISCHA,MEDIRI,METHOD,SOLVEU,
     &              CARCRI,0     ,VALMOI,POUGD ,DEPDEL,  
     &              VALPLU,MATRIX,K16BID,STADYN,PREMIE,
     &              DEPENT,VITENT,MEMASS,MASSE ,AMORT ,
     &              LICCVG(5),SDDYNA)
      ELSE
        MATRIX(1)=MATASS
        CALL NMMATR('PREDICTION',MODELE,NUMEDD,MATE  ,CARELE,
     &                    COMREF,COMPOR,LISCHA,MEDIRI,' '   ,
     &                    METHOD,SOLVEU,PARMET,CARCRI,PARTPS,
     &                    NUMINS,0     ,VALMOI,POUGD , ' '  ,
     &                    VALPLU,MATRIX,K16BID,K24BID,STADYN,
     &                    PREMIE,       DEPENT,VITENT,RIGID,
     &                    MEMASS,MASSE, AMORT,LICCVG(5),SDDYNA)
      ENDIF
      IF ((LICCVG(5).EQ.1).OR.(LICCVG(5).EQ.2)) GOTO 9999



C ======================================================================
C             DETERMINATION DU SECOND MEMBRE (DONNE ET PILOTE)
C ======================================================================


C -- CALCUL DES FORCES INTERIEURES (QT.SIGMA)

C    TABLEAU DES INSTANTS BIDON POUR THM
      TR8BID(1) = INSTAM
      TR8BID(2) = INSTAP
      TR8BID(3) = 0.D0
      FNOEVO=.TRUE.

C    CALCUL DE L'OPTION FORC_NODA
      CALL NMVCEX('TOUT',COMMOI,VRCMOI)
      CALL VEFNME (MODELE, SIGMOI, CARELE, DEPMOI,
     &             DEPDE0, VEFINT, MATE  , COMPOR, 0,
     &             FNOEVO,TR8BID, CARCRI, VRCMOI, ' ', LISCHA   )
      CALL ASSVEC ('V',CNFINT,1,VEFINT,1.D0,NUMEDD,' ','ZERO',1)


C -- DIRICHLET : BT.LAMBDA ET B.U
      CALL VEBUME (MODELE, DEPMOI, LISCHA, VEBUDI)
      CALL ASSVEC ('V',CNBUDI,1,VEBUDI,1.D0,NUMEDD,' ','ZERO',1)


C -- CALCUL DES FORCES EXTERIEURES SUIVEUSES (EN U- ET T+)

      CALL NMCHAR('SUIV',MODELE,NUMEDD,MATE  ,CARELE,
     &            COMPOR,LISCHA,CARCRI,INST  ,DEPMOI,
     &            DEPDE0,VITPLU,ACCPLU,K24BID, 
     &            K24BID,K24BID,K24BID,IBID  ,
     &            LBID  ,LBID  ,IBID  , 
     &            K24BID,COMPLU,IBID  ,IBID  ,K13BID,
     &            K8BID ,SECOLD,CNFOLD,FOPREC, 
     &            SECMBR,SDDYNA)

      IF (NDYNLO(SDDYNA,'IMPLICITE')) THEN
        CALL NMCHAR('INER',MODELE,NUMEDD,MATE  ,CARELE,
     &              COMPOR,LISCHA,CARCRI,INST  ,DEPMOI,
     &              DEPDE0,VITPLU,ACCPLU,MASSE ,
     &              AMORT ,VITKM1,VITENT,NREAVI,  
     &              LIMPED,LONDE ,NONDP,
     &              CHONDP,COMPLU,IBID  ,IBID  ,K13BID,
     &              K8BID ,SECOLD,CNFOLD,FOPREC,
     &              SECMBR, SDDYNA)
      ELSE IF (NDYNLO(SDDYNA,'EXPLICITE')) THEN
        CALL NMCHAR('EXPL',MODELE,NUMEDD,MATE  ,CARELE,
     &              COMPOR,LISCHA,CARCRI,INST  ,DEPMOI,
     &              DEPDE0,VITPLU,ACCPLU,MASSE,
     &              AMORT ,VITKM1,VITENT,NREAVI,
     &              LIMPED,LONDE ,NONDP,
     &              CHONDP,COMPLU,0    , 0     , K13BID,
     &              K8BID ,SECOLD,CNFOLD,FOPREC,
     &              SECMBR,SDDYNA)
      ENDIF

C -- CALCUL DU SECOND MEMBRE DE VARIABLES DE COMMANDE

      CALL NMVCPR(MODELE(1:8), LISCHA, NUMEDD, MATE  , CARELE, COMREF,
     &            COMPOR     , VALMOI, COMPLU, CNVCPR)


C -- SI DYNAMIQUE EXPLICITE ON RESOUT EN ACCELERATION
C    ET ON A BESOIN DE CALCULER LES FORCES INTERIEURES ICI

      IF (NDYNLO(SDDYNA,'EXPLICITE')) THEN

        CALL NMFINT (MODELE, NUMEDD, MATE  , CARELE, COMREF,
     &                 COMPOR, LISCHA, CARCRI, POUGD , 0,
     &                 MODEDE, NUMEDE, SOLVDE, PARMET, PARCRI,
     &                 VALMOI, DEPDEL, RESOCO, VALPLU, CNRESI,
     &                 CNDIRI, LICCVG(2),'RAPH_MECA', CONV, STADYN,
     &                 DEPENT, VITENT)
C ------------> CALCUL DES ACCELERATIONS :
C               {An+1}=[M-1]*({Fext}-{Fint})
        CALL MXCACC(SOLVEU,SECMBR,CNRESI,ACCPLU,MATRIX, 
     &              CNVCPR,LSSTRU,INSTAP,SDDYNA)

      ELSE
C
C --- PRISE EN COMPTE DE MACRO-ELEMENT STATIQUE
C
        CALL DISMOI('F','NB_SS_ACTI',MODELE,'MODELE',NBSS,K8BID,IRET)
        IF (NBSS.NE.0) THEN
          CALL JEVEUO(CNFINT(1:19) // '.VALE','E',JCNFI)
          CALL JELIRA(CNFEDO(1:19) // '.VALE','LONMAX',NEQ,K8BID)
          CALL JEEXIN('&&SSRIGI.REFE_RESU',IRES)
          IF (IRES.NE.0) THEN
            CALL JEEXIN(TABTRA,IRE2)
            IF (IRE2.EQ.0) THEN
              CALL WKVECT(TABTRA,'V V R',NEQ,JTRA)
            ELSE
              CALL JEVEUO(TABTRA,'E',JTRA)
            ENDIF
            CALL JEVEUO (DEPMOI(1:19)//'.VALE','L',JDEPM )
            CALL JEVEUO('&&ASRSST           .&INT','L',JRSST)
            CALL MRMULT ('ZERO',JRSST,ZR(JDEPM),'R',ZR(JTRA),1)
            CALL DAXPY(NEQ, 1.D0, ZR(JTRA), 1, ZR(JCNFI), 1)
          ENDIF
        ENDIF
C
C --- PREPARATION DU SECOND MEMBRE
C
        CNDONN(1) = CNFEDO
        CNDONN(2) = CNFSDO
        CNDONN(3) = CNDIDO
        CNDONN(4) = CNFINT
        CNDONN(5) = CNBUDI
        CNDONN(6) = CNVCPR
        CODONN(1) =  1
        CODONN(2) =  1
        CODONN(3) =  1
        CODONN(4) = -1
        CODONN(5) = -1
        CODONN(6) =  1

        CNPILO(1) = CNFEPI
        CNPILO(2) = CNFSPI
        CNPILO(3) = CNDIPI
        COPILO(1) = 1
        COPILO(2) = 1
        COPILO(3) = 1
C
C  --- CALCUL DE L'INCREMENT DE DEPLACEMENT EN TENANT COMPTE DU PILOTAGE
C
        CALL NMRESO(PILOTE, 6     , CODONN, CNDONN, 3     ,
     &              COPILO, CNPILO, CNCINE, SOLVEU, MATRIX,
     &              DEPPIL)

      ENDIF

9999  CONTINUE
      CALL JEDEMA()
      END
