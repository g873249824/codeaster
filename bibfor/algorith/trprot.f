      SUBROUTINE TRPROT(MODEL,BAMO,TGEOM,IMODG,IADX,IADY,IADZ,
     &             ISST,IADRP,NORM1,NORM2,NDBLE,
     &                  NUM,NU,MA,MATE,MOINT,ILIRES,K,ICOR)
      IMPLICIT NONE
C---------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/10/2012   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_20
C---------------------------------------------------------------------
C     AUTEUR : G.ROUSSEAU
C     ROUTINE REALISANT ,
C     A PARTIR D UN MODELE GENERALISE , ROTATION, TRANSLATION
C     DES MODES PROPRES ET CONTRAINTS CALCULES SUR UNE STRUCTURE
C     MAILLEE ET TRANSPORTANT LES CHAMPS AUX NOEUDS MODAUX SUR
C     L EMPLACEMENT
C     DES AUTRES SOUS STRUCTURES NON MAILLEES AFIN DE DETERMINER
C     LES CHAMPS DE PRESSION ENGENDRES PAR LEUR MOUVEMENT DANS LE
C     FLUIDE
C     IN: K2 : MODEL : CHARACTER TRADUISANT LA DIMENSION DU FLUIDE
C     IN: K8 : BAMO : BASE MODALE ASSOCIEE AU MACROELEMENT D UNE
C                     SOUS STRUCTURE
C     IN : R8 : TGEOM :LISTE DE REELS DEFINISSANT 3 CMP DE TRANSLATION
C     DANS LE REPERE GLOBAL PUIS 3 ANGLES NAUTIQUES PRIS PAR RAPPORT
C     A O ORIGINE DU REPERE GLOBAL
C     IN : K14 : NU :NUMEROTATION ASSOCIEE AU MODELE FLUIDE
C     IN : K14 : NUM :NUMEROTATION ASSOCIEE AU MODELE INTERFACE
C     IN : K8 : MA : MATRICE DE RAIDEUR DU FLUIDE
C     IN : K8 : MOINT: MODELE INTERFACE
C     IN : I : IMODG : INDICE DE MODE D UNE SOUS STRUCTURE
C     IN : I : ISST  : INDICE  D UNE SOUS STRUCTURE
C     IN : I : IADX,IADY,IADZ : ADRESSES DES VECTEURS DE NOMS
C              DES CHAMNOS ASSOCIES PAR CMP DE DEPLACEMENT ET
C              PAR MODE D UNE SOUS STRUCTURE DONNEE D INDICE ISST
C     IN : I : IADRP : ADRESSE DU TABLEAU D ADRESSES DES VECTEURS
C              CONTENANT LES NOMS DES CHAMPS DE PRESSION
C     IN : I : ICOR(2) : TABLEAU CONTENANT LES ADRESSES
C                        JEVEUX DE TABLEAUX D'ENTIER
C              INDIQUANT LA CORRESPONDANCE ENTRE NOEUDS DE STRUCTURE
C              ET DE FLUIDE
C     IN : R8 : NORM1,NORM2 : NORMES DES VECTEURS TRANSLATION
C               ET ROTATION DECIDANT S IL Y A TRANSPORT OU NON
C               D UN CHAMNO DANS LE MAILLAGE
C     IN : I : NDBLE : INDICATEUR DE RECHERCHE DE NOEUD DOUBLE
C
C---------------------------------------------------------------------
      INCLUDE 'jeveux.h'
      LOGICAL       TEST1,TEST2,EXISDG,TEST3
      INTEGER       NBVALE,NBREFE,NBDESC,IBID,ISST,IADRP
      INTEGER       I,IAD(2),IAD3D(3),ICOR(2),NDBLE
      REAL*8        RBID ,TGEOM(6),TMIN,EPSI,CONST(2)
      REAL*8        TAILMI,NORM1,NORM2,CA(3),SA(3)
      REAL*8        VAL(2),VAL3D(3),TOL
      CHARACTER*1   TYPECH(2),TYPCST(2),BASE
      CHARACTER*2   MODEL
      CHARACTER*8   TCORX(2),TCORY(2),TCORZ(2)
      CHARACTER*8   MOINT,MA,K8BID,MAFLUI
      CHARACTER*8   BAMO,MAILLA,GD
      CHARACTER*14  NU,NUM
      CHARACTER*19  CHTMPX,CHTMPY,CHTMPZ,CHCOMB,VESTOC
      CHARACTER*19  VESOLX,VESOLY,VEPR,VESOLZ,TAMPON,CHCMB2
      CHARACTER*19  CHFLU,CHAMNX,CHAMNY,CHAMNZ,NEWCHA,PCHNO
      CHARACTER*19  MAPREC,CHSOL,SOLVEU,NOMCH(2)
      CHARACTER*24  NOMCHA,CRITER
      CHARACTER*(*) MATE
      COMPLEX*16    CBID
      CHARACTER*1   K1BID
      INTEGER IADG ,IADX ,IADY ,IADZ ,IAUT ,ICHAD ,ICHAR
      INTEGER ICHAV ,IDSC ,IERD ,ILIRES ,IMODG ,INOE ,INOMCD
      INTEGER INOMCR ,INOMCV ,INUEQ ,IPRN ,IREF ,IRET ,IVAL
      INTEGER IVALEU ,K ,NBCHAD ,NBCHAR ,NBCHAV ,NBNOE ,NCMP
      INTEGER NEC
      REAL*8 R8PREM
C-----------------------------------------------------------------------
      DATA MAPREC   /'&&OP0152.MAPREC'/
      DATA CHSOL    /'&&OP0152.SOLUTION'/
      DATA SOLVEU   /'&&OP0152.SOLVEUR'/
      DATA CRITER   /'&&RESGRA_GCPC'/
C -----------------------------------------------------------------
       DATA TMIN    /1.D-15/
       DATA EPSI    /1.D-2/
C---------------------------------------------------------------------
C VERIFICATION SUPPLEMENTAIRE


      CALL JEMARQ()
           IF (MODEL.EQ.'AX') THEN
           CALL U2MESS('F','ALGORITH10_99')
           ENDIF

           CA(1)=COS(TGEOM(4))
           SA(1)=SIN(TGEOM(4))
           CA(2)=COS(TGEOM(5))
           SA(2)=SIN(TGEOM(5))
           CA(3)=COS(TGEOM(6))
           SA(3)=SIN(TGEOM(6))

            CALL RSEXCH('F',BAMO,'DEPL',IMODG,NOMCHA,IRET)

C POUR CHAQUE MODE, ON FAIT SUBIR AU CHAMNO ASSOCIE
C LA ROTATION DEFINIE POUR LA SOUS-STRUCTURE EN QUESTION

            CALL JEVEUO(NOMCHA(1:19)//'.VALE','L',INOMCV)
            CALL JELIRA(NOMCHA(1:19)//'.VALE','LONMAX',NBCHAV,K1BID)
            CALL JEVEUO(NOMCHA(1:19)//'.REFE','L',INOMCR)
            CALL JELIRA(NOMCHA(1:19)//'.REFE','LONMAX',NBCHAR,K1BID)
            CALL JEVEUO(NOMCHA(1:19)//'.DESC','L',INOMCD)
            CALL JELIRA(NOMCHA(1:19)//'.DESC','LONMAX',NBCHAD,K1BID)


C CHANGEMENT DE VALEUR POUR DX ET DY (OU DZ)

        CALL DISMOI('F','PROF_CHNO',NOMCHA,'CHAM_NO',IBID,PCHNO,IERD)
        CALL DISMOI('F','NOM_MAILLA',NOMCHA,'CHAM_NO',IBID,MAILLA,IERD)
        CALL DISMOI('F','NOM_GD',NOMCHA,'CHAM_NO',IBID,GD,IERD)
        CALL DISMOI('F','NB_EC',GD,'GRANDEUR',NEC,K8BID,IERD)

        CALL DISMOI('F','NB_NO_MAILLA',MAILLA,
     &              'MAILLAGE',NBNOE,K8BID,IERD)


        CALL JENONU(JEXNOM(PCHNO//'.LILI','&MAILLA'),IBID)
        CALL JEVEUO(JEXNUM(PCHNO//'.PRNO',IBID),'L',IPRN)
        CALL JEVEUO(PCHNO//'.NUEQ','L',INUEQ)

        NEWCHA='&&TRPROT.NCHNO'

        CALL WKVECT(NEWCHA//'.VALE','V V R',NBCHAV,
     &             IVAL)

        CALL WKVECT(NEWCHA//'.REFE','V V K24',NBCHAR,IREF)
        CALL WKVECT(NEWCHA//'.DESC','V V I',NBCHAD,IDSC)



         DO 21 ICHAV=1,NBCHAV
          ZR(IVAL+ICHAV-1)=0.0D0
21     CONTINUE

C ROTATION DU CHAMNO PROPREMENT DITE

         DO 22 INOE=1,NBNOE

           IVALEU = ZI(IPRN-1+ (INOE-1)* (NEC+2)+1)
           NCMP = ZI(IPRN-1+ (INOE-1)* (NEC+2)+2)
           IADG = IPRN - 1 + (INOE-1)* (NEC+2) + 3

         IF(NCMP.EQ.0) GOTO 22

C SI LES CMP DX ET DY SONT PRESENTES DANS LE NOEUD :

             TEST1 = EXISDG(ZI(IADG),1)
             TEST2 = EXISDG(ZI(IADG),2)

         IF(MODEL.EQ.'2D') THEN

         IF (TEST1.AND.TEST2) THEN

              DO 221 I=1,NCMP

                IF(I.LE.2)THEN

                 IAD(I)=ZI(INUEQ-1+IVALEU+I-1)
                 VAL(I)=ZR(INOMCV-1+IAD(I))

                ELSE

C DECALAGE DE 2 INDICES CAR ON DOIT METTRE A ZERO
C LES COMPOSANTES DE ROTATION APRES LES DEUX COMPOSANTES
C DE TRANSLATION DX ET DY

                 IAUT=ZI(INUEQ-1+IVALEU+I-1)
                 ZR(IVAL-1+IAUT+I-1-2)=0.0D0

                ENDIF

221           CONTINUE

C C EST LA ROTATION LIMITEE AU 2D

             ZR(IVAL-1+IAD(1))=CA(3)*CA(1)*VAL(1)+
     &          VAL(2)*(SA(3)*SA(2)*CA(1)
     &        -CA(3)*SA(1))



               ZR(IVAL-1+IAD(2))=SA(1)*CA(2)*VAL(1)+VAL(2)*
     &        (CA(3)*CA(1)
     &        +SA(2)*SA(1)*SA(3))

C AUCUNE OU UNE SEULE EST PRESENTE : ON MET TOUT A ZERO

            ELSE

              DO 222 I=1,NCMP
                IAUT=ZI(INUEQ-1+IVALEU+I-1)
                ZR(IVAL-1+IAUT+I-1)=0.0D0
222           CONTINUE

            ENDIF

           ELSEIF(MODEL.EQ.'3D') THEN

C      ROTATION DU CHAMNO DE DEPL MODAL EN 3D

               TEST3 = EXISDG(ZI(IADG),3)

                IF (TEST1.AND.TEST2.AND.TEST3) THEN
                 DO 223 I=1,NCMP

                   IF(I.LE.3)THEN

                    IAD3D(I)=ZI(INUEQ-1+IVALEU+I-1)
                    VAL3D(I)=ZR(INOMCV-1+IAD3D(I))

                   ELSE

                    IAUT=ZI(INUEQ-1+IVALEU+I-1)
C DEBUG
C               IF ((IAUT+I-1-1-3).GT.36576) THEN


C               ENDIF
C FIN DEBUG

C DECALAGE DE 3 INDICES CAR ON DOIT METTRE A ZERO
C LES COMPOSANTES DE ROTATION APRES LES TROIS COMPOSANTES
C DE TRANSLATION DX , DY ET DZ

                   ZR(IVAL-1+IAUT+I-1-3)=0.0D0

                  ENDIF

223           CONTINUE


             ZR(IVAL-1+IAD3D(1))=CA(3)*CA(1)*VAL3D(1)+
     &          VAL3D(2)*(SA(3)*SA(2)*CA(1)
     &        -CA(3)*SA(1)) +VAL3D(3)*(CA(3)*SA(2)*CA(1)
     &         +SA(3)*SA(1))


              ZR(IVAL-1+IAD3D(2))=SA(1)*CA(2)*VAL3D(1)+VAL3D(2)*
     &        (CA(3)*CA(1)
     &        +SA(2)*SA(1)*SA(3))
     &       +VAL3D(3)*(CA(3)*SA(1)*SA(2)-SA(3)*CA(1))

         ZR(IVAL-1+IAD3D(3))=-VAL3D(1)*SA(2)+VAL3D(2)*SA(3)*CA(2)
     &        +VAL3D(3)*CA(3)*CA(2)

C             DO 5000 IBOUCL=1,3
C               IF ((IAD3D(IBOUCL)-1).GT.36576) THEN


C               ENDIF
C5000         CONTINUE

C AUCUNE OU UNE SEULE EST PRESENTE : ON MET TOUT A ZERO

                   ELSE

                     DO 224 I=1,NCMP
                        IAUT=ZI(INUEQ-1+IVALEU+I-1)
                        ZR(IVAL-1+IAUT+I-1)=0.0D0
224                  CONTINUE

                   ENDIF
              ENDIF

22       CONTINUE


         DO 23 ICHAR=1,NBCHAR
           ZK24(IREF+ICHAR-1)= ZK24(INOMCR+ICHAR-1)
23       CONTINUE

         DO 24 ICHAD=1,NBCHAD
           ZI(IDSC+ICHAD-1)= ZI(INOMCD+ICHAD-1)
24       CONTINUE



C TEST POUR SAVOIR SI LE FLUIDE ET LA SOUS-STRUCTURE REPOSENT
C SUR LE MEME MAILLAGE OU NON

        CALL DISMOI('F','NOM_MAILLA',MOINT,
     &              'MODELE',IBID,MAFLUI,IERD)


        CHAMNX='&&TRPROT.CHAMNX'
        CHAMNY='&&TRPROT.CHAMNY'
        CHAMNZ='&&TRPROT.CHAMNZ'

        IF (MAFLUI.NE.MAILLA) THEN
          BASE='V'
C          WRITE(8,*)'JE PASSE DANS ALIMRS 1 FOIS'
          CALL ALIMRS(MATE,MAILLA,MAFLUI,MOINT,NDBLE,NUM,NEWCHA,CHAMNX,
     &               'DX',ICOR)

          CALL ALIMRS(MATE,MAILLA,MAFLUI,MOINT,NDBLE,NUM,NEWCHA,CHAMNY,
     &                'DY',ICOR)
          IF(MODEL.EQ.'3D') THEN

          CALL ALIMRS(MATE,MAILLA,MAFLUI,MOINT,NDBLE,NUM,NEWCHA,CHAMNZ,
     &               'DZ',ICOR)
          ENDIF
          CALL DETRSD('CHAM_NO',NEWCHA)

        ELSE


C PLONGEMENT DU MODE PROPREMENT DIT SUR L INTERFACE

           BASE='V'

C----- PLONGEMENT DE LA COMPOSANTE DX QUI DEVIENT TEMPERATURE

           TCORX(1) = 'DX'
           TCORX(2) = 'TEMP'

           CALL CHNUCN(NEWCHA,NUM,2,TCORX,'V',CHAMNX)



C----- PLONGEMENT DE LA COMPOSANTE DY QUI DEVIENT TEMPERATURE

           TCORY(1) = 'DY'
           TCORY(2) = 'TEMP'

           CALL CHNUCN(NEWCHA,NUM,2,TCORY,'V',CHAMNY)


           IF(MODEL.EQ.'3D') THEN

C----- PLONGEMENT DE LA COMPOSANTE DZ QUI DEVIENT TEMPERATURE

              TCORZ(1) = 'DZ'
              TCORZ(2) = 'TEMP'

              CALL CHNUCN(NEWCHA,NUM,2,TCORZ,'V',CHAMNZ)


           ENDIF

              CALL DETRSD('CHAM_NO',NEWCHA)

           ENDIF

C---------ON TRANSPORTE CE MODE TRANSFORME EN TEMPERATURE
C-----SUR LES CONTOURS DES AUTRES SOUS - STRUCTURES NON MAILLEES

           TYPCST(1) ='R'
           TYPCST(2) ='R'

           CONST(1) =1.0D0
           CONST(2) =1.0D0

           TYPECH(1) ='R'
           TYPECH(2) ='R'

           VESOLX = '&&VESOLX'
           VESOLY = '&&VESOLY'
           VESOLZ = '&&VESOLZ'

           NOMCH(1) = VESOLX(1:8)
           NOMCH(2) = VESOLY(1:8)


       TOL=R8PREM()

       CHTMPX='&&TRPROT.CHTMPX'
       CHTMPY='&&TRPROT.CHTMPY'
       CHTMPZ='&&TRPROT.CHTMPZ'

       IF((NORM1.GT.TOL).OR.(NORM2.NE.0.0D0)) THEN

C        CAS OU T DIFF 0 OU R DIFF 0

        CALL CHTPCN(CHAMNX,TGEOM,TAILMI,TMIN,EPSI,BASE,CHTMPX)

        CALL CALFLU(CHTMPX,MOINT,MATE,NUM,VESOLX,NBDESC,NBREFE,
     &                 NBVALE,'X')

        CALL CHTPCN(CHAMNY,TGEOM,TAILMI,TMIN,EPSI,BASE,CHTMPY)

        CALL CALFLU(CHTMPY,MOINT,MATE,NUM,VESOLY,NBDESC,NBREFE,
     &                 NBVALE,'Y')

        ILIRES=ILIRES+1
        K=K+1

        VESTOC='&&TRPROT.TPXSTO'
        CALL PRSTOC(CHTMPX,VESTOC,ILIRES,K,IADX,
     &           NBVALE,NBREFE,NBDESC)

        VESTOC='&&TRPROT.TPYSTO'
        CALL PRSTOC(CHTMPY,VESTOC,ILIRES,K,IADY,
     &          NBVALE,NBREFE,NBDESC)

        IF (MODEL.EQ.'3D') THEN

        CALL CHTPCN(CHAMNZ,TGEOM,TAILMI,TMIN,EPSI,BASE,CHTMPZ)

        CALL CALFLU(CHTMPZ,MOINT,MATE,NUM,VESOLZ,NBDESC,NBREFE,
     &                 NBVALE,'Z')
        VESTOC='&&TRPROT.TPZSTO'
        CALL PRSTOC(CHTMPZ,VESTOC,ILIRES,K,IADZ,
     &          NBVALE,NBREFE,NBDESC)

        ENDIF
       ELSE

C        'CAS OU T=0 ET R=0'

        CALL CALFLU(CHAMNX,MOINT,MATE,NUM,VESOLX,NBDESC,NBREFE,
     &                 NBVALE,'X')
        CALL CALFLU(CHAMNY,MOINT,MATE,NUM,VESOLY,NBDESC,NBREFE,
     &                 NBVALE,'Y')

        ILIRES=ILIRES+1
        K=K+1

        VESTOC='&&TRPROT.TPXSTO'
        CALL PRSTOC(CHAMNX,VESTOC,ILIRES,K,IADX,NBVALE,NBREFE,NBDESC)

C           IF (VESTOC(1:12).EQ.'TPXSTO000012') THEN


C           DO 12 I=1,NBVEP

C12         CONTINUE
C           ENDIF

        VESTOC='&&TRPROT.TPYSTO'
        CALL PRSTOC(CHAMNY,VESTOC,ILIRES,K,IADY,NBVALE,NBREFE,NBDESC)

          IF (MODEL.EQ.'3D') THEN

            CALL CALFLU(CHAMNZ,MOINT,MATE,NUM,VESOLZ,NBDESC,NBREFE,
     &                 NBVALE,'Z')
            VESTOC='&&TRPROT.TPZSTO'
            CALL PRSTOC(CHAMNZ,VESTOC,ILIRES,K,IADZ,
     &                                    NBVALE,NBREFE,NBDESC)

          ENDIF
        ENDIF

C---ON RECOMBINE LES DEUX (TROIS)CHAMPS AUX NOEUDS DE TEMP ET ON CALCULE
C-----LE FLUX FLUIDE TOTAL.....


           CHCOMB = '&&CHCOMB'

           CALL VTCMBL(2,TYPCST,CONST,TYPECH,NOMCH,'R',CHCOMB)

           CHCMB2='&&CHCMB2'

           IF(MODEL.EQ.'3D') THEN

             TYPCST(1) ='R'
             TYPCST(2) ='R'

             CONST(1) =1.0D0
             CONST(2) =1.0D0

             TYPECH(1) ='R'
             TYPECH(2) ='R'

             NOMCH(1) = CHCOMB
             NOMCH(2) = VESOLZ(1:8)

             CALL VTCMBL(2,TYPCST,CONST,TYPECH,NOMCH,'R',CHCMB2)

           ENDIF


           CHFLU = '&&TRPROT.CHFLU'

           IF(MODEL.EQ.'3D')THEN
            TAMPON=CHCMB2
           ELSE
            TAMPON=CHCOMB
           ENDIF

           CALL CHNUCN(TAMPON,NU,0,K8BID,'V',CHFLU)

C----ON RESOUT L EQUATION DE LAPLACE

           CALL RESOUD(MA    ,MAPREC,SOLVEU,' '   ,0     ,
     &                 CHFLU ,CHSOL ,'V'   ,RBID  ,CBID  ,
     &                 CRITER,.TRUE.,0     ,IRET  )
           CALL JEDUPC('V',CHSOL(1:19),1,'V',CHFLU(1:19),.FALSE.)
           CALL DETRSD('CHAMP_GD',CHSOL)

C--------ON REPLONGE LA PRESSION SUR L INTERFACE
C-----------------QU 'ON STOCKE

           VEPR = '&&TRPROT.VEPR'
           CALL CHNUCN(CHFLU,NUM,0,K8BID,'V',VEPR)

           VESTOC= '&&TRPROT.VESTOC'
           CALL PRSTOC(VEPR,VESTOC,ILIRES,K,ZI(IADRP+ISST-1),
     &                NBVALE,NBREFE,NBDESC)

           CALL DETRSD('CHAM_NO',VEPR)
           CALL DETRSD('CHAMP_GD',CHCOMB)
           CALL DETRSD('CHAMP_GD',CHCMB2)
           CALL DETRSD('CHAM_NO',CHFLU)
           CALL DETRSD('CHAM_NO',VESOLX)
           CALL DETRSD('CHAM_NO',VESOLY)
           CALL DETRSD('CHAM_NO',VESOLZ)
           CALL DETRSD('CHAM_NO',CHTMPX)
           CALL DETRSD('CHAM_NO',CHTMPY)
           CALL DETRSD('CHAM_NO',CHTMPZ)
           CALL DETRSD('CHAM_NO',CHAMNX)
           CALL DETRSD('CHAM_NO',CHAMNY)
           CALL DETRSD('CHAM_NO',CHAMNZ)
C
      CALL JEEXIN (CRITER(1:19)//'.CRTI',IRET)
      IF ( IRET .NE. 0 ) THEN
         CALL JEDETR ( CRITER(1:19)//'.CRTI' )
         CALL JEDETR ( CRITER(1:19)//'.CRTR' )
         CALL JEDETR ( CRITER(1:19)//'.CRDE' )
      ENDIF
C
      CALL JEDEMA()
C
      END
