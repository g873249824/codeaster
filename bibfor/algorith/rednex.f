      SUBROUTINE REDNEX(NUMEDD,NEQ   ,RESOCO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 01/04/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT  NONE
      INTEGER      NEQ
      CHARACTER*24 NUMEDD,RESOCO
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - APPARIEMENT - UTILITAIRE)
C
C STOCKER LES NOM DES NOEUDS ET DES DDLS IMPLIQUES DANS  
C UNE EQUATION DE SYSTEME LINEAIRE DE TYPE LAGRANGE / 
C LIAISON_DDL EN VUE DU TRAITEMENT AUTOMATIQUE DES 
C RELATIONS SURABONDANTES AVEC LE CONTACT
C      
C ----------------------------------------------------------------------
C
C
C IN  NUMEDD : NOM DE LA NUMEROTATION MECANIQUE
C IN  NEQ    : NOMBRE D'EQUATIONS DU SYSTEME
C IN  RESOCO : SD POUR LA RESOLUTION DE CONTACT
C    OUT: VECNOD = RESOCO(1:14)//'.VECNOD'
C    OUT: VECNOX = RESOCO(1:14)//'.VECNOX'
C    OUT: VECNOY = RESOCO(1:14)//'.VECNOY'
C    OUT: VECNOZ = RESOCO(1:14)//'.VECNOZ'
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32     JEXNUM
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER       IBID, GD, NBEC, NEC, JPRNO, JNUEQ
      INTEGER       IER,NLILI,I,ILO,NBNO,INO,IDEB,NCMP,ICMP,IIEQ,NULI
      INTEGER       NUNO
      INTEGER       NBMAS,K,JNUNO,KNO,KKK
      INTEGER       II,JJ,KK,ITYP,IDEEQ,JVECLI
      CHARACTER*8   NOMA, K8B, NOMEQ
      CHARACTER*19  PRNO, LIGREL
      CHARACTER*24  DEEQ
      LOGICAL       TROUVE
      CHARACTER*24  VECNOD,VECNOX,VECNOY,VECNOZ
      INTEGER       JVECNO,JVECNX,JVECNY,JVECNZ      
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- ACCES AUX STRUCTURES DE DONNEES POUR LA
C --- GESTION AUTOMATIQUE DES RELATIONS REDONDANTES
C 
      VECNOD = RESOCO(1:14)//'.VECNOD'
      VECNOX = RESOCO(1:14)//'.VECNOX'
      VECNOY = RESOCO(1:14)//'.VECNOY'
      VECNOZ = RESOCO(1:14)//'.VECNOZ'
      CALL JEVEUO(VECNOD,'E',JVECNO)
      CALL JEVEUO(VECNOX,'E',JVECNX)
      CALL JEVEUO(VECNOY,'E',JVECNY)
      CALL JEVEUO(VECNOZ,'E',JVECNZ)
C
C --- INITIALISATIONS 
C 
      DO 90 I = 1, NEQ
        ZI(JVECNX-1+I) = 0
        ZI(JVECNY-1+I) = 0
        ZI(JVECNZ-1+I) = 0
 90   CONTINUE
      DO 91 I = 1,2*NEQ
        ZI(JVECNO-1+I) = 0
 91   CONTINUE
C
C --- SD TEMPORAIRE
C
      CALL WKVECT('&&REDNEX.VECLID','V V I',NEQ,JVECLI )
C
C --- ACCES NUME_DDL
C 
      DEEQ = NUMEDD(1:14)//'.NUME.DEEQ'
      CALL JEVEUO(DEEQ,'L',IDEEQ)
C
C -- DETECTION
C      
      DO 2902 II = 1,NEQ
        ITYP = ZI(IDEEQ-1+2*II)
        IF (ITYP.LT.0) THEN 
          ZI(JVECNO+II-1) = ZI(IDEEQ-1+2*II-1)
          IF(ITYP.EQ.-1) ZI(JVECNX+II-1)=1
          IF(ITYP.EQ.-2) ZI(JVECNY+II-1)=1
          IF(ITYP.EQ.-3) ZI(JVECNZ+II-1)=1       
        END IF   
        IF(ITYP.EQ.0) THEN
          CALL DISMOI('F','NOM_MAILLA',NUMEDD,'NUME_DDL',IBID,NOMA,IER)
          CALL DISMOI('F','NUM_GD_SI' ,NUMEDD,'NUME_DDL',GD  ,K8B ,IER)
          PRNO( 1:14) = NUMEDD(1:14)
          PRNO(15:19) = '.NUME'
          NEC = NBEC(GD)
          CALL JEVEUO(PRNO//'.NUEQ', 'L', JNUEQ )
          CALL JELIRA(PRNO//'.PRNO','NMAXOC',NLILI,K8B)
          TROUVE = .FALSE.
          DO 10 I = 1 , NLILI
            CALL JENUNO(JEXNUM(PRNO//'.LILI',I),LIGREL )
            CALL JELIRA(JEXNUM(PRNO//'.PRNO',I),'LONMAX', ILO, K8B)
            IF ( ILO .EQ. 0 ) GOTO 10
            CALL JEVEUO(JEXNUM(PRNO//'.PRNO',I),'L',JPRNO)
            NBNO = ILO / ( NEC + 2 )
            DO 20 INO = 1 , NBNO
              IDEB = ZI(JPRNO-1+(INO-1)*(NEC+2)+1)
              NCMP = ZI(JPRNO-1+(INO-1)*(NEC+2)+2)
              DO 30 ICMP = 1 , NCMP
                IIEQ = ZI(JNUEQ-1+IDEB-1+ICMP)
                IF ( II .EQ. IIEQ ) THEN
                  TROUVE = .TRUE.
                  NULI = I
                  NUNO = INO
                  GO TO 9998
                ENDIF
 30           CONTINUE
 20         CONTINUE
 10       CONTINUE
 9998     CONTINUE
C
C --- GESTION ERREURS
C 
          IF ( .NOT.TROUVE ) THEN
            CALL CODENT(II,'D',NOMEQ)
            CALL U2MESK('F','UTILITAI2_31',1,NOMEQ)
          END IF
          CALL ASSERT( NULI .NE. 1 )  
C
C --- ON PARCOURT LES MAILLES SUPPLEMENTAIRES DU LIGREL TROUVE
C --- POUR IMPRIMER LES CONNECTIVITES DE CES MAILLES 
C
          CALL JENUNO(JEXNUM(PRNO//'.LILI',NULI), LIGREL )
          CALL JELIRA(LIGREL//'.NEMA','NMAXOC', NBMAS, K8B)

          DO 777,K=1,NBMAS
            CALL JELIRA(JEXNUM(LIGREL//'.NEMA',K),'LONMAX', NBNO, K8B)
C       -- L'OBJET .NEMA CONTIENT LE TYPE_MAILLE AU BOUT :
            IF (NBNO.EQ.0) GO TO 777
            NBNO=NBNO-1
            CALL JEVEUO(JEXNUM(LIGREL//'.NEMA',K),'L', JNUNO)
            TROUVE=.FALSE.
            DO 778,KK=1,NBNO
              IF (ZI(JNUNO-1+KK).EQ.-NUNO) TROUVE=.TRUE.
778         CONTINUE
            IF (.NOT.TROUVE) GO TO 777
            DO 779,KK=1,NBNO
              KNO=ZI(JNUNO-1+KK)
              KKK=KK+(K-1)*NBNO    
              IF (KNO.GT.0) THEN
                ZI(JVECLI-1+KKK)=KNO 
              END IF
779         CONTINUE
777       CONTINUE
C          
          DO 1977 JJ=1,NEQ
            IF (ZI(JVECLI-1+JJ) .GT. 0) THEN 
              DO 1966 KK=NEQ+1,2*NEQ
                IF (ZI(JVECLI-1+JJ) .NE. ZI(JVECNO+KK-1)) THEN  
                  ZI(JVECNO+JJ+NEQ-1) = ZI(JVECLI-1+JJ)
                ENDIF
 1966         CONTINUE    
            ENDIF
 1977     CONTINUE           
          ENDIF
 2902   CONTINUE
C
C --- MENAGE
C      
      CALL JEDETR('&&REDNEX.VECLID')
      CALL JEDEMA()
      END
