      SUBROUTINE CMPHII(CK,CM,NDIM,NBMOD,NITER,XCRIT,CEIGEN,CMOD,
     &NDIMAX,CMAT1,CMAT2,CVEC,IFIC)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/1999   AUTEUR SABJLMA P.LATRUBESSE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***********************************************************************
C    P. RICHARD                                 DATE 31/07/91
C-----------------------------------------------------------------------
C  BUT:  < COMPLEXE MODES PROBLEME HERMITIEN ITERATION INVERSE >
C
C   CALCULER LES PREMIERS MODES PROPRES D'UN PROBLEME
C       AUX VALEURS PROPRES A MATRICES RAIDEURS ET MASSE COMPLEXES
C       HERMITTIENNES STOCKEES TRIANGULAIRES SUPERIEURES
C
C                     CK*X= L CM*X
C
C    METHODE D'ITERATION INVERSE
C
C-----------------------------------------------------------------------
C
C CK       /I/: MATRICE RAIDEUR DU PROBLEME
C CM       /I/: MATRICE MASSE DU PROBLEME
C NDIM     /I/: DIMENSION DES MATRICES
C NBMOD    /I/: NOMBRE DE MODES PROPRES DESIRE
C NITER    /I/: NOMBRE MAX D'ITERATIONS PAR MODE
C XCRIT    /I/: TOLERANCE DE COLINEARITE RELATIVE (CRITERE CONVERGENCE)
C CEIGEN   /O/: VALEURS PROPRES COMPLEXES DU PROBLEME
C CMOD     /O/: MODES PROPRES COMPLEXES SOLUTIONS
C NDIMAX   /I/: NOMBRE DE DDL GENERALISES DES MODES >=NDIM
C CMAT1    /M/: MATRICE COMPLEXE DE TRAVAIL
C CMAT2    /M/: MATRICE COMPLEXE DE TRAVAIL
C CVEC     /M/: VECTEUR COMPLEXE DE TRAVAIL
C IFIC     /I/: NUMERO UNITE LOGIQUE POUR MESSAGE
C
C-----------------------------------------------------------------------
C
      CHARACTER*6   PGC
      COMPLEX*16 CK(*),CM(*),CEIGEN(NBMOD)
      COMPLEX*16 CMOD(NDIMAX,NBMOD),CPROD
      COMPLEX*16 CMAT1(*),CMAT2(NDIM,NDIM),CVEC(NDIM)
      LOGICAL CONVOK
C
C-----------------------------------------------------------------------
      DATA PGC /'CMPHII'/
C-----------------------------------------------------------------------
C
C
      WRITE(IFIC,*)'     '
      WRITE(IFIC,*)'     '
      WRITE(IFIC,*)'     '
      WRITE(IFIC,*)'****************************************************
     &*******************'
      WRITE(IFIC,*)'               CALCUL MODAL PAR CMPHII'
      WRITE(IFIC,*)'         '
      WRITE(IFIC,1000)
C
C      RECOPIE DE LA MATRICE MASSE
C
      DO 10 I=1,NDIM*(NDIM+1)/2
          CMAT1(I)=CK(I)
 10   CONTINUE
C
C
C    FACTORISATION DE LA MATRICE DE RAIDEUR
C
      CALL TRLDC(CMAT1,NDIM,IPIVO)
C
      IF(IPIVO.NE.0) THEN
        CALL UTDEBM('F',PGC,
     &'ARRET SUR PIVOT NUL')
          CALL UTIMPI('L',' LIGNE --> ',1,IPIVO)
          CALL UTFINM
      ENDIF
C
C
C   CALCUL DE LA MATRICE INVERSE DU PROBLEME
C
      DO 40 IV=1,NDIM
         IVDIAG = IV*(IV-1)/2+1
         DO 20 I=1,NDIM
            IF (I.LE.IV) THEN
               CMAT2(I,IV)=CM(IVDIAG+IV-I)
            ELSE
               IDIAG = I*(I-1)/2+1
               CMAT2(I,IV)=DCONJG(CM(IDIAG+I-IV))
            ENDIF
 20      CONTINUE
 40   CONTINUE
      CALL RRLDC(CMAT1,NDIM,CMAT2,NDIM)
C
C
C   INITIALISATION DES VECTEURS PROPRES DE DEPART
C
      CALL CVALEA(NDIM,CMOD,NDIMAX,NBMOD)
C
C
C     BOUCLE D'ITERATION SUR LES MODES
C
      DO 50 J=1,NBMOD
C
C
C   BOUCLE D'ITERATION SUR CHAQUE MODES
C
        K=0
        CONVOK=.TRUE.
C
C
 100    CONTINUE
C
        K=K+1
C
C
C    PRODUIT INVERSE
C
          CALL CMATVE(CMAT2,CMOD(1,J),CVEC,NDIM)
C
C
C    CALCUL ERREUR COLINEARITE ET REECOPIE
C
          CALL CTESCV(CVEC,CMOD(1,J),NDIM,XER)
C
C
C   ORTHORMALISATION PAR RAPPORT MATRICE  MASSE
C
      CALL CSCHMI(CM,NDIM,CMOD(1,J),CMOD,NDIMAX,J-1)
C
C   CALCUL VALEURS PROPRES PAR COEF RAYLEIGH
C
          CALL SESQUI(CK,CMOD(1,J),NDIM,CEIGEN(J))
          CALL SESQUI(CM,CMOD(1,J),NDIM,CPROD)
          CEIGEN(J)=CEIGEN(J)/CPROD
C
          IF(XER.LE.XCRIT) CONVOK=.FALSE.
C
      IF(K.LT.NITER.AND.CONVOK) GOTO 100
C
C
C
        WRITE(IFIC,1100) J,K,XER,DBLE(CEIGEN(J)),DIMAG(CEIGEN(J))
 1000 FORMAT('NUMERO       ', 'ITERATION         ',
     &       'ERREUR           ', 'VALEUR PROPRE')
 1100 FORMAT(I4,11X,I4,10X,D10.3,5X,'  (',D7.2,', ',D7.2,' )')
C
 50   CONTINUE
C
      WRITE(IFIC,*)'     '
      WRITE(IFIC,*)'     '
C
 9999 CONTINUE
      END
