      SUBROUTINE NMFI2D( NPG,LGPG,MATE,OPTION,GEOM,DEPLM,DDEPL,
     &                   SIGMA,FINT,KTAN,VIM,VIP,CRIT,
     &                   COMPOR,TYPMOD,INSTM,INSTP,TM,TP)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 16/12/2004   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C
C
C ======================================================================

      IMPLICIT NONE
      INTEGER MATE,NPG,LGPG,N
      REAL*8  GEOM(2,4),DEPLM(2,4),DDEPL(2,4),INSTM,INSTP,TM(4),TP(4)
      REAL*8  FINT(8),KTAN(8,8),SIGMA(2,NPG),VIM(LGPG,NPG),VIP(LGPG,NPG)
      CHARACTER*8  TYPMOD(*)
      CHARACTER*16 OPTION, COMPOR(*)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
C-----------------------------------------------------------------------
C
C BUT: DEVELOPPEMENT D'UN ELEMENT DE JOINT.
C      CALCUL DU SAUT DANS L'ELEMENT
C             DE LA CONTRAINTE A PARTIR D'UNE LDC
C             DE FINT ET KTAN : EFFORTS INTERIEURS ET MATRICE TANGENTE.
C
C      OPTION : OPTIONS DE CALCUL EN FONCTION DE LA SUBROUTINE LANCEE
C       * RAPH_MECA      : U = U- + DU  ->   SIGMA , FINT
C       * FULL_MECA      : U = U- + DU  ->   SIGMA , FINT , KTAN
C       * RIGI_MECA_TANG : U = U-       ->                   KTAN
C       * FORC_NODA      : TRAITE DANS NMFIFI.F
C
C SUBROUTINE APPELEE DANS LE TE0201
C
C IN  : OPTION,COMPOR,GEOM,DEPLM,DDEPL,VIM,NPG,TYPMOD,MATE
C OUT : SIGMA,FINT,KTAN,VIP
C I/O :
C
C-----------------------------------------------------------------------

      LOGICAL RESI, RIGI, AXI
      INTEGER I,J,Q,S, IBID,KPG
      INTEGER NDIM,NNO,NNOS,IPOIDS,IVF,IDFDE,JGANO
      REAL*8 DSIDEP(2,2),B(2,8),RBID,R8VIDE
      REAL*8 SU(2),U(8),AIRE,POIDS(2),SIG(2),VIMOIN(LGPG),VIPLUS(LGPG)
      REAL*8 VALRES,HPEN,LONG
      REAL*8 CRIT
      REAL*8 TEMPM(2),TEMPP(2),TREF
      REAL*8 EPS(4),DEPS(4)
      REAL*8 SIGN,EPSANM,EPSANP
      REAL*8 COD(NPG),ANGMAS(3)
      CHARACTER*2 CODRET
      CHARACTER*8 NOMRES

      CALL R8INIR(8 , 0.D0, FINT,1)
      CALL R8INIR(64, 0.D0, KTAN,1)
      CALL R8INIR(4,  0.D0, SIGMA ,1)

C --- ANGLE DU MOT_CLEF MASSIF (AFFE_CARA_ELEM)
C --- INITIALISE A R8VIDE (ON NE S'EN SERT PAS)
      CALL R8INIR(3,  R8VIDE(), ANGMAS ,1)
      AXI   = TYPMOD(1) .EQ. 'AXIS'
      RESI  = OPTION.EQ.'RAPH_MECA' .OR. OPTION(1:9).EQ.'FULL_MECA'
      RIGI  = OPTION(1:9).EQ.'FULL_MECA'.OR.OPTION(1:10).EQ.'RIGI_MECA_'

      IF (.NOT. RESI .AND. .NOT. RIGI)
     &  CALL UTMESS('F','NMFI2D','OPTION '//OPTION//' NON TRAITEE')


C DEFINITION DU DEPLACEMENT A L'INSTANT A T+

C     U=U-
      CALL DCOPY(8, DEPLM,1, U,1)
C     SI RESI ALORS U=U+
      IF (RESI) CALL DAXPY(8, 1.D0, DDEPL,1, U,1)

C CALCUL DE L'AIRE DES PAROIS DE LA FISSURE :
C  * EN 2D ON CONSIDERE QUE L'EPAISSEUR EST DE 1 DONC
C    L'AIRE EST EGALE A : 1*(LONGUEUR DE L'ELEMENT)
C  * EN AXIS ON MULTIPLIE CETTE LONGEUR PAR LA DISTANCE DU CENTRE DE
C    L'ELEMENT A L'AXE DE SYMETRIE.

      AIRE = SQRT( (GEOM(1,2)-GEOM(1,1))**2 + (GEOM(2,2)-GEOM(2,1))**2 )
      LONG=AIRE
      IF (AXI) AIRE = AIRE * (GEOM(1,1)+GEOM(1,2))/2.D0
      CALL ELREF4(' ','RIGI',NDIM,NNO,NNOS,NPG,IPOIDS,IVF,IDFDE,
     &                  JGANO)
      DO 11 KPG=1,NPG

C POIDS DU POINT DE GAUSS COURANT :

        POIDS(KPG) = AIRE/2
C
C - CALCUL DE LA TEMPERATURE AU POINT DE GAUSS
C
        TEMPM(KPG) = 0.D0
        TEMPP(KPG) = 0.D0
C
        DO 12 N=1,NNO
          TEMPM(KPG) = TEMPM(KPG) + TM(N)*ZR(IVF+N+(KPG-1)*NNO-1)
          TEMPP(KPG) = TEMPP(KPG) + TP(N)*ZR(IVF+N+(KPG-1)*NNO-1)
 12     CONTINUE
C CALCUL DE LA MATRICE B DONNANT LES SAUT PAR ELEMENTS A PARTIR DES
C DEPLACEMENTS AUX NOEUDS :
C LE CHANGEMENT DE REPERE EST INTEGRE DANS LA MATRICE B (VOIR NMFISA)

        CALL NMFISA(GEOM,B,KPG)

C CALCUL DU SAUT DE DEPLACEMENT DANS L'ELEMENT (SU_N,SU_T) = B U :

        CALL R8INIR(2, 0.D0, SU,1)
        DO 10 J=1,8
          SU(1) = SU(1) + B(1,J)*U(J)
          SU(2) = SU(2) + B(2,J)*U(J)
 10     CONTINUE

        IF (COMPOR(1)(7:8).EQ.'BA') THEN
          CALL RCVALA(MATE,' ','JOINT_BA',0,' ',0.D0,1,
     &               'HPEN',VALRES,CODRET,'FM')
          HPEN   = VALRES

          DO 15 J = 1,4
            EPS (J)=0.D0
            DEPS(J)=0.D0
15        CONTINUE

          EPS(1) = SU(2)/LONG
          EPS(2) = SU(1)/HPEN
          EPS(4) = SU(2)/HPEN

          DO 18 J=1,LGPG
            VIMOIN(J)=VIM(J,KPG)
18        CONTINUE

          CALL R8INIR(2,  0.D0, SIG ,1)

C -   APPEL A LA LOI DE COMPORTEMENT
        CALL NMCOMP (2,TYPMOD,MATE,COMPOR,CRIT,
     &               INSTM,INSTP,
     &               RBID,RBID,RBID,
     &               RBID,RBID,
     &               RBID,RBID,RBID,
     &               -1.D0,-1.D0,
     &               EPS,DEPS,
     &               SIGN,VIMOIN,
     &               OPTION,
     &               EPSANM,EPSANP,
     &               1,RBID,RBID,
     &               R8VIDE(),R8VIDE(),
     &               ANGMAS,
     &               RBID,
     &               SIG,VIPLUS,DSIDEP,IBID)


        IF (RESI) THEN
          SIGMA(1,KPG)=SIG(1)
          SIGMA(2,KPG)=SIG(2)
          DO 28 J=1,LGPG
            VIP(J,KPG)=VIPLUS(J)
28        CONTINUE
        ENDIF

      ELSE

C CALCUL DE LA CONTRAINTE DANS L'ELEMENT AINSI QUE LA DERIVEE
C DE CELLE-CI PAR RAPPORT AU SAUT DE DEPLACEMENT (SIGMA ET DSIDEP) :
          VIMOIN(1)=VIM(1,KPG)
          VIMOIN(2)=VIM(2,KPG)
          VIMOIN(3)=VIM(3,KPG)

          CALL R8INIR(2,  0.D0, SIG ,1)


C -   APPEL A LA LOI DE COMPORTEMENT
          CALL NMCOMP (2,TYPMOD,MATE,COMPOR,RBID,
     &               RBID,RBID,
     &               TEMPM(KPG),TEMPP(KPG),RBID,
     &               RBID,RBID,
     &               RBID,RBID,RBID,
     &               R8VIDE(),R8VIDE(),
     &               SU,RBID,
     &               RBID,VIMOIN,
     &               OPTION,
     &               RBID,RBID,
     &               1,RBID,RBID,
     &               R8VIDE(),R8VIDE(),
     &               ANGMAS,
     &               RBID,
     &               SIG,VIPLUS,DSIDEP,IBID)

          IF (RESI) THEN
            SIGMA(1,KPG)=SIG(1)
            SIGMA(2,KPG)=SIG(2)
            VIP(1,KPG)=VIPLUS(1)
            VIP(2,KPG)=VIPLUS(2)
            VIP(3,KPG)=VIPLUS(3)
          ENDIF

        ENDIF

C CALCUL DES FINT (B_T SIGMA )

        IF (RESI) THEN

          DO 20 I=1,8
            DO 40 Q=1,2
              FINT(I) = FINT(I) +  POIDS(KPG)*B(Q,I)*SIGMA(Q,KPG)
 40         CONTINUE
 20       CONTINUE

        ENDIF


C CALCUL DES KTAN = ( B_T  DSIGMA/DSU  B )

        IF (RIGI) THEN

          DO 50 I=1,8
            DO 52 J=1,8
              DO 60 Q=1,2
                DO 62 S=1,2
                  KTAN(I,J) = KTAN(I,J)+
     &                        POIDS(KPG)*B(Q,I)*DSIDEP(Q,S)*B(S,J)
 62             CONTINUE
 60           CONTINUE
 52         CONTINUE
 50       CONTINUE

        ENDIF

 11   CONTINUE

      END
