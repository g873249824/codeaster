      SUBROUTINE LC0050(FAMI,KPG,KSP,NDIM,IMATE,COMPOR,CRIT,INSTAM,
     &           INSTAP,EPSM,DEPS,SIGM,VIM,OPTION,ANGMAS,STRESS,STATEV,
     &                  TAMPON,TYPMOD,ICOMP,NVI,DSIDEP,CODRET)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 05/07/2010   AUTEUR PROIX J-M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
C ======================================================================
C     BUT: INTERFACE POUR ROUTINE D'INTEGRATION LOI DE COMPORTEMENT UMAT
C       IN   FAMI    FAMILLE DE POINT DE GAUSS (RIGI,MASS,...)
C            KPG,KSP NUMERO DU (SOUS)POINT DE GAUSS
C            NDIM    DIMENSION DE L ESPACE (3D=3,2D=2,1D=1)
C            IMATE    ADRESSE DU MATERIAU CODE
C            COMPOR    COMPORTEMENT DE L ELEMENT
C                COMPOR(1) = RELATION DE COMPORTEMENT (UMAT)
C                COMPOR(2) = NB DE VARIABLES INTERNES
C                COMPOR(3) = TYPE DE DEFORMATION(PETIT,GDEF_HYPO_ELAS)
C            CRIT    CRITERES  LOCAUX, INUTILISES PAR UMAT
C            INSTAM   INSTANT T
C            INSTAP   INSTANT T+DT
C            EPSM   DEFORMATION TOTALE A T EVENTUELLEMENT TOURNEE
C                   DANS LE REPERE COROTATIONNEL Si GDEF_HYPO_ELAS
C            DEPS   INCREMENT DE DEFORMATION EVENTUELLEMENT TOURNEE
C                   DANS LE REPERE COROTATIONNEL Si GDEF_HYPO_ELAS
C            SIGM   CONTRAINTE A T EVENTUELLEMENT TOURNEE...
C            VIM    VARIABLES INTERNES A T + INDICATEUR ETAT T
C ATTENTION : SI MODELE CINEMATIQUE ET GDEF, MODIFIER AUSSI VICIN0.F
C            OPTION     OPTION DE CALCUL A FAIRE
C                          'RIGI_MECA_TANG'> DSIDEP(T)
C                          'FULL_MECA'     > DSIDEP(T+DT) , SIG(T+DT)
C                          'RAPH_MECA'     > SIG(T+DT)
C            ANGMAS  ANGLES DE ROTATION DU REPERE LOCAL, CF. MASSIF 
C       OUT  STRESS    CONTRAINTE A T+DT
C       OUT  STATEV  VARIABLES INTERNES A T+DT 
C        IN  TAMPON  TABLEAUX DES ELEMENTS GEOMETRIQUES SPECIFIQUES
C            TYPMOD  TYPE DE MODELISATION (3D, AXIS, D_PLAN)
C            ICOMP   NUMERO DU SOUS-PAS DE TEMPS (CF. REDECE.F)
C            NVI     NOMBRE TOTAL DE VARIABLES INTERNES (+9 SI GDEF_HYP)
C       OUT  DSIDEP  MATRICE DE COMPORTEMENT TANGENT A T+DT OU T
C       OUT  CODRET  CODE-RETOUR = 0 SI OK, =1 SINON
C ======================================================================
      IMPLICIT NONE
      INTEGER         IMATE,NDIM,KPG,KSP,CODRET,ICOMP,NVI,IRET
      INTEGER         NPROPS,NTENS,NDI,NSHR,I,NSTATV,NPT,NOEL,LAYER
      INTEGER         KSPT,KSTEP,KINC,IDBG,J,IFM,NIV
      PARAMETER       ( NPROPS = 50)
      REAL*8          CRIT(*),ANGMAS(*),TM,TP,TREF,PROPS(NPROPS)
      REAL*8          INSTAM,INSTAP,TAMPON(*),DROT(3,3),DSTRAN(6)
      REAL*8          EPSM(6),DEPS(6)
      REAL*8          SIGM(6),STRESS(6),DEPSTH(6),SSE,SPD,SCD,TIME(2)
      REAL*8          VIM(*),STATEV(NVI),PREDEF(1),DPRED(1)
      REAL*8          DDSDDE(36),R8VIDE,DFGRD0(3,3),DFGRD1(3,3)
      REAL*8          DDSDDT(6),DRPLDE(6),CELENT,STRAN(6),DSIDEP(6,6)
      REAL*8          DTIME,TEMP,DTEMP,COORDS(3),RPL,PNEWDT,DRPLDT
      REAL*8          DEPST1,EPSTH1,EPSTH(6),RAC2
      CHARACTER*16    COMPOR(*),OPTION
      CHARACTER*8     TYPMOD(*),NOMRES(NPROPS)
      CHARACTER*(*)   FAMI
      CHARACTER*2     CODREL(NPROPS)
      CHARACTER*80    CMNAME
      COMMON/TDIM/   NTENS  , NDI
C     POUR TECAEL      
C---------------- COMMUNS NORMALISES  JEVEUX  --------------------------
      CHARACTER*32 JEXNUM
      COMMON /IVARJE/ZI(1)
      COMMON /RVARJE/ZR(1)
      COMMON /CVARJE/ZC(1)
      COMMON /LVARJE/ZL(1)
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      INTEGER ZI
      REAL*8 ZR
      COMPLEX*16 ZC
      LOGICAL ZL
      CHARACTER*8 ZK8,MA,NOMMA,NOMNO
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
C ---------------- FIN COMMUNS NORMALISES  JEVEUX  --------------------
      INTEGER IADZI,IAZK24
      DATA IDBG/1/
C     NTENS    :  NB TOTAL DE COMPOSANTES TENSEURS
C     NDI    :  NB DE COMPOSANTES DIRECTES  TENSEURS
C ======================================================================

      NTENS=2*NDIM
      NDI=3
      NSHR=NTENS-NDI
      CODRET=0
      RAC2=SQRT(2.D0)
      
C     IMRPESSIONS EVENTUELLES EN DEBUG
      CALL INFMAJ
      CALL INFNIV(IFM,NIV)

C     LECTURE DES PROPRIETES MATERIAU (MOT-CLE UMAT DE DEFI_MATERIAU)
      CALL R8INIR(NPROPS, R8VIDE(), PROPS, 1)
      DO 1001 I=1,9
         WRITE (NOMRES(I),'(A1,I1)') 'C',I
 1001 CONTINUE
      DO 1002 I=10,NPROPS
         WRITE (NOMRES(I),'(A1,I2)') 'C',I
 1002 CONTINUE
      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','UMAT',0,' ',0.D0,
     +            1,NOMRES(1),PROPS(1),CODREL, 'FM' )
      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','UMAT',0,' ',0.D0,
     +            NPROPS,NOMRES,PROPS,CODREL, '  ' )

      
C APPEL DE RCVARC POUR LE CALCUL DE LA TEMPERATURE
C RAISON: PASSAGE A UMAT DE LA TEMPERATURE
      CALL RCVARC(' ','TEMP','-',FAMI,KPG,KSP,TM,IRET)
      IF (IRET.NE.0) TM=0.D0
      CALL RCVARC(' ','TEMP','+',FAMI,KPG,KSP,TP,IRET)
      IF (IRET.NE.0) TP=0.D0
      CALL RCVARC(' ','TEMP','REF',FAMI,KPG,KSP,TREF,IRET)
      IF (IRET.NE.0) TREF=0.D0
C     CALCUL DES DEFORMATIONS DE DILATATION THERMIQUE      
      CALL VERIFT(FAMI,KPG,KSP,'T',IMATE,'ELAS',1,DEPST1,IRET)
      IF (IRET.NE.0) DEPST1=0.D0
      CALL VERIFT(FAMI,KPG,KSP,'-',IMATE,'ELAS',1,EPSTH1,IRET)
      IF (IRET.NE.0) EPSTH1=0.D0

C     TRAITEMENT COMPOSANTES 4,5,6 : DANS UMAT, GAMMAXY,XZ,YZ
      CALL R8INIR(NTENS, 0.D0, DEPSTH, 1)
      CALL R8INIR(NDI, DEPST1, DEPSTH, 1)
      IF ( OPTION(1:9) .EQ. 'RAPH_MECA' .OR.
     &     OPTION(1:9) .EQ. 'FULL_MECA'     ) THEN
         DO 1003 I=1,NTENS
            IF (I.LE.3) THEN
               DSTRAN(I)=DEPS(I)-DEPSTH(I)
            ELSE
               DSTRAN(I)=DEPS(I)*RAC2
            ENDIF
 1003    CONTINUE
      ELSE
         CALL R8INIR(NTENS, 0.D0, DSTRAN, 1)
      ENDIF
      
      CALL R8INIR(NTENS, 0.D0, EPSTH, 1)
      CALL R8INIR(NDI,   EPSTH1, EPSTH, 1)
      
      DO 1004 I=1,NTENS
         IF (I.LE.3) THEN
            STRAN(I)=EPSM(I)-EPSTH(I)
         ELSE
            STRAN(I)=EPSM(I)*RAC2
         ENDIF
 1004 CONTINUE
      
      DO 1005 I=1,NTENS
         IF (I.LE.3) THEN
            STRESS(I)=SIGM(I)
         ELSE
            STRESS(I)=SIGM(I)/RAC2
         ENDIF
 1005 CONTINUE
      
      
      
      IF (COMPOR(3).EQ.'GDEF_HYPO_ELAS') THEN
         NSTATV=NVI-9
      ELSE
         NSTATV=NVI
      ENDIF
      CALL LCEQVN( NSTATV ,VIM , STATEV )
      
      TIME(1)=INSTAP-INSTAM
      TIME(2)=INSTAM
      DTIME=INSTAP-INSTAM
      TEMP=TM
      DTEMP=TP-TM
      CMNAME=COMPOR(1)

      CALL R8INIR(3, R8VIDE(), COORDS, 1)
      CALL MATROT ( ANGMAS , DROT )
      CELENT=TAMPON(1)
      CALL R8INIR(3, R8VIDE(), DFGRD0, 1)
      CALL R8INIR(3, R8VIDE(), DFGRD1, 1)
      NPT=KPG
C      CALL TECAEL(IADZI,IAZK24)
C      NOEL=ZI(IADZI)
      LAYER=1
      KSPT=KSP
      KSTEP=ICOMP
      KINC=1
      
      IF ( OPTION(1:9) .EQ. 'RAPH_MECA' .OR.
     &     OPTION(1:9) .EQ. 'FULL_MECA'     ) THEN
      IF ((NIV.GE.2).AND.(IDBG.EQ.1)) THEN
         WRITE(IFM,*)' '
         WRITE(IFM,*)'AVANT APPEL UMAT, INSTANT=',TIME(2)+DTIME
         WRITE(IFM,*)'DEFORMATIONS INSTANT PRECEDENT STRAN='
         WRITE(IFM,'(6(1X,E11.4))') (STRAN(I),I=1,NTENS)
         WRITE(IFM,*)'ACCROISSEMENT DE DEFORMATIONS DSTRAN='
         WRITE(IFM,'(6(1X,E11.4))') (DSTRAN(I),I=1,NTENS)
         WRITE(IFM,*)'CONTRAINTES INSTANT PRECEDENT STRESS='
         WRITE(IFM,'(6(1X,E11.4))') (STRESS(I),I=1,NTENS)
         WRITE(IFM,*)'NVI=',NSTATV,' VARIABLES INTERNES STATEV='
         WRITE(IFM,'(10(1X,E11.4))') (STATEV(I),I=1,NSTATV)
      ENDIF
      ENDIF
      
      PNEWDT=1.D0
      
         CALL UMAT(STRESS,STATEV,DDSDDE,SSE,SPD,SCD,
     1    RPL,DDSDDT,DRPLDE,DRPLDT,
     2    STRAN,DSTRAN,TIME,DTIME,TEMP,DTEMP,PREDEF,DPRED,CMNAME,
     3    NDI,NSHR,NTENS,NSTATV,PROPS,NPROPS,COORDS,DROT,PNEWDT,
     4    CELENT,DFGRD0,DFGRD1,NOEL,NPT,LAYER,KSPT,KSTEP,KINC)
      
      IF ( OPTION(1:9) .EQ. 'RAPH_MECA' .OR.
     &     OPTION(1:9) .EQ. 'FULL_MECA'     ) THEN
         IF ((NIV.GE.2).AND.(IDBG.EQ.1)) THEN
             WRITE(IFM,*)' '
             WRITE(IFM,*)'APRES APPEL UMAT, STRESS='
             WRITE(IFM,'(6(1X,E11.4))') (STRESS(I),I=1,NTENS)
             WRITE(IFM,*)'APRES APPEL UMAT, STATEV='
             WRITE(IFM,'(10(1X,E11.4))')(STATEV(I),I=1,NSTATV)
          ENDIF
      ENDIF

      IF ( OPTION(1:9) .EQ. 'RAPH_MECA' .OR.
     &     OPTION(1:9) .EQ. 'FULL_MECA'     ) THEN
         DO 1006 I=1,NTENS
            IF (I.LE.3) THEN
               STRESS(I)=STRESS(I)
            ELSE
               STRESS(I)=STRESS(I)*RAC2
            ENDIF
 1006    CONTINUE
      ENDIF
      
      IF ( OPTION(1:9) .EQ. 'RIGI_MECA' .OR.
     &     OPTION(1:9) .EQ. 'FULL_MECA'     ) THEN
         CALL R8INIR(36, 0.D0, DSIDEP, 1)
         CALL LCICMA (DDSDDE,NTENS,NTENS,NTENS,NTENS,1,1,DSIDEP,6,6,1,1)
           DO 67 I=1,6
           DO 67 J=4,6
             DSIDEP(I,J) = DSIDEP(I,J)*RAC2
 67        CONTINUE
           DO 68 I=4,6
           DO 68 J=1,6
             DSIDEP(I,J) = DSIDEP(I,J)*RAC2
 68        CONTINUE
         IF ((NIV.GE.2).AND.(IDBG.EQ.1)) THEN
            WRITE(IFM,*)'APRES APPEL UMAT,OPERATEUR TANGENT DSIDEP='
            DO 555 I=1,6
               WRITE(IFM,'(6(1X,E11.4))') (DSIDEP(I,J),J=1,6)
 555        CONTINUE
         ENDIF
      ENDIF
      
      IF (PNEWDT.LT.0.99D0) CODRET=1
      IDBG=0
      
      END
