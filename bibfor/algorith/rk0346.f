      SUBROUTINE RK0346(LOI,NEQK,VARINT,DVRINT)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 03/08/2009   AUTEUR MEUNIER S.MEUNIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     LOI     : VECTEUR DE REELS SAUF LE PREMIER QUI EST ENTIER
C     NEQK    : NOMBRE D'EQUATION
C     VARINT  : VARIABLES A L'INSTANT T-
C     DVRINT  : DERIVEES DES VARIABLES

      INTEGER NEQK,NUMLOI,I,J,NPILOT
      REAL*8 VARINT(NEQK),DVRINT(NEQK),LOI(*)
      REAL*8 XNP,XMPY,XMEY,XAY,XBY,XMPZ,XMEZ,XMPX,XAZ,XBZ
      REAL*8 SU,SY,YOUNG,EP,PUISS,AA,XIY,XIZ,XJX,XNU,DSY,DEP
      REAL*8 DGDT(4),LAMB(4),MAT(4,4),VEC1(4),EPU,DENO,GG,DXLAMB
      REAL*8 SC1,SC2,DEPSX1(4),XAN,XAX,AY,AZ,RC,AYP,AZP,NB
      REAL*8 QSIYP,QSIZP,PCUM,DGDPY,DGDPZ,AY0,AZ0
      REAL*8 DEPSX,DQSIY,DQSIZ,DQSIX,AY1,AZ1
      REAL*8 DEPSXP,DQSIYP,DQSIZP,DQSIXP,DPCUM,DSIGMA,AY2,AZ2
      REAL*8 XNX,XMY,XMZ,XMX,QPY,QPZ,DGDP,DRP

      NUMLOI = NINT(LOI(1))
C    RECUPERATION DES CARACTERISTIQUES PLASTIQUES
      XMPY = LOI(1+1)
      XMEY = LOI(1+2)
      XAY = LOI(1+3)
      XBY = LOI(1+4)
      XMPZ = LOI(1+5)
      XMEZ = LOI(1+6)
      XMPX = LOI(1+7)
      XAZ = LOI(1+8)
      XBZ = LOI(1+9)
      SU = LOI(1+10)
      SY = LOI(1+11)
      YOUNG = LOI(1+12)
      EP = LOI(1+13)
      PUISS = LOI(1+14)
      AA = LOI(1+15)
      XIY = LOI(1+16)
      XIZ = LOI(1+17)
      XJX = LOI(1+18)
      XNU = LOI(1+19)
      XNP = LOI(1+20)
C ------------------------------------------------
      DEPSX = DVRINT(1)
      DQSIY = DVRINT(2)
      DQSIZ = DVRINT(3)
      DQSIX = DVRINT(4)
      NPILOT = 6
      DSY = DVRINT(5)
      DEP = DVRINT(6)
      QSIYP = VARINT(NPILOT+2)
      QSIZP = VARINT(NPILOT+3)
      PCUM = VARINT(NPILOT+5)
      XNX = VARINT(NPILOT+7)
      XMY = VARINT(NPILOT+8)
      XMZ = VARINT(NPILOT+9)
      XMX = VARINT(NPILOT+10)

      XAN = 1.D0/XNP**2
      XAX = 1.D0/XMPX**2

      QPY = VARINT(NPILOT+11)
      QPZ = VARINT(NPILOT+12)

      IF (XBY.EQ.0.D0) THEN
        AY = (1.D0/XMPY**2)
      ELSE
        IF (QPY.EQ.0.D0) THEN
          AY = 1.D0/XMEY**2
        ELSE
          AY0 = QPY**XAY
          AY1 = AY0/ (XMPY**2)
          AY2 = AY1 + XBY/XMEY**2
          AY = AY2/ (AY0+XBY)
        END IF
      END IF

      IF (XBZ.EQ.0.D0) THEN
        AZ = (1.D0/XMPZ**2)
      ELSE
        IF (QPZ.EQ.0.D0) THEN
          AZ = 1.D0/XMEZ**2
        ELSE
          AZ0 = QPZ**XAZ
          AZ1 = AZ0/XMPZ**2
          AZ2 = AZ1 + XBZ/XMEZ**2
          AZ = AZ2/ (AZ0+XBZ)
        END IF
      END IF

      RC = SQRT(AY*XMY**2+AZ*XMZ**2+XAN*XNX**2+XAX*XMX**2)

      IF (NUMLOI.EQ.1) THEN
        NB = SY + EP*PCUM
        NB = NB + (DSY+DEP*PCUM)
      ELSE IF (NUMLOI.EQ.2) THEN
        EPU = (SU-SY)/EP
        NB = SY + EP*PCUM/ (1.D0+ (PCUM/EPU)**PUISS)** (1.D0/PUISS)
      END IF

      GG = XNP*RC - NB*AA

      IF (GG.GT.0.D0) THEN
        DGDT(1) = XAN*XNX*XNP/RC
        DGDT(2) = AY*XMY*XNP/RC
        DGDT(3) = AZ*XMZ*XNP/RC
        DGDT(4) = XAX*XMX*XNP/RC

        IF (QPY.GT.0.D0) THEN
          AYP = XAY*XBY* (QPY** (XAY-1.D0))*
     &          (1.D0/XMPY**2-1.D0/XMEY**2)/ (QPY**XAY+XBY)**2
          IF (QSIYP.LT.0.0D0) AYP = -AYP
        ELSE
          AYP = 0.D0
        END IF

        IF (QPZ.GT.0.D0) THEN
          AZP = XAZ*XBZ* (QPZ** (XAZ-1.D0))*
     &          (1.D0/XMPZ**2-1.D0/XMEZ**2)/ (QPZ**XAZ+XBZ)**2
          IF (QSIZP.LT.0.0D0) AZP = -AZP
        ELSE
          AZP = 0.D0
        END IF

        CALL MATINI(4,4,0.D0,MAT)

        MAT(1,1) = YOUNG*AA
        MAT(2,2) = YOUNG*XIY
        MAT(3,3) = YOUNG*XIZ
        MAT(4,4) = YOUNG*XJX/ (2.D0* (1.D0+XNU))

        DO 40 J = 1,4
          VEC1(J) = 0.D0
          DO 30 I = 1,4
            VEC1(J) = DGDT(I)*MAT(I,J) + VEC1(J)
   30     CONTINUE
   40   CONTINUE
        SC1 = 0.D0
        SC2 = 0.D0
        DO 50 I = 1,4
          SC1 = SC1 + VEC1(I)*DGDT(I)
   50   CONTINUE

        DGDPY = AYP*XMY**2*XNP/ (2.D0*RC)
        DGDPZ = AZP*XMZ**2*XNP/ (2.D0*RC)
        SC2 = DGDPY*ABS(DGDT(2)) + DGDPZ*ABS(DGDT(3))

        IF (NUMLOI.EQ.1) THEN
          DGDP = EP
          DRP = AA* (DSY+DEP*PCUM)
        ELSE IF (NUMLOI.EQ.2) THEN
          DGDP = EP/ (1.D0+ (PCUM/EPU)**PUISS)** (1.D0/PUISS+1.D0)
          DRP = 0.D0
        END IF

        DENO = SC1 - SC2 + DGDP*AA
        DO 60,I = 1,4
          LAMB(I) = VEC1(I)/DENO
   60   CONTINUE

        DEPSX1(1) = DEPSX
        DEPSX1(2) = DQSIY
        DEPSX1(3) = DQSIZ
        DEPSX1(4) = DQSIX

        DXLAMB = 0.D0
        DO 70 I = 1,4
          DXLAMB = DXLAMB + LAMB(I)*DEPSX1(I)
   70   CONTINUE
        DXLAMB = DXLAMB - (DRP/DENO)
        IF (DXLAMB.LT.0.D0) THEN

          DEPSXP = 0.D0
          DQSIYP = 0.D0
          DQSIZP = 0.D0
          DQSIXP = 0.D0
          DPCUM = 0.D0
          DSIGMA = 0.D0

        ELSE

          DEPSXP = DXLAMB*DGDT(1)
          DQSIYP = DXLAMB*DGDT(2)
          DQSIZP = DXLAMB*DGDT(3)
          DQSIXP = DXLAMB*DGDT(4)
          DPCUM = DXLAMB
          DSIGMA = DGDP*DPCUM
C         DSIGMA = DGDP*DPCUM + DRP

        END IF
      ELSE
        DEPSXP = 0.D0
        DQSIYP = 0.D0
        DQSIZP = 0.D0
        DQSIXP = 0.D0
        DPCUM = 0.D0
        DSIGMA = 0.D0
      END IF

      DVRINT(NPILOT+1) = DEPSXP
      DVRINT(NPILOT+2) = DQSIYP
      DVRINT(NPILOT+3) = DQSIZP
      DVRINT(NPILOT+4) = DQSIXP
      DVRINT(NPILOT+5) = DPCUM
      DVRINT(NPILOT+6) = DSIGMA
      DVRINT(NPILOT+7) = YOUNG*AA* (DEPSX-DEPSXP)
      DVRINT(NPILOT+8) = YOUNG*XIY* (DQSIY-DQSIYP)
      DVRINT(NPILOT+9) = YOUNG*XIZ* (DQSIZ-DQSIZP)
      DVRINT(NPILOT+10) = YOUNG*XJX* (DQSIX-DQSIXP)/ (2.D0* (1.D0+XNU))
      DVRINT(NPILOT+11) = ABS(DQSIYP)
      DVRINT(NPILOT+12) = ABS(DQSIZP)
      END
