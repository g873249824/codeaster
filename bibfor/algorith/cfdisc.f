      SUBROUTINE CFDISC(DEFICO,RESOCO,RESU)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 04/05/2004   AUTEUR MABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS


      IMPLICIT NONE
      CHARACTER*24        DEFICO
      CHARACTER*14        RESOCO
      INTEGER             RESU

C ----------------------------------------------------------------------
C  PERMET DE SAVOIR S'IL Y A CONTACT/FROTTEMENT
C ----------------------------------------------------------------------
C
C IN  DEFICO  : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA) 
C IN  RESOCO  : SD DE TRAITEMENT NUMERIQUE DU CONTACT 
C OUT RESU    : CODE RETOUR
C   0 PAS DE CONTACT
C   -1 METHODE CONTACT
C   -2 METHODE CONTACT/FROTTEMENT
C   -3 METHODE CONTINUE
C   1 METHODE CONTACT ET LIAISONS ACTIVES
C   2 METHODE CONTACT/FROTTEMENT ET LIAISONS ACTIVES
C   3 METHODE CONTINUE ET LIAISONS ACTIVES
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------

      CHARACTER*32 JEXNUM
      INTEGER ZI,IER
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------

      INTEGER      ICONTA,NBLIAC
      CHARACTER*24 COCO, METHCO
      INTEGER      JCOCO, JMETH

      RESU = 0
      
      CALL JEEXIN ( DEFICO(1:16)//'.METHCO', ICONTA )

      IF (ICONTA.EQ.0) GOTO 10

      METHCO = DEFICO(1:16)//'.METHCO'
      CALL JEVEUO(METHCO,'L',JMETH)

      IF (ZI(JMETH+6).NE.0 .AND. ZI(JMETH+6).NE.1 .AND.
     &          ZI(JMETH+6).NE.2) THEN
        RESU = -2
      ELSE 
        RESU = -1      
      ENDIF

      IF (ZI(JMETH+6).EQ.6 ) THEN
        RESU = -3
      ENDIF

      IF (RESOCO(1:1).NE.' ') THEN
        CALL JEEXIN ( RESOCO(1:14)//'.APREAC', ICONTA )
        IF ( ICONTA .NE. 0 ) THEN
          COCO = RESOCO(1:14)//'.COCO'
          CALL JEVEUO(COCO,'L',JCOCO)
          NBLIAC = ZI(JCOCO+2)
          IF (NBLIAC.NE.0) THEN
            RESU = ABS(RESU)
          ENDIF
        END IF
      ENDIF

   10 CONTINUE

      END
