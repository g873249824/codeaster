      SUBROUTINE NMMAJD(MAILLA,FONACT,CONV  ,LICCVG,SDDYNA,
     &                  MATASS,NURO  ,INDRO ,ITERAT,INSTAP,
     &                  DEFICO,DEFICU,RESOCO,RESOCU,CNCINE,
     &                  DEPMOI,DEPPLU,ACCPLU,VITPLU,DDEPLA,
     &                  DEPDEL,DEPKM1,VITKM1,ACCKM1,ROMKM1,
     &                  ROMK)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 01/04/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      LOGICAL      FONACT(*)
      CHARACTER*8  MAILLA
      CHARACTER*19 NURO,MATASS
      INTEGER      INDRO   
      INTEGER      LICCVG(2)
      REAL*8       CONV(*)   
      CHARACTER*24 DEFICO,DEFICU,RESOCO,RESOCU
      INTEGER      ITERAT
      REAL*8       INSTAP
      CHARACTER*19 SDDYNA
      CHARACTER*24 DEPMOI,DEPPLU
      CHARACTER*24 ACCPLU,VITPLU
      CHARACTER*24 CNCINE
      CHARACTER*24 DDEPLA,DEPDEL
      CHARACTER*24 DEPKM1,VITKM1,ACCKM1,ROMKM1,ROMK      
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME )
C
C MISE A JOUR LES DEPLACEMENTS/ROTATIONS/VITESSES/ACCELERATIONS AVEC 
C INCREMENT SOLUTION ET CONTACT
C      
C ----------------------------------------------------------------------
C
C
C IN  DINST  : INCREMENT DE TEMPS.
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE (CF NDLECT)
C I/O VITMOI : CHAM_NO DE VITESSES     A L'ITERATION PRECEDENTE
C I/O ACCMOI : CHAM_NO D'ACCELERATIONS A L'ITERATION PRECEDENTE
C I/O VITPLU : CHAM_NO DE VITESSES     A L'ITERATION ACTUELLE
C I/O ACCPLU : CHAM_NO D'ACCELERATIONS A L'ITERATION ACTUELLE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      LOGICAL      ISFONC,NDYNLO,LUNIL,LCTCD,REAROT
      INTEGER      NEQ
      CHARACTER*8  K8BID
      INTEGER      JDEPDE,JDEPP,JDDEPL   
      INTEGER      IFM,NIV   
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... DEPPLU = DEPPLU + DDEPLA'
        WRITE (IFM,*) '<MECANONLINE> ...... DEPDEL = DEPDEL + DDEPLA'
      ENDIF
C
C --- INITIALISATIONS
C
      CALL JELIRA(DEPMOI(1:19)//'.VALE','LONMAX',NEQ,K8BID)
C
C --- FONCTIONNALITES ACTIVEES
C    
      LUNIL  = ISFONC(FONACT,'LIAISON_UNILATER')
      LCTCD  = ISFONC(FONACT,'CONT_DISCRET')
      REAROT = ISFONC(FONACT,'REAROT')
C
C --- RECUPERATION DES ADRESSES
C
      CALL JEVEUO(DEPDEL(1:19)//'.VALE','E',JDEPDE)
      CALL JEVEUO(DEPPLU(1:19)//'.VALE','E',JDEPP)
      CALL JEVEUO(DDEPLA(1:19)//'.VALE','L',JDDEPL)         
C
C --- TRAITEMENT EVENTUEL DU CONTACT ET/OU DU FROTTEMENT
C --- ON CALCULE LES FORCES INTERNES QUELQUE SOIT L'OPTION D'ASSEMBLAGE
C
      IF (LCTCD) THEN
        CALL NMCOFR(MAILLA,DEPPLU,DEPDEL,DDEPLA,MATASS,
     &              DEFICO,RESOCO,CNCINE,ITERAT,INSTAP,
     &              CONV  ,LICCVG)
      END IF
C
C --- TRAITEMENT EVENTUEL DE LIAISON_UNILATER
C --- ON CALCULE LES FORCES INTERNES QUELQUE SOIT L'OPTION D'ASSEMBLAGE
C      
      IF (LUNIL) THEN
        CALL NMUNIL(MAILLA,DEPPLU,DEPDEL,DDEPLA,MATASS,
     &              DEFICU,RESOCU,CNCINE,ITERAT,INSTAP)          
      END IF  
      IF (NDYNLO(SDDYNA,'STATIQUE')) THEN
        CALL MAJOUR(NEQ,REAROT,ZI(INDRO),ZR(JDEPDE),ZR(JDDEPL),1.D0,
     &              ZR(JDEPDE))
        CALL MAJOUR(NEQ,REAROT,ZI(INDRO),ZR(JDEPP) ,ZR(JDDEPL),1.D0,
     &              ZR(JDEPP) )
      ELSE
        CALL MAJDVA(NEQ   ,REAROT,NURO  ,DEPMOI,DDEPLA,
     &              DEPDEL,DEPKM1,VITKM1,ACCKM1,DEPPLU,
     &              VITPLU,ACCPLU,ROMKM1,ROMK  ,SDDYNA)
      END IF
      
      IF (NIV.GE.2) THEN      
        WRITE (IFM,*) '<MECANONLINE> ...... DEPPLU : '
        CALL NMDEBG('VECT',DEPPLU,6)        
        WRITE (IFM,*) '<MECANONLINE> ...... DEPDEL : '
        CALL NMDEBG('VECT',DEPDEL,6)
        IF (NDYNLO(SDDYNA,'DYNAMIQUE')) THEN
          WRITE (IFM,*) '<MECANONLINE> ...... VITPLU : '
          CALL NMDEBG('VECT',VITPLU,6) 
          WRITE (IFM,*) '<MECANONLINE> ...... ACCPLU : '
          CALL NMDEBG('VECT',ACCPLU,6)           
        ENDIF
      ENDIF
C
      CALL JEDEMA()
      END
