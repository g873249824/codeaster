      SUBROUTINE MXMAJD(DINST ,VITMOI,ACCMOI,VITPLU,ACCPLU,
     &                  SDDYNA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE BOYERE E.BOYERE
C
      IMPLICIT NONE
      REAL*8       DINST
      CHARACTER*19 SDDYNA
      CHARACTER*24 VITMOI,ACCMOI,VITPLU,ACCPLU
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - EXPLICITE)
C
C MET A JOUR LES VITESSES ET LES DEPL/VITE/ACCE GENERALISEES
C      
C ----------------------------------------------------------------------
C
C    {VN+1} = {VN}+DT/2*({AN}+{AN+1})
C    {UN}   = {UN+1}
C    {AN}   = {AN+1}
C    {VN}   = {VN+1} 
C
C IN  DINST  : INCREMENT DE TEMPS.
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE (CF NDLECT)
C I/O VITMOI : CHAM_NO DE VITESSES     A L'ITERATION PRECEDENTE
C I/O ACCMOI : CHAM_NO D'ACCELERATIONS A L'ITERATION PRECEDENTE
C I/O VITPLU : CHAM_NO DE VITESSES     A L'ITERATION ACTUELLE
C I/O ACCPLU : CHAM_NO D'ACCELERATIONS A L'ITERATION ACTUELLE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      JVITKM,JVITP,JVITGM,JVITGP
      INTEGER      JACCKM,JACCP,JACCGM,JACCGP
      INTEGER      JDEPGP,JDEPGM
      CHARACTER*24 KBID,KPRMO,NDYNKK
      INTEGER      I,NEQ
      INTEGER      NBMODE
      REAL*8       COEVI1,COEVI2,UNDEMI,ZERO  
      LOGICAL      NDYNLO
      CHARACTER*8  K8BID
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      UNDEMI = 0.5D0
      ZERO   = 0.D0
      CALL JELIRA(ACCMOI(1:19)//'.VALE','LONMAX',NEQ,K8BID)      
C
C --- RECUPERATION DES ADRESSES
C
      CALL JEVEUO(VITPLU(1:19)//'.VALE','E',JVITP )
      CALL JEVEUO(ACCPLU(1:19)//'.VALE','L',JACCP )
      CALL JEVEUO(VITMOI(1:19)//'.VALE','L',JVITKM)
      CALL JEVEUO(ACCMOI(1:19)//'.VALE','L',JACCKM)
C
C --- COEFFICIENTS
C
      IF (NDYNLO(SDDYNA,'DIFF_CENT')) THEN
        COEVI1 = UNDEMI*DINST
        COEVI2 = UNDEMI*DINST
      ELSEIF (NDYNLO(SDDYNA,'TCHAMWA')) THEN
        COEVI1 = ZERO
        COEVI2 = DINST
      ENDIF
C      
C -- MISE A JOUR DE LA VITESSE     
C
      DO 10 I=1,NEQ
        ZR(JVITP+I-1) = ZR(JVITKM+I-1) + COEVI1*ZR(JACCP+I-1)
     &                + COEVI2*ZR(JACCKM+I-1)
10    CONTINUE
C      
C -- MISE A JOUR DES DEPL/VITE/ACCE GENERALISEES 
C
      IF (NDYNLO(SDDYNA,'EXPL_GENE')) THEN
        KPRMO   = NDYNKK(SDDYNA,'PROJ_MODAL')
        CALL JELIRA(KPRMO(1:19)//'.AGEM','LONMAX',NBMODE,KBID)
        CALL JEVEUO(KPRMO(1:19)//'.AGEM','E',JACCGM)
        CALL JEVEUO(KPRMO(1:19)//'.AGEP','L',JACCGP)
        CALL JEVEUO(KPRMO(1:19)//'.VGEM','E',JVITGM)
        CALL JEVEUO(KPRMO(1:19)//'.VGEP','E',JVITGP)
        CALL JEVEUO(KPRMO(1:19)//'.DGEM','E',JDEPGM)
        CALL JEVEUO(KPRMO(1:19)//'.DGEP','L',JDEPGP)
        DO 11 I=1,NBMODE
          ZR(JVITGP+I-1) = ZR(JVITGM+I-1) + COEVI1*ZR(JACCGP+I-1)
     &                   + COEVI2*ZR(JACCGM+I-1)
          ZR(JDEPGM+I-1) = ZR(JDEPGP+I-1)
          ZR(JVITGM+I-1) = ZR(JVITGP+I-1)
          ZR(JACCGM+I-1) = ZR(JACCGP+I-1)
11      CONTINUE
      ENDIF
C
      CALL JEDEMA()
      END
