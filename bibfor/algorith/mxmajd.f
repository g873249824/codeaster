      SUBROUTINE MXMAJD(NEQ,    REAROT, NURO,   COEVIT,
     &                  VITKM1, ACCKM1, VITPLU, ACCPLU)

      IMPLICIT NONE
      LOGICAL REAROT
      INTEGER INDRO,NEQ
      REAL*8  COEVIT, UNDEMI
      CHARACTER*19  NURO
      CHARACTER*24  VITKM1,ACCKM1,VITPLU,ACCPLU

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 06/04/2004   AUTEUR DURAND C.DURAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE BOYERE E.BOYERE
C FONCTION: MET A JOUR LES CHAM_NO: DEPDEL, DEPKM1, VITKM1, ACCKM1,
C                   DEPPLU, VITPLU, ACCPLU, ROMKM1, ROMK
C
C IN  NEQ   : LONGUEUR DES CHAM_NO
C     REAROT  : LOGICAL: TRUE  S'IL Y A DES DDL DE GRDE ROTATION
C                        FALSE SINON
C     INDRO   : VECTEUR DONNANT LE TYPE DES DDL:
C                  0: TRANSLATION OU PETITE ROTATION
C                  1: GRANDE ROTATION
C     COEVIT  : COEFFICIENT DONNE
C     DEPMOI  : CHAM_NO DE DEPLACEMENTS A L'INSTANT PRECEDENT
C     DDEPLA  : CHAM_NO DE L'INCREMENT DE DEPLAC. DEPUIS L'ITER. PRECED.
C
C OUT DEPDEL  : CHAM_NO DE L'INCREMENT DE DEPLAC. DEPUIS L'INST. PRECED.
C     DEPKM1  : CHAM_NO DE DEPLACEMENTS A L'ITERATION PRECEDENTE
C     VITKM1  : CHAM_NO DE VITESSES     A L'ITERATION PRECEDENTE
C     ACCKM1  : CHAM_NO D'ACCELERATIONS A L'ITERATION PRECEDENTE
C     DEPPLU  : CHAM_NO DE DEPLACEMENTS A L'ITERATION ACTUELLE
C     VITPLU  : CHAM_NO DE VITESSES     A L'ITERATION ACTUELLE
C     ACCPLU  : CHAM_NO D'ACCELERATIONS A L'ITERATION ACTUELLE
C
C ------------------------------------------------------------------
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      CHARACTER*32       JEXNUM
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
      INTEGER  JVITKM,JACCKM,JVITP,JACCP
      
      INTEGER I,IC,ICOMP,IRAN(3)
C ----------------------------------------------------------------------
      CALL JEMARQ()

      UNDEMI=0.5D0

C -- RECUPERATION DES ADRESSES
      CALL JEVEUO(VITPLU(1:19)//'.VALE','E',JVITP )
      CALL JEVEUO(ACCPLU(1:19)//'.VALE','L',JACCP )
      CALL JEVEUO(VITKM1(1:19)//'.VALE','L',JVITKM)
      CALL JEVEUO(ACCKM1(1:19)//'.VALE','L',JACCKM)
C         
      IF (REAROT) CALL JEVEUO (NURO//'.NDRO','L',INDRO)

C -- MISES A JOUR
      IF (.NOT.REAROT) THEN
         DO 10 I=1,NEQ
            ZR(JVITP+I-1) = ZR(JVITKM+I-1) + UNDEMI*COEVIT*ZR(JACCP+I-1)
     &                    + UNDEMI*COEVIT*ZR(JACCKM+I-1)
10       CONTINUE
      ELSE
         CALL UTMESS('F','MAJEXP','ERREUR')
      ENDIF
      CALL JEDEMA()
      END
