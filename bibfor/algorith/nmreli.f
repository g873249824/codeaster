      SUBROUTINE NMRELI(MODELE, NUMEDD, MATE  , CARELE, COMREF,
     &                  COMPOR, LISCHA, CNFEXT, PARMET, CARCRI,
     &                  PARCRI, ITERAT, VALMOI, POUGD , DEPDEL, 
     &                  RESOCO, DDEPLA, VALPLU, CNRESI, CNDIRI, 
     &                  CONV  , LICCVG, REAROT, INDRO, METHOD)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/06/2007   AUTEUR REZETTE C.REZETTE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      LOGICAL       REAROT
      INTEGER       ITERAT, LICCVG, INDRO
      REAL*8        PARMET(*), CONV(*), PARCRI(*)
      CHARACTER*16  METHOD(*)
      CHARACTER*19  LISCHA, CNRESI, CNDIRI, CNFEXT
      CHARACTER*24  MODELE, NUMEDD, MATE  , CARELE, COMREF, COMPOR
      CHARACTER*24  CARCRI, VALMOI, POUGD , DDEPLA, VALPLU, DEPDEL
      CHARACTER*24  RESOCO
C      
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (RECH. LINE.)
C
C RECHERCHE LINEAIRE DANS LA DIRECTION DE DESCENTE DDEPLA
C      
C ----------------------------------------------------------------------
C
C
C IN       MODELE K24  MODELE
C IN       NUMEDD K24  NUME_DDL
C IN       MATE   K24  CHAMP MATERIAU
C IN       CARELE K24  CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN       COMREF K24  VARI_COM DE REFERENCE
C IN       COMPOR K24  COMPORTEMENT
C IN       LISCHA K19  L_CHARGES
C IN/JXVAR CNFEXT K19  RESULTANTE DES EFFORTS EXTERIEURS
C                       (RECALCULEE QD DIRECTION DESCENTE = PREDICTION)
C IN       PARMET  R8  PARAMETRES DES METHODES DE RESOLUTION
C IN       CARCRI K24  PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN       PARCRI  R   CRITERES DE CONVERGENCE GLOBAUX
C IN       ITERAT  I   NUMERO D'ITERATION DE NEWTON
C IN       VALMOI K24  ETAT EN T-
C IN       POUGD  K24  DONNES POUR POUTRES GRANDES DEFORMATIONS
C IN       DEPDEL K24  INCREMENT DE DEPLACEMENT 
C IN       RESOCO K24  SD CONTACT
C IN/JXVAR DDEPLA K24  DIRECTION DE DESCENTE REACTUALISEE
C IN/JXVAR VALPLU K24  ETAT EN T+ : SIGPLU ET VARPLU
C IN/JXVAR CNRESI K19  FINT+BT.LAMBDA
C IN/JXVAR CNDIRI K19  BT.LAMBDA
C OUT      CONV    R8  INFORMATIONS SUR LA CONVERGENCE DU CALCUL
C                       (10) ITERATIONS RECHERCHE LINEAIRE
C                       (11) VALEUR DE RHO
C OUT      LICCVG  I   CODE RETOUR DE LA LOI DE COMPORTEMENT
C IN       REAROT  L   VRAI SI GRANDES ROTATIONS
C IN       INDRO   I   ADRESSE POUR GRANDES ROTATIONS
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      ITEMAX,ITERHO,NEQ   ,ACT   ,OPT   , LICOPT
      INTEGER      JRESI ,JDDEPL,JDEPDE,JDEPDT,JFEXT , JDEPM
      INTEGER      JDEPPT,JDEPP
      REAL*8       RHOMIN,RHOMAX,REXM,REXP,RHOEXC
      REAL*8       RHOM  ,RHOOPT, RHO
      REAL*8       F0, FM, F, FOPT, FCVG
      REAL*8       R8MAEM
      REAL*8       MEM(2,10), PARMUL, RATCVG,SENS
      LOGICAL      OPTI,STITE
      CHARACTER*8  K8BID
      CHARACTER*19 CNREST(2), CNDIRT(2)
      CHARACTER*24 DEPMOI, SIGMOI, COMMOI
      CHARACTER*24 DEPDET, DEPPLT
      CHARACTER*24 DEPPLU, SIGPLU, VARPLU, COMPLU, VARDEP, LAGDEP
      CHARACTER*24 SIGPLT, VARPLT, VALPLT(8,2), K24BID, K24BLA
C
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      K24BLA = ' '
      RHOEXC = 0.D0
      PARMUL = 3.D0
      RHOMIN = PARMET(14)
      RHOMAX = PARMET(15)
      REXM   = -PARMET(16)
      REXP   = PARMET(16)      
      ITEMAX = NINT(PARMET(10))
      RATCVG = PARMET(11)
      FOPT   = R8MAEM()
      DEPDET = '&&CNPART.CHP1'
      DEPPLT = '&&CNPART.CHP2'
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C      
      CALL DESAGG(VALMOI, DEPMOI, SIGMOI, K24BID, COMMOI,
     &            K24BID, K24BID, K24BID, K24BID)
      CALL DESAGG(VALPLU, DEPPLU, SIGPLU, VARPLU, COMPLU,
     &            VARDEP, LAGDEP, K24BID, K24BID)
C
C --- ACCES VARIABLES
C        
      CALL JEVEUO(DEPMOI(1:19) // '.VALE','E',JDEPM )
      CALL JEVEUO(DEPDEL(1:19) // '.VALE','E',JDEPDE)
      CALL JEVEUO(DEPPLU(1:19) // '.VALE','E',JDEPP )
      CALL JEVEUO(DEPDET(1:19) // '.VALE','E',JDEPDT)
      CALL JEVEUO(DEPPLT(1:19) // '.VALE','E',JDEPPT)
      CALL JEVEUO(DDEPLA(1:19) // '.VALE','E',JDDEPL)
      CALL JELIRA(DDEPLA(1:19) // '.VALE','LONMAX',NEQ,K8BID)      
C
C --- PREPARATION DES ZONES TEMPORAIRES POUR ITERATION COURANTE
C
C    BUT : CONSERVER LES RESULTATS DE L'INTEGRATION POUR RHO OPTIMAL
C          SANS DUPLIQUER LES SD CORRESPONDANTES A CHAQUE ITERATION

      CNREST(1) =  CNRESI
      CNREST(2) = '&&NMRECH.RESI'
      CNDIRT(1) =  CNDIRI
      CNDIRT(2) = '&&NMRECH.DIRI'
      SIGPLT    = '&&NMRECH.SIGP'
      VARPLT    = '&&NMRECH.VARP'
      CALL COPISD('CHAMP_GD','V',VARPLU,VARPLT)
      CALL AGGLOM(DEPPLT, SIGPLU, VARPLU, COMPLU,
     &            VARDEP, LAGDEP, K24BLA, K24BLA, 6, VALPLT(1,1))
      CALL AGGLOM(DEPPLT, SIGPLT, VARPLT, COMPLU,
     &            VARDEP, LAGDEP, K24BLA, K24BLA, 6, VALPLT(1,2))
C     
C --- CALCUL DE F(RHO=0)
C
      CALL JEVEUO (CNFEXT // '.VALE','L',JFEXT)
      CALL JEVEUO (CNRESI // '.VALE','L',JRESI) 
      CALL NMRECZ(NEQ,ZR(JDDEPL),ZR(JRESI),ZR(JFEXT),F0)
      FCVG = ABS(RATCVG * F0) 
C                 
C --- INITIALISATION ET DIRECTION DE DESCENTE      
C
      IF (METHOD(7).EQ.'CORDE') THEN
        SENS = 1.D0
        RHOM = 0.D0
        FM   = F0
      ELSEIF (METHOD(7).EQ.'MIXTE') THEN
        IF (F0.LE.0) THEN
          SENS = 1
        ELSE
          SENS = -1
        ENDIF 
        CALL ZBINIT(SENS*F0,PARMUL,RHOEXC,10,MEM)     
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- BOUCLE DE RECHERCHE LINEAIRE
C 
      RHO  = SENS
      ACT  = 1

      DO 20 ITERHO = 0, ITEMAX
C        
C --- CALCUL DE L'INCREMENT DE DEPLACEMENT TEMPORAIRE
C
        CALL MAJOUR (NEQ,REAROT,ZI(INDRO),ZR(JDEPDE),ZR(JDDEPL),
     &               RHO,ZR(JDEPDT))
        CALL MAJOUR (NEQ,REAROT,ZI(INDRO),ZR(JDEPP ),ZR(JDDEPL),
     &               RHO,ZR(JDEPPT))
C
C --- INTEGRATION DU COMPORTEMENT -> CONTRAINTES ET RESIDUS
C
        CALL NMFINT (MODELE, NUMEDD, MATE  , CARELE, COMREF,
     &               COMPOR, LISCHA, CARCRI, POUGD , ITERAT,
     &               PARMET, PARCRI,
     &               VALMOI, DEPDET, RESOCO, VALPLT(1,ACT), CNREST(ACT),
     &               CNDIRT(ACT), LICCVG,'RAPH_MECA', CONV,K24BID,
     &               K24BID,K24BID)
C
C --- ECHEC A L'INTEGRATION DE LA LOI DE COMPORTEMENT
C
        IF (LICCVG.LT.0) THEN
C        
C --- S'IL EXISTE DEJA UN RHO OPTIMAL, ON LE CONSERVE
C
          IF (ITERHO.GT.0) GOTO 100
          GOTO 9999
        END IF
C        
C --- CALCUL DE F(RHO)
C
        CALL JEVEUO(CNREST(ACT)//'.VALE', 'L', JRESI)
        CALL NMRECZ(NEQ,ZR(JDDEPL),ZR(JRESI),ZR(JFEXT),F)
C
C --- CALCUL DU RHO OPTIMAL
C        
        IF (METHOD(7).EQ.'CORDE') THEN
          CALL NMRECH(FM    ,F     ,FOPT  ,FCVG  ,RHOMIN,
     &                RHOMAX,REXM  ,REXP  ,RHOM  ,RHO   ,
     &                RHOOPT,LICOPT,LICCVG,OPT   ,ACT   ,     
     &                OPTI  ,STITE)    
     
        ELSEIF (METHOD(7).EQ.'MIXTE') THEN
          CALL NMREBO(F     ,MEM   ,SENS  ,RHO   ,RHOOPT,
     &                LICOPT,LICCVG,FOPT  ,FCVG  ,OPT   ,
     &                ACT   ,OPTI  ,STITE)     
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF  

        IF (STITE) GOTO 100

 20   CONTINUE
      ITERHO = ITEMAX

C
C --- STOCKAGE DU RHO OPTIMAL ET DES CHAMPS CORRESPONDANTS
C
 100  CONTINUE
C       
C --- AJUSTEMENT DE LA DIRECTION DE DESCENTE 
C
      CALL DAXPY(NEQ, RHOOPT-1.D0, ZR(JDDEPL),1, ZR(JDDEPL),1) 
C                     
C --- RECUPERATION DES VARIABLES EN T+ SI NECESSAIRE 
C     
      IF (OPT.NE.1) THEN
        CALL COPISD('CHAMP_GD','V',SIGPLT,SIGPLU)
        CALL COPISD('CHAMP_GD','V',VARPLT,VARPLU)
        CALL COPISD('CHAMP_GD','V',CNREST(OPT),CNRESI)
        CALL COPISD('CHAMP_GD','V',CNDIRT(OPT),CNDIRI)
      END IF
C      
C --- INFORMATIONS SUR LA RECHERCHE LINEAIRE     
C 
      CONV(10) = ITERHO
      CONV(11) = RHOOPT 
      LICCVG   = LICOPT

 9999 CONTINUE
      CALL JEDEMA()      
      
      END
