      SUBROUTINE NMRELI(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,CNFEXT,CNFINT,CNDIRI,
     &                  PARMET,CARCRI,FONACT,ITERAT,INDRO ,
     &                  PARCRI,CONV  ,METHOD,RESOCO,VALMOI,  
     &                  VALPLU,DEPALG,POUGD ,VEELEM,MEELEM,
     &                  MEASSE,SDDYNA,LDCCVG)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/05/2008   AUTEUR REZETTE C.REZETTE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      LOGICAL       FONACT(*)      
      INTEGER       ITERAT, LDCCVG, INDRO
      REAL*8        PARMET(*),CONV(*),PARCRI(*)
      CHARACTER*16  METHOD(*)
      CHARACTER*19  CNFEXT,CNFINT,CNDIRI 
      CHARACTER*24  CARCRI,RESOCO        
      CHARACTER*19  LISCHA,SDDYNA
      CHARACTER*24  MODELE,NUMEDD,MATE  ,CARELE, COMREF, COMPOR
      CHARACTER*24  VALMOI(8),POUGD (8),VALPLU(8),DEPALG(8)
      CHARACTER*19  MEELEM(8),VEELEM(30)     
      CHARACTER*19  MEASSE(8) 
C      
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C RECHERCHE LINEAIRE DANS LA DIRECTION DE DESCENTE
C      
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : L_CHARGES
C I/O CNFEXT : RESULTANTE DES EFFORTS EXTERIEURS
C                       (RECALCULEE QD DIRECTION DESCENTE = PREDICTION)
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  PARCRI : CRITERES DE CONVERGENCE GLOBAUX
C IN  ITERAT : NUMERO D'ITERATION DE NEWTON
C IN  RESOCO : SD CONTACT
C OUT CNFINT : FORCES INTERNES   - FINT 
C OUT CNDIRI : REACTIONS D'APPUI - BT.LAMBDA 
C OUT CONV   : INFORMATIONS SUR LA CONVERGENCE DU CALCUL
C                       (10) ITERATIONS RECHERCHE LINEAIRE
C                       (11) VALEUR DE RHO
C IN  INDRO  : ADRESSE POUR GRANDES ROTATIONS
C IN  VALMOI : ETAT EN T-
C IN  VALPLU : ETAT EN T+ 
C IN  SECMBR : SECONDS MEMBRES
C IN  POUGD  : INFOS POUTRES EN GRANDES ROTATIONS
C IN  DEPALG : VARIABLE CHAPEAU POUR DEPLACEMENTS 
C OUT LDCCVG : CODE RETOUR DE LA LOI DE COMPORTEMENT
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      ITEMAX,ITERHO,NEQ   ,ACT   ,OPT   , LDCOPT,IRET
      INTEGER      JDDEPL,JDEPDE,JDEPDT
      INTEGER      JFEXT,JFINT,JDIRI
      INTEGER      JDEPPT,JDEPP
      REAL*8       RHOMIN,RHOMAX,REXM,REXP,RHOEXC
      REAL*8       RHOM  ,RHOOPT, RHO
      REAL*8       F0, FM, F, FOPT, FCVG
      REAL*8       R8MAEM
      REAL*8       MEM(2,10), PARMUL, RATCVG,SENS, RHOPT1
      CHARACTER*8  K8BID
      LOGICAL      OPTI,STITE
      LOGICAL      ISFONC,REAROT
      CHARACTER*19 CNFINS(2),CNDIRS(2)
      CHARACTER*24 DEPPLU,SIGPLU,VARPLU,COMPLU
      CHARACTER*24 DEPDEL,DDEPLA,DEPOLD,DEPPRE(2)      
      CHARACTER*24 SIGPLT,VARPLT,DEPDET,DEPPLT
      CHARACTER*24 VALPLT(8,2),DEPALT(8)
      CHARACTER*24 K24BID,K24BLA
      CHARACTER*19 VEFINT,VEDIRI
      CHARACTER*19 MERIGI,MESSTR
      CHARACTER*19 SSTRU         
      INTEGER      IFM,NIV
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... RECHERCHE LINEAIRE' 
      ENDIF      
C
C --- INITIALISATIONS
C
      K24BLA = ' '
      RHOEXC = 0.D0
      PARMUL = 3.D0
      REAROT = ISFONC(FONACT,'REAROT')      
      RHOMIN = PARMET(14)
      RHOMAX = PARMET(15)
      REXM   = -PARMET(16)
      REXP   = PARMET(16)      
      ITEMAX = NINT(PARMET(10))
      RATCVG = PARMET(11)
      FOPT   = R8MAEM()
      DEPDET = '&&CNPART.CHP1'
      DEPPLT = '&&CNPART.CHP2'
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C   
      CALL DESAGG(DEPALG,DDEPLA,DEPDEL,DEPOLD,DEPPRE(1),
     &            DEPPRE(2),K24BID,K24BID,K24BID)   
      CALL DESAGG(VALPLU,DEPPLU,SIGPLU,VARPLU,COMPLU,
     &            K24BID,K24BID,K24BID,K24BID)
      VEFINT = VEELEM(1)   
      VEDIRI = VEELEM(2) 
      MERIGI = MEELEM(1)
      MESSTR = MEELEM(6)
      SSTRU  = MEASSE(6)     
C
C --- ACCES VARIABLES
C        
      CALL JEVEUO(DEPDEL(1:19)//'.VALE','E',JDEPDE)
      CALL JEVEUO(DEPPLU(1:19)//'.VALE','E',JDEPP )
      CALL JEVEUO(DDEPLA(1:19)//'.VALE','E',JDDEPL)   
      CALL JEVEUO(DEPDET(1:19)//'.VALE','E',JDEPDT)
      CALL JEVEUO(DEPPLT(1:19)//'.VALE','E',JDEPPT)   
C
C --- PREPARATION DES ZONES TEMPORAIRES POUR ITERATION COURANTE
C
      CNFINS(1) =  CNFINT
      CNFINS(2) = '&&NMRECH.RESI'
      CNDIRS(1) =  CNDIRI
      CNDIRS(2) = '&&NMRECH.DIRI'
      SIGPLT    = '&&NMRECH.SIGP'
      VARPLT    = '&&NMRECH.VARP'
      CALL COPISD('CHAMP_GD','V',VARPLU,VARPLT)
C
C --- CONSTRUCTION DES VARIABLES CHAPEAUX
C      
      CALL AGGLOM(DEPPLT,SIGPLU,VARPLU,COMPLU,K24BLA,
     &            K24BLA,K24BLA,K24BLA, 4, VALPLT(1,1))
      CALL AGGLOM(DEPPLT,SIGPLT,VARPLT,COMPLU,K24BLA,
     &            K24BLA,K24BLA,K24BLA, 4, VALPLT(1,2))
      CALL AGGLOM(DDEPLA,DEPDET,DEPOLD,DEPPRE(1),DEPPRE(2),
     &            K24BLA,K24BLA,K24BLA, 4, DEPALT)     
C     
C --- CALCUL DE F(RHO=0)
C
      CALL JEVEUO(CNFEXT(1:19)//'.VALE','L',JFEXT)
      CALL JEVEUO(CNFINT(1:19)//'.VALE','L',JFINT)
      CALL JEVEUO(CNDIRI(1:19)//'.VALE','L',JDIRI)   
      CALL NMRECZ(NEQ   ,ZR(JDDEPL),ZR(JFINT),ZR(JDIRI),ZR(JFEXT),
     &            F0)
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... FONCTIONNELLE INITIALE: ',F0 
      ENDIF          
      
      FCVG = ABS(RATCVG * F0) 
C                 
C --- INITIALISATION ET DIRECTION DE DESCENTE      
C
      IF (METHOD(7).EQ.'CORDE') THEN
        SENS = 1.D0
        RHOM = 0.D0
        FM   = F0
      ELSEIF (METHOD(7).EQ.'MIXTE') THEN
        IF (F0.LE.0) THEN
          SENS = 1
        ELSE
          SENS = -1
        ENDIF 
        CALL ZBINIT(SENS*F0,PARMUL,RHOEXC,10,MEM)     
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- BOUCLE DE RECHERCHE LINEAIRE
C 
      RHO  = SENS
      ACT  = 1

      DO 20 ITERHO = 0, ITEMAX
C        
C --- CALCUL DE L'INCREMENT DE DEPLACEMENT TEMPORAIRE
C
        CALL MAJOUR(NEQ,REAROT,ZI(INDRO),ZR(JDEPDE),ZR(JDDEPL),
     &              RHO,ZR(JDEPDT))
        CALL MAJOUR(NEQ,REAROT,ZI(INDRO),ZR(JDEPP ),ZR(JDDEPL),
     &              RHO,ZR(JDEPPT))
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ...... ITERATION <',ITERHO,'>'
          WRITE (IFM,*) '<MECANONLINE> ...... INCREMENT DEPL.'
          CALL NMDEBG('VECT',DEPPLT,6)
          WRITE (IFM,*) '<MECANONLINE> ...... INCREMENT DEPL. TOTAL'
          CALL NMDEBG('VECT',DEPDET,6) 
        ENDIF     
C
C --- INTEGRATION DU COMPORTEMENT -> CONTRAINTES ET RESIDUS
C
        CALL NMFINT('RAPH_MECA',
     &              MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &              COMPOR,LISCHA,CARCRI,FONACT,RESOCO,
     &              ITERAT,SDDYNA,LDCCVG,VALMOI,VALPLT(1,ACT),
     &              POUGD ,DEPALT,MERIGI,MESSTR,VEDIRI,
     &              VEFINT,SSTRU ,CNFINS(ACT),CNDIRS(ACT)) 
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ...... FORCES INTERNES'     
          CALL NMDEBG('VECT',CNFINS(ACT),6) 
          WRITE (IFM,*) '<MECANONLINE> ...... REACTIONS D''APPUI'
          CALL NMDEBG('VECT',CNDIRS(ACT),6) 
         ENDIF
C
C --- ECHEC A L'INTEGRATION DE LA LOI DE COMPORTEMENT
C
        IF (LDCCVG.LT.0) THEN
C        
C --- S'IL EXISTE DEJA UN RHO OPTIMAL, ON LE CONSERVE
C
          IF (ITERHO.GT.0) GOTO 100
          GOTO 9999
        END IF
C        
C --- CALCUL DE F(RHO)
C
        CALL JEVEUO(CNFINS(ACT)//'.VALE', 'L',JFINT)
        CALL JEVEUO(CNDIRS(ACT)//'.VALE', 'L',JDIRI)    
        CALL NMRECZ(NEQ   ,ZR(JDDEPL),ZR(JFINT),ZR(JDIRI),ZR(JFEXT),
     &              F)   
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ... FONCTIONNELLE COURANTE: ',F 
        ENDIF             
C
C --- CALCUL DU RHO OPTIMAL
C       
        IF (METHOD(7).EQ.'CORDE') THEN
          CALL NMRECH(FM    ,F     ,FOPT  ,FCVG  ,RHOMIN,
     &                RHOMAX,REXM  ,REXP  ,RHOM  ,RHO   ,
     &                RHOOPT,LDCOPT,LDCCVG,OPT   ,ACT   ,     
     &                OPTI  ,STITE) 

        ELSEIF (METHOD(7).EQ.'MIXTE') THEN
          CALL NMREBO(F     ,MEM   ,SENS  ,RHO   ,RHOOPT,
     &                LDCOPT,LDCCVG,FOPT  ,FCVG  ,OPT   ,
     &                ACT   ,OPTI  ,  STITE ) 
          IF(ITERHO.EQ.0)THEN
             RHOPT1 = RHO
          ENDIF
          IF(  RHO.GT.RHOMAX .OR. RHO.LT.RHOMIN)THEN
            GOTO 90
          ENDIF      

        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF  


        IF (STITE)THEN 
           GOTO 100
        ENDIF

 20   CONTINUE
      ITERHO = ITEMAX

 90   CONTINUE
      IF (METHOD(7).EQ.'MIXTE') THEN
           ITERHO = 1
           RHOOPT = RHOPT1
      ENDIF
C
C --- STOCKAGE DU RHO OPTIMAL ET DES CHAMPS CORRESPONDANTS
C
 100  CONTINUE
C       
C --- AJUSTEMENT DE LA DIRECTION DE DESCENTE 
C     
      CALL DAXPY(NEQ, RHOOPT-1.D0, ZR(JDDEPL),1, ZR(JDDEPL),1) 
C                     
C --- RECUPERATION DES VARIABLES EN T+ SI NECESSAIRE 
C     
      IF (OPT.NE.1) THEN
        CALL COPISD('CHAMP_GD','V',SIGPLT,SIGPLU)
        CALL COPISD('CHAMP_GD','V',VARPLT,VARPLU)
        CALL COPISD('CHAMP_GD','V',CNFINS(OPT),CNFINT)
        CALL COPISD('CHAMP_GD','V',CNDIRS(OPT),CNDIRI)
      END IF
C      
C --- INFORMATIONS SUR LA RECHERCHE LINEAIRE     
C 
      CONV(10) = ITERHO
      CONV(11) = RHOOPT 
      LDCCVG   = LDCOPT

 9999 CONTINUE
      CALL JEDEMA()      
      
      END
