      SUBROUTINE CFINIT(FONACT,NEQ   ,DEFICO,RESOCO,REINCR,
     &                  NUMINS)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/09/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C
      IMPLICIT     NONE
      CHARACTER*24 DEFICO,RESOCO
      INTEGER      REINCR
      INTEGER      NUMINS
      INTEGER      NEQ
      LOGICAL      FONACT(*)
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES)
C
C INITIALISATION DES PARAMETRES DE CONTACT POUR LA REACTUALISATION
C GEOMETRIQUE
C
C ----------------------------------------------------------------------
C
C
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  NEQ    : NOMBRE D'EQUATIONS DU SYSTEME
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  RESOCO : SD POUR LA RESOLUTION DE CONTACT
C IN  NUMINS : NUMERO D'INSTANT
C IN  REINCR : VALEUR DE REACTUALISATION DE LA MATRICE TANGENTE
C                REAC_INCR
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFDISI
      INTEGER      II,IBID,MATTAN,TYPALC,IZONE
      INTEGER      VECONT(2)
      LOGICAL      LREAC(2)
      CHARACTER*24 CLREAC,CIREAC
      INTEGER      JCLREA,JCIREA
      CHARACTER*24 AUTOC1,AUTOC2 
      INTEGER      JAUTO1,JAUTO2   
      LOGICAL      CTCDIS        
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C      
      CTCDIS = FONACT(4)
C      
      IF (CTCDIS) THEN 
C
C --- ACCES OBJETS
C          
        AUTOC1 = RESOCO(1:14)//'.REA1'
        AUTOC2 = RESOCO(1:14)//'.REA2'
        CLREAC = RESOCO(1:14)//'.REAL' 
        CIREAC = RESOCO(1:14)//'.REAI'                
        CALL JEVEUO(AUTOC1(1:19)//'.VALE','E',JAUTO1)
        CALL JEVEUO(AUTOC2(1:19)//'.VALE','E',JAUTO2)              
        CALL JEVEUO(CLREAC,'E',JCLREA)
        CALL JEVEUO(CIREAC,'E',JCIREA)     
        LREAC(1) = .FALSE.
        LREAC(2) = .FALSE.
C
C --- AUTORISATION DE DESTRUCTION DE LA MATRICE TANGENTE (VOIR NMASFR)
C
        CALL CFDISC(DEFICO,' ',TYPALC,IBID,IBID,MATTAN)
        IZONE    = 0     
        IF (REINCR.EQ.0) THEN
          IF (MATTAN.EQ.1) THEN
            CALL U2MESS('F','CONTACT_88')
          ENDIF
        ENDIF 
C 
C --- PARAMETRES DE REACTUALISATION GEOMETRIQUE
C       
        VECONT(1) = CFDISI(DEFICO,'REAC_GEOM',IZONE)
        VECONT(2) = 0
        LREAC(1)  = .TRUE.
        DO 10 II = 1, NEQ
         ZR(JAUTO1-1+II) = 0.0D0
         ZR(JAUTO2-1+II) = 0.0D0
10      CONTINUE
C
C --- PAS DE REACTUALISATION GEOMETRIQUE
C
        IF (VECONT(1).EQ.0) THEN
          IF (NUMINS.NE.1) THEN
            LREAC(1) = .FALSE.
          ENDIF
        ENDIF
C
C --- METHODE VERIF: APPARIEMENT FORCE A CHAQUE ITERATION
C         
        IF (TYPALC.EQ.5) THEN
          LREAC(1) = .TRUE.
        ENDIF 
C
C --- SAUVEGARDE
C        
        ZL(JCLREA+1-1) = LREAC(1)
        ZL(JCLREA+2-1) = LREAC(2)
        ZI(JCIREA+1-1) = VECONT(1)
        ZI(JCIREA+2-1) = VECONT(2)                                 
      ENDIF      
C 
      CALL JEDEMA()

      END
