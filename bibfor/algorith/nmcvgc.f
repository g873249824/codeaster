      SUBROUTINE NMCVGC(SDDISC,SDERRO,NUMINS,FONACT)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'
      INTEGER      FONACT(*)
      CHARACTER*19 SDDISC
      INTEGER      NUMINS
      CHARACTER*24 SDERRO
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C ETAT DE LA CONVERGENCE DU CALCUL
C
C ----------------------------------------------------------------------
C
C
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  SDERRO : SD GESTION DES ERREURS
C IN  NUMINS : NUMERO D'INSTANT
C IN  FONACT : FONCTIONNALITES ACTIVEES
C
C
C
C
      CHARACTER*4  ETINST,ETCALC
      LOGICAL      LSTOP,MTCPUP
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- ETAT DE LA BOUCLE DES INSTANTS
C
      CALL NMLEEB(SDERRO,'INST',ETINST)
      CALL NMERGE(SDERRO,'ERRE_TIMP',MTCPUP)
C
C --- SI PAS DE CONVERGENCE INSTANT -> TRANSFERT ETAT DE LA BOUCLE
C
      IF (ETINST.NE.'CONV') THEN
        IF (ETINST.EQ.'STOP') THEN
          CALL NMECEB(SDERRO,'CALC','STOP')
        ELSEIF (ETINST.EQ.'ERRE') THEN
          CALL NMECEB(SDERRO,'CALC','ERRE')
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
      ELSE
        CALL NMEVCV(SDERRO,FONACT,'CALC')
      ENDIF
C
      CALL NMLEEB(SDERRO,'CALC',ETCALC)
C
C --- ERREUR -> ON NE PEUT RIEN FAIRE
C
      IF (ETCALC.EQ.'ERRE') GOTO 99
C
C --- ERREUR FATALE -> SI TEMPS CPU SUR LE PAS, ON ATTEND DE VOIR SI
C --- ON EST AU DERNIER PAS
C
      IF (ETCALC.EQ.'STOP') THEN
        IF (.NOT.MTCPUP) GOTO 99
      ENDIF
C
C --- CONVERGENCE DU CALCUL: DERNIER PAS !
C
      CALL NMFINP(SDDISC,NUMINS,LSTOP )
      IF (LSTOP) THEN
        CALL NMECEB(SDERRO,'CALC','CONV')
      ENDIF
C
 99   CONTINUE
C
      CALL JEDEMA()
      END
