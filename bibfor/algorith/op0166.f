      SUBROUTINE OP0166(IER)
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/02/2010   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     COMMANDE:  PROJ_CHAMP
C
      IMPLICIT   NONE
C
C 0.1. ==> ARGUMENTS
C
      INTEGER IER
C
C 0.2. ==> COMMUNS
C ----------------------------------------------------------------------
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR,R8B
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC,C16B
      COMMON /CVARJE/ZC(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
C 0.3. ==> VARIABLES LOCALES
C
C
      INTEGER IAUX,JAUX,IRET
      INTEGER IE,N1,N2,N3,I
      INTEGER IBID,NBORDR
      INTEGER NRPASS,NBPASS
      INTEGER ADRECG,JORDR,JPARA
C
      CHARACTER*8 K8,K8B,NOMA1,NOMA2,NOMA3,RESUIN
      CHARACTER*8 LERES0,NOPASE,NOMO1,NOMO2,MOA1,MOA2,CNREF
      CHARACTER*16 TYPRES,NOMCMD,CORRES
      CHARACTER*19 RESUOU,CHAM1,METHOD
      CHARACTER*19 LERES1
      CHARACTER*24 NORECG
      CHARACTER*24 VALK(2)
      LOGICAL ISOLE
C DEB ------------------------------------------------------------------
      CALL JEMARQ()
      CALL INFMAJ()
      IER=0
      CALL TITRE


C     1- CALCUL DE RESUOU, TYPRES, METHOD, ISOLE, CHAM1, RESUIN :
C     ------------------------------------------------------------
C        RESUOU : NOM DU CONCEPT RESULTAT
C        TYPRES : TYPE DU RESULTAT (CHAM_NO OU SD_RESULTAT)
C        METHOD : METHODE CHOISIE POUR LA PROJECTION
C        ISOLE  : .TRUE.  : ON NE PROJETTE QU'UN CHAMP ISOLE
C                 .FALSE. : ON PROJETTE UNE SD_RESULTAT
C        CHAM1  : NOM DU CHAMP A PROJETER (SI ISOLE)
C        RESUIN : NOM DE LA SD_RESULTAT A PROJETER (SI .NOT.ISOLE)
      CALL GETRES(RESUOU,TYPRES,NOMCMD)
      CALL GETVTX(' ','METHODE',1,1,1,METHOD,N1)
      CALL GETVID(' ','RESULTAT',1,1,1,RESUIN,N2)
      IF (N2.EQ.1) THEN
        ISOLE=.FALSE.
        CHAM1=' '
      ELSE
        ISOLE=.TRUE.
        CALL GETVID(' ','CHAM_NO',1,1,1,CHAM1,N3)
        CALL ASSERT(N3.EQ.1)
        RESUIN=' '
      ENDIF


C     2- CALCUL DE NOMA1, NOMA2, MOA1, MOA2, CNREF:
C     ---------------------------------------------
C        NOMA1 : NOM DU MAILLAGE "1"
C        NOMA2 : NOM DU MAILLAGE "2"
C        NOMO1 : NOM DU MODELE "1"  (OU ' ')
C        NOMO2 : NOM DU MODELE "2"  (OU ' ')
C        MOA1  : NOMO1 SI NON ' '. SINON : NOMA1
C        MOA2  : NOMO2 SI NON ' '. SINON : NOMA2
C        CNREF : NOM DU CHAM_NO "MODELE" "2" (SI NUAGE_DEG_0/1)
      CALL GETVID(' ','MODELE_1',1,1,1,NOMO1,N1)
      IF (N1.EQ.1) THEN
        CALL DISMOI('F','NOM_MAILLA',NOMO1,'MODELE',IBID,NOMA1,IE)
        MOA1=NOMO1
      ELSE
        NOMO1=' '
        CALL GETVID(' ','MAILLAGE_1',1,1,1,NOMA1,N2)
        CALL ASSERT(N2.EQ.1)
        MOA1=NOMA1
      ENDIF

      CALL GETVID(' ','MODELE_2',1,1,1,NOMO2,N1)
      IF (N1.EQ.1) THEN
        CALL DISMOI('F','NOM_MAILLA',NOMO2,'MODELE',IBID,NOMA2,IE)
        MOA2=NOMO2
      ELSE
        NOMO2=' '
        CALL GETVID(' ','MAILLAGE_2',1,1,1,NOMA2,N2)
        CALL ASSERT(N2.EQ.1)
        MOA2=NOMA2
      ENDIF

      CALL GETVID(' ','CHAM_NO_REFE',1,1,1,CNREF,N1)
      IF (N1.EQ.1) THEN
        CALL DISMOI('F','NOM_MAILLA',CNREF,'CHAMP',IBID,NOMA3,IE)
        CALL ASSERT(NOMA3.EQ.NOMA2)
      ELSE
        CNREF=' '
      ENDIF


C     3- CALCUL DE LA SD_CORRESP_2_MAILLA :
C     ------------------------------------
      CORRES='&&OP0166.CORRES'
      IF (METHOD.EQ.'ELEM') THEN
        CALL PJEFCO(MOA1,MOA2,CORRES,'V')
      ELSEIF (METHOD(1:10).EQ.'NUAGE_DEG_') THEN
        CALL PJNGCO(CORRES,NOMA1,NOMA2,METHOD,CNREF,'V')
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF




C     4- PROJECTION DES CHAMPS :
C     ------------------------------------

C     --- SENSIBILITE : NOMBRE DE PASSAGES ---
      NORECG='&&OP0166_PARA_SENSI     '
      IAUX=1
      JAUX=1
      IBID=1
      CALL PSRESE(' ',IBID,IAUX,RESUOU,JAUX,NBPASS,NORECG,IRET)
      CALL JEVEUO(NORECG,'L',ADRECG)


C======== DEBUT DE LA BOUCLE SUR LE NOMBRE DE PASSAGES (SENSIBILITE)
      DO 20,NRPASS=1,NBPASS
C        POUR LE PASSAGE NUMERO NRPASS :
C        . NOPASE : NOM DU PARAMETRE DE SENSIBILITE EVENTUELLEMENT
C        . LERES1 : NOM DU CHAMP DE RESULTAT A COMPLETER
C                   C'EST RESUOU POUR UN CALCUL STANDARD, UN NOM
C                   COMPOSE A PARTIR DE RESUOU ET NOPASE POUR UN CALCUL
C                   DE SENSIBILITE
C        . LERES0 : IDEM POUR RESUIN
C
        NOPASE=ZK24(ADRECG+2*NRPASS-1)(1:8)
        LERES1=ZK24(ADRECG+2*NRPASS-2)(1:19)
C
C
        IF (NOPASE.EQ.' ') THEN
C       -- DANS LE CAS D'UN CALCUL STANDARD :
          LERES0=RESUIN
        ELSE
C       --DANS LE CAS D'UN CALCUL DE DERIVE :
          CALL PSGENC(RESUIN,NOPASE,LERES0,IRET)
          IF (IRET.NE.0) THEN
            VALK(1)=LERES0
            VALK(2)=NOPASE
            CALL U2MESK('A','SENSIBILITE_3',2,VALK)
            GOTO 20

          ENDIF
        ENDIF


C       -- LA SENSIBILITE NE CONCERNE PAS LE CAS ISOLE:
        IF (ISOLE) CALL ASSERT(NBPASS.EQ.1)
        IF (ISOLE) CALL ASSERT(NOPASE.EQ.' ')


C       1- CAS CHAMP ISOLE :
C       =====================
        IF (ISOLE) THEN
          CALL PJXXCH(CORRES,CHAM1,LERES1,' ','NON',' ','G',IRET)
          CALL ASSERT(IRET.EQ.0)



C       2- CAS SD_RESULTAT :
C       =====================
        ELSE
          CALL PJXXPR(LERES0,LERES1(1:8),MOA1,MOA2,CORRES,'G')
        ENDIF

   20 CONTINUE
C     ============= FIN DE LA BOUCLE SENSIBILITE

      CALL DETRSD('CORRESP_2_MAILLA',CORRES)
      CALL JEDEMA()
      END
