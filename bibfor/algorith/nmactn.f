      SUBROUTINE NMACTN(SDIMPR,SDDISC,PARCRI,ITERAT,NUMINS,
     &                  ITEMAX,ACTITE,ACTNIV)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/07/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      CHARACTER*24 SDIMPR
      CHARACTER*19 SDDISC
      REAL*8       PARCRI(*)  
      LOGICAL      ITEMAX
      INTEGER      ACTITE,ACTNIV
      INTEGER      ITERAT,NUMINS
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C GESTION DES ACTIONS SUITE A UN EVENEMENT DANS NEWTON
C
C PASSAGE DE NEWTON -> BOUCLE CONTACT
C      
C ----------------------------------------------------------------------
C
C
C IN  SDIMPR : SD AFFICHAGE
C IN  SDDISC : SD DISCRETISATION
C IN  PARCRI : CRITERES DE CONVERGENCE
C IN  ITERAT : NUMERO D'ITERATION DE NEWTON
C IN  NUMINS : NUMERO D'INSTANT
C I/O ITEMAX : .TRUE. SI ITERATION MAXIMUM ATTEINTE 
C IN  ACTITE : BOUCLE NEWTON -> ACTION POUR LA SUITE
C     0 - NEWTON OK   - BOUCLE DE CONTACT SUIVANTE
C     1 - NEWTON NOOK - IL FAUT FAIRE QUELQUE CHOSE
C     2 - NEWTON NCVG - ON CONTINUE NEWTON
C     3 - NEWTON STOP - TEMPS/USR1
C OUT ACTNIV : BOUCLE CONTACT -> ACTION POUR LA SUITE
C     0 - BOUCLE CONTACT SUIVANTE
C     1 - BOUCLE CONTACT STOP - ON REFAIT LE PAS
C     2 - BOUCLE CONTACT STOP - ON CONTINUE NEWTON
C     3 - BOUCLE CONTACT STOP - ARRET DU CALCUL          
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C 
      INTEGER      RETACT,IEVDAC
      LOGICAL      ARRET
C 
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      ARRET  = (NINT(PARCRI(4)).EQ.0)
      ACTNIV = 0
C
C --- CONTINUER LA BOUCLE DE NEWTON EST IMPOSSIBLE ICI
C
      IF (ACTITE.EQ.2) CALL ASSERT(.FALSE.)
C
C --- BOUCLE CONTACT SUIVANTE
C
      IF (ACTITE.EQ.0) THEN
        ACTNIV = 0
        GOTO 999
      ENDIF  
C
C --- SORTIE DE BOUCLE (PROBLEME)
C
      IF (ACTITE.EQ.3) THEN
        ACTNIV = 3
        GOTO 999
      ENDIF 
C
C --- ECHEC DE NEWTON: IL FAUT FAIRE QUELQUE CHOSE
C
      CALL ASSERT(ACTITE.EQ.1)
C
C --- RECHERCHE DES EVENEMENTS ACTIVES
C
      CALL NMACTO(SDDISC,IEVDAC)
C
C --- ACTIONS SUITE A UN EVENEMENT
C
      IF (IEVDAC.EQ.0) THEN
        RETACT = 0
      ELSE
        CALL NMEVAC(SDIMPR,SDDISC,IEVDAC,NUMINS,ITERAT,
     &              RETACT)
      ENDIF
C
C --- TRAITEMENT DE L'ACTION
C
      IF (RETACT.EQ.0) THEN
C      
C ----- RIEN A FAIRE: BOUCLE CONTACT SUIVANTE
C
        ACTNIV = 0     
      
      ELSE IF (RETACT.EQ.1)  THEN
C      
C ----- LA SUBDIVISION S'EST BIEN PASSEE: ON REFAIT LE PAS
C
        ACTNIV = 1

      ELSE IF (RETACT.EQ.2) THEN
C      
C ----- AUTORISATION DE FAIRE DES ITERATIONS DE NEWTON EN PLUS  
C
        ACTNIV = 2
        

      ELSEIF (RETACT.EQ.3) THEN
C      
C ----- ON REFAIT LE PAS
C
        ACTNIV = 1

      ELSEIF ((RETACT.EQ.4).AND.(.NOT.ARRET).AND.ITEMAX) THEN
C
C ----- CONVERGENCE FORCEE: ON VA AU PAS DE TEMPS SUIVANT
C
        CALL U2MESS('A','MECANONLINE2_37')
        ACTNIV = 0

      ELSEIF ((RETACT.EQ.4).AND.(.NOT.ARRET)) THEN
C
C ----- CONVERGENCE FORCEE: ON VA AU PAS DE TEMPS SUIVANT
C
        CALL U2MESS('A','MECANONLINE2_37')
        ACTNIV = 0

      ELSE
C
C ----- ARRET DU CALCUL        
C
        ACTNIV = 3

      ENDIF 
C
 999  CONTINUE             
C
      CALL JEDEMA()
      END
