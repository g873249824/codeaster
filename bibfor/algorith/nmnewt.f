      SUBROUTINE NMNEWT(NOMA  ,MODELE,NUMINS,NUMEDD,NUMFIX,
     &                  MATE  ,CARELE,COMREF,COMPOR,LISCHA,
     &                  METHOD,FONACT,CARCRI,PARCON,CONV  ,
     &                  PARMET,PARCRI,SDSTAT,SDIETO,SDTIME,
     &                  SDERRO,SDIMPR,SDNUME,SDDYNA,SDDISC,
     &                  SDCRIT,SDSUIV,SDPILO,SDCONV,SOLVEU,
     &                  MAPREC,MATASS,VALINC,SOLALG,MEELEM,
     &                  MEASSE,VEELEM,VEASSE,DEFICO,RESOCO,
     &                  DEFICU,RESOCU,ETA   ,NBITER)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/04/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INTEGER      NUMINS
      INTEGER      FONACT(*)
      CHARACTER*16 METHOD(*)
      REAL*8       PARMET(*),PARCRI(*),PARCON(*),CONV(*)
      CHARACTER*24 CARCRI
      CHARACTER*24 SDTIME,SDERRO,SDIMPR,SDIETO,SDSTAT,SDCONV,SDSUIV
      CHARACTER*19 SDNUME,SDDYNA,SDDISC,SDCRIT
      CHARACTER*19 SDPILO
      CHARACTER*19 VALINC(*),SOLALG(*)
      CHARACTER*19 MEELEM(*),VEELEM(*)
      CHARACTER*19 MEASSE(*),VEASSE(*)
      CHARACTER*19 LISCHA
      CHARACTER*19 SOLVEU,MAPREC,MATASS
      CHARACTER*24 MODELE,NUMEDD,NUMFIX
      CHARACTER*24 COMREF,COMPOR
      CHARACTER*24 MATE  ,CARELE
      CHARACTER*24 DEFICO,RESOCO,DEFICU,RESOCU
      REAL*8       ETA
      INTEGER      NBITER
      CHARACTER*8  NOMA
C
C ----------------------------------------------------------------------
C
C OPERATEUR NON-LINEAIRE MECANIQUE
C
C ALGORITHME DE NEWTON (STATIQUE ET DYNAMIQUE)
C
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL (VARIABLE AU COURS DU CALCUL)
C IN  NUMFIX : NUME_DDL (FIXE AU COURS DU CALCUL)
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARIABLES DE COMMANDE DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : LISTE DES CHARGES
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION
C IN  SOLVEU : SOLVEUR
C IN  SDSTAT : SD STATISTIQUES
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION
C I/O CONV   : INFORMATIONS SUR LA CONVERGENCE DU CALCUL
C IN  PARCRI : CRITERES DE CONVERGENCE
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  SDDISC : SD DISC_INST
C IN  SDTIME : SD TIMER
C IN  SDERRO : GESTION DES ERREURS
C IN  SDIETO : SD GESTION IN ET OUT
C IN  SDCONV : SD GESTION DE LA CONVERGENCE
C IN  NUMINS : NUMERO D'INSTANT
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  MEELEM : VARIABLE CHAPEAU POUR NOM DES MATR_ELEM
C IN  MEASSE : VARIABLE CHAPEAU POUR NOM DES MATR_ASSE
C IN  VEELEM : VARIABLE CHAPEAU POUR NOM DES VECT_ELEM
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  DEFICO : SD DEFINITION CONTACT
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  RESOCU : SD RESOLUTION LIAISON_UNILATER
C IN  SDDYNA : SD DYNAMIQUE
C IN  MATASS : NOM DE LA MATRICE DU PREMIER MEMBRE ASSEMBLEE
C IN  MAPREC : NOM DE LA MATRICE DE PRECONDITIONNEMENT (GCPC)
C IN  SDNUME : SD NUMEROTATION
C I/O ETA    : PARAMETRE DE PILOTAGE
C OUT NBITER : NOMBRE D'ITERATIONS DE NEWTON
C OUT ETATIN : ETAT DE LA CONVERGENCE DU PAS DE TEMPS
C     0 - CVG  -> LE PAS DE TEMPS A CONVERGE
C     1 - NOOK -> UN EVENEMENT DURANT LE PAS DE TEMPS
C     2 - NCVG -> LE PAS DE TEMPS N'A PAS CONVERGE
C     3 - STOP -> ERREUR FATALE - ARRET DU CALCUL
C
C ----------------------------------------------------------------------
C
      INTEGER      NIVEAU,ITERAT
      LOGICAL      LERRIT
      LOGICAL      ISFONC,LBOUCL,LCTCD
      CHARACTER*4  ETNEWT,ETFIXE
      REAL*8       TIME
C
C ----------------------------------------------------------------------
C
C
C --- INITIALISATIONS
C
      ITERAT = 0
      NIVEAU = 0
      NBITER = 0
      LERRIT = .FALSE.
C
C --- REMISE A ZERO DES EVENEMENTS INTRINSEQUES
C
      CALL NMERAZ(SDERRO,'TOUS')
C
C --- REMISE A ZERO DES EVENEMENTS UTILISATEURS
C
      CALL NMEVR0(SDDISC)
C
C --- INITIALISATION AFFECTATION DES COLONNES
C
      CALL NMIMR0(SDIMPR,'NEWT')
C
C --- ACTIVATION BOUCLES CONTACT
C
      LBOUCL = ISFONC(FONACT,'BOUCLE_EXTERNE')
      LCTCD  = ISFONC(FONACT,'CONT_DISCRET')
C
      IF (LBOUCL) NIVEAU = 3
C
C --- VERIFICATION DECOUPE INITIALE DU PAS DE TEMPS
C
      CALL NMDCIN(SDDISC,NUMINS)
C
C --- INITIALISATIONS POUR LE NOUVEAU PAS DE TEMPS
C
      CALL NMNPAS(MODELE,NOMA  ,MATE  ,CARELE,LISCHA,
     &            FONACT,SDIMPR,SDDISC,SDSUIV,SDDYNA,
     &            SDNUME,SDSTAT,SDTIME,NUMEDD,NUMINS,
     &            CONV  ,DEFICO,RESOCO,VALINC,SOLALG,
     &            SOLVEU)
C
C --- CALCUL DES CHARGEMENTS CONSTANTS AU COURS DU PAS DE TEMPS
C
      CALL NMCHAR('FIXE',' '   ,
     &            MODELE,NUMEDD,MATE  ,CARELE,COMPOR,
     &            LISCHA,CARCRI,NUMINS,SDTIME,SDDISC,
     &            PARCON,FONACT,RESOCO,RESOCU,COMREF,
     &            VALINC,SOLALG,VEELEM,MEASSE,VEASSE,
     &            SDDYNA)
C
C ======================================================================
C     BOUCLE POINTS FIXES
C ======================================================================
C
  100 CONTINUE
C
      ITERAT = 0
      NBITER = NBITER + 1
C
C --- GESTION DEBUT DE BOUCLE POINTS FIXES
C
      CALL NMIBLE(MODELE,NOMA  ,DEFICO,RESOCO,FONACT,
     &            NUMINS,NIVEAU,NUMEDD,SDSTAT,SDTIME,
     &            SDIMPR)
C
C --- CREATION OBJETS POUR CONTACT CONTINU
C
      CALL NMNBLE(NUMINS,MODELE,NOMA  ,NUMEDD,SDSTAT,
     &            SDTIME,SDDYNA,SDDISC,FONACT,DEFICO,
     &            RESOCO,VALINC,SOLALG)
C
C ======================================================================
C     PREDICTION
C ======================================================================
C
      CALL NMTIME(SDTIME,'RUN','ITE')
C
C --- PREDICTION D'UNE DIRECTION DE DESCENTE
C
      CALL NMPRED(MODELE,NUMEDD,NUMFIX,MATE  ,CARELE,
     &            COMREF,COMPOR,LISCHA,METHOD,SOLVEU,
     &            FONACT,PARMET,CARCRI,SDIMPR,SDSTAT,
     &            SDTIME,SDDISC,SDNUME,SDERRO,NUMINS,
     &            VALINC,SOLALG,MATASS,MAPREC,DEFICO,
     &            RESOCO,RESOCU,SDDYNA,MEELEM,MEASSE,
     &            VEELEM,VEASSE,LERRIT)
C
      IF (LERRIT) GOTO 315
C
C ======================================================================
C     BOUCLE SUR LES ITERATIONS DE NEWTON
C ======================================================================
C
 300  CONTINUE
      IF (ITERAT.NE.0) CALL NMTIME(SDTIME,'RUN','ITE')
C
C --- CALCUL PROPREMENT DIT DE L'INCREMENT DE DEPLACEMENT
C --- EN CORRIGEANT LA (LES) DIRECTIONS DE DESCENTE
C --- SI CONTACT OU PILOTAGE OU RECHERCHE LINEAIRE
C
      CALL NMDEPL(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &            COMPOR,LISCHA,FONACT,SDSTAT,PARMET,
     &            CARCRI,NOMA  ,METHOD,NUMINS,ITERAT,
     &            SOLVEU,MATASS,SDDISC,SDDYNA,SDNUME,
     &            SDPILO,SDTIME,SDERRO,DEFICO,RESOCO,
     &            DEFICU,RESOCU,VALINC,SOLALG,VEELEM,
     &            VEASSE,ETA   ,CONV  ,LERRIT)
C
      IF (LERRIT) GOTO 315
C
C --- CALCUL DES FORCES APRES CORRECTION
C
      CALL NMFCOR(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &            COMPOR,LISCHA,FONACT,PARMET,CARCRI,
     &            METHOD,NUMINS,ITERAT,SDSTAT,SDTIME,
     &            SDDISC,SDDYNA,SDNUME,SDERRO,DEFICO,
     &            RESOCO,RESOCU,PARCON,VALINC,SOLALG,
     &            VEELEM,VEASSE,MEELEM,MEASSE,MATASS,
     &            LERRIT)
C
      IF (LERRIT) GOTO 315
C
C --- SUIVI DE DDL
C
      CALL NMSUIV(NOMA  ,SDIETO,SDSUIV,SDIMPR)
C
C --- ESTIMATION DE LA CONVERGENCE
C
 315  CONTINUE
      CALL NMCONV(NOMA  ,MODELE,MATE  ,NUMEDD,SDNUME,
     &            FONACT,SDDYNA,SDCONV,SDIMPR,SDSTAT,
     &            SDDISC,SDTIME,SDCRIT,SDERRO,PARMET,
     &            COMREF,MATASS,SOLVEU,NUMINS,ITERAT,
     &            CONV  ,ETA   ,PARCRI,DEFICO,RESOCO,
     &            VALINC,SOLALG,MEASSE,VEASSE)
C
C --- MISE A JOUR DES EFFORTS DE CONTACT
C
      CALL NMFCON(MODELE,NUMEDD,MATE  ,FONACT,DEFICO,
     &            RESOCO,SDSTAT,SDTIME,VALINC,SOLALG,
     &            VEELEM,VEASSE)
C
C --- ETAT DE LA CONVERGENCE DE NEWTON
C
      CALL NMCVGN(SDDISC,SDERRO,VALINC,DEFICO,RESOCO)
      CALL NMLEEB(SDERRO,'NEWT',ETNEWT)
C
C --- AFFICHAGE PENDANT LES ITERATIONS DE NEWTON
C
      CALL NMIMCI(SDIMPR,'ITER_NUME',ITERAT,.TRUE.)
      CALL NMAFFI(FONACT,SDCONV,SDIMPR,SDERRO,SDDISC,
     &            'NEWT')
C
      IF (ETNEWT.NE.'CONT') GOTO 330
C
C --- ON CONTINUE LES ITERATIONS DE NEWTON : CALCUL DE LA DESCENTE
C
 320  CONTINUE
C
      CALL NMDESC(MODELE,NUMEDD,NUMFIX,MATE  ,CARELE,
     &            COMREF,COMPOR,LISCHA,RESOCO,METHOD,
     &            SOLVEU,PARMET,CARCRI,FONACT,NUMINS,
     &            ITERAT,SDDISC,SDIMPR,SDSTAT,SDTIME,
     &            SDDYNA,SDNUME,SDERRO,MATASS,MAPREC,
     &            DEFICO,VALINC,SOLALG,MEELEM,MEASSE,
     &            VEASSE,VEELEM,LERRIT)
C
      IF (LERRIT) GOTO 315
C
C --- ON CONTINUE NEWTON
C
      ITERAT = ITERAT + 1
      NBITER = NBITER + 1
C
C --- CAS DU CONTACT DISCRET
C
      CALL NMLEEB(SDERRO,'NEWT',ETNEWT)
      IF (ETNEWT.EQ.'CTCD') THEN
        CALL NMECEB(SDERRO,'NEWT','CONT')
        CALL NMTIME(SDTIME,'END','ITE')
        GOTO 300
      ENDIF
C
 330  CONTINUE
C
C --- TEMPS CPU ITERATION DE NEWTON
C
      CALL NMTIME(SDTIME,'END','ITE')
      CALL NMRINC(SDSTAT,'ITE')
C
C --- TEMPS PASSE DANS L'ITERATION
C
      CALL NMTIMR(SDTIME,'TEMPS_PHASE','N',TIME)
      CALL NMIMCR(SDIMPR,'ITER_TIME',TIME  ,.TRUE.)
C
C --- VERIFICATION DU DECLENCHEMENT DES ERREURS FATALES
C
      CALL NMEVDT(SDTIME,SDERRO,'ITE')
C
C --- STATISTIQUES SUR ITERATION DE NEWTON
C
      CALL NMSTAT('N'   ,FONACT,SDSTAT,SDTIME,SDIMPR,
     &            DEFICO)
C
C --- ON CONTINUE NEWTON ?
C
      CALL NMLEEB(SDERRO,'NEWT',ETNEWT)
      IF (ETNEWT.EQ.'CONT') GOTO 300
C
C ======================================================================
C     FIN BOUCLE SUR LES ITERATIONS DE NEWTON
C ======================================================================
C

C
C --- GESTION DES ACTIONS A LA FIN DE LA BOUCLE DE NEWTON
C
      CALL NMACTN(SDIMPR,SDDISC,SDERRO,DEFICO,RESOCO,
     &            SOLVEU,PARCRI,ITERAT,NUMINS)
C
C --- ON FAIT DES ITERATIONS SUPPLEMENTAIRES ?
C
      CALL NMLEEB(SDERRO,'NEWT',ETNEWT)
      IF (ETNEWT.EQ.'CONT') THEN
        CALL NMTIME(SDTIME,'RUN','ITE')
        CALL NMCREL(SDERRO,'ITER_MAXI',.FALSE.)
        GOTO 320
      ENDIF
C
C --- GESTION FIN DE BOUCLE POINTS FIXES
C
      CALL NMTBLE(MODELE,NOMA  ,MATE  ,DEFICO,RESOCO,
     &            NIVEAU,FONACT,SDIMPR,SDSTAT,SDTIME,
     &            SDDYNA,SDERRO,SDCONV,SDDISC,VALINC,
     &            SOLALG)
C
C --- ETAT DE LA CONVERGENCE POINT FIXE
C
      CALL NMCVGF(SDDISC,SDERRO,VALINC,DEFICO,RESOCO)
C
C --- GESTION DES ACTIONS A LA FIN D'UNE BOUCLE DE POINT FIXE
C
      CALL NMACTF(SDIMPR,SDDISC,SDERRO,DEFICO,RESOCO,
     &            SOLVEU,PARCRI,ITERAT,NUMINS)
C
C --- POUR LA CONTINUATION DU POINT FIXE: GLUTE DUE AU CONTACT DISCRET
C
      CALL NMLEEB(SDERRO,'FIXE',ETFIXE)
      IF (ETFIXE.EQ.'CONT') THEN
        IF (LCTCD) THEN
          CALL NMECEB(SDERRO,'NEWT','CTCD')
          CALL NMTIME(SDTIME,'RUN','ITE')
          GOTO 320
        ELSEIF (LBOUCL) THEN
          GOTO 100
        ELSE
          CALL NMECEB(SDERRO,'FIXE','CONV')
        ENDIF
      ENDIF
C
C ======================================================================
C     FIN BOUCLE POINTS FIXES
C ======================================================================
C
      END
