      SUBROUTINE MOCO99(NOMRES,RESUL,NBMOD,LRANG,IORNE,SEUL)
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER NBMOD,LRANG(NBMOD),IORNE
      CHARACTER*8 NOMRES,RESUL
      LOGICAL SEUL
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 03/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     BUT:
C       POINTER LES PREMIERS MODES PROPRES D'UNE STRUCTURE RESULTAT
C       DE TYPE MODE_MECA DANS UNE AUTRE STRUCTURE DE TYPE BASE_MODALE
C       DEJA EXISTANTE A PARTIR D'UN NUMERO D'ORDRE
C
C
C     ARGUMENTS:
C     ----------
C
C      ENTREE :
C-------------
C IN   NOMRES    : NOM UTILISATEUR DE LA STRUCTURE RESULTAT A REMPLIR
C IN   RESUL     : NOM DE LA STRUCTURE RESULTAT A POINTER
C IN   NBMOD     : NOMBRE DE MODES A POINTER
C IN   LRANG     : LISTE DES ANCIENS NUMEROS DE RANGEMENT A POINTER
C IN   SEUL      : INDICATEUR POUR UNE DEUXIEME OCCURENCE.
C                  MODE_MECA OU MODE_STAT ETC. SOUS LE MOT CLE "RITZ"
C
C      SORTIE :
C-------------
C OUT  IORNE     : NUMERO D'ORDRE DU PREMIER CHAMPS 'DEPL' A POINTER
C
C ......................................................................
C
C
C
C
      INTEGER      NBPABM
      PARAMETER   (NBPABM=10)
      INTEGER      LDPAR(NBPABM),LDPA2(NBPABM)
      INTEGER      NBCHAM,NBOLD,NBTROU,VALI
      INTEGER      I,II,JRBA,JREF,JTYP,IER,IOROL,IRE,IBID,JORDR
      INTEGER      LLKGE,LLMGE,LLNCP,LLOM2,LLTMO,LLVAL2,LLVALO

      REAL*8       GENEK,GENEM,OMEG2,RBID,EPSI

      CHARACTER*1  K1BID
      CHARACTER*8  K8BID,INTERF,TYPI
      CHARACTER*16 TYPRES,BMPARA(NBPABM),CHMECA,TYPMO
      CHARACTER*19 CHAMOL,CHAMNE
      CHARACTER*24 TYPE, TYPEBA

      COMPLEX*16   CBID

C-----------------------------------------------------------------------
C
      DATA  BMPARA /'NUME_MODE','FREQ','NORME','NOEUD_CMP','TYPE_DEFO',
     &              'OMEGA2','MASS_GENE','RIGI_GENE','TYPE_MODE',
     &              'AMOR_REDUIT'/
C
C-----------------------------------------------------------------------
C
C --- CAS DE L'ABSENCE D'UN MODE_MECA
C
      IF (RESUL.EQ.'          '.OR.NBMOD.EQ.0) GOTO 9999

C
C --- DETERMINATION DU NOMBRE DE MODES DANS LA STRUCTURE A POINTER
C
      CALL RSORAC(RESUL,'LONUTI',IBID,RBID,K8BID,CBID,EPSI,'ABSOLU',
     &            NBOLD,1,NBTROU)
C
      IF(NBMOD.GT.NBOLD) THEN
         VALI = NBOLD
         CALL U2MESG('I', 'ALGORITH13_48',0,' ',1,VALI,0,0.D0)
         NBMOD=NBOLD
      ENDIF
      NBMOD=MIN(NBMOD,NBOLD)
C
      IF(NBMOD.EQ.0) GOTO 9999
C     --- ON RECUPERE LE TYPE D'INTERFACE ---
C
      CALL JEVEUO(NOMRES//'           .REFD','L',JREF)
      INTERF = ZK24(JREF+4) (1:8)
      IF (INTERF.NE.' ') THEN
       TYPE = INTERF//'.IDC_TYPE'
       CALL JEVEUO(TYPE,'L',JTYP)
       TYPI = ZK8(JTYP)
      ENDIF
C
C --- RECHERCHE DE L'ADRESSE DES ANCIENNES VALEURS PROPRES
C
      CALL DISMOI('F','TYPE_RESU',RESUL,'RESULTAT',IBID,TYPRES,IRE)
C
      TYPEBA=' '
      IF (TYPRES.NE.'MULT_ELAS') THEN
        CALL JEVEUO(RESUL//'           .REFD','L',JRBA)
        TYPEBA=ZK24(JRBA+6)
      ENDIF

      TYPMO=' '


C ----- RECUPERATION DU NOMBRE DE CHAMP POSSIBLE DE LA SD
      CALL JELIRA(RESUL//'           .DESC','NOMMAX',NBCHAM,K1BID)

      CALL JEVEUO(RESUL//'           .ORDR','L',JORDR)
      DO 10 I=1,NBMOD
C       LRANG : CONTIENT DES NUMEROS DE RANGEMENT : 1,2, ..., NBMOD
        CALL ASSERT(LRANG(I).EQ.I)
        IOROL=ZI(JORDR-1+LRANG(I))
C
C ------BOUCLE SUR LA LISTE DE CHAMPS AFIN D'IDENTIFIER CEUX QUI
C       SONT PRESENTES DANS L'ANCIEN RESULT

        DO 30 II=1,NBCHAM
C ----- RECUPERATION DU NOM DU CHAMP POSSIBLE DE LA SD
          CALL JENUNO(JEXNUM(RESUL//'           .DESC',II),CHMECA)

C ----- REQUETE NOM ET ADRESSE ANCIEN CHAMNO
          CALL RSEXCH(RESUL,CHMECA,IOROL,CHAMOL,IER)
          IF (IER.EQ.0) THEN
            CALL RSEXCH(NOMRES,CHMECA,IORNE,CHAMNE,IER)
            IF (CHAMOL.NE.CHAMNE) THEN
              CALL COPISD('CHAMP','G',CHAMOL,CHAMNE)
            ENDIF
            CALL RSNOCH(NOMRES,CHMECA,IORNE)
          ENDIF
 30     CONTINUE

        IF (TYPRES.NE.'MODE_MECA') GOTO 11
C
C ----- RECUPERATION DES VALEURS GENERALISEES ET PULSATION CARREE
C
        CALL RSADPA(RESUL,'L',1,'RIGI_GENE',IOROL,0,LLKGE,K8BID)
        GENEK=ZR(LLKGE)
        CALL RSADPA(RESUL,'L',1,'MASS_GENE',IOROL,0,LLMGE,K8BID)
        GENEM=ZR(LLMGE)
        CALL RSADPA(RESUL,'L',1,'OMEGA2',IOROL,0,LLOM2,K8BID)
        OMEG2=ZR(LLOM2)
C
        CALL RSADPA(RESUL,'L',1,'TYPE_MODE',IOROL,0,LLTMO,K8BID)
        TYPMO=ZK16(LLTMO)

11      CONTINUE
C
C ----- ECRITURE DES NOUVEAUX PARAMETRES
C
        CALL RSADPA(NOMRES,'E',NBPABM,BMPARA,IORNE,0,LDPAR,K8BID)
        ZI(LDPAR(1))=IORNE
        IF (TYPMO(1:8).NE.'MODE_DYN') THEN
           IF (TYPEBA(1:1).NE.' ') THEN
            CALL RSADPA(RESUL,'L',NBPABM,BMPARA,IOROL,0,LDPA2,K8BID)
            ZR(LDPAR(2)) = ZR(LDPA2(2))
            ZK24(LDPAR(3)) = ZK24(LDPA2(3))
            ZK16(LDPAR(4)) = ZK16(LDPA2(4))
            ZK16(LDPAR(5)) = ZK16(LDPA2(5))
            ZR(LDPAR(6)) = ZR(LDPA2(6))
            ZR(LDPAR(7)) = ZR(LDPA2(7))
            ZR(LDPAR(8)) = ZR(LDPA2(8))
            IF (.NOT.SEUL) THEN
              ZK16(LDPAR(9)) ='MODE_STA'
            ELSEIF (SEUL) THEN
              ZK16(LDPAR(9)) = ZK16(LDPA2(9))
            ENDIF
           GO TO 12
           ENDIF
           ZR(LDPAR(2))=0.D0
           ZK24(LDPAR(3))=' '
           ZK16(LDPAR(4))=' '
           ZK16(LDPAR(5))=' '
           IF (TYPMO(1:8).EQ.'MODE_STA') THEN
            CALL RSADPA(RESUL,'L',1,'NOEUD_CMP',
     &         IOROL,0,LLNCP,K8BID)
            ZK16(LDPAR(4)) = ZK16(LLNCP)
            ZK16(LDPAR(5)) = 'STATIQUE'
            IF (INTERF.NE.' ') THEN
             IF (TYPI.EQ.'CRAIGB') ZK16(LDPAR(5)) = 'CONTRAINT'
             IF (TYPI.EQ.'MNEAL') ZK16(LDPAR(5)) = 'ATTACHE'
            ENDIF
           ENDIF
           ZR(LDPAR(6))=0.D0
           ZR(LDPAR(7))=0.D0
           ZR(LDPAR(8))=0.D0
C ON ETEND LA DECLARATION MODE_STA A TOUS LES MODES NON DYNA PAR
C EXEMPLE LES MULT_ELAS POUR ETRE COMPTABILISES COMME MODES STATIQUES
C DANS LES BASES DE RITZ PAR APPEL A DISMOI
           ZK16(LDPAR(9))='MODE_STA'
           GO TO 12
        ENDIF
        CALL RSADPA(RESUL,'L',1,'FREQ',IOROL,0,LLVALO,K8BID)
        CALL RSADPA(RESUL,'L',1,'AMOR_REDUIT',IOROL,0,LLVAL2,K8BID)
        ZR(LDPAR(2))=ZR(LLVALO)
        ZK24(LDPAR(3))=' '
        ZK16(LDPAR(4))=' '
        ZK16(LDPAR(5))='PROPRE '
        ZR(LDPAR(6))=OMEG2
        ZR(LDPAR(7))=GENEM
        ZR(LDPAR(8))=GENEK
        IF (.NOT.SEUL) THEN
          ZK16(LDPAR(9)) ='MODE_STA'
        ELSEIF (SEUL) THEN
          ZK16(LDPAR(9)) = 'MODE_DYN'
        ENDIF
        ZR(LDPAR(10))=ZR(LLVAL2)
C
12      CONTINUE
C
C ----- INCREMENTATION DU NUMERO ORDRE
C
        IORNE=IORNE+1
C
10    CONTINUE
C
C
 9999 CONTINUE
      END
