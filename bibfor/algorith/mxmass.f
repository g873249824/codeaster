      SUBROUTINE MXMASS(MODELE, NUMEDD, MATE,  CARELE,
     &                  COMREF, COMPOR, LISCHA, MEDIRI,
     &                  METHOD, SOLVEU, CARCRI,
     &                  ITERAT, VALMOI, POUGD,  DEPDEZ,
     &                  VALPLU, MATRIX, OPTION, STADYN,
     &                  PREMIE, DEPENT, VITENT, LAMORT,
     &                  MEMASS, MASSE,  AMORT, COEVIT,  COEACC,
     &                  LICCVG)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/08/2005   AUTEUR MABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE BOYERE E.BOYERE
C TOLE CRP_21

      IMPLICIT NONE
      INTEGER ITERAT, LICCVG
      REAL*8 COEVIT,COEACC
      CHARACTER*(*) DEPDEZ
      CHARACTER*16 METHOD(6),OPTION
      CHARACTER*19 LISCHA,SOLVEU,MATRIX(2)
      CHARACTER*24 MODELE,NUMEDD,MATE,CARELE,COMREF,COMPOR
      CHARACTER*24 CARCRI,VALMOI,POUGD,DEPDEL,VALPLU
      CHARACTER*24 MEDIRI,MAESCL,STADYN
      CHARACTER*24 DEPENT,VITENT,MEMASS,MEAMOR,AMORT
      LOGICAL LAMORT,PREMIE

C ----------------------------------------------------------------------
C  CALCUL DE LA MATRICE DE MASSE
C ----------------------------------------------------------------------

C IN       MODELE K24  MODELE
C IN       NUMEDD K24  NUME_DDL
C IN       MATE   K24  CHAMP MATERIAU
C IN       CARELE K24  CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN       COMREF K24  VARI_COM DE REFERENCE
C IN       COMPOR K24  COMPORTEMENT
C IN       LISCHA K19  L_CHARGES
C IN       MEDIRI K24  MATRICES ELEMENTAIRES DE DIRICHLET (B)
C IN       METHOD K16  INFORMATIONS SUR LES METHODES DE RESOLUTION
C IN       SOLVEU K19  SOLVEUR
C IN       CARCRI K24  PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN       ITERAT  I   NUMERO D'ITERATION
C IN       VALMOI K24  ETAT EN T-
C IN       POUGD  K24  DONNES POUR POUTRES GRANDES DEFORMATIONS
C IN       DEPDEZ K24  INCREMENT DE DEPLACEMENT
C IN       VALPLU K24  ETAT EN T+
C OUT      MATRIX K19  MATRICE ASSEMBLEE
C                      (1) : MATASS (PREDICTION, CORRECTION, CONTACT_FR)
C                      (2) : MAPREC (PREDICTION, CORRECTION)
C OUT      OPTION K16  NOM D'OPTION PASSE A MERIMO ('CORRECTION')
C OUT      LICCVG  I   CODE RETOUR (INDIQUE SI LA MATASS EST SINGULIERE)
C ----------------------------------------------------------------------
C REMARQUE :
C LORSQU'ON AURA COMPLETEMENT SEPARE LE CALCUL DES EFFORTS INTERIEURS
C DU CALCUL DES MATRICES TANGENTES (PLUS D'OPTION FULL_MECA), LA PHASE
C 'FORCES_INT' N'AURA PLUS LIEU D'ETRE. POUR L'INSTANT, ELLE NE
C S'ALIMENTE QUE DES PARAMETRES METHOD ET ITERAT POUR FOURNIR
C OPTION EN SORTIE. DE PLUS, LORS DU CALCUL DE LA MATRICE POUR LES
C CORRECTIONS DE NEWTON, LES MATRICES ELEMENTAIRES ONT DEJA ETE
C CALCULEES LORS DE L'ETAPE DES FORCES INTERIEURES ET SONT FOURNIES VIA
C UN ARGUMENT SOUTERRAIN (LE NOM DE L'OBJET JEVEUX EST CONSIDERE COMME
C IDENTIQUE DANS NMFINT ET NMMATR POUR LA VARIABLE MERIGI). A TERME, LE
C CALCUL DE CES MATRICES ELEMENTAIRES AURA EGALEMENT LIEU DANS CETTE
C ROUTINE, CE QUI NE POSERA PLUS LE PROBLEME DE CET ARGUMENT SOUTERRAIN.
C ----------------------------------------------------------------------

C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------

      CHARACTER*32 JEXNUM
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------

      LOGICAL REASMA,TABRET(0:10)
      INTEGER REINCR,REITER,IERR,IECPCO,IMAT
      REAL*8 INSTAM,INSTAP,DIINST,PASMIN
      REAL*8 UN,COEF2(3)
      CHARACTER*8 NOMDDL,TLIMAT(2)
      CHARACTER*16 METCOR,METPRE
      CHARACTER*19 MATASS,MAPREC,MATFRO
      CHARACTER*24 DEPMOI,K24BID
      CHARACTER*24 MERIGI,VERESI,VEDIRI
      CHARACTER*24 MASSE,LIMAT(3)
      CHARACTER*4 TYPMAT,TYPE(3)
      INTEGER IACHAR,JINFC,IACHA2,I,NBCHAR,NBMAT


      DATA VERESI,VEDIRI/'&&RESIDU.LISTE_RESU','&&DIRICH.LISTE_RESU'/
      DATA MERIGI /'&&MEMRIG.LISTE_RESU'/
      DATA MEAMOR/'&&NMMATR.AMORT'/
      DATA NOMDDL/'        '/


C ----------------------------------------------------------------------
      CALL JEMARQ()

      MATASS = '&&MATMAS'
      MAPREC = '&&NMMATR.MAPREC'

      DEPDEL = DEPDEZ

      LICCVG = 0
      
      UN       = 1.D0
      COEF2(1) = UN
      COEF2(2) = COEACC
      COEF2(3) = COEVIT
      TYPE(1) = 'R'
      TYPE(2) = 'R'
      TYPE(3) = 'R'
      TYPMAT   = 'R'


      CALL NMIMPR('IMPR','MATR_ASSE','YTR',0.D0,0)
          
C -- CALCUL DE LA MATRICE DE RIGIDITE

C -- CALCUL DES MATRICES ELEMENTAIRES D AMORTISSEMENT
      IF (LAMORT) THEN
C ======================================================================
C               CALCUL DES MATRICES TANGENTES ELEMENTAIRES
C ======================================================================
         IF (PREMIE.OR.METHOD(5).EQ.'TANGENTE') THEN
           OPTION = 'RIGI_MECA_TANG'
           CALL MERIMO(MODELE,CARELE,MATE,COMREF,COMPOR,LISCHA,CARCRI,
     &                 DEPDEL,POUGD,STADYN,DEPENT,VITENT,VALMOI,VALPLU,
     &                 OPTION,MERIGI,VERESI,VEDIRI,ITERAT+1,TABRET)
         END IF
         CALL JEVEUO(LISCHA//'.INFC','L',JINFC)
         NBCHAR = ZI(JINFC)
         CALL JEVEUO(LISCHA//'.LCHA','L',IACHAR)
         CALL WKVECT('&&MXMASS.LISTE_CHARGE','V V K8',NBCHAR,IACHA2)
         DO 20,I = 1,NBCHAR
            ZK8(IACHA2-1+I) = ZK24(IACHAR-1+I) (1:8)
   20    CONTINUE
         CALL MEAMME('AMOR_MECA',MODELE,NBCHAR,ZK8(IACHA2),MATE,
     &               CARELE,.TRUE.,INSTAM,MERIGI,MEMASS,MEAMOR)
         CALL JEDETR('&&MXMASS.LISTE_CHARGE')
         CALL ASMATR(1,MEAMOR,' ',NUMEDD,SOLVEU,LISCHA,'ZERO','V',1,
     &                  AMORT)
         CALL MTDSCR(AMORT)
      END IF

C -- AU PREMIER PASSAGE, INITIALISATION DES MATRICES MATASS
C -- ET MASSE
      IF (PREMIE) THEN
         PREMIE = .FALSE.
         TLIMAT(1) = MEMASS
         TLIMAT(2) = MEDIRI
         CALL ASMATR (2,TLIMAT,' ',NUMEDD,SOLVEU,
     &                LISCHA,'ZERO','V',1,MASSE)           
         CALL MTDSCR(MASSE)
         LIMAT(1) = MASSE

C -- CALCUL DE LA MATRICE MATASS
         NBMAT = 1
         CALL DETRSD('MATR_ASSE',MATASS)
         CALL MTDEFS(MATASS,MASSE,'V',TYPMAT)
         CALL MTCMBL(NBMAT,TYPE,COEF2,TYPE,LIMAT,TYPMAT,MATASS,
     &               NOMDDL,' ',' ',.TRUE.)
C      FACTORISATION     
         CALL PRERES(SOLVEU,'V',IERR,MAPREC,MATASS)
         IF (IERR.EQ.1)  LICCVG = 1
         CALL MTDSCR(MATASS)
         MATRIX(1) = MATASS
         MATRIX(2) = MAPREC
      END IF

9999  CONTINUE

      CALL JEDEMA()
      END
