      SUBROUTINE MECGME(MODELZ,CARELZ,MATE,CHARGZ,INFCHZ,INSTAP,DEPMOZ,
     &                  DEPDEZ,LMECHZ,INSTAM,COMPOR,CARCRI)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/09/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*24 MODELE,CARELE,CHARGE,INFCHA,DEPMOI,DEPDEL,LMECHP,
     &             COMPOR,CARCRI
      CHARACTER*(*) MODELZ,CARELZ,CHARGZ,INFCHZ,DEPMOZ,DEPDEZ,LMECHZ,
     &              MATE
      REAL*8 INSTAP,INSTAM
C ----------------------------------------------------------------------
C     CALCUL DES MATRICES ELEMENTAIRES DES CHARGEMENTS MECANIQUES
C     DEPENDANT DE LA GEOMETRIE (SUIVEURS)

C IN  MODELZ  : NOM DU MODELE
C IN  CARELZ  : CARACTERISTIQUES DES POUTRES ET COQUES
C IN  MATE    : CHAMP DE MATERIAU
C IN  CHARGZ  : LISTE DES CHARGES
C IN  INFCHZ  : INFORMATIONS SUR LES CHARGEMENTS
C IN  INSTAP  : INSTANT DU CALCUL
C IN  DEPMOZ  : DEPLACEMENT A L'INSTANT TEMMOI
C IN  DEPDEZ  : INCREMENT DE DEPLACEMENT AU COURS DES ITERATIONS
C VAR LMECHZ  : LISTE DES MATRICES ELEMENTAIRES
C IN  INSTAM  : INSTANT MOINS
C IN  COMPOR  : COMPORTEMENT
C IN  CARCRI  : CRITERES DE CONVERGENCE (THETA)

C               & & M E C G ? ? . G   ? ? ?
C               1 2 3 4 5 6 7 8 9 1 1 1 1 1
C                                 0 1 2 3 4

C               POSITION 7-8  : NUMERO DE LA CHARGE
C                               VAUT 00 SI PAS DE CHARGE
C               POSITION 12-14: NUMERO DU VECTEUR ELEMENTAIRE / CHARGE

C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------

      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
      CHARACTER*8 NOMCHA,MATEL,LPAIN(15),LPAOUT(1),K8BID
      CHARACTER*8 LCMP(2),AFFCHA
      CHARACTER*16 OPTION,REPVR,REPCT
      CHARACTER*24 CHTIM2
      CHARACTER*24 CHGEOM,CHCARA(15),CHTIME,CHLAPL,LIGREL
      CHARACTER*24 LIGRMO,LIGRCH,LCHIN(15),LCHOUT(1),KCMP(2)
      INTEGER IBID,IRET,NCHAR,ILME,IERD
      LOGICAL EXIGEO,EXICAR,PREM,BIDON
      COMPLEX*16 CBID
      INTEGER NBCHMX
      PARAMETER (NBCHMX=4)
      INTEGER NBOPT(NBCHMX)
      CHARACTER*6 NOMLIG(NBCHMX),NOMPAF(NBCHMX),NOMOPF(NBCHMX)
      CHARACTER*6 NOMPAR(NBCHMX),NOMOPR(NBCHMX)
      DATA NOMLIG/'.ROTAT','.PESAN','.PRESS','.FCO3D'/
      DATA NOMOPF/'??????','??????','PRSU_F','SFCO3D'/
      DATA NOMPAF/'??????','??????','PRESSF','FFCO3D'/
      DATA NOMOPR/'RO    ','THMG  ','PRSU_R','SRCO3D'/
      DATA NOMPAR/'ROTATR','PESANR','PRESSR','FRCO3D'/
      DATA NBOPT/9,15,9,15/

      CALL JEMARQ()
      MODELE = MODELZ
      CARELE = CARELZ
      CHARGE = CHARGZ
      INFCHA = INFCHZ
      DEPMOI = DEPMOZ
      DEPDEL = DEPDEZ
      LMECHP = LMECHZ
      BIDON = .TRUE.
      CALL DISMOI('F','EXI_THM_CT',MODELE,'MODELE',IBID,REPCT,IERD)
      CALL DISMOI('F','EXI_THM_VR',MODELE,'MODELE',IBID,REPVR,IERD)
      CALL JEEXIN(CHARGE,IRET)
      IF (IRET.NE.0) THEN
        CALL JELIRA(CHARGE,'LONMAX',NCHAR,K8BID)
        IF (NCHAR.NE.0) THEN
          CALL JEVEUO(CHARGE,'L',JCHAR)
          CALL JEVEUO(INFCHA,'L',JINF)
          DO 10 K = 1,NCHAR
            IF (ZI(JINF+NCHAR+K).EQ.4) BIDON = .FALSE.
   10     CONTINUE
        END IF
      END IF

      MATEL = '&&MATGME'
      CALL JEEXIN(LMECHP,IRET)
      IF (IRET.EQ.0) THEN
        LMECHP = MATEL//'.LISTE_RESU'
        CALL MEMARE('V',MATEL,MODELE(1:8),MATE,CARELE,'CHAR_MECA')
        IF (BIDON) THEN
          CALL WKVECT(LMECHP,'V V K24',1,JLME)
          ZK24(JLME) = '&&MATG00.'
        ELSE
          PREM = .TRUE.
          LONLIS = (NBCHMX+ZI(JINF+2*NCHAR+2))*NCHAR
          CALL WKVECT(LMECHP,'V V K24',LONLIS,JLME)
          CALL JEECRA(LMECHP,'LONUTI',0,K8BID)
        END IF
      ELSE
        PREM = .FALSE.
        CALL JELIRA(LMECHP,'LONUTI',NBCHME,K8BID)
        CALL JEVEUO(LMECHP,'E',JLME)
      END IF
      IF (BIDON) GO TO 60

      LIGRMO = MODELE(1:8)//'.MODELE'
      CALL MEGEOM(MODELE(1:8),ZK24(JCHAR) (1:8),EXIGEO,CHGEOM)
      CALL MECARA(CARELE(1:8),EXICAR,CHCARA)

      CHTIME = '&&MECHME.CH_INST_R'
      CALL MECACT('V',CHTIME,'MODELE',LIGRMO,'INST_R  ',1,'INST   ',
     &            IBID,INSTAP,CBID,K8BID)
      CHTIM2 = '&&MECHME.CH_INST_M'
      CALL MECACT('V',CHTIM2,'MODELE',LIGRMO,'INST_R  ',1,'INST   ',
     &            IBID,INSTAM,CBID,K8BID)
      LPAIN(2) = 'PGEOMER'
      LCHIN(2) = CHGEOM
      LPAIN(3) = 'PTEMPSR'
      LCHIN(3) = CHTIME
      LPAIN(4) = 'PMATERC'
      LCHIN(4) = MATE
      LPAIN(5) = 'PCACOQU'
      LCHIN(5) = CHCARA(7)
      LPAIN(6) = 'PCAGNPO'
      LCHIN(6) = CHCARA(6)
      LPAIN(7) = 'PCADISM'
      LCHIN(7) = CHCARA(3)
      LPAIN(8) = 'PDEPLMR'
      LCHIN(8) = DEPMOI
      LPAIN(9) = 'PDEPLPR'
      LCHIN(9) = DEPDEL
      LPAIN(10) = 'PCAORIE'
      LCHIN(10) = CHCARA(1)
      LPAIN(11) = 'PCACABL'
      LCHIN(11) = CHCARA(10)
      LPAIN(12) = 'PCARCRI'
      LCHIN(12) = CARCRI
      LPAIN(13) = 'PINSTMR'
      LCHIN(13) = CHTIM2
      LPAIN(14) = 'PCOMPOR'
      LCHIN(14) = COMPOR
      LPAIN(15) = 'PINSTPR'
      LCHIN(15) = CHTIME
      IF ((REPVR(1:3).EQ.'OUI')) THEN
        LPAOUT(1) = 'PMATUNS'
      ELSE
        LPAOUT(1) = 'PMATUUR'
      END IF
      IF (PREM) THEN
        ILME = 0
        DO 30 ICHA = 1,NCHAR
          INUM = 0
          LCHOUT(1) = MATEL//'. '
          NOMCHA = ZK24(JCHAR+ICHA-1) (1:8)
          LIGRCH = NOMCHA//'.CHME.LIGRE'
          NUMCHM = ZI(JINF+NCHAR+ICHA)
          CALL DISMOI('F','TYPE_CHARGE',ZK24(JCHAR+ICHA-1),'CHARGE',
     &                IBID,AFFCHA,IERD)
          IF (NUMCHM.EQ.4) THEN

C ---- BOUCLES SUR LES TOUS LES TYPES DE CHARGE POSSIBLES SAUF LAPLACE)

            LIGREL = LIGRMO
            DO 20 K = 1,NBCHMX
              LCHIN(1) = LIGRCH(1:13)//NOMLIG(K)//'.DESC'
              CALL EXISD('CHAMP_GD',LCHIN(1),IRET)
              IF (IRET.NE.0) THEN
                IF ((K.NE.2) .OR. ((REPCT(1:3).EQ.'OUI').OR. (REPVR(1:
     &              3).EQ.'OUI'))) THEN
                  IF (AFFCHA(5:7).EQ.'_FO') THEN
                    OPTION = 'RIGI_MECA_'//NOMOPF(K)
                    LPAIN(1) = 'P'//NOMPAF(K)
                  ELSE
                    OPTION = 'RIGI_MECA_'//NOMOPR(K)
                    LPAIN(1) = 'P'//NOMPAR(K)
                  END IF
                  LCHOUT(1) (10:10) = 'G'
                  INUM = INUM + 1
                  CALL CODENT(ICHA,'D0',LCHOUT(1) (7:8))
                  CALL CODENT(INUM,'D0',LCHOUT(1) (12:14))
C               POUR UNE MATRICE NON SYMETRIQUE EN COQUE3D (VOIR TE0486)
                  IF (K.EQ.4) LPAOUT(1) = 'PMATUNS'

                  CALL CALCUL('S',OPTION,LIGREL,NBOPT(K),LCHIN,LPAIN,1,
     &                        LCHOUT,LPAOUT,'V')
                  ILME = ILME + 1
                  ZK24(JLME-1+ILME) = LCHOUT(1)
                  CALL JEECRA(LMECHP,'LONUTI',ILME,K8BID)
                END IF
              END IF
   20       CONTINUE
          END IF

   30   CONTINUE
      ELSE

C ----- LES MATR_ELEM EXISTENT DEJA, ON REGARDE S'ILS DEPENDENT DE
C ----- LA GEOMETRIE

        LIGREL = LIGRMO
        DO 50 I = 1,NBCHME
          IF (ZK24(JLME-1+I) (10:10).EQ.'G') THEN
            CALL LXLIIS(ZK24(JLME-1+I) (7:8),ICHA,IER)
            NOMCHA = ZK24(JCHAR+ICHA-1) (1:8)
            LIGRCH = NOMCHA//'.CHME.LIGRE'

C ---- BOUCLES SUR LES TOUS LES TYPES DE CHARGE POSSIBLES SAUF LAPLACE

            CALL DISMOI('F','TYPE_CHARGE',ZK24(JCHAR+ICHA-1),'CHARGE',
     &                  IBID,AFFCHA,IERD)
            DO 40 K = 1,NBCHMX
              LCHIN(1) = LIGRCH(1:13)//NOMLIG(K)//'.DESC'
              CALL EXISD('CHAMP_GD',LCHIN(1),IRET)
              IF (IRET.NE.0) THEN
                IF ((K.NE.2) .OR. ((REPCT(1:3).EQ.'OUI').OR. (REPVR(1:
     &              3).EQ.'OUI'))) THEN
                  LCHOUT(1) = ZK24(JLME-1+I)
                  IF (AFFCHA(5:7).EQ.'_FO') THEN
                    OPTION = 'RIGI_MECA_'//NOMOPF(K)
                    LPAIN(1) = 'P'//NOMPAF(K)
                  ELSE
                    OPTION = 'RIGI_MECA_'//NOMOPR(K)
                    LPAIN(1) = 'P'//NOMPAR(K)
                  END IF
C               POUR UNE MATRICE NON SYMETRIQUE EN COQUE3D (VOIR TE0486)
                  IF (K.EQ.4) LPAOUT(1) = 'PMATUNS'

                  CALL CALCUL('S',OPTION,LIGREL,NBOPT(K),LCHIN,LPAIN,1,
     &                        LCHOUT,LPAOUT,'V')
                END IF
              END IF
   40       CONTINUE
          END IF
   50   CONTINUE
      END IF

   60 CONTINUE
      LMECHZ = LMECHP
C FIN ------------------------------------------------------------------
      CALL JEDEMA()
      END
