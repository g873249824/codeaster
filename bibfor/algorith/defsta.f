      SUBROUTINE DEFSTA(NMRESZ,NUMRFZ,RAILDZ,LDDL,NOCMP,NBFOR,
     &                  NBDEF,TYDEF,INORD)
      IMPLICIT REAL*8 (A-H,O-Z)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 30/06/2008   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C***********************************************************************
C  P. RICHARD     DATE 09/07/91
C-----------------------------------------------------------------------
C  BUT : CALCULER LES DEFORMEES STATIQUES CORRESPONDANT A UNE FORCE
C        UNITAIRE IMPOSEE SUR LES DDL D'UNE LISTE.
C
C        REMARQUE: UNE FORCE UNITAIRE SUR UN LAGRANGE REVIENT A UN
C                  DEPLACEMENT UNITAIRE.
C
C  LA FORCE UNITAIRE PEUT ETRE IMPOSEE SOIT A UN SEUL DDL DANS LE CAS
C  D'UN DDL PHYSIQUE, SOIT A DEUX DDL DANS LE CAS DE DOUBLES DDL DE
C  LAGRANGE DE BLOCAGE, SOIT A N DDL POUR ETRE BETON.
C
C-----------------------------------------------------------------------
C
C NMRESZ /I/ : NOM UTILISATEUR DU CONCEPT RESULTAT
C NUMRFZ /I/ : NOM UTILISATEUR DU NUME_DDL DE REFERENCE
C RAILDZ /I/ : NOM UTILISATEUR DE LA MATRICE RAIDEUR FACTORISEE
C LDDL   /I/ : LISTE DES DDL A FORCER SUCCESSIVEMENT
C NOCMP  /I/ : VALEURS DES PARAMETRES "NOEUD_CMP" CORRESPONDANTES
C NBFOR  /I/ : NOMBRE DE FORCES UNITAIRES A IMPOSER PAR DEFORMEES
C NBDEF  /I/ : NOMBRE DE DEFORMEES A CALCULER
C TYDEF  /I/ : VALEURS DES PARAMETRES "TYPE_DEFO" CORRESPONDANTS
C INORD  /M/ : NUMERO D'ORDRE DE DEPART POUR STOCKAGE DANS NMRESZ
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      PARAMETER    (NBPABM=8)
C
      INTEGER       LDDL(NBFOR,NBDEF),LDPAR(NBPABM)
      CHARACTER*6   PGC
      CHARACTER*8   NOMRES,MAILLA,KBID
      CHARACTER*16  BMPARA(NBPABM),DEPL,TYDEF,NOCMP(NBDEF)
      CHARACTER*19  RAILDL,NUMREF,NUMDDL
      CHARACTER*24  CHAMNO,NOMCVN,CREFE(2),BLANC
      CHARACTER*(*) NMRESZ, NUMRFZ, RAILDZ
      COMPLEX*16    CBID
C
C-----------------------------------------------------------------------
C
      DATA  BMPARA/
     &  'NUME_MODE  '     , 'FREQ'       , 'NORME'           ,
     &  'NOEUD_CMP'       , 'TYPE_DEFO'          , 'OMEGA2'   ,
     &  'MASS_GENE'      , 'RIGI_GENE' /
      DATA PGC /'DEFSTA'/
      DATA BLANC /'                        '/
      DATA DEPL /'DEPL'/
C
      CALL JEMARQ()
      NOMRES = NMRESZ
      NUMREF = NUMRFZ
      RAILDL = RAILDZ
C
C-----------------------------------------------------------------------
C
      IF(NBDEF.EQ.0) GOTO 9999
C
C --- RECUPERATION DU MODELE DE REFERENCE
C
      CALL DISMOI('F','NOM_MAILLA',NUMREF,'NUME_DDL',IBID,MAILLA,IRT)
      CREFE(1)=MAILLA
      CREFE(2)=NUMREF
C
C --- CONVERSION DU NUMDDL ASSOCIE A LA MATRICE
C
      CALL DISMOI('F','NOM_NUME_DDL',RAILDL,'MATR_ASSE',IBID,NUMDDL,IRT)
      NUMDDL(15:19)='.NUME'
C
      CALL DISMOI('F','NB_EQUA',NUMDDL,'NUME_DDL',NEQ,KBID,IRT)
C
      NOMCVN='&&'//PGC//'.CONV.NUMDDL'
      CALL CONVNU(NUMDDL,NUMREF,NOMCVN,'V',NEQR)
      CALL JEVEUO(NOMCVN,'L',LTCVN)
C
C --- CREATION DU VECTEUR DE TRAVAIL
C
      CALL WKVECT('&&'//PGC//'CHAMNO','V V R',NEQ,LTCHAM)
C
C --- BOUCLE DE CALCUL DES DEFORMEES
C
      DO 10 I=1,NBDEF
C
C ----- GENERATION DU NOM DU CHAMP RESULTAT
C
        CALL RSEXCH(NOMRES,DEPL,INORD,CHAMNO,IER)
        IF ( IER .EQ. 0 ) THEN
          CALL U2MESK('A','ALGORITH2_64',1,CHAMNO)
        ELSE IF ( IER .EQ. 100 ) THEN
          CALL VTCREA(CHAMNO,CREFE,'G','R',NEQR)
        ELSE
          CALL U2MESS('F','ALGORITH2_65')
        ENDIF
C
C ----- INITIALISATION DU SECOND MEMBRE
C
        CALL JEVEUO(RAILDL(1:19)//'.&INT','E',LMAT)
        CALL INIVEC(ZR(LTCHAM),NEQ,LDDL(1,I),NBFOR)
C
C ----- RESOLUTION EN PLACE
C
        CALL RESOU2(RAILDL,0,1,ZR(LTCHAM),CBID)
C
C ----- CONVERSION NUMEROTATION
C
        CHAMNO(20:24)  = '.VALE'
        CALL JEVEUO(CHAMNO,'E',IADVAL)
        CALL COPCVN(NEQR,ZR(LTCHAM),ZR(IADVAL),ZI(LTCVN),1.D0)
C
C ----- SAUVEGARDE DE LA SOLUTION
C
        CALL JELIBE(CHAMNO)
C
C        CHAMNO(20:24)  = '.DESC'

C
C        CHAMNO(20:24)  = '.REFE'

C
        CALL RSNOCH(NOMRES,DEPL,INORD,' ')
C
C ----- STOCKAGE DES PSEUDO PARAMETRES
C
        CALL RSADPA(NOMRES,'E',NBPABM,BMPARA,INORD,0,LDPAR,KBID)
        ZI(LDPAR(1))=INORD
        ZR(LDPAR(2))=0.D0
        ZK24(LDPAR(3))=BLANC
        ZK16(LDPAR(4))=NOCMP(I)
        ZK16(LDPAR(5))=TYDEF
        ZR(LDPAR(6))=0.D0
        ZR(LDPAR(7))=0.D0
        ZR(LDPAR(8))=0.D0
C
C ----- INCREMENT DU NUMERO D'ORDRE
C
        INORD=INORD+1
C
10    CONTINUE
C
      CALL JEDETR(NOMCVN)
      CALL JEDETR('&&'//PGC//'CHAMNO')
C
 9999 CONTINUE
      CALL JEDEMA()
      END
