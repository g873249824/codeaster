      SUBROUTINE NDDOCN (MODELE,PARCRI,PARCRR,CARCRI)
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/09/2000   AUTEUR CIBHHLV L.VIVAN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C ----------------------------------------------------------------------
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*24       MODELE                     ,CARCRI
      INTEGER                          PARCRI(12)
      REAL*8                                  PARCRR(20)
      CHARACTER*16                                PARCRK(20)
C ----------------------------------------------------------------------
C     SAISIE DES CRITERES DE CONVERGENCE POUR DYNA_NON_LINE
C
C IN  MODELE  : NOM DU MODELE
C OUT PARCRI  : PARAMETRES ENTIERS DU CRITERE
C               PARCRI(1) = NB MAXIMUM D'ITERATION
C               PARCRI(2) = 1 TEST EN RELATIF SUR LE RESIDU
C               PARCRI(3) = 1 TEST EN RELATIF SUR L'INCREMENT DE DEPL.
C               PARCRI(4) = 1 TEST EN ABSOLU SUR LE RESIDU
C               PARCRI(5) = 0 ON ARRETE SI PAS CONVERGENCE
C                         = N NOMBRE DE PALIERS POUR LE REDECOUPAGE DU
C                             PAS DE TEMPS EN CAS DE NON CONVERGENCE
C               PARCRI(6) = 1 SI ON TESTE L'INCREMENT DE ETA (PILOTAGE)
C OUT PARCRR  : PARAMETRES REELS DU CRITERE
C OUT CARCRI  : CARTE DES CRITERES DE CONVERGENCE LOCAUX
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER            NUMGD,NCMP,JACMP,N1
      REAL*8             THETA
      CHARACTER*8        K8BID
      CHARACTER*16       K16BID,NOMCMD,NOMCVG,NOMTHE
      CHARACTER*24       LIGRMO
      COMPLEX*16         CBID
      CHARACTER*1 K1BID
C
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
      LIGRMO = MODELE(1:8)//'.MODELE'
C
C --- RECUPERATION DE LA COMMANDE 
C
      CALL GETRES (K8BID,K16BID,NOMCMD)
      IF (NOMCMD(1:14).EQ.'THER_MECA_NOLI') THEN
        NOMCVG = 'CONVERGENCE_MECA'
        NOMTHE = 'PARM_THETA_THM'
      ELSE
        NOMCVG = 'CONVERGENCE'
        NOMTHE = 'PARM_THETA'
      END IF
C
C --- RECUPERATION DES CRITERES DE CONVERGENCE
C
      CALL GETFAC(NOMCVG,IOCC)
      IF ( IOCC .EQ. 1 ) THEN
        CALL GETVR8(NOMCVG,'RESI_GLOB_MAXI',1,1,1,PARCRR(4),PARCRI(4))
        CALL GETVR8(NOMCVG,'RESI_GLOB_RELA',1,1,1,PARCRR(2),PARCRI(2))
        CALL GETVR8(NOMCVG,'INCO_GLOB_RELA',1,1,1,PARCRR(3),PARCRI(3))
        IF ( PARCRI(4)+PARCRI(2)+PARCRI(3).EQ.0 ) THEN
          PARCRI(2) = 1
          PARCRR(2) = 1.D-6
        ENDIF
C
        PARCRI(6) = 0
        IF (NOMCMD(1:13).NE.'DYNA_NON_LINE') THEN
          CALL GETFAC ('PILOTAGE',N1)
          IF (N1.NE.0) THEN
            CALL GETVR8(NOMCVG,'INCO_PILO_RELA',1,1,1,PARCRR(6),
     &                                                     PARCRI(6))
          END IF
        END IF
C
        CALL GETVIS(NOMCVG,'ITER_GLOB_MAXI',1,1,1,PARCRI(1),N1)
        CALL GETVTX(NOMCVG,'ARRET',1,1,1,K8BID,N1)
        PARCRI(5) = 0
        IF ( N1 .GT. 0 ) THEN
          IF ( K8BID  .EQ. 'NON' ) THEN
            PARCRI(5) = 1
          ENDIF
        ENDIF
C
        CALL GETVTX(NOMCVG,'TYPE_MATR_COMP',1,1,1,PARCRK(1), N1)
        CALL GETVTX(NOMCVG,'RESO_INTE',1,1,1,PARCRK(2), N1)
        CALL GETVR8(NOMCVG,'RESI_INTE_RELA',1,1,1,PARCRR(12),N1)
        CALL GETVIS(NOMCVG,'ITER_INTE_MAXI',1,1,1,PARCRI(11),N1)
C
C --- RECUPERATION DU PARAMETRE DE LA THETA-METHODE EVENTUELLE
C --- RECUPERATION DU DECOUPAGE DE L'INTEGRATION DE LA RELATION DE COMP.

C
        PARCRI(12) = 0
        IF ((NOMCMD.EQ.'STAT_NON_LINE').OR.(NOMCMD.EQ.'THER_MECA_NOLI'))
     &  THEN
          CALL GETVR8 (' ',NOMTHE,0,1,1,THETA,IRET)
          CALL GETVIS(NOMCVG,'ITER_INTE_PAS' ,1,1,1,PARCRI(12),N1)
        ENDIF
C
C ----- CREATION DE LA CARTE CONSTANTE DES CRITERES DE CONVERGENCE
C ----- ON RECUPERE LES NOMS DE CMP DANS LE CATALOGUE
C
        CALL JENONU(JEXNOM('&CATA.GD.NOMGD','CARCRI'),NUMGD)
        CALL JEVEUO(JEXNUM('&CATA.GD.NOMCMP',NUMGD),'L',JACMP)
        CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',NUMGD),'LONMAX',NCMP,K1BID)
C
        CARCRI = '&&NMDOCN.CRITERE'
        CALL WKVECT('&&NMDOCN.TRAVR','V V R8',NCMP,IRCMP)
        ZR(IRCMP) = PARCRI(11)
        IF(PARCRK(1)(1:8).EQ.'TANG_VIT') ZR (IRCMP+1) = 0.D0
        IF(PARCRK(1)(1:8).EQ.'TANG_INC') ZR (IRCMP+1) = 1.D0
        IF(PARCRK(2)(1:9).EQ.'IMPLICITE') ZR (IRCMP+5) = 0.D0
        IF(PARCRK(2)(1:13).EQ.'RUNGE_KUTTA_2') ZR (IRCMP+5) = 1.D0
        IF(PARCRK(2)(1:13).EQ.'RUNGE_KUTTA_4') ZR (IRCMP+5) = 2.D0
        ZR(IRCMP+2) = PARCRR(12)
        ZR(IRCMP+3) = THETA
        ZR(IRCMP+4) = PARCRI(12)
        CALL MECACT('V',CARCRI,'MODELE',LIGRMO,'CARCRI',NCMP,ZK8(JACMP),
     &              IBID,ZR(IRCMP),CBID,K8BID)
        CALL JEDETR('&&NMDOCN.TRAVR')
      ENDIF
      CALL JEDEMA()
      END
