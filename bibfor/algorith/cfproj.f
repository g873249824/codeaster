      SUBROUTINE CFPROJ(NOMA  ,DEFICO,NEWGEO,METHOZ,POSNOM,
     &                  ITEMAX,EPSMAX,TOLEOU,DIRAPP,DIR   ,
     &                  COORPT,PROJOP,POSMAM,NUMMAM,JEUPM ,
     &                  KSI1  ,KSI2  ,TAU1M ,TAU2M ,LDIST )
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/04/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      CHARACTER*8  NOMA
      CHARACTER*(*) METHOZ
      CHARACTER*24 DEFICO,NEWGEO
      CHARACTER*3  PROJOP
      INTEGER      POSNOM
      INTEGER      ITEMAX
      REAL*8       EPSMAX
      REAL*8       TOLEOU        
      LOGICAL      DIRAPP,LDIST
      REAL*8       DIR(3),COORPT          
      REAL*8       JEUPM
      INTEGER      POSMAM,NUMMAM
      REAL*8       TAU1M(3),TAU2M(3)
      REAL*8       KSI1,KSI2       
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (TOUTES METHODES - APPARIEMENT - MAIT/ESCL)
C
C CALCUL DE LA PROJECTION DU POINT DE CONTACT SUR LA MAILLE MAITRE
C
C ----------------------------------------------------------------------
C
C ON PART DU NOEUD MAITRE LE PLUS PROCHE DU NOEUD ESCLAVE
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  NEWGEO : NOUVELLE GEOMETRIE (AVEC DEPLACEMENT GEOMETRIQUE)
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  METHOD : METHODE DE CONTACT 'DISCRETE' OU 'CONTINUE'
C IN  POSNOM : NOEUD MAITRE COURANT (POSITION DANS CONTNO)
C IN  ITEMAX : NOMBRE MAXI D'ITERATIONS DE NEWTON POUR LA PROJECTION
C IN  EPSMAX : RESIDU POUR CONVERGENCE DE NEWTON POUR LA PROJECTION
C IN  TOLEOU : TOLERANCE POUR PROJECTION HORE MAILLE
C IN  DIRAPP : VAUT .TRUE. SI APPARIEMENT DANS UNE DIRECTION DE
C              RECHERCHE DONNEE (PAR DIR)
C IN  DIR    : DIRECTION DE RECHERCHE
C IN  COORPT : COORDONNEES DU NOEUD A PROJETER SUR LA MAILLE
C OUT PROJOP : OPERATION DE PROJECTION 
C              'NOP' ON NE FAIT RIEN
C              'ADD' ON AJOUTE L'APPARIEMENT DE CE NOEUD ESCLAVE
C              'SUP' ON SUPPRIME L'APPARIEMENT DE CE NOEUD ESCLAVE
C OUT JEUPM  : VALEUR DU JEUPM MINIMUM
C OUT POSMAM : MAILLE MAITRE CORRESPONDANT AU JEUPM MINIMUM 
C               (INDICE DANS CONTMA)
C OUT NUMMAM : MAILLE MAITRE CORRESPONDANT AU JEUPM MINIMUM 
C               (INDICE ABSOLU DANS MAILLAGE)
C OUT KSI1   : COORDONNEE PARAMETRIQUE 1 DU NOEUD PROJETE
C OUT KSI2   : COORDONNEE PARAMETRIQUE 2 DU NOEUD PROJETE
C OUT TAU1M  : PREMIERE TANGENTE SUR LA MAILLE MAITRE EN KSI1
C OUT TAU2M  : SECONDE TANGENTE SUR LA MAILLE MAITRE EN KSI2 
C OUT LDIST  : VAUT .FALSE. SI POINT A ETE RAMENE DANS ELEMENT 
C              DE REFERENCE PARCE QUE HORS DE LA MAILLE
C  NB: LE REPERE EST ORTHORNORME ET TEL QUE LA NORMALE POINTE VERS
C  L'INTERIEUR DE LA MAILLE
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      JDECMA
      INTEGER      IFM,NIV
      INTEGER      IMAM,NTMAM,NBNOM
      INTEGER      NIVERR,NDIM,NDIMG
      REAL*8       COORMA(27)
      REAL*8       R8GAEM,R8PREM
      CHARACTER*8  ALIAS,FFORME,METHOD,NOMMAI
      CHARACTER*24 CONTMA,MANOCO,PMANO,NDIMCO
      INTEGER      JMACO,JMANO,JPOMA,JDIM
      LOGICAL      LPOINT,LPOUTR 
      REAL*8       TAU1ML(3),TAU2ML(3)
      REAL*8       KSI1L,KSI2L     
      LOGICAL      LDMIN,LDISTL     
      REAL*8       JEUMIN,JEUL
      INTEGER      POSMIN,POSMAL,NUMMAL
      REAL*8       T1MIN(3),T2MIN(3)
      REAL*8       XIMIN,YIMIN 
      CHARACTER*3  PROJMI      
      REAL*8       NOOR
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)     
C      
C --- RECUPERATION DE QUELQUES DONNEES      
C
      CONTMA = DEFICO(1:16)//'.MAILCO'
      MANOCO = DEFICO(1:16)//'.MANOCO'
      PMANO  = DEFICO(1:16)//'.PMANOCO'
      NDIMCO = DEFICO(1:16)//'.NDIMCO'
      CALL JEVEUO(CONTMA,'L',JMACO)
      CALL JEVEUO(MANOCO,'L',JMANO)
      CALL JEVEUO(PMANO ,'L',JPOMA)
      CALL JEVEUO(NDIMCO,'L',JDIM)
C
C --- INITIALISATIONS
C
      JEUMIN = R8GAEM()
      XIMIN  = R8GAEM()
      YIMIN  = R8GAEM()
      POSMIN = 0
      LDMIN  = .TRUE.       
      METHOD = METHOZ  
      PROJMI = 'NOP'
      NDIMG  = ZI(JDIM)
C
C --- TYPE DE FORMULATION DE CONTACT
C      
      IF (METHOD.EQ.'CONTINUE') THEN
        FFORME = 'CONTINUE'
      ELSEIF (METHOD.EQ.'DISCRETE') THEN
        FFORME = 'STANDARD'
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- NOMBRE DE MAILLES MAITRES ATTACHEES AU NOEUD MAITRE 
C   
      NTMAM   = ZI(JPOMA+POSNOM) - ZI(JPOMA+POSNOM-1)
C
C --- DECALAGE DANS LES TABLEAUX POUR LE NOEUD MAITRE
C      
      JDECMA  = ZI(JPOMA+POSNOM-1)
C
C --- BOUCLE SUR LES MAILLES MAITRES 
C 
      DO 50 IMAM = 1,NTMAM
C
C --- CARACTERISTIQUES DE LA MAILLE MAITRE
C      
        POSMAL = ZI(JMANO+JDECMA+IMAM-1)
        CALL CFCARM(NOMA  ,DEFICO,NEWGEO,POSMAL,NUMMAL,
     &              ALIAS ,NOMMAI,NDIM  ,NBNOM ,COORMA)       
C
C --- TYPE DE MAILLES PARTICULIERES
C 
        LPOUTR = (ALIAS(1:2).EQ.'SG').AND.(NDIMG.EQ.3)
        LPOINT = ALIAS.EQ.'PO1'       
C
C --- MAILLE POINT INTERDITE
C           
        IF (LPOINT) THEN
          CALL U2MESK('F','CONTACT3_36',1,NOMMAI)    
        ENDIF          
C
C --- CALCUL DE LA PROJECTION DU POINT SUR LA MAILLE MAITRE
C
        CALL MMPROJ(ALIAS ,NBNOM ,NDIM  ,COORMA,COORPT,
     &              ITEMAX,EPSMAX,TOLEOU,DIRAPP,DIR   ,
     &              FFORME,KSI1L ,KSI2L ,TAU1ML,TAU2ML ,
     &              LDISTL,NIVERR)
C  
C --- GESTION DES ERREURS LORS DU NEWTON LOCAL POUR LA PROJECTION
C   
        IF (NIVERR.EQ.1) THEN   
          CALL U2MESG('F','CONTACT3_13',1,NOMMAI,0,0,3,COORPT)       
        ENDIF      
C
C --- CALCUL DU JEUPM MINIMUM
C
        CALL MMJEUX(ALIAS ,NBNOM ,NDIM  ,COORMA,FFORME,
     &              KSI1L ,KSI2L ,COORPT,JEUL )    
C
C --- CHOIX DE L'APPARIEMENT SUIVANT LE RESULTAT DE LA PROJECTION
C
        CALL CFCHOI(METHOZ,PROJMI,JEUL  ,JEUMIN,POSMAL,
     &              POSMIN,TAU1ML,T1MIN ,TAU2ML,T2MIN ,
     &              KSI1L ,XIMIN ,KSI2L ,YIMIN ,LDISTL,
     &              LDMIN ) 
C
        IF (PROJMI.NE.'NOP') THEN
          PROJOP = PROJMI
        ENDIF     
C            
   50 CONTINUE
C
C --- RECOPIE INFORMATIONS
C
      POSMAM = POSMIN
      IF (POSMAM.NE.0) THEN
        NUMMAM = ZI(JMACO+POSMAM-1)
      ELSE
        CALL ASSERT(.FALSE.)  
      ENDIF   
      CALL DCOPY(3,T1MIN,1,TAU1M,1)
      CALL DCOPY(3,T2MIN,1,TAU2M,1)
      KSI1   = XIMIN
      KSI2   = YIMIN
      LDIST  = LDMIN
      JEUPM  = JEUMIN
C
C --- ORTHOGONALISATION VECTEURS TANGENTS
C     
      IF (LPOUTR) THEN
        CALL NORMEV(TAU1M  ,NOOR  )
        IF (NOOR.LE.R8PREM()) THEN
          CALL U2MESK('F','CONTACT3_38',1,NOMMAI) 
        ENDIF
      ELSE
        CALL CFORTH(NDIMG ,TAU1M ,TAU2M ,NIVERR)  
        IF (NIVERR.EQ.1) THEN
          CALL U2MESG('F','CONTACT3_14',1,NOMMAI,0,0,3,COORPT) 
        ELSEIF (NIVERR.EQ.2) THEN
          CALL U2MESG('F','CONTACT3_34',1,NOMMAI,0,0,3,COORPT)  
        ENDIF
      ENDIF        
C
      CALL JEDEMA()
C 
      END
