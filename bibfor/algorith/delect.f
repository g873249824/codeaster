      SUBROUTINE DELECT (MODELZ, EXI, SOLVDE, PARMET, PARCRI)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 15/05/2007   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE PBADEL P.BADEL

      IMPLICIT NONE

      LOGICAL        EXI
      CHARACTER*(*)  MODELZ
      CHARACTER*19  SOLVDE
      REAL*8         PARMET(23), PARCRI(11)
C ----------------------------------------------------------------------
C  LECTURE DES OPERANDES RELATIFS AUX LOIS DELOCALISEES (DE)
C ----------------------------------------------------------------------
C      IN  MODELE K8   NOM DU MODELE MECANIQUE
C      OUT EXI    L    TRUE SI IL EXISTE UNE PARTIE GRAD_VARI
C IN/JXOUT SOLVDE K19  NOM DU SOLVEUR POUR LAGRANGIEN AUGMENTE
C      VAR PARMET      PARAMETRES DE LA METHODE DE RESOLUTION
C                            1 : REAC_INCR
C                            2 : REAC_ITER
C                           10 : ITER_LINE_MAXI
C                           11 : RESI_LINE_RELA
C                       OUT 20 : RHO (LAGRANGIEN)
C                       OUT 21 : ITER_DUAL_MAXI (LAGRANGIEN)
C                       OUT 22 : ITER_PRIM_MAXI (LAGRANGIEN)
C      VAR PARCRI      PARAMETRES DES CRITERES DE CONVERGENCE
C                            1 : ITER_GLOB_MAXI
C                            2 : RESI_GLOB_RELA
C                            3 : RESI_GLOB_MAXI
C                            4 : ARRET (0=OUI, 1=NON)
C                       OUT 10 : RESI_PRIM_ABSO (LAGRANGIEN)
C                       OUT 11 : RESI_DUAL_ABSO (LAGRANGIEN)
C ----------------------------------------------------------------------
      INTEGER      IRET, IBID
      INTEGER      ITEREX, ITERIN
      REAL*8       R, INCOCV, ECARCV
      REAL*8       R8VIDE
      CHARACTER*3 REP
      
C ----------------------------------------------------------------------


C -- INITIALISATION

      PARCRI(10) = R8VIDE()
      PARCRI(11) = R8VIDE()


C on deconnecte exi_grad_vari
      EXI = .FALSE.
      IF (.NOT. EXI) GOTO 9999

C -- PREPARATION DU SOLVEUR

      CALL CRESOL(SOLVDE,'_NON_LOCAL')


C -- LECTURE DES PARAMETRES DE L'ALGORITHME

      CALL GETVR8('LAGR_NON_LOCAL','R',1,1,1,R,IRET)
      PARMET(20) = R

      CALL GETVIS('LAGR_NON_LOCAL','ITER_DUAL_MAXI',1,1,1,ITEREX,IRET)
      PARMET(21) = ITEREX

      CALL GETVIS('LAGR_NON_LOCAL','ITER_PRIM_MAXI',1,1,1,ITERIN,IRET)
      PARMET(22) = ITERIN

      CALL GETVR8('LAGR_NON_LOCAL','RESI_PRIM_ABSO',1,1,1,INCOCV,IRET)
      IF (IRET.EQ.1) PARCRI(10) = INCOCV

      CALL GETVR8('LAGR_NON_LOCAL','RESI_DUAL_ABSO',1,1,1,ECARCV,IRET)
      IF (IRET.EQ.1) PARCRI(11) = ECARCV


 9999 CONTINUE
      END
