      REAL*8 FUNCTION GEVAT1 ( A, B, WMOY )
C RESPONSABLE CAMBIER S.CAMBIER
      IMPLICIT NONE
      REAL*8   A, B, WMOY
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 28/11/2005   AUTEUR CAMBIER S.CAMBIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
C  GENERATEUR DE VARIABLE ALEATOIRE DU MODELE PROBABILISTE 
C  PARAMETRIQUE A SUPPORT COMPACT (TYPE 1), C.A.D. UNE LOI 
C  EXPONENTIELLE TRONQUEE
C
C  A    : BORNE INFERIEURE DU SUPPORT DE LA LOI DE PROBABILITE DE 
C         LA VARIABLE ALEATOIRE W.
C  B    : BORNE SUPPERIEURE DU SUPPORT DE LA LOI DE PROBABILITE DE 
C         LA VARIABLE ALEATOIRE W.
C  WMOY : VALEUR MOYENNE DE LA VARIABLE ALEATOIRE W.
C ----------------------------------------------------------------------
      REAL*8     ALPHA, FTYP1, K, TEST, EPS, U, NMCRI9, BSUP
      INTEGER    I,NITMAX
      PARAMETER  (EPS=1.D-4,NITMAX=100000)
C
      FTYP1(A,B,WMOY,K) = 1D0/(WMOY-(A*EXP(-A*K) 
     +                     - B*EXP(-B*K))/(EXP(-A*K) - EXP(-B*K)))

C
      IF (A.GE.B) THEN
        CALL UTDEBM('F','GEVAT1','ON DOIT AVOIR BORNE_INF < BORNE_SUP ')
        CALL UTIMPR('L','   BORNE_INF = ', 1, A )
        CALL UTIMPR('L','   BORNE_SUP = ', 1, B )
        CALL UTFINM
      ELSE IF (WMOY.LE.A.OR.WMOY.GE.B) THEN
         CALL UTDEBM('F','GEVAT1','VALE_MOY TROP GRAND OU TROP PETIT')
         CALL UTIMPR('L','  BORNE_INF  = ', 1, A )
         CALL UTIMPR('S',' < VALE_MOY = ', 1, WMOY )
         CALL UTIMPR('S',' < BORNE_SUP= ', 1, B )
         CALL UTFINM
      ENDIF

      IF (EXP(-B*K).LT.1.D-12) THEN
        CALL UTDEBM('A','GEVAT1','BORNE_SUP TRES GRANDE : PB '//
     &                      'PRECISION POSSIBLE, VERIFIEZ')
        CALL UTIMPK('L',' LA DISTRIBUTION DES VALEURS ',1,'GENEREES')
        CALL UTFINM
      ENDIF

C --- CALCUL DE LA VARIABLE K
C NE CONVERGE PAS AVEC ZEROF3 => ON FAIT UN POINT FIXE

      K=1.D0/(WMOY-A)

      I=1
1     CONTINUE
      TEST = FTYP1(A,B,WMOY,K)
      IF (ABS((TEST-K)/K).GT.EPS) THEN
         K = TEST
         IF (I.GT.NITMAX) THEN
           CALL UTMESS('F','GEVAT1','NON CONVERGENCE DU CALCUL DE K ')
         ELSE
           I=I+1
           GOTO 1
       ENDIF 
      ENDIF 
C
      IF (K.LE.0D0) THEN
         CALL UTMESS('F','GEVAT1','PB CALCUL DE K : K < 0 ')
      ENDIF 

C
C --- GENERATION DE LA VARIABLE ALEATOIRE 
C
      ALPHA = EXP(-A*K) - EXP(-B*K)

      CALL GETRAN ( U )
      GEVAT1 = -(LOG(EXP(-A*K)-ALPHA*U))/K
C      
      END
