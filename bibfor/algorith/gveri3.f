      SUBROUTINE GVERI3(CHFOND,TAILLR,CONFIG,LNOFF,THLAGR,THLAG2,NDEG,
     &                  TRAV1,TRAV2,TRAV3)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 07/01/2013   AUTEUR LADIER A.LADIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================

      IMPLICIT NONE
C
C     ------------------------------------------------------------------
C
C FONCTION REALISEE:     DANS LE CADRE DE X-FEM et FEM
C
C     - METHODES THETA_LAGRANGE,THETA_LAGRANGE_REGU
C
C         POUR CHAQUE NOEUD DU FOND DE FISSURE GAMM0 ON RECUPERE
C         LE DOUBLET (RINF, RSUP )
C
C     - METHODE THETA_LEGENDRE
C
C         POUR CHAQUE NOEUD DU FOND DE FISSURE GAMM0 ON RECUPERE
C         LE TRIPLET ( DEGRE DES POLYNOMES DE LEGENDRE, RINF, RSUP )
C
C     ------------------------------------------------------------------
C ENTREE:
C        CHFOND : NOMS DES NOEUDS
C        TAILLR : TAILLES DE MAILLES CONNECTEES AUX NOEUDS
C        CONFIG : CONFIGURATION DE LA FISSURE EN FEM
C        LNOFF  : NOMBRE DE NOEUD DE GAMM0
C        THLAGR : SI THETA_LAGRANGE  THLAGR = .TRUE.
C        THLAG2 : SI THETA_LAGRANGE_REGU  THLAG2 = .TRUE.
C        NDEG   : DEGRE DES POLYNOMES DE LEGENDRE
C
C SORTIE:
C        RINF          ( OBJET TRAV1 )
C        RSUP          ( OBJET TRAV2 )
C        MODULE(THETA) ( OBJET TRAV3 )
C     ------------------------------------------------------------------
C
      INCLUDE 'jeveux.h'
      CHARACTER*24      TRAV0,TRAV1,TRAV2,TRAV3,CHFOND,ABSGAM,TAILLR
      CHARACTER*8       CONFIG,NOMPAR(1),RINFF,RSUPF
C
      INTEGER           LNOFF,NDEG,NBRE,NR,NRF,NBPAR,I,J
      INTEGER           IADRT0,IADRT1,IADRT2,IADRT3,IFON,IADABS,IER
      INTEGER           IATMNO
C
      REAL*8            MAXTAI,MINTAI,RINF,RSUP,XL,VALPAR(1),VALRES
      REAL*8            VALR(2)
C
      LOGICAL           THLAGR,THLAG2
C
      INTEGER      IARG
C
      CALL JEMARQ()
C
      IF(THLAG2) THEN
        NBRE   = 1+LNOFF/2 - 1
      ELSEIF(THLAGR) THEN
        NBRE   = LNOFF - 1
      ELSE
        NBRE = NDEG
      ENDIF
C
C ALLOCATION DE 3 OBJETS DE TRAVAIL
C
      TRAV0 = '&&VERIFG.GAM0'//'           '
      TRAV1 = '&&VERIFG.RINF'//'           '
      TRAV2 = '&&VERIFG.RSUP'//'           '
      TRAV3 = '&&VERIFG.THET'//'           '
      CALL WKVECT(TRAV0,'V V K8',LNOFF,IADRT0)
      CALL WKVECT(TRAV1,'V V R',LNOFF,IADRT1)
      CALL WKVECT(TRAV2,'V V R',LNOFF,IADRT2)
      CALL WKVECT(TRAV3,'V V R',(NBRE+1)*LNOFF,IADRT3)
C
      CALL GETVR8 ('THETA', 'R_INF', 1,IARG, 1,RINF, NR)
      CALL GETVR8 ('THETA', 'R_SUP', 1,IARG, 1,RSUP, NR)
      IF (NR.NE.0 .AND. RSUP .LE. RINF) THEN
           CALL U2MESS('F','RUPTURE1_6')
      ENDIF
      CALL GETVID ('THETA', 'R_INF_FO', 1,IARG, 1,RINFF, NRF)
      CALL GETVID ('THETA', 'R_SUP_FO', 1,IARG, 1,RSUPF, NRF)
C     RECUPERATION DE RINF ET DE RSUP DANS LA SD FOND_FISS
      IF(NR.EQ.0.AND.NRF.EQ.0)THEN
        IF(CONFIG.EQ.'DECOLLEE') CALL U2MESS('F','RUPTURE1_7')
        CALL JEVEUO ( TAILLR, 'L', IATMNO )
        MAXTAI = 0.D0
        MINTAI = ZR(IATMNO)
        DO 1 J=1,LNOFF
          MAXTAI = MAX(MAXTAI,ZR(IATMNO-1+J))
          MINTAI = MIN(MINTAI,ZR(IATMNO-1+J))
1       CONTINUE
        RINF = 2*MAXTAI
        RSUP = 4*MAXTAI
        VALR(1) = RINF
        VALR(2) = RSUP
        CALL U2MESR('I','RUPTURE1_5',2,VALR)
        VALR(1) = MINTAI
        VALR(2) = MAXTAI
        IF(MAXTAI.GT.2*MINTAI)CALL U2MESR('A','RUPTURE1_16',2,VALR)
      ENDIF
C
      CALL JEVEUO(CHFOND,'L',IFON)
      ABSGAM='&&GVERI3.TEMP     .ABSCU'
      CALL WKVECT(ABSGAM,'V V R',LNOFF,IADABS)
      DO 10 I=1,LNOFF
        ZR(IADABS-1+(I-1)+1)=ZR(IFON-1+4*(I-1)+4)
 10   CONTINUE
      XL=ZR(IADABS-1+(LNOFF-1)+1)

      IF(.NOT.THLAGR .AND. .NOT.THLAG2) THEN
C
C METHODE THETA_LEGENDRE
C
         DO 50 J=1,LNOFF
              ZK8(IADRT0 + J - 1) = 'PTFONFIS'
              IF (NRF.NE.0) THEN
                 NBPAR = 1
                 NOMPAR(1) = 'ABSC'
                 VALPAR(1) = ZR(IADABS + J - 1)
                 CALL FOINTE('FM',RINFF,NBPAR,NOMPAR,VALPAR,VALRES,IER)
                 ZR(IADRT1 + J - 1) = VALRES
                 CALL FOINTE('FM',RSUPF,NBPAR,NOMPAR,VALPAR,VALRES,IER)
                 ZR(IADRT2 + J - 1) = VALRES
                 IF (ZR(IADRT2 + J - 1) .LE. ZR(IADRT1 + J - 1)) THEN
                    CALL U2MESS('F','RUPTURE1_6')
                 ENDIF
              ELSE
                ZR(IADRT1 + J - 1) = RINF
                ZR(IADRT2 + J - 1) = RSUP
              ENDIF
50       CONTINUE
C
         CALL GLEGEN(NBRE,LNOFF,XL,ABSGAM,ZR(IADRT3))

      ELSE IF(THLAGR.OR.THLAG2) THEN
C
C METHODES THETA_LAGRANGE,THETA_LAGRANGE_REGU
C
         DO 60 J=1,LNOFF
              ZK8(IADRT0 + J - 1) = 'PTFONFIS'
              IF (NRF.NE.0) THEN
                 NBPAR = 1
                 NOMPAR(1) = 'ABSC'
                 VALPAR(1) = ZR(IADABS + J - 1)
                 CALL FOINTE('FM',RINFF,NBPAR,NOMPAR,VALPAR,VALRES,IER)
                 ZR(IADRT1 + J - 1) = VALRES
                 CALL FOINTE('FM',RSUPF,NBPAR,NOMPAR,VALPAR,VALRES,IER)
                 ZR(IADRT2 + J - 1) = VALRES
                 IF (ZR(IADRT2 + J - 1) .LE. ZR(IADRT1 + J - 1)) THEN
                    CALL U2MESS('F','RUPTURE1_6')
                 ENDIF
              ELSE
                ZR(IADRT1 + J - 1) = RINF
                ZR(IADRT2 + J - 1) = RSUP
              ENDIF
60       CONTINUE
C
      ENDIF
C
      CALL JEDETR (ABSGAM)
      CALL JEDETR (TRAV0)
C
      CALL JEDEMA()
      END
