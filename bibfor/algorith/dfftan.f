      SUBROUTINE DFFTAN(NDIM,BASLO,INOFF,VTAN)

      IMPLICIT NONE

      REAL*8   BASLO(*),VTAN(3)
      INTEGER  NDIM,INOFF

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/04/2012   AUTEUR LADIER A.LADIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
C FONCTION REALISEE (OPERATEURS DEFI_FOND_FISS, CALC_G) :
C
C      RETOURNE LE VECTEUR TANGENT AU FOND DE FISSURE (3EME VECTEUR DE 
C      LA BASE LOCALE EN FOND DE FISSURE) EN UN NOEUD
C
C IN 
C   NDIM   : DIMENSION DU MAILLAGE
C   BASLO  : VALEURS DE LA BASE LOCALE EN FOND DE FISSURE
C   INOFF  : INDICE LOCAL DU NOEUD DE LA BASE DEMANDE

C OUT
C   VTAN   : VALEURS DU TANGENT AU FOND DE FISSURE EN CE NOEUD
C
C-----------------------------------------------------------------------
C
      REAL*8 VDIR(3),VNOR(3)
C
C-----------------------------------------------------------------------

      CALL ASSERT((NDIM.EQ.2).OR.(NDIM.EQ.3))

      IF (NDIM.EQ.3) THEN

        CALL DFFDIR(NDIM,BASLO,INOFF,VDIR)

        CALL DFFNOR(NDIM,BASLO,INOFF,VNOR)

        CALL PROVEC(VDIR,VNOR,VTAN)
      
      ELSEIF (NDIM.EQ.2) THEN

        VTAN(1) = 0.D0
        VTAN(2) = 0.D0
        VTAN(3) = 1.D0
        
      ENDIF

      END
