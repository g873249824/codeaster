      SUBROUTINE CFGLI2(NOMA  ,DEFICO,RESOCO,NEQ   ,NBLIAI,
     &                  NBLIAC,LLF   ,AJLIAI,SPLIAI,INDIC ,
     &                  LIASUP)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'

      CHARACTER*24 RESOCO,DEFICO
      CHARACTER*8  NOMA
      INTEGER      INDIC
      INTEGER      AJLIAI,SPLIAI,NBLIAI,NEQ
      INTEGER      NBLIAC,LLF
      LOGICAL      LIASUP
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - RESOLUTION)
C
C VERIFICATION QUE LES LIAISONS SONT BIEN GLISSANTES - VERSION 2D
C
C ----------------------------------------------------------------------
C
C
C IN  DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  NOMA   : NOM DU MAILLAGE
C IN  NEQ    : NOMBRE D'EQUATIONS
C IN  NBLIAI : NOMBRE DE LIAISONS DE CONTACT
C I/O NBLIAC : NOMBRE DE LIAISONS ACTIVES
C I/O AJLIAI : INDICE DANS LA LISTE DES LIAISONS ACTIVES DE LA DERNIERE
C              LIAISON CORRECTE DU CALCUL
C              DE LA MATRICE DE CONTACT ACM1AT
C I/O SPLIAI : INDICE DANS LA LISTE DES LIAISONS ACTIVES DE LA DERNIERE
C              LIAISON AYANT ETE CALCULEE POUR LE VECTEUR CM1A
C I/O LLF    : NOMBRE DE LIAISONS DE FROTTEMENT
C OUT INDIC  : +1 ON A RAJOUTE UNE LIAISON
C              -1 ON A ENLEVE UNE LIAISON
C OUT LIASUP : .TRUE. SI AU MOINS UNE LIAISON SUPPRIMEE
C
C
C
C
      CHARACTER*19 LIAC,TYPL,MU
      INTEGER      JLIAC,JTYPL,JMU
      CHARACTER*24 TACFIN,APPOIN,APCOFR,APDDL
      INTEGER      JTACF,JAPPTR,JAPCOF,JAPDDL
      CHARACTER*19 DDEPLC,DDEPL0,DDELT
      INTEGER      JDDEPC,JDDEP0,JDDELT
      CHARACTER*24 JEUITE
      INTEGER      JJEUIT
      INTEGER      LLF1,LLF2,BTOTAL,LFMIN
      INTEGER      ILIAI,ILIAC,ILIAC2
      INTEGER      JDECAL,NBDDL,POSIT
      REAL*8       COEFFF,XPDT,XCOS
      REAL*8       JEXINC,JEXOLD,JEXNEW,VAL1,VAL2
      REAL*8       R8MIEM
      CHARACTER*1  TYPEAJ
      CHARACTER*2  TYPLIA,TYPEC0,TYPEF0
      INTEGER      CFMMVD,ZTACF
      LOGICAL      LELPIV
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      LFMIN  = 0
      INDIC  = 0
      LLF1   = 0
      LLF2   = 0
      TYPEAJ = 'A'
      TYPEC0 = 'C0'
      TYPEF0 = 'F0'
      BTOTAL = NBLIAC + LLF + LLF1 + LLF2
C
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APCOFR = RESOCO(1:14)//'.APCOFR'
      APDDL  = RESOCO(1:14)//'.APDDL'
      LIAC   = RESOCO(1:14)//'.LIAC'
      TYPL   = RESOCO(1:14)//'.TYPL'
      TACFIN = RESOCO(1:14)//'.TACFIN'
      JEUITE = RESOCO(1:14)//'.JEUITE'
      MU     = RESOCO(1:14)//'.MU'
      CALL JEVEUO(APPOIN,'L',JAPPTR)
      CALL JEVEUO(APCOFR,'L',JAPCOF)
      CALL JEVEUO(APDDL, 'L',JAPDDL)
      CALL JEVEUO(LIAC,  'L',JLIAC )
      CALL JEVEUO(TYPL  ,'L',JTYPL )
      CALL JEVEUO(TACFIN,'L',JTACF )
      CALL JEVEUO(JEUITE,'L',JJEUIT)
      CALL JEVEUO(MU,    'E',JMU   )
      ZTACF  = CFMMVD('ZTACF')
C
C --- ACCES AUX CHAMPS DE TRAVAIL
C --- DDEPL0: INCREMENT DE SOLUTION SANS CORRECTION DU CONTACT
C --- DDEPLC: INCREMENT DE SOLUTION APRES CORRECTION DU CONTACT
C --- DDELT : INCREMENT DE SOLUTION ITERATION DE CONTACT
C
      DDEPL0 = RESOCO(1:14)//'.DEL0'
      DDEPLC = RESOCO(1:14)//'.DELC'
      DDELT  = RESOCO(1:14)//'.DDEL'
      CALL JEVEUO(DDEPL0(1:19)//'.VALE','L',JDDEP0)
      CALL JEVEUO(DDEPLC(1:19)//'.VALE','L',JDDEPC)
      CALL JEVEUO(DDELT (1:19)//'.VALE','L',JDDELT)
C
C --- LIAISON GLISSANTE ?
C
      DO 710 ILIAC = 1, BTOTAL
        ILIAI  = ZI(JLIAC+ILIAC-1)
        TYPLIA = ZK8(JTYPL+ILIAC-1)(1:2)
        IF (TYPLIA.EQ.TYPEC0) THEN
          DO 720 ILIAC2 = ILIAC+1, BTOTAL
            IF (ZI(JLIAC-1+ILIAC2).EQ.ILIAI) GOTO 710
 720      CONTINUE
C
C ------- ON NE PREND PAS EN COMPTE UNE LIAISON A PIVOT NUL
C
          CALL CFELPV(ILIAI ,TYPEF0,RESOCO,NBLIAI,LELPIV)
          IF (LELPIV) GOTO 710
C
          COEFFF = ZR(JTACF+ZTACF*(ILIAI-1)+0)
          JDECAL = ZI(JAPPTR+ILIAI-1)
          NBDDL  = ZI(JAPPTR+ILIAI) - ZI(JAPPTR+ILIAI-1)
C
C ------- JEU TANGENT AVANT L'ITERATION DE NEWTON
C
          JEXOLD = ZR(JJEUIT+3*(ILIAI-1)+2-1)
C
C ------- CALCUL DU JEU TANGENT TOTAL
C
          CALL CALADU(NEQ,NBDDL,ZR(JAPCOF+JDECAL),
     &                ZI(JAPDDL+JDECAL),ZR(JDDELT),VAL1  )
          CALL CALADU(NEQ,NBDDL,ZR(JAPCOF+JDECAL),
     &                ZI(JAPDDL+JDECAL),ZR(JDDEPC),VAL2  )
          JEXNEW = JEXOLD + VAL1 + VAL2
          XPDT   = ZR(JMU+3*NBLIAI+ILIAI-1)*JEXNEW
          IF (XPDT.LT.0.D0) THEN
C
C --------- LA LIAISON EST EN FAITE ADHERENTE
C
            POSIT  = NBLIAC + LLF + 1
            CALL CFTABL(INDIC ,NBLIAC,AJLIAI,SPLIAI,LLF   ,
     &                  LLF1  ,LLF2  ,RESOCO,TYPEAJ,POSIT,
     &                  ILIAI ,TYPEF0)
            CALL CFIMP2(DEFICO,RESOCO,NOMA  ,ILIAI ,'F3'  ,
     &                  'ADH' )
            LFMIN = LFMIN + 1
            ZR(JMU+3*NBLIAI+ILIAI-1) = 0.D0
          ELSEIF (XPDT.EQ.0.D0) THEN
C
C --------- LA LIAISON EST BIEN GLISSANTE
C --------- ON MET A JOUR MU_G
C
            CALL CALADU(NEQ,NBDDL,ZR(JAPCOF+JDECAL),
     &                  ZI(JAPDDL+JDECAL),ZR(JDDEP0),JEXINC)
            JEXNEW = JEXOLD + JEXINC
            IF (ABS(JEXNEW).LE.R8MIEM()) THEN
              ZR(JMU+3*NBLIAI+ILIAI-1) = 0.D0
            ELSE
              XCOS   = JEXNEW / ABS(JEXNEW)
              ZR(JMU+3*NBLIAI+ILIAI-1) = COEFFF * XCOS
            ENDIF
          ENDIF
        ENDIF
 710  CONTINUE
C
      IF (LFMIN.GT.0) CALL ASSERT(INDIC.EQ.1)
C
      LIASUP = LFMIN.NE.0
C
      CALL JEDEMA()
C
      END
