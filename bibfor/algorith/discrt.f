      SUBROUTINE DISCRT(FF0,FF1,FF2,NBPT,AMOR,F)
      IMPLICIT REAL*8 (A-H,O-Z)
C     -----------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/10/95   AUTEUR GIBHHAY A.Y.PORTABILITE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RENVOIT UNE DICRETISATION DE L'INTERVALLE F1,F2 EN NBPT POINT QUI
C ASSURE UNE BONNE DESCRPTION DE LA FONCTION H=1/(1-F**2+2I*F*AMOR)
C     -----------------------------------------------------------------
C IN  :F1,F2     R8  :BORNES DE L'INTERVALLE DISCRETISE
C IN  :AMOR      R8  :AMORTISSEMENT GENERALISE
C IN  :NBPT      INT :NOMBRE DE POINTS DESIRES
C OUT :F(*)      R8  :DICRETISATION
C     -----------------------------------------------------------------
      INTEGER NBPT,I1
      REAL*8 FF0,FF1,FF2,F1,F2,F(*),AMOR,PHI,PHI1,PHI2
      COMPLEX*16 ICMPLX,HORIG,HBID
      F1=FF1/FF0
      F2=FF2/FF0
      ICMPLX=DCMPLX(0.D0,1.D0)
      IF(AMOR.EQ.0.D0)THEN
        DO 104,I1=1,NBPT
          F(I1)=FF1+(FF2-FF1)/(NBPT-1)*(I1-1)
 104    CONTINUE
        GOTO 9999
      ENDIF
      HORIG=1/2.D0/AMOR/ICMPLX/2.D0
       CALL TRANSF(F1,AMOR,HBID)
      PHI1=PHASE((HBID-HORIG)/ICMPLX)
       CALL TRANSF(F2,AMOR,HBID)
      PHI2=PHASE((HBID-HORIG)/ICMPLX)
      DO 103,I1=1,NBPT
      PHI=PHI1+(PHI2-PHI1)/(NBPT-1)*(I1-1)
      F(I1)=FITOF(PHI,F1,F2,AMOR,HORIG)*FF0
 103  CONTINUE
 9999 CONTINUE
      END
