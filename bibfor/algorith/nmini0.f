      SUBROUTINE NMINI0(NOMPRO,ETA   ,LONDE ,LIMPED,LBID  ,
     &                  K8BID ,K13BID,K24BID,LICCVG,NUMINS,
     &                  PREMIE,MTCPUI,MTCPUP,LISCH2,BASENO,
     &                  INPSCO,FINPAS,ZFON  ,FONACT,FOPREC,
     &                  CMD   ,RESULT,SDDYNA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/11/2007   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      INTEGER      ZFON
      LOGICAL      LONDE , LIMPED, LBID,   PREMIE
      LOGICAL      MTCPUI, MTCPUP, FINPAS
      INTEGER      LICCVG(5)
      INTEGER      NUMINS
      REAL*8       ETA
      CHARACTER*6  NOMPRO
      CHARACTER*8  K8BID,BASENO,RESULT
      CHARACTER*13 K13BID,INPSCO
      CHARACTER*16 CMD
      CHARACTER*19 LISCH2,SDDYNA
      CHARACTER*24 K24BID
      LOGICAL      FONACT(ZFON)
      LOGICAL      FOPREC
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (INITIALISATIONS)
C
C PREMIERES INITIALISATIONS DE MECA_NON_LINE: MISES A ZERO
C
C ----------------------------------------------------------------------
C
C
C IN  NOMPRO : NOM DE LA ROUTINE APPELANTE (OP0070 A PRIORI)
C IN  RESULT : NOM DU CONCEPT RESULTAT
C OUT ETA    : PARAMETRE PILOTAGE
C OUT LONDE  : BOOLEEN D'EXISTENCE DE CHARGES 'ONDE_PLANE'
C OUT LIMPED : BOOLEEN DE PRESENCE D'ELEMENTS 'IMPE_ABSO'
C OUT LICCVG : CODE RETOUR CONVERGENCE CONTACT
C OUT NUMINS : COMPTEUR DE LA BOUCLE EN TEMPS
C OUT PREMIE : BOOLEEN POUR LE PREMIER PAS
C OUT MTCPUI : BOOLEEN DE MANQUE TEMPS CPU (ITERATION)
C OUT MTCPUP : BOOLEEN DE MANQUE TEMPS CPU (PAS DE TEMPS)
C OUT LISCH2 : NOM DE LA SD INFO CHARGE POUR STOCKAGE DANS LA SD
C              RESULTAT
C OUT BASENO : NOM DE BASE DES CONCEPTS
C OUT INPSCO : SD CONTENANT LA LISTE DES NOMS POUR LA SENSIBILITE
C OUT FINPAS : BOOLEEN POUR INDIQUER QU'ON EST A LA FIN DES PAS
C OUT FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C OUT FOPREC : BOOLEAN POUR DUPLICATION SECOND MEMBRE (DYNAMIQUE,
C                       ALPHA_METHODE)
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      CHARACTER*24 NOOBJ,TSCH
      INTEGER      I,JTSCH
C
C ----------------------------------------------------------------------
C
C -- INITIALISATIONS UTILES

      BASENO = '&&'//NOMPRO
      INPSCO = '&&'//NOMPRO//'_PSCO'
      SDDYNA = RESULT(1:8)//'.SDDYNA'
C
C --- INITIALISATION SDDYNA
C
      TSCH = SDDYNA(1:15)//'.TYPE_SCH'
      CALL WKVECT(TSCH,'V V K16',8,JTSCH)
      IF (CMD(1:4).EQ.'STAT') THEN
        ZK16(JTSCH+1-1) = 'STATIQUE'
      ENDIF

      ETA    = 0.D0
      LONDE  = .FALSE.
      LIMPED = .FALSE.
      LBID   = .FALSE.
      FINPAS = .FALSE.
      K8BID  = ' '
      K13BID = ' '
      K24BID = ' '

C -- INITIALISATION DES INDICATEURS DE CONVERGENCE
C              LICCVG(1) : PILOTAGE
C                        =  0 CONVERGENCE
C                        =  1 PAS DE CONVERGENCE
C                        = -1 BORNE ATTEINTE
C              LICCVG(2) : INTEGRATION DE LA LOI DE COMPORTEMENT
C                        = 0 OK
C                        = 1 ECHEC DANS L'INTEGRATION : PAS DE RESULTATS
C                        = 3 SIZZ NON NUL (DEBORST) ON CONTINUE A ITERER
C              LICCVG(3) : TRAITEMENT DU CONTACT
C                        = 0 OK
C                        = 1 ECHEC (ITER > 2*NBLIAI+1)
C              LICCVG(4) : MATRICE DE CONTACT
C                        = 0 OK
C                        = 1 MATRICE DE CONTACT SINGULIERE
C              LICCVG(5) : MATRICE DU SYSTEME (MATASS)
C                        = 0 OK
C                        = 1 MATRICE SINGULIERE
      LICCVG(1) = 0
      LICCVG(2) = 0
      LICCVG(3) = 0
      LICCVG(4) = 0
      LICCVG(5) = 0

C -- INITIALISATION BOUCLE EN TEMPS
      NUMINS = 1
      PREMIE = .TRUE.
      MTCPUI = .FALSE.
      MTCPUP = .FALSE.

C     DETERMINATION DU NOM DE LA SD INFO_CHARGE STOCKEE
C     DANS LA SD RESULTAT
C             12345678    90123    45678901234
      NOOBJ ='12345678'//'.1234'//'.EXCIT.INFC'
      CALL GNOMSD(NOOBJ,10,13)
      LISCH2 = NOOBJ(1:19)

C -- FONCTIONNALITES ACTIVEES
      DO 10 I=1,ZFON
        FONACT(I) = .FALSE.
  10  CONTINUE


C -- SECOND MEMBRE DUPLIQUE (ALPHA_METHODE - DYNAMIQUE)
      FOPREC = .FALSE.

      END
