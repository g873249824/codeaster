      SUBROUTINE OP0188()
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXATR
C
C ----------------------------------------------------------------------
C
C OPERATEUR RAFF_XFEM_ZONE
C
C CALCUL D'UN INDICATEUR BINAIRE (APPELEE PAR RAFF_XFEM)
C
C
      INTEGER      IBID,IARG,IRET,I,J,INO,NUNO,NUMA,NBNOZO
      INTEGER      JNCMP,JVALV,NCMP,JMAFON,NMAFON,JMA,NBMA,NBNO,NBMALI
      INTEGER      JLST,JLSN,JNOEU,NBMAC,JADR,ADRVLC,ACNCIN
      INTEGER      IDLIMA,NBMAZO
      REAL*8       RAYON,DIST
      CHARACTER*8  FISS,MODELE,MA,K8B,CHOUT
      CHARACTER*16 TYPDIS,K16BID
      CHARACTER*19 CARTE,CNSLT,CNSLN
      CHARACTER*24 MAFOND,LISTMA,CNXINV,LISNOZ,LISMAZ
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()

C     ------------------------------------
C     1) INITIALISATIONS
C     ------------------------------------

C     NOM DU CONCEPT EN SORTIE : CHOUT
      CALL GETRES(CHOUT,K16BID,K16BID)

C     NOM DU CONCEPT FISSURE
      CALL GETVID(' ','FISSURE',1,IARG,1,FISS,IBID)

C     RECUP DU RAYON DE LA ZONE
      CALL GETVR8(' ','RAYON',1,IARG,1,RAYON,IBID)

C     TYPE DE SD_FISS_XFEM EN ENTREE (FISSURE/INTERFACE)
      CALL DISMOI('F','TYPE_DISCONTINUITE',FISS,'FISS_XFEM',
     &                                                 IBID,TYPDIS,IRET)

C     MODELE ASSOCIE A LA FISSURE/INTERFACE
      CALL DISMOI('F','NOM_MODELE',FISS,'FISS_XFEM',IBID,MODELE,IRET)

C     MAILLAGE ASSOCIE AU MODELE
      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,MA,IRET)
      CALL DISMOI('F','NB_MA_MAILLA',MA,'MAILLAGE',NBMA,K8B,IRET)
      CALL DISMOI('F','NB_NO_MAILLA',MA,'MAILLAGE',NBNO,K8B,IRET)

C     INITIALISATION DE LA CARTE AVEC LA VALEUR 0
      CARTE = CHOUT
      CALL ALCART('G',CARTE,MA,'NEUT_R')
      CALL JEVEUO(CARTE//'.NCMP','E',JNCMP)
      CALL JEVEUO(CARTE//'.VALV','E',JVALV)
      NCMP = 1
      ZK8(JNCMP-1+1)   = 'X1'
      ZR(JVALV-1+1)   = 0.D0
      CALL NOCART(CARTE,1,' ','NOM',0,' ',0,' ',NCMP)

C     CREATION DE LA LISTE DES MAILLES QUI AURONT LA VALEUR 1
      LISTMA = '&&OP0188.LISTMA'
      CALL WKVECT(LISTMA,'V V I',NBMA,JMA)

C     -------------------------------------------------------------
C     2) REMPLISSAGE DE LA LISTE AVEC LES MAILLES CONTENANT LE FOND
C        OU L'INTERFACE (ON PARLERA DE 'FOND'  DANS LES 2 CAS)
C     --------------------------------------------------------------
C
      IF (TYPDIS.EQ.'FISSURE') THEN
        MAFOND = FISS//'.MAILFISS.MAFOND'
      ELSEIF (TYPDIS.EQ.'INTERFACE') THEN
        MAFOND = FISS//'.MAILFISS  .HEAV'
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF

      CALL JEVEUO(MAFOND,'L',JMAFON)
      CALL JELIRA(MAFOND,'LONMAX',NMAFON,K8B)
      DO 10 I=1,NMAFON
        ZI(JMA-1+I)=ZI(JMAFON-1+I)
 10   CONTINUE

C     ------------------------------------------------------------------
C     3) REMPLISSAGE DE LA LISTE AVEC LES MAILLES DONT UN NOEUD EST
C        DANS LA ZONE
C     ------------------------------------------------------------------
C
C     ON CREE D'ABORD LA LISTE DES NOEUDS QUI SONT LA ZONE
      LISNOZ = '&&OP0188.NOEU'
      CALL WKVECT(LISNOZ,'V V I',NBNO,JNOEU)

C     RECUP DES LEVEL SETS
      CNSLT = '&&OP0188.CNSLT'
      CNSLN = '&&OP0188.CNSLN'
      CALL CNOCNS(FISS//'.LNNO','V',CNSLN)
      CALL JEVEUO(CNSLN//'.CNSV','L',JLSN)
      IF (TYPDIS.EQ.'FISSURE') THEN
        CALL CNOCNS(FISS//'.LTNO','V',CNSLT)
        CALL JEVEUO(CNSLT//'.CNSV','L',JLST)
      ENDIF

C     REMPLISSAGE DE LA LISTE DES NOEUDS QUI SONT LA ZONE
      NBNOZO=0
      DO 300 INO=1,NBNO
        IF (TYPDIS.EQ.'FISSURE') THEN
          DIST=SQRT(ZR(JLST-1+INO)**2+ZR(JLSN-1+INO)**2)
        ELSEIF (TYPDIS.EQ.'INTERFACE') THEN
          DIST=SQRT(ZR(JLSN-1+INO)**2)
        ENDIF
        IF (DIST.LE.RAYON) THEN
          NBNOZO = NBNOZO + 1
          ZI(JNOEU-1+NBNOZO) = INO
        ENDIF
 300  CONTINUE

C     EMULATION DE DEFI_GROUP/CREA_GROUP_MA/OPTION='APPUI'
      LISMAZ = '&&OP0188.LISMAZ'
      CALL WKVECT ( LISMAZ, 'V V I', NBMA, IDLIMA )

C     CONNECTIVITE INVERSE
      CNXINV='&&OP0188.CNXINV'
      CALL JEEXIN(CNXINV,IRET)
      IF (IRET.EQ.0) THEN
C       ON AIMERAIT LA STOCKER DANS LA BASE GLOBALE AU CAS OU ON EN AIT
C       ENCORE BESOIN (POUR LA FISSURE SUIVANTE) MAIS ON A PAS LE DROIT
        CALL CNCINV(MA,IBID,0,'V',CNXINV)
      ENDIF
      CALL JEVEUO ( JEXATR(CNXINV,'LONCUM'), 'L', ADRVLC )
      CALL JEVEUO ( JEXNUM(CNXINV,1)       , 'L', ACNCIN )

      DO 310 I = 1 , NBNOZO
         NUNO  = ZI(JNOEU+I-1)
         NBMAC = ZI(ADRVLC+NUNO+1-1) - ZI(ADRVLC+NUNO-1)
         JADR = ZI(ADRVLC+NUNO-1)
         DO 320 J = 1 , NBMAC
            NUMA = ZI(ACNCIN+JADR-1+J-1)
            ZI(IDLIMA+NUMA-1) = 1
 320     CONTINUE
 310  CONTINUE
C
C     REMPLISSAGE DE LA LISTE A LA SUITE
      NBMAZO = 0
      DO 330 I = 1 , NBMA
         IF ( ZI(IDLIMA+I-1).EQ.1) THEN
           NBMAZO = NBMAZO + 1
           ZI(JMA-1+NMAFON+NBMAZO)=I
         ENDIF
 330  CONTINUE

C     NB DE MAILLES DANS LA LISTE
      NBMALI = NMAFON + NBMAZO

C     -------------------------------------------------------------
C     4) STOCKAGE DANS LA CARTE ET TRANSFORMATION EN CHAM_ELEM
C     --------------------------------------------------------------

C     STOCKAGE DANS LA CARTE
      ZK8(JNCMP-1+1) = 'X1'
      ZR(JVALV-1+1)  = 1.D0
      CALL NOCART (CARTE,3,' ','NUM',NBMALI,K8B,ZI(JMA),' ',NCMP)
      CALL TECART(CARTE)

      CALL JEDEMA()
      END
