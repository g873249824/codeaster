      SUBROUTINE NTREPR (RESULT,PARTPS,DERNIE,VTEMP,VHYDR,NOMCH,
     &                   MODELE,MATE,CARELE,LISCHA)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 08/11/2007   AUTEUR SALMONA L.SALMONA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE                            DURAND C.DURAND
C
C ----------------------------------------------------------------------
C
C COMMANDES DE THERMIQUE : PRISE EN COMPTE
C D'UN ETAT INITIAL NON NUL (MOT-CLE TEMP_INIT).
C ----------------------------------------------------------------------
C
      IMPLICIT NONE
C
C 0.1. ==> ARGUMENTS
C
      CHARACTER*8  MODELE,MATE,CARELE
      CHARACTER*24 RESULT,VTEMP,VHYDR,NOMCH
      CHARACTER*19 LISCHA,K19B,PARTPS
      CHARACTER*24 K24B
      INTEGER      DERNIE
C
C 0.2. ==> COMMUNS
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
C 0.3. ==> VARIABLES LOCALES
C
CC      CHARACTER*6 NOMPRO
CC      PARAMETER ( NOMPRO = 'NTREPR' )
C
      INTEGER      IFM,IUNIFI,IRET,JINST,NUMARC,DIARCH,DINUAR
      REAL*8       TPSNP1,DIINST
      CHARACTER*8  K8BID
      CHARACTER*16 NOMSYM, TYPRES, NOMCMD 
C
C ----------------------------------------------------------------------
C
C====
C 1. PREALABLE
C====
C
      CALL GETRES ( K8BID, TYPRES, NOMCMD )
C ---  NOUVEAU CONCEPT
C
      IF (DERNIE.EQ.0) THEN
        NUMARC=0
      ELSE
        NUMARC=DINUAR(PARTPS)-1
      ENDIF
      TPSNP1=DIINST(PARTPS,0)
C
      IFM = IUNIFI('MESSAGE')
C
C====
C 2. COPIE DES CHAMPS A L'INSTANT INITIAL DANS LA STRUCTURE DE RESULTAT
C====
C
C 2.1. ==> TEMPERATURE
C
C               1234567890123456
      NOMSYM = 'TEMP            '
      CALL RSEXCH (RESULT,NOMSYM,NUMARC,NOMCH,IRET)
      IF (IRET.EQ.110) THEN
        CALL RSAGSD (RESULT,NUMARC)
        CALL RSEXCH (RESULT,NOMSYM,NUMARC,NOMCH,IRET)
      ENDIF
      CALL COPISD('CHAMP_GD','G',VTEMP(1:19),NOMCH(1:19))
      CALL RSNOCH (RESULT,NOMSYM,NUMARC,' ')
      WRITE (IFM,1010) NOMSYM,NUMARC,TPSNP1
C
C 2.2. ==> POUR LE NON-LINEAIRE
C
C                           1234567890123
      IF ( NOMCMD(1:13).NE.'THER_LINEAIRE') THEN
C                 1234567890123456
        NOMSYM = 'HYDR_ELNO_ELGA  '
        CALL RSEXCH (RESULT,NOMSYM,NUMARC,NOMCH,IRET)
        CALL COPISD('CHAMP_GD','G',VHYDR(1:19),NOMCH(1:19))
        CALL RSNOCH (RESULT,NOMSYM,NUMARC,' ')
        WRITE (IFM,1010) NOMSYM,NUMARC,TPSNP1
      ENDIF
C
C 2.3. ==> MEMORISATION DE L'INSTANT
C
      CALL RSADPA (RESULT,'E',1,'INST',NUMARC,0,JINST,K8BID)
      ZR(JINST) = TPSNP1
C
C
C-----------------------------------------------------------------------
C      ARCHIVAGE DU MODELE, MATERIAU, CARA_ELEM ET DE LA SD CHARGE

      CALL RSSEPA(RESULT(1:8),NUMARC,MODELE,MATE,CARELE,LISCHA)

 1010 FORMAT (1P,3X,'CHAMP    STOCKE   :',1X,A16,10X,
     &        ' NUME_ORDRE:',I8,' INSTANT:',D12.5,/)
      END
