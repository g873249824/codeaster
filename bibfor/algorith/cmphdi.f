      SUBROUTINE CMPHDI(CK,CM,NDIM,NBMOD,NITER,XCRIT,CEIGEN,CMOD,
     &NDIMAX,CMAT1,CMAT2,CVECT,CVECT1,ALPHA,BETA,LAMBD1,LAMBD2,
     &INTERV,IFIC)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/04/2011   AUTEUR COURTOIS M.COURTOIS 
C TOLE CRS_1404
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***********************************************************************
C    B. GUIGON     P. RICHARD                  DATE 06/04/92
C-----------------------------------------------------------------------
C  BUT:  < COMPLEXE MODE PROBLEME HERMITIEN DICHOTOMIE INVERSE >
C
C   CALCULER LES N PREMIERS MODES PROPRES DE LA BANDE LAMBD1, LAMBD2
C   D'UN PROBLEME AUX VALEURS PROPRES A MATRICES RAIDEUR ET MASSE
C   COMPLEXES HERMITIENNES STOCKEES TRIANGULAIRES SUPERIEURES
C                     CK*X= L CM*X
C
C    METHODE D'ITERATION INVERSE ASSOCIEE A UN SHIFT DE CHACUNE DES
C    VALEURS PROPRES ET A UNE SEPARATION PREALABLE DE CES VALEURS
C
C-----------------------------------------------------------------------
C
C CK       /I/: MATRICE RAIDEUR DU PROBLEME
C CM       /I/: MATRICE MASSE DU PROBLEME
C NDIM     /I/: DIMENSION DES MATRICES
C NBMOD    /M/: NOMBRE DE MODES PROPRES DESIRE/EXISTANT
C NITER    /I/: NOMBRE MAX D'ITERATIONS PAR MODE
C XCRIT    /I/: TOLERANCE DE COLINEARITE RELATIVE (CRITERE CONVERGENCE)
C CEIGEN   /O/: VALEURS PROPRES COMPLEXES DU PROBLEME
C CMOD     /O/: MODES PROPRES COMPLEXES SOLUTIONS
C NDIMAX   /I/: NOMBRE DE DDL GENERALISES DES MODES >=NDIM
C CMAT1    /M/: MATRICE COMPLEXE DE TRAVAIL
C CMAT2    /M/: MATRICE COMPLEXE DE TRAVAIL
C CVECT    /M/: VECTEUR COMPLEXE DE TRAVAIL
C CVECT1   /M/: VECTEUR COMPLEXE DE TRAVAIL
C ALPHA    /M/: VECTEUR REEL DE TRAVAIL
C BETA     /M/: VECTEUR REEL DE TRAVAIL
C LAMBD1   /I/: BORNE INFERIEURE DE L'INTERVALE DE RECHERCHE
C LAMBD2   /I/: BORNE SUPERIEURE DE L'INTERVALE DE RECHERCHE
C INTERV   /I/: LONGUEUR MAXIMALE D'UN INTERVALE CONTENANT UNE VP
C IFIC     /I/: NUMERO D'UNITE LOGIQUE
C
C-----------------------------------------------------------------------
C
      INTEGER    NDIM,NBMOD,NITER,IFIC
      COMPLEX*16 CK(*),CM(*)
      COMPLEX*16 CEIGEN(NBMOD),CMOD(NDIMAX,NBMOD),CMOD0(NDIM)
      COMPLEX*16 CMAT1(*),CMAT2(NDIM,NDIM)
      COMPLEX*16 CVECT(NDIM),CVECT1(NDIM),CVEC0(NDIM)
      REAL*8     ALPHA(NDIM+1),BETA(NDIM+1),INTERV
      REAL*8     LAMBD1,LAMBD2,XCRIT
      INTEGER    I,J,CT,IPIVO
      INTEGER VALI
      COMPLEX*16 CSHIFT
      REAL*8     ECART
      LOGICAL    SORTIE
C
C-----------------------------------------------------------------------
C
      WRITE(IFIC,*)'     '
      WRITE(IFIC,*)'     '
      WRITE(IFIC,*)'     '
      WRITE(IFIC,*)'****************************************************
     &*******************'
      WRITE(IFIC,*)'         '
      WRITE(IFIC,*)'               CALCUL MODAL PAR CMPHDI'
      WRITE(IFIC,*)'         '
C
C
C        SEPARATION DES VALEURS PROPRES
C
      CALL SEPAVP(CK,CM,CMAT1,NDIM,ALPHA,BETA,NBMOD,
     &            LAMBD1,LAMBD2,INTERV,IFIC)
C
      WRITE(IFIC,*)'     '
      WRITE(IFIC,100)
C
C        INITIALISATION DES VECTEURS POUR LES ITERATIONS
C
      DO 66 IV=1,NDIM
        CVECT(IV)=DCMPLX(0.D0,0.D0)
        CVEC0(IV)=DCMPLX(0.D0,0.D0)
        CMOD0(IV)=DCMPLX(0.D0,0.D0)
 66   CONTINUE

      CALL CVALEA(NDIM,CMOD,NDIMAX,NBMOD)
C
C        BOUCLE SUR LES MODES
C
      DO 10 J=1,NBMOD
C
C        INITIALISATION DE LA MATRICE SHIFTEE, ET COPIE DANS LES
C        MATRICES DE TRAVAIL
C
        CSHIFT=DCMPLX((ALPHA(J)+BETA(J))/2.D0,0.D0)
        DO 20 I=1, NDIM*(NDIM+1)/2
          CMAT1(I)=CK(I)-CSHIFT*CM(I)
 20     CONTINUE
C
C        CALCUL DE LA MATRICE CM*(CK-SHIFT*CM)**-1
C
        CALL TRLDC(CMAT1,NDIM,IPIVO)
        IF(IPIVO.NE.0) THEN
           VALI = IPIVO
           CALL U2MESG('F', 'ALGORITH12_53',0,' ',1,VALI,0,0.D0)
        ENDIF
C
C
C   CALCUL DE LA MATRICE INVERSE DU PROBLEME
C
        DO 50 IV=1,NDIM
           IVDIAG = IV*(IV-1)/2+1
           DO 60 I=1,NDIM
              IF (I.LE.IV) THEN
                 CMAT2(I,IV)=CM(IVDIAG+IV-I)
              ELSE
                 IDIAG = I*(I-1)/2+1
                 CMAT2(I,IV)=DCONJG(CM(IDIAG+I-IV))
              ENDIF
 60        CONTINUE
 50     CONTINUE
        CALL RRLDC(CMAT1,NDIM,CMAT2,NDIM)
C
C        INITIALISATION DES VARIABLES DE LA BOUCLE
C
        SORTIE=.FALSE.
        CALL CVNORM(CM,CMOD(1,J),NDIM,IRETOU)
        IF(IRETOU.EQ.1) CALL U2MESS('F','ALGORITH2_22')

        CT=0
C
C         ITERATION INVERSE PROPREMENT DITE
C
 30     CONTINUE
        IF (SORTIE) GOTO 40
C      RECOPIE DU VECTEUR DE L'ITERATION PRECEDENTE
        CT=CT+1
        CALL CMATVE(CMAT2,CMOD(1,J),CVECT1,NDIM)
        CALL CVNORM(CM,CVECT1,NDIM,IRETOU)
        IF(IRETOU.EQ.1) CALL U2MESS('F','ALGORITH2_22')
        CALL CTESCV(CVECT1,CMOD(1,J),CVEC0,CMOD0,NDIM,ECART)
        CALL ZCOPY(NDIM,CMOD(1,J),1,CMOD0,1)
        CALL ZCOPY(NDIM,CVECT1,1,CVEC0,1)
        IF (ECART.LE.XCRIT) SORTIE=.TRUE.
        IF (CT.GE.NITER) SORTIE=.TRUE.
        GOTO 30
 40     CONTINUE
C
C         CALCUL DE LA VALEUR PROPRE PAR LE COEFFICIENT DE RAYLEIGH
C
        CALL SESQUI(CK,CMOD(1,J),NDIM,CEIGEN(J))
C
C         IMPRESSION DES RESULTATS
C
C
C       WRITE(IFIC,*)' ',J,'       ',CT,'       ',ECART,
C    &  '      ',CEIGEN(J)
C
        WRITE(IFIC,110) J,CT,ECART,DBLE(CEIGEN(J)),DIMAG(CEIGEN(J))
 10   CONTINUE
C
 100  FORMAT('NUMERO       ', 'ITERATION         ',
     &       'ERREUR           ', 'VALEUR PROPRE')
 110  FORMAT(I4,11X,I4,10X,D10.3,5X,'  (',D7.2,', ',D7.2,' )')
C
      END
