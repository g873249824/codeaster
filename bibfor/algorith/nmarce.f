      SUBROUTINE NMARCE(RESULT,SDPOST,SDDISC,DEFICO,RESOCO,          
     &                  FONACT,SDDYNA,INSTAN,NUMARC,FORCE ,
     &                  COMPOR,DEPL  ,VITE  ,ACCE  ,SIGM  ,
     &                  VARI  )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/08/2011   AUTEUR MACOCCO K.MACOCCO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INTEGER      FONACT(*)
      CHARACTER*8  RESULT
      CHARACTER*19 SDDYNA,SDPOST,SDDISC
      CHARACTER*24 DEFICO,RESOCO
      INTEGER      NUMARC
      REAL*8       INSTAN
      CHARACTER*19 DEPL,SIGM,VARI,VITE,ACCE,COMPOR
      LOGICAL      FORCE
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - ARCHIVAGE )
C
C ARCHIVAGE DES CHAMPS
C
C ----------------------------------------------------------------------
C
C
C IN  RESULT : NOM UTILISATEUR DU CONCEPT RESULTAT
C IN  COMPOR : CARTE DECRIVANT LE TYPE DE COMPORTEMENT
C IN  SDPOST : SD POUR POST-TRAITEMENTS (CRIT_FLAMB ET MODE_VIBR)
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  RESOCO : SD DE RESOLUTION DU CONTACT
C IN  COMPOR : CARTE DECRIVANT LE TYPE DE COMPORTEMENT
C IN  DEPL   : VECTEUR DEPLACEMENT
C IN  VITE   : VECTEUR VITESSE
C IN  ACCE   : VECTEUR ACCELERATION
C IN  SIGM   : VECTEUR CONTRAINTES
C IN  VARI   : VECTEUR VARIABLES INTERNES
C IN  FORCE  : VRAI SI ON SOUHAITE FORCER L'ARCHIVAGE DE TOUS LES CHAMPS
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  SDPOST : SD POUR POST-TRAITEMENTS (CRIT_FLAMB ET MODE_VIBR)
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE
C IN  INSTAN : INSTANT D'ARCHIVAGE
C IN  NUMARC : NUMERO D'ARCHIVAGE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      NBCHMX
      PARAMETER    (NBCHMX = 99)
C
      CHARACTER*24 TYPECH(NBCHMX)
      CHARACTER*19 NOMSCH(NBCHMX)
      CHARACTER*19 VECMOD
      LOGICAL      NDYNLO,LDYNA
      LOGICAL      ISFONC,LFLAM,LVIBR,LCONT,LSPRNO
      LOGICAL      LXFFM ,LXFCM ,LXCZM
      LOGICAL      DIINCL,CFDISL,LNOEU
      INTEGER      IBID,IRET,NBCHEF,ICHAMP
      REAL*8       R8BID
      CHARACTER*19 XINDCO,XCOHES,XSEUCO
      CHARACTER*19 CNSINR,PRNO,CFPRNO
      INTEGER      JCFPRN
      CHARACTER*19 VALECO,K19BLA
      CHARACTER*24 TYPCHA
      CHARACTER*19 NOMCHA
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      K19BLA = ' '
      CALL NMARCZ(' ',K19BLA,TYPECH,NOMSCH,NBCHEF)
      CALL ASSERT(NBCHEF.EQ.1)
C
C --- FONCTIONNALITES ACTIVEES
C
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE' )
      LFLAM  = ISFONC(FONACT,'CRIT_FLAMB')
      LVIBR  = ISFONC(FONACT,'MODE_VIBR' )
      LCONT  = ISFONC(FONACT,'CONTACT'   )
      LXFCM  = ISFONC(FONACT,'CONT_XFEM')
      LXFFM  = ISFONC(FONACT,'FROT_XFEM')
C
C --- CHAMPS STANDARDS
C
      CALL NMARCZ('COMPORTEMENT',COMPOR,TYPECH,NOMSCH,NBCHEF)
      CALL NMARCZ('DEPL'        ,DEPL  ,TYPECH,NOMSCH,NBCHEF)
      CALL NMARCZ('SIEF_ELGA'   ,SIGM  ,TYPECH,NOMSCH,NBCHEF)
      CALL NMARCZ('VARI_ELGA'   ,VARI  ,TYPECH,NOMSCH,NBCHEF)
C
C --- CHAMPS POUR LA DYNAMIQUE
C
      IF (LDYNA) THEN
        CALL NMARCZ('VITE'     ,VITE  ,TYPECH,NOMSCH,NBCHEF)
        CALL NMARCZ('ACCE'     ,ACCE  ,TYPECH,NOMSCH,NBCHEF)
      ENDIF
C
C --- CONTACT
C   
      IF (LCONT) THEN
        LNOEU = CFDISL(DEFICO,'ALL_INTEG_NOEUD')
        IF (LNOEU) THEN
          IF (LXFCM.AND.(NUMARC.EQ.0)) THEN
            GOTO 22
          ENDIF
          CALL RSEXCH(RESULT,'VALE_CONT',NUMARC,VALECO,IRET)
          CNSINR = RESOCO(1:14)//'.VALE'
          CFPRNO = RESOCO(1:14)//'.PRNO'
          CALL JEVEUO(CFPRNO,'E',JCFPRN)
          PRNO   = ZK24(JCFPRN)(1:19)
          IF (PRNO.EQ.' ') THEN
            LSPRNO = .TRUE.
          ELSE
            LSPRNO = .FALSE.
          ENDIF
          CALL CNSCNO(CNSINR,PRNO,'NON','G',VALECO,'F',IBID)
          CALL RSNOCH(RESULT,'VALE_CONT',NUMARC,' ')
          CALL NMIMPR('IMPR','ARCHIVAGE','VALE_CONT',INSTAN,NUMARC)
          IF (LSPRNO) THEN
            CALL DISMOI('F','PROF_CHNO',VALECO,'CHAM_NO' ,
     &                  IBID,PRNO,IRET)
            ZK24(JCFPRN) = PRNO
          ENDIF 
        ENDIF
      ENDIF
   22 CONTINUE   
C
C --- XFEM
C      
      IF (LXFCM.AND.(NUMARC.GT.0)) THEN
        LXCZM  = CFDISL(DEFICO,'EXIS_XFEM_CZM')
        XINDCO = RESOCO(1:14)//'.XFIN'
        XCOHES = RESOCO(1:14)//'.XCOH'
        XSEUCO = RESOCO(1:14)//'.XFSE'
        CALL NMARCZ('INDC_ELGA',XINDCO,TYPECH,NOMSCH,NBCHEF)
        IF (LXCZM) THEN 
          CALL NMARCZ('COHE_ELGA',XCOHES,TYPECH,NOMSCH,NBCHEF)
        ENDIF  
        IF (LXFFM) THEN
          CALL NMARCZ('SECO_ELGA',XSEUCO,TYPECH,NOMSCH,NBCHEF)
        ENDIF
      END IF 
C
C --- FLAMBEMENT
C
      IF (LFLAM) THEN
        CALL NMARCP('FLAM',SDPOST,VECMOD,R8BID ,IRET)
        IF (IRET.NE.0) THEN
          CALL NMARCZ('MODE_FLAMB',VECMOD,TYPECH,NOMSCH,NBCHEF)
        ENDIF  
      ENDIF
C
C --- MODES VIBRATOIRES     
C
      IF (LVIBR) THEN
        CALL ASSERT(LDYNA)
        CALL NMARCP('VIBR',SDPOST,VECMOD,R8BID ,IRET)
        IF (IRET.NE.0) THEN
          CALL NMARCZ('MODE_MECA',VECMOD,TYPECH,NOMSCH,NBCHEF)
        ENDIF
      ENDIF
C
C --- ARCHIVAGE DES CHAMPS
C
      DO 10 ICHAMP = 1, NBCHEF-1
        TYPCHA = TYPECH(ICHAMP)
        NOMCHA = NOMSCH(ICHAMP)
        IF (DIINCL(SDDISC,TYPCHA,FORCE )) THEN
          CALL U2MESG('I','ARCHIVAGE_6',1,TYPCHA,1,NUMARC,1,INSTAN)
          CALL NMARCC(RESULT,NUMARC,TYPCHA,NOMCHA)
        ENDIF
  10  CONTINUE
C
C --- ARCHIVAGE DES CHAMPS SPECIAUX POUR LA DYNAMIQUE
C        
      CALL NDARCH(RESULT,SDDYNA,NUMARC)
C
      CALL JEDEMA()
      END
