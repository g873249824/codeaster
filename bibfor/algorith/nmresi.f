      SUBROUTINE NMRESI(CNRESI,CNDIRI,CNFEXT,CNVCFO,
     &                  CNVFRE,FOINER,CNVCF1,
     &                  LONCH,CREFE,CINIT,
     &                  VRELA,VMAXI,VCHAR,VRESI,VREFE,VINIT,
     &                  IRELA,IMAXI,ICHAR,IRESI,IREFE,IINIT)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 14/03/2006   AUTEUR MABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
C TOLE CRP_21

      IMPLICIT      NONE
      CHARACTER*19  FOINER
      CHARACTER*19  CNRESI
      CHARACTER*19  CNDIRI
      CHARACTER*19  CNFEXT
      CHARACTER*19  CNVCFO
      CHARACTER*19  CNVCF1
      CHARACTER*19  CNVFRE
      INTEGER       LONCH
      LOGICAL       CREFE
      LOGICAL       CINIT
      REAL*8        VRELA
      REAL*8        VMAXI
      REAL*8        VCHAR
      REAL*8        VRESI
      REAL*8        VREFE
      REAL*8        VINIT
      INTEGER       IRELA
      INTEGER       IMAXI
      INTEGER       ICHAR
      INTEGER       IRESI
      INTEGER       IREFE
      INTEGER       IINIT

C ----------------------------------------------------------------------
C
C CALCULS DES RESIDUS D'EQUILIBRE ET DES CHARGEMENTS POUR
C ESTIMATION DE LA CONVERGENCE
C
C ----------------------------------------------------------------------
C IN  CNRESI : FINT + BT.LAMBDA
C IN  CNDIRI : BT.LAMBDA
C IN  CNFEXT : RESULTANTE DES EFFORTS EXTERIEURS
C IN  CNVCFO : FORCE DE REFERENCE DES VARI_COMM
C IN  CNVCF1 : FORCE DE REFERENCE DES VARI_COMM
C IN  CNREFE : FORCE DE REFERENCE DES FORFES RELATIVES
C IN  FOINER : FORCES D'INERTIE EN DYNA
C IN  LONCH  : LONGUEUR DU VECTEUR CHARGEMENT
C IN  CREFE  : VAUT .TRUE. SI TEST EN CONTRAINTES ACTIVES A FAIRE
C IN  CINIT  : VAUT .TRUE. SI TEST CONTRAINTES INITIALES A FAIRE
C OUT VRELA  : RESI_GLOB_RELA MAXI
C OUT VMAXI  : RESI_GLOB_MAXI MAXI
C OUT VCHAR  : CHARGEMENT EXTERIEUR MAXI
C OUT VRESI  : RESIDU EQUILIBRE MAXI
C OUT VREFE  : RESI_GLOB_REFE MAXI
C OUT VINIT  : CONTRAINTES INITIALES MAXI
C OUT IRELA  : NUMERO DU DDL POUR LE RESI_GLOB_RELA MAXI
C OUT IMAXI  : NUMERO DU DDL POUR LE RESI_GLOB_MAXI MAXI
C OUT ICHAR  : NUMERO DU DDL POUR CHARGEMENT EXTERIEUR MAXI
C OUT IRESI  : NUMERO DU DDL POUR RESIDU EQUILIBRE MAXI
C OUT IREFE  : NUMERO DU DDL POUR LE RESI_GLOB_REFE MAXI
C OUT IINIT  : NUMERO DU DDL POUR CONTRAINTES INITIALES MAXI
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      JCONI,JRESI,JDIRI,JFEXT,JVCFO,JREFE,JFOINE,JVCF1,
     &             IRET,NBPROC,IFM,NIV,IINF,NIVMPI
      LOGICAL      LVCINE,LFETI
      CHARACTER*8  K8B
      CHARACTER*19 PROFCH
      CHARACTER*24 MATASS,K24B,INFOFE
      INTEGER      JDEEQ
      INTEGER      IBID,IER,I
      REAL*8       VAL1,VAL2,VAL3,VAL4,VAL5,RBID
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      VRELA = 0.D0
      VMAXI = 0.D0
      VREFE = 0.D0
      VCHAR = 0.D0
      VRESI = 0.D0
      VINIT = 0.D0
      IRELA = 0
      IMAXI = 0
      IREFE = 0
      ICHAR = 0
      IRESI = 0
      IINIT = 0

C FETI PARALLELE OR NOT ?
      LFETI=.FALSE.
      CALL INFNIV(IFM,NIV)
      CALL JEEXIN('&FETI.MAILLE.NUMSD',IRET)
      IF (IRET.GT.0) THEN
        CALL JEVEUO('&FETI.FINF','L',IINF)
        INFOFE=ZK24(IINF)
        IF (INFOFE(10:10).EQ.'T') THEN
          NIVMPI=2
        ELSE
          NIVMPI=1
        ENDIF
        CALL FETMPI(3,IBID,IFM,NIVMPI,IBID,NBPROC,K24B,K24B,K24B,RBID)
        IF (NBPROC.GT.1) LFETI=.TRUE.   
      ENDIF
C
C --- POUR LA PRISE EN COMMPTE DES CHARGES CINEMATIQUES :
C --- QUESTION DE JP : COMMENT TROUVER LE NOM DE LA MATRICE ?
C --- REPONSE DE PB : EN "DUR" POUR L'INSTANT !
C
      MATASS = '&&MATASS           .CONI'
      CALL JEEXIN(MATASS,JCONI)
      LVCINE = (JCONI.GT.0)
      IF (LVCINE) THEN 
        CALL JEVEUO(MATASS,'L',JCONI)
      ENDIF
C
C --- RECUPERATION OBJETS JEVEUX 
C
C SI FETI PARALLELE, ON COMMUNIQUE A CHAQUE PROC LA SOMME DES
C CHAM_NOS GLOBAUX PARTIELLEMENT CALCULES. ON NE COMMUNIQUE PAS CNRESI,
C CNDIRI ET CNFEXT CAR CELA A DU ETRE FAIT PAR NMFEXT ET NMFINT
C A OPTIMISER VIA UN DES CRITERES LOCAUX
      IF (LFETI) THEN
        K24B=CNVCFO
        CALL FETMPI(71,LONCH,IFM,NIVMPI,IBID,IBID,K24B,K24B,K24B,RBID)
        K24B=FOINER
        CALL FETMPI(71,LONCH,IFM,NIVMPI,IBID,IBID,K24B,K24B,K24B,RBID)
        IF (CINIT) THEN
          K24B=CNVCF1
          CALL FETMPI(71,LONCH,IFM,NIVMPI,IBID,IBID,K24B,K24B,K24B,RBID)
        ENDIF
C ---  ON N'A PAS BESOIN DE COMMUNIQUER LE PROF_CHNO, IL EST DEJA CONNU
C ---  DE TOUS LE MONDE
        IF (CREFE) THEN
          K24B=CNVFRE
          CALL FETMPI(71,LONCH,IFM,NIVMPI,IBID,IBID,K24B,K24B,K24B,RBID)
        ENDIF
      ENDIF

      CALL JEVEUO(CNRESI//'.VALE','L',JRESI)
      CALL JEVEUO(CNDIRI//'.VALE','L',JDIRI)
      CALL JEVEUO(CNFEXT//'.VALE','L',JFEXT)
      CALL JEVEUO(CNVCFO//'.VALE','L',JVCFO)
      CALL JEVEUO(FOINER//'.VALE','L',JFOINE)
      IF (CINIT) THEN
        CALL JEVEUO(CNVCF1//'.VALE','L',JVCF1)
      ENDIF
      IF (CREFE) THEN 
        CALL JEVEUO(CNVFRE//'.VALE','L',JREFE)
        CALL DISMOI('F','PROF_CHNO',CNRESI,'CHAM_NO',IBID,PROFCH,IER)
        CALL JEVEUO(PROFCH//'.DEEQ','L',JDEEQ)
      ENDIF
C
C --- CALCUL DES RESIDUS
C          
      DO 20 I=1,LONCH
C
C --- SI CHARGEMENT CINEMATIQUE: ON IGNORE LA VALEUR DU RESIDU
C
        IF (LVCINE) THEN
           IF (ZI(JCONI+I-1).EQ.1) THEN 
             GOTO 20
           ENDIF
        ENDIF

        VAL1  = ABS(ZR(JRESI+I-1)-ZR(JFEXT+I-1))
        VAL2  = ABS(ZR(JDIRI+I-1)-ZR(JFEXT+I-1))
     &          + ABS(ZR(JVCFO+I-1))
        VAL3  = ABS(ZR(JFOINE+I-1))

C
C --- VRESI: MAX RESIDU D'EQUILIBRE
C
        IF (VRESI.LE.VAL1) THEN
          VRESI = VAL1
          IRESI = I
        ENDIF
C
C --- VCHAR: MAX CHARGEMENT EXTERIEUR
C
        IF (VCHAR.LE.VAL2) THEN
          VCHAR = VAL2
          ICHAR = I
        ENDIF
        IF (VCHAR.LE.VAL3) THEN
          VCHAR = VAL3
          ICHAR = I
        ENDIF
C
C --- SI CONVERGENCE EN CONTRAINTE ACTIVE
C
        IF (CREFE) THEN
C         SI C'EST UN DDL PHYSIQUE
          IF (ZI(JDEEQ-1 + 2*I + 2).GT.0) THEN
            VAL4  = ABS(ZR(JRESI+I-1)-ZR(JFEXT+I-1))/
     &                  ZR(JREFE+I-1)
            IF (VREFE.LE.VAL4) THEN
               VREFE = VAL4
               IREFE = I
            ENDIF
          ENDIF
C         SI C'EST UN DDL DE LAGRANGE : LA CONVERGENCE EST IMMEDIATE 
C        (PAS DE LIAISON NON LINEAIRE DANS ASTER) : ON NE LA TESTE PAS
        ENDIF 
C
C --- SI TEST CONTRAINTES INITIALES
C
        IF (CINIT) THEN
          VAL5 = ABS(ZR(JVCF1+I-1))
          IF (VINIT.LE.VAL5) THEN
            VINIT = VAL5
            IINIT = I
          ENDIF
        ENDIF

 20   CONTINUE     

      VMAXI = VRESI
      IMAXI = ICHAR
      IF (VCHAR.GT.0.D0) THEN
        VRELA = VRESI/VCHAR
        IRELA = IRESI
      ELSE
        VRELA = -1.D0
      END IF
       

 9999 CONTINUE
      CALL JEDEMA()
      END
