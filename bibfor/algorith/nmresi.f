      SUBROUTINE NMRESI(NUMEDD,INST  ,SDDYNA,NEQ   ,VALPLU,
     &                  MEASSE,MATASS,CNFINT,CNDIRI,CNFEXT,
     &                  CNVCFO,CNVFRE,CNVCF1,CREFE ,CINIT ,
     &                  VRELA ,VMAXI ,VCHAR ,VRESI ,VREFE ,
     &                  VINIT ,IRELA ,IMAXI ,ICHAR ,IRESI ,
     &                  IREFE ,IINIT)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT      NONE
      CHARACTER*24  NUMEDD
      REAL*8        INST(*)
      CHARACTER*19  SDDYNA
      INTEGER       NEQ
      CHARACTER*24  VALPLU(8)
      CHARACTER*19  MEASSE(8)
      CHARACTER*19  CNFINT,CNDIRI,CNFEXT
      CHARACTER*19  CNVCFO,CNVCF1,CNVFRE
      CHARACTER*19  MATASS
      LOGICAL       CREFE,CINIT
      REAL*8        VRELA,VMAXI,VCHAR,VRESI,VREFE,VINIT
      INTEGER       IRELA,IMAXI,ICHAR,IRESI,IREFE,IINIT
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (UTILITAIRE)
C
C CALCULS DES RESIDUS D'EQUILIBRE ET DES CHARGEMENTS POUR
C ESTIMATION DE LA CONVERGENCE
C
C ----------------------------------------------------------------------
C
C
C IN  CNFINT : FORCES INTERNES   - FINT 
C IN  CNDIRI : REACTIONS D'APPUI - BT.LAMBDA 
C IN  CNFEXT : RESULTANTE DES EFFORTS EXTERIEURS
C IN  CNVCFO : FORCE DE REFERENCE DES VARI_COM
C IN  CNVCF1 : FORCE DE REFERENCE DES VARI_COMM
C IN  CNREFE : FORCE DE REFERENCE DES FORFES RELATIVES
C IN  VNINER : FORCES D'INERTIE EN DYNA
C IN  NEQ    : LONGUEUR DU VECTEUR CHARGEMENT
C IN  CREFE  : VAUT .TRUE. SI TEST EN CONTRAINTES ACTIVES A FAIRE
C IN  CINIT  : VAUT .TRUE. SI TEST CONTRAINTES INITIALES A FAIRE
C IN  MATASS : MATRICE DU PREMIER MEMBRE ASSEMBLEE
C OUT VRELA  : RESI_GLOB_RELA MAXI
C OUT VMAXI  : RESI_GLOB_MAXI MAXI
C OUT VCHAR  : CHARGEMENT EXTERIEUR MAXI
C OUT VRESI  : RESIDU EQUILIBRE MAXI
C OUT VREFE  : RESI_GLOB_REFE MAXI
C OUT VINIT  : CONTRAINTES INITIALES MAXI
C OUT IRELA  : NUMERO DU DDL POUR LE RESI_GLOB_RELA MAXI
C OUT IMAXI  : NUMERO DU DDL POUR LE RESI_GLOB_MAXI MAXI
C OUT ICHAR  : NUMERO DU DDL POUR CHARGEMENT EXTERIEUR MAXI
C OUT IRESI  : NUMERO DU DDL POUR RESIDU EQUILIBRE MAXI
C OUT IREFE  : NUMERO DU DDL POUR LE RESI_GLOB_REFE MAXI
C OUT IINIT  : NUMERO DU DDL POUR CONTRAINTES INITIALES MAXI
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      JCCID,JFINT,JDIRI,JFEXT,JVCFO,JREFE,JINER,JVCF1
      INTEGER      NBPROC,IFM,NIV,NIVMPI
      LOGICAL      LVCINE,LFETI,LDYNA,NDYNLO
      CHARACTER*19 PROFCH
      CHARACTER*24 K24BID,CNINER
      INTEGER      JDEEQ,JREFA
      INTEGER      IBID,IER,I
      REAL*8       VAL1,VAL2,VAL3,VAL4,VAL5,R8BID
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFNIV(IFM,NIV)
C
C --- INITIALISATIONS
C
      VRELA  = 0.D0
      VMAXI  = 0.D0
      VREFE  = 0.D0
      VCHAR  = 0.D0
      VRESI  = 0.D0
      VINIT  = 0.D0
      IRELA  = 0
      IMAXI  = 0
      IREFE  = 0
      ICHAR  = 0
      IRESI  = 0
      IINIT  = 0
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
      CNINER = ' '
C
C --- CALCUL DE LA FORCE DE REFERENCE EN DYNAMIQUE
C 
      IF (LDYNA) THEN
        CALL NDINER(NUMEDD,SDDYNA,INST ,VALPLU,MEASSE,
     &              CNINER)
      ENDIF
C      
C --- PREPARATION FETI
C
      CALL NMFETI(NUMEDD,IFM   ,LFETI ,NIVMPI,NBPROC)
C
C --- LA MATRICE DOIT EXISTER. SINON ON NE NE PEUT PAS DEVINER
C --- LES DDLS IMPOSES PAR AFFE_CHAR_CINE :
C
      CALL JEEXIN(MATASS(1:19)//'.REFA',JREFA)
      IF (JREFA.EQ.0) CALL U2MESK('A','ALGELINE2_88',1,MATASS)

      CALL JEEXIN(MATASS(1:19)//'.CCID',JCCID)
      LVCINE = (JCCID.GT.0)
      IF (LVCINE) THEN
        CALL JEVEUO(MATASS(1:19)//'.CCID','L',JCCID)
      ENDIF
      CALL DISMOI('F','PROF_CHNO',CNFINT,'CHAM_NO',IBID,PROFCH,IER)
      CALL JEVEUO(PROFCH(1:19)//'.DEEQ','L',JDEEQ)      
C
C --- RECUPERATION OBJETS JEVEUX
C
C SI FETI PARALLELE, ON COMMUNIQUE A CHAQUE PROC LA SOMME DES
C CHAM_NOS GLOBAUX PARTIELLEMENT CALCULES. ON NE COMMUNIQUE PAS CNFINT,
C CNDIRI ET CNFEXT CAR CELA A DU ETRE FAIT PAR NMFEXT ET NMFINT
C A OPTIMISER VIA UN DES CRITERES LOCAUX
      IF (LFETI) THEN
        K24BID = CNVCFO(1:19)//'.VALE'
        CALL FETMPI(71    ,NEQ   ,IFM   ,NIVMPI,IBID  ,
     &              IBID  ,K24BID,K24BID,K24BID,R8BID)
        IF (LDYNA) THEN
          K24BID = CNINER(1:19)//'.VALE'
          CALL FETMPI(71    ,NEQ   ,IFM   ,NIVMPI,IBID  ,
     &                IBID  ,K24BID,K24BID,K24BID,R8BID)
        ENDIF
        IF (CINIT) THEN
          K24BID = CNVCF1(1:19)//'.VALE'
          CALL FETMPI(71    ,NEQ   ,IFM   ,NIVMPI,IBID  ,
     &                IBID  ,K24BID,K24BID,K24BID,R8BID)
        ENDIF
        IF (CREFE) THEN
          K24BID = CNVFRE(1:19)//'.VALE'
          CALL FETMPI(71    ,NEQ   ,IFM   ,NIVMPI,IBID  ,
     &                IBID  ,K24BID,K24BID,K24BID,R8BID)
        ENDIF
      ENDIF
C
      CALL JEVEUO(CNFINT(1:19)//'.VALE','L',JFINT)
      CALL JEVEUO(CNDIRI(1:19)//'.VALE','L',JDIRI)
      CALL JEVEUO(CNFEXT(1:19)//'.VALE','L',JFEXT)
      CALL JEVEUO(CNVCFO(1:19)//'.VALE','L',JVCFO)
      IF (LDYNA) THEN
        CALL JEVEUO(CNINER(1:19)//'.VALE','L',JINER)
      ENDIF  
      IF (CINIT) THEN
        CALL JEVEUO(CNVCF1(1:19)//'.VALE','L',JVCF1)
      ENDIF
      IF (CREFE) THEN
        CALL JEVEUO(CNVFRE(1:19)//'.VALE','L',JREFE)
      ENDIF          
C
C --- CALCUL DES RESIDUS
C
      DO 20 I=1,NEQ
C
C --- SI CHARGEMENT CINEMATIQUE: ON IGNORE LA VALEUR DU RESIDU
C
        IF (LVCINE) THEN
          IF (ZI(JCCID+I-1).EQ.1) THEN
            GOTO 20
          ENDIF
        ENDIF
        
                        
        VAL1  = ABS(ZR(JFINT+I-1)+ZR(JDIRI+I-1)-ZR(JFEXT+I-1))
        VAL2  = ABS(ZR(JDIRI+I-1)-ZR(JFEXT+I-1))
     &          + ABS(ZR(JVCFO+I-1))
        
C
C --- VRESI: MAX RESIDU D'EQUILIBRE
C
        IF (VRESI.LE.VAL1) THEN
          VRESI = VAL1
          IRESI = I
        ENDIF
C
C --- VCHAR: MAX CHARGEMENT EXTERIEUR EN STATIQUE
C
        IF (VCHAR.LE.VAL2) THEN
          VCHAR = VAL2
          ICHAR = I
        ENDIF
C
C --- VCHAR: MAX CHARGEMENT EXTERIEUR EN DYNAMIQUE
C
        IF (LDYNA) THEN
          VAL3  = ABS(ZR(JINER+I-1))
          IF (VCHAR.LE.VAL3) THEN
            VCHAR = VAL3
            ICHAR = I
          ENDIF
        ENDIF
C
C --- SI CONVERGENCE EN CONTRAINTE ACTIVE
C
        IF (CREFE) THEN
          IF (ZI(JDEEQ-1 + 2*I).GT.0) THEN          
            VAL4  = ABS(ZR(JFINT+I-1)+ZR(JDIRI+I-1)-ZR(JFEXT+I-1))/
     &                  ZR(JREFE+I-1)
            IF (VREFE.LE.VAL4) THEN
               VREFE = VAL4
               IREFE = I
            ENDIF
          ENDIF
        ENDIF
C
C --- SI TEST CONTRAINTES INITIALES
C
        IF (CINIT) THEN
          VAL5 = ABS(ZR(JVCF1+I-1))
          IF (VINIT.LE.VAL5) THEN
            VINIT = VAL5
            IINIT = I
          ENDIF
        ENDIF
 20   CONTINUE

      VMAXI = VRESI
      IMAXI = IRESI
      IF (VCHAR.GT.0.D0) THEN
        VRELA = VRESI/VCHAR
        IRELA = IRESI
      ELSE
        VRELA = -1.D0
      END IF


 9999 CONTINUE
      CALL JEDEMA()
      END
