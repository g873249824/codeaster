      SUBROUTINE HARM75(NOMRES,TYPRES,NOMIN,NOMCMD,BASEMO)
      IMPLICIT REAL*8 (A-H,O-Z)
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     ------------------------------------------------------------------
C     OPERATEUR DE RETOUR A LA BASE PHYSIQUE A PARTIR DE DONNEES
C     GENERALISEES DANS LE CAS D'UN CALCUL HARMONIQUE
C     ------------------------------------------------------------------
C IN  : NOMRES : NOM UTILISATEUR POUR LA COMMANDE REST_BASE_PHYS
C IN  : TYPRES : TYPE DE RESULTAT : 'DYNA_HARMO'
C IN  : NOMIN  : NOM UTILISATEUR DU CONCEPT HARM_GENE AMONT
C IN  : NOMCMD : NOM DE LA COMMANDE : 'REST_BASE_PHYS'
C IN  : BASEMO : NOM UTILISATEUR DU CONCEPT MODE_MECA AMONT
C                (SI CALCUL MODAL PAR SOUS-STRUCTURATION)
C                ' ' SINON
C ----------------------------------------------------------------------
C
C
      INCLUDE 'jeveux.h'
      CHARACTER*24 VALK(2)
C
C
      INTEGER       IBID,NBMODE
      REAL*8        EPSI,RBID
      COMPLEX*16    CBID
      CHARACTER*4   TYPE(3)
      CHARACTER*8   K8B,BASEMO,CRIT,CHAMP(8),INTERP,NOMRES,
     &              NOMIN,MODE,TOUCH, NOMMA, MAILLA
      CHARACTER*8   MATPRO
      CHARACTER*14  NUMDDL
      CHARACTER*16  TYPRES,NOMCMD,TYPBAS
      CHARACTER*19  KREFE,KNUME,KINST,HRANGE
      CHARACTER*24  MATRIC,CHAMNO,CREFE(2),CHMOD
      INTEGER      IARG
C
C     ------------------------------------------------------------------
      DATA CHAMNO   /'&&HARM75.CHAMNO'/
C     ------------------------------------------------------------------
C
      CALL JEMARQ()

      MATRIC=' '
      MATPRO=' '

      MODE = BASEMO
      HRANGE = NOMIN
      CALL GETVTX ( ' ', 'TOUT_CHAM', 1,IARG,1, TOUCH, N1 )
      IF (N1.NE.0) THEN
         CALL ASSERT( TOUCH(1:3).EQ.'OUI' )
         NBCHAM = 3
         TYPE(1) = 'DEPL'
         TYPE(2) = 'VITE'
         TYPE(3) = 'ACCE'
      ELSE
         CALL GETVTX ( ' ', 'NOM_CHAM', 1,IARG,0, CHAMP, N1 )
         NBCHAM = -N1
         CALL GETVTX ( ' ', 'NOM_CHAM', 1,IARG,NBCHAM, CHAMP, N1 )
         DO 11 I = 1 , NBCHAM
         IF (CHAMP(I)(1:4).EQ.'DEPL') THEN
            TYPE(I) = 'DEPL'
         ELSEIF (CHAMP(I)(1:4).EQ.'VITE') THEN
            TYPE(I) = 'VITE'
         ELSEIF (CHAMP(I)(1:4).EQ.'ACCE') THEN
            TYPE(I) = 'ACCE'
         ELSE
C           CHAMP IGNORE
         ENDIF
  11     CONTINUE
      ENDIF
C
C     --- RECUPERATION DE LA BASE MODALE ---
C ON SUPPOSE QU ELLE EST ISSUE D UN MODE_MECA
C
      IF (MODE.EQ.' ') THEN
         CALL JEVEUO(HRANGE//'.REFD','L',IAREFE)
         MATPRO = ZK24(IAREFE)(1:8)
         IF (MATPRO.EQ.' ') THEN
           MATPRO = ZK24(IAREFE+5)(1:8)
           BASEMO = MATPRO
           CALL RSORAC(MATPRO,'LONUTI',IBID,RBID,' ',CBID,RBID,
     &            'ABSOLU',NBMODE,1,IBID)
         ELSE
           CALL GETTCO(MATPRO,TYPBAS)
           IF ((TYPBAS(1:9).NE.'MODE_MECA')) THEN
             CALL JEVEUO(MATPRO//'           .REFA','L',IAREF2)
             BASEMO = ZK24(IAREF2)(1:8)
             CALL JEVEUO(MATPRO//'           .DESC','L',IADESC)
             NBMODE = ZI(IADESC+1)
           ENDIF
         ENDIF
         CALL JEVEUO(BASEMO//'           .REFD','L',IADRIF)
         CALL GETTCO(BASEMO,TYPBAS)
         MATRIC = ZK24(IADRIF)
         IF (MATRIC.NE.' ') THEN
           CALL DISMOI('F','NOM_NUME_DDL',MATRIC,'MATR_ASSE',IBID,
     &                NUMDDL,IRET)
         ELSE
           NUMDDL = ZK24(IADRIF+3)(1:14)
         ENDIF
         CALL DISMOI('F','NB_EQUA',NUMDDL,'NUME_DDL',NEQ,K8B,IRET)
      ELSE
C
C --- BASE MODALE CALCULEE PAR SOUS-STRUCTURATION
C
         CALL RSORAC(MODE,'LONUTI',IBID,BID,' ',CBID,
     &               EBID,'ABSOLU',NBMODE,1,NBID)
         CALL RSEXCH(BASEMO,'DEPL',1,CHMOD,IRET)
         CHMOD = CHMOD(1:19)//'.REFE'
         CALL JEVEUO(CHMOD,'L',LLCHA)
         MAILLA = ZK24(LLCHA)

C------ON VERIFIE QUE L'UTILISATEUR A RENSEIGNE LE MEME SUPPORT DE
C------RESTITUTION DANS LE FICHIER DE COMMANDE
         CALL GETVID(' ','SQUELETTE',1,IARG,1,NOMMA,ISK)
         IF (ISK.NE.0) THEN
           IF (NOMMA.NE.MAILLA) THEN
             VALK (1) = NOMMA
             VALK (2) = MAILLA
             CALL U2MESK('F','SOUSTRUC2_9',2,VALK)
           ENDIF
         ENDIF

         CREFE(1) = ZK24(LLCHA)
         CREFE(2) = ZK24(LLCHA+1)
         CALL JELIRA(CREFE(2)(1:19)//'.NUEQ','LONMAX',NEQ,K8B)
         NUMDDL = ZK24(LLCHA+1)(1:14)
      ENDIF

      CALL WKVECT('&&HARM75.BASEMODE','V V R',NBMODE*NEQ,IDBASE)
      IF (MODE.EQ.' '.AND.MATRIC.EQ.' ') THEN
        CALL COPMO2(BASEMO,NEQ,NUMDDL,NBMODE,ZR(IDBASE))
      ELSE
        CALL COPMOD(BASEMO,'DEPL',NEQ,NUMDDL,NBMODE,ZR(IDBASE))
      ENDIF
C
C
C     --- RECUPERATION DES FREQUENCES ---

      CALL GETVTX(' ','CRITERE'  ,0,IARG,1,CRIT,N1)
      CALL GETVR8(' ','PRECISION',0,IARG,1,EPSI,N1)
      CALL GETVTX(' ','INTERPOL' ,0,IARG,1,INTERP,N1)
C

      KNUME = '&&HARM75.NUM_RANG'
      KINST = '&&HARM75.FREQ'
      CALL RSHARM(INTERP,HRANGE,' ',1,KINST,KNUME,NBREC,IRETOU)
      CALL JEEXIN(KINST,IRET)
      IF (IRET.GT.0) THEN
        CALL JEVEUO(KINST,'E',JFRREC)
        CALL JEVEUO(KNUME,'E',JNUME)
      END IF

C
C     --- RESTITUTION SUR LA BASE REELLE ---
C
      IF (INTERP(1:3).NE.'NON') CALL U2MESS('F','ALGORITH3_86')

        CALL RSLIPA(HRANGE,'FREQ','&&HARM75.LIFREQ',JFREQ,NBFREQ)

         CALL RSCRSD('G',NOMRES,TYPRES,NBREC)
         CALL WKVECT('&&HARM75.VECTGENE','V V C',NBMODE,IDVECG)

         IARCHI = 0
         DO 30 I = 0,NBREC-1
            IARCHI = IARCHI + 1
            DO 32 ICH = 1,NBCHAM
               CALL RSEXCH(NOMRES,TYPE(ICH),IARCHI,CHAMNO,IRET)
               IF ( IRET .EQ. 0 ) THEN
               CALL U2MESK('A','ALGORITH2_64',1,CHAMNO)
               ELSEIF ( IRET .EQ. 100 ) THEN
                 IF (MODE.EQ.' ') THEN
                   CALL VTCREB(CHAMNO,NUMDDL,'G','C',NEQ)
                 ELSE
                   CALL VTCREC(CHAMNO,CHMOD,'G','C',NEQ)
                 ENDIF
               ELSE
                 CALL ASSERT(.FALSE.)
               ENDIF
               CHAMNO(20:24) = '.VALE'
               CALL JEVEUO(CHAMNO,'E',LVALE)
                 CALL ZXTRAC(INTERP,EPSI,CRIT,NBFREQ,ZR(JFREQ),
     &                 ZR(JFRREC+I),TYPE(ICH),NOMIN,NBMODE,ZC(IDVECG)
     &                   , IBID)

               CALL MDGEPC(NEQ,NBMODE,ZR(IDBASE),
     &                 ZC(IDVECG),ZC(LVALE))
               CALL JELIBE(CHAMNO)
               CALL RSNOCH(NOMRES,TYPE(ICH),IARCHI,' ')
 32         CONTINUE
            CALL RSADPA(NOMRES,'E',1,'FREQ',IARCHI,0,LINST,K8B)
            ZR(LINST) = ZR(JFREQ+I)
 30      CONTINUE
C
      KREFE  = NOMRES
      CALL WKVECT(KREFE//'.REFD','G V K24',7,LREFE)
      IF (MODE.EQ.' ') THEN
        ZK24(LREFE  ) = ZK24(IADRIF)
        ZK24(LREFE+1) = ZK24(IADRIF+1)
        ZK24(LREFE+2) = ZK24(IADRIF+2)
        ZK24(LREFE+3) = ZK24(IADRIF+3)
        ZK24(LREFE+4) = ZK24(IADRIF+4)
        ZK24(LREFE+5) = ZK24(IADRIF+5)
        ZK24(LREFE+6) = ZK24(IADRIF+6)
      ENDIF
      CALL JELIBE(KREFE//'.REFD')
C
      CALL JEDETC(' ','&&HARM75',1)
      CALL TITRE
C
      CALL JEDEMA()
      END
