      SUBROUTINE NMREPL(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,PARMET,CARCRI,FONACT,
     &                  ITERAT,SDSTAT,SDPILO,SDNUME,SDDYNA,
     &                  METHOD,DEFICO,RESOCO,DELTAT,VALINC,
     &                  SOLALG,VEELEM,VEASSE,SDTIME,SDDISC,
     &                  ETAN  ,CONV  ,ETA   ,RHO   ,OFFSET,
     &                  LDCCVG,PILCVG,MATASS)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/04/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER       FONACT(*)
      INTEGER       ITERAT
      REAL*8        PARMET(*), CONV(*)
      REAL*8        DELTAT,ETA   ,ETAN,RHO,OFFSET
      CHARACTER*16  METHOD(*)
      CHARACTER*19  LISCHA,SDDYNA,SDNUME,SDPILO,SDDISC,MATASS
      CHARACTER*24  CARCRI,DEFICO,RESOCO
      CHARACTER*24  SDSTAT,SDTIME
      CHARACTER*24  MODELE,NUMEDD,MATE  ,CARELE,COMREF,COMPOR
      CHARACTER*19  VEELEM(*),VEASSE(*)
      CHARACTER*19  SOLALG(*),VALINC(*)
      INTEGER       PILCVG,LDCCVG
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PILOTAGE)
C
C CHOIX DU ETA DE PILOTAGE AVEC RECHERCHE LINEAIRE
C
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : LISTE DES CHARGES
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  ITERAT : NUMERO D'ITERATION DE NEWTON
C IN  SDPILO : SD PILOTAGE
C IN  SDNUME : SD NUMEROTATION
C IN  SDDYNA : SD DYNAMIQUE
C IN  SDSTAT : SD STATISTIQUES
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION
C IN  DEFICO : SD DEFINITION DU CONTACT
C IN  RESOCO : SD RESOLUTION DU CONTACT VOLATILE OP0070
C IN  DELTAT : INCREMENT DE TEMPS
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  VEELEM : VARIABLE CHAPEAU POUR NOM DES VECT_ELEM
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  ETAN   : ETA_PILOTAGE AU DEBUT DE L'ITERATION
C IN  SDTIME : SD TIMER
C IN  SDDISC : SD DISCRETISATION
C OUT CONV   : INFORMATIONS SUR LA CONVERGENCE DU CALCUL
C                10 : ITERATIONS RECHERCHE LINEAIRE
C                11 : VALEUR DE RHO
C OUT ETA    : PARAMETRE DE PILOTAGE
C OUT RHO    : PARAMETRE DE RECHERCHE_LINEAIRE
C OUT OFFSET : DECALAGE DE ETA_PILOTAGE EN FONCTION DE RHO
C OUT PILCVG : CODE DE CONVERGENCE POUR LE PILOTAGE
C                -1 : PAS DE CALCUL DU PILOTAGE
C                 0 : CAS DU FONCTIONNEMENT NORMAL
C                 1 : PAS DE SOLUTION
C                 2 : BORNE ATTEINTE -> FIN DU CALCUL
C OUT LDCCVG : CODE RETOUR DE L'INTEGRATION DU COMPORTEMENT
C                -1 : PAS D'INTEGRATION DU COMPORTEMENT
C                 0 : CAS DU FONCTIONNEMENT NORMAL
C                 1 : ECHEC DE L'INTEGRATION DE LA LDC
C                 3 : SIZZ PAS NUL POUR C_PLAN DEBORST
C IN  MATASS : SD MATRICE ASSEMBLEE
C
C ----------------------------------------------------------------------
C
      INTEGER      ZVEASS,ZSOLAL,ZVALIN
      PARAMETER    (ZVEASS=32,ZSOLAL=17,ZVALIN=28)
C
      LOGICAL      EXOPT, MIEUX,IRECLI
      INTEGER      ITEMAX, ITERHO, ACT, OPT
      INTEGER      PILOPT
      INTEGER      NBEFFE, JPLTK
      INTEGER      NR, POS, NBSTO,N,NBATTE,NMAX
      INTEGER      ISMAEM
      REAL*8       RHOMIN,RHOMAX, RHOEXM, RHOEXP, RATCVG, FCVG
      REAL*8       RHOOPT,F0,FOPT,PROETA(2)
      REAL*8       R8MAEM
      REAL*8       R(1002), G(1002), MEMFG(1002)
      REAL*8       FGMAX, FGMIN, AMELIO, RESIDU, ETAOPT
      CHARACTER*19 VEASST(ZVEASS),SOLALT(ZSOLAL),VALINT(ZVALIN,2)
      CHARACTER*19 CNFINS(2),CNDIRS(2),K19BLA
      CHARACTER*19 CNDIRI,CNFINT,CNFEXT
      CHARACTER*19 DEPPLU,SIGPLU,VARPLU,COMPLU
      CHARACTER*19 DEPDET
      CHARACTER*19 SIGPLT,VARPLT,DEPPLT
      CHARACTER*24 TYPILO
      INTEGER      IFM,NIV
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('PILOTAGE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<PILOTAGE> ... PILOTAGE AVEC RECH_LINE'
      ENDIF
C
C --- INITIALISATIONS
C
      FOPT   = R8MAEM()
      PILOPT = ISMAEM()
      NBSTO  = 0
      EXOPT  = .FALSE.
      IRECLI = .TRUE.
      PILCVG = -1
      LDCCVG = -1
      K19BLA = ' '
      CALL NMCHAI('VEASSE','LONMAX',NMAX  )
      CALL ASSERT(NMAX.EQ.ZVEASS)
      CALL NMCHAI('SOLALG','LONMAX',NMAX  )
      CALL ASSERT(NMAX.EQ.ZSOLAL)
      CALL NMCHAI('VALINC','LONMAX',NMAX  )
      CALL ASSERT(NMAX.EQ.ZVALIN)
C
C --- PARAMETRES RECHERCHE LINEAIRE
C
      IF (DELTAT .LT. PARMET(13)) THEN
        ITEMAX = NINT(PARMET(12))
      ELSE
        ITEMAX = NINT(PARMET(10))
      ENDIF
      RHOMIN = PARMET(14)
      RHOMAX = PARMET(15)
      RHOEXM =  -PARMET(16)
      RHOEXP = PARMET(16)
      RATCVG = PARMET(11)
      IF (ITEMAX .GT. 1000) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C
      CALL NMCHEX(VEASSE,'VEASSE','CNFINT',CNFINT)
      CALL NMCHEX(VEASSE,'VEASSE','CNDIRI',CNDIRI)
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)
      CALL NMCHEX(VALINC,'VALINC','SIGPLU',SIGPLU)
      CALL NMCHEX(VALINC,'VALINC','VARPLU',VARPLU)
      CALL NMCHEX(VALINC,'VALINC','COMPLU',COMPLU)
C
C --- LECTURE DONNEES PILOTAGE
C
      CALL JEVEUO(SDPILO(1:19)//'.PLTK','L',JPLTK)
      TYPILO = ZK24(JPLTK)
C
C --- FONCTIONS DE PILOTAGE LINEAIRES : RECHERCHE LINEAIRE STANDARD
C
      IF (TYPILO.EQ.'DDL_IMPO' ) THEN
        CALL NMRELP(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &              COMPOR,LISCHA,CARCRI,FONACT,ITERAT,
     &              SDSTAT,SDNUME,SDDYNA,PARMET,METHOD,
     &              DEFICO,VALINC,SOLALG,VEELEM,VEASSE,
     &              SDTIME,CONV  ,LDCCVG)
        GOTO 9999
      ENDIF
C
C --- PREPARATION DES ZONES TEMPORAIRES POUR ITERATION COURANTE
C
      CNFINS(1) =  CNFINT
      CNFINS(2) = '&&CNREPL.CHP1'
      CNDIRS(1) =  CNDIRI
      CNDIRS(2) = '&&CNREPL.CHP2'
      DEPDET    = '&&CNREPL.CHP3'
      DEPPLT    = '&&CNREPL.CHP4'
      SIGPLT    = '&&NMREPL.SIGPLU'
      VARPLT    = '&&NMREPL.VARPLU'
      CALL COPISD('CHAMP_GD','V',VARPLU,VARPLT)
      CALL COPISD('CHAMP_GD','V',SIGPLU,SIGPLT)
      CALL COPISD('CHAMP_GD','V',DEPPLU,DEPPLT)
C
C --- CONSTRUCTION DES VARIABLES CHAPEAUX
C
      CALL NMCHA0('VALINC','ALLINI',' ',VALINT(1,1))
      CALL NMCHSO(VALINC,'VALINC','      ',K19BLA,VALINT(1,1))
      CALL NMCHSO(VALINT(1,1),'VALINC','DEPPLU',DEPPLT,VALINT(1,1))
      CALL NMCHA0('VALINC','ALLINI',' ',VALINT(1,2))
      CALL NMCHSO(VALINC,'VALINC','      ',K19BLA,VALINT(1,2))
      CALL NMCHSO(VALINT(1,2),'VALINC','DEPPLU',DEPPLT,VALINT(1,2))
      CALL NMCHSO(VALINT(1,2),'VALINC','SIGPLU',SIGPLT,VALINT(1,2))
      CALL NMCHSO(VALINT(1,2),'VALINC','VARPLU',VARPLT,VALINT(1,2))
      CALL NMCHSO(SOLALG,'SOLALG','DEPDEL',DEPDET,SOLALT)
      CALL NMCHSO(VEASSE,'VEASSE','CNDIRI',CNDIRS,VEASST)
C
C --- CALCUL DE F(RHO=0)
C
      CALL NMPILR(FONACT,NUMEDD,MATASS,VEASSE,F0    ,
     &            ETAN  )
      FCVG = ABS(RATCVG * F0)
C
C --- INITIALISATION ET DIRECTION DE DESCENTE
C
      NR     = 2
      R(1)   = 0.D0
      R(2)   = 1.D0
      G(1)   = F0
      POS    = 2
      NBATTE = 2
C
C --- BOUCLE DE RECHERCHE LINEAIRE
C
      RHO    = 1.D0
      ACT    = 1

      DO 20 ITERHO = 0, ITEMAX
C
C ----- RESOLUTION DE L'EQUATION DE PILOTAGE: NVELLE DIRECT. DE DESCENTE
C
        CALL NMPILO(SDPILO,DELTAT,RHO   ,SOLALG,VEASSE,
     &              MODELE,MATE  ,COMPOR,RESOCO,VALINC,
     &              NBATTE,NUMEDD,NBEFFE,PROETA,PILCVG,
     &              CARELE)
        IF (PILCVG.EQ.1) GOTO 9999
C
C ----- DECALAGE DU ETA_PILOTAGE
C
        OFFSET = ETAN*(1-RHO)
        DO 21 N = 1,NBEFFE
          PROETA(N) = PROETA(N) + OFFSET
 21     CONTINUE
C
C ----- CHOIX DU ETA_PILOTAGE
C
        CALL NMCHSO(VEASSE,'VEASSE','CNDIRI',CNDIRS(ACT),VEASST)
        CALL NMCHSO(VEASSE,'VEASSE','CNFINT',CNFINS(ACT),VEASST)
        CALL NMCETA(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &              COMPOR,LISCHA,CARCRI,FONACT,SDSTAT,
     &              DEFICO,SDPILO,ITERAT,SDNUME,VALINT(1,ACT),
     &              SOLALG,VEELEM,VEASST,SDTIME,SDDISC,
     &              NBEFFE,IRECLI,PROETA,OFFSET,RHO   ,
     &              ETA   ,LDCCVG,PILCVG,RESIDU,MATASS)
C
C ----- PB CVG: S'IL EXISTE DEJA UN RHO OPTIMAL, ON LE CONSERVE
C ----- ET ON SORT
C
        IF (LDCCVG.GT.0) THEN
          IF (EXOPT) GOTO 100
          GOTO 9999
        END IF
C
C ---    SI ON A PAS ENCORE CONVERGE LE PILO :
C ---      * ON PREND UN PILO CONVERGE QQ SOIT LE RESIDU
C ---    SINON :
C ---      * ON CHERCHE A BAISSER LE RESIDU AVEC UN PILO CONVERGE
C
        IF (PILOPT.GT.0) THEN
          MIEUX = ((PILCVG.EQ.0).OR.(PILCVG.EQ.2).OR.(RESIDU.LT.FOPT))
        ELSE
          MIEUX = (((PILCVG.EQ.0).OR.(PILCVG.EQ.2)).AND.
     &             (RESIDU.LT.FOPT))
        END IF

        IF (MIEUX) THEN
          EXOPT  = .TRUE.
          RHOOPT = RHO
          ETAOPT = ETA
          PILOPT = PILCVG
          FOPT   = RESIDU
          OPT    = ACT
          ACT    = 3 - ACT
        END IF
C
C ---   MEMOIRE DES RESIDUS ATTEINTS
C
        NBSTO = NBSTO + 1
        MEMFG(NBSTO) = RESIDU
C
C ---   ARRET SI SATISFACTION DU CRITERE
C
        IF (RESIDU .LT. FCVG) GOTO 100
C
C ---   ARRET SI IL N'Y A PLUS D'AMELIORATIONS SIGNIFICATIVES
C
        IF (NBSTO .GE. 3) THEN
          FGMAX = MAX(MEMFG(NBSTO),MEMFG(NBSTO-1),MEMFG(NBSTO-2))
          FGMIN = MIN(MEMFG(NBSTO),MEMFG(NBSTO-1),MEMFG(NBSTO-2))
          AMELIO = FGMIN / FGMAX
          IF (AMELIO .GT. 0.95D0) GOTO 100
        END IF
C
C ---   CALCUL DE RHO(N+1) PAR INTERPOLATION QUADRATIQUE AVEC BORNES
C
        G(POS) = RESIDU
        CALL NMREP2(NR    ,R     ,G     ,FCVG  ,RHOMIN,
     &              RHOMAX,RHOEXM,RHOEXP,POS)
        RHO    = R(POS)
 20   CONTINUE
      ITERHO = ITEMAX
C
C --- STOCKAGE DU RHO OPTIMAL ET DES CHAMPS CORRESPONDANTS
C
 100  CONTINUE
C
C --- CALCUL DE ETA_PILOTAGE
C
      ETA    = ETAOPT
      RHO    = RHOOPT
C
C --- REACTUALISATION DES EFFORTS EXTERIEURS (AVEC ETA)
C
      CALL NMCHEX(VEASST,'VEASSE','CNFEXT',CNFEXT)
      CALL NMFEXT(ETA   ,FONACT,SDDYNA,VEASST,CNFEXT)
C
C --- RECUPERATION DES VARIABLES EN T+ (PAS DE RECALCUL)
C
      IF (OPT.NE.1) THEN
        CALL COPISD('CHAMP_GD','V',SIGPLT,SIGPLU)
        CALL COPISD('CHAMP_GD','V',VARPLT,VARPLU)
        CALL COPISD('CHAMP_GD','V',CNFINS(OPT),CNFINT)
        CALL COPISD('CHAMP_GD','V',CNDIRS(OPT),CNDIRI)
      END IF
C
C --- INFORMATIONS SUR LA RECHERCHE LINEAIRE
C
      CONV(10)  = ITERHO
      CONV(11)  = RHOOPT
      PILCVG    = PILOPT
 9999 CONTINUE
C
C --- LE CALCUL DE PILOTAGE A FORCEMENT ETE REALISE
C
      CALL ASSERT(PILCVG.GE.0)
C
      CALL JEDEMA()
      END
