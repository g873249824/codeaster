      SUBROUTINE NMREPL(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,CNFEXT,CNFINT,CNDIRI,
     &                  PARMET,CARCRI,FONACT,ITERAT,INDRO ,
     &                  PARCRI,CONV  ,METHOD,RESOCO,SDPILO,
     &                  SDDYNA,VALMOI,VALPLU,DEPALG,POUGD ,
     &                  SECMBR,VEELEM,MEELEM,MEASSE,DINST ,
     &                  ETAN  ,ETA   ,RHO   ,OFFSET,LICCVG)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C TOLE CRP_21
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      LOGICAL       FONACT(*)        
      INTEGER       ITERAT, LICCVG(*), INDRO
      REAL*8        PARMET(*), CONV(*),DINST, ETA, ETAN,RHO,OFFSET
      REAL*8        PARCRI(*)
      CHARACTER*14  SDPILO
      CHARACTER*16  METHOD(*)
      CHARACTER*19  LISCHA,SDDYNA
      CHARACTER*19  CNFEXT,CNFINT,CNDIRI 
      CHARACTER*24  CARCRI,RESOCO            
      CHARACTER*24  MODELE,NUMEDD,MATE  ,CARELE,COMREF,COMPOR
      CHARACTER*24  VALMOI(8),POUGD (8), VALPLU(8),DEPALG(8),SECMBR(8)
      CHARACTER*8   MEELEM(8),VEELEM(30)     
      CHARACTER*19  MEASSE(8) 
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PILOTAGE)
C
C CHOIX DU ETA DE PILOTAGE AVEC RECHERCHE LINEAIRE
C      
C ----------------------------------------------------------------------
C
C
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : L_CHARGES
C I/O CNFEXT : RESULTANTE DES EFFORTS EXTERIEURS
C                       (RECALCULEE QD DIRECTION DESCENTE = PREDICTION)
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  PARCRI : CRITERES DE CONVERGENCE GLOBAUX
C IN  ITERAT : NUMERO D'ITERATION DE NEWTON
C IN  RESOCO : SD CONTACT
C OUT CNFINT : FORCES INTERNES   - FINT + AT.MU
C OUT CNDIRI : REACTIONS D'APPUI - BT.LAMBDA + AT.MU
C OUT CONV   : INFORMATIONS SUR LA CONVERGENCE DU CALCUL
C                       (10) ITERATIONS RECHERCHE LINEAIRE
C                       (11) VALEUR DE RHO
C IN  INDRO  : ADRESSE POUR GRANDES ROTATIONS
C IN  VALMOI : ETAT EN T-
C IN  VALPLU : ETAT EN T+ 
C IN  SECMBR : SECONDS MEMBRES
C IN  POUGD  : INFOS POUTRES EN GRANDES ROTATIONS
C IN  DEPALG : VARIABLE CHAPEAU POUR DEPLACEMENTS 
C IN  SDPILO : SD PILOTAGE
C IN  DINST  : INCREMENT DE TEMPS
C IN  ETAN   : ETA_PILOTAGE AU DEBUT DE L'ITERATION
C OUT ETA    : PARAMETRE DE PILOTAGE
C OUT RHO    : PARAMETRE DE RECHERCHE_LINEAIRE
C OUT OFFSET : DECALAGE DE ETA_PILOTAGE EN FONCTION DE RHO
C OUT LICCVG : (1) CODE DE CONVERGENCE POUR LE PILOTAGE
C                     - 1 : BORNE ATTEINTE -> FIN DU CALCUL
C                       0 : RAS
C                       1 : PAS DE SOLUTION
C              (2) CODE RETOUR DE L'INTEGRATION DU COMPORTEMENT
C                       0 : CAS DE FONCTIONNEMENT NORMAL
C                       1 : ECHEC DE L'INTEGRATION DE LA LDC
C                       3 : SIZZ PAS NUL POUR C_PLAN DEBORST
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      LOGICAL      EXOPT, MIEUX
      INTEGER      ITEMAX, ITERHO, NEQ, ACT, OPT
      INTEGER      LDCCVG,PILOPT
      INTEGER      NBEFFE, JPLTK
      INTEGER      PILCVG
      INTEGER      NR, POS, IRET, NBSTO,N,NBATTE
      INTEGER      ISMAEM
      REAL*8       RHOMIN,RHOMAX, RHOEXM, RHOEXP, RATCVG, FCVG
      REAL*8       RHOOPT,F0,FOPT,PROETA(2)
      REAL*8       R8MAEM
      REAL*8       R(1002), G(1002), MEMFG(1002)
      REAL*8       FGMAX, FGMIN, AMELIO, RESIDU, ETAOPT
      CHARACTER*8  K8BID
      CHARACTER*19 CNFINS(2),CNDIRS(2)
      CHARACTER*24 DEPMOI,SIGMOI,VARMOI,COMMOI
      CHARACTER*24 DEPPLU,SIGPLU,VARPLU,COMPLU
      CHARACTER*24 DEPDEL,DDEPLA,DEPOLD,CNFEPI,DEPPRE(2)  
      CHARACTER*24 SIGPLT,VARPLT,DEPDET,DEPPLT
      CHARACTER*24 VALPLT(8,2),DEPALT(8)
      CHARACTER*24 K24BID,K24BLA,TYPILO
      INTEGER      IFM,NIV
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('PILOTAGE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<PILOTAGE> ... PILOTAGE AVEC RECH_LINE'  
      ENDIF      
C
C --- INITIALISATIONS
C
      K24BLA = ' '
      IF (DINST .LT. PARMET(13)) THEN
        ITEMAX = NINT(PARMET(12))
      ELSE
        ITEMAX = NINT(PARMET(10))
      END IF   
      RHOMIN =   PARMET(14)
      RHOMAX =   PARMET(15)
      RHOEXM =  -PARMET(16)
      RHOEXP =   PARMET(16)
      RATCVG = PARMET(11)
      FOPT   = R8MAEM()
      PILOPT = ISMAEM()
      DEPDET = '&&CNREPL.CHP1'
      DEPPLT = '&&CNREPL.CHP2'
      NBSTO  = 0     
      IF (ITEMAX .GT. 1000) CALL U2MESS('F','ALGORITH8_29')
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C       
      CALL DESAGG(DEPALG,DDEPLA,DEPDEL,DEPOLD,DEPPRE(1),
     &            DEPPRE(2),K24BID,K24BID,K24BID)   
      CALL DESAGG(SECMBR,K24BID,CNFEPI,K24BID,K24BID,
     &            K24BID,K24BID,K24BID,K24BID)     
      CALL DESAGG(VALMOI,DEPMOI,SIGMOI,VARMOI,COMMOI,
     &            K24BID,K24BID,K24BID,K24BID)
      CALL DESAGG(VALPLU,DEPPLU,SIGPLU,VARPLU,COMPLU,
     &            K24BID,K24BID,K24BID,K24BID)                   
C
C --- LECTURE DONNEES PILOTAGE
C
      CALL JEVEUO(SDPILO(1:14)//'.PLTK','L',JPLTK)
      TYPILO = ZK24(JPLTK)      
C      
C --- FONCTIONS DE PILOTAGE LINEAIRES : RECHERCHE LINEAIRE STANDARD
C
      IF (TYPILO.EQ.'DDL_IMPO' ) THEN
        CALL NMRELI(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &              COMPOR,LISCHA,CNFEXT,CNFINT,CNDIRI,
     &              PARMET,CARCRI,FONACT,ITERAT,INDRO ,
     &              PARCRI,CONV  ,METHOD,RESOCO,VALMOI,  
     &              VALPLU,DEPALG,POUGD ,VEELEM,MEELEM,
     &              MEASSE,SDDYNA,LDCCVG)
        LICCVG(2) = LDCCVG
        GOTO 9999
      END IF
C
C --- PREPARATION DES ZONES TEMPORAIRES POUR ITERATION COURANTE
C
      CNFINS(1) =  CNFINT
      CNFINS(2) = '&&NMREPL.RESI'
      CNDIRS(1) =  CNDIRI
      CNDIRS(2) = '&&NMREPL.DIRI'
      SIGPLT    = '&&NMREPL.SIGP'
      VARPLT    = '&&NMREPL.VARP'
      CALL EXISD('CHAMP_GD',VARPLT,IRET)
      IF (IRET.EQ.0) CALL COPISD('CHAMP_GD','V',VARPLU,VARPLT)
      CALL COPISD('CHAMP_GD','V',DEPPLU,DEPPLT)
C
C --- CONSTRUCTION DES VARIABLES CHAPEAUX
C 
      CALL AGGLOM(DEPPLT,SIGPLU,VARPLU,COMPLU,K24BLA,
     &            K24BLA,K24BLA,K24BLA, 4, VALPLT(1,1))
      CALL AGGLOM(DEPPLT,SIGPLT,VARPLT,COMPLU,K24BLA,
     &            K24BLA,K24BLA,K24BLA, 4, VALPLT(1,2))
      CALL AGGLOM(DDEPLA,DEPDET,DEPOLD,DEPPRE(1),DEPPRE(2),
     &            K24BLA,K24BLA,K24BLA, 5, DEPALT)
C     
C --- CALCUL DE F(RHO=0)
C
      CALL NMPILR(NEQ   ,CNFINT,CNDIRI,CNFEXT,F0) 
      FCVG = ABS(RATCVG * F0)
C                 
C --- INITIALISATION ET DIRECTION DE DESCENTE      
C
      NR     = 2
      R(1)   = 0.D0
      R(2)   = 1.D0
      G(1)   = F0
      POS    = 2
      NBATTE = 2
C
C --- BOUCLE DE RECHERCHE LINEAIRE
C 
      RHO  = 1.D0
      ACT  = 1

      DO 20 ITERHO = 0, ITEMAX          
C
C --- CALCUL DE LA NOUVELLE DIRECTION DE DESCENTE
C        
        CALL NMPILO(SDPILO,DINST ,RHO   ,DEPALG,CNFEPI,
     &              MODELE,MATE  ,COMPOR,VALMOI,NBATTE,
     &              NUMEDD,NBEFFE,PROETA,PILCVG)
        LICCVG(1) = PILCVG
C
C --- DECALAGE DU ETA_PILOTAGE
C
        IF (LICCVG(1).EQ.1) THEN
          GOTO 9999
        ELSE  
          OFFSET = ETAN*(1-RHO)
          DO 21 N=1,NBEFFE
            PROETA(N) = PROETA(N) + OFFSET
 21       CONTINUE
        ENDIF
C
C --- CHOIX DU ETA_PILOTAGE
C
        CALL NMCETA(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &              COMPOR,LISCHA,CNFEXT,CNFINS(ACT),CNDIRS(ACT),
     &              CARCRI,FONACT,SDPILO,SDDYNA,ITERAT,
     &              INDRO ,POUGD ,RESOCO,VALMOI,VALPLT(1,ACT),
     &              SECMBR,DEPALG,NBEFFE,VEELEM,MEELEM,
     &              MEASSE,.TRUE.,PROETA,OFFSET,RHO   ,ETA   ,
     &              LICCVG,RESIDU)
C
C --- PB CVG: S'IL EXISTE DEJA UN RHO OPTIMAL, ON LE CONSERVE ET ON SORT
C
        IF (LICCVG(2).LT.0) THEN
          IF (EXOPT) GOTO 100
          GOTO 9999
        END IF
C 
C --- SI ON A PAS ENCORE CONVERGE LE PILO : 
C ---    * ON PREND UN PILO CONVERGE QQ SOIT LE RESIDU
C --- SINON :
C ---    * ON CHERCHE A BAISSER LE RESIDU AVEC UN PILO CONVERGE
C
        IF (PILOPT.GT.0) THEN
          MIEUX = LICCVG(1).LE.0 .OR. RESIDU.LT.FOPT
        ELSE
          MIEUX = LICCVG(1).LE.0 .AND . RESIDU.LT.FOPT
        END IF

        IF (MIEUX) THEN
          EXOPT  = .TRUE.
          RHOOPT = RHO
          ETAOPT = ETA
          PILOPT = LICCVG(1)
          FOPT   = RESIDU
          OPT    = ACT
          ACT    = 3 - ACT
        END IF
C
C --- MEMOIRE DES RESIDUS ATTEINTS
C
        NBSTO = NBSTO + 1
        MEMFG(NBSTO) = RESIDU
C
C --- ARRET SI SATISFACTION DU CRITERE
C
        IF (RESIDU .LT. FCVG) GOTO 100
C
C --- ARRET SI IL N'Y A PLUS D'AMELIORATIONS SIGNIFICATIVES
C
        IF (NBSTO .GE. 3) THEN
          FGMAX = MAX(MEMFG(NBSTO),MEMFG(NBSTO-1),MEMFG(NBSTO-2))
          FGMIN = MIN(MEMFG(NBSTO),MEMFG(NBSTO-1),MEMFG(NBSTO-2))
          AMELIO = FGMIN / FGMAX
          IF (AMELIO .GT. 0.95D0) GOTO 100
        END IF
C
C --- CALCUL DE RHO(N+1) PAR INTERPOLATION QUADRATIQUE AVEC BORNES
C
        G(POS) = RESIDU
        CALL NMREP2(NR,R,G,FCVG,RHOMIN,RHOMAX,RHOEXM,RHOEXP,POS)
        RHO = R(POS)
 20   CONTINUE
      ITERHO = ITEMAX
C
C --- STOCKAGE DU RHO OPTIMAL ET DES CHAMPS CORRESPONDANTS
C
 100  CONTINUE
C
C --- CALCUL DE ETA_PILOTAGE
C
      ETA    = ETAOPT
      RHO    = RHOOPT
C
C --- REACTUALISATION DES EFFORTS EXTERIEURS (AVEC ETA)
C
      CALL NMFEXT(NUMEDD,ETA   ,SECMBR,FONACT,RESOCO,
     &            CNFEXT)   
C                     
C --- RECUPERATION DES VARIABLES EN T+ (PAS DE RECALCUL)
C 
      IF (OPT.NE.1) THEN
        CALL COPISD('CHAMP_GD','V',SIGPLT,SIGPLU)
        CALL COPISD('CHAMP_GD','V',VARPLT,VARPLU)
        CALL COPISD('CHAMP_GD','V',CNFINS(OPT),CNFINT)
        CALL COPISD('CHAMP_GD','V',CNDIRS(OPT),CNDIRI)
      END IF
C      
C --- INFORMATIONS SUR LA RECHERCHE LINEAIRE     
C 
      CONV(10)  = ITERHO
      CONV(11)  = RHOOPT
      LICCVG(1) = PILOPT

 9999 CONTINUE
      CALL JEDEMA()
      END
