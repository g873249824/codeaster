      SUBROUTINE NMCALV(TYPVEC,
     &                  MODELZ,LISCHA,MATE  ,CARELE,COMPOR,
     &                  CARCRI,NUMEDD,COMREF,SDTIME,PARCON,
     &                  INSTAM,INSTAP,VALINC,SOLALG,SDDYNA,
     &                  OPTION,VECELE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/06/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*(*) MODELZ
      CHARACTER*24  MATE,CARELE,COMPOR,CARCRI,NUMEDD
      CHARACTER*24  COMREF,SDTIME
      REAL*8        INSTAM,INSTAP,PARCON(*)
      CHARACTER*19  LISCHA,SDDYNA
      CHARACTER*19  SOLALG(*),VALINC(*)
      CHARACTER*6   TYPVEC
      CHARACTER*19  VECELE
      CHARACTER*16  OPTION
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL)
C
C CALCUL DES VECTEURS ELEMENTAIRES
C
C ----------------------------------------------------------------------
C
C
C IN  TYPVEC : TYPE DE CALCUL VECT_ELEM
C IN  MODELE : MODELE
C IN  LISCHA : LISTE DES CHARGES
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMPOR : CARTE DECRIVANT LE TYPE DE COMPORTEMENT
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  NUMEDD : NUME_DDL
C IN  SDTIME : SD TIMER
C IN  COMREF : VARI_COM DE REFERENCE
C IN  PARCON : PARAMETRES DU CRITERE DE CONVERGENCE REFERENCE
C IN  INSTAM : INSTANT MOINS
C IN  INSTAP : INSTANT PLUS
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  SDDYNA : SD DYNAMIQUE
C IN  OPTION : OPTION DE CALCUL DE VECT_ELEM
C OUT VECELE : VECT_ELEM CALCULE
C
C
C
C
      CHARACTER*24 MODELE
      CHARACTER*19 DEPMOI,SIGMOI,COMMOI,DEPDEL,VITMOI,SIGEXT
      CHARACTER*19 COMPLU,VITPLU,STRMOI
      CHARACTER*24 VRCMOI,VRCPLU,VARC
      CHARACTER*19 DEPL,SIGM,STRX
      LOGICAL      FNOEVO
      INTEGER      NEQ   ,IRET,IBID
      REAL*8       PARTPS(2),INST(3)
      CHARACTER*24 CHARGE,INFOCH
      CHARACTER*8  NOMA,K8BID
      CHARACTER*16 OPTIO2
      INTEGER      IFM,NIV
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- INITIALISATIONS
C
      MODELE = MODELZ
      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE'  ,IBID  ,NOMA  ,IRET)
      CALL DISMOI('F','NB_EQUA   ',NUMEDD,'NUME_DDL',NEQ   ,K8BID ,IRET)
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      IF (VALINC(1)(1:1).NE.' ') THEN
        CALL NMCHEX(VALINC,'VALINC','DEPMOI',DEPMOI)
        CALL NMCHEX(VALINC,'VALINC','VITMOI',VITMOI)
        CALL NMCHEX(VALINC,'VALINC','SIGMOI',SIGMOI)
        CALL NMCHEX(VALINC,'VALINC','COMMOI',COMMOI)
        CALL NMCHEX(VALINC,'VALINC','STRMOI',STRMOI)
        CALL NMCHEX(VALINC,'VALINC','COMPLU',COMPLU)
        CALL NMCHEX(VALINC,'VALINC','VITPLU',VITPLU)
        CALL NMCHEX(VALINC,'VALINC','SIGEXT',SIGEXT)
      ENDIF
      IF (SOLALG(1)(1:1).NE.' ') THEN
        IF (TYPVEC.EQ.'CNFNOD') THEN
          CALL NMDEP0('ON ',SOLALG)
        ENDIF
        CALL NMCHEX(SOLALG,'SOLALG','DEPDEL',DEPDEL)
      ENDIF
C
C --- VARIABLES TEMPS
C
      PARTPS(1) = INSTAM
      PARTPS(2) = INSTAP
C
      INST(1)   = INSTAP
      INST(2)   = INSTAP-INSTAM
      INST(3)   = 0.D0
      FNOEVO    = .TRUE.
C
      CHARGE = LISCHA(1:19)//'.LCHA'
      INFOCH = LISCHA(1:19)//'.INFC'
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ   ,K8BID,IRET)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><VECT> CALCUL DES VECT_ELEM'//
     &                ' DE TYPE <',TYPVEC,'>'
      ENDIF
C
C --- MESURES
C
      CALL NMTIME(SDTIME,'INI','SECO_MEMB')
      CALL NMTIME(SDTIME,'RUN','SECO_MEMB')
C
C --- FORCES NODALES
C
      IF (TYPVEC.EQ.'CNFNOD') THEN
        OPTIO2 = 'FORC_NODA'

        IF (OPTION.EQ.'SIGMOI') THEN
          CALL NMVCEX('TOUT',COMMOI,VRCMOI)
          DEPL   = DEPMOI
          VARC   = VRCMOI
          SIGM   = SIGMOI
          STRX   = STRMOI
        ELSEIF (OPTION.EQ.'SIGEXT') THEN
          CALL NMVCEX('TOUT',COMMOI,VRCMOI)
          DEPL   = DEPMOI
          VARC   = VRCMOI
          SIGM   = SIGEXT
          STRX   = ' '
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF

        CALL VEFNME(MODELE,SIGM  ,CARELE,DEPL  ,DEPDEL,
     &              VECELE,MATE  ,COMPOR,0     ,FNOEVO,
     &              PARTPS,CARCRI,VARC  ,' '   ,LISCHA,
     &              OPTIO2,STRX  )
        CALL NMDEP0('OFF',SOLALG)
C
C --- DEPLACEMENTS DIRICHLET FIXE
C
      ELSEIF (TYPVEC.EQ.'CNDIDO') THEN
        CALL VEDIME(MODELE,CHARGE,INFOCH,INSTAP,'R',
     &              VECELE)
C
C --- DEPLACEMENTS DIRICHLET DIFFERENTIEL
C
      ELSEIF (TYPVEC.EQ.'CNDIDI') THEN
        CALL NMDIDI(MODELE,LISCHA,DEPMOI,VECELE)
C
C --- DEPLACEMENTS DIRICHLET PILOTE
C
      ELSEIF (TYPVEC.EQ.'CNDIPI') THEN
        CALL VEDPME(MODELE,CHARGE,INFOCH,INSTAP,VECELE)
C
C --- FORCES DE LAPLACE
C
      ELSEIF (TYPVEC.EQ.'CNLAPL') THEN
        CALL VELAME(MODELE,CHARGE,INFOCH,DEPMOI,VECELE)
C
C --- FORCES ONDES PLANES
C
      ELSEIF (TYPVEC.EQ.'CNONDP') THEN
        CALL VEONDP(MODELE,MATE  ,SDDYNA,INSTAP,VECELE)
C
C --- FORCES IMPEDANCE
C
      ELSEIF (TYPVEC.EQ.'CNIMPC') THEN
        CALL VEIMPD(MODELE,MATE  ,VITPLU,SDDYNA,VECELE)
      ELSEIF (TYPVEC.EQ.'CNIMPP') THEN
        CALL VEIMPD(MODELE,MATE  ,VITMOI,SDDYNA,VECELE)
C
C --- FORCES FIXES MECANIQUES DONNEES
C
      ELSEIF (TYPVEC.EQ.'CNFEDO') THEN
        CALL NMVCEX('TOUT',COMPLU,VRCPLU)
        CALL VECHME('S'   ,MODELE,CHARGE,INFOCH,INST  ,
     &              CARELE,MATE  ,VRCPLU,' '   ,VECELE)
C
C --- FORCES PILOTEES
C
      ELSEIF (TYPVEC.EQ.'CNFEPI') THEN
        CALL NMVCEX('TOUT',COMPLU,VRCPLU)
        CALL VEFPME(MODELE,CARELE,MATE  ,CHARGE,INFOCH,
     &              PARTPS,VRCPLU,VECELE, ' ')
C
C --- FORCES ISSUES DU CALCUL PAR SOUS-STRUCTURATION
C
      ELSEIF (TYPVEC.EQ.'CNSSTF') THEN
        CALL NMSSSV(MODELE,MATE  ,CARELE,LISCHA,VECELE)
C
C --- FORCES SUIVEUSES
C
      ELSEIF (TYPVEC.EQ.'CNFSDO') THEN
        CALL VECGME(MODELE,CARELE,MATE  ,CHARGE,INFOCH,
     &              INSTAP,DEPMOI,DEPDEL,VECELE,INSTAM,
     &              COMPOR,CARCRI,' '   ,VITPLU)
C
C --- FORCE DE REFERENCE
C
      ELSEIF (TYPVEC.EQ.'CNREFE') THEN
        CALL NMREFE(MODELE,COMPOR,MATE  ,CARELE,DEPMOI,
     &              PARCON,VECELE)
C
C --- FORCE DE REFERENCE POUR VARIABLES DE COMMANDE INITIALES
C
      ELSEIF (TYPVEC.EQ.'CNVCF1') THEN
        CALL NMVCFO(MODELE,MATE  ,CARELE,COMPOR,COMREF,
     &              COMMOI,VECELE)
C
C --- FORCE DE REFERENCE POUR VARIABLES DE COMMANDE COURANTES
C
      ELSEIF (TYPVEC.EQ.'CNVCF0') THEN
        CALL NMVCFO(MODELE,MATE  ,CARELE,COMPOR,COMREF,
     &              COMPLU,VECELE)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- DEBUG
C
      IF (NIV.EQ.2) THEN
        CALL NMDEBG('VECT',VECELE,IFM   )
      ENDIF
C
      CALL NMTIME(SDTIME,'END','SECO_MEMB')
C
      CALL JEDEMA()
C
      END
