      SUBROUTINE XINILS(NOMA,MAIAUX,GRILLE,NDIM,METH,NFONF,NFONG,GEOFIS,
     &                  A,B,R,NOEUD,COTE,VECT1,VECT2,CNSLT,CNSLN)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 08/03/2011   AUTEUR MASSIN P.MASSIN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C TOLE CRP_20
C
      IMPLICIT NONE
      CHARACTER*8   NOMA,METH,NFONF,NFONG,COTE
      CHARACTER*8   MAIAUX
      CHARACTER*16  GEOFIS
      CHARACTER*19  CNSLT,CNSLN
      REAL*8        A,B,R,NOEUD(3),VECT1(3),VECT2(3)
      LOGICAL       GRILLE

C ----------------------------------------------------------------------
C                      CALCUL INITIAL DES LEVEL-SETS
C
C ENTREE :
C  NOMA   :  OBJET MAILLAGE
C  MAIAUX :  OBJET MAILLAGE SUR LEQUEL LA GRILLE AUXILIAIRE EST DEFINIE.
C            ' ' SI AUCUNE GRILLE EST DEMANDE.
C  GRILLE :  .TRUE. SI UN GRILLE A ETE DEMANDEE. LE MAILLAGE MAIAUX SERA
C                   UTILISE POUR DEFINIR LA GRILLE.
C            .FALSE. SI UN GRILLE N'A PAS ETE DEMANDE.
C  METH   :  METHODE DE CALUL DES LEVEL-SETS
C  NFONF  :  NOM DE LA FONCTION LEVEL SET TANGENTE
C  NFONG  :  NOM DE LA FONCTION LEVEL SET NORMALE
C  GEOFIS :  GEOMETRIE DE LA FISSURE
C  A,B,R,NOEUD,COTE,VECT1,VECT2 : 
C            QUANTITES DEFINISSANT LA GEO DE LA FISS
C SORTIE :
C      CNSLN  :  LEVEL-SET NORMALE  (PLAN DE LA FISSURE)
C      CNSLT  :  LEVEL-SET TANGENTE (TRACE DE LA FISSURE)
C
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
      CHARACTER*32    JEXNUM,JEXATR
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      INTEGER       IA,IMA,ITYPMA,JCONX1,JCONX2,JDLIMA,JDLISE,JMA
      INTEGER       NA,NB,NBAR,NBMA,NBSEF,NMAABS,NUNOA,NUNOB,JCLTSV
      INTEGER       JCNV,JCNL,JCTV,JCTL,NBCMP,JCND,JCTD,NBMAGR,JCONG1,
     &              JCONG2,NBNOC,JCOORC
      REAL*8        XLN,XLT,MAT(3,3)
      INTEGER       NDIM, DIMNO
      INTEGER       IBID,IRET,ME1,ME2,CLSM,ME4
      INTEGER       NBNO,NBNOGR,INO,JCOOR,JCOORG,NBMAF,I,J
      INTEGER       JLTSV,JLTSL,JLNSV,JLNSL,AR(12,2)
      REAL*8        VALPU(3),P2D(2),P3D(3),PLOC(3),VECT3(3),H
      REAL*8        NORME,LSNA,LSNB,D,LSTA,LSTB
      REAL*8        NORI(3),NEXT(3),NMIL(3),VSEG(3),NSEG
      CHARACTER*8   FISS,K8BID,NOMPU(3),TYPMA,NOMNO,NCHAMN,NCHAMT
      CHARACTER*16  K16BID,TYPDIS,VALK(3)
      CHARACTER*19  MAI,CHSLSN,CHSLST
      CHARACTER*24  LISMA,LISNO,LISSE
      REAL*8        R8PREM
      LOGICAL       CALLST
      INTEGER       IFM,NIV

C
      CALL JEMARQ()
      CALL INFDBG('XFEM',IFM,NIV)
      IF (NIV.GE.3) WRITE(IFM,*)'CALCUL DES LEVEL-SETS'
C
      CALL GETRES(FISS,K16BID,K16BID)

      NOMPU(1)='X'
      NOMPU(2)='Y'
      NOMPU(3)='Z'
C
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNO,K8BID,IRET)
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8BID,IRET)
C
      CALL JEVEUO(NOMA//'.COORDO    .VALE','L',JCOOR)
C
      CALL JEVEUO(CNSLT//'.CNSV','E',JLTSV)
      CALL JEVEUO(CNSLT//'.CNSL','E',JLTSL)
      CALL JEVEUO(CNSLN//'.CNSV','E',JLNSV)
      CALL JEVEUO(CNSLN//'.CNSL','E',JLNSL)

      CALL JEVEUO(NOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA//'.CONNEX','LONCUM'),'L',JCONX2)

C     ELABORATE THE CASE "GRILLE AUXILIAIRE"
      IF (GRILLE) THEN
         CALL DISMOI('F','NB_NO_MAILLA',MAIAUX,'MAILLAGE',NBNOGR,K8BID,
     &               IRET)
         CALL DISMOI('F','NB_MA_MAILLA',MAIAUX,'MAILLAGE',NBMAGR,K8BID,
     &               IRET)
         CALL JEVEUO(MAIAUX//'.COORDO    .VALE','L',JCOORG)
         CALL JEVEUO(MAIAUX//'.CONNEX','L',JCONG1)
         CALL JEVEUO(JEXATR(MAIAUX//'.CONNEX','LONCUM'),'L',JCONG2)
      ENDIF

      CALL DISMOI('F','TYPE_DISCONTINUITE',FISS,'FISS_XFEM',
     &                                                 IBID,TYPDIS,IRET)
      IF (TYPDIS.EQ.'INTERFACE') CALLST = .FALSE.
      IF (TYPDIS.EQ.'FISSURE')   CALLST = .TRUE.

      IF (METH.EQ.'FONCTION') THEN

C-----------------------------------------------------------------------
C       DANS LE CAS OU ON DONNE FONC_LT ET FONC_LN
C-----------------------------------------------------------------------

        IF (GRILLE) THEN
           NBNOC  = NBNOGR
           JCOORC = JCOORG
        ELSE
           NBNOC  = NBNO
           JCOORC = JCOOR
        ENDIF

        DO 1 INO=1,NBNOC
          DO 12 DIMNO=1, NDIM
            VALPU(DIMNO)=ZR(JCOORC-1+3*(INO-1)+DIMNO)
 12       CONTINUE
          CALL FOINTE('F ',NFONG, NDIM, NOMPU, VALPU, XLN, IBID )
          IF (CALLST) THEN
            CALL FOINTE('F ',NFONF, NDIM, NOMPU, VALPU, XLT, IBID )
          ELSE
            XLT = -1.D0
          ENDIF
          ZR(JLNSV-1+(INO-1)+1)=XLN
          ZR(JLTSV-1+(INO-1)+1)=XLT
          ZL(JLTSL-1+(INO-1)+1)=.TRUE.
          ZL(JLNSL-1+(INO-1)+1)=.TRUE.
 1      CONTINUE

      ELSEIF (METH.EQ.'GROUP_MA') THEN

C-----------------------------------------------------------------------
C       DANS LE CAS OU ON DONNE GROUP_MA_FISS ET GROUP_MA_FOND
C-----------------------------------------------------------------------

        LISMA = '&&XINILS.LISTE_MA_FISSUR'
        CALL RELIEM(' ',NOMA,'NU_MAILLE','DEFI_FISS',1,1,
     &              'GROUP_MA_FISS','GROUP_MA',LISMA,NBMAF)
        CALL JEVEUO(LISMA,'L',JDLIMA)

        IF (CALLST) THEN
          LISSE = '&&XINILS.LISTE_MA_FONFIS'
          CALL RELIEM(' ',NOMA,'NU_MAILLE','DEFI_FISS',1,1,
     &                'GROUP_MA_FOND','GROUP_MA',LISSE,NBSEF)
          CALL JEVEUO(LISSE,'L',JDLISE)
        ENDIF

        IF (NDIM .EQ. 3) THEN
           IF (GRILLE) THEN
         CALL XLS3D(CALLST,GRILLE,JLTSV,JLTSL,JLNSV,JLNSL,NBNOGR,JCOOR,
     &              JCOORG,NBMAF,JDLIMA,NBSEF,JDLISE,JCONX1,JCONX2,NOMA)
           ELSE
         CALL XLS3D(CALLST,GRILLE,JLTSV,JLTSL,JLNSV,JLNSL,NBNO,JCOOR,
     &              JCOORG,NBMAF,JDLIMA,NBSEF,JDLISE,JCONX1,JCONX2,NOMA)
           ENDIF
        ELSE
           IF (GRILLE) THEN
         CALL XLS2D(CALLST,GRILLE,JLTSV,JLTSL,JLNSV,JLNSL,NBNOGR,JCOOR,
     &              JCOORG,NBMAF,JDLIMA,NBSEF,JDLISE,JCONX1,JCONX2)
           ELSE
         CALL XLS2D(CALLST,GRILLE,JLTSV,JLTSL,JLNSV,JLNSL,NBNO,JCOOR,
     &              JCOORG,NBMAF,JDLIMA,NBSEF,JDLISE,JCONX1,JCONX2)
           ENDIF
        ENDIF

      ELSEIF (METH.EQ.'GEOMETRI') THEN

C-----------------------------------------------------------------------
C       DANS LE CAS OU ON DONNE LA GEOMETRIE DE LA FISSURE
C-----------------------------------------------------------------------

        IF (GRILLE) THEN
           CALL XCATLS(NDIM,GEOFIS,CALLST,JLTSV,JLTSL,JLNSV,JLNSL,
     &                 MAIAUX,VECT1,VECT2,NOEUD,A,B,R,COTE)
        ELSE
           CALL XCATLS(NDIM,GEOFIS,CALLST,JLTSV,JLTSL,JLNSV,JLNSL,
     &                 NOMA,VECT1,VECT2,NOEUD,A,B,R,COTE)
        ENDIF

      ELSE IF (METH.EQ.'CHAMP') THEN

C-----------------------------------------------------------------------
C       DANS LE CAS OU ON DONNE UN CHAMP DE LEVEL SET
C-----------------------------------------------------------------------

        CALL GETVID('DEFI_FISS','CHAM_NO_LSN',1,1,1,NCHAMN,ME4)
        CALL GETVID('DEFI_FISS','CHAM_NO_LST',1,1,1,NCHAMT,IBID)

        CHSLSN='&&XINILS.CHAM_S_LSN'
        CHSLST='&&XINILS.CHAM_S_LST'
        CALL CNOCNS(NCHAMN,'V',CHSLSN)
        IF (CALLST) CALL CNOCNS(NCHAMT,'V',CHSLST)

C       ON VERIFIE LE NOMBRE DE COMPOSANTES = 1  (LSN OU LST)
        CALL JEVEUO(CHSLSN//'.CNSD','L',JCND)
        CALL ASSERT(ZI(JCND+1).EQ.1)
        IF (CALLST) CALL JEVEUO(CHSLST//'.CNSD','L',JCTD)
        IF (CALLST) CALL ASSERT(ZI(JCTD+1).EQ.1)

        CALL JEVEUO(CHSLSN//'.CNSV','L',JCNV)
        CALL JEVEUO(CHSLSN//'.CNSL','L',JCNL)
        IF (CALLST) CALL JEVEUO(CHSLST//'.CNSV','L',JCTV)
        IF (CALLST) CALL JEVEUO(CHSLST//'.CNSL','L',JCTL)

        DO 60 INO=1,NBNO
C           ON VERIFIE QUE LE NOEUD POSSEDE CETTE COMPOSANTE
            CALL ASSERT(ZL(JCNL+INO-1))
            IF (CALLST) CALL ASSERT(ZL(JCTL+INO-1))
            ZR(JLNSV-1+(INO-1)+1)=ZR(JCNV+INO-1)
            ZL(JLNSL-1+(INO-1)+1)=.TRUE.
            IF (CALLST)      ZR(JLTSV-1+(INO-1)+1)=ZR(JCTV+INO-1)
            IF (.NOT.CALLST) ZR(JLTSV-1+(INO-1)+1)= -1.D0
            ZL(JLTSL-1+(INO-1)+1)=.TRUE.
 60     CONTINUE

        CALL JEDETR(CHSLSN)
        IF (CALLST) CALL JEDETR(CHSLST)

      ENDIF

C-----------------------------------------------------------------------
C     REAJUSTEMENT DE LSN (BOOK III 06/02/04) ET LST
C-----------------------------------------------------------------------

      IF (GRILLE) THEN
         CALL XAJULS(IFM,MAIAUX,NBMAGR,CNSLT,CNSLN,JCONG1,JCONG2,CLSM)
      ELSE
         CALL XAJULS(IFM,NOMA,NBMA,CNSLT,CNSLN,JCONX1,JCONX2,CLSM)
      ENDIF

      IF (NIV.GE.2) CALL U2MESI('I','XFEM_37',1,CLSM)

C-----------------------------------------------------------------------
C     FIN
C-----------------------------------------------------------------------

      CALL JEDEMA()
      END
