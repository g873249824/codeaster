      SUBROUTINE CUCRSD(NOMA  ,NUMEDD,DEFICU,RESOCU)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      CHARACTER*8  NOMA
      CHARACTER*24 NUMEDD
      CHARACTER*24 DEFICU,RESOCU
C
C ----------------------------------------------------------------------
C
C ROUTINE LIAISON_UNILATER
C
C CREATION DES STRUCTURES DE DONNEES NECESSAIRES AU TRAITEMENT
C DES LIAISONS UNILATERALES
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  NUMEDD : NUMEROTATION
C OUT DEFICU : SD DE DEFINITION (ISSUE D'AFFE_CHAR_MECA)
C OUT RESOCU : SD DE TRAITEMENT NUMERIQUE
C
C
C
C
      INTEGER      IFM,NIV
      CHARACTER*8  K8BID,CMP,NOMNO
      INTEGER      INO,IDDL,CDDL
      CHARACTER*24 DDLCO,ATMU,APJEU
      CHARACTER*24 VALK(2)
      INTEGER      JDDL,JATMU,JAPJEU
      INTEGER      NNOCU,NBCMP,NCMPG,NUMNO
      INTEGER      CUDISI,ICMP
      INTEGER      IER,IRET,JDECAL,I,NEQ
      CHARACTER*24 CMPGCU,LISNOE,POINOE,APCOEF,NOMNOE,NOMCMP
      INTEGER      JCMPG,JNOE,JPOI,JAPCOE,JNOMNO,JNOMCM
      CHARACTER*24 NOEUMA,COEFMU
      INTEGER      JCOEF
      CHARACTER*24 CM1A,COCO,LIAC,MU,DELT0,DELTA,LIOT
      INTEGER      JCOCO,JLIAC,JMU,JDELT0,JDELTA,JLIOT
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- INITIALISATIONS
C
      NOEUMA = NOMA // '.NOMNOE'
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... CREATION DE LA SD RESULTAT'//
     &                ' LIAISON_UNILATERALE'
      END IF
C
C --- VECTEUR AT.MU (FORCES NODALES)
C
      ATMU   = RESOCU(1:14)//'.ATMU'
      CALL JEEXIN(ATMU,IRET)
      IF (IRET.EQ.0) THEN
        CALL WKVECT(ATMU,'V V R',NEQ,JATMU)
      ENDIF
C
C --- NOMBRE TOTAL DE DDLS ET NOMBRE TOTAL DE NOEUDS
C
      NNOCU = CUDISI(DEFICU,'NNOCU')
      NCMPG = CUDISI(DEFICU,'NCMPG')
C
C --- SD D'INFOS
C
      LISNOE = DEFICU(1:16)//'.LISNOE'
      POINOE = DEFICU(1:16)//'.POINOE'
      CMPGCU = DEFICU(1:16)//'.CMPGCU'
      CALL JEVEUO(CMPGCU,'L',JCMPG)
      CALL JEVEUO(LISNOE,'L',JNOE)
      CALL JEVEUO(POINOE,'L',JPOI)
C
C --- VECTEUR CONTENANT LES NUMEROS DES DDL DU MEMBRE DE GAUCHE
C
      DDLCO  = RESOCU(1:14)//'.APDDL'
      CALL WKVECT(DDLCO,'V V I',30*NNOCU,JDDL)

      NOMNOE = RESOCU(1:14)//'.NOMNOE'
      NOMCMP = RESOCU(1:14)//'.NOMCMP'
      CALL WKVECT(NOMNOE,'V V K8',NCMPG,JNOMNO)
      CALL WKVECT(NOMCMP,'V V K8',NCMPG,JNOMCM)

      ZI(JDDL) = 0
      IDDL     = 1

      DO 100 INO=1,NNOCU

        NUMNO  = ZI(JNOE+INO-1)
        CALL JENUNO(JEXNUM(NOEUMA,NUMNO),NOMNO)
        NBCMP  = ZI(JPOI+INO) - ZI(JPOI+INO-1)
        JDECAL = ZI(JPOI+INO-1)

        DO 200 ICMP = JDECAL,JDECAL+NBCMP-1

          CMP = ZK8(JCMPG-1+ICMP)

          CALL POSDDL('NUME_DDL',NUMEDD,NOMNO,CMP,NUMNO,
     &                CDDL)
          IF (CDDL.EQ.0) THEN
            VALK (1) = NOMNO
            VALK (2) = CMP
            CALL U2MESG('F', 'UNILATER_75',2,VALK,0,0,0,0.D0)
          ELSE
            ZK8(JNOMNO+IDDL-1) = NOMNO
            ZK8(JNOMCM+IDDL-1) = CMP
            ZI(JDDL+IDDL)      = CDDL
            IDDL               = IDDL+1
          ENDIF
 200    CONTINUE
 100  CONTINUE
      IF ((IDDL-1).NE.NCMPG) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- VECTEUR COEFFICIENTS DES DDLS DE GAUCHE
C
      APCOEF = RESOCU(1:14)// '.APCOEF'
      CALL WKVECT(APCOEF,'V V R',30*NNOCU,JAPCOE)
C
C --- VECTEUR PSEUDO-JEU
C
      APJEU  = RESOCU(1:14)//'.APJEU'
      CALL JEEXIN(APJEU,IRET)
      IF (IRET.EQ.0) THEN
        CALL WKVECT(APJEU,'V V R',NNOCU,JAPJEU)
      ENDIF
C
C --- VECTEURS DE TRAVAIL
C
      COCO   = RESOCU(1:14)//'.COCO'
      CALL JEEXIN(COCO,IER)
      IF (IER.EQ.0) THEN
        CALL WKVECT(COCO,'V V I',8,JCOCO)
      ENDIF
      ZI(JCOCO  ) = 3
      ZI(JCOCO+1) = 0
      ZI(JCOCO+2) = 0
      ZI(JCOCO+3) = 0
      ZI(JCOCO+4) = 1
      ZI(JCOCO+5) = 0
      ZI(JCOCO+6) = 0
      ZI(JCOCO+7) = 0

      LIAC   = RESOCU(1:14)//'.LIAC'
      CALL JEEXIN(LIAC,IRET)
      IF (IRET.EQ.0) THEN
        CALL WKVECT(LIAC,'V V I',3*NNOCU+1,JLIAC)
      ENDIF
C
C --- VECTEUR MU
C
      MU     = RESOCU(1:14)//'.MU'
      CALL JEEXIN(MU,IRET)
      IF (IRET.EQ.0) THEN
        CALL WKVECT(MU,'V V R',6*NNOCU,JMU)
      ENDIF
C
C --- VECTEUR COEFMU
C
      COEFMU = RESOCU(1:14)//'.COEFMU'
      CALL JEEXIN(COEFMU,IRET)
      IF (IRET.EQ.0) THEN
        CALL WKVECT(COEFMU,'V V R',NNOCU,JCOEF)
      ENDIF
C
C --- VECTEUR DELTA ET DELTA0
C
      DELT0  = RESOCU(1:14)//'.DEL0'
      CALL JEEXIN(DELT0,IRET)
      IF (IRET.EQ.0) THEN
        CALL WKVECT(DELT0,'V V R',NEQ,JDELT0)
      ENDIF
      DELTA  = RESOCU(1:14)//'.DELT'
      CALL JEEXIN(DELTA,IRET)
      IF (IRET.EQ.0) THEN
        CALL WKVECT(DELTA,'V V R',NEQ,JDELTA)
      ENDIF
C
C --- VECTEUR POUR PIVOTS NULS
C
      LIOT   = RESOCU(1:14)//'.LIOT'
      CALL JEEXIN(LIOT,IER)
      IF (IER.EQ.0) THEN
        CALL WKVECT(LIOT,'V V I',4*NNOCU+4,JLIOT)
      ENDIF
C
C --- MATRICE CM1AT
C
      CM1A   = RESOCU(1:14)//'.CM1A'
      CALL JECREC(CM1A,'V V R','NU','DISPERSE','CONSTANT',NCMPG)
      CALL JEECRA(CM1A,'LONMAX',NEQ,K8BID)
      DO 40 I = 1, NCMPG
         CALL JECROC(JEXNUM(CM1A,I))
 40   CONTINUE
C
C --- MATRICE DE LA LIAISON_UNILATERALE ACM1AT
C
      CALL CFCRMA(NCMPG,NOMA,RESOCU)
C

C ----------------------------------------------------------------------
      CALL JEDEMA ()
      END
