      SUBROUTINE CFADDM(JAPPTR,JAPPAR,JAPMEM,JAPJEU,JNORMO,JPDDL, 
     &                  JTANGO,JAPCOF,JAPCOE,JAPJFX,JAPJFY,JAPDDL,
     &                  TYPALF,FROT3D,
     &                  POSNOE,POSMA,IESCL,NESMAX,REAC,
     &                  NORM,TANG,
     &                  COEF,COFX,COFY,JEU,
     &                  NBNO,POSNO,
     &                  NBDDL,DDL)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/01/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
C
      IMPLICIT      NONE
      INTEGER      JAPPTR
      INTEGER      JAPPAR
      INTEGER      JAPMEM
      INTEGER      JAPJEU
      INTEGER      JNORMO
      INTEGER      JPDDL 
      INTEGER      JTANGO
      INTEGER      JAPCOF
      INTEGER      JAPCOE
      INTEGER      JAPJFX
      INTEGER      JAPJFY
      INTEGER      JAPDDL
      INTEGER      TYPALF
      INTEGER      FROT3D
      INTEGER      POSNOE
      INTEGER      POSMA
      INTEGER      IESCL
      INTEGER      NESMAX
      REAL*8       NORM(3)
      REAL*8       TANG(6)
      REAL*8       COEF(30)
      REAL*8       COFX(30)
      REAL*8       COFY(30)
      REAL*8       JEU
      INTEGER      NBNO
      INTEGER      POSNO(10)
      INTEGER      REAC
      INTEGER      NBDDL
      INTEGER      DDL(30)
C
C ----------------------------------------------------------------------
C ROUTINE APPELEE PAR : CHMANO
C ----------------------------------------------------------------------
C
C SAUVEGARDE DANS RESOCO DES INFOS APRES CALCUL DU JEU
C POUR L'APPARIEMENT MAITRE/ESCLAVE
C
C IN  JAPPTR : POINTEUR VERS RESOCO(1:14)//'.APPOIN'
C IN  JAPPAR : POINTEUR VERS RESOCO(1:14)//'.APPARI'
C IN  JAPMEM : POINTEUR VERS RESOCO(1:14)//'.APMEMO'
C IN  JAPJEU : POINTEUR VERS RESOCO(1:14)//'.APJEU'
C IN  JNORMO : POINTEUR VERS RESOCO(1:14)//'.NORMCO'
C IN  JPDDL  : POINTEUR VERS DEFICO(1:16)//'.PDDLCO'
C IN  JTANGO : POINTEUR VERS RESOCO(1:14)//'.TANGCO'
C IN  JAPCOF : POINTEUR VERS RESOCO(1:14)//'.APCOFR'
C IN  JAPCOE : POINTEUR VERS RESOCO(1:14)//'.APCOEF'
C IN  JAPJFX : POINTEUR VERS RESOCO(1:14)//'.APJEFX'
C IN  JAPJFY : POINTEUR VERS RESOCO(1:14)//'.APJEFY'
C IN  JAPDDL : POINTEUR VERS RESOCO(1:14)//'.APDDL'
C IN  TYPALF : TYPE ALGO UTILISE POUR LE FROTTEMENT
C   LES VALEURS SONT NEGATIVES SI AUCUNE LIAISON ACTIVE
C   0 PAS DE FROTTEMENT 
C   1 FROTTEMENT PENALISE
C   2 FROTTEMENT LAGRANGIEN
C   3 FROTTEMENT METHODE CONTINUE
C IN  FROT3D : VAUT 1 LORSQU'ON CONSIDERE LE FROTTEMENT EN 3D
C IN  POSNOE : POSITION DANS CONTNO DU NOEUD ESCLAVE
C IN  POSMA  : POSITION DE LA MAILLE MAITRE ASSOCIEE 
C IN  IESCL  : INDICE DU NOEUD ESCLAVE
C IN  NESMAX : NOMBRE MAX DE NOEUDS ESCLAVES
C IN  REAC   : INDICATEUR DE REACTUALISATION
C IN  NORM   : VECTEUR NORMAL
C IN  TANG   : LES DEUX VECTEURS TANGENTS
C IN  COEF   : VALEURS EN M DES FONCTIONS DE FORME ASSOCIEES AUX NOEUDS
C IN  COFX   : VALEURS EN M DES FONCTIONS DE FORME ASSOCIEES AUX NOEUDS
C                POUR LA PREMIERE DIRECTION TANGENTE
C IN  COFY   : VALEURS EN M DES FONCTIONS DE FORME ASSOCIEES AUX NOEUDS
C                POUR LA SECONDE DIRECTION TANGENTE
C IN  JEU    : JEU DANS LA DIRECTION DE LA NORMALE CHOISIE (PM.NORM)
C IN  NBNO   : NOMBRE DE NOEUDS MAITRES CONCERNES (MAX: 9)
C IN  POSNO  : INDICES DANS CONTNO DU NOEUD ESCLAVE ET DES NOEUDS 
C               MAITRES (MAX: 1+9=10)
C IN  NBDDL  : NOMBRE DE DDL NOEUD ESCLAVE+NOEUDS MAITRES
C IN  DDL    : NUMEROS DES DDLS ESCLAVE ET MAITRES CONCERNES
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFMMVD,ZAPPA,ZAPME
      INTEGER      JDECAL,JDECDL,NBDDLE,NBDDLM,K,INO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      ZAPPA = CFMMVD('ZAPPA')
      ZAPME = CFMMVD('ZAPME') 
C
C --- INCREMENTATION DU POINTEUR APPOIN
C
      ZI(JAPPTR+IESCL) = ZI(JAPPTR+IESCL-1) + NBDDL
C
C --- MODIF DE APPARI POUR QUE LA PROJECTION NE SOIT PAS REFAITE POUR CE
C --- NOEUD ESCLAVE DANS PROJCO SI ELLE VIENT D'ETRE FAITE DANS RECHCO
C
      ZI(JAPPAR+ZAPPA*(IESCL-1)+3)  = REAC 
      
C --- POSITION DE LA MAILLE MAITRE APPARIEE <POSMA>
      IF (JAPMEM.NE.0) THEN
        ZI(JAPMEM+ZAPME* (POSNOE-1)+2) = POSMA
      ENDIF
      ZI(JAPPAR+ZAPPA*(IESCL-1)+2)  = POSMA
C --- JEU POUR LE NOEUD ESCLAVE
      ZR(JAPJEU+IESCL-1)         = JEU
C --- VECTEUR NORMAL POUR LE NOEUD ESCLAVE
      ZR(JNORMO+3*(IESCL-1)  )  = NORM(1)
      ZR(JNORMO+3*(IESCL-1)+1)  = NORM(2)
      ZR(JNORMO+3*(IESCL-1)+2)  = NORM(3)
C --- VECTEURS TANGENTS POUR LE NOEUD ESCLAVE
      ZR(JTANGO+6*(IESCL-1)  ) = TANG(1)
      ZR(JTANGO+6*(IESCL-1)+1) = TANG(2)
      ZR(JTANGO+6*(IESCL-1)+2) = TANG(3)
      ZR(JTANGO+6*(IESCL-1)+3) = TANG(4)
      ZR(JTANGO+6*(IESCL-1)+4) = TANG(5)
      ZR(JTANGO+6*(IESCL-1)+5) = TANG(6)

C ----------------------------------------------------------------------
C --- TRAITEMENT DES DONNEES POUR LE NOEUD ESCLAVE
C ----------------------------------------------------------------------
C --- NOMBRE DE DDLS ASSOCIES AU NOEUD ESCLAVE
      NBDDLE = ZI(JPDDL+POSNOE) - ZI(JPDDL+POSNOE-1)

C --- DEBUT DU RANGEMENT
      JDECAL = ZI(JAPPTR+IESCL-1)

C --- DDL ET COEFFICIENTS POUR LE CONTACT
      DO 5 K = 1,NBDDLE

        ZR(JAPCOE+JDECAL+K-1) = COEF(K)
        ZI(JAPDDL+JDECAL+K-1) = DDL(K)
   5  CONTINUE
C --- COEFFICIENTS POUR LE FROTTEMENT
      IF (TYPALF.NE.0) THEN
        DO 10 K = 1,NBDDLE
          ZR(JAPCOF+JDECAL+K-1) = COFX(K)
          IF (FROT3D.EQ.1) THEN
            ZR(JAPCOF+JDECAL+30*NESMAX+K-1) = COFY(K)
          END IF
   10   CONTINUE
        IF (FROT3D.EQ.1) THEN
          ZR(JAPJFX+IESCL-1) = 0.D0
          ZR(JAPJFY+IESCL-1) = 0.D0
        ENDIF
      ENDIF
C ----------------------------------------------------------------------
C --- TRAITEMENT DES DONNEES POUR LES NOEUDS MAITRES
C ----------------------------------------------------------------------
      JDECAL = JDECAL + NBDDLE
      JDECDL = NBDDLE 
      DO 50 INO = 1,NBNO

C --- NOMBRE DE DDLS ASSOCIES AU NOEUD MAITRE
        NBDDLM = ZI(JPDDL+POSNO(INO+1)) - ZI(JPDDL+POSNO(INO+1)-1)
C --- DDL ET COEFFICIENTS POUR LE CONTACT
        DO 40 K = 1,NBDDLM
          ZR(JAPCOE+JDECAL+K-1) = COEF(JDECDL+K)
          ZI(JAPDDL+JDECAL+K-1) = DDL(JDECDL+K)
   40   CONTINUE
C --- COEFFICIENTS POUR LE FROTTEMENT
        DO 41 K = 1,NBDDLM
C --- SI FROTTEMENT LAGRANGIEN MAIS PAS 2D
          IF ((ABS(TYPALF).EQ.2).AND.(FROT3D.EQ.0)) THEN
            ZR(JAPCOF+JDECAL+K-1) = COFX(JDECDL+K)
C --- SI FROTTEMENT QUELCONQUE 3D
          ELSE IF (FROT3D.EQ.1) THEN
            ZR(JAPCOF+JDECAL+K-1) = COFX(JDECDL+K)
            ZR(JAPCOF+JDECAL+30*NESMAX+K-1) = COFY(JDECDL+K)
          END IF
   41   CONTINUE
        JDECAL = JDECAL + NBDDLM
        JDECDL = JDECDL + NBDDLM
   50 CONTINUE

C ----------------------------------------------------------------------

      CALL JEDEMA()
      END
