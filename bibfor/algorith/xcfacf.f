      SUBROUTINE XCFACF(JPTINT,PTMAX,IPT,JAINT,LSN,LST,IGEOM,NNO,NDIM,
     &                                                      LLIN,TYPMA)
      IMPLICIT NONE

      INTEGER       JPTINT,PTMAX,IPT,JAINT,IGEOM,NNO,NDIM
      REAL*8        LSN(NNO),LST(NNO)
      CHARACTER*8   TYPMA

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/04/2010   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C              TROUVER LES PTS D'INTERSECTION ENTRE LE FOND DE FISSURE
C                 ET LES FACES POUR LES ELEMENTS EN FOND DE FISSURE
C
C     ENTREE
C       JPTINT   : ADRESSE DES COORDONNEES DES POINTS D'INTERSECTION
C       PTMAX    : NOMBRE MAX DE POINTS D'INTERSECTION
C       IPT      : COMPTEUR DE NOMBRE DE POINTS D'INTERSECTION
C       JAINT    : ADRESSE DES INFOS SUR LES ARETES ASSOCIEES
C       LSN      : VALEURS DE LA LEVEL SET NORMALE
C       LST      : VALEURS DE LA LEVEL SET TANGENTE
C       IGEOM    : ADRESSE DES COORDONNEES DES NOEUDS DE L'ELT PARENT
C       NNO      : NOMBRE DE NOEUDS DE L'ELEMENT
C       NDIM     : DIMENSION DE L'ESPACE
C       TYPMA    : TYPE DE LA MAILLE ASSOCIEE A L'ELEMENT
C
C     SORTIE
C       JPTINT   : ADRESSE DES COORDONNEES DES POINTS D'INTERSECTION
C       IPT      : COMPTEUR DE NOMBRE DE POINTS D'INTERSECTION
C       JAINT    : ADRESSE DES INFOS SUR LES ARETES ASSOCIEES
C
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CHARACTER*8   ELREF,ALIAS
      REAL*8        R8MAEM,RBID,MAXLSN,MINLSN,MAXLST,MINLST
      REAL*8        R8PREM,A(3),B(3),C(3),MP(2)
      REAL*8        LONCAR,PADIST,DMIN,DIST,DST
      REAL*8        M(3)
      INTEGER       I,NBF,IBID,IFQ,J,JMIN,CODRET
      INTEGER       FA(6,4),IBID3(12,3)
      INTEGER       ZXAIN,XXMMVD
      LOGICAL       LLIN,ISMALI
C ----------------------------------------------------------------------

      CALL JEMARQ()
      ZXAIN = XXMMVD('ZXAIN')
      CALL ELREF1(ELREF)

C     INITIALISATION DES MIN ET MAX
      MAXLSN=-1.D0*R8MAEM()
      MINLSN=R8MAEM()
      MAXLST=-1.D0*R8MAEM()
      MINLST=R8MAEM()
    
C     RECHERCHE DU MIN ET MAX DES LEVEL SETS SUR LES NOEUDS
      DO 100 I=1,NNO
        MAXLSN=MAX(LSN(I),MAXLSN)
        MAXLST=MAX(LST(I),MAXLST)
        MINLSN=MIN(LSN(I),MINLSN)
        MINLST=MIN(LST(I),MINLST)
 100  CONTINUE

C     SI CE N'EST PAS UN ELEMENT EN FOND DE FISSURE, ON SORT
C     EN FAIT, CE TEST NE PERMET PAS DE DETECTER TOUS LES CAS
C     IL SE PEUT DONC QUE L'ON NE SORTE PAS MAIS QUE L'ON NE 
C     SOIT PAS SUR UNE ELEMENT EN FOND DE FISSURE
      IF (MINLSN*MAXLSN.GE.0.D0.OR.MINLST*MAXLST.GE.0.D0) GOTO 9999

      CALL CONFAC(TYPMA,IBID3,IBID,FA,NBF)
      
C     BOUCLE SUR LES FACES
      DO 200 IFQ=1,NBF

C       RECHERCHE DES INTERSECTION ENTRE LE FOND DE FISSURE ET LA FACE
        CALL INTFAC(IFQ,FA,NNO,LST,LSN,NDIM,'NON',IBID,IBID,IGEOM,
     &              M,RBID,RBID,CODRET)
        IF (CODRET .EQ. 0) GOTO 200

C       POUR IGNORER LES POINTS CONFONDUS AVEC CEUX 
C       DETECTES DANS XCFACE LORSQUE LE PT EST EXACT SUR UNE ARETE
        DO 250 J=1,IPT
          DST=PADIST(NDIM,M,ZR(JPTINT-1+NDIM*(J-1)+1))
          IF (DST.LE.R8PREM()) GOTO 200
 250    CONTINUE  

C       LONGUEUR CARACTERISTIQUE
        DO 260 I=1,NDIM
          A(I) =  ZR(IGEOM-1+NDIM*(FA(IFQ,1)-1)+I) 
          B(I) =  ZR(IGEOM-1+NDIM*(FA(IFQ,2)-1)+I) 
          C(I) =  ZR(IGEOM-1+NDIM*(FA(IFQ,3)-1)+I) 
 260    CONTINUE          
        LONCAR=(PADIST(NDIM,A,B)+PADIST(NDIM,A,C))/2.D0

C       ON AJOUTE A LA LISTE LE POINT M

        IF (LLIN) THEN
          CALL XAJPIN(JPTINT,PTMAX,IPT,IBID,M,LONCAR,JAINT,0,0,0.D0)
        ELSE
          CALL XAJPIN(JPTINT,PTMAX,IPT,IBID,M,LONCAR,JAINT,-1,-1,0.D0)
        ENDIF

 200  CONTINUE

      IF (.NOT.LLIN) THEN
  
C     POUR UN RACCORD CONTACT (BOOK VI 17/03/2006) ANCIEN SHEMAS
C     ON MET LES LAMBDAS DU FOND EGAUX AU LAMBDA NODAL LE PLUS PROCHE
        DO 300 I=1,IPT

C         ON SE RESTREINT AUX LAMBDA DU FOND
          IF (ZR(JAINT-1+ZXAIN*(I-1)+1).NE.-1.D0) GOTO 300
 
C         RECHERCHE DU LAMBDA NODAL LE PLUS PROCHE 
          DMIN=R8MAEM()
          DO 310 J=1,IPT
            IF (J.EQ.I) GOTO 310
            IF (ZR(JAINT-1+ZXAIN*(J-1)+1).EQ.-1.D0 .OR.
     &        ZR(JAINT-1+ZXAIN*(J-1)+2).EQ.-1.D0 )  GOTO 310
            DIST=PADIST(NDIM,ZR(JPTINT-1+NDIM*(I-1)+1),
     &                  ZR(JPTINT-1+NDIM*(J-1)+1))
            IF (DIST.LE.DMIN) THEN
               DMIN=DIST
               JMIN=J
            ENDIF
 310      CONTINUE
  
C       COPIE DU VECTEUR JAINT 
C       MAIS ON LAISSE UNE INDIC -1 POUR POUVOIR ENCORE RECONNAITRE
C       UN POINT DU FOND
          IF (ZR(JAINT-1+ZXAIN*(JMIN-1)+1).GT.0)
     &      ZR(JAINT-1+ZXAIN*(I-1)+1) = ZR(JAINT-1+ZXAIN*(JMIN-1)+1)
   
          IF (ZR(JAINT-1+ZXAIN*(JMIN-1)+2).GT.0)
     &      ZR(JAINT-1+ZXAIN*(I-1)+2) = ZR(JAINT-1+ZXAIN*(JMIN-1)+2)
   
          ZR(JAINT-1+ZXAIN*(I-1)+3) = ZR(JAINT-1+ZXAIN*(JMIN-1)+3)
          ZR(JAINT-1+ZXAIN*(I-1)+4) = ZR(JAINT-1+ZXAIN*(JMIN-1)+4)

 300    CONTINUE

C --------------------------- FIN ------------------------------------- 
   
C      ON SUPPRIME LES -1 RESTANT
        DO 400 I=1,IPT
          DO 410 J=1,2
            IF (ZR(JAINT-1+ZXAIN*(I-1)+J).EQ.-1.D0) THEN
               ZR(JAINT-1+ZXAIN*(I-1)+J)=0.D0
            ENDIF 
 410      CONTINUE
 400    CONTINUE
      ENDIF

 9999 CONTINUE
      CALL JEDEMA()
      END
