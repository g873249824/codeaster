      SUBROUTINE DELANR(ENEEL1, ENEEL2, DIFNRJ)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/02/2003   AUTEUR PBADEL P.BADEL 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PBADEL P.BADEL

      IMPLICIT NONE
      REAL*8       DIFNRJ
      CHARACTER*24 ENEEL1, ENEEL2

C ----------------------------------------------------------------------
C  LAGRANGIEN PRIMAL :  DIFFERENCE D'ENERGIE ENTRE DEUX ETATS
C ----------------------------------------------------------------------
C IN        ENEEL1  CHAM_ELEM ENERGIE POUR ETAT 1
C IN        ENEEL2  CHAM_ELEM ENERGIE POUR ETAT 2
C OUT       DIFNRJ  DIFFERENCE D'ENERGIE
C ----------------------------------------------------------------------

C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------

      CHARACTER*32 JEXNUM
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------

      INTEGER      NBPT,MAIL,NBMAIL,IAD
      INTEGER      JCESK,JCESD,JCESC,JCESL,JCESV1, JCESV2
      CHARACTER*24 ENRES1, ENRES2


C    INITIALISATION

      CALL JEMARQ()
      ENRES1 = '&&DELANR.ENRES1'
      ENRES2 = '&&DELANR.ENRES2'


C    TRANSFORMATION EN CHAM_ELEM_S
      CALL CELCES(ENEEL1,'V',ENRES1)
      CALL CELCES(ENEEL2,'V',ENRES2)


C    RECUPERATION DES OBJETS DU CHAM_ELEM_S
      CALL JEVEUO(ENRES1(1:19) // '.CESK', 'L', JCESK)
      CALL JEVEUO(ENRES1(1:19) // '.CESD', 'L', JCESD)
      CALL JEVEUO(ENRES1(1:19) // '.CESC', 'L', JCESC)
      CALL JEVEUO(ENRES1(1:19) // '.CESL', 'L', JCESL)
      CALL JEVEUO(ENRES1(1:19) // '.CESV', 'L', JCESV1)
      CALL JEVEUO(ENRES2(1:19) // '.CESV', 'L', JCESV2)


C    GRANDEUR DU CHAMPS
      IF (ZK8(JCESK-1+2).NE.'ENER_R')
     &   CALL UTMESS('F','DELANR_1','ERREUR TRANSFO CHAM_ELEM_S')

C    CHAM_ELEM_S/ELEM
      IF (ZK8(JCESK-1+3).NE.'ELEM')
     &   CALL UTMESS('F','DELANR_2','ERREUR TRANSFO CHAM_ELEM_S')


C    COMPOSANTES PREC CAR CHAM_ELEM
      IF (ZK8(JCESC-1+1).NE.'TOTALE')
     &   CALL UTMESS('F','DELANR_3','ERREUR TRANSFO CHAM_ELEM_S')


C    NOMBRE DE MAILLES
      NBMAIL=ZI(JCESD-1+1)


C    NOMBRE MAXI DE POINTS DE GAUSS SUR UNE MAILLE (1 SEUL)
      NBPT=ZI(JCESD-1+3)
      IF (NBPT.NE.1)
     &   CALL UTMESS('F','DELANR_4','ERREUR TRANSFO CHAM_ELEM_S')


C    CALCUL DU LAGRANGIEN SUR TOUTE LA STRUCTURE

      DIFNRJ = 0.D0

C    ADRESSES

      DO 10 MAIL = 1, NBMAIL
        CALL CESEXI('C',JCESD,JCESL,MAIL,1,1,1,IAD)

        IF (IAD.GT.0) THEN
          DIFNRJ = DIFNRJ + ZR(JCESV2-1+IAD) - ZR(JCESV1-1+IAD)
        END IF

 10   CONTINUE

      CALL JEDEMA()
      END
