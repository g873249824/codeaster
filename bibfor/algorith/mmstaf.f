      SUBROUTINE MMSTAF(NOMA  ,NDIM  ,CHDEPD,COEFAF,LPENAF,
     &                  NUMMAE,ALIASE,NNE   ,NUMMAM,KSIPC1,
     &                  KSIPC2,KSIPR1,KSIPR2,MLAGF1,MLAGF2,
     &                  TAU1  ,TAU2  ,NORM  ,INDCO ,INDFR ,
     &                  RESE  )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'
      CHARACTER*8  NOMA,ALIASE
      INTEGER      NDIM,NNE
      REAL*8       KSIPC1,KSIPC2
      REAL*8       KSIPR1,KSIPR2
      INTEGER      NUMMAE,NUMMAM
      CHARACTER*19 CHDEPD
      REAL*8       TAU1(3),TAU2(3),NORM(3)
      REAL*8       COEFAF
      LOGICAL      LPENAF
      INTEGER      INDFR,INDCO
      REAL*8       MLAGF1(9),MLAGF2(9)
      REAL*8       RESE(3)
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - CONTRAINTES ACTIVES)
C
C STATUT DU FROTTEMENT
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  NDIM   : DIMENSION DE L'ESPACE
C IN  CHDEPD : DEPLACEMENT CUMULE
C IN  COEFAF : COEF_AUGM_FROT
C IN  LPENAF : .TRUE. SI FROTTEMENT PENALISE
C IN  NUMMAE : NUMERO ABSOLU MAILLE ESCLAVE
C IN  ALIASE : NOM D'ALIAS DE L'ELEMENT ESCLAVE
C IN  NNE    : NOMBRE DE NOEUD DE L'ELEMENT ESCLAVE
C IN  NUMMAM : NUMERO ABSOLU MAILLE MAITRE
C IN  KSIPC1 : COORDONNEE KSI1 DU POINT DE CONTACT SUR LA MAILLE ESCLAVE
C IN  KSIPC2 : COORDONNEE KSI2 DU POINT DE CONTACT SUR LA MAILLE ESCLAVE
C IN  KSIPR1 : COORDONNEE KSI1 DU PROJETE DU POINT DE CONTACT SUR LA
C              MAILLE MAITRE
C IN  KSIPR2 : COORDONNEE KSI2 DU PROJETE DU POINT DE CONTACT SUR LA
C              MAILLE MAITRE
C IN  MLAGF1 : MULTIPLICATEUR DE FROTTEMENT 1 SUR LES NOEUDS
C IN  MLAGF2 : MULTIPLICATEUR DE FROTTEMENT 2 SUR LES NOEUDS
C IN  TAU1   : PREMIER VECTEUR TANGENT
C IN  TAU2   : SECOND VECTEUR TANGENT
C IN  NORM   : NORMALE
C IN  INDCO  : STATUT DE CONTACT
C OUT INDFR  : INDICATEUR DE FROTTEMENT
C              - INDFR  = 0 SI ADHERENT
C              - INDFR  = 1 SI GLISSANT
C OUT RESE   : MULITPLICATEUR AUGMENTE DU FROTTEMENT (NORMALISE)
C
C
C
C
      INTEGER      IDIM,IDIM1,IDIM2
      REAL*8       NRESE
      REAL*8       DLAGRF(2),DJEU(3),DJEUT(3)
      REAL*8       DDEPLE(3),DDEPLM(3)
      REAL*8       MPROJT(3,3)
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      NRESE = 0.D0
      INDFR = 0
      DO 10 IDIM = 1,3
        RESE(IDIM)  = 0.D0
        DJEUT(IDIM) = 0.D0
        DJEU(IDIM)  = 0.D0
   10 CONTINUE
      DLAGRF(1) = 0.D0
      DLAGRF(2) = 0.D0
      CALL MATINI(3   ,3     ,0.D0  ,MPROJT)
      IF (INDCO.EQ.0) GOTO 99
C
C --- MATRICE DE PROJECTION TANGENTE
C
      DO 121 IDIM1 = 1,NDIM
        DO 111 IDIM2 = 1,NDIM
          MPROJT(IDIM1,IDIM2) = -1.D0*NORM(IDIM1)*NORM(IDIM2)
111     CONTINUE
121   CONTINUE
      DO 330 IDIM1 = 1,NDIM
        MPROJT(IDIM1,IDIM1) = 1.D0 + MPROJT(IDIM1,IDIM1)
330   CONTINUE
C
C --- MULTIPLICATEUR DE LAGRANGE DE FROTTEMENT DU POINT
C
      CALL MMVALP(NDIM  ,ALIASE,NNE   ,1     ,KSIPC1,
     &            KSIPC2,MLAGF1,DLAGRF(1))
      IF (NDIM.EQ.3) THEN
        CALL MMVALP(NDIM  ,ALIASE,NNE   ,1     ,KSIPC1,
     &              KSIPC2,MLAGF2,DLAGRF(2))
      ENDIF
C
C --- INCREMENTS DE DEPLACEMENT
C
      CALL MCOPCO(NOMA  ,CHDEPD,NDIM  ,NUMMAE,KSIPC1,
     &            KSIPC2,DDEPLE)
      CALL MCOPCO(NOMA  ,CHDEPD,NDIM  ,NUMMAM,KSIPR1,
     &            KSIPR2,DDEPLM)
C
C --- CALCUL DE L'INCREMENT DE JEU
C
      DO 5 IDIM = 1,3
        DJEU(IDIM) = DDEPLE(IDIM) - DDEPLM(IDIM)
   5  CONTINUE
C
C --- PROJECTION DE L'INCREMENT DE JEU SUR LE PLAN TANGENT
C
      DO 20 IDIM1=1,NDIM
        DO 25 IDIM2=1,NDIM
          DJEUT(IDIM1) = MPROJT(IDIM1,IDIM2)*DJEU(IDIM2)+DJEUT(IDIM1)
 25     CONTINUE
 20   CONTINUE
C
C --- SEMI-MULTIPLICATEUR DE FROTTEMENT
C
      IF (LPENAF) THEN
        DO 32 IDIM = 1,3
          RESE(IDIM) = COEFAF*DJEUT(IDIM)
   32   CONTINUE
      ELSE
        IF (NDIM.EQ.2) THEN
          DO 30 IDIM = 1,2
            RESE(IDIM) = DLAGRF(1)*TAU1(IDIM)+COEFAF*DJEUT(IDIM)
   30     CONTINUE
        ELSEIF (NDIM.EQ.3) THEN
          DO 31 IDIM = 1,3
            RESE(IDIM) = DLAGRF(1)*TAU1(IDIM)+
     &                   DLAGRF(2)*TAU2(IDIM)+
     &                   COEFAF*DJEUT(IDIM)
   31     CONTINUE
        ELSE
          CALL ASSERT(.FALSE.)
        END IF
      ENDIF
C
C --- CALCUL DU COEF D'ADHERENCE
C
      DO 40 IDIM = 1,3
        NRESE = RESE(IDIM)*RESE(IDIM) + NRESE
 40   CONTINUE 
      NRESE = SQRT(NRESE)
C
C --- NORMALISATION
C
      IF (NRESE.NE.0.D0) THEN
        DO 50 IDIM = 1,3
          RESE(IDIM) = RESE(IDIM)/NRESE
 50     CONTINUE
      ENDIF
C
C --- ADHERENCE OU GLISSEMENT ?
C
      IF (NRESE.LE.1.D0) THEN
        INDFR = 0
      ELSE
        INDFR = 1
      ENDIF
C
 99   CONTINUE
C
      CALL JEDEMA()
      END
