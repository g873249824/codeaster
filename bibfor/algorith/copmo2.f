      SUBROUTINE COPMO2(BASEMO,NEQ,NU,NBMODE,BMODAL)
      IMPLICIT REAL*8 (A-H,O-Z)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 05/01/99   AUTEUR ACBHHCD G.DEVESA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C
C     FONCTION  :
C     RECOPIE DES MODES PROPRES CONTENU DANS LE CONCEPT MODE_MECA
C     DANS UN VECTEUR DE TRAVAIL AVEC NUMEROTATION DIFFERENTE
C
C
C-----------------------------------------------------------------------
C                             ARGUMENTS
C .________________.____.______________________________________________.
C        NOM        MODE                    ROLE
C  ________________ ____ ______________________________________________
C                         VARIABLES DU SYSTEME DYNAMIQUE MODAL
C  ________________ ____ ______________________________________________
C    BASEMO         <--   NOM DU CONCEPT MODE_MECA
C    NEQ            <--   DIMENSION DU SYSTEME ASSEMBLE
C    NBMODE         <--   NB DE MODES DU CONCEPT MODE_MECA
C    BMODAL          -->  VECTEUR CONTENANT LES MODES
C-----------------------------------------------------------------------
      CHARACTER*8 BASEMO, NOMA, MAILLA
      CHARACTER*24 NOMCHA,DEEQ,NOMCH0
      CHARACTER*24 K8B
      REAL*8 BMODAL(NEQ*NBMODE)
      CHARACTER*14 NU, NU2
C      ----DEBUT DES COMMUNS JEVEUX--------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*6 PGC,OLDPGC
      COMMON /NOMAJE/PGC
C      ----FIN DES COMMUNS JEVEUX----------
C
C
      CALL JEMARQ()
      NOMCH0 = '&&COPMO2.CHAMNO'
      CALL WKVECT(NOMCH0,'V V R',NEQ,IADMOD)
      DEEQ = NU//'.NUME.DEEQ'
      CALL JEVEUO(DEEQ,'L',IDDEEQ)
      CALL DISMOI('F','NOM_MAILLA',NU,'NUME_DDL',NBID,MAILLA,IRET)
      DO 10 I = 1,NBMODE
        CALL RSEXCH(BASEMO,'DEPL',I,NOMCHA,IRET)
        CALL JEVEUO(NOMCHA(1:19)//'.VALE','L',JVAL)
        CALL JEVEUO(NOMCHA(1:19)//'.REFE','L',JREF)
        NOMA = ZK24(JREF)(1:8)
        NU2 = ZK24(JREF+1)(1:14)
C   TEST COMPARANT NOMA A MAILLAGE(NU) 
        IF (NOMA.NE.MAILLA) THEN
         CALL UTDEBM('F','COPMO2','LES DEUX NUMEROTATIONS N''ONT PAS
     &   MEME MAILLAGE D''ORIGINE')
         CALL UTIMPK('L',' NUMEROTATION 1:',1,NU)
         CALL UTIMPK('L','MAILLAGE 1:',1,MAILLA)
         CALL UTIMPK('L',' NUMEROTATION 2:',1,NU2)
         CALL UTIMPK('L','MAILLAGE 2:',1,NOMA)
         CALL UTFINM
        ENDIF
        IF (NU.NE.NU2) THEN
         CALL DISMOI('F','NB_EQUA',NU2,'NUME_DDL',NEQ2,K8B,IERD)
         CALL COPCHN(NOMA,ZR(JVAL),ZR(IADMOD),NU2,NU,NEQ2,NEQ)  
        ELSE
         CALL R8COPY(NEQ,ZR(JVAL),1,ZR(IADMOD),1)
        ENDIF 
        CALL R8COPY(NEQ,ZR(IADMOD),1,BMODAL((I-1)*NEQ+1),1)
        CALL ZERLAG(BMODAL((I-1)*NEQ+1),NEQ,ZI(IDDEEQ))
        CALL JELIBE(NOMCHA(1:19)//'.VALE')
        CALL JELIBE(NOMCHA(1:19)//'.REFE')
   10 CONTINUE
 9999 CONTINUE
      CALL JEDETR(NOMCH0)
      CALL JEDEMA()
      END
