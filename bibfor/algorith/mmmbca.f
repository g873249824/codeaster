      SUBROUTINE MMMBCA(NOMA  ,SDDYNA,ITERAT,DEFICO,RESOCO,
     &                  VALINC,SOLALG,CTCSTA,MMCVCA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/03/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      INCLUDE 'jeveux.h'
      CHARACTER*8   NOMA
      CHARACTER*24  DEFICO,RESOCO
      CHARACTER*19  VALINC(*),SOLALG(*)
      CHARACTER*19  SDDYNA
      LOGICAL       MMCVCA
      INTEGER       ITERAT,CTCSTA
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE)
C
C ALGO. DES CONTRAINTES ACTIVES POUR LE CONTACT METHODE CONTINUE
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  SDDYNA : SD POUR DYNAMIQUE
C IN  ITERAT : NUMERO D'ITERATION DE NEWTON
C IN  DEFICO : SD DE DEFINITION DU CONTACT
C IN  RESOCO : SD DE RESOLUTION DU CONTACT
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C OUT CTCSTA : NOMBRE DE POINTS AYANT CHANGE DE STATUT DE CONTACT
C OUT MMCVCA : INDICATEUR DE CONVERGENCE POUR BOUCLE DES
C              CONTRAINTES ACTIVES
C               .TRUE. SI LA BOUCLE DES CONTRAINTES ACTIVES A CONVERGE
C
C ----------------------------------------------------------------------
C
      CHARACTER*32 JEXNUM
      INTEGER      IBID
      INTEGER      CFMMVD,ZTABF
      INTEGER      IFM,NIV
      INTEGER      CFDISI,MMINFI
      INTEGER      JDECME,POSMAE,NUMMAE,NUMMAM,POSNOE
      INTEGER      INDCON,INDCOI,INDFRN,INDFRI
      INTEGER      IZONE,IMAE,IPTC,IPTM
      INTEGER      NDIMG,NZOCO
      INTEGER      NNE,NPTM,NBMAE
      REAL*8       KSIPR1,KSIPR2,KSIPC1,KSIPC2
      REAL*8       GEOMP(3),GEOME(3)
      REAL*8       VITPM(3),VITPE(3)
      REAL*8       NORM(3),TAU1(3),TAU2(3)
      REAL*8       MLAGC(9),MLAGF1(9),MLAGF2(9)
      REAL*8       COORME(27)
      REAL*8       LAMBDC(1),COEFAC,COEFAF
      REAL*8       NOOR,R8PREM,RESEN(3)
      REAL*8       JEU,JEUVIT,DIST
      CHARACTER*8  NOMMAI,ALIASE
      CHARACTER*19 CNSPLU,CNSDEL
      CHARACTER*19 CNSCON,CNSFR1,CNSFR2
      CHARACTER*24 TABFIN,JEUSUP,MDECOL,APJEU
      INTEGER      JTABF ,JJSUP ,JMDECO,JAPJEU
      CHARACTER*19 OLDGEO,NEWGEO
      CHARACTER*19 CHAVIT,CHDEPD
      CHARACTER*19 DEPDEL,DEPPLU,VITPLU
      LOGICAL      LGLISS,LVITES,SCOTCH
      LOGICAL      NDYNLO,MMINFL,CFDISL,LGLINI,LVERI,LEXIG
      LOGICAL      LFROTZ,LPENAF,LFROT
      INTEGER      MMITGO,MMITFR,MMITCA
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> ... ACTIVATION/DESACTIVATION'
      ENDIF
C
C --- FONCTIONNALITES ACTIVEES
C
      LEXIG  = CFDISL(DEFICO,'EXIS_GLISSIERE')
C
C --- ACCES OBJETS
C
      TABFIN = RESOCO(1:14)//'.TABFIN'
      JEUSUP = RESOCO(1:14)//'.JSUPCO'
      APJEU  = RESOCO(1:14)//'.APJEU'
      CALL JEVEUO(TABFIN,'E',JTABF )
      CALL JEVEUO(JEUSUP,'E',JJSUP )
      CALL JEVEUO(APJEU ,'E',JAPJEU)
      ZTABF  = CFMMVD('ZTABF')
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)
      CALL NMCHEX(VALINC,'VALINC','VITPLU',VITPLU)
      CALL NMCHEX(SOLALG,'SOLALG','DEPDEL',DEPDEL)
C
C --- INDICATEUR DE DECOLLEMENT POUR LE THETA-SCHEMA
C
      MDECOL = RESOCO(1:14)//'.MDECOL'
      CALL JEVEUO(MDECOL,'E',JMDECO)
      SCOTCH = ZL(JMDECO+1-1)
C
C --- REACTUALISATION DE LA GEOMETRIE
C
      OLDGEO = NOMA//'.COORDO'
      NEWGEO = RESOCO(1:14)//'.NEWG'
      CALL VTGPLD('CUMU',OLDGEO,1.D0,DEPPLU,'V',
     &            NEWGEO)
C
C --- POUR LA FORMULATION VITESSE, ON CREEE UN CHAMP DE VITESSE
C
      LVITES = NDYNLO(SDDYNA,'FORMUL_VITE')
      CHAVIT = '&&MMMBCA.ACTUVIT'
      IF (LVITES) THEN
        CALL VTGPLD('ZERO',OLDGEO,1.D0,VITPLU,'V',
     &              CHAVIT)
      ENDIF
C
C --- INITIALISATIONS
C
      NDIMG  = CFDISI(DEFICO,'NDIM' )
      NZOCO  = CFDISI(DEFICO,'NZOCO')
      MMCVCA = .TRUE.
      LFROT  = CFDISL(DEFICO,'FROTTEMENT')
      POSNOE = 0
      CTCSTA = 0
      INDFRN = 0
C
C --- TRANSFORMATION DEPPLU EN CHAM_NO_S ET REDUCTION SUR LES LAGRANGES
C
      CNSPLU = '&&MMMBCA.CNSPLU'
      CALL CNOCNS(DEPPLU,'V',CNSPLU)
      CNSCON = '&&MMMBCA.CNSCON'
      CALL CNSRED(CNSPLU,0,IBID,1,'LAGS_C','V',CNSCON)
C
C --- TRANSFORMATION DEPDEL EN CHAM_NO_S ET REDUCTION SUR LES LAGRANGES
C
      CNSDEL = '&&MMMBCA.CNSDEL'
      CHDEPD = '&&MMMBCA.CHDEPD'
      CNSFR1 = '&&MMMBCA.CNSFR1'
      CNSFR2 = '&&MMMBCA.CNSFR2'
      IF (LFROT) THEN
        CALL CNOCNS(DEPDEL,'V',CNSDEL)
        CALL CNSRED(CNSDEL,0,IBID,1,'LAGS_F1','V',CNSFR1)
        IF (NDIMG.EQ.3) THEN
          CALL CNSRED(CNSDEL,0,IBID,1,'LAGS_F2','V',CNSFR2)
        ENDIF
        CALL VTGPLD('ZERO',OLDGEO,1.D0,DEPDEL,'V',
     &              CHDEPD)
      ENDIF
C
C --- BOUCLE SUR LES ZONES
C
      IPTC   = 1
      DO 10 IZONE = 1,NZOCO
C
C --- OPTIONS SUR LA ZONE DE CONTACT
C
        LGLISS = MMINFL(DEFICO,'GLISSIERE_ZONE'   ,IZONE )
        CALL CFMMCO(DEFICO,RESOCO,IZONE,'COEF_AUGM_CONT','L',
     &              COEFAC)
        CALL CFMMCO(DEFICO,RESOCO,IZONE,'COEF_AUGM_FROT','L',
     &              COEFAF)
        LVERI  = MMINFL(DEFICO,'VERIF' ,IZONE )
        NBMAE  = MMINFI(DEFICO,'NBMAE' ,IZONE )
        JDECME = MMINFI(DEFICO,'JDECME',IZONE )
        LFROTZ = MMINFL(DEFICO,'FROTTEMENT_ZONE',IZONE)
        LPENAF = MMINFL(DEFICO,'ALGO_FROT_PENA',IZONE )
C
C ----- MODE VERIF: ON SAUTE LES POINTS
C
        IF (LVERI) THEN
          GOTO 25
        ENDIF
C
C ----- BOUCLE SUR LES MAILLES ESCLAVES
C
        DO 20 IMAE = 1,NBMAE
C
C ------- NUMERO ABSOLU DE LA MAILLE ESCLAVE
C
          POSMAE = JDECME + IMAE
          CALL CFNUMM(DEFICO,1     ,POSMAE,NUMMAE)
C
C ------- COORDONNNEES DES NOEUDS DE LA MAILLE ESCLAVE
C
          CALL MCOMCE(NOMA  ,NEWGEO,NUMMAE,COORME,ALIASE,
     &                NNE   )
C
C ------- MULTIPLICATEURS DE CONTACT SUR LES NOEUDS ESCLAVES
C
          CALL MMEXTM(DEFICO,CNSCON,POSMAE,MLAGC )
C
C ------- MULTIPLICATEURS DE FROTTEMENT SUR LES NOEUDS ESCLAVES
C
          IF (LFROTZ) THEN
            CALL MMEXTM(DEFICO,CNSFR1,POSMAE,MLAGF1)
            IF (NDIMG.EQ.3) THEN
              CALL MMEXTM(DEFICO,CNSFR2,POSMAE,MLAGF2)
            ENDIF
          ENDIF
C
C ------- NOMBRE DE POINTS SUR LA MAILLE ESCLAVE
C
          CALL MMINFM(POSMAE,DEFICO,'NPTM',NPTM  )
C
C ------- BOUCLE SUR LES POINTS
C
          DO 30 IPTM = 1,NPTM
C
C --------- COORDONNEES ACTUALISEES DU POINT DE CONTACT
C
            KSIPC1    = ZR(JTABF+ZTABF*(IPTC-1)+3 )
            KSIPC2    = ZR(JTABF+ZTABF*(IPTC-1)+4 )
            CALL MMVALP(NDIMG ,ALIASE,NNE   ,3     ,KSIPC1,
     &                  KSIPC2,COORME,GEOME )
C
C --------- COORDONNEES ACTUALISEES DE LA PROJECTION DU POINT DE CONTACT
C
            KSIPR1    = ZR(JTABF+ZTABF*(IPTC-1)+5 )
            KSIPR2    = ZR(JTABF+ZTABF*(IPTC-1)+6 )
            NUMMAM    = NINT(ZR(JTABF+ZTABF*(IPTC-1)+2))
            CALL MCOPCO(NOMA  ,NEWGEO,NDIMG ,NUMMAM,KSIPR1,
     &                  KSIPR2,GEOMP )
C
C --------- TANGENTES AU POINT DE CONTACT PROJETE SUR LA MAILLE MAITRE
C
            TAU1(1)   = ZR(JTABF+ZTABF*(IPTC-1)+7 )
            TAU1(2)   = ZR(JTABF+ZTABF*(IPTC-1)+8 )
            TAU1(3)   = ZR(JTABF+ZTABF*(IPTC-1)+9 )
            TAU2(1)   = ZR(JTABF+ZTABF*(IPTC-1)+10)
            TAU2(2)   = ZR(JTABF+ZTABF*(IPTC-1)+11)
            TAU2(3)   = ZR(JTABF+ZTABF*(IPTC-1)+12)
C
C --------- GLISSIERE ACTIVEE ?
C
            LGLINI    = NINT(ZR(JTABF+ZTABF*(IPTC-1)+17)).EQ.1
C
C --------- CALCUL DE LA NORMALE
C
            CALL MMNORM(NDIMG ,TAU1  ,TAU2  ,NORM  ,NOOR  )
            IF (NOOR.LE.R8PREM()) THEN
              CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NUMMAM),NOMMAI)
              CALL U2MESG('F','CONTACT3_23',1,NOMMAI,0,0,3,GEOMP)
            ENDIF
C
C --------- STATUTS INITIAUX
C
            INDCOI = NINT(ZR(JTABF+ZTABF*(IPTC-1)+22))
            INDFRI = NINT(ZR(JTABF+ZTABF*(IPTC-1)+23))
C
C --------- CALCUL DU JEU ACTUALISE AU POINT DE CONTACT
C
            CALL MMNEWJ(NDIMG ,GEOME ,GEOMP ,NORM  ,JEU   )
C
C --------- CALCUL DU JEU FICTIF AU POINT DE CONTACT
C
            CALL CFDIST(DEFICO,'CONTINUE',IZONE ,POSNOE,POSMAE,
     &                  GEOME ,DIST      )
            ZR(JJSUP+IPTC-1)  = DIST
C
C --------- JEU TOTAL
C
            ZR(JAPJEU+IPTC-1) = JEU+DIST
            JEU = ZR(JAPJEU+IPTC-1)
C
C --------- NOEUDS EXCLUS -> ON SORT DIRECT
C
            IF (ZR(JTABF+ZTABF*(IPTC-1)+18) .EQ. 1.D0) THEN
              INDCON = 0
              INDCOI = 0
              GOTO 19
            ENDIF
C
C --------- MULTIPLICATEUR DE LAGRANGE DE CONTACT DU POINT
C
            CALL MMVALP(NDIMG ,ALIASE,NNE   ,1     ,KSIPC1,
     &                  KSIPC2,MLAGC ,LAMBDC)
C
C --------- FORMULATION EN VITESSE
C
            IF (LVITES) THEN
C
C ----------- COORDONNEES ACTUALISEES DU POINT DE CONTACT ET DU PROJETE
C
              CALL MCOPCO(NOMA  ,CHAVIT,NDIMG ,NUMMAE,KSIPC1,
     &                    KSIPC2,VITPE )
              CALL MCOPCO(NOMA  ,CHAVIT,NDIMG ,NUMMAM,KSIPR1,
     &                    KSIPR2,VITPM )
C
C ----------- CALCUL DU GAP DES VITESSES NORMALES
C
              CALL MMMJEV(NDIMG ,NORM  ,VITPE ,VITPM, JEUVIT)
            ENDIF
C
C --------- TRAITEMENT DES DIFFERENTS CAS DE CONTACT
C
            CALL MMALGO(INDCOI,LVITES,LGLINI,JEU   ,JEUVIT,
     &                  LAMBDC(1),COEFAC,CTCSTA,MMCVCA,SCOTCH,
     &                  INDCON)
C
C --------- STATUT DE FROTTEMENT
C
            IF (LFROTZ) THEN
              CALL MMSTAF(NOMA  ,NDIMG ,CHDEPD,COEFAF,LPENAF,
     &                    NUMMAE,ALIASE,NNE   ,NUMMAM,KSIPC1,
     &                    KSIPC2,KSIPR1,KSIPR2,MLAGF1,MLAGF2,
     &                    TAU1  ,TAU2  ,NORM  ,INDCON,INDFRN,
     &                    RESEN )
            ENDIF
C
   19       CONTINUE
C
C --------- SAUVEGARDE STATUTS
C
            ZR(JTABF+ZTABF*(IPTC-1)+22) = INDCON
            IF (LFROTZ) THEN
              ZR(JTABF+ZTABF*(IPTC-1)+23) = INDFRN
              ZR(JTABF+ZTABF*(IPTC-1)+25) = RESEN(1)
              ZR(JTABF+ZTABF*(IPTC-1)+26) = RESEN(2)
              ZR(JTABF+ZTABF*(IPTC-1)+27) = RESEN(3)
            ENDIF
C
C --------- AFFICHAGE ETAT DU CONTACT
C
            IF (NIV.GE.2) THEN
              CALL MMIMP4(IFM   ,NOMA  ,NUMMAE,IPTM  ,INDCOI,
     &                    INDCON,INDFRI,INDFRN,LFROT ,LVITES,
     &                    LGLISS,JEU   ,JEUVIT,LAMBDC(1))
            ENDIF
C
C --------- LIAISON DE CONTACT SUIVANTE
C
            IPTC   = IPTC + 1
  30      CONTINUE
  20    CONTINUE
  25    CONTINUE
  10  CONTINUE
C
C --- GESTION DE LA GLISSIERE
C
      IF (MMCVCA.AND.LEXIG) THEN
        CALL MMGLIS(DEFICO,RESOCO)
      ENDIF
C
C --- DETECTION DES CYCLAGES
C
      CALL MMCYCD(NOMA  ,DEFICO,RESOCO)
C
C --- GESTION DES EVENT POUR LA COLLISION
C
      CALL MMBOUC(RESOCO,'GEOM','READ',MMITGO)
      CALL MMBOUC(RESOCO,'FROT','READ',MMITFR)
      CALL MMBOUC(RESOCO,'CONT','READ',MMITCA)

      IF ((ITERAT.EQ.0).AND.(MMITGO.EQ.1).AND.(MMITFR.EQ.1).AND.
     &    (MMITCA.EQ.1)) THEN
        CALL MMEVEN('INI',DEFICO,RESOCO)
      ELSE
        CALL MMEVEN('FIN',DEFICO,RESOCO)
      ENDIF
C
C --- SAUVEGARDE DECOLLEMENT POUR LE THETA-SCHEMA
C
      ZL(JMDECO+1-1) =  SCOTCH
C
      CALL JEDETR(NEWGEO)
      CALL JEDETR(CHAVIT)
      CALL JEDETR(CHDEPD)
      CALL DETRSD('CHAM_NO_S',CNSPLU)
      CALL DETRSD('CHAM_NO_S',CNSDEL)
      CALL DETRSD('CHAM_NO_S',CNSCON)
      CALL DETRSD('CHAM_NO_S',CNSFR1)
      CALL DETRSD('CHAM_NO_S',CNSFR2)
C
      CALL JEDEMA()
      END
