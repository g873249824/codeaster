      SUBROUTINE MMMBCA(NOMA  ,SDDYNA,DEFICO,RESOCO,VALINC,
     &                  MMCVCA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/12/2009   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8   NOMA
      CHARACTER*24  DEFICO,RESOCO
      CHARACTER*19  VALINC(*)
      CHARACTER*19  SDDYNA
      LOGICAL       MMCVCA 
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE)
C
C ALGO. DES CONTRAINTES ACTIVES POUR LE CONTACT METHODE CONTINUE
C      
C ----------------------------------------------------------------------
C
C      
C  POUR LES POINTS POSTULES CONTACTANTS ON REGARDE LE SIGNE DE LAMBDA
C  POUR LES POINTS POSTULES NON CONTACTANTS ON REGARDE L'INTEPENETRATION
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  SDDYNA : SD POUR DYNAMIQUE
C IN  DEFICO : SD DE DEFINITION DU CONTACT
C IN  RESOCO : SD DE RESOLUTION DU CONTACT
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C OUT MMCVCA : INDICATEUR DE CONVERGENCE POUR BOUCLE DES 
C              CONTRAINTES ACTIVES
C               .TRUE. SI LA BOUCLE DES CONTRAINTES ACTIVES A CONVERGE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      CHARACTER*32  JEXNUM,JEXNOM
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      CFMMVD,ZMAES,ZTABF
      INTEGER      IFM,NIV,NDIM,GD,CFDISI
      INTEGER      XAINI,XSINI,XSEND,XA,XS
      INTEGER      XANEW,XSNEW
      INTEGER      NTPC,IMAE,NBPC,IPC,IZONE,NEQ,NNE,NTMAE,K
      INTEGER      POSMAE,NUMMAE,NUMMAM,VALI(2)
      REAL*8       KSIPR1,KSIPR2,KSIPC1,KSIPC2
      REAL*8       GEOMM(3),GEOME(3)
      REAL*8       VITPM(3),VITPE(3)
      REAL*8       NORM(3),TAU1(3),TAU2(3),MCON(9)
      REAL*8       COORME(27),FF(9)  
      REAL*8       MMINFR,ASPERI,LAMBDC
      REAL*8       NOOR,R8PREM
      REAL*8       JEU,JEUVIT,DIST,JEUUSU
      CHARACTER*8  NOMGD,K8BID,NOMMAI,ALIAS
      CHARACTER*19 CNSPLU
      CHARACTER*24 MAESCL,TABFIN,JEUSUP,FLIFLO,MDECOL,APJEU
      INTEGER      JMAESC,JTABF ,JJSUP ,JFLIP ,JMDECO,JAPJEU
      CHARACTER*19 NEWGEO,OLDGEO,CHAVIT
      CHARACTER*19 DEPPLU,VITPLU
      LOGICAL      LCOMPL,LGLISS,LVITES,SCOTCH,LUSURE
      LOGICAL      NDYNLO,MMINFL,LGLINI
      INTEGER      FLINBR,FLIPOI,FLIMAI,FLIMAX
      INTEGER      NCMPMX,POSNOE,CODRET
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)                  
C
C --- ACCES OBJETS
C
      MAESCL = DEFICO(1:16)//'.MAESCL'
      TABFIN = RESOCO(1:14)//'.TABFIN'      
      JEUSUP = RESOCO(1:14)//'.JEUSUP'
      APJEU  = RESOCO(1:14)//'.APJEU'
      CALL JEVEUO(MAESCL,'L',JMAESC)
      CALL JEVEUO(TABFIN,'E',JTABF)
      CALL JEVEUO(JEUSUP,'E',JJSUP)
      CALL JEVEUO(APJEU ,'E',JAPJEU)      
      ZMAES = CFMMVD('ZMAES')
      ZTABF = CFMMVD('ZTABF')      
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)
      CALL NMCHEX(VALINC,'VALINC','VITPLU',VITPLU)      
      CALL JELIRA(DEPPLU(1:19)//'.VALE','LONMAX',NEQ,K8BID)        
C
C --- INDICATEUR DE DECOLLEMENT DANS COMPLIANCE
C
      MDECOL = RESOCO(1:14)//'.MDECOL'
      CALL JEVEUO(MDECOL,'E',JMDECO)  
      SCOTCH = ZL(JMDECO+1-1)                             
C
C --- REACTUALISATION DE LA GEOMETRIE
C       
      OLDGEO = NOMA//'.COORDO'
      NEWGEO = '&&MMMBCA.ACTUGEO'
      CALL VTGPLD(OLDGEO,1.0D0,DEPPLU,'V',NEWGEO)
C
C --- POUR LA FORMULATION VITESSE, ON CREEE UN CHAMP DE VITESSE
C     CE N'EST PAS TRES ELEGANT, MAIS CA MARCHE, EN ATTENDANT MIEUX...
C
      LVITES = NDYNLO(SDDYNA,'FORMUL_VITE')
      CHAVIT = '&&MMMBCA.ACTUVIT'
      IF (LVITES) THEN    
        CALL VTGPLK(OLDGEO,1.0D0,VITPLU,'V',CHAVIT)
      ENDIF
C
C --- INITIALISATIONS
C      
      NDIM   = CFDISI(DEFICO,'NDIM' )
      NTMAE  = CFDISI(DEFICO,'NTMAE')
      MMCVCA = .TRUE.  
      NOMGD  = 'NEUT_R'
      POSNOE = 0
      JEUUSU = 0.D0
      CALL JENONU(JEXNOM('&CATA.GD.NOMGD',NOMGD),GD)
      CALL JELIRA(JEXNUM('&CATA.GD.NOMCMP',GD),'LONMAX',NCMPMX,K8BID)
C     
C --- ACCES SD POUR LE FLIP-FLOP
C
      FLINBR = 0
      FLIPOI = 0 
      FLIMAI = 0    
      FLIMAX = CFDISI(DEFICO,'FLIP_FLOP_IMAX') 
      FLIFLO = RESOCO(1:14)//'.FLIPFLOP '
      CALL JEVEUO(FLIFLO,'E',JFLIP) 
C
C --- TRANSFORMATION DEPPLU EN CHAM_NO_S
C
      CNSPLU = '&&MMMBCA.CNSPLU'
      CALL CNOCNS(DEPPLU,'V',CNSPLU)       
C      
C --- BOUCLE SUR LES MAILLES ESCLAVES
C
      NTPC   = 0 
      DO 30 IMAE = 1,NTMAE
C
C --- ZONE DE CONTACT 
C   
        IZONE  = ZI(JMAESC+ZMAES*(IMAE-1)+2-1) 
C
C --- OPTIONS SUR LA ZONE DE CONTACT
C             
        LCOMPL = MMINFL(DEFICO,'COMPLIANCE'       ,IZONE )
        ASPERI = MMINFR(DEFICO,'COMPL_ASPERITE'   ,IZONE )
        LGLISS = MMINFL(DEFICO,'GLISSIERE_ZONE'   ,IZONE )
        LUSURE = MMINFL(DEFICO,'USURE'            ,IZONE )
C
C --- MAILLE ESCLAVE COURANTE
C       
        POSMAE = ZI(JMAESC+ZMAES*(IMAE-1)+1-1)
C
C --- INFOS SUR LA MAILLE ESCLAVE COURANTE
C 
        NBPC   = ZI(JMAESC+ZMAES*(IMAE-1)+3-1)
        CALL CFPOSM(NOMA  ,DEFICO,'MAIL',1     ,POSMAE,
     &              NUMMAE,CODRET) 
        IF (CODRET.GE.0) THEN
          CALL MCOMCE(NOMA  ,NEWGEO,NUMMAE,COORME,ALIAS ,
     &                NNE   )
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF   
C        
C --- MULTIPLICATEURS DE CONTACT SUR LES NOEUDS ESCLAVES
C        
        CALL CALLAM(NOMA  ,DEFICO,CNSPLU,POSMAE,NNE   ,
     &              MCON  )       
C      
C --- BOUCLE SUR LES POINTS DE CONTACT
C          
        DO 20 IPC = 1,NBPC    
C
C --- COMPLIANCE
C          
          IF (.NOT.LCOMPL) THEN 
            ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+23) = 1.D0
          END IF        
C
C --- COORDONNEES ACTUALISEES DU POINT DE CONTACT (SUR MAILLE ESCLAVE)
C
          KSIPC1    = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+3 )
          KSIPC2    = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+4 )
          CALL MCOPCE(NDIM  ,ALIAS ,NNE   ,KSIPC1,KSIPC2,
     &                COORME,GEOME)
C
C --- COORDONNEES ACTUALISEES DE LA PROJECTION DU POINT DE CONTACT
C --- (SUR MAILLE MAITRE)
C
          KSIPR1    = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+5)
          KSIPR2    = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+6)
          NUMMAM    = NINT(ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+2))
          CALL MCOPCO(NOMA  ,NEWGEO,NDIM  ,NUMMAM,KSIPR1,
     &                KSIPR2,GEOMM )
C            
C --- TANGENTES AU POINT DE CONTACT PROJETE SUR MAILLE MAITRE
C
          TAU1(1) = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+7 )
          TAU1(2) = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+8 )
          TAU1(3) = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+9 )
          TAU2(1) = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+10)
          TAU2(2) = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+11)
          TAU2(3) = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+12)
C            
C --- CALCUL DE LA NORMALE
C
          CALL MMNORM(NDIM,TAU1,TAU2,NORM,NOOR)
          IF (NOOR.LE.R8PREM()) THEN
            CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NUMMAM),NOMMAI) 
            CALL U2MESG('F','CONTACT3_23',1,NOMMAI,0,0,3,GEOMM) 
          ENDIF             
C                               
C --- COMPLIANCE   (XA=0: ON NE TOUCHE PAS LES ASPERITES) 
C --- SI PAS DE COMPLIANCE ACTIVEE: XA VAUT TOUJOURS 1        
C
          XA     = NINT(ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+23))
          XAINI  = XA
C
C --- INDICATEUR DE CONTACT (XS=0: PAS DE CONTACT)
C --- ON SAUVE L'ETAT INITIAL DE CE POINT DANS XSINI
C
          XS     = NINT(ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+22))
          XSINI  = XS       
C
C --- CALCUL DU JEU ACTUALISE AU POINT DE CONTACT 
C            
          JEU = 0.D0
          DO 10 K = 1,3
           JEU = JEU + (GEOME(K)-GEOMM(K))*NORM(K)
   10     CONTINUE
C
C --- CALCUL DU JEU USE AU POINT DE CONTACT
C
          JEUUSU = 0.D0
          IF (LUSURE) THEN
            CALL MMUSUR(RESOCO,IMAE  ,IPC   ,NBPC  ,JEUUSU)
          ENDIF          
C
C --- CALCUL DU JEU FICTIF AU POINT DE CONTACT
C       
          CALL CFDIST(DEFICO,IZONE ,'POIN',POSNOE,POSMAE,
     &                GEOME ,DIST  )   
          ZR(JJSUP-1+NTPC+IPC)  = DIST        
C
C --- JEU TOTAL
C
          ZR(JAPJEU-1+NTPC+IPC) = JEU+DIST+JEUUSU
          JEU = ZR(JAPJEU-1+NTPC+IPC)
C  
C --- NOEUDS EXCLUS -> ON SORT DIRECT 
C       
          IF (ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+18) .EQ. 1.D0) THEN
            ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+22) = 0.D0
            XSINI  = 0
            GOTO 19
          END IF         
C          
C --- CALCUL DU MULTIPLICATEUR DE LAGRANGE LAMBDA DE CONTACT DU POINT
C     
          LAMBDC = 0.D0
          CALL MMNONF(NDIM  ,NNE   ,ALIAS ,KSIPC1,KSIPC2,
     &                FF    )

          DO 11 K = 1,NNE
            LAMBDC = FF(K)*MCON(K) + LAMBDC

   11     CONTINUE     
C  
C --- FORMULATION EN VITESSE
C
          IF (LVITES) THEN
C
C --- COORDONNEES ACTUALISEES DU POINT DE CONTACT ET DU PROJETE
C
            CALL MCOPCO(NOMA  ,CHAVIT,NDIM  ,NUMMAE,KSIPC1,
     &                  KSIPC2,VITPE )
            CALL MCOPCO(NOMA  ,CHAVIT,NDIM  ,NUMMAM,KSIPR1,
     &                  KSIPR2,VITPM )
C
C --- CALCUL DU GAP DES VITESSES NORMALES 
C
            CALL MMMJEV(NDIM  ,NORM  ,VITPE ,VITPM, JEUVIT)

          ENDIF
C
C --- GLISSIERE AVEC CONTACT_INIT
C           
          LGLINI = NINT(ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+17)).EQ.1   
C
C --- ALGORITHME DES CONTRAINTES ACTIVES (PC: POINT DE CONTACT)
C
          CALL MMALGO(XA    ,XS    ,LVITES,LCOMPL,LGLINI,
     &                JEU   ,JEUVIT,ASPERI,LAMBDC,MMCVCA,
     &                SCOTCH,XANEW ,XSNEW )
          ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+22) = XSNEW
          ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+23) = XANEW                
C
C --- TRAITEMENT DU FLIP_FLOP
C               
          IF (FLIMAX .GE. 0) THEN
            XSEND  = NINT(ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+22))
            IF (XSEND .NE. XSINI) THEN       
              ZI(JFLIP+NTPC+IPC-1) = ZI(JFLIP+NTPC+IPC-1) + 1
            END IF      
            IF (ZI(JFLIP+NTPC+IPC-1) .GT. FLINBR) THEN
              FLINBR = ZI(JFLIP+NTPC+IPC-1)
              FLIPOI = IPC
              FLIMAI = NUMMAE
            ENDIF    
          ENDIF                    
C
C --- AFFICHAGE ETAT DU CONTACT
C
   19     CONTINUE
          IF (NIV.GE.2) THEN
            XS     = NINT(ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+22))
            XA     = NINT(ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+23))
            CALL MMIMP4(IFM   ,NOMA  ,NUMMAE,IPC   ,XAINI ,
     &                  XSINI ,XA    ,XS    ,LVITES,LGLISS,
     &                  LCOMPL,JEU   ,JEUVIT,LAMBDC)     
          ENDIF
   20   CONTINUE
        NTPC = NTPC + NBPC
   30 CONTINUE
C
C --- ON MET LE POINT EN GLISSIERE SI LGLISS=.TRUE. ET
C     SI LA CONVERGENCE EN CONTRAINTE ACTIVE EST ATTEINTE
C
      IF (MMCVCA) THEN
        NTPC = 0
        DO 35 IMAE = 1, NTMAE
          IZONE  = ZI(JMAESC+ZMAES*(IMAE-1)+2-1) 
          LGLISS = MMINFL(DEFICO,'GLISSIERE_ZONE'   ,IZONE )
          NBPC   = ZI(JMAESC+ZMAES*(IMAE-1)+3-1)
          IF (LGLISS) THEN
            DO 25 IPC = 1, NBPC
              XS = NINT(ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+22))
              XA = NINT(ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+23))
              IF ((XA.EQ.1) .AND. (XS.EQ.1)) THEN
                ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+17) = 1.D0
              ENDIF
   25       CONTINUE
          ENDIF
          NTPC = NTPC + NBPC  
   35   CONTINUE
      ENDIF
C
C --- SI FLIP-FLOP: ON FORCE LE PASSAGE A L'ITERATION SUIVANTE
C
      IF (FLIMAX .GT. 0) THEN
        IF (FLINBR .GE. FLIMAX) THEN
          CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',FLIMAI),NOMMAI) 
          VALI(1) = FLINBR
          VALI(2) = FLIPOI
          CALL U2MESG('I','CONTACT3_28',1,NOMMAI,2,VALI,0,0.D0)
          MMCVCA = .TRUE.  
        ENDIF
      ENDIF    
C
C --- SAUVEGARDE DECOLLEMENT DANS COMPLIANCE
C 
      ZL(JMDECO+1-1) =  SCOTCH
C
      IF (MMCVCA) THEN
       CALL JERAZO(FLIFLO,NTPC  ,1) 
      ENDIF
      CALL JEDETR(NEWGEO)
      CALL JEDETR(CHAVIT)
      CALL DETRSD('CHAM_NO_S',CNSPLU)      
C
      CALL JEDEMA()
      END
