      SUBROUTINE MGCO99(NOMRES,RESUL,NUMREF,NBMOD,LIORD,IORNE)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/05/2009   AUTEUR NISTOR I.NISTOR 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C***********************************************************************
C  P. RICHARD     DATE 20/02/91
C-----------------------------------------------------------------------
C  BUT : POINTER LES PREMIERS MODES PROPRES D'UNE STRUCTURE RESULTAT
C        DE TYPE MODE_MECA DANS UNE AUTRE STRUCTURE DE TYPE BASE_MODALE
C        DEJA EXISTANTE A PARTIR D'UN NUMERO D'ORDRE
C-----------------------------------------------------------------------
C
C NOMRES /I/ : NOM UTILISATEUR DE LA STRUCTURE RESULTAT A REMPLIR
C RESUL  /I/ : NOM DE LA STRUCTURE RESULTAT A POINTER
C NBMOD  /I/ : NOMBRE DE MODES A POINTER
C LIORD  /I/ : LISTE DES ANCIENS NUMEROS D'ORDRE A POINTER
C IORNE  /M/ : NOUVEAU NUMERO D'ORDRE DU PREMIER CHAMPS 'DEPL' A POINTER
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      INTEGER      NBPABM
      INTEGER      VALI
      PARAMETER   (NBPABM=9)
      INTEGER      NBMOD
      INTEGER      LIORD(NBMOD),LDPAR(NBPABM),LLVALO(NBPABM)
      COMPLEX*16   CBID
      CHARACTER*8  NOMRES,RESUL,KBID,MAILLA,K8BID
      CHARACTER*16 TYPRES,DEPL,BMPARA(NBPABM),TYPMO
      CHARACTER*19 CHAMOL,CHAMNE,MATRIX,NUMDDL,NUMREF
      CHARACTER*24 NOMCVN,CREFE(2),TEMPOR
      REAL*8       BID,EBID,GENEK,GENEM,OMEG2,ZERO
      INTEGER      I,IADMOD,IBID,IER,IERD,IORN0,IORNE,IOROL,IRE,J
      INTEGER      LLKGE,LLMGE,LLNEW,LLOM2,NBID,LTYMO
      INTEGER      NBOLD,NEQ
C
C-----------------------------------------------------------------------
C
      DATA  BMPARA /'NUME_MODE','FREQ','NORME','NOEUD_CMP','TYPE_DEFO',
     &              'OMEGA2','MASS_GENE','RIGI_GENE','TYPE_MODE'/
C
C-----------------------------------------------------------------------
C
C --- CAS DE L'ABSENCE D'UN MODE_MECA
C
      IF (RESUL.EQ.'          '.OR.NBMOD.EQ.0) GOTO 9999
C
      DEPL = 'DEPL'
      IORN0 = IORNE
      ZERO = 0.D0
C
C --- DETERMINATION DU NOMBRE DE MODES DANS LA STRUCTURE A POINTER
C
      CALL RSORAC(RESUL,'LONUTI',IBID,BID,KBID,CBID,EBID,'ABSOLU',
     &            NBOLD,1,NBID)
C
C
C --- RECUPERATION DES DONNEES REFERENCE POUR CREATION DU CHAMNO
C
      CALL DISMOI('F','NOM_MAILLA',NUMREF,'NUME_DDL',IBID,MAILLA,IRE)
      CALL DISMOI('F','NB_EQUA',NUMREF,'NUME_DDL',NEQ,K8BID,IERD)
      CREFE(1)=MAILLA
      CREFE(2)=NUMREF
C
C --- BOUCLE DE COPIE DES MODES
C
      IF(NBMOD.GT.NBOLD) THEN
         VALI = NBOLD
         CALL U2MESG('I', 'ALGORITH13_48',0,' ',1,VALI,0,0.D0)
         NBMOD=NBOLD
      ENDIF
      NBMOD=MIN(NBMOD,NBOLD)
C
      IF(NBMOD.EQ.0) GOTO 9999
C
C --- RECHERCHE DE L'ADRESSE DES ANCIENNES VALEURS PROPRES
C
      CALL DISMOI('F','TYPE_RESU',RESUL,'RESULTAT',IBID,TYPRES,IRE)
      TEMPOR = '&&MGCO99.MODAL'
      CALL WKVECT(TEMPOR,'V V R',NEQ*NBMOD,IADMOD)
      CALL COPMO2(RESUL,NEQ,NUMREF(1:14),NBMOD,ZR(IADMOD))
C
      DO 10 I=1,NBMOD
C
        IOROL=LIORD(I)
C
C ----- REQUETE NOM, ALLOCATION ET REQUETE ADRESSE NOUVEAU CHAMNO
C
        CALL RSEXCH(NOMRES,DEPL,IORNE,CHAMNE,IER)
        IF (IER.NE.0) CALL VTCREA(CHAMNE,CREFE,'G','R',NEQ)
        CALL JEVEUO(CHAMNE//'.VALE','E',LLNEW)

        IF (TYPRES.NE.'MODE_MECA') GOTO 11

C ----- CONFIRMATION DU NOM DE CHAMNO AUPRES DU RESULTAT COMPOSE
C
11      CONTINUE
        DO 20 J =1,NEQ
          IF (ZR(IADMOD+(I-1)*NEQ+J-1).NE.ZERO)
     +      ZR(LLNEW+J-1) = ZR(IADMOD+(I-1)*NEQ+J-1)
20      CONTINUE

        CALL RSNOCH(NOMRES,DEPL,IORNE,CHAMNE)
C
C-------RECUPERATION DES VALEURS DES PARAMETRES DE LA SD ANCIENE
        CALL RSADPA(RESUL,'L',NBPABM,BMPARA,IOROL,0,LLVALO,K8BID)

C ----- ECRITURE DES NOUVEAUX PARAMETRES
C
        CALL RSADPA(NOMRES,'E',NBPABM,BMPARA,IORNE,0,LDPAR,K8BID)
        ZI(LDPAR(1))=IORNE
        ZR(LDPAR(2))=ZR(LLVALO(2))
        ZK24(LDPAR(3))=ZK24(LLVALO(3))
        ZK16(LDPAR(4))=ZK16(LLVALO(4))
        CALL RSADPA(RESUL,'L',1,'TYPE_MODE',IOROL,0,LTYMO,K8BID)        
        TYPMO=ZK16(LTYMO)
        IF (TYPMO.EQ.'MODE_STA') THEN
          ZK16(LDPAR(5)) = 'STATIQUE'
        ELSEIF (TYPMO.EQ.'MODE_DYN') THEN
          ZK16(LDPAR(5)) = 'PROPRE'
        ELSE
          ZK16(LDPAR(5)) = ZK16(LLVALO(5))
        ENDIF
        ZR(LDPAR(6))=ZR(LLVALO(6))
        ZR(LDPAR(7))=ZR(LLVALO(7))
        ZR(LDPAR(8))=ZR(LLVALO(8))
        ZK16(LDPAR(9))=ZK16(LLVALO(9))
C
12      CONTINUE
C
C ----- INCREMENTATION DU NUMERO ORDRE
C
        IORNE=IORNE+1
C
10    CONTINUE
      IORNE = IORN0
      CALL JEDETR(TEMPOR)
C
 9999 CONTINUE
      END
