      SUBROUTINE XSTAN2(CRIMAX,NOMA,MODELE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/02/2013   AUTEUR CUVILLIE M.CUVILLIEZ 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXATR
      CHARACTER*8   MODELE,NOMA
      REAL*8        CRIMAX
C
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (PREPARATION)
C
C REATION LISTE DE NOEUDS OU IL FAUDRA ANNULER LES DDLS HEAVISIDE
C POUR DES RAISONS DE CONDITIONNEMENT DE MATRICE ET POUR EVITER
C DES PIVOTS NULS DANS LA MATRICE DE RAIDEUR
C (VOIR BOOK V 15/04/05)
C
C ----------------------------------------------------------------------
C
C
C  IN  CRIMAX : CRITERE (RAPPORT MAXIMUM ENTRE LES VOLUMES)
C  IN  NOMA   : NOM DE L'OBJET MAILLAGE
C  I/O MODELE   : NOM DE LA SD MODELE_XFEM
C
C
C
C
      CHARACTER*24  GEOM
      CHARACTER*19  CES(7),CEL(7),CNXINV,NOXFEM,CNS2,LIGREL
      CHARACTER*16  NOTYPE
      CHARACTER*9   XPHEOP
      CHARACTER*8   K8BID,TYPMA,LIREFE(10),ELREFP
      CHARACTER*2   CH2
      REAL*8        CRIT,VMOIN,VPLUS,VTOT
      INTEGER       JTYPMA,JCESD(7),JCESL(7),JCESV(7),IAD
      INTEGER       JNOXFL,JNOXFV,JXC,ITYPMA,NNCP,IBID,IER
      INTEGER       IFM,NIV,JNBSP,JNBSP2,JPINT,JCOOR,JCNSE
      INTEGER       JCONX1,JCONX2,ADRMA,JTMDIM,NDIME,NDIM,NBNO
      INTEGER       NBMANO,NBNOMA,NUNO,INO,INO2,NUMA,NUMA2,IMA
      INTEGER       JMAIL,ITYPEL,NBELR,IGEOM,NUNO2,INOLOC,CPT
      INTEGER       I,J,NHEAV,IHEAV,NFISS,IFISS,NSE,NNOSE,NNOT(3)
      LOGICAL       ISMALI,LELIM,ANCIEN

C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('XFEM',IFM,NIV)
C
      WRITE(IFM,*)'RECHERCHE DES DDLS HEAVISIDE A ANNULER'
C
C     RECUPERATION DES DONNEES SUR LE MAILLAGE
C
      CALL JEVEUO('&CATA.TM.TMDIM','L',JTMDIM)
      CALL JEVEUO(NOMA//'.TYPMAIL','L',JTYPMA)
      CALL JEVEUO(NOMA//'.COORDO    .VALE','L',JCOOR)
      CALL JEVEUO(NOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA//'.CONNEX','LONCUM'),'L',JCONX2)
      CALL DISMOI('F','DIM_GEOM',NOMA,'MAILLAGE',NDIM,K8BID,IBID)
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNO,K8BID,IBID)
      CALL JEVEUO(MODELE//'.MAILLE','L',JMAIL)
C     CONNECTIVITE INVERSEE
      CNXINV = '&&XSTAN2.CNCINV'
      CALL CNCINV(NOMA,IBID,0,'V',CNXINV)
      NOXFEM = MODELE//'.NOXFEM'
      LIGREL = MODELE//'.MODELE'
      CNS2 = '&&XCONNO.CNS2'
      GEOM = '&&XSTAN2.GEOM'
C      CALL CNOCNS(MODELE//'.NOXFEM','V',NOXFEM)
      CALL JEVEUO(CNS2//'.CNSL','E',JNOXFL)
      CALL JEVEUO(CNS2//'.CNSV','E',JNOXFV)
      CALL JEVEUO(MODELE//'.XFEM_CONT','L',JXC)
      ANCIEN = ZI(JXC).EQ.2
C
C     RECUPERATION DES DONNEES ELEMENTAIRES XFEM
C
      CALL JEVEUO('&&XTYELE.NBSP' ,'L',JNBSP)
      CALL JEVEUO('&&XTYELE.NBSP2','L',JNBSP2)
      CEL(1) = MODELE//'.TOPOSE.LON'
      CEL(2) = MODELE//'.STNO'
      CEL(3) = MODELE//'.TOPOSE.HEA'
      CEL(4) = MODELE//'.TOPOSE.CNS'
      CEL(5) = MODELE//'.TOPOSE.PIN'
      CEL(6) = MODELE//'.TOPOSE.PMI'
      CEL(7) = MODELE//'.FISSNO'
      DO 10 I=1,7
        CALL CODENT(I,'G',CH2)
        CES(I) = '&&XSTAN2.CES'//CH2
        CALL JEEXIN(CEL(I)//'.CELD',IER)
        IF (IER.EQ.0) GOTO 10
        CALL CELCES(CEL(I),'V',CES(I))
        CALL JEVEUO(CES(I)//'.CESD','L',JCESD(I))
        CALL JEVEUO(CES(I)//'.CESL','L',JCESL(I))
        CALL JEVEUO(CES(I)//'.CESV','E',JCESV(I))
  10  CONTINUE
C
      CPT = 0
C     BOUCLE SUR LES NOEUDS DU MAILLAGE
      DO 20 NUNO = 1,NBNO
        IF (.NOT.ZL(JNOXFL-1+2*NUNO)) GOTO 20
C --- RECUP DU NUMERO LOCAL INO DU NOEUD NUNO DANS LA MAILLE X-FEM NUMA
        NUMA = ZI(JNOXFV-1+2*(NUNO-1)+1)
        INO  = ZI(JNOXFV-1+2*(NUNO-1)+2)
        NFISS = ZI(JNBSP-1+NUMA)
        CALL ASSERT(NFISS.GE.1)
        NHEAV = MAX(1,ZI(JNBSP2-1+NUMA))

C       RECUPERATION DES MAILLES CONTENANT LE NOEUD
        CALL JELIRA(JEXNUM(CNXINV,NUNO),'LONMAX',NBMANO,K8BID)
        CALL JEVEUO(JEXNUM(CNXINV,NUNO),'L',ADRMA)

C       BOUCLE SUR LES DDL HEAVISIDE
        DO 40 IHEAV = 1,NHEAV
          IF (NFISS.EQ.1) THEN
            IFISS=1
          ELSE
            CALL CESEXI('S',JCESD(7),JCESL(7),NUMA,INO,IHEAV,1,IAD)
            IFISS = ZI(JCESV(7)-1+IAD)
          ENDIF
          CALL CESEXI('S',JCESD(2),JCESL(2),NUMA,INO,IFISS,1,IAD)
          IF (ZI(JCESV(2)-1+IAD).NE.1) GOTO 40

C         INITIALISATION DES VOLUMES
          VMOIN = 0
          VPLUS = 0
          VTOT  = 0
C         BOUCLE SUR LES MAILLES SUPPORT DU NOEUD
          DO 50 IMA=1,NBMANO
            NUMA2 = ZI(ADRMA-1 + IMA)
            NDIME = ZI(JTMDIM-1+ZI(JTYPMA-1+NUMA2))
            IF (NDIME.LT.NDIM) GOTO 50
            ITYPMA = ZI(JTYPMA-1+NUMA2)
            CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ITYPMA),TYPMA)
            IF((.NOT.ANCIEN).AND.NDIM.EQ.2.AND.(.NOT.ISMALI(TYPMA)))THEN
              NNOSE = 6
            ELSE
              NNOSE = NDIM+1
            ENDIF

C         1ER ELEMENT DE REFERENCE ASSOCIE A LA MAILLE
            ITYPEL = ZI(JMAIL-1+NUMA2)
            CALL JENUNO(JEXNUM('&CATA.TE.NOMTE',ITYPEL),NOTYPE)
            CALL ELREF2(NOTYPE,10,LIREFE,NBELR)
            ELREFP = LIREFE(1)
C           NOMBRE DE NOEUDS
            NBNOMA = ZI(JCONX2+NUMA2) - ZI(JCONX2+NUMA2-1)
            IF (ANCIEN) THEN
              CALL PANBNO(ITYPMA,NNOT)
              NBNOMA = NNOT(1)
              IF (INO.GT.NBNOMA) GOTO 20
            ENDIF
C           RECUP DU NUM DE FISS CORRESPONDANT À IHEAV DE NUNO DS NUMA2
C           ET DU NUMERO LOCALE INOLOC DANS LA MAILLE
            DO 60 INO2 = 1,NBNOMA
              IF (ZI(JCONX1-1+ZI(JCONX2+NUMA2-1)+INO2-1).EQ.NUNO) THEN
                INOLOC = INO2
                GOTO 200
              ENDIF
  60        CONTINUE
            CALL ASSERT(.FALSE.)
 200        CONTINUE
            IF (ZI(JNBSP-1+NUMA2).EQ.1) THEN
               IFISS = 1
            ELSE
              CALL CESEXI('S',JCESD(7),JCESL(7),NUMA2,INOLOC,IHEAV,1,
     &                    IAD)
              IFISS = ZI(JCESV(7)-1+IAD)
            ENDIF
C           CREATION DE VECTEUR DES COORDONNÉES DE LA MAILLE IMA
C           AVEC DES VALEURS CONTIGUES
            CALL WKVECT(GEOM,'V V R',NDIM*NBNOMA,IGEOM)
            DO 210 INO2=1,NBNOMA
              NUNO2=ZI(JCONX1-1+ZI(JCONX2+NUMA2-1)+INO2-1)
              DO 220 J=1,NDIM
                ZR(IGEOM-1+NDIM*(INO2-1)+J)=ZR(JCOOR-1+3*(NUNO2-1)+J)
 220          CONTINUE
 210        CONTINUE
C
C           RECUPERATION DU NOMBRE TOTAL DE SOUS ELEMENTS
            CALL CESEXI('S',JCESD(1),JCESL(1),NUMA2,1,1,1,IAD)
            NSE=ZI(JCESV(1)-1+IAD)
C           POINTEUR DE CONNECTIVITÉ DU SOUS ELEMENT
            CALL CESEXI('S',JCESD(4),JCESL(4),NUMA2,1,1,1,IAD)
            JCNSE=JCESV(4)-1+IAD
C           POINTEUR DE COORDONNÉES DES POINTS D'INTERSECTIONS
            CALL CESEXI('S',JCESD(5),JCESL(5),NUMA2,1,1,1,IAD)
            JPINT=JCESV(5)-1+IAD
            CALL XCRVOL(NSE,NDIM,JCNSE,NNOSE,JPINT,IGEOM,ELREFP,INOLOC,
     &                  NBNOMA,JCESD(3),JCESL(3),JCESV(3),NUMA2,IFISS,
     &                  VMOIN,VPLUS,VTOT)
            CALL JEDETR(GEOM)
  50      CONTINUE
C         CALCUL DU CRITERE
          CRIT=MIN(VMOIN,VPLUS)/VTOT
          IF (CRIT.LT.CRIMAX) THEN
            CPT = CPT + 1
C           BOUCLE SUR LES MAILLES SUPPORT DU NOEUD
            DO 150 IMA=1,NBMANO
              NUMA2  = ZI(ADRMA-1 + IMA)
C             MISE À ZÉRO DU STATUT DANS TOUS LES ÉLÉMENTS DU SUPPORT
              NBNOMA = ZI(JCONX2+NUMA2) - ZI(JCONX2+NUMA2-1)
              DO 160 INO2 = 1,NBNOMA
                IF (ZI(JCONX1-1+ZI(JCONX2+NUMA2-1)+INO2-1).EQ.NUNO) THEN
                  IF (ZI(JNBSP-1+NUMA2).EQ.1) THEN
                    IFISS = 1
                  ELSEIF (ZI(JNBSP-1+NUMA2).EQ.0) THEN
                    GOTO 150
                  ELSE
                    CALL CESEXI('S',JCESD(7),JCESL(7),
     &                           NUMA2,INO2,IHEAV,1,IAD)
                    IFISS = ZI(JCESV(7)-1+IAD)
                  ENDIF
                  CALL CESEXI('S',JCESD(2),JCESL(2),
     &                         NUMA2,INO2,IFISS,1,IAD)
                  ZI(JCESV(2)-1+IAD) = 0
                  GOTO 150
                ENDIF
 160          CONTINUE
              CALL ASSERT(.FALSE.)
 150        CONTINUE
          ENDIF
C
  40    CONTINUE
C       ELIMINATION DE LA LISTE DES NOEUDS XFEM SI NECESSAIRE
        LELIM = .TRUE.
        DO 140 IHEAV = 1,NHEAV
          IF (NFISS.EQ.1) THEN
            IFISS=1
          ELSE
            CALL CESEXI('S',JCESD(7),JCESL(7),NUMA,INO,IHEAV,1,IAD)
            IFISS = ZI(JCESV(7)-1+IAD)
          ENDIF
          CALL CESEXI('S',JCESD(2),JCESL(2),NUMA,INO,IFISS,1,IAD)
          IF (ZI(JCESV(2)-1+IAD).GE.1) LELIM = .FALSE.
 140    CONTINUE
        IF (LELIM) THEN
          ZL(JNOXFL-1+2*(NUNO-1)+1) = .FALSE.
          ZL(JNOXFL-1+2*(NUNO-1)+2) = .FALSE.
        ENDIF
  20  CONTINUE
C
      WRITE(IFM,*)'NOMBRE DE NOEUDS OU LES DDLS H SONT MIS A ZERO :',CPT
C
C --- CONVERSION CHAM_NO_S -> CHAM_NO POUR MODELE.NOXFEM
C
      CALL CNSCNO(CNS2,' ','OUI','G',NOXFEM,'F',IBID)
C
C --- CONVERSION CHAM_ELEM_S -> CHAM_ELEM POUR MODELE.STNO
C
      CALL CESCEL(CES(2),LIGREL,XPHEOP(MODELE),'PSTANO','OUI',
     &            NNCP,'G',CEL(2),'F',IBID)
C
C --- MENAGE
C
      CALL JEDETR(CNXINV)
      CALL DETRSD('CHAM_NO_S',CNS2)
      DO 130 I=1,7
        CALL JEEXIN(CES(I)//'.CESD',IER)
        IF (IER.EQ.0) GOTO 130
        CALL DETRSD('CHAM_ELEM_S',CES(I))
 130  CONTINUE
      CALL JEDEMA()
      END
