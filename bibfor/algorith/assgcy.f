      SUBROUTINE  ASSGCY (NOMRES,NUGENE)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/04/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***********************************************************************
C    P. RICHARD     DATE 13/10/92
C-----------------------------------------------------------------------
C  BUT:      < ASSEMBLAGE GENERALISEE >
C
C  ASSEMBLER UNE MATRICE A PARTIR D'UNE NUMEROTATION GENERALISEE
C  ET D'UNE OPTION (RIGI_GENE,MASS_GENE,AMOR_GENE)
C
C REMARQUE : L'ASSEMBLAGE DONNE UNE MATRICE ASSEMBLEE LIGNE DE CIEL
C            IL CONSIDERE LES MATRICE ELEMENTAIRE GENERALISEES
C  A ASSEMBLER COMME DES BLOCS
C  CHAQUE MATRICE ELEMENTAIRE POUVANT ETRE CONSTITUE DE PLUSIEURS BLOCS
C  CE QUI SEMBLE COMPLIQUER NETTEMENT LA TACHE POUR LE MOMENT MAIS
C  LE TRAVAIL POUR CONSIDERE UNE MATRICE ASSEMBLEE LIGNE DE CIEL
C     COMME UNE MATRICE ELEMENTAIRE DEVRAIT ETRE MINIME
C
C-----------------------------------------------------------------------
C
C NOM----- / /:
C
C NOMRES   /I/: NOM K8 DE LA MATRICE GENERALISEE RESULTAT
C OPTION   /I/: OPTION DE CALCUL (RIGI_GENE,MASS_GENE)
C NUGENE   /I/: NOM K14 DE LA NUMEROTATION GENERALISEE
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32  JEXNUM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CHARACTER*8  NOMRES,MODGEN
      CHARACTER*14 NUGENE
      CHARACTER*19 STOLCI,RESU
C
      INTEGER      IBLO,LDLIM,NEQ,NTBLOC,NBLOC,
     +             IACONL,JREFA,IADESC,ISCDI,ISCBL,ISCHC,
     +             LDBLO,N1BLOC,N2BLOC,
     +             I,J,LLREF
      CHARACTER*8 K8BID
C
C-----------------------------------------------------------------------
C
C--------------------------CREATION DU .REFA----------------------------
C
      CALL JEMARQ()
C
      RESU = NOMRES
      STOLCI=NUGENE//'.SLCS'
C
C--------------------RECUPERATION DU MODE_GENE AMONT--------------------
C
      CALL JEVEUO(NUGENE//'.NUME.REFN','L',LLREF)
      MODGEN=ZK24(LLREF)(1:8)
C
C--------------------------CREATION DU .LIME----------------------------
C   POUR L'INSTANT ON DONNE LE NOM DU MODELE GENERALISE
C
      CALL WKVECT(RESU//'.LIME','G V K24',1,LDLIM)
      ZK24(LDLIM)=MODGEN
C
C--------------------RECUPERATION DES CARACTERISTIQUES BLOCS------------
C
      CALL JEVEUO(STOLCI//'.SCDE','L',JSCDE)
      NEQ=ZI(JSCDE-1+1)
      NTBLOC=ZI(JSCDE-1+2)
      NBLOC=ZI(JSCDE-1+3)

      CALL JELIBE(STOLCI//'.SCDE')

      CALL JECREC(RESU//'.UALF','G V R','NU','DISPERSE',
     &'CONSTANT',NBLOC)
      CALL JEECRA(RESU//'.UALF','LONMAX',NTBLOC,K8BID)
C
      CALL WKVECT ( RESU//'.CONL', 'G V R' , NEQ, IACONL )
      DO 10 I = 1 , NEQ
         ZR(IACONL+I-1) = 1.0D0
 10   CONTINUE
C
      CALL WKVECT(RESU//'.REFA','G V K24',11,JREFA)
      ZK24(JREFA-1+11)='MPI_COMPLET'
      ZK24(JREFA-1+1)=' '
      ZK24(JREFA-1+2)=NUGENE
      ZK24(JREFA-1+8) = 'ASSE'
      ZK24(JREFA-1+9) = 'MS'
      ZK24(JREFA-1+10) = 'GENE'

      CALL WKVECT ( RESU//'.DESC', 'G V I', 3, IADESC )
      ZI(IADESC)   = 2
      ZI(IADESC+1) = NEQ
      ZI(IADESC+2) = 2

C --- RECUPERATION DE LA STRUCTURE DE LA MATR_ASSE_GENE
C
      CALL JEVEUO ( STOLCI//'.SCDI', 'L', ISCDI )
      CALL JEVEUO ( STOLCI//'.SCBL', 'L', ISCBL )
      CALL JEVEUO ( STOLCI//'.SCHC', 'L', ISCHC )
C
      DO 20 IBLO = 1 , NBLOC
C
         CALL JECROC ( JEXNUM(RESU//'.UALF',IBLO) )
         CALL JEVEUO ( JEXNUM(RESU//'.UALF',IBLO),
     +     'E', LDBLO )
C
C        BOUCLE SUR LES COLONNES DE LA MATRICE ASSEMBLEE
C
         N1BLOC = ZI(ISCBL+IBLO-1)+1
         N2BLOC = ZI(ISCBL+IBLO)
C    INITIALISATION DE LA MATRICE GENERALISEE
           DO 30 I = N1BLOC , N2BLOC
              DO 40 J = (I-ZI(ISCHC+I-1)+1) , I
                 ZR(LDBLO+ZI(ISCDI+I-1)+J-I-1) = 0.D0
 40           CONTINUE
 30        CONTINUE
C
         CALL JELIBE ( JEXNUM(RESU//'.UALF', IBLO) )
 20   CONTINUE

      CALL UALFVA(RESU,'G')

      CALL JEDEMA()
      END
