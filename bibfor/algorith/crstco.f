      SUBROUTINE CRSTCO(MODELE , LISCHA , NUMEDD , RESOCO , NEQ, DEFICO)
C MODIF ALGORITH  DATE 21/05/2002   AUTEUR PABHHHH N.TARDIEU 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*19       LISCHA
      CHARACTER*24       MODELE,NUMEDD,RESOCO,DEFICO
      INTEGER            NEQ
C  --------------------------------------------------------------------
C  BUT : CREER L'ENSEMBLE DES STRUCTURES NECESSAIRES AU TRAITEMENT
C        DU CONTACT EN ARBORESCENCE DU NOM GENERIQUE "RESOCO"
C        PRISE EN COMPTE SOUS UNE SEULE STRUCTURE DE L'ENSEMBLE
C        DES APPELS AU MOT CLE LIAI_UNIL_NO
C
C  IN   MODELE  : NOM DU MODELE
C  IN   LISCHA  : SD L_CHARGES
C  IN   NUMEDD  : NOM DU NUME_DDL (K14)
C  IN   RESOCO  : NOM DE LA STRUCTURE DE RESOCOT CREE PAR LA ROUTINE
C  IN   NEQ     : NOMBRE D'EQUATIONS DU SYSTEME ASSEMBLE
C  IN   DEFICO  : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C
C
C  ROUTINES APPELEES :
C
C  DISMOI     JECREC     JECREO     JECROC     JEECRA     JEEXIN
C  JELIBE     JELIRA     JEVEUO     UTMESS     WKVECT
C  --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX -------------------
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C  --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX -------------------
      PARAMETER    (NBECMX = 10)
      INTEGER      NBBLOC, JBID, RETA
      INTEGER      DG1(NBECMX), DG2(NBECMX)
      CHARACTER*8  K8BID, CHAR, NOMA
      CHARACTER*19 ATMU, CM1A, COAD, COCO, COEQ, CONI, CONR, DELT0
      CHARACTER*19 DELTA, LIAC, MATR, MU, STOC, COCI, AFMU, CM2A, CM3A
      CHARACTER*19 LIOT
      CHARACTER*24 PRNO, NUEQ, MAESCL
      LOGICAL      EXISDG
      CHARACTER*1  K1BID
C
      CALL JEMARQ()

C    SI METHODE "CONTINUE", ON SORT
      MAESCL = DEFICO(1:16)//'.MAESCL'
      CALL JEEXIN(MAESCL,RETA)
      IF (RETA.GT.0) GOTO 9999

      ATMU   = RESOCO(1:14)//'.ATMU'
      AFMU   = RESOCO(1:14)//'.AFMU'
      CM1A   = RESOCO(1:14)//'.CM1A'
      CM2A   = RESOCO(1:14)//'.CM2A'
      CM3A   = RESOCO(1:14)//'.CM3A'
      COAD   = RESOCO(1:14)//'.COAD'
      COCO   = RESOCO(1:14)//'.COCO'
      COEQ   = RESOCO(1:14)//'.COEQ'
      CONI   = RESOCO(1:14)//'.CONI'
      CONR   = RESOCO(1:14)//'.CONR'
      DELT0  = RESOCO(1:14)//'.DEL0'
      DELTA  = RESOCO(1:14)//'.DELT'
      LIAC   = RESOCO(1:14)//'.LIAC'
      LIOT   = RESOCO(1:14)//'.LIOT'
      MATR   = RESOCO(1:14)//'.MATR'
      MU     = RESOCO(1:14)//'.MU'
      STOC   = RESOCO(1:14)//'.SLCS'
C
      NUEQ   = NUMEDD(1:14)//'.NUME.NUEQ'
      PRNO   = NUMEDD(1:14)//'.NUME.PRNO'

C
C     NOMBRE DE BLOCS DE LA MATRICE DE LIAISON
C
      NBBLOC = 1
C
C     RECUPERATION DE LA DIMENSION NDIM
C
      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',NDIM,NOMA,IER)
      CALL DISMOI('F','DIM_GEOM',MODELE,'MODELE',NDIM,K8BID,IER)
      IF ( NDIM .GT. 1000 )  NDIM = 3
      CALL DISMOI('F','NB_EC','DEPL_R','GRANDEUR',NEC,K1BID,IER)
C
C     LECTURE DES CHARGES
C
      CALL JEEXIN(LISCHA // '.LCHA',IER)
      IF (IER.EQ.0) GOTO 9999
      CALL JELIRA(LISCHA // '.LCHA','LONMAX',NCHAR,K8BID)
      CALL JEVEUO(LISCHA // '.LCHA','L',JCHAR)
C
      CALL JEEXIN(ATMU,IER)
      IF (IER.EQ.0) CALL WKVECT(ATMU,'V V R',NEQ,JBID)
      CALL JEEXIN(AFMU,IER)
      IF (IER.EQ.0) CALL WKVECT(AFMU,'V V R',NEQ,JBID)
C
C     RECUPERATION DU NOMBRE DE CHARGES AVEC CONTACT ET
C     DU NOMBRE TOTAL DE LIAISONS MISES EN JEU
C
      ICON = 0
      NBLIAI = 0
      CALL JEVEUO(LISCHA // '.INFC','L',JINF)
      DO 1 ICHA = 1, NCHAR
         IF (ZI(JINF+2*NCHAR+2+ICHA).EQ.1) THEN
            CHAR = ZK24(JCHAR+ICHA-1)(1:8)
            COCI = CHAR//'.CHME.CONI'
            CALL JEVEUO(COCI,'L',JCHNI)
            NBLIAI = NBLIAI + ZI(JCHNI)
            ICON = ICON + 1
         ENDIF
 1    CONTINUE
      IF (ICON.GT.1) CALL UTMESS('A','CRSTCO','IL Y A PLUSIEURS'
     +     //' CHARGES CONTENANT DES CONDITIONS DE CONTACT.'
     +     //' LES EVENTUELLES CONDITIONS DOUBLES NE SONT PAS'
     +     //' DETECTEES. IL PEUT Y AVOIR SINGULARITE NUMERIQUE')
C
C     CREATION ET REMPLISSAGE DE TABLEAUX DE NOEUDS ET DE
C     NORMALES POUR L'ENSEMBLE DES CHARGES AVEC CONTACT
C
      IF(NBLIAI.GT.0) THEN

C       ARGUMENT POUR PREMIERE UTILISATION DU CONTACT OU NON
         CALL WKVECT (RESOCO(1:14) // '.PREM','V V L',1,JBID)
         ZL(JBID) = .TRUE.

         CALL WKVECT(CONI,'V V I',2*NBLIAI+2,JCONI)
         CALL WKVECT(CONR,'V V R',(2*NDIM**2+4)*NBLIAI,JCONR)
         ZI(JCONI) = NBLIAI
         JDECAL = 0
         DO 2 ICHA = 1, NCHAR
            IF (ZI(JINF+2*NCHAR+2+ICHA).EQ.1) THEN
               CHAR = ZK24(JCHAR+ICHA-1)(1:8)
               CONI = CHAR//'.CHME.CONI'
               CONR = CHAR//'.CHME.CONR'
               CALL JEVEUO(CONI,'L',JCHNI)
               CALL JEVEUO(CONR,'L',JCHNR)
               DO 20 II = 1, 2*ZI(JCHNI)
                  ZI(JCONI+2*JDECAL+II) = ZI(JCHNI+II)
 20            CONTINUE
             ZI(JCONI+2*JDECAL+2*ZI(JCHNI)+1)=ZI(JCHNI+2*ZI(JCHNI)+1)
               DO 21 II = 1, (2*NDIM**2+4)*ZI(JCHNI)
                  ZR(JCONR+(2*NDIM**2+4)*JDECAL+II-1) = ZR(JCHNR+II-1)
 21            CONTINUE
               JDECAL = JDECAL + ZI(JCHNI)
            ENDIF
 2       CONTINUE
C
        DO 9 IEC = 1, NBECMX
          DG1(IEC) = 0
          DG2(IEC) = 0
  9     CONTINUE
C
C     CREATION DES DEUX TABLEAUX D'ADRESSAGE DES NOEUDS EN CONTACT
C     DANS LA STRUCTURE NUMEDDL
C
         CALL WKVECT(COAD,'V V I',2*NBLIAI+1,JCOAD)
         CALL WKVECT(COEQ,'V V I',8*NBLIAI,JCOEQ)
         CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP','DEPL_R'),'L',JK8)
         CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP','DEPL_R'),'LONMAX',
     +        LONK8,K8BID)
         IDX = INDIK8(ZK8(JK8),'DX',1,LONK8)
         IDY = INDIK8(ZK8(JK8),'DY',1,LONK8)
         IDZ = INDIK8(ZK8(JK8),'DZ',1,LONK8)
         IF((IDX.NE.1).AND.(IDY.NE.2).AND.(IDZ.NE.3)) THEN
            CALL UTMESS('F','CRSTCO_01','LES GRANDEURS DX, DY, DZ DU'
     +           //' CATALOGUE DES GRANDEURS NE PEUVENT ETRE PRISES'
     +           //' EN COMPTE PAR L''ALGORITHME')
         ENDIF
         CALL JEVEUO(PRNO,'L',JPRNO)
         CALL JEVEUO(NUEQ,'L',JNUEQ)
         ZI(JCOAD) = NBLIAI
         LCOMPT = 0
         DO 10 II = 1, NBLIAI
            NO1 = ZI(JCONI+2*(II-1)+1)
            NO2 = ZI(JCONI+2*(II-1)+2)
            DO 101 JJ = 1, NEC
               DG1(JJ) = ZI(JPRNO-1+(NEC+2)*(NO1-1)+2+JJ)
               DG2(JJ) = ZI(JPRNO-1+(NEC+2)*(NO2-1)+2+JJ)
 101        CONTINUE
            IF(EXISDG(DG1,IDX).AND.EXISDG(DG2,IDX).AND.
     +           EXISDG(DG1,IDY).AND.EXISDG(DG2,IDY)) THEN
               IF(EXISDG(DG1,IDZ).AND.EXISDG(DG2,IDZ)) THEN
                  LDECAL = 4
               ELSE
                  LDECAL = 3
               ENDIF
            ELSE
               CALL UTMESS('F','CRSTCO_02','LES GRANDEURS DX, DY, (DZ)'
     +              //' N''EXISTENT PAS TOUTES, LE PROBLEME POSE EST '
     +              //'INCOMPATIBLE AVEC L''ALGORITHME DE RESOLUTION')
            ENDIF
            ZI(JCOAD+2*(II-1)+1) = LCOMPT
            ZI(JCOAD+2*(II-1)+2) = LCOMPT+LDECAL
            IEQ1 = ZI(JPRNO-1+(NEC+2)*(NO1-1)+1)
            IEQ2 = ZI(JPRNO-1+(NEC+2)*(NO2-1)+1)
            ZI(JCOEQ+LCOMPT)        = LDECAL-1
            ZI(JCOEQ+LCOMPT+LDECAL) = LDECAL-1
            DO 102 JJ = 1, LDECAL-1
               ZI(JCOEQ+LCOMPT+JJ)        = ZI(JNUEQ-1+IEQ1-1+JJ)
               ZI(JCOEQ+LCOMPT+LDECAL+JJ) = ZI(JNUEQ-1+IEQ2-1+JJ)
 102        CONTINUE
            LCOMPT = LCOMPT + 2*LDECAL
 10      CONTINUE
         IF (NDIM.LT.(LDECAL-1)) THEN
            CALL UTMESS('F','CRSTCO_03','LA DIMENSION DE '
     +           //'L''ESPACE DES DEPLACEMENTS EST '
     +           //'INCOMPATIBLE AVEC LES COMPOSANTES '
     +           //'DU DEPLACEMENT AUX NOEUDS')
         ENDIF
C
C     CREATION DE VECTEURS DE TRAVAIL POUR TRAITEMENT DU CONTACT
C
         CALL JEEXIN(DELTA,IER)
         IF (IER.EQ.0) CALL WKVECT(DELTA,'V V R',NEQ,JBID)
         CALL JEEXIN(DELT0,IER)
         IF (IER.EQ.0) CALL WKVECT(DELT0,'V V R',NEQ,JBID)
C
         CALL JEEXIN(MU,IER)
         IF (IER.EQ.0) CALL WKVECT(MU,'V V R',2*3*NBLIAI,JBID)
C
         CALL JEEXIN(COCO,IER)
         IF (IER.EQ.0) CALL WKVECT(COCO,'V V I',9,JBID)
         ZI(JBID)   = NDIM
         ZI(JBID+5) = NEC
C
         INDICF = ZI(JCHNI+2*ZI(JCHNI)+1)
         CALL WKVECT(LIAC,'V V I', 3*NBLIAI+1,JLIAI)
         CALL WKVECT(LIOT,'V V I', 4*NBLIAI+4,JLIOT)
         IF((INDICF.EQ.0).OR.(INDICF.EQ.7)) THEN
          CALL JECREC(CM1A,'V V R','NU','DISPERSE','CONSTANT',NBLIAI)
          CALL JEECRA(CM1A,'LONMAX',NEQ,K8BID)
          DO 30 II = 1,NBLIAI
            CALL JECROC(JEXNUM(CM1A,II))
 30       CONTINUE
         ELSE
          CALL JECREC(CM1A,'V V R','NU','DISPERSE','CONSTANT',3*NBLIAI)
          CALL JECREC(CM2A,'V V R','NU','DISPERSE','CONSTANT',3*NBLIAI)
          CALL JECREC(CM3A,'V V R','NU','DISPERSE','CONSTANT',3*NBLIAI)
          CALL JEECRA(CM1A,'LONMAX',NEQ,K8BID)
          CALL JEECRA(CM2A,'LONMAX',NEQ,K8BID)
          CALL JEECRA(CM3A,'LONMAX',NEQ,K8BID)
          DO 31 II = 1, 3*NBLIAI
            CALL JECROC(JEXNUM(CM1A,II))
C            CALL JEVEUO(JEXNUM(CM1A,II),'E',IBID)
            CALL JECROC(JEXNUM(CM2A,II))
            CALL JEVEUO(JEXNUM(CM2A,II),'E',IBID)
            CALL JELIBE(JEXNUM(CM2A,II))
            CALL JECROC(JEXNUM(CM3A,II))
            CALL JEVEUO(JEXNUM(CM3A,II),'E',IBID)
            CALL JELIBE(JEXNUM(CM3A,II))
 31       CONTINUE
         ENDIF
C
         CALL JECREO(MATR//'.REFA','V V K24')
         CALL JEECRA(MATR//'.REFA','LONMAX',4,' ')
         CALL JEVEUO(MATR//'.REFA','E',JBID)
         ZK24(JBID) = NOMA
         ZK24(JBID+1) = RESOCO(1:14)
         ZK24(JBID+2) = STOC
C
         CALL WKVECT(MATR//'.&VDI','V V R',3*NBLIAI,JBID)
         CALL WKVECT(MATR//'.&TRA','V V R',3*NBLIAI,JBID)
         CALL JECREO(MATR//'.LIME','V V K8')
         CALL JEECRA(MATR//'.LIME','LONMAX',1,' ')
         CALL JEVEUO(MATR//'.LIME','E',JBID)
         ZK8(JBID) = ' '
C
         CALL JECREC(MATR//'.VALE','V V R','NU','DISPERSE'
     +        ,'CONSTANT',NBBLOC)
       CALL JEECRA(MATR//'.VALE','LONMAX',3*NBLIAI*(3*NBLIAI+1)/2,K8BID)
         DO 4 II = 1, NBBLOC
            CALL JECROC(JEXNUM(MATR//'.VALE',II))
 4       CONTINUE
         CALL JEECRA(MATR//'.VALE','DOCU',1,'MS')
C
         CALL JECREO(STOC//'.REFE','V V K24')
         CALL JEECRA(STOC//'.REFE','LONMAX',1,' ')
         CALL JEECRA(STOC//'.REFE','DOCU',1,'SLCS')
         CALL JEVEUO(STOC//'.REFE','E',JBID)
         ZK24(JBID) = '??CONTACT??'
C
         CALL JECREO(STOC//'.DESC','V V I')
         CALL JEECRA(STOC//'.DESC','LONMAX',6,' ')
         CALL JEVEUO(STOC//'.DESC','E',JBID)
         ZI(JBID) = 3*NBLIAI
         ZI(JBID+1) = 3*NBLIAI*(3*NBLIAI+1)/2
         ZI(JBID+2) = NBBLOC
         ZI(JBID+3) = 3*NBLIAI
C
         CALL JECREO(STOC//'.HCOL','V V I')
         CALL JEECRA(STOC//'.HCOL','LONMAX',3*NBLIAI,' ')
         CALL JEVEUO(STOC//'.HCOL','E',JBID)
         DO 5 II = 1, 3*NBLIAI
            ZI(JBID+II-1) = II
 5       CONTINUE
C
         CALL JECREO(STOC//'.ADIA','V V I')
         CALL JEECRA(STOC//'.ADIA','LONMAX',3*NBLIAI,' ')
         CALL JEVEUO(STOC//'.ADIA','E',JBID)
         DO 6 II = 1, 3*NBLIAI
            ZI(JBID+II-1) = II*(II+1)/2
 6       CONTINUE
C
         CALL JECREO(STOC//'.ABLO','V V I')
         CALL JEECRA(STOC//'.ABLO','LONMAX',NBBLOC+1,' ')
         CALL JEVEUO(STOC//'.ABLO','E',JBID)
         ZI(JBID) = 0
         DO 7 II = 1, NBBLOC
            ZI(JBID+II) = 3*NBLIAI
 7       CONTINUE
C
         CALL JECREO(STOC//'.IABL','V V I')
         CALL JEECRA(STOC//'.IABL','LONMAX',3*NBLIAI,' ')
         CALL JEVEUO(STOC//'.IABL','E',JBID)
         DO 8 II = 1, 3*NBLIAI
            ZI(JBID+II-1) = 1
 8       CONTINUE
      ENDIF
 9999 CONTINUE
      CALL JEDEMA()
      END
