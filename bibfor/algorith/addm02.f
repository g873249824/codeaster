      SUBROUTINE ADDM02 ( IERUSR, ICMD,
     >                    NBOPT, TABENT, TABREE, TABCAR, LGCAR )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 10/10/2001   AUTEUR GNICOLAS G.NICOLAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE GNICOLAS G.NICOLAS
C     ------------------------------------------------------------------
C      ADAPTATION - DECODAGE DE LA MACRO-COMMANDE - PHASE 02
C      --           -              -                      --
C      ECRITURE DE LA COMMANDE DE CREATION DU REPERTOIRE POUR HOMARD
C
C     ATTENTION : ON NE FAIT CETTE CREATION QU'UNE SEULE FOIS PAR CAS
C                 D'ADAPTATION
C     ------------------------------------------------------------------
C
      IMPLICIT NONE
C
C 0.1. ==> ARGUMENTS
C
      INTEGER IERUSR, ICMD
      INTEGER IFM, NIVINF
      INTEGER NBOPT
      INTEGER TABENT(NBOPT), LGCAR(NBOPT)
C
      REAL*8 TABREE(NBOPT)
C
      CHARACTER*(*) TABCAR(NBOPT)
C
C 0.2. ==> VARIABLES LOCALES
C
      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'ADDM02' )
C
      INTEGER CODRET
      INTEGER LPROCH
      INTEGER KAUX
      INTEGER NBITER
      INTEGER LREPHC
C
      CHARACTER*2 PARAM
      CHARACTER*72 REPHC
      CHARACTER*128 PROCHO
C
C 0.3. ==> LE NUMERO D'ITERATION
C
      NBITER = TABENT(3) 
C     ------------------------------------------------------------------
C
      IF ( NBITER.EQ.0 ) THEN
C
C     ------------------------------------------------------------------
C====
C 1. RECUPERATION DES ARGUMENTS
C====
C
C 1.1. ==> ENTIERS
C
      IFM  = TABENT(29)
      NIVINF = TABENT(30)
C
C 1.2. ==> CARACTERES
C
      LREPHC = LGCAR(29)
      REPHC(1:LREPHC) = TABCAR(29)(1:LREPHC)
C
      LPROCH = LGCAR(30)
      PROCHO(1:LPROCH) = TABCAR(30)(1:LPROCH)
C
      IF ( NIVINF.GE.2 ) THEN
        WRITE(IFM,*) 'SOUS-PROGRAMME ', NOMPRO
        WRITE(IFM,*) 'LOGICIEL DE LANCEMENT DE HOMARD :'
        WRITE(IFM,*) PROCHO(1:LPROCH)
        WRITE(IFM,*) 'REPERTOIRE POUR EXECUTION DE HOMARD :'
        WRITE(IFM,*) REPHC(1:LREPHC)
      ENDIF
C
C====
C 2. ECRITURE DE LA COMMANDE
C====
C
      CODRET = 0
C
C 2.1. ==> INITIALISATION
C
      ICMD = ICMD + 1
      CALL SMDCMD ( ICMD, ' ', 'EXEC_LOGICIEL', CODRET )
C
C 2.2. ==> LE LOGICIEL A EXECUTER
C
      CALL PUTVTX ( 'LOGICIEL', 1, PROCHO, LPROCH, CODRET)
C
C 2.3. ==> LES ARGUMENTS
C
C 2.3.1. ==> MODE DE FONCTIONNEMENT DE LA PROCEDURE
C
      CALL SMDMCF ( 'ARGUMENT', CODRET )
C
      PARAM(1:1) = '1'
      KAUX = 1
      CALL PUTVTX ( 'NOM_PARA', 1, PARAM, KAUX, CODRET)
C
      CALL SMFMCF ( CODRET )
C
C 2.3.2. ==> ECRITURE DU NOM DU REPERTOIRE
C
      CALL SMDMCF ( 'ARGUMENT', CODRET )
C
      CALL PUTVTX ( 'NOM_PARA', 1, REPHC, LREPHC, CODRET)
C
      CALL SMFMCF ( CODRET )
C
C 2.4. ==> FIN DE LA COMMANDE
C
      CALL SMFCMD ( CODRET )
C
C====
C 3. BILAN
C====
C
      IF ( CODRET .GT. 0 ) THEN
        CALL UTMESS
     > ('E',NOMPRO,'ERREURS CONSTATEES POUR MACR_ADAP')
        IERUSR = IERUSR + CODRET
      ENDIF
C
C     ------------------------------------------------------------------
C
      ENDIF
C
C     ------------------------------------------------------------------
C
      END
