      SUBROUTINE XENRCH(NOMO,NOMA  ,CNSLT ,CNSLN ,CNSLJ ,CNSEN ,CNSENR,
     &                 NDIM,FISS  ,GOINOP,LISMAE,LISNOE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/04/2013   AUTEUR JAUBERT A.JAUBERT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER       NDIM
      CHARACTER*8   NOMA,FISS,NOMO
      CHARACTER*19  CNSLT,CNSLN,CNSLJ
      CHARACTER*19  CNSEN,CNSENR
      CHARACTER*24  LISMAE,LISNOE
      LOGICAL       GOINOP
C
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (PREPARATION)
C
C CALCUL DE L'ENRICHISSEMENT ET DES POINTS DU FOND DE FISSURE - 2D/3D
C
C ----------------------------------------------------------------------
C
C
C I/O FISS   : NOM DE LA FISSURE
C IN  NOMO   : NOM DU MODELE
C IN  NOMA   : NOM DU MAILLAGE
C IN  GOINOP : .TRUE.  SI  OPOO10 AVEC UPWIND-SIMPLEXE/GRILLE/3D
C              .FALSE. SINON
C IN  LISMAE : NOM DE LA LISTE DES MAILLES ENRICHIES
C IN  LISNOE : NOM DE LA LISTE DES NOEUDS DE GROUP_ENRI
C IN  CNSLT  : LEVEL-SET TANGENTE (TRACE DE LA FISSURE)
C IN  CNSLN  : LEVEL-SET NORMALE  (PLAN DE LA FISSURE)
C IN  CNSLJ  : LEVEL-SET JONCTION
C OUT CNSEN  : CHAM_NO SIMPLE POUR LE STATUT DES NOEUDS
C OUT CNSENR : CHAM_NO SIMPLE REEL POUR VISUALISATION
C
C
      INTEGER       NXMAFI,NXPTFF
C
      INTEGER       IRET,NBNO,INO,IMAE,NMAFON,JFON,JTAIL,NFON
      INTEGER       JFONO,JBASO,JTAILO
      INTEGER       JCOOR,JSTANO,JFONMU
      INTEGER       JENSV,JENSL,NBMA
      INTEGER       JENSVR,JENSLR,JCARAF
      INTEGER       I,NMAFIS,IBID
      INTEGER       JMAFIS,JMAFON,K,JBAS,JMAEN1,JMAEN2,JMAEN3
      INTEGER       NBFOND,NUMFON
      INTEGER       IFM,NIV
      INTEGER       NMAEN1,NMAEN2,NMAEN3,NCOUCH
      CHARACTER*8   K8BID
      CHARACTER*16  TYPDIS
      CHARACTER*19  CNXINV,INFO,LISTPT
      CHARACTER*24  MAFIS,STANO,XCARFO,FONMUL
      REAL*8        Q(4)
      REAL*8        RAYON
      LOGICAL       ORIENT
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('XFEM',IFM,NIV)
C
C --- ACCES AU MAILLAGE
C
      CALL JEVEUO(NOMA//'.COORDO    .VALE','L',JCOOR)
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNO,K8BID,IRET)
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8BID,IRET)

C     NOMBRE MAX DE MAILLES TRAVERSEES PAR LA FISSURE
      NXMAFI = NBMA

C     CONNECTIVITE INVERSEE
      CNXINV = '&&XENRCH.CNCINV'
      CALL CNCINV (NOMA,IBID,0,'V',CNXINV)
C
      CALL DISMOI('F','TYPE_DISCONTINUITE',FISS,'FISS_XFEM',
     &                                                 IBID,TYPDIS,IRET)
C
C --- RECUPERATION INFORMATIONS SUR LE FOND DE FISSURE
      RAYON  = 0.D0
      NCOUCH = 0
      IF (TYPDIS.EQ.'FISSURE') THEN
        XCARFO = FISS(1:8)//'.CARAFOND'
        CALL JEVEUO(XCARFO,'L',JCARAF)
        RAYON   = ZR(JCARAF)
        NCOUCH  = NINT(ZR(JCARAF+1))
      ENDIF
C
C     VOIR ALGORITHME DÉTAILLÉ DANS BOOK II (16/12/03)
C
C-------------------------------------------------------------------
C    1) ON RESTREINT LA ZONE D'ENRICHISSEMENT AUTOUR DE LA FISSURE
C-------------------------------------------------------------------

      IF (NIV.GE.3)
     &    WRITE(IFM,*)'1) RESTRICTION DE LA ZONE D ENRICHISSEMENT'

      MAFIS='&&XENRCH.MAFIS'
      CALL WKVECT(MAFIS,'V V I',NXMAFI,JMAFIS)
C     ATTENTION, MAFIS EST LIMITÉ À NXMAFI MAILLES
      CALL XMAFIS(NOMA,CNSLN,NXMAFI,MAFIS,NMAFIS,LISMAE)

C     FISSURE OU INTERFACE EN DEHORS DE LA STRUCTURE OU
C     COINCIDANT AVEC UN BORD DE LA STRUCTURE
      IF (NMAFIS.EQ.0) CALL U2MESS('F','XFEM_57')

      IF (NIV.GE.2) CALL U2MESI('I','XFEM_19',1,NMAFIS)
      IF (NIV.GE.3) THEN
        CALL U2MESS('I','XFEM_26')
        DO 110 IMAE=1,NMAFIS
          WRITE(IFM,*)' ',ZI(JMAFIS-1+IMAE)
 110    CONTINUE
      ENDIF

C--------------------------------------------------------------------
C    2°) ON ATTRIBUE LE STATUT DES NOEUDS DE GROUP_ENRI
C--------------------------------------------------------------------

      IF (NIV.GE.3)
     &   WRITE(IFM,*)'2) ATTRIBUTION DU STATUT DES NOEUDS DE GROUPENRI'

C     CREATION DU VECTEUR STATUT DES NOEUDS
      STANO='&&XENRCH.STANO'
      CALL WKVECT(STANO,'V V I',NBNO,JSTANO)

C     ON INITIALISE POUR TOUS LES NOEUDS DU MAILLAGE ENR À 0
      CALL JERAZO(STANO,NBNO,1)

C     CALCUL DU STATUT DES NOEUDS
      CALL XSTANO(NOMA,LISNOE,NMAFIS,JMAFIS,CNSLT,CNSLN,CNSLJ,
     &            RAYON,CNXINV,STANO)

C--------------------------------------------------------------------
C    3°) ON ATTRIBUE LE STATUT DES MAILLES DU MAILLAGE
C        (MAILLES PRINCIPALES ET MAILLES DE BORD)
C        ET ON CONSTRUIT LES MAILLES DE MAFOND (NB MAX = NMAFIS)
C        + MAJ DU STANO SI ENRICHISSEMENT A NB COUCHES
C--------------------------------------------------------------------

      IF (NIV.GE.3) WRITE(IFM,*)'3) ATTRIBUTION DU STATUT DES MAILLES'

      CALL WKVECT('&&XENRCH.MAFOND','V V I',NMAFIS,JMAFON)
      CALL WKVECT('&&XENRCH.MAENR1','V V I',NBMA,JMAEN1)
      CALL WKVECT('&&XENRCH.MAENR2','V V I',NBMA,JMAEN2)
      CALL WKVECT('&&XENRCH.MAENR3','V V I',NBMA,JMAEN3)

C     CALCUL EFFECTIF DU STATUT DES MAILLES (+MAJ STANO)
      CALL XSTAMA(NOMO,NOMA,NBMA,NMAFIS,JMAFIS,NCOUCH,LISNOE,
     &                  ZI(JSTANO),CNSLT,CNSLN,
     &                  JMAFON,JMAEN1,JMAEN2,JMAEN3,
     &                  NMAFON,NMAEN1,NMAEN2,NMAEN3 )


C     IMPRESSION DES MAILLES ENRICHIES
      CALL XSTAMI(NOMA,NMAFON,NMAEN1,NMAEN2,NMAEN3,
     &            JMAFON,JMAEN1,JMAEN2,JMAEN3)

C--------------------------------------------------------------------
C     3.5°) ENREGISTREMENT DES STATUT DES NOEUDS
C--------------------------------------------------------------------

C     RQ : ON NE PEUT PAS FAIRE CA AVANT CAR STANO EST MODIFIE
C     SI ON DEFINIT UN ENRICHISSEMENT GEOM A NB_COUCHES

C     ENREGISTREMENT DU CHAM_NO SIMPLE : STATUT DES NOEUDS
      CALL CNSCRE(NOMA,'NEUT_I',1,'X1','V',CNSEN)
      CALL JEVEUO(CNSEN//'.CNSV','E',JENSV)
      CALL JEVEUO(CNSEN//'.CNSL','E',JENSL)
      DO 210 INO=1,NBNO
        ZI(JENSV-1+(INO-1)+1)=ZI(JSTANO-1+(INO-1)+1)
        ZL(JENSL-1+(INO-1)+1)=.TRUE.
 210  CONTINUE

C     ENREGISTREMENT DU CHAM_NO SIMPLE REEL (POUR VISUALISATION)
      CALL CNSCRE(NOMA,'NEUT_R',1,'X1','V',CNSENR)
      CALL JEVEUO(CNSENR//'.CNSV','E',JENSVR)
      CALL JEVEUO(CNSENR//'.CNSL','E',JENSLR)
      DO 211 INO=1,NBNO
        ZR(JENSVR-1+(INO-1)+1)=ZI(JSTANO-1+(INO-1)+1)
        ZL(JENSLR-1+(INO-1)+1)=.TRUE.
 211  CONTINUE

C     POUR UNE INTERFACE, ON PASSE DIRECTEMENT A LA CREATION DE LA SD
      IF (TYPDIS.EQ.'INTERFACE') THEN
        CALL ASSERT(NMAEN2+NMAEN3.EQ.0)
        NFON = 0
        NBFOND = 0
        GOTO 800
      ENDIF

C--------------------------------------------------------------------
C    4°) RECHERCHES DES POINTS DE FONFIS (ALGO BOOK I 18/12/03)
C        ET REPERAGE DES POINTS DE BORD
C--------------------------------------------------------------------

      IF (NIV.GE.3) WRITE(IFM,*)'4) RECHERCHE DES POINTS DE FONFIS'

C     ON RAJOUTE +1 POUR LES CAS PARTICULIER OU TOUS LES ELTS
C     CONTIENNENT LE FOND DE FISSURE
      NXPTFF = NMAEN1 + NMAEN2 + NMAEN3 +1

      CALL WKVECT('&&XENRCH.FONFIS','V V R',11*NXPTFF,JFONO)
      CALL WKVECT('&&XENRCH.BASFON','V V R',2*NDIM*NXPTFF,JBASO)
      CALL WKVECT('&&XENRCH.FOND_TAIL_R','V V R',NXPTFF,JTAILO)

C     VECTEUR CONTENANT LES INDICES DES POINTS DU FOND PAR MAILLE
      LISTPT = '&&XENRCH.LISTPT'

      CALL XPTFON(NOMA,NDIM,NMAFON,CNSLT,CNSLN,CNXINV,JMAFON,NXPTFF,
     &           JFONO,NFON,JBASO,JTAILO,FISS,GOINOP,LISTPT,ORIENT)
      IF (.NOT.GOINOP) THEN
        CALL U2MESI('I','XFEM_33',1,NFON)
      ELSE
        CALL U2MESI('I','XFEM_74',1,NFON)
      ENDIF

      IF (.NOT.ORIENT) THEN
        NFON   = 0
        NBFOND = 0
        GOTO 800
      ENDIF

      IF (NFON.EQ.0) THEN
        CALL U2MESS('A','XFEM_58')
        IF (RAYON.GT.0.D0) CALL U2MESS('A','XFEM_59')
        CALL ASSERT(NMAEN2+NMAEN3.EQ.0)
        NBFOND = 0
C       ON PASSE DIRECTEMENT
        GOTO 800
      ENDIF

C--------------------------------------------------------------------
C    5°) ORIENTATION DES POINTS DE FONFIS (ALGO BOOK I 19/12/03)
C        ET DETECTION DES FONDS MULTIPLES
C--------------------------------------------------------------------
C     VECTEURS TEMPORAIRES DIMENSIONNES A NFON+1 AU CAS OU ON A UN
C     FOND FERME
      CALL WKVECT('&&XENRCH.FONFI','V V R',4*(NFON+1),JFON)
      CALL WKVECT('&&XENRCH.BASFO','V V R',2*NDIM*(NFON+1),JBAS)
      CALL WKVECT('&&XENRCH.TAILR','V V R',NFON+1,JTAIL)

      FONMUL = '&&XENRCH.FONDMULT'
      CALL WKVECT(FONMUL,'V V I',NFON,JFONMU)

C     SEULEMENT EN 3D
      IF (NDIM.EQ.3) THEN

        IF (NIV.GE.3) WRITE(IFM,*)'5) ORIENTATION DU FOND DE FISSURE'

        INFO = FISS//'.INFO'

        CALL XORIFF(INFO,NFON,JFONO,JBASO,JTAILO,NMAFON,LISTPT,GOINOP,
     &              JFON,JBAS,JTAIL,FONMUL,NBFOND)

      ENDIF

C     REMPLISSAGE DE FONDFISS ET DE BASEFOND
C     STOCKAGE DES FONDS MULTIPLES EN 2D
C       EN 2D, CHAQUE POINT DE FOND DE FISSURE EST UN FOND A LUI SEUL
C       IL Y A DONC AUTANT DE FONDS MULTIPLES QUE DE POINTS (1 OU 2)
C       LES POINTS DE DEPART ET D'ARRIVEES SONT LES MEMES
      IF (NDIM.EQ.2) THEN
        IF (NFON.GT.2) CALL U2MESS('F','XFEM_11')
        NBFOND = NFON
        DO 999 I=1,NFON
          DO 11 K=1,2
            ZR(JFON-1+4*(I-1)+K)   = ZR(JFONO-1+11*(I-1)+K)
            ZR(JBAS-1+4*(I-1)+K)   = ZR(JBASO-1+4*(I-1)+K)
            ZR(JBAS-1+4*(I-1)+K+2) = ZR(JBASO-1+4*(I-1)+K+2)
 11       CONTINUE
          ZR(JTAIL-1+I) = ZR(JTAILO-1+I)
          ZI(JFONMU-1+2*(I-1)+1)=I
          ZI(JFONMU-1+2*(I-1)+2)=I
 999     CONTINUE
      ENDIF

C     IMPRESSION DES POINTS DE FOND DE FISSURE (2D/3D)
      IF (.NOT.GOINOP) THEN
        CALL U2MESS('I','XFEM_35')
      ELSE
        CALL U2MESS('I','XFEM_75')
      ENDIF

      NUMFON=1

      DO 799 I=1,NFON
        Q(1)=ZR(JFON-1+4*(I-1)+1)
        Q(2)=ZR(JFON-1+4*(I-1)+2)
        IF (NDIM.EQ.3) THEN
          Q(3)=ZR(JFON-1+4*(I-1)+3)
          Q(4)=ZR(JFON-1+4*(I-1)+4)
        ENDIF
        IF (ZI(JFONMU-1+2*(NUMFON-1)+1).EQ.I) THEN
          CALL U2MESI('I','XFEM_36',1,NUMFON)
          IF (NDIM.EQ.3) WRITE(IFM,797)
          IF (NDIM.EQ.2) WRITE(IFM,7970)
        ENDIF
        IF (NDIM.EQ.2) WRITE(IFM,798)(Q(K),K=1,2)
        IF (NDIM.EQ.3) WRITE(IFM,798)(Q(K),K=1,4)
        IF (ZI(JFONMU-1+2*(NUMFON-1)+2).EQ.I) NUMFON=NUMFON+1
 799  CONTINUE

 797  FORMAT(7X,'X',13X,'Y',13X,'Z',13X,'S')

 7970 FORMAT(7X,'X',13X,'Y')

 798  FORMAT(2X,4(E12.5,2X))


 800  CONTINUE
C
C --- CREATION DE LA SD
C
      CALL XLMAIL(FISS,NMAEN1,NMAEN2,NMAEN3,NMAFON,
     &            JMAEN1,JMAEN2,JMAEN3,JMAFON,NFON,
     &            JFON,NBFOND,JBAS,JTAIL,JFONMU,NDIM,
     &            GOINOP)

      IF (.NOT.GOINOP) THEN  
C
C     CONSTRUCTION DES TABLES SUR LES FONDS DE FISSURES
C
      CALL XTABFF(NBFOND,NFON,NDIM,FISS)
C
      ENDIF
C --- MENAGE
C
      CALL JEDETR(CNXINV)
      CALL JEDETR ('&&XENRCH.FONFIS')
      CALL JEDETR ('&&XENRCH.MAFOND')
      CALL JEDETR ('&&XENRCH.MAENR1')
      CALL JEDETR ('&&XENRCH.MAENR2')
      CALL JEDETR ('&&XENRCH.MAENR3')
      CALL JEDETR ('&&XENRCH.BASFON')
      CALL JEDETR ('&&XENRCH.FONDMULT')
      CALL JEDETR ('&&XENRCH.FOND_TAIL_R')
      CALL JEDETR ('&&XENRCH.FONFI')
      CALL JEDETR ('&&XENRCH.BASFO')
      CALL JEDETR ('&&XENRCH.TAILR')
      IF (GOINOP) THEN
        CALL JEDETR ('&&XENRCH.MAFIS')
        CALL JEDETR ('&&XENRCH.STANO')
        CALL JEDETR ('&&XENRCH.LISTPT')
      ENDIF

      IF (NIV.GE.3) WRITE(IFM,*)'7) FIN DE XENRCH'

      CALL JEDEMA()
      END
