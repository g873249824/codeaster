      SUBROUTINE NDXCVG(SDDISC,SDERRO,ERROR )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 06/06/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      LOGICAL      ERROR
      CHARACTER*19 SDDISC
      CHARACTER*24 SDERRO
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C VERIFICATION DES CRITERES D'ARRET - CAS EXPLICITE
C
C ----------------------------------------------------------------------
C
C
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  SDERRO : GESTION DES ERREURS
C OUT ERROR  : .TRUE. SI ERREUR DETECTEE

C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      IFM,NIV
      LOGICAL      LBID
      INTEGER      IBID,IECHEC,NECHEC,IEVENT
      REAL*8       R8BID
      CHARACTER*8  K8BID
      CHARACTER*16 NOMEVE,EVEN
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> EVALUATION DE LA CONVERGENCE'
      ENDIF
C
C --- INITIALISATIONS
C
      ERROR  = .FALSE.
      IEVENT = 0
      EVEN   = 'DIVERGENCE_ERRE'
C
C --- ERREUR OU PAS ?
C
      CALL NMERGE('GET','ALL',SDERRO,ERROR )
C
C --- AFFICHAGE ERREUR
C
      IF (ERROR) THEN
        CALL NMERGE('PRT','ALL',SDERRO,LBID  )
      ENDIF
C
C --- RECHERCHE DU NUMERO D'OCCURENCE DE L'EVENEMENT
C
      CALL UTDIDT('L'   ,SDDISC,'ECHE',IBID  ,'NB_OCC',
     &            R8BID ,NECHEC,K8BID )
      IEVENT = 0
C
C --- RECHERCHE DU NUMERO D'OCCURENCE DE L'EVENEMENT
C
      DO 10 IECHEC = 1,NECHEC
        CALL UTDIDT('L'   ,SDDISC,'ECHE',IECHEC,'NOM_EVEN',
     &              R8BID ,IBID  ,NOMEVE)
        IF (EVEN.EQ.NOMEVE) IEVENT = IECHEC
 10   CONTINUE
C
C --- ENREGISTREMENT DE L'EVENEMENT
C
      IF (ERROR) THEN
        CALL ENEVEN(SDDISC,IEVENT,.TRUE. )
      ELSE
        CALL ENEVEN(SDDISC,IEVENT,.FALSE.)      
      ENDIF
C
      CALL JEDEMA()
      END
