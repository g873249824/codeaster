      SUBROUTINE OP0131 ( IER )
      IMPLICIT   NONE
      INTEGER             IER
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 10/10/2006   AUTEUR MCOURTOI M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C TOLE CRP_20 
C     CALCUL DE REPONSE DYNAMIQUE SOUS FORME D INTERSPECTRE
C     EXCITATION ET REPONSES SONT DES INTERSPECTRES.
C ----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16            ZK16
      CHARACTER*24                    ZK24
      CHARACTER*32                            ZK32
      CHARACTER*80                                    ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER       IDEREX, IDERRE, IVAL(2), IRET, ILNOEX, ILCPEX, I1, 
     +              ILVAEX, NAPEXC, NINDEX, NNOEEX, NCMPEX, NVASEX, I2,
     +              NBPTMD, IADFRQ, ILAMOR, IJ1, IGIM, IGRE, 
     +              ILMODE, ILAMSC, NMOST1, IADPIM, IADSC3, ILFEX2, N1,
     +              IADHII, IMODDY, IFREQ2, IFREQ1, NMOST3, NDIMRE, NI,
     +              ITAIL1, ILFOR1, ILAPRL, IBID1, IEXP, ISIGN, IADJ, J,
     +              IADJS, IADG, IADJG, IADJGJ, NJ, NI1, NI2, I, NK, IJ,
     +              IADIJ, NBPARM, NBMODE, NBDDL, NBAMOR, NPDSC3
      PARAMETER   ( NBPARM = 6 )
      REAL*8        R8B, BANDE(2), DEPI, R8DEPI, FREMIN, FREMAX, PAS,
     +              R8AMOR, R8FREQ, R8BID1, R8SIGN, R8OMEG, R8OMG2, PIM,
     +              FREFIN
      COMPLEX*16    C16B, XCJ, XCGREP, XCG, XCH
      CHARACTER*4   TYPOPT, EXCMOD, FREXCI
      CHARACTER*8   MTRMAS, MODMEC, INTEXC, MODSTA, MAILLA, NUMER
      CHARACTER*8   INTREP, TYPARM(NBPARM)
      CHARACTER*8   CHAMAT, CELEM, TYMMEC
      CHARACTER*16  TYCONC, NOMCMD, GRAEXC, GRDMOD, KVAL(2),
     +              NOPARM(NBPARM), NOCHAM
      CHARACTER*19  NOMCOD
      CHARACTER*24  LIFEX2
C
      DATA NOPARM / 'NOM_CHAM' , 'OPTION' , 'DIMENSION' ,
     +              'NUME_ORDRE_I' , 'NUME_ORDRE_J' ,'FONCTION_C' /
      DATA TYPARM / 'K16' , 'K16' , 'I' , 'I' , 'I' , 'K24' /
C     ------------------------------------------------------------------
C
      CALL JEMARQ()
      DEPI = R8DEPI()
C
C---0.---VERIFICATIONS
C
      CALL VRIALE ( )
C
      CALL INFMAJ
C
C---1-----RECUPERATION DES ARGUMENTS DE LA COMMANDE
C---1.1---NOM DU RESULTAT, TYPE DU RESULTAT, ET NOM DE LA COMMANDE
C
      CALL GETRES ( INTREP, TYCONC, NOMCMD )
C
C---1.2---INTERSPECTRE EXCIT
C
      CALL RECIEX ( INTEXC, IDEREX, NINDEX, NNOEEX,
     &              NCMPEX, NVASEX, GRAEXC, EXCMOD, NAPEXC )
C
      CALL JEEXIN('&&OP0131.LISTENOEEXC',IRET)
      IF (IRET.GT.0) CALL JEVEUO('&&OP0131.LISTENOEEXC','L',ILNOEX)
C
      CALL JEEXIN('&&OP0131.LISTECMPEXC',IRET)
      IF (IRET.GT.0) CALL JEVEUO('&&OP0131.LISTECMPEXC','L',ILCPEX)
C
      CALL JEEXIN('&&OP0131.LVECTASSEXC',IRET)
      IF (IRET.GT.0) CALL JEVEUO('&&OP0131.LVECTASSEXC','L',ILVAEX)
C
C---1.3---INTERSPECTRE REPONSE
C
      CALL RECIRE ( TYPOPT, IDERRE, FREXCI, 
     &                      FREMIN, FREMAX, PAS, NBPTMD )
C
C---1.4---MODES DYNAMIQUES
C
      CALL RECMOD ( MODMEC, NBMODE, NBAMOR, BANDE, TYMMEC, GRDMOD )
      CALL JEVEUO(MODMEC//'           .FREQ','L',IADFRQ)
C
      ILAMOR = 1
      CALL JEEXIN('&&OP0131.LISTEAMOR',IRET)
      IF (IRET.GT.0) CALL JEVEUO('&&OP0131.LISTEAMOR','L',ILAMOR)
C
      ILMODE = 1
      CALL JEEXIN('&&OP0131.LISTEMODES',IRET)
      IF (IRET.GT.0) CALL JEVEUO('&&OP0131.LISTEMODES','L',ILMODE)
C
C---1.5---MODES STATIQUES
C
      CALL  RECMST ( GRAEXC,GRDMOD,NNOEEX,ILNOEX,ILCPEX,NMOST1,MODSTA)
      CALL JEEXIN ( '&&OP0131.LISTADRMODSTAC', IRET )
      IF (IRET.GT.0) CALL JEVEUO('&&OP0131.LISTADRMODSTAC','L', ILAMSC )
C
C---1.6---CONSTITUTION DE LA LISTE COMPLETE DES ET DDLS EN CAS D EFFORT
C         ET DES ADRESSES DES MATRICES ELEMENTAIRES CORRESPONDANTES
C
      CALL PREKPR ( MODMEC, MTRMAS, NBDDL, NUMER, MAILLA, CHAMAT,
     +                      CELEM )
C
C---2.----CALCUL DES COEFFICIENTS DE PARTICIPATION GENERALISE
C        IL Y EN A NAPEXC*NBMODE
C
      CALL CALPIM ( GRAEXC, EXCMOD, NAPEXC, NBMODE, TYMMEC, MTRMAS,
     +              NUMER, NBDDL, ZK8(ILNOEX), ZK8(ILCPEX), NVASEX,
     +              ZK8(ILVAEX) )
      CALL JEVEUO ( '&&OP0131.PIM', 'L', IADPIM )
C
C---3-----MISE AU POINT DE LA DISCRETISATION FREQUENTIELLE
C   4-----ET RECALCUL DES DSP EXCITS DANS LA DISCRETISATION REPONSE
C
      CALL CALDIS ( FREMAX, FREMIN, PAS, FREXCI, NBPTMD, NBMODE,
     +      ZI(ILMODE), ZR(IADFRQ), ZR(ILAMOR), NINDEX, NPDSC3, FREFIN )
C
      CALL JEVEUO ( '&&OP0131.DISCR3'        ,'E', IADSC3 )
      LIFEX2 = '&&OP0131.LIADRFOE.FRQRE'
C
C
C---5.----PRISE EN COMPTE D UN COEFFICIENT MULTIPLICATEUR POUR LES
C         SOURCES DE PRESSION OU DE FORCE
C
C     ON MULTIPLIE LE DEBIT MASSE PAR RO ET OMEGA  POUR DES SOURCES
C     DE DEBIT
C     ON CONDITIONNE L INTERSPECTRE POUR LES SOURCES DE PRESSION
C     DE FACON A CE QU IL SOIT ENTIEREMENT CORRELE AVEC PRISE EN COMPTE
C     DE LA DISTANCE ENTRE LES NOEUDS D APPLICATION DE LA SOURCE
C
      IF ( GRAEXC(1:5) .EQ. 'SOUR_' ) THEN
         CALL PREFLX ( GRAEXC, MAILLA, CHAMAT, CELEM, NPDSC3, IADSC3,
     &                 NINDEX, ILNOEX, LIFEX2 )
      ENDIF
      CALL JEVEUO (LIFEX2,'L', ILFEX2 )
C
C---6-----CALCUL DE LA REPONSE EN DSP
C---6.1---CALCUL ET STOCKAGE DE HII
C
      CALL WKVECT ( '&&OP0131.HII', 'V V C', NBMODE*NPDSC3, IADHII )
      DO 601 IMODDY = 1,NBMODE
         R8AMOR = ZR(ILAMOR+IMODDY-1)
         IFREQ2 = IADFRQ-1+ZI(ILMODE+IMODDY-1)
         DO 602 IFREQ1 = 1,NPDSC3
            R8FREQ = ZR(IADSC3+IFREQ1-1)
            R8BID1 = R8FREQ / ZR(IFREQ2)
            CALL TRANSF ( R8BID1, R8AMOR, XCH )
            XCH = XCH / (DEPI*ZR(IFREQ2))**2
            ZC(IADHII-1+NPDSC3*(IMODDY-1)+IFREQ1) = XCH
 602     CONTINUE
 601  CONTINUE
C
C---6.2---CREATION DE LA MATRICE DE RETOUR DANS L ESPACE PHYSIQUE
C
      IF ( GRAEXC .EQ. 'DEPL_R' ) THEN
         NMOST3 = NNOEEX
      ELSE
         NMOST3 = 0
      ENDIF
C
C------STOCKAGE DES NUMEROS DES DDLS REPONSE
C
      NDIMRE = NBMODE + NMOST3
C
C
      IF ( IDERRE .EQ. 0 ) THEN
         NOCHAM = 'DEPL_GENE' 
      ELSEIF ( IDERRE .EQ. 1 ) THEN
         NOCHAM = 'VITE_GENE'
      ELSE
         NOCHAM = 'ACCE_GENE'
      ENDIF
      KVAL(1) = NOCHAM
      KVAL(2) = TYPOPT
C
      CALL TBCRSD ( INTREP, 'G' )
      CALL TBAJPA ( INTREP, NBPARM, NOPARM, TYPARM )
      CALL TBAJLI ( INTREP, 3, NOPARM, NDIMRE, R8B, C16B, KVAL, 0 )
C
      ITAIL1 = NDIMRE * ( 1 + NDIMRE ) / 2
      CALL WKVECT ('&&OP0131.LIADRFOR1', 'V V I', ITAIL1, ILFOR1 )
      CALL WKVECT ('&&OP0131.LIADRPROL', 'V V I', ITAIL1, ILAPRL )
      DO 401 I1 = 1 , NDIMRE
         IVAL(1) = I1
         DO 402 I2 = I1 , NDIMRE
            IVAL(2) = I2
            WRITE(NOMCOD,'(A8,A3,2I4.4)') INTREP,'.FO',I1,I2
               CALL TBAJLI ( INTREP, 3, NOPARM(4), 
     +                        IVAL, R8B, C16B, NOMCOD, 0 )
            IJ1=(I2*(I2-1))/2+I1
            IF ( (TYPOPT.EQ.'TOUT') .OR. (I1.EQ.I2) ) THEN
               CALL WKVECT ( NOMCOD//'.VALE',
     &                             'G V R8',NPDSC3*3,ZI(ILFOR1-1+IJ1))
            ELSE
               CALL WKVECT ( NOMCOD//'.VALE',
     &                             'G V R8',6,ZI(ILFOR1-1+IJ1))
            ENDIF
            CALL WKVECT(NOMCOD//'.PROL','G V K16',5,ZI(ILAPRL-1+IJ1))
            IBID1=ZI(ILAPRL-1+IJ1)
            ZK16(IBID1  ) = 'FONCT_C '
            ZK16(IBID1+1) = 'LIN LIN '
            ZK16(IBID1+2) = NOCHAM
            ZK16(IBID1+3) = 'DSP     '
            ZK16(IBID1+4) = 'EE      '
 402     CONTINUE
 401  CONTINUE
C
C---6.5---COEFFICIENT EN PUISSANCE DE W : IEXP
C
      IEXP = IDERRE - IDEREX
      IF ( GRAEXC .NE. 'DEPL_R' ) IEXP = IEXP-2
C
C---6.6---SIGNE DEDUIT DE L ORDRE DE DERIVATION
C
      ISIGN = MOD(IDERRE-IDEREX+6,2)
      IF ( ISIGN .EQ. 1 ) THEN
         R8SIGN = -1.D0
      ELSE
         R8SIGN = 1.D0
      ENDIF
C
C---6.7---CREATION DES MATRICES DE TRAVAIL
C
      N1 = NMOST3 + NBMODE
      CALL WKVECT('&&OP0131.J'  ,'V V C', N1*NAPEXC    , IADJ  )
      CALL WKVECT('&&OP0131.JS' ,'V V C', N1*NAPEXC    , IADJS )
      CALL WKVECT('&&OP0131.G'  ,'V V C', NAPEXC*NAPEXC, IADG  )
      CALL WKVECT('&&OP0131.JG' ,'V V C', N1*NAPEXC    , IADJG )
      CALL WKVECT('&&OP0131.JGJ','V V C', N1*N1        , IADJGJ)
C
C---6.8---BOUCLE DE CALCUL SUR CHAQUE FREQUENCE REPONSE
C
      NJ  = NAPEXC
      NI1 = NMOST3
      NI2 = NBMODE
      NI  = NI1 + NI2
C
      DO 607 IFREQ1 = 1 , NPDSC3
C
         R8FREQ = ZR(IADSC3+IFREQ1-1)
         R8OMEG = DEPI*R8FREQ
         R8OMG2 = R8OMEG*R8OMEG
         IF ( R8OMEG .EQ. 0.D0 ) THEN
            IF ( IEXP .EQ. 0 ) THEN
               R8BID1 = 0.D0
            ELSE
               R8BID1 = 1.D0
            ENDIF
         ELSE
            R8BID1 = R8SIGN*(R8OMEG**IEXP)*R8OMG2
         ENDIF
C
C---------REMPLISSAGE DE LA MATRICE J ET DE JS
C
         DO 611 J = 1 , NJ
C  MATRICES DES MODES STATIQUES EST L IDENTITE
            IF ( J .LE. NI1 ) THEN
               XCJ = 1.D0
               ZC(IADJ -1+NI*(J-1)+J) = XCJ
               ZC(IADJS-1+NJ*(J-1)+J) = DCONJG(XCJ) 
            ENDIF
            DO 612 I = 1 , NI2
               PIM = ZR(IADPIM+(J-1)*NI2+I-1)
               XCJ = R8BID1*PIM*ZC(IADHII-1+NPDSC3*(I-1)+IFREQ1)
               ZC(IADJ -1+NI*(J-1)+NI1+I)   = XCJ
               ZC(IADJS-1+(NJ)*(I+NI1-1)+J) = DCONJG(XCJ)
 612        CONTINUE
 611     CONTINUE
C
C---------STOCKAGE GEXC A LA FREQUENCE IFREQ1
C
         DO 613 I=1,NAPEXC
            DO 614 J=1,NAPEXC
               IF ( J .GE. I ) THEN
                  IJ1=(J*(J-1))/2+I
                  IGRE=ZI(ILFEX2-1+IJ1)+NPDSC3-1+2*(IFREQ1-1)+1
                  IGIM=ZI(ILFEX2-1+IJ1)+NPDSC3-1+2*(IFREQ1-1)+2
                  XCG=DCMPLX(ZR(IGRE),ZR(IGIM))
               ELSE
                  IJ1=(I*(I-1))/2+J
                  IGRE=ZI(ILFEX2-1+IJ1)+NPDSC3-1+2*(IFREQ1-1)+1
                  IGIM=ZI(ILFEX2-1+IJ1)+NPDSC3-1+2*(IFREQ1-1)+2
                  XCG=DCMPLX(ZR(IGRE),-ZR(IGIM))
               ENDIF
               ZC(IADG-1+(J-1)*NAPEXC+I)=XCG
 614        CONTINUE
 613     CONTINUE
C
C---------CALCUL JG A LA FREQUENCE IFREQ1
C
         CALL MLMATC ( N1, NAPEXC, NAPEXC, ZC(IADJ), ZC(IADG),ZC(IADJG))
C
C---------CALCUL JGJ* A LA FREQUENCE IFREQ1
C
         CALL MLMATC ( N1, NAPEXC, N1, ZC(IADJG), ZC(IADJS), ZC(IADJGJ))
C
C----------SI REPONSE MODALE ON SORT ICI LES RESULTATS
C
         DO 640 I = 1 , NDIMRE
            IF ( TYPOPT .EQ. 'DIAG ') THEN
               NK = I
            ELSE
               NK = NDIMRE
            ENDIF
            DO 641 J = I , NK
               IJ = ((J-1)*J)/2+I
               IADIJ = ZI(ILFOR1-1+IJ)
               XCGREP = ZC(IADJGJ-1+(J-1)*NDIMRE+I)
               ZR(IADIJ-1+IFREQ1) = R8FREQ
               ZR(IADIJ-1+NPDSC3+2*(IFREQ1-1)+1) = DBLE(XCGREP)
               ZR(IADIJ-1+NPDSC3+2*(IFREQ1-1)+2) = DIMAG(XCGREP)
 641        CONTINUE
 640     CONTINUE
C
 607  CONTINUE
C
      IF ( TYPOPT .EQ. 'DIAG' ) THEN
         DO 630 I=1,NDIMRE
            DO 631 J = I+1 , NDIMRE
               IJ = J*(J-1)/2+I
               IBID1 = ZI(ILFOR1-1+IJ)
               ZR(IBID1  ) = 0.D0
               ZR(IBID1+1) = FREFIN
               ZR(IBID1+2) = 0.D0
               ZR(IBID1+3) = 0.D0
               ZR(IBID1+4) = 0.D0
               ZR(IBID1+5) = 0.D0
 631        CONTINUE
 630     CONTINUE
      ENDIF
C
      CALL TITRE
C
C
      CALL JEDEMA()
      END
