      SUBROUTINE MMERRO(DEFICO,RESOCO,NOMA,
     &                  CONTEX,TYPERR,ERROR,
     &                  NMA,NND,NPT,
     &                  IINF,RINF,KINF)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 30/04/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      CHARACTER*24  DEFICO
      CHARACTER*24  RESOCO
      CHARACTER*8   NOMA
      CHARACTER*6   CONTEX
      CHARACTER*1   TYPERR
      CHARACTER*(*) ERROR
      INTEGER       NMA
      INTEGER       NND
      INTEGER       NPT
      INTEGER       IINF(*)
      REAL*8        RINF(*)
      CHARACTER*24  KINF(*)
C
C ----------------------------------------------------------------------
C ROUTINE UTILITAIRE (CONTACT METHODE CONTINUE)
C ----------------------------------------------------------------------
C
C GESTION DES MESSAGES D'ERREURS
C
C IN  DEFICO : SD POUR LA DEFINITION DU CONTACT
C IN  RESOCO : SD POUR LA RESOLUTION DU CONTACT
C IN  NOMA   : NOM DE LA SD MAILLAGE
C IN  CONTEX : CONTEXTE DE DECLENCHEMENT DE L'ERREUR
C IN  TYPERR : TYPE DE L'ERREUR (ALARME, FATAL,...)
C IN  ERROR  : NOM DE L'ERREUR
C IN  NMA    : NUMERO DE LA MAILLE FAUTIVE
C IN  NND    : NUMERO DU NOEUD FAUTIF
C IN  NPT    : NUMERO DU PG FAUTIF
C IN  IINF   : INFOS SUPPLEMENTAIRES DE TYPE ENTIER
C IN  RINF   : INFOS SUPPLEMENTAIRES DE TYPE REEL
C IN  KINF   : INFOS SUPPLEMENTAIRES DE TYPE CHARACTER
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32 JEXNUM
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      VALI(3)
      CHARACTER*8  NOMMAI,NOMNOE
      CHARACTER*24 VALK(2)
      CHARACTER*24 CARACF
      INTEGER      JCMCF
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
      CARACF = DEFICO(1:16) // '.CARACF'
      CALL JEEXIN(CARACF,JCMCF)
C      
      IF (JCMCF.EQ.0) THEN
        VALK(1) = CARACF
        CALL U2MESK('F','CONTACT3_99',1,VALK)
      ENDIF

      IF (ERROR(1:8).EQ.'MAT_SING') THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NMA),NOMMAI)
        IF (NND.NE.-1) THEN
          CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NND),NOMNOE)
           VALK(1) = NOMNOE
           VALK(2) = NOMMAI
           CALL U2MESK(TYPERR,'CONTACT3_10', 2 ,VALK)
        ELSE
          CALL U2MESK(TYPERR,'CONTACT3_11',1,NOMMAI)
        ENDIF
      ELSEIF (ERROR(1:8).EQ.'NON_CONV') THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NMA),NOMMAI)
        IF (NND.NE.-1) THEN
          CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NND),NOMNOE)
           VALK(1) = NOMNOE
           VALK(2) = NOMMAI
           CALL U2MESK(TYPERR,'CONTACT3_12', 2 ,VALK)
        ELSE
          CALL U2MESK(TYPERR,'CONTACT3_13',1,NOMMAI)
        ENDIF
      ELSEIF (ERROR(1:13).EQ.'VECT_TANG_NUL') THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NMA),NOMMAI)
        IF (NND.NE.-1) THEN
          CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NND),NOMNOE)
           VALK(1) = NOMNOE
           VALK(2) = NOMMAI
           CALL U2MESK(TYPERR,'CONTACT3_14', 2 ,VALK)
        ELSE
          CALL U2MESK(TYPERR,'CONTACT3_21',1,NOMMAI)
        ENDIF
      ELSEIF (ERROR(1:8).EQ.'ELEM_INC') THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NMA),NOMMAI)
        CALL U2MESK(TYPERR,'CONTACT3_22',1,NOMMAI)
      ELSEIF (ERROR(1:8).EQ.'NORM_NUL') THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NND),NOMNOE)
        CALL U2MESK(TYPERR,'CONTACT3_23',1,NOMNOE)
      ELSEIF (ERROR(1:8).EQ.'TROP_NDS') THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NMA),NOMMAI)
        CALL U2MESK(TYPERR,'CONTACT3_24',1,NOMMAI)
      ELSEIF (ERROR(1:11).EQ.'BARSOUM_NEX') THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NMA),NOMMAI)
         VALK(1) = NOMMAI
         VALK(2) = KINF(1)
         CALL U2MESK(TYPERR,'CONTACT3_25', 2 ,VALK)
      ELSEIF (ERROR(1:10).EQ.'ERR_INTEGR') THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NMA),NOMMAI)
        CALL U2MESK(TYPERR,'CONTACT3_26',1,NOMMAI)
      ELSEIF (ERROR(1:14).EQ.'FLIP_FLOP_MAXI') THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NMA),NOMMAI)
        VALI (1) = IINF(1)
        VALI (2) = NND
        VALI (3) = NMA
        VALK (1) = NOMMAI
        CALL U2MESG(TYPERR,'CONTACT3_28',1,VALK,2,VALI,0,0.D0)
      ELSE
        CALL U2MESS('F','CONTACT3_27')
      ENDIF

      CALL JEDEMA()
      END
