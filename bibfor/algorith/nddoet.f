      SUBROUTINE NDDOET(RESULT,MODELE,COMPOR,CARELE,FONACT,
     &                  NUMEDD,SDSENS,SDPILO,SDDYNA,VALMOI,
     &                  VALPLU,DEPALG,LACC0 ,INSTIN)
C      
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C TOLE CRP_20
C
      IMPLICIT NONE
      REAL*8       INSTIN
      CHARACTER*8  RESULT
      CHARACTER*24 MODELE,NUMEDD,CARELE,SDSENS
      CHARACTER*24 COMPOR
      CHARACTER*24 VALMOI(8),VALPLU(8),DEPALG(8)
      CHARACTER*14 SDPILO
      CHARACTER*19 SDDYNA
      LOGICAL      FONACT(*),LACC0
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (INITIALISATION)
C
C SAISIE DES CHAMPS A L'ETAT INITIAL - DYNAMIQUE
C      
C ----------------------------------------------------------------------
C
C
C IN  RESULT : NOM DU CONCEPT RESULTAT
C IN  MODELE : NOM DU MODELE
C IN  COMPOR : CARTE COMPORTEMENT
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  NUMEDD : NUME_DDL
C IN  VALMOI : VARIABLE CHAPEAU POUR ETAT EN T-
C IN  VALPLU : VARIABLE CHAPEAU POUR ETAT EN T+
C IN  DEPALG : VARIABLE CHAPEAU POUR DEPLACEMENTS
C IN  SDSENS : SD SENSIBILITE
C IN  SDPILO : SD DE PILOTAGE
C IN  SDDYNA : SD DYNAMIQUE
C OUT LACC0  : .TRUE. SI ACCEL. INITIALE A CALCULER
C OUT INSTIN : INSTANT INITIAL
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ---------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX -----------------------------
C
      INTEGER      IBID,IRETVI,IRETAC,IERR
      INTEGER      NUME,NRPASE
      INTEGER      NCHOUT
      INTEGER      IRET,NOCC,REENTR,NEQ
      LOGICAL      LBID,EVONOL,LNOCC
      CHARACTER*8  K8BID,LPAIN(1),LPAOUT(2)
      CHARACTER*8  NOPASE
      CHARACTER*16 OPT
      CHARACTER*24 LIGRMO,EVOL,LCHIN(1),LCHOUT(2),RESUID, STRUCT
      CHARACTER*24 DEPMOI,SIGMOI,VARMOI
      CHARACTER*24 VITPLU,ACCPLU         
      CHARACTER*24 VALK(2),COMPOM,TYPECH
      CHARACTER*24 K24BID,CHAMP,CHGEOM
      INTEGER      NBPASE
      CHARACTER*24 SENSNB
      INTEGER      JSENSN      
      INTEGER      IFM,NIV
C      
C ----------------------------------------------------------------------
C      
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- INITIALISATIONS
C
      LACC0  = .FALSE.
      COMPOM = ' '
C
C --- ACCES SD SENSIBILITE
C    
      SENSNB = SDSENS(1:16)//'.NBPASE '
      CALL JEVEUO(SENSNB,'L',JSENSN) 
      NBPASE = ZI(JSENSN+1-1)          
C
C --- NOMBRE EQUATIONS
C     
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)      
C
C --- EXTENSION DU COMPORTEMENT : NOMBRE DE VARIABLES INTERNES
C
      CALL DISMOI('F','NOM_LIGREL',MODELE,'MODELE',IBID,LIGRMO,IRET)
      CALL EXISD('CHAM_ELEM_S',COMPOR,IRET)
      IF (IRET.EQ.0) CALL CESVAR(CARELE,COMPOR,LIGRMO,COMPOR)
C          
C --- PAS D'ETAT INITIAL EN PRESENCE D'UN CONCEPT REENTRANT
C
      CALL GETFAC('ETAT_INIT',NOCC)
      CALL JEEXIN(RESULT//'           .DESC',REENTR)
      IF (NOCC.EQ.0) THEN 
        IF (REENTR.NE.0) THEN
          IF (NIV.GE.2) THEN
            WRITE (IFM,*) '<MECANONLINE> LECTURE ETAT INITIAL'
          ENDIF
          CALL U2MESS('A','ALGORITH6_35')
        ENDIF
      ELSE
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> LECTURE ETAT INITIAL'
        ENDIF         
      ENDIF   
      CALL GETVID('ETAT_INIT','EVOL_NOLI',1,1,1,EVOL,NOCC)
      EVONOL = NOCC .GT. 0      
C
C --- INSTANT INITIAL
C
      CALL NMDOIN(EVOL  ,EVONOL,INSTIN,NUME  )
C 
C --- BOUCLE SUR L'INITIALISATION DES CHAMPS PRINCIPAUX ET DERIVES
C 
      DO 20 NRPASE = NBPASE,0,-1
C
C --- NOM DES CHAMPS
C      
        CALL NMNSLE(SDSENS,NRPASE,'DEPMOI',DEPMOI)
        CALL NMNSLE(SDSENS,NRPASE,'SIGMOI',SIGMOI)
        CALL NMNSLE(SDSENS,NRPASE,'VARMOI',VARMOI)
        CALL NMNSLE(SDSENS,NRPASE,'VITPLU',VITPLU)
        CALL NMNSLE(SDSENS,NRPASE,'ACCPLU',ACCPLU)     
        
        IF (EVONOL) THEN
C
C --- ETAT INITIAL DEFINI PAR UN CONCEPT DE TYPE EVOL_NOLI
C 
          IF ( NRPASE.GT.0 ) THEN
            CALL NMNSLE(SDSENS,NRPASE,'NOPASE',NOPASE)
            CALL PSGENC(EVOL  ,NOPASE,RESUID  ,IRET)
            IF ( IRET.NE.0 ) THEN
              VALK(1) = EVOL
              VALK(2) = NOPASE//'                '
              CALL U2MESK('A','SENSIBILITE_3', 2 ,VALK)
              CALL U2MESK('F','UTILITAI7_99', 1 ,'&&NDDOET')
            ENDIF
            STRUCT = RESUID
          ELSE
            STRUCT = EVOL
          END IF
C
C --- LECTURE DES DEPLACEMENTS (OU DERIVE)
C
          CALL RSEXCH(STRUCT,'DEPL',NUME,CHAMP,IRET)
          IF (IRET.NE.0) CALL U2MESK('F','ALGORITH6_41',1,STRUCT)
          CALL VTCOPY(CHAMP,DEPMOI,IRET)
C
C --- LECTURE DES CONTRAINTES AUX POINTS DE GAUSS (OU DERIVE)
C
          CALL RSEXCH(STRUCT,'SIEF_ELGA',NUME,CHAMP,IRET)
          IF (IRET.EQ.0) THEN
            CALL COPISD('CHAMP_GD','V',CHAMP,SIGMOI)
          ELSE
C
C --- CONTRAINTES AUX NOEUDS : PASSAGE AUX POINTS DE GAUSS
C
            CALL RSEXCH(STRUCT,'SIEF_ELNO',NUME,CHAMP,IRET)
            IF (IRET.NE.0) CALL U2MESK('F','ALGORITH6_42',1,STRUCT)
            CALL MENOGA('SIEF_ELGA_ELNO  ',LIGRMO,COMPOR,CHAMP,SIGMOI,
     &                  K24BID)
          END IF
C
C --- LECTURE DES VITESSES (OU DERIVE)
C
          CALL RSEXCH(STRUCT,'VITE',NUME,CHAMP,IRETVI)
          IF (IRETVI.NE.0) THEN
            CALL U2MESK('I','ALGORITH6_43',1,EVOL)
            CALL NULVEC(VITPLU)
          ELSE
            CALL VTCOPY(CHAMP,VITPLU,IERR)
          END IF
C
C --- LECTURE DES ACCELERATIONS (OU DERIVE)
C
          CALL RSEXCH(STRUCT,'ACCE',NUME,CHAMP,IRETAC)
          IF (IRETAC.NE.0) THEN
            IF (IRETVI.NE.0) THEN
              CALL U2MESK('I','ALGORITH6_44',1,STRUCT)
              LACC0 = .TRUE.
            ELSE
              CALL U2MESK('F','ALGORITH6_45',1,STRUCT)
              END IF
            ELSE
              CALL VTCOPY(CHAMP,ACCPLU,IERR)
            END IF
C
C --- LECTURE DES VARIABLES INTERNES AUX POINTS DE GAUSS (OU DERIVE)
C
          CALL RSEXCH(STRUCT,'COMPORTEMENT',NUME,COMPOM,IRET)
          IF (IRET.NE.0) COMPOM=' '

          CALL RSEXCH(STRUCT,'VARI_ELGA',NUME,CHAMP,IRET)
          IF (IRET.EQ.0) THEN
            CALL COPISD('CHAMP_GD','V',CHAMP,VARMOI)
            IF (NRPASE.EQ.NBPASE) CALL VRCOMP(COMPOM,COMPOR,VARMOI)
          ELSE
C
C --- VARIABLES INTERNES AUX NOEUDS : PASSAGE AUX POINTS DE GAUSS
C
            CALL RSEXCH(STRUCT,'VARI_ELNO',NUME,CHAMP,IRET)
            IF (IRET.NE.0) CALL U2MESK('F','ALGORITH6_46',1,STRUCT)
            IF (NRPASE.EQ.NBPASE) CALL VRCOMP(COMPOM,COMPOR,CHAMP)
            CALL COPISD('CHAM_ELEM_S','V',COMPOR,VARMOI)
            CALL MENOGA('VARI_ELGA_ELNO  ',LIGRMO,COMPOR,CHAMP,VARMOI,
     &                K24BID)
          END IF
        ELSE
C
C --- DEFINITION CHAMP PAR CHAMP (OU PAS D'ETAT INITIAL DU TOUT)
C       
          NCHOUT = 0
C
C --- LECTURE DES DEPLACEMENTS
C
          CALL GETVID('ETAT_INIT','DEPL',1,1,1,CHAMP,NOCC)
          LNOCC=(NOCC.NE.0)
          IF (NOCC.NE.0) THEN
            CALL CHPVER('F',CHAMP(1:19),'NOEU','DEPL_R',IERR)
            CALL VTCOPY(CHAMP,DEPMOI,IRET)
          ELSE
            IF (NRPASE.EQ.0) CALL U2MESS('I','MECANONLINE_76')
            CALL NULVEC(DEPMOI)
          END IF
C
C --- LECTURE DES VITESSES
C
          CALL GETVID('ETAT_INIT','VITE',1,1,1,CHAMP,NOCC)
          LNOCC=(LNOCC.OR.(NOCC.NE.0))
          IF (NOCC.NE.0) THEN
            CALL CHPVER('F',CHAMP(1:19),'NOEU','DEPL_R',IERR)
            CALL VTCOPY(CHAMP,VITPLU,IERR)
          ELSE
            CALL U2MESS('I','MECANONLINE_22')
            CALL NULVEC(VITPLU)
          END IF
C
C --- LECTURE DES CONTRAINTES AUX POINTS DE GAUSS
C
          CALL GETVID('ETAT_INIT','SIGM',1,1,1,CHAMP,NOCC)
          LNOCC=(LNOCC.OR.(NOCC.NE.0))
C
C --- PREPARATION POUR CREER UN CHAMP NUL
C
          IF (NOCC.EQ.0) THEN
            NCHOUT = NCHOUT + 1
            LPAOUT(NCHOUT) = 'PSIEF_R'
            LCHOUT(NCHOUT) = SIGMOI
            CALL COPISD('CHAM_ELEM_S','V',COMPOR,SIGMOI)
          ELSE
            CALL CHPVER('F',CHAMP(1:19),'*','SIEF_R',IERR)
            CALL DISMOI('F','TYPE_CHAMP',CHAMP,'CHAMP',IBID,TYPECH,IRET)
            IF (TYPECH.EQ.'ELNO') THEN
              CALL COPISD('CHAM_ELEM_S','V',COMPOR,SIGMOI)
              CALL MENOGA('SIEF_ELGA_ELNO  ',LIGRMO,COMPOR,CHAMP,SIGMOI,
     &                  K24BID)
            ELSE
              CALL COPISD('CHAMP_GD','V',CHAMP,SIGMOI)
            END IF
          END IF
C
C --- LECTURE DES VARIABLES INTERNES
C
          CALL GETVID('ETAT_INIT','VARI',1,1,1,CHAMP,NOCC)
          LNOCC=(LNOCC.OR.(NOCC.NE.0))

          IF (LNOCC .AND. NBPASE.GT.0) THEN
            CALL U2MESS('F','SENSIBILITE_21')
          ENDIF
C
C --- PREPARATION POUR CREER UN CHAMP NUL
C
          IF (NOCC.EQ.0) THEN
            NCHOUT = NCHOUT + 1
            LPAOUT(NCHOUT) = 'PVARI_R'
            LCHOUT(NCHOUT) = VARMOI
            CALL COPISD('CHAM_ELEM_S','V',COMPOR,VARMOI)
          ELSE
            CALL CHPVER('F',CHAMP(1:19),'ELGA','VARI_R',IERR)
            CALL DISMOI('F','TYPE_CHAMP',CHAMP,'CHAMP',IBID,TYPECH,IRET)
            IF (TYPECH.EQ.'ELNO') THEN
              IF (NRPASE.EQ.NBPASE) CALL VRCOMP(' ',COMPOR,CHAMP)
              CALL COPISD('CHAM_ELEM_S','V',COMPOR,VARMOI)
              CALL MENOGA('VARI_ELGA_ELNO  ',LIGRMO,COMPOR,CHAMP,VARMOI,
     &                  K24BID)
            ELSE
              CALL COPISD('CHAMP_GD','V',CHAMP,VARMOI)
              IF (NRPASE.EQ.NBPASE) CALL VRCOMP(' ',COMPOR,VARMOI)
            END IF
          END IF
C
C --- CREATION DES CHAM_ELEM DE CONTRAINTES ET DE VARI. INTERNES NULS
C
          IF (NCHOUT.GT.0) THEN
            CALL MEGEOM(MODELE,' ',LBID,CHGEOM)
            LCHIN(1) = CHGEOM
            LPAIN(1) = 'PGEOMER'
            OPT = 'TOU_INI_ELGA    '
            CALL CALCUL('S',OPT,LIGRMO,1,LCHIN,LPAIN,NCHOUT,LCHOUT,
     &                  LPAOUT,'V')
            CALL NMSIGI(LIGRMO,COMPOR,SIGMOI)
          END IF
C
C --- LECTURE DES ACCELERATIONS
C
          CALL GETVID('ETAT_INIT','ACCE',1,1,1,CHAMP,NOCC)
          IF (NOCC.NE.0) THEN
            CALL CHPVER('F',CHAMP(1:19),'NOEU','DEPL_R',IERR)
            CALL VTCOPY(CHAMP,ACCPLU,IERR)
          ELSE
            LACC0 = .TRUE.
          END IF

        END IF

   20 CONTINUE 
C
C --- AFFICHAGES
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... DEPMOI : '
        CALL NMDEBG('VECT',DEPMOI,IFM)
        WRITE (IFM,*) '<MECANONLINE> ... VITPLU : '
        CALL NMDEBG('VECT',VITPLU,IFM)         
        WRITE (IFM,*) '<MECANONLINE> ... SIGMOI : '
        CALL NMDEBG('CHEL',SIGMOI,IFM)  
        WRITE (IFM,*) '<MECANONLINE> ... VARMOI : '
        CALL NMDEBG('CHEL',VARMOI,IFM)
      ENDIF   
C
C --- CHARGEMENT GRAPPE FLUIDE
C
      CALL NMGRIN(NUMEDD,SDDYNA,VALMOI,VALPLU,NUME  )          
C    
      CALL JEDEMA()    
      END
