      SUBROUTINE XMREPT(JCESD,JCESV,JCESL, IZONE, NDIM  ,DEFICO,
     &                  GEOM  ,STATUE,MMAIT ,AMAIT ,NMAIT )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*24 DEFICO
      CHARACTER*19 CHSGM,CHSLO,CHSAI
      REAL*8       GEOM(3)
      INTEGER      NDIM,MMAIT,AMAIT,NMAIT,STATUE,IZONE
      INTEGER      JCESD(10),JCESV(10),JCESL(10)
C
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (CONTACT - GRANDS GLISSEMENTS)
C
C ON CHERCHE LE POINT D'INTERSECTION MAITRE LE PLUS PROCHE DE
C POINT DE CONTACT
C
C TRAVAIL EFFECTUE EN COLLABORATION AVEC I.F.P.
C
C ----------------------------------------------------------------------
C
C
C  JCES*(1)  : POINTEURS DE LA SD SIMPLE NB DE FACETTES ET DE PT D'INTER
C  JCES*(2)  : POINTEURS DE LA SD SIMPLE DES INFOS SUR ARETES COUPEES
C  JCES*(6)  : POINTEURS DE LA SD SIMPLE DES COOR DES PT D'INTER MAITRE
C IN  IZONE  : NUMÉRO DE ZONE DE LA MAILLE ESCLAVE
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  NDIM   : DIMENSION DU MODELE
C IN  STATUE : STATUT DE LA MAILLE ESCLAVE
C IN  GEOM   : COORDONNEES DU POINT DE CONTACT ESCLAVE
C OUT MMAIT  : LE NUMÉRO GLOBAL DE LA MAILLE MAÎTRE CONTENANT LE POINT
C              D'INTERSECTION DE PLUS PROCHE
C OUT AMAIT  : LE NUMÉRO LOCAL DE L'ARRETE CONTENANT LE POINT
C              D'INTERSECTION DE PLUS PROCHE
C OUT NMAIT  : LE NUMÉRO LOCAL DU NOEUD CONTENANT LE POINT
C              D'INTERSECTION DE PLUS PROCHE
C
C
C
C
C
      INTEGER      NUMMAI,NTMAE,IMA,IAD,NBPT
      INTEGER      CFDISI,CFMMVD,ZMESX
      INTEGER      INI,J,I,IFISS
      REAL*8       COORD(3),DMIN,DIST,R8GAEM
      CHARACTER*24 MAESCX
      INTEGER      JMAESX
      INTEGER      ZXAIN,XXMMVD
C
C --------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- SI LA MAILLE ESCLAVE EST CRACK-TIP, ON SORT
C
      IF (STATUE.EQ.2.OR.STATUE.LT.0) GOTO 999
C
C --- INITIALISATIONS
C
      DMIN   = R8GAEM()
      DO 10 I=1,3
        COORD(I)=0.D0
  10  CONTINUE
      NTMAE  = CFDISI(DEFICO,'NTMAE')
C
C --- RECUPERATION DE QUELQUES DONNEES
C
      MAESCX = DEFICO(1:16)//'.MAESCX'
      CALL JEVEUO(MAESCX,'L',JMAESX)
      ZMESX  = CFMMVD('ZMESX')
      ZXAIN = XXMMVD('ZXAIN')
C
C --- BOUCLE SUR LES MAILLES FISSURÉES
C
      DO 100 IMA=1,NTMAE
C
C --- SI CE N'EST PAS LA BONNE ZONE, ON SORT
C
        IF (ZI(JMAESX+ZMESX*(IMA-1)+2-1).NE.IZONE) GOTO 100
C
C --- FAUX PT D'INTEGRATION
C
        IF (ZI(JMAESX+ZMESX*(IMA-1)+4-1).LT.0) GOTO 100
C
        NUMMAI = ZI(JMAESX+ZMESX*(IMA-1)+1-1)
        IFISS  = ZI(JMAESX+ZMESX*(IMA-1)+5-1)

C ----- RECUPERATION DU NOMBRE DE POINTS D'INTERSECTION DE LA MAILLE
        CALL CESEXI('C',JCESD(1),JCESL(1),NUMMAI,1,IFISS,3,IAD)
        CALL ASSERT(IAD.GT.0)
        NBPT   = ZI(JCESV(1)-1+IAD)
C ----- BOUCLE SUR LES POINTS D'INTERSECTION

        DO 110 INI=1,NBPT
C ------- COORDONNEES GEOMETRIQUES DU POINT D'INTERSECTION
          DO 120 J=1,NDIM
            CALL CESEXI('S',JCESD(6),JCESL(6),NUMMAI,1,IFISS,
     &                  NDIM*(INI-1)+J,IAD)
            CALL ASSERT(IAD.GT.0)
            COORD(J) = ZR(JCESV(6)-1+IAD)
  120     CONTINUE
C ------- CALCUL DE LA DISTANCE
          DIST = SQRT((COORD(1)-GEOM(1))**2+ (COORD(2)-GEOM(2))**2+
     &           (COORD(3)-GEOM(3))**2)
          CALL CESEXI('S',JCESD(2),JCESL(2),NUMMAI,1,IFISS,
     &                ZXAIN*(INI-1)+2,IAD)
          IF (NINT(ZR(JCESV(2)-1+IAD)).EQ.0.AND.
     &         INI.EQ.3.AND.NDIM.EQ.2) GOTO 110
          IF (DIST.LT.DMIN) THEN
            CALL CESEXI('S',JCESD(2),JCESL(2),NUMMAI,1,IFISS,
     &                  ZXAIN*(INI-1)+1,IAD)
            CALL ASSERT(IAD.GT.0)
            IF (NINT(ZR(JCESV(2)-1+IAD)).GT.0) THEN
              AMAIT  = NINT(ZR(JCESV(2)-1+IAD))
              NMAIT  = 0
              DMIN   = DIST
              MMAIT  = NUMMAI
            ELSE
              CALL CESEXI('S',JCESD(2),JCESL(2),NUMMAI,1,IFISS,
     &                    ZXAIN*(INI-1)+2,IAD)
              CALL ASSERT(IAD.GT.0)
              IF (NINT(ZR(JCESV(2)-1+IAD)).GT.0) THEN
                AMAIT  = 0
                NMAIT  = NINT(ZR(JCESV(2)-1+IAD))
                DMIN   = DIST
                MMAIT  = NUMMAI
              ENDIF
            ENDIF
          ENDIF
  110   CONTINUE
  100 CONTINUE
C
  999 CONTINUE
C
      CALL JEDEMA()
      END
