      SUBROUTINE NMPILD(NUMEDD,SDDYNA,SOLALG,ETA   ,RHO   ,
     &                  OFFSET)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/04/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*24 NUMEDD
      CHARACTER*19 SOLALG(*),SDDYNA
      REAL*8       ETA,RHO,OFFSET
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C AJUSTEMENT DE LA DIRECTION DE DESCENTE
C      
C ----------------------------------------------------------------------
C
C IN  NUMEDD : NOM DU NUME_DDL
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  SDDYNA : SD DYNAMIQUE
C IN  ETA    : PARAMETRE DE PILOTAGE
C IN  RHO    : PARAMETRE DE RECHERCHE LINEAIRE
C IN  OFFSET : DECALAGE DU PARMAETRE DE PILOTAGE
C 
C ----------------------------------------------------------------------
C
      INTEGER      IRET,NEQ
      CHARACTER*8  K8BID
      CHARACTER*19 DDEPLA,DEPPR1,DEPPR2
      CHARACTER*19 DVITLA,VITPR1,VITPR2
      CHARACTER*19 DACCLA,ACCPR1,ACCPR2
      LOGICAL      NDYNLO,LDYNA     
      INTEGER      IFM,NIV     
C 
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- FONCTIONNALITES ACTIVEES
C 
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')     
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> AJUSTEMENT DIRECTION DE '//
     &                'DESCENTE'  
      ENDIF  
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C       
      CALL NMCHEX(SOLALG,'SOLALG','DDEPLA',DDEPLA)
      CALL NMCHEX(SOLALG,'SOLALG','DEPPR1',DEPPR1)
      CALL NMCHEX(SOLALG,'SOLALG','DEPPR2',DEPPR2) 
      CALL NMCHEX(SOLALG,'SOLALG','DVITLA',DVITLA)
      CALL NMCHEX(SOLALG,'SOLALG','VITPR1',VITPR1)
      CALL NMCHEX(SOLALG,'SOLALG','VITPR2',VITPR2)
      CALL NMCHEX(SOLALG,'SOLALG','DACCLA',DACCLA)
      CALL NMCHEX(SOLALG,'SOLALG','ACCPR1',ACCPR1)
      CALL NMCHEX(SOLALG,'SOLALG','ACCPR2',ACCPR2)
C     
C --- CALCUL DE LA DIRECTION DE DESCENTE
C
      CALL NMPILK(DEPPR1,DEPPR2,DDEPLA,NEQ   ,ETA,
     &            RHO   ,OFFSET)
      IF (LDYNA) THEN 
        CALL NMPILK(VITPR1,VITPR2,DVITLA,NEQ   ,ETA,
     &              RHO   ,OFFSET)      
        CALL NMPILK(ACCPR1,ACCPR2,DACCLA,NEQ   ,ETA,
     &              RHO   ,OFFSET)      
      ENDIF
C 
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... RHO    : ',RHO
        WRITE (IFM,*) '<MECANONLINE> ... ETA    : ',ETA
        WRITE (IFM,*) '<MECANONLINE> ... OFFSET : ',OFFSET
        WRITE (IFM,*) '<MECANONLINE> ... DEPL. PRED. (1) : '        
        CALL NMDEBG('VECT',DEPPR1,IFM   )
        WRITE (IFM,*) '<MECANONLINE> ... DEPL. PRED. (2) : '        
        CALL NMDEBG('VECT',DEPPR2,IFM   )        
        WRITE (IFM,*) '<MECANONLINE> ... DEPL. SOLU.     : '        
        CALL NMDEBG('VECT',DDEPLA,IFM   )
        IF (LDYNA) THEN
          WRITE (IFM,*) '<MECANONLINE> ... VITE. PRED. (1) : '        
          CALL NMDEBG('VECT',VITPR1,IFM   )
          WRITE (IFM,*) '<MECANONLINE> ... VITE. PRED. (2) : '        
          CALL NMDEBG('VECT',VITPR2,IFM   )        
          WRITE (IFM,*) '<MECANONLINE> ... VITE. SOLU.     : '        
          CALL NMDEBG('VECT',DVITLA,IFM   )        
          WRITE (IFM,*) '<MECANONLINE> ... ACCE. PRED. (1) : '        
          CALL NMDEBG('VECT',ACCPR1,IFM   )
          WRITE (IFM,*) '<MECANONLINE> ... ACCE. PRED. (2) : '        
          CALL NMDEBG('VECT',ACCPR2,IFM   )        
          WRITE (IFM,*) '<MECANONLINE> ... ACCE. SOLU.     : '        
          CALL NMDEBG('VECT',DACCLA,IFM   )        
        ENDIF                
      ENDIF 
C
      CALL JEDEMA()
      END
