      SUBROUTINE NMPILD(NEQ   ,DEPALG,LPILO ,LRELI ,ETA   ,
     &                  ITERAT,RHO   ,OFFSET)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INTEGER      NEQ,ITERAT
      LOGICAL      LPILO,LRELI
      CHARACTER*24 DEPALG(8)
      REAL*8       ETA,RHO,OFFSET
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C AJUSTEMENT DE LA DIRECTION DE DESCENTE
C      
C ----------------------------------------------------------------------
C
C DEPL_CORR = RHO * DEPL_PRED(1) + (ETA-OFFSET) * DEPL_PRED(2)
C
C IN  NEQ    : NOMBRE D'EQUATIONS
C IN  ITERAT : NUMERO ITERATION DE NEWTON
C IN  DEPALG : VARIABLE CHAPEAU POUR DEPLACEMENTS  
C IN  LPILO  : PILOTAGE ACTIVE
C IN  LRELI  : RECHERCHE LINEAIRE ACTIVEE 
C IN  ETA    : PARAMETRE DE PILOTAGE
C IN  RHO    : PARAMETRE DE RECHERCHE LINEAIRE
C IN  OFFSET : DECALAGE DU PARMAETRE DE PILOTAGE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      I,JU0,JU1,JDDEPL
      CHARACTER*24 K24BID
      CHARACTER*24 DDEPLA,DEPPRE(2)
      INTEGER      IFM,NIV     
C 
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... AJUSTEMENT DIRECTION DE '//
     &                'DESCENTE'  
      ENDIF      
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C       
      CALL DESAGG(DEPALG,DDEPLA,K24BID,K24BID,DEPPRE(1),
     &            DEPPRE(2),K24BID,K24BID,K24BID)      
C
      IF ((.NOT.LRELI).OR.(ITERAT.EQ.0)) THEN
        IF (LPILO) THEN
          GOTO 888
        ELSE     
          CALL COPISD('CHAMP_GD','V',DEPPRE(1),DDEPLA)
          GOTO 999
        ENDIF
      ELSE 
        IF (LPILO) THEN
          GOTO 888
        ELSE
          GOTO 999
        ENDIF       
      ENDIF
C
C --- MISE A JOUR AVEC PILOTAGE
C
 888  CONTINUE
C
C --- INITIALISATIONS
C
      CALL JEVEUO(DEPPRE(1)(1:19)//'.VALE','L',JU0)
      CALL JEVEUO(DEPPRE(2)(1:19)//'.VALE','L',JU1)
      CALL JEVEUO(DDEPLA(1:19)   //'.VALE','E',JDDEPL)
C     
C --- CALCUL
C
      DO 10 I = 1, NEQ
        ZR(JDDEPL+I-1) = RHO * ZR(JU0+I-1) + (ETA-OFFSET) * ZR(JU1+I-1)
 10   CONTINUE
C
  999 CONTINUE
C 
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... RHO    : ',RHO
        WRITE (IFM,*) '<MECANONLINE> ... ETA    : ',ETA
        WRITE (IFM,*) '<MECANONLINE> ... OFFSET : ',OFFSET
        WRITE (IFM,*) '<MECANONLINE> ... DEPL. PRED. (1) : '        
        CALL NMDEBG('VECT',DEPPRE(1),IFM   )
        WRITE (IFM,*) '<MECANONLINE> ... DEPL. PRED. (2) : '        
        CALL NMDEBG('VECT',DEPPRE(2),IFM   )        
        WRITE (IFM,*) '<MECANONLINE> ... DEPL. SOLU.     : '        
        CALL NMDEBG('VECT',DDEPLA,IFM   )        
      ENDIF 
C
      CALL JEDEMA()
      END
