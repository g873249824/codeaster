      FUNCTION CFDISR(DEFICZ,QUESTZ,IZONE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/07/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      REAL*8        CFDISR
      INTEGER       IZONE
      CHARACTER*(*) DEFICZ
      CHARACTER*(*) QUESTZ
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (TOUTES METHODES)
C
C RETOURNE DES INFOS DIVERSES POUR LE CONTACT (REEL)
C
C ----------------------------------------------------------------------
C
C      
C IN  DEFICO  : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C IN  QUESTI  : QUESTION (PARAMETRE INTERROGE)
C   'TOLE_PROJ_EXT' PARAMETRE PROJECTION HORS MAILLE
C   'TOLE_PROJ_INT' PARAMETRE PROJECTION IN MAILLE
C   'ALARME_JEU'    PARAMETRE LIAISON GLISSIERE
C   'TOLE_INTERP'   PARAMETRE MODE VERIF
C   'RESI_ABSO'     PARAMETRE METHODE GCP
C   'COEF_RESI'     PARAMETRE METHODE GCP  
C IN  IZONE   : NUMERO DE LA ZONE DE CONTACT SI IZONE.LE.0 ALORS IZONE=1
C
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      CFMMVD,ZTOLE
      CHARACTER*24 TOLECO
      INTEGER      JTOLE
      CHARACTER*24 DEFICO,QUESTI
C
C ----------------------------------------------------------------------
C
C
C --- INITIALISATIONS
C
      DEFICO = DEFICZ
      QUESTI = QUESTZ
      ZTOLE  = CFMMVD('ZTOLE')
      TOLECO = DEFICO(1:16)//'.TOLECO'
      CALL JEVEUO(TOLECO,'L',JTOLE)            
      IF (IZONE.LE.0) THEN
        IZONE = 1
      ENDIF  

      IF     (QUESTI(1:13).EQ.'TOLE_PROJ_EXT') THEN
        CFDISR = ZR(JTOLE+ZTOLE*(IZONE-1)+0)
      ELSEIF (QUESTI(1:13).EQ.'TOLE_PROJ_INT') THEN
        CFDISR = ZR(JTOLE+ZTOLE*(IZONE-1)+1)         
      ELSEIF (QUESTI(1:10) .EQ.'ALARME_JEU')  THEN
        CFDISR = ZR(JTOLE+ZTOLE*(IZONE-1)+2) 
      ELSEIF (QUESTI(1:11).EQ.'TOLE_INTERP')   THEN
        CFDISR = ZR(JTOLE+ZTOLE*(IZONE-1)+3)         
      ELSEIF (QUESTI(1:9) .EQ.'RESI_ABSO')     THEN
        CFDISR = ZR(JTOLE+ZTOLE*(IZONE-1)+4)
      ELSEIF (QUESTI(1:9) .EQ.'COEF_RESI')     THEN
        CFDISR = ZR(JTOLE+ZTOLE*(IZONE-1)+5)                      
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF

      END
