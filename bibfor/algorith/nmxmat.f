      SUBROUTINE NMXMAT(MODELZ,MATE  ,CARELE,COMPOR,CARCRI,
     &                  SDDISC,SDDYNA,FONACT,NUMINS,ITERAT,
     &                  VALINC,SOLALG,LISCHA,COMREF,DEFICO,
     &                  RESOCO,SOLVEU,NUMEDD,NUMFIX,SDSTAT,
     &                  SDTIME,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &                  LCALME,LASSME,LCFINT,MEELEM,MEASSE,
     &                  VEELEM,LDCCVG,CODERE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/09/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      INTEGER       NBMATR
      CHARACTER*6   LTYPMA(20)
      CHARACTER*16  LOPTME(20),LOPTMA(20)
      LOGICAL       LCALME(20),LASSME(20)
      CHARACTER*(*) MODELZ
      CHARACTER*(*) MATE
      CHARACTER*24  SDTIME,SDSTAT
      CHARACTER*24  COMPOR,CARCRI,CARELE
      INTEGER       NUMINS,ITERAT,LDCCVG
      CHARACTER*19  SDDISC,SDDYNA,LISCHA,SOLVEU
      CHARACTER*24  DEFICO,RESOCO
      CHARACTER*24  NUMEDD,NUMFIX
      CHARACTER*24  COMREF,CODERE
      CHARACTER*19  MEELEM(*),MEASSE(*),VEELEM(*)
      CHARACTER*19  SOLALG(*),VALINC(*)
      INTEGER       FONACT(*)
      LOGICAL       LCFINT
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL - UTILITAIRE)
C
C CALCUL ET ASSEMBLAGE DES MATR_ELEM DE LA LISTE
C
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL (VARIABLE AU COURS DU CALCUL)
C IN  NUMFIX : NUME_DDL (FIXE AU COURS DU CALCUL)
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : LISTE DES CHARGES
C IN  SDTIME : SD TIMER
C IN  SDSTAT : SD STATISTIQUES
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  SDDYNA : SD POUR LA DYNAMIQUE
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION (VOIR NMLECT)
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION (VOIR NMLECT)
C IN  SOLVEU : SOLVEUR
C IN  CARCRI : PARAMETRES METHODES D'INTEGRATION LOCALES (VOIR NMLECT)
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  NUMINS : NUMERO D'INSTANT
C IN  ITERAT : NUMERO D'ITERATION
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  NBMATR : NOMBRE DE MATR_ELEM DANS LA LISTE
C IN  LTYPMA : LISTE DES NOMS DES MATR_ELEM
C IN  LOPTME : LISTE DES OPTIONS DES MATR_ELEM
C IN  LOPTMA : LISTE DES OPTIONS DES MATR_ASSE
C IN  LASSME : SI MATR_ELEM A ASSEMBLER
C IN  LCALME : SI MATR_ELEM A CALCULER
C IN  LCFINT : .TRUE. SI VECT_ELEM DES FORCES INTERNES A CALCULER
C OUT LDCCVG : CODE RETOUR DE L'INTEGRATION DU COMPORTEMENT
C                -1 : PAS D'INTEGRATION DU COMPORTEMENT
C                 0 : CAS DU FONCTIONNEMENT NORMAL
C                 1 : ECHEC DE L'INTEGRATION DE LA LDC
C                 2 : ERREUR SUR LA NON VERIF. DE CRITERES PHYSIQUES
C                 3 : SIZZ PAS NUL POUR C_PLAN DEBORST
C OUT CODERE : CHAM_ELEM CODE RETOUR ERREUR INTEGRATION LDC
C
C ----------------------------------------------------------------------
C
      CHARACTER*6  TYPMAT
      INTEGER      IMATR
      CHARACTER*16 OPTCAL,OPTASS
      CHARACTER*19 MATELE,MATASS
      CHARACTER*1  BASE
      REAL*8       DIINST,INSTAM,INSTAP
      LOGICAL      LCALC,LASSE
C
C ----------------------------------------------------------------------
C

C
C --- INITIALISATIONS
C
      BASE   = 'V'
      INSTAM = DIINST(SDDISC,NUMINS-1)
      INSTAP = DIINST(SDDISC,NUMINS)
      LDCCVG = -1
C
C --- SI CALCUL DES FORCES INTERNES
C
      IF (LCFINT) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- CALCUL ET ASSEMBLAGE DES MATR_ELEM
C
      DO 10 IMATR = 1,NBMATR
C
C --- MATR_ELEM COURANTE
C
        TYPMAT = LTYPMA(IMATR)
        OPTCAL = LOPTME(IMATR)
        OPTASS = LOPTMA(IMATR)
        LCALC  = LCALME(IMATR)
        LASSE  = LASSME(IMATR)
C
C --- CALCULER MATR_ELEM
C
        IF (LCALC) THEN
          CALL NMCHEX(MEELEM,'MEELEM',TYPMAT,MATELE)
          IF (TYPMAT.EQ.'MERIGI') THEN
            CALL NMRIGI(MODELZ,MATE  ,CARELE,COMPOR,CARCRI,
     &                  SDDYNA,SDSTAT,SDTIME,FONACT,ITERAT,
     &                  VALINC,SOLALG,COMREF,MEELEM,VEELEM,
     &                  OPTCAL,LDCCVG,CODERE)
          ELSE
            IF ((TYPMAT.EQ.'MEELTC').OR.
     &          (TYPMAT.EQ.'MEELTF')) THEN
              CALL NMTIME(SDTIME,'INI','CTCC_MATR')
              CALL NMTIME(SDTIME,'RUN','CTCC_MATR')
            ENDIF
            CALL NMCALM(TYPMAT,MODELZ,LISCHA,MATE  ,CARELE,
     &                  COMPOR,INSTAM,INSTAP,CARCRI,VALINC,
     &                  SOLALG,OPTCAL,BASE  ,MEELEM,DEFICO,
     &                  RESOCO,MATELE)
            IF ((TYPMAT.EQ.'MEELTC').OR.
     &          (TYPMAT.EQ.'MEELTF')) THEN
              CALL NMTIME(SDTIME,'END','CTCC_MATR')
              CALL NMRINC(SDSTAT,'CTCC_MATR')
            ENDIF
          ENDIF
        ENDIF
C
C --- ASSEMBLER MATR_ELEM
C
        IF (LASSE) THEN
          CALL NMTIME(SDTIME,'INI','ASSE_MATR')
          CALL NMTIME(SDTIME,'RUN','ASSE_MATR')
          CALL NMCHEX(MEASSE,'MEASSE',TYPMAT,MATASS)
          CALL NMASSM(FONACT,LISCHA,SOLVEU,NUMEDD,NUMFIX,
     &                TYPMAT,OPTASS,MEELEM,MATASS)
          CALL NMTIME(SDTIME,'END','ASSE_MATR')
        ENDIF
  10  CONTINUE
C
      END
