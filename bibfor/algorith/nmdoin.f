       SUBROUTINE NMDOIN(EVOL  ,EVONOL,INSTIN,NUMEIN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 21/09/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*24 EVOL
      LOGICAL      EVONOL
      INTEGER      NUMEIN
      REAL*8       INSTIN
C
C ----------------------------------------------------------------------
C
C ROUTINE *_NON_LINE (INITIALISATION)
C
C INSTANT ET NUME_ORDRE INITIAL 
C      
C ----------------------------------------------------------------------
C
C
C IN  EVOL   : NOM DU CONCEPT EVOL DANS ETAT_INIT
C IN  EVONOL : .TRUE. SI CONCEPT EVOL DANS ETAT_INIT
C OUT INSTIN : INSTANT INITIAL
C                R8VIDE SI NON DEFINI
C OUT NUMEIN : NUMERO ORDRE INSTANT INITIAL
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      IBID,DERNIE,NUME
      INTEGER      N1,N2,N3
      INTEGER      JINST
      REAL*8       R8BID,PREC,R8VIDE,INST
      COMPLEX*16   C16BID
      CHARACTER*8  K8BID,CRITER
      CHARACTER*16 MOTFAC
      INTEGER      IARG
C      
C ----------------------------------------------------------------------
C      
      CALL JEMARQ()     
C
C --- INITIALISATIONS
C   
      INSTIN = R8VIDE()
      NUMEIN = -1
      MOTFAC = 'ETAT_INIT'
C
C --- RECHERCHE INSTANT INITIAL
C
      IF (EVONOL) THEN 
C
C ----- NUMERO D'ACCES ET INSTANT CORRESPONDANT
C
        CALL GETVR8(MOTFAC,'INST'      ,1,IARG,1,INST,N1)
        CALL GETVIS(MOTFAC,'NUME_ORDRE',1,IARG,1,NUME,N2)
C
C ----- NUME_ORDRE ET INST ABSENTS, ON PREND LE DERNIER PAS ARCHIVE
C
        IF (N1+N2.EQ.0) THEN
          CALL RSORAC(EVOL  ,'DERNIER',IBID  ,R8BID ,K8BID,
     &                C16BID,R8BID    ,K8BID ,DERNIE,1    ,
     &                N3    )
          IF (N3.EQ.0) THEN
            CALL U2MESK('F','ETATINIT_2',1,EVOL)
          ELSE 
            NUMEIN = DERNIE
            CALL RSADPA(EVOL  ,'L',1,'INST',NUMEIN,0,JINST,K8BID)
            INSTIN = ZR(JINST)
          ENDIF  
        END IF
C
C ----- ACCES PAR INSTANT
C
        IF (N1.NE.0) THEN
          INSTIN = INST
          CALL GETVR8(MOTFAC,'PRECISION',1,IARG,1,PREC  ,IBID)
          CALL GETVTX(MOTFAC,'CRITERE'  ,1,IARG,1,CRITER,IBID)
          CALL RSORAC(EVOL  ,'INST',IBID  ,INSTIN,K8BID,
     &                C16BID,PREC  ,CRITER,NUMEIN,1    ,
     &                N3)
          IF (N3.EQ.0) CALL U2MESK('F','ETATINIT_3',1,EVOL)
          IF (N3.LT.0) CALL U2MESK('F','ETATINIT_4',1,EVOL)
        END IF
C
C ----- ACCES PAR NUMERO D'ORDRE
C
        IF (N2.NE.0) THEN
          NUMEIN = NUME
          CALL RSADPA(EVOL,'L',1,'INST',NUMEIN,0,JINST,K8BID)
          INSTIN = ZR(JINST)
        END IF
      ENDIF
C
C --- DEFINITION INSTANT INITIAL
C 
      CALL GETVR8(MOTFAC,'INST_ETAT_INIT',1,IARG,1,INST,N2)
      IF (N2.NE.0) THEN
        INSTIN = INST
      ENDIF     
C
      CALL JEDEMA()      
C
      END
