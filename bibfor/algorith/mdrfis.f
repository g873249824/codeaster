      SUBROUTINE MDRFIS (NBMODE,DEPGEN,FEXGEN,NBNLI,NBRFIS,DPLMOD,
     +                   FK,DFK,PARCHO,ANGINI,VROTAT,FONCP,TEMPS)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ======================================================================
C
C CALCUL DU SECOND MEMBRE POUR UNE NON-LINEARITE DE TYPE ROTOR FISSURE
C ----------------------------------------------------------------------
C IN  : NBMODE : NOMBRE DE MODES
C IN  : DEPGEN : DEPLACEMENTS GENERALISES AU PAS COURANT
C VAR : FEXGEN : FORCES GENERALISEES AU PAS COURANT
C IN  : NBRFIS : NOMBRE DE FISSURES
C IN  : DPLMOD : TABLEAU DES DEPLACEMENTS MODAUX AUX NOEUDS DES FISSURES
C IN  : FK ET DFK : FONCTIONS DE RAIDEUR DES FISSURES (K ET DK/DPHI)
C IN  : ANGINI : ANGLE INITIAL ENTRE FISSURE ET AXE
C IN  : VROTAT : VITESSE DE ROTATION AXIALE
C ----------------------------------------------------------------------
      INTEGER     NBMODE,NBNLI,NBRFIS
      REAL*8      DEPGEN(*),FEXGEN(*),TEMPS,ANGINI,VROTAT
      REAL*8      DPLMOD(NBNLI,NBMODE,*),PARCHO(NBNLI,*)
      CHARACTER*8 FK(2),DFK(2),FONCP,K8B
C
      INTEGER     IERD,I,IER,IARG,N1
      REAL*8      ANGROT,PHI,R1(3),R2(3)
      REAL*8      FKPHI,DFKPHI
      REAL*8      R8DEPI
      REAL*8      ORIG(3),SINA,COSA,SINB,COSB,SING,COSG
      REAL*8      DRL(3),DRG(3),ML(3),MG(3)
C     --- BOUCLE SUR LES NOEUDS DE NON-LINEARITE ---
C
      CALL GETVTX(' ','VITESSE_VARIABLE',1,IARG,1,K8B,N1)
      IF (K8B.EQ.'OUI') THEN
        CALL FOINTE('F ',FONCP,1,'INST',TEMPS,ANGROT,IER)
      ELSE
        ANGROT = ANGINI + VROTAT * TEMPS
      ENDIF

      ORIG(1)=0.D0
      ORIG(2)=0.D0
      ORIG(3)=0.D0

      SING=SIN(ANGROT)
      COSG=COS(ANGROT)
C

      DO 10 I=NBNLI+1-NBRFIS,NBNLI
C
        SINA = PARCHO(I,17)
        COSA = PARCHO(I,18)
        SINB = PARCHO(I,19)
        COSB = PARCHO(I,20)

        CALL TOPHYS(I,0,DPLMOD,NBNLI,NBMODE,DEPGEN,R1(1),R1(2),R1(3))
        CALL TOPHYS(I,3,DPLMOD,NBNLI,NBMODE,DEPGEN,R2(1),R2(2),R2(3))
C
        DRG(1) = R2(1) - R1(1)
        DRG(2) = R2(2) - R1(2)
        DRG(3) = R2(3) - R1(3)


        CALL GLOLOC(DRG,ORIG,SINA,COSA,SINB,COSB,SING,COSG,DRL)


        PHI=ATAN2(DRL(2),DRL(3))
        IF (PHI.LT.0.D0) PHI = R8DEPI() + PHI

        CALL FOINTE('F',FK(1),1,'ABSC',PHI,FKPHI,IERD)
        CALL FOINTE('F',DFK(1),1,'ABSC',PHI,DFKPHI,IERD)

        ML(1)=0.D0
        ML(2) = FKPHI * DRL(2) + 0.5D0 * DFKPHI * DRL(3)
        ML(3) = FKPHI * DRL(3) - 0.5D0 * DFKPHI * DRL(2)


        CALL LOCGLO(ML,SINA,COSA,SINB,COSB,SING,COSG,MG)

        CALL TOGENE(I,0,DPLMOD,NBNLI,NBMODE,MG(1),MG(2),MG(3),FEXGEN)
        CALL TOGENE(I,3,DPLMOD,NBNLI,NBMODE,-MG(1),-MG(2),-MG(3),FEXGEN)


10    CONTINUE

      END
