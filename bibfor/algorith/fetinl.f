      SUBROUTINE FETINL(NBI,VLAGI,JGITGI,MATAS,CHSECM,LRIGID,DIMGI,
     &                  NBSD,VSDF,VDDL,IPIV,GI,LSTOGI,INFOFE,IREX,IFM)
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/01/2005   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_4
C-----------------------------------------------------------------------
C    - FONCTION REALISEE:  CALCUL DU VECTEUR LAGRANGE INITIAL LANDA0
C
C   IN   NBI   : IN  : TAILLE DU VECTEUR
C   IN/OUT VLAGI : VR8: VECTEUR LAGRANGE INITIAL
C   IN   JGITGI: IN : ADRESSES OBJETS JEVEUX (GI)T*GI
C   IN   MATAS: K19  : NOM DE LA MATRICE DE RIGIDITE GLOBALE
C   IN  CHSECM: K19  : CHAM_NO SECOND MEMBRE GLOBAL
C   IN  LRIGID: LO   : LOGICAL INDIQUANT LA PRESENCE D'AU MOINS UN
C         SOUS-DOMAINES FLOTTANT
C   IN  DIMGI:  IN   : TAILLE DE GIT*GI
C   IN   NBSD:  IN   : NOMBRE DE SOUS-DOMAINES
C   IN   VSDF: VIN  : VECTEUR MATR_ASSE.FETF INDIQUANT SI SD FLOTTANT
C   IN   VDDL: VIN  : VECTEUR DES NBRES DE DDLS DES SOUS-DOMAINES
C   IN  SDFETI: CH19: SD DECRIVANT LE PARTIONNEMENT FETI
C   IN/OUT IPIV: VIN : ADRRESSE VECTEUR DECRIVANT LE PIVOTAGE LAPACK
C                     POUR INVERSER (GIT)*GI
C   IN    GI : MATR8: MATRICE GI
C   IN LSTOGI: LO : TRUE, GI STOCKE, FALSE, RECALCULE
C   IN IREX  : IN    : ADRESSE DU VECTEUR AUXILAIRE EVITANT DES APPELS
C                        JEVEUX.
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C       04/12/03 (OB): CREATION.
C       03/06/04 (OB): MODIFICATION POUR MODES DE CORPS RIGIDES.
C----------------------------------------------------------------------
C RESPONSABLE BOITEAU O.BOITEAU
C CORPS DU PROGRAMME
      IMPLICIT NONE

C DECLARATION PARAMETRES D'APPELS
      INTEGER      NBI,JGITGI,DIMGI,NBSD,VSDF(NBSD),VDDL(NBSD),IPIV,
     &             IREX,IFM
      REAL*8       VLAGI(NBI),GI(NBI,DIMGI)
      CHARACTER*19 MATAS,CHSECM,SDFETI
      CHARACTER*24 INFOFE
      LOGICAL      LRIGID,LSTOGI
      
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER*4          ZI4
      COMMON  / I4VAJE / ZI4(1)
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
      
C DECLARATION VARIABLES LOCALES
      INTEGER      I,JVE,IDD,NBSDF,IFETR,NBMC,IMC,NBMC1,IDECAI,NB,
     &             IVALE,IDECAO,NBDDL,IFETC,J,JVE1,K,GII,INFOL8
      INTEGER*4    INFOLA
      REAL*8       DDOT,RAUX
      CHARACTER*19 CHSMDD
      CHARACTER*24 NOMSDR      
      CHARACTER*32 JEXNUM
      
C CORPS DU PROGRAMME
      CALL JEMARQ()

C INITS.
      NOMSDR=MATAS//'.FETR'
      DO 10 I=1,NBI
        VLAGI(I)=0.D0
   10 CONTINUE

C SI MODES DE CORPS RIGIDES CALCUL DE LANDA0=GI*(GITGI)-1*E   
      IF (LRIGID) THEN

C OBJET JEVEUX POINTANT SUR LA LISTE DES CHAM_NO SECOND MEMBRE
        CALL JEVEUO(CHSECM//'.FETC','L',IFETC)
      
C VECTEUR AUXILLIAIRE CONTENANT VECTEUR E=[F1T*B1...FQT*BQ]T
        CALL WKVECT('&&FETINL.E.R','V V R',DIMGI,JVE)

C -------------------------------------------------------------------- 
C CONSTITUTION DE E STOCKE DANS '&&FETINL.E.R'
C --------------------------------------------------------------------
C ----  BOUCLE SUR LES SOUS-DOMAINES

C DECALAGE DU VECTEUR OUTPUT DE FETREX (E)
        IDECAO=JVE
C NOMBRE DE SOUS-DOMAINES FLOTTANTS      
        NBSDF=0
C DECALAGE STOCKAGE E   
        IDECAO=JVE        
        DO 100 IDD=1,NBSD
          CALL JEMARQ()        
C NOMBRES DE MODES DE CORPS RIGIDES DU SOUS-DOMAINE IDD
          NBMC=VSDF(IDD)
                        
          IF (NBMC.NE.-1) THEN
C SOUS-DOMAINE FLOTTANT
            NBMC1=NBMC-1
            NBSDF=NBSDF+1

C NBRE DE DDL DU SOUS-DOMAINE IDD       
            NBDDL=VDDL(IDD)
                    
C COMPOSANTES DES MODES DE CORPS RIGIDES
            CALL JEVEUO(JEXNUM(NOMSDR,NBSDF),'L',IFETR)
C SECOND MEMBRE LOCAL AU SOUS-DOMAINE
            CHSMDD=ZK24(IFETC+IDD-1)(1:19)
            CALL JEVEUO(CHSMDD//'.VALE','L',IVALE)
                  
C ----  BOUCLE SUR LES MODES DE CORPS RIGIDES
C DECALAGE DE .FETR
            IDECAI=IFETR
            DO 90 IMC=0,NBMC1       
              ZR(IDECAO)=DDOT(NBDDL,ZR(IVALE),1,ZR(IDECAI),1)
              IDECAI=IDECAI+NBDDL
              IDECAO=IDECAO+1         
   90       CONTINUE
          ENDIF
          CALL JEDEMA()
  100   CONTINUE

C MONITORING
        IF (INFOFE(1:1).EQ.'T')
     &    WRITE(IFM,*)'<FETI/FETINL> CONSTRUCTION DE E'
        IF (INFOFE(4:4).EQ.'T') THEN
          DO 105 I=1,DIMGI
            WRITE(IFM,*)'E(I)',I,ZR(JVE+I-1)
  105     CONTINUE      
        ENDIF
C -------------------------------------------------------------------- 
C CONSTITUTION DE ((GI)T*GI)-1*E STOCKE DANS '&&FETINL.E.R'
C --------------------------------------------------------------------
        NB=1
        INFOLA=0
        INFOL8=0
C FACTORISATION/DESCENTE-REMONTEE SYMETRIQUE INDEFINIE (STOCKEE PAR
C PAQUET) VIA LAPACK
        CALL DSPTRF('L',DIMGI,ZR(JGITGI),ZI4(IPIV),INFOLA)
        INFOL8=INFOLA
        IF (INFOL8.NE.0) THEN
          CALL UTDEBM('F','FETINL','SYSTEME (GI)T*GI PROBABLEMENT')
          CALL UTIMPI('S','  NON INVERSIBLE: ',0,I)
          CALL UTIMPI('L','PB LAPACK DGETRF: ',1,INFOL8)
          CALL UTFINM()
        ENDIF
        INFOL8=0
        INFOLA=0        
        CALL DSPTRS('L',DIMGI,NB,ZR(JGITGI),ZI4(IPIV),ZR(JVE),DIMGI,
     &    INFOLA)
        INFOL8=INFOLA          
        IF (INFOL8.NE.0) THEN
          CALL UTDEBM('F','FETINL','SYSTEME (GI)T*GI PROBABLEMENT')
          CALL UTIMPI('S','  NON INVERSIBLE: ',0,I)
          CALL UTIMPI('L','PB LAPACK DGETRS: ',1,INFOL8)
          CALL UTFINM()
        ENDIF     
C MONITORING
        IF (INFOFE(1:1).EQ.'T')
     &    WRITE(IFM,*)'<FETI/FETINL> INVERSION (GITGI)-1*E'
        IF (INFOFE(4:4).EQ.'T') THEN
          DO 115 I=1,DIMGI
            WRITE(IFM,*)'(GIT*GI)-1*E(I)',I,ZR(JVE+I-1)
  115     CONTINUE
        ENDIF

C -------------------------------------------------------------------- 
C CONSTITUTION DE LANDA0=GI*(((GI)T*GI)-1*E) STOCKE DANS VLAGI
C --------------------------------------------------------------------

        IF (LSTOGI) THEN
          CALL DGEMV('N',NBI,DIMGI,1.D0,GI,NBI,ZR(JVE),1,1.D0,VLAGI,1)
        ELSE
        
C NOMBRE DE SOUS-DOMAINES FLOTTANTS      
          NBSDF=0
          CALL WKVECT('&&FETI.GGT.V3','V V R',NBI,GII)
          JVE1=JVE-1
          DO 200 IDD=1,NBSD
C NBRE DE DDL DU SOUS-DOMAINE IDD       
            NBDDL=VDDL(IDD)
C NOMBRES DE MODES DE CORPS RIGIDES DU SOUS-DOMAINE IDD
            NBMC=VSDF(IDD)
                        
            IF (NBMC.NE.-1) THEN
C SOUS-DOMAINE FLOTTANT
              NBSDF=NBSDF+1
C COMPOSANTES DES MODES DE CORPS RIGIDES DE IDD
              CALL JEVEUO(JEXNUM(NOMSDR,NBSDF),'L',IFETR)
C ----  BOUCLES SUR LES MODES DE CORPS RIGIDES DE IDD
              DO 190 IMC=1,NBMC
                JVE1=JVE1+1
                RAUX=ZR(JVE1)         
                CALL FETREX(1,IDD,NBDDL,ZR(IFETR+(IMC-1)*NBDDL),NBI,
     &                   ZR(GII),IREX)
                CALL DAXPY(NBI,RAUX,ZR(GII),1,VLAGI,1)     
  190         CONTINUE
              CALL JELIBE(JEXNUM(NOMSDR,NBSDF))
            ENDIF
  200     CONTINUE
          CALL JEDETR('&&FETI.GGT.V3')
          
        ENDIF
        
C MONITORING
        IF (INFOFE(1:1).EQ.'T')
     &    WRITE(IFM,*)'<FETI/FETINL> CONSTRUCTION DE LANDA0'
        IF (INFOFE(4:4).EQ.'T') THEN
          DO 205 I=1,NBI
            WRITE(IFM,*)'LANDA0(I)',I,VLAGI(I)
  205     CONTINUE      
        ENDIF                
C DESTRUCTION OBJET TEMPORAIRE        
        CALL JEDETR('&&FETINL.E.R')
      ENDIF
                
      CALL JEDEMA()
      END
