      SUBROUTINE NMVPCY (NDIM,IMATE,COMPOR,CRIT,TYPMOD,
     &                   INSTAM,INSTAP,TM,TP,TREF,EPSM,DEPS,SIGM,VIM,
     &                   OPTION,DEFAM,DEFAP,SIGP,VIP,DSIDEP)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/02/2003   AUTEUR F6BHHBO P.DEBONNIERES 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C TOLE CRP_7
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER            NDIM,IMATE
      CHARACTER*8        TYPMOD(*)
      CHARACTER*16       COMPOR(*),OPTION
      REAL*8             CRIT(1),INSTAM,INSTAP,TM,TP,TREF
      REAL*8             EPSM(6),DEPS(6),DEFAM(6),DEFAP(6)
      REAL*8             SIGM(6),VIM(1),SIGP(6),VIP(1),DSIDEP(6,6)
C ----------------------------------------------------------------------
C     REALISE LA LOI DE VISCOPLASTICITE UTILISEE
C     DANS CYRANO 3.1 (AVRIL 1994) POUR LES ELEMENTS
C     ISOPARAMETRIQUES EN PETITES DEFORMATIONS
C
C
C
C IN  NDIM    : DIMENSION DE L'ESPACE
C IN  IMATE   : ADRESSE DU MATERIAU CODE
C IN  COMPOR  : COMPORTEMENT : RELCOM ET DEFORM
C IN  CRIT    : CRITERES DE CONVERGENCE LOCAUX
C IN  TYPMOD  : TYPE DE MODELISATION
C IN  INSTAM  : INSTANT DU CALCUL PRECEDENT
C IN  INSTAP  : INSTANT DU CALCUL
C IN  TM      : TEMPERATURE A L'INSTANT PRECEDENT
C IN  TP      : TEMPERATURE A L'INSTANT DU CALCUL
C IN  EPSM    : DEFORMATIONS A L'INSTANT DU CALCUL PRECEDENT
C IN  DEPS    : INCREMENT DE DEFORMATION
C IN  SIGM    : CONTRAINTES A L'INSTANT DU CALCUL PRECEDENT
C IN  VIM     : VARIABLES INTERNES A L'INSTANT DU CALCUL PRECEDENT
C IN  OPTION  : OPTION DEMANDEE : RIGI_MECA_TANG , FULL_MECA , RAPH_MECA
C IN  DEFAM   : DEFORMATIONS ANELASTIQUES A L'INSTANT PRECEDENT
C IN  DEFAP   : DEFORMATIONS ANELASTIQUES A L'INSTANT DU CALCUL
C OUT SIGP    : CONTRAINTES A L'INSTANT ACTUEL
C OUT VIP     : VARIABLES INTERNES A L'INSTANT ACTUEL
C OUT DSIDEP  : MATRICE CARREE
C
C               ATTENTION LES TENSEURS ET MATRICES SONT RANGES DANS
C               L'ORDRE :  XX YY ZZ XY XZ YZ
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      COMMON / NMPACY / TMIL,DPC,DEUXMU,DELTAT,SIELEQ,VALDEN,UNSURK,
     *                  UNSURM,EPSFAB,TPREC,FLUPHI,VALDRP,TTAMAX,PREC
      REAL*8             DEPSTH(6),VALRES(3),LAMBDA,DEUXMU,ALPHAP,ALPHAM
      REAL*8             DEPSDV(6),SIGDV(6),SIGEL(6),EPSMO,SIGMO,E,NU
      REAL*8             COEFGR(3),COELMA(12),COELEM(7)
      REAL*8             SIMOEQ,SIELEQ,SIGEPS,SEUIL,DP,COEF,DSDE,SIGY
      REAL*8             TROISK,RPRIM,RP,KRON(6),VALPAR(2),RAC2
      REAL*8   EM,NUM,TROIKM,DEUMUM,SIGMP(6),PLASTI,DELTAT,DELTKL,DELTP2
      REAL*8             DEGRAN(6),TABS,R8T0
      REAL*8             ALEM,ACYR,AEPR
      EXTERNAL           ALEM,ACYR,AEPR
      INTEGER            IULMES,IIRRAM,IIRRAP,ICAMAS
      INTEGER            NDIMSI
      CHARACTER*2        BL2, FB2, CODRET(3)
      CHARACTER*8        NOMRES(3),NOMPAR(2)
      DATA               KRON/1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
C DEB ------------------------------------------------------------------
C
      IF (TYPMOD(1).EQ.'C_PLAN') THEN
        IULMES = IUNIFI('MESSAGE')
        WRITE (IULMES,*) 'COMPORTEMENT ',COMPOR(1)(1:10),' NON PROGRAMME
     & POUR DES ELEMENTS DE CONTRAINTES PLANES'
        CALL UTMESS('F','NMVPCY_1','PAS DE CONTRAINTES PLANES')
        GO TO 299
      ENDIF
      BL2 = '  '
      FB2 = 'F '
      TABS = R8T0()
      DEPSGR = 0.D0
      DO 90 K = 1,6
        DEGRAN(K) = 0.D0
  90  CONTINUE
      RAC2 = SQRT(2.D0)
      TMIL = (TM+TP)*0.5D0
      DPC = VIM(1)
      DELTAT = INSTAP - INSTAM
      DO 100 K=1,6
      DO 100 L=1,6
        DSIDEP(K,L) = 0.D0
 100  CONTINUE
      IF(NDIM.EQ.2) THEN
        NDIMSI=4
      ELSE
        NDIMSI=6
      ENDIF
C
C MISE AU FORMAT DES TERMES NON DIAGONAUX
C
      DO 105 K=4,NDIMSI
        DEFAM(K) = DEFAM(K)*RAC2
        DEFAP(K) = DEFAP(K)*RAC2
 105  CONTINUE
C
      NOMPAR(1)='TEMP'
      NOMPAR(2)='INST'
      VALPAR(1)=TM
      VALPAR(2)=INSTAM
      NOMRES(1)='E'
      NOMRES(2)='NU'
      NOMRES(3)='ALPHA'
      CALL RCVALA ( IMATE,'ELAS',2,NOMPAR,VALPAR,2,
     +              NOMRES,VALRES,CODRET, FB2 )
      CALL RCVALA ( IMATE,'ELAS',2,NOMPAR,VALPAR,1,
     +              NOMRES(3),VALRES(3),CODRET(3), BL2 )
      IF ( CODRET(3) .NE. 'OK' ) VALRES(3) = 0.D0
      EM     = VALRES(1)
      NUM    = VALRES(2)
      ALPHAM = VALRES(3)
      DEUMUM = EM/(1.D0+NUM)
      TROIKM = EM/(1.D0-2.D0*NUM)
      VALPAR(1)=TP
      VALPAR(2)=INSTAP
      CALL RCVALA ( IMATE,'ELAS',2,NOMPAR,VALPAR,2,
     +              NOMRES,VALRES,CODRET, FB2 )
      CALL RCVALA ( IMATE,'ELAS',2,NOMPAR,VALPAR,1,
     +              NOMRES(3),VALRES(3),CODRET(3), BL2 )
      IF ( CODRET(3) .NE. 'OK' ) VALRES(3) = 0.D0
      E      = VALRES(1)
      NU     = VALRES(2)
      ALPHAP = VALRES(3)
      DEUXMU = E/(1.D0+NU)
      TROISK = E/(1.D0-2.D0*NU)
C
      IF(COMPOR(1)(1:8).EQ.'LEMAITRE')THEN
        NOMRES(1) = 'N'
        NOMRES(2) = 'UN_SUR_K'
        NOMRES(3) = 'UN_SUR_M'
        CALL RCVALA(IMATE,'LEMAITRE',1,'TEMP',TMIL,3,NOMRES,
     *              VALRES,CODRET, FB2 )
        VALDEN = VALRES(1)
        UNSURK = VALRES(2)
        UNSURM = VALRES(3)
      ELSE IF (COMPOR(1)(1:10).EQ.'ASSE_COMBU')THEN
        CALL NMASSG(IMATE,COEFGR)
        CALL NMASSC(IMATE,COELMA,COELEM,ICAS)
        IF (COELEM(2).NE.0.D0) THEN
          CALL TECACH(.TRUE.,.TRUE.,'PIRRAMR',1,IIRRAM)
          CALL TECACH(.TRUE.,.TRUE.,'PIRRAPR',1,IIRRAP)
          FLUPHI = (ZR(IIRRAP)-ZR(IIRRAM))/(INSTAP-INSTAM)
        ELSE
          FLUPHI = 1.D0
        ENDIF
        VALDEN = COELEM(1)
        IF (COELEM(6).LE.0.D0) THEN
          CALL UTMESS('F','LEMAITRE3D','PHI_ZERO < OU = A ZERO')
        ENDIF
        IF (FLUPHI.LT.0.D0) THEN
          CALL UTMESS('F','LEMAITRE3D','FLUENCE DECROISSANTE(PHI<0)')
        ENDIF
        XNUMER = EXP(-1.D0*COELEM(4)/(VALDEN*(TMIL+TABS)))
        UNSURK = COELEM(2)*FLUPHI/COELEM(6) + COELEM(7)
        IF (UNSURK.LT.0.D0) THEN
          CALL UTMESS('F','LEMAITRE3D','1/K ET L DOIVENT ETRE >=0')
        ENDIF
        IF (UNSURK.EQ.0.D0) THEN
          IF (COELEM(5).EQ.0.D0) UNSURK=1.D0
          IF (COELEM(5).LT.0.D0) THEN
            CALL UTMESS('F','LEMAITRE3D','PHI/KPHI0+L=0 ET BETA<0')
          ENDIF
        ENDIF
        IF (UNSURK.GT.0.D0) THEN
          UNSURK = UNSURK**(COELEM(5)/VALDEN)
        ENDIF
        UNSURK = UNSURK * XNUMER
        UNSURM = COELEM(3)
        IF ((COEFGR(1).NE.0.D0).OR.(COEFGR(2).NE.0.D0)) THEN
         IF (COELEM(2).EQ.0.D0) THEN
           CALL TECACH(.TRUE.,.TRUE.,'PIRRAMR',1,IIRRAM)
           CALL TECACH(.TRUE.,.TRUE.,'PIRRAPR',1,IIRRAP)
         ENDIF
         DEPSGR = (COEFGR(1)*TP+COEFGR(2))*(ZR(IIRRAP)**COEFGR(3))-
     *            (COEFGR(1)*TM+COEFGR(2))*(ZR(IIRRAM)**COEFGR(3))
         CALL TECACH(.TRUE.,.TRUE.,'PCAMASS',1,ICAMAS)
         REPER1 = 0.D0
         IF (ICAMAS.GT.0) REPER1 = ZR(ICAMAS)
         IF ((ICAMAS.LE.0).OR.(REPER1.LE.0.D0)) THEN
          CALL UTMESS('F','NMVPCY_2','ERREUR DIRECTION GRANDISSEMENT')
          GO TO 299
         ENDIF
         ALPHA = ZR(ICAMAS+1)*R8DGRD()
         IF (NDIM.EQ.2) THEN
           BETA = 0.D0
         ELSE
           BETA  = ZR(ICAMAS+2)*R8DGRD()
         ENDIF
         CAA = COS(ALPHA)
         SAA = SIN(ALPHA)
         CBA = COS(BETA)
         SBA = SIN(BETA)
         DEGRAN(1) =  DEPSGR*CAA*CAA*CBA*CBA
         DEGRAN(2) =  DEPSGR*SAA*SAA*SBA*SBA
         DEGRAN(3) =  DEPSGR*SBA*SBA
         DEGRAN(4) =  DEPSGR*SAA*CAA*CBA*CBA*RAC2
         DEGRAN(5) = -DEPSGR*CAA*SBA*CBA*RAC2
         DEGRAN(6) = -DEPSGR*SAA*SBA*CBA*RAC2
        ENDIF
      ELSE IF (COMPOR(1)(1:10).EQ.'ZIRC_CYRA2')THEN
        NOMRES(1) = 'EPSI_FAB'
        NOMRES(2) = 'TEMP_RECUIT'
        NOMRES(3) = 'FLUX_PHI'
        CALL RCVALA(IMATE,'ZIRC_CYRA2',1,'INST',INSTAP,3,NOMRES,
     *              VALRES,CODRET, FB2 )
        EPSFAB = VALRES(1)
        TPREC  = VALRES(2)
        FLUPHI = VALRES(3)
      ELSE IF (COMPOR(1)(1:9).EQ.'ZIRC_EPRI')THEN
        NOMRES(1) = 'FLUX_PHI'
        NOMRES(2) = 'R_P'
        NOMRES(3) = 'THETA_MAX'
        CALL RCVALA(IMATE,'ZIRC_EPRI',1,'TEMP',TMIL,3,NOMRES,
     *              VALRES,CODRET, FB2 )
        FLUPHI = VALRES(1)
        VALDRP = VALRES(2)
        TTAMAX = VALRES(3)
      ENDIF
C
      EPSMO = 0.D0
      DO 110 K=1,3
        DEPSTH(K)   = DEPS(K)
     &                -(ALPHAP*(TP-TREF)-ALPHAM*(TM-TREF))
     &                -(DEFAP(K)-DEFAM(K))
        DEPSTH(K) = DEPSTH(K) - DEGRAN(K)
        DEPSTH(K)   = DEPSTH(K) * 0.5D0
        IF ((K.EQ.1).OR.(NDIMSI.EQ.6)) THEN
          DEPSTH(K+3) = DEPS(K+3)-(DEFAP(K+3)-DEFAM(K+3))
          DEPSTH(K+3) = DEPSTH(K+3) - DEGRAN(K+3)
          DEPSTH(K+3) = DEPSTH(K+3) * 0.5D0
        ENDIF
        EPSMO = EPSMO + DEPSTH(K)
 110  CONTINUE
C
      EPSMO = EPSMO/3.D0
      DO 115 K=1,NDIMSI
        DEPSDV(K)   = DEPSTH(K) - EPSMO * KRON(K)
 115  CONTINUE
C
      SIGMO = 0.D0
      DO 113 K =1,3
        SIGMO = SIGMO + SIGM(K)
 113  CONTINUE
      SIGMO = SIGMO /3.D0
C
      DO 114 K=1,NDIMSI
        SIGMP(K)=((DEUXMU+DEUMUM)/DEUMUM*(SIGM(K)-SIGMO*KRON(K))+
     &           (TROISK+TROIKM)/TROIKM*SIGMO*KRON(K))*0.5D0
114   CONTINUE
      SIGMO = 0.D0
      DO 116 K =1,3
        SIGMO = SIGMO + SIGMP(K)
116   CONTINUE
      SIGMO = SIGMO /3.D0
      SIELEQ = 0.D0
      DO 117 K = 1,NDIMSI
        SIGDV(K) = SIGMP(K) - SIGMO * KRON(K)
        SIGEL(K) = SIGDV(K) + DEUXMU * DEPSDV(K)
        SIELEQ   = SIELEQ   + SIGEL(K)**2
 117  CONTINUE
      SIELEQ       = SQRT(1.5D0*SIELEQ)
C
C----RESOLUTION DE L'EQUATION SCALAIRE----
C
      PREC = CRIT(3)
      NITER = NINT(CRIT(1))
C
      A0 = - SIELEQ
      IF((COMPOR(1)(1:8).EQ.'LEMAITRE').OR.
     *   (COMPOR(1)(1:10).EQ.'ASSE_COMBU'))THEN
        XAP = SIELEQ
        XAP = XAP - SIELEQ*1.D-12
        IF (ABS(A0).LE.PREC) THEN
          X = 0.D0
        ELSE
          CALL ZEROF2(ALEM,A0,XAP,PREC,NITER,X)
        ENDIF
        CALL GGPLEM(X,DPC+(SIELEQ-X)/(1.5D0*DEUXMU),TMIL,VALDEN,
     *              UNSURK,UNSURM,DEUXMU,FG,FDGDST,FDGDEV)
      ELSE IF (COMPOR(1)(1:10).EQ.'ZIRC_CYRA2')THEN
        XAP = 0.99D0 * SIELEQ
        IF (ABS(A0).LE.PREC) THEN
          X = 0.D0
        ELSE
          CALL ZEROF2(ACYR,A0,XAP,PREC,NITER,X)
        ENDIF
        CALL GGPCYR(X,DPC+(SIELEQ-X)/(1.5D0*DEUXMU),TMIL,EPSFAB,
     *              TPREC,FLUPHI,DEUXMU,PREC,FG,FDGDST,FDGDEV)
C LOI PROGRAMMEE DANS CYRANO3 :
C        CALL GGPCYR(X,DPC,TMIL,EPSFAB,
C     *              TPREC,FLUPHI,DEUXMU,PREC,FG,FDGDST,FDGDEV)
      ELSE IF (COMPOR(1)(1:9).EQ.'ZIRC_EPRI')THEN
        XAP = 0.99D0 * SIELEQ
        IF (ABS(A0).LE.PREC) THEN
          X = 0.D0
        ELSE
          CALL ZEROF2(AEPR,A0,XAP,PREC,NITER,X)
        ENDIF
        CALL GGPEPR(X,DPC+(SIELEQ-X)/(1.5D0*DEUXMU),TMIL,FLUPHI,
     *             VALDRP,TTAMAX,DEUXMU,PREC,FG,FDGDST,FDGDEV)
      ENDIF
C
C-----------------------------------------
      IF (X.NE.0.D0) THEN
        COEF1 = 1.D0/(1.D0+1.5D0*DEUXMU*DELTAT*FG/X)
      ELSE
        COEF1 = 1.D0/(1.D0+1.5D0*DEUXMU*DELTAT*FDGDST)
      ENDIF
C
      IF ( OPTION(1:9) .EQ. 'RAPH_MECA' .OR.
     &     OPTION(1:9) .EQ. 'FULL_MECA' ) THEN
        DELTP2 = 0.D0
        DO 160 K = 1,NDIMSI
          SIGDV(K) = SIGEL(K) * COEF1
          SIGP(K)  = SIGDV(K) + (SIGMO + TROISK*EPSMO)*KRON(K)
          SIGP(K)  = 2.D0*SIGP(K) - SIGM(K)
          DELTEV   = 2.D0*(SIGEL(K)-SIGDV(K))/DEUXMU
          DELTP2   = DELTP2   + DELTEV**2
 160    CONTINUE
        VIP(1) = VIM(1) + SQRT(2.D0*DELTP2/3.D0)
      ENDIF
C
      IF  ( OPTION(1:9) .EQ. 'FULL_MECA'.OR.
     &      OPTION(1:14) .EQ. 'RIGI_MECA_TANG' ) THEN
       IF (X.NE.0.D0) THEN
        COEF2=SIELEQ*(1.D0 - DELTAT*FDGDEV)
        COEF2=COEF2/(1.D0+1.5D0*DEUXMU*DELTAT*FDGDST)
        COEF2=COEF2 - X
        COEF2=COEF2*1.5D0/(SIELEQ**3)
       ELSE
        COEF2 = 0.D0
       ENDIF
       DO 135 K=1,NDIMSI
         DO 135 L=1,NDIMSI
           DELTKL = 0.D0
           IF (K.EQ.L) DELTKL = 1.D0
           DSIDEP(K,L) = COEF1*(DELTKL-KRON(K)*KRON(L)/3.D0)
           DSIDEP(K,L) = DEUXMU*(DSIDEP(K,L)+COEF2*SIGEL(K)*SIGEL(L))
           DSIDEP(K,L) = DSIDEP(K,L) + TROISK*KRON(K)*KRON(L)/3.D0
 135   CONTINUE
      ENDIF
C
 9999 CONTINUE
C
C MISE AU FORMAT DES TERMES NON DIAGONAUX
C
      DO 200 K=4,NDIMSI
         DEFAM(K) = DEFAM(K)/RAC2
         DEFAP(K) = DEFAP(K)/RAC2
 200  CONTINUE
C
 299  CONTINUE
C
C FIN ------------------------------------------------------------------
      END
