      SUBROUTINE MMTGEX(NOMA  ,NDIM  ,DEFICO,IZONE ,POSMAE,
     &                  IPC   ,EXNOEF,NBEXFR,NDEXFR,TAU1  ,
     &                  TAU2  ,VALRET)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 01/04/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*24 DEFICO
      CHARACTER*8  NOMA
      INTEGER      NDIM
      INTEGER      IZONE
      INTEGER      POSMAE
      INTEGER      IPC
      INTEGER      NBEXFR,NDEXFR(3)   
      REAL*8       TAU1(3),TAU2(3)
      LOGICAL      EXNOEF
      INTEGER      VALRET
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - APPARIEMENT - UTILITAIRE)
C
C DEFINI LA BASE TANGENTE LOCALE LORS D'UN NOEUD A EXCLURE
C      
C ----------------------------------------------------------------------
C
C
C IN  DEFICO : SD POUR LA DEFINITION DU CONTACT
C IN  NOMA   : NOM DU MAILLAGE
C IN  NDIM   : DIMENSION DE L'ESPACE
C IN  IZONE  : NUMERO DE LA ZONE DE CONTACT
C IN  POSMAE : NUMERO DE LA MAILLE ESCLAVE
C IN  IPC    : NUMERO DU NOEUD DE LA MAILLE ESCLAVE
C IN  EXNOEF : VAUT .TRUE. SI LE NOEUD DOIT ETRE EXCLU DE 
C              LA SURFACE DE CONTACT SUIVANT UNE DIRECTION (FROTTEMENT)
C IN  NBEXFR : NOMBRE DE NOEUDS A EXCLURE SUR LA MAILLE FROTTEMENT
C IN  NDEXFR : NUMERO DES NOEUDS EXCLUS SUR LA MAILLE FROTTEMENT
C OUT TAU1   : PREMIER VECTEUR TANGENT
C OUT TAU2   : SECOND VECTEUR TANGENT
C OUT VALRET : CODE RETOUR ERREUR
C               0 PAS DE PROBLEME
C               1 VECTEUR NORMAL NUL AU POINT A EXCLURE
C               2 VECTEUR TANGENT 1 NUL AU POINT A EXCLURE
C               3 VECTEUR TANGENT 2 NUL AU POINT A EXCLURE
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      IFM,NIV
      INTEGER      POSNOE,NUMNOE
      CHARACTER*24 NOMACO,CONTNO,PNOMA
      INTEGER      JNOMA,JNOCO,JPONO
      REAL*8       NORM(3),COON1(3),COON2(3)
      REAL*8       NORN,NORT1,NORT2,NORME1,R8PREM
      INTEGER      J,N1,N2,POSNO1,POSNO2
      INTEGER      JCOOR,IBID,SUPPOK
      LOGICAL      LBID
      CHARACTER*24 K24BID,K24BLA   
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV) 
C
C --- ACCES OBJETS
C 
      NOMACO = DEFICO(1:16)//'.NOMACO'
      CONTNO = DEFICO(1:16)//'.NOEUCO'
      PNOMA  = DEFICO(1:16)//'.PNOMACO'       
C           
      CALL JEVEUO(NOMACO,'L',JNOMA)
      CALL JEVEUO(CONTNO,'L',JNOCO)     
      CALL JEVEUO(PNOMA ,'L',JPONO)        
      CALL JEVEUO(NOMA//'.COORDO    .VALE','L',JCOOR)  
C
C --- INITIALISATIONS 
C
      VALRET = 0
      K24BLA = ' '
      POSNOE = ZI(JNOMA+ZI(JPONO+POSMAE-1)+IPC-1)
      NUMNOE = ZI(JNOCO+POSNOE-1) 
C     
C --- REPERAGE SI LE NOEUD IPC EST UN NOEUD A EXCLURE (SUPPOK = 1)
C
      CALL CFMMEX(DEFICO,'FROT',IZONE ,NUMNOE,SUPPOK)               
C
C --- REDEFINITION DU REPERE
C
      IF (SUPPOK.EQ.1) THEN
        EXNOEF = .TRUE.
        IF (NBEXFR.EQ. 1) THEN
          IF (NDIM .EQ. 2) THEN        
            CALL MMINFP(IZONE ,DEFICO,K24BLA,'EXCL_FROT_1',
     &                  IBID  ,TAU1  ,K24BID,LBID)
          ELSEIF (NDIM .EQ. 3) THEN
            CALL MMINFP(IZONE ,DEFICO,K24BLA,'EXCL_FROT_2',
     &                  IBID  ,TAU1  ,K24BID,LBID)
            CALL MMINFP(IZONE ,DEFICO,K24BLA,'EXCL_FROT_1',
     &                  IBID  ,TAU2  ,K24BID,LBID) 
          ELSE
            CALL ASSERT(.FALSE.)    
          ENDIF  
        ELSE
          CALL PROVEC(TAU2,TAU1,NORM)
          IF (IPC .EQ. NDEXFR(1)) THEN
            N1     = NUMNOE
            POSNO2 = ZI(JNOMA+ZI(JPONO+POSMAE-1)+NDEXFR(2)-1)
            N2     = ZI(JNOCO+POSNO2-1)
          ELSE
            N2     = NUMNOE
            POSNO1 = ZI(JNOMA+ZI(JPONO+POSMAE-1)+NDEXFR(1)-1)
            N1     = ZI(JNOCO+POSNO1-1)
          END IF
          DO 59 J = 1,3
            COON1(J) = ZR(JCOOR+3*(N1-1)+J-1)
            COON2(J) = ZR(JCOOR+3*(N2-1)+J-1)
 59       CONTINUE
          CALL VDIFF(3,COON1,COON2,TAU2)
          CALL NORMEV(TAU2,NORME1)         
          CALL PROVEC(TAU2,NORM,TAU1)
          NORN  = SQRT(NORM(1)*NORM(1)+NORM(2)*NORM(2)+
     &                 NORM(3)*NORM(3))    
          IF (NORN.LT.R8PREM()) THEN   
            VALRET = 1                          
          ENDIF                   
        ENDIF          
        CALL NORMEV(TAU1,NORT1)
        CALL NORMEV(TAU2,NORT2)
        IF (NORT1.LT.R8PREM()) THEN   
          VALRET = 2
        ELSEIF (NORT2.LT.R8PREM().AND.(NDIM.EQ.3)) THEN   
          VALRET = 3                          
        ENDIF    
      ENDIF
C
  999 CONTINUE        
C
      CALL JEDEMA()      
      END
