      SUBROUTINE IMPPER(SDIMPZ,IMPTMZ,INFCMP,ZTIT  ,ZDEF  ,
     &                  MOTFAC,IOCC  ,COLONN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/01/2010   AUTEUR GRANET S.GRANET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      CHARACTER*(*) SDIMPZ,IMPTMZ      
      INTEGER       INFCMP(5)
      INTEGER       ZTIT
      INTEGER       ZDEF
      CHARACTER*16  MOTFAC
      INTEGER       IOCC
      CHARACTER*9   COLONN
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (AFFICHAGE)
C
C VALEURS PERSONNALISEES DE L'AFFICHAGE DU TABLEAU DE CONVERGENCE
C
C ----------------------------------------------------------------------
C
C
C IN  SDIMPR : NOM DE LA SD AFFICHAGE
C IN  IMPTMP : NOM DU VECTEUR TEMPORAIRE D'ACTIVATION DES COLONNES
C IN  INFCMP : VAUT 1 SI ON DOIT AFFICHER DES INFOS SUR LE NOEUD OU
C              LES RESIDUS SONT EVALUES
C            INFCMP(1):  RESI_RELA
C            INFCMP(2):  RESI_MAXI
C            INFCMP(3):  RESI_REFE
C            INFCMP(4):  CTCD_GEOM
C            INFCMP(5):  RESI_COMP
C IN  ZTIT   : NOMBRE MAXI DE LIGNES D'UN TITRE
C IN  ZDEF   : NOMBRE MAXI DE COLONNES DISPONIBLES POUR L'AFFICHAGE
C IN  MOTFAC : MOT-CLEF FACTEUR AFFICHAGE
C IN  IOCC   : OCCURRENCE DU MOT-CLEF FACTEUR AFFICHAGE
C IN  COLONN : NOM-CODE DE LA COLONNE
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      JIMCOL
      INTEGER      ICOD,FORCOL,NOC,IBID,ICOL
      CHARACTER*16 TITCOL(ZTIT)
      INTEGER      LONGR,PRECR,LONGI,LONGK
      CHARACTER*3  CMP
      CHARACTER*24 SDSUIV
      INTEGER      JIMPSU
      CHARACTER*14 SDIMPR,IMPTMP 
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INIT
C
      IMPTMP = IMPTMZ
      SDIMPR = SDIMPZ           
C
C --- NOM DE LA SD POUR LE SUIVI
C
      CALL JEVEUO(SDIMPR(1:14)//'SUIVI','L',JIMPSU)
      SDSUIV = ZK24(JIMPSU-1+1)
C
      CALL JEVEUO(IMPTMP,'E',JIMCOL)
C
C --- CODE DE LA COLONNE COURANTE DANS JIMCOL
C
      ICOL = IOCC
      CALL IMPDEA(ZDEF  ,COLONN,JIMCOL,ICOL  )
C
C --- RECUPERATION DES PRECISIONS
C
      CALL IMPPRE(MOTFAC,IOCC  ,LONGR ,PRECR ,LONGI ,
     &            LONGK )
C
C --- ACTIVATION DE LA COLONNE
C
      ICOD = ZI(JIMCOL-1+IOCC)

      CALL IMPREF(ICOD  ,SDSUIV,TITCOL,FORCOL)
      IBID = 0
      CALL IMPSDA(SDIMPR,'AJOU',IBID  ,ICOD  ,TITCOL,
     &            FORCOL,LONGR ,PRECR ,LONGI ,LONGK )
C
C --- OPTION AFFICHAGE DES COMPOSANTES OU LES RESIDUS SONT EVALUES
C
      CALL GETVTX(MOTFAC,'INFO_RESIDU',IOCC,1,1,CMP,NOC)
      INFCMP(1) = 0
      INFCMP(2) = 0
      INFCMP(3) = 0
      INFCMP(4) = 0
      IF (NOC.NE.0) THEN
        IF (CMP(1:3).EQ.'OUI') THEN
          INFCMP(1) = 1
          INFCMP(2) = 1
          INFCMP(3) = 1
          INFCMP(4) = 1
        ELSE IF (.NOT.(CMP(1:3).EQ.'NON')) THEN
          CALL ASSERT(.FALSE.)
        ENDIF
      ENDIF

      IF (INFCMP(1).EQ.1) THEN
        IF (COLONN.EQ.'RESI_RELA') THEN
          CALL IMPDEA(ZDEF,'RELA_NOEU',JIMCOL,ICOL)
          CALL IMPCOD('RELA_NOEU',ICOD)
          CALL IMPPRE(MOTFAC,IOCC  ,LONGR ,PRECR ,LONGI ,
     &                LONGK )
          CALL IMPREF(ICOD  ,SDSUIV, TITCOL,FORCOL)
          CALL IMPSDA(SDIMPR,'AJOU',IBID  ,ICOD  ,TITCOL,
     &                FORCOL,LONGR ,PRECR ,LONGI ,LONGK )
        ENDIF
      ENDIF
      IF (INFCMP(2).EQ.1) THEN
        IF (COLONN.EQ.'RESI_MAXI') THEN
          CALL IMPDEA(ZDEF,'MAXI_NOEU',JIMCOL,ICOL)
          CALL IMPCOD('MAXI_NOEU',ICOD)
          CALL IMPPRE(MOTFAC,IOCC  ,LONGR ,PRECR ,LONGI ,
     &                LONGK )
          CALL IMPREF(ICOD  ,SDSUIV,TITCOL,FORCOL)
          CALL IMPSDA(SDIMPR,'AJOU',IBID  ,ICOD  ,TITCOL,
     &                FORCOL,LONGR ,PRECR ,LONGI ,LONGK )
        ENDIF
      ENDIF
      IF (INFCMP(3).EQ.1) THEN
        IF (COLONN.EQ.'RESI_REFE') THEN
          CALL IMPDEA(ZDEF,'REFE_NOEU',JIMCOL,ICOL)
          CALL IMPCOD('REFE_NOEU',ICOD)
          CALL IMPPRE(MOTFAC,IOCC  ,LONGR ,PRECR ,LONGI ,
     &                LONGK )
          CALL IMPREF(ICOD  ,SDSUIV,TITCOL,FORCOL)
          CALL IMPSDA(SDIMPR,'AJOU',IBID  ,ICOD  ,TITCOL,
     &                FORCOL,LONGR ,PRECR ,LONGI ,LONGK )
        ENDIF
      ENDIF
      IF (INFCMP(4).EQ.1) THEN
        IF (COLONN.EQ.'CTCD_GEOM') THEN
          CALL IMPDEA(ZDEF,'CTCD_NOEU',JIMCOL,ICOL)
          CALL IMPCOD('CTCD_NOEU',ICOD)
          CALL IMPPRE(MOTFAC,IOCC  ,LONGR ,PRECR ,LONGI ,
     &                LONGK )
          CALL IMPREF(ICOD  ,SDSUIV,TITCOL,FORCOL)
          CALL IMPSDA(SDIMPR,'AJOU',IBID  ,ICOD  ,TITCOL,
     &                FORCOL,LONGR ,PRECR ,LONGI ,LONGK )
        ELSEIF (COLONN.EQ.'CTCC_BOUC') THEN
          CALL IMPDEA(ZDEF,'CTCC_NOEU',JIMCOL,ICOL)
          CALL IMPCOD('CTCC_NOEU',ICOD)
          CALL IMPPRE(MOTFAC,IOCC  ,LONGR ,PRECR ,LONGI ,
     &                LONGK )
          CALL IMPREF(ICOD  ,SDSUIV,TITCOL,FORCOL)
          CALL IMPSDA(SDIMPR,'AJOU',IBID  ,ICOD  ,TITCOL,
     &                FORCOL,LONGR ,PRECR ,LONGI ,LONGK )
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
      ENDIF


      CALL JEDEMA()

      END
