      SUBROUTINE NMCERR(SDDISC,ITER1 ,ITER2 ,ELASDT,RGMAXI,
     &                  RGRELA,INIKRY,LCTCD ,DEFICO )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 05/11/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'
      CHARACTER*19 SDDISC
      CHARACTER*24 DEFICO
      LOGICAL      LCTCD
      INTEGER      ITER1,ITER2
      REAL*8       ELASDT,INIKRY
      REAL*8       RGMAXI,RGRELA
C
C ----------------------------------------------------------------------
C
C ROUTINE *_NON_LINE (STRUCTURES DE DONNES - SD DISCRETISATION)
C
C CREATION SD STOCKAGE DES INFOS EN COURS DE CALCUL
C
C ----------------------------------------------------------------------
C
C IN  SDDISC : SD DISCRETISATION
C IN  ITER1  : ITER_GLOB_MAXI
C IN  ITER2  : ITER_GLOB_ELAS
C IN  ELASDT : PAS_MINI_ELAS
C IN  INIKRY : PRECISION INITIALE POUR NEWTON-KRYLOV
C IN  RGMAXI : RESI_GLOB_MAXI
C IN  RGRELA : RESI_GLOB_RELA
C IN  LCTCD  : .TRUE. SI CONTACT DISCRET
C IN  DEFICO : SD DE DEFINITION DU CONTACT
C
C ----------------------------------------------------------------------
C
      REAL*8       R8BID
      REAL*8       R8VIDE,PCPLUS
      INTEGER      TYPRES,IBID,NBITER,MXITER,MNITER
      INTEGER      CFDISI,MAXGEO,NBREAG
      INTEGER      NMAX,NPLUS
      INTEGER      CEIL
      INTEGER      IECHEC,NECHEC,ITESUP,NBITCT
      CHARACTER*8  K8BID
      CHARACTER*24 INFOCV,INFORE
      INTEGER      JIFCV,JIFRE
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      MXITER = MAX(ITER1,ITER2)
      MNITER = MIN(ITER1,ITER2)
      ITESUP = 0
      NMAX   = 0
      NBITCT = 0
      CALL UTDIDT('L'   ,SDDISC,'LIST',IBID  ,'NECHEC',
     &            R8BID ,NECHEC,K8BID )
C      
C --- NOMBRE D'ITERATIONS AUTORISEES EN PLUS
C
      DO 10 IECHEC = 1,NECHEC
        CALL UTDIDT('L'   ,SDDISC,'ECHE',IECHEC,'PCENT_ITER_PLUS',
     &              PCPLUS,IBID  ,K8BID )
        NPLUS  = NINT(PCPLUS)
        NMAX   = MAX(NMAX,NPLUS)
   10 CONTINUE
C
C --- NOMBRE MAXIMUM D'ITERATIONS
C
      NBITER = CEIL(MXITER*(1.D0 + NPLUS/100.0D0))
C
C --- CREATION DU VECTEUR D'INFORMATIONS SUR LA CONVERGENCE
C
      INFOCV = SDDISC(1:19)//'.IFCV'
      CALL WKVECT(INFOCV,'V V R',10,JIFCV)
C
C --- MXITER      : MAX( ITER_GLOB_MAXI , ITER_GLOB_ELAS )
C --- MNITER      : MIN( ITER_GLOB_MAXI , ITER_GLOB_ELAS )
C --- NBITER      : MXITER + ITERATION EN PLUS
C --- ITESUP      :  =1 ON AUTORISE DES ITERATIONS EN PLUS
C ---                <>1 ON N'AUTORISE PAS D'ITERATIONS EN PLUS
C --- RESIDUS     : RELA ET MAXI
C
      CALL NMLERR(SDDISC,'E','MXITER'        ,R8BID ,MXITER)
      CALL NMLERR(SDDISC,'E','MNITER'        ,R8BID ,MNITER)
      CALL NMLERR(SDDISC,'E','NBITER'        ,R8BID ,NBITER)
      CALL NMLERR(SDDISC,'E','PAS_MINI_ELAS' ,ELASDT,IBID  )
      CALL NMLERR(SDDISC,'E','ITERSUP'       ,R8BID ,ITESUP)
      CALL NMLERR(SDDISC,'E','RESI_GLOB_RELA',RGRELA,IBID  )
      CALL NMLERR(SDDISC,'E','RESI_GLOB_MAXI',RGMAXI,IBID  )
C
C --- TYPE_RESI   :  =1 ON A DONNE RESI_GLOB_RELA
C ---                =2 ON A DONNE RESI_GLOB_MAXI
C ---                =3 ON A DONNE RESI_GLOB_RELA ET RESI_GLOB_MAXI
C ---                =0 ON A RIEN DONNE ==> =1
C
      TYPRES = 0
      IF (RGRELA.NE.R8VIDE()) THEN
        TYPRES = TYPRES + 1
      ENDIF
      IF (RGMAXI.NE.R8VIDE()) THEN
        TYPRES = TYPRES + 2
      ENDIF
      IF (TYPRES.EQ.0) THEN
        RGRELA = 1.0D-06
        RGMAXI = 1.0D-06
        TYPRES = 1
      ENDIF
      CALL NMLERR(SDDISC,'E','TYPE_RESI'         ,R8BID,TYPRES)
C
C --- RESIDU INITIAL POUR NEWTON-KRYLOV
C
      CALL NMLERR(SDDISC,'E','INIT_NEWTON_KRYLOV',INIKRY,IBID)
C
C --- RESIDU COURANT POUR NEWTON-KRYLOV
C
      CALL NMLERR(SDDISC,'E','ITER_NEWTON_KRYLOV',INIKRY,IBID)
C
C --- RECUPERATION NOMBRE DE REAC_GEOM EN COTNACT DISCRET
C
      IF (LCTCD) THEN
        MAXGEO  = CFDISI(DEFICO,'ITER_GEOM_MAXI')
        NBREAG  = CFDISI(DEFICO,'NB_ITER_GEOM'  )
        NBITCT  = MAX(MAXGEO,NBREAG)
      ENDIF
      NBITER = NBITER+NBITCT
C
C --- CREATION DU VECTEUR DE STOCKAGE DES RESIDUS
C
      NBITER = NBITER+1
      INFORE = SDDISC(1:19)//'.IFRE'
      CALL WKVECT(INFORE,'V V R',3*NBITER,JIFRE)
C
      CALL JEDEMA()
      END
