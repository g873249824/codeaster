      SUBROUTINE MMCHML(NOMA  ,DEFICO,RESOCO,SDDISC,SDDYNA,
     &                  NUMINS)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 07/07/2009   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2009  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
      IMPLICIT NONE
      CHARACTER*8  NOMA
      CHARACTER*24 DEFICO,RESOCO        
      CHARACTER*19 SDDISC,SDDYNA
      INTEGER      NUMINS       
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - CREATION OBJETS - CHAM_ELEM)
C
C CREATION DU CHAM_ELEM CONTENANT LES INFOS DE CONTACT
C      
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  RESOCO : SD POUR LA RESOLUTION DE CONTACT
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  INST   : PARAMETRES D'INSTANT POUR LA DYNAMIQUE
C
C CONTENU DU CHAM_ELEM
C
C 1  XPC: COORDONNEE PARAMETRIQUE X DU POINT DE CONTACT
C 2  XPR: COORDONNEE PARAMETRIQUE X DU PROJETE DU POINT DE CONTACT
C 3  YPR: COORDONNEE PARAMETRIQUE Y DU PROJETE DU POINT DE CONTACT
C 4  TAU1(1): COMPOSANTE 1 DU VECTEUR TANGENT 1
C 5  TAU1(2): COMPOSANTE 2 DU VECTEUR TANGENT 1
C 6  TAU1(3): COMPOSANTE 3 DU VECTEUR TANGENT 1
C 7  TAU2(1): COMPOSANTE 1 DU VECTEUR TANGENT 2
C 8  TAU2(2): COMPOSANTE 2 DU VECTEUR TANGENT 2
C 9  TAU2(3): COMPOSANTE 3 DU VECTEUR TANGENT 2
C 10 YPC: COORDONNEE PARAMETRIQUE Y DU POINT DE CONTACT
C 11 INDCO : ETAT DE CONTACT (0 PAS DE CONTACT)
C 12 LAMBDA: VALEUR DU SEUIL_INIT
C 13 COEFCA: COEF_REGU_CONT
C 14 COEFFA: COEF_REGU_FROT
C 15 COEFFF: COEFFICIENT DE FROTTEMENT DE COULOMB
C 16 IFROTT: FROTTEMENT (0 SI PAS, 3 SI COULOMB)
C 17 INDNOR: NOEUD EXCLU PAR PROJECTION HORS ZONE
C 18 AXIS  : MODELE AXISYMETRIQUE
C 19 HPG   : POIDS DU POINT INTEGRATION DU POINT DE CONTACT
C 20 INST(2) : PARAMETRE DYNAMIQUE INCREMENT DE TEMPS
C 21 IFORM   : FORMULATION (DEPLACEMENT OU VITESSE)
C 22 INDM    : NOMBRE DE NOEUDS EXCLUS PAR SANS GROUP_NO 
C 23 INI1   : NUMERO DU PREMIER NOEUD A EXCLURE
C 24 INI2   : NUMERO DU DEUXIEME NOEUD A EXCLURE
C 25 INI3   : NUMERO DU TROISIEME NOEUD A EXCLURE
C 26 XS     : INDICATEUR SI DANS ZONE ASPERITES
C 27 COMPLI : INDICATEUR DE COMPLIANCE 
C 28 ASPERI : VALEUR DE L'ASPERITE
C 29 E_N    : PARAMETRE E_N POUR LA COMPLIANCE
C 30 E_V    : PARAMETRE E_V POUR LA COMPLIANCE
C 31 INST(4) : PARAMETRE ALPHA DE NEWMARK
C 32 INST(5) : PARAMETRE DELTA DE NEWMARK
C 33 JEUSUP : VALEUR DU JEU ARTIFICIEL PAR DIST_ESCL/DIST_MAIT
C 34 IMA    : NUMERO DE LA MAILLE ESCLAVE
C 35 IMABAR : NUMERO DE LA MAILLE ESCLAVE DE L'ELEMENT DE BARSOUM
C 36 INDNOB : NUMERO DU NOEUD A EXCLURE DANS LA MAILLE POUR BARSOUM
C 37 INDNOQ : NUMERO DU NOEUD EN FACE DU NOEUD A EXCLURE POUR BARSOUM
C 38 TYPBAR : NOEUDS EXCLUS PAR L'ELEMENT DE BARSOUM
C 39 INDRAC : NOEUDS EXCLUS PAR GROUP_NO_RACC
C 40 INDUSU : INDICATEUR D'USURE
C 41 K      : PARAMETRE K POUR L'USURE
C 42 H      : PARAMETRE H POUR L'USURE
C 43 INDUSU : INDICATEUR DE PIVOT NUL PROBABLE POUR LES
C             NOEUDS EXCLUS PAR DETECTION AUTOMATIQUE 
C             DES REDONDANCES
C 44 TYPALGC: TYPE D'ALGORITHME POUR LE CONTACT (1 SI LAGRANGIEN, 
C             2 SI STABILISATION, 3 SI AUGMENTATION)
C 45 COEFCS:  COEF_STAB_CONT
C 46 COEFCP:  COEF_PENA_CONT
C 47 TYPALGF: TYPE D'ALGORITHME POUR LE FROTTEMENT (1 SI LAGRANGIEN, 
C             2 SI STABILISATION, 3 SI AUGMENTATION)
C 48 COEFFS:  COEF_STAB_FROT
C 49 COEFFP:  COEF_PENA_FROT
C 50 PIVOTN:  EXCLUSION_PIV_NUL (0 OU 1)
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
      CHARACTER*32 JEXNUM
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      NCMP
      PARAMETER    (NCMP=50)
      INTEGER      CFMMVD,ZTABF,ZCMCF,ZECPD
      INTEGER      IPC,IZONE,NTPC
      CHARACTER*24 JEUSUP,JEUPOU,JEUCOQ,JEUCON
      INTEGER      JJSUP,JJEU,JJPOU,JJCOQ
      CHARACTER*24 TABFIN,CARACF,ECPDON      
      INTEGER      JTABF,JCMCF,JECPD
      INTEGER      JVALV
      CHARACTER*19 LIGRCF,CHMLCF,CRNUDD
      INTEGER      IFM,NIV      ,JCRNUD
      REAL*8       DIINST,INSTAM,INSTAP,DELTAT
      LOGICAL      NDYNLO,LDYNA ,LTHETA,LAPPAR
      REAL*8       NDYNRE,GAMMA,BETA ,THETA   
      INTEGER      IRET,NTLIEL,DECAL
      INTEGER      NBGREL,NBLIEL
      INTEGER       IGR  ,   IEL
      CHARACTER*24  CELD, CELV
      INTEGER      JCELD,JCELV,JLIEL
      INTEGER      NCELD1  ,NCELD2  ,NCELD3
      PARAMETER   (NCELD1=4,NCELD2=4,NCELD3=4)
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- AFFICHAGE
C      
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> CREATION DU CHAM_ELEM POUR LES'//
     &        ' ELEMENTS DE CONTACT' 
      ENDIF  
C
C --- ACCES OBJETS
C
      JEUSUP = DEFICO(1:16)//'.JSUPCO'
      JEUPOU = DEFICO(1:16)//'.JEUPOU'
      JEUCOQ = DEFICO(1:16)//'.JEUCOQ'
      JEUCON = DEFICO(1:16)//'.JEUCON'
      TABFIN = DEFICO(1:16)//'.TABFIN'
      CARACF = DEFICO(1:16)//'.CARACF'
      ECPDON = DEFICO(1:16)//'.ECPDON' 
      CRNUDD = RESOCO(1:14)//'.NUDD'
      CALL JEVEUO(JEUSUP,'L',JJSUP)
      CALL JEVEUO(JEUPOU,'L',JJPOU)
      CALL JEVEUO(JEUCON,'L',JJEU) 
      CALL JEVEUO(JEUCOQ,'L',JJCOQ)      
      CALL JEVEUO(TABFIN,'L',JTABF)
      CALL JEVEUO(CARACF,'L',JCMCF)
      CALL JEVEUO(ECPDON,'L',JECPD)   
      CALL JEVEUO(CRNUDD,'L',JCRNUD)
C
      ZTABF = CFMMVD('ZTABF')
      ZCMCF = CFMMVD('ZCMCF')
      ZECPD = CFMMVD('ZECPD') 
C
C --- FONCTIONNALITES ACTIVEES
C      
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
      LTHETA = NDYNLO(SDDYNA,'THETA_METHODE')
C      
C --- LIGREL DES ELEMENTS TARDIFS DE CONTACT/FROTTEMENT    
C
      LIGRCF = RESOCO(1:14)//'.LIGR'
C      
C --- CHAM_ELEM POUR ELEMENTS TARDIFS DE CONTACT/FROTTEMENT    
C
      CHMLCF = RESOCO(1:14)//'.CHML'
C
C --- INITIALISATIONS
C
      NTPC   = NINT(ZR(JTABF-1+1))
      INSTAM = DIINST(SDDISC,NUMINS-1)
      INSTAP = DIINST(SDDISC,NUMINS)
      DELTAT = INSTAP-INSTAM
      BETA   = 0.D0
      GAMMA  = 0.D0
      THETA  = 0.D0
      IF (LDYNA) THEN
        IF (LTHETA) THEN
          THETA  = NDYNRE(SDDYNA,'THETA')
        ELSE
          BETA   = NDYNRE(SDDYNA,'BETA')
          GAMMA  = NDYNRE(SDDYNA,'GAMMA')   
        ENDIF   
      ENDIF                    
C
C --- DESTRUCTION/CREATION DU CHAM_ELEM SI NECESSAIRE
C
      LAPPAR = ZL(JCRNUD)
      IF (LAPPAR) THEN
        CALL DETRSD('CHAM_ELEM',CHMLCF)
        CALL ALCHML(LIGRCF,'RIGI_CONT','PCONFR','V',CHMLCF,IRET,' ')
        CALL ASSERT(IRET.EQ.0)
      ENDIF
C
C --- RECUPERATION DU DESCRIPTEUR DU CHAM_ELEM
C
      CELD = CHMLCF//'.CELD'
      CALL JEVEUO(CELD,'L',JCELD)
      NBGREL = ZI(JCELD-1+2)
C
C --- ACCES AUX VALEURS DU CHAM_ELEM
C
      CELV = CHMLCF//'.CELV'
      CALL JEVEUO(CELV,'E',JCELV)
C
C --- REMPLISSAGE DU CHAM_ELEM
C
      NTLIEL = 0
      DO 200 IGR = 1,NBGREL
C       ADRESSE DANS CELD DES INFORMATIONS DU GREL IGR
        DECAL = ZI(JCELD-1+NCELD1+IGR)
C       NOMBRE D'ELEMENTS DU GREL IGR
        NBLIEL = ZI(JCELD-1+DECAL+1)
C       VERIF TAILLE CHAM_ELEM
        CALL ASSERT(ZI(JCELD-1+DECAL+3).EQ.NCMP)
C       RECUPERATION DES MAILLES DU GREL IGR
        CALL JEVEUO(JEXNUM(LIGRCF//'.LIEL',IGR),'L',JLIEL)
        DO 300 IEL = 1,NBLIEL
C         MAILLE TARDIVE ZI(JLIEL-1+IEL) < 0
          IPC = -ZI(JLIEL-1+IEL)
          IZONE = NINT(ZR(JTABF+ZTABF*(IPC-1)+15))
C         ADRESSE DANS CELV DE L'ELEMENT IEL DU GREL IGR
          JVALV = JCELV-1+ZI(JCELD-1+DECAL+NCELD2+NCELD3*(IEL-1)+4)
C         REMPLISSAGE EFFECTIF
          ZR(JVALV-1+1)  = ZR(JTABF+ZTABF*(IPC-1)+3)
          ZR(JVALV-1+2)  = ZR(JTABF+ZTABF*(IPC-1)+4)
          ZR(JVALV-1+3)  = ZR(JTABF+ZTABF*(IPC-1)+5)
          ZR(JVALV-1+4)  = ZR(JTABF+ZTABF*(IPC-1)+6)
          ZR(JVALV-1+5)  = ZR(JTABF+ZTABF*(IPC-1)+7)
          ZR(JVALV-1+6)  = ZR(JTABF+ZTABF*(IPC-1)+8)
          ZR(JVALV-1+7)  = ZR(JTABF+ZTABF*(IPC-1)+9)
          ZR(JVALV-1+8)  = ZR(JTABF+ZTABF*(IPC-1)+10)
          ZR(JVALV-1+9)  = ZR(JTABF+ZTABF*(IPC-1)+11)
          ZR(JVALV-1+10) = ZR(JTABF+ZTABF*(IPC-1)+12)
          ZR(JVALV-1+11) = ZR(JTABF+ZTABF*(IPC-1)+13)
          ZR(JVALV-1+12) = ZR(JTABF+ZTABF*(IPC-1)+14)
          ZR(JVALV-1+13) = ZR(JCMCF+ZCMCF*(IZONE-1)+2)
          ZR(JVALV-1+14) = ZR(JCMCF+ZCMCF*(IZONE-1)+3)
          ZR(JVALV-1+15) = ZR(JCMCF+ZCMCF*(IZONE-1)+4)
          ZR(JVALV-1+16) = NINT(ZR(JCMCF+ZCMCF*(IZONE-1)+5))
          ZR(JVALV-1+17) = ZR(JTABF+ZTABF*(IPC-1)+22)
          ZR(JVALV-1+18) = ZI(JECPD+ZECPD*(IZONE-1)+1)
          ZR(JVALV-1+19) = ZR(JTABF+ZTABF*(IPC-1)+16)
          ZR(JVALV-1+20) = DELTAT
          ZR(JVALV-1+21) = ZI(JECPD+ZECPD*(IZONE-1)+6)
          ZR(JVALV-1+22) = ZR(JTABF+ZTABF*(IPC-1)+17)
          ZR(JVALV-1+23) = ZR(JTABF+ZTABF*(IPC-1)+18)
          ZR(JVALV-1+24) = ZR(JTABF+ZTABF*(IPC-1)+19)
          ZR(JVALV-1+25) = ZR(JTABF+ZTABF*(IPC-1)+20)
          ZR(JVALV-1+26) = ZR(JTABF+ZTABF*(IPC-1)+21)
          ZR(JVALV-1+27) = NINT(ZR(JCMCF+ZCMCF* (IZONE-1)+7))
          ZR(JVALV-1+28) = ZR(JCMCF+ZCMCF*(IZONE-1)+8)
          ZR(JVALV-1+29) = ZR(JCMCF+ZCMCF*(IZONE-1)+9)
          ZR(JVALV-1+30) = ZR(JCMCF+ZCMCF*(IZONE-1)+10)
          IF (LTHETA) THEN
            ZR(JVALV-1+31) = THETA
          ELSE  
            ZR(JVALV-1+31) = BETA
          ENDIF  
          ZR(JVALV-1+32) = GAMMA
          ZR(JVALV-1+33) = ZR(JJSUP+IZONE-1)+ZR(JJPOU+IZONE-1)+
     &                     ZR(JJCOQ+IZONE-1)
          ZR(JVALV-1+34) = ZR(JTABF+ZTABF*(IPC-1)+23)
          ZR(JVALV-1+35) = ZR(JTABF+ZTABF*(IPC-1)+24)
          ZR(JVALV-1+36) = ZR(JTABF+ZTABF*(IPC-1)+25)
          ZR(JVALV-1+37) = ZR(JTABF+ZTABF*(IPC-1)+26)
          ZR(JVALV-1+38) = ZR(JTABF+ZTABF*(IPC-1)+27)
          ZR(JVALV-1+39) = ZR(JTABF+ZTABF*(IPC-1)+28)
          ZR(JVALV-1+40) = NINT(ZR(JCMCF+ZCMCF*(IZONE-1)+13))
          ZR(JVALV-1+41) = ZR(JCMCF+ZCMCF*(IZONE-1)+14)
          ZR(JVALV-1+42) = ZR(JCMCF+ZCMCF*(IZONE-1)+15)
          ZR(JVALV-1+43) = ZR(JTABF+ZTABF*(IPC-1)+29)
          ZR(JVALV-1+44) = NINT(ZR(JCMCF+ZCMCF*(IZONE-1)+16))
          ZR(JVALV-1+45) = ZR(JCMCF+ZCMCF*(IZONE-1)+17)
          ZR(JVALV-1+46) = ZR(JCMCF+ZCMCF*(IZONE-1)+18)
          ZR(JVALV-1+47) = NINT(ZR(JCMCF+ZCMCF*(IZONE-1)+19))
          ZR(JVALV-1+48) = ZR(JCMCF+ZCMCF*(IZONE-1)+20)
          ZR(JVALV-1+49) = ZR(JCMCF+ZCMCF*(IZONE-1)+21)
          ZR(JVALV-1+50) = NINT(ZR(JCMCF+ZCMCF*(IZONE-1)+22))
          IF (NIV.GE.2) THEN
            CALL MMIMP3(IFM,NOMA,LIGRCF,IPC,JVALV,JTABF,JJEU)
          ENDIF
  300   CONTINUE
        NTLIEL = NTLIEL + NBLIEL
  200 CONTINUE
      CALL ASSERT(NTLIEL.EQ.NTPC)

      CALL JEDEMA()      
      END
