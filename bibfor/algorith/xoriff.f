      SUBROUTINE XORIFF(INFO,NFON,JFONO,JBASO,JTAILO,NMAFON,LISTPT,
     &                  GOINOP,JFON,JBAS,JTAIL,FONMUL,NBFOND)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/04/2013   AUTEUR JAUBERT A.JAUBERT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT

      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER       NFON,JFONO,JBASO,JTAILO,NMAFON,JFON,JBAS,JTAIL
      INTEGER       NBFOND
      CHARACTER*19  INFO,LISTPT
      CHARACTER*24  FONMUL
      LOGICAL       GOINOP

C ----------------------------------------------------------------------
C       ORIENTATION DES POINTS DU FOND DE FISSURE DANS LE CADRE DE XFEM
C
C  ENTRESS :
C     INFO  :   NOM DU VECTEUR INFO DE LA SD
C     JFONO :   ADRESSE DES POINTS DU FOND DE FISSURE DÉSORDONNÉS
C     JBASO :   ADRESSE DES DIRECTIONS DE PROPAGATION DÉSORDONNÉES
C     JTAILO:   ADRESSE DES TAILLES MAXIMALES DE MAILLES DÉSORDONNÉES
C     NFON  :   NOMBRE DE POINTS DU FOND DE FISSURE DÉSORDONNÉS
C     LISTPT:   LISTE DES INDICES DES POINTS DU FOND DÉSORDONNÉS
C     GOINOP :  .TRUE.  SI  OPOO10 AVEC UPWIND-SIMPLEXE/GRILLE/3D
C               .FALSE. SINON

C  SORTIES :
C     JFON  :  ADRESSE DES POINTS DU FOND DE FISSURE ORDONNÉS
C     JBAS  :  ADRESSE DES DIRECTIONS DE PROPAGATION ORDONNÉES
C     JTAIL :  ADRESSE DES TAILLES MAXIMALES DE MAILLES ORDONNÉES
C     FONMUL:  VECTEUR CONTENANT LE DEBUT ET L'ARRIVEE DE
C              CHAQUE FOND DE FISSURE
C     NBFOND:  NOMBRE DE FONDS DE FISSURE
C
C     ------------------------------------------------------------------
C
      INTEGER         INDICE,INDICM,INDIPT,IMA,IPT,IPTEXT
      INTEGER         JFONMU,JINFO,JLISTP,JPTEXT,JTABPT,K,NBPTEX
      REAL*8          ABSC,M(3),P(3),PADIST
      CHARACTER*19    PTEXTR,TABPT,TYPFON

C ----------------------------------------------------------------------

      CALL JEMARQ()

C     RECHERCHE DES POINTS EXTREMITES DU FOND DE FISSURE
      IF (GOINOP) THEN
        CALL JEDETR(PTEXTR)
        CALL JEDETR(TABPT)
      ENDIF
      CALL JEVEUO(INFO,'L',JINFO)
      PTEXTR = '&&XORIFF.PTEXTR'
      CALL XFFEXT(JINFO,NFON,NMAFON,LISTPT,PTEXTR,NBPTEX)

      IF (ZK16(JINFO-1+3).EQ.'FERME') TYPFON = 'FERME'

      CALL JEVEUO(LISTPT,'L',JLISTP)
      CALL JEVEUO(PTEXTR,'L',JPTEXT)
      CALL JEVEUO(FONMUL,'L',JFONMU)

C     VECTEUR DES INDICES DES POINTS DU FOND ORDONNES
      TABPT = '&&XORIFF.TABPT'
      CALL WKVECT(TABPT,'V V I',NFON,JTABPT)

C     INDICE DU PREMIER POINT
      INDIPT = ZI(JPTEXT-1+1)
      ZI(JTABPT-1+1) = INDIPT
      ZI(JPTEXT-1+1) = 0
      ZI(JFONMU-1+1) = 1
      ZR(JFONO-1+11*(1-1)+4) = 0.D0

      NBFOND = 1

      DO 10 IPT=1,NFON-1
        DO 11 IMA=1,NMAFON

          IF (ZI(JLISTP-1+2*(IMA-1)+2).EQ.0) GOTO 11

C---      LE PREMIER INDICE CORRESPOND A CELUI RECHERCHE
          IF (ZI(JLISTP-1+2*(IMA-1)+1).EQ.ZI(JTABPT-1+IPT)) THEN
            IF (IPT.GT.2) THEN
              IF (ZI(JTABPT-1+IPT-2).EQ.ZI(JLISTP-1+2*(IMA-1)+2)) THEN
C               DOUBLON DANS LA LISTE
                ZI(JLISTP-1+2*(IMA-1)+2) = 0
                GOTO 11
              ENDIF
            ENDIF

            ZI(JTABPT-1+IPT+1) = ZI(JLISTP-1+2*(IMA-1)+2)
            ZI(JLISTP-1+2*(IMA-1)+2) = 0

C           CALCUL DE L'ABSCISSE CURVILIGNE
            INDIPT = ZI(JTABPT-1+IPT+1)
            INDICM = ZI(JTABPT-1+IPT)
            DO 700 K=1,3
              P(K)=ZR(JFONO-1+11*(INDIPT-1)+K)
              M(K)=ZR(JFONO-1+11*(INDICM-1)+K)
 700        CONTINUE
            ABSC = ZR(JFONO-1+11*(INDICM-1)+4)
            ZR(JFONO-1+11*(INDIPT-1)+4) = ABSC + PADIST(3,M,P)

C---      LE DEUXIEME INDICE CORRESPOND A CELUI RECHERCHE
          ELSEIF (ZI(JLISTP-1+2*(IMA-1)+2).EQ.ZI(JTABPT-1+IPT)) THEN
            IF (IPT.GT.2) THEN
              IF (ZI(JTABPT-1+IPT-2).EQ.ZI(JLISTP-1+2*(IMA-1)+1)) THEN
C               DOUBLON DANS LA LISTE
                ZI(JLISTP-1+2*(IMA-1)+2) = 0
                GOTO 11
              ENDIF
            ENDIF

            ZI(JTABPT-1+IPT+1) = ZI(JLISTP-1+2*(IMA-1)+1)
            ZI(JLISTP-1+2*(IMA-1)+2) = 0

C           CALCUL DE L'ABSCISSE CURVILIGNE
            INDIPT = ZI(JTABPT-1+IPT+1)
            INDICM = ZI(JTABPT-1+IPT)
            DO 800 K=1,3
              P(K)=ZR(JFONO-1+11*(INDIPT-1)+K)
              M(K)=ZR(JFONO-1+11*(INDICM-1)+K)
 800        CONTINUE
            ABSC = ZR(JFONO-1+11*(INDICM-1)+4)
            ZR(JFONO-1+11*(INDIPT-1)+4) = ABSC + PADIST(3,M,P)

          ENDIF
  11    CONTINUE

C       ON N'A PAS TROUVE DE POINT A ASSOCIER A IPT: C'EST UN POINT
C       EXTREMITE ( CAS DES FONDS MULTIPLES )
        IF (ZI(JTABPT-1+IPT+1).EQ.0) THEN

C         PRESENCE DE PLUSIEURS FONDS FERMES INTERDIT
          IF (TYPFON.EQ.'FERME') CALL U2MESS('F','XFEM_20')

          INDICE = 0

C         VERIFICATION QUE LE DERNIER POINT EST UNE EXTREMITE DU FOND
          DO 12 IPTEXT=1,NBPTEX
            IF (ZI(JPTEXT-1+IPTEXT).EQ.ZI(JTABPT-1+IPT)) THEN
              ZI(JFONMU-1+2*(NBFOND-1)+2) = IPT
              INDICE = 1
              GOTO 13
            ENDIF
  12      CONTINUE
  13      CONTINUE

          CALL ASSERT(INDICE.NE.0)
          ZI(JPTEXT-1+IPTEXT) = 0

C         RECHERCHE D'UN NOUVEAU POINT D'EXTREMITE POUR DEBUTER LE
C         NOUVEAU FOND DE FISSURE
          DO 14 IPTEXT=1,NBPTEX
            IF (ZI(JPTEXT-1+IPTEXT).NE.0) THEN

              INDIPT = ZI(JPTEXT-1+IPTEXT)
              ZI(JTABPT-1+IPT+1) = INDIPT

              ZR(JFONO-1+11*(INDIPT-1)+4) = 0.D0
              ZI(JPTEXT-1+IPTEXT) = 0
              NBFOND = NBFOND + 1
              ZI(JFONMU-1+2*(NBFOND-1)+1) = IPT+1

              GOTO 15
            ENDIF
  14      CONTINUE

C         PRESENCE DE FONDS OUVERTS ET DE FONDS FERMES INTERDIT
          CALL U2MESS('F','XFEM_21')

        ENDIF
  15    CONTINUE
  10    CONTINUE

      ZI(JFONMU-1+2*(NBFOND-1)+2) = NFON

      CALL U2MESI('I','XFEM_34',1,NBFOND)

C     ORDONNANCEMENT DE FONDFISS, DE BASEFOND ET DE FOND.TAILLE_R
      CALL XFFCR(NFON,JFONO,JBASO,JTAILO,JTABPT,TYPFON,JFON,JBAS,JTAIL)
C
      IF (GOINOP) THEN
        CALL JEDETR(PTEXTR)
        CALL JEDETR(TABPT)
      ENDIF
      CALL JEDEMA()
      END
