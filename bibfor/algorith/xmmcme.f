      SUBROUTINE XMMCME(NOMO  ,NOMA  ,DEPMOI,DEPDEL,RESOCO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 08/10/2007   AUTEUR NISTOR I.NISTOR 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C
      IMPLICIT NONE
      CHARACTER*8  NOMO  ,NOMA
      CHARACTER*24 DEPMOI,DEPDEL,RESOCO
C     
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (METHODE XFEM - CREATION OBJETS)
C
C CREATION DES OBJETS ELEMENTAIRES VECT_ELEM ET MATR_ELEM
C      
C ----------------------------------------------------------------------
C
C
C IN  DEPDEL : INCREMENT DE DEPLACEMENT CUMULE
C IN  DEPMOI : CHAM_NO DES DEPLACEMENTS A L'INSTANT PRECEDENT
C IN  NOMO   : NOM DE L'OBJET MODÈLE
C IN  NOMA   : NOM DE L'OBJET MAILLAGE 
C IN  RESOCO : SD CONTACT 
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      NBOUT,NBIN
      PARAMETER    (NBOUT=1, NBIN=13)
      CHARACTER*8  LPAOUT(NBOUT),LPAIN(NBIN)
      CHARACTER*19 LCHOUT(NBOUT),LCHIN(NBIN)
C
      CHARACTER*19 LIGRMO,CHGEOM,LNNO,LTNO
      CHARACTER*19 PINTER,AINTER,CFACE,FACLON,BASECO
      INTEGER      JLIMAT,JLIVEC
      CHARACTER*19 XDONCO,XINDCO,XSEUCO
      CHARACTER*24 MELEME
      INTEGER      JMELEM      
      CHARACTER*8  MCONEL,SCONEL        
      CHARACTER*16 OPTION
      LOGICAL      DEBUG
      INTEGER      IFM,NIV,IFMDBG,NIVDBG       
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('XFEM',IFM,NIV)
      CALL INFDBG('PRE_CALCUL',IFMDBG,NIVDBG)                 
C
C --- INITIALISATIONS
C 
      LIGRMO = NOMO(1:8)//'.MODELE'
      XINDCO = RESOCO(1:14)//'.XFIN'
      XDONCO = RESOCO(1:14)//'.XFDO'      
      XSEUCO = RESOCO(1:14)//'.XFSE'
      CHGEOM = NOMA(1:8)//'.COORDO'
      IF (NIVDBG.GE.2) THEN
        DEBUG  = .TRUE.
      ELSE
        DEBUG  = .FALSE.
      ENDIF 
C
C --- NOMS DES MATR_ELEM ET VECT_ELEM CONTACT
C      
      MELEME = RESOCO(1:14)//'.MELEM'
      CALL JEVEUO(MELEME,'L',JMELEM)
      MCONEL = ZK8(JMELEM+1-1)
      SCONEL = ZK8(JMELEM+2-1)         
C
C --- INITIALISATION DES CHAMPS POUR CALCUL
C
      CALL INICAL(NBIN  ,LPAIN ,LCHIN ,
     &            NBOUT ,LPAOUT,LCHOUT)     
C
C --- RECUPERATION DES DONNEES XFEM
C
      LNNO   = NOMO(1:8)//'.LNNO'     
      LTNO   = NOMO(1:8)//'.LTNO'
C      PINTER = NOMO(1:8)//'.TOPOFAC.PI'
      PINTER = NOMO(1:8)//'.TOPOFAC.OE'
      AINTER = NOMO(1:8)//'.TOPOFAC.AI'
      CFACE  = NOMO(1:8)//'.TOPOFAC.CF'
      FACLON = NOMO(1:8)//'.TOPOFAC.LO'
      BASECO = NOMO(1:8)//'.TOPOFAC.BA'
C       
C --- CREATION DES LISTES DES CHAMPS IN
C
      LPAIN(1)  = 'PGEOMER'
      LCHIN(1)  = CHGEOM
      LPAIN(2)  = 'PDEPL_M'
      LCHIN(2)  = DEPMOI
      LPAIN(3)  = 'PDEPL_P'
      LCHIN(3)  = DEPDEL
      LPAIN(4)  = 'PINDCOI'
      LCHIN(4)  = XINDCO
      LPAIN(5)  = 'PDONCO'
      LCHIN(5)  = XDONCO
      LPAIN(6)  = 'PLSN'
      LCHIN(6)  = LNNO
      LPAIN(7)  = 'PLST'
      LCHIN(7)  = LTNO
      LPAIN(8)  = 'PPINTER'
      LCHIN(8)  = PINTER
      LPAIN(9)  = 'PAINTER'
      LCHIN(9)  = AINTER
      LPAIN(10) = 'PCFACE'
      LCHIN(10) = CFACE
      LPAIN(11) = 'PLONCHA'
      LCHIN(11) = FACLON
      LPAIN(12) = 'PBASECO'
      LCHIN(12) = BASECO
      LPAIN(13) = 'PSEUIL'
      LCHIN(13) = XSEUCO    
C      
C --- PREPARATION DES MATR_ELEM
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<XFEM  > CREATION DES MATR_ELEM' 
      ENDIF 
      CALL DETRSD('MATR_ELEM',MCONEL) 
      CALL MEMARE('V',MCONEL(1:8),NOMO,' ',' ','RIGI_MECA')
      CALL WKVECT(MCONEL(1:8)//'.LISTE_RESU','V V K24',2,JLIMAT)    
C
C --- CALCUL DE MCONEL : PARTIE CONTACT
C 
      OPTION    = 'RIGI_CONT'
      LPAOUT(1) = 'PMATUUR'
      LCHOUT(1) = MCONEL(1:8)//'.ME001'
C   
      CALL CALCUL('S',OPTION,LIGRMO,NBIN  ,LCHIN ,LPAIN,
     &                              NBOUT ,LCHOUT,LPAOUT,'V')
C
      IF (DEBUG) THEN
        CALL DBGCAL(OPTION,IFMDBG,
     &              NBIN  ,LPAIN ,LCHIN ,
     &              NBOUT ,LPAOUT,LCHOUT)
      ENDIF 
C      
      ZK24(JLIMAT-1+1) = LCHOUT(1)
C
C --- CALCUL DE MCONEL : PARTIE FROTTEMENT
C
      OPTION    = 'RIGI_FROT'
      LPAOUT(1) = 'PMATUUR'
      LCHOUT(1) = MCONEL(1:8)//'.ME002'
      CALL CALCUL('S',OPTION,LIGRMO,NBIN  ,LCHIN ,LPAIN,
     &                              NBOUT ,LCHOUT,LPAOUT,'V')  
C
      IF (DEBUG) THEN
        CALL DBGCAL(OPTION,IFMDBG,
     &              NBIN  ,LPAIN ,LCHIN ,
     &              NBOUT ,LPAOUT,LCHOUT)
      ENDIF 
C      
      ZK24(JLIMAT-1+2) = LCHOUT(1)
C      
C --- PREPARATION DES VECT_ELEM
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<XFEM  > CREATION DES VECT_ELEM' 
      ENDIF 
      CALL DETRSD('VECT_ELEM',SCONEL)
      CALL MEMARE('V',SCONEL(1:8),NOMO,' ',' ','CHAR_MECA')
      CALL WKVECT(SCONEL(1:8)//'.LISTE_RESU','V V K24',2,JLIVEC)      
C
C --- CALCUL DE SCONEL : PARTIE CONTACT
C 
      OPTION    = 'CHAR_MECA_CONT'
      LPAOUT(1) = 'PVECTUR'
      LCHOUT(1) = SCONEL(1:8)//'.VE001'
C 
      CALL CALCUL('S',OPTION,LIGRMO,NBIN  ,LCHIN ,LPAIN,
     &                              NBOUT ,LCHOUT,LPAOUT,'V')
C
      IF (DEBUG) THEN
        CALL DBGCAL(OPTION,IFMDBG,
     &              NBIN  ,LPAIN ,LCHIN ,
     &              NBOUT ,LPAOUT,LCHOUT)
      ENDIF
C            
      ZK24(JLIVEC-1+1) = LCHOUT(1)
C
C --- CALCUL DE SCONEL : PARTIE FROTTEMENT
C 
      OPTION    = 'CHAR_MECA_FROT'
      LPAOUT(1) = 'PVECTUR'
      LCHOUT(1) = SCONEL(1:8)//'.VE002'
C
      CALL CALCUL('S',OPTION,LIGRMO,NBIN  ,LCHIN ,LPAIN,
     &                              NBOUT ,LCHOUT,LPAOUT,'V')
C
      IF (DEBUG) THEN
        CALL DBGCAL(OPTION,IFMDBG,
     &              NBIN  ,LPAIN ,LCHIN ,
     &              NBOUT ,LPAOUT,LCHOUT)
      ENDIF
C        
      ZK24(JLIVEC-1+2) = LCHOUT(1)
C
      CALL JEDEMA()
      END
