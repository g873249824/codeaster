      SUBROUTINE NMTBLE(NIVEAU, 
     &                  NUMINS,MODELE,NOMA  ,DEFICO,RESOCO,
     &                  FONACT,SDDISC,MAXREL,SDIMPR,SDTIME,
     &                  NUMEDD,VALMOI,VALPLU,SOLALG)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 08/06/2009   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      INTEGER      NIVEAU,NUMINS
      CHARACTER*8  NOMA
      CHARACTER*24 DEFICO,RESOCO,SDIMPR,SDTIME,NUMEDD
      CHARACTER*24 MODELE,VALMOI(8),VALPLU(8)
      CHARACTER*19 SDDISC,SOLALG(*)      
      LOGICAL      MAXREL,FONACT(*)   
C       
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C ROUTINE D'AIGUILLAGE DES ITERATIONS SE SITUANT ENTRE LES PAS DE TEMPS
C ET L'EQUILIBRE
C      
C ----------------------------------------------------------------------
C
C POUR LE MOMENT, SERT A LA METHODE CONTINUE DE CONTACT
C
C
C LES ITERATIONS ONT LIEU ENTRE CETTE ROUTINE ET SA COUSINE 
C (NMIBLE) QUI COMMUNIQUENT PAR LA VARIABLE NIVEAU
C
C IN  NIVEAU : INDICATEUR D'UTILISATION DE LA BOUCLE 
C                 -1     ON N'UTILISE PAS CETTE BOUCLE
C                  4     BOUCLE CONTACT METHODE CONTINUE
C                         INITIALISATION 
C                  3     BOUCLE CONTACT METHODE CONTINUE
C                         BOUCLE GEOMETRIE
C                  2     BOUCLE CONTACT METHODE CONTINUE
C                         BOUCLE SEUILS DE FROTTEMENT
C                  1     BOUCLE CONTACT METHODE CONTINUE
C                         BOUCLE CONTRAINTES ACTIVES
C IN  MODELE : NOM DU MODELE
C IN  NOMA   : NOM DU MAILLAGE
C IN  NUMINS : NUMERO D'INSTANT
C IN  NUMEDD : NUME_DDL
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  RESOCO : SD POUR LA RESOLUTION DE CONTACT
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  SDIMPR : SD AFFICHAGE
C IN  SDTIME : SD TIMER
C IN  VALMOI : VARIABLE CHAPEAU POUR ETAT EN T-
C IN  VALPLU : VARIABLE CHAPEAU POUR ETAT EN T+
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  MAXREL : .TRUE. SI CRITERE RESI_GLOB_RELA ET CHARGEMENT = 0,
C                     ON UTILISE RESI_GLOB_MAXI
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C 
      LOGICAL      MMCVCA,MMCVFR,MMCVGO
      LOGICAL      CTCGEO
      CHARACTER*8  NOMO
      CHARACTER*24 K24BLA,K24BID
      REAL*8       R8BID,DIINST,INSTAN
      INTEGER      IBID,INCR
      CHARACTER*24 CLREAC
      INTEGER      JCLREA
      LOGICAL      ISFONC,LCTFC,LCTCC,LCTCD,LXFCM,LTFCM             
C
C ----------------------------------------------------------------------
C
      NOMO   = MODELE   
      K24BLA = ' ' 
      INSTAN = DIINST(SDDISC,NUMINS)        
      INCR   = 1    
C       
      IF (NIVEAU.LT.0) THEN 
        GOTO 9999
      ENDIF
C
C --- INFOS SUR LE CONTACT
C
      LCTCC  = ISFONC(FONACT,'CONT_CONTINU') 
      LCTCD  = ISFONC(FONACT,'CONT_DISCRET')
      LCTFC  = ISFONC(FONACT,'FROT_CONTINU')           
      LXFCM  = ISFONC(FONACT,'CONT_XFEM') 
      LTFCM  = .FALSE.
      IF (LXFCM) THEN
        CALL MMINFP(0    ,DEFICO,K24BLA,'XFEM_GG',
     &              IBID ,R8BID ,K24BID,LTFCM)
      ENDIF                
C      
      GO TO (101,102,103) NIVEAU
C
C --- NIVEAU: 1   BOUCLE CONTACT METHODE CONTINUE
C ---             BOUCLE CONTRAINTES ACTIVES
C
 101  CONTINUE
C
C --- CALCUL STATUTS DU CONTACT
C
      IF (LXFCM) THEN
        IF (LTFCM) THEN
          CALL XMTBCA(NOMA  ,NOMO  ,DEFICO,RESOCO,VALMOI,
     &                VALPLU,MMCVCA)
        ELSE
          CALL XMMBCA(NOMA  ,NOMO  ,DEFICO,RESOCO,VALMOI,
     &                VALPLU,MMCVCA)
        ENDIF
      ELSEIF (LCTCC) THEN
        CALL MMMBCA(NOMA  ,DEFICO,RESOCO,INSTAN,VALPLU,
     &              MMCVCA)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
      CALL CFITER(RESOCO,'E','CONT',INCR  ,R8BID)
      CALL MMCONV(NIVEAU,DEFICO,RESOCO,SDIMPR,VALPLU,
     &            MAXREL,LXFCM ,LTFCM ,LCTFC ,MMCVCA,      
     &            MMCVFR,MMCVGO)
     
      IF (.NOT.MMCVCA) THEN
        NIVEAU = 1
        GOTO 999      
      ENDIF      
C
C --- NIVEAU: 2   BOUCLE CONTACT METHODE CONTINUE
C ---             BOUCLE SEUILS DE FROTTEMENT
C
 102  CONTINUE

      IF (.NOT.LCTFC) THEN 
        GOTO 103
      ENDIF
      
      NIVEAU = 2
C
C --- CALCUL SEUILS DE FROTTEMENT
C
      IF (LXFCM) THEN      
        IF (LTFCM) THEN
          CALL XTREAC(NOMA  ,NOMO  ,VALPLU,DEFICO,RESOCO)
        ELSE
          CALL XREACL(NOMA  ,NOMO  ,VALPLU,DEFICO,RESOCO) 
        ENDIF
      ELSE
        CALL REACLM(NOMA  ,DEFICO,RESOCO,VALPLU)      
      ENDIF
C     
      CALL CFITER(RESOCO,'E','FROT',INCR  ,R8BID)  
      CALL MMCONV(NIVEAU,DEFICO,RESOCO,SDIMPR,VALPLU,
     &            MAXREL,LXFCM ,LTFCM ,LCTFC ,MMCVCA,       
     &            MMCVFR,MMCVGO)
      
        
      IF (.NOT.MMCVFR) THEN   
        NIVEAU = 2
        GOTO 999      
      ENDIF     
C
C --- NIVEAU: 3   BOUCLE CONTACT METHODE CONTINUE
C ---             BOUCLE GEOMETRIE
C
 103  CONTINUE
C
      NIVEAU = 3
C
      IF (LCTCC.OR.LXFCM) THEN 
        CALL MMCONV(NIVEAU,DEFICO,RESOCO,SDIMPR,VALPLU,
     &              MAXREL,LXFCM ,LTFCM ,LCTFC ,MMCVCA,       
     &              MMCVFR,MMCVGO)
        IF (MMCVGO) THEN 
          NIVEAU = 0
          GOTO 9999     
        ELSE 
          NIVEAU = 3     
        ENDIF      
      ELSEIF (LCTCD) THEN  
        CLREAC = RESOCO(1:14)//'.REAL'             
        CALL JEVEUO(CLREAC,'L',JCLREA)      
        CTCGEO = ZL(JCLREA+4-1)            
        IF (CTCGEO) THEN        
          NIVEAU = 0
          CALL NMIMPR('IMPR','CNV_GEOME',' ',0.D0,0)
          IF (MAXREL) THEN
            CALL NMCVGI('CVG_MX') 
          ELSE
            CALL NMCVGI('CVG_OK') 
          ENDIF
          GOTO 9999     
        ELSE
       
          NIVEAU = 3     
        ENDIF       
      ENDIF     
C
 999  CONTINUE  
C
C --- AFFICHAGE TABLEAU CONVERGENCE
C
      CALL IMPSDM(SDIMPR,'ITER_NEWT',' ')
      CALL NMIMPR('IMPR','LIGN_TABL',' ',0.D0,0)    
      CALL NMIMPR('IMPR','LIGNE    ',' ',0.D0,0)     
C
 9999 CONTINUE     
C

      END
