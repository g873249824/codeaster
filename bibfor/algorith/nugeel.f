      SUBROUTINE NUGEEL(NUGENE,MODGEN)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 21/06/2010   AUTEUR CORUS M.CORUS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C-----------------------------------------------------------------------
C    M.CORUS     DATE 23/02/10
C-----------------------------------------------------------------------
C  BUT:      < NUMEROTATION GENERALISEE AVEC ELIMINATION>
C
C  ON REMPLIT LE NUME_DDL COMME S'IL N'Y AVAIT QU'UNE SEULE SOUS 
C  STRUCTURE. LES INFOS POUR LA RESTITUTION SONT DANS
C     SELIAI   : MATRICE DE PROJECTION
C     SIZLIA  : NB DE DDL POUR CHAQUE SOUS STRUCTURE
C     SST      : NOMS DES SOUS STRUCTURES, DANS L'ORDRE D'ASSEMBLAGE
C
C      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT NONE
C
C  DETERMINER LA NUMEROTATION DES DEGRES DE LIBERTE GENERALISES
C   A PARTIR D'UN MODELE GENERALISE
C
C-----------------------------------------------------------------------
C
C NUGENE   /I/: NOM K14 DU NUME_DDL_GENE
C MODGEN   /I/: NOM K8 DU MODELE GENERALISE
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32 JEXNUM,JEXNOM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      INTEGER      LDDELG,NINDEP,NBDDL
      CHARACTER*6  PGC
      CHARACTER*8  MODGEN,NOMCOU,SST1,SST2,KBID
      CHARACTER*14 NUGENE
      CHARACTER*19 PRGENE
      CHARACTER*24 DEFLI,NOMSST,SIZLIA,SST
      CHARACTER*24 VALK,SELIAI,REPSST,NOMMCL
      LOGICAL      ASSOK,PBCONE
      CHARACTER*8  BID
C
      CHARACTER*1 K8BID
C
C---------- VARIABLES PERSOS -------------------------------------------
C

      INTEGER NEQLIA,NLIB,LSILIA,LSST,
     &        INDSST,I,J,I1,J1,K1,L1,M1,N1,IBID,JREFN,LDDESC,IMES,
     &        NBLIA,NBSST,ICOMP,LDPRS,LDORS,LDNEQU,LDDEEQ,LDNUEQ,
     &        LTSSNB,LTLIA,NULIA,NUSST1,NUSST2,NUSST,LTSST,LLDEFL,
     &        IUNIFI

C
C-----------------------------------------------------------------------
      DATA PGC/'NUMGEN'/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
      IMES=IUNIFI('MESSAGE')
C
C-----------------------------------------------------------------------
C
      DEFLI=MODGEN//'      .MODG.LIDF'
      NOMSST=MODGEN//'      .MODG.SSNO'
C
C--------------------CREATION DU .REFN----------------------------------
C                       ET DU DESC
      PRGENE=NUGENE//'.NUME'
      CALL WKVECT(PRGENE//'.REFN','G V K24',4,JREFN)
      ZK24(JREFN)=MODGEN
      ZK24(JREFN+1)='DEPL_R'
C
C--  CONSTRUCTION D'UN MODELE GENE BIDONS POUR AUTORISER 
C--  LA RECHERCHE DE MODES RIGIDES (OPTION='MODE_RIGIDE'
C--  DANS MODE_ITER_SIMULT)
C
      CALL WKVECT(PRGENE//'.DESC','G V I',1,LDDESC)
      ZI(LDDESC)=2

C
C---------------------------DECLARATION JEVEUX--------------------------
C
      CALL JECREO(PRGENE//'.LILI','G N K8')
C      CALL JEECRA(PRGENE//'.LILI','NOMMAX',2,K8BID)
      CALL JEECRA(PRGENE//'.LILI','NOMMAX',1,K8BID)
      
      CALL JECROC(JEXNOM(PRGENE//'.LILI','&SOUSSTR'))
C      CALL JECROC(JEXNOM(PRGENE//'.LILI','LIAISONS'))
C

C      CALL JECREC(PRGENE//'.PRNO','G V I','NU','DISPERSE','VARIABLE',2)
C      CALL JECREC(PRGENE//'.ORIG','G V I','NU','DISPERSE','VARIABLE',2)
      CALL JECREC(PRGENE//'.PRNO','G V I','NU','DISPERSE','VARIABLE',1)
      CALL JECREC(PRGENE//'.ORIG','G V I','NU','DISPERSE','VARIABLE',1)


C
C----------------------RECUPERATION DES DIMENSIONS PRINCIPALES----------
C
      CALL JELIRA(DEFLI,'NMAXOC',NBLIA,BID)
      CALL JELIRA(NOMSST,'NOMMAX',NBSST,BID)
C
C-----------------------------ECRITURE DIMENSIONS-----------------------
C
      CALL JENONU(JEXNOM(PRGENE//'.LILI','&SOUSSTR'),IBID)
C      CALL JEECRA(JEXNUM(PRGENE//'.PRNO',IBID),'LONMAX',NBSST*2,' ')
      CALL JEECRA(JEXNUM(PRGENE//'.PRNO',IBID),'LONMAX',2,' ')

C      CALL JENONU(JEXNOM(PRGENE//'.LILI','LIAISONS'),IBID)
C      CALL JEECRA(JEXNUM(PRGENE//'.PRNO',IBID),'LONMAX',1,' ')

      CALL JENONU(JEXNOM(PRGENE//'.LILI','&SOUSSTR'),IBID)
C      CALL JEECRA(JEXNUM(PRGENE//'.ORIG',IBID),'LONMAX',NBSST,' ')
      CALL JEECRA(JEXNUM(PRGENE//'.ORIG',IBID),'LONMAX',1,' ')

C      CALL JENONU(JEXNOM(PRGENE//'.LILI','LIAISONS'),IBID)
C      CALL JEECRA(JEXNUM(PRGENE//'.ORIG',IBID),'LONMAX',1,' ')


C      
C----------------------------------------------------------------C
C--                                                            --C
C--  CONSTRUCTION D'UNE MATRICE REGROUPANT TOUTES LES LIAISONS --C
C--      ET TEST DE l'INDEPENDANCE DES RELATIONS LINEAIRES     --C
C--                                                            --C
C----------------------------------------------------------------C

C      SELIAI= '&&'//NUGENE(1:8)//'PROJ_EQ_LIAI'
C      SIZLIA='&&'//NUGENE(1:8)//'VECT_SIZE_SS'
C      SST=    '&&'//NUGENE(1:8)//'VECT_NOM_SS'
      SELIAI=NUGENE(1:14)//'.ELIM.BASE'
      SIZLIA=NUGENE(1:14)//'.ELIM.TAIL'
      SST=   NUGENE(1:14)//'.ELIM.NOMS'

      CALL INDLIA(MODGEN,SELIAI,NINDEP,NBDDL,SST,SIZLIA)
C
C----------------------BOUCLES DE COMPTAGE DES DDL----------------------
C
      ICOMP=0
C
C   BOUCLE SUR LES SOUS-STRUCTURES
C
      CALL JENONU(JEXNOM(PRGENE//'.LILI','&SOUSSTR'),IBID)
      CALL JEVEUO(JEXNUM(PRGENE//'.PRNO',IBID),'E',LDPRS)
      CALL JENONU(JEXNOM(PRGENE//'.LILI','&SOUSSTR'),IBID)
      CALL JEVEUO(JEXNUM(PRGENE//'.ORIG',IBID),'E',LDORS)

      CALL JEVEUO(SIZLIA,'L',LSILIA)
      CALL JEVEUO(SST,'L',LSST)
      
      ZI(LDORS)=1
      ZI(LDPRS)=1
      ZI(LDPRS+1)=NINDEP

      WRITE (IMES,*)'+++ NOMBRE DE SOUS-STRUSTURES: ',NBSST
      WRITE (IMES,*)'+++ NOMBRE DE LIAISONS: ',NBLIA


      CALL WKVECT(PRGENE//'.NEQU','G V I',1,LDNEQU)
      ZI(LDNEQU)=NINDEP

      
C
C------------------------ALLOCATIONS DIVERSES---------------------------
C
      CALL WKVECT(PRGENE//'.DEEQ','G V I',NINDEP*2,LDDEEQ)
     
      CALL WKVECT(PRGENE//'.NUEQ','G V I',NINDEP,LDNUEQ)
      CALL WKVECT(PRGENE//'.DELG','G V I',NINDEP,LDDELG)
      DO 20 I1=1,NINDEP
        ZI(LDNUEQ+I1-1)=I1
        ZI(LDDELG+I1-1)=0 
  20  CONTINUE    
C
      CALL WKVECT('&&'//PGC//'.SST.NBLIA','V V I',NBSST,LTSSNB)
      
      CALL WKVECT('&&'//PGC//'.LIA.SST','V V I',NBLIA*2,LTLIA)
      CALL JECREC('&&'//PGC//'.SST.LIA','V V I','NU','DISPERSE',
     &            'CONSTANT',NBSST)
      CALL JEECRA('&&'//PGC//'.SST.LIA','LONMAX',2*NBLIA,' ')
      
C
C   BOUCLE DE DETERMINATION DE LA RELATION
C   NUMERO TARDIF  LIAISON --> NUMERO SOUS-STRUCTURE DE PLUS PETIT
C                              NUMERO
C
C   ON CONSERVE POUR DETECTER LES SOUS STRUCTURES NON CONNECTEES
C

      DO 30 I1=1,NBLIA*2
        NULIA=INT((I1-1)/2)+1
        CALL JEVEUO(JEXNUM(DEFLI,NULIA),'L',LLDEFL)
        SST1=ZK8(LLDEFL)
        SST2=ZK8(LLDEFL+2)        
        CALL JENONU(JEXNOM(NOMSST,SST1),NUSST1)
        CALL JENONU(JEXNOM(NOMSST,SST2),NUSST2)

        ZI(LTSSNB+NUSST1-1)=1
        ZI(LTSSNB+NUSST2-1)=1
        ZI(LTLIA+I1-1)=MAX(NUSST1,NUSST2)
   30 CONTINUE 
C
C   BOUCLE PERMETTANT DE DETERMINER L'INVERSE
C   NUMERO TARDIF  SOUS-STRUCTURE --> NUMEROS TARDIF LIAISONS
C                     DONT ELLE EST LA STRUCTURE DE PLUS PETIT NUMERO
C
C   ET POUR DETECTER LES SOUS-STRUCTURES NON CONNECTEES
C
      PBCONE=.FALSE.
      DO 50 I1=1,NBSST
        ICOMP=0
        CALL JENONU(JEXNOM(NOMSST,ZK8(LSST+I1-1)),NUSST)
        IF (ZI(LTSSNB+NUSST-1).EQ.0) THEN
          PBCONE=.TRUE.
          CALL JENUNO(JEXNUM(NOMSST,NUSST),SST1)
          VALK=SST1
          CALL U2MESG('E','ALGORITH13_75',1,VALK,0,0,0,0.D0)
        ENDIF
        CALL JECROC(JEXNUM('&&'//PGC//'.SST.LIA',I1))
        CALL JEVEUO(JEXNUM('&&'//PGC//'.SST.LIA',I1),'E',LTSST)
        DO 40 J1=1,NBLIA*2
          IF (ZI(LTLIA+J1-1).EQ.NUSST) THEN
            ICOMP=ICOMP+1
            ZI(LTSST+ICOMP-1)=J1
          ENDIF
   40   CONTINUE
   50 CONTINUE
C
      IF (PBCONE) THEN
        CALL U2MESG('F','ALGORITH13_76',0,' ',0,0,0,0.D0)
      ENDIF
C
      CALL JEDETR('&&'//PGC//'.LIA.SST')
      CALL JEDETR('&&'//PGC//'.SST.NBLIA')     

C--------------------REMPLISSAGE DES NUMERO D'EQUATION-----------------
C
C
      DO 120 I1=1,NINDEP
        ZI(LDDEEQ+(I1-1)*2)=I1
        ZI(LDDEEQ+(I1-1)*2+1)=1
  120 CONTINUE    

      CALL JEDEMA()
      END
