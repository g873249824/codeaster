      SUBROUTINE NMPRAC(FONACT,LISCHA,NUMEDD,NUMFIX,SOLVEU,
     &                  SDDYNA,SDSTAT,SDTIME,DEFICO,RESOCO,
     &                  MEELEM,MEASSE,MAPREC,MATASS,FACCVG)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/02/2013   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      INTEGER       FONACT(*)
      CHARACTER*19  SDDYNA,LISCHA
      CHARACTER*24  SDSTAT,SDTIME
      CHARACTER*24  NUMEDD,NUMFIX
      CHARACTER*19  SOLVEU
      CHARACTER*19  MEELEM(*),MEASSE(*)
      CHARACTER*24  DEFICO,RESOCO
      CHARACTER*19  MAPREC,MATASS
      INTEGER       FACCVG
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL - UTILITAIRE)
C
C CALCUL DE LA MATRICE GLOBALE ACCELERATION INITIALE
C
C ----------------------------------------------------------------------
C
C
C IN  NUMEDD : NUME_DDL (VARIABLE AU COURS DU CALCUL)
C IN  NUMFIX : NUME_DDL (FIXE AU COURS DU CALCUL)
C IN  LISCHA : LISTE DES CHARGES
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  DEFICO : SD DEFINITION CONTACT
C IN  SDTIME : SD TIMER
C IN  SDSTAT : SD STATISTIQUES
C IN  SDDYNA : SD POUR LA DYNAMIQUE
C IN  SOLVEU : SOLVEUR
C IN  MEELEM : VARIABLE CHAPEAU POUR NOM DES MATR_ELEM
C IN  MEASSE : VARIABLE CHAPEAU POUR NOM DES MATR_ASSE
C OUT MATASS : MATRICE DE RESOLUTION ASSEMBLEE
C OUT MAPREC : MATRICE DE RESOLUTION ASSEMBLEE - PRECONDITIONNEMENT
C OUT FACCVG : CODE RETOUR (INDIQUE SI LA MATRICE EST SINGULIERE)
C                   O -> MATRICE INVERSIBLE
C                   1 -> MATRICE SINGULIERE
C                   2 -> MATRICE PRESQUE SINGULIERE
C                   3 -> ON NE SAIT PAS SI LA MATRICE EST SINGULIERE
C
C ----------------------------------------------------------------------
C
      LOGICAL      ISFONC,LCTCC
      INTEGER      IEQ,IRET,IBID,NUMINS
      INTEGER      IADIA,NEQ,LRES,NEQL
      CHARACTER*8  K8BID,KMATD
      INTEGER      JVALM,ISLVI,ZISLV1,ZISLV3
      INTEGER      IFM,NIV
      CHARACTER*16 OPTASS
      CHARACTER*19 MASSE
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... CALCUL MATRICE'
      ENDIF
C
C --- INITIALISATIONS
C
      FACCVG = -1
      NUMINS = 1
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ  ,K8BID,IRET)
C
C --- FONCTIONNALITES ACTIVEES
C
      LCTCC  = ISFONC(FONACT,'CONT_CONTINU')
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(MEASSE,'MEASSE','MEMASS',MASSE )
C
C --- ASSEMBLAGE DE LA MATRICE MASSE
C
      OPTASS = 'AVEC_DIRICHLET'
      CALL NMASSM(FONACT  ,LISCHA,SOLVEU,NUMEDD,NUMFIX,
     &            'MEMASS',OPTASS,MEELEM,MASSE )
C
C --- CALCUL DE LA MATRICE ASSEMBLEE GLOBALE
C
      CALL NMMATR('ACCEL_INIT',
     &            FONACT,LISCHA,SOLVEU,NUMEDD,SDDYNA,
     &            NUMINS,DEFICO,RESOCO,MEELEM,MEASSE,
     &            MATASS)
C
C --- SI METHODE CONTINUE ON REMPLACE LES TERMES DIAGONAUX NULS PAR
C --- DES UNS POUR POUVOIR INVERSER LA MATRICE ASSEMBLE MATASS
C
      IF (LCTCC) THEN
        CALL MTDSC2(MATASS,'SXDI','L',IADIA)
        CALL DISMOI('F','MATR_DISTR',MATASS,'MATR_ASSE',IBID,
     &              KMATD,IBID)
        IF ( KMATD.EQ.'OUI' ) THEN
          CALL JEVEUO(MATASS//'.&INT','L',LRES)
          NEQL = ZI(LRES+5)
        ELSE
          NEQL = NEQ
        ENDIF
        CALL JEVEUO(JEXNUM(MATASS//'.VALM',1),'E',JVALM)
        DO 10 IEQ = 1,NEQL
         IF (ZR(JVALM-1+ZI(IADIA-1+IEQ)) .EQ. 0.D0) THEN
             ZR(JVALM-1+ZI(IADIA-1+IEQ)) = 1.D0
         ENDIF
10      CONTINUE
      ENDIF
C
C --- ON ACTIVE LA DETECTION DE SINGULARITE (NPREC=8)
C --- ON EVITE L'ARRET FATAL LORS DE L'INVERSION DE LA MATRICE
C
      CALL JEVEUO(SOLVEU//'.SLVI','E',ISLVI)
      ZISLV1        = ZI(ISLVI-1+1)
      ZISLV3        = ZI(ISLVI-1+3)
      ZI(ISLVI-1+1) = 8
      ZI(ISLVI-1+3) = 2
C
C --- FACTORISATION DE LA MATRICE ASSEMBLEE GLOBALE
C
      CALL NMTIME(SDTIME,'INI','FACTOR')
      CALL NMTIME(SDTIME,'RUN','FACTOR')
      CALL PRERES(SOLVEU,'V',FACCVG,MAPREC,MATASS,IBID,-9999)
      CALL NMTIME(SDTIME,'END','FACTOR')
      CALL NMRINC(SDSTAT,'FACTOR')
C
C --- RETABLISSEMENT CODE
C
      ZI(ISLVI-1+1) = ZISLV1
      ZI(ISLVI-1+3) = ZISLV3
C
C --- LA MATRICE PEUT ETRE QUASI-SINGULIERE PAR EXEMPLE POUR LES DKT
C
      IF (FACCVG.EQ.1) THEN
        CALL U2MESS('A','MECANONLINE_78')
      ENDIF
C
      CALL JEDEMA()
C
      END
