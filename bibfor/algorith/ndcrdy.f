       SUBROUTINE NDCRDY(RESULT,SDDYNA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/08/2011   AUTEUR MACOCCO K.MACOCCO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8   RESULT
      CHARACTER*19  SDDYNA
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (STRUCTURES DE DONNEES)
C
C CREATION SDDYNA (DYNAMIQUE)
C      
C ----------------------------------------------------------------------
C
C
C IN  RESULT : NOM DU CONCEPT RESULTAT
C IN  SDSYNA : SD DYNAMIQUE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      CHARACTER*24  TSCH ,PSCH ,LOSD ,NOSD ,TFOR ,CFSC 
      INTEGER       JTSCH,JPSCH,JLOSD,JNOSD,JTFOR,JCFSC 
      CHARACTER*24  TCHA ,NCHA ,EXPL ,VEOL ,VAOL 
      INTEGER       JTCHA,JNCHA,JEXPL,JVEOL,JVAOL 
      CHARACTER*24  VECENT,VECABS
      INTEGER       JVECEN,JVECAB      
      INTEGER       IFM,NIV 
      CHARACTER*16  K16BID,NOMCMD
      CHARACTER*8   K8BID
C      
C ----------------------------------------------------------------------
C      
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- OPERATEUR APPELANT (STATIQUE OU DYNAMIQUE)
C      
      CALL GETRES(K8BID ,K16BID,NOMCMD)  
C      
C --- INITIALISATIONS 
C
      SDDYNA = RESULT(1:8)//'.SDDYNA'  
C
C --- OBJET PRINCIPAL
C
      TSCH = SDDYNA(1:15)//'.TYPE_SCH'
      CALL WKVECT(TSCH,'V V K16',9,JTSCH)
C      
      IF (NOMCMD(1:4).EQ.'STAT') THEN
        ZK16(JTSCH+1-1) = 'STATIQUE'
        GOTO 999
      ELSE
        ZK16(JTSCH+1-1) = 'DYNAMIQUE'  
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ... CREATION SD DYNAMIQUE' 
        ENDIF      
      ENDIF               
C
C --- DEFINITION ET CREATION DES AUTRES OBJETS DE LA SD SDDYNA
C
      PSCH   = SDDYNA(1:15)//'.PARA_SCH'
      LOSD   = SDDYNA(1:15)//'.INFO_SD'
      NOSD   = SDDYNA(1:15)//'.NOM_SD'
      TFOR   = SDDYNA(1:15)//'.TYPE_FOR'
      CFSC   = SDDYNA(1:15)//'.COEF_SCH'
      TCHA   = SDDYNA(1:15)//'.TYPE_CHA'
      NCHA   = SDDYNA(1:15)//'.NBRE_CHA'
      EXPL   = SDDYNA(1:15)//'.EXPL_MOD'
      VEOL   = SDDYNA(1:15)//'.VEEL_OLD'  
      VAOL   = SDDYNA(1:15)//'.VEAS_OLD'
      VECENT = SDDYNA(1:15)//'.VECENT'
      VECABS = SDDYNA(1:15)//'.VECABS'
C
      CALL WKVECT(PSCH  ,'V V R'  ,6 ,JPSCH )
      CALL WKVECT(LOSD  ,'V V L'  ,14,JLOSD )
      CALL WKVECT(NOSD  ,'V V K24',4 ,JNOSD )    
      CALL WKVECT(TFOR  ,'V V I'  ,2 ,JTFOR )
      CALL WKVECT(CFSC  ,'V V R'  ,23,JCFSC ) 
      CALL WKVECT(TCHA  ,'V V K24',4 ,JTCHA ) 
      CALL WKVECT(NCHA  ,'V V I'  ,5 ,JNCHA ) 
      CALL WKVECT(EXPL  ,'V V I'  ,1 ,JEXPL ) 
      CALL WKVECT(VEOL  ,'V V K24',15,JVEOL ) 
      CALL WKVECT(VAOL  ,'V V K24',15,JVAOL )
      CALL WKVECT(VECENT,'V V K24',3 ,JVECEN)
      CALL WKVECT(VECABS,'V V K24',3 ,JVECAB)
C
  999 CONTINUE
C
      CALL JEDEMA()      
C
      END
