      SUBROUTINE NMFLAL(OPTION,COMPOR,SDPOST,MOD45  ,DEFO  ,
     &                  NFREQ ,CDSP, TYPMAT,OPTMOD,BANDE  ,
     &                  NDDLE ,DDLEXC,NSTA,DDLSTA,MODRIG)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 27/02/2012   AUTEUR GREFFET N.GREFFET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*24 COMPOR,DDLEXC,DDLSTA
      CHARACTER*16 OPTMOD,OPTION
      CHARACTER*4  MOD45
      INTEGER      NFREQ,DEFO,NDDLE,NSTA,CDSP    
      CHARACTER*16 TYPMAT,MODRIG
      REAL*8       BANDE(2)
      CHARACTER*19 SDPOST
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - CALCUL DE MODES)
C
C LECTURE DES OPTIONS DANS MECA_NON_LINE
C      
C ----------------------------------------------------------------------
C      
C
C IN  OPTION : TYPE DE CALCUL
C              'FLAMBSTA' MODES DE FLAMBEMENT EN STATIQUE
C              'FLAMBDYN' MODES DE FLAMBEMENT EN DYNAMIQUE
C              'VIBRDYNA' MODES VIBRATOIRES
C IN  COMPOR : CARTE COMPORTEMENT
C IN  SDPOST : SD POUR POST-TRAITEMENTS (CRIT_STAB ET MODE_VIBR)
C OUT MOD45  : TYPE DE CALCUL DE MODES PROPRES
C              'VIBR'     MODES VIBRATOIRES
C              'FLAM'     MODES DE FLAMBEMENT
C              'STAB'     MODE DE STABILITE 
C OUT NFREQ  : NOMBRE DE FREQUENCES A CALCULER
C OUT CDSP   : COEFFICIENT MULTIPLICATEUR DE NFREQ -> DIM_SPACE  
C OUT TYPMAT : TYPE DE MATRICE A UTILISER 
C                'ELASTIQUE/TANGENTE/SECANTE'
C OUT OPTMOD : OPTION DE RECHERCHE DE MODES
C               'PLUS_PETITE' LA PLUS PETITE FREQUENCE
C               'BANDE'       DANS UNE BANDE DE FREQUENCE DONNEE
C OUT DEFO   : TYPE DE DEFORMATIONS
C                0            PETITES DEFORMATIONS (MATR. GEOM.)
C                1            GRANDES DEFORMATIONS (PAS DE MATR. GEOM.)
C OUT BANDE  : BANDE DE FREQUENCE SI OPTMOD='BANDE'
C OUT NDDLE  : NOMBRE DE DDL EXCLUS
C OUT DDLEXC : NOM DE L'OBJET JEVEUX CONTENANT LE NOM DES DDLS EXCLUS
C OUT NSTA   : NOMBRE DE DDL STAB
C OUT DDLSTA : NOM DE L'OBJET JEVEUX CONTENANT LE NOM DES DDLS STAB
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      NBV,I,IBID
      REAL*8       R8BID
      CHARACTER*24 K24BID
      INTEGER      INIT,IDES 
      CHARACTER*16 OPTRIG
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()               
C
C --- INITIALISATIONS
C
      BANDE(1) = 1.D-5
      BANDE(2) = 1.D5
      NFREQ    = 0
      CDSP     = 0
      NDDLE    = 0
      DEFO     = 0
      MOD45    = ' '     
      OPTMOD   = ' '
      OPTRIG   = ' '
      TYPMAT   = ' '
      NSTA     = 0
C
C --- TYPE DE DEFORMATIONS
C
      CALL JEVEUO(COMPOR(1:19)//'.VALE','L',INIT)
      CALL JEVEUO(COMPOR(1:19)//'.DESC','L',IDES)
      NBV    = ZI(IDES-1+3)
C     RIGIDITE GEOMETRIQUE INTEGREE A LA MATRICE TANGENTE      
      DO 10 I = 1,NBV
        IF ((ZK16(INIT+2+20*(I-1)).EQ.'GROT_GDEP').OR.
     &      (ZK16(INIT+2+20*(I-1)).EQ.'GDEF_HYPO_ELAS').OR.
     &      (ZK16(INIT+2+20*(I-1)).EQ.'SIMO_MIEHE')) THEN
          DEFO = 1
        ELSEIF ((ZK16(INIT+2+20*(I-1)).EQ.'GDEF_LOG')) THEN
          CALL ASSERT(.FALSE.)        
        ENDIF
   10 CONTINUE      
C
C --- RECUPERATION DES OPTIONS
C
      IF ( OPTION(1:7) .EQ. 'VIBRDYN' ) THEN
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'NB_FREQ_VIBR',
     &              NFREQ            ,R8BID ,K24BID)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'COEF_DIM_VIBR',
     &              CDSP             ,R8BID ,K24BID)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'TYPE_MATR_VIBR',
     &              IBID             ,R8BID ,TYPMAT)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'OPTION_EXTR_VIBR',
     &              IBID             ,R8BID ,OPTMOD)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'BANDE_VIBR_1',
     &              IBID             ,BANDE(1),K24BID)   
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'BANDE_VIBR_2',
     &              IBID             ,BANDE(2),K24BID)           
        MOD45    = 'VIBR'       
      ELSEIF ( OPTION(1:5) .EQ. 'FLAMB' ) THEN
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'NB_FREQ_FLAMB',
     &              NFREQ            ,R8BID ,K24BID)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'COEF_DIM_FLAMB',
     &              CDSP             ,R8BID ,K24BID)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'TYPE_MATR_FLAMB',
     &              IBID             ,R8BID ,TYPMAT)           
        MOD45    = 'FLAM'
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'RIGI_GEOM_FLAMB',
     &              IBID             ,R8BID ,OPTRIG)
        IF (OPTRIG.EQ.'RIGI_GEOM_NON' ) THEN
          DEFO   = 1
          CALL U2MESS('I','MECANONLINE4_3')
        ENDIF
        
        IF (DEFO.EQ.0) THEN
          OPTMOD = 'BANDE'
          CALL NMLESD('POST_TRAITEMENT',SDPOST,'OPTION_EXTR_FLAM',
     &              IBID             ,R8BID ,OPTMOD)
        ELSEIF (DEFO.EQ.1) THEN
          OPTMOD = 'PLUS_PETITE'         
          CALL NMLESD('POST_TRAITEMENT',SDPOST,'OPTION_EXTR_FLAM',
     &              IBID             ,R8BID ,OPTMOD)
        ELSE
          CALL ASSERT(.FALSE.)  
        ENDIF
        
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'BANDE_FLAMB_1',
     &              IBID             ,BANDE(1),K24BID)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'BANDE_FLAMB_2',
     &              IBID             ,BANDE(2),K24BID)              
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'NB_DDL_EXCLUS',
     &              NDDLE            ,R8BID ,K24BID) 
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'NOM_DDL_EXCLUS',
     &              IBID             ,R8BID ,DDLEXC)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'NB_DDL_STAB',
     &              NSTA             ,R8BID ,K24BID)     
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'NOM_DDL_STAB',
     &              IBID             ,R8BID ,DDLSTA)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'MODI_RIGI',
     &              IBID             ,R8BID ,MODRIG)      
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF     
C
      CALL JEDEMA()
C
      END
