      SUBROUTINE NMVPLE (FAMI,KPG,KSP,NDIM,IMATE,COMPOR,CRIT,TYPMOD,
     &                   INSTAM,INSTAP,DEPS,SIGM,VIM,
     &                   OPTION,SIGP,VIP,DSIDEP,IRET)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 07/12/2010   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_7 CRP_21
      IMPLICIT NONE
      INTEGER            NDIM,IMATE,IRET,KPG,KSP
      CHARACTER*(*)      FAMI
      CHARACTER*8        TYPMOD(*)
      CHARACTER*16       COMPOR(*),OPTION
      REAL*8             CRIT(4),INSTAM,INSTAP
      REAL*8             DEPS(6)
      REAL*8             SIGM(6),VIM(1),SIGP(6),VIP(1),DSIDEP(6,6)
C ----------------------------------------------------------------------
C     REALISE LA LOI DE VISCOPLASTICITE DE LEMAITRE
C  POUR LES ELEMENTS
C     ISOPARAMETRIQUES EN PETITES DEFORMATIONS
C
C
C
C IN  NDIM    : DIMENSION DE L'ESPACE
C IN  IMATE   : ADRESSE DU MATERIAU CODE
C IN  COMPOR  : COMPORTEMENT : RELCOM ET DEFORM
C IN  CRIT    : CRITERES DE CONVERGENCE LOCAUX
C IN  TYPMOD  : TYPE DE MODELISATION
C IN  INSTAM  : INSTANT DU CALCUL PRECEDENT
C IN  INSTAP  : INSTANT DU CALCUL
C IN  DEPS    : INCREMENT DE DEFORMATION
C IN  SIGM    : CONTRAINTES A L'INSTANT DU CALCUL PRECEDENT
C IN  VIM     : VARIABLES INTERNES A L'INSTANT DU CALCUL PRECEDENT
C IN  OPTION  : OPTION DEMANDEE : RIGI_MECA_TANG , FULL_MECA , RAPH_MECA
C OUT SIGP    : CONTRAINTES A L'INSTANT ACTUEL
C OUT VIP     : VARIABLES INTERNES A L'INSTANT ACTUEL
C OUT DSIDEP  : MATRICE CARREE
C OUT IRET    : CODE RETOUR DE LA RECHERCHE DE ZERO DE F(X)=0
C                   IRET=0 => PAS DE PROBLEME
C                   IRET=1 => ECHEC
C
C               ATTENTION LES TENSEURS ET MATRICES SONT RANGES DANS
C               L'ORDRE :  XX YY ZZ XY XZ YZ
C
C ----------------------------------------------------------------------
C
C     COMMON POUR LES PARAMETRES DES LOIS VISCOPLASTIQUES
      COMMON / NMPAVP / DPC,SIELEQ,DEUXMU,DELTAT,TSCHEM,PREC,THETA,NITER
      REAL*8            DPC,SIELEQ,DEUXMU,DELTAT,TSCHEM,PREC,THETA,NITER
C     COMMON POUR LES PARAMETRES DE LA LOI DE LEMAITRE (NON IRRADIEE)
      COMMON / NMPALE / UNSURK,UNSURM,VALDEN
      REAL*8            UNSURK,UNSURM,VALDEN
C
      REAL*8            DEPSTH(6),VALRES(5),EPSTHE
      REAL*8            DEPSDV(6),SIGDV(6),SIGEL(6),EPSMO,SIGMO,E,NU
      REAL*8            TROISK,KRON(6),VALPAR(2),RAC2,T1,T2
      REAL*8            EM,NUM,TROIKM,DEUMUM,SIGMP(6)
      REAL*8            DELTKL,DELTP2
      REAL*8            DEGRAN(6)
      REAL*8            VPALEM
      EXTERNAL          VPALEM
      INTEGER           IULMES,IUNIFI,K,L,IRET1,IBID
      INTEGER           NDIMSI,IRET2
      REAL*8            A0,XAP,X,TM,TP
      REAL*8            FG,FDGDST,FDGDEV,DEFAM(6),DEFAP(6)
      REAL*8            COEF1,COEF2,DELTEV
      CHARACTER*2       FB2, CODRET(5)
      CHARACTER*6       EPSA(6)
      CHARACTER*8       NOMRES(5),NOMPAR(2)
      DATA              KRON/1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
      DATA EPSA   / 'EPSAXX','EPSAYY','EPSAZZ','EPSAXY','EPSAXZ',
     &              'EPSAYZ'/
C DEB ------------------------------------------------------------------
C
      CALL VERIFT(FAMI,KPG,KSP,'T',IMATE,'ELAS',1,EPSTHE,IRET1)
C
      IRET=0
      THETA = CRIT(4)
      T1 = ABS(THETA-0.5D0)
      T2 = ABS(THETA-1.D0)
      PREC = 0.01D0
      IF ((T1.GT.PREC).AND.(T2.GT.PREC))  THEN
         CALL U2MESS('F','ALGORITH6_55')
      ENDIF
C
      IF (TYPMOD(1).EQ.'C_PLAN') THEN
        IULMES = IUNIFI('MESSAGE')
        WRITE (IULMES,*) 'COMPORTEMENT ',COMPOR(1)(1:10),' NON PROGRAMME
     & POUR DES ELEMENTS DE CONTRAINTES PLANES'
        CALL U2MESS('F','ALGORITH6_92')
        GO TO 299
      ENDIF
      FB2 = 'F '
      DO 90 K = 1,6
        DEGRAN(K) = 0.D0
  90  CONTINUE
      RAC2 = SQRT(2.D0)
      CALL RCVARC(' ','TEMP','-',FAMI,KPG,KSP,TM,IRET1)
      CALL RCVARC(' ','TEMP','+',FAMI,KPG,KSP,TP,IRET2)
      IF ((IRET1+IRET2).EQ.0) THEN
        TSCHEM = TM*(1.D0-THETA)+TP*THETA
      ELSE
        TSCHEM = 0.D0
      ENDIF
      DPC = VIM(1)
      DELTAT = INSTAP - INSTAM

      CALL MATINI(6,6,0.D0,DSIDEP)

      IF(NDIM.EQ.2) THEN
        NDIMSI=4
      ELSE
        NDIMSI=6
      ENDIF
C VARIABLE DE COMMANDE ANELASTIQUE

      DO 20 K=1,NDIMSI
        CALL RCVARC(' ',EPSA(K),'-',FAMI,KPG,KSP,DEFAM(K),IRET2)
        IF (IRET2.EQ.1) DEFAM(K)=0.D0

        CALL RCVARC(' ',EPSA(K),'+',FAMI,KPG,KSP,DEFAP(K),IRET2)
        IF (IRET2.EQ.1) DEFAP(K)=0.D0
 20   CONTINUE

C
C MISE AU FORMAT DES TERMES NON DIAGONAUX
C
      DO 105 K=4,NDIMSI
        DEFAM(K) = DEFAM(K)*RAC2
        DEFAP(K) = DEFAP(K)*RAC2
 105  CONTINUE
C
      NOMPAR(1)='INST'
      VALPAR(1)=INSTAM
      NOMRES(1)='E'
      NOMRES(2)='NU'
      CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS',1,NOMPAR,VALPAR,2,
     &              NOMRES,VALRES,CODRET, FB2 )
      EM     = VALRES(1)
      NUM    = VALRES(2)
      DEUMUM = EM/(1.D0+NUM)
      TROIKM = EM/(1.D0-2.D0*NUM)
      VALPAR(1)=INSTAP
      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS',1,NOMPAR,VALPAR,2,
     &              NOMRES,VALRES,CODRET, FB2 )
      E      = VALRES(1)
      NU     = VALRES(2)
      DEUXMU = E/(1.D0+NU)
      TROISK = E/(1.D0-2.D0*NU)
C

        NOMRES(1) = 'N'
        NOMRES(2) = 'UN_SUR_K'
        NOMRES(3) = 'UN_SUR_M'
        NOMPAR(1) = 'TEMP'
        VALPAR(1) = TSCHEM
        CALL RCVALB(FAMI,1,1,'+',IMATE,' ','LEMAITRE',1,NOMPAR,
     &              VALPAR,3,NOMRES,VALRES,CODRET, FB2 )
        VALDEN = VALRES(1)
        UNSURK = VALRES(2)
        UNSURM = VALRES(3)
C
      EPSMO = 0.D0
      DO 110 K=1,3
        DEPSTH(K)   = DEPS(K)
     &                -EPSTHE
     &                -(DEFAP(K)-DEFAM(K))
        DEPSTH(K) = DEPSTH(K) - DEGRAN(K)
        DEPSTH(K)   = DEPSTH(K) * THETA
        IF ((K.EQ.1).OR.(NDIMSI.EQ.6)) THEN
          DEPSTH(K+3) = DEPS(K+3)-(DEFAP(K+3)-DEFAM(K+3))
          DEPSTH(K+3) = DEPSTH(K+3) - DEGRAN(K+3)
          DEPSTH(K+3) = DEPSTH(K+3) * THETA
        ENDIF
        EPSMO = EPSMO + DEPSTH(K)
 110  CONTINUE
C
      EPSMO = EPSMO/3.D0
      DO 115 K=1,NDIMSI
        DEPSDV(K)   = DEPSTH(K) - EPSMO * KRON(K)
 115  CONTINUE
C
      SIGMO = 0.D0
      DO 113 K =1,3
        SIGMO = SIGMO + SIGM(K)
 113  CONTINUE
      SIGMO = SIGMO /3.D0
C
      DO 114 K=1,NDIMSI
        SIGMP(K)=((DEUXMU+DEUMUM)/DEUMUM*(SIGM(K)-SIGMO*KRON(K))+
     &           (TROISK+TROIKM)/TROIKM*SIGMO*KRON(K))*0.5D0
114   CONTINUE
      SIGMO = 0.D0
      DO 116 K =1,3
        SIGMO = SIGMO + SIGMP(K)
116   CONTINUE
      SIGMO = SIGMO /3.D0
      SIELEQ = 0.D0
      DO 117 K = 1,NDIMSI
        SIGDV(K) = SIGMP(K) - SIGMO * KRON(K)
        SIGEL(K) = SIGDV(K) + DEUXMU * DEPSDV(K)
        SIELEQ   = SIELEQ   + SIGEL(K)**2
 117  CONTINUE
      SIELEQ       = SQRT(1.5D0*SIELEQ)
C
C----RESOLUTION DE L'EQUATION SCALAIRE----
C
      PREC = CRIT(3)
      NITER = NINT(CRIT(1))
C
      A0 = - SIELEQ

        XAP = SIELEQ
        XAP = XAP - SIELEQ*1.D-12
        IF (ABS(A0).LE.PREC) THEN
          X = 0.D0
        ELSE
          CALL ZEROF2(VPALEM,A0,XAP,PREC,INT(NITER),X,IRET,IBID)
          IF(IRET.EQ.1) THEN
          IF ( OPTION(1:9) .EQ. 'RAPH_MECA' .OR.
     &         OPTION(1:9) .EQ. 'FULL_MECA' ) THEN
             GOTO 9999
          ELSE
             X=0.D0
             IRET=0
          ENDIF
          ENDIF
        ENDIF
        IF (X.NE.0.D0) 
     &   CALL GGPLEM(X,DPC+(SIELEQ-X)/(1.5D0*DEUXMU),VALDEN,
     &        UNSURK,UNSURM,THETA,DEUXMU,FG,FDGDST,FDGDEV)
C
C-----------------------------------------
      IF (X.NE.0.D0) THEN
        COEF1 = 1.D0/(1.D0+1.5D0*DEUXMU*DELTAT*FG/X)
      ELSE
C       COEF1 = 1.D0/(1.D0+1.5D0*DEUXMU*DELTAT*FDGDST)
        COEF1 = 1.D0
      ENDIF
C
      IF ( OPTION(1:9) .EQ. 'RAPH_MECA' .OR.
     &     OPTION(1:9) .EQ. 'FULL_MECA' ) THEN
        DELTP2 = 0.D0
        DO 160 K = 1,NDIMSI
          SIGDV(K) = SIGEL(K) * COEF1
          SIGP(K)  = SIGDV(K) + (SIGMO + TROISK*EPSMO)*KRON(K)
          SIGP(K)  = (SIGP(K) - SIGM(K))/THETA + SIGM(K)
          DELTEV   = (SIGEL(K)-SIGDV(K))/(DEUXMU*THETA)
          DELTP2   = DELTP2   + DELTEV**2
 160    CONTINUE
        VIP(1) = VIM(1) + SQRT(2.D0*DELTP2/3.D0)
      ENDIF
C
      IF  ( OPTION(1:9) .EQ. 'FULL_MECA'.OR.
     &      OPTION(1:14) .EQ. 'RIGI_MECA_TANG' ) THEN
       IF (X.NE.0.D0) THEN
        COEF2=SIELEQ*(1.D0 - DELTAT*FDGDEV)
        COEF2=COEF2/(1.D0+1.5D0*DEUXMU*DELTAT*FDGDST)
        COEF2=COEF2 - X
        COEF2=COEF2*1.5D0/(SIELEQ**3)
       ELSE
        COEF2 = 0.D0
       ENDIF
       DO 135 K=1,NDIMSI
         DO 135 L=1,NDIMSI
           DELTKL = 0.D0
           IF (K.EQ.L) DELTKL = 1.D0
           DSIDEP(K,L) = COEF1*(DELTKL-KRON(K)*KRON(L)/3.D0)
           DSIDEP(K,L) = DEUXMU*(DSIDEP(K,L)+COEF2*SIGEL(K)*SIGEL(L))
           DSIDEP(K,L) = DSIDEP(K,L) + TROISK*KRON(K)*KRON(L)/3.D0
 135   CONTINUE
      ENDIF
C
 299  CONTINUE
9999  CONTINUE
C
C FIN ------------------------------------------------------------------
      END
