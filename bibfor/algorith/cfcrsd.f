      SUBROUTINE CFCRSD(NOMA,LISCHA,NUMEDD,NEQ,DEFICO,RESOCO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/07/2006   AUTEUR PABHHHH N.TARDIEU 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_20
      IMPLICIT     NONE
      INTEGER      NEQ
      CHARACTER*8  NOMA
      CHARACTER*19 LISCHA
      CHARACTER*24 NUMEDD
      CHARACTER*24 DEFICO
      CHARACTER*24 RESOCO
C
C ----------------------------------------------------------------------
C ROUTINE APPELEE PAR : NMINIT
C ----------------------------------------------------------------------
C
C CREATION DES STRUCTURES DE DONNEES NECESSAIRES AU TRAITEMENT
C DU CONTACT/FROTTEMENT (MOT-CLE "CONTACT" D'AFFE_CHAR_MECA).
C ROUTINE APPELEE AU DEBUT DE L'OPERATEUR STAT_NON_LINE.
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  LISCHA : SD L_CHARGES
C IN  NUMEDD : NUMEROTATION
C IN  NEQ    : NOMBRE D'EQUATIONS DU SYSTEME ASSEMBLE
C OUT DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C              ON LA COMPLETE PAR :
C                - DDLCO  (NUMEROS DES DDL DES NOEUDS DE CONTACT)
C OUT RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32       JEXNUM
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      ZAPMEM
      PARAMETER    (ZAPMEM=4)
      INTEGER      ZAPPAR
      PARAMETER    (ZAPPAR=3)
      INTEGER      ZREAC
      PARAMETER    (ZREAC=4)
      INTEGER      IER,NEC,NCHAR,JCHAR,JINF,ICHA,ICON,JAPPAR,JAPMEM
      INTEGER      JAPCOE,JAPPTR,JAPJEU,JAPDDL,JPDDL,JTANGO
      INTEGER      INO,JDIM,JNOCO,JDDL,NNOCO,NUMNO,NUNOE,NESMAX,NDDL
      INTEGER      IZONE,NZOCO,JREAC,NDIM,NBLIAI,JZOCO,IDDL
      INTEGER      JBID,II,JJEUIN,JNORMO,JNRINI
      INTEGER      JAPCOF,JAPJFX,JAPJFY
      CHARACTER*1  K1BID
      CHARACTER*8  K8BID,CHAR,NOMNO
      CHARACTER*19 COCO,LIAC,LIOT,MU,ATMU,DELT0,DELTA,CM1A
      CHARACTER*19 CM2A,CM3A,AFMU,CONVEC
      CHARACTER*24 NDIMCO,CONTNO,NOZOCO,DDLCO,PDDL,APPARI,APMEMO
      CHARACTER*24 APCOEF,APPOIN,APJEU,APDDL,APREAC,JEUINI
      CHARACTER*24 APCOFR,APJEFX,APJEFY
      CHARACTER*24 NORINI,NORMCO,TANGCO
      CHARACTER*24 DIAGI,DIAGT,METHCO
      INTEGER      IFM,NIV
      INTEGER      TYPALC,TYPALF,FROT3D,MATTAN,VERDIM
      INTEGER      JCOCO,JMETH,IMETH
      INTEGER      NBREEL

C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFNIV(IFM,NIV)
C
C --- REPERAGE DE LA CHARGE CONTENANT DU CONTACT
C --- SI PAS DE CHARGE DE CONTACT: ON SORT
C --- SI PLUS D'UNE CHARGE DE CONTACT, ERREUR FATALE
C
      CALL JEEXIN(LISCHA // '.LCHA',IER)
      IF (IER.EQ.0) THEN
        GOTO 9999
      ENDIF
      CALL JELIRA(LISCHA//'.LCHA','LONMAX',NCHAR,K8BID)
      CALL JEVEUO(LISCHA//'.LCHA','L',JCHAR)
      ICON = 0
      CALL JEVEUO(LISCHA // '.INFC','L',JINF)
      DO 10 ICHA = 1, NCHAR
         IF (ZI(JINF+2*NCHAR+2+ICHA).EQ.2) THEN
            CHAR = ZK24(JCHAR+ICHA-1)(1:8)
            ICON = ICON + 1
         END IF
 10   CONTINUE
      IF (ICON.EQ.0) THEN
        DEFICO = '&&CRSDCO'
        GO TO 9999
      END IF
C
      IF (ICON.GT.1) THEN
        CALL UTMESS('F','CFCRSD','IL Y A PLUSIEURS '
     &              //'CHARGES CONTENANT DES CONDITIONS DE CONTACT ')
      END IF
C
C --- NOM DE LA SD DE DEFINITION DU CONTACT
C
      DEFICO = CHAR(1:8)//'.CONTACT'
C
C --- INFOS SUR LA CHARGE DE CONTACT
C
      CALL CFDISC(DEFICO,RESOCO(1:14),TYPALC,TYPALF,FROT3D,MATTAN)
C
C --- SI METHODE CONTINUE, ON SORT
C
      IF (ABS(TYPALC).EQ.3) THEN
         GOTO 9999
      ENDIF

      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> CREATION DE LA SD RESULTAT DE CONTACT'
      END IF

C ----------------------------------------------------------------------
C
C     SD GEOMETRIQUES DU CONTACT/FROTTEMENT
C
C ----------------------------------------------------------------------

C
C --- VECTEUR NDIMCO
C
      NDIMCO = DEFICO(1:16)//'.NDIMCO'
      CALL JEVEUO(NDIMCO, 'E',JDIM)
      NDIM = ZI(JDIM)
C
C --- VECTEUR AT.MU (FORCES NODALES DE CONTACT)
C
      ATMU   = RESOCO(1:14)//'.ATMU'
      CALL JEEXIN(ATMU,IER)
      IF (IER.EQ.0) THEN
        CALL WKVECT(ATMU,'V V R',NEQ,JBID)
      ENDIF
C
C --- ARGUMENT POUR PREMIERE UTILISATION DU CONTACT OU NON
C
      CALL WKVECT(RESOCO(1:14)//'.PREM','V V L',1,JBID)
      ZL(JBID) = .TRUE.
C
C --- NUMEROS DE DDL DE TOUS LES NOEUDS DE CONTACT POTENTIELS
C
      NNOCO  = ZI(JDIM+4)
      CONTNO = DEFICO(1:16)//'.NOEUCO'
      NOZOCO = DEFICO(1:16)//'.NOZOCO'
      CALL JEVEUO(CONTNO,'L',JNOCO)
      CALL JEVEUO(NOZOCO,'L',JZOCO)
C
C --- VERIFICATION DE LA COHERENCE DES DIMENSIONS
C
      VERDIM = 0
      IF (NDIM.GT.3) THEN
        IF (NDIM.EQ.23) THEN
         DO 24 INO = 1,NNOCO
           NUMNO = ZI(JNOCO+INO-1)
           CALL JENUNO (JEXNUM(NOMA//'.NOMNOE',NUMNO),NOMNO)

           CALL POSDDL ('NUME_DDL',NUMEDD,NOMNO,'DZ',
     &                              JBID,VERDIM)
           IF (VERDIM.NE.0) THEN
            CALL UTMESS('A','CFCRSD',
     &                  'MELANGE 2D ET 3D DANS LE CONTACT')
           ENDIF
 24      CONTINUE
        ZI(JDIM) = 2
        NDIM     = 2
        ELSE IF (NDIM.EQ.1003) THEN
          ZI(JDIM) = 3
          NDIM     = 3   
        ELSE IF (NDIM.EQ.1002) THEN
          ZI(JDIM) = 2
          NDIM     = 2  
        ELSE
          CALL UTMESS('F','CFCRSD',
     &      'MELANGE DIMENSIONS MAILLAGE DANS LE CONTACT')
        ENDIF
      ENDIF  
C
C --- POINTEUR POUR LES DDLS LIES AU CONTACT
C
      PDDL  = DEFICO(1:16)//'.PDDLCO'
      CALL WKVECT (PDDL,'V V I',NNOCO+1,JPDDL)
      ZI(JPDDL) = 0
      NDDL = 0
      DO 20 INO = 1,NNOCO
        IZONE = ZI(JZOCO+INO-1)
        NDDL = NDDL + NDIM
        ZI(JPDDL+INO) = NDDL
 20   CONTINUE
C
C --- NUMEROS DE DDL
C
      DDLCO = DEFICO(1:16)//'.DDLCO'
      CALL WKVECT(DDLCO,'V V I',NDDL,JDDL)
C
      DO 25 INO = 1,NNOCO
        NUMNO = ZI(JNOCO+INO-1)
        CALL JENUNO (JEXNUM(NOMA//'.NOMNOE',NUMNO),NOMNO)
        IZONE = ZI(JZOCO+INO-1)
        IDDL = ZI(JPDDL+INO-1) + 1
        CALL POSDDL('NUME_DDL',NUMEDD,NOMNO,'DX',NUNOE,
     &               ZI(JDDL+IDDL-1))
        CALL POSDDL('NUME_DDL',NUMEDD,NOMNO,'DY',NUNOE,
     &               ZI(JDDL+IDDL))
        IF (NDIM.EQ.3) CALL POSDDL('NUME_DDL',NUMEDD,NOMNO,'DZ',
     &                                NUNOE,ZI(JDDL+IDDL+1))
 25   CONTINUE
C
C --- CREATION DES TABLEAUX D'APPARIEMENT (DIMENSIONNES AU MAX)
C
      NESMAX = ZI(JDIM+8)
C
      APPARI = RESOCO(1:14)//'.APPARI'
      APMEMO = RESOCO(1:14)//'.APMEMO'
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APJEU  = RESOCO(1:14)//'.APJEU'
      APDDL  = RESOCO(1:14)//'.APDDL'
      JEUINI = RESOCO(1:14)//'.JEUINI'
C
      CALL WKVECT (APPARI,'V V I',ZAPPAR*NESMAX+1,JAPPAR)
      CALL WKVECT (APMEMO,'V V I',ZAPMEM*NNOCO   ,JAPMEM)
      CALL WKVECT (APCOEF,'V V R',30*NESMAX ,JAPCOE)
      CALL WKVECT (APPOIN,'V V I',NESMAX+1  ,JAPPTR)
      CALL WKVECT (APJEU ,'V V R',NESMAX    ,JAPJEU)
      CALL WKVECT (APDDL ,'V V I',30*NESMAX ,JAPDDL)
      CALL WKVECT (JEUINI,'V V R',NESMAX    ,JJEUIN)
C
C --- DIMENSIONNEMENT DES VECTEURS NORMAUX ET TANGENT
C
      NORINI = RESOCO(1:14)//'.NORINI'
      NORMCO = RESOCO(1:14)//'.NORMCO'
      TANGCO = RESOCO(1:14)//'.TANGCO'
      CALL WKVECT (NORINI,'V V R', 3*NNOCO ,JNRINI)
      CALL WKVECT (NORMCO,'V V R', 3*NESMAX,JNORMO)
      CALL WKVECT (TANGCO,'V V R', 6*NESMAX,JTANGO)
C
      ZI(JAPPAR) = NESMAX
C
C --- INDICATEURS DE REACTUALISATION
C
      NZOCO  = ZI(JDIM+1)
      APREAC = RESOCO(1:14)//'.APREAC'
      CALL WKVECT (APREAC,'V V I',ZREAC*NZOCO,JREAC)
      DO 30 IZONE = 1,NZOCO
        ZI(JREAC+ZREAC*(IZONE-1)  ) = 1
        ZI(JREAC+ZREAC*(IZONE-1)+1) = 0
        ZI(JREAC+ZREAC*(IZONE-1)+2) = 1
        ZI(JREAC+ZREAC*(IZONE-1)+3) = 0
 30   CONTINUE


C ----------------------------------------------------------------------
C
C     SD ALGORITHMIQUES DU CONTACT/FROTTEMENT
C
C ----------------------------------------------------------------------

C
C --- SI METHODE SANS CONTACT, ON SORT
C
      IF (ABS(TYPALC).EQ.5) THEN
         GOTO 9999
      ENDIF
C
C --- VECTEURS DE DIAGNOSTIC
C ---  RESOCO//'.DIAG.ITER': NOMBRE D'ITERATIONS INTERNES DE CONTACT
C --- ZI(JBID-1+3): TOTAL ITER POUR STAT_NON_LINE
C --- ZI(JBID-1+2): TOTAL ITER POUR PAS DE TEMPS EN COURS
C --- ZI(JBID-1+1): TOTAL ITER POUR ITERATION DE NEWTON EN COURS
C ---  RESOCO//'.DIAG.TIME': TEMPS PASSE DANS CONTACT
C --- ZI(JBID-1+6): TEMPS GEOM POUR STAT_NON_LINE
C --- ZI(JBID-1+5): TEMPS ALGO POUR STAT_NON_LINE
C --- ZI(JBID-1+4): TEMPS GEOM POUR PAS DE TEMPS EN COURS
C --- ZI(JBID-1+3): TEMPS ALGO POUR PAS DE TEMPS EN COURS
C --- ZI(JBID-1+2): TEMPS GEOM POUR ITERATION DE NEWTON EN COURS
C --- ZI(JBID-1+1): TEMPS ALGO POUR ITERATION DE NEWTON EN COURS
C
      DIAGI  = RESOCO(1:14)//'.DIAG.ITER'
      CALL JEEXIN(DIAGI,IER)
      IF (IER.EQ.0) THEN
        CALL WKVECT(DIAGI,'V V I',3,JBID)
      ENDIF
      DIAGT  = RESOCO(1:14)//'.DIAG.TIME'
      CALL JEEXIN(DIAGT,IER)
      IF (IER.EQ.0) THEN
        CALL WKVECT(DIAGT,'V V R',6,JBID)
      ENDIF

C ======================================================================
C --- VECTEURS DE TRAVAIL
C ======================================================================
      COCO   = RESOCO(1:14)//'.COCO'
      LIAC   = RESOCO(1:14)//'.LIAC'
      LIOT   = RESOCO(1:14)//'.LIOT'
      MU     = RESOCO(1:14)//'.MU'
      DELT0  = RESOCO(1:14)//'.DEL0'
      DELTA  = RESOCO(1:14)//'.DELT'
      CONVEC = RESOCO(1:14)//'.CONVEC'
C ======================================================================
C --- VECTEUR COCO : ---------------------------------------------------
C ---       JBID 0 : DIMENSION -----------------------------------------
C ---       JBID 1 : INDIC VAUT 1 LORSQU'ON AJOUTE UNE LIAISON ---------
C ---              :       VAUT 0 LORSQU'ON SUPPRIME UNE LIAISON -------
C ---       JBID 2 : NOMBRE DE LIAISON DE CONTACT ----------------------
C ---       JBID 3 : POSITION DE LA LIAISON AJOUTEE --------------------
C ---       JBID 4 : POSITION DE LA LIAISON SUPPRIMEE ------------------
C ---       JBID 5 : NOMBRE DE LIAISON DE FROTTEMENT (DEUX DIRECTIONS) -
C ---       JBID 6 : NOMBRE DE LIAISON DE FROTTEMENT (1ERE DIRECTION ) -
C ---       JBID 7 : NOMBRE DE LIAISON DE FROTTEMENT (2EME DIRECTION ) -
C ======================================================================
      CALL JEEXIN (COCO,IER)
      IF (IER.EQ.0) THEN
        CALL WKVECT (COCO,'V V I',8,JCOCO)
      ENDIF  

      CALL DISMOI('F','NB_EC','DEPL_R','GRANDEUR',NEC,K1BID,IER)
      ZI(JCOCO  ) = NDIM
      ZI(JCOCO+1) = 0
      ZI(JCOCO+2) = 0
      ZI(JCOCO+3) = 0
      ZI(JCOCO+4) = 1
      ZI(JCOCO+5) = 0
      ZI(JCOCO+6) = 0
      ZI(JCOCO+7) = 0
C
      CALL JEEXIN (LIAC,IER)
      IF (IER.EQ.0) CALL WKVECT (LIAC,'V V I',3*NESMAX+1,JBID)
C
      CALL JEEXIN (LIOT,IER)
      IF (IER.EQ.0) CALL WKVECT (LIOT,'V V I',4*NESMAX+4,JBID)
C
      CALL JEEXIN (MU,IER)
      IF (IER.EQ.0) CALL WKVECT (MU,'V V R',6*NESMAX,JBID)
C
      CALL JEEXIN (DELT0,IER)
      IF (IER.EQ.0) CALL WKVECT (DELT0,'V V R',NEQ,JBID)
C
      CALL JEEXIN (DELTA,IER)
      IF (IER.EQ.0) CALL WKVECT (DELTA,'V V R',NEQ,JBID)
C ======================================================================
C --- VECTEUR CONVEC : -------------------------------------------------
C ---        VAUT C0 : LIAISON DE CONTACT ------------------------------
C ---        VAUT F0 : LIAISON DE FROTTEMENT ADHERENT (DEUX DIRECTIONS)-
C ---        VAUT F1 : LIAISON DE FROTTEMENT ADHERENT (1ERE DIRECTION )-
C ---        VAUT F2 : LIAISON DE FROTTEMENT ADHERENT (2EME DIRECTION )-
C ======================================================================
      CALL JEEXIN (CONVEC,IER)
      IF (IER.EQ.0) CALL WKVECT (CONVEC,'V V K8',2*NESMAX,JBID)


C ----------------------------------------------------------------------
C
C  STRUCTURES RESERVEES POUR LE FROTTEMENT
C
C ----------------------------------------------------------------------

      IF (TYPALF.NE.0) THEN
        AFMU   = RESOCO(1:14)//'.AFMU'
        CALL JEEXIN (AFMU,IER)
        IF (IER.EQ.0) CALL WKVECT (AFMU,'V V R',NEQ,JBID)

        APCOFR = RESOCO(1:14)//'.APCOFR'
        CALL WKVECT (APCOFR,'V V R',60*NESMAX ,JAPCOF)

        APJEFX = RESOCO(1:14)//'.APJEFX'
        APJEFY = RESOCO(1:14)//'.APJEFY'
        CALL WKVECT (APJEFX,'V V R',NESMAX    ,JAPJFX)
        CALL WKVECT (APJEFY,'V V R',NESMAX    ,JAPJFY)

      ENDIF

C CAS DE LA METHODE PENALISEE: ON UTILISE AFMU
      IF (ABS(TYPALC).EQ.1) THEN
        AFMU   = RESOCO(1:14)//'.AFMU'
        CALL JEEXIN (AFMU,IER)
        IF (IER.EQ.0) CALL WKVECT (AFMU,'V V R',NEQ,JBID)
      ENDIF


C ----------------------------------------------------------------------
C
C  OBJETS ASSOCIES AUX MATRICES
C
C ----------------------------------------------------------------------
C
      
C     ON RECUPERE LA METHODE DE CONTACT
      METHCO = DEFICO(1:16)//'.METHCO'
      CALL JEVEUO (METHCO,'L',JMETH)
      IMETH  = ZI(JMETH+6)
      
C     SI LA METHODE N'EST PAS 'GCP', ON CREE LES SD DE DONNEES MATRICE
      IF (IMETH.NE.9) THEN
      
         NBLIAI = NESMAX
C
         CM1A   = RESOCO(1:14)//'.CM1A'
         CM2A   = RESOCO(1:14)//'.CM2A'
         CM3A   = RESOCO(1:14)//'.CM3A'
C
         IF (TYPALF.EQ.0) THEN
            NBREEL = NBLIAI
         ELSE
            NBREEL = 3*NBLIAI
         ENDIF

C ---    MATRICE PRINCIPALE CM1AT (UTILISEE EN CONTACT ET FROTTEMENT)
         CALL JECREC(CM1A,'V V R','NU','DISPERSE','CONSTANT',NBREEL)
         CALL JEECRA(CM1A,'LONMAX',NEQ,K8BID)
         DO 40 II = 1, NBREEL
            CALL JECROC (JEXNUM(CM1A,II))
 40      CONTINUE

C ---    MATRICE CM2AT ET CM3AT (UTILISEE EN FROTTEMENT UNIQUEMENT)
         IF (TYPALF.NE.0) THEN
            CALL JECREC (CM2A,'V V R','NU','DISPERSE','CONSTANT',NBREEL)
            CALL JECREC (CM3A,'V V R','NU','DISPERSE','CONSTANT',NBREEL)
            CALL JEECRA (CM2A,'LONMAX',NEQ,K8BID)
            CALL JEECRA (CM3A,'LONMAX',NEQ,K8BID)
            DO 42 II = 1, NBREEL
               CALL JECROC (JEXNUM(CM2A,II))
               CALL JEVEUO (JEXNUM(CM2A,II),'E',JBID)
               CALL JELIBE (JEXNUM(CM2A,II))
               CALL JECROC (JEXNUM(CM3A,II))
               CALL JEVEUO (JEXNUM(CM3A,II),'E',JBID)
               CALL JELIBE (JEXNUM(CM3A,II))
 42         CONTINUE
         ENDIF

C 
C ---    MATRICE DE CONTACT ACM1AT
C 
         CALL CFCRMA(NBREEL,NOMA,RESOCO)
      
      ENDIF

 9999 CONTINUE

C
C ----------------------------------------------------------------------
C
      CALL JEDEMA ()
      END
