      SUBROUTINE CFCRSD(NOMA  ,NUMEDD,DEFICO,RESOCO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/12/2009   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_20
C
      IMPLICIT     NONE
      CHARACTER*8  NOMA
      CHARACTER*24 NUMEDD
      CHARACTER*24 DEFICO,RESOCO
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES)
C
C CREATION DES STRUCTURES DE DONNEES NECESSAIRES AU TRAITEMENT
C DU CONTACT/FROTTEMENT
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  NEQ    : NOMBRE D'EQUATIONS DU SYSTEME ASSEMBLE
C IN  DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C OUT RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32       JEXNUM
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFMMVD,ZAPME,ZCOCO,ZTACF
      INTEGER      CFDISI,NDIM,NTNOE,NNOCO
      INTEGER      INO,NUMNOE,NDDL,NEQ
      INTEGER      NBLIAI,IDDL,II
      REAL*8       R8VIDE
      CHARACTER*8  K8BID,NOMNOE
      CHARACTER*19 COCO ,LIAC ,LIOT ,MU ,ATMU ,AFMU ,CONVEC
      INTEGER      JCOCO,JLIAC,JLIOT,JMU,JATMU,JAFMU,JVECC
      CHARACTER*19 DELT0 ,DELTA
      INTEGER      JDELT0,JDELTA
      CHARACTER*19 CM1A,ENAT,FRO1,FRO2
      CHARACTER*24 DDLCO,PDDL,APPARI,APMEMO
      INTEGER      JDDL,JPDDL,JAPPAR,JAPMEM
      CHARACTER*24 APCOEF,APPOIN,APJEU,APDDL,JEUINI,JEUALG
      INTEGER      JAPCOE,JAPPTR,JAPJEU,JAPDDL,JJEUIN,JJEUAL
      CHARACTER*24 APCOFR,APJEFX,APJEFY
      INTEGER      JAPCOF,JAPJFX,JAPJFY
      INTEGER      IFM,NIV
      INTEGER      NBCM1A,NBENAT,NBFRO1,NBFRO2,IRET,CODRET
      CHARACTER*24 AUTOC1,AUTOC2
      CHARACTER*24 MAXDEP,JEUSUP
      INTEGER      JMAXDE,JJSUP
      CHARACTER*24 CLREAC,TACFIN,TANGCO
      INTEGER      JCLREA,JTACF ,JTANGO
      LOGICAL      CFDISL,LVERIF,LCTFD,LPENAC,LMATRC,LGCP  ,LCTF3D
      LOGICAL      LPENAF
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ() 
      CALL INFDBG('CONTACT',IFM,NIV) 
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... CREATION DE LA SD RESULTAT'//
     &                ' CONTACT DISCRET'
      ENDIF       
C
C --- INITIALISATIONS
C
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- INFOS SUR LA CHARGE DE CONTACT
C
      LVERIF = CFDISL(DEFICO,'CONT_VERIF'  )
      LCTFD  = CFDISL(DEFICO,'FROT_DISCRET')
      LPENAC = CFDISL(DEFICO,'CONT_PENA'   )
      LPENAF = CFDISL(DEFICO,'FROT_PENA'   )     
      LMATRC = CFDISL(DEFICO,'MATR_CONT'   )
      LGCP   = CFDISL(DEFICO,'CONT_GCP'    )
      LCTF3D = CFDISL(DEFICO,'FROT_3D'     )
C
C --- SD POUR APPARIEMENT
C
      ZAPME = CFMMVD('ZAPME')
      ZCOCO = CFMMVD('ZCOCO')
      ZTACF = CFMMVD('ZTACF')      
C
C --- INFORMATIONS
C
      NNOCO  = CFDISI(DEFICO,'NNOCO' )
      NDIM   = CFDISI(DEFICO,'NDIM'  )
      NTNOE  = CFDISI(DEFICO,'NTNOE' )
C
C --- AFFICHAGE
C
      WRITE (IFM,*) '--- NOMBRE TOTAL DE NOEUDS ESCLAVES : ',NTNOE
C
C --- VERIFICATION DE LA COHERENCE DES DIMENSIONS (PUR 2D OU PUR 3D)
C
      IF (NDIM.EQ.2) THEN
        CALL CFVERD(NOMA  ,NUMEDD,DEFICO) 
      ENDIF 
C 
C --- PARAMETRES DE REACTUALISATION GEOMETRIQUE
C CLREAC(1) = TRUE  SI REACTUALISATION A FAIRE
C CLREAC(2) = TRUE  SI ATTENTE POINT FIXE CONTACT
C        
      AUTOC1 = RESOCO(1:14)//'.REA1'
      AUTOC2 = RESOCO(1:14)//'.REA2'
      CALL VTCREB(AUTOC1,NUMEDD,'V','R',NEQ)
      CALL VTCREB(AUTOC2,NUMEDD,'V','R',NEQ)      
      CLREAC = RESOCO(1:14)//'.REAL'
      CALL WKVECT(CLREAC,'V V L',3,JCLREA)
      ZL(JCLREA+1-1) = .FALSE.
      ZL(JCLREA+2-1) = .FALSE.
      ZL(JCLREA+3-1) = .FALSE.
      MAXDEP = RESOCO(1:14)//'.MAXD'  
      CALL WKVECT(MAXDEP,'V V R',1,JMAXDE) 
      ZR(JMAXDE) = -1.D0 
C 
C --- TABLEAU CONTENANT LES INFORMATIONS POUR METHODES "PENALISATION" 
C --- ET "LAGRANGIEN" 
C       
      TACFIN = RESOCO(1:14)//'.TACFIN'
      CALL WKVECT(TACFIN,'V V R',NTNOE*ZTACF,JTACF)
C
C --- VECTEUR AT.MU (FORCES NODALES DE CONTACT)
C
      ATMU   = RESOCO(1:14)//'.ATMU'
      CALL WKVECT(ATMU,'V V R',NEQ,JATMU)
C
C --- POINTEUR POUR LES DDLS LIES AU CONTACT
C
      PDDL   = RESOCO(1:14)//'.PDDLCO'
      CALL WKVECT(PDDL  ,'V V I',NNOCO+1,JPDDL)
      ZI(JPDDL) = 0
      NDDL      = 0
      DO 20 INO = 1,NNOCO
        NDDL = NDDL + NDIM
        ZI(JPDDL+INO) = NDDL
 20   CONTINUE
C
C --- NUMEROS DE DDL
C
      DDLCO  = RESOCO(1:14)//'.DDLCO'
      CALL WKVECT(DDLCO ,'V V I',NDDL,JDDL)
C
      DO 25 INO = 1,NNOCO
        CALL CFNOMM(NOMA  ,DEFICO,'NOEU',INO   ,NOMNOE,
     &              CODRET)  
        IF (CODRET.LT.0) THEN
          CALL ASSERT(.FALSE.)
        ENDIF  
C 
        IDDL   = ZI(JPDDL+INO-1) + 1
C               
        CALL POSDDL('NUME_DDL',NUMEDD,NOMNOE,'DX',NUMNOE,
     &               ZI(JDDL+IDDL-1))
        IF (ZI(JDDL+IDDL-1).EQ.0) CALL ASSERT(.FALSE.)
C        
        CALL POSDDL('NUME_DDL',NUMEDD,NOMNOE,'DY',NUMNOE,
     &               ZI(JDDL+IDDL))
        IF (ZI(JDDL+IDDL).EQ.0) CALL ASSERT(.FALSE.)
C        
        IF (NDIM.EQ.3) THEN
          CALL POSDDL('NUME_DDL',NUMEDD,NOMNOE,'DZ',
     &                NUMNOE,ZI(JDDL+IDDL+1))
          IF (ZI(JDDL+IDDL+1).EQ.0) CALL ASSERT(.FALSE.)
        ENDIF
 25   CONTINUE
C
C --- CREATION DES TABLEAUX D'APPARIEMENT (DIMENSIONNES AU MAX)
C
      APPARI = RESOCO(1:14)//'.APPARI'
      APMEMO = RESOCO(1:14)//'.APMEMO'
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APDDL  = RESOCO(1:14)//'.APDDL'
C
      CALL WKVECT(APPARI,'V V I',NTNOE+1      ,JAPPAR)
      CALL WKVECT(APMEMO,'V V I',ZAPME*NNOCO  ,JAPMEM)
      CALL WKVECT(APCOEF,'V V R',30*NTNOE     ,JAPCOE)
      CALL WKVECT(APPOIN,'V V I',NTNOE+1      ,JAPPTR)
      CALL WKVECT(APDDL ,'V V I',30*NTNOE     ,JAPDDL)
C
      ZI(JAPPAR) = NTNOE  
C
C --- JEU DEBUT DU PAS DE TEMPS (UTILE SI REDECOUPAGE, SOVJEU/REAJEU)
C      
      JEUINI = RESOCO(1:14)//'.JEUINI'      
      CALL WKVECT(JEUINI,'V V R',NTNOE,JJEUIN)  
C
C --- JEU AU DEBUT DES ALGOS
C      
      JEUALG = RESOCO(1:14)//'.JEUALG'      
      CALL WKVECT(JEUALG,'V V R',NTNOE,JJEUAL) 
C
C --- JEU TOTAL
C
      APJEU  = RESOCO(1:14)//'.APJEU'
      CALL WKVECT(APJEU ,'V V R',NTNOE,JAPJEU)
C
C --- JEU SUPPLEMENTAIRE (DIST_*) 
C
      JEUSUP = RESOCO(1:14)//'.JSUPCO'
      CALL WKVECT(JEUSUP,'V V R',NTNOE,JJSUP )
C
C --- TANGENTES RESULTANTES
C
      TANGCO = RESOCO(1:14)//'.TANGCO'
      CALL WKVECT(TANGCO,'V V R',6*NTNOE,JTANGO)                 
C
C --- SI METHODE SANS CONTACT, ON SORT
C
      IF (LVERIF) THEN
        GOTO 9999
      ENDIF
C
C --- VECTEURS GESTION DES LIAISONS
C --- VECTEUR COCO : 
C ---       JBID 0 : DIMENSION 
C ---       JBID 1 : INDIC VAUT 1 LORSQU'ON AJOUTE UNE LIAISON 
C ---              :       VAUT 0 LORSQU'ON SUPPRIME UNE LIAISON 
C ---       JBID 2 : NOMBRE DE LIAISON DE CONTACT 
C ---       JBID 3 : POSITION DE LA LIAISON AJOUTEE 
C ---       JBID 4 : POSITION DE LA LIAISON SUPPRIMEE 
C ---       JBID 5 : NOMBRE DE LIAISON DE FROTTEMENT (DEUX DIRECTIONS) 
C ---       JBID 6 : NOMBRE DE LIAISON DE FROTTEMENT (1ERE DIRECTION ) 
C ---       JBID 7 : NOMBRE DE LIAISON DE FROTTEMENT (2EME DIRECTION ) 
C
C --- VECTEUR CONVEC : 
C ---        VAUT C0 : LIAISON DE CONTACT 
C ---        VAUT F0 : LIAISON DE FROTTEMENT ADHERENT (DEUX DIRECTIONS)
C ---        VAUT F1 : LIAISON DE FROTTEMENT ADHERENT (1ERE DIRECTION )
C ---        VAUT F2 : LIAISON DE FROTTEMENT ADHERENT (2EME DIRECTION )
C 
      COCO   = RESOCO(1:14)//'.COCO'
      CONVEC = RESOCO(1:14)//'.CONVEC'   
      CALL WKVECT(COCO  ,'V V I',ZCOCO,JCOCO)
      ZI(JCOCO+1-1) = NDIM
      ZI(JCOCO+2-1) = 0
      ZI(JCOCO+3-1) = 0
      ZI(JCOCO+4-1) = 0
      ZI(JCOCO+5-1) = 1
      ZI(JCOCO+6-1) = 0
      ZI(JCOCO+7-1) = 0
      ZI(JCOCO+8-1) = 0
      ZI(JCOCO+9-1) = NEQ
      CALL WKVECT(CONVEC,'V V K8',2*NTNOE,JVECC)
C
C --- LIAISONS OTEES (PIVOTS NULS)
C
      LIOT   = RESOCO(1:14)//'.LIOT'
      CALL WKVECT(LIOT  ,'V V I',4*NTNOE+4,JLIOT)
C
C --- LIAISONS ACTIVES
C      
      LIAC   = RESOCO(1:14)//'.LIAC'
      CALL WKVECT(LIAC  ,'V V I',3*NTNOE+1,JLIAC)
C
C --- LAGRANGES DE CONTACT/FROTTEMENT
C
      MU     = RESOCO(1:14)//'.MU'      
      CALL WKVECT(MU    ,'V V R',6*NTNOE  ,JMU  )
C
C --- VALEUR DE LA PSEUDO-PENALISATION EN FROT. LAGR.     
C
      ZR(JMU+6*NTNOE-1) = R8VIDE()
C
C --- INCREMENTS DE SOLUTIONS  
C --- TOUT SAUF CONTACT PENALISE SANS FROTTEMENT ET GCP
C
      IF ((.NOT.(LPENAC.AND.(.NOT.LCTFD))).AND.
     &   (.NOT.LGCP)) THEN
        DELT0  = RESOCO(1:14)//'.DEL0'
        DELTA  = RESOCO(1:14)//'.DELT'      
        CALL WKVECT(DELT0 ,'V V R',NEQ,JDELT0)
        CALL WKVECT(DELTA ,'V V R',NEQ,JDELTA)
      ENDIF
C
C --- STRUCTURES RESERVEES POUR LE FROTTEMENT
C
      IF (LCTFD) THEN
        AFMU   = RESOCO(1:14)//'.AFMU'
        CALL WKVECT(AFMU  ,'V V R',NEQ     ,JAFMU ) 
        APCOFR = RESOCO(1:14)//'.APCOFR'
        CALL WKVECT(APCOFR,'V V R',60*NTNOE,JAPCOF)
        APJEFX = RESOCO(1:14)//'.APJEFX'
        APJEFY = RESOCO(1:14)//'.APJEFY'
        CALL WKVECT(APJEFX,'V V R',NTNOE   ,JAPJFX)
        CALL WKVECT(APJEFY,'V V R',NTNOE   ,JAPJFY)
      ENDIF
C
C --- CAS DE LA METHODE PENALISEE: ON UTILISE AFMU
C
      IF (LPENAC.AND.(.NOT.LCTFD)) THEN
        AFMU   = RESOCO(1:14)//'.AFMU'
        CALL WKVECT(AFMU  ,'V V R',NEQ,JAFMU)
      ENDIF
C
C --- SD DE DONNEES POUR LES MATRICES DE CONTACT
C
      IF (.NOT.LGCP) THEN
        NBLIAI = NTNOE
C
C ---   DETERMINATION DES TAILLES DES DIFFERENTES MATRICES
C
        NBENAT = 0
        NBCM1A = 0
        NBFRO1 = 0
        NBFRO2 = 0        
        IF (LPENAC) THEN
C         PENALISATION DU CONTACT
C         ENAT
          NBENAT = NBLIAI
        ELSEIF ((.NOT.LCTFD) .OR. (LPENAF)) THEN
C         DUALISATION DU CONTACT SEULEMENT
C         CM1A
          NBCM1A = NBLIAI
        ELSE
C         DUALISATION DU CONTACT ET DU FROTTEMENT
C         CM1A
          NBCM1A = NDIM*NBLIAI
        ENDIF
C
C       FRO1
        NBFRO1 = (NDIM-1)*NBLIAI
C
C       FRO2
        NBFRO2 = NBLIAI        
        
C
C ---   CREATIONS DES MATRICES
C
        IF (LPENAC) THEN
C
C ---   MATRICE STOCKEE CREUSE E_N*A_cT (POUR CONTACT PENALISE)
C ---   TAILLE : NBENAT*30
C
            ENAT   = RESOCO(1:14)//'.ENAT'
            CALL JECREC(ENAT,'V V R','NU','DISPERSE','CONSTANT',NBENAT)
            CALL JEECRA(ENAT,'LONMAX',30,K8BID)
            DO 30 II = 1, NBENAT
              CALL JECROC(JEXNUM(ENAT,II))
 30         CONTINUE
C
        ELSE
C
C ---   MATRICE PRINCIPALE C-1*A_cT (POUR CONTACT DUALISE)
C ---   TAILLE : NBCM1A*NEQ
C
          CM1A   = RESOCO(1:14)//'.CM1A'
          CALL JECREC(CM1A,'V V R','NU','DISPERSE','CONSTANT',NBCM1A)
          CALL JEECRA(CM1A,'LONMAX',NEQ,K8BID)
          DO 40 II = 1, NBCM1A
            CALL JECROC(JEXNUM(CM1A,II))
 40       CONTINUE
C
        ENDIF
C
C ---   MATRICES STOCKEES CREUSES FRO1 ET FRO2
C ---   (POUR FROTTEMENT UNIQUEMENT)
C ---   TAILLE : NBFRO1*30 ET NBFRO2*30
C
        IF (LCTF3D) THEN
          FRO1 = RESOCO(1:14)//'.FRO1'
          FRO2 = RESOCO(1:14)//'.FRO2'
          CALL JECREC(FRO1,'V V R','NU','DISPERSE','CONSTANT',NBFRO1)
          CALL JECREC(FRO2,'V V R','NU','DISPERSE','CONSTANT',NBFRO2)
          CALL JEECRA(FRO1,'LONMAX',30,K8BID)
          CALL JEECRA(FRO2,'LONMAX',30,K8BID)
          DO 41 II = 1, NBFRO1
            CALL JECROC (JEXNUM(FRO1,II))
 41       CONTINUE
          DO 42 II = 1, NBFRO2
            CALL JECROC (JEXNUM(FRO2,II))
 42       CONTINUE
        ENDIF
      ENDIF
C
C --- MATRICE DE CONTACT ACM1AT
C
      IF (LMATRC) THEN
        CALL CFCRMA(NBCM1A,NOMA,RESOCO)
      ENDIF
C
 9999 CONTINUE
C
      CALL JEDEMA ()
      END
