      SUBROUTINE CFCRSD(NOMA  ,NUMEDD,DEFICO,RESOCO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 21/12/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_20
C
      IMPLICIT     NONE
      CHARACTER*8  NOMA
      CHARACTER*24 NUMEDD
      CHARACTER*24 DEFICO,RESOCO
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES)
C
C CREATION DES STRUCTURES DE DONNEES NECESSAIRES AU TRAITEMENT
C DU CONTACT/FROTTEMENT
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  NUMEDD : NOM DU NUME_DDL
C IN  DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C OUT RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32       JEXNUM
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFMMVD,ZTACF
      INTEGER      CFDISI,NDIMG,NTPC,NEQ
      INTEGER      NBLIAI,II,IRET
      REAL*8       R8VIDE
      CHARACTER*8  K8BID
      CHARACTER*19 MU ,ATMU ,AFMU
      INTEGER      JMU,JATMU,JAFMU
      CHARACTER*19 DELT0 ,DELTA
      INTEGER      JDELT0,JDELTA
      CHARACTER*19 CM1A,ENAT,FRO1,FRO2
      INTEGER      IFM,NIV
      INTEGER      NBCM1A,NBENAT,NBFRO1,NBFRO2
      CHARACTER*24 AUTOC1,AUTOC2
      CHARACTER*24 CLREAC,TACFIN,TANGCO
      INTEGER      JCLREA,JTACF ,JTANGO
      LOGICAL      CFDISL,LCTFD,LPENAC,LMATRC,LGCP  ,LCTF3D
      LOGICAL      LPENAF
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... CREATION DE LA SD RESULTAT'//
     &                ' CONTACT DISCRET'
      ENDIF
C
C --- INITIALISATIONS
C
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- INFOS SUR LA CHARGE DE CONTACT
C
      LCTFD  = CFDISL(DEFICO,'FROT_DISCRET')
      LPENAC = CFDISL(DEFICO,'CONT_PENA'   )
      LPENAF = CFDISL(DEFICO,'FROT_PENA'   )
      LMATRC = CFDISL(DEFICO,'MATR_CONT'   )
      LGCP   = CFDISL(DEFICO,'CONT_GCP'    )
      LCTF3D = CFDISL(DEFICO,'FROT_3D'     )
C
C --- SD POUR APPARIEMENT
C
      ZTACF = CFMMVD('ZTACF')
C
C --- INFORMATIONS
C
      NDIMG = CFDISI(DEFICO,'NDIM' )
      NTPC  = CFDISI(DEFICO,'NTPC' )
C
C --- PARAMETRES DE REACTUALISATION GEOMETRIQUE
C CLREAC(1) = TRUE  SI REACTUALISATION A FAIRE
C CLREAC(2) = TRUE  SI ATTENTE POINT FIXE CONTACT
C
      AUTOC1 = RESOCO(1:14)//'.REA1'
      AUTOC2 = RESOCO(1:14)//'.REA2'
      CALL VTCREB(AUTOC1,NUMEDD,'V','R',NEQ)
      CALL VTCREB(AUTOC2,NUMEDD,'V','R',NEQ)
      CLREAC = RESOCO(1:14)//'.REAL'
      CALL WKVECT(CLREAC,'V V L',3,JCLREA)
      ZL(JCLREA+1-1) = .FALSE.
      ZL(JCLREA+2-1) = .FALSE.
      ZL(JCLREA+3-1) = .FALSE.
C
C --- INFORMATIONS POUR METHODES "PENALISATION" ET "LAGRANGIEN"
C
      TACFIN = RESOCO(1:14)//'.TACFIN'
      CALL WKVECT(TACFIN,'V V R',NTPC*ZTACF,JTACF)
C
C --- TANGENTES RESULTANTES
C
      TANGCO = RESOCO(1:14)//'.TANGCO'
      CALL WKVECT(TANGCO,'V V R',6*NTPC,JTANGO)
C
C --- SD POUR LES JEUX
C
      CALL CFCRJE(DEFICO,RESOCO)
C
C --- SD POUR LES LIAISONS LINEAIRES
C
      CALL CFCRLI(NOMA  ,NUMEDD,DEFICO,RESOCO)
C
C --- LAGRANGES DE CONTACT/FROTTEMENT
C
      MU     = RESOCO(1:14)//'.MU'
      CALL WKVECT(MU    ,'V V R',6*NTPC  ,JMU  )
C
C --- VALEUR DE LA PSEUDO-PENALISATION EN FROT. LAGR.
C
      ZR(JMU+6*NTPC-1) = R8VIDE()
C
C --- FORCES NODALES DE CONTACT
C
      ATMU   = RESOCO(1:14)//'.ATMU'
      CALL WKVECT(ATMU,'V V R',NEQ,JATMU)
C
C --- FORCES NODALES DE FROTTEMENT
C
      IF (LCTFD) THEN
        AFMU   = RESOCO(1:14)//'.AFMU'
        CALL WKVECT(AFMU  ,'V V R',NEQ     ,JAFMU )
      ENDIF
C
C --- FORCES NODALES DE CONTACT DANS LE CAS DE LA METHODE PENALISEE
C --- ON UTILISE AFMU
C
      IF (LPENAC.AND.(.NOT.LCTFD)) THEN
        AFMU   = RESOCO(1:14)//'.AFMU'
        CALL WKVECT(AFMU  ,'V V R',NEQ,JAFMU)
      ENDIF
C
C --- INCREMENTS DE SOLUTIONS
C --- TOUT SAUF CONTACT PENALISE SANS FROTTEMENT ET GCP
C
      IF ((.NOT.(LPENAC.AND.(.NOT.LCTFD))).AND.
     &   (.NOT.LGCP)) THEN
        DELT0  = RESOCO(1:14)//'.DEL0'
        DELTA  = RESOCO(1:14)//'.DELT'
        CALL WKVECT(DELT0 ,'V V R',NEQ,JDELT0)
        CALL WKVECT(DELTA ,'V V R',NEQ,JDELTA)
      ENDIF
C
C --- SD DE DONNEES POUR LES MATRICES DE CONTACT
C
      IF (.NOT.LGCP) THEN
        NBLIAI = NTPC
C
C ---   DETERMINATION DES TAILLES DES DIFFERENTES MATRICES
C
        NBENAT = 0
        NBCM1A = 0
        NBFRO1 = 0
        NBFRO2 = 0
        IF (LPENAC) THEN
C         PENALISATION DU CONTACT
C         ENAT
          NBENAT = NBLIAI
        ELSEIF ((.NOT.LCTFD) .OR. LPENAF) THEN
C         DUALISATION DU CONTACT SEULEMENT
C         CM1A
          NBCM1A = NBLIAI
        ELSE
C         DUALISATION DU CONTACT ET DU FROTTEMENT
C         CM1A
          NBCM1A = NDIMG*NBLIAI
        ENDIF
C
C       FRO1
        NBFRO1 = (NDIMG-1)*NBLIAI
C
C       FRO2
        NBFRO2 = NBLIAI

C
C ---   CREATIONS DES MATRICES
C
        IF (LPENAC) THEN
C
C ---   MATRICE STOCKEE CREUSE E_N*A_cT (POUR CONTACT PENALISE)
C ---   TAILLE : NBENAT*30
C
            ENAT   = RESOCO(1:14)//'.ENAT'
            CALL JECREC(ENAT,'V V R','NU','DISPERSE','CONSTANT',NBENAT)
            CALL JEECRA(ENAT,'LONMAX',30,K8BID)
            DO 30 II = 1, NBENAT
              CALL JECROC(JEXNUM(ENAT,II))
 30         CONTINUE
C
        ELSE
C
C ---   MATRICE PRINCIPALE C-1*A_cT (POUR CONTACT DUALISE)
C ---   TAILLE : NBCM1A*NEQ
C
          CM1A   = RESOCO(1:14)//'.CM1A'
          CALL JECREC(CM1A,'V V R','NU','DISPERSE','CONSTANT',NBCM1A)
          CALL JEECRA(CM1A,'LONMAX',NEQ,K8BID)
          DO 40 II = 1, NBCM1A
            CALL JECROC(JEXNUM(CM1A,II))
 40       CONTINUE
C
        ENDIF
C
C ---   MATRICES STOCKEES CREUSES FRO1 ET FRO2
C ---   (POUR FROTTEMENT UNIQUEMENT)
C ---   TAILLE : NBFRO1*30 ET NBFRO2*30
C
        IF (LCTF3D) THEN
          FRO1 = RESOCO(1:14)//'.FRO1'
          FRO2 = RESOCO(1:14)//'.FRO2'
          CALL JECREC(FRO1,'V V R','NU','DISPERSE','CONSTANT',NBFRO1)
          CALL JECREC(FRO2,'V V R','NU','DISPERSE','CONSTANT',NBFRO2)
          CALL JEECRA(FRO1,'LONMAX',30,K8BID)
          CALL JEECRA(FRO2,'LONMAX',30,K8BID)
          DO 41 II = 1, NBFRO1
            CALL JECROC (JEXNUM(FRO1,II))
 41       CONTINUE
          DO 42 II = 1, NBFRO2
            CALL JECROC (JEXNUM(FRO2,II))
 42       CONTINUE
        ENDIF
      ENDIF
C
C --- MATRICE DE CONTACT ACM1AT
C
      IF (LMATRC) THEN
        CALL CFCRMA(NBCM1A,NOMA,RESOCO)
      ENDIF
C
      CALL JEDEMA ()
      END
