      SUBROUTINE LCMATE( FAMI,KPG,KSP,COMP,MOD,IMAT,NMAT,TEMPD,TEMPF,
     &                   IMPEXP,TYPMA,HSR,MATERD,MATERF,MATCST,NBCOMM,
     &                   CPMONO,ANGMAS,PGL,ITMAX,TOLER,NDT,NDI,NR,CRIT,
     &                   NVI,VIND,NFS,NSG,TOUTMS,NHSR,NUMHSR,SIGD)
      IMPLICIT   NONE
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 25/02/2013   AUTEUR PROIX J-M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C RESPONSABLE JMBHH01 J.M.PROIX
C       ----------------------------------------------------------------
C       RECUPERATION DU MATERIAU A TEMPF ET TEMPD
C       IN  FAMI   :  FAMILLE DE POINT DE GAUSS (RIGI,MASS,...)
C           KPG,KSP:  NUMERO DU (SOUS)POINT DE GAUSS
C           COMP   :  COMPORTEMENT
C           MOD    :  TYPE DE MODELISATION
C           IMAT   :  ADRESSE DU MATERIAU CODE
C           NMAT   :  DIMENSION 1 DE MATER
C           TEMPD  :  TEMPERATURE A T
C           TEMPF  :  TEMPERATURE A T + DT
C           IMPEXP : 0 IMPLICITE, 1 EXPLICITE
C      ANGMAS  : LES TROIS ANGLES DU MOT_CLEF MASSIF (AFFE_CARA_ELEM)
C       OUT MATERD :  COEFFICIENTS MATERIAU A T    (TEMPD )
C           MATERF :  COEFFICIENTS MATERIAU A T+DT (TEMPF )
C                     MATER(*,I) = CARACTERISTIQUES MATERIAU
C                                    I = 1  CARACTERISTIQUES ELASTIQUES
C                                    I = 2  CARACTERISTIQUES PLASTIQUES
C           MATCST :  'OUI' SI  MATERIAU A T = MATERIAU A T+DT
C                     'NON' SINON OU 'NAP' SI NAPPE DANS 'VECMAT.F'
C           NBCOMM : POSITION DES COEF POUR CHAQUE LOI DE CHAQUE SYSTEME
C           CPMONO : NOMS DES LOIS POUR CHAQUE FAMILLE DE SYSTEME
C           PGL    : MATRICE DE PASSAGE
C           NDT    :  NB TOTAL DE COMPOSANTES TENSEURS
C           NDI    :  NB DE COMPOSANTES DIRECTES  TENSEURS
C           NR     :  NB DE COMPOSANTES SYSTEME NL
C           NVI    :  NB DE VARIABLES INTERNES
C           TOUTMS :  TOUS LES TENSEURS MS
C           HSR    : MATRICE D'INTERACTION POUR L'ECROUISSAGE ISOTROPE
C                    UTILISEE SEULEMENT POUR LE MONOCRISTAL IMPLICITE
C       ----------------------------------------------------------------
      INTEGER       IMAT,NMAT,NDT,NDI,NR,NVI,I,ITMAX,KPG,KSP,IMPEXP
      REAL*8        MATERD(NMAT,2),MATERF(NMAT,2),TEMPD,TEMPF
      REAL*8        VIND(*),PGL(3,3),ANGMAS(3),TOLER,CRIT(*),SIGD(6)
      CHARACTER*16  LOI, COMP(*)
      CHARACTER*8   MOD,TYPMA
      CHARACTER*3   MATCST
      CHARACTER*(*) FAMI
C     SPECIFIQUE MONOCRISTAL
      INTEGER       NUMHSR(*),NBCOMM(*),NFS,NSG,NHSR
      REAL*8        HSR(*),TOUTMS(*)
      CHARACTER*24  CPMONO(*)
C       ----------------------------------------------------------------
C
C -     INITIALISATION DE MATERD ET MATERF A 0.
C
      DO 10 I = 1 , NMAT
         MATERD(I,1) = 0.D0
         MATERD(I,2) = 0.D0
         MATERF(I,1) = 0.D0
         MATERF(I,2) = 0.D0
 10   CONTINUE
C
      LOI = COMP(1)
      IF     ( LOI(1:8) .EQ. 'ROUSS_PR' ) THEN
         CALL RSLMAT ( FAMI,KPG,KSP,MOD,IMAT,NMAT,
     &                 MATERD,MATERF,MATCST,NDT,NDI,NR,NVI,VIND)
C
      ELSEIF ( LOI(1:10) .EQ. 'ROUSS_VISC' ) THEN
         CALL RSVMAT ( FAMI,KPG,KSP,MOD,IMAT,NMAT,
     &                 MATERD,MATERF,MATCST,NDT,NDI,NR,NVI,VIND)
C
      ELSEIF ( LOI(1:9) .EQ. 'VISCOCHAB' ) THEN
         CALL CVMMAT ( FAMI,KPG,KSP,MOD,IMAT,NMAT,MATERD,
     &    MATERF, MATCST, TYPMA,  NDT,   NDI , NR ,CRIT,VIND,NVI,SIGD )
C
      ELSEIF (LOI.EQ.'VENDOCHAB'.OR.LOI.EQ.'VISC_ENDO_LEMA') THEN
         CALL VECMAT ( FAMI, KPG, KSP, MOD, LOI,IMAT,   NMAT, MATERD,
     &                 MATERF, MATCST, TYPMA,  NDT,   NDI , NR , NVI )
C
      ELSEIF ( LOI(1:6) .EQ. 'LAIGLE' ) THEN
         CALL LGLMAT ( MOD, IMAT, NMAT, TEMPD, MATERD,
     &                 MATERF, MATCST, NDT, NDI, NR, NVI )
C
      ELSEIF (( LOI(1:10) .EQ. 'HOEK_BROWN' ).OR.
     &        ( LOI(1:14) .EQ. 'HOEK_BROWN_EFF' ))THEN
         CALL HBRMAT ( MOD, IMAT, NMAT, TEMPD, MATERD,
     &                 MATERF, MATCST, NDT, NDI, NR, NVI )
C
      ELSEIF ( LOI(1:8) .EQ. 'MONOCRIS' ) THEN
         CALL LCMMAT (FAMI,KPG,KSP,COMP,MOD,IMAT,NMAT,ANGMAS,PGL,
     1     MATERD,MATERF, MATCST, NBCOMM,CPMONO,NDT, NDI, NR, NVI,HSR,
     &     NFS,NSG,TOUTMS,VIND,IMPEXP)
         TYPMA='COHERENT'
         IF(MOD.NE.'3D') THEN
            SIGD(5)=0.D0
            SIGD(6)=0.D0
         ENDIF
C
      ELSEIF ( LOI(1:8) .EQ. 'POLYCRIS' ) THEN
         CALL LCMMAP (FAMI,KPG,KSP, COMP, MOD, IMAT, NMAT,ANGMAS,PGL,
     &     MATERD,MATERF, MATCST, NBCOMM,CPMONO,NDT, NDI, NR, NVI,
     &     NFS,NSG,NHSR,NUMHSR,HSR)
         TYPMA='COHERENT'
C
      ELSEIF ( LOI(1:7) .EQ. 'IRRAD3M' ) THEN
         CALL IRRMAT(FAMI,KPG,KSP,MOD,IMAT,NMAT,ITMAX,TOLER,
     &               MATERD,MATERF,MATCST,NDT,NDI,NR,NVI)

      ELSEIF ( LOI(1:15) .EQ. 'BETON_BURGER_FP' ) THEN
         CALL BURMAT(FAMI,KPG,KSP,MOD,IMAT,NMAT,
     &               MATERD,MATERF,MATCST,NDT,NDI,NR,NVI)
         TYPMA='COHERENT'
      ELSEIF ( LOI(1:4) .EQ. 'LETK' ) THEN
         CALL LKIMAT(MOD,IMAT,NMAT,MATERD,MATERF,
     &               MATCST,NDT,NDI,NVI,NR)
         TYPMA='COHERENT'
      ELSEIF  ( LOI .EQ. 'HAYHURST' ) THEN
         CALL HAYMAT ( FAMI,KPG,KSP,MOD,IMAT,NMAT,'-',
     &                 MATERD(1,1),MATERD(1,2),NVI,NR)
         CALL HAYMAT ( FAMI,KPG,KSP,MOD,IMAT,NMAT,'+',
     &                 MATERF(1,1),MATERF(1,2),NVI,NR)
         CALL MATECT ( MATERD, MATERF, NMAT, MATCST)
         TYPMA='COHERENT'
      ELSE
      
C CAS GENERAL      
      
         CALL LCMATT(FAMI,KPG,KSP,MOD,IMAT,NMAT,'-',COMP,
     &               MATERD(1,1),MATERD(1,2),TYPMA,NDT,NDI,NR,NVI)
         CALL LCMATT(FAMI,KPG,KSP,MOD,IMAT,NMAT,'+',COMP,
     &               MATERF(1,1),MATERF(1,2),TYPMA,NDT,NDI,NR,NVI)

         CALL MATECT ( MATERD, MATERF, NMAT, MATCST)
         
      ENDIF
C
C     - DANS LCPLNL ON DIMENSIONNE DES TABLES AVEC (NDT+NVI) QUI SONT
C       ENSUITE UTILISEES PAR NEWTON
C     - LA DIMENSION DU SYSTEME DIFFERENTIEL EST NR
C     ==> IL FAUT DONC NDT+NVI >= NR
      CALL ASSERT( (NDT+NVI).GE.NR )
      END
