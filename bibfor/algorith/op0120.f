      SUBROUTINE OP0120()
      IMPLICIT NONE
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     CALCUL D'UNE MATRICE INTERSPECTRALE
C
C     ------------------------------------------------------------------
C
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
C-----------------------------------------------------------------------
      INTEGER I ,IFFT ,IFM ,IMATR ,IT ,J ,K
      INTEGER KB ,KF ,KK ,KTABL ,L ,L1 ,L2
      INTEGER LCOMP1 ,LFON ,LINT ,LONG1 ,LONG2
      INTEGER LRESU1 ,LRMS ,LS1 ,LSSX ,LTABL ,LVALC ,LVALE
      INTEGER NBPTS ,NBPTS2 ,NDA ,NDD
      INTEGER NFCOD ,NFONC ,NIV ,NMATR
      REAL*8 BMATR ,DFREQ ,DT ,DURANA ,DURDEC ,FREFIN ,FREINI
      REAL*8 PTS ,PTS1 ,PTS2 ,PTS3 ,TINST ,TINST1
      REAL*8 TINST2
C-----------------------------------------------------------------------
      INTEGER       LONG, IVAL(2), IER
      REAL*8        RESU, ZERO
      CHARACTER*8   K8B, NOMU, NOMREF
      CHARACTER*16  CONCEP, NOMCMD
      CHARACTER*19  NOMFON
      CHARACTER*24  NOMOBJ
      CHARACTER*24  CHNUMI,CHNUMJ,CHFREQ,CHVALE

      INTEGER      IARG,ISPEC
      INTEGER       LNUMI,LNUMJ,LFREQ,LREFE,NBABS,MXVAL,IPF
C
C     ------------------------------------------------------------------
C
C     --- INITIALISATION DES DIVERS ---
      CALL JEMARQ()
C
      CALL GETRES ( NOMU, CONCEP, NOMCMD )
C
      CALL GETVR8 ( ' ','INST_INIT' ,0,IARG,1, TINST1 ,L   )
      CALL GETVR8 ( ' ','INST_FIN'  ,0,IARG,1, TINST2 ,L    )
      CALL GETVIS ( ' ','NB_POIN'   ,0,IARG,1, NBPTS  ,L    )
      CALL GETVID ( ' ','FONCTION'  ,0,IARG,0, K8B    ,NFONC)
      NFONC = ABS(NFONC)
C
C    --- VERIFICATION DU NOMBRE DE POINTS ---
      PTS = LOG(DBLE(NBPTS))/LOG(2.D0)
      PTS1 = AINT(PTS)
      PTS2 = ABS(PTS1-PTS)
      PTS3 = ABS(1.D0-PTS2)
      IF (PTS2.GE.1.D-06 .AND. PTS3.GE.1.D-06) THEN
        CALL U2MESS('F','ALGORITH9_56')
      END IF
C
      CALL INFMAJ
      CALL INFNIV ( IFM , NIV )
C
      NOMREF=NOMU(1:8)

      CALL WKVECT(NOMREF//'.REFE','G V K16',2,LREFE)
      ZK16(LREFE) = 'DSP'
      ZK16(LREFE+1) = 'TOUT'
C
      DURANA = TINST2 - TINST1
      CALL GETVR8 ( ' ', 'DUREE_ANALYSE' , 0,IARG,1, DURANA, NDA )
C
      DURDEC = DURANA
      CALL GETVR8 ( ' ', 'DUREE_DECALAGE', 0,IARG,1, DURDEC, NDD )
C
      IF ( NDA .NE. 0 ) THEN
        BMATR = ( (TINST2-TINST1) - DURANA ) / DURDEC
        NMATR = INT( ABS(BMATR) + 1 )
      ELSE
        NMATR = 1
      ENDIF
C
      CALL WKVECT('&&OP0120.TEMP.LFON','V V K8',NFONC,LFON  )
      CALL WKVECT('&&OP0120.TEMP.VALE','V V C' ,NBPTS,LVALE )
C
      CALL GETVID ( ' ', 'FONCTION', 0,IARG,NFONC, ZK8(LFON), L )
C
      DT     = DURANA / NBPTS
      LONG   = NBPTS * NFONC / 2
      NFCOD  = NFONC * ( NFONC+1 ) / 2
      LONG1  = NBPTS * NFCOD
      LONG2  = NMATR * NFCOD
      NBPTS2 = NBPTS / 2
      DFREQ  = 1.D0 / DURANA
CC
      CALL WKVECT('&&OP0120.TEMP.VALC','V V C',LONG,LVALC)
      CALL WKVECT('&&OP0120.TEMP.LINT','V V R',NBPTS,LINT)
      CALL WKVECT('&&OP0120.TEMP.LSSX','V V R',LONG1,LSSX)
      CALL WKVECT('&&OP0120.TEMP.LRMS','V V R',LONG2,LRMS)
CC
      DO 20 IMATR = 1,NMATR
        DO 30 KF = 1,NFONC
          NOMFON = ZK8(LFON+KF-1)
          DO 50 IT = 1,NBPTS
            TINST = TINST1 + (IMATR-1)* (DURDEC) + (IT-1)*DT
            CALL FOINTE('F ',NOMFON,1,'INST',TINST,RESU,IER)
            ZERO = 0.D0
            ZC(LVALE+IT-1) = DCMPLX(RESU,ZERO)
   50     CONTINUE
C       --- CALCUL DE LA TRANFORMEE DE FOURIER ---
          IFFT = 1
          CALL FFT(ZC(LVALE),NBPTS,IFFT)
C       ---
          DO 60 IT = 1,NBPTS2
            LRESU1 = LVALC + (KF-1)*NBPTS2 + (IT-1)
            ZC(LRESU1) = ZC(LVALE+IT-1)*DT
   60     CONTINUE
   30   CONTINUE
        LCOMP1 = 0
        DO 70 J = 1,NFONC
          DO 80 I = 1,J
C
            CALL CALINT(I,J,ZC(LVALC),NBPTS,ZR(LINT),LONG,DURANA)
C
            DO 90 KK = 1,NBPTS2
              L1 = LINT + KK - 1
              L2 = LSSX + KK - 1 + NBPTS*LCOMP1
              ZR(L2) = ZR(L2) + ZR(L1)
              ZR(L2+NBPTS2) = ZR(L2+NBPTS2) + ZR(L1+NBPTS2)
   90       CONTINUE
            LCOMP1 = LCOMP1 + 1
   80     CONTINUE
   70   CONTINUE
        CALL RMS(IMATR,ZR(LSSX),LONG1,ZR(LRMS),LONG2,NBPTS,NFCOD,DFREQ,
     &           NFONC)
   20 CONTINUE
      DO 110 KB = 1,LONG1
        LS1 = LSSX + KB - 1
        ZR(LS1) = ZR(LS1)/DBLE(NMATR)
  110 CONTINUE
C
C     --- CREATION DES NOMS DE FONCTIONS ---
      MXVAL = NFONC*(NFONC+1)/2
      CHVALE = NOMREF//'.VALE'
      CALL JECREC(CHVALE,'G V R','NU','DISPERSE','VARIABLE',MXVAL)
      CHFREQ = NOMREF//'.FREQ'
      CHNUMI = NOMREF//'.NUMI'
      CHNUMJ = NOMREF//'.NUMJ'
      CALL WKVECT(CHNUMI,'G V I',MXVAL,LNUMI)
      CALL WKVECT(CHNUMJ,'G V I',MXVAL,LNUMJ)
      CALL WKVECT(CHFREQ,'G V R',NBPTS2,LFREQ)

      DO 250 K = 1,NBPTS2
        ZR(LFREQ+K-1) = (K-1)*DFREQ
250   CONTINUE

      KTABL = 1
      IPF = 0
      DO 130 J = 1,NFONC
        IVAL(2) = J
C
        DO 140 I = 1,J
          IVAL(1) = I
          IPF = IPF+1
          ZI(LNUMI-1+IPF) = IVAL(1)
          ZI(LNUMJ-1+IPF) = IVAL(2)
C
          IF (IVAL(1) .EQ. IVAL(2)) THEN
            NBABS = NBPTS2
          ELSE
            NBABS = 2*NBPTS2
          ENDIF

          CALL JECROC(JEXNUM(CHVALE,IPF))
          CALL JEECRA(JEXNUM(CHVALE,IPF),'LONMAX',NBABS,' ')
          CALL JEECRA(JEXNUM(CHVALE,IPF),'LONUTI',NBABS,' ')
          CALL JEVEUO(JEXNUM(CHVALE,IPF),'E',ISPEC)

          DO 150 K = 1,NBPTS2
            IF (IVAL(1) .EQ. IVAL(2)) THEN
              L1 = ISPEC + K-1
              L2 = LSSX + NBPTS* (KTABL-1) + K - 1
              ZR(L1) = ZR(L2)
            ELSE
              L1 = ISPEC + (K-1)*2
              L2 = LSSX + NBPTS* (KTABL-1) + K - 1
              ZR(L1) = ZR(L2)
              ZR(L1+1) = ZR(L2+NBPTS2)
            ENDIF
  150     CONTINUE
          KTABL = KTABL + 1
  140   CONTINUE
  130 CONTINUE
C
      IF ( NIV .GE. 1 ) THEN
         FREINI = 0.D0
         FREFIN = DFREQ* (NBPTS2-1)
         WRITE (IFM,200)
         WRITE (IFM,201) DFREQ, FREINI, FREFIN
      ENDIF
      IF ( NIV .GE. 2 ) THEN
         NOMOBJ = '&&OP0117.FONCTION'
         IF (NFCOD.NE.MXVAL) CALL U2MESS('F','MODELISA2_89')
         CALL JEVEUO ( NOMOBJ, 'L', LTABL )
         CALL INTIMP ( IFM, ZR(LRMS), ZK24(LTABL), NMATR, NFCOD )
      ENDIF
C
C
      CALL TITRE
C
 200  FORMAT ('<PAS EN FREQUENCE>  <FREQ. INITIALE>  <FREQ. FINALE>')
 201  FORMAT (4X,D11.4,4X,D11.4,4X,D11.4)
C
      CALL JEDEMA()
      END
