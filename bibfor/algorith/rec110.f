      SUBROUTINE REC110(NOMRES,NOMSQU,MODGEN)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 03/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C***********************************************************************
C-----------------------------------------------------------------------
C  BUT : < FUSIONNER LES NOEUDS D'INTERFACE D'UN SQUELETTE EXISTANT>
C
C
C-----------------------------------------------------------------------
C
C NOMRES  /I/ : NOM K8 DU MAILLAGE SQUELETTE A MODIFIER
C MODGEN  /I/ : NOM K8 DU MODELE GENERALISE
C
C
C
      INCLUDE 'jeveux.h'
C
C
C   PARAMETER : REPRESENTE LE NOMBRE MAX DE COMPOSANTES DE LA GRANDEUR
C   SOUS-JACENTE TRAITEE
C
      CHARACTER*24 VALK(4)
      CHARACTER*8  NOMRES,NOMSQU,MODGEN,TT,NOMSST,LINTF,LJNTF
      CHARACTER*8  K8BID,NOMNOE,CRIT
      LOGICAL      FUSION
      INTEGER      IARG
C
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
      INTEGER I ,I1 ,I2 ,IADRES ,IBID ,IGR ,IN 
      INTEGER INCR ,INEW ,IOCC ,IOLD ,IPOSI ,IRECO ,IRET 
      INTEGER ISTAC ,JLTNS ,JN ,JNCR ,JPOSI ,JSTAC ,LCONN 
      INTEGER LCOORD ,LCORR ,LCORT ,LDIME ,LINTD ,LINVER ,LJNTD 
      INTEGER LREFE ,LSK ,LSK2 ,LSTAC ,LTABI ,LTABJ ,LVNEW 
      INTEGER LVOLD ,NBCOOR ,NBEC ,NBFUSE ,NBMA ,NBMOIN ,NBN 
      INTEGER NBND ,NBND2 ,NBNEW ,NBNI ,NBNJ ,NBOCC ,NBRECO 
      INTEGER NBSTAC ,NDIST ,NNODES ,NR ,NUMERO 
      REAL*8 DIST ,DISTIJ ,PREC ,XII ,XJ ,YII ,YJ 
      REAL*8 ZII ,ZJ 
C-----------------------------------------------------------------------
      DATA TT      /'&&REC110'/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- RECOPIE DE DES OBJETS SQUELETTE DANS LE NOUVEAU SQUELETTE ---
      CALL COPISD('SQUELETTE','G',NOMSQU,NOMRES)
C     IL FAUT MODIFIER .LTNS(1) :
      CALL JEVEUO(NOMRES//'           .LTNS','E',JLTNS)
      ZK24(JLTNS-1+1)(1:8)=NOMRES
C
      CALL JELIRA(NOMRES//'         .NOMSST','LONUTI',NBSTAC,K8BID)
      CALL JEVEUO(NOMRES//'         .NOMSST','L',LSTAC)
      CALL JEVEUO(NOMRES//'.COORDO    .VALE','E',LCOORD)
      CALL JELIRA(NOMRES//'.COORDO    .VALE','LONUTI',NBCOOR,K8BID)
      CALL JELIRA(NOMRES//'.INV.SKELETON   ','LONUTI',NBND2,K8BID)
      CALL JEVEUO(NOMRES//'.INV.SKELETON   ','E',LSK)
      NBND = NBND2/2
      LSK2 = LSK + NBND
C
C     --- CREATION D'UNE LISTE DE CORRESPONDANCE ANCIEN/NOUVEAU NOEUD
      CALL WKVECT(TT//'.CORRES','V V I',NBND,LCORT)
C     ET INVERSE
      CALL WKVECT(TT//'.INVER','V V I',NBND,LINVER)
      DO 5 I=1,NBND
         ZI(LCORT-1+I) = I
         ZI(LINVER-1+I) = I
 5    CONTINUE

C
C     --- TABLEAU DE LISTES DE NOEUDS POUR COMPARAISON ---
      CALL WKVECT(TT//'.TABI','V V I',NBND,LTABI)
      CALL WKVECT(TT//'.TABJ','V V I',NBND,LTABJ)
C
C --- LECTURE DE RECO_GLOBAL ---
C
C
      CALL GETVTX('RECO_GLOBAL','GROUP_NO_1',1,IARG,0,K8BID,IGR)
      IF (IGR .EQ. 0) THEN
C
C --- ON FUSIONNE LES NOEUDS DE TOUTES LES INTERFACES DYNAMIQUES ---
C
C     --- LECTURE DE LA PRECISION
      CALL GETVR8('RECO_GLOBAL','PRECISION',1,IARG,1,PREC,IBID)
      CALL GETVR8('RECO_GLOBAL','DIST_REFE',1,IARG,1,DIST,NDIST)
      CALL GETVTX('RECO_GLOBAL','CRITERE',1,IARG,1,CRIT,NDIST)
      IF (NDIST.EQ.0) THEN
C     --- AU CAS OU LA DISTANCE DE REFERENCE N'EST PAS DONNEE,ON DEVRAIT
C         LA LIRE DANS LA SD MAILLAGE (VOIR COMMANDE LIRE_MAILLAGE).
C         ELLE EST POUR L'INSTANT OBLIGATOIRE A LA PREMIERE OCCURENCE
C         DE RECO_GLOBAL
          CALL U2MESS('F','ALGORITH10_21')
      ENDIF
      INCR = 0
      NBFUSE = 0
      NBMOIN = 0
      DO 80 ISTAC = 1,NBSTAC
         NOMSST = ZK8(LSTAC-1+ISTAC)
         CALL MGUTDM(MODGEN,NOMSST,IBID,'NOM_LIST_INTERF',IBID,LINTF)
         CALL JELIRA(LINTF//'.IDC_DEFO','LONUTI',NNODES,K8BID)
         CALL DISMOI('F','NB_EC',LINTF,'INTERF_DYNA',NBEC,K8BID,IRET)
         NBNI = NNODES/(2+NBEC)
         CALL JEVEUO(LINTF//'.IDC_DEFO','L',LINTD)
         DO 10 IN = 1,NBNI
            NUMERO = ZI(LINTD-1+IN)
            IF (ZI(LSK-1+NUMERO+INCR).NE.ISTAC) THEN
               CALL U2MESG('E+','ALGORITH15_55',0,' ',0,0,0,0.D0)
               CALL JENUNO(JEXNUM(NOMSQU//'.NOMNOE',NUMERO),K8BID)
               VALK (1) = K8BID
               VALK (2) = LINTF
               VALK (3) = NOMSST
               CALL U2MESG('E','ALGORITH15_56',3,VALK,0,0,0,0.D0)
            ENDIF
            IF (ZI(LSK2-1+NUMERO+INCR).NE.NUMERO) THEN
               CALL U2MESG('E+','ALGORITH15_55',0,' ',0,0,0,0.D0)
               CALL JENUNO(JEXNUM(NOMSQU//'.NOMNOE',NUMERO),K8BID)
               VALK (1) = K8BID
               VALK (2) = LINTF
               VALK (3) = NOMSQU
               CALL U2MESG('E','ALGORITH15_58',3,VALK,0,0,0,0.D0)

            ENDIF
            ZI(LTABI-1+IN) = NUMERO + INCR
 10      CONTINUE
         INCR = NUMERO + INCR
C        --- ON SE POSITIONNE EN FIN DE SOUS-STRUCTURE ISTAC ---
 20      CONTINUE
         IF (ZI(LSK+INCR) .EQ. ISTAC) THEN
            INCR = INCR + 1
            GOTO 20
         ENDIF
C        ---
         JNCR = INCR
         DO 70 JSTAC = ISTAC+1,NBSTAC
            NOMSST = ZK8(LSTAC-1+JSTAC)
            CALL MGUTDM(MODGEN,NOMSST,IBID,'NOM_LIST_INTERF',IBID,LJNTF)
            CALL JELIRA(LJNTF//'.IDC_DEFO','LONUTI',NNODES,K8BID)
            CALL DISMOI('F','NB_EC',LJNTF,'INTERF_DYNA',NBEC,K8BID,IRET)
            NBNJ = NNODES/(2+NBEC)
            CALL JEVEUO(LJNTF//'.IDC_DEFO','L',LJNTD)
            DO 30 JN = 1,NBNJ
               NUMERO = ZI(LJNTD-1+JN)
               IF (ZI(LSK-1+NUMERO+JNCR).NE.JSTAC) THEN
                CALL U2MESG('E+','ALGORITH15_55',0,' ',0,0,0,0.D0)
                CALL JENUNO(JEXNUM(NOMSQU//'.NOMNOE',NUMERO),K8BID)
                VALK (1) = K8BID
                VALK (2) = LJNTF
                VALK (3) = NOMSST
                CALL U2MESG('E','ALGORITH15_60',3,VALK,0,0,0,0.D0)
               ENDIF
               IF (ZI(LSK2-1+NUMERO+JNCR).NE.NUMERO) THEN
                CALL U2MESG('E+','ALGORITH15_55',0,' ',0,0,0,0.D0)
                CALL JENUNO(JEXNUM(NOMSQU//'.NOMNOE',NUMERO),K8BID)
                VALK (1) = K8BID
                VALK (2) = LJNTF
                VALK (3) = NOMSQU
                CALL U2MESG('E','ALGORITH15_62',3,VALK,0,0,0,0.D0)
               ENDIF
               ZI(LTABJ-1+JN) = NUMERO + JNCR
 30         CONTINUE
            JNCR = NUMERO + JNCR
C           --- ON SE POSITIONNE EN FIN DE SOUS-STRUCTURE JSTAC ---
 40         CONTINUE
            IF (ZI(LSK+JNCR) .EQ. JSTAC) THEN
               JNCR = JNCR + 1
               GOTO 40
            ENDIF
C           ---- FUSION DES NOEUDS ---
            DO 60 IN = 1,NBNI
               IPOSI = (ZI(LTABI-1+IN)-1)*3
               XII = ZR(LCOORD+IPOSI)
               YII = ZR(LCOORD+IPOSI+1)
               ZII = ZR(LCOORD+IPOSI+2)
               DO 50 JN =1,NBNJ
                  FUSION = .TRUE.
                  JPOSI = (ZI(LTABJ-1+JN)-1)*3
                  XJ = ZR(LCOORD+JPOSI)
                  YJ = ZR(LCOORD+JPOSI+1)
                  ZJ = ZR(LCOORD+JPOSI+2)
                  DISTIJ = (XII-XJ)**2+(YII-YJ)**2+(ZII-ZJ)**2
                  DISTIJ = SQRT(ABS(DISTIJ))
                  IF (CRIT .EQ. 'RELATIF') THEN
                     IF (DISTIJ .GT. PREC*DIST) FUSION=.FALSE.
                  ELSE
                     IF (DISTIJ .GT. DIST) FUSION=.FALSE.
                  ENDIF
                  IF (FUSION) THEN
                      I1 = ZI(LCORT-1+ZI(LTABI-1+IN))
                      I2 = ZI(LTABI-1+IN)
                      IF (I1.EQ.I2) NBMOIN = NBMOIN +1
                      ZI(LCORT-1+ZI(LTABI-1+IN)) = ZI(LTABJ-1+JN)
                      ZI(LINVER-1+ZI(LTABJ-1+JN)) = ZI(LTABI-1+IN)
                      NBFUSE = NBFUSE + 1
                  ENDIF
 50            CONTINUE
 60         CONTINUE
 70      CONTINUE
 80   CONTINUE
C
      ELSE
C
C --- ON FUSIONNE LES INTERFACES DONNEES PAR L'UTILISATEUR ---
C
      CALL GETFAC('RECO_GLOBAL',NBRECO)
      NBFUSE = 0
      NBMOIN = 0
      DO 170 IRECO = 1,NBRECO
         CALL GETVTX('RECO_GLOBAL','GROUP_NO_1',IRECO,IARG,0,K8BID,NR)
         IF (NR .EQ. 0) THEN
            CALL U2MESG('F+','ALGORITH15_63',0,' ',0,0,0,0.D0)
         ENDIF
C        --- LECTURE DE LA PRECISION
         CALL GETVR8('RECO_GLOBAL','PRECISION',IRECO,IARG,1,PREC,IBID)
         CALL GETVR8('RECO_GLOBAL','DIST_REFE',IRECO,IARG,1,DIST,NDIST)
         CALL GETVTX('RECO_GLOBAL','CRITERE',IRECO,IARG,1,CRIT,NDIST)
         IF (NDIST.EQ.0) THEN
C        --- AU CAS OU LA DISTANCE DE REFERENCE N'EST PAS DONNEE,
C            ON DEVRAIT LA LIRE DANS LA SD MAILLAGE.
             CRIT='RELATIF'
         ENDIF
         CALL GETVTX('RECO_GLOBAL','SOUS_STRUC_1',IRECO,IARG,1,
     &               NOMSST,IBID)
C        --- RECHERCHE DE LA SOUS-STRUCTURE ---
         ISTAC = 0
 90      CONTINUE
         ISTAC = ISTAC + 1
         IF (ISTAC.LE.NBSTAC) THEN
             IF (ZK8(LSTAC-1+ISTAC).NE.NOMSST) GOTO 90
         ENDIF
         IF (ISTAC.GT.NBSTAC) THEN
            VALK (1) = NOMSST
            CALL U2MESG('F','ALGORITH15_64',1,VALK,0,0,0,0.D0)
         ENDIF
         CALL MGUTDM(MODGEN,NOMSST,IBID,'NOM_LIST_INTERF',IBID,LINTF)
         CALL JENUNO(JEXNUM(LINTF//'.IDC_NOMS',2),K8BID)
         CALL GETVTX('RECO_GLOBAL','GROUP_NO_1',IRECO,IARG,1,
     &               NOMNOE,IBID)
         IF (NOMNOE .NE. K8BID) THEN
            VALK (1) = LINTF
            VALK (2) = NOMSST
            VALK (3) = K8BID
            VALK (4) = NOMNOE
            CALL U2MESG('E','ALGORITH15_65',4,VALK,0,0,0,0.D0)
         ENDIF
         CALL JELIRA(LINTF//'.IDC_DEFO','LONUTI',NNODES,K8BID)
         CALL DISMOI('F','NB_EC',LINTF,'INTERF_DYNA',NBEC,K8BID,IRET)
         NBNI = NNODES/(2+NBEC)
C         NBNI = NNODES/3
         CALL JEVEUO(LINTF//'.IDC_DEFO','L',LINTD)
         INCR = 0
C        --- ON SE POSITIONNE AVANT ISTAC ---
 100     CONTINUE
         IF (ZI(LSK+INCR) .NE. ISTAC) THEN
            INCR = INCR + 1
            GOTO 100
         ENDIF
         DO 110 IN = 1,NBNI
            ZI(LTABI-1+IN) = ZI(LINTD-1+IN) + INCR
 110     CONTINUE
         CALL GETVTX('RECO_GLOBAL','SOUS_STRUC_2',IRECO,IARG,1,
     &               NOMSST,IBID)
C        --- RECHERCHE DE LA SOUS-STRUCTURE ---
         JSTAC = 0
 120     CONTINUE
         JSTAC = JSTAC + 1
         IF (JSTAC.LE.NBSTAC) THEN
             IF (ZK8(LSTAC-1+JSTAC).NE.NOMSST) GOTO 120
         ENDIF
         IF (JSTAC.GT.NBSTAC) THEN
            VALK (1) = NOMSST
            CALL U2MESG('F','ALGORITH15_66',1,VALK,0,0,0,0.D0)
         ENDIF
         CALL MGUTDM(MODGEN,NOMSST,IBID,'NOM_LIST_INTERF',IBID,LJNTF)
         CALL JENUNO(JEXNUM(LJNTF//'.IDC_NOMS',1),K8BID)
         CALL GETVTX('RECO_GLOBAL','GROUP_NO_2',IRECO,IARG,1,
     &               NOMNOE,IBID)
         IF (NOMNOE .NE. K8BID) THEN
            VALK (1) = LJNTF
            VALK (2) = NOMSST
            VALK (3) = K8BID
            VALK (4) = NOMNOE
            CALL U2MESG('E','ALGORITH15_67',4,VALK,0,0,0,0.D0)
         ENDIF
         CALL JELIRA(LJNTF//'.IDC_DEFO','LONUTI',NNODES,K8BID)
         CALL DISMOI('F','NB_EC',LJNTF,'INTERF_DYNA',NBEC,K8BID,IRET)
         NBNJ = NNODES/(2+NBEC)
C         NBNJ = NNODES/3
         CALL JEVEUO(LJNTF//'.IDC_DEFO','L',LJNTD)
         JNCR = 0
C        --- ON SE POSITIONNE AVANT JSTAC ---
 130     CONTINUE
         IF (ZI(LSK+JNCR) .NE. JSTAC) THEN
            JNCR = JNCR + 1
            GOTO 130
         ENDIF
         DO 140 JN = 1,NBNJ
            ZI(LTABJ-1+JN) = ZI(LJNTD-1+JN) + JNCR
 140     CONTINUE
C           ---- FUSION DES NOEUDS ---
         DO 160 IN = 1,NBNI
            IPOSI = (ZI(LTABI-1+IN)-1)*3
            XII = ZR(LCOORD+IPOSI)
            YII = ZR(LCOORD+IPOSI+1)
            ZII = ZR(LCOORD+IPOSI+2)
            DO 150 JN =1,NBNJ
               FUSION = .TRUE.
               JPOSI = (ZI(LTABJ-1+JN)-1)*3
               XJ = ZR(LCOORD+JPOSI)
               YJ = ZR(LCOORD+JPOSI+1)
               ZJ = ZR(LCOORD+JPOSI+2)
                  DISTIJ = (XII-XJ)**2+(YII-YJ)**2+(ZII-ZJ)**2
                  DISTIJ = SQRT(ABS(DISTIJ))
                  IF (CRIT .EQ. 'RELATIF') THEN
                     IF (DISTIJ .GT. PREC*DIST) FUSION=.FALSE.
                  ELSE
                     IF (DISTIJ .GT. DIST) FUSION=.FALSE.
                  ENDIF
                  IF (FUSION) THEN
                      I1 = ZI(LCORT-1+ZI(LTABI-1+IN))
                      I2 = ZI(LTABI-1+IN)
                      IF (I1.EQ.I2) NBMOIN = NBMOIN +1
                      ZI(LCORT-1+ZI(LTABI-1+IN)) = ZI(LTABJ-1+JN)
                      ZI(LINVER-1+ZI(LTABJ-1+JN)) = ZI(LTABI-1+IN)
                      NBFUSE = NBFUSE + 1
                  ENDIF
 150        CONTINUE
 160     CONTINUE
 170  CONTINUE
C
C --- FIN DE TRAITEMENT DES OCCURENCES DE RECO_GLOBAL ---
      ENDIF
C
C --- REAJUSTEMENT DE .CORRES ET NOUVEL OBJET DANS LE SQUELETTE ---
C      NBNEW = NBND - NBFUSE
      NBNEW = NBND - NBMOIN
      CALL WKVECT(NOMRES//'.CORRES','G V I',NBNEW,LCORR)
C     --- MISE EN PLACE DU TABLEAU DE CORRESPONDANCE ---
      INEW = 1
      IOLD = 1
 200  CONTINUE
      IF (INEW.LE.NBNEW .AND. IOLD.LE.NBND) THEN
         IF (ZI(LINVER-1+IOLD) .NE. IOLD) THEN
C           --- NOEUD FUSIONNE : N'EXISTE PLUS DANS LE NOUVEAU MAILLAGE
            IOLD = IOLD + 1
            GOTO 200
         ENDIF
C        --- RECHERCHE DU NOEUD CORRESPONDANT LE PLUS ELOIGNE ---
C            (C'EST CELUI-LA QU'ON RETIENT)
         IADRES = ZI(LCORT-1+IOLD)
 202     CONTINUE
         IF (IADRES .NE. ZI(LCORT-1+IADRES)) THEN
            IADRES = ZI(LCORT-1+IADRES)
            GOTO 202
         ENDIF
C        --- NOEUD CORRESPONDANT ---
         ZI(LCORR-1+INEW) = IADRES
C        --- ON RETIENT SON INVERSE ---
         ZI(LINVER-1+IADRES) = INEW
C
         INEW = INEW + 1
         IOLD = IOLD + 1
         GOTO 200
      ENDIF
C     --- MISE EN PLACE DU TABLEAU INVERSE ---
      DO 207 IOLD = 1,NBND
         IF (ZI(LCORT-1+IOLD) .NE. IOLD) THEN
C        --- NOEUD FUSIONNE : ON RECHERCHE SON INVERSE ---
C        --- RECHERCHE DU NOEUD CORRESPONDANT LE PLUS ELOIGNE ---
C            (IL DEVIENT LA REFERENCE)
            IADRES = ZI(LCORT-1+IOLD)
 205        CONTINUE
            IF (IADRES .NE. ZI(LCORT-1+IADRES)) THEN
               IADRES = ZI(LCORT-1+IADRES)
               GOTO 205
            ENDIF
            ZI(LINVER-1+IOLD) = ZI(LINVER-1+IADRES)
         ENDIF
 207  CONTINUE
C
C --- MISE A JOUR DES OBJETS DU NOUVEAU SQUELETTE ---
C --- COLLECTION .CONNEX
      CALL JEVEUO(NOMRES//'.DIME','L',LDIME)
C     NOMBRE DE MAILLES NBMA
      NBMA = ZI(LDIME+2)
      CALL JELIRA(NOMRES//'.CONNEX','NUTIOC',NBOCC,K8BID)
      DO 220 IOCC = 1,NBMA
         CALL JEVEUO(JEXNUM(NOMRES//'.CONNEX',IOCC),'E',LCONN)
         CALL JELIRA(JEXNUM(NOMRES//'.CONNEX',IOCC),'LONMAX',NBN,K8BID)
         DO 210 I = 1,NBN
            ZI(LCONN-1+I) = ZI(LINVER-1+ ZI(LCONN-1+I))
 210     CONTINUE
 220  CONTINUE
C
C --- OBJET  .REFE
      CALL JEVEUO(NOMRES//'.COORDO    .REFE','E',LREFE)
      ZK24(LREFE) = NOMRES
C
C --- OBJET  .DIME
      CALL JEVEUO(NOMRES//'.DIME','E',LDIME)
      ZI(LDIME) = NBNEW
C
C --- OBJET  .VALE
      CALL JEDETR(NOMRES//'.COORDO    .VALE')
      CALL WKVECT(NOMRES//'.COORDO    .VALE','G V R',NBNEW*3,LVNEW)
      CALL JEVEUO(NOMSQU//'.COORDO    .VALE','L',LVOLD)
      DO 230 I = 1,NBNEW
         IOLD = ZI(LCORR-1+I)
         ZR(LVNEW-1+(I-1)*3+1) = ZR(LVOLD-1+(IOLD-1)*3+1)
         ZR(LVNEW-1+(I-1)*3+2) = ZR(LVOLD-1+(IOLD-1)*3+2)
         ZR(LVNEW-1+(I-1)*3+3) = ZR(LVOLD-1+(IOLD-1)*3+3)
 230  CONTINUE
C
C --- OBJET .NOMNOE
      CALL JEDETR(NOMRES//'.NOMNOE')
      CALL JECREO(NOMRES//'.NOMNOE','G N K8')
      CALL JEECRA(NOMRES//'.NOMNOE','NOMMAX',NBNEW,' ')
      DO 240 I = 1,NBNEW
         IOLD = ZI(LCORR-1+I)
         CALL JENUNO(JEXNUM(NOMSQU//'.NOMNOE',IOLD),NOMNOE)
         CALL JECROC(JEXNOM(NOMRES//'.NOMNOE',NOMNOE))
 240  CONTINUE
C
      CALL JEDETR(TT//'.TABI')
      CALL JEDETR(TT//'.TABJ')
      CALL JEDETR(TT//'.CORRES')
      CALL JEDETR(TT//'.INVER')
      CALL JEDEMA()
      END
