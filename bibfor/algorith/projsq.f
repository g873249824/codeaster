      SUBROUTINE PROJSQ(NDIM  ,COORDA,COORDB,COORDC,COORDP,
     &                  COORDM,LAMBDA,DEBORD)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/03/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INTEGER NDIM
      REAL*8  COORDA(3)
      REAL*8  COORDB(3)
      REAL*8  COORDC(3)
      REAL*8  COORDP(3)
      REAL*8  COORDM(3)
      REAL*8  LAMBDA
      REAL*8  DEBORD
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - APPARIEMENT - MAIT/ESCL - SEG)
C
C
C PROJECTION D'UN NOEUD ESCLAVE P SUR UN SEGMENT QUADRATIQUE A(C)B
C
C ----------------------------------------------------------------------
C
C
C IN  NDIM   : DIMENSION DU PB
C IN  COORDA : COORDONNEES DU SOMMET A DU SEGMENT
C IN  COORDB : COORDONNEES DU SOMMET B DU SEGMENT
C IN  COORDC : COORDONNEES DU MILIEU C DU SEGMENT
C IN  COORDP : COORDONNEES DU NOEUD ESCLAVE P
C OUT COORDM : COORDONNEES PHYSIQUES DE LA "PROJECTION" M
C OUT LAMBDA : COORDONNEES PARAMETRIQUES SUR LA MAILLE MAITRE
C                 DE LA "PROJECTION" M 
C OUT DEBORD : PROJECTION HORS DE LA MAILLE
C              >0 : PROJECTION HORS DE LA MAILLE
C              <0 : PROJECTION SUR LA MAILLE
C
C ----------------------------------------------------------------------
C
      INTEGER J,NBITER
      REAL*8  DIST,DIST1,DIST2,LAMBD1,LAMBD2,PREC
      REAL*8  ABSAB,AP(3),AB(3),BP(3)       
      REAL*8  COEF(3),PRECIS
C
C ----------------------------------------------------------------------
C
      DEBORD = -1.D0
      PRECIS = 1D-3
      NBITER = 10000       
C
C --- VECTEURS AB, BP ET AP
C
      AP(1) = COORDP(1)-COORDA(1)
      AP(2) = COORDP(2)-COORDA(2)
      BP(1) = COORDP(1)-COORDB(1)
      BP(2) = COORDP(2)-COORDB(2)
      AB(1) = COORDB(1)-COORDA(1)
      AB(2) = COORDB(2)-COORDA(2)
      IF (NDIM.EQ.3) THEN
        AP(3) = COORDP(3)-COORDA(3)
        AB(3) = COORDB(3)-COORDA(3)
        BP(3) = COORDP(3)-COORDB(3)             
      ELSE
        AP(3) = 0.D0
        BP(3) = 0.D0        
        AB(3) = 0.D0      
      ENDIF      
C
C --- CALCUL DE LA COORDONNEE PARAMETRIQUE LAMBDA DE M DANS AB
C
      ABSAB = (AB(1)*AB(1)+AB(2)*AB(2)+AB(3)*AB(3))
         
      IF (ABSAB.EQ.0.D0) THEN
        CALL U2MESS('F','CONTACT_10')
      ENDIF
C
C --- RECHERCHE QUEL DEMI-SEGMENT
C
      DIST1 = (AP(1))**2 + (AP(2))**2 + (AP(3))**2
      DIST2 = (BP(1))**2 + (BP(2))**2 + (BP(3))**2      
      
      IF (DIST2.LT.DIST1) THEN
        DIST1 = (BP(1))**2 + (BP(2))**2 + (BP(3))**2
        DIST2 = (AP(1))**2 + (AP(2))**2 + (AP(3))**2
        LAMBD1 = 1.0D0
        LAMBD2 = 0.0D0
      ELSE
        LAMBD1 = 0.0D0
        LAMBD2 = 1.0D0
      ENDIF
      LAMBDA = (LAMBD1 + LAMBD2)/2.D0
C
C --- BOUCLE POUR TROUVER M
C
       DO 10 J = 1,NBITER
C
C --- FONCTIONS DE FORME POUR GEOMETRIE SEG3
C
         COEF(1) = 2.D0* (1.D0-LAMBDA)* (0.5D0-LAMBDA)
         COEF(2) = 2.D0*LAMBDA* (LAMBDA-0.5D0)
         COEF(3) = 4.D0*LAMBDA* (1.D0-LAMBDA)
C
C --- COORDONNES DU POINT M
C
         COORDM(1) = COEF(1)*COORDA(1)+COEF(2)*COORDB(1)
     &               +COEF(3)*COORDC(1)
         COORDM(2) = COEF(1)*COORDA(2)+COEF(2)*COORDB(2)
     &               +COEF(3)*COORDC(2)     
         IF (NDIM.EQ.3) THEN
           COORDM(3) = COEF(1)*COORDA(3)+COEF(2)*COORDB(3)
     &                +COEF(3)*COORDC(3)
         ELSE
           COORDM(3) = 0.D0
         END IF

         DIST = (COORDP(1)-COORDM(1))**2 + (COORDP(2)-COORDM(2))**2
         IF (NDIM.EQ.3) THEN
           DIST = DIST + (COORDP(3)-COORDM(3))**2
         ENDIF
         IF (DIST.LT.DIST1) THEN
           DIST2  = DIST1
           DIST1  = DIST
           LAMBD2 = LAMBD1
           LAMBD1 = LAMBDA
         ELSE
           DIST2 = DIST
           LAMBD2 = LAMBDA
         ENDIF

         IF(LAMBD1.LT.LAMBD2) THEN
            LAMBDA = LAMBD1 + (LAMBD2-LAMBD1)/2.D0
         ELSE
            LAMBDA = LAMBD2 + (LAMBD1-LAMBD2)/2.D0
         ENDIF

         PREC = ABS(LAMBD2-LAMBD1)/ABSAB
         IF (PREC.LT.PRECIS) GOTO 20

   10    CONTINUE
   20  CONTINUE      
C
      END
