      SUBROUTINE NMRESO(SDPILO,NBDONN,CODONN,CNDONN,NBPILO,
     &                  COPILO,CNPILO,CNCINE,SOLVEU,MATRIX,
     &                  DEPSOL)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 30/06/2008   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C
      IMPLICIT NONE
      INTEGER       NBDONN, NBPILO
      REAL*8        CODONN(*),COPILO(*)
      CHARACTER*14  SDPILO
      CHARACTER*19  MATRIX(2),SOLVEU, CNDONN(*), CNPILO(*)
      CHARACTER*24  CNCINE, DEPSOL(2)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - CALCUL)
C
C RESOLUTION AVEC PILOTAGE  K.DU = F0 + ETA F1
C
C ----------------------------------------------------------------------
C
C
C IN  SDPILO : SD PILOTAGE
C IN  NBDONN : NOMBRE DE SECONDS MEMBRES DONNES
C IN  CODONN : COEFFICIENTS A AFFECTER AUX SECONDS MEMBRES DONNES
C IN  CNDONN : CHAMPS NODAUX DES SECONDS MEMBRES DONNES
C IN  NBPILO : NOMBRE DE SECONDS MEMBRES PILOTES
C IN  COPILO : COEFFICIENTS A AFFECTER AUX SECONDS MEMBRES PILOTES
C IN  CNPILO : CHAMPS NODAUX DES SECONDS MEMBRES PILOTES
C IN  CNCINE : CHAM_NO DE CHARGE CINEMATIQUE
C IN  SOLVEU : SOLVEUR
C IN  MATRIX : MATRICE FACTORISEE (1=MATASS, 2=MAPREC)
C OUT DEPSOL : SOLUTION DU DU SYSTEME K.DU = DF
C                      DEPSOL(1) EN L'ABSENCE DE PILOTAGE
C                      DEPSOL(1) ET DEPSOL(2) AVEC PILOTAGE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR,RBID
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC,CBID
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      LOGICAL      EXPILO
      INTEGER      IFM,NIV
      INTEGER      JCRI,JCRI1
      INTEGER      IRET, N,IRET1
      CHARACTER*19 CRGC, CNSCD0, CNSCD1, CNGC0,CNGC1
      DATA CNGC0 , CNGC1   /'&&NMRESO.GC0 ', '&&NMRESO.GC1 '/
      DATA CRGC            /'&&RESGRA_GCPC'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><RESO> RESOLUTION K.U = F'
      ENDIF
C
C --- INITIALISATIONS
C
      CALL JEEXIN(SDPILO(1:14)//'.PLTK',IRET)
      EXPILO = IRET .NE. 0
      CNSCD0 = '&&CNPART.CHP1'
      CNSCD1 = '&&CNPART.CHP2'
C
C --- CREATION DES SECONDS MEMBRES (CHARGEMENTS FIXES)
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><RESO> NB SECONDS MEMBRES DONNES :',
     &                 NBDONN
      ENDIF
C
      CALL VTZERO(CNSCD0)
      DO 10 N = 1, NBDONN
        CALL VTAXPY(CODONN(N),CNDONN(N),CNSCD0)
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE><RESO> * SECOND MEMBRE : ',N
          CALL NMDEBG('VECT',CNDONN(N),6)
        ENDIF
 10   CONTINUE
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><RESO> -> SECOND MEMBRE 1'
        CALL NMDEBG('VECT',CNSCD0,6)
      ENDIF
C
C --- CREATION DES SECONDS MEMBRES (CHARGEMENTS PILOTES)
C
      IF (NIV.GE.2) THEN
        IF (NBPILO.EQ.0) THEN
          WRITE (IFM,*) '<MECANONLINE><RESO> PAS DE SECONDS MEMBRES '//
     &                  'PILOTES'
        ELSE
          WRITE (IFM,*) '<MECANONLINE><RESO> NB SECONDS MEMBRES '//
     &                  'PILOTES: ',NBPILO
        ENDIF
      ENDIF
C
      IF (EXPILO) THEN
        CALL VTZERO(CNSCD1)
        DO 20 N = 1, NBPILO
          CALL VTAXPY(COPILO(N),CNPILO(N),CNSCD1)
          IF (NIV.GE.2) THEN
            WRITE (IFM,*) '<MECANONLINE><RESO> * SECOND MEMBRE : ',N
            CALL NMDEBG('VECT',CNPILO(N),6)
          ENDIF
 20     CONTINUE
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE><RESO> -> SECOND MEMBRE 2'
          CALL NMDEBG('VECT',CNSCD1,6)
        ENDIF
      END IF
C
C -- INVERSION DES SYSTEMES LINEAIRES
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><RESO> -> MATRICE'
        CALL NMDEBG('MATA',MATRIX(1),6)
      ENDIF
      IF (EXPILO) THEN
        CALL EXISD('CHAMP_GD',CNGC0,IRET)
        IF (IRET.EQ.0) CALL VTDEFS (CNGC0,CNSCD0,'V',' ')
        CALL RESOUD(MATRIX(1),MATRIX(2),CNSCD0,SOLVEU,CNCINE,
     &              'V'      ,CNGC0    ,CRGC  ,0,RBID,CBID)
        CALL COPISD('CHAMP_GD','V',CNGC0 ,DEPSOL(1))
C
        CALL EXISD('CHAMP_GD',CNGC1,IRET)
        IF (IRET.EQ.0) CALL VTDEFS (CNGC1,CNSCD1,'V',' ')
        CALL RESOUD(MATRIX(1),MATRIX(2),CNSCD1,SOLVEU,CNCINE,
     &              'V'      ,CNGC1    ,CRGC  ,0,RBID,CBID)
        CALL COPISD('CHAMP_GD','V',CNGC1 ,DEPSOL(2))
      ELSE
        CALL EXISD('CHAMP_GD',CNGC0,IRET)
        IF (IRET.EQ.0) CALL VTDEFS (CNGC0,CNSCD0,'V',' ')
        CALL RESOUD(MATRIX(1),MATRIX(2),CNSCD0,SOLVEU,CNCINE,
     &              'V'      ,CNGC0    ,CRGC,0,RBID,CBID)
        CALL COPISD('CHAMP_GD','V',CNGC0,DEPSOL(1))
      END IF
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><RESO> -> SOLUTION 1:'
        CALL NMDEBG('VECT',DEPSOL(1),6)
        IF (EXPILO) THEN
        WRITE (IFM,*) '<MECANONLINE><RESO> -> SOLUTION 2:'
          CALL NMDEBG('VECT',DEPSOL(2),6)
        ENDIF
      ENDIF
C
C --- FETI OR NOT ?
C --- SI FETI ON DUPLIQUE L'INFO DU NBRE D'ITERATIONS POUR AFFICHAGE DE
C --- NMCONV. ON NE GARDE PAS L'OBJET GRGC.CRTI CAR CELA PERTURBE LE
C --- REDECOUPAGE AUTOMATIQUE DU PAS DE TEMPS
C
      CALL JEEXIN('&FETI.MAILLE.NUMSD',IRET)
      IF (IRET.GT.0) THEN
        CALL JEEXIN('&FETI.CRITER.CRTI',IRET1)
        IF (IRET1.EQ.0) THEN
          CALL WKVECT('&FETI.CRITER.CRTI','V V I',1,JCRI1)
        ELSE
          CALL JEVEUO('&FETI.CRITER.CRTI','E',JCRI1)
        ENDIF
        CALL JEVEUO(CRGC//'.CRTI','L',JCRI)
        ZI(JCRI1)=ZI(JCRI)
      ENDIF
      CALL JEDETR( CRGC // '.CRTI' )
      CALL JEDETR( CRGC // '.CRTR' )
      CALL JEDETR( CRGC // '.CRDE' )

      CALL JEDEMA()
      END
