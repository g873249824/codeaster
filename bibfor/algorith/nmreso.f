      SUBROUTINE NMRESO(PILOTE, NBDONN, CODONN, CNDONN, NBPILO,
     &                  COPILO, CNPILO, CNCINE, SOLVEU, MATRIX,
     &                  DEPPIL)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 14/03/2006   AUTEUR MABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS

      IMPLICIT NONE
      INTEGER       NBDONN, NBPILO
      REAL*8        CODONN(*), COPILO(*)
      CHARACTER*14  PILOTE
      CHARACTER*19  MATRIX(2),SOLVEU, CNDONN(*), CNPILO(*)
      CHARACTER*24  CNCINE, DEPPIL(2)

C ----------------------------------------------------------------------
C     METHODE DE NEWTON : RESOLUTION AVEC PILOTAGE  K.DU = F0 + ETA F1
C              PILOTAGE :  'DDL_IMPO', 'LONG_ARC', 'CRITERE'
C ----------------------------------------------------------------------
C
C       IN PILOTE : SD PILOTAGE
C       IN NBDONN : NOMBRE DE SECONDS MEMBRES DONNES
C       IN CODONN : COEFFICIENTS A AFFECTER AUX SECONDS MEMBRES DONNES
C       IN CNDONN : CHAMPS NODAUX DES SECONDS MEMBRES DONNES
C       IN NBPILO : NOMBRE DE SECONDS MEMBRES PILOTES
C       IN COPILO : COEFFICIENTS A AFFECTER AUX SECONDS MEMBRES PILOTES
C       IN CNPILO : CHAMPS NODAUX DES SECONDS MEMBRES PILOTES
C       IN CNCINE : CHAM_NO DE CHARGE CINEMATIQUE
C       IN SOLVEU : SOLVEUR
C       IN MATRIX : MATRICE FACTORISEE (1=MATASS, 2=MAPREC)
C       IN MAPREC : MATRICE DE PRECONDITIONNEMENT
C IN/JXOUT DEPPIL : CORRECTION DE DEPLACEMENT 
C                      DEPPIL(1) EN L'ABSENCE DE PILOTAGE
C                      DEPPIL(1) ET DEPPIL(2) AVEC PILOTAGE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ---------------------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C ---------- FIN  DECLARATIONS  NORMALISEES  JEVEUX -------------------

      LOGICAL      EXPILO, BORMIN, BORMAX
      INTEGER      JPLTK, JPLIR, JGC0, JGC1, IBID, IER
      INTEGER      IRET, N
      INTEGER      JDEPDE, JLINE, JDEP0, JDEP1, JDDEPL, JDUREF, JCOEF
      REAL*8       DTAU, DU, RN, RD, R0, R1, R2
      REAL*8       DDOT, R8VIDE
C      INTEGER      IVALE,NBEQ,IVAL2,IVAL3
      CHARACTER*8  K8BID
      CHARACTER*24 TYPILO
      CHARACTER*19 CRGC, CNDEP0, CNDEP1, CNSCD0, CNSCD1, CNGC0,CNGC1
      CHARACTER*19 NUMEQU
      DATA CNGC0 , CNGC1   /'&&NMRESO.GC0 ', '&&NMRESO.GC1 '/
      DATA CRGC            /'&&RESGRA_GCPC'/
C ----------------------------------------------------------------------


      CALL JEMARQ()

C    EXISTENCE DE PILOTAGE
      CALL JEEXIN(PILOTE // '.PLTK',IRET)
      EXPILO = IRET .NE. 0


C ======================================================================
C                    RESOLUTION DES SYSTEMES LINEAIRES
C ======================================================================


C -- CREATION DES SECONDS MEMBRES

C    SECOND MEMBRE DES CHARGEMENTS DONNES
      CNSCD0 = '&&CNPART.CHP1'
      CALL VTZERO(CNSCD0)
      DO 10 N = 1, NBDONN
        CALL VTAXPY(CODONN(N),CNDONN(N),CNSCD0)
 10   CONTINUE

C    SECOND MEMBRE DES CHARGEMENTS PILOTES
      IF (EXPILO) THEN
        CNSCD1 = '&&CNPART.CHP2'
        CALL VTZERO(CNSCD1)
        DO 20 N = 1, NBPILO
          CALL VTAXPY(COPILO(N),CNPILO(N),CNSCD1)
 20     CONTINUE
      END IF


C -- INVERSION DES SYSTEMES LINEAIRES

      IF (.NOT. EXPILO) THEN

C      EN L'ABSENCE DE PILOTAGE
        CALL EXISD('CHAMP_GD',CNGC0,IRET)
        IF (IRET.EQ.0) CALL VTDEFS (CNGC0,CNSCD0,'V',' ')
        CALL RESOUD(MATRIX(1), MATRIX(2), CNSCD0, SOLVEU, CNCINE, 'V',
     &              CNGC0,CRGC)
        CALL COPISD('CHAMP_GD','V',CNGC0,DEPPIL(1))

C --  POUR MONITORING
C        CALL JEVEUO(CNGC0(1:19)//'.VALE','L',IVALE)
C        CALL JELIRA(CNGC0(1:19)//'.VALE','LONMAX',NBEQ,K8BID)
C        CALL JEVEUO(CNSCD0(1:19)//'.VALE','L',IVAL2)
C        CALL JEVEUO(CNCINE(1:19)//'.VALE','L',IVAL3)
C       DO N=1,NBEQ
C         WRITE(6,*)'NMRESO',N,ZR(IVALE+N-1),ZR(IVAL2+N-1),ZR(IVAL3+N-1)
C       ENDDO
      ELSE

C      INVERSION DU 2ND MEMBRE DONNE -> CNDEP0 = A-1.CNSCD0
        CALL EXISD('CHAMP_GD',CNGC0,IRET)
        IF (IRET.EQ.0) CALL VTDEFS (CNGC0,CNSCD0,'V',' ')
        CALL RESOUD(MATRIX(1), MATRIX(2), CNSCD0, SOLVEU, CNCINE, 'V',
     &              CNGC0,CRGC)
        CALL COPISD('CHAMP_GD','V',CNGC0, DEPPIL(1))

C      INVERSION DU 2ND MEMBRE PILOTE -> CNDEP1 = A-1.CNSCD1
        CALL EXISD('CHAMP_GD',CNGC1,IRET)
        IF (IRET.EQ.0) CALL VTDEFS (CNGC1,CNSCD1,'V',' ')
        CALL RESOUD(MATRIX(1), MATRIX(2), CNSCD1, SOLVEU, CNCINE, 'V',
     &              CNGC1,CRGC)
        CALL COPISD('CHAMP_GD','V',CNGC1, DEPPIL(2))

      END IF

C -- OBJET DETRUIT APRES AFFICHAGE DE NMCONV (AU CAS OU FETI)
C       CALL JEDETR ( CRGC // '.CRTI' )
      CALL JEDETR ( CRGC // '.CRTR' )
      CALL JEDETR ( CRGC // '.CRDE' )

      CALL JEDEMA()
      END
