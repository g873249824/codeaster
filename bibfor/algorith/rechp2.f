      SUBROUTINE RECHP2(COORD ,LISSUR,LISNOE,
     &                  PMANO ,PPOMA ,PPONO ,PNOMA,
     &                  INO1  ,ISURF1,OLDPOS,POSMIN,
     &                  NUMMIN,DMIN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/03/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT  NONE
      REAL*8    COORD(*)
      INTEGER   LISSUR(*),LISNOE(*)
      INTEGER   PMANO(*),PPOMA(*),PPONO(*),PNOMA(*)
      INTEGER   OLDPOS,INO1,ISURF1
      REAL*8    DMIN      
      INTEGER   POSMIN,NUMMIN      
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - APPARIEMENT)
C
C RECHERCHE DANS UNE SURFACE(2) DU NOEUD(2) LE PLUS PROCHE 
C DU NOEUD(1) DANS UNE SURFACE(1) PAR VOISINAGE (UTILISATION DU PASSE)
C
C ----------------------------------------------------------------------
C
C  
C IN  COORD  : VECTEUR DES COORDONNEES DE TOUS LES NOEUDS
C IN  LISSUR : INDICE DES NOEUDS CONSTITUANT LES SURFACES
C IN  LISNOE : LISTE DES NUMEROS ABSOLUS DES NOEUDS 
C IN  INO1   : INDICE DU NOEUD(1) DANS LISNOE
C IN  ISURF1 : NUMERO DE LA SURFACE(1)
C IN  OLDPOS : ANCIEN NOEUD APPARIE
C OUT DMIN   : VALEUR DE LA DISTANCE MINIMALE ENTRE NOEUD(1) ET LE 
C                NOEUD(2) APPARTENANT A LA SURFACE(2)
C OUT NUMMIN : NUMERO ABSOLU DU NOEUD(2)  
C OUT POSMIN : POSITION DANS LISNOE DU NOEUD(2)
C
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      REAL*8  R8GAEM,COOR1(3),COOR2(3),PADIST,DIST
      INTEGER NBNO,NBMA,POSMA,POSNO2,NUMNO2,POSNO1,NUMNO1
      INTEGER JDECMA,JDEC,JDEC1
      INTEGER INO2,IMA        
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      DMIN     = R8GAEM() 
      POSMIN   = 0
C
C --- POINTEURS SUR LE DEBUT DES LISTES DES NOEUDS DES DEUX SURFACES
C
      JDEC1    = LISSUR(ISURF1)      
C
C --- COORDONNEES DU NOEUD DONT ON CHERCHE LE PLUS PROCHE
C  
      POSNO1   = JDEC1+INO1
      NUMNO1   = LISNOE(POSNO1)    
      COOR1(1) = COORD(3*(NUMNO1-1)+1)
      COOR1(2) = COORD(3*(NUMNO1-1)+2)
      COOR1(3) = COORD(3*(NUMNO1-1)+3)           
C
C --- RECHERCHE DES MAILLES CONTENANT L'ANCIEN NOEUD
C
      IF (OLDPOS.LE.0) THEN
        CALL U2MESS('F','CONTACT_27')
      ENDIF   
      JDECMA = PPOMA(OLDPOS)
      NBMA   = PPOMA(OLDPOS+1) - PPOMA(OLDPOS)    
C
      DO 80 IMA = 1,NBMA        
C
C --- POSITION DE LA MAILLE COURANTE
C
        POSMA = PMANO(JDECMA+IMA)        
C
C --- NOEUDS DE LA MAILLE COURANTE
C         
        JDEC  = PPONO(POSMA)
        NBNO  = PPONO(POSMA+1) - PPONO(POSMA)
C
C --- BOUCLE SUR LES NOEUDS DE LA MAILLE ET CALCUL DE LA DISTANCE
C          
        DO 70 INO2 = 1,NBNO        
          POSNO2   = PNOMA(JDEC+INO2)
          NUMNO2   = LISNOE(POSNO2)            
          COOR2(1) = COORD(3*(NUMNO2-1)+1)
          COOR2(2) = COORD(3*(NUMNO2-1)+2)
          COOR2(3) = COORD(3*(NUMNO2-1)+3)
          DIST     = PADIST(3,COOR1,COOR2)
          IF (DIST.LT.DMIN) THEN
            DMIN   = DIST
            NUMMIN = NUMNO2
            POSMIN = POSNO2
          END IF
   70   CONTINUE
   80 CONTINUE
C   
      IF (POSMIN.EQ.0) THEN
        CALL U2MESS('F','CONTACT_27')
      ENDIF   
C
      CALL JEDEMA()

      END
