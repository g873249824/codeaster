      SUBROUTINE CACINA (NDIM,NNO,NPG,LGPG,AXI,GRAND,COMPOR,GEOMM,G,IW,
     &                   VFF,IDFF,FM,FMA,DEPLD,INSTM,INSTP,VIM,RP,
     &                   RPA,LAMBP)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/12/2010   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21 CRS_1404
      IMPLICIT NONE
      CHARACTER*16 COMPOR(*)
      INTEGER NDIM,NNO,G,IW,IDFF,I,J,NPG,LGPG,IVASH2
      LOGICAL AXI,GRAND
      REAL*8 FM(3,3),FMA(3,3)
      REAL*8 DEPLD(3*27),GEOMM(3,NNO),VFF(NNO,NPG)
      REAL*8 R,RBID,DFF(NNO,3),TBID(6)
      REAL*8 DT,INSTM,INSTP,VIM(LGPG),NORM,NORM2,A,A2
      REAL*8 B,B2,LAMBM(3,3)
      REAL*8 LAMBMT(3,3),RP(3,3)
      REAL*8 RPT(3,3),LAMBP(3,3),LAMBPM(3,3)
      REAL*8 RPA(3,3),IND,R8MIEM
      REAL*8 LAMBPA(3,3),LAMBAM(3,3)
      REAL*8 VWA(3),INDA,NORMA,NORM2A
      REAL*8 AA,A2A,BA,B2A,WWA(3,3),DET

C ---------------------------------
C   NDIM    : DIMENSION DE L'ESPACE
C   NNO     : NOMBRE DE NOEUDS DE ELEMENT
C   NPG     : NOMBRE DE POINTS DE GAUSS
C   LGPG    : NOMBRE DE VARIABLE INTERNE POUR UN POINT DE GAUSS
C   AXI     : OUI SI AXISYMETRIQUE NON SINON
C   GRAND   : OUI SI GRANDES DEFORMATIONS NON SINON
C   COMPOR  : COMPORTEMENT
C   GEOMM   : COORDONNEES DES NOEUDS A L INSTANT T-
C   G       : NUMERO DU POINT DE GAUSS COURANT
C   IW      : PTR. POIDS DES POINTS DE GAUSS
C   VFF     : VALEUR  DES FONCTIONS DE FORME
C   IDFF    : PTR. DERIVEE DES FONCTIONS DE FORME ELEMENT DE REF.
C   FM      : TENSEUR DE DEFORMATION ENTRE CONFIGURATIONS INITIALE ET T-
C   FMA     :  TENSEUR DE DEFORMATION ENTRE CONFIGURATION INITIALE ET
C             CONFIGURATION INTERMEDIAIRE
C   DEPLD   : INCREMENT DE DEPLACEMENT ENTRE T- ET T+
C   INSTM   : VALEUR DE INSTANT T-
C   INSTP   : VALEUR DE INSTANT T+
C   VIM     : VARIABLE INTERNE TAIILE DEPEND DU COMPORTEMENT
C   SORTIE  :
C   RP      : LAMBP*TRANSPOSEE(LAMBM)
C   RPA     : LAMBP*INVERSE(LAMBM)
C   LAMBP   :

C ----------------------------
C
C     CALCUL DE RP, RPA ET LAMBP
C
C ----------------------------
      REAL*8 FMAM(3,3),ID(3,3),GRADU(3,3)
      REAL*8 PRODM(3,3),HNAL(3,3),HNALT(3,3)
      REAL*8 W(3,3), WA(3,3), VW(3),WW(3,3)
      REAL*8 RW(3,3), RWA(3,3)
      DATA ID/1.D0,0.D0,0.D0, 0.D0,1.D0,0.D0, 0.D0,0.D0,1.D0/

C     ATTENTION ICI ALPHA=0.5
      IVASH2=LGPG-9+1

      IND=0.D0
      INDA=0.D0
      CALL LCTR2M(3,FMA,FMAM)
C     CALCUL DE  GRADIENT DE U
      CALL DFDMIP(NDIM,NNO,AXI,GEOMM,G,IW,VFF(1,G),IDFF,R,RBID,DFF)
      CALL NMEPSI(NDIM,NNO,AXI,GRAND,VFF(1,G),R,DFF,DEPLD,GRADU,TBID)

C     PRODUIT DE GRADU*FM*FMAM
      CALL PMAT(3,FM,FMAM,PRODM)
      CALL PMAT(3,GRADU,PRODM,HNAL)

      CALL LCTR2M(3,HNAL,HNALT)
      DO 70 I = 1,3
       DO 80 J = 1,3
        W(I,J)=0.5D0*(HNAL(I,J)-HNALT(I,J))
        WA(I,J)=0.5D0*0.5D0*(HNAL(I,J)-HNALT(I,J))
C       WA EST THETA /2
 80    CONTINUE
 70   CONTINUE
C--------------------------------CALCUL DE VECTEUR VW------------
      VW(1)=W(3,2)
      VW(2)=W(1,3)
      VW(3)=W(2,1)

      VWA(1)=WA(3,2)
      VWA(2)=WA(1,3)
      VWA(3)=WA(2,1)

C--------------------------------CALCUL DE VECTEUR EXP[]------

C     CALCUL DE LA NORME DU VECTEUR WW
      DO 89 I=1,3
        IND= IND + VW(I)*VW(I)
        INDA= INDA + VWA(I)*VWA(I)
 89   CONTINUE
      NORM = SQRT(IND)
      NORM2=NORM/2.D0

      NORMA = SQRT(INDA)
      NORM2A=NORMA/2.D0

C     TEST SI NORM = 0
C     PREPARATION DES TERME DE L ADDITION DE APPROXIMATION EXP
      IF(NORM.LT.R8MIEM()) THEN
         A=1.D0
         A2=1.D0
      ELSE
         A= SIN(NORM)/NORM
         A2=SIN(NORM2)/NORM2
      END IF

      IF(NORMA.LT.R8MIEM()) THEN
         AA=1.D0
         A2A=1.D0
      ELSE
         AA= SIN(NORMA)/NORMA
         A2A=SIN(NORM2A)/NORM2A
      END IF

      IF(NORM.LT.R8MIEM()) THEN
         B=1.D0
         B2=1.D0
      ELSE
         B= A*A
         B2=A2*A2
      END IF

      IF(NORMA.LT.R8MIEM()) THEN
         BA=1.D0
         B2A=1.D0
      ELSE
         BA= AA*AA
         B2A=A2A*A2A
      END IF

      CALL PMAT(3,W,W,WW)
      CALL PMAT(3,WA,WA,WWA)

      DO 17 I=1,3
       DO 27 J=1,3
         IF(I.EQ.J) THEN
           RW(I,J)= 1.D0+A*W(I,J)+0.5D0*B2*WW(I,J)
           RWA(I,J)= 1.D0+AA*WA(I,J)+0.5D0*B2A*WWA(I,J)
         ELSE
           RW(I,J)= A*W(I,J)+0.5D0*B*WW(I,J)
           RWA(I,J)= AA*WA(I,J)+0.5D0*BA*WWA(I,J)
         END IF
  27   CONTINUE
  17  CONTINUE

C-----------------------CALCUL DE LAMBDA_N+1----------
C     RECUPERATION DE LAMBDA_N

      CALL DCOPY(9,VIM(IVASH2),1,LAMBM,1)
      CALL DAXPY(9,1.D0,ID,1,LAMBM,1)

C     CALCUL DE LAMBDA_N+1
      CALL PMAT(3,RW,LAMBM,LAMBP)

C     CALCUL DE LAMBDA_N+ALPHA
      CALL PMAT(3,RWA,LAMBM,LAMBPA)

C----------------CALCUL DE R_N+1=RP ET R~_N+ALPHA=RPA-

      CALL LCTR2M(3,LAMBM,LAMBMT)
      CALL PMAT(3,LAMBP,LAMBMT,RP)

      CALL MATINV('S',3,LAMBPA,LAMBAM,DET)
      CALL PMAT(3,LAMBP,LAMBAM,RPA)

      END
