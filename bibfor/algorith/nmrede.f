      SUBROUTINE NMREDE(NUMEDD,SDNUME,FONACT,SDDYNA,MATASS,
     &                  VEASSE,NEQ   ,FOINER,CNFEXT,CNFINT,
     &                  VCHAR ,ICHAR ) 
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 17/10/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      CHARACTER*24  NUMEDD
      CHARACTER*19  SDDYNA,SDNUME
      CHARACTER*19  VEASSE(*)
      CHARACTER*19  MATASS
      INTEGER       FONACT(*)
      REAL*8        VCHAR
      INTEGER       ICHAR
      INTEGER       NEQ
      CHARACTER*19  FOINER,CNFEXT,CNFINT
C      
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (UTILITAIRE - RESIDU)
C
C MAXIMUM DU CHARGEMENT EXTERIEUR
C
C ----------------------------------------------------------------------
C
C
C IN  NUMEDD : NUMEROTATION NUME_DDL
C IN  SDNUME : NOM DE LA SD NUMEROTATION
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  MATASS : MATRICE DU PREMIER MEMBRE ASSEMBLEE
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  SDDYNA : SD DYNAMIQUE
C IN  NEQ    : NOMBRE D'EQUATIONS
C IN  FOINER : VECT_ASSE DES FORCES D'INERTIE
C IN  CNFEXT : VECT_ASSE DES FORCES EXTERIEURES APPLIQUEES (NEUMANN)
C IN  CNFINT : VECT_ASSE DES FORCES INTERIEURES
C OUT VCHAR  : CHARGEMENT EXTERIEUR MAXI
C OUT ICHAR  : DDL OU LE CHARGEMENT EXTERIEUR EST MAXI
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      JCCID,JFINT,JDIRI,JFEXT,JVCFO,JINER
      INTEGER      IFM,NIV,NIVMPI
      LOGICAL      LFETI,LDYNA,LFETIP,LCINE
      CHARACTER*24 K24BID
      CHARACTER*24 CNFETI
      CHARACTER*19 CNDIRI,CNVCFO
      INTEGER      IBID,IEQ
      LOGICAL      ISFONC,NDYNLO
      REAL*8       VAL2,VAL3,R8BID,APPUI,FEXT
C      CHARACTER*24 SDNUCO
C      INTEGER      JNUCO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)          
C
C --- INITIALISATIONS
C
      VCHAR  = 0.D0
      ICHAR  = 0
      JCCID  = 0
C
C --- FONCTIONNALITES ACTIVEES
C
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
      LCINE  = ISFONC(FONACT,'DIRI_CINE')
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C 
      CALL NMCHEX(VEASSE,'VEASSE','CNDIRI',CNDIRI)   
      CALL NMCHEX(VEASSE,'VEASSE','CNVCF0',CNVCFO)
C
C --- ACCES DDLS IMPOSES PAR AFFE_CHAR_CINE :
C
      IF (LCINE) THEN 
        CALL JEVEUO(MATASS(1:19)//'.CCID','L',JCCID)
      ENDIF
C
C --- REPERAGE DDL LAGRANGE DE CONTACT
C
C      SDNUCO = SDNUME(1:19)//'.NUCO'
C      CALL JEVEUO(SDNUCO,'L',JNUCO)
C      
C --- PREPARATION FETI
C
      CALL NMFETI(NUMEDD,IFM   ,LFETI ,NIVMPI,LFETIP)
C
C --- SI FETI PARALLELE, ON COMMUNIQUE A CHAQUE PROC LA SOMME DES
C --- CHAM_NOS GLOBAUX PARTIELLEMENT CALCULES
C --- A OPTIMISER VIA UN DES CRITERES LOCAUX
C
      IF (LFETIP) THEN
        CNFETI = CNDIRI(1:19)//'.VALE'
        CALL FETMPI(71    ,NEQ   ,IFM   ,NIVMPI,IBID  ,
     &              IBID  ,CNFETI,CNFETI,CNFETI,R8BID )
        CNFETI = CNFINT(1:19)//'.VALE'
        CALL FETMPI(71    ,NEQ   ,IFM   ,NIVMPI,IBID  ,
     &              IBID  ,CNFETI,K24BID,K24BID,R8BID )
        CNFETI = CNFEXT(1:19)//'.VALE'
        CALL FETMPI(71    ,NEQ   ,IFM   ,NIVMPI,IBID  ,
     &              IBID  ,CNFETI,K24BID,K24BID,R8BID )
        CNFETI = CNVCFO(1:19)//'.VALE'
        CALL FETMPI(71    ,NEQ   ,IFM   ,NIVMPI,IBID  ,
     &              IBID  ,CNFETI,K24BID,K24BID,R8BID)
        IF (LDYNA) THEN
          CNFETI = FOINER(1:19)//'.VALE'
          CALL FETMPI(71    ,NEQ   ,IFM   ,NIVMPI,IBID  ,
     &                IBID  ,CNFETI,K24BID,K24BID,R8BID)
        ENDIF
      ENDIF
C
C --- ACCES AUX CHAM_NO
C
      CALL JEVEUO(CNFINT(1:19)//'.VALE','L',JFINT)
      CALL JEVEUO(CNDIRI(1:19)//'.VALE','L',JDIRI)
      CALL JEVEUO(CNFEXT(1:19)//'.VALE','L',JFEXT)
      CALL JEVEUO(CNVCFO(1:19)//'.VALE','L',JVCFO) 
C       
      IF (LDYNA) THEN
        CALL JEVEUO(FOINER(1:19)//'.VALE','L',JINER)
      ENDIF
C
C --- CALCUL DES RESIDUS
C
      DO 20 IEQ = 1,NEQ
C
C --- QUELLE REACTION D'APPUI ?
C     
        APPUI = 0.D0
        FEXT  = 0.D0
        IF (LCINE) THEN
          IF (ZI(JCCID+IEQ-1).EQ.1) THEN
            APPUI = - ZR(JFINT+IEQ-1) 
            FEXT  = 0.D0
          ELSE
            APPUI = ZR(JDIRI+IEQ-1)
            FEXT  = ZR(JFEXT+IEQ-1)  
          ENDIF 
        ELSE
          APPUI = ZR(JDIRI+IEQ-1)
          FEXT  = ZR(JFEXT+IEQ-1)
        ENDIF   
C                
        VAL2  = ABS(APPUI-FEXT)+ABS(ZR(JVCFO+IEQ-1))              
C
C --- VCHAR: MAX CHARGEMENT EXTERIEUR EN STATIQUE
C
        IF (VCHAR.LE.VAL2) THEN
          VCHAR = VAL2
          ICHAR = IEQ
        ENDIF
C
C --- VCHAR: MAX CHARGEMENT EXTERIEUR EN DYNAMIQUE
C
        IF (LDYNA) THEN
          VAL3  = ABS(ZR(JINER+IEQ-1))
          IF (VCHAR.LE.VAL3) THEN
            VCHAR = VAL3
            ICHAR = IEQ
          ENDIF
        ENDIF

 20   CONTINUE
C
      CALL JEDEMA()
      END
