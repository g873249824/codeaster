      SUBROUTINE NMCALM(MODELZ,LISCHA,MATE  ,CARELE,COMPOR,
     &                  INSTAM,INSTAP,CARCRI,VALMOI,VALPLU,
     &                  DEPALG,TYPMAT,OPTMAZ,BASE  ,LMACR ,
     &                  MEELEM)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*(*) MODELZ
      CHARACTER*(*) MATE,CARELE
      CHARACTER*24  COMPOR,CARCRI
      REAL*8        INSTAM,INSTAP
      CHARACTER*24  VALMOI(8),VALPLU(8),DEPALG(8)
      CHARACTER*19  LISCHA
      CHARACTER*6   TYPMAT
      CHARACTER*(*) OPTMAZ
      CHARACTER*1   BASE
      CHARACTER*8   MEELEM(*)
      LOGICAL       LMACR
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL)
C
C CALCUL DES MATRICES ELEMENTAIRES
C      
C ----------------------------------------------------------------------
C
C
C IN  MODELE : NOM DU MODELE
C IN  LISCHA : LISTE DES CHARGEMENTS
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  TYPMAT : TYPE DE MATRICE A CALCULER
C IN  OPTMAT : OPTION DE CALCUL POUR LA MATRICE
C OUT MEMATR : MATR_ELEM CALCULEE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      CHARACTER*8  MERIGI,MEMASS,MEAMOR,MESUIV,MESSTR,MEGEOM,MEDIRI  
      CHARACTER*24 MODELE
      INTEGER      JINFC,JCHAR,JCHAR2,I,IAREFE,IRES
      INTEGER      NBCHAR
      CHARACTER*16 OPTMAT  
      CHARACTER*24 DEPMOI,SIGPLU,DEPDEL,K24BID
      CHARACTER*24 CHARGE,INFOCH
      INTEGER      IFM,NIV    
C      
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- INITIALISATIONS
C        
      OPTMAT = OPTMAZ
      MODELE = MODELZ       
      MERIGI = MEELEM(1) 
      MEMASS = MEELEM(3) 
      MEAMOR = MEELEM(4) 
      MESUIV = MEELEM(5)
      MESSTR = MEELEM(6)
      MEGEOM = MEELEM(7) 
      MEDIRI = MEELEM(2)       
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><MATR> CALCUL DES MATR_ELEM' //
     &                ' DE TYPE <',TYPMAT,'>'    
      ENDIF       
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      IF (VALMOI(1)(1:1).NE.' ') THEN     
        CALL DESAGG(VALMOI,DEPMOI,K24BID,K24BID,K24BID,
     &              K24BID,K24BID,K24BID,K24BID)
      ENDIF
      IF (VALPLU(1)(1:1).NE.' ') THEN     
        CALL DESAGG(VALPLU,K24BID,SIGPLU,K24BID,K24BID,
     &              K24BID,K24BID,K24BID,K24BID)  
      ENDIF      
      CALL DESAGG(DEPALG,K24BID,DEPDEL,K24BID,K24BID,
     &            K24BID,K24BID,K24BID,K24BID)                
C
C --- TRANSFO CHARGEMENTS
C
      CHARGE = LISCHA(1:19)//'.LCHA'
      INFOCH = LISCHA(1:19)//'.INFC'
      CALL JEVEUO(INFOCH,'L',JINFC)
      NBCHAR = ZI(JINFC)
      CALL JEVEUO(CHARGE,'L',JCHAR)
      CALL WKVECT('&&NMCALC.LISTE_CHARGE','V V K8',NBCHAR,JCHAR2)
      DO 10 I = 1,NBCHAR
        ZK8(JCHAR2-1+I) = ZK24(JCHAR-1+I) (1:8)
   10 CONTINUE
C
C --- CALCULS MATRICES ELEMENTAIRES
C
      IF (TYPMAT.EQ.'MEDIRI') THEN
        CALL MEDIME(MODELE,LISCHA,MEDIRI)
      ELSEIF (TYPMAT.EQ.'MERIBI') THEN           
        CALL DETRSD('MATR_ELEM',MEGEOM)
        CALL MERIBI(MODELE(1:8),CARELE(1:8),SIGPLU,MEGEOM,0)    
      ELSEIF (TYPMAT.EQ.'MEMASS') THEN           
        CALL MEMAME(OPTMAT,MODELE,NBCHAR,ZK8(JCHAR2),MATE  ,
     &              CARELE,.TRUE.,INSTAM,COMPOR     ,MEMASS,
     &              BASE  )       
      ELSEIF (TYPMAT.EQ.'MEAMOR') THEN       
        CALL MEAMME(OPTMAT,MODELE,NBCHAR,ZK8(JCHAR2),MATE  ,
     &              CARELE,.TRUE.,INSTAM,'V'        ,MERIGI,
     &              MEMASS,MEAMOR) 
        IF (LMACR) THEN
          CALL JEVEUO(MEAMOR(1:8)//'.REFE_RESU','E',IAREFE)
          ZK24(IAREFE-1+3) = 'OUI_SOUS_STRUC'
        ENDIF 
      ELSEIF (TYPMAT.EQ.'MESUIV') THEN 
        CALL MECGME(MODELE,CARELE,MATE  ,LISCHA,INSTAP,
     &              DEPMOI,DEPDEL,INSTAM,COMPOR,CARCRI,
     &              MESUIV)
      ELSEIF (TYPMAT.EQ.'MESSTR') THEN 
C LE CALCUL DES 'MATR_ELEM' DES SOUS-STRUC SE FERA EN SOUTERRAIN
C DANS ASSMAM
        CALL JEEXIN(MESSTR(1:8)//'.REFE_RESU',IRES)
        IF (IRES.EQ.0) THEN      
          CALL MEMARE(BASE  ,MESSTR,MODELE(1:8),MATE,CARELE,
     &                OPTMAT)
        ENDIF 
        CALL JEVEUO(MESSTR(1:8)//'.REFE_RESU','E',IAREFE)
        ZK24(IAREFE-1+3) = 'OUI_SOUS_STRUC'                
      ELSE  
        CALL ASSERT(.FALSE.)
      ENDIF
C
      CALL JEDETR('&&NMCALC.LISTE_CHARGE')
      CALL JEDEMA()      
C
      END
