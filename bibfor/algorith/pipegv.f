       SUBROUTINE  PIPEGV(PILO, NDIM, NNO1, NNO2,NNO3,NPG,IW, VFF1,
     &   VFF2,VFF3,IDFDE1,IDFDE2,GEOM, TYPMOD, MAT, COMPOR, LGPG, 
     &   DDLM, SIGM,VIM,DDLD, DDL0, DDL1, COPILO,TAU,IBORNE)
     

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 15/05/2007   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================

C TOLE CRP_21

       IMPLICIT NONE

       CHARACTER*8   TYPMOD(*)
       CHARACTER*16  PILO, COMPOR(4)

       INTEGER NDIM, NNO1,NNO2,NNO3,NPG,MAT,LGPG
       INTEGER IW,IDFDE1,IDFDE2,IBORNE
       REAL*8  GEOM(NDIM,NNO1),DDLM(*),DDLD(*),DDL0(*),DDL1(*)
       REAL*8  VFF1(NNO1,NPG),VFF2(NNO2,NPG),VFF3(NNO3,NPG)
       REAL*8  SIGM(2*NDIM+1,NPG), VIM(LGPG,NPG),TAU
       REAL*8  COPILO(5,NPG), ETAMIN, ETAMAX
C.......................................................................
C
C     BUT:  CALCUL  DES COEFFICIENTS DE PILOTAGE POUR PRED_ELAS
C.......................................................................
C IN  PILO    : MODE DE PILOTAGE: DEFORMATION, PRED_ELAS
C IN  NDIM    : DIMENSION DE L'ESPACE
C IN  NNO     : NOMBRE DE NOEUDS DE L'ELEMENT
C IN  NPG     : NOMBRE DE POINTS DE GAUSS
C IN  IW  : POIDS DES POINTS DE GAUSS
C IN  IVF     : VALEUR DES FONCTIONS DE FORME
C IN  IDFDE   : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C IN  GEOM    : COORDONEES DES NOEUDS
C IN  TYPMOD  : TYPE DE MODELISATION
C IN  MAT   : MATERIAU CODE
C IN  COMPOR  : COMPORTEMENT
C IN  LGPG    : "LONGUEUR" DES VARIABLES INTERNES POUR 1 POINT DE GAUSS
C              CETTE LONGUEUR EST UN MAJORANT DU NBRE REEL DE VAR. INT.
C IN  DEPLM   : DEPLACEMENT EN T-
C IN  SIGM    : CONTRAINTES DE CAUCHY EN T-
C IN  VIM     : VARIABLES INTERNES EN T-
C IN  DDEPL   : INCREMENT DE DEPLACEMENT A L'ITERATION NEWTON COURANTE
C IN  DEPL0   : CORRECTION DE DEPLACEMENT POUR FORCES FIXES
C IN  DEPL1   : CORRECTION DE DEPLACEMENT POUR FORCES PILOTEES
C MEM DFDI    : DERIVEE DES FONCTIONS DE FORME
C OUT COPILO  : COEFFICIENTS A0 ET A1 POUR CHAQUE POINT DE GAUSS
C......................................................................
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      CHARACTER*2  K2
      CHARACTER*8 NOM(2)
      
      LOGICAL AXI, GRAND
      INTEGER G,N,I,KL
      INTEGER NDIMSI
      INTEGER IU(3*27),IA(8),IL(8)
      REAL*8  F(3,3),R,RAC2,DFDI1(3*27),WG
      REAL*8  SIGMA(6),RAUG,D,VAL(2)
      REAL*8  DEPLM(3*27),DEPLD(3*27),DEPLP(3*27),DFDI2(8,3)
      REAL*8  EPSM(6),EPSD(6),EPSP(6),AVM,AVP,AVD,MUM,MUP,MUD
      REAL*8  ZEPSM(6),ZEPSD(6),ZEPSP(6),PHIP,PHID
      REAL*8  R8VIDE,RBID
      REAL*8  NONLOC(4)

C ----------------------------------------------------------------------


C -- INITIALISATION

      RAC2   = SQRT(2.D0)
      GRAND  = .FALSE.
      AXI    = .FALSE.
      NDIMSI = 2*NDIM

      CALL R8INIR(6,0.D0,SIGMA,1)
      CALL R8INIR(NPG*5,R8VIDE(),COPILO,1)
      CALL R8INIR(3,0.D0,NONLOC,1)

      NOM(1) = 'LONG_CARA'
      NOM(2) = 'PENA_LAGR'
      CALL RCVALA(MAT,' ','NON_LOCAL',0,' ',0.D0,2,NOM,VAL,K2,'F ')
      RAUG = VAL(2)
      
      CALL NMGVRE(COMPOR(1), MAT, D, RBID)

      CALL NMGVDD(NDIM,NNO1,NNO2,IU,IA,IL)


C    EXTRACTION DES DEPLACEMENTS
      DO 100 N = 1,NNO1
        DO 110 I = 1,NDIM
          DEPLM(I+(N-1)*NDIM) = DDLM(IU(NNO1*(I-1)+N))
          DEPLP(I+(N-1)*NDIM) = DDLM(IU(NNO1*(I-1)+N))
     &                         +DDLD(IU(NNO1*(I-1)+N))
     &                         +DDL0(IU(NNO1*(I-1)+N))
          DEPLD(I+(N-1)*NDIM) = DDL1(IU(NNO1*(I-1)+N))
C          WRITE(6,*) 'ddlm=',DDLM(IU(NNO1*(I-1)+N))
C          WRITE(6,*) 'ddld=',DDLD(IU(NNO1*(I-1)+N))
C          WRITE(6,*) 'ddl0=',DDL0(IU(NNO1*(I-1)+N))
C          WRITE(6,*) 'ddl1=',DDL1(IU(NNO1*(I-1)+N))
 110    CONTINUE
 100  CONTINUE



C -- TRAITEMENT DE CHAQUE POINT DE GAUSS

      DO 10 G=1,NPG

C      DEFORMATIONS

        CALL DFDMIP(NDIM,NNO1,AXI,GEOM,G,IW,VFF1(1,G),IDFDE1,R,WG,DFDI1)
        CALL NMEPSI(NDIM,NNO1,AXI,GRAND,VFF1(1,G),R,DFDI1,DEPLM,F,EPSM)
        CALL NMEPSI(NDIM,NNO1,AXI,GRAND,VFF1(1,G),R,DFDI1,DEPLD,F,EPSD)
        CALL NMEPSI(NDIM,NNO1,AXI,GRAND,VFF1(1,G),R,DFDI1,DEPLP,F,EPSP)


C      VARIABLE INTERNE NON LOCALE ET MULTIPLICATEUR DE LAGRANGE

        CALL DFDMIP(NDIM,NNO2,AXI,GEOM,G,IW,VFF2(1,G),IDFDE2,R,WG,DFDI2)
        
        AVM = 0
        AVP = 0
        AVD = 0
        DO 150 N = 1,NNO2
          AVM = AVM + VFF2(N,G)*DDLM(IA(N))
          AVP = AVP + VFF2(N,G)*(DDLM(IA(N))+DDLD(IA(N))+DDL0(IA(N)))
          AVD = AVD + VFF2(N,G)*DDL1(IA(N))
 150    CONTINUE
 
        MUM = 0
        MUP = 0
        MUD = 0
        DO 160 N = 1,NNO3
          MUM = MUM + VFF3(N,G)*DDLM(IL(N))
          MUP = MUP + VFF3(N,G)*(DDLM(IL(N))+DDLD(IL(N))+DDL0(IL(N)))
          MUD = MUD + VFF3(N,G)*DDL1(IL(N))
 160    CONTINUE


        PHIP = D*(RAUG*AVP + MUP)
        PHID = D*(RAUG*AVD + MUD)

        NONLOC(1)=1.D0
        NONLOC(2)=RAUG*D
        NONLOC(3)=PHIP
        NONLOC(4)=PHID


C      CONTRAINTES AVEC SQRT(2)          

        CALL DCOPY(NDIMSI,SIGM(1,G),1,SIGMA,1)
        DO 70 KL = 4, NDIMSI
          SIGMA(KL) = SIGMA(KL)*RAC2
 70     CONTINUE


C      PILOTAGE SPECIFIQUE A CHAQUE LOI DE COMPORTEMENT

        IF ( COMPOR(1).EQ.'ENDO_FRAGILE') THEN
          CALL PIEFGV(NDIM,TYPMOD,TAU,MAT,
     &            NONLOC,VIM(1,G),
     &            EPSP, EPSD, COPILO(1,G), COPILO(2,G),
     &            COPILO(3,G), COPILO(4,G),COPILO(5,G))

        ELSEIF ( COMPOR(1).EQ.'ENDO_ISOT_BETON') THEN
          ETAMIN=ZR(IBORNE+1)
          ETAMAX=ZR(IBORNE)
          IF (ETAMIN.EQ.R8VIDE() .OR. ETAMAX.EQ.R8VIDE())
     &      CALL U2MESS('F','MECANONLINE_60')
          CALL PIEIGV(NDIM,TYPMOD,TAU,MAT,
     &            NONLOC,VIM(1,G),EPSM,
     &            EPSP, EPSD, ETAMIN,ETAMAX,COPILO(1,G), COPILO(2,G),
     &            COPILO(3,G), COPILO(4,G),COPILO(5,G))
        ELSE
              CALL U2MESS('F','MECANONLINE_59')
        END IF

 10   CONTINUE
      END
