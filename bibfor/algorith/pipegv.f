       SUBROUTINE  PIPEGV(PILO, NDIM, NNO1, NNO2,NNO3,NPG,IW, VFF1,
     &   VFF2,VFF3,IDFDE1,IDFDE2,GEOM, TYPMOD, MAT, COMPOR, LGPG, 
     &   DDLM, SIGM,VIM,DDLD, DDL0, DDL1, COPILO,TAU,IBORNE)
     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 16/01/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================

C TOLE CRP_21

       IMPLICIT NONE

       CHARACTER*8   TYPMOD(*)
       CHARACTER*16  PILO, COMPOR(4)

       INTEGER NDIM, NNO1,NNO2,NNO3,NPG,MAT,LGPG
       INTEGER IW,IDFDE1,IDFDE2,IBORNE
       REAL*8  GEOM(NDIM,NNO1),DDLM(*),DDLD(*),DDL0(*),DDL1(*)
       REAL*8  VFF1(NNO1,NPG),VFF2(NNO2,NPG),VFF3(NNO3,NPG)
       REAL*8  SIGM(2*NDIM+1,NPG), VIM(LGPG,NPG),TAU
       REAL*8  COPILO(5,NPG), ETAMIN, ETAMAX
C.......................................................................
C
C     BUT:  CALCUL  DES COEFFICIENTS DE PILOTAGE POUR PRED_ELAS
C.......................................................................
C IN  PILO   : MODE DE PILOTAGE: DEFORMATION, PRED_ELAS
C IN  NDIM   : DIMENSION DE L'ESPACE
C IN  NNO    : NOMBRE DE NOEUDS DE L'ELEMENT
C IN  NPG    : NOMBRE DE POINTS DE GAUSS
C IN  IW     : POIDS DES POINTS DE GAUSS
C IN  IVF    : VALEUR DES FONCTIONS DE FORME
C IN  IDFDE  : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C IN  GEOM   : COORDONEES DES NOEUDS
C IN  TYPMOD : TYPE DE MODELISATION
C IN  MAT    : MATERIAU CODE
C IN  COMPOR : COMPORTEMENT
C IN  LGPG   : "LONGUEUR" DES VARIABLES INTERNES POUR 1 POINT DE GAUSS
C             CETTE LONGUEUR EST UN MAJORANT DU NBRE REEL DE VAR. INT.
C IN  DDLM   : DDL U,ALPHA,MU EN T-
C IN  SIGM   : CONTRAINTES DE CAUCHY EN T- (INUTILE)
C IN  VIM    : VARIABLES INTERNES EN T-
C IN  DDLD   : INCREMENT DE DDL U,ALPHA,MU A L'ITERATION NEWTON COURANTE
C IN  DDL0   : CORRECTION DE DDL U,ALPHA,MU POUR FORCES FIXES
C IN  DDL1   : CORRECTION DE DDL U,ALPHA,MU POUR FORCES PILOTEES
C MEM DFDI   : DERIVEE DES FONCTIONS DE FORME
C OUT COPILO : COEFFICIENTS A0 ET A1 POUR CHAQUE POINT DE GAUSS
C......................................................................
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      INTEGER K2
      CHARACTER*8 NOM(1)
      CHARACTER*8   FAMI,POUM
      LOGICAL AXI, GRAND
      INTEGER G,N,I,KPG,SPT
      INTEGER IU(3,27),IA(8),IL(8)
      REAL*8  F(3,3),R,DFDI1(3*27),WG
      REAL*8  RAUG
      REAL*8  DEPLM(3*27),DEPLD(3*27),DEPLP(3*27)
      REAL*8  EPSM(6),EPSD(6),EPSP(6),AVM,AVP,AVD,MUM,MUP,MUD

      REAL*8  R8VIDE
      REAL*8  NONLOC(4)
      
C     DATA    NOM /'PENA_LAGR'/
      DATA    NOM /'PENA_LAG'/
      
C ----------------------------------------------------------------------


C -- INITIALISATION

      GRAND  = .FALSE.
      AXI    = .FALSE.

      CALL R8INIR(NPG*5,R8VIDE(),COPILO,1)
      CALL R8INIR(4,0.D0,NONLOC,1)
      FAMI='FPG1'
      KPG=1
      SPT=1
      POUM='+'

      CALL RCVALB(FAMI,KPG,SPT,POUM,MAT,' ','NON_LOCAL',0,' ',
     &            0.D0,1,NOM,RAUG,K2,2)
      CALL NMGVDD(NDIM,NNO1,NNO2,IU,IA,IL)


C    EXTRACTION DES DEPLACEMENTS
      DO 100 N = 1,NNO1
        DO 110 I = 1,NDIM
          DEPLM(I+(N-1)*NDIM) = DDLM(IU(I,N))
          DEPLP(I+(N-1)*NDIM) = DDLD(IU(I,N)) + DDL0(IU(I,N))
          DEPLD(I+(N-1)*NDIM) = DDL1(IU(I,N))
 110    CONTINUE
 100  CONTINUE


C -- TRAITEMENT DE CHAQUE POINT DE GAUSS

      DO 10 G=1,NPG


C      DEFORMATIONS

        CALL DFDMIP(NDIM,NNO1,AXI,GEOM,G,IW,VFF1(1,G),IDFDE1,R,WG,DFDI1)
        CALL NMEPSI(NDIM,NNO1,AXI,GRAND,VFF1(1,G),R,DFDI1,DEPLM,F,EPSM)
        CALL NMEPSI(NDIM,NNO1,AXI,GRAND,VFF1(1,G),R,DFDI1,DEPLP,F,EPSP)
        CALL NMEPSI(NDIM,NNO1,AXI,GRAND,VFF1(1,G),R,DFDI1,DEPLD,F,EPSD)


C      VARIABLE INTERNE NON LOCALE ET MULTIPLICATEUR DE LAGRANGE
        
        AVM = 0
        AVP = 0
        AVD = 0
        DO 150 N = 1,NNO2
          AVM = AVM + VFF2(N,G) * DDLM(IA(N))
          AVP = AVP + VFF2(N,G) * (DDLD(IA(N)) + DDL0(IA(N)))
          AVD = AVD + VFF2(N,G) * DDL1(IA(N))
 150    CONTINUE
 
        MUM = 0
        MUP = 0
        MUD = 0
        DO 160 N = 1,NNO3
          MUM = MUM + VFF3(N,G) * DDLM(IL(N))
          MUP = MUP + VFF3(N,G) * (DDLD(IL(N)) + DDL0(IL(N)))
          MUD = MUD + VFF3(N,G) * DDL1(IL(N))
 160    CONTINUE


        NONLOC(1) = RAUG*AVM + MUM
        NONLOC(2) = RAUG*AVP + MUP
        NONLOC(3) = RAUG*AVD + MUD
        NONLOC(4) = RAUG


C      PILOTAGE SPECIFIQUE A CHAQUE LOI DE COMPORTEMENT

        IF ( COMPOR(1).EQ.'ENDO_SCALAIRE') THEN
          CALL PIESGV(NDIM,TAU,MAT,VIM(1,G),EPSM,EPSP,EPSD,
     &                NONLOC,COPILO(1,G))
          
        ELSEIF ( COMPOR(1).EQ.'ENDO_ISOT_BETON') THEN
          ETAMIN=ZR(IBORNE+1)
          ETAMAX=ZR(IBORNE)
          IF (ETAMIN.EQ.R8VIDE() .OR. ETAMAX.EQ.R8VIDE())
     &      CALL U2MESS('F','MECANONLINE_60')
          CALL PIEIGV(NDIM,TYPMOD,TAU,MAT,
     &            NONLOC,VIM(1,G),EPSM,
     &            EPSP, EPSD, ETAMIN,ETAMAX,COPILO(1,G), COPILO(2,G),
     &            COPILO(3,G), COPILO(4,G),COPILO(5,G))
        ELSE
              CALL U2MESS('F','MECANONLINE_59')
        END IF

 10   CONTINUE
      END
