      SUBROUTINE CFNORS(NOMA  ,DEFICO,FFORME,POSMAI,NUMENM,
     &                  LPOUTR,LPOINT,KSI1  ,KSI2  ,LLISS ,
     &                  ITYPE ,VECTOR,TAU1  ,TAU2  ,LNFIXE)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 01/04/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INTEGER       POSMAI       
      CHARACTER*8   FFORME
      CHARACTER*24  DEFICO
      REAL*8        KSI1,KSI2      
      CHARACTER*8   NOMA
      INTEGER       NUMENM
      REAL*8        TAU1(3),TAU2(3)
      REAL*8        VECTOR(3)
      INTEGER       ITYPE
      LOGICAL       LNFIXE,LLISS,LPOUTR,LPOINT
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (TOUTES METHODES - APPARIEMENT)
C
C MODIFIE LES VECTEURS TANGENTS LOCAUX QUAND NORMALE DONNEE PAR 
C UTILISATEUR OU LISSAGE
C      
C ----------------------------------------------------------------------
C
C  NB: LE REPERE EST ORTHORNORME ET TEL QUE LA NORMALE POINTE VERS
C  L'EXTERIEUR DE LA MAILLE
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  FFORME : TYPE DES FONCTIONS DE FORME
C               'CONTINUE' POUR ELTS DE CONTACT
C               'STANDARD' POUR ELTS STANDARDS
C IN  POSMAI : MAILLE QUI RECOIT LA PROJECTION
C IN  LLISS  : IL FAUT FAIRE LE LISSAGE
C IN  LPOUTR : MAILLE DE TYPE POUTRE
C IN  LPOINT : MAILLE DE TYPE POINT (POI1)
C IN  NUMENM : > 0 NUMERO ABSOLU MAILLE
C              < 0 NUMERO ABSOLU NOEUD 
C IN  ITYPE  : TYPE DE NORMALE
C                0 AUTO
C                1 FIXE   (DONNE PAR VECTOR)
C                2 VECT_Y (DONNE PAR VECTOR)
C IN  VECTOR : VALEUR DE LA NORMALE FIXE OU VECT_Y
C IN  KSI1   : COORDONNEE X DU POINT PROJETE
C IN  KSI2   : COORDONNEE Y DU POINT PROJETE
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C I/O TAU1   : PREMIERE TANGENTE LOCALE AU POINT PROJETE
C I/O TAU2   : SECONDE TANGENTE LOCALE AU POINT PROJETE
C OUT LNFIXE : VAUT .TRUE. SI NORMALE='FIXE' OU 'VECT_Y'
C                   .FALSE. SI NORMALE='AUTO'
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32 JEXNUM
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1) 
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*8  NOMENT
C
C ----------------------------------------------------------------------
C 
      CALL JEMARQ() 
C
C --- NOM DE L'ENTITE (NOEUD OU MAILLE)
C      
      IF (NUMENM.GT.0) THEN
        CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NUMENM),NOMENT)  
      ELSEIF (NUMENM.LT.0) THEN 
        CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',ABS(NUMENM)),NOMENT) 
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF   
C
C --- MODIF DE LA NORMALE SI FIXE (LNFIXE = .TRUE.)
C
      CALL CFNORD(NOMA  ,NUMENM,ITYPE  ,VECTOR,TAU1  ,
     &            TAU2  ,LNFIXE)
C
C --- VERIFICATION POUTRES
C
      IF (LPOUTR) THEN
        IF (.NOT.LNFIXE) THEN
          IF (NUMENM.GT.0) THEN
            CALL U2MESK('F','CONTACT_60',1,NOMENT) 
          ELSEIF (NUMENM.LT.0) THEN 
            CALL U2MESK('F','CONTACT_61',1,NOMENT) 
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF
        ENDIF
      ENDIF  
C
C --- VERIFICATION MAILLE POINT        
C
      IF (LPOINT) THEN
        IF (.NOT.LNFIXE) THEN
          CALL U2MESK('F','CONTACT3_60',1,NOMENT) 
        ENDIF        
      ENDIF           
C          
C --- LISSAGE DES VECTEURS TANGENTS 
C          
      IF (LLISS) THEN
        IF (LNFIXE) THEN
          CALL ASSERT(.FALSE.)
        ENDIF
        IF (POSMAI.EQ.0) THEN
          CALL ASSERT(.FALSE.)
        ENDIF
        CALL COPNOR(NOMA  ,DEFICO,FFORME,POSMAI,KSI1  ,
     &              KSI2  ,TAU1  ,TAU2  )
      ENDIF
C
      CALL JEDEMA()                   
C
      END
