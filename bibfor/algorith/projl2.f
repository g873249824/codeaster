      SUBROUTINE PROJL2(NDIM  ,COORDA,COORDB,COORDP,
     &                  UNORM ,MNORM ,COORDM,LAMBDA,DEBORD)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/03/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT   NONE
      INTEGER NDIM
      REAL*8  COORDA(3)
      REAL*8  COORDB(3)
      REAL*8  COORDP(3)
      REAL*8  COORDM(3)
      REAL*8  LAMBDA
      REAL*8  DEBORD
      REAL*8  UNORM(3),MNORM(3)
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - APPARIEMENT - MAIT/ESCL - SEG2)
C
C PROJECTION D'UN NOEUD ESCLAVE P SUR UN SEGMENT LINEAIRE AB
C UTILISATION DE LA NORMALE MOYENNE SEGMENT MAITRE/ESCLAVE
C
C ----------------------------------------------------------------------
C
C
C IN  NDIM   : DIMENSION DU PB
C IN  COORDA : COORDONNEES DU SOMMET A DU SEGMENT
C IN  COORDB : COORDONNEES DU SOMMET B DU SEGMENT
C IN  COORDP : COORDONNEES DU NOEUD ESCLAVE P
C IN  UNORM  : NORMALE MOYENNE MAITRE/ESCLAVE
C IN  MNORM  : NORMALE A LA MAILLE MAITRE  
C OUT COORDM : COORDONNEES PHYSIQUES DE LA "PROJECTION" M
C OUT LAMBDA : COORDONNEES PARAMETRIQUES SUR LA MAILLE MAITRE
C                 DE LA "PROJECTION" M 
C OUT DEBORD : PROJECTION HORS DE LA MAILLE
C              >0 : PROJECTION HORS DE LA MAILLE
C              <0 : PROJECTION SUR LA MAILLE
C
C ----------------------------------------------------------------------
C
      REAL*8 COEFA,COEFC,COEFD
      REAL*8 AB(3),AM(3),ABSAM,ABSAB,COEFB,COEFF,LAM
C
C ----------------------------------------------------------------------
C
      DEBORD = - 1.D0
C
C --- VECTEUR AB
C
      AB(1) = COORDB(1)-COORDA(1)
      AB(2) = COORDB(2)-COORDA(2)
      IF (NDIM.EQ.3) THEN
        AB(3) = COORDB(3)-COORDA(3)        
      ELSE
        AB(3) = 0.D0      
      ENDIF      
C
C --- CALCUL DE LA COORDONNEE PARAMETRIQUE LAMBDA DE M DANS AB
C
      ABSAB = (AB(1)*AB(1)+AB(2)*AB(2)+AB(3)*AB(3))
         
      IF (ABSAB.EQ.0.D0) THEN
        CALL U2MESS('F','CONTACT_10')
      ENDIF

      IF (NDIM.EQ.2) THEN
        COEFA = -AB(2)
        COEFB = AB(1)
        COEFC = - (COEFA*COORDA(1)+COEFB*COORDA(2))
      ELSEIF (NDIM.EQ.3) THEN
        COEFA = MNORM(1)
        COEFB = MNORM(2)
        COEFC = MNORM(3)                
        COEFD = - (COEFA*COORDA(1)+COEFB*COORDA(2)+COEFC*COORDA(3))
      ELSE
        CALL CFIMPA('PROJL2',1)   
      END IF

      COEFF = COEFA*UNORM(1) + COEFB*UNORM(2)
      IF (NDIM.EQ.3) THEN 
        COEFF = COEFF + COEFC*UNORM(3)
      ENDIF
      
      IF (COEFF.NE.0.D0) THEN
        IF (NDIM.EQ.3) THEN
          COEFF = - (COEFD+COEFC*COORDP(3)+COEFB*COORDP(2)+
     &               COEFA*COORDP(1))/COEFF
        ELSE
          COEFF = - (COEFC+COEFB*COORDP(2)+COEFA*COORDP(1))/COEFF
        END IF
      ELSE
        IF (NDIM.EQ.3) THEN
          COEFF = COEFA*COORDP(1) + COEFB*COORDP(2) + COEFD
          COEFF = COEFF + COEFC*COORDP(3)
        ELSE
          COEFF = COEFA*COORDP(1) + COEFB*COORDP(2) + COEFC
        END IF
        IF (COEFF.NE.0.D0) THEN
          CALL U2MESS('F','CONTACT_10')
        END IF
      END IF    
C
C --- CALCUL DES COORDONNEES CARTESIENNES DE M ("PROJECTION" DE P)
C      
      COORDM(1) = COORDP(1) + COEFF*UNORM(1)
      COORDM(2) = COORDP(2) + COEFF*UNORM(2)
      IF (NDIM.EQ.3) THEN
        COORDM(3) = COORDP(3) + COEFF*UNORM(3)
      ELSE
        COORDM(3) = 0.D0
      END IF

C
C --- VECTEUR AM
C
      AM(1) = COORDM(1) - COORDA(1)
      AM(2) = COORDM(2) - COORDA(2)
      IF (NDIM.EQ.3) THEN
        AM(3) = COORDM(3) - COORDA(3)   
      ELSE
        AM(3) = 0.D0      
      ENDIF 
      ABSAM = AB(1)*AM(1) + AB(2)*AM(2) + AB(3)*AM(3)
      LAM   = SQRT(AM(1)*AM(1) + AM(2)*AM(2) + AM(3)*AM(3))
C
C --- CALCUL DE LA COORDONNEE PARAMETRIQUE LAMBDA DE M DANS AB
C    
      IF (ABSAM.GE.0.D0) THEN
        LAMBDA = LAM/SQRT(ABSAB)
      ELSE
        LAMBDA = -LAM/SQRT(ABSAB)
      END IF
   
C      
C --- RABATTEMENT DE LA PROJECTION SUR LA MAILLE
C
      IF (LAMBDA.LT.0.D0) THEN
        DEBORD    = ABS(LAMBDA)
        LAMBDA    = 0.D0
        COORDM(1) = COORDA(1)
        COORDM(2) = COORDA(2)
        COORDM(3) = COORDA(3)
      ELSE IF (LAMBDA.GT.1.D0) THEN
        DEBORD    = LAMBDA-1.D0
        LAMBDA    = 1.D0
        COORDM(1) = COORDB(1)
        COORDM(2) = COORDB(2)
        COORDM(3) = COORDB(3)
      ENDIF      
C
      END
