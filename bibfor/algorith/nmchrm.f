      SUBROUTINE NMCHRM(PHASE ,
     &                  PARMET,METHOD,FONACT,SDDISC,SDDYNA,
     &                  NUMINS,ITERAT,DEFICO,METPRE,METCOR,
     &                  REASMA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/04/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*10 PHASE      
      REAL*8       PARMET(*)
      CHARACTER*16 METHOD(*)
      CHARACTER*16 METCOR,METPRE
      CHARACTER*19 SDDISC,SDDYNA
      INTEGER      NUMINS,ITERAT
      CHARACTER*24 DEFICO
      INTEGER      FONACT(*) 
      LOGICAL      REASMA   
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL)
C
C CHOIX DE REASSEMBLAGE DE LA MATRICE GLOBALE
C      
C ----------------------------------------------------------------------
C
C
C IN  PHASE  : PHASE DE CALCUL
C                'PREDICTION'
C                'CORRECTION' 
C                'FORCES_INT' 
C IN  FONACT : FONCTIONNALITES ACTIVEES (vOIR NMFONC)
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION
C                 VOIR DETAIL DES COMPOSANTES DANS NMLECT
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION
C                 VOIR DETAIL DES COMPOSANTES DANS NMLECT
C IN  SDDISC : SD DISC_INST
C IN  SDDYNA : SD DYNAMIQUE
C IN  NUMINS : NUMERO D'INSTANT
C IN  ITERAT : NUMERO D'ITERATION
C IN  DEFICO : SD DEF. CONTACT
C OUT METCOR : TYPE DE MATRICE DE CORRECTION
C OUT METPRE : TYPE DE MATRICE DE PREDICTION
C OUT REASMA  : .TRUE. SI ASSEMBLAGE MATRICE GLOBALE
C      
C ----------------------------------------------------------------------
C
      INTEGER      IFM,NIV
      REAL*8       INSTAM,INSTAP,DIINST,PASMIN,DELTAT
      INTEGER      REINCR,REITER
      LOGICAL      LMODIM,NDYNLO,ISFONC
      LOGICAL      LELTC,LCTCD,LELAS
      LOGICAL      CFDISL,LPREM,LDYNA,LAMOR,LCHOC,LVARC
C      
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><CALC> CHOIX D''ASSEMBLAGE DE '//
     &                'MATRICE GLOBALE' 
      ENDIF          
C
C --- INITIALISATIONS
C      
      REASMA = .FALSE.
      LMODIM = .FALSE.
C
C --- PARAMETRES
C
      REINCR = NINT(PARMET(1))
      REITER = NINT(PARMET(2))
      METCOR = METHOD(2)
      METPRE = METHOD(5)
      INSTAM = DIINST(SDDISC, NUMINS-1)
      INSTAP = DIINST(SDDISC, NUMINS  )
      DELTAT = INSTAP-INSTAM
      PASMIN = PARMET(3)
C
C --- PREMIER PAS DE TEMPS ?
C
      LPREM  = NUMINS.LE.1
C
C --- FONCTIONNALITES ACTIVEES
C
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
      LAMOR  = NDYNLO(SDDYNA,'MAT_AMORT')  
      LCTCD  = ISFONC(FONACT,'CONT_DISCRET')    
      LELTC  = ISFONC(FONACT,'ELT_CONTACT') 
      LCHOC  = ISFONC(FONACT,'DIS_CHOC')  
      LVARC  = ISFONC(FONACT,'EXI_VARC' )        
C
C --- AJOUTE-T-ON UNE CONTRIBUTION DU CONTACT DISCRET DANS LA MATRICE ?
C
      IF (LCTCD) THEN
        LMODIM = CFDISL(DEFICO,'MODI_MATR_GLOB')  
      ENDIF        
C      
C --- PASSAGE A LA MATRICE ELASTIQUE EN-DESSOUS DE PAS_MINI_ELAS   
C   
      IF (ABS(DELTAT) .LT. PASMIN) THEN
        REINCR = 1
        REITER = NINT(PARMET(4))
        METPRE = 'SECANTE'
        METCOR = 'SECANTE'
      END IF
C
C --- REASSEMBLAGE DE LA MATRICE GLOBALE      
C
      IF (PHASE.EQ.'CORRECTION' .OR. PHASE.EQ.'FORCES_INT') THEN
        IF ((METCOR.EQ.'TANGENTE').OR.(METCOR.EQ.'SECANTE')) THEN
          REASMA = .FALSE.
          IF (REITER.NE.0) THEN
            REASMA = MOD(ITERAT+1,REITER) .EQ. 0
          ENDIF  
        ELSE
          REASMA = .FALSE.
        END IF
      ELSE IF (PHASE.EQ.'PREDICTION') THEN
        IF ((REINCR.EQ.0) .AND. (NUMINS.NE.1)) THEN
          REASMA = .FALSE.
        ENDIF  
        IF (NUMINS.EQ.1) THEN
          REASMA = .TRUE.
        ENDIF  
        IF ((REINCR.NE.0) .AND. (NUMINS.NE.1)) THEN
          REASMA = MOD(NUMINS-1,REINCR) .EQ. 0
        END IF 
      ELSE
        CALL ASSERT(.FALSE.)
      END IF 
C
C --- ELASTICITE ?
C
      IF ((METCOR.EQ.'ELASTIQUE').OR.(METPRE.EQ.'ELASTIQUE')) THEN
        LELAS = .TRUE.
      ELSE
        LELAS = .FALSE.  
      ENDIF          
C
C --- DYNAMIQUE: REACTUALISATION DE LA MATRICE 
C --- D AMORTISSEMENT DE RAYLEIGH
C      
      IF (PHASE.EQ.'PREDICTION' .AND. LDYNA .AND. LAMOR) THEN
        IF (LPREM) REASMA = .TRUE.
      ENDIF    
C
C --- SI ELEMENTS DE CONTACT XFEM/CONTACT_CONTINU - REASSEMBL. OBLIG.
C 
      IF (LELTC) THEN
        IF (.NOT.REASMA) THEN
          IF (.NOT.LELAS) THEN
            CALL U2MESS('A','MECANONLINE5_4')
          ENDIF  
          REASMA = .TRUE.
        ENDIF
      ENDIF
C
C --- CONTACT DISCRET - CONTRIBUTION MATRICE TANGENTE
C
      IF (LMODIM.OR.LCHOC) THEN
        IF (.NOT.REASMA) THEN
          CALL  U2MESS('A','MECANONLINE5_5')
          REASMA = .TRUE.
        ENDIF
      ENDIF
C
C --- VARIABLES COMMANDES: LA MATRICE ELASTIQUE DOIT ETRE REACTUALISEE
C
      IF (LELAS.AND.PHASE.EQ.'PREDICTION') THEN
        IF (LVARC) THEN
          REASMA = .TRUE.
        ENDIF
      ENDIF
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        IF (REASMA) THEN
          WRITE (IFM,*) '<MECANONLINE><CALC> ON ASSEMBLE LA MATRICE'
        ELSE
          WRITE (IFM,*) '<MECANONLINE><CALC> ON N''ASSEMBLE PAS '//
     &                'LA MATRICE'        
        ENDIF      
      ENDIF             
C
      CALL JEDEMA()      
C
      END
