      SUBROUTINE NMMUAP(SDDYNA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE      
      INCLUDE 'jeveux.h'
      CHARACTER*19 SDDYNA
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (DYNAMIQUE - INITIALISATIONS)
C
C LECTURE DONNEES MULTI-APPUIS
C      
C ----------------------------------------------------------------------
C
C
C IN  SDDYNA : SD DYNAMIQUE
C
C
C
C
      CHARACTER*8  K8BID,REP,MODSTA, MAILLA
      CHARACTER*14 NUMDDL
      CHARACTER*24 DEEQ,MATRIC   
      INTEGER      NBMD,NEQ,NA,ND,NBEXCI,NF,NV
      INTEGER      IBID,IER,IRET,I,NDYNIN
      INTEGER      IADRIF,IDDEEQ
      CHARACTER*19 MAFDEP,MAFVIT,MAFACC,MAMULA,MAPSID      
      INTEGER      JNODEP,JNOVIT,JNOACC,JMLTAP,JPSDEL
      INTEGER      IARG
C
C ---------------------------------------------------------------------
C
      CALL JEMARQ()            
C
C --- LECTURE INFO. MATRICE MODES STATIQUES
C      
      CALL GETVID(' ','MODE_STAT',1,IARG,1,MODSTA,NBMD)
      CALL JEVEUO(MODSTA//'           .REFD','L',IADRIF)
      MATRIC =  ZK24(IADRIF)(1:8)
      CALL DISMOI('F','NOM_MAILLA'  ,MATRIC,'MATR_ASSE',IBID,
     &            MAILLA,IER)
      CALL DISMOI('F','NOM_NUME_DDL',MATRIC,'MATR_ASSE',IBID,
     &            NUMDDL,IRET)
      DEEQ = NUMDDL//'.NUME.DEEQ'
      CALL JEVEUO(DEEQ,'L',IDDEEQ)
      CALL DISMOI('F','NB_EQUA'     ,MATRIC,'MATR_ASSE',NEQ,
     &            K8BID,IRET)
C
C --- LECTURE EFFORTS MULTI-APPUIS
C
      NBEXCI = NDYNIN(SDDYNA,'NBRE_EXCIT')
      CALL NDYNKK(SDDYNA,'MUAP_MAFDEP',MAFDEP)
      CALL NDYNKK(SDDYNA,'MUAP_MAFVIT',MAFVIT)
      CALL NDYNKK(SDDYNA,'MUAP_MAFACC',MAFACC)
      CALL NDYNKK(SDDYNA,'MUAP_MAMULA',MAMULA)
      CALL NDYNKK(SDDYNA,'MUAP_MAPSID',MAPSID)
C   
      CALL WKVECT(MAFDEP,'V V K8',NBEXCI,JNODEP)
      CALL WKVECT(MAFVIT,'V V K8',NBEXCI,JNOVIT)
      CALL WKVECT(MAFACC,'V V K8',NBEXCI,JNOACC)
      CALL WKVECT(MAMULA,'V V I' ,NBEXCI,JMLTAP)
      CALL WKVECT(MAPSID,'V V R8',NBEXCI*NEQ,JPSDEL)
C      
      DO 10 I = 1,NBEXCI
        CALL GETVTX('EXCIT','MULT_APPUI',I,IARG,1,REP,ND)
        IF (REP(1:3).EQ.'OUI') THEN
          ZI(JMLTAP+I-1) = 1
C   
C --- ACCELERATIONS AUX APPUIS
C       
          CALL GETVID('EXCIT','ACCE',I,IARG,1,K8BID,NA)
          IF (NA.NE.0) THEN
            CALL GETVID('EXCIT','ACCE',I,IARG,1,ZK8(JNOACC+I-1),NA)
          ENDIF
C 
C --- FONCTIONS MULTIPLICATRICES DES ACCE. AUX APPUIS
C         
          CALL GETVID('EXCIT','FONC_MULT',I,IARG,1,K8BID,NF)
          IF (NF.NE.0) THEN 
            CALL GETVID('EXCIT','FONC_MULT',I,IARG,1,ZK8(JNOACC+I-1),NF)
          ENDIF
C   
C --- VITESSES AUX APPUIS
C             
          CALL GETVID('EXCIT','VITE',I,IARG,1,ZK8(JNOVIT+I-1),NV)
C   
C --- DEPLACEMENTS AUX APPUIS
C             
          CALL GETVID('EXCIT','DEPL',I,IARG,1,ZK8(JNODEP+I-1),ND)
C          
C --- CREE ET CALCULE LE VECTEUR PSI*DIRECTION
C        
          CALL TRMULT(MODSTA,I,MAILLA,NEQ,IDDEEQ,ZR(JPSDEL+(I-1)*NEQ))
C
C --- MISE A ZERO DES DDL DE LAGRANGE
C
          CALL ZERLAG(ZR(JPSDEL+(I-1)*NEQ),NEQ,ZI(IDDEEQ))
        ENDIF
 10   CONTINUE
C
      CALL JEDEMA()
      END
