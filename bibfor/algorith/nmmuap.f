      SUBROUTINE NMMUAP(RESULT,SDDYNA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8  RESULT      
      CHARACTER*19 SDDYNA
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (DYNAMIQUE - INITIALISATIONS)
C
C DONNEES MULTI-APPUIS
C      
C ----------------------------------------------------------------------
C
C
C IN  RESULT : NOM UTILISATEUR DU RESULTAT DE MECA_NON_LINEs
C IN  SDDYNA : SD DYNAMIQUE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ---------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX -----------------------------
C
      CHARACTER*8  K8BID,MODSTA, MAILLA
      CHARACTER*14 NUMDDL
      CHARACTER*24 DEEQ,MATRIC
      CHARACTER*24 SDMUAP     
      INTEGER      NBMD,NEQ,NA,ND,NBEXCI,NF,NV
      INTEGER      IBID,IER,IRET,I
      INTEGER      IADRIF,IDDEEQ
      INTEGER      JNODEP,JNOVIT,JNOACC,JMLTAP,JPSDEL
      CHARACTER*24 DEPENM,VITENM,ACCENM
      CHARACTER*24 NOSD ,MUAP     
      INTEGER      JNOSD,JMUAP              
C
      DATA DEPENM     /'&&OP0070.DEPENM'/      
      DATA VITENM     /'&&OP0070.VITENM'/      
      DATA ACCENM     /'&&OP0070.ACCENM'/        
C
C ---------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- ACCES AUX OBJETS DE LA SD SDDYNA
C
      NOSD = SDDYNA(1:15)//'.NOM_SD'
      MUAP = SDDYNA(1:15)//'.MULT_APP'      
      CALL JEVEUO(NOSD,'E',JNOSD) 
      CALL JEVEUO(MUAP,'E',JMUAP) 
C
C --- INITIALISATIONS
C
      SDMUAP = RESULT//'.MULT_APPUI' 
      ZK24(JNOSD+1-1) = SDMUAP  
      ZK24(JMUAP+4-1) = DEPENM
      ZK24(JMUAP+5-1) = VITENM
      ZK24(JMUAP+6-1) = ACCENM                
C
C --- LECTURE DONNEES
C      
      CALL GETVID(' ','MODE_STAT',1,1,1,MODSTA,NBMD)
      CALL JEVEUO(MODSTA//'           .REFD','L',IADRIF)
      MATRIC =  ZK24(IADRIF)(1:8)
      CALL DISMOI('F','NOM_MAILLA'  ,MATRIC,'MATR_ASSE',IBID,MAILLA,IER)
      CALL DISMOI('F','NOM_NUME_DDL',MATRIC,'MATR_ASSE',IBID,NUMDDL,
     &             IRET)
      DEEQ = NUMDDL//'.NUME.DEEQ'
      CALL JEVEUO(DEEQ,'L',IDDEEQ)
      CALL DISMOI('F','NB_EQUA',MATRIC,'MATR_ASSE',NEQ,K8BID,IRET)
C
      CALL GETFAC('EXCIT',NBEXCI)
      CALL WKVECT(SDMUAP(1:19)//'.FDEP','V V K8',NBEXCI,JNODEP)
      CALL WKVECT(SDMUAP(1:19)//'.FVIT','V V K8',NBEXCI,JNOVIT)
      CALL WKVECT(SDMUAP(1:19)//'.FACC','V V K8',NBEXCI,JNOACC)
      CALL WKVECT(SDMUAP(1:19)//'.MULA','V V I' ,NBEXCI,JMLTAP)
      CALL WKVECT(SDMUAP(1:19)//'.PSID','V V R8',NBEXCI*NEQ,JPSDEL)
      DO 10 I=1,NBEXCI
        CALL GETVTX('EXCIT','MULT_APPUI',I,1,1,K8BID,ND)
        IF (K8BID(1:3).EQ.'OUI') THEN
         ZI(JMLTAP+I-1) = 1
         CALL GETVID('EXCIT','ACCE',I,1,1,K8BID,NA)
         CALL GETVID('EXCIT','FONC_MULT',I,1,1,K8BID,NF)
         IF (NA.NE.0) 
     &    CALL GETVID('EXCIT','ACCE',I,1,1,ZK8(JNOACC+I-1),NA)
         IF (NF.NE.0) 
     &    CALL GETVID('EXCIT','FONC_MULT',I,1,1,ZK8(JNOACC+I-1),NF)
         CALL GETVID('EXCIT','VITE',I,1,1,ZK8(JNOVIT+I-1),NV)
         CALL GETVID('EXCIT','DEPL',I,1,1,ZK8(JNODEP+I-1),ND)
         CALL TRMULT(MODSTA,I,MAILLA,NEQ,IDDEEQ,ZR(JPSDEL+(I-1)*NEQ))
C
C     --- MISE A ZERO DES DDL DE LAGRANGE
         CALL ZERLAG(ZR(JPSDEL+(I-1)*NEQ),NEQ,ZI(IDDEEQ))
        ENDIF
 10   CONTINUE
C
      CALL JEDEMA()
      END
