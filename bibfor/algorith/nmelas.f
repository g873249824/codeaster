      SUBROUTINE NMELAS (FAMI,KPG,KSP,NDIM,TYPMOD,IMATE,
     &                   DEPS,SIGM,OPTION,SIGP,VIP,DSIDEP,IRET)
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 10/09/2012   AUTEUR PROIX J-M.PROIX 
C RESPONSABLE PROIX J-M.PROIX
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ----------------------------------------------------------------------
C     REALISE LA LOI DE VON MISES ISOTROPE ET ELASTIQUE POUR LES
C     ELEMENTS ISOPARAMETRIQUES EN PETITES DEFORMATIONS
C
C IN  KPG,KSP  : NUMERO DU (SOUS)POINT DE GAUSS
C IN  NDIM    : DIMENSION DE L'ESPACE
C IN  TYPMOD  : TYPE DE MODELISATION
C IN  IMATE   : ADRESSE DU MATERIAU CODE
C IN  COMPOR  : COMPORTEMENT : RELCOM ET DEFORM
C IN  CRIT    : CRITERES DE CONVERGENCE LOCAUX
C IN  DEPS    : INCREMENT DE DEFORMATION
C               SI C_PLAN DEPS(3) EST EN FAIT INCONNU (ICI:0)
C                 =>  ATTENTION LA PLACE DE DEPS(3) EST ALORS UTILISEE.
C IN  SIGM    : CONTRAINTES A L'INSTANT DU CALCUL PRECEDENT
C IN  OPTION  : OPTION DEMANDEE : RIGI_MECA_TANG , FULL_MECA , RAPH_MECA
C OUT SIGP    : CONTRAINTES A L'INSTANT ACTUEL
C OUT VIP     : VARIABLES INTERNES A L'INSTANT ACTUEL
C OUT DSIDEP  : MATRICE CARREE (INUTILISE POUR RAPH_MECA)
C
C               ATTENTION LES TENSEURS ET MATRICES SONT RANGES DANS
C               L'ORDRE :  XX,YY,ZZ,SQRT(2)*XY,SQRT(2)*XZ,SQRT(2)*YZ
C OUT IRET    : CODE RETOUR DE L'INTEGRATION DE LA LOI DE VOM MISES
C               = 1  => PAS DE PROBLEME
C               = 0  => ECHEC DANS L'INTEGRATION DE LA LOI
C
C
      IMPLICIT NONE
      LOGICAL CPLAN,INCO
      INTEGER NDIM,IMATE,KPG,KSP,IRET,NDIMSI
      INTEGER K,L,IRET2, IRET3, IRET4, IRET0,IRET5,ICODRE(3)
      REAL*8  SIGM(6),SIGP(6),VIP(1),DSIDEP(6,6)
      REAL*8  DEPS(6),DEUXMU,DEPSTH(6),VALRES(3),EPSTHE,CO,DEPSMO
      REAL*8  SIGMMO,E,NU,TROISK,COEF,HYDRM,HYDRP
      REAL*8  KRON(6),DEPSDV(6),EM,NUM,TROIKM,DEUMUM,SIGMP(6)
      REAL*8  SECHM,SECHP,SREF,TP,DEFAM(6),DEFAP(6)
      REAL*8  BENDOM,BENDOP,KDESSM,KDESSP,RAC2,TM
      CHARACTER*(*) FAMI
      CHARACTER*6 EPSA(6)
      CHARACTER*8 NOMRES(3),TYPMOD(*)
      CHARACTER*16 OPTION
C-----------------------------------------------------------------------
      DATA KRON/1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
      DATA EPSA/'EPSAXX','EPSAYY','EPSAZZ','EPSAXY','EPSAXZ','EPSAYZ'/
C DEB ------------------------------------------------------------------
C
C     -- 1 INITIALISATIONS :
C     ----------------------
      
      IRET=0
C
      CPLAN =  TYPMOD(1) .EQ. 'C_PLAN'
      INCO  =  TYPMOD(2) .EQ. 'INCO'

      IF (INCO) THEN
        CO = 0.D0
      ELSE
        CO = 1.D0
      ENDIF
      NDIMSI = 2*NDIM

      RAC2 = SQRT(2.D0)
C
C
C     -- 2 RECUPERATION DES CARACTERISTIQUES
C     ---------------------------------------
      NOMRES(1)='E'
      NOMRES(2)='NU'

      CALL RCVARC(' ','TEMP','-',FAMI,KPG,KSP,TM,IRET3)
      IF (IRET3.NE.0) TM=0.D0
      CALL RCVARC(' ','TEMP','+',FAMI,KPG,KSP,TP,IRET4)
      IF (IRET4.NE.0) TP=0.D0
      CALL RCVARC(' ','HYDR','-',FAMI,KPG,KSP,HYDRM,IRET2)
      IF (IRET2.NE.0) HYDRM=0.D0
      CALL RCVARC(' ','HYDR','+',FAMI,KPG,KSP,HYDRP,IRET2)
      IF (IRET2.NE.0) HYDRP=0.D0
      CALL RCVARC(' ','SECH','-',FAMI,KPG,KSP,SECHM,IRET2)
      IF (IRET2.NE.0) SECHM=0.D0
      CALL RCVARC(' ','SECH','+',FAMI,KPG,KSP,SECHP,IRET2)
      IF (IRET2.NE.0) SECHP=0.D0
      CALL RCVARC(' ','SECH','REF',FAMI,KPG,KSP,SREF,IRET2)
      IF (IRET2.NE.0) SREF=0.D0
C
      DO 19 K=1,6
         DEFAM(K) = 0.D0
         DEFAP(K) = 0.D0
 19   CONTINUE

      DO 20 K=1,NDIMSI
        CALL RCVARC(' ',EPSA(K),'-',FAMI,KPG,KSP,DEFAM(K),IRET5)
        IF (IRET5.NE.0) DEFAM(K)=0.D0

        CALL RCVARC(' ',EPSA(K),'+',FAMI,KPG,KSP,DEFAP(K),IRET5)
        IF (IRET5.NE.0) DEFAP(K)=0.D0
 20   CONTINUE
C
C MISE AU FORMAT DES TERMES NON DIAGONAUX
C
      DO 105 K=4,NDIMSI
         DEFAM(K) = DEFAM(K)*RAC2
         DEFAP(K) = DEFAP(K)*RAC2
 105  CONTINUE

      CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS',0,' ',0.D0,
     &              2,NOMRES(1),VALRES(1),ICODRE(1), 2)
      EM  = VALRES(1)
      NUM = VALRES(2)
      DEUMUM = EM/(1.D0+NUM)

      IF (INCO) THEN
        TROIKM = DEUMUM
      ELSE
        TROIKM = EM/(1.D0-2.D0*NUM)
      ENDIF

      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS',0,' ',0.D0,
     &              2,NOMRES(1),VALRES(1),ICODRE(1), 2)
      E      = VALRES(1)
      NU     = VALRES(2)

      IF (INCO) THEN
        DEUXMU = 2.D0*E/3.D0
        TROISK = DEUXMU
      ELSE
        DEUXMU = E/(1.D0+NU)
        TROISK = E/(1.D0-2.D0*NU)
      ENDIF

      CALL VERIFT(FAMI,KPG,KSP,'T',IMATE,'ELAS',1,EPSTHE,IRET0)
C
C --- RETRAIT ENDOGENE ET RETRAIT DE DESSICCATION
C
      NOMRES(1)='B_ENDOGE'
      NOMRES(2)='K_DESSIC'
      CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS',0,' ',0.D0,1,
     &            NOMRES(1),VALRES(1),ICODRE(1), 0)
      IF ( ICODRE(1) .NE.0    ) VALRES(1) = 0.D0
      BENDOM = VALRES(1)
C
      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS',0,' ',0.D0,1,
     &            NOMRES(1),VALRES(1),ICODRE(1), 0)
      IF ( ICODRE(1) .NE.0    ) VALRES(1) = 0.D0
      BENDOP = VALRES(1)
C
      CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS',0,' ',0.D0,1,
     &            NOMRES(2),VALRES(2),ICODRE(2), 0)
      IF ( ICODRE(2) .NE.0    ) VALRES(2) = 0.D0
      KDESSM = VALRES(2)
C
      CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS',0,' ',0.D0,1,
     &            NOMRES(2),VALRES(2),ICODRE(2), 0)
      IF ( ICODRE(2) .NE.0    ) VALRES(2) = 0.D0
      KDESSP = VALRES(2)
      
C
C     -- 4 CALCUL DE DEPSMO ET DEPSDV :
C     --------------------------------
      COEF = EPSTHE
     &     - BENDOP*HYDRP        + BENDOM*HYDRM
     &     - KDESSP*(SREF-SECHP) + KDESSM*(SREF-SECHM)
      IF (CPLAN) DEPS(3)=-NU/(1.D0-NU)*(DEPS(1)+DEPS(2))
     &                +(1.D0+NU)/(1.D0-NU)*COEF
     & + NU*(DEFAP(1)-DEFAM(1)+DEFAP(2)-DEFAM(2))/(1.D0-NU)
     & + DEFAP(3)-DEFAM(3)
      DEPSMO = 0.D0
      DO 110 K=1,3
        DEPSTH(K)   = DEPS(K) -COEF
     &                -(DEFAP(K)-DEFAM(K))
        DEPSTH(K+3) = DEPS(K+3)-(DEFAP(K+3)-DEFAM(K+3))
        DEPSMO = DEPSMO + DEPSTH(K)
 110  CONTINUE
      DEPSMO = DEPSMO/3.D0
      DO 115 K=1,NDIMSI
        DEPSDV(K)   = DEPSTH(K) - DEPSMO * KRON(K)*CO
 115  CONTINUE
C
C     -- 5 CALCUL DE SIGMP :
C     ----------------------
      SIGMMO = 0.D0
      DO 113 K =1,3
        SIGMMO = SIGMMO + SIGM(K)
 113  CONTINUE
      SIGMMO = SIGMMO /3.D0
      DO 114 K=1,NDIMSI
        SIGMP(K)=DEUXMU/DEUMUM*(SIGM(K)-SIGMMO*KRON(K)) +
     &           TROISK/TROIKM*SIGMMO*KRON(K)
114   CONTINUE
C
C     -- 6 CALCUL DE SIGMMO, SIGMDV, SIGEL, SIELEQ ET SEUIL :
C     -------------------------------------------------------
      SIGMMO = 0.D0
      DO 116 K =1,3
        SIGMMO = SIGMMO + SIGMP(K)
 116  CONTINUE
      SIGMMO = SIGMMO /3.D0
C
C     -- 7 CALCUL DE SIGP,SIGPDV,VIP,DP,RP:
C     -------------------------------------
      IF ( OPTION(1:9) .EQ. 'RAPH_MECA' .OR.
     &     OPTION(1:9) .EQ. 'FULL_MECA'     ) THEN
C

          DO 145 K = 1,NDIMSI
            SIGP(K) = SIGMP(K)+DEUXMU*DEPSDV(K)+CO*TROISK*DEPSMO*KRON(K)
 145      CONTINUE
 
          VIP(1) = 0.D0
C
      ENDIF
C
C     -- 8 CALCUL DE DSIDEP(6,6) :
C     ----------------------------
      IF ( OPTION(1:10) .EQ. 'RIGI_MECA_'.OR.
     &     OPTION(1:9)  .EQ. 'FULL_MECA'         ) THEN
C
        DO 100, K=1,NDIMSI
          DO 101, L=1,NDIMSI
            DSIDEP(K,L) =  0.D0
 101      CONTINUE
 100    CONTINUE
C
        DO 130 K=1,3
          DO 131 L=1,3
            DSIDEP(K,L) = DSIDEP(K,L)+CO*(TROISK/3.D0-DEUXMU/3.D0)
 131      CONTINUE
 130    CONTINUE
        DO 120 K=1,NDIMSI
          DSIDEP(K,K) = DSIDEP(K,K) + DEUXMU
 120    CONTINUE
C
C       -- 8.3 CORRECTION POUR LES CONTRAINTES PLANES :
        IF (CPLAN) THEN
          DO 136 K=1,NDIMSI
            IF (K.EQ.3) GO TO 136
            DO 137 L=1,NDIMSI
              IF (L.EQ.3) GO TO 137
              DSIDEP(K,L)=DSIDEP(K,L)
     &          - 1.D0/DSIDEP(3,3)*DSIDEP(K,3)*DSIDEP(3,L)
 137        CONTINUE
 136      CONTINUE
        ENDIF
        
      ENDIF

      END
