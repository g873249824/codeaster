        SUBROUTINE NMPGAT(OPTION,IMATE,TM,DT, TREF,DEPS,PHI0,
     &                       NDIM,DIMDEF,DIMCON,NVIMEC,NVITH,        
     &                       ADDEME,ADCOME,ADDETE,CONGEM,CONGEP,
     &                       VINTM,VINTP,ADVIME,DSDE)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 06/04/2004   AUTEUR DURAND C.DURAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C TOLE CRP_20
C TOLE CRP_21
       IMPLICIT NONE
       INTEGER NDIM,DIMDEF,DIMCON,NVIMEC,NVITH
       INTEGER ADDEME,ADDETE
       INTEGER ADCOME,ADVIME,IMATE
       INTEGER YAMEC,YATE
       CHARACTER*16 OPTION
       REAL*8       DEPS(6),RFRT,KRON(6),SIGMDV(6)
       REAL*8       DEPSDV(6)
       REAL*8       DFFD(6,6),RFRS(6),ZMRFRT(6),DRFRS(6)
       REAL*8       RFRSD(6),FTDF(6), DMFFDD(6)
       REAL*8       C(6),CM(6)
       REAL*8       CONGEM(1:DIMCON),CONGEP(1:DIMCON)
       REAL*8       VINTM(1:NVIMEC+NVITH),VINTP(1:NVIMEC+NVITH)
       REAL*8       DSDE(1:DIMCON,1:DIMDEF)

C.......................................................................
C SET BUT NEVER USED
C      ALF2              COMPS             DEPSVE               DF(6) 
C     DFFDD(6)           DRFRT(6)          DTERM (6)            FDMF 
C      GAMA                IST               RAC2             RDBTDE
C    RDBTDP             RDEEDP             RDKBDP               RHOS
C      TALS
      INTEGER I,J,K,I1,J1,I2,J2,I3,II,JJ,KK,LL,I4,J4
      REAL*8  DT,TM,TF,TREF
      REAL*8  DSIDT(6,6),DSIDEP(6,6)
      REAL*8  RKB,RKBM,RDKBDT,NU,REEM,RLAM,R2GM
      REAL*8  REE,RDEEDT,RLA,R2G,RDLADT,RD2GDT
      REAL*8  RBBP,RBBM,RDBBDT,RDBBDP,RDBBDE
      REAL*8  RBTP,RBTM,RDBTDT
      REAL*8  SIELEQ,PSC,THEPS,DEPSMO
      REAL*8  RKAPAT,RC1,RV1,SIGMMO,SIGPMO,PSCF,RDKPDT
      REAL*8  EVS,EPV,ALFD
      REAL*8  PHI0,COH,TLAMB,TKAPA,CAM,PC0,RA0,RA1,RA2
      REAL*8  ALF0,ALF1,ALF3,RKBINI,FONC
      REAL*8  FDF,RYF,ALAMT1,ALAMT2,AB,ETA,PY,PC,DEMIPC
      REAL*8  TEMP,TEMP1,TEMP2,TEMP3,TEMP4
      REAL*8  DEPSVP,DGAMAP,AMRFRS,RHP,H
      REAL*8  RDPSDT,RPCEPV,DEPSTH(6),SIGEL(6)
      REAL*8  RDH1DT,RDH2DT,RDH3DT,RDHPDT,RDHDT
      REAL*8  RV2,DRV2DT,RFRTDT, RDADT,RDA1DT,RDA2DT,RDA3DT
      REAL*8  RDSADT(6,6),RDPLDT(6,6),SIRFRT(6),ERFSDT(6)
      REAL*8  RDC1DT(6),RDSBDT(6),RDC2DT(6),RDCPDT(6),DFRSDT(6) 
C
      INTEGER      NNELA,NNPLA,NBPAR,NRESMA 
      PARAMETER    (NNELA=7)
      PARAMETER    (NNPLA=14)
      PARAMETER (NRESMA = 18)
      REAL*8       VALRES(NNPLA),VALPAR 
      CHARACTER*8  BGCR8(NNPLA),BGCR1(NNELA),NOMPAR
      CHARACTER*2 CODRET(NRESMA) 
C  
C      DATA BGCR1 
C     > /'RHO_S','UN_SUR_KS','E','KB','D_KB_T','ALPHA_S','ALPHA_D'/
       DATA BGCR8 /'NU','LAMBDA','KAPA','M','PRES_CRIT',
     &             'GAMA','A0_PC','A1_PC','A2_PC','ALPHA0_PC',
     &             'ALPHA1_PC','ALPHA2_PC','ALPHA3_PC','ALPHA_S'/

      DATA    KRON/1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
      DATA RKBINI /250.D5/
C
C     INITIALISATIONS :
C     ----------------------
C USED BUT NEVER SET 
      YATE = 1
C
      DO 101 I=1,6
      DO 101 J=1,6
      DFFD(I,J)=0.D0
      DSIDEP(I,J)=0.D0
      RDPLDT(I,J)=0.D0
 101  CONTINUE
      DO 102 I=1,6
      RFRS(I)=0.D0
C      DF(I)=0.D0
      ZMRFRT(I)=0.D0
      DRFRS(I)=0.D0
      RFRSD(I)=0.D0
      FTDF(I)=0.D0
C      DTERM(I)=0.D0
C      DFFDD(I)=0.D0
      DMFFDD(I)=0.D0
      C(I)=0.D0
      CM(I)=0.D0
C      DRFRT(I)=0.D0
 102  CONTINUE
      AMRFRS=0.D0
      ALAMT2=0.D0
C
C
      NBPAR  = 0
      VALPAR = 0.D0
      NOMPAR = ' ' 
C      CALL RCVALA ( IMATE,'ELAS_THM',NBPAR,NOMPAR,VALPAR,
C     &                      2,BGCR1,VALRES,CODRET, 'FM' )
C       RHOS   = VALRES(1)
C       COMPS  = VALRES(2)
      CALL RCVALA ( IMATE,'CAM_CLAY_THM',NBPAR,NOMPAR,VALPAR,
     &              NNPLA,BGCR8,VALRES,CODRET, 'FM' )
      
       NU     = VALRES(1)
       TLAMB  = VALRES(2)
       TKAPA  = VALRES(3)
       CAM    = VALRES(4)
       PC0    = VALRES(5)
C       GAMA   = VALRES(6)
       RA0    = VALRES(7)
       RA1    = VALRES(8)
       RA2    = VALRES(9)
       ALF0   = VALRES(10)
       ALF1   = VALRES(11)
C       ALF2   = VALRES(12)
       ALF3   = VALRES(13)
C
C     --  CALCUL DE SIGMMO ET ESVM :
C     -------------------------------
      EVS=PHI0/(1.D0-PHI0)
      RKAPAT=TKAPA+(ALF1+ALF3*DT)*DT*(1.D0+EVS)
      SIGMMO = 0.D0
      DO 103 K =1,3
        SIGMMO = SIGMMO + CONGEM(ADCOME+K-1)
 103  CONTINUE
      SIGMMO = SIGMMO /3.D0
C
C
            SIGPMO = 0.D0
            DO 306 K =1,3
              SIGPMO = SIGPMO + CONGEP(ADCOME+K-1)
 306        CONTINUE
            SIGPMO = SIGPMO /3.D0
C 
C CALCUL DES MODULES  
C       
       RDKPDT=(1.D0+EVS)*(ALF1+2.D0*ALF3*DT)
       RC1=(RA1+RA2*DT)*DT
       RV1=(1.D0+EVS)/(TLAMB-RKAPAT)
       IF(SIGPMO.EQ.0.0D0)THEN
       RKBM=RKBINI 
       ELSE
       RKBM=(1.D0+EVS)/RKAPAT*ABS(SIGPMO)
       ENDIF
C       RDKBDP=0.D0
       RDKBDT=RDKPDT*ABS(SIGPMO)*(1.D0+EVS)/(RKBM*RKBM)
C       REE    = 3.D0*RKB*(1.D0-2.D0*NU)
       REEM   = 3.D0*RKBM*(1.D0-2.D0*NU)
C       RDEEDP = 0.D0
       RDEEDT = 3.D0*(1.D0-2.D0*NU)*RDKBDT
C       RLA=3.D0*RKB*(3.D0*RKB-REE)/(9.D0*RKB-REE)
C       R2G=6.D0*RKB*REE/(9.D0*RKB-REE)
       RLAM=3.D0*RKBM*(3.D0*RKBM-REEM)/(9.D0*RKBM-REEM)
       R2GM=6.D0*RKBM*REEM/(9.D0*RKBM-REEM)
C
         RDLADT=RDEEDT/(1.D0+NU)*NU/(1.D0-2.D0*NU)
         RD2GDT=RDEEDT/(1.D0+NU)
C
C     CE:
C
C
      
      ALFD=ALF0
      RBTM=3.D0*RKBM*ALFD
C      RDBTDP=0.D0
      RDBTDT=3.D0*RDKBDT*ALFD
C      RDBTDE=0.D0

      DO 104 I=1,6
C      C(I)=RBTP*KRON(I)
      CM(I)=RBTM*KRON(I)
 104  CONTINUE
C
C
C
C      CALCUL DE DEPSMO ET DEPSDV :
C     --------------------------------
      TF=TM+DT
      THEPS = RBTM*(TF-TREF)
      DEPSMO = 0.D0
      DO 105 K=1,3
        DEPSTH(K)   = DEPS(K) -THEPS
        DEPSTH(K+3) = DEPS(K+3)
        DEPSMO = DEPSMO + DEPSTH(K)
 105  CONTINUE
      DEPSMO = DEPSMO/3.D0
      DO 106 K=1,6
        DEPSDV(K)   = DEPSTH(K) - DEPSMO * KRON(K)
 106  CONTINUE
C
C      CALCUL DE SIGMMO, SIGMDV, SIGEL, SIELEQ ET SEUIL :
C     -------------------------------------------------------
      SIGPMO = 0.D0
      DO 107 K =1,3
        SIGPMO = SIGPMO + CONGEP(ADCOME+K-1)
 107  CONTINUE
      SIGPMO = SIGPMO /3.D0
      SIELEQ = 0.D0
      DO 108 K = 1,6
        SIGMDV(K) = CONGEP(ADCOME+K-1)- SIGPMO * KRON(K)
        SIGEL(K)  = SIGMDV(K) + R2GM* DEPSDV(K)
        SIELEQ     = SIELEQ + SIGEL(K)**2
 108  CONTINUE
      SIELEQ     = SQRT(1.5D0*SIELEQ)
      PSC        =SIGPMO+SIELEQ*SIELEQ/(CAM*CAM*SIGPMO)
      FONC       =SIELEQ*SIELEQ/(CAM*CAM)-(PC0-SIGPMO)*SIGPMO
      IF(FONC.LE.0.0D0)THEN
             VINTM(ADVIME+1)=PC0+2.D0*RC1
      ELSE
C         IF(SIGPMO.EQ.SIGMMO)THEN
C             VINTM(ADVIME+1)=PSC
C         ENDIF   
      ENDIF 
C 
C     MATRICE DE RIGIDITE ELASTIQUE
C 
         DO 200 I1=1,6
         DO 100 J1=1,6
          DSIDEP(I1,J1)=0.D0
 100     CONTINUE
 200    CONTINUE
        DO 400 I1=1,3
         DO 300 J1=1,3
          DSIDEP(I1,J1)=RLAM
 300     CONTINUE
 400    CONTINUE
         DO 500 I1=1,6
         DSIDEP(I1,I1)=DSIDEP(I1,I1)+R2GM
 500     CONTINUE
C
       DO 700 I2=1,6
          DO 600 J2=1,6
           DSIDT(I2,J2)=0.D0
 600      CONTINUE
 700     CONTINUE
C
         DO 900 I1=1,3
         DO 800 J1=1,3
          DSIDT(I1,J1)=RDLADT
          IF(I1.EQ.J1) DSIDT(I1,J1)=DSIDT(I1,J1)-RBTM-RDBTDT*DT
 800     CONTINUE
 900    CONTINUE
         DO 950 I1=1,6
         DSIDT(I1,I1)=DSIDT(I1,I1)+RD2GDT
 950     CONTINUE
           VINTP(ADVIME+1)=PSC
C
C--------------------------------------------------------------------
CC
C    THIS PART DETERMINES THE CURRENT STRESS STATE AT THE
C    END OF THE CURRENT INCREMENT AND USES IST TO INDICATE THE
C    STRESS STATE OF THE INTEGRATION POINT WITH REFRENCE
C    TO THE CURRENT YIELD LOCUS
C
C    TYPE      CODE FOR STRESS STATES                            IST
C     0  SOIL IS ELASTIC WITH PY<PC & SIGMMO>DEMIPC & Q<M*PE      -0
C     1  SOIL IS ELASTIC WITH PY<PC &  SIGMMO<DEMIPC & Q<M*PE     -1
C     2  SOIL IS ELASTIC WITH PY<PC &  SIGMMO<DEMIPC & Q>M*PE     -2
C     3  SOIL IS HARDENING WITH PY>PC &  SIGMMO>DEMIPC & Q<M*PE   -3
C     4  SOIL IS SOFTENING WITH PY<PC &  SIGMMO>DEMIPC & Q>M*PE   -4
C--------------------------------------------------------------------
C     NUMERICAL FEAUTURE AND REALY NOT ALLOWED
C     5   SOIL IS HARDENING WITH PY>PC & SIGMMO>DEMIPC & Q>M*PE   -5
C     6   SOIL IS HARDENING WITH PY>PC & SIGMMO<DEMIPC & Q>M*PE   -6
C--------------------------------------------------------------------
C     SIGMMO    IS EFFECTIV MEAN NORMAL STRESS
C              
C     DEMIPC    IS HALF OF CRITICAL STATE VALUE OF
C               PC FOR CURRENT YIELD LOCUS
C
C
C
C     FIND NEW YIELD LOCUS
C
      PC=ABS(VINTM(ADVIME+1))
      DEMIPC=PC/2.D0
      PY=VINTP(ADVIME+1)
       IF(PY.GT.PC) GO TO 13
C
C     MATERIAL IS EATHER ELASTIC OR HAS SOFTENED
C
      IF(SIGPMO.GT.DEMIPC) GO TO 14
C
C     MATERIAL IS REGION 1 OR 2 OR 4
C
      IF(SIELEQ.GT.0.99D0*CAM*SIGPMO) GO TO 15
C
C     MATERIAL IS REGION 2 AND ELASTIC
C
C      IST=1
      VINTP(ADVIME+5)=0.D0
      GO TO 17
   15 CONTINUE
C
C     MATERIAL IS IN REGION 2 OR 4
C
      IF(VINTM(ADVIME+1).LT.0.0D0) GO TO 16
C
C     MATERIAL IS IN ELASTIC AND IN REGION 2
C
 155  CONTINUE
C   IST=2
      VINTP(ADVIME+5)=0.D0
      GO TO 17
   16 CONTINUE
C
      IF(VINTP(ADVIME+3).LT.VINTM(ADVIME+3)) GO TO 155
C
C     MATERIAL HAS SOFTENED IN REGION 4
C
C      IST=4
      IF(PC.EQ.0.0D0)THEN
      DEMIPC=DEMIPC
      ELSE
      DEMIPC=DEMIPC*PY/PC
      ENDIF
      PC=PY
      VINTP(ADVIME+5)=1.D0
      GO TO 17
  14  CONTINUE
C
C     MATERIAL IS IN REGION 0 AND ELASTIC
C
C      IST=0
      GO TO 17
   13 CONTINUE
C
C     MATERIAL HAS HARDENED
C
      IF(SIGPMO.GT.DEMIPC)GO TO 18
C
C     MATERIAL IS IN REGION 8 AND IS INVALID
C
      IF(PC.EQ.0.0D0)THEN
      DEMIPC=DEMIPC
      ELSE
      DEMIPC=DEMIPC*PY/PC
      ENDIF
      PC=PY
C      IST=6
      VINTP(ADVIME+5)=0.D0
      GO TO 17
   18 CONTINUE
C
C     MATERIAL IS IN REGION 3 OR 7
C
      IF(SIELEQ.GT.1.001D0*CAM*SIGPMO) GO TO 19
C
C     MATERIAL IS IN REGION 3
C
      IF(PC.EQ.0.0D0)THEN
      DEMIPC=DEMIPC
      ELSE
      DEMIPC=DEMIPC*PY/PC
      ENDIF
      PC=PY
C      IST=3
      VINTP(ADVIME+5)=1.D0
      GO TO 17
C
C     MATERIAL IS IN REGION 7
C
   19 CONTINUE
C      IST=5
      PC=PY
      VINTP(ADVIME+5)=0.D0
   17 CONTINUE
C            
      VINTP(ADVIME+1)=PC
C
C     CONTROLE DE  PLASTICITE
C
      IF(VINTP(ADVIME+5).EQ.1.D0)THEN
C
      EPV=VINTM(ADVIME+2)
C
      DO 109 I=1,6
      RFRS(I)=((2.D0-9.D0/(CAM*CAM))*SIGPMO-PSC)
     &        *KRON(I)/3.D0+3.D0/(CAM*CAM)*CONGEP(ADCOME+I-1)
109   CONTINUE
C
      RPCEPV=RV1*(1.D0-RA0*DT)*(PSC-2.D0*RC1)
C
C     CALCULATION OF THE FIRST TERM OF H
C
      DO 110 I=1,6
      TEMP=0.D0
      DO 111 J=1,6
      TEMP=TEMP+DSIDEP(I,J)*RFRS(J)
111   CONTINUE
      DRFRS(I)=TEMP
110   CONTINUE
C
      TEMP=0.D0
      DO 112 I=1,6
      TEMP=TEMP+RFRS(I)*DRFRS(I)
112   CONTINUE
      FDF=TEMP
C
C     CALCULATION OF THE SECOND TERM OF H
C
      AMRFRS=2.D0*SIGPMO-PSC
      RHP=SIGPMO*RPCEPV*AMRFRS
C
      H=FDF+RHP
C
C      
      RDPSDT=2.D0*(RA1+2.D0*RA2*DT)-(RV1*RA0+
     &       (1.D0+EVS)*(1.D0+EVS)*(ALF1+2.D0*ALF3*DT)*(1.D0-RA0*DT)
     &       /((TLAMB-RKAPAT)*(TLAMB-RKAPAT)))
     &       *EPV*(PSC-2.D0*RC1)
      RFRT=-SIGPMO*RDPSDT
C
      DO 114 I=1,6
      ZMRFRT(I)=RFRT*KRON(I)
      DFRSDT(I)=-RDPSDT*KRON(I)/3.D0
114   CONTINUE
C
      TEMP=0.D0
      DO 115 I=1,6
      TEMP=TEMP+DRFRS(I)*ZMRFRT(I)
115   CONTINUE
C      FDMF=TEMP
C
C     CALCULATION OF THE FIRST TERM OF THE PLASTIC MATRIX
C
      DO 118 I=1,6
      TEMP=0.D0
      DO 119 J=1,6
       TEMP=TEMP+RFRS(J)*DSIDEP(J,I)
119   CONTINUE
      RFRSD(I)=TEMP/H
118   CONTINUE

      DO 121 I=1,6
      DO 121 J=1,6
       DFFD(I,J)=DRFRS(I)*RFRSD(J)
121   CONTINUE
C
C     CALCULATION OF THE SECOND TERM OF THE PLASTIC MATRIX
C
C     CTE:
      DO 128 I=1,6
      TEMP=0.D0
      DO 127 J=1,6
       TEMP=TEMP+DSIDEP(I,J)*RFRS(J)
127   CONTINUE
       FTDF(I)=TEMP*RFRT/H*KRON(I)
128   CONTINUE
C

C     CEE:
      DO 126 I=1,6
      TEMP=0.D0
      TEMP1=0.D0
      DO 125 J=1,6
       TEMP=TEMP+DSIDEP(I,J)*RFRS(J)
       TEMP1=TEMP1+RFRS(J)*C(J)
 125  CONTINUE
       DMFFDD(I)=TEMP*TEMP1/H
 126  CONTINUE
C
C CALCUL DES TERMS DE DSIT,DSIP POUR LA PARTIE PLASTIQUE
C
      TEMP=0.D0
      DO 201 I=1,6
      TEMP=TEMP+DFRSDT(I)*DRFRS(I)
 201  CONTINUE
      RDH1DT=TEMP
C
      DO 202 I=1,6
      TEMP=0.D0
      DO 203 J=1,6
       TEMP=TEMP+DSIDT(I,J)*RFRS(J)
203   CONTINUE
       SIRFRT(I)=TEMP
202   CONTINUE
C
C
C
      TEMP=0.D0
      DO 204 I=1,6
      TEMP=TEMP+RFRS(I)*SIRFRT(I)
 204  CONTINUE
      RDH2DT=TEMP
C
      DO 206 I=1,6
      TEMP=0.D0
      DO 207 J=1,6
       TEMP=TEMP+DSIDEP(I,J)*DFRSDT(J)
207   CONTINUE
       ERFSDT(I)=TEMP
206   CONTINUE
C
      TEMP=0.D0
      DO 208 I=1,6
      TEMP=TEMP+RFRS(I)*ERFSDT(I)
208   CONTINUE
      RDH3DT=TEMP
C
      RDHPDT=RDPSDT*RHP*(-1.D0/AMRFRS
     &        +1.D0/(PSC-2.D0*RC1))+(1.D0-RA0*DT)*(-
     &       2.D0*(RA1+2.D0*RA2*DT)*AMRFRS*SIGPMO*RV1+
     &       AMRFRS*SIGPMO*(PSC-2.D0*RC1)*RDKPDT*RV1/
     &       (TLAMB-RKAPAT))-RA0*RHP/(1.D0-RA0*DT)
C
      RDHDT=RDH1DT+RDH2DT+RDH3DT+RDHPDT
C

      DO 209 I=1,6
      DO 209 J=1,6
      TEMP1=SIRFRT(I)*RFRSD(J)
      TEMP2=ERFSDT(I)*RFRSD(J)
      TEMP3=DRFRS(I)*ERFSDT(J)
      TEMP4=DRFRS(I)*SIRFRT(J)
      RDSADT(I,J)=TEMP1+TEMP2+TEMP3+TEMP4
209   CONTINUE
C
      DO 211 I=1,6
      DO 211 J=1,6
      RDPLDT(I,J)=RDSADT(I,J)/H-RDHDT*DFFD(I,J)/H
211   CONTINUE
C
C     CALCUL DE RDC1DT
C
      RV2=(1.D0+EVS)*RDKPDT*(1.D0-RA0*DT)/(TLAMB-RKAPAT)
     &    /(TLAMB-RKAPAT)
      DRV2DT=(-RDKPDT*RV1*RA0)/(TLAMB-RKAPAT)+
     &       2.D0*ALF3*(1.D0-RA0*DT)*(RV1**2.D0)+
     &       2.D0*(1.D0-RA0*DT)*RDKPDT**2.D0*RV1
     &       /(TLAMB-RKAPAT)/(TLAMB-RKAPAT) 

      RFRTDT=SIGMMO*((RA0*RV1+RV2)*EPV*RDPSDT+RA0*EPV*
     &         (PSC-2.D0*RC1)*RDKPDT*RV1/(TLAMB-RKAPAT)+
     &          DRV2DT*EPV*(PSC-2.D0*RC1)-4.D0*RA2)

C 
      TEMP=0.D0
      RDA1DT=0.D0
      RDA2DT=0.D0
      RDA3DT=0.D0
      DO 214 I=1,6
      RDA1DT=RDA1DT+RFRTDT*DRFRS(I)
      RDA2DT=RDA2DT+RFRT*SIRFRT(I)
      RDA3DT=RDA3DT+RFRT*ERFSDT(I)
214   CONTINUE
      RDADT=RDA1DT+RDA2DT+RDA3DT
      DO 217 I=1,6
      RDC1DT(I)=RDADT*KRON(I)/H-RDHDT*FTDF(I)/H
217   CONTINUE
C
      TEMP=0.D0
      TEMP1=0.D0
      TEMP2=0.D0
C
      DO 218 I=1,6
      TEMP=TEMP+DFRSDT(I)*RBTM*KRON(I)
      TEMP1=TEMP1+RFRS(I)*RDBTDT*KRON(I)
      TEMP2=TEMP2+RFRS(I)*RBTM*KRON(I)
218   CONTINUE
      DO 219 I=1,6
      RDSBDT(I)=(TEMP+TEMP1)*DRFRS(I)+TEMP2*(SIRFRT(I)+ERFSDT(I))
219   CONTINUE
C
      DO 221 I=1,6
      RDC2DT(I)=RDSBDT(I)/H-RDHDT*DMFFDD(I)/H
221   CONTINUE
C
      DO 222 I=1,6
      RDCPDT(I)=RDBTDT*KRON(I)+RDC1DT(I)-RDC2DT(I)
222   CONTINUE

C     CALCULATE THE PLASTIC MULTIPIER
C
C     FIRST TERM IS RFRSD(I)
C     SECOND TERM
C
      TEMP=0.0D0
      DO 223 I=1,6
        TEMP=TEMP+RFRS(I)*C(I)
223   CONTINUE
      ALAMT2=(RFRT-TEMP)/H
C
C
      TEMP=0.0D0
      DO 224 I=1,6
        TEMP=TEMP+RFRSD(I)*DEPS(I)
224   CONTINUE
      ALAMT1=TEMP
      DEPSVP=(ALAMT1+ALAMT2*DT)*AMRFRS
      IF(DEPSVP.LT.0.D0)DEPSVP=0.0D0
C      DEPSVE=3.D0*DEPSMO-DEPSVP
      ETA=SIELEQ/SIGPMO
      AB=CAM*CAM-ETA*ETA
      DGAMAP=2.D0*ETA*DEPSVP/AB
C
C

      DO 225 I=1,6
      DO 225 J=1,6
      DSIDEP(I,J)=DSIDEP(I,J)-DFFD(I,J)
225   CONTINUE
C
C
      DO 226 I=1,6
C      C(I)=C(I)+FTDF(I)-DMFFDD(I)
      CM(I)=CM(I)+FTDF(I)-DMFFDD(I)
226   CONTINUE
      ELSE

      DEPSVP=0.D0
      DGAMAP=0.D0
      DO 227 I=1,6
      RDCPDT(I)=RDBTDT*KRON(I)
      DO 227 J=1,6
      RDPLDT(I,J)=0.D0
227   CONTINUE
C
      ENDIF
C
           VINTP(ADVIME+2)=VINTM(ADVIME+2)+DEPSVP
           VINTP(ADVIME+3)=VINTM(ADVIME+3)+DGAMAP
C
        DO 228 I2=1,3
           DSIDT(I2,I2)=DSIDT(I2,I2)-RDCPDT(I2)
 228    CONTINUE

        DO 230 I2=1,6
          DO 229 J2=1,6
           DSIDT(I2,J2)=DSIDT(I2,J2)-RDPLDT(I2,J2)
 229      CONTINUE
 230    CONTINUE

C
            IF ((OPTION(1:16).EQ.'RIGI_MECA_TANG').OR.
     &         (OPTION(1:9).EQ.'FULL_MECA')) THEN
                DO 301 I=1,6
                 DO 302 J=1,6
                  DSDE(ADCOME-1+I,ADDEME+NDIM-1+J)=
     &                  DSDE(ADCOME-1+I,ADDEME+NDIM-1+J)+DSIDEP(I,J)
302              CONTINUE
301             CONTINUE
            ENDIF
            IF ((OPTION(1:9).EQ.'RAPH_MECA').OR.
     &         (OPTION(1:9).EQ.'FULL_MECA')) THEN
             DO 304 I=1,6
C                 CONGEP(ADCOME+I-1)=0.D0
                 DO 305 J=1,6
                  CONGEP(ADCOME+I-1)=CONGEP(ADCOME+I-1)
     &              + DSIDEP(I,J)*DEPS(J) 
305              CONTINUE
304          CONTINUE 
            ENDIF
C
       IF (YATE.EQ.1) THEN
          DO 303 I=1,3
               IF ((OPTION(1:16).EQ.'RIGI_MECA_TANG').OR.
     &            (OPTION(1:9).EQ.'FULL_MECA')) THEN 
                  DSDE(ADCOME-1+I,ADDETE)=DSDE(ADCOME-1+I,ADDETE)
     &                                  +DSIDT(I,I)
               ENDIF
               IF ((OPTION(1:9).EQ.'RAPH_MECA').OR.
     &            (OPTION(1:9).EQ.'FULL_MECA'))  THEN
                  CONGEP(ADCOME+I-1)=CONGEP(ADCOME+I-1)
     &                                -CM(I)*DT
               ENDIF
 303      CONTINUE
       ENDIF

          END
