      SUBROUTINE XMREMA(NOMA,DEFICO,CHSGM,CHSLO,CHSCF,ALIAS,NDIM,
     &                 IZONE,GEOM,JMAESC,MMAIT,AMAIT,NMAIT,
     &                 POSMIN,IFAMIN,JEUMIN,
     &                 T1MIN,T2MIN,XIMIN,YIMIN,PROJIN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/05/2009   AUTEUR MAZET S.MAZET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
C
      IMPLICIT NONE
      CHARACTER*8   NOMA,ALIAS
      CHARACTER*24  DEFICO
      CHARACTER*19  CHSGM,CHSLO,CHSCF
      INTEGER      NDIM,IZONE,JMAESC
      REAL*8       GEOM(3)
      INTEGER      MMAIT,NMAIT,AMAIT
      INTEGER      POSMIN,IFAMIN
      REAL*8       JEUMIN,T1MIN(3),T2MIN(3),XIMIN,YIMIN
      LOGICAL      PROJIN
C      
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (CONTACT - GRANDS GLISSEMENTS)
C
C RECHERCHER LA MAILLE MAITRE LA PLUS PROCHE CONNAISSANT LE POINT 
C D'INTERSECTION MAITRE LE PLUS PROCHE DU POINT DE CONTACT ET FAIRE
C LA PROJECTION 
C
C TRAVAIL EFFECTUE EN COLLABORATION AVEC I.F.P.
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  DEFICO : SD POUR LA DEFINITION DE CONTAC
C IN  CHSGM  : CHAMP CONTENANT LA GEOMETRIE DE LA FACETTE MAITRE
C IN  CHSLO  : CHAMP CONTENANT L'INFO SUR LES NBRE DE PT D'INTER
C              ET DE FACETTE DES MAILLES
C IN  CHSCF  : CHAMP CONTENANT LES NUMEROS LOCAUX DES POINTS
C              D'INTERSECTIONS DES FACETTES DE CONTACT
C IN  ALIAS  : TYPE DE MAILLE DE CONTACT
C IN  NDIM   : DIMENSION DU PROBLEME
C IN  IZONE  : ZONE DE CONTACT DU POINT D'INTEGRATION ESCLAVE
C IN  GEOM   : COORDONNEES DU POINT DE CONTACT ESCLAVE
C IN  JMAESC : POINTEUR VERS LA LISTE DE MAILLES FISSUREES
C IN  MMAIT  : NUMERO DE LA MAILLE MAITRE CONTENANT LE POINT
C              D'INTERSECTION LE PLUS PROCHE DU POINT ESCLAVE
C IN  AMAIT  : NUMERO LOCAL DE L'ARETE INTERSECTÉ
C IN  NMAIT  : NUMERO LOCAL DU NOEUD INTERSECTÉ
C OUT POSMIN : POSITION DE LA MAILLE MAITRE LA PLUS PROCHE
C OUT IFAMIN : NUMERO LOCAL DE LA FACETTE MAITRE LA PLUS PROCHE
C OUT JEUMIN : JEU MINIMUM
C OUT T1MIN  : PREMIER VECTEUR TANGENT
C OUT T2MIN  : DEUXIEME VECTEUR TANGENT
C OUT XIMIN  : COORDONNEE X DE LE PROJECTION MINIMALE DU POINT DE 
C              CONTACT SUR LA MAILLE MAITRE
C OUT YIMIN  : COORDONNEE Y DE LE PROJECTION MINIMALE DU POINT DE 
C              CONTACT SUR LA MAILLE MAITRE
C OUT PROJIN : VAUT .TRUE. SI LA PROJECTION DU POINT DE CONTACT N'EST
C              PAS LE RESULTAT DU RABATTEMENT 
C              .FALSE. S'IL Y A EU RABATTEMENT PARCE QU'ELLE SERAIT
C              TOMBEEE HORS DE LA MAILLE MAITRE (A LA TOLERANCE PRES)
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32 JEXNUM,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*8   TYPMA
      INTEGER CFDISI,ITEMAX
      INTEGER CFMMVD,ZMESX
      INTEGER INI,IAD,STATUT
      INTEGER JCSD1,JCSV1,JCSL1,JCSD2,JCSV2,JCSL2,JCSD3,JCSV3,JCSL3
      INTEGER JCONX1,JCONX2
      INTEGER POSMA,NUNOIN,NUNOG,NUGLA,NUGLB
      INTEGER N1,N2,NBNOS,NTMA
      INTEGER INO,NIVERR
      INTEGER I,J,K,IA,IMA,NUMPI(NDIM),NFACE,IFACE
      INTEGER AR(12,2),NBAR,NA,NB,NUNOA,NUNOB
      REAL*8  JEU,TAU1(3),TAU2(3),NRESE
      REAL*8  CFDISR,TOLEOU,EPSMAX
      REAL*8  COORMA(27),XI,YI
      REAL*8  R8GAEM,R3BID(3)
      LOGICAL LDIST,LDMIN,DIRAPP,NOAPAR
      INTEGER JMA,ITYPMA
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C      
      JEUMIN = R8GAEM()
      PROJIN = .TRUE.
      POSMIN = 0      
      DO 10 I=1,27
        COORMA(I)=0.D0
10    CONTINUE
      DIRAPP = .FALSE. 
C
C --- NB: ON SE BASE SUR LE TYPE DE LA MAILLE MAITRE.
C
      CALL JEVEUO(NOMA//'.TYPMAIL','L',JMA)
      ITYPMA=ZI(JMA-1+MMAIT)
      CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ITYPMA),TYPMA)
C
C --- INFOS GENERIQUES POUR L'ALGORITHME D'APPARIEMENT
C         
      TOLEOU = CFDISR(DEFICO,'TOLE_PROJ_EXT' ,IZONE)
      EPSMAX = CFDISR(DEFICO,'PROJ_NEWT_RESI',IZONE)
      ITEMAX = CFDISI(DEFICO,'PROJ_NEWT_ITER',IZONE) 
C
C --- ON RECUPERE LA CONNECTIVITE DU MAILLAGE
C
      CALL JEVEUO(NOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA//'.CONNEX','LONCUM'),'L',JCONX2)
      
C --- SI LE POINT DE CONTACT EST SUR UN ARRÊTE
      IF (AMAIT.GT.0) THEN            
        CALL CONARE(TYPMA,AR,NBAR)
        NA=AR(AMAIT,1)
        NB=AR(AMAIT,2)
        NUNOA=ZI(JCONX1-1+ZI(JCONX2+MMAIT-1)+NA-1)
        NUNOB=ZI(JCONX1-1+ZI(JCONX2+MMAIT-1)+NB-1)
C --- SI LE POINT DE CONTACT EST UN NOEUD
      ELSE
        NUNOG=ZI(JCONX1-1+ZI(JCONX2+MMAIT-1)+NMAIT-1)
        IF (TYPMA(1:4).EQ.'TRIA') THEN
          NBNOS=3
        ELSE IF (TYPMA(1:4).EQ.'QUAD') THEN
          NBNOS=4
        ELSE IF (TYPMA(1:5).EQ.'HEXA8') THEN
          NBNOS=8
        ELSEIF (TYPMA(1:6).EQ.'PENTA6') THEN
          NBNOS=6
        ELSEIF (TYPMA(1:6).EQ.'TETRA4') THEN
          NBNOS=4
        ELSE
          CALL U2MESS('F','XFEM_27')
        ENDIF
      ENDIF

      ZMESX = CFMMVD('ZMESX')
      NTMA=ZI(JMAESC)
C
C --- ON RECUPERE LA GEOMETRIE DES FACETTES MAITRES
C
      CALL JEVEUO(CHSGM//'.CESD','L',JCSD1)
      CALL JEVEUO(CHSGM//'.CESV','L',JCSV1)
      CALL JEVEUO(CHSGM//'.CESL','L',JCSL1)
C
C --- ON RECUPERE LES INFOS SUR LES NBRES DE PT ET
C     DE FACETTES DE CONTACT
C
      CALL JEVEUO(CHSLO//'.CESD','L',JCSD2)
      CALL JEVEUO(CHSLO//'.CESV','L',JCSV2)
      CALL JEVEUO(CHSLO//'.CESL','L',JCSL2) 
C
C --- ON RECUPERE LES INFOS SUR LA CONNECTIVITE DES FACETTES DE CONTACT
C
      CALL JEVEUO(CHSCF//'.CESD','L',JCSD3)
      CALL JEVEUO(CHSCF//'.CESV','L',JCSV3)
      CALL JEVEUO(CHSCF//'.CESL','L',JCSL3)
C
C --- BOUCLE SUR LES MAILLES FISSURÉES
C
      DO 100 IMA=1,NTMA
        POSMA  = ZI(JMAESC+ZMESX*(IMA-1)+1)
        STATUT = ZI(JMAESC+ZMESX*(IMA-1)+4)
C
        IF (STATUT.EQ.-1) GO TO 100
        NOAPAR=.TRUE.
C
        IF (AMAIT.GT.0) THEN
C
C --- SI LE POINT DE CONTACT EST SUR UNE ARÊTE     
C --- ON BOUCLE SUR LES ARETES DE LA MAILLE COURANTE
C --- ON REGARDE SI L'ARETE APPARTIENT A CETTE MAILLE
C
          DO 110 IA=1,NBAR
            N1=AR(IA,1)
            N2=AR(IA,2)
            NUGLA=ZI(JCONX1-1+ZI(JCONX2+POSMA-1)+N1-1)
            NUGLB=ZI(JCONX1-1+ZI(JCONX2+POSMA-1)+N2-1)
C
            IF (((NUGLA.EQ.NUNOA).AND.(NUGLB.EQ.NUNOB)).OR.
     &          ((NUGLA.EQ.NUNOB).AND.(NUGLB.EQ.NUNOA))) THEN
              NOAPAR=.FALSE.
            ENDIF
 110      CONTINUE
        ELSE
C
C --- SI LE POINT DE CONTACT EST UN NOEUD
C --- ON BOUCLE SUR LES NOEUDS DE LA MAILLE COURANTE
C --- ON REGARDE SI LE NOEUD APPARTIENT A CETTE MAILLE
C       
          DO 120 INO=1,NBNOS
            NUNOIN=ZI(JCONX1-1+ZI(JCONX2+POSMA-1)+INO-1)
            IF (NUNOIN.EQ.NUNOG) THEN
              NOAPAR=.FALSE.
            ENDIF
 120      CONTINUE
        ENDIF
C         
        IF (NOAPAR) GOTO 100
C
C --- RECUPERATION DU NOMBRE DE FACETTES DE CONTACT DE LA MAILLE COURANT
C
        CALL CESEXI('S',JCSD2,JCSL2,POSMA,1,1,2,IAD)
        CALL ASSERT(IAD.GT.0)
        NFACE=ZI(JCSV2-1+IAD)
C
C --- BOUCLE SUR LES FACETTES DE CONTACT DE LA MAILLE COURANTE
C
        DO 130 IFACE=1,NFACE
C
C --- RECUPERATION DES NUMEROS LOCAUX DES POINTS D'INTERSECTIONS
C     DE LA FACETTE DANS LA MAILLE
C
          DO 140 I=1,NDIM       
            CALL CESEXI('S',JCSD3,JCSL3,POSMA,1,1,(IFACE-1)*NDIM+I,IAD)
            CALL ASSERT(IAD.GT.0)
            NUMPI(I) = ZI(JCSV3-1+IAD)
 140      CONTINUE
C
C --- RECUPERATION DES COORDONNES REELES DES POINTS D'INTERSECTION
C     DE LA FACETTE MAITRE
C
          DO 150 I=1,NDIM
            DO 160 J=1,NDIM
              CALL CESEXI('S',JCSD1,JCSL1,POSMA,1,1,NDIM*(NUMPI(I)-1)+J,
     &                    IAD)
              CALL ASSERT(IAD.GT.0)
              COORMA(3*(I-1)+J)=ZR(JCSV1-1+IAD)
 160        CONTINUE
 150      CONTINUE
C
C --- PROJECTION SUR LA FACETTE MAITRE
C
          CALL MMPROJ(ALIAS,NDIM,NDIM,COORMA,GEOM,
     &                ITEMAX,EPSMAX,TOLEOU,DIRAPP,R3BID,
     &                XI,YI,TAU1,TAU2,LDIST,NIVERR)
C
C --- ECHEC DE NEWTON
C      
          IF (NIVERR.EQ.1) THEN
            CALL ASSERT(.FALSE.)
          ENDIF
C
C --- CALCUL DU JEU
C
          CALL MMJEUX(ALIAS,NDIM ,NDIM ,COORMA,XI,YI,GEOM,  
     &                JEU)
C              
C --- CHOIX DE LA MAILLE 
C              
          IF (JEU.LT.JEUMIN) THEN
            POSMIN = POSMA
            IFAMIN = IFACE
            JEUMIN = JEU
            LDMIN  = LDIST
            DO 40 K = 1,3
              T1MIN(K) = TAU1(K)
              T2MIN(K) = TAU2(K)
  40        CONTINUE
            XIMIN = XI
            YIMIN = YI
          ENDIF
 130    CONTINUE
 100  CONTINUE
C
C --- NORMALISATION DES VECTEURS TANGENTS
C
      CALL NORMEV(T1MIN,NRESE)
      CALL NORMEV(T2MIN,NRESE)
C
      IF (.NOT.LDMIN) PROJIN = .FALSE.
      IF (TOLEOU.EQ.-1.D0) PROJIN = .TRUE.
C
      CALL JEDEMA()
      END
