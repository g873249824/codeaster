      SUBROUTINE NMAMOD(PHASE ,NUMEDD,SDDYNA,VITPLU,VITKM1,
     &                  CNAMOM)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*4  PHASE
      CHARACTER*19 VITPLU,VITKM1
      CHARACTER*19 SDDYNA
      CHARACTER*24 NUMEDD,CNAMOM
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (DYNAMIQUE)
C
C CALCUL DES FORCES D'AMORTISSEMENT MODAL
C
C ----------------------------------------------------------------------
C
C
C IN  PHASE  : PHASE DE CALCUL (PREDICTION OU CORRECTION)
C IN  VITPLU : VITESSE COURANTE
C IN  VITKM1 : VITESSE ITERATION NEWTON PRECEDENTE
C IN  NUMEDD : NUME_DDL
C IN  SDDYNA : SD DYNAMIQUE
C OUT CNAMOM : VECT_ASSE FORCES AMORTISSEMENT MODAL    
C
C
C
C
      INTEGER      JVITP,JVITKM,JMODA
      CHARACTER*24 VALMOD,BASMOD
      CHARACTER*19 SDAMMO
      LOGICAL      NDYNLO,NREAVI
      INTEGER      NEQ,IRET
      CHARACTER*8  K8BID
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C     
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
      CALL NDYNKK(SDDYNA,'SDAMMO',SDAMMO) 
      VALMOD = SDAMMO(1:19)//'.VALM'
      BASMOD = SDAMMO(1:19)//'.BASM'
      NREAVI = NDYNLO(SDDYNA,'NREAVI')
C      
C --- ACCES OBJETS JEVEUX
C
      CALL JEVEUO(VITPLU(1:19)//'.VALE','L',JVITP)
      CALL JEVEUO(VITKM1(1:19)//'.VALE','L',JVITKM)
      CALL JEVEUO(CNAMOM(1:19)//'.VALE','E',JMODA)                   
C
C --- CALCUL FORCES MODALES
C      
      IF (PHASE.EQ.'PRED') THEN     
        CALL FMODAM(NEQ   ,ZR(JVITKM),VALMOD,BASMOD,ZR(JMODA))
      ELSEIF  (PHASE.EQ.'CORR') THEN
        CALL FMODAM(NEQ   ,ZR(JVITP) ,VALMOD,BASMOD,ZR(JMODA))
        IF (NREAVI) THEN
          CALL FMODAM(NEQ   ,ZR(JVITP),VALMOD,BASMOD,ZR(JMODA))
        ENDIF            
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF   
C
      CALL JEDEMA()
      END
