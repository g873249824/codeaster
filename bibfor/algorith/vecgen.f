      SUBROUTINE VECGEN(NOMRES,NUMEG)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 21/09/2011   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***********************************************************************
C    T. KERBER      DATE 12/05/93
C-----------------------------------------------------------------------
C  BUT: ASSEMBLER UN VECTEUR ISSU D'UN MODELE GENERALISE
C
C     CONCEPT CREE: VECT_ASSE_GENE
C
C-----------------------------------------------------------------------
C
      INTEGER IER
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32 JEXNOM,JEXNUM
C
C-----  FIN  COMMUNS NORMALISES  JEVEUX  -------------------------------
C
      CHARACTER*6 PGC
      CHARACTER*8 NOMRES,NUMEG,MODGEN,NOMSST,NOM2MB,NOMDDL,SSTOLD
      CHARACTER*8 BASMOD,TYPVE
      CHARACTER*16 MOTFAC
      CHARACTER*19 PROFG,CHASOU
      CHARACTER*24 RESDSC,RESREF,RESVAL
      CHARACTER*24 VALK(3)
      CHARACTER*24 CHADSC,CHALIS,CHAVAL
      CHARACTER*24 NUCHAR,NUBAMO
      CHARACTER*24 NOMCHA,DEEQ,TYPEBA,SELIAI,SIZLIA,SST
      REAL*8       DDOT
      CHARACTER*8 KBID
      COMPLEX*16  CBID
      INTEGER      GD, GD0,NBLIA,IBID,ELIM,NEQET,NEQRED,LMAPRO,LSILIA,
     &             LSST,NBSST,I1,J1
      INTEGER VALI(3)
      CHARACTER*1 K1BID
      INTEGER      IARG
C
C-----------------------------------------------------------------------
      DATA PGC/'VECGEN'/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C-----------------------------------------------------------------------
C     A/ RECUPERATION DU MODELE GENERALISE
C-----------------------------------------------------------------------
C
      PROFG = NUMEG//'      .NUME'
      CALL JEVEUO(PROFG//'.REFN','E',LLREF)
      MODGEN = ZK24(LLREF) (1:8)
      
C     0/ TEST SI ON ELIMINE LES CONTRAINTES
C     =====================================

      ELIM=0
      SELIAI=NUMEG(1:8)//'      .ELIM.BASE'
      SIZLIA=NUMEG(1:8)//'      .ELIM.TAIL'
      SST=   NUMEG(1:8)//'      .ELIM.NOMS'
      CALL JEEXIN(SELIAI,ELIM)
C
C     RECUPERATION DE LA BASE SI ELIMINATION
C 
      IF (ELIM .NE. 0) THEN 
        CALL JELIRA(MODGEN//'      .MODG.SSNO','NOMMAX',NBSST,K1BID)
        NEQET=0
        CALL JEVEUO(NUMEG//'      .NUME.NEQU','L',IBID)
        NEQRED=ZI(IBID)
        CALL JEVEUO(SELIAI,'L',LMAPRO)
        CALL JEVEUO(SIZLIA,'L',LSILIA)
        CALL JEVEUO(SST,'L',LSST)
        DO 9 I=1,NBSST
          NEQET=NEQET+ZI(LSILIA+I-1)
   9    CONTINUE
      ENDIF
            
C     1/ LECTURE ET STOCKAGE DES INFORMATIONS
C     =======================================

C-----------------------------------------------------------------------
C     1.1/ RECUPERATION CONCEPTS AMONT
C-----------------------------------------------------------------------
C
C     NOMBRE DE SOUS-STRUCTURES SOUMISES A CHARGEMENTS
      CALL GETFAC('CHAR_SOUS_STRUC',NBCHAR)
C
      IF (ELIM .EQ. 0) THEN
C       VERIFIER QUE LA NUMEROTATION EST COHERENTE
        CALL JENONU(JEXNOM(PROFG//'.LILI','LIAISONS'),IBID)
        CALL JELIRA(JEXNUM(PROFG//'.PRNO',IBID),'LONMAX',NBLIA,K1BID)
        IF (NBLIA.EQ.1) THEN
          CALL U2MESS('F','ALGORITH_32')
        ENDIF
C
C       VERIFIER QUE LE NOMBRE NBCHAR DE SOUS-STRUCTURES CHARGEES EST
C       INFERIEUR AU NOMBRE TOTAL NBSST DE SOUS-STRUCTURES
        CALL JENONU(JEXNOM(PROFG//'.LILI','&SOUSSTR'),IBID)
        CALL JELIRA(JEXNUM(PROFG//'.ORIG',IBID),'LONMAX',NBSST,K1BID)
        IF (NBCHAR.GT.NBSST) THEN
          VALI (1) = NBCHAR
          VALI (2) = NBSST
          CALL U2MESG('F','ALGORITH15_69',0,' ',2,VALI,0,0.D0)
        ENDIF
      ENDIF 
C
C-----------------------------------------------------------------------
C     1.2/ CREATION DE LA STRUCTURE DE DONNEES NOMRES
C-----------------------------------------------------------------------
C
C     CETTE STRUCTURE DE DONNEES, DE TYPE VECT_ASSE_GENE, COMPREND
C     LES ARTICLES USUELS D'UN VECT_ASSE, PLUS UN .ELEM CONTENANT DES
C     INFORMATIONS PROPRES AUX DIVERSES SOUS-STRUCTURES.
C
C     CELUI-CI COMPREND LES ARTICLES QUI SUIVENT.
C        - UN .DESC, AVEC LE NOMBRE DE SOUS-STRUCTURES SOUMISES A
C          CHARGEMENT
C        - UN .LICH, REGROUPANT LES INFORMATIONS SUR LES SOUS-STRUCTURES
C          CHARGEES : NOM DE LA SOUS-STRUCTURE, DU SECOND MEMBRE
C          ASSEMBLE POUR CELLE-CI, ET DU NUME_DDL ASSOCIE.
C        - UN .VALE, QUI CONTIENDRA LES PROJECTIONS DES SECOND MEMBRES
C          ASSEMBLES, SUR LA BASE MODALE CORRESPONDANTE. C'EST UNE
C          COLLECTION NOMMEE PAR LES NOMS DES SOUS-STRUCTURES.
C
C     NOTONS QUE DANS LE .REFE, LE MAILLAGE EST REMPLACE PAR LE MODELE
C     GENERALISE.
C
      RESDSC = NOMRES//'           .DESC'
      RESREF = NOMRES//'           .REFE'
      RESVAL = NOMRES//'           .VALE'
C
      CHASOU = NOMRES//'      .ELEM'
      CHADSC = CHASOU//'.DESC'
      CHALIS = CHASOU//'.LICH'
      CHAVAL = CHASOU//'.VALE'
C
      CALL WKVECT(RESDSC,'G V I',3,LRDESC)
      CALL JEECRA(RESDSC,'DOCU',0,'CHNO')
C
      CALL WKVECT(RESREF,'G V K24',2,LRREF)
C
C     RECUPERATION DU NOMBRE TOTAL DE D.D.L. GENERALISES, POUR
C     L'ALLOCATION DU .VALE.
      CALL JEVEUO(PROFG//'.NEQU','L',LLNEQ)
      NEQGEN = ZI(LLNEQ)
C
      CALL WKVECT(RESVAL,'G V R',NEQGEN,LRVAL)
      CALL WKVECT(CHADSC,'V V I',1,LDDESC)
C
      CALL JECREC(CHALIS,'V V K8','NO','CONTIG','CONSTANT',3)
      CALL JECROC(JEXNOM(CHALIS,'SOUSSTR'))
      CALL JECROC(JEXNOM(CHALIS,'VECTASS'))
      CALL JECROC(JEXNOM(CHALIS,'NUMEDDL'))
      CALL JEECRA(JEXNOM(CHALIS,'SOUSSTR'),'LONMAX',NBCHAR,' ')
C
      CALL JEVEUO(JEXNOM(CHALIS,'SOUSSTR'),'E',LDNSST)
      CALL JEVEUO(JEXNOM(CHALIS,'VECTASS'),'E',LDNVEC)
      CALL JEVEUO(JEXNOM(CHALIS,'NUMEDDL'),'E',LDNDDL)
C
      CALL JECREC(CHAVAL,'V V R','NO','DISPERSE','VARIABLE',NBCHAR)
C
C-----------------------------------------------------------------------
C     1.3/ REMPLISSAGE DES INFORMATIONS DE NOMRES
C-----------------------------------------------------------------------
C
C     ECRITURE DU .DESC DANS LE .ELEM
      ZI(LDDESC) = NBCHAR
C
C     ECRITURE DES INFORMATIONS DANS CHARLIS
      MOTFAC = 'CHAR_SOUS_STRUC'
C
C     BOUCLE SUR LES SOUS-STRUCTURES CHARGEES
      DO 10 I = 1,NBCHAR

C-----------------------------------------------------------------------
C     B/ RECUPERATION DU NOM DE LA SOUS-STRUCTURE ET ECRITURE DANS
C        LE .LICH.
C-----------------------------------------------------------------------
C
        CALL GETVTX(MOTFAC,'SOUS_STRUC',I,IARG,0,NOMSST,IOC)
        IOC = -IOC
        IF (IOC.NE.1) THEN
          VALI (1) = I
          VALI (2) = 1
          VALI (3) = IOC
          CALL U2MESG('F','ALGORITH15_70',0,' ',3,VALI,0,0.D0)
        ELSE
          CALL GETVTX(MOTFAC,'SOUS_STRUC',I,IARG,1,NOMSST,IOC)
        END IF
        ZK8(LDNSST+I-1) = NOMSST
C
C-----------------------------------------------------------------------
C     C/ RECUPERATION DU NOM DU SECOND MEMBRE ASSEMBLE, ET ECRITURE
C        DANS LE .LICH
C-----------------------------------------------------------------------
C
        CALL GETVID(MOTFAC,'VECT_ASSE',I,IARG,0,NOM2MB,IOC)
        IOC = -IOC
        IF (IOC.NE.1) THEN
          VALI (1) = I
          VALI (2) = 1
          VALI (3) = IOC
          CALL U2MESG('F','ALGORITH15_71',0,' ',3,VALI,0,0.D0)
        ELSE
          CALL GETVID(MOTFAC,'VECT_ASSE',I,IARG,1,NOM2MB,IOC)
          CALL CHPVER('F',NOM2MB,'NOEU','DEPL_R',IER)
        END IF
C
C     RECUPERATION DU NUME_DDL ASSOCIE AU SECOND MEMBRE.
C
C     ON VERIFIE D'ABORD QU'ON A BIEN LE NOM DU PROF_CHNO DANS LE
C     .REFE DU CHAMNO SECOND MEMBRE. POUR CE FAIRE, ON CONTROLE QUE
C     LA VALEUR DE NUME DANS LE .DESC EST BIEN POSITIVE.
C
        CALL JEVEUO(NOM2MB//'           .DESC','L',LDESC)
        NUM = ZI(LDESC+1)
        IF (NUM.LT.0) THEN
          VALK (1) = NOM2MB
          CALL U2MESG('F','ALGORITH15_72',1,VALK,0,0,0,0.D0)
        END IF
        CALL JEVEUO(NOM2MB//'           .REFE','L',LREFE)
        NUCHAR = ZK24(LREFE+1)
C
C     VERIFICATION DE LA COHERENCE DES GRANDEURS ENTRE CHARGEMENTS.
C
        GD = ZI(LDESC)
        IF (I.EQ.1) THEN
          GD0 = GD
        END IF
        SSTOLD='        '
        IF (GD.NE.GD0) THEN
          VALI (1) = GD0
          VALI (2) = GD
          VALK (1) = SSTOLD
          VALK (2) = NOMSST
          CALL U2MESG('F+','ALGORITH15_73',2,VALK,2,VALI,0,0.D0)
        END IF
        GD0 = GD
        SSTOLD = NOMSST
        ZK8(LDNVEC+I-1) = NOM2MB
C
C-----------------------------------------------------------------------
C     D/ RECUPERATION DU NUME_DDL ET ENREGISTREMENT DANS LE .LICH
C-----------------------------------------------------------------------
C
C     ON UTILISE LA BASE MODALE, ET ON VERIFIE AU PASSAGE QUE
C     SON TYPE EST BIEN CELUI D'UNE BASE CLASSIQUE OU DE RITZ.
C
        CALL MGUTDM(MODGEN,NOMSST,0,'NOM_BASE_MODALE',IBID,BASMOD)
        CALL JEVEUO(BASMOD//'           .REFD','L',LLREFB)
        NUBAMO = ZK24(LLREFB+3)
C
        TYPEBA = ZK24(LLREFB+6)

        IF (TYPEBA(1:4).NE.'RITZ' .AND. 
     &      TYPEBA(1:9).NE.'CLASSIQUE') THEN
          VALK (1) = NOMSST
          CALL U2MESG('F','ALGORITH15_74',1,VALK,0,0,0,0.D0)
        END IF
C
C     PAR SECURITE, ON S'ASSURE QUE LE NUME_DDL ASSOCIE AU CHARGEMENT
C     COINCIDE AVEC CELUI ASSOCIE A LA SOUS-STRUCTURE.
C
        IF (NUCHAR(1:14).NE.NUBAMO(1:14)) THEN
          VALK (1) = NOMSST
          VALK (2) = NUBAMO
          VALK (3) = NUCHAR
          CALL U2MESG('F','ALGORITH15_75',3,VALK,0,0,0,0.D0)
        END IF
C
C     COPIE DU NUME_DDL DANS LE .LICH
        ZK8(LDNDDL+I-1) = NUBAMO(1:8)
   10 CONTINUE
   
C     ECRITURE DU .REFE
      ZK24(LLREF) = MODGEN
      ZK24(LRREF+1) = PROFG

C     ECRITURE DU .DESC
      ZI(LRDESC) = GD
      ZI(LRDESC+1) = 1

C     2/ PROJECTION DES CHARGEMENTS SUR LES BASES MODALES
C     ===================================================
C
C-----------------------------------------------------------------------
C     BOUCLES SUR LES SOUS-STRUCTURES CHARGEES
C-----------------------------------------------------------------------
      DO 50 I = 1,NBCHAR
C
C-----------------------------------------------------------------------
C     2.1/ RECUPERATION D'INFORMATIONS DE BASE
C-----------------------------------------------------------------------
C
C     NOMS STOCKES DANS LE .LICH
        NOMSST = ZK8(LDNSST+I-1)
        NOM2MB = ZK8(LDNVEC+I-1)
        NOMDDL = ZK8(LDNDDL+I-1)
C
C     RECUPERATION DE LA BASE MODALE ASSOCIEE A LA SOUS-STRUCTURE
        CALL MGUTDM(MODGEN,NOMSST,0,'NOM_BASE_MODALE',IBID,BASMOD)
C
C     NOMBRE DE MODES NBMOD DE LA BASE MODALE
        CALL RSORAC(BASMOD,'LONUTI',IBID,RBID,KBID,CBID,RBID,KBID,NBMOD,
     &              1,IBID)

C     RECUPERATION DU .VALE ASSOCIE AU SECOND MEMBRE
        CALL JEVEUO(NOM2MB//'           .VALE','L',LADRVE)
        CALL JELIRA(NOM2MB//'           .VALE','TYPE',IBID,TYPVE)

C     NOMBRE D'EQUATIONS DU SYSTEME PHYSIQUE, POUR LA SOUS-STRUCTURE
        CALL DISMOI('F','NB_EQUA',NOMDDL,'NUME_DDL',NEQ,KBID,IRET)

C     POSITIONNEMENT DANS LE .DEEQ, AFIN DE DISPOSER DES CORRESPONDANCES
C     ENTRE NUMEROS D'EQUATIONS ET NOEUDS ET D.D.L.
        DEEQ = NOMDDL//'      .NUME.DEEQ'
        CALL JEVEUO(DEEQ,'L',IDDEEQ)

C-----------------------------------------------------------------------
C     2.2/ CREATION DE L'OBJET CHARGEMENT PROJETE DU .VALE
C-----------------------------------------------------------------------

        CALL JECROC(JEXNOM(CHAVAL,NOMSST))     
        CALL JEECRA(JEXNOM(CHAVAL,NOMSST),'LONMAX',NBMOD,' ')

C-----------------------------------------------------------------------
C     2.3/ PROJECTION EFFECTIVE
C-----------------------------------------------------------------------

C     ALLOCATION DE LA PLACE POUR UN VECTEUR TEMPORAIRE
        CALL WKVECT('&&'//PGC//'.VECTA','V V R',NEQ,IDVECT)

C     ACCES AU CHAMP DE CHARVAL ASSOCIE A NOMSST
        CALL JEVEUO(JEXNOM(CHAVAL,NOMSST),'E',IAVALE)

C     BOUCLE SUR LES MODES
        DO 20 J = 1,NBMOD
        
C     EXTRACTION DU CHAMP DE DEPLACEMENTS ASSOCIE AU MODE J
          CALL RSEXCH(BASMOD,'DEPL',J,NOMCHA,IRET)
          NOMCHA = NOMCHA(1:19)//'.VALE'
          CALL JEVEUO(NOMCHA,'L',IADMOD)          
C
C     RECOPIE DU CHAMP DANS LE VECTEUR TEMPORAIRE
          CALL DCOPY(NEQ,ZR(IADMOD),1,ZR(IDVECT),1)

C     MISE A ZERO DES D.D.L. DE LAGRANGE
          CALL ZERLAG(ZR(IDVECT),NEQ,ZI(IDDEEQ))

C     PRODUIT SCALAIRE SECOND MEMBRE ET MODE
          ZR(IAVALE+J-1) = DDOT(NEQ,ZR(IDVECT),1,ZR(LADRVE),1)
C
   20   CONTINUE
        CALL JEDETR('&&'//PGC//'.VECTA')
   50 CONTINUE
   
C     3/ ASSEMBLAGE
C     =============

C     ACCES AU PRNO DU PROF_CHNO GENERALISE, POUR LES SOUS-STRUCTURES.
      CALL JENONU(JEXNOM(PROFG//'.LILI','&SOUSSTR'),IBID)
      CALL JEVEUO(JEXNUM(PROFG//'.PRNO',IBID),'L',LDPRS)

C     ACCES AUX NOMS DES SOUS-STRUCTURES CHARGEES
      CALL JEVEUO(JEXNOM(CHALIS,'SOUSSTR'),'L',LDSTR)

C     BOUCLE SUR LES SOUS-STRUCTURES CHARGEES
      DO 200 I = 1,NBCHAR

C     RECUPERATION DU NOM DE LA SOUS-STRUCTURE ET DU CHARGEMENT
C     PROJETE ASSOCIE.
        NOMSST = ZK8(LDSTR+I-1)

C     RECUPERATION DU NUMERO GLOBAL DE LA SOUS-STRUCTURE
        IF (ELIM .EQ. 0) THEN
          CALL JENONU(JEXNOM(MODGEN//'      .MODG.SSNO',NOMSST),NUSST)
        ELSE
C     CAS OU ON RECOURS A L'ELIMINATION                
          DO 60 I1=1,NBSST
            IF ( ZK8(LSST+I1-1) .EQ. NOMSST ) THEN
              NUSST=I1
            ENDIF  
  60      CONTINUE   
        ENDIF  

C     RECUPERATION DU D.D.L. GENERALISE DE DEPART ET DU NOMBRE TOTAL
C     DE D.D.L., ASSOCIES A LA SOUS-STRUCTURE.
        IF (ELIM .EQ. 0) THEN
          NDDL0 = ZI(LDPRS+2*NUSST-2)
          NBMOD = ZI(LDPRS+2*NUSST-1)
        ELSE
C     CAS OU ON RECOURS A L'ELIMINATION                
          NDDL0=0
          NBMOD=0
          DO 70 I1=1,NUSST-1    
            NDDL0 = NDDL0 + ZI(LSILIA+I1-1)
   70     CONTINUE     
          NBMOD = ZI(LSILIA+NUSST-1)
        ENDIF

C     ASSEMBLAGE DES VALEURS DE CHARGEMENT
C
C     LE VECTEUR GLOBAL EST POSITIONNE EN ZR(LRVAL) (DANS RESVAL)
C     CELUI LOCAL A LA SOUS-STRUCTURE EN ZR(IDVALE)
        CALL JEVEUO(JEXNOM(CHAVAL,NOMSST),'L',IDVALE)
C
C     BOUCLE SUR LES MODES DE LA SOUS-STRUCTURE
        IF (ELIM .EQ. 0) THEN
          DO 80 J = 1,NBMOD
            IPOS=(NDDL0 - 1) + (J - 1)
            ZR(LRVAL+IPOS) = ZR(LRVAL+IPOS) + ZR(IDVALE+J-1)
   80     CONTINUE
        ELSE
C     CAS OU ON RECOURS A L'ELIMINATION   
C     ON RE PROJETTE SUR LA BASE T : F_proj = T^t * (Phi^t * F) 
          DO 100 J1 = 1,NEQRED
            ZR(LRVAL+J1-1)=0.0D0
            DO 90 I1=1,NBMOD
            ZR(LRVAL+J1-1) = ZR(LRVAL+J1-1) + 
     &                       ZR(IDVALE+I1-1)*
     &                       ZR(LMAPRO+(J1-1)*NEQET+NDDL0+I1-1)
   90       CONTINUE  
  100     CONTINUE
        ENDIF          
  200 CONTINUE

      CALL JEDEMA()
      END
