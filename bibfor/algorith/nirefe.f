      SUBROUTINE NIREFE(NDIM,NNO1,NNO2,NNO3,NPG,IW,VFF1,VFF2,VFF3,
     &   IDF1,DFF1,VU,VG,VP,TYPMOD,GEOMI,SIGREF,EPSREF,VECT)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/01/2013   AUTEUR SFAYOLLE S.FAYOLLE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================

      IMPLICIT NONE
      CHARACTER*8   TYPMOD(*)
      INTEGER       NDIM,NNO1,NNO2,NNO3,NPG,IW,IDF1
      INTEGER       VU(3,27),VG(27),VP(27)
      REAL*8        GEOMI(NDIM,NNO1),DFF1(NNO1,4)
      REAL*8        VFF1(NNO1,NPG),VFF2(NNO2,NPG),VFF3(NNO3,NPG)
      REAL*8        VECT(*),SIGREF,EPSREF

C-----------------------------------------------------------------------
C
C     BUT:  CALCUL  DE L'OPTION REFE_FORC_NODA EN QUASI INCOMPRESSIBLE
C                  INCO_GD ET INCO_LOG
C     APPELEE PAR  TE0456
C-----------------------------------------------------------------------
C IN NDIM     : DIMENSION DE L'ESPACE
C IN  NNO1    : NOMBRE DE NOEUDS DE L'ELEMENT LIES AUX DEPLACEMENTS
C IN  NNO2    : NOMBRE DE NOEUDS DE L'ELEMENT LIES AU GONFLEMENT
C IN  NNO3    : NOMBRE DE NOEUDS DE L'ELEMENT LIES A LA PRESSION 
C IN  NPG     : NOMBRE DE POINTS DE GAUSS
C IN  IW      : POIDS DES POINTS DE GAUSS
C IN  VFF1    : VALEUR  DES FONCTIONS DE FORME LIES AUX DEPLACEMENTS
C IN  VFF2    : VALEUR  DES FONCTIONS DE FORME LIES AU GONFLEMENT
C IN  VFF3    : VALEUR  DES FONCTIONS DE FORME LIES A LA PRESSION
C IN  IDF1   : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C OUT DFF1    : DERIVEE FONCTION DE FORME (PT DE GAUSS COURANT) A T+
C IN  VU
C IN  VG
C IN  VP
C IN  GEOMI   : COORDONEES DES NOEUDS
C IN  TYPMOD  : TYPE DE MODELISATION
C IN  SIGREF  : CONTRAINTE DE REFERENCE
C IN  EPSREF  : DEFORMATIONS DE REFERENCE
C OUT VECT    : REFE_FORC_NODA
C-----------------------------------------------------------------------


      LOGICAL AXI
      INTEGER NDDL,NDIMSI,VIJ(3,3),LIJ(3,3),NDU
      INTEGER G,KL,SA,RA,NA,IA,JA,KK
      REAL*8 R,W,TAU(6)
      REAL*8 T1

      DATA    VIJ  / 1, 4, 5,
     &               4, 2, 6,
     &               5, 6, 3 /
C-----------------------------------------------------------------------

C - INITIALISATION

      AXI  = TYPMOD(1).EQ.'AXIS'
      NDDL = NNO1*NDIM + NNO2 + NNO3
      NDU  = NDIM
      IF (AXI) NDU = 3
      NDIMSI = 2*NDU
      CALL R8INIR(NDDL,0.D0,VECT,1)

      DO 1000 G = 1,NPG

        CALL DFDMIP(NDIM,NNO1,AXI,GEOMI,G,IW,VFF1(1,G),IDF1,R,W,DFF1)
        CALL NMMALU(NNO1,AXI,R,VFF1(1,G),DFF1,LIJ)

C      VECTEUR FINT:U
        DO 10 KL = 1,NDIMSI        
          CALL R8INIR(6,0.D0,TAU,1)
          TAU(KL) = SIGREF
          DO 300 NA=1,NNO1
          DO 310 IA=1,NDU
            KK = VU(IA,NA)
            T1 = 0.D0
            DO 320 JA = 1,NDU
              T1 = T1 + TAU(VIJ(IA,JA))*DFF1(NA,LIJ(IA,JA))
 320        CONTINUE
            VECT(KK) = VECT(KK) + ABS(W*T1)/NDIMSI
 310      CONTINUE
 300      CONTINUE
 10     CONTINUE

C      VECTEUR FINT:G
        DO 350 RA=1,NNO2
          KK = VG(RA)
          T1 = VFF2(RA,G)*SIGREF
          VECT(KK) = VECT(KK) + ABS(W*T1)
 350    CONTINUE

C      VECTEUR FINT:P
        DO 370 SA=1,NNO3
          KK = VP(SA)
          T1 = VFF3(SA,G)*EPSREF
          VECT(KK) = VECT(KK) + ABS(W*T1)
 370    CONTINUE

 1000 CONTINUE
      END
