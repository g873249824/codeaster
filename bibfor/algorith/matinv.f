      SUBROUTINE MATINV(STOP,NDIM,MAT,INV,DET)
      IMPLICIT NONE
      INTEGER    NDIM
      REAL*8     MAT(NDIM,NDIM),INV(NDIM,NDIM),DET
      CHARACTER*1  STOP
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 06/10/2009   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C ----------------------------------------------------------------------
C
C MATRICE - CALCUL DE SON INVERSE (DIM = 1 , 2 OU 3)
C ***                     ***
C
C ----------------------------------------------------------------------
C
C IN  STOP   : /'S' : ON S'ARRETE EN ERREUR <F> EN CAS D'ECHEC
C              /'C' : ON CONTINUE EN CAS D'ECHEC (SI LA VALEUR ABS DU 
C                     DETERMINANT EST INFERIEURE A LA PRECISION MACHINE)
C                     ET ON MET DET = 0
C IN  NDIM   : DIMENSION DE LA MATRICE
C IN  MAT    : MATRICE A INVERSER
C OUT INV    : MATRICE INVERSE
C OUT DET    : DETERMINANT DE LA MATRICE MAT
C
C ----------------------------------------------------------------------
C
      INTEGER       IDIM,JDIM
      REAL*8        M(NDIM,NDIM),R8PREM,UNSDET
C
      IF (NDIM.EQ.1) THEN
C
        M(1,1) = 1.D0
        DET    = MAT(1,1)
C
      ELSEIF (NDIM.EQ.2) THEN
C
C --- CALCUL DES (-1)^(I+J)*MINEURS(J,I)
C
        M(1,1) =   MAT(2,2)
        M(2,1) = - MAT(2,1)
        M(1,2) = - MAT(1,2)
        M(2,2) =   MAT(1,1)
C
C ---   CALCUL DU DETERMINANT
C
        DET    = MAT(1,1)*MAT(2,2) - MAT(1,2)*MAT(2,1)
C
      ELSEIF (NDIM.EQ.3) THEN
C
C --- CALCUL DES (-1)^(I+J)*MINEURS(J,I)
C
        M(1,1) = MAT(2,2) * MAT(3,3) - MAT(2,3) * MAT(3,2)
        M(2,1) = MAT(3,1) * MAT(2,3) - MAT(2,1) * MAT(3,3)
        M(3,1) = MAT(2,1) * MAT(3,2) - MAT(3,1) * MAT(2,2)
        M(1,2) = MAT(1,3) * MAT(3,2) - MAT(1,2) * MAT(3,3)
        M(2,2) = MAT(1,1) * MAT(3,3) - MAT(1,3) * MAT(3,1)
        M(3,2) = MAT(1,2) * MAT(3,1) - MAT(3,2) * MAT(1,1)
        M(1,3) = MAT(1,2) * MAT(2,3) - MAT(1,3) * MAT(2,2)
        M(2,3) = MAT(2,1) * MAT(1,3) - MAT(2,3) * MAT(1,1)
        M(3,3) = MAT(1,1) * MAT(2,2) - MAT(1,2) * MAT(2,1)
C
C ---   CALCUL DU DETERMINANT
C
        DET = MAT(1,1)*M(1,1) + MAT(1,2)*M(2,1) + MAT(1,3)*M(3,1)
      ELSE
        CALL U2MESS('F','ALGORITH5_20')
      ENDIF
C
      IF (ABS(DET).LE.R8PREM()) THEN
        IF (STOP.EQ.'S') THEN
          CALL U2MESS('F','ALGORITH5_19')
        ELSEIF(STOP.EQ.'C') THEN
          DET = 0.D0
          GOTO 999
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
      ENDIF
C
C --- CALCUL DE L'INVERSE
C
      UNSDET = 1.D0/DET
      DO 10 JDIM = 1 , NDIM
        DO 20 IDIM = 1 , NDIM
C
          INV(IDIM,JDIM) = UNSDET * M(IDIM,JDIM)
C
 20     CONTINUE
 10   CONTINUE
C
 999  CONTINUE
      END
