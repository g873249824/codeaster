      SUBROUTINE NMASSX(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,CARCRI,FONACT,SDSTAT,
     &                  SDDYNA,VALINC,SOLALG,VEELEM,VEASSE,
     &                  SDTIME,LDCCVG,CODERE,CNDONN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER       LDCCVG
      INTEGER       FONACT(*)
      CHARACTER*19  LISCHA,SDDYNA
      CHARACTER*24  MODELE,NUMEDD,MATE, CODERE  
      CHARACTER*24  SDSTAT,SDTIME
      CHARACTER*24  CARELE,COMPOR,COMREF,CARCRI
      CHARACTER*19  SOLALG(*),VALINC(*)
      CHARACTER*19  VEASSE(*),VEELEM(*)
      CHARACTER*19  CNDONN
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C CALCUL DU SECOND MEMBRE POUR LA PREDICTION EN EXPLICITE
C
C ----------------------------------------------------------------------
C
C
C IN  MODELE : NOM DU MODELE
C IN  NUMEDD : NOM DE LA NUMEROTATION
C IN  MATE   : NOM DU CHAMP DE MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VALEURS DE REF DES VARIABLES DE COMMANDE
C IN  COMPOR : CARTE DECRIVANT LE TYPE DE COMPORTEMENT
C IN  LISCHA : SD LISTE DES CHARGES
C IN  CARCRI : CARTE DES CRITERES DE CONVERGENCE LOCAUX
C IN  SDSTAT : SD STATISTIQUES
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  SDDYNA : SD DYNAMIQUE
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  SDTIME : SD TIMER
C IN  VEELEM : VARIABLE CHAPEAU POUR NOM DES VECT_ELEM
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C OUT CNDONN : VECTEUR ASSEMBLE DES FORCES DONNEES
C OUT CODERE : CHAM_ELEM CODE RETOUR INTEGRATION LDC
C OUT LDCCVG : CODE RETOUR INTEGRATION DU COMPORTEMENT
C                0 - OK
C                1 - ECHEC DANS L'INTEGRATION : PAS DE RESULTATS
C                2 - ERREUR DANS LES LDC SUR LA NON VERIFICATION DE
C                    CRITERES PHYSIQUES 
C                3 - SIZZ NON NUL (DEBORST) ON CONTINUE A ITERER
C
C
C
C
      CHARACTER*19 CNFFDO,CNDFDO,CNFVDO,CNVADY
      CHARACTER*19 CNDUMM
      CHARACTER*19 CNDIRI,CNFINT,CNVCPR
      CHARACTER*19 VEDIRI,VEFINT
      CHARACTER*19 DEPMOI,VITMOI,ACCMOI
      INTEGER      ITERAT
      INTEGER      I,NBVEC
      REAL*8       COEF(8)
      CHARACTER*19 VECT(8)
      REAL*8       NDYNRE,COEEQU
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      ITERAT = 0
      CALL VTZERO(CNDONN)
      CNDUMM = '&&CNCHAR.DUMM'
      CNFFDO = '&&CNCHAR.FFDO'
      CNDFDO = '&&CNCHAR.DFDO'
      CNFVDO = '&&CNCHAR.FVDO'
      CNVADY = '&&CNCHAR.FVDY'
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VEASSE,'VEASSE','CNDIRI',CNDIRI)
      CALL NMCHEX(VEASSE,'VEASSE','CNFINT',CNFINT)
      CALL NMCHEX(VEELEM,'VEELEM','CNDIRI',VEDIRI)
      CALL NMCHEX(VEELEM,'VEELEM','CNFINT',VEFINT)
      CALL NMCHEX(VALINC,'VALINC','DEPMOI',DEPMOI)
      CALL NMCHEX(VALINC,'VALINC','VITMOI',VITMOI)
      CALL NMCHEX(VALINC,'VALINC','ACCMOI',ACCMOI)
C
C --- COEFFICIENTS POUR MULTI-PAS
C
      COEEQU  = NDYNRE(SDDYNA,'COEF_MPAS_EQUI_COUR')
C
C --- MESURES
C
      CALL NMTIME(SDTIME,'INI','SECO_MEMB')
      CALL NMTIME(SDTIME,'RUN','SECO_MEMB')
C
C --- CALCUL DU VECTEUR DES CHARGEMENTS FIXES        (NEUMANN)
C
      CALL NMASFI(FONACT,SDDYNA,VEASSE,CNFFDO,CNDUMM)
C
C --- CALCUL DU VECTEUR DES CHARGEMENTS FIXES        (DIRICHLET)
C
      CALL NMASDI(FONACT,VEASSE,CNDFDO,CNDUMM)
C
C --- CALCUL DU VECTEUR DES CHARGEMENTS VARIABLES    (NEUMANN)
C
      CALL NMASVA(SDDYNA,VEASSE,CNFVDO)
C
C --- CALCUL DU VECTEUR DES CHARGEMENTS VARIABLES DYNAMIQUES (NEUMANN)
C
      CALL NDASVA('PRED',SDDYNA,VEASSE,CNVADY)
C
C --- SECOND MEMBRE DES VARIABLES DE COMMANDE
C
      CALL NMCHEX(VEASSE,'VEASSE','CNVCPR',CNVCPR)
C
C --- CALCUL DES REACTIONS D'APPUI BT.LAMBDA
C
      CALL NMDIRI(MODELE,MATE  ,CARELE,LISCHA,SDDYNA,
     &            DEPMOI,VITMOI,ACCMOI,VEDIRI)
C
C --- ASSEMBLAGE DES REACTIONS D'APPUI
C   
      CALL ASSVEC('V'   ,CNDIRI,1     ,VEDIRI,1.D0  ,
     &            NUMEDD,' '   ,'ZERO',1     )
C
      CALL NMTIME(SDTIME,'END','SECO_MEMB')
C
C --- CALCUL DES FORCES INTERIEURES
C
      CALL NMFINT(MODELE,MATE  ,CARELE,COMREF,COMPOR,
     &            LISCHA,CARCRI,FONACT,ITERAT,SDDYNA,
     &            SDSTAT,SDTIME,VALINC,SOLALG,LDCCVG,
     &            CODERE,VEFINT)
C
C --- ASSEMBLAGE DES FORCES INTERIEURES
C     
      CALL ASSVEC('V'   ,CNFINT,1     ,VEFINT,1.D0  ,
     &            NUMEDD,' ','ZERO',1)
C
C --- CHARGEMENTS DONNES
C
      NBVEC   = 7
      COEF(1) = 1.D0
      COEF(2) = 1.D0
      COEF(3) = -1.D0
      COEF(4) = 1.D0
      COEF(5) = 1.D0
      COEF(6) = -1.D0
      COEF(7) = COEEQU
      VECT(1) = CNFFDO
      VECT(2) = CNFVDO
      VECT(3) = CNFINT
      VECT(4) = CNVCPR
      VECT(5) = CNDFDO
      VECT(6) = CNDIRI
      VECT(7) = CNVADY
C
C --- CHARGEMENT DONNE
C
      IF (NBVEC.GT.8) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
      DO 10 I = 1,NBVEC
        CALL VTAXPY(COEF(I),VECT(I),CNDONN)
 10   CONTINUE
C
      CALL JEDEMA()
      END
