       SUBROUTINE NMASSM(FONACT,LISCHA,SOLVEU,NUMEDD,NUMFIX,
     &                   TYPMAT,OPTASZ,MEELEM,MATASS)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/12/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*19  LISCHA,SOLVEU
      CHARACTER*24  NUMEDD,NUMFIX
      CHARACTER*6   TYPMAT
      CHARACTER*(*) OPTASZ      
      CHARACTER*19  MEELEM(8)
      CHARACTER*19  MATASS
      INTEGER       FONACT(*)
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL)
C
C ASSEMBLAGE DES MATRICES ELEMENTAIRES
C      
C ----------------------------------------------------------------------
C
C
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  LISCHA : LISTE DES CHARGEMENTS
C IN  OPTASS : OPTION D'ASSEMBLAGE
C IN  NUMEDD : NUME_DDL (VARIABLE AU COURS DU CALCUL)
C IN  NUMFIX : NUME_DDL (FIXE AU COURS DU CALCUL)
C IN  SOLVEU : SOLVEUR
C IN  MEELEM : ARIABLE CHAPEAU POUR NOM DES MATR_ELEM
C OUT MATASS : MATR_ASSE CALCULEE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      CHARACTER*19 MEDIRI,MEMASS,MEAMOR,MESSTR
      INTEGER      IFM,NIV   
      CHARACTER*16 OPTASS
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- INITIALISATIONS
C   
      OPTASS = OPTASZ
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><MATR> ASSEMBLAGE DES MATR_ELEM' //
     &                ' DE TYPE <',TYPMAT,'>'     
      ENDIF
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C 
      IF (MEELEM(1)(1:1).NE.' ') THEN 
        CALL NMCHEX(MEELEM,'MEELEM','MEDIRI',MEDIRI)
        CALL NMCHEX(MEELEM,'MEELEM','MEMASS',MEMASS)
        CALL NMCHEX(MEELEM,'MEELEM','MEAMOR',MEAMOR)
        CALL NMCHEX(MEELEM,'MEELEM','MESSTR',MESSTR)
      ENDIF                                  
C
C --- ASSEMBLAGE MATRICES ELEMENTAIRES
C
      IF (TYPMAT.EQ.'MERIGI') THEN   
        CALL ASMARI(FONACT,MEELEM,NUMEDD,SOLVEU,LISCHA,
     &              MATASS)   
      ELSEIF (TYPMAT.EQ.'MEAMOR') THEN               
        CALL ASMAAM(MEAMOR,NUMEDD,SOLVEU,LISCHA,MATASS)
        CALL MTDSCR(MATASS)        
      ELSEIF (TYPMAT.EQ.'MEMASS') THEN    
        IF (OPTASS.EQ.' ') THEN      
          CALL ASMAMA(MEMASS,' '   ,NUMFIX,SOLVEU,LISCHA,
     &                MATASS)
        ELSEIF (OPTASS.EQ.'AVEC_DIRICHLET') THEN 
          CALL ASMAMA(MEMASS,MEDIRI,NUMEDD,SOLVEU,LISCHA,
     &                MATASS) 
        ENDIF    
      ELSEIF (TYPMAT.EQ.'MESSTR') THEN           
        CALL ASMATR(1     ,MESSTR,' '   ,NUMFIX,SOLVEU,
     &              LISCHA,'ZERO','V'   ,1     ,MATASS)
        CALL MTDSCR(MATASS)
      ELSE  
        CALL ASSERT(.FALSE.)
      ENDIF         
C
C --- DEBUG
C
      IF (NIV.EQ.2) THEN
        CALL NMDEBG('MATA',MATASS,IFM   )
      ENDIF

C
      CALL JEDEMA()      
C
      END
