       SUBROUTINE NMASSM(FONACT,RESOCO,LISCHA,SOLVEU,NUMEDD,
     &                   INSTAM,INSTAP,TYPMAT,MEELEM,MATRIX)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*19  LISCHA,SOLVEU
      REAL*8        INSTAM,INSTAP
      CHARACTER*24  NUMEDD,RESOCO
      CHARACTER*5   TYPMAT
      CHARACTER*8   MEELEM(8)
      CHARACTER*19  MATRIX
      LOGICAL       FONACT(*)      
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL)
C
C ASSEMBLAGE DES MATRICES ELEMENTAIRES
C      
C ----------------------------------------------------------------------
C
C
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  RESOCO : SD CONTACT (RESOLUTION)
C IN  LISCHA : LISTE DES CHARGEMENTS
C IN  INSTAM : INSTANT MOINS
C IN  INSTAP : INSTANT PLUS
C IN  TYPMAT : TYPE DE MATRICE A CALCULER
C IN  NUMEDD : NUME_DDL
C IN  SOLVEU : SOLVEUR
C IN  MEMATR : MATR_ELEM DISPONIBLES
C OUT MATRIX : MATR_ASSE CALCULEE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      CHARACTER*8  MERIGI,MEDIRI,MEMASS,MEAMOR,MESUIV,MESSTR        
      INTEGER      IFM,NIV    
C      
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- INITIALISATIONS
C      
      MERIGI = MEELEM(1) 
      MEDIRI = MEELEM(2) 
      MEMASS = MEELEM(3) 
      MEAMOR = MEELEM(4)
      MESUIV = MEELEM(5)    
      MESSTR = MEELEM(6)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE><MATR> ASSEMBLAGE DES MATR_ELEM' //
     &                ' DE TYPE <',TYPMAT,'>'     
      ENDIF               
C
C --- ASSEMBLAGE MATRICES ELEMENTAIRES
C
      IF (TYPMAT.EQ.'RIGID') THEN
        CALL ASMARI(FONACT,RESOCO,MERIGI,MEDIRI,NUMEDD,
     &              SOLVEU,LISCHA,MATRIX)   
      ELSEIF (TYPMAT.EQ.'AMORT') THEN           
        CALL ASMAAM(MEAMOR,NUMEDD,SOLVEU,LISCHA,MATRIX)
        CALL MTDSCR(MATRIX)
      ELSEIF (TYPMAT.EQ.'MASSE') THEN       
        CALL ASMAMA(MEMASS,' '   ,NUMEDD,SOLVEU,LISCHA,
     &              MATRIX)
      ELSEIF (TYPMAT.EQ.'MASRI') THEN       
        CALL ASMAMA(MEMASS,MEDIRI,NUMEDD,SOLVEU,LISCHA,
     &              MATRIX)     
        CALL MTDSCR(MATRIX)
      ELSEIF (TYPMAT.EQ.'SUIVI') THEN       
        CALL ASCOMA(MESUIV,INSTAP,NUMEDD,SOLVEU,LISCHA,
     &              MATRIX) 
      ELSEIF (TYPMAT.EQ.'SSTRU') THEN    
C         
C --- LE CALCUL DES 'MATR_ELEM' DES SOUS-STRUC SE FAIT DANS ASSMAM
C
        CALL ASMATR(1     ,MESSTR,' '   ,NUMEDD,SOLVEU,
     &              LISCHA,'ZERO','V'   ,1     ,MATRIX)
        CALL MTDSCR(MATRIX)            
      ELSE  
        CALL ASSERT(.FALSE.)
      ENDIF
C
      CALL JEDEMA()      
C
      END
