      SUBROUTINE NMDECO(PARCRI,SDDISC,ITERAT,SDTIME,NUMINS,
     &                  ITEMAX,ERROR,ACTION)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/10/2010   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INTEGER      ACTION,ITERAT
      CHARACTER*24 SDTIME
      INTEGER      NUMINS
      CHARACTER*19 SDDISC   
      REAL*8       PARCRI(*)  
      LOGICAL      ITEMAX,ERROR
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C GESTION DE LA DECOUPE DU PAS DE TEMPS
C      
C ----------------------------------------------------------------------
C
C
C IN  PARCRI : CRITERES DE CONVERGENCE
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  ITERAT : NUMERO D'ITERATION DE NEWTON
C IN  SDTIME : SD TIMER
C IN  NUMINS : NUMERO D'INSTANTS
C I/O ITEMAX : .TRUE. SI ITERATION MAXIMUM ATTEINTE 
C OUT ACTION : CODE RETOUR ACTION
C               0 ARRET DU CALCUL
C               1 NOUVEAU PAS DE TEMPS
C               2 ON FAIT DES ITERATIONS DE NEWTON EN PLUS
C               3 ON FINIT LE PAS DE TEMPS
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C 
      INTEGER  RETOUR,IB,NOCC,IOCC
      LOGICAL  ARRET,LBID
      REAL*8   R8BID
      CHARACTER*8 K8BID,LCRIT
C 
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      ARRET  = (NINT(PARCRI(4)).EQ.0)
      ACTION = 0
C
C --- DECOUPE DU PAS DE TEMPS

C     NOCC : NOMBRE DE CAUSE DE SOUS-DECOUPAGE
      CALL UTDIDT('L',SDDISC,'ECHE',IB,'NB_OCC',R8BID,NOCC,K8BID)
C
C     A LA 1ERE CAUSE D'ECHEC VERIFIEE, ON SORT DE LA BOUCLE -> IOCC
      DO 10 IOCC =1,NOCC
        CALL UTDIDT('L',SDDISC,'ECHE',IOCC,'VERIF_EVEN',R8BID,IB,LCRIT)
        IF (LCRIT.EQ.'OUI') GOTO 20
 10   CONTINUE

 20   CONTINUE

C     VERIFICATION QU'IL A EU AU MOINS UNE CAUSE D'ECHEC
      CALL ASSERT(LCRIT.EQ.'OUI')

C     DECOUPAGE DU PAS DE TEMPS
      CALL DIDECO(SDDISC,NUMINS,ITERAT,IOCC,RETOUR)
C   
C --- FIN MESURE TEMPS ITERATION DE NEWTON
C        
      CALL NMTIME('FIN','ITE',SDTIME,LBID  ,R8BID )
C
      IF (RETOUR.EQ.0)  THEN
C      
C ---   LA SUBDIVISION S'EST BIEN PASSEE
        CALL NMTIME('FIN','PAS',SDTIME,LBID  ,R8BID)
        ACTION = 1

      ELSE IF (RETOUR.EQ.3) THEN
C      
C ---   AUTORISATION DE FAIRE DES ITERATIONS DE NEWTON EN PLUS  
        ACTION = 2
        ITEMAX = .FALSE.
        CALL NMTIME('DEBUT','ITE',SDTIME,LBID  ,R8BID ) 

      ELSEIF ((RETOUR.EQ.1).AND.(.NOT.ARRET).AND.ITEMAX) THEN
C
C ---   ON VA A LA SUBDIVISION OU AU PAS DE TEMPS SUIVANT
        ACTION = 3

      ELSEIF ((RETOUR.EQ.2).AND.(.NOT.ARRET)) THEN
C
C ---   ON VA A LA SUBDIVISION OU AU PAS DE TEMPS SUIVANT 
        ACTION = 3

      ELSE
C
C ---  ARRET DU CALCUL        
        ACTION = 0

      ENDIF      
C
      CALL JEDEMA()
      END
