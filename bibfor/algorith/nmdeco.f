      SUBROUTINE NMDECO(SDDISC,NUMINS,ITERAT,IEVDAC,RETDEC)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/04/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INTEGER      IEVDAC
      INTEGER      NUMINS,ITERAT
      CHARACTER*19 SDDISC
      INTEGER      RETDEC
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C GESTION DE L'ACTION DECOUPE DU PAS DE TEMPS
C
C ----------------------------------------------------------------------
C
C
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  IEVDAC : INDICE DE L'EVENEMENT ACTIF
C IN  NUMINS : NUMERO D'INSTANTS
C IN  ITERAT : NUMERO D'ITERATION DE NEWTON
C OUT RETDEC : CODE RETOUR DECOUPE
C     0 - ECHEC DE LA DECOUPE
C     1 - ON A DECOUPE
C     2 - PAS DE DECOUPE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      CHARACTER*16 SUBMET,METLIS
      REAL*8       R8BID,R8GAEM,DTMIN,DURDEC
      INTEGER      IBID
      INTEGER      NBRPAS
      REAL*8       DIINST,DELTAT,INSTAM,INSTAP
      REAL*8       INSREF,DELTAC
      CHARACTER*24 NOMLIS
      LOGICAL      LDCEXT
      INTEGER      RETDEX
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      RETDEC = 0
      RETDEX = -1
      DTMIN  = R8GAEM()
      NOMLIS = '&&NMDECO.LISTE'
      LDCEXT = .FALSE.
      DURDEC = -1.D0
C
C --- INFORMATIONS SUR LE PAS DE TEMPS
C
      CALL UTDIDT('L'   ,SDDISC,'LIST',IBID  ,'METHODE' ,
     &            R8BID ,IBID  ,METLIS)
      INSTAM = DIINST(SDDISC,NUMINS-1)
      INSTAP = DIINST(SDDISC,NUMINS)
      DELTAT = INSTAP-INSTAM
      INSREF = INSTAP
C
C --- METHODE DE SUBDIVISION
C
      CALL UTDIDT('L'   ,SDDISC,'ECHE',IEVDAC,'SUBD_METHODE',
     &            R8BID ,IBID  ,SUBMET)
C
C --- TYPE DE SUBDIVISION
C
      IF (SUBMET.EQ.'MANUEL') THEN
        CALL U2MESS('I','SUBDIVISE_1')
      ELSEIF (SUBMET.EQ.'AUTO') THEN
        CALL U2MESS('I','SUBDIVISE_2')
      ELSEIF (SUBMET .EQ. 'AUCUNE') THEN
        CALL U2MESS('I','SUBDIVISE_3')
        RETDEC = 0
        GOTO 999
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- DECOUPE DU PAS DE TEMPS
C 
      IF (SUBMET.EQ.'MANUEL') THEN
        CALL NMDECM(SDDISC,IEVDAC,NOMLIS,INSTAM,DELTAT,
     &              NBRPAS,DTMIN ,RETDEC)
        LDCEXT = .FALSE.
        DURDEC = -1.D0
      ELSEIF (SUBMET.EQ.'AUTO') THEN
        CALL NMDECA(SDDISC,ITERAT,IEVDAC,NOMLIS,INSTAM,
     &              DELTAT,NBRPAS,DTMIN ,LDCEXT,DURDEC,
     &              RETDEC)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF   
C
C --- PAS DE DECOUPE: ON SORT
C
      IF (RETDEC.EQ.0) THEN
        CALL U2MESS('I','SUBDIVISE_60')
        GOTO 999
      ELSEIF (RETDEC.EQ.2) THEN
        CALL U2MESS('I','SUBDIVISE_62')
C
C ----- EN GESTION AUTO, IL EST NECESSAIRE D'ACTIVER LA POST-DECOUPE
C
        IF ((RETDEC.EQ.2).AND.(METLIS.EQ.'AUTO')) THEN
          GOTO 888
        ELSE
          GOTO 999
        ENDIF
      ENDIF
C
C --- VERIFICATIONS DE LA DECOUPE
C
      CALL NMDECV(SDDISC,NUMINS,IEVDAC,DTMIN ,RETDEC)
      IF (RETDEC.EQ.0) THEN
        CALL U2MESS('I','SUBDIVISE_60')
        GOTO 999
      ENDIF
      CALL U2MESS('I','SUBDIVISE_61')
C
C --- MISE A JOUR DES SD APRES DECOUPE
C
      CALL NMDCDC(SDDISC,NUMINS,NOMLIS,NBRPAS)
C
C --- EXTENSION DE LA DECOUPE AUX PAS SUIVANTS
C
 888  CONTINUE
      IF (LDCEXT) THEN
        INSTAM = DIINST(SDDISC,NUMINS-1)
        INSTAP = DIINST(SDDISC,NUMINS)
        DELTAC = INSTAP-INSTAM
        IF (METLIS.EQ.'MANUEL') THEN
          CALL NMDCEX(SDDISC,INSREF,DURDEC,IEVDAC,DELTAC,
     &                RETDEX)
        ELSEIF (METLIS.EQ.'AUTO') THEN
          CALL NMDCAX(SDDISC,INSREF,NUMINS,DURDEC,DELTAC)
          RETDEX = 1
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
        IF (RETDEX.EQ.0) RETDEC = 0
      ENDIF
C
 999  CONTINUE
C
      CALL JEDETR(NOMLIS)
C
      CALL JEDEMA()
      END
