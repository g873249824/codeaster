      SUBROUTINE NMPOST(MODELE,NOMA  ,NUMEDD,NUMFIX,CARELE,
     &                  COMPOR,SOLVEU,NUMINS,MATE  ,COMREF,
     &                  LISCHA,DEFICO,RESOCO,RESOCU,PARMET,
     &                  PARCON,FONACT,CARCRI,SDIMPR,SDSTAT,
     &                  SDDISC,SDTIME,SDOBSE,SDERRO,SDIETO,
     &                  SDDYNA,SDPOST,VALINC,SOLALG,MEELEM,
     &                  MEASSE,VEELEM,VEASSE,SDENER,SDCRIQ,
     &                  ETA   )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 31/07/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'
      INTEGER      NUMINS
      CHARACTER*8  NOMA  
      REAL*8       PARMET(*),PARCON(*),ETA
      CHARACTER*19 MEELEM(*)
      CHARACTER*24 RESOCO,DEFICO,RESOCU
      CHARACTER*24 SDIETO
      CHARACTER*19 SOLVEU
      CHARACTER*19 LISCHA,SDENER
      CHARACTER*19 SDDISC,SDDYNA,SDPOST,SDOBSE
      CHARACTER*24 MODELE,NUMEDD,NUMFIX,COMPOR
      CHARACTER*19 VEELEM(*),MEASSE(*),VEASSE(*)
      CHARACTER*19 SOLALG(*),VALINC(*)
      CHARACTER*24 SDIMPR,SDSTAT,SDTIME,SDERRO,SDCRIQ
      CHARACTER*24 MATE,CARELE
      CHARACTER*24 CARCRI,COMREF
      INTEGER      FONACT(*)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C CALCULS DE POST-TRAITEMENT
C
C ----------------------------------------------------------------------
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  NUMFIX : NUME_DDL (FIXE AU COURS DU CALCUL)
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : LISTE DES CHARGES
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  DEFICO : SD DEFINITION CONTACT
C IN  SDIMPR : SD AFFICHAGE
C IN  SDTIME : SD TIMER
C IN  SDSTAT : SD STATISTIQUES
C IN  SDDYNA : SD POUR LA DYNAMIQUE
C IN  SDDYNA : SD POUR LA DYNAMIQUE
C IN  SDIETO : SD GESTION IN ET OUT
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION (VOIR NMLECT)
C IN  SOLVEU : SOLVEUR
C IN  CARCRI : PARAMETRES METHODES D'INTEGRATION LOCALES (VOIR NMLECT)
C IN  NUMINS : NUMERO D'INSTANT
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  SDPOST : SD POUR POST-TRAITEMENTS (CRIT_STAB ET MODE_VIBR)
C IN  SDCRIQ : SD CRITERE QUALITE
C
C ----------------------------------------------------------------------
C
      LOGICAL      ISFONC,LMVIB,LFLAM,LERRT,LCONT,LENER
      CHARACTER*4  ETFIXE
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- FONCTIONNALITES ACTIVEES
C
      LCONT  = ISFONC(FONACT,'CONTACT')
      LERRT  = ISFONC(FONACT,'ERRE_TEMPS_THM')
      LMVIB  = ISFONC(FONACT,'MODE_VIBR')
      LFLAM  = ISFONC(FONACT,'CRIT_STAB')
      LENER  = ISFONC(FONACT,'ENERGIE')
C
C --- LE PAS FIXE A NECESSAIREMENT CONVERGE
C
      CALL NMLEEB(SDERRO,'FIXE',ETFIXE)
      IF (ETFIXE.NE.'CONV') THEN
        GOTO 99
      ENDIF
C
C --- CALCUL EVENTUEL DE L'INDICATEUR D'ERREUR TEMPORELLE THM
C
      IF (LERRT) THEN
        CALL NMETCA(MODELE,NOMA  ,MATE  ,SDDISC,SDCRIQ,
     &              NUMINS,VALINC)
      ENDIF
C
C --- POST_TRAITEMENT DU CONTACT
C
      IF (LCONT) THEN
        CALL CFMXPO(NOMA  ,MODELE,DEFICO,RESOCO,NUMINS,
     &              SDDISC,SDSTAT,SOLALG,VALINC,VEASSE)
      ENDIF
C
C --- CALCUL DE POST-TRAITEMENT: STABILITE ET MODES VIBRATOIRES
C
      IF (LMVIB.OR.LFLAM) THEN
        CALL NMTIME(SDTIME,'INI','POST_TRAITEMENT')
        CALL NMTIME(SDTIME,'RUN','POST_TRAITEMENT')
        CALL NMSPEC(MODELE,NUMEDD,NUMFIX,CARELE,COMPOR,
     &              SOLVEU,NUMINS,MATE  ,COMREF,LISCHA,
     &              DEFICO,RESOCO,PARMET,FONACT,CARCRI,
     &              SDIMPR,SDSTAT,SDTIME,SDDISC,VALINC,
     &              SOLALG,MEELEM,MEASSE,VEELEM,SDDYNA,
     &              SDPOST,SDERRO)
        CALL NMTIME(SDTIME,'END','POST_TRAITEMENT')
      ENDIF
C
C --- CALCUL DES ENERGIES
C
      IF (LENER) THEN
        CALL NMENER(VALINC,VEASSE,MEASSE,SDDYNA,ETA   ,
     &              SDENER,FONACT,SOLVEU,NUMEDD,NUMFIX,
     &              MEELEM,NUMINS,MODELE,MATE  ,CARELE,
     &              COMPOR,CARCRI,SDTIME,SDDISC,SOLALG,
     &              LISCHA,COMREF,RESOCO,RESOCU,PARCON,
     &              VEELEM)
      ENDIF
C
C --- OBSERVATION EVENTUELLE
C
      CALL NMOBSV(NOMA  ,SDDISC,SDIETO,SDOBSE,NUMINS)
C
 99   CONTINUE
C
      CALL JEDEMA()
C
      END
