      SUBROUTINE STRENT(C,PHI,S1,S3,SM,SUC,SUCM,SUCC,
     *SUCP1,SUCP2,SMAX,TT)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 03/10/2000   AUTEUR UFBHHLL C.CHAVANT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C     THIS SUBROUTINE CACCULATES THE STRENGTH
      IMPLICIT NONE 
      REAL*8  CC,PP,SL,SUCP1,SUCP2,TT,FACTOR,SMAX
      REAL*8  S1,S3,SM,SUC,SUCM,SUCC,PHI,C
      DATA FACTOR /0.0174532925199432D0/
C
      IF(SUC.LT.0.D0) SUC=0.D0
      CC=C+SUC*SUCC
      PP=PHI/FACTOR
      SL=SUC/SUCP2
      IF(SL.GE.1.D0) GO TO 100
      PP=SUCP1+(PP-SUCP1)*(1.D0-SL)**2.D0
      GO TO 200
100   CONTINUE   
      PP=SUCP1
200   CONTINUE
      PP=PP*EXP(.002D0*TT)
      PP=PP*FACTOR
      IF(S1.EQ.0.D0)THEN
      SMAX=0.D0
      ELSE
      SMAX=(1.D0-SIN(PP))*ABS(S1-SM)/
     &        (2.D0*CC*COS(PP)+2.D0*ABS(SM)*SIN(PP))
      ENDIF
      END
