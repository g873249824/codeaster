      SUBROUTINE NMINIT(RESULT,MODELE,MODEDE,NUMEDD,MATE,SOLVDE,NUMEDE,
     &                 COMPOR,CARELE,MEMASS,MASSE,MEDIRI,LISCHA,DEPPLU,
     &                 DEPMOI,SIGPLU,SIGMOI,VARPLU,VARMOI,VALMOI,VITPLU,
     &                 ACCPLU,MAPREC,SOLVEU,DEPENT,VITENT,ACCENT,CARCRI,
     &                 COMMOI,COMPLU,VARDEP,LAGDEP,VARIGV,CNFEDO,CNFEPI,
     &                 CNDIDO,CNDIPI,CNFSDO,CNFSPI,CNDIDI,CNCINE,DEPKM1,
     &                 VITKM1,ACCKM1,ROMKM1,ROMK  ,DDEPLA,FONDEP,FONVIT,
     &                 FONACC,MULTAP,PSIDEL,VALPLU,SECMBR,POUGD ,MULTIA,
     &                 PARTPS,NURO  ,REAROT,VARDEM,LAGDEM,PILOTE,DEFICO,
     &                 RESOCO,CRITNL,ZFON  ,FONACT,CMD   ,NBMODS,CNVFRE,
     &                 PARCON,PARCRI,NBPASE,INPSCO,LISCH2,NBOBSE,NUINS0,
     &                 LOBSER,NUOBSE,NOMTAB,MAILL2,NBOBAR,LISINS,LISOBS,
     &                 INSTAM,IMPRCO,SUIVCO,DEFICU,RESOCU)

C MODIF ALGORITH  DATE 25/04/2006   AUTEUR CIBHHPD L.SALMONA 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_21 CRP_20

      IMPLICIT NONE
      INTEGER      ZFON
      LOGICAL      REAROT,FONACT(ZFON),LOBSER
      INTEGER      NBMODS,NBPASE
      INTEGER      NBOBSE, NUINS0,NUOBSE,NBOBAR
      REAL*8       PARCON(5),PARCRI,INSTAM
      CHARACTER*8  MODEDE,RESULT,MAILL2
      CHARACTER*19 NOMTAB,LISOBS
      CHARACTER*13 INPSCO
      CHARACTER*14 PILOTE
      CHARACTER*16 CMD
      CHARACTER*19 SOLVEU,SOLVDE,NURO,PARTPS,CRITNL
      CHARACTER*19 LISCHA,LISCH2
      CHARACTER*19 MAPREC,CNVFRE
      CHARACTER*24 MODELE,COMPOR,NUMEDD,NUMEDE
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*24 CARCRI,LISINS
      CHARACTER*24 DEPENT,VITENT,ACCENT,MASSE
      CHARACTER*24 MATE,CARELE,MEMASS,MEDIRI
      CHARACTER*24 VITPLU, ACCPLU
      CHARACTER*24 DEPMOI, SIGMOI, VARMOI, COMMOI, VALMOI(8)
      CHARACTER*24 DEPPLU, SIGPLU, VARPLU, COMPLU, VALPLU(8)
      CHARACTER*24 VARDEM, LAGDEM
      CHARACTER*24 VARDEP, LAGDEP
      CHARACTER*24 DDEPLA
      CHARACTER*24 CNFEDO, CNFEPI, CNFSDO, CNFSPI
      CHARACTER*24 CNDIDI, CNDIDO, CNDIPI
      CHARACTER*24 CNCINE, VARIGV
      CHARACTER*24 DEPKM1, VITKM1, ACCKM1, ROMKM1
      CHARACTER*24 ROMK,   FONDEP, FONVIT, FONACC, MULTAP, PSIDEL
      CHARACTER*24 SECMBR(8), POUGD(8), MULTIA(8)
      CHARACTER*24 IMPRCO, SUIVCO
      CHARACTER*24 DEFICU,RESOCU
C ---------------------------------------------------------------------
C
C               COMMANDES STAT/DYNA_NON_LINE : INITIALISATIONS
C
C ---------------------------------------------------------------------
C
C       IN RESULT K8   NOM UTILISATEUR DU RESULTAT DE STAT_NON_LINE
C       IN MODELE K24  MODELE MECANIQUE
C       IN MODEDE K8   MODELE NON LOCAL
C      OUT NUMEDD K24  NOM DE LA NUMEROTATION MECANIQUE
C       IN MATE   K24  NOM DU CHAMP DE MATERIAU
C       IN SOLVDE K19  NOM DU SOLVEUR DU LAGRANGIEN AUGMENTE
C      OUT NUMEDE K24  NOM DE LA NUMEROTATION NON LOCALE
C       IN COMPOR K24  CARTE COMPORTEMENT
C       IN CARELE K24  CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN/JXOUT MEMASS K24  MATRICES ELEMENTAIRES DE MASSE
C IN/JXOUT MASSE  K19  MATRICES DE MASSE ASSEMBLEE
C IN/JXOUT MEDIRI K24  MATRICES ELEMENTAIRES DE RIGIDITE DIRICHLET
C       IN LISCHA K19  SD L_CHARGE
C IN/JXOUT DEPPLU K24  DEPLACEMENT INSTANT PLUS
C IN/JXOUT DEPMOI K24  DEPLACEMENTS INITIAUX
C IN/JXOUT SIGPLU K24  CONTRAINTES INSTANT PLUS
C IN/JXOUT SIGMOI K24  CONTRAINTES  INITIALES
C IN/JXOUT VARPLU K24  VARIABLES INSTANT PLUS
C IN/JXOUT VARMOI K24  VARIABLES INTERNES INITIALES
C IN/JXOUT VALMOI K24  VARIABLE CHAPEAU ETAT INITAL
C IN/JXOUT VITPLU K24  VITESSE INSTANT PLUS
C IN/JXOUT ACCPLU K24  ACCELERATION INSTANT PLUS
C IN/JXOUT MAPREC K19  MATRICE PRECONDITIONNEMENT
C      IN  SOLVEU K19  NOM DU SOLVEUR DE NEWTON
C IN/JXOUT DEPENT K24  CHAMP MULTI APPUI
C IN/JXOUT VITENT K24  CHAMP MULTI APPUI
C IN/JXOUT ACCENT K24  CHAMP MULTI APPUI
C IN/JXOUT CARCRI K24  CARTE DES CRITERES DE CONVERGENCE LOCAUX
C IN/JXOUT COMMOI K24  VARIABLES DE COMMANDE INSTANT MOINS
C IN/JXOUT COMPLU K24  VARIABLES DE COMMANDE INSTANT PLUS
C IN/JXOUT VARDEP K24  VARIABLES INTERNES MODELISATION NON LOCALE
C IN/JXOUT LAGDEP K24  MULTIPLICATEURS MODELISATION NON LOCALE
C IN/JXOUT VARIGV K24  GRADIENT VARIABLE MODELISATION NON LOCALE
C IN/JXOUT CNFEDO K24  CHARGEMENT FORCES FIXES
C IN/JXOUT CNFEPI K24  CHARGEMENT FORCES PILOTEES
C IN/JXOUT CNDIDO K24  CHARGEMENT DIRICHLETS FIXES
C IN/JXOUT CNDIPI K24  CHARGEMENT DIRICHLET PILOTES
C IN/JXOUT CNFSPI K24  CHARGEMENT FORCES SUIVEUSES
C IN/JXOUT CNDIDI K24  DIRICHLET DIFFERENTIEL B_DIDI.U_REF
C IN/JXOUT CNCINE K24  CHARGES CINEMATIQUES
C IN/JXOUT DEPKM1 K24  DEPLACEMENT ITERATION MOINS
C IN/JXOUT VITKM1 K24  VITESSE ITERATION MOINS
C IN/JXOUT ACCKM1 K24  ACCELERATION ITERATION MOINS
C IN/JXOUT ROMKM1 K24  VECTEUR ROTATION ITERATION MOINS
C IN/JXOUT ROMK   K24  VECTEUR ROTATION ITERATION COURANTE
C IN/JXOUT DDEPLA K24  INCREMENT DEPLACEMENT
C IN/JXOUT FONDEP K24  NOM DE LA FONCTION DEPLACEMENT
C IN/JXOUT FONVIT K24  NOM DE LA FONCTION VITESSE
C IN/JXOUT FONACC K24  NOM DE LA FONCTION ACCELERATION
C IN/JXOUT MULTAP K24  INFOS MULTIAPPUIS
C IN/JXOUT PARTPS K24  INFOS SUR DISCRETISATION TEMPORELLE
C IN/JXOUT NURO   K19  NUMEROTATION DES DDL DE GRANDES ROTATIONS
C      OUT REAROT  L   .TRUE. S'IL Y A DES DDL DE GRANDES ROTATIONS
C IN/JXOUT VARDEM K24  VARIABLES NON LOCALES INITIALES
C IN/JXOUT LAGDEM K24  MULTIPLICATEURS DE LAGRANGE NON LOCAUX INITIAUX
C IN/JXOUT PILOTE K14  SD ASSOCIEE AU PILOTAGE
C      OUT DEFICO K24  SD DE DEFINITION DU CONTACT
C IN/JXOUT RESOCO K24  SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN       DEFICU K24  SD DEF. LIAISON_UNILATERALE
C IN       RESOCU K24  SD RES. LIAISON_UNILATERALE
C IN/JXOUT IMPRCO K24  SD AFFICHAGE
C IN/JXOUT SUIVCO K24  SD SUIVI DES DDLS
C IN/JXOUT CRITNL K19  SD ARCHIVAGE DES PARAMETRES A CONVERGENCE
C       IN ZFON    I   LONGUEUR DU VECTEUR FONACT
C      OUT FONACT  L   FONCTIONNALITES SPECIFIQUES ACTIVEES (CF NMFONC)
C       IN CMD    K16  NOM DE LA COMMANDE
C                         STAT_NON_LINE
C                         DYNA_NON_LINE
C                         DYNA_TRAN_EXPLI
C       IN NBMODS  I   NOMBRE MODES STATIQUES MODELISATION MULTI-APPUI
C IN/JXOUT CNVFRE K19  FORCE DE REFERENCE POUR CONVERGENCE EN REFERENCE
C       IN PARCON  R8  PARAMETRES DU CRITERE DE CONVERGENCE REFERENCE
C                         SI PARCRI(6)=RESI_CONT_RELA != R8VIDE()
C                            1 : SIGM_REFE
C                            2 : FLUX_THER_REFE
C                            3 : FLUX_HYD1_REFE
C                            4 : FLUX_HYD2_REFE
C       IN PARCRI  R8  PARCRI(6) = RESI_CONT_RELA : R8VIDE SI NON ACTIF
C       IN NBPASE  I   NOMBRE DE PARAMETRES SENSIBLES
C       IN INPSCO K13  SD CONTENANT LISTE DES NOMS POUR SENSIBILITE
C IN/JXOUT LISCH2 K19  NOM DE LA SD INFO CHARGE POUR STOCKAGE DANS LA SD
C                       RESULTAT
C      OUT  NBOBSE   NOMBRE DE PAS A OBSERVER
C      OUT  NUINS0   NUMERO DU PREMIER INSTANT DE CALCUL DANS LISTE
C                      D'INSTANT D'OBSERVATION
C      OUT  LOBSER   BOOLEEN OBSERVATION
C       IN  INSTAM   PREMIER INSTANT DE CALCUL
C       IN  RESULT   NOM UTILISATEUR DU RESULTAT
C      OUT  NUOBSE   ??
C      OUT  NOMTAB   NOM DE LA TABLE RESULTAT DE L'OBSERVATION
C      OUT  MAILL2   MAILLAGE OBSERVATION (?)
C      OUT  NBOBAR   LONGUEUR DU CHAMP OBSERVE
C      OUT  LISINS   LISTE D'INSTANTS DE L'OBSERVATION
C IN/JXOUT  LISOBS   SD LISTE OBSERVATION
C      OUT  INSTAM   INSTANT INITIAL
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C       19/03/04 (OB): PAR ADHERENCE A NUMER2.
C----------------------------------------------------------------------
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ---------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX -----------------------------
C
      INTEGER      NEQ,LONDE,JCRR,JCRK,IRET,IBID,N1
      INTEGER      DERNIE,NRPASE,IAUX,JAUX,NOPTI
      REAL*8       R8BID,DIINST
      COMPLEX*16   CBID
      CHARACTER*8  MAILLA,K8BID
      CHARACTER*14 NUPOSS
      CHARACTER*16 K16BID,OPMASS
      CHARACTER*19 LIGREL
      CHARACTER*24 K24BLA,TEXTE
      CHARACTER*24 NOOJB
C
C ---------------------------------------------------------------------
C
C
C --- INITIALISATIONS
C

      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,MAILLA,IRET)
C
C -- DEFINITION DES NOMS DES CHAMPS
C
      IAUX = 0
      JAUX = 4
      CALL PSNSLE(INPSCO,IAUX,JAUX,DEPPLU)
      JAUX = 5
      CALL PSNSLE(INPSCO,IAUX,JAUX,DEPMOI)
      JAUX = 8
      CALL PSNSLE(INPSCO,IAUX,JAUX,SIGPLU)
      JAUX = 9
      CALL PSNSLE(INPSCO,IAUX,JAUX,SIGMOI)
      JAUX = 10
      CALL PSNSLE(INPSCO,IAUX,JAUX,VARPLU)
      JAUX = 11
      CALL PSNSLE(INPSCO,IAUX,JAUX,VARMOI)
      IF (CMD(1:4).EQ.'DYNA') THEN
        JAUX = 14
        CALL PSNSLE(INPSCO,IAUX,JAUX,VITPLU)
        JAUX = 16
        CALL PSNSLE(INPSCO,IAUX,JAUX,ACCPLU)
        JAUX = 18
        CALL PSNSLE(INPSCO,IAUX,JAUX,DEPENT)
        JAUX = 20
        CALL PSNSLE(INPSCO,IAUX,JAUX,VITENT)
        JAUX = 22
        CALL PSNSLE(INPSCO,IAUX,JAUX,ACCENT)
      END IF


C -- CREATION DE VARIABLES "CHAPEAU" POUR STOCKER LES NOMS
C      VALMOI : ETAT EN T-
C      VALPLU : ETAT EN T+
C      SECMBR : CHARGEMENTS
C      POUGD  : INFOS POUTRES EN GRANDES ROTATIONS
C      MULTIA : INFOS MULTI-APPUI

      CALL AGGLOM (DEPMOI, SIGMOI, VARMOI, COMMOI,
     &             K24BLA, K24BLA, K24BLA, K24BLA, 4, VALMOI)
      CALL AGGLOM (DEPPLU, SIGPLU, VARPLU, COMPLU,
     &             VARDEP, LAGDEP, VARIGV, K24BLA, 7, VALPLU)
      CALL AGGLOM (CNFEDO, CNFEPI, CNDIDO, CNDIPI,
     &             CNFSDO, CNFSPI, CNDIDI, CNCINE, 8, SECMBR)
      CALL AGGLOM (DEPKM1, VITKM1, ACCKM1, VITPLU,
     &             ACCPLU, ROMKM1, ROMK  , DDEPLA, 8, POUGD )
      CALL AGGLOM (FONDEP, FONVIT, FONACC, MULTAP,
     &             PSIDEL, K24BLA, K24BLA, K24BLA, 5, MULTIA )

C-----------------------------------------------------------------------
C
C     NUMEROTATION ET CREATION DU PROFIL DE LA MATRICE
C
C-----------------------------------------------------------------------

C -- INCONNUES DE TYPE DEPLACEMENT
      NUMEDD = '12345678.NUMED'
      NOOJB  = '12345678.00000.NUME.PRNO'
      CALL GNOMSD ( NOOJB,10,14 )
      NUMEDD = NOOJB(1:14)
      CALL RSNUME(RESULT,'DEPL',NUPOSS)
      CALL NUMERO(NUPOSS,MODELE,LISCHA,SOLVEU,'VG',NUMEDD)

      DO 10 NRPASE=NBPASE,0,-1
        IAUX = NRPASE
        JAUX = 5
        CALL PSNSLE(INPSCO,IAUX,JAUX,DEPMOI)
        CALL VTCREB(DEPMOI,NUMEDD,'V','R',NEQ)
        IF (CMD(1:4).EQ.'DYNA') THEN
          JAUX = 14
          CALL PSNSLE(INPSCO,IAUX,JAUX,VITPLU)
          CALL VTCREB(VITPLU,NUMEDD,'V','R',NEQ)
          JAUX = 16
          CALL PSNSLE(INPSCO,IAUX,JAUX,ACCPLU)
          CALL VTCREB(ACCPLU,NUMEDD,'V','R',NEQ)
        END IF
10    CONTINUE

C -- INCONNUES DE TYPE VARIABLES NON LOCALES

      IF (MODEDE.NE.' ') THEN
        NUMEDE = '12345678.NUMED'
        LIGREL = MODEDE(1:8) // '.MODELE'
        NOOJB='12345678.00000.NUME.PRNO'
        CALL GNOMSD ( NOOJB,10,14 )
        NUMEDE=NOOJB(1:14)
        CALL RSNUME(RESULT,'VARI_NON_LOCAL',NUPOSS)
        CALL NUMER2(NUPOSS,1,LIGREL,'DDL_NLOC',SOLVDE,'VG',NUMEDE,IBID)
        CALL VTCREB(VARDEM,NUMEDE,'V','R',LONDE)
      END IF

C
C --- CREATION DE LA STRUCTURE DE DONNEE DE CONTACT
C
      CALL CFCRSD(MAILLA,LISCHA,NUMEDD,NEQ,DEFICO,RESOCO)
C
C --- CREATION DE LA STRUCTURE DE LIAISON_UNILATERALE
C
      CALL CUCRSD(MAILLA,LISCHA,NUMEDD,NEQ,DEFICU,RESOCU)
C
C --- DEPLACEMENTS, CONTRAINTES ET VARIABLES INTERNES INITIAUX
C
      CALL DESAGG(VALMOI,K24BLA,SIGMOI,VARMOI,COMMOI,K24BLA,K24BLA,
     &            K24BLA,K24BLA)

      IF (CMD(1:4).EQ.'STAT') THEN
        CALL NMDOET(RESULT,MODELE,MODEDE,COMPOR,CARELE,INSTAM,DEPMOI,
     &              SIGMOI,VARMOI,VARDEM,LAGDEM,NBPASE,INPSCO)
      ELSE
        IF (CMD(1:15).EQ.'DYNA_TRAN_EXPLI') THEN
          CALL GETVTX(' ','MASS_DIAG',1,1,1,TEXTE,N1)
          IF (TEXTE(1:3).EQ.'OUI') THEN
            OPMASS='MASS_MECA_DIAG'
          ELSE
            OPMASS='MASS_MECA'
          ENDIF
        ELSE
          OPMASS='MASS_MECA'
        ENDIF
        CALL NDDOET(RESULT,MODELE,MODEDE,NUMEDD,MATE,COMPOR,CARELE,
     &              MEMASS,OPMASS,MASSE,MEDIRI,LISCHA,INSTAM,COMMOI,
     &              DEPMOI,VITPLU,ACCPLU,SIGMOI,VARMOI,MAPREC,SOLVEU,
     &              CARCRI,VARDEM,LAGDEM,PARTPS,NBPASE,INPSCO,DEFICO)
      END IF
C
C --- DISCRETISATION DU CALCUL
C       * CREATION DE LA SD DISCRETISATION
C       * CREATION DE LA SD ARCHIVAGE
C       * CREATION DE LA SD OBSERVATION
C
      CALL JEEXIN(RESULT//'           .DESC',IRET)
      IF (IRET.EQ.0) THEN
        DERNIE = 0
      ELSE
        CALL RSORAC(RESULT,'DERNIER',IBID,R8BID,K8BID,CBID,0.D0,
     &              'ABSOLU',DERNIE,1,IBID)
      END IF
      CALL DIINIT(INSTAM,PARTPS,DERNIE,RESULT,NBOBSE,NUINS0,LOBSER,
     &            NUOBSE,NOMTAB,MAILL2,NBOBAR,LISINS(1:19),LISOBS,
     &            MATE,CARELE,CMD)
C
C --- OPTIMISATION LISTE D'INSTANT (OPTI_LIST_INST)
C
      CALL GETVTX('INCREMENT','OPTI_LIST_INST',1,1,1,TEXTE,N1)
      NOPTI = 0
      IF (N1 .NE. 0) THEN
        CALL OPTILI(RESULT,MODELE,MATE,LISCHA,PARTPS,NOPTI)
      ENDIF

C -- CREATION DE LA SD POUR ARCHIVAGE DES INFORMATIONS DE CONVERGENCE

      CALL WKVECT(CRITNL//'.CRTR','V V R8',7,JCRR)
      CALL WKVECT(CRITNL//'.CRDE','V V K16',7,JCRK)
      ZK16(JCRK)   = 'ITER_GLOB'
      ZK16(JCRK+1) = 'ITER_LINE'
      ZK16(JCRK+2) = 'RESI_GLOB_RELA'
      ZK16(JCRK+3) = 'RESI_GLOB'
      ZK16(JCRK+4) = 'ETA_PILOTAGE'
      ZK16(JCRK+5) = 'CHAR_MINI'
      ZK16(JCRK+6) = 'RESI_GLOB_MOINS'
C
C --- CREATION DE LA SD POUR ARCHIVAGE DES INFORMATIONS DE CONVERGENCE
C
      CALL NMNOLI(COMPOR,PARTPS,CRITNL,DERNIE,VARDEM,LAGDEM,
     &           CMD,VITPLU,ACCPLU,NBMODS,DEPENT,VITENT,ACCENT,
     &           NBPASE,INPSCO,MODELE,MATE,CARELE,LISCH2)


C -- INITIALISATIONS LIEES AUX POUTRES EN GRANDS DEPLACEMENTS

      CALL NUROTA(NUMEDD(1:14),COMPOR(1:19),NURO,REAROT)

C -- CONSTRUCTION DU CHAM_NO ASSOCIE AU PILOTAGE

      CALL NMDOPI(MODELE,NUMEDD,PILOTE)

C -- LECTURE DU DEPLACEMENT DE REFERENCE POUR DIRICHLET DIFFERENTIEL

      CALL NMDIDI(MODELE,NUMEDD,LISCHA,DEPMOI,CNDIDI)

C -- FONCTIONNALITES ACTIVEES

      CALL NMFONC(ZFON,PARCRI,SOLVEU,MODELE,DEFICO,DEFICU,MODEDE,
     &            FONACT)

C -- CONVERGENCE SUR CRITERE EN CONTRAINTE GENERALISEE

      IF (FONACT(8)) THEN
        CALL NMREFE(MODELE,COMPOR,NUMEDD,MATE,CARELE,
     &              CARCRI,DEPMOI,PARCON,CNVFRE)
      ENDIF

C -- INSTANT COURANT

      INSTAM = DIINST(PARTPS, 0)

C -- CREATION DE LA SD DU SUIVI DES DDLS

      IF (CMD(1:15).EQ.'DYNA_TRAN_EXPLI') THEN
        CALL SUIINI(SUIVCO,.FALSE.)
      ELSE
        CALL SUIINI(SUIVCO,.TRUE.)
      ENDIF

C -- CREATION DE LA SD AFFICHAGE

      CALL IMPINI(IMPRCO,SUIVCO,ZFON,FONACT)

C -- AFFICHAGE: INITIALISATION

      CALL NMIMPR('INIT',' ',' ',0.D0,0)
      IF (NOPTI.NE.0) THEN
         CALL NMIMPR('IMPR','OPTI_LIST',K16BID,0.D0,NOPTI)
      ENDIF

      END
