      SUBROUTINE NMINIT(RESULT,MODELE,MODEDE,NUMEDD,MATE,SOLVDE,NUMEDE,
     &                  COMPOR,CARELE,MEMASS,MEDIRI,LISCHA,DEPMOI,
     &                  VALMOI,VITPLU,ACCPLU,MAPREC,SOLVEU,CARCRI,
     &                  PARTPS,NURO,REAROT,VARDEM,LAGDEM,CNDIDI,PILOTE,
     &                  DEFICO,RESOCO,CRITNL,FONACT,CMD,DEPENT,VITENT,
     &                  ACCENT,NBMODS,CNVFRE,PARCON,PARCRI,
     &                  NBPASE,INPSCO)

C MODIF ALGORITH  DATE 05/05/2004   AUTEUR BOITEAU O.BOITEAU 
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PBADEL P.BADEL
C TOLE CRP_21

      IMPLICIT NONE
      LOGICAL REAROT,FONACT(4)
      INTEGER NBMODS,NBPASE
      REAL*8      PARCON(5),PARCRI,R8VIDE
      CHARACTER*8 MODEDE,RESULT
      CHARACTER*13 INPSCO
      CHARACTER*14 PILOTE,NUPOSS
      CHARACTER*16 CMD
      CHARACTER*19 LISCHA,SOLVEU,SOLVDE,NURO,PARTPS,CRITNL
      CHARACTER*19 MAPREC,CNVFRE
      CHARACTER*24 MODELE,COMPOR,NUMEDD,NUMEDE,VALMOI(8),DEPMOI
      CHARACTER*24 DEFICO,RESOCO,CARCRI,DEPENT,VITENT,ACCENT
      CHARACTER*24 CNDIDI,VARDEM,LAGDEM
      CHARACTER*24 MATE,CARELE,MEMASS,MEDIRI
      CHARACTER*24 VITPLU,ACCPLU

C ---------------------------------------------------------------------

C               COMMANDES STAT/DYNA_NON_LINE : INITIALISATIONS

C ---------------------------------------------------------------------

C      IN  RESULT K8   NOM UTILISATEUR DU RESULTAT DE STAT_NON_LINE
C      IN  MODELE K24  MODELE MECANIQUE
C      IN  MODEDE K8   MODELE NON LOCAL
C      IN  COMPOR K24  CARTE COMPORTEMENT
C      IN  SOLVEU K19  NOM DU SOLVEUR DE NEWTON
C      IN  SOLVDE K19  NOM DU SOLVEUR DU LAGRANGIEN AUGMENTE
C      IN  LISCHA K19  SD L_CHARGE
C      OUT NUMEDD K24  NOM DE LA NUMEROTATION MECANIQUE
C      OUT NUMEDE K24  NOM DE LA NUMEROTATION NON LOCALE
C IN/JXOUT NURO   K19  NUMEROTATION DES DDL DE GRANDES ROTATIONS
C      OUT REAROT  L   .TRUE. S'IL Y A DES DDL DE GRANDES ROTATIONS
C IN/JXOUT DEPMOI K24  DEPLACEMENTS INITIAUX
C IN/JXOUT SIGMOI K24  CONTRAINTES  INITIALES
C IN/JXOUT VARMOI K24  VARIABLES INTERNES INITIALES
C IN/JXOUT VARDEM K24  VARIABLES NON LOCALES INITIALES
C IN/JXOUT LAGDEM K24  MULTIPLICATEURS DE LAGRANGE NON LOCAUX INITIAUX
C IN/JXOUT CNDIDI K24  DIRICHLET DIFFERENTIEL B_DIDI.U_REF
C IN/JXOUT PILOTE K14  SD ASSOCIEE AU PILOTAGE
C OUT      DEFICO K24  SD DE DEFINITION DU CONTACT
C IN/JXOUT RESOCO K24  SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN/JXOUT CRITNL K19  SD ARCHIVAGE DES PARAMETRES A CONVERGENCE
C OUT      FONACT  L   FONCTIONNALITES SPECIFIQUES ACTIVEES
C                       1 - RECHERCHE LINEAIRE
C                       2 - PILOTAGE
C                       3 - LOIS NON LOCALES
C                       4 - CONTACT / FROTTEMENT
C      IN  PARCON : PARAMETRES DU CRITERE DE CONVERGENCE EN CONTRAINTE
C                   SI PARCRI(6)=RESI_CONT_RELA != R8VIDE()
C                     1 : SIGM_REFE
C                     2 : FLUX_THER_REFE
C                     3 : FLUX_HYD1_REFE
C                     4 : FLUX_HYD2_REFE
C      IN PARCRI : PARCRI(6) = RESI_CONT_RELA : R8VIDE SI NON ACTIF
C      IN NBPASE  I    NOMBRE DE PARAMETRES SENSIBLES
C      IN INPSCO  K13  SD CONTENANT LISTE DES NOMS POUR SENSIBILITE
C   -------------------------------------------------------------------
C     ASTER INFORMATIONS:
C       19/03/04 (OB): PAR ADHERENCE A NUMER2.
C----------------------------------------------------------------------
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ---------------------------

      CHARACTER*32 JEXNUM,JEXNOM,JEXR8,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C --- FIN DECLARATIONS NORMALISEES JEVEUX -----------------------------
      LOGICAL EXIGEO,EXICAR
      INTEGER NEQ,LONDE,JCRR,JCRK,IRET,IBID,NOCC,N1, IFONC,JLVE
      INTEGER DERNIE,NRPASE,IAUX,JAUX
      INTEGER JMETH,JSOLVE,NZOCO,IZOCO
      REAL*8 INSTAM,R8BID,MX
      COMPLEX*16 CBID
      CHARACTER*8 MAILLA,K8BID,SIGERE(5),LPAIN(20),LPAOUT(1)
      CHARACTER*16 NOMCMD,K16BID
      CHARACTER*19 LIGREL,LIGRMO,VEREFE,CARTE
      CHARACTER*24 K24BLA,SIGMOI,VARMOI,COMMOI,TEXTE,CHGEOM,LVEDIP
      CHARACTER*24 LCHOUT(1),LCHIN(20),NOOJB
      CHARACTER*24 CHCARA(15)
      DATA LVEDIP  /'&&VEREFE.LISTE_RESU'/
C ---------------------------------------------------------------------


C -- NUMEROTATION ET CREATION DU PROFIL DE LA MATRICE

C    INCONNUES DE TYPE DEPLACEMENT
      NUMEDD = '12345678.NUMED'
      NOOJB='12345678.00000.NUME.PRNO'
      CALL GNOMSD ( NOOJB,10,14 )
      NUMEDD=NOOJB(1:14)
      CALL RSNUME(RESULT,'DEPL',NUPOSS)
      CALL NUMERO(NUPOSS,MODELE,LISCHA,SOLVEU,'VG',NUMEDD)

      DO 10 NRPASE=NBPASE,0,-1
        IAUX = NRPASE
        JAUX = 5
        CALL PSNSLE(INPSCO,IAUX,JAUX,DEPMOI)
        CALL VTCREB(DEPMOI,NUMEDD,'V','R',NEQ)
        IF (CMD(1:4).EQ.'DYNA') THEN
          JAUX = 14
          CALL PSNSLE(INPSCO,IAUX,JAUX,VITPLU)       
          CALL VTCREB(VITPLU,NUMEDD,'V','R',NEQ)
          JAUX = 16
          CALL PSNSLE(INPSCO,IAUX,JAUX,ACCPLU)       
          CALL VTCREB(ACCPLU,NUMEDD,'V','R',NEQ)
      END IF

10    CONTINUE


C -- INCONNUES DE TYPE VARIABLES NON LOCALES

      IF (MODEDE.NE.' ') THEN
        NUMEDE = '12345678.NUMED'
        LIGREL = MODEDE(1:8) // '.MODELE'
        NOOJB='12345678.00000.NUME.PRNO'
        CALL GNOMSD ( NOOJB,10,14 )
        NUMEDE=NOOJB(1:14)
        CALL RSNUME(RESULT,'VARI_NON_LOCAL',NUPOSS)
        CALL NUMER2(NUPOSS,1,LIGREL,'DDL_NLOC',SOLVDE,'VG',NUMEDE,IBID)
        CALL VTCREB(VARDEM,NUMEDE,'V','R',LONDE)
      END IF

C -- CREATION DE LA STRUCTURE DE DONNEE DE CONTACT

      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,MAILLA,IRET)
      CALL CRSDCO(MAILLA,LISCHA,NUMEDD,NEQ,DEFICO,RESOCO)

C -- DEPLACEMENTS, CONTRAINTES ET VARIABLES INTERNES INITIAUX

      CALL DESAGG(VALMOI,K24BLA,SIGMOI,VARMOI,COMMOI,K24BLA,K24BLA,
     &            K24BLA,K24BLA)

      IF (CMD(1:4).EQ.'STAT') THEN
        CALL NMDOET(RESULT,MODELE,MODEDE,COMPOR,CARELE,INSTAM,DEPMOI,
     &              SIGMOI,VARMOI,VARDEM,LAGDEM,NBPASE,INPSCO)
      ELSE
        CALL NDDOET(RESULT,MODELE,MODEDE,NUMEDD,MATE,COMPOR,CARELE,
     &              MEMASS,MEDIRI,LISCHA,INSTAM,COMMOI,DEPMOI,VITPLU,
     &              ACCPLU,SIGMOI,VARMOI,MAPREC,SOLVEU,CARCRI,VARDEM,
     &              LAGDEM,PARTPS,NBPASE,INPSCO,DEFICO)
      END IF


C -- DISCRETISATION DU CALCUL : CREATION DE LA SD DISCRETISATION

      CALL JEEXIN(RESULT//'           .DESC',IRET)
      IF (IRET.EQ.0) THEN
        DERNIE = 0
      ELSE
        CALL RSORAC(RESULT,'DERNIER',IBID,R8BID,K8BID,CBID,0.D0,
     &              'ABSOLU',DERNIE,1,IBID)
      END IF
      CALL DIINIT(INSTAM,PARTPS,DERNIE,RESULT)

C -- SI OPTIMISATION LISTE D'INSTANT
      CALL GETVTX('INCREMENT','OPTI_LIST_INST',1,1,1,TEXTE,N1)
      IF (N1 .NE. 0)
     &  CALL OPTILI(RESULT,MODELE,MATE,LISCHA,PARTPS)

C -- CREATION DE LA SD POUR ARCHIVAGE DES INFORMATIONS DE CONVERGENCE

      CALL WKVECT(CRITNL//'.CRTR','V V R8',7,JCRR)
      CALL WKVECT(CRITNL//'.CRDE','V V K16',7,JCRK)
      ZK16(JCRK)   = 'ITER_GLOB'
      ZK16(JCRK+1) = 'ITER_LINE'
      ZK16(JCRK+2) = 'RESI_GLOB_RELA'
      ZK16(JCRK+3) = 'RESI_GLOB'
      ZK16(JCRK+4) = 'ETA_PILOTAGE'
      ZK16(JCRK+5) = 'CHAR_MINI'
      ZK16(JCRK+6) = 'RESI_GLOB_MOINS'


C -- PREPARATION DE LA STRUCTURE DE DONNEE "EVOL_NOLI"

      CALL NMNOLI(COMPOR,PARTPS,CRITNL,DERNIE,VARDEM,LAGDEM,
     &           CMD,VITPLU,ACCPLU,NBMODS,DEPENT,VITENT,ACCENT,
     &           NBPASE,INPSCO)


C -- INITIALISATIONS LIEES AUX POUTRES EN GRANDS DEPLACEMENTS

      CALL NUROTA(NUMEDD(1:14),COMPOR(1:19),NURO,REAROT)


C -- CONSTRUCTION DU CHAM_NO ASSOCIE AU PILOTAGE

      CALL NMDOPI(MODELE,NUMEDD,PILOTE)


C -- LECTURE DU DEPLACEMENT DE REFERENCE POUR DIRICHLET DIFFERENTIEL

      CALL NMDIDI(MODELE,NUMEDD,LISCHA,DEPMOI,CNDIDI)


C -- FONCTIONNALITES ACTIVEES

      CALL GETRES(K8BID,K16BID,NOMCMD)

C    RECHERCHE LINEAIRE
      NOCC = 0
      IF (NOMCMD.EQ.'STAT_NON_LINE') CALL GETFAC('RECH_LINEAIRE',NOCC)
      FONACT(1) = NOCC .NE. 0

C    PILOTAGE
      NOCC = 0
      IF (NOMCMD.EQ.'STAT_NON_LINE') CALL GETFAC('PILOTAGE',NOCC)
      FONACT(2) = NOCC .NE. 0

C    LOIS NON LOCALES
      FONACT(3) = MODEDE .NE. ' '

C    CONTACT / FROTTEMENT
      CALL JEEXIN(RESOCO(1:14)//'.PREM',IRET)
      FONACT(4) = IRET .NE. 0

      IF (FONACT(2) .AND. FONACT(4)) CALL UTMESS('F','NMINIT',
     &    'CONTACT ET PILOTAGE SONT DES FONCTIONNALITES INCOMPATIBLES')

      CALL JEEXIN(DEFICO(1:16)//'.METHCO',IRET)
      IF(IRET.NE.0) THEN
        CALL  JEVEUO (DEFICO(1:16)//'.METHCO','L',JMETH)
        IF(JMETH.NE.0) THEN
          CALL  JEVEUO (SOLVEU//'.SLVK','L',JSOLVE)
          IF(ZK24(JSOLVE)(1:4).EQ.'GCPC') THEN
            NZOCO = ZI(JMETH)
            DO 20 IZOCO=1,NZOCO
              IF (ZI(JMETH+9*(IZOCO-1)+6).EQ.6) THEN
                CALL UTMESS('F','NMINIT',
     &               'LA COMBINAISON: METHODE CONTINUE EN CONTACT'//
     &               ' ET SOLVEUR GCPC N''EST PAS DISPONIBLE.')
              ENDIF
20          CONTINUE
          ENDIF
        ENDIF
      ENDIF
C -- SD_IMPR : FONCTIONNALITES A AFFICHER
      CALL WKVECT('&&OP0070.IMPR.FONC','V V L',4,IFONC)
      ZL(IFONC  ) = FONACT(1)
      ZL(IFONC+1) = FONACT(2)
      ZL(IFONC+2) = FONACT(3)

C -- CONVERGENCE SUR CRITERE EN CONTRAINTE GENERALISEE
      IF (PARCRI.EQ.R8VIDE()) THEN
        ZL(IFONC+3) = .FALSE.
      ELSE
        CALL MECARA(CARELE(1:8),EXICAR,CHCARA)
        ZL(IFONC+3) = .TRUE.
        CARTE  = '&&NMINIT.SIGERE'
        VEREFE = '&&NMINIT.VEREFE'
        LIGRMO = MODELE(1:8) // '.MODELE'
        SIGERE(1) = 'SIGM'
        SIGERE(2) = 'EPSI'
        SIGERE(3) = 'FTHERM'
        SIGERE(4) = 'FHYDR1'
        SIGERE(5) = 'FHYDR2'
        CALL MECACT('V',CARTE,'MODELE',LIGRMO,'PREC', 5, SIGERE,
     &                  IBID, PARCON, CBID, K8BID)

        CALL MEGEOM(MODELE, ' ', EXIGEO, CHGEOM)
        LPAIN(1) = 'PGEOMER'
        LCHIN(1) =  CHGEOM
        LPAIN(2) = 'PREFCO'
        LCHIN(2) =  CARTE
      LPAIN(3) = 'PCAGNPO'
      LCHIN(3) = CHCARA(6)
      LPAIN(4) = 'PCAORIE'
      LCHIN(4) = CHCARA(1)
      LPAIN(5) = 'PCOMPOR'
      LCHIN(5) = COMPOR
      LPAIN(6) = 'PMATERC'
      LCHIN(6) = MATE
      LPAIN(7) = 'PDEPLMR'
      LCHIN(7) = DEPMOI
      LPAIN(8) = 'PDEPLPR'
      LCHIN(8) = DEPMOI
      LPAIN(9) = 'PCAARPO'
      LCHIN(9) = CHCARA(9)
      LPAIN(10) = 'PCADISK'
      LCHIN(10) = CHCARA(2)
      LPAIN(11) = 'PCACOQU'
      LCHIN(11) = CHCARA(7)
      LPAIN(12) = 'PHARMON'
      LCHIN(12) = ' '
      LPAIN(13) = 'PCAMASS'
      LCHIN(13) = CHCARA(12)
      LPAIN(14) = 'PCARCRI'
      LCHIN(14) = CARCRI
      LPAIN(15) = 'PINSTMR'
      LCHIN(15) = ' '
      LPAIN(16) = 'PINSTPR'
      LCHIN(16) = ' '
      LPAIN(17) = ' '
      LCHIN(17) = ' '
      LPAIN(18) = 'PCAGEPO'
      LCHIN(18) = CHCARA(5)
      LPAIN(19) = 'PNBSP_I'
      LCHIN(19) = CHCARA(1) (1:8)//'.CANBSP'
      LPAIN(20) = 'PFIBRES'
      LCHIN(20) = CHCARA(1) (1:8)//'.CAFIBR'

        LPAOUT(1) = 'PVECTUR'
        LCHOUT(1) =  VEREFE


        CALL CALCUL('S','REFE_FORC_NODA', LIGRMO, 20, LCHIN, LPAIN,
     &                                      1 , LCHOUT, LPAOUT, 'V')

        CALL DETRSD('VECT_ELEM',LVEDIP(1:8))
        CALL MEMARE('V',LVEDIP(1:8),MODELE(1:8),' ',' ','CHAR_MECA')
        CALL WKVECT(LVEDIP,'V V K24',1,JLVE)
        CALL JEECRA(LVEDIP,'LONUTI',1,K8BID)
        ZK24(JLVE) = LCHOUT(1)
        CALL ASSMIV('V',CNVFRE,1,LVEDIP,1.D0,NUMEDD,' ','ZERO',1)
      ENDIF

      END
