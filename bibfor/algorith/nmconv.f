      SUBROUTINE NMCONV(NOMA  ,MATE  ,NUMEDD,FONACT,SDDYNA,
     &                  SDIMPR,SDSTAT,SDDISC,SDCRIT,SDERRO,
     &                  PARMET,COMREF,MATASS,NUMINS,ITERAT,
     &                  CONV  ,ETA   ,PARCRI,DEFICO,RESOCO,
     &                  VALINC,SOLALG,MEASSE,VEASSE,ITEMAX,
     &                  CONVER,FINPAS,MAXREL)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/08/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C TOLE CRP_20
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INTEGER      FONACT(*)
      LOGICAL      ITEMAX,CONVER,FINPAS
      LOGICAL      MAXREL
      INTEGER      ITERAT,NUMINS
      REAL*8       ETA, CONV(*), PARCRI(*), PARMET(*)
      CHARACTER*19 SDCRIT,SDDISC,MATASS
      CHARACTER*19 SDDYNA
      CHARACTER*19 MEASSE(*),VEASSE(*)
      CHARACTER*19 SOLALG(*),VALINC(*)
      CHARACTER*24 COMREF,MATE
      CHARACTER*8  NOMA
      CHARACTER*24 NUMEDD
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*24 SDIMPR,SDERRO,SDSTAT
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C VERIFICATION DES CRITERES D'ARRET
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  DEFICO : SD POUR LA DEFINITION DU CONTACT
C IN  RESOCO : SD POUR LA RESOLUTION DU CONTACT
C IN  SDIMPR : SD AFFICHAGE
C IN  NUMEDD : NUMEROTATION NUME_DDL
C IN  COMREF : VARI_COM REFE
C IN  MATASS : MATRICE DU PREMIER MEMBRE ASSEMBLEE
C IN  ITERAT : NUMERO D'ITERATION
C IN  NUMINS : NUMERO D'INSTANT
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  MEASSE : VARIABLE CHAPEAU POUR NOM DES MATR_ASSE
C IN  ETA    : COEFFICIENT DE PILOTAGE
C I/O CONV   : INFORMATIONS SUR LA CONVERGENCE DU CALCUL
C               1 - RESI_DUAL_ABSO      (LAGRANGIEN AUGMENTE)
C               2 - RESI_PRIM_ABSO      (LAGRANGIEN AUGMENTE)
C               3 - NOMBRE D'ITERATIONS DUAL (LAGRANGIEN AUGMENTE)
C               4 - NUMERO ITERATION BFGS (LAGRANGIEN AUGMENTE)
C              10 - NOMBRE D'ITERATIONS (RECHERCHE LINEAIRE)
C              11 - RHO                 (RECHERCHE LINEAIRE)
C              20 - RESI_GLOB_RELA
C              21 - RESI_GLOB_MAXI
C IN  PARCRI : CRITERES DE CONVERGENCE
C               1 : ITER_GLOB_MAXI
C               2 : RESI_GLOB_RELA
C               3 : RESI_GLOB_MAXI
C               4 : ARRET
C               5 : ITER_GLOB_ELAS
C               6 : RESI_REFE_RELA
C              12 : RESI_COMP_RELA
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  SDERRO : GESTION DES ERREURS
C IN  PARMET : PARAMETRES DE LA METHODE DE RESOLUTION
C                       3 - PAS_MINI_ELAS
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C OUT ITEMAX : .TRUE. SI ITERATION MAXIMUM ATTEINTE
C OUT CONVER : .TRUE. SI CONVERGENCE REALISEE
C OUT FINPAS : .TRUE. SI ON NE FAIT PLUS D'AUTRES PAS DE TEMPS
C OUT MAXREL : .TRUE. SI CRITERE RESI_GLOB_RELA ET CHARGEMENT = 0,
C                             ON UTILISE RESI_GLOB_MAXI
C IN  SDIMPR : SD AFFICHAGE
C IN  SDSTAT : SD STATISTIQUES
C IN  SDCRIT : SYNTHESE DES RESULTATS DE CONVERGENCE POUR
C                   ARCHIVAGE
C IN  COMREF : VARI_COM REFE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      LOGICAL      LCTCD,LALLV,LIMPEX,LRELI
      LOGICAL      ISFONC,CFDISL
      LOGICAL      ERROR
      INTEGER      PILCVG,LDCCVG
      INTEGER      IRET
      REAL*8       R8VIDE,R8BID,PASMIN
      REAL*8       RESIGR
      REAL*8       DIINST,INSTAM,INSTAP
      CHARACTER*16 K16BLA
      INTEGER      JCRI,JCRR
      CHARACTER*24 CRITER
      REAL*8       VRELA,VMAXI,VREFE,VRESI,VCHAR,VINIT,VNODA
      CHARACTER*24 CLREAC
      INTEGER      JCLREA
      LOGICAL      CTCFIX
      INTEGER      CTCITE
      LOGICAL      CBORST,BORCVG,CTCGEO,CVNEWT,CTCCVG
      LOGICAL      MAXNOD
      INTEGER      NBITER,ITESUP
      INTEGER      IFM,NIV
      REAL*8       RELCOE,GEOVAL
      INTEGER      RELITE,FETITE
      CHARACTER*16 DEBORS,GEONOE
      CHARACTER*24 CODERE
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> EVALUATION DE LA CONVERGENCE'
      ENDIF
C
C --- RECUPERE LES CODES RETOURS
C
      CALL NMCRET('RECU','LDC',SDERRO,SDDISC,LDCCVG,
     &            CODERE)
      CALL NMCRET('RECU','PIL',SDERRO,SDDISC,PILCVG,
     &            CODERE)
C
C --- ERREUR OU PAS ?
C
      CALL NMERGE(SDERRO,'GET','ALL',ERROR )
C
C --- INITIALISATIONS
C
      FINPAS = .FALSE.
      ITEMAX = .FALSE.
      CBORST = LDCCVG.EQ.3
      BORCVG = .TRUE.
      CTCGEO = .TRUE.
      CTCFIX = .FALSE.
      CTCCVG = .TRUE.
      MAXNOD = .FALSE.
      RESIGR = PARCRI(2)
      VRELA  = R8VIDE()
      VMAXI  = R8VIDE()
      VREFE  = R8VIDE()
      VNODA  = R8VIDE()
      K16BLA = ' '
      CONVER = .FALSE.
      FETITE = 0
      GEONOE = ' '
      GEOVAL = R8VIDE()   
C
C --- FONCTIONNALITES ACTIVEES
C
      LCTCD  = ISFONC(FONACT,'CONT_DISCRET')
      LIMPEX = ISFONC(FONACT,'IMPL_EX')
      LRELI  = ISFONC(FONACT,'RECH_LINE')
C
C --- INSTANTS
C
      INSTAM = DIINST(SDDISC,NUMINS-1)
      INSTAP = DIINST(SDDISC,NUMINS  )
C
C --- EXAMEN DU NOMBRE D'ITERATIONS
C
      PASMIN = PARMET(3)
      CALL NMLERR(SDDISC,'L','ITERSUP',R8BID ,ITESUP)
      IF (ITESUP.EQ.0) THEN
        IF (ABS(INSTAP-INSTAM) .LT. PASMIN) THEN
          NBITER = PARCRI(5)
        ELSE
          NBITER = PARCRI(1)
        ENDIF
      ELSE
        CALL NMLERR(SDDISC,'L','NBITER',R8BID ,NBITER)
      ENDIF
      ITEMAX = ITERAT .GE. NBITER
      CALL NMERGE(SDERRO,'SET','ITX',ITEMAX)
C
C --- SI ERREUR -> ON SORT DIRECTEMENT
C
      IF (ERROR) THEN
        CONVER = .FALSE.
        GOTO 9999
      ENDIF
C
C --- STATISTIQUES POUR RECHERCHE LINEAIRE
C
      IF (LRELI) THEN
        RELCOE = CONV(11)
        RELITE = CONV(10)
        IF (ITERAT.EQ.0) THEN
          RELCOE = R8VIDE()
          RELITE = -1        
        ENDIF
      ELSE
        RELCOE = R8VIDE()
        RELITE = -1
      ENDIF
      CALL NMRVAI(SDSTAT,'RECH_LINE_ITER','E',RELITE)
C
C --- STATISTIQUES POUR FETI
C
      CRITER = '&FETI.CRITER.CRTI'
      CALL JEEXIN(CRITER,IRET)
      IF (IRET.GT.0) THEN
        CALL JEVEUO(CRITER,'L',JCRI)
        FETITE = ZI(JCRI)
        CALL JEDETR(CRITER)
        CALL NMRVAI(SDSTAT,'FETI_ITER','E',FETITE)
      ENDIF      
C
C --- CALCUL DES RESIDUS
C
      CALL NMRESI(NOMA  ,MATE  ,NUMEDD,FONACT,SDDYNA,
     &            SDIMPR,MATASS,NUMINS,CONV  ,RESIGR,
     &            ETA   ,COMREF,VALINC,VEASSE,MEASSE,
     &            VRELA ,VMAXI ,VCHAR ,VRESI ,VREFE ,
     &            VINIT ,VNODA )
C
C --- VERIFICATION DES CRITERES D'ARRET SUR RESIDUS
C
      CALL NMCORE(SDIMPR,SDCRIT,NUMINS,PARCRI,VRESI ,
     &            VRELA ,VMAXI ,VCHAR ,VREFE ,VNODA ,
     &            CVNEWT,MAXREL,MAXNOD)
      MAXREL = MAXREL.OR.MAXNOD
C
C --- MARQUE DE CONVERGENCE DE NEWTON
C
      IF (CVNEWT) THEN
        CALL IMPSDM(SDIMPR,'ITER_NUME',' ')
      ELSE
        CALL IMPSDM(SDIMPR,'ITER_NUME','X')
      ENDIF
C
C --- LE PILOTAGE A ATTEINT LES BORNES
C
      IF (PILCVG .EQ. -1) THEN
        CALL IMPSDM(SDIMPR,'PILO_COEF','B')
      ELSE
        CALL IMPSDM(SDIMPR,'PILO_COEF',' ')
      ENDIF
C
C --- CONVERGENCE ADAPTEE A LA METHODE DE DE BORST
C
      IF (CBORST) THEN
        DEBORS = K16BLA
        IF (CVNEWT) THEN
          DEBORS = ' DE BORST...    '
          CALL U2MESS('I','MECANONLINE2_3')
          BORCVG = .FALSE.
        ENDIF
      ELSE
        DEBORS = K16BLA
        BORCVG = .TRUE.
      ENDIF
C
C --- CONVERGENCE ADAPTEE AU CONTACT DISCRET
C
      IF (LCTCD) THEN
        LALLV  = CFDISL(DEFICO,'ALL_VERIF')
        IF (LALLV) THEN
          CTCCVG = .TRUE.
        ELSE
C
C --- ATTENTE POINT FIXE ?
C
          CLREAC = RESOCO(1:14)//'.REAL'
          CALL JEVEUO(CLREAC,'L',JCLREA)
          CTCFIX = ZL(JCLREA+2-1)
          IF (CTCFIX) THEN
            CALL IMPSDM(SDIMPR,'CTCD_NBIT','X')
          ELSE
            CALL IMPSDM(SDIMPR,'CTCD_NBIT',' ')
          ENDIF
C
C --- NOMBRE ITERATIONS INTERNES DE CONTACT POUR L'ITERATION COURANTE
C
          CALL NMRVAI(SDSTAT,'CTCD_ALGO_ITER','N',CTCITE)
C
C --- EVALUATION DE LA REACUALISATION GEOMETRIQUE POUR CONTACT DISCRET
C
          IF (CVNEWT) THEN
            IF (.NOT.CTCFIX) THEN
              CALL CFCONV(NOMA  ,NUMEDD,DEFICO,RESOCO,SOLALG,
     &                    CTCGEO,GEONOE,GEOVAL)
            ENDIF
            CTCCVG = (.NOT.CTCFIX)
          ELSE
            CTCCVG = .FALSE.
          ENDIF
          CTCCVG = CTCCVG.AND.CTCGEO
        ENDIF
      ELSE
        CTCCVG = .TRUE.
      ENDIF
C
C --- CONVERGENCE FINALE
C
      CONVER = CVNEWT.AND.BORCVG.AND.CTCCVG
      IF (LIMPEX) CONVER = .TRUE.
C
C --- ARRET SI CONVERGENCE DU PILOTAGE HORS BORNES
C
      IF ((PILCVG .EQ. -1).AND.CONVER) THEN
        FINPAS = .TRUE.
      ENDIF
C
C --- SAUVEGARDES INFOS CONVERGENCE
C
      CALL JEVEUO(SDCRIT //'.CRTR','E',JCRR)
      ZR(JCRR+1-1) = ITERAT+1
      ZR(JCRR+2-1) = CONV(10)
      ZR(JCRR+3-1) = VRELA
      ZR(JCRR+4-1) = VMAXI
      ZR(JCRR+5-1) = ETA
      IF ((NUMINS.EQ.1) .AND. (ITERAT.EQ.0)) THEN
        ZR(JCRR+6-1) = VCHAR
      ELSE
        IF (CONVER.AND.(.NOT.MAXREL)) THEN
          ZR(JCRR+6-1) = MIN(VCHAR, ZR(JCRR+6-1))
        ENDIF
      ENDIF
      IF (CONVER) THEN
        ZR(JCRR+7-1) = VRESI
      ENDIF
      ZR(JCRR+8-1) = VREFE
C
 9999 CONTINUE
C
C --- ENREGISTRE LES DONNEES POUR AFFICHAGE DANS LA SDIMPR - DIVERS
C
      CALL NMIMRV(SDIMPR,INSTAP,ITERAT,FETITE,CTCITE,
     &            DEBORS,RELCOE,RELITE,ETA   ,GEONOE,
     &            GEOVAL)
C
C --- SI ON A CONVERGE: ON A PAS ATTEINT LE NB D'ITERATIONS MAXIMUM 
C
      IF (CONVER) THEN
        ITEMAX = .FALSE.
      ENDIF
C
C --- CHANGEMENT DE LA MARQUE SI ERREUR
C      
      IF (ERROR.OR.ITEMAX) THEN
        CALL IMPSDM(SDIMPR,'ITER_NUME','E')
      ENDIF
C
C --- SAUVEGARDE ERREUR ITERATIONS
C
      CALL NMERGE(SDERRO,'SET','ITX',ITEMAX)
C
C --- ENREGISTRE LES RESIDUS A CETTE ITERATION
C
      CALL DIERRE(SDDISC,SDCRIT,ITERAT)
C
C --- MISE A JOUR DE L'INDICATEUR DE SUCCES SUR LES ITERATIONS DE NEWTON
C
      CALL NMADEV(SDDISC,CONVER,ITERAT,ITEMAX,ERROR)
C
      CALL JEDEMA()
      END
