      SUBROUTINE MMTGNO(NOMA  ,DEFICO,RESOCO,NEWGEO)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 14/09/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2009  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8   NOMA
      CHARACTER*24  DEFICO,RESOCO
      CHARACTER*19  NEWGEO
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (TOUTES METHODES - APPARIEMENT)
C
C CALCUL DES VECTEURS TANGENTS EN CHAQUE NOEUD (MOYENNE)
C      
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  NEWGEO : NOUVELLE GEOMETRIE (AVEC DEPLACEMENT GEOMETRIQUE)
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32  JEXNUM
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      POSNO,NNOCO
      INTEGER      IFM,NIV
      INTEGER      NDIMG,NUMNO
      INTEGER      INO,IMA,I,INOMAI,INOCOU,CFDISI,NIVERR
      INTEGER      POSMAI,NUMMAI,IBID,IZONE,JDEC
      INTEGER      JDECIV
      INTEGER      NBNO,NBMA
      REAL*8       TAU1(3),TAU2(3),NORMAL(3),NORMN
      REAL*8       TAUND1(3),TAUND2(3)
      REAL*8       VNORM(3),COORNO(3),R8PREM,NOOR
      CHARACTER*4  TYPNO
      LOGICAL      MMINFL,CFCALD,LFFISS
      CHARACTER*8  NOMMAI
      CHARACTER*24 TGNOEU,TGELNO
      INTEGER      JTGNOE,JTGELN          
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> ......... TANGENTES SUR' //
     &  ' LES NOEUDS' 
      ENDIF
C
C --- ACCES SD CONTACT
C 
      TGELNO = RESOCO(1:14)//'.TGELNO'
      TGNOEU = RESOCO(1:14)//'.TGNOEU' 
      CALL JEVEUO(TGNOEU,'E',JTGNOE)            
C
C --- INITIALISATIONS
C
      NNOCO     = CFDISI(DEFICO,'NNOCO')
      NDIMG     = CFDISI(DEFICO,'NDIM' )
      COORNO(1) = 0.D0
      COORNO(2) = 0.D0
      COORNO(3) = 0.D0  
C
C --- BOUCLE SUR TOUS LES NOEUDS
C
      DO 10 INO = 1,NNOCO 
        POSNO     = INO
        NORMAL(1) = 0.D0
        NORMAL(2) = 0.D0
        NORMAL(3) = 0.D0
        TAUND1(1) = 0.D0
        TAUND1(2) = 0.D0
        TAUND1(3) = 0.D0                
        TAUND2(1) = 0.D0
        TAUND2(2) = 0.D0
        TAUND2(3) = 0.D0
C
C ----- INDICE ABSOLU DANS LE MAILLAGE DU NOEUD
C            
        CALL CFNUMN(DEFICO,1     ,POSNO ,NUMNO)
C
C ----- TYPE DU NOEUD
C
        CALL CFTYPN(DEFICO,POSNO ,TYPNO )
C
C ----- ZONE DU NOEUD
C
        CALL CFZONN(DEFICO,POSNO ,IZONE ) 
C
C ----- COORDONNEES DU NOEUD
C
        CALL CFCORN(NEWGEO,NUMNO ,COORNO)               
C
C ----- INFOS SUR LES MAILLES CONTENANT LE NOEUD
C
        CALL CFNBEN(DEFICO,POSNO ,'CONINV',NBMA  ,JDECIV)      
C
C ----- CALCUL OU PAS ?
C
        IF (.NOT.CFCALD(DEFICO,IZONE ,TYPNO )) THEN
          GOTO 91
        ENDIF 
C
C ----- TRAITEMENT DU FOND DE FISSURE        
C         
        LFFISS = MMINFL(DEFICO,'FOND_FISSURE',IZONE )        
C
C ----- CALCUL INTERDIT SI FOND_FISSURE
C
        IF (LFFISS) THEN
          CALL U2MESS('F','CONTACT3_17')
        ENDIF                                     
C
C ----- BOUCLE SUR LES MAILLES CONTENANT LE NOEUD
C
        DO 20 IMA = 1,NBMA
C
C ------- MAILLE COURANTE
C      
          CALL CFINVM(DEFICO,JDECIV,IMA   ,POSMAI)     
C
C ------- ACCES MAILLE COURANTE
C        
          CALL JEVEUO(JEXNUM(TGELNO,POSMAI),'L',JTGELN)
          CALL CFNUMM(DEFICO,1     ,POSMAI,NUMMAI)
          CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NUMMAI),NOMMAI)
          CALL JEVEUO(JEXNUM(NOMA//'.CONNEX',NUMMAI),'L',JDEC)
C
C ------- TRANSFERT NUMERO ABSOLU DU NOEUD -> NUMERO DANS LA CONNEC DE
C ------- LA MAILLE
C
          CALL CFNBEN(DEFICO,POSMAI,'CONNEX',NBNO  ,IBID  )
          INOCOU = 0
          DO 30 INOMAI = 1,NBNO
            IF (ZI(JDEC+INOMAI-1).EQ.NUMNO) THEN
              INOCOU = INOMAI
            ENDIF
 30       CONTINUE  
          CALL ASSERT(INOCOU.NE.0)                
C
C ------- RECUPERATIONS DES TANGENTES EN CE NOEUD
C
          TAU1(1) = ZR(JTGELN+6*(INOCOU-1)+1 -1)
          TAU1(2) = ZR(JTGELN+6*(INOCOU-1)+2 -1)
          TAU1(3) = ZR(JTGELN+6*(INOCOU-1)+3 -1)                     
          TAU2(1) = ZR(JTGELN+6*(INOCOU-1)+4 -1)
          TAU2(2) = ZR(JTGELN+6*(INOCOU-1)+5 -1)
          TAU2(3) = ZR(JTGELN+6*(INOCOU-1)+6 -1)      
C
C ------- CALCUL DE LA NORMALE _INTERIEURE_ 
C     
          CALL MMNORM(NDIMG,TAU1,TAU2,VNORM,NOOR)  
          IF (NOOR.LE.R8PREM()) THEN
            CALL U2MESS('I','CONTACT3_33')
            CALL U2MESG('F','CONTACT3_23',1,NOMMAI,0,0,3,COORNO) 
          ENDIF             
C  
C ------- NORMALE RESULTANTE 
C
          DO 60 I = 1,3
            NORMAL(I) = NORMAL(I) + VNORM(I)
 60       CONTINUE 
 20     CONTINUE
C
C ----- MOYENNATION DE LA NORMALE SUR TOUTES LES MAILLES LIEES AU NOEUD
C
        DO 70 I = 1,3
          NORMAL(I) = NORMAL(I) / NBMA
 70     CONTINUE
C
C ----- NORMALISATION NORMALE SUR TOUTES LES MAILLES LIEES AU NOEUD
C 
        CALL NORMEV(NORMAL,NORMN)
        IF (NORMN.LE.R8PREM()) THEN
          CALL U2MESS('I','CONTACT3_33')
          CALL U2MESG('F','CONTACT3_23',1,NOMMAI,0,0,3,COORNO) 
        ENDIF                                     
C
C ----- RE-CONSTRUCTION DES VECTEURS TANGENTS APRES LISSAGE
C
        CALL MMMRON(NDIMG ,NORMAL,TAUND1,TAUND2  )        
C
C ----- NORMALISATION DES TANGENTES
C
        CALL MMTANN(NDIMG ,TAUND1,TAUND2,NIVERR)
        IF (NIVERR.EQ.1) THEN  
          CALL U2MESS('I','CONTACT3_33')
          CALL U2MESG('F','CONTACT3_14',1,NOMMAI,0,0,3,COORNO)          
        ENDIF         
C 
C ----- STOCKAGE DES VECTEURS TANGENTS EXTERIEURS SUR LE NOEUD  
C    
        ZR(JTGNOE+6*(INO-1)+1 -1) = TAUND1(1)
        ZR(JTGNOE+6*(INO-1)+2 -1) = TAUND1(2)
        ZR(JTGNOE+6*(INO-1)+3 -1) = TAUND1(3)                     
        ZR(JTGNOE+6*(INO-1)+4 -1) = TAUND2(1)
        ZR(JTGNOE+6*(INO-1)+5 -1) = TAUND2(2)
        ZR(JTGNOE+6*(INO-1)+6 -1) = TAUND2(3)
 91     CONTINUE    
 10   CONTINUE
C
C
      CALL JEDEMA()
      END
