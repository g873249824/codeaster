      SUBROUTINE MPMAIL
C     ------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2001   AUTEUR CIBHHAB N.RAHNI 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C     PROJ_MESU_MODAL : LECTURE DES NOEUDS DE MESURE 
C                      (NOMS, COORDONNEES, ET MATRICES DE REPERE LOCAL)
C
C     ------------------------------------------------------------------
C
C
      IMPLICIT NONE 
C
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32 JEXNOM,JEXNUM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CHARACTER*6  NOMROU
      CHARACTER*8  MAILLA, CARA, K8BID, MASGEN, MODELE
      CHARACTER*16 NOMCMD
      CHARACTER*19 CHCARA,LIGRMO
      INTEGER I  , J 
      INTEGER IN 
      INTEGER IBID 
      INTEGER LCOORD
      INTEGER NUMERO
      INTEGER LMATR
      INTEGER NBOCC
      INTEGER NBNMES
      INTEGER NBNOEU
      INTEGER LOCC
      INTEGER LVALE
      INTEGER LNOMES
      INTEGER IER
      INTEGER NCMPMX, IVALE, IPTMS, IGD, IDEBGD
C
      DATA         NOMCMD/'&PROJ_MESU_MODAL'/
      DATA         NOMROU/'MPMAIL'/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- LECTURE MOTS CLES MESURE ---
      CALL GETVID('MESURE','MODELE'   ,1,1,1,MODELE,IBID)
      CALL GETVID('MESURE','MAILLAGE' ,1,1,1,MAILLA,IBID)
      CALL GETVID('MESURE','CARA_ELEM',1,1,1,CARA  ,IBID)
C
      LIGRMO = MODELE//'.MODELE' 
      CHCARA = CARA(1:8)//'.CARORIEN'
C
C --- RECUPERATION OBJETS SD MAILLAGE ET CARA_ELEM
      CALL JEVEUO(MAILLA//'.COORDO    .VALE','L',LCOORD)
      CALL JELIRA(CHCARA//'.LIMA','NUTIOC',NBOCC,K8BID)
C
C --- CALCUL DU NOMBRE DE NOEUDS AYANT UN REPERE LOCAL ---
      NBNMES = 0
      DO 10 I = 1,NBOCC
         CALL JEVEUO(JEXNUM(CHCARA//'.LIMA',I),'L',LOCC)
         IF (ZI(LOCC) .LT. 0) NBNMES = NBNMES + 1
 10   CONTINUE
C
C --- ON VERIFIE QUE TOUS LES NOEUDS DE MESURE ONT UN MODELE ASSOCIE
      CALL JELIRA(MAILLA//'.NOMNOE','NOMUTI',NBNOEU,K8BID)
      IF (NBNOEU.NE.NBNMES) THEN
         CALL UTMESS ( 'F' , NOMROU , 'A TOUS LES NOEUDS DE '//
     &  'MESURE DOIT ETRE ASSOCIE UN MODELE ELEMENT FINI : '//
     &  'AVEC LA COMMANDE AFFE_MODELE (AFFE: NOEUD OU GROUP_NO)' )
      ENDIF
C
C --- CREATION DES OBJETS DES NOEUDS DE MESURE ---
C
      CALL WKVECT(NOMCMD//'.NOMNOE','V V K8',  NBNMES,LNOMES)
      CALL WKVECT(NOMCMD//'.VALE'  ,'V V R' ,3*NBNMES,LVALE)
      CALL WKVECT(NOMCMD//'.MATROT','V V R' ,9*NBNMES,LMATR)
C
C --- RECUPERATION DU VECTEUR D'ADRESSAGE DES ANGLES NAUTIQUES 
C --- DANS LA CARTE ORIENTATION CREE PAR ETENCA ---
C
      CALL ETENCA(CHCARA,LIGRMO,IER)
      IF (IER.NE.0) THEN
        CALL UTMESS('F',NOMROU,'ERREUR DANS ETENCA')
      ENDIF
      CALL JELIRA(JEXNOM('&CATA.GD.NOMCMP','CAORIE'),'LONMAX',NCMPMX,
     &  K8BID) 
      CALL JEVEUO(CHCARA//'.VALE','L',IVALE)
      CALL JEVEUO(CHCARA//'.PTMS','L',IPTMS)
C
C --- BOUCLE SUR LES "ZONE_AFFECTEE"
      NUMERO = 0
      DO 30 I=1,NBOCC
C        --- RECUPERATON DES ANGLES NAUTIQUES ---
         CALL JEVEUO(JEXNUM(CHCARA//'.LIMA',I),'L',LOCC)    
         IF (ZI(LOCC) .LT. 0) THEN
            IN = -ZI(LOCC)
            NUMERO = NUMERO + 1
C           --- RECUPERATION DU NOM DU NOEUD ---
            CALL JENUNO(JEXNUM(MAILLA//'.NOMNOE',IN),
     &                  ZK8(LNOMES-1+NUMERO))
C           --- RECUPERATION DES COORDONNEES ---
            DO 20 J=1,3
               ZR(LVALE-1+(NUMERO-1)*3+J)=ZR(LCOORD-1+(IN-1)*3+J)
 20         CONTINUE
C           --- CALCUL DE LA MATRICE DE REPERE LOCAL ---
            IGD = ZI(IPTMS+IN-1)
            IDEBGD = (IGD-1)*NCMPMX
            CALL MATROT(ZR(IVALE+IDEBGD),ZR(LMATR+(NUMERO-1)*9))
         ENDIF
 30   CONTINUE
C
      CALL JEDETR(CHCARA//'.PTMA')
      CALL JEDETR(CHCARA//'.PTMS')
      CALL JEDEMA()
C
      END
