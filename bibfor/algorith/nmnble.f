      SUBROUTINE NMNBLE(NIVEAU,NUMEDD,SDDYNA,RESOCO,VALINC,
     &                  SOLALG)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/12/2009   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INTEGER      NIVEAU
      CHARACTER*24 NUMEDD
      CHARACTER*24 RESOCO
      CHARACTER*19 SDDYNA
      CHARACTER*19 SOLALG(*),VALINC(*)
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - BOUCLE NMIBLE)
C
C INITIALISATIONS DES CHAMPS 
C      
C ----------------------------------------------------------------------
C
C
C IN  NIVEAU : NIVEAU DANS BOUVLE NMIBLE/NMTBLE
C IN  RESOCO : SD POUR LA RESOLUTION DE CONTACT
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE
C IN  NUMEDD : NOM DU NUME_DDL
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      NEQ,IRET
      LOGICAL      NDYNLO,LDYNA
      CHARACTER*8  K8BID   
      CHARACTER*19 DEPMOI,DEPPLU
      CHARACTER*19 DEPDEL,DDEPLA      
      INTEGER      JDEPDE,JDDEPL
      CHARACTER*19 VITINI,ACCINI,VITPLU,ACCPLU
C      
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C   
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C       
      CALL NMCHEX(VALINC,'VALINC','DEPMOI',DEPMOI)
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)
      CALL NMCHEX(VALINC,'VALINC','VITPLU',VITPLU)
      CALL NMCHEX(VALINC,'VALINC','ACCPLU',ACCPLU)
      CALL NMCHEX(SOLALG,'SOLALG','DEPDEL',DEPDEL)
      CALL NMCHEX(SOLALG,'SOLALG','DDEPLA',DDEPLA)                   
C 
C --- INITIALISATION DES CHAMPS DE DEPLACEMENT
C  
      IF (NIVEAU.EQ.1) THEN
        CALL COPISD('CHAMP_GD','V',DEPMOI,DEPPLU) 
        CALL JEVEUO(DEPDEL(1:19)//'.VALE','E',JDEPDE)
        CALL JEVEUO(DDEPLA(1:19)//'.VALE','E',JDDEPL)
        CALL R8INIR(NEQ,0.D0,ZR(JDEPDE),1)
        CALL R8INIR(NEQ,0.D0,ZR(JDDEPL),1)        
      ELSE
        CALL ASSERT(.FALSE.)        
      ENDIF  
C
C --- AFIN QUE LE VECTEUR DES FORCES D'INERTIE NE SOIT PAS MODIFIE AU
C --- COURS DE LA BOUCLE DES CONTRAINTES ACTIVES PAR L'APPEL A OP0070
C --- ON LE DUPLIQUE ET ON UTILISE CETTE COPIE FIXE (VITINI,ACCINI)
C      
      IF (NIVEAU.EQ.1) THEN   
        IF (LDYNA) THEN
          VITINI = RESOCO(1:14)//'.VITI'
          ACCINI = RESOCO(1:14)//'.ACCI'
          CALL COPISD('CHAMP_GD','V',VITINI,VITPLU)
          CALL COPISD('CHAMP_GD','V',ACCINI,ACCPLU)             
        ENDIF  
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
      CALL JEDEMA()      
C
      END
