      SUBROUTINE TRAINT(RESGEN,MODGEN,NUMLIA,SST1,SST2,INTF1,INTF2,
     &                  NBMOD,NL,NC)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/06/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE

C-------------------------------------------------------------C
C--             ROUTINE XXXXX1    M. CORUS - AOUT 2011      --C
C--             CALCUL DES TRAVAUX AUX INTERFACES           --C
C--                                                         --C
C-------------------------------------------------------------C
C--   VARIABLES E/S  :
C--   RESGEN   /IN/  : NOM DE LA SD RESULTAT CONTENANT LES MODES REDUITS
C--   MODGEN   /IN/  : NOM DU MODELE GENERALISE
C--   NUMLIA   /IN/  : NUMERO DE LA LIAISON ASSOCIEE A L'INTERFACE
C--   SST1     /IN/  : NOM DE LA SOUS STRUCTURE 1
C--   SST2     /IN/  : NOM DE LA SOUS STRUCTURE 2
C--   INTF1    /IN/  : NOM DE L'INTERFACE DE LA SST 1
C--   INTF1    /IN/  : NOM DE L'INTERFACE DE LA SST 2
C--   NBMOD    /IN/  : NOMBRE DE MODE DU MODELE REDUIT
C--   NL       /IN/  : NB DE LIGNES DE LA MATRICE D'OBSERVATION
C--   NC       /IN/  : NB DE COLONNES DE LA MATRICE D'OBSERVATION

C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16            ZK16
      CHARACTER*24                    ZK24
      CHARACTER*32                            ZK32
      CHARACTER*80                                    ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

      CHARACTER*32 JEXNOM, JEXNUM
C
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ---------------------------
C
      CHARACTER*4  K4BID
      CHARACTER*8  MODGEN,RESGEN,SST1,SST2,INTF1,INTF2,KB,REST1,REST2,
     &             MRAID
      CHARACTER*19 NUME91
      CHARACTER*24 INDIN1,INDIN2
      INTEGER      I1,IBID,NBSST,LLIPR,J1,K1,L1,IMAST1,NBEQ,LMAST,
     &             IMAST2,NBEQ1,NBEQ2,NUMLIA,LEFI1,LEFI2,
     &             NBMOD,LNOSST,LNUSST,ISST1,ISST2,LLINT1,LOBS2,LOBS1,
     &             LLINT2,NBDDL1,NBDDL2,TACH1,LMAOBS,NC,
     &             TACH2,LOMEG,LMOD1,LMOD2,LMASS,LBID,LAG1,LAG2,LESC,
     &             LRAID,LEFF1,LEFF2,LTRAIN,IDEEQ,NBDDL,LLINT,LSLAST,
     &             LCOPY1,LCOPY2,UNIT,LMASST,LDEPMA,LDEPSL,NL
      REAL*8       TRAVM,TRAVK,DDOT,TRVINT
      INTEGER      IARG

      CALL GETVIS(' ','UNITE',1,IARG,1,UNIT,IBID)
      I1=NUMLIA

      CALL JELIRA(MODGEN//'      .MODG.SSNO','NOMMAX',NBSST,KB)

      CALL JEVEUO('&&OP0091.NOM_SST','E',LNOSST)
      CALL JEVEUO('&&OP0091.NUME_SST','E',LNUSST)
      CALL JEVEUO('&&OP0091.MATRICE_MASS','E',LMASS)
      CALL JEVEUO('&&OP0091.MATRICE_RAID','E',LRAID)
      CALL JEVEUO('&&OP0091.TRAV_INTERF','E',LTRAIN)
      CALL JEVEUO('&&OP0091.NUM_SST_ESCLAVE','E',LSLAST)
      CALL JEVEUO('&&OP0091.NUM_SST_MAITRE','E',LMASST)
      CALL JEVEUO('&&OP0091.PULSA_PROPRES','L',LOMEG)

      CALL JEVEUO(MODGEN//'      .MODG.LIPR','L',LLIPR)

C-- RECHERCHE DE LA SOUS STRUCTURE ESCLAVE DE LA LIAISON
C-- EN CHERCHANT LE FACTEUR MULTIPLICATEUR DANS LA MATRICE DE
C-- LIAISON LAGRANGE / LAGRANGE
      CALL JEVEUO(JEXNUM(MODGEN//'      .MODG.LIMA',
     &              ZI(LLIPR+(I1-1)*9+8)),'L',IBID)

C-- L'INTERFACE MAITRE EST CELLE DONT LE NUMERO EST NEGATIF
      IF ( INT(ZR(IBID)) .EQ. -2) THEN
        IMAST1=1
        IMAST2=-2
      ELSE
        IMAST2=2
        IMAST1=-1
      ENDIF

C-- SOUS STRUCTURE 1
      INDIN1='&&VEC_DDL_INTF_'//INTF1
      NBEQ1=ZI(LLIPR+(I1-1)*9+1)
C-- SOUS STRUCTURE 2
      INDIN2='&&VEC_DDL_INTF_'//INTF2
      NBEQ2=ZI(LLIPR+(I1-1)*9+4)

C-- RESTITUTION DES MODES SUR LES DIFFERENTES SOUS STRUCTURES

      IF (I1 .EQ. 1) THEN
        ZK8(LNOSST)=SST1
        ZK8(LNOSST+1)=SST2
        ZI(LNUSST)=2
        ZI(LNUSST+1)=1
        ZI(LNUSST+2)=2
        REST1='&&910001'
        REST2='&&910002'
        CALL REGEEC(REST1,RESGEN,SST1)
        CALL JEDETR('&&MODE_ETENDU_REST_ELIM')
        CALL REGEEC(REST2,RESGEN,SST2)
        CALL JEDETR('&&MODE_ETENDU_REST_ELIM')
      ELSE
        IBID=ZI(LNUSST)
        ISST1=0
        ISST2=0
        DO 60 J1=1,IBID
          IF (SST1 .EQ. ZK8(LNOSST+J1-1)) ISST1=J1
          IF (SST2 .EQ. ZK8(LNOSST+J1-1)) ISST2=J1
  60    CONTINUE
        IF (ISST1 .EQ. 0) THEN
          ZI(LNUSST)=ZI(LNUSST)+1
          ZI(LNUSST+ZI(LNUSST))=ZI(LNUSST)
          ZK8(LNOSST+ZI(LNUSST)-1)=SST1
          CALL CODENT(ZI(LNUSST),'D0',K4BID)
          REST1='&&91'//K4BID
          CALL REGEEC(REST1,RESGEN,SST1)
          CALL JEDETR('&&MODE_ETENDU_REST_ELIM')
        ELSE
          CALL CODENT(ZI(LNUSST+ISST1),'D0',K4BID)
          REST1='&&91'//K4BID
        ENDIF
        IF (ISST2 .EQ. 0) THEN
          ZI(LNUSST)=ZI(LNUSST)+1
          ZI(LNUSST+ZI(LNUSST))=ZI(LNUSST)
          ZK8(LNOSST+ZI(LNUSST)-1)=SST2
          CALL CODENT(ZI(LNUSST),'D0',K4BID)
          REST2='&&91'//K4BID
          CALL REGEEC(REST2,RESGEN,SST2)
          CALL JEDETR('&&MODE_ETENDU_REST_ELIM')
        ELSE
          CALL CODENT(ZI(LNUSST+ISST2),'D0',K4BID)
          REST2='&&91'//K4BID
        ENDIF
      ENDIF

C-- RECUPERATION DE LA SST ESCLAVE EN FONCTION DU NUMERO DE LA LIAISON
      DO 400 J1=1,ZI(LNUSST)
        IF (IMAST1 .EQ. 1) THEN
          IF (SST1 .EQ. ZK8(LNOSST+J1-1) ) THEN
            ZI(LSLAST+I1-1)=ZI(LNUSST+J1)
          ENDIF
          IF (SST2 .EQ. ZK8(LNOSST+J1-1) ) THEN
            ZI(LMASST+I1-1)=ZI(LNUSST+J1)
          ENDIF
        ENDIF
        IF (IMAST2 .EQ. 2) THEN
          IF (SST2 .EQ. ZK8(LNOSST+J1-1) ) THEN
            ZI(LSLAST+I1-1)=ZI(LNUSST+J1)
          ENDIF
          IF (SST1 .EQ. ZK8(LNOSST+J1-1) ) THEN
            ZI(LMASST+I1-1)=ZI(LNUSST+J1)
          ENDIF
        ENDIF
  400 CONTINUE

C-- OBSERVATION DE L'INTERFACE MAITRE

      CALL JEVEUO('&&LIPSRB.TR_MOD_MAST_PRO','L',LMAOBS)

C-- RECUPERATION D'INFOS (TAILLES, DDL INTERF, MODES RESTITUES, ETC.)
      CALL JELIRA(INDIN1,'LONMAX',NBDDL1,KB)
      CALL JELIRA(INDIN2,'LONMAX',NBDDL2,KB)
      CALL JEVEUO(INDIN1,'L',LLINT1)
      CALL JEVEUO(INDIN2,'L',LLINT2)
      CALL JEVEUO(JEXNUM(REST1//'           .TACH',1),'L',TACH1)
      CALL JEVEUO(JEXNUM(REST2//'           .TACH',1),'L',TACH2)
      CALL JELIRA(ZK24(TACH1)(1:19)//'.VALE','LONMAX',NBEQ1,KB)
      CALL JELIRA(ZK24(TACH2)(1:19)//'.VALE','LONMAX',NBEQ2,KB)

C-- ALLOCATION DES OBJETS TEMPORAIRE POUR LE CALCUL DES TRAVAUX
      CALL CODENT(I1,'D0',K4BID)
      CALL WKVECT('&&OP0091.OBS_01','V V R',NBDDL1,LOBS1)
      CALL WKVECT('&&OP0091.OBS_02','V V R',NBDDL2,LOBS2)
      CALL WKVECT('&&OP0091.SLA'//K4BID,'V V R',NL*NBMOD,LESC)
      CALL WKVECT('&&OP0091.MAS'//K4BID,'V V R',NL*NBMOD,LMAST)


C  POUR LE STOCKAGE DES DEPLACEMENTS IMPOSES A L'INTERFACE
      IF (IMAST1 .EQ. 1) THEN
        CALL WKVECT('&&OP0091.DEPL_IMPO_'//K4BID,'V V R',
     &              NBMOD*NBEQ1,LDEPSL)
        CALL WKVECT('&&OP0091.MAST_IMPO_'//K4BID,'V V R',
     &              NBMOD*NBEQ2,LDEPMA)
        LLINT=LLINT1
        NBDDL=NBDDL1
        NBEQ=NBEQ1
        CALL JENONU(JEXNOM(MODGEN//'      .MODG.SSNO',SST1),ISST1)

      ELSE
        CALL WKVECT('&&OP0091.DEPL_IMPO_'//K4BID,'V V R',
     &              NBMOD*NBEQ2,LDEPSL)
        CALL WKVECT('&&OP0091.MAST_IMPO_'//K4BID,'V V R',
     &              NBMOD*NBEQ1,LDEPMA)

        LLINT=LLINT2
        NBDDL=NBDDL2
        NBEQ=NBEQ2
        CALL JENONU(JEXNOM(MODGEN//'      .MODG.SSNO',SST2),ISST1)

      ENDIF

      CALL WKVECT('&&OP0091.LAGRANGES_1','V V I',NBDDL,LAG1)
      CALL WKVECT('&&OP0091.LAGRANGES_2','V V I',NBDDL,LAG2)

      CALL JEVEUO(JEXNUM(MODGEN//'      .MODG.SSME',ISST1),'L',
     &                   IBID)
      CALL JEVEUO(ZK8(IBID)//'.MAEL_RAID_REFE','L',LBID)
      MRAID=ZK24(LBID+1)(1:8)
      CALL DISMOI('F','NOM_NUME_DDL',MRAID,'MATR_ASSE',IBID,
     &            NUME91,IBID)
      DO 410 K1=1,NBDDL
        IF (ZI(LLINT+K1-1) .GT. 0) THEN
          CALL DDLLAG(NUME91,ZI(LLINT+K1-1),NBEQ,ZI(LAG1+K1-1),
     &                ZI(LAG2+K1-1))
        ENDIF
  410 CONTINUE

C  STOCKAGES DES EFFORTS
      CALL WKVECT('&&OP0091.MODE_SST1','V V R',NBEQ1,LMOD1)
      CALL WKVECT('&&OP0091.MODE_SST2','V V R',NBEQ2,LMOD2)
      CALL WKVECT('&&OP0091.MODE_SST1_EFF','V V R',NBEQ1,LEFF1)
      CALL WKVECT('&&OP0091.MODE_SST2_EFF','V V R',NBEQ2,LEFF2)

      CALL WKVECT('&&OP0091.MODE_SST1_EFFWI','V V R',NBEQ1,LEFI1)
      CALL WKVECT('&&OP0091.MODE_SST2_EFFWI','V V R',NBEQ2,LEFI2)

      CALL WKVECT('&&OP0091.MODE_SST1_COPY','V V R',NBEQ1,LCOPY1)
      CALL WKVECT('&&OP0091.MODE_SST2_COPY','V V R',NBEQ2,LCOPY2)
C--
C-- RECHERCHE DES MATRICES DE MASSE ET DE RAIDEUR
C--
      CALL JENONU(JEXNOM(MODGEN//'      .MODG.SSNO',SST1),ISST1)
      CALL JENONU(JEXNOM(MODGEN//'      .MODG.SSNO',SST2),ISST2)
C-- SST1
      CALL JEVEUO(JEXNUM(MODGEN//'      .MODG.SSME',ISST1),'L',
     &              IBID)
      CALL JEVEUO(ZK8(IBID)//'.MAEL_RAID_REFE','L',LBID)
      CALL MTDSCR(ZK24(LBID+1)(1:19))
      CALL JEVEUO(ZK24(LBID+1)(1:19)//'.&INT','L',ZI(LRAID+ISST1-1))
      CALL JEVEUO(ZK8(IBID)//'.MAEL_MASS_REFE','L',LBID)
      CALL MTDSCR(ZK24(LBID+1)(1:19))
      CALL JEVEUO(ZK24(LBID+1)(1:19)//'.&INT','L',ZI(LMASS+ISST1-1))
C-- SST2
      CALL JEVEUO(JEXNUM(MODGEN//'      .MODG.SSME',ISST2),'L',
     &                IBID)
      CALL JEVEUO(ZK8(IBID)//'.MAEL_RAID_REFE','L',LBID)
      CALL MTDSCR(ZK24(LBID+1)(1:19))
      CALL JEVEUO(ZK24(LBID+1)(1:19)//'.&INT','L',ZI(LRAID+ISST2-1))
      CALL JEVEUO(ZK8(IBID)//'.MAEL_MASS_REFE','L',LBID)
      CALL MTDSCR(ZK24(LBID+1)(1:19))
      CALL JEVEUO(ZK24(LBID+1)(1:19)//'.&INT','L',ZI(LMASS+ISST2-1))


C--
C-- BOUCLE SUR LES MODES PROPRES
C--
      DO 120 J1=1,NBMOD
C--
C-- SST1
C--
C-- RECUPERATION DU MODE RESTITUE
        CALL JEVEUO(ZK24(TACH1+J1-1)(1:19)//'.VALE','L',IBID)

C-- RECOPIE DANS UN VECTEUR DE TRAVAIL
        CALL LCEQVN(NBEQ1,ZR(IBID),ZR(LCOPY1))

C-- RECHERCHE DU MACRO ELEMENT ASSOCIE A LA SST
        CALL JEVEUO(JEXNUM(MODGEN//'      .MODG.SSME',ISST1),'L',
     &              IBID)
        CALL JEVEUO(ZK8(IBID)//'      .NUME.DEEQ','L',IDEEQ)

C-- ANULATION DES LAGRANGES
        CALL ZERLAG(ZR(LCOPY1),NBEQ1,ZI(IDEEQ))

C-- EXTRACTION DES COMPOSANTES ASSOCIEES A L'INTERFACE
        IBID=0
        DO 130 K1=1,NBDDL1
          IF (ZI(LLINT1+K1-1) .GT. 0) THEN
            ZR(LMOD1+ZI(LLINT1+K1-1)-1)=ZR(LCOPY1+ZI(LLINT1+K1-1)-1)
            ZR(LOBS1+IBID)=ZR(LCOPY1+ZI(LLINT1+K1-1)-1)
            IBID=IBID+1
          ENDIF
  130   CONTINUE

C-- CALCUL DU TRAVAIL
        CALL MRMULT('ZERO',ZI(LMASS+ISST1-1),ZR(LCOPY1),
     &              ZR(LEFF1),1,.TRUE.)
        CALL LCEQVN(NBEQ1,ZR(LEFF1),ZR(LEFI1))
        TRAVM=DDOT(NBEQ1,ZR(LMOD1),1,ZR(LEFF1),1)
        CALL MRMULT('ZERO',ZI(LRAID+ISST1-1),ZR(LCOPY1),
     &              ZR(LEFF1),1,.TRUE.)
        TRAVK=DDOT(NBEQ1,ZR(LMOD1),1,ZR(LEFF1),1)
        TRVINT=TRAVK-(ZR(LOMEG+J1-1)**2)*TRAVM
C--
C-- SST2
C--
C-- RECUPERATION DU MODE RESTITUE
        CALL JEVEUO(ZK24(TACH2+J1-1)(1:19)//'.VALE','L',IBID)

C-- RECOPIE DANS UN VECTEUR DE TRAVAIL
        CALL LCEQVN(NBEQ2,ZR(IBID),ZR(LCOPY2))

C-- RECHERCHE DU MACRO ELEMENT ASSOCIE A LA SST
        CALL JEVEUO(JEXNUM(MODGEN//'      .MODG.SSME',ISST2),'L',
     &              IBID)
        CALL JEVEUO(ZK8(IBID)//'      .NUME.DEEQ','L',IDEEQ)

C-- ANULATION DES LAGRANGES
        CALL ZERLAG(ZR(LCOPY2),NBEQ2,ZI(IDEEQ))

C-- EXTRACTION DES COMPOSANTES ASSOCIEES A L'INTERFACE
        IBID=0
        DO 150 K1=1,NBDDL2
          IF (ZI(LLINT2+K1-1) .GT. 0) THEN
            ZR(LMOD2+ZI(LLINT2+K1-1)-1)=ZR(LCOPY2+ZI(LLINT2+K1-1)-1)
            ZR(LOBS2+IBID)=ZR(LCOPY2+ZI(LLINT2+K1-1)-1)
            IBID=IBID+1
          ENDIF
  150   CONTINUE

C--
C-- CALCUL DE L'EFFORT RESIDUEL
C--
        CALL MRMULT('ZERO',ZI(LMASS+ISST2-1),ZR(LCOPY2),
     &              ZR(LEFF2),1,.TRUE.)
        CALL LCEQVN(NBEQ2,ZR(LEFF2),ZR(LEFI2))
        TRAVM=DDOT(NBEQ2,ZR(LMOD2),1,ZR(LEFF2),1)

        CALL MRMULT('ZERO',ZI(LRAID+ISST2-1),ZR(LCOPY2),
     &              ZR(LEFF2),1,.TRUE.)
        TRAVK=DDOT(NBEQ2,ZR(LMOD2),1,ZR(LEFF2),1)

        TRVINT=TRVINT+TRAVK-(ZR(LOMEG+J1-1)**2)*TRAVM
        IF (ZR(LOMEG+J1-1) .GT. 1) TRVINT=TRVINT/ZR(LOMEG+J1-1)

        ZR(LTRAIN+NBMOD*(I1-1)+J1-1)=TRVINT
        WRITE(UNIT,*)'MODE ',J1,' - TRAVAIL INTERFACE =',TRVINT

C--
C-- PROJECTION DES MOUVEMENTS DE L'INTERFACE MAITRE
C--
        IF (IMAST1 .EQ. -1) THEN
          LBID=LOBS1
          IBID=LOBS2
        ELSE
          LBID=LOBS2
          IBID=LOBS1
        ENDIF

        DO 300 K1=1,NL
C-- STOCKAGE DE LA PROJECTION DES MVTS MAITRES SUR L'INT. ESCLAVE
          DO 310 L1=1,NC
            ZR(LESC+(K1-1)+(J1-1)*NL)=ZR(LESC+(K1-1)+(J1-1)*NL)+
     &      ZR(LMAOBS+(K1-1)+(L1-1)*NL)*ZR(LBID+L1-1)
  310     CONTINUE
C-- STOCKAGE DES MVTS DE L'INT. ESCLAVE POUR EXPANSION
          ZR(LMAST+(K1-1)+(J1-1)*NL)=ZR(IBID+K1-1)
  300   CONTINUE

C-- DEPLACEMENT IMPOSE DE L'INTERFACE ESCLAVE

        L1=0
        DO 420 K1=1,NBDDL
          IF (ZI(LLINT+K1-1) .GT. 0) THEN
            ZR(LDEPSL+ZI(LAG1+K1-1)-1+NBEQ*(J1-1))=
     &         ZR(LESC+L1+(J1-1)*NL)
            ZR(LDEPSL+ZI(LAG2+K1-1)-1+NBEQ*(J1-1))=
     &         ZR(LESC+L1+(J1-1)*NL)
            L1=L1+1
          ENDIF
  420   CONTINUE

C--
C-- CALCUL DU TRAVAIL ASSOCIE AU DEPLACEMENT DIFERENTIEL DE L'INTERFACE
C--
C-- PAS AU POINT DU TOUT. FAUT TROUVER UNE NORME AD HOC
C-- JE COMMENTE TANT QUE J'AI PAS TROUVE

        IF (1 .GT. 2) THEN
        TRAVK=0.D0
        L1=0
        IF (IMAST1 .EQ. -1) THEN

          DO 430 K1=1,NBDDL
            IF (ZI(LLINT+K1-1) .GT. 0) THEN
              TRAVK=TRAVK +( ZR(LOBS2+L1) - ZR(LESC+L1+(J1-1)*NL) )*
     &                      (ZR(LEFF2+ZI(LLINT+K1-1)-1)-ZR(LOMEG+J1-1)*
     &                       ZR(LEFI2+ZI(LLINT+K1-1)-1))
              L1=L1+1
            ENDIF
  430     CONTINUE

        ELSE
          DO 431 K1=1,NBDDL
            IF (ZI(LLINT+K1-1) .GT. 0) THEN
              TRAVK=TRAVK +( ZR(LOBS1+L1) - ZR(LESC+L1+(J1-1)*NL) )*
     &                      (ZR(LEFF1+ZI(LLINT+K1-1)-1)-ZR(LOMEG+J1-1)*
     &                       ZR(LEFI1+ZI(LLINT+K1-1)-1))
              L1=L1+1
            ENDIF
  431     CONTINUE

        ENDIF
        IF (ZR(LOMEG+J1-1) .GT. 1) TRAVK=TRAVK/ZR(LOMEG+J1-1)

        WRITE(UNIT,*)'                - DECOLLEMENT =',TRAVK
        WRITE(UNIT,*)' '

        ENDIF


  120 CONTINUE

      END
