      SUBROUTINE CHMANO(IZONE,NDIM,NESCL,IESCL0,NOMA,NEWGEO,DEFICO,
     &                  RESOCO,CMULT,MULNOR)
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 29/06/2004   AUTEUR MABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================

      IMPLICIT NONE

      LOGICAL MULNOR
      INTEGER NDIM,NESCL,IESCL0
      REAL*8 CMULT
      CHARACTER*8 NOMA
      CHARACTER*24 NEWGEO,DEFICO,RESOCO

C ----------------------------------------------------------------------
C ROUTINE APPELEE PAR : RECHME
C ----------------------------------------------------------------------
C
C RECHERCHE DE LA MAILLE LA PLUS PROCHE CONNAISSANT LE NOEUD LE PLUS
C PROCHE.
C
C IN  NDIM   : DIMENSION DE L'ESPACE (2 OU 3)
C IN  NESCL  : NOMBRE DE NOEUDS ESCLAVES DE LA ZONE A EXAMINER
C IN  IESCL0 : INDICE DU PREMIER NOEUD ESCLAVE A EXAMINER
C IN  NOMA   : NOM DU MAILLAGE
C IN  NEWGEO : GEOMETRIE ACTUALISEE EN TENANT COMPTE DU CHAMP DE
C              DEPLACEMENTS COURANT
C IN  CONTNO : LISTE DES NOEUDS DE CONTACT (DIM NNOCO)
C IN  CONTMA : LISTE DES NUMEROS DES MAILLES POTENTIELLES DE CONTACT
C IN  MANOCO : TABLEAU DONNANT POUR CHAQUE NOEUD DE CONTACT LA LISTE DES
C              MAILLES DE CONTACT DE LA MEME SURFACE LE CONTENANT
C IN  PMANO  : POINTEUR DE CE TABLEAU (DIM NNOCO+1)
C IN  NOMACO : TABLEAU DONNANT POUR CHAQUE MAILLE DE CONTACT LA LISTE
C              DES NOEUDS DE CONTACT DE LA MEME SURFACE QU'ELLE CONTIENT
C IN  PNOMA  : POINTEUR DE CE TABLEAU (DIM NMACO+1)
C IN  DDLCO  : NUMEROS DES DDLS DES NOEUDS DE CONTACT POTENTIELS
C IN  PDDL   : POINTEUR DES DDLS DES NOEUDS DE CONTACT POTENTIELS
C VAR RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  CMULT  : COEFFICIENT MULTIPLICATEUR DE LA RELATION UNILATERALE
C IN  NORMCO : COMPOSANTES DES NORMALES AUX NOEUDS DE CONTACT
C IN  MULNOR : LOGIQUE QUI VAUT 1 LORSQU'ON MULTIPLIE LES COEFFICIENTS
C              DE LA RELATION UNILATERALE PAR LES COMPOSANTES DES
C              NORMALES (I.E. : ON EST DANS UNE ZONE OU LA RELATION
C              UNILATERALE PORTE SUR LE DEPLACEMENT)
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------

      CHARACTER*32 JEXNUM,JEXNOM
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------

      INTEGER JAPMEM,JAPPAR,JAPPTR,JAPCOE,JAPJEU,JPDDL,JDEC
      INTEGER JAPDDL,JNOCO,JMACO,JMANO,JPOMA,JDECDL,JDECAL,IFM,NIV
      INTEGER IESCL,POSNO1,POSNO2,POSMA,IMA,NBMA,K,REAPRO,IZONE
      INTEGER POSNO(10),POSMIN,DDL(30),NBNO,NBDDL,INO,JDIM,NESMAX
      INTEGER POS1,POS2,NUM1,NUM2,NBDDL1,NBDDL2
      INTEGER JNORMO,JTANGO,JAPJFX,JAPCOF,JMETH,JAPJFY
      REAL*8 NORM(3),COEF(30),OLDJEU,JEU,JEUMIN,R8GAEM
      REAL*8 TANG(6),JEUFX,COFX(30),COFY(30)
      CHARACTER*8 NOM1,NOM2
      CHARACTER*24 APMEMO,APPARI,APPOIN,APCOEF,NORMCO,APJEU,APDDL
      CHARACTER*24 APJEFX,APCOFR,TANGCO,DDLCO,PDDL,METHCO,APJEFY
      CHARACTER*24 NDIMCO,CONTNO,CONTMA,MANOCO,PMANO,NOMACO,PNOMA
      INTEGER      TYPALC,TYPALF,FROT3D,MATTAN

C ----------------------------------------------------------------------

      CALL JEMARQ()
      CALL INFNIV(IFM,NIV)

C --- INFOS SUR LA CHARGE DE CONTACT
      CALL CFDISC(DEFICO,RESOCO(1:14),TYPALC,TYPALF,FROT3D,MATTAN)

C --- LECTURE DES SD POUR LE CONTACT POTENTIEL

      CONTMA = DEFICO(1:16)//'.MAILCO'
      CONTNO = DEFICO(1:16)//'.NOEUCO'
      MANOCO = DEFICO(1:16)//'.MANOCO'
      PMANO  = DEFICO(1:16)//'.PMANOCO'
      PDDL   = DEFICO(1:16)//'.PDDLCO'
      METHCO = DEFICO(1:16)//'.METHCO'
      NDIMCO = DEFICO(1:16)//'.NDIMCO'

      CALL JEVEUO(CONTNO,'L',JNOCO)
      CALL JEVEUO(CONTMA,'L',JMACO)
      CALL JEVEUO(MANOCO,'L',JMANO)
      CALL JEVEUO(PMANO, 'L',JPOMA)
      CALL JEVEUO(PDDL,  'L',JPDDL)
      CALL JEVEUO(NDIMCO,'L',JDIM )
      CALL JEVEUO(METHCO,'L',JMETH)

C --- ADRESSES DES STRUCTURES DE DONNEES

      NORMCO = RESOCO(1:14)//'.NORMCO'
      TANGCO = RESOCO(1:14)//'.TANGCO'
      APMEMO = RESOCO(1:14)//'.APMEMO'
      APPARI = RESOCO(1:14)//'.APPARI'
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APJEU  = RESOCO(1:14)//'.APJEU'
      APDDL  = RESOCO(1:14)//'.APDDL'


      CALL JEVEUO(NORMCO,'E',JNORMO)
      CALL JEVEUO(TANGCO,'E',JTANGO)
      CALL JEVEUO(APMEMO,'E',JAPMEM)
      CALL JEVEUO(APPARI,'E',JAPPAR)
      CALL JEVEUO(APPOIN,'E',JAPPTR)
      CALL JEVEUO(APCOEF,'E',JAPCOE)
      CALL JEVEUO(APJEU, 'E',JAPJEU)
      CALL JEVEUO(APDDL, 'E',JAPDDL)

      IF (TYPALF.NE.0) THEN
        APJEFX = RESOCO(1:14)//'.APJEFX'
        APJEFY = RESOCO(1:14)//'.APJEFY'
        APCOFR = RESOCO(1:14)//'.APCOFR'
        CALL JEVEUO(APCOFR,'E',JAPCOF)
        CALL JEVEUO(APJEFX,'E',JAPJFX)
        CALL JEVEUO(APJEFY,'E',JAPJFY)
      ENDIF

C ----------------------------------------------------------------------
C                   BOUCLE SUR LES NOEUDS ESCLAVES
C ----------------------------------------------------------------------

      NESMAX = ZI(JDIM+8)
      DO 70 IESCL = IESCL0, IESCL0 + NESCL - 1

C --- INDICE DU NOEUD ESCLAVE ET INDICE DU NOEUD MAITRE LE PLUS PROCHE

        POSNO1 = ZI(JAPPAR+3* (IESCL-1)+1)
        POSNO2 = ABS(ZI(JAPPAR+3* (IESCL-1)+2))

C --- BOUCLE SUR LES MAILLES CONTENANT LE NOEUD POSNO2

        NBMA = ZI(JPOMA+POSNO2) - ZI(JPOMA+POSNO2-1)
        JDEC = ZI(JPOMA+POSNO2-1)
        JEUMIN = R8GAEM()

        DO 60 IMA = 1,NBMA

          POSMA = ZI(JMANO+JDEC+IMA-1)
          NUM2  = ZI(JMACO+POSMA-1)
          NUM1  = ZI(JNOCO+POSNO1-1)
          CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NUM1),NOM1)
          CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NUM2),NOM2)
          REAPRO = ABS(ZI(JAPPAR+3* (IESCL-1)+3))

C - CALCUL DE LA PROJECTION SUR LA MAILLE, ET DU JEU MINIMUM

          CALL PROJEC(IZONE,NDIM,NOMA,NEWGEO,RESOCO,DEFICO,MULNOR,
     &                POSNO1,POSMA,REAPRO,CMULT,NORM,POSNO,COEF,
     &             OLDJEU,JEU,DDL,NBNO,NBDDL,TANG,JEUFX,COFX,COFY)

C - SI JEU (AVANT CORRECTION) < JEU MINIMUM, STOCKER LES VALEURS

          IF (OLDJEU.LT.JEUMIN) THEN
            JDECAL = ZI(JAPPTR+IESCL-1)
            JDECDL = 0
            POSMIN = POSMA
            JEUMIN = OLDJEU
            ZI(JAPMEM+4* (POSNO1-1)+2) = POSMIN
            ZI(JAPPAR+3* (IESCL-1)+2) = POSMIN
            ZR(JAPJEU+IESCL-1) = JEU
            ZR(JNORMO+3* (IESCL-1)  ) = NORM(1)
            ZR(JNORMO+3* (IESCL-1)+1) = NORM(2)
            ZR(JNORMO+3* (IESCL-1)+2) = NORM(3)
            NBDDL1 = ZI(JPDDL+POSNO1) - ZI(JPDDL+POSNO1-1)
            ZR(JTANGO + 6*(IESCL-1)  ) = TANG(1)
            ZR(JTANGO + 6*(IESCL-1)+1) = TANG(2)
            ZR(JTANGO + 6*(IESCL-1)+2) = TANG(3)
            ZR(JTANGO + 6*(IESCL-1)+3) = TANG(4)
            ZR(JTANGO + 6*(IESCL-1)+4) = TANG(5)
            ZR(JTANGO + 6*(IESCL-1)+5) = TANG(6)
            IF (ZI(JMETH+6).EQ.2) THEN
              
              DO 10 K = 1,NBDDL1
                ZR(JAPCOF+JDECAL+K-1) = COFX(JDECDL+K)
   10         CONTINUE
            ELSE IF (ZI(JMETH+6).GE.3) THEN

              ZR(JAPJFX+IESCL-1) = 0.D0
              ZR(JAPJFY+IESCL-1) = 0.D0
              DO 20 K = 1,NBDDL1
                ZR(JAPCOF+JDECAL+K-1) = COFX(JDECDL+K)
                IF (NDIM.EQ.3) THEN
                  ZR(JAPCOF+JDECAL+30*NESMAX+K-1) = COFY(JDECDL+K)
                END IF
   20         CONTINUE
            END IF
            DO 30 K = 1,NBDDL1
              ZR(JAPCOE+JDECAL+K-1) = COEF(JDECDL+K)
              ZI(JAPDDL+JDECAL+K-1) = DDL(JDECDL+K)
   30       CONTINUE
            JDECAL = JDECAL + NBDDL1
            JDECDL = JDECDL + NBDDL1
            DO 50 INO = 1,NBNO
              NBDDL2 = ZI(JPDDL+POSNO(INO+1)) - ZI(JPDDL+POSNO(INO+1)-1)
              DO 40 K = 1,NBDDL2
                ZR(JAPCOE+JDECAL+K-1) = COEF(JDECDL+K)
                IF (ZI(JMETH+6).EQ.2) THEN
                  ZR(JAPCOF+JDECAL+K-1) = COFX(JDECDL+K)
                ELSE IF (ZI(JMETH+6).GE.3) THEN
                  ZR(JAPCOF+JDECAL+K-1) = COFX(JDECDL+K)
                  IF (NDIM.EQ.3) THEN
                    ZR(JAPCOF+JDECAL+30*NESMAX+K-1) = COFY(JDECDL+K)
                  END IF
                END IF
                ZI(JAPDDL+JDECAL+K-1) = DDL(JDECDL+K)
   40         CONTINUE
              JDECAL = JDECAL + NBDDL2
              JDECDL = JDECDL + NBDDL2
   50       CONTINUE
          END IF

   60   CONTINUE

C --- MODIF DE APPARI POUR QUE LA PROJECTION NE SOIT PAS REFAITE POUR CE
C --- NOEUD ESCLAVE DANS PROJCO SI ELLE VIENT D'ETRE FAITE DANS RECHCO

        ZI(JAPPAR+3* (IESCL-1)+3) = 0

C --- INCREMENTATION DU POINTEUR APPOIN

        ZI(JAPPTR+IESCL) = ZI(JAPPTR+IESCL-1) + NBDDL

C --- IMPRESSIONS

        IF (NIV.GE.2) THEN
          POS1 = POSNO1
          NUM1 = ZI(JNOCO+POS1-1)
          CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NUM1),NOM1)
          POS2 = POSMIN
          NUM2 = ZI(JMACO+POS2-1)
          CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NUM2),NOM2)
        END IF

   70 CONTINUE

C ----------------------------------------------------------------------

      CALL JEDEMA()
      END
