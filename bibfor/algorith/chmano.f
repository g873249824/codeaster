      SUBROUTINE CHMANO(NOMA  ,IZONE ,NEWGEO,DEFICO,RESOCO,
     &                  NOESYM,IESCL0,NFESCL)
C     
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/03/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_20
C
      IMPLICIT     NONE
      INTEGER      IZONE
      INTEGER      IESCL0,NFESCL
      CHARACTER*8  NOMA
      CHARACTER*24 NEWGEO
      CHARACTER*24 DEFICO
      CHARACTER*24 RESOCO
      CHARACTER*24 NOESYM
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - APPARIEMENT - MAIT/ESCL)
C
C RECHERCHE DE LA MAILLE LA PLUS PROCHE CONNAISSANT LE NOEUD LE PLUS
C PROCHE
C
C ----------------------------------------------------------------------
C
C
C IN  IZONE  : NUMERO DE LA ZONE DE CONTACT ACTUELLE
C IN  IESCL0 : INDICE DU PREMIER NOEUD ESCLAVE A EXAMINER
C IN  NOMA   : NOM DU MAILLAGE
C IN  NEWGEO : GEOMETRIE ACTUALISEE EN TENANT COMPTE DU CHAMP DE
C              DEPLACEMENTS COURANT
C IN  DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C I/O NFESCL : NOMBRE DE NOEUDS DE LA ZONE
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFMMVD,CFDISI,ZAPME,ZAPPA
      INTEGER      IFM,NIV
      INTEGER      TYPALC,TYPALF,FROT3D,MATTAN
      INTEGER      NESMAX,NBNOM,NBMA,NBDDLT,NDIM,NESCL,NSYME,NZOCO
      CHARACTER*24 NDIMCO,PMANO,CONTNO,CONTMA,APPARI,MANOCO,APPOIN
      INTEGER      JDIM,JPOMA,JNOCO,JMACO,JAPPAR,JMANO,JAPPTR
      CHARACTER*24 PDDL,NORMCO,TANGCO,APMEMO,APCOEF,APJEU,APDDL
      INTEGER      JPDDL,JNORMO,JTANGO,JAPMEM,JAPCOE,JAPJEU,JAPDDL
      CHARACTER*24 APJEFX,APJEFY,APCOFR,NOMACO,PNOMA,SYMECO
      INTEGER      JAPCOF,JAPJFX,JAPJFY,JNOMA,JPONO,JSYME
      INTEGER      IMA,POSNOM,JDEC,POSMA
      INTEGER      PROJ,POSNO(10),DDL(30)
      REAL*8       JEUMIN,R8GAEM,JEUPM,JEU
      REAL*8       NORM(3),TANG(6),COEF(30),COFX(30),COFY(30)
      CHARACTER*3  PROJOP
      INTEGER      PROYES,POSMIN,PROMIN,POSESC,IESCL
      INTEGER      ZONESY,NZOCP,JSYEXC
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()      
      CALL INFDBG('CONTACT',IFM,NIV)
C   
C --- AFFICHAGE
C
      CALL CFIMPE(IFM,NIV,'CHMANO',1)                
C
C --- INFOS SUR LA CHARGE DE CONTACT
C
      CALL CFDISC(DEFICO,RESOCO(1:14),TYPALC,TYPALF,FROT3D,MATTAN)
C
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APCOFR = RESOCO(1:14)//'.APCOFR'
      APDDL  = RESOCO(1:14)//'.APDDL'
      APJEFX = RESOCO(1:14)//'.APJEFX'
      APJEFY = RESOCO(1:14)//'.APJEFY'
      APJEU  = RESOCO(1:14)//'.APJEU'
      APMEMO = RESOCO(1:14)//'.APMEMO'
      APPARI = RESOCO(1:14)//'.APPARI'
      APPOIN = RESOCO(1:14)//'.APPOIN'
      CONTNO = DEFICO(1:16)//'.NOEUCO'
      CONTMA = DEFICO(1:16)//'.MAILCO'      
      NDIMCO = DEFICO(1:16)//'.NDIMCO'      
      MANOCO = DEFICO(1:16)//'.MANOCO'
      NOMACO = DEFICO(1:16)//'.NOMACO'
      NORMCO = RESOCO(1:14)//'.NORMCO'
      PDDL   = DEFICO(1:16)//'.PDDLCO'
      PMANO  = DEFICO(1:16)//'.PMANOCO'
      PNOMA  = DEFICO(1:16)//'.PNOMACO'
      TANGCO = RESOCO(1:14)//'.TANGCO' 
      SYMECO = DEFICO(1:16)//'.SYMECO'       
C 
      CALL JEVEUO(APCOEF,'E',JAPCOE)
      CALL JEVEUO(APDDL, 'E',JAPDDL)
      CALL JEVEUO(APJEU, 'E',JAPJEU)
      CALL JEVEUO(APMEMO,'E',JAPMEM)
      CALL JEVEUO(APPARI,'E',JAPPAR)
      CALL JEVEUO(APPOIN,'E',JAPPTR)
      CALL JEVEUO(CONTNO,'L',JNOCO )
      CALL JEVEUO(CONTMA,'L',JMACO )      
      CALL JEVEUO(MANOCO,'L',JMANO )
      CALL JEVEUO(NOMACO,'L',JNOMA )
      CALL JEVEUO(NORMCO,'E',JNORMO)
      CALL JEVEUO(PDDL,  'L',JPDDL )
      CALL JEVEUO(PMANO, 'L',JPOMA )
      CALL JEVEUO(PNOMA, 'L',JPONO )
      CALL JEVEUO(TANGCO,'E',JTANGO)
      CALL JEVEUO(SYMECO,'L',JSYME ) 
      CALL JEVEUO(NDIMCO,'E',JDIM  )       
      IF (TYPALF.NE.0) THEN
        CALL JEVEUO(APCOFR,'E',JAPCOF)
        CALL JEVEUO(APJEFX,'E',JAPJFX)
        CALL JEVEUO(APJEFY,'E',JAPJFY)
      ENDIF
C
C --- INITIALISATION DE VARIABLES
C
      NZOCO  = CFDISI(DEFICO,'NZOCO',IZONE)
      NSYME  = ZI(JSYME)      
      ZAPME  = CFMMVD('ZAPME')
      ZAPPA  = CFMMVD('ZAPPA')
      NZOCP  = NZOCO - NSYME
      NESMAX = CFDISI(DEFICO,'NESMAX'     ,IZONE)
      NDIM   = CFDISI(DEFICO,'NDIM'       ,IZONE)
      NESCL  = CFDISI(DEFICO,'NESCL_ZONE' ,IZONE)
C
C --- ZONE SYMETRIQUE
C --- 0: PAS D'APPARIEMENT SYMETRIQUE
C --- 1: APPARIEMENT SYMETRIQUE IZONE EST UNE ZONE DE CONTACT PRINCIPALE
C --- 2: APPARIEMENT SYMETRIQUE IZONE EST UNE ZONE DE CONTACT SYMETRIQUE
C
      ZONESY = 0
      IF (NSYME.NE.0) THEN
        IF (IZONE.GT.NZOCP) THEN
          ZONESY = 2
        ELSE
          ZONESY = 1
        ENDIF
      ENDIF
      IF (ZONESY.NE.0) THEN
        CALL JEVEUO(NOESYM,'E',JSYEXC)
      ENDIF
C
C --- BOUCLE SUR LES NOEUDS ESCLAVES
C
      CALL CFIMPE(IFM,NIV,'CHMANO',2) 
C
C --- PREMIER NOEUD ESCLAVE DE LA ZONE
C
      IESCL    = IESCL0
C
C --- BOUCLAGE SUR LES NOEUDS ESCLAVES
C
  70  CONTINUE
C
C --- INDICE DU NOEUD ESCLAVE ET INDICE DU NOEUD MAITRE LE PLUS PROCHE
C
        POSESC = ZI(JAPPAR+ZAPPA*(IESCL-1)+1)
        POSNOM = ZI(JAPMEM+ZAPME*(POSESC-1)+1)      
C
C --- NOMBRE DE MAILLES CONTENANT LE NOEUD MAITRE
C
        NBMA   = ZI(JPOMA+POSNOM) - ZI(JPOMA+POSNOM-1)
        IF (NBMA.LE.0) THEN
          CALL CFIMPA('CHMANO',1) 
        ENDIF
C
C --- DECALAGE DANS LES TABLEAUX POUR LE NOEUD MAITRE
C
        JDEC   = ZI(JPOMA+POSNOM-1)
C
C --- TYPE DE PROJECTION
C
        PROJ   = ZI(JAPPAR+ZAPPA*(IESCL-1)+3)
C
C --- INITIALISATION PROJECTION
C
        JEUMIN = R8GAEM()
        PROJOP = 'NOP'
        POSMIN = -1        
C
C --- BOUCLE SUR LES MAILLES CONTENANT LE NOEUD MAITRE
C
        DO 60 IMA = 1,NBMA
C
C --- MAILLE COURANTE
C
          POSMA = ZI(JMANO+JDEC+IMA-1)
C
C --- CALCUL DE LA PROJECTION SUR LA MAILLE, ET DU JEU MINIMUM
C
          CALL PROJEC(IZONE ,NDIM  ,NEWGEO,RESOCO,DEFICO,               
     &                POSESC,POSMA ,NORM  ,TANG  ,COEF  , 
     &                COFX  ,COFY  ,JEU   ,NBNOM ,POSNO ,
     &                NBDDLT,DDL   ,
     &                NOMA  ,PROJ  ,ZONESY,JEUPM ,PROYES)
C
C --- CHOIX DE L'APPARIEMENT SUIVANT LE RESULTAT DE LA PROJECTION
C
          CALL CFCHOI(POSMA ,PROYES,ZONESY,JEUPM ,
     &                JEUMIN,POSMIN,PROMIN,PROJOP)     
C          
C --- ON APPARIE (NOUVEAU OU REMPLACE ANCIEN)
C --- DANS LE CAS DE LA SUPPRESSION 'SUP', ON APPARIE MAIS
C --- ON INFORMERA LE VECTEUR RESOCO.APMEMO QUE CE NOEUD EST EXCLU
C --- VIA LA ROUTINE CFSUPM
C
          IF ((PROJOP.EQ.'ADD').OR.(PROJOP.EQ.'STC').OR.
     &        (PROJOP.EQ.'PIV').OR.(PROJOP.EQ.'SUP')) THEN
              
            CALL CFPARM(JAPMEM,JAPPAR,ZAPME ,ZAPPA ,
     &                  POSMIN,POSESC,POSMIN,IESCL)

            CALL CFADDM(JAPPTR,JAPJEU,JNORMO,
     &                  JPDDL ,JTANGO,JAPCOF,JAPCOE,JAPJFX,
     &                  JAPJFY,JAPDDL,
     &                  TYPALF,FROT3D,POSESC,
     &                  IESCL ,NESMAX,NORM  ,TANG  ,COEF  ,
     &                  COFX  ,COFY  ,JEU   ,NBNOM ,POSNO ,
     &                  NBDDLT,DDL)
          ENDIF
   60   CONTINUE
C
C --- ON SUPPRIME LA LIAISON OU PAS
C
        CALL CFSUPP(NOMA  ,POSESC,POSMIN,PROMIN,PROJOP,
     &              IZONE ,IESCL ,JDIM  ,JNOMA ,JPONO ,
     &              JNOCO ,JMACO ,JAPPAR,JAPMEM,JSYEXC)
C
C --- NOEUD ESCLAVE SUIVANT
C
        IESCL = IESCL + 1
C
C --- CHOIX DU BOUCLAGE
C
      IF (IESCL.LE.(IESCL0 + NESCL - 1)) THEN
C       ON CONTINUE LA BOUCLE
        GOTO 70
      ELSE
C       ON SORT DE LA BOUCLE
        GOTO 80
      ENDIF
C --- BOUCLAGE SUR LES NOEUDS ESCLAVES

  80  CONTINUE
C
C --- NOMBRE DE NOEUDS ESCLAVES SUR LA ZONE
C
      NFESCL = IESCL - IESCL0    
C
C --- VERIFICATIONS
C          
      IF (NFESCL.NE.NESCL) THEN
          CALL CFIMPA('CHMANO',2)
      ENDIF   
C
C --- DESTRUCTION DES VECTEURS DE TRAVAIL
C
      IF ((IZONE.EQ.NZOCO).AND.(ZONESY.EQ.2)) THEN
        CALL JEDETR(NOESYM)
      ENDIF
C
      CALL JEDEMA()
      END
