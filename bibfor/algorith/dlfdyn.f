      SUBROUTINE DLFDYN( RIGID , AMORT , LAMORT ,
     &                   NEQ,
     &                   D0 , V0, F ,F0)
      IMPLICIT NONE
      REAL *8      D0(*) , V0(*), F(*), F0(*)
      INTEGER      RIGID, AMORT, NEQ
      LOGICAL      LAMORT
C
C**********************************************************************
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/06/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C   BUT :      CALCUL DU VECTEUR FORCE DYNAMIQUE
C
C              F  = F   -  K D0 - C V0
C  ======
C
C   INPUT:
C   ---> RIGID   : POINTEUR DE LA MATRICE RIGIDITE
C   ---> AMORT   : POINTEUR DE LA MATRICE AMORTISSEMENT
C   ---> LAMORT  : VARIABLE LOGIQUE
C                     .TRUE. SI IL Y A UNE MATRICE AMORTISSEMENT
C                     .FALSE. SINON
C   ---> NEQ   : NOMBRE D'EQUATIONS (D.D.L. ACTIFS)
C   ---> D0    : VECTEUR DEPLACEMENT INITIAL (NEQ)
C   ---> V0    : VECTEUR VITESSE INITIAL  (NEQ)
C   ---> F0    : VECTEUR REEL DE TRAVAIL  (NEQ)
C
C   VAR   :
C   <--> F     : VECTEUR FORCE EXTERIEURE ENTREE (NEQ)
C                VECTEUR FORCE DYNAMIQUE SORTIE (NEQ)
C
C----------------------------------------------------------------------
      REAL *8    MUN
C
      MUN    = -1.D0
      CALL MRMULT('ZERO',RIGID,D0,F0,1,.TRUE.)
      CALL DAXPY ( NEQ , MUN , F0 , 1 , F , 1 )
      IF (LAMORT) THEN
         CALL MRMULT('ZERO',AMORT,V0,F0,1,.TRUE.)
         CALL DAXPY ( NEQ , MUN , F0 ,  1 , F , 1 )
      ENDIF
      END
