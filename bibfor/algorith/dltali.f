      SUBROUTINE DLTALI ( NEQ,RESULT,
     &                    IMAT, MASSE, RIGID, LIAD, LIFO,
     &                    NCHAR, NVECA,
     &                    LCREA, LPREM, LAMORT, T0,
     &                    MATE,CARELE,CHARGE,INFOCH,FOMULT,
     &                    MODELE, NUMEDD, NUME,
     &                    SOLVEU, CRITER,
     &                    DEP0, VIT0, ACC0, FEXTE0, FAMOR0, FLIAI0,
     &                    BASENO, TABWK ,FORCE0,FORCE1)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/06/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C ----------------------------------------------------------------------
C
C       DYNAMIQUE LINEAIRE TRANSITOIRE - ALGORITHME - INITIALISATION
C       -         -        -             --           -
C ----------------------------------------------------------------------
C  IN  : NEQ       : NOMBRE D'EQUATIONS
C  IN  : IMAT      : TABLEAU D'ADRESSES POUR LES MATRICES
C  IN  : MASSE     : MATRICE DE MASSE
C  IN  : RIGID     : MATRICE DE RIGIDITE
C  IN  : LIAD      : LISTE DES ADRESSES DES VECTEURS CHARGEMENT (NVECT)
C  IN  : LIFO      : LISTE DES NOMS DES FONCTIONS EVOLUTION (NVECT)
C  IN  : NCHAR     : NOMBRE D'OCCURENCES DU MOT CLE CHARGE
C  IN  : NVECA     : NOMBRE D'OCCURENCES DU MOT CLE VECT_ASSE
C  IN  : LCREA     : LOGIQUE INDIQUANT SI IL Y A REPRISE
C  IN  : LAMORT    : LOGIQUE INDIQUANT SI IL Y A AMORTISSEMENT
C  IN  : MATE      : NOM DU CHAMP DE MATERIAU
C  IN  : CARELE    : CARACTERISTIQUES DES POUTRES ET COQUES
C  IN  : CHARGE    : LISTE DES CHARGES
C  IN  : INFOCH    : INFO SUR LES CHARGES
C  IN  : FOMULT    : LISTE DES FONC_MULT ASSOCIES A DES CHARGES
C  IN  : MODELE    : MODELE
C  IN  : NUMEDD    : NUME_DDL DE LA MATR_ASSE RIGID
C  IN  : NUME      : NUMERO D'ORDRE DE REPRISE
C  IN  : SOLVEU    : NOM DU SOLVEUR
C  VAR : DEP0      : TABLEAU DES DEPLACEMENTS A L'INSTANT N
C  VAR : VIT0      : TABLEAU DES VITESSES A L'INSTANT N
C  VAR : ACC0      : TABLEAU DES ACCELERATIONS A L'INSTANT N
C  IN  : BASENO    : BASE DES NOMS DE STRUCTURES
C ----------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE
      INTEGER NEQ
      INTEGER NVECA, NCHAR
      INTEGER LIAD(*), IARG
      INTEGER IMAT(3), NUME
C
      REAL*8 DEP0(*), VIT0(*), ACC0(*)
      REAL*8 FEXTE0(*), FAMOR0(*), FLIAI0(*)
      REAL*8 T0,RBID
      REAL*8 TABWK(*)
C
      CHARACTER*8 BASENO,RESULT
      CHARACTER*8 MASSE, RIGID
      CHARACTER*19 SOLVEU
      CHARACTER*24 CHARGE, INFOCH, FOMULT, MATE, CARELE
      CHARACTER*24 MODELE, NUMEDD
      CHARACTER*24 LIFO(*)
      CHARACTER*24 CRITER
      CHARACTER*19 FORCE0,FORCE1

      LOGICAL LCREA, LPREM
      LOGICAL LAMORT
C
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER           ZI
      COMMON / IVARJE / ZI(1)
      REAL*8            ZR
      COMMON / RVARJE / ZR(1)
      COMPLEX*16        ZC,CBID
      COMMON / CVARJE / ZC(1)
      LOGICAL           ZL
      COMMON / LVARJE / ZL(1)
      CHARACTER*8       ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                       ZK24
      CHARACTER*32                                ZK32
      CHARACTER*80                                         ZK80
      COMMON / KVARJE / ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER INCHAC
C
      INTEGER      IBID,ICODE,IEQ,NDY,IFEXTM,IFEXTC
      CHARACTER*8  MATREI, MAPREI, DYNA
      CHARACTER*19 CHSOL

      INTEGER      IFORC0,IFORC1
      CHARACTER*24 CINE
C
C     -----------------------------------------------------------------
C
C====
C 1. CREATION DES STRUCTURES
C====
C
      CALL VTCREB (FORCE0, NUMEDD, 'V', 'R', NEQ)
      CALL JEVEUO (FORCE0(1:19)//'.VALE', 'E', IFORC0)
      CALL VTCREB (FORCE1, NUMEDD, 'V', 'R', NEQ)
      CALL JEVEUO (FORCE1(1:19)//'.VALE', 'E', IFORC1)
C
C 1.2. ==> NOM DES STRUCTURES DE TRAVAIL
C
      CHSOL  = '&&DLTALI.SOLUTION'
      CINE   = ' '

C====
C 2. L'INITIALISATION
C====

      INCHAC = 0
      LCREA = .TRUE.
      CALL DLTINI ( LCREA, NUME,RESULT,
     &              DEP0, VIT0, ACC0,
     &              FEXTE0, FAMOR0, FLIAI0,
     &              NEQ, NUMEDD, INCHAC, BASENO)

C
C====
C 4. --- CHARGEMENT A L'INSTANT INITIAL OU DE REPRISE ---
C====

      CALL DLFEXT (NVECA,NCHAR,T0,NEQ,LIAD,
     &             LIFO,CHARGE,INFOCH,FOMULT,MODELE,
     &             MATE,CARELE,NUMEDD,ZR(IFORC0))

C====
C 5. --- CALCUL DU CHAMP D'ACCELERATION INITIAL ---
C====

      IF ( INCHAC.NE.0 ) THEN
C
C 5.1. ==> --- RESOLUTION AVEC FORCE1 COMME SECOND MEMBRE ---
C
         CALL JEVEUO (FORCE1(1:19)//'.VALE', 'E', IFORC1)
         CALL DCOPY (NEQ,ZR(IFORC0),1,ZR(IFORC1),1)
         CALL DLFDYN (IMAT(1),IMAT(3),LAMORT,NEQ,
     &                DEP0,VIT0, ZR(IFORC1),TABWK )
C
         MATREI = '&&MASSI'
         IF (LPREM) THEN
           LPREM=.FALSE.
           CALL AJLAGR ( RIGID , MASSE , MATREI )
C
C 5.2. ==> DECOMPOSITION OU CALCUL DE LA MATRICE DE PRECONDITIONEMENT
           CALL PRERES (SOLVEU,'V',ICODE,MAPREI,MATREI,IBID,-9999)
         ENDIF
C                                       ..          .
C 5.3. ==> RESOLUTION DU PROBLEME:  M.X  =  F - C.X - K.X
C                                       ..          .

         CALL RESOUD ( MATREI, MAPREI, FORCE1, SOLVEU, CINE,
     &                 'V', CHSOL, CRITER,0,RBID,CBID,.TRUE.)
C
C 5.4. ==> SAUVEGARDE DU CHAMP SOLUTION CHSOL DANS VDEPL
C
         CALL COPISD('CHAMP_GD','V',CHSOL(1:19),FORCE1(1:19))
         CALL JEVEUO (FORCE1(1:19)//'.VALE', 'L', IFORC1)
C
C 5.5. ==> DESTRUCTION DU CHAMP SOLUTION CHSOL
C
         CALL DETRSD('CHAMP_GD',CHSOL)
C
C 5.6 ==> STOCKAGE DE LA SOLUTION, FORC1, DANS LA STRUCTURE DE RESULTAT
C           EN TANT QUE CHAMP D'ACCELERATION A L'INSTANT COURANT
         CALL DCOPY(NEQ,ZR(IFORC1),1,ACC0,1)

      ENDIF
C
C CALCUL DE LA FORCE INITIALE SI PAS DE REPRISE A PARTIR D UN RESULTAT
C

      CALL GETVID('ETAT_INIT','RESULTAT',1,IARG,1,DYNA,NDY)
      IF (NDY.EQ.0) THEN
        CALL WKVECT('FEXT0M','V V R',NEQ,IFEXTM)
        CALL MRMULT('ZERO',IMAT(1),DEP0,FEXTE0,1,.TRUE.)
        CALL MRMULT('ZERO',IMAT(2),ACC0,ZR(IFEXTM),1,.TRUE.)
        CALL WKVECT('FEXT0C','V V R',NEQ,IFEXTC)
        IF (LAMORT) THEN
          CALL MRMULT('ZERO',IMAT(3),VIT0,ZR(IFEXTC),1,.TRUE.)
        ENDIF
        DO 562 IEQ=1,NEQ
          FEXTE0(IEQ)=FEXTE0(IEQ)+ZR(IFEXTM-1+IEQ)
     &               +ZR(IFEXTC-1+IEQ)
  562   CONTINUE
      ENDIF
      CALL JEDETR('FEXT0M')
      CALL JEDETR('FEXT0C')
C
      END
