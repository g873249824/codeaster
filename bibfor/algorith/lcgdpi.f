      SUBROUTINE LCGDPI (NDIM,IMATE,COMPOR,TM,
     &                   TP,TREF,FM,DF,SIGM,VIM,
     &                   OPTION,SIGP,VIP,DSIGDF, IRET)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 26/11/2002   AUTEUR ADBHHVV V.CANO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C TOLE CRP_20

      IMPLICIT NONE
      INTEGER            NDIM,IMATE, IRET
      CHARACTER*16       COMPOR(3),OPTION
      REAL*8             TM,TP,TREF
      REAL*8             DF(3,3),FM(3,3)
      REAL*8             VIM(3),VIP(3)
      REAL*8             SIGM(*),SIGP(*),DSIGDF(6,3,3)

C.......................................................................
C       INTEGRATION DE LA LOI DE COMPORTEMENT PLASTIQUE ISOTROPE
C              EN GRANDES DEFORMATIONS DE TYPE SIMO-MIEHE
C.......................................................................
C IN  NDIM    : DIMENSION DE L'ESPACE
C IN  IMATE   : ADRESSE DU MATERIAU CODE
C IN  COMPOR  : COMPORTEMENT
C IN  TM      : TEMPERATURE A L INSTANT PRECEDENT
C IN  TP      : TEMPERATURE A L'INSTANT DU CALCUL
C IN  TREF    : TEMPERATURE DE REFERENCE
C IN  DF      : INCREMENT DU GRADIENT DE LA TRANSFORMATION
C IN  FM      : GRADIENT DE LA TRANSFORMATION A L INSTANT PRECEDENT
C IN  SIGM    : CONTRAINTES DE CAUCHY A L INSTANT PTECEDENT
C IN  VIM     : VARIABLES INTERNES A L INSTANT DU CALCUL PRECEDENT
C                 VIM(1)=P (DEFORMATION PLASTIQUE CUMULEE)
C                 VIM(2)=INDICATEUR DE PLASTICITE
C                          0 : ELASTIQUE  1: PLASTIQUE
C                 TRE EST STOCKE DANS :
C                 VIP(3) POUR LA PLASTICITE OU 
C                 VIP(1) POUR L ELASTICITE
C IN  OPTION  : OPTION DEMANDEE : RIGI_MECA_TANG , FULL_MECA , RAPH_MECA
C OUT SIGP    : CONTRAINTES DE CAUCHY A L'INSTANT ACTUEL
C OUT VIP     : VARIABLES INTERNES A L'INSTANT ACTUEL
C OUT DSIGDF  : DERIVEE DE SIGMA PAR RAPPORT A F
C OUT IRET    : CODE RETOUR DE  L'INTEGRATION DE LA LDC
C               IRET=0 => PAS DE PROBLEME
C               IERT=1 => DJ<0 ET INTEGRATION IMPOSSIBLE
C
C          ATTENTION LES TENSEURS ET MATRICES SONT RANGES DANS
C          L'ORDRE :  XX,YY,ZZ,XY,XZ,YZ
C.......................................................................


      INTEGER JPROLM,JVALEM,NBVALM,JPROLP,JVALEP,NBVALP
      INTEGER I,J1,M,K,L,NBR
      LOGICAL PLASTI
      REAL*8  R8BID
      REAL*8  JM,J,DJ,DFB(3,3)
      REAL*8  TAUM(6),TRTAUM,DVTAUM(6),EQTAUM
      REAL*8  BEM(6)
      REAL*8  BEL(6),DVBEL(6),TRBEL
      REAL*8  DVTEL(6),EQTEL
      REAL*8  TAU(6),DVTAU(6),TRTAU,EQTAU
      REAL*8  DP,RM,RP,SEUIL,AIRERP
      REAL*8  VALRES(3)
      REAL*8  E,EM,ETILDE,NU,NUM,MU,MUM
      REAL*8  ALPHA,ALPHAM
      REAL*8  DSDE,SIGY,RPRIM,TROISK,TROIKM
      REAL*8  JE2,JE3,XM,XP,SOL(3)
      REAL*8  COEFF1,COEFF2,COEFF3,COEFF4,COEFF5,COEFF6,COEFF7
      REAL*8  MAT0(3,3),MAT1(3,3),MAT2(6,3,3),MAT4(3,3)
      REAL*8  H(6,3,3),HT(6),TA(6),DVTA(6)
      CHARACTER*2 BL2,FB2,CODRET(3)
      CHARACTER*8 NOMRES(3)
      REAL*8      KR(6),PDTSCA(6)
      INTEGER     IND(3,3)
      DATA        KR/1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
      DATA        PDTSCA/1.D0,1.D0,1.D0,2.D0,2.D0,2.D0/
      DATA        IND/1,4,5,
     &                4,2,6,
     &                5,6,3/


C SIGNIFICATION DES VARIABLES LOCALES
C
C  FB(I,J)=(J**(-1/3))*F(I,J)
C  GPM(I,J) : DEFORMATION PLASTIQUE LAGRANGIENNE A L'INSTANT PRECEDENT
C  B(I,J)=FB(I,K)*GPM(K,L)*FB(J,L)
C  BETR(1)=B(1,1), BETR(2)=B(2,2),...,BETR(6)=B(2,3)=B(3,2)
C
C TENSEUR DE DEFORMATION ELASTIQUE EULERIEN : BE
C TENSEUR DE DEFORMATION PLASTIQUE LAGRANGIEN : GP
C TAU : TENSEUR DE KIRSHHOFF


C RECUPERATION DES CARACTERISTIQUES DU MATERIAU (PREMIER TEMPS) :
C - POUR VMIS-ISOT-TRAC, ON RECUPERE NU ET ALPHA
C - POUR ELAS OU VMIS-ISOT-LINE,ON RECUPERE E,NU,ALPHA.
C   ON CALCULE MU ET 3K

      NOMRES(1)='E'
      NOMRES(2)='NU'
      NOMRES(3)='ALPHA'
      BL2 = '  '
      FB2 = 'F '

      IF (COMPOR(1)(1:14).EQ.'VMIS_ISOT_TRAC') THEN
        CALL RCVALA(IMATE,'ELAS',1,'TEMP',TM,1,
     &              NOMRES(2),VALRES(2),CODRET(2),FB2)
        NUM=VALRES(2)
        CALL RCVALA(IMATE,'ELAS',1,'TEMP',TM,1,
     &              NOMRES(3),VALRES(3),CODRET(3),BL2)
        IF(CODRET(3).NE.'OK') VALRES(3)=0.D0
        ALPHAM=VALRES(3)

        CALL RCVALA(IMATE,'ELAS',1,'TEMP',TP,1,
     &              NOMRES(2),VALRES(2),CODRET(2),FB2)
        NU=VALRES(2)
        CALL RCVALA(IMATE,'ELAS',1,'TEMP',TP,1,
     &              NOMRES(3),VALRES(3),CODRET(3),BL2)
        IF(CODRET(3).NE.'OK') VALRES(3)=0.D0
        ALPHA=VALRES(3)
      ELSE
        CALL RCVALA(IMATE,'ELAS',1,'TEMP',TM,2,
     &              NOMRES(1),VALRES(1),CODRET(1),FB2)
        CALL RCVALA(IMATE,'ELAS',1,'TEMP',TM,1,
     &              NOMRES(3),VALRES(3),CODRET(3),BL2)
        IF(CODRET(3).NE.'OK') VALRES(3)=0.D0
        EM=VALRES(1)
        NUM=VALRES(2)
        MUM=EM/(2.D0*(1.D0+NUM))
        TROIKM=EM/(1.D0-2.D0*NUM)
        ALPHAM=VALRES(3)

        CALL RCVALA(IMATE,'ELAS',1,'TEMP',TP,2,
     &              NOMRES(1),VALRES(1),CODRET(1),FB2)
        CALL RCVALA(IMATE,'ELAS',1,'TEMP',TP,1,
     &              NOMRES(3),VALRES(3),CODRET(3),BL2)
        IF(CODRET(3).NE.'OK') VALRES(3)=0.D0
        E=VALRES(1)
        NU=VALRES(2)
        MU=E/(2.D0*(1.D0+NU))
        TROISK=E/(1.D0-2.D0*NU)
        ALPHA=VALRES(3)
      ENDIF


C RECUPERATION DES CARACTERISTIQUES DU MATERIAU (SECOND TEMPS) :
C - POUR VMIS-ISOT-LINE, ON RECUPERE DSDE, SIGY. ON CALCULE RPRIM ET RM
C - POUR VMIS-ISOT-TRAC, ON RECUPERE E,SIGY,RPRIM ET RM.
C   ON CALCULE MU ET 3K

      IF (COMPOR(1)(1:9).EQ.'VMIS_ISOT') THEN
       PLASTI=(VIM(2).GE.0.5D0)
       IF(COMPOR(1)(10:14).EQ.'_LINE') THEN
        NOMRES(1)='D_SIGM_EPSI'
        NOMRES(2)='SY'
        IF(OPTION(1:14).EQ.'RIGI_MECA_TANG') THEN
         CALL RCVALA(IMATE,'ECRO_LINE',1,'TEMP',TM,2,
     &               NOMRES,VALRES,CODRET,FB2)
         DSDE=VALRES(1)
         SIGY=VALRES(2)
         RPRIM=DSDE*EM/(EM-DSDE)
         RM=RPRIM*VIM(1)+SIGY
        ELSE
         CALL RCVALA(IMATE,'ECRO_LINE',1,'TEMP',TP,2,
     &               NOMRES,VALRES,CODRET,FB2)
         DSDE=VALRES(1)
         SIGY=VALRES(2)
         RPRIM=DSDE*E/(E-DSDE)
         RM=RPRIM*VIM(1)+SIGY
        ENDIF
       ELSE
        CALL RCTRAC(IMATE,'TRACTION','SIGM',TM,JPROLM,
     &              JVALEM,NBVALM,EM)
        MUM=EM/(2.D0*(1.D0+NUM))
        TROIKM=EM/(1.D0-2.D0*NUM)
        IF(OPTION(1:14).EQ.'RIGI_MECA_TANG') THEN

         CALL RCFONC('S','TRACTION',JPROLM,JVALEM,NBVALM,SIGY,
     &           R8BID,R8BID,R8BID,R8BID,R8BID,R8BID,R8BID,R8BID)
         CALL RCFONC('V','TRACTION',JPROLM,JVALEM,NBVALM,R8BID,R8BID,
     &           R8BID,VIM(1),RM,RPRIM,AIRERP,R8BID,R8BID)
       ENDIF

        CALL RCTRAC(IMATE,'TRACTION','SIGM',TP,JPROLP,JVALEP,NBVALP,E)
        MU=E/(2.D0*(1.D0+NU))
        TROISK=E/(1.D0-2.D0*NU)
       IF(OPTION(1:9).EQ.'RAPH_MECA'.OR.
     &  OPTION(1:9).EQ.'FULL_MECA') THEN
         CALL RCFONC('S','TRACTION',JPROLP,JVALEP,NBVALP,SIGY,
     &          R8BID,R8BID,R8BID,R8BID,R8BID,R8BID,R8BID,R8BID)
         CALL RCFONC('V','TRACTION',JPROLP,JVALEP,NBVALP,R8BID,
     &           R8BID,R8BID,VIM(1),RM,RPRIM,AIRERP,R8BID,R8BID)
        ENDIF
       ENDIF
      ELSE
       RM=0.D0
       PLASTI=.FALSE.
      ENDIF


C CALCUL DE JM=DET(FM),DJ=DET(DF),J=JM*DJ ET DFB

      JM=FM(1,1)*(FM(2,2)*FM(3,3)-FM(2,3)*FM(3,2))
     &  -FM(2,1)*(FM(1,2)*FM(3,3)-FM(1,3)*FM(3,2))
     &  +FM(3,1)*(FM(1,2)*FM(2,3)-FM(1,3)*FM(2,2))

      DJ=DF(1,1)*(DF(2,2)*DF(3,3)-DF(2,3)*DF(3,2))
     &  -DF(2,1)*(DF(1,2)*DF(3,3)-DF(1,3)*DF(3,2))
     &  +DF(3,1)*(DF(1,2)*DF(2,3)-DF(1,3)*DF(2,2))

      J=JM*DJ

      DO 10 I=1,3
       DO 20 J1=1,3
        IF (DJ.LE.0.D0) THEN
          IRET = 1
          GOTO 9999
        ELSE
          DFB(I,J1)=(DJ**(-1.D0/3.D0))*DF(I,J1)
        ENDIF
 20    CONTINUE
 10   CONTINUE


C CALCUL DES CONTRAINTES DE KIRSHHOFF A L INSTANT PRECEDENT

      TAUM(5)=0.D0
      TAUM(6)=0.D0
      DO 40 I=1,2*NDIM
       TAUM(I)=JM*SIGM(I)
 40   CONTINUE

      TRTAUM=TAUM(1)+TAUM(2)+TAUM(3)
      EQTAUM=0.D0
      DO 50 I=1,6
       DVTAUM(I)=TAUM(I)-KR(I)*TRTAUM/3.D0
       EQTAUM=EQTAUM+PDTSCA(I)*(DVTAUM(I)**2.D0)
 50   CONTINUE
      EQTAUM=SQRT(1.5D0*EQTAUM)


C CALCUL DES DEFORMATIONS ELASTIQUES A L INSTANT PRECEDENT :
C BEM=DVTAUM/MUM+KR*TRBEM/3.D0

      IF (COMPOR(1)(1:4).EQ.'ELAS') THEN
       XM = (JM**(-2.D0/3.D0))*(1.D0-2.D0*VIM(1)/3.D0)
      ELSE
       XM = (JM**(-2.D0/3.D0))*(1.D0-2.D0*VIM(3)/3.D0)
      ENDIF
      DO 60 I=1,6
       BEM(I)=DVTAUM(I)/MUM+KR(I)*XM
 60   CONTINUE

C CALCUL DE BEL(I,J)=DFB(I,K)*BEM(K,L)*DFB(J,L)

      DO 70 I=1,3
       DO 80 J1=1,3
        BEL(IND(I,J1))=0.D0
        DO 90 K=1,3
         DO 100 L=1,3
          BEL(IND(I,J1))=BEL(IND(I,J1))
     &    +DFB(I,K)*BEM(IND(K,L))*DFB(J1,L)
 100     CONTINUE
 90     CONTINUE
 80    CONTINUE
 70   CONTINUE

C CALCUL DE LA TRACE ET DE LA PARTIE DEVIATORIQUE DU TENSEUR BEL

      TRBEL=BEL(1)+BEL(2)+BEL(3)

      DO 110 I=1,6
       DVBEL(I)=BEL(I)-KR(I)*TRBEL/3.D0
 110  CONTINUE

C CALCUL DE LA CONTRAINTE ELASTIQUE (PARTIE DEVIATORIQUE)

      DO 120 I=1,6
       DVTEL(I)=MU*DVBEL(I)
 120  CONTINUE

C CALCUL DE LA CONTRAINTE EQUIVALENTE ELASTIQUE ET DU SEUIL

      EQTEL=0.D0
      DO 130 I=1,6
       EQTEL=EQTEL+PDTSCA(I)*DVTEL(I)*DVTEL(I)
 130  CONTINUE
      EQTEL=SQRT(1.5D0*EQTEL)

      SEUIL=EQTEL-RM

C TRACE DU TENSEUR DE KIRSHHOFF (CONNUE CAR NE DEPEND QUE DE J)

      TRTAU=(TROISK/2.D0)*((J**2.D0)-1.D0)
     &     -(3.D0*TROISK/2.D0)*ALPHA*(TP-TREF)*(J+(1.D0/J))


C CORRECTION PLASTIQUE

      IF(OPTION(1:9).EQ.'RAPH_MECA'.OR.
     &   OPTION(1:9).EQ.'FULL_MECA') THEN

       IF(COMPOR(1)(1:4).EQ.'ELAS') THEN
        DO 140 I=1,6
         TAU(I)=DVTEL(I)+KR(I)*TRTAU/3.D0
 140    CONTINUE
        DO 150 I=1,4
         SIGP(I)=TAU(I)/J         
150     CONTINUE
        IF(NDIM.EQ.3)THEN
           SIGP(5)=TAU(5)/J
           SIGP(6)=TAU(6)/J
       ENDIF
       ELSE IF (COMPOR(1)(1:9).EQ.'VMIS_ISOT') THEN
        IF (SEUIL.LE.0.D0) THEN
         VIP(1)=VIM(1)
         VIP(2)=0.D0
         DO 170 I=1,6
          TAU(I)=DVTEL(I)+KR(I)*TRTAU/3.D0
 170     CONTINUE
         IF(NDIM.EQ.2)THEN
          DO 180 I=1,4
           SIGP(I)=TAU(I)/J
 180      CONTINUE
         ELSE
          DO 190 I=1,6
           SIGP(I)=TAU(I)/J
 190      CONTINUE
         ENDIF
        ELSE
         VIP(2)=1.D0
         IF(COMPOR(1)(10:14).EQ.'_LINE') THEN
          DP=SEUIL/(RPRIM+MU*TRBEL)
          RP=SIGY+RPRIM*(VIM(1)+DP)
         ELSE
          ETILDE=E*TRBEL/3.D0
          CALL RCFONC('E','TRACTION',JPROLP,JVALEP,NBVALP,R8BID,
     &                ETILDE,NU,VIM(1),RP,RPRIM,AIRERP,EQTEL,DP)
         ENDIF
         VIP(1)=VIM(1)+DP
         DO 200 I=1,6
          DVTAU(I)=RP*DVTEL(I)/EQTEL
          TAU(I)=DVTAU(I)+KR(I)*TRTAU/3.D0
 200     CONTINUE
         IF(NDIM.EQ.2)THEN
          DO 210 I=1,4
           SIGP(I)=TAU(I)/J
 210      CONTINUE
         ELSE
          DO 220 I=1,6
           SIGP(I)=TAU(I)/J
 220      CONTINUE
         ENDIF
        ENDIF
        PLASTI=(VIP(2).GE.0.5D0)
       ENDIF
      ENDIF

C - CALCUL DE LA MATRICE TANGENTE DSIGDF
C DEFINITION DE DIFFERENTS COEFFICIENTS POUR CALCULER DSIGDF

      IF(OPTION(1:14).EQ.'RIGI_MECA_TANG'.OR.
     &   OPTION(1:9) .EQ.'FULL_MECA') THEN

      MAT0(1,1)=DF(2,2)*DF(3,3)-DF(2,3)*DF(3,2)
      MAT0(2,2)=DF(1,1)*DF(3,3)-DF(1,3)*DF(3,1)
      MAT0(3,3)=DF(1,1)*DF(2,2)-DF(1,2)*DF(2,1)
      MAT0(1,2)=DF(3,1)*DF(2,3)-DF(2,1)*DF(3,3)
      MAT0(2,1)=DF(1,3)*DF(3,2)-DF(1,2)*DF(3,3)
      MAT0(1,3)=DF(2,1)*DF(3,2)-DF(3,1)*DF(2,2)
      MAT0(3,1)=DF(1,2)*DF(2,3)-DF(1,3)*DF(2,2)
      MAT0(2,3)=DF(3,1)*DF(1,2)-DF(1,1)*DF(3,2)
      MAT0(3,2)=DF(2,1)*DF(1,3)-DF(1,1)*DF(2,3)

      DO 230 I=1,3
       DO 240 J1=1,3
        MAT1(I,J1)=0.D0
        DO 250 K=1,3
         MAT1(I,J1)=MAT1(I,J1)+DFB(I,K)*BEM(IND(K,J1))
 250    CONTINUE
 240   CONTINUE
 230  CONTINUE

      DO 260 I=1,3
       DO 270 J1=1,3
        DO 280 M=1,3
         DO 290 K=1,3
          MAT2(IND(I,J1),M,K)=KR(IND(I,M))*MAT1(J1,K)
     &                       +KR(IND(J1,M))*MAT1(I,K)
 290     CONTINUE
 280    CONTINUE
 270   CONTINUE
 260  CONTINUE

      IF (PLASTI) THEN
       IF(OPTION(1:14).EQ.'RIGI_MECA_TANG') THEN
        COEFF2=MUM
        COEFF3=-2.D0*MUM/3.D0
        COEFF4=-3.D0*(MUM**2.D0)*TRBEL/
     &        ((EQTAUM**2.D0)*(RPRIM+MUM*TRBEL))
        COEFF5=0.D0
        COEFF7=(TROIKM*J/3.D0)-TROIKM*ALPHAM*(TM-TREF)
     &        *(1.D0-(J**(-2.D0)))/2.D0
        DO 300 I=1,6
         TA(I)=TAUM(I)
         DVTA(I)=DVTAUM(I)
 300    CONTINUE
       ELSE
        COEFF1=(RP+MU*DP*TRBEL)/RP
        COEFF2=MU/COEFF1
        COEFF3=-2.D0*MU/(3.D0*COEFF1)
        COEFF4=3.D0*(MU**2.D0)*TRBEL*(RPRIM*DP-RP)
        COEFF4=COEFF4/((RP**2.D0)*(RP+MU*DP*TRBEL)
     &        *(RPRIM+MU*TRBEL))
        COEFF5=-2.D0*MU*DP*RPRIM/(RP*(RPRIM+MU*TRBEL))
        COEFF7=(TROISK*J/3.D0)-TROISK*ALPHA*(TP-TREF)
     1        *(1.D0-(J**(-2.D0)))/2.D0
        DO 310 I=1,6
         TA(I)=TAU(I)
         DVTA(I)=DVTAU(I)
 310    CONTINUE
       ENDIF
       COEFF6=0.D0
       DO 320 I=1,6
        COEFF6=COEFF6+PDTSCA(I)*DVTA(I)*BEL(I)
 320   CONTINUE

       DO 330 M=1,3
        DO 340 K=1,3
         MAT4(M,K)=0.D0
         DO 350 L=1,3
          MAT4(M,K)=MAT4(M,K)
     &    +DVTA(IND(M,L))*MAT1(L,K)
 350     CONTINUE
 340    CONTINUE
 330   CONTINUE

       DO 360 I=1,6
        HT(I)=2.D0*COEFF2*DVBEL(I)+COEFF4*COEFF6*DVTA(I)
     &       +COEFF5*TRBEL*DVTA(I)
        DO 370 M=1,3
         DO 380 K=1,3
          H(I,M,K)=COEFF2*MAT2(I,M,K)+COEFF3*KR(I)*MAT1(M,K)
     &            +COEFF4*DVTA(I)*MAT4(M,K)+COEFF5*DVTA(I)*MAT1(M,K)
 380     CONTINUE
 370    CONTINUE
 360   CONTINUE

      ELSE
       IF(OPTION(1:14).EQ.'RIGI_MECA_TANG') THEN
        COEFF2=MUM
        COEFF3=-2.D0*MUM/3.D0
        COEFF7=(TROIKM*J/3.D0)-TROIKM*ALPHAM*(TM-TREF)
     &        *(1.D0-(J**(-2.D0)))/2.D0
        DO 390 I=1,6
         TA(I)=TAUM(I)
 390    CONTINUE
       ELSE
        COEFF2=MU
        COEFF3=-2.D0*MU/3.D0
        COEFF7=(TROISK*J/3.D0)-TROISK*ALPHA*(TP-TREF)
     1        *(1.D0-(J**(-2.D0)))/2.D0
        DO 400 I=1,6
         TA(I)=TAU(I)
 400    CONTINUE
       ENDIF

       DO 410 I=1,6
        HT(I)=2.D0*COEFF2*DVBEL(I)
        DO 420 M=1,3
         DO 430 K=1,3
          H(I,M,K)=COEFF2*MAT2(I,M,K)+COEFF3*KR(I)*MAT1(M,K)
 430     CONTINUE
 420    CONTINUE
 410   CONTINUE

      ENDIF

      DO 440 I=1,6
       DO 450 M=1,3
        DO 460 K=1,3
         DSIGDF(I,M,K)=(DJ**(-1.D0/3.D0))*H(I,M,K)/J
     &                +JM*COEFF7*KR(I)*MAT0(M,K)/J
     &                -HT(I)*MAT0(M,K)/(3.D0*J*DJ)
     &                -JM*TA(I)*MAT0(M,K)/(J**2.D0)
 460    CONTINUE
 450   CONTINUE
 440  CONTINUE

      ENDIF

      IF(OPTION(1:9).EQ.'RAPH_MECA'.OR.
     &  OPTION(1:9).EQ.'FULL_MECA') THEN
            
C CORRECTION SUR TRBE

       TRTAU=TAU(1)+TAU(2)+TAU(3)
       EQTAU=0.D0
       DO 500 I=1,6
        DVTAU(I)=TAU(I)-KR(I)*TRTAU/3.D0
        EQTAU=EQTAU+PDTSCA(I)*(DVTAU(I)**2.D0)
 500   CONTINUE
       EQTAU=SQRT(1.5D0*EQTAU)
       JE2=(EQTAU**2.D0)/(3.D0*(MU**2.D0))
       JE3=DVTAU(1)*(DVTAU(2)*DVTAU(3)-DVTAU(6)*DVTAU(6))
     &   -DVTAU(4)*(DVTAU(4)*DVTAU(3)-DVTAU(5)*DVTAU(6))
     &   +DVTAU(5)*(DVTAU(4)*DVTAU(6)-DVTAU(5)*DVTAU(2))
       JE3=JE3/(MU**3.D0)
      
       CALL ZEROP3(0.D0,-JE2,JE3-1.D0,SOL,NBR)
       IF (NBR.LE.1) THEN
        XP=SOL(1)
       ELSE
        XP=SOL(1)
        DO 510 I=2,NBR       
         IF ((ABS(SOL(I)-XM)).LT.(ABS(SOL(I-1)-XM))) XP=SOL(I)
 510    CONTINUE
       ENDIF       
       IF (COMPOR(1)(1:4).EQ.'ELAS') THEN
        VIP(1) = 3.D0*(1.D0-(J**(2.D0/3.D0))*XP)/2.D0
       ELSE
        VIP(3) = 3.D0*(1.D0-(J**(2.D0/3.D0))*XP)/2.D0
       ENDIF
           
      ENDIF
            
 9999 CONTINUE

      END
