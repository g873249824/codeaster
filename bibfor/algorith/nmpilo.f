      SUBROUTINE NMPILO(SDPILO,DELTAT,RHO   ,SOLALG,VEASSE,
     &                  MODELE,MATE  ,COMPOR,RESOCO,VALINC,
     &                  NBATTE,NUMEDD,NBEFFE,ETA   ,PILCVG,
     &                  CARELE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER       NBATTE,NBEFFE
      INTEGER       PILCVG
      REAL*8        DELTAT,RHO, ETA(NBATTE)
      CHARACTER*19  SDPILO
      CHARACTER*19  SOLALG(*),VEASSE(*),VALINC(*)
      CHARACTER*24  MODELE,MATE  ,COMPOR,CARELE
      CHARACTER*24  NUMEDD
      CHARACTER*24  RESOCO
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PILOTAGE)
C
C RESOLUTION DE L'EQUATION DE PILOTAGE
C
C ----------------------------------------------------------------------
C
C
C       DU = DUN + RHO.DU0 + ETA.RHO.DU1
C       AVEC UN CHARGEMENT F0 + ETA_VRAI.F1
C       ET ETA_VRAI = ETA + ETAN * (1-RHO)
C       ETA_MIN < ETA_VRAI < ETA_MAX
C
C
C IN  SDPILO : SD PILOTAGE
C IN  DELTAT : INCREMENT DE TEMPS
C IN  RHO    : VALEUR DU PAS DE RECHERCHE LINEAIRE
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : MATERIAU
C IN  COMPOR : COMPORTEMENT
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  NBATTE : NOMBRE DE SOLUTIONS ATTENDUES
C OUT NBEFFE : NOMBRE DE SOLUTIONS EFFECTIVES
C OUT ETA    : ETA_PILOTAGE
C OUT PILCVG : CODE DE CONVERGENCE POUR LE PILOTAGE
C                -1 : PAS DE CALCUL DU PILOTAGE
C                 0 : CAS DU FONCTIONNEMENT NORMAL
C                 1 : PAS DE SOLUTION
C                 2 : BORNE ATTEINTE -> FIN DU CALCUL
C
C
C
C
      INTEGER      NEQ, I, IRET, IERM
      INTEGER      JPLTK,JPLIR,JDU0, JDU1
      REAL*8       DTAU,ETRMIN,ETRMAX,COEF
      CHARACTER*8  K8BID
      CHARACTER*19 DDEPL0,DDEPL1
      INTEGER      JDEP0 ,JDEP1
      CHARACTER*24 TYPPIL
      CHARACTER*19 LIGRPI,CARTYP,CARETA
      CHARACTER*19 DEPMOI,DEPDEL,DEPPR1,DEPPR2
      CHARACTER*19 CNFEPI
      INTEGER      IFM,NIV
      LOGICAL      ISXFE
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('PILOTAGE',IFM,NIV)
      CALL EXIXFE(MODELE,IERM)
      ISXFE=(IERM.EQ.1)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<PILOTAGE> ... CALCUL DU ETA_PILOTAGE'
      ENDIF
C
C --- INITIALISATIONS
C
      PILCVG = -1
      DDEPL0 = '&&CNPART.CHP1'
      DDEPL1 = '&&CNPART.CHP2'
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C
      CALL NMCHEX(VALINC,'VALINC','DEPMOI',DEPMOI)
      CALL NMCHEX(VEASSE,'VEASSE','CNFEPI',CNFEPI)
      CALL NMCHEX(SOLALG,'SOLALG','DEPDEL',DEPDEL)
      CALL NMCHEX(SOLALG,'SOLALG','DEPPR1',DEPPR1)
      CALL NMCHEX(SOLALG,'SOLALG','DEPPR2',DEPPR2)
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- LECTURE DONNEES PILOTAGE
C
      CALL JEVEUO(SDPILO(1:19)//'.PLTK','L',JPLTK)
      CALL JEVEUO(SDPILO(1:19)//'.PLIR','L',JPLIR)
      ETRMIN = ZR(JPLIR+4)
      ETRMAX = ZR(JPLIR+3)
      TYPPIL = ZK24(JPLTK)
      COEF   = ZR(JPLIR)
      DTAU   = DELTAT / COEF
      LIGRPI = ZK24(JPLTK+1)(1:19)
      CARTYP = ZK24(JPLTK+2)(1:19)
      CARETA = ZK24(JPLTK+3)(1:19)
C
C --- INCREMENTS DE DEPLACEMENT RHO.DU0 ET RHO.DU1
C
      CALL JEVEUO(DEPPR1(1:19)//'.VALE','L',JDU0)
      CALL JEVEUO(DEPPR2(1:19)//'.VALE','L',JDU1)
      CALL JEVEUO(DDEPL0(1:19)//'.VALE','E',JDEP0)
      CALL JEVEUO(DDEPL1(1:19)//'.VALE','E',JDEP1)
      DO 10 I = 1, NEQ
        ZR(JDEP0+I-1) = RHO * ZR(JDU0+I-1)
        ZR(JDEP1+I-1) =       ZR(JDU1+I-1)
 10   CONTINUE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<PILOTAGE> ...... SECOND MEMBRE DTAU : ',DTAU
      ENDIF
C
C --- PILOTAGE PAR UN DDL IMPOSE
C
      IF (TYPPIL.EQ.'DDL_IMPO'.OR.TYPPIL.EQ.'SAUT_IMPO') THEN
        CALL NMPIDD(NUMEDD,SDPILO,DTAU  ,DEPDEL,DDEPL0,
     &              DDEPL1,ETA(1),PILCVG,NBEFFE)
C
C --- PILOTAGE POUR ANALYSE LIMITE : TRAVAIL UNITAIRE
C
      ELSE IF (TYPPIL.EQ.'ANA_LIM') THEN
        CALL NMPIAL(NUMEDD,DEPDEL,DEPMOI,CNFEPI,DDEPL0,
     &              DDEPL1,ETA(1),PILCVG,NBEFFE)
C
C --- PILOTAGE PAR LONGUEUR D'ARC
C
      ELSE IF (TYPPIL.EQ.'LONG_ARC'.OR.
     &         TYPPIL.EQ.'SAUT_LONG_ARC') THEN
        CALL NMPILA(NUMEDD,SDPILO,ISXFE ,DTAU  ,DEPDEL,
     &              DDEPL0,DDEPL1,NBEFFE,ETA   ,PILCVG)
C
C --- PILOTAGE PAR CRITERE
C
      ELSE IF (TYPPIL.EQ.'PRED_ELAS'
     &    .OR. TYPPIL.EQ.'DEFORMATION') THEN
        CALL NMPIPE(MODELE,LIGRPI,CARTYP,CARETA,MATE  ,
     &              COMPOR,RESOCO,VALINC,DEPDEL,DDEPL0,
     &              DDEPL1,DTAU  ,NBEFFE,ETA   ,PILCVG,
     &              TYPPIL,CARELE)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- LE CALCUL DE PILOTAGE A FORCEMENT ETE REALISE
C
      CALL ASSERT(PILCVG.GE.0)
C
C --- RECADRAGE DANS LES BORNES ETA_PILO_R_MIN ET ETA_PILO_R_MAX
C
      IF (PILCVG.NE.1) THEN
        IF (NBEFFE.EQ.2) THEN
          IF ((ETA(1).LT.ETRMIN).OR.(ETA(1).GT.ETRMAX)) THEN
            NBEFFE = NBEFFE-1
            ETA(1) = ETA(2)
          ENDIF
          IF ((ETA(2).LT.ETRMIN).OR.(ETA(2).GT.ETRMAX)) THEN
            NBEFFE = NBEFFE-1
          ENDIF
        ENDIF
        IF (NBEFFE.EQ.1) THEN
          IF ((ETA(1).LT.ETRMIN).OR.(ETA(1).GT.ETRMAX)) THEN
            NBEFFE = NBEFFE-1
          ENDIF
        ENDIF
        IF (NBEFFE.EQ.0) THEN
          PILCVG = 1
        ENDIF
      ENDIF
C
C --- LE CALCUL DE PILOTAGE A FORCEMENT ETE REALISE
C
      CALL ASSERT(PILCVG.GE.0)
C
      CALL JEDEMA()
      END
