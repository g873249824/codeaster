      SUBROUTINE NMCPL2(COMPOR,TYPMOD,OPTION,OPTIO2,CP,NVV,CRIT,DEPS,
     &                  DSIDEP,NDIM,SIGP,VIP,IRET)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 04/12/2006   AUTEUR PROIX J-M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C ----------------------------------------------------------------------
C     CONTRAINTES PLANES PAR LA METHODE DE BORST / CONDENSATION STATIQUE
C     POUR LES COMPORTEMENTS QUI N'INTEGRENT PAS LES CONTRAINTES PLANES
C     ATTENTION : POUR BIEN CONVERGER, IL FAUT REACTUALISER LA MATRICE
C     TANGENTE. DE PLUS, IL FAUT AJOUTER 4 VARIABLES INTERNES
C
C IN  TYPMOD  : TYPE DE MODELISATION
C     OPTION  : OPTION DEMANDEE : RIGI_MECA_TANG , FULL_MECA , RAPH_MECA
C     OPTIO2  : OPTION MODIFIEE POUR TOUJOURS CALCULER K TANGENT
C     CP      : LOGIQUE INDIQUANT SI C_PLAN METHODE DE BORST
C     NVV     : NOMBRE DE VRAIES VARIABLES INTERNES
C     CRIT    : CRITERES DE CONVERGENCE LOCAUX
C                               (3) = VALEUR TOLERANCE DE CONVERGENCE
C                                     (RESI_INTE_RELA == RESCREL)
C     DEPS    : INCREMENT DE DEFORMATION TOTALE :
C               DEPS(T) = DEPS(MECANIQUE(T)) + DEPS(DILATATION(T))
C VAR DSIDEP  : MATRICE TANGENTE CARREE
C IN  NDIM    : DIMENSION DE L'ESPACE
C               3 : 3D , 2 : D_PLAN ,AXIS OU  C_PLAN
C VAR SIGP    : CONTRAINTES A L'INSTANT ACTUEL
C VAR VIP     : LES 4 DERNIERES SONT RELATIVES A LA METHODE DE BORST 

      IMPLICIT NONE
      INTEGER      NDIMSI,K,L,IRET,NDIM,NVV,NBVARI,CP
      CHARACTER*8  TYPMOD(*)
      CHARACTER*16 OPTION,OPTIO2
      CHARACTER*16       COMPOR(*)
      REAL*8       VIP(*),DEPZZ,DEPS(*),RAC2,CRIT(3),DSIDEP(6,6),SIGP(*)
      REAL*8 DEPY,DEPZ,D11,D22,D33,D12,D13,D21,D23,D31,D32,DELTA,DY,DZ
      REAL*8 SIGY,SIGZ,DEPX,SIGX,VIP1,VIP2,VIP3,VIP4,SIGNUL
      LOGICAL MATRIC,VECTEU

      REAL*8 D21EPS,SCM(4),SIGPEQ,PRECR

      RAC2 = SQRT(2.D0)
      NDIMSI = 2*NDIM
      IRET=0
      SIGNUL=CRIT(3)
C     MATRIC = OPTION .EQ. 'FULL_MECA' .OR. OPTION .EQ. 'RIGI_MECA_TANG'
      VECTEU = OPTION .EQ. 'FULL_MECA' .OR. OPTION .EQ. 'RAPH_MECA'

      IF (CP.EQ.2) THEN
C        ON REMET LES CHOSES DANS L'ETAT OU ON LES A TROUVEES
         NBVARI=NVV+4
         WRITE (COMPOR(2),'(I16)') NBVARI
         TYPMOD(1)='C_PLAN'
         OPTION=OPTIO2

         IF (VECTEU) THEN
            DEPZZ=DEPS(3)
            D22=DSIDEP(3,3)
            D21EPS=DSIDEP(3,1)*DEPS(1)+DSIDEP(3,2)*DEPS(2)
     &            +DSIDEP(3,4)*DEPS(4)/RAC2
            VIP(NVV+1)=DEPZZ+D21EPS/D22-SIGP(3)/D22
            VIP(NVV+2)=DSIDEP(3,1)/D22
            VIP(NVV+3)=DSIDEP(3,2)/D22
            VIP(NVV+4)=DSIDEP(3,4)/D22

            SCM(1)=-DSIDEP(1,3)*SIGP(3)/D22
            SCM(2)=-DSIDEP(2,3)*SIGP(3)/D22
            SCM(3)=0.D0
            SCM(4)=-DSIDEP(4,3)*SIGP(3)/D22*RAC2

            DO 130 K=1,NDIMSI
               SIGP(K)=SIGP(K)+SCM(K)
 130        CONTINUE

            SIGPEQ=0.D0
            DO 131 K = 1,NDIMSI
              SIGPEQ     = SIGPEQ + SIGP(K)**2
 131        CONTINUE
 
            SIGPEQ = SQRT(SIGPEQ)
            IF (SIGPEQ.LT.SIGNUL) THEN
               PRECR=CRIT(3)
            ELSE
               PRECR=CRIT(3)*SIGPEQ
            ENDIF
            IF (ABS(SIGP(3)).GT.PRECR) IRET=3

         ENDIF

C         IF (MATRIC) THEN
          IF ( OPTION .EQ. 'FULL_MECA') THEN 
            DO 136 K=1,NDIMSI

               IF (K.EQ.3) GO TO 136

               DO 137 L=1,NDIMSI

                  IF (L.EQ.3) GO TO 137

                  DSIDEP(K,L)=DSIDEP(K,L)
     &          - 1.D0/DSIDEP(3,3)*DSIDEP(K,3)*DSIDEP(3,L)

 137           CONTINUE
 136        CONTINUE

         ENDIF
         
      ELSEIF (CP.EQ.1) THEN
      
C        ON REMET LES CHOSES DANS L'ETAT OU ON LES A TROUVEES
         NBVARI=NVV+4
         WRITE (COMPOR(2),'(I16)') NBVARI
         TYPMOD(1)='COMP1D'
         OPTION=OPTIO2
         IRET=0

            DEPX=DEPS(1)
            DEPY=DEPS(2)
            DEPZ=DEPS(3)
            D11=DSIDEP(1,1)
            D12=DSIDEP(1,2)
            D13=DSIDEP(1,3)
            D21=DSIDEP(2,1)
            D22=DSIDEP(2,2)
            D23=DSIDEP(2,3)
            D31=DSIDEP(3,1)
            D32=DSIDEP(3,2)
            D33=DSIDEP(3,3)

            DELTA=D22*D33-D32*D23
            DY=D23*D31-D21*D33
            DZ=D32*D21-D31*D22
            SIGX=SIGP(1)
            SIGY=SIGP(2)
            SIGZ=SIGP(3)
            
         IF (VECTEU) THEN
            VIP1=DEPY+(D23*SIGZ-D33*SIGY-DY*DEPX)/DELTA
            VIP2=DY/DELTA
            VIP3=DEPZ+(D32*SIGY-D22*SIGZ-DZ*DEPX)/DELTA
            VIP4=DZ/DELTA

            VIP(NVV+1)=VIP1
            VIP(NVV+2)=VIP2
            VIP(NVV+3)=VIP3
            VIP(NVV+4)=VIP4

            SCM(1)=(D12*D23-D22*D13)*SIGZ+(D13*D32-D12*D33)*SIGY
            SCM(1)=SCM(1)/DELTA
            SCM(2)=0.D0
            SCM(3)=0.D0
            SCM(4)=0.D0

            DO 140 K=1,NDIMSI
               SIGP(K)=SIGP(K)+SCM(K)
 140        CONTINUE

            SIGPEQ=0.D0
            DO 141 K = 1,NDIMSI
              SIGPEQ     = SIGPEQ + SIGP(K)**2
 141        CONTINUE
 
C            SIGPEQ = SQRT(SIGPEQ)
            SIGPEQ = ABS(SIGX)
            IF (SIGPEQ.LT.SIGNUL) THEN
               PRECR=CRIT(3)
            ELSE
               PRECR=CRIT(3)*SIGPEQ
            ENDIF
            IF (ABS(SIGP(2)).GT.PRECR) IRET=3
            IF (ABS(SIGP(3)).GT.PRECR) IRET=3

         ENDIF

C         IF (MATRIC) THEN
          IF ( OPTION .EQ. 'FULL_MECA') THEN 
             DSIDEP(1,1)=D11+(D12*DY+D13*DZ)/DELTA
         ENDIF

      ENDIF

      END
