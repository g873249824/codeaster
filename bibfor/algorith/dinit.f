      SUBROUTINE DINIT (NEQ   ,INSTAM,INSTAP,FONACT,DEFICO,
     &                  RESOCO,SDSENS,SDDYNA,VALMOI,POUGD ,
     &                  DEPALG)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      REAL*8       INSTAM,INSTAP
      INTEGER      NEQ
      CHARACTER*24 POUGD(8),VALMOI(8),DEPALG(8)
      CHARACTER*24 DEFICO,RESOCO,SDSENS
      CHARACTER*19 SDDYNA
      LOGICAL      FONACT(*)
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (DYNAMIQUE - INITIALISATIONS)
C
C INITIALISATIONS EN DYNAMIQUE
C      
C ----------------------------------------------------------------------
C
C      
C IN  NEQ    : NOMBRE D'EQUATIONS
C IN  INSTAM : TEMPS INSTANT MOINS
C IN  INSTAP : TEMPS INSTANT PLUS
C IN  DEFICO : SD DEFINITION DU CONTACT
C IN  RESOCO : SD RESOLUTION DU CONTACT
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE (CF NDLECT)
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      CHARACTER*24 DEPKM1,VITKM1,ACCKM1,ROMKM1
      CHARACTER*24 ROMK,MAESCL,ECPDON,KMUAP
      CHARACTER*24 K24BID
      INTEGER      IECPCO
      CHARACTER*24 DEPPLU,VITPLU,ACCPLU,DEPENT,VITENT,ACCENT
      CHARACTER*24 VITMOI,ACCMOI,DEPDEL
      INTEGER      JECPD,JVITM,JACCM
      INTEGER      JDEPGM,JVITGM,JACCGM,JDEPGP
      INTEGER      JVITP,JACCP,JDEPKM,JVITKM,JACCKM,JROMKM,JROMK
      INTEGER      JDEPP,JDEPEN,JVITEN,JACCEN,JNODEP,JDEPDE
      INTEGER      JNOVIT,JNOACC,JMLTAP,JPSDEL
      INTEGER      JCOSC,JCONI,JTFOR
      CHARACTER*24 TFOR,CONI,CFSC
      INTEGER      IFORSD,NDYNIN,NBEXCI,NBMODE
      REAL*8       PAS,V0ACC1,A0VIT1,COEF1,COEF2,COEF3,TETA
      REAL*8       COEVI2,COEAC2
      REAL*8       V0VIT,V0ACC,A0VIT,ALPHA,DELTA,PHI
      REAL*8       COEDEP,COEVIT,COEACC,A0ACC,NDYNRE            
      CHARACTER*24 KBID,NDYNKK,KPRMO
      LOGICAL      NDYNLO,ISFONC,LSSTRU,LCTCC,LMUAP,LEXPL,LIMPL
      INTEGER      I,J,IE,IER
      CHARACTER*24 MDECOL
      INTEGER      JMDECO
      LOGICAL      SCOTCH  
      INTEGER      NRPASE,NBPASE
      CHARACTER*24 SENSNB
      INTEGER      JSENSN     
      INTEGER      IFM,NIV         
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> INITIALISATIONS EN DYNAMIQUE' 
      ENDIF         
C
C --- INTITIALISATIONS
C
      PAS = INSTAP - INSTAM      
C
C --- FONCTIONNALITES ACTIVEES
C
      LSSTRU = NDYNLO(SDDYNA,'EXPL_GENE') 
      LCTCC  = ISFONC(FONACT,'CONT_CONTINU')
      LMUAP  = NDYNLO(SDDYNA,'MULTI_APPUI')
      LEXPL  = NDYNLO(SDDYNA,'EXPLICITE')
      LIMPL  = NDYNLO(SDDYNA,'IMPLICITE')      
C
C --- ACCES SD DYNA
C      
      TFOR = SDDYNA(1:15)//'.TYPE_FOR'
      CFSC = SDDYNA(1:15)//'.COEF_SCH'
      CONI = SDDYNA(1:15)//'.INI_CONT'      
      CALL JEVEUO(TFOR,'E',JTFOR)
      CALL JEVEUO(CFSC,'E',JCOSC)
      CALL JEVEUO(CONI,'L',JCONI) 
C
C --- ACCES SD SENSIBILITE
C     
      SENSNB = SDSENS(1:16)//'.NBPASE '
      CALL JEVEUO(SENSNB,'L',JSENSN)      
      NBPASE = ZI(JSENSN+1-1)      
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C      
      CALL DESAGG(POUGD ,DEPKM1,VITKM1,ACCKM1,ROMKM1,
     &            ROMK  ,K24BID,K24BID,K24BID)     
      CALL DESAGG(VALMOI,K24BID,K24BID,K24BID,K24BID,
     &            VITMOI,ACCMOI,K24BID,K24BID)
      CALL DESAGG(DEPALG,K24BID,DEPDEL,K24BID,K24BID,
     &            K24BID,K24BID,K24BID,K24BID)     
C
C --- FORMULATION DU CONTACT CONTINU
C
      IF (LIMPL)THEN
        MAESCL = DEFICO(1:16)//'.MAESCL'
        CALL JEEXIN(MAESCL, IECPCO)
        IF (LCTCC) THEN
          ECPDON = DEFICO(1:16)//'.ECPDON'
          CALL JEVEUO(ECPDON,'L',JECPD)
          IFORSD = ZI(JECPD+6)
          ZI(JTFOR+2-1)=IFORSD
C
C --- ACCES INDICATEUR DE DECOLLEMENT DANS COMPLIANCE
C
          MDECOL = RESOCO(1:14)//'.MDECOL'
          CALL JEVEUO(MDECOL,'L',JMDECO)  
          SCOTCH = ZL(JMDECO+1-1)         
        ELSE
          ZI(JTFOR+2-1)=0
        ENDIF
      ELSEIF (LEXPL) THEN
        ZI(JTFOR+2-1)=0 
      ENDIF
C
C --- COEFFICIENTS DU SCHEMA EN TEMPS      
C
      V0VIT  = ZR(JCONI+1-1)
      V0ACC  = ZR(JCONI+2-1)
      A0VIT  = ZR(JCONI+3-1)
      A0ACC  = ZR(JCONI+4-1)
      V0ACC1 = V0ACC*PAS
      A0VIT1 = A0VIT/PAS
      COEDEP = 1.D0
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> COEFFICIENTS DU SCHEMA EN TEMPS ' 
      ENDIF     
C            
      IF (LIMPL) THEN
        IF(NDYNIN(SDDYNA,'FORMUL_DYNAMIQUE').EQ.1 .AND.
     &     NDYNIN(SDDYNA,'FORMUL_CONTACT').NE.2   )THEN
          ALPHA  = NDYNRE(SDDYNA,'ALPHA')
          DELTA  = NDYNRE(SDDYNA,'DELTA')
          COEVIT = DELTA/ALPHA/PAS
          COEACC = 1.D0/ALPHA/PAS/PAS
          IF (NDYNLO(SDDYNA,'HHT_COMPLET')) THEN
            COEDEP = (1.5D0-DELTA)
          ENDIF  
        ELSEIF(NDYNIN(SDDYNA,'FORMUL_CONTACT').EQ.2) THEN
          IF (SCOTCH) THEN
            TETA   = 1.D0
          ELSE
            TETA   = NDYNRE(SDDYNA,'THETA')
          ENDIF
          COEVIT = 1.D0/TETA/PAS
          COEACC = 1.D0/TETA/PAS/PAS
        ENDIF
      ELSE
        COEVIT = 0.D0
        COEACC = 0.D0
      ENDIF
      ZR(JCOSC-1+1) = COEDEP 
      ZR(JCOSC-1+2) = COEVIT 
      ZR(JCOSC-1+3) = COEACC
C      
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... COEF. DEPL.: ',COEDEP 
        WRITE (IFM,*) '<MECANONLINE> ... COEF. VITE.: ',COEVIT 
        WRITE (IFM,*) '<MECANONLINE> ... COEF. ACCE.: ',COEACC         
      ENDIF         
C
C --- MULTI-APPUI
C
      IF (LMUAP) THEN
        KMUAP  = NDYNKK(SDDYNA,'MULTI_APPUI')
        CALL JEVEUO(KMUAP(1:19)//'.FDEP','L',JNODEP)
        CALL JEVEUO(KMUAP(1:19)//'.FVIT','L',JNOVIT)
        CALL JEVEUO(KMUAP(1:19)//'.FACC','L',JNOACC)
        CALL JEVEUO(KMUAP(1:19)//'.MULA','L',JMLTAP)
        CALL JEVEUO(KMUAP(1:19)//'.PSID','L',JPSDEL)
      ENDIF
C
      IF (NIV.GE.2) THEN
        IF (LIMPL) THEN
          WRITE (IFM,*) '<MECANONLINE> INITIALISATIONS VITE. ET ACCE. ' 
        ENDIF  
      ENDIF     
C      
      DO 20 NRPASE = NBPASE,0,-1
        CALL NMNSLE(SDSENS,NRPASE,'DEPPLU',DEPPLU)
        CALL NMNSLE(SDSENS,NRPASE,'VITPLU',VITPLU)
        CALL NMNSLE(SDSENS,NRPASE,'ACCPLU',ACCPLU)
        DEPENT = NDYNKK(SDDYNA,'DEPENT')
        VITENT = NDYNKK(SDDYNA,'VITENT')
        ACCENT = NDYNKK(SDDYNA,'ACCENT')      
C
C -- INITIALISATION DES CHAMPS DYNAMIQUES
C
        CALL JEVEUO(DEPPLU(1:19)//'.VALE','L',JDEPP )
        CALL JEVEUO(VITPLU(1:19)//'.VALE','E',JVITP )
        CALL JEVEUO(ACCPLU(1:19)//'.VALE','E',JACCP )
        CALL JEVEUO(DEPKM1(1:19)//'.VALE','E',JDEPKM)
        CALL JEVEUO(VITKM1(1:19)//'.VALE','E',JVITKM)
        CALL JEVEUO(ACCKM1(1:19)//'.VALE','E',JACCKM)
        CALL JEVEUO(ROMKM1(1:19)//'.VALE','E',JROMKM)
        CALL JEVEUO(ROMK(1:19)  //'.VALE','E',JROMK )
C
C --- VITESSES, ACCELERATIONS, ROTATIONS
C
        DO 10 I = 1,NEQ
          ZR(JDEPKM+I-1) = ZR(JDEPP+I-1)
          ZR(JVITKM+I-1) = ZR(JVITP+I-1)
          ZR(JACCKM+I-1) = ZR(JACCP+I-1)
          IF (LIMPL) THEN
            IF(NDYNIN(SDDYNA,'FORMUL_DYNAMIQUE').EQ.1 .AND.
     &         NDYNIN(SDDYNA,'FORMUL_CONTACT').NE.2   )THEN
              ZR(JVITP+I-1) = V0VIT*ZR(JVITKM+I-1) + 
     &                        V0ACC1*ZR(JACCKM+I-1)
              ZR(JACCP+I-1) = A0VIT1*ZR(JVITKM+I-1) + 
     &                        A0ACC*ZR(JACCKM+I-1)
            ELSEIF(NDYNIN(SDDYNA,'FORMUL_CONTACT').EQ.2)THEN
              ZR(JVITP+I-1) = ZR(JVITKM+I-1)*(TETA-1)/TETA
              ZR(JACCP+I-1) = -ZR(JVITKM+I-1)/(PAS*TETA)
            ENDIF
          ENDIF
          ZR(JROMKM+I-1) = 0.D0
          ZR(JROMK+I-1)  = 0.D0
   10   CONTINUE
C
C --- INITIALISATION DES CHAMPS "MULTI-APPUIS"
C
        IF (LMUAP)THEN
          CALL GETFAC('EXCIT',NBEXCI)
          CALL JEVEUO(DEPENT(1:19)//'.VALE','E',JDEPEN)
          CALL JEVEUO(VITENT(1:19)//'.VALE','E',JVITEN)
          CALL JEVEUO(ACCENT(1:19)//'.VALE','E',JACCEN)
          DO 710 IE = 1,NEQ
            ZR(JDEPEN+IE-1) = 0.D0
            ZR(JVITEN+IE-1) = 0.D0
            ZR(JACCEN+IE-1) = 0.D0
  710     CONTINUE
          IF (NRPASE.EQ.0) THEN
            DO 910 J = 1,NBEXCI
              IF (ZI(JMLTAP+J-1).EQ.1) THEN
                CALL FOINTE('F ',ZK8(JNODEP+J-1),1,'INST',INSTAP,COEF1,
     &                      IER)
                CALL FOINTE('F ',ZK8(JNOVIT+J-1),1,'INST',INSTAP,COEF2,
     &                      IER)
                CALL FOINTE('F ',ZK8(JNOACC+J-1),1,'INST',INSTAP,COEF3,
     &                      IER)
              ELSE
                COEF1  = 0.D0
                COEF2  = 0.D0
                COEF3  = 0.D0
              ENDIF
              DO 810 IE = 1,NEQ
                ZR(JDEPEN+IE-1) = ZR(JDEPEN+IE-1) +
     &                            ZR(JPSDEL+ (J-1)*NEQ+IE-1)*COEF1
                ZR(JVITEN+IE-1) = ZR(JVITEN+IE-1) +
     &                            ZR(JPSDEL+ (J-1)*NEQ+IE-1)*COEF2
                ZR(JACCEN+IE-1) = ZR(JACCEN+IE-1) +
     &                            ZR(JPSDEL+ (J-1)*NEQ+IE-1)*COEF3
  810         CONTINUE
  910       CONTINUE
          ENDIF
        ENDIF
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> VITESSE '
          CALL NMDEBG('VECT',VITPLU,IFM) 
          WRITE (IFM,*) '<MECANONLINE> ACCELERATION '
          CALL NMDEBG('VECT',ACCPLU,IFM)         
        ENDIF         
   20 CONTINUE 
C
C --- SI SCHEMA EXPLICITE, ON CALCULE LES PREDICTEURS
C  
      IF (LEXPL) THEN
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> CALCUL DES PREDICTEURS '  
        ENDIF       
        CALL JEVEUO(VITMOI(1:19)//'.VALE','L',JVITM)
        CALL JEVEUO(ACCMOI(1:19)//'.VALE','L',JACCM)
        CALL JEVEUO(DEPDEL(1:19)//'.VALE','E',JDEPDE)
        CALL JEVEUO(DEPPLU(1:19)//'.VALE','E',JDEPP )
        COEVI2 = PAS
        IF (NDYNLO(SDDYNA,'DIFF_CENT')) THEN
          COEAC2 = COEVI2*COEVI2/2.D0
        ELSEIF (NDYNLO(SDDYNA,'TCHAMWA')) THEN
          PHI    = NDYNRE(SDDYNA,'PHI')
          COEAC2 = COEVI2*COEVI2*PHI
        ELSE
          CALL ASSERT(.FALSE.)  
        ENDIF
        DO 11 I = 1 , NEQ
          ZR(JDEPDE+I-1) = COEVI2*ZR(JVITM+I-1)+COEAC2*ZR(JACCM+I-1)
          ZR(JDEPP+I-1) = ZR(JDEPP+I-1)+ZR(JDEPDE+I-1)
   11   CONTINUE
        IF (LSSTRU) THEN
          KPRMO=NDYNKK(SDDYNA,'PROJ_MODAL')
          CALL JELIRA(KPRMO(1:19)//'.AGEM','LONMAX',NBMODE,KBID)
          CALL JEVEUO(KPRMO(1:19)//'.AGEM','L',JACCGM)
          CALL JEVEUO(KPRMO(1:19)//'.VGEM','L',JVITGM)
          CALL JEVEUO(KPRMO(1:19)//'.DGEM','L',JDEPGM)
          CALL JEVEUO(KPRMO(1:19)//'.DGEP','E',JDEPGP)
          DO 12 I=1,NBMODE
            ZR(JDEPGP+I-1) = ZR(JDEPGM+I-1) 
     &                     + COEVI2*ZR(JVITGM+I-1)
     &                     + COEAC2*ZR(JACCGM+I-1)
   12     CONTINUE
        ENDIF
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> DEPL. INCR. '
          CALL NMDEBG('VECT',DEPPLU,IFM) 
          WRITE (IFM,*) '<MECANONLINE> DEPL. CUMU. '
          CALL NMDEBG('VECT',DEPDEL,IFM)         
        ENDIF         
      ENDIF   
C    
      CALL JEDEMA()

      END
