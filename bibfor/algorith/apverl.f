      SUBROUTINE APVERL(SDAPPA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_6
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      CHARACTER*19 SDAPPA
C
C ----------------------------------------------------------------------
C
C ROUTINE APPARIEMENT - NORMALES
C
C VERIFICATION DISCRETISATION NORMALES
C
C ----------------------------------------------------------------------
C
C IN  SDAPPA : NOM DE LA SD APPARIEMENT
C
C
C
C
      CHARACTER*24 RNOMSD
      CHARACTER*8  NOMA
      CHARACTER*8  NOMNOM,NOMMAM,OLDNOM
      INTEGER      NBZONE,NDIMG
      INTEGER      IZONE
      INTEGER      JDECNM,NBNOM
      INTEGER      INOM,IMA,INOCOU,INOMAI
      INTEGER      JDEC,JDECIV
      INTEGER      POSMAM,NUMMAM,POSNOM,NUMNOM
      INTEGER      NMANOM,NNOSDM
      REAL*8       TAU1(3),TAU2(3),NORM(3)
      REAL*8       TAUND1(3),TAUND2(3),NORMND(3)
      REAL*8       NOOR1,NOOR2,R8RDDG
      REAL*8       ANGMAX
      CHARACTER*24 APTGEL,APTGNO
      INTEGER      JTGELN,JPTGNO
      CHARACTER*24 APVERK,APVERA
      INTEGER      JLISTN,JLISTA
      REAL*8       PROSCA,DDOT,ANGLE,OLDANG,R8PREM,VAL
      INTEGER      INOEU
      CHARACTER*8  K8BID
      LOGICAL      APCALD
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- NOM SD MAILLAGE
C
      CALL APNOMK(SDAPPA,'NOMA'  ,RNOMSD)
      NOMA   = RNOMSD(1:8)
C
C --- SD VERIFICATION FACETTISATION
C
      APVERK = SDAPPA(1:19)//'.VERK'
      APVERA = SDAPPA(1:19)//'.VERA'
      CALL JEVEUO(APVERK,'E',JLISTN)
      CALL JEVEUO(APVERA,'E',JLISTA)
      CALL JELIRA(APVERK,'LONUTI',INOEU,K8BID)
      IF (INOEU.NE.0) GOTO 999
      ANGMAX = 5.D0
C
C --- ACCES SD
C
      APTGEL = SDAPPA(1:19)//'.TGEL'
      APTGNO = SDAPPA(1:19)//'.TGNO'
      CALL JEVEUO(APTGNO,'L',JPTGNO)
C
C --- INITIALISATIONS
C
      CALL APPARI(SDAPPA,'APPARI_NBZONE',NBZONE)
      CALL APPARI(SDAPPA,'APPARI_NDIMG' ,NDIMG )
C
C --- BOUCLE SUR LES ZONES
C
      INOEU = 0
      DO 10 IZONE = 1,NBZONE
        CALL APZONI(SDAPPA,IZONE ,'NBNOM' ,NBNOM )
        CALL APZONI(SDAPPA,IZONE ,'JDECNM',JDECNM)
        CALL APZONL(SDAPPA,IZONE ,'CALC_NORM_MAIT',APCALD)
        IF (.NOT.APCALD) GOTO 27
C
C ----- BOUCLE SUR LES NOEUDS
C
        DO 20 INOM = 1,NBNOM
C
          POSNOM  = INOM+JDECNM
          CALL APNUMN(SDAPPA,POSNOM,NUMNOM)
          CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NUMNOM),NOMNOM)
C
C ------- TANGENTES SUR CE NOEUD
C
          TAUND1(1) = ZR(JPTGNO+6*(POSNOM-1)+1-1)
          TAUND1(2) = ZR(JPTGNO+6*(POSNOM-1)+2-1)
          TAUND1(3) = ZR(JPTGNO+6*(POSNOM-1)+3-1)
          TAUND2(1) = ZR(JPTGNO+6*(POSNOM-1)+4-1)
          TAUND2(2) = ZR(JPTGNO+6*(POSNOM-1)+5-1)
          TAUND2(3) = ZR(JPTGNO+6*(POSNOM-1)+6-1)
C
C ------- CALCUL DE LA NORMALE _INTERIEURE_
C
          CALL MMNORM(NDIMG,TAUND1,TAUND2,NORMND,NOOR2 )
C
C ------- NOMBRE DE MAILLES ATTACHEES AU NOEUD
C
          CALL APNINV(SDAPPA,POSNOM,'NMANOM',NMANOM)
C
C ------- DECALAGE POUR CONNECTIVITE INVERSE
C
          CALL APNINV(SDAPPA,POSNOM,'JDECIV',JDECIV)
C
C ------- BOUCLE SUR LES MAILLES ATTACHEES
C
          DO 30 IMA = 1,NMANOM
            CALL APATTA(SDAPPA,JDECIV,IMA   ,POSMAM)
            CALL APNUMM(SDAPPA,POSMAM,NUMMAM)
            CALL JENUNO(JEXNUM(NOMA//'.NOMMAI',NUMMAM),NOMMAM)
            CALL APNNDM(SDAPPA,POSMAM,NNOSDM)
            CALL JEVEUO(JEXNUM(NOMA//'.CONNEX',NUMMAM),'L',JDEC)
            CALL JEVEUO(JEXNUM(APTGEL,POSMAM),'L',JTGELN)
C
C --------- TRANSFERT NUMERO ABSOLU DU NOEUD -> NUMERO DANS LA CONNEC DE
C --------- LA MAILLE
C
            INOCOU = 0
            DO 40 INOMAI = 1,NNOSDM
              IF (ZI(JDEC+INOMAI-1).EQ.NUMNOM) THEN
                INOCOU = INOMAI
              ENDIF
 40         CONTINUE
            CALL ASSERT(INOCOU.NE.0)
C
C --------- RECUPERATIONS DES TANGENTES EN CE NOEUD
C
            TAU1(1) = ZR(JTGELN+6*(INOCOU-1)+1-1)
            TAU1(2) = ZR(JTGELN+6*(INOCOU-1)+2-1)
            TAU1(3) = ZR(JTGELN+6*(INOCOU-1)+3-1)
            TAU2(1) = ZR(JTGELN+6*(INOCOU-1)+4-1)
            TAU2(2) = ZR(JTGELN+6*(INOCOU-1)+5-1)
            TAU2(3) = ZR(JTGELN+6*(INOCOU-1)+6-1)
C
C --------- CALCUL DE LA NORMALE _INTERIEURE_
C
            CALL MMNORM(NDIMG,TAU1  ,TAU2  ,NORM  ,NOOR1 )
C
C --------- CALCUL DE L'ANGLE
C
            PROSCA = DDOT(3,NORM,1,NORMND,1)
            IF (ABS(NOOR1*NOOR2).LE.R8PREM()) GOTO 31
            VAL = PROSCA/(NOOR1*NOOR2)
            IF (VAL.GT.1.D0) VAL = 1.D0
            IF (VAL.LT.-1.D0) VAL = -1.D0
            ANGLE  = ACOS(VAL)
            ANGLE  = ANGLE*R8RDDG()
            OLDANG = ZR(JLISTA+NUMNOM-1)
            OLDNOM = ZK8(JLISTN+NUMNOM-1)
            IF (ANGLE.GT.ANGMAX) THEN
              IF (OLDNOM.EQ.' ') THEN
                INOEU = INOEU+1
                IF (OLDANG.LT.ANGLE) THEN
                  ZK8(JLISTN+NUMNOM-1) = NOMNOM
                  ZR(JLISTA+NUMNOM-1)  = ANGLE
                ENDIF
              ENDIF
            ENDIF
 31         CONTINUE
 30       CONTINUE
 20     CONTINUE
 27     CONTINUE
 10   CONTINUE
C
      CALL JEECRA(APVERK,'LONUTI',INOEU,K8BID)
C
  999 CONTINUE
C
      CALL JEDEMA()
C
      END
