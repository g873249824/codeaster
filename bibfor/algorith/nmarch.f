      SUBROUTINE NMARCH(RESULT,NUMINS,SDDISC,FORCE ,COMPOR,
     &                  SDCRIT,CARCRI,RESOCO,VALINC,INCR  ,
     &                  MODELE,MATE  ,CARELE,FONACT,LISCH2,
     &                  SDDYNA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/04/2010   AUTEUR JAUBERT A.JAUBERT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C
      IMPLICIT NONE
      LOGICAL      FORCE,INCR
      INTEGER      FONACT(*)
      INTEGER      NUMINS
      CHARACTER*8  RESULT
      CHARACTER*19 SDDISC,SDCRIT,SDDYNA
      CHARACTER*19 VALINC(*)
      CHARACTER*24 COMPOR,RESOCO,CARCRI
      CHARACTER*19 LISCH2
      CHARACTER*24 MODELE,MATE,CARELE
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C ARCHIVAGE DES CHAMPS
C
C ----------------------------------------------------------------------
C
C
C IN  RESULT : NOM UTILISATEUR DU CONCEPT RESULTAT
C IN  NUMINS : NUMERO DE L'INSTANT
C IN  SDDISC : SD PARA_TEMPS
C IN  FORCE  : VRAI SI ON SOUHAITE FORCER L'ARCHIVAGE
C IN  COMPOR : CARTE DECRIVANT LE TYPE DE COMPORTEMENT
C IN  SDCRIT : VALEUR DES CRITERES DE CONVERGENCE
C IN  CARCRI : CARTE DES CRITERES DE CONVERGENCE LOCAUX
C IN  RESOCO : SD DE RESOLUTION DU CONTACT
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  INCR   : VRAI S'IL FAUT INCREMENTER LE COMPTEUR D'ARCHIVAGE
C IN  MODELE : NOM DU MODELE
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  MATE   : CHAMP DE MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  LISCH2 : NOM DE LA SD INFO CHARGE POUR STOCKAGE DANS LA SD
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      JINST,JCRR,JCRK,NPARA
      PARAMETER    (NPARA=9)
      CHARACTER*24 TPSDIA
      INTEGER      JARCH
      INTEGER      IRET,K,IBID,LPARA(NPARA)
      INTEGER      IVALE
      INTEGER      JCNSVR
      INTEGER      IFM,NIV
      INTEGER      NUMARC,NBT
      REAL*8       INSTAP,INSTAN,R8BID
      CHARACTER*8  K8BID
      CHARACTER*19 DEPPLU,SIGPLU,VARPLU
      CHARACTER*24 CHAMP
      INTEGER      DIARCH
      REAL*8       DIINST,THETA
      LOGICAL      DIINCL,NDYNLO,ISFONC
      LOGICAL      LDYNA ,LCONT ,LERRT
      CHARACTER*19 CNOINR,CNSINR
      CHARACTER*19 XCOHES,XINDCO,XSEUCO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- FONCTIONNALITES ACTIVEES
C
      LCONT  = ISFONC(FONACT,'CONTACT')
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
      LERRT  = ISFONC(FONACT,'ERRE_TEMPS')
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)
      CALL NMCHEX(VALINC,'VALINC','SIGPLU',SIGPLU)      
      CALL NMCHEX(VALINC,'VALINC','VARPLU',VARPLU)
C
C --- ACCES SD LISTE D'INSTANTS
C
      TPSDIA = SDDISC(1:19)//'.DIAL'
      CALL JEVEUO(TPSDIA,'E',JARCH )
C
C --- NUMERO D'ARCHIVAGE
C
      NUMARC = DIARCH(SDDISC,NUMINS,FORCE,INCR)
C
C --- IMPRESSION EVENTUELLE DES MESURES DE TEMPS
C
      CALL UTTCPG('IMPR','INCR')      
C
C ----------------------------------------------------------------------
C
      IF (NUMARC.GE.0) THEN
C
C --- INSTANT COURANT
C
        INSTAP = DIINST(SDDISC,NUMINS)
C
C --- INSTANT DEJA ARCHIVE ?
C
        IF (NUMARC.GE.2) THEN
          CALL RSADPA(RESULT,'L',1,'INST',NUMARC-1,0,JINST,K8BID)
          INSTAN = ZR(JINST)
          IF (INSTAP.EQ.INSTAN) THEN
            GOTO 999
          ENDIF
        ENDIF

        CALL NMIMPR('IMPR','ARCH_TETE',' ',R8BID,IBID)
C
C --- ON SIGNALE QUE L'ON A BIEN ARCHIVE
C
        ZL(JARCH+NUMINS) = .TRUE.
C
C --- EXTENSION DE RESULT SI TROP PETIT
C
        CALL RSEXCH(RESULT,'DEPL',NUMARC,CHAMP,IRET)
        IF (IRET.EQ.110) THEN
          CALL RSAGSD(RESULT,0)
        ENDIF
C
C --- ARCHIVAGE DE L'INSTANT
C
        CALL RSADPA(RESULT,'E',1,'INST',NUMARC,0,JINST,K8BID)
        ZR(JINST) = INSTAP
C
C --- ARCHIVAGE DU MODELE, MATERIAU, CARA_ELEM ET DE LA SD CHARGE
C
        CALL RSSEPA(RESULT,NUMARC,MODELE(1:8),MATE(1:8),CARELE(1:8),
     &              LISCH2)
C
C --- ARCHIVAGE DU COMPORTEMENT
C
        CALL RSEXCH(RESULT,'COMPORTEMENT',NUMARC,CHAMP,IRET)
        IF (IRET.LE.100) THEN
          CALL COPISD('CHAMP_GD','G',COMPOR(1:19),CHAMP(1:19))
          CALL RSNOCH(RESULT,'COMPORTEMENT',NUMARC,' ')
        END IF
C
C --- ARCHIVAGE DU CONTACT
C
        IF (LCONT) THEN
          CNSINR = RESOCO(1:14)//'.VALE'
          CALL JEEXIN(CNSINR(1:19)//'.CNSV',IRET)
          IF (IRET.NE.0) THEN
            CALL JEVEUO(CNSINR(1:19)//'.CNSV','L',JCNSVR)
            CALL RSEXCH(RESULT,'VALE_CONT',NUMARC,CNOINR,IRET)
            CALL CNSCNO(CNSINR,' ','NON','G',CNOINR,'F',IBID)
            CALL RSNOCH(RESULT,'VALE_CONT',NUMARC,' ')
            CALL DETRSD('CHAM_NO_S',CNSINR)
            CALL NMIMPR('IMPR','ARCHIVAGE','VALE_CONT',INSTAP,NUMARC)
          ENDIF
        END IF
C
C --- ARCHIVAGE DES CRITERES DE CONVERGENCE
C
        CALL JEEXIN(SDCRIT//'.CRTR',IRET)
        IF (IRET.NE.0) THEN
          CALL JEVEUO(SDCRIT//'.CRTR','L',JCRR)
          CALL JEVEUO(SDCRIT//'.CRDE','L',JCRK)
          CALL JELIRA(SDCRIT//'.CRDE','LONMAX',NBT,K8BID)
          CALL ASSERT(NBT.EQ.NPARA)
          CALL RSADPA(RESULT,'E',NBT,ZK16(JCRK),NUMARC,0,LPARA,K8BID)
          ZI(LPARA(1)) = NINT(ZR(JCRR))
          ZI(LPARA(2)) = NINT(ZR(JCRR+1))
          DO 10 K = 3,NBT
            ZR(LPARA(K)) = ZR(JCRR+K-1)
10        CONTINUE
        END IF
C
C --- DEPLACEMENTS
C
        IF (DIINCL(SDDISC,NUMINS,'DEPL',FORCE)) THEN
          CALL RSEXCH(RESULT,'DEPL',NUMARC,CHAMP,IRET)
          IF (IRET.LE.100) THEN
            CALL ASSDE2(DEPPLU)
            CALL COPISD('CHAMP_GD','G',DEPPLU(1:19),CHAMP(1:19))
            CALL RSNOCH(RESULT,'DEPL',NUMARC,' ')
            CALL NMIMPR('IMPR','ARCHIVAGE','DEPL',INSTAP,NUMARC)
          END IF
        END IF
C
C --- CONTRAINTES
C
        IF (DIINCL(SDDISC,NUMINS,'SIEF_ELGA',FORCE)) THEN
          CALL RSEXCH(RESULT,'SIEF_ELGA',NUMARC,CHAMP,IRET)
          IF (IRET.LE.100) THEN
            CALL COPISD('CHAMP_GD','G',SIGPLU(1:19),CHAMP(1:19))
            CALL RSNOCH(RESULT,'SIEF_ELGA',NUMARC,' ')
            CALL NMIMPR('IMPR','ARCHIVAGE','SIEF_ELGA',INSTAP,NUMARC)
          END IF
        END IF
C
C --- VARIABLES INTERNES
C
        IF (DIINCL(SDDISC,NUMINS,'VARI_ELGA',FORCE)) THEN
          CALL RSEXCH(RESULT,'VARI_ELGA',NUMARC,CHAMP,IRET)
          IF (IRET.LE.100) THEN
            CALL COPISD('CHAMP_GD','G',VARPLU(1:19),CHAMP(1:19))
            CALL RSNOCH(RESULT,'VARI_ELGA',NUMARC,' ')
            CALL NMIMPR('IMPR','ARCHIVAGE','VARI_ELGA',INSTAP,NUMARC)
          END IF
        END IF
C
C
C --- SAUVEGARDE CONTACT COHESIF
C
C
C --- ARCHIVAGE DE L'INDICATEUR DE CONTACT 
C
        XINDCO = RESOCO(1:14)//'.XFIN'
        CALL EXISD('CHAM_ELEM',XINDCO,IRET)
        IF (IRET .EQ. 1) THEN
          IF (DIINCL(SDDISC,NUMINS,'INDC_ELGA',FORCE)) THEN
            CALL RSEXCH(RESULT,'INDC_ELGA',NUMARC,CHAMP,IRET)
            IF (IRET.LE.100) THEN
              CALL COPISD('CHAMP_GD','G',
     &           RESOCO(1:14)//'.XFIN',CHAMP(1:19))
              CALL RSNOCH(RESULT,'INDC_ELGA',NUMARC,' ')
              CALL NMIMPR('IMPR','ARCHIVAGE','INDC_ELGA',INSTAP,NUMARC)
            END IF
          END IF
        END IF  
C
C --- ARCHIVAGE DE LA COHESION
C
        XCOHES = RESOCO(1:14)//'.XCOH'
        CALL EXISD('CHAM_ELEM',XCOHES,IRET)
        IF (IRET .EQ. 1) THEN
          IF (DIINCL(SDDISC,NUMINS,'COHE_ELGA',FORCE)) THEN
            CALL RSEXCH(RESULT,'COHE_ELGA',NUMARC,CHAMP,IRET)
            IF (IRET.LE.100) THEN
              CALL COPISD('CHAMP_GD','G',
     &        RESOCO(1:14)//'.XCOH',CHAMP(1:19))
              CALL RSNOCH(RESULT,'COHE_ELGA',NUMARC,' ')
              CALL NMIMPR('IMPR','ARCHIVAGE','COHE_ELGA',INSTAP,NUMARC)
            END IF
          END IF
        END IF
C
C --- ARCHIVAGE DU SEUIL DE FROTTEMENT
C
        XSEUCO = RESOCO(1:14)//'.XFSE'
        CALL EXISD('CHAM_ELEM',XSEUCO,IRET)
        IF (IRET .EQ. 1) THEN
          IF (DIINCL(SDDISC,NUMINS,'SECO_ELGA',FORCE)) THEN
            CALL RSEXCH(RESULT,'SECO_ELGA',NUMARC,CHAMP,IRET)
            IF (IRET.LE.100) THEN
             CALL COPISD('CHAMP_GD','G',
     &          RESOCO(1:14)//'.XFSE',CHAMP(1:19))
             CALL RSNOCH(RESULT,'SECO_ELGA',NUMARC,' ')
             CALL NMIMPR('IMPR','ARCHIVAGE','SECO_ELGA',INSTAP,NUMARC)
            END IF
          END IF
        END IF
C
C
C --- CALCUL DES INDICATEURS D'ERREUR EN TEMPS EN THM UNIQUEMENT
C
        IF (LERRT) THEN
C
C --- ARCHIVAGE DE VALEURS INITIALES NULLES
C
          IF (NUMARC.EQ.0) THEN
            CALL RSADPA(RESULT,'E',1,'ERRE_TPS_LOC',
     &                  NUMARC,0,JINST,K8BID)
            ZR(JINST) = 0.D0
            CALL RSADPA(RESULT,'E',1,'ERRE_TPS_GLOB',
     &                  NUMARC,0,JINST,K8BID)
            ZR(JINST) = 0.D0
          ENDIF
C
C --- ARCHIVAGE DE THETA
C
          CALL JEVEUO(CARCRI(1:19)//'.VALV','L',IVALE)
          THETA = ZR(IVALE+3)
          CALL RSADPA(RESULT,'E',1,'PARM_THETA',NUMARC,0,JINST,K8BID)
          ZR(JINST) = THETA
        ENDIF
C
C --- ARCHIVAGES CAS DYNAMIQUE
C
        IF (LDYNA) THEN
          CALL NDARCH(RESULT,NUMINS,SDDISC,FORCE ,VALINC,
     &                SDDYNA,NUMARC,INSTAP)
        ENDIF
      ENDIF
C
  999 CONTINUE
C
      CALL JEDEMA()
      END
