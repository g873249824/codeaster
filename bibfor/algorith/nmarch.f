      SUBROUTINE NMARCH(RESULT,NUMINS,MODELE,MATE  ,CARELE,
     &                  FONACT,CARCRI,SDIMPR,SDDISC,SDPOST,
     &                  SDCRIT,SDTIME,SDERRO,SDDYNA,SDPILO,
     &                  SDENER,SDIETO,SDCRIQ,LISCH2)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/04/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE      'jeveux.h'
      CHARACTER*8  RESULT
      INTEGER      FONACT(*)
      INTEGER      NUMINS
      CHARACTER*24 SDIETO,SDTIME,SDIMPR
      CHARACTER*19 SDDISC,SDCRIT,SDDYNA,SDPOST,SDPILO,SDENER
      CHARACTER*24 CARCRI
      CHARACTER*24 SDERRO,SDCRIQ
      CHARACTER*19 LISCH2
      CHARACTER*24 MODELE,MATE,CARELE
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C ARCHIVAGE
C
C ----------------------------------------------------------------------
C
C
C IN  RESULT : NOM DE LA SD RESULTAT
C IN  SDIMPR : SD AFFICHAGE
C IN  SDIETO : SD GESTION IN ET OUT
C IN  SDIMPR : SD AFFICHAGE
C IN  NUMINS : NUMERO DE L'INSTANT
C IN  MODELE : NOM DU MODELEE
C IN  MATE   : CHAMP DE MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  CARCRI : CARTE DES CRITERES DE CONVERGENCE LOCAUX
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  SDPOST : SD POUR POST-TRAITEMENTS (CRIT_STAB ET MODE_VIBR)
C IN  SDCRIT : VALEUR DES CRITERES DE CONVERGENCE
C IN  SDCRIQ : SD CRITERE QUALITE
C IN  SDERRO : SD ERREUR
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE
C IN  SDPILO : SD PILOTAGE
C IN  SDTIME : SD TIMER
C IN  SDENER : SD ENERGIE
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  LISCH2 : NOM DE LA SD INFO CHARGE POUR STOCKAGE DANS LA SD
C
C ----------------------------------------------------------------------
C
      INTEGER      JINST
      INTEGER      IRET
      INTEGER      NUMARC
      REAL*8       INSTAM,INSTAN
      CHARACTER*8  K8BID
      REAL*8       DIINST
      LOGICAL      FORCE,LPRINT
      CHARACTER*19 K19BID
      CHARACTER*4  ETCALC
      INTEGER      NUMREU
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- DEBUT MESURE TEMPS
C
      CALL NMTIME(SDTIME,'RUN','ARC')
C
C --- CONVERGENCE DU CALCUL ?
C
      CALL NMLEEB(SDERRO,'CALC',ETCALC)
C
C --- DERNIER PAS -> ON FORCE L'ARCHIVAGE
C
      FORCE = .FALSE.
      CALL NMFINP(SDDISC,NUMINS,FORCE )
C
C --- ON FORCE L'ARCHIVAGE
C
      IF (ETCALC.EQ.'CONV') FORCE = .TRUE.
      IF (ETCALC.EQ.'STOP') FORCE = .TRUE.
C
C --- IMPRESSION EVENTUELLE DES MESURES DE TEMPS
C
      CALL UTTCPG('IMPR','INCR')
C
C --- NUMERO D'ARCHIVAGE
C
      CALL DINUAR(SDDISC,NUMINS,FORCE ,NUMARC,NUMREU)
C
C --- INSTANT COURANT
C
      INSTAN = DIINST(SDDISC,NUMINS)
C
C --- ARCHIVAGE DES PARAMETRES CALCULES DANS LA TABLE PARA_CALC
C
      CALL NMARPC(RESULT,SDENER,NUMREU,INSTAN)
C
C --- AFFICHAGE POUR CE PAS ?
C
      CALL OBGETB(SDIMPR,'PRINT',LPRINT)
C
C ----------------------------------------------------------------------
C
      IF (NUMARC.GE.0) THEN
C
C ----- INSTANT DEJA ARCHIVE ?
C
        IF (NUMARC.GE.2) THEN
          CALL RSADPA(RESULT,'L',1,'INST',NUMARC-1,0,JINST,K8BID)
          INSTAM = ZR(JINST)
          IF (INSTAN.EQ.INSTAM) THEN
            GOTO 999
          ENDIF
        ENDIF
C
C ----- AFFICHAGE
C
        IF (LPRINT) CALL U2MESS('I','ARCHIVAGE_5')
C
C ----- EXTENSION DE RESULT SI TROP PETIT (DOUBLEMENT)
C
        CALL RSEXCH(' ',RESULT,'DEPL',NUMARC,K19BID,IRET  )
        IF (IRET.EQ.110) CALL RSAGSD(RESULT,0)
C
C ----- ARCHIVAGE DES PARAMETRES
C
        CALL NMARC0(RESULT,MODELE,MATE  ,CARELE,FONACT,
     &              SDCRIT,SDDYNA,SDPOST,CARCRI,SDCRIQ,
     &              SDPILO,LISCH2,NUMARC,INSTAN)
C
C ----- ARCHIVAGE DES CHAMPS
C
        CALL NMARCE(SDIETO,RESULT,SDIMPR,SDDISC,INSTAN,
     &              NUMARC,FORCE )
      ENDIF
C
  999 CONTINUE
C
C --- FIN MESURE TEMPS
C
      CALL NMTIME(SDTIME,'END','ARC')
C
      CALL JEDEMA()
      END
