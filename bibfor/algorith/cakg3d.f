      SUBROUTINE CAKG3D(OPTION,RESULT,MODELE,DEPLA ,THETAI,
     &                  MATE  ,COMPOR,NCHAR ,LCHAR ,SYMECH,
     &                  CHFOND,NNOFF ,BASLOC,COURB ,IORD  ,
     &                  NDEG  ,THLAGR,GLAGR ,THLAG2,PAIR  ,
     &                  NDIMTE,EXTIM ,TIME  ,NBPRUP,NOPRUP,
     &                  FISS  ,LMELAS,NOMCAS,LMODA ,PULS  ,
     &                  MILIEU,CONNEX)
      IMPLICIT  NONE

      INCLUDE 'jeveux.h'

      INTEGER IORD,NCHAR,NBPRUP,NDIMTE
      REAL*8 PULS
      CHARACTER*8 MODELE,THETAI,LCHAR(*),FISS
      CHARACTER*8 RESULT,SYMECH
      CHARACTER*16 OPTION,NOPRUP(*),NOMCAS
      CHARACTER*24 DEPLA,CHFOND,MATE,COMPOR,BASLOC,COURB,CHPULS
      LOGICAL EXTIM,THLAGR,GLAGR,THLAG2,PAIR,LMELAS,LMODA,MILIEU,CONNEX

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/02/2013   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     TOLE CRP_21

C  FONCTION REALISEE:   CALCUL DU TAUX DE RESTITUTION LOCAL D'ENERGIE ET
C                       DES FACTEURS D'INTENSITE DE CONTRAINTES EN 3D

C  IN    OPTION --> CALC_K_G
C  IN    RESULT --> NOM UTILISATEUR DU RESULTAT ET TABLE
C  IN    MODELE --> NOM DU MODELE
C  IN    DEPLA  --> CHAMP DE DEPLACEMENT
C  IN    THETAI --> BASE DE I CHAMPS THETA
C  IN    MATE   --> CHAMP DE MATERIAUX
C  IN    COMPOR --> COMPORTEMENT
C  IN    NCHAR  --> NOMBRE DE CHARGES
C  IN    LCHAR  --> LISTE DES CHARGES
C  IN    SYMECH --> SYMETRIE DU CHARGEMENT
C  IN    CHFOND --> POINTS DU FOND DE FISSURE
C  IN    NNOFF  --> NOMBRE DE POINTS DU FOND DE FISSURE
C  IN    BASLOC --> BASE LOCALE
C  IN    COURB  --> NOM DU TENSEUR DE COURBURE
C  IN    IORD   --> NUMERO D'ORDRE DE LA SD
C  IN    NDEG   --> DEGRE DU POLYNOME DE LEGENDRE
C  IN    THLAGR --> VRAI SI LISSAGE THETA EST LAGRANGE OU LAGRANGE_NO_NO
C  IN    THLAG2 --> VRAI SI LISSAGE THETA EST LAGRANGE_REGU
C  IN    GLAGR  --> VRAI SI LISSAGE G EST LAGRANGE
C  IN    TIME   --> INSTANT DE CALCUL
C  IN    FISS   --> NOM DE LA SD FISS_XFEM
C  IN    LMELAS --> TRUE SI LE TYPE DE LA SD RESULTAT EST MULT_ELAS
C  IN    NOMCAS --> NOM DU CAS DE CHARGE SI LMELAS
C  IN    MILIEU --> .TRUE.  : ELEMENT QUADRATIQUE
C                   .FALSE. : ELEMENT LINEAIRE
C  IN    CONNEX --> .TRUE.  : SI FOND FERME
C                   .FALSE. : SI FOND OUVERT
C
C
      INTEGER NBMXPA
      PARAMETER (NBMXPA = 20)

      INTEGER      NBINMX,NBOUMX,NUMFON
      PARAMETER   (NBINMX=50,NBOUMX=1)
      CHARACTER*8  LPAIN(NBINMX),LPAOUT(NBOUMX)
      CHARACTER*24 LCHIN(NBINMX),LCHOUT(NBOUMX)
C
      INTEGER      I,J,IBID,IADRGK,IADGKS,IRET,JRESU,NCHIN
      INTEGER      NNOFF,NUM,INCR,NRES
      INTEGER      NDEG,IERD,INIT,LIVI(NBMXPA)
      INTEGER      IADGKI,IADABS,IFM,NIV
      REAL*8       GKTHI(8),TIME,LIVR(NBMXPA)
      COMPLEX*16   CBID,LIVC(NBMXPA)
      LOGICAL FONC,EPSI
      CHARACTER*2  CODRET
      CHARACTER*8  K8BID,RESU
      CHARACTER*16 OPTI,VALK
      CHARACTER*19 CHROTA,CHPESA,CHVOLU,CF1D2D,CHEPSI,CF2D3D,CHPRES
      CHARACTER*19 CHVARC,CHVREF
      CHARACTER*24 LIGRMO,CHGEOM,CHGTHI
      CHARACTER*24 CHSIGI
      CHARACTER*24 CHTHET,CHTIME
      CHARACTER*24 ABSCUR,PAVOLU,PAPRES,PA2D3D
      CHARACTER*24 CHSIG,CHEPSP,CHVARI,TYPE,PEPSIN,LIVK(NBMXPA)
      CHARACTER*19 PINTTO,CNSETO,HEAVTO,LONCHA,LNNO,LTNO
      INTEGER      IARG
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()

C     ------------------------------------------------------------------
C     1) INITIALISATIONS
C     ------------------------------------------------------------------

      CALL INFNIV(IFM,NIV)

C     RECUPERATION DU CHAMP GEOMETRIQUE
      CALL MEGEOM(MODELE,CHGEOM)

      CHVARC='&&CAKG3D.VARC'
      CHVREF='&&CAKG3D.VARC.REF'

C     RECUPERATION DU COMPORTEMENT
      CALL GETFAC('COMP_INCR',INCR)
      IF (INCR.NE.0) THEN
        CALL GETVID(' ','RESULTAT',0,IARG,1,RESU,NRES)
        CALL DISMOI('F','TYPE_RESU',RESU,'RESULTAT',IBID,TYPE,IERD)
        IF (TYPE.NE.'EVOL_NOLI') THEN
          CALL U2MESS('F','RUPTURE1_15')
        END IF
        CALL RSEXCH('F',RESU,'SIEF_ELGA',IORD,CHSIG,IRET)
        CALL RSEXCH('F',RESU,'EPSP_ELNO',IORD,CHEPSP,IRET)
        CALL RSEXCH('F',RESU,'VARI_ELNO',IORD,CHVARI,IRET)
      END IF

C     RECUPERATION DE L'ETAT INITIAL (NON TRAITE DANS CETTE OPTION)
      CALL GETVID('COMP_INCR','SIGM_INIT',1,IARG,1,CHSIGI,INIT)
      IF (INIT.NE.0) THEN
        VALK='CALC_K_G'
        CALL U2MESK('F','RUPTURE1_13',1,VALK)
      END IF

C     RECUPERATION (S'ILS EXISTENT) DES CHAMP DE TEMPERATURES (T,TREF)
      CALL VRCINS(MODELE,MATE,' ',TIME,CHVARC,CODRET)
      CALL VRCREF(MODELE,MATE(1:8),'        ',CHVREF(1:19))

C     TRAITEMENT DES CHARGES
      CHVOLU = '&&CAKG3D.VOLU'
      CF1D2D = '&&CAKG3D.1D2D'
      CF2D3D = '&&CAKG3D.2D3D'
      CHPRES = '&&CAKG3D.PRES'
      CHEPSI = '&&CAKG3D.EPSI'
      CHPESA = '&&CAKG3D.PESA'
      CHROTA = '&&CAKG3D.ROTA'
      CALL GCHARG(MODELE,NCHAR,LCHAR,CHVOLU,CF1D2D,CF2D3D,CHPRES,CHEPSI,
     &            CHPESA,CHROTA,FONC,EPSI,TIME,IORD)
      IF (FONC) THEN
        PAVOLU = 'PFFVOLU'
        PA2D3D = 'PFF2D3D'
        PAPRES = 'PPRESSF'
        PEPSIN = 'PEPSINF'
        OPTI = 'CALC_K_G_F'
      ELSE
        PAVOLU = 'PFRVOLU'
        PA2D3D = 'PFR2D3D'
        PAPRES = 'PPRESSR'
        PEPSIN = 'PEPSINR'
        OPTI = 'CALC_K_G'
      END IF
C
C     RECUPERATION DES DONNEES XFEM OU FEM (TOPOSE)
      PINTTO = MODELE(1:8)//'.TOPOSE.PIN'
      CNSETO = MODELE(1:8)//'.TOPOSE.CNS'
      HEAVTO = MODELE(1:8)//'.TOPOSE.HEA'
      LONCHA = MODELE(1:8)//'.TOPOSE.LON'
C     ON NE PREND PAS LES LSN ET LST DU MODELE
C     CAR LES CHAMPS DU MODELE SONT DEFINIS QUE AUTOUR DE LA FISSURE
C     OR ON A BESOIN DE LSN ET LST MEME POUR LES
      LNNO   = FISS//'.LNNO'
      LTNO   = FISS//'.LTNO'


C     ------------------------------------------------------------------
C     2) CALCUL DES K(THETA_I) AVEC I=1,NDIMTE
C     ------------------------------------------------------------------

C     NDIMTE = NNOFF  SI TH-LAGRANGE
C     NDIMTE = NDEG+1 SI TH-LEGENDRE

C     pourquoi modifier NDIMTE (argument d'entree)
      IF (THLAG2) THEN
        NDIMTE = NDIMTE
      ELSEIF (THLAGR) THEN
        NDIMTE = NNOFF
      ELSE
        NDIMTE = NDEG + 1
      END IF

      CALL WKVECT('&&CAKG3D.VALG','V V R8',NDIMTE*8,IADRGK)
      CALL JEVEUO(THETAI,'L',JRESU)

C

C     BOUCLE SUR LES DIFFERENTS CHAMPS THETA
      DO 20 I = 1,NDIMTE

        CHTHET = ZK24(JRESU+I-1)
        CALL CODENT(I,'G',CHGTHI)

        LPAOUT(1) = 'PGTHETA'
        LCHOUT(1) = CHGTHI
        LPAIN(1) = 'PGEOMER'
        LCHIN(1) = CHGEOM
        LPAIN(2) = 'PDEPLAR'
        LCHIN(2) = DEPLA
        LPAIN(3) = 'PTHETAR'
        LCHIN(3) = CHTHET
        LPAIN(4) = 'PMATERC'
        LCHIN(4) = MATE
        LPAIN(5) = 'PVARCPR'
        LCHIN(5) = CHVARC
        LPAIN(6) = 'PVARCRR'
        LCHIN(6) = CHVREF
        LPAIN(7) = PAVOLU(1:8)
        LCHIN(7) = CHVOLU
        LPAIN(8) = 'PPESANR'
        LCHIN(8) = CHPESA
        LPAIN(9) = 'PROTATR'
        LCHIN(9) = CHROTA
        LPAIN(10) = PEPSIN(1:8)
        LCHIN(10) = CHEPSI
        LPAIN(11) = 'PCOMPOR'
        LCHIN(11) = COMPOR
        LPAIN(12) = 'PBASLOR'
        LCHIN(12) = BASLOC
        LPAIN(13) = 'PCOURB'
        LCHIN(13) = COURB
        LPAIN(14) = 'PPINTTO'
        LCHIN(14) = PINTTO
        LPAIN(15) = 'PCNSETO'
        LCHIN(15) = CNSETO
        LPAIN(16) = 'PHEAVTO'
        LCHIN(16) = HEAVTO
        LPAIN(17) = 'PLONCHA'
        LCHIN(17) = LONCHA
        LPAIN(18) = PA2D3D(1:8)
        LCHIN(18) = CF2D3D
        LPAIN(19) = PAPRES(1:8)
        LCHIN(19) = CHPRES
        LPAIN(20) = 'PLSN'
        LCHIN(20) = LNNO
        LPAIN(21) = 'PLST'
        LCHIN(21) = LTNO
        IF (OPTION.EQ.'CALC_K_G'.OR.
     &      OPTION.EQ.'CALC_K_G_F') THEN
          LPAIN(22) = 'PPINTER'
C          LCHIN(22) = MODELE(1:8)//'.TOPOFAC.PI'
          LCHIN(22) = MODELE(1:8)//'.TOPOFAC.OE'
          LPAIN(23) = 'PAINTER'
          LCHIN(23) = MODELE(1:8)//'.TOPOFAC.AI'
          LPAIN(24) = 'PCFACE'
          LCHIN(24) = MODELE(1:8)//'.TOPOFAC.CF'
          LPAIN(25) = 'PLONGCO'
          LCHIN(25) = MODELE(1:8)//'.TOPOFAC.LO'
          LPAIN(26) = 'PBASECO'
          LCHIN(26) = MODELE(1:8)//'.TOPOFAC.BA'
        ENDIF

        NCHIN = 26
C
        LIGRMO = MODELE//'.MODELE'
C
        CHTIME = '&&CAKG3D.CH_INST_R'
        IF (OPTI .EQ. 'CALC_K_G_F') THEN
        CALL MECACT('V',CHTIME,'MODELE',LIGRMO,'INST_R  ',1,'INST   ',
     &              IBID,TIME,CBID,K8BID)
          NCHIN = NCHIN + 1
          LPAIN(NCHIN) = 'PTEMPSR'
          LCHIN(NCHIN) = CHTIME
        END IF

        IF (LMODA) THEN
          CHPULS = '&&CAKG3D.PULS'
          CALL MECACT('V',CHPULS,'MODELE',LIGRMO,'FREQ_R  ',1,'FREQ   ',
     &              IBID,PULS,CBID,' ')
          NCHIN = NCHIN + 1
          LPAIN(NCHIN) = 'PPULPRO'
          LCHIN(NCHIN) = CHPULS
        END IF

        CALL ASSERT(NCHIN.LE.NBINMX)
        CALL CALCUL('S',OPTI,LIGRMO,NCHIN,LCHIN,LPAIN,1,LCHOUT,LPAOUT,
     &              'V','OUI')

C       FAIRE LA "SOMME" D'UN CHAM_ELEM
        CALL MESOMM(CHGTHI,8,IBID,GKTHI,CBID,0,IBID)

C       SYMETRIE DU CHARGEMENT
        IF (SYMECH.EQ.'NON') THEN
          DO 29 J = 1,7
            ZR(IADRGK-1+(I-1)*8+J) = GKTHI(J)
 29       CONTINUE
        ELSEIF (SYMECH.EQ.'OUI') THEN
C         G, fic1, fic2, fic3, K1, K2, K3,
          ZR(IADRGK-1+(I-1)*8+1) = 2.D0*GKTHI(1)
          ZR(IADRGK-1+(I-1)*8+2) = 2.D0*GKTHI(2)
          ZR(IADRGK-1+(I-1)*8+3) = 0.D0
          ZR(IADRGK-1+(I-1)*8+4) = 0.D0
          ZR(IADRGK-1+(I-1)*8+5) = 2.D0*GKTHI(5)
          ZR(IADRGK-1+(I-1)*8+6) = 0.D0
          ZR(IADRGK-1+(I-1)*8+7) = 0.D0
        ENDIF

 20   CONTINUE

C     ------------------------------------------------------------------
C     3) CALCUL DE G(S), K1(S), K2(S) ET K3(S) LE LONG DU FOND
C     ------------------------------------------------------------------

      CALL WKVECT('&&CAKG3D.VALGK_S','V V R8',NNOFF*6,IADGKS)

      IF (GLAGR.OR.THLAG2) THEN
        IF (GLAGR) THEN
          CALL WKVECT('&&CAKG3D.VALGKI','V V R8',NNOFF*5,IADGKI)
        ELSEIF (THLAG2) THEN
          CALL WKVECT('&&CAKG3D.VALGKI','V V R8',NDIMTE*5,IADGKI)
        ENDIF
      ELSE
        CALL WKVECT('&&CAKG3D.VALGKI','V V R8',(NDEG+1)*5,IADGKI)
      END IF

      ABSCUR='&&CAKG3D.ABSCU'
      CALL WKVECT(ABSCUR,'V V R',NNOFF,IADABS)

C     PREMIERE METHODE : G_LEGENDRE ET THETA_LEGENDRE
C     DEUXIEME METHODE : G_LEGENDRE ET THETA_LAGRANGE
C     TROISIEME METHODE: G_LAGRANGE ET THETA_LAGRANGE
C                       (OU G_LAGRANGE_NO_NO ET THETA_LAGRANGE)

      IF (THLAG2) THEN
        NUM = 5
        CALL GKMET4(NNOFF,NDIMTE,CHFOND,PAIR,IADRGK,MILIEU,CONNEX,
     &              IADGKS,IADGKI,ABSCUR,NUM)
      ELSEIF ((.NOT.GLAGR) .AND. (.NOT.THLAGR)) THEN
        NUM = 1
        CALL GKMET1(NDEG,NNOFF,CHFOND,IADRGK,IADGKS,IADGKI,ABSCUR)

      ELSE IF (THLAGR) THEN
        IF (.NOT.GLAGR) THEN
          NUM = 2
          CALL U2MESS('F','RUPTURE1_17')
        ELSE
          NUM = 3
          CALL GKMET3(NNOFF,CHFOND,IADRGK,MILIEU,CONNEX,IADGKS,IADGKI,
     &                ABSCUR,NUM,MODELE)
        END IF
      END IF

C     IMPRESSION DE G(S), K1(S), K2(S) ET K3(S)
      IF (NIV.GE.2) THEN
        CALL GKSIMP(RESULT,NNOFF,ZR(IADABS),IADRGK,NUM,IADGKS,
     &              NDEG,NDIMTE,IADGKI,EXTIM,TIME,IORD,IFM)
      END IF
C
C     ECRITURE DE LA TABLE DE G(S), K1(S), K2(S) ET K3(S)
      CALL GETVIS('THETA','NUME_FOND',1,IARG,1,NUMFON,IBID)

      IF (LMELAS) THEN
        CALL TBAJVI(RESULT,NBPRUP,'NUME_CAS',IORD,LIVI)
        CALL TBAJVK(RESULT,NBPRUP,'NOM_CAS',NOMCAS,LIVK)
        CALL TBAJVI(RESULT,NBPRUP,'NUME_FOND',NUMFON,LIVI)
      ELSE IF (LMODA) THEN
        CALL TBAJVI(RESULT,NBPRUP,'NUME_MODE',IORD,LIVI)
      ELSE
        CALL TBAJVI(RESULT,NBPRUP,'NUME_ORDRE',IORD,LIVI)
        CALL TBAJVR(RESULT,NBPRUP,'INST',TIME,LIVR)
        CALL TBAJVI(RESULT,NBPRUP,'NUME_FOND',NUMFON,LIVI)
      ENDIF

      DO 40 I = 1,NNOFF
        CALL TBAJVI(RESULT,NBPRUP,'NUM_PT',I,LIVI)
        CALL TBAJVR(RESULT,NBPRUP,'ABSC_CURV',ZR(IADABS-1+I),LIVR)
        CALL TBAJVR(RESULT,NBPRUP,'K1',ZR(IADGKS-1+6*(I-1)+2),LIVR)
        CALL TBAJVR(RESULT,NBPRUP,'K2',ZR(IADGKS-1+6*(I-1)+3),LIVR)
        CALL TBAJVR(RESULT,NBPRUP,'K3',ZR(IADGKS-1+6*(I-1)+4),LIVR)
        CALL TBAJVR(RESULT,NBPRUP,'G',ZR(IADGKS-1+6*(I-1)+1),LIVR)
        CALL TBAJVR(RESULT,NBPRUP,'BETA',ZR(IADGKS-1+6*(I-1)+6),LIVR)
        CALL TBAJVR(RESULT,NBPRUP,'G_IRWIN',ZR(IADGKS-1+6*(I-1)+5),LIVR)
        CALL TBAJLI(RESULT,NBPRUP,NOPRUP,LIVI,LIVR,LIVC,LIVK,0)
 40   CONTINUE

C- DESTRUCTION D'OBJETS DE TRAVAIL

      CALL JEDETR(ABSCUR)
      CALL JEDETR('&&CAKG3D.VALGK_S')
      CALL JEDETR('&&CAKG3D.VALGKI')
      CALL DETRSD('CHAMP_GD',CHVARC)
      CALL DETRSD('CHAMP_GD',CHVREF)
      CALL DETRSD('CHAMP_GD',CHVOLU)
      CALL DETRSD('CHAMP_GD',CF1D2D)
      CALL DETRSD('CHAMP_GD',CF2D3D)
      CALL DETRSD('CHAMP_GD',CHPRES)
      CALL DETRSD('CHAMP_GD',CHEPSI)
      CALL DETRSD('CHAMP_GD',CHPESA)
      CALL DETRSD('CHAMP_GD',CHROTA)

      CALL JEDETR('&&CAKG3D.VALG')

      CALL JEDEMA()
      END
