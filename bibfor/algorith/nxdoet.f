      SUBROUTINE NXDOET(MODELE,NUMEDD,LREUSE,LOSTAT,
     &                  SDIETO,INITPR,INSTIN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 16/01/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
      IMPLICIT NONE
      CHARACTER*24  MODELE
      LOGICAL       LOSTAT,LREUSE
      CHARACTER*24  NUMEDD,SDIETO
      REAL*8        INSTIN
      INTEGER       INITPR
C
C ----------------------------------------------------------------------
C
C ROUTINE THER_NON_LINE (INITIALISATION)
C
C SAISIE DES CHAMPS A L'ETAT INITIAL
C
C ----------------------------------------------------------------------
C
C
C IN  MODELE : NOM DU MODELE
C IN  NUMEDD : NUME_DDL
C IN  LREUSE : .TRUE. SI REUSE
C OUT LOSTAT : .TRUE. SI L'ON CALCULE UN CAS STATIONNAIRE
C OUT INITPR : TYPE D'INITIALISATION
C              -1 : PAS D'INITIALISATION. (VRAI STATIONNAIRE)
C               0 : CALCUL STATIONNAIRE
C               1 : VALEUR UNIFORME
C               2 : CHAMP AUX NOEUDS
C               3 : RESULTAT D'UN AUTRE CALCUL
C OUT INSTIN : INSTANT INITIAL
C                R8VIDE SI NON DEFINI
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      CHARACTER*24 IOINFO,IOLCHA
      INTEGER      JIOINF,JIOLCH
      INTEGER      NBCHAM,ZIOCH
      
      CHARACTER*8  K8BID ,CALCRI,RESULT
      CHARACTER*24 K24B
      CHARACTER*24 REPSTA,EVOL
      CHARACTER*24 NOMCHA,NOMCHS
      INTEGER      ICHAM
      CHARACTER*16 MOTFAC
      INTEGER      IBID,IERD,IRET
      INTEGER      I, NEQ,NOCC,NUMEIN
      INTEGER      JTEMP
      REAL*8       TEMPCT,R8VIDE
      INTEGER      IFM,NIV
      LOGICAL      EVONOL,LEINIT
      INTEGER      IARG
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()      
      CALL INFNIV(IFM,NIV)
C
C --- INITIALISATIONS
C
      K24B   = ' '
      INITPR = -2
      INSTIN = R8VIDE()
      EVONOL = .FALSE.
      LOSTAT = .FALSE.
      LEINIT = .FALSE.
      MOTFAC = 'ETAT_INIT'    
C      
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- ACCES SD IN ET OUT
C
      IOINFO = SDIETO(1:19)//'.INFO'
      IOLCHA = SDIETO(1:19)//'.LCHA'
      CALL JEVEUO(IOINFO,'L',JIOINF)
      CALL JEVEUO(IOLCHA,'L',JIOLCH)
      ZIOCH  = ZI(JIOINF+4-1)
      NBCHAM = ZI(JIOINF+1-1)
C
C --- ON VERIFIE QUE LE MODELE SAIT CALCULER UNE RIGIDITE
C
      CALL DISMOI('F','CALC_RIGI',MODELE,'MODELE',IBID,CALCRI,IERD)
      IF (CALCRI.NE.'OUI') CALL U2MESK('F','CALCULEL2_65',1,MODELE)
C
C --- PAS D'ETAT INITIAL EN PRESENCE D'UN CONCEPT REENTRANT
C
      CALL GETFAC(MOTFAC,NOCC  )
      CALL ASSERT(NOCC.LE.1)
      LEINIT = NOCC.GT.0
      IF (LEINIT) THEN
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<THERNONLINE> LECTURE ETAT INITIAL'
        ENDIF
      ELSE
        IF (LREUSE) THEN
          CALL U2MESS('A','ETATINIT_1')
        ELSE
          CALL U2MESS('I','ETATINIT_20')  
        ENDIF
      ENDIF
C
C --- CONCEPT EVOL_THER DONNE DANS ETAT_INIT
C
      CALL GETVID(MOTFAC,'EVOL_THER',1,IARG,1,EVOL,NOCC)
      CALL ASSERT(NOCC.LE.1)
      EVONOL = NOCC.GT.0
C
C --- INSTANT INITIAL
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<THERNONLINE> ... INSTANT INITIAL'
      ENDIF
      CALL NMDOIN(EVOL  ,EVONOL,INSTIN,NUMEIN)
      IF (NIV.GE.2) THEN
        IF (INSTIN.EQ.R8VIDE()) THEN
          WRITE (IFM,*) '<THERNONLINE> ...... NON DEFINI PAR ETAT_INIT'
        ELSE
          WRITE (IFM,*) '<THERNONLINE> ...... VALEUR    : ',INSTIN
          WRITE (IFM,*) '<THERNONLINE> ...... NUME_ORDRE: ',NUMEIN
        ENDIF  
      ENDIF       
C
C --- PAS DE PRECISION --> C'EST UN CALCUL STATIONNAIRE
C
      CALL GETFAC(MOTFAC,NOCC)
      CALL ASSERT(NOCC.LE.1)
      IF (NOCC .EQ. 0 ) THEN
        LOSTAT = .TRUE.
        INITPR = -1
        GOTO 99
      ENDIF    
C
C --- BOUCLE SUR LES CHAMPS A LIRE
C
      DO 10 ICHAM  = 1,NBCHAM
C
C ------- ETAT INITIAL DEFINI PAR UN CONCEPT DE TYPE EVOL_THER
C
          RESULT = EVOL(1:8)
C
C ------- LECTURE DU CHAMP - ETAT_INIT/EVONOL
C
          IF (EVONOL) THEN
            INITPR = 3
            CALL NMETL1(RESULT,NUMEIN,SDIETO,K24B,0,
     &                  ICHAM )
          ELSE
C
C --------- NOM DU CHAMP DANS SD RESULTAT
C
            NOMCHS = ZK24(JIOLCH+ZIOCH*(ICHAM-1)+1-1)
C
C --------- NOM DU CHAMP DANS OPERATEUR
C
            CALL NMETNC(SDIETO,K24B,0,ICHAM ,NOMCHA)
C
            IF (NOMCHS.EQ.'TEMP') THEN
              CALL JEVEUO(NOMCHA(1:19)//'.VALE','E',JTEMP)
C
C ----------- TEMPERATURE INITIALE PAR UN CHAMP
C
              CALL GETVID(MOTFAC,'CHAM_NO',1,IARG,1,K8BID ,NOCC)
              IF (NOCC.EQ.1) THEN
                INITPR = 2
                CALL NMETL2(MOTFAC,SDIETO,K24B,0,ICHAM )
              ENDIF
C
C ----------- TEMPERATURE INITIALE STATIONNAIRE
C
              CALL GETVTX(MOTFAC,'STATIONNAIRE',1,IARG,1,REPSTA,NOCC)
              IF ( NOCC .GT. 0 ) THEN
                IF ( REPSTA(1:3) .EQ. 'OUI' ) THEN
                  LOSTAT = .TRUE.
                  INITPR = 0
                  ZK24(JIOLCH+ZIOCH*(ICHAM-1)+4-1) = 'STATIONNAIRE'
                ENDIF
              ENDIF
C
C ----------- TEMPERATURE INITIALE UNIFORME
C
              CALL GETVR8(MOTFAC,'VALE',1,IARG,1,TEMPCT,NOCC)
              IF (NOCC.GT.0) THEN
                INITPR = 1
                DO 222  I = 1 , NEQ
                  ZR(JTEMP+I-1) = TEMPCT
                  ZK24(JIOLCH+ZIOCH*(ICHAM-1)+4-1) = 'VALE'
  222           CONTINUE
              ENDIF
C            
            ELSE
              CALL NMETL2(MOTFAC,SDIETO,K24B,0,ICHAM )
            ENDIF
          ENDIF
C
C ------- LECTURE DU CHAMP - VERIFICATIONS
C
          CALL NTETL3(RESULT,SDIETO,ICHAM,TEMPCT) 
  10  CONTINUE
C
  99  CONTINUE
C
      CALL JEDEMA()
C
      END
