      SUBROUTINE NMVMPO(FAMI, NPG, OPTION, NOMTE, NC,
     &                  XL, ICODMA, SECT, CARCRI, COMPOR,
     &                  U, DU, CONTM, HOEL,
     &                  HOTA, D1B, WORK, RG0,
     &                  CONTP, FL, KLV)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/02/2012   AUTEUR LEBOUVIER F.LEBOUVIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21

      IMPLICIT NONE
      CHARACTER*(*) FAMI,OPTION,NOMTE
      CHARACTER*16 COMPOR(*)
      INTEGER NPG,NC,ICODMA,ITEMP,IRET
      REAL*8 XL,SECT(*),CARCRI(*),U(2*NC),DU(2*NC),FL(2*NC),KLV(*)
      REAL*8 CONTM(3*NC),CONTP(3*NC)
      REAL*8 TEMP
      REAL*8 HOEL(NC,NC),HOTA(NC,NC),D1B(NC,2*NC)
      REAL*8 WORK(NC,2*NC),RG0(2*NC,2*NC)
C
C    - FONCTION REALISEE: COMPORTEMENT VMIS_POU_* REPERE LOCAL
C    - CRITERE GLOBAL DE PLASTICITE, MATERIAU VMIS_POUTRE(_FO)
C    - INTEGRATION IMPLICITE OU RUNGE-KUTTA

C    - ARGUMENTS IN:
C         OPTION   : RAPH_MECA, FULL_MECA OU RIGI_MECA_TANG
C         NOMTE    : MECA_POU_D_TG OU MECA_POU_D_T OU MECA_POU_D_E
C         NC       : NOMBRE DE COMPOSANTES DE CONTRAINTES
C         XL       : LONGUEUR DE L ELEMENT
C         ICODMA   : ADRESSE DU MATERIAU CODE
C         SECT     : CARACTERISTIQUES DE LA SECTION
C         CARCRI   : PARAMETRES UTILISATEUR DE CONVERGENCE
C         COMPOR   : RELATION DE COMPORTEMENT
C         U        : VECTEUR DEPLACEMENT A L'INSTANT PRECEDENT
C         DU       : VECTEUR ACCROISSEMENT DE DEPLACEMENT
C         CONTM    : CONTRAINTES A L'INSTANT PRECEDENT
C         ITEMP    : INDICATEUR DE PRESENCE DE TEMPERATURES
C         TEMPM    : TEMPERATURES NODALES A L'INSTANT PRECEDENT
C         TEMPP    : TEMPERATURES NODALES A L'INSTANT ACTUEL
C         HOEL     : MATRICE ELASTIQUE
C         VECTEU   : INDIQUE SI ON DOIT CALCULER SIGP ET VIP
C         MATRIC   : INDIQUE SI ON DOIT CALCULER HOTA
C    - ARGUMENTS OUT:
C         CONTP    : CONTRAINTES A L'INSTANT ACTUEL
C         HOTA     : MATRICE DE COMPORTEMENT TANGENT
C         FL       : FORCE NODALE = BT*CONTP
C         KLV      : MATRICE DE RIGIDITE TANGENTE
C    - TABLEAUX DE TRAVAIL : D1B,WORK,RG0
C         D1B      : MATRICE DE COMPORTEMENT TANGENT

C
      INTEGER CODRES(2)
      CHARACTER*2 NOMRES(2)
      CHARACTER*16 ALGO
      LOGICAL VECTEU,MATRIC
      INTEGER DIMKLV,KP,KK,I,J,K
      REAL*8 EPS(7),DEPS(7),FG(14),SIGP(7),SIGM(7),VIP(9)
      REAL*8 E,NU,G,PHIY,PHIZ,XLS2,L346P(28),EPSTHF,EPSTHD
      REAL*8 CO(3),AA,XIY,XIZ,ALFAY,ALFAZ,XJX,XJG,LOI346(28)
      REAL*8 VALRES(2)

C     POUR LA THERMIQUE
      REAL*8 TEMM,EM,NUM,F,DF
C
C     RECUP DU NOM DE L'ALGORITHME D'INTEGRATION LOCAL
      CALL UTLCAL('VALE_NOM',ALGO,CARCRI(6))

      IF ( NPG .EQ. 3 ) THEN
         CO(1) = 5.D0/9.D0
         CO(2) = 8.D0/9.D0
         CO(3) = 5.D0/9.D0
      ELSE
         CO(1) = 1.D0
         CO(2) = 1.D0
      ENDIF
      XLS2  = XL / 2.D0
      DIMKLV = 2*NC*(2*NC+1)/2
C
C     -- 1- 2 BOOLEENS PRATIQUES :
C     ----------------------------
      MATRIC = OPTION .EQ. 'FULL_MECA' .OR. OPTION .EQ. 'RIGI_MECA_TANG'
      VECTEU = OPTION .EQ. 'FULL_MECA' .OR. OPTION .EQ. 'RAPH_MECA'
C
      CALL R8INIR(NC*NC,0.D0,HOEL,1)
      CALL R8INIR(2*NC,0.D0,FL,1)
      CALL R8INIR(2*NC,0.D0,FG,1)
      CALL R8INIR(NC*NC,0.D0,HOTA,1)
      CALL R8INIR(NC*2*NC,0.D0,D1B,1)
      CALL R8INIR(2*NC*2*NC,0.D0,RG0,1)
C
C     MATERIAU: MOT CLE ELAS, TEMPERATURE MOYENNE
C     INTEGRATION EXPLICITE PAR RUNGE-KUTTA
C     LES COEFFICIENTS DE VMIS_POUTRE SONT EVALUES A TEMP(TMOINS)
C     UTILISE UNIQUEMENT POUR VMIS_POU_LINE ET PAS VMIS_POU_FLEJOU
C
      CALL VERIFM(FAMI,NPG,1,'-',ICODMA,'ELAS',1,EPSTHF,IRET)
      CALL VERIFM(FAMI,NPG,1,'T',ICODMA,'ELAS',1,EPSTHD,IRET)
      ITEMP = 0
      IF (IRET.EQ.0) ITEMP = 1
      NOMRES(1) = 'E'
      NOMRES(2) = 'NU'

C     THERMIQUE À T+
      CALL MOYTEM(FAMI,NPG,1,'+',TEMP,IRET)
      CALL RCVALB(FAMI,1,1,'+',ICODMA,' ','ELAS',1,'TEMP',TEMP,2,
     &            NOMRES, VALRES, CODRES, 1)
      E = VALRES(1)
      NU = VALRES(2)
      G = E / (2.D0*(1.D0+NU))
      CALL NMVMPM(COMPOR,ICODMA,ITEMP,TEMP,E,NU,L346P)

C     THERMIQUE À T-
      CALL MOYTEM(FAMI,NPG,1,'-',TEMM,IRET)
      CALL RCVALB(FAMI,1,1,'-',ICODMA,' ','ELAS',1,'TEMP',TEMM,2,
     &            NOMRES, VALRES, CODRES, 1)
      EM = VALRES(1)
      NUM = VALRES(2)
      CALL NMVMPM(COMPOR,ICODMA,ITEMP,TEMM,EM,NUM,LOI346)

C
C     CARACTERISTIQUES DE LA SECTION :
C
      AA    = SECT(1)
      XIY   = SECT(2)
      XIZ   = SECT(3)
      ALFAY = SECT(4)
      ALFAZ = SECT(5)
      XJX   = SECT(8)
      XJG   = SECT(12)
C
C     MATERIAU INTEGRE SUR LA SECTION
C
      HOEL(1,1) = E*AA
      IF (NOMTE.EQ.'MECA_POU_D_E') THEN
         HOEL(2,2) = G*AA
         HOEL(3,3) = G*AA
         PHIY = 0.D0
         PHIZ = 0.D0
      ELSE
         HOEL(2,2) = G*AA/ALFAY
         HOEL(3,3) = G*AA/ALFAZ
         PHIY = E*XIZ*12.D0*ALFAY/ (XL*XL*G*AA)
         PHIZ = E*XIY*12.D0*ALFAZ/ (XL*XL*G*AA)
      END IF
      HOEL(4,4) = G*XJX
      HOEL(5,5) = E*XIY
      HOEL(6,6) = E*XIZ
      IF (NOMTE.EQ.'MECA_POU_D_TG') THEN
         HOEL(7,7) = E*XJG
      ENDIF
C
C     BOUCLE SUR LES POINTS DE GAUSS
      DO 101 KP = 1,NPG
C        CALCUL DE D1B ( EPSI = D1B * U ) :
         IF (NOMTE.EQ.'MECA_POU_D_TG') THEN
            CALL JSD1FF(KP,XL,PHIY,PHIZ,D1B)
         ELSE
            CALL JPD1FF(KP,XL,PHIY,PHIZ,D1B)
         ENDIF
C        CALCUL DE EPS ET DEPS ET SIGM (EFFORT AU PT DE GAUSS)
C        ET DE DSIGM = INCREMENT D'EFFORT ELASTIQUE
         CALL R8INIR(NC,0.D0,EPS,1)
         CALL R8INIR(NC,0.D0,DEPS,1)
         CALL R8INIR(NC,0.D0,SIGM,1)
C
         DO 210 I = 1,NC
            DO 211 J = 1,2*NC
               EPS(I)  =  EPS(I) + D1B(I,J)* U(J)
               DEPS(I) = DEPS(I) + D1B(I,J)*DU(J)
211         CONTINUE
            SIGM(I) = CONTM(NC*(KP-1)+I)*E/EM
210      CONTINUE
         IF ((EPSTHD.NE.0.D0).AND.(ITEMP.NE.0) ) THEN
            F = EPSTHF
            DF= EPSTHD
            EPS(1) = EPS(1)- F
            DEPS(1)=DEPS(1)-DF
         ENDIF

C        QUELQUE SOIT LE COMPORTEMENT, IL FAUT :
C            HOTA : MATRICE DE COMPORTEMENT TANGENT
C            VIP  : VARIABLES INTERNES ACTUALISEES
C            SIGP : CONTRAINTES ACTUALISEES

C        LOI346(1)   = 0   ==>   ELASTICITE

C        CAS ELASTIQUE
         DO 800 I = 1, NC
            HOTA(I,I) = HOEL(I,I)
800      CONTINUE
         DO 810 I = 1, NC
            SIGP(I)=SIGM(I)+HOEL(I,I)*DEPS(I)
810      CONTINUE
         CALL R8INIR(9,0.D0,VIP,1)

C        CALCUL DE BT*H*B :
         IF (MATRIC) THEN
            CALL DSCAL(NC*NC,XLS2,HOTA,1)
            CALL DSCAL(NC*NC,CO(KP),HOTA,1)
            CALL UTBTAB('CUMU',NC,2*NC,HOTA,D1B,WORK,RG0)
         END IF

C        ON STOCKE   LES  VARIABLES INTERNES "+"
C                    LES CONTRAINTES "+" ET LE FL :
         IF (VECTEU) THEN
            DO 59 I=1,NC
               CONTP(NC*(KP-1)+I) = SIGP(I)
59          CONTINUE
C
            DO 214 K = 1,2*NC
               DO 215 KK = 1,NC
                  FL(K)=FL(K) + XLS2*SIGP(KK)*D1B(KK,K)*CO(KP)
215            CONTINUE
214         CONTINUE
         END IF
C
101   CONTINUE
C
      IF ( MATRIC ) THEN
         CALL MAVEC( RG0, 2*NC, KLV, DIMKLV )
      ENDIF
C
      END
