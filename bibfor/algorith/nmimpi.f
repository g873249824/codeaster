      SUBROUTINE NMIMPI(FONACT,SDIMPR,SDSUIV,PARCRI)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 21/12/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*24 SDIMPR
      CHARACTER*24 SDSUIV
      INTEGER      FONACT(*)
      REAL*8       PARCRI(*)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (STRUCTURES DE DONNES)
C
C CREATION SD AFFICHAGE
C
C ----------------------------------------------------------------------
C
C
C IN  SDIMPR : NOM DE LA SD POUR L'AFFICHAGE
C IN  SDSUIV : NOM DE LA SD POUR LE SUIVI
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  PARCRI : CRITERES DE CONVERGENCE (VOIR NMDOCN)
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      ZDEF
      PARAMETER    (ZDEF=40)
      INTEGER      NCOL,UNITE,NCOLCV
      INTEGER      IFM,NIV 
      CHARACTER*19 COLACT
      CHARACTER*34 IMPCNA
      INTEGER      JIMPCA
      REAL*8       R8VIDE
C      
C ----------------------------------------------------------------------
C      
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... CREATION SD AFFICHAGE' 
      ENDIF
C
C --- INITIALISATIONS
C
      IF (ZDEF.NE.40) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
      NCOLCV = 4
C
C --- LECTURE MOT_CLEF
C
      CALL IMPLEC(FONACT,SDSUIV,ZDEF  ,COLACT,NCOL  ,
     &            UNITE )
C
C --- CREATION SD AFFICHAGE
C
      CALL IMPINI(SDIMPR,SDSUIV,COLACT,UNITE ,NCOL  ,
     &            NCOLCV)
C
C --- COLONNE ACTIVEES POUR LES TESTS DE CONVERGENCE
C
      IMPCNA = SDIMPR(1:14)//'.CONV.ACT'
      CALL JEVEUO(IMPCNA,'E',JIMPCA)
      ZL(JIMPCA-1+1) = (PARCRI(2) .NE. R8VIDE())
      ZL(JIMPCA-1+2) = (PARCRI(3) .NE. R8VIDE())
      ZL(JIMPCA-1+3) = (PARCRI(6) .NE. R8VIDE())                  
      ZL(JIMPCA-1+4) = (PARCRI(12) .NE. R8VIDE())       
C
C --- MENAGE
C
      CALL JEDETR(COLACT)
      CALL JEDEMA()

      END
