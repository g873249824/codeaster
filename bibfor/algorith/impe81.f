      SUBROUTINE IMPE81(NOMRES, IMPE, BASEMO )
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*8  NOMRES, BASEMO
      CHARACTER*19 IMPE
C TOLE CRP_4
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/05/2009   AUTEUR NISTOR I.NISTOR 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C      ---- DEBUT DES COMMUNS JEVEUX ----------------------------------
      INTEGER        ZI
      COMMON /IVARJE/ZI(1)
      REAL*8         ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16     ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL        ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8   ZK8
      CHARACTER*16          ZK16
      CHARACTER*24                  ZK24
      CHARACTER*32                          ZK32
      CHARACTER*80                                  ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
      CHARACTER*32   JEXNUM, JEXNOM
C      ---- FIN DES COMMUNS JEVEUX ------------------------------------
C
      INTEGER      IBID, N1, N2, N3, N4, N5, NBVECT, IER, NBMODE,
     +             IADRIF, LLREFE, ULISOP
      REAL*8       RBID, PARTR, PARTI
      COMPLEX*16   CBID
      CHARACTER*1  TYPMAT
      CHARACTER*8  K8B, MATRAS, INTERF, BLANC
      CHARACTER*16 TYPRES, NOMCOM
C
      DATA BLANC /'        '/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFMAJ()
C
      CALL GETRES(NOMRES,TYPRES,NOMCOM)
      DPI = 2.D0*R8PI()
C
C --- RECUPERATION DES ARGUMENTS DE LA COMMANDE
C
      CALL GETVR8(' ','FREQ_EXTR',1,1,1,FREQ,NFR)
      CALL GETVR8(' ','AMOR_SOL',1,1,1,AMSO,NFR)
      AMSO = 2.D0*AMSO
C
      TYPMAT= TYPRES(16:16)
      WRITE(6,*) 'TYPMAT = ',TYPMAT
C
      CALL WKVECT(NOMRES//'.MAEL_RAID_REFE','G V K24',2,LDREFR)
      ZK24(LDREFR) = BASEMO
      ZK24(LDREFR+1) = BLANC
      
      CALL WKVECT(NOMRES//'.MAEL_MASS_REFE','G V K24',2,LDREFM)
      ZK24(LDREFM) = BASEMO
      ZK24(LDREFM+1) = BLANC      
      
      CALL WKVECT(NOMRES//'.MAEL_AMOR_REFE','G V K24',2,LDREFA)
      ZK24(LDREFA) = BASEMO
      ZK24(LDREFA+1) = BLANC      

      CALL JEVEUO(BASEMO//'           .REFD','L',IADRIF)
      CALL DISMOI('F','NB_MODES_DYN',BASEMO,'RESULTAT',
     &                      NBMODD,K8B,IER)
      CALL DISMOI('F','NB_MODES_STA',BASEMO,'RESULTAT',
     &                      NBMODS,K8B,IER)
      NBMODE = NBMODD + NBMODS
C
C --- RECUPERATION DES DIMENSIONS DE LA BASE MODALE
C
      NBDEF = NBMODE
C
C --- ALLOCATION DE LA MATRICE RESULTAT
C
      NTAIL = NBDEF* (NBDEF+1)/2
      CALL WKVECT(NOMRES//'.MAEL_RAID_VALE','G V R',NTAIL,LDRESR)
      CALL WKVECT(NOMRES//'.MAEL_MASS_VALE','G V R',NTAIL,LDRESM)      
      CALL WKVECT(NOMRES//'.MAEL_AMOR_VALE','G V R',NTAIL,LDRESA)
C
C
C        BOUCLE SUR LES COLONNES DE LA MATRICE ASSEMBLEE
C
C
      CALL JEVEUO(JEXNUM(IMPE//'.VALM',1),'L',LDBLO) 
      DO 30 I = 1 , NBMODE
C
C --------- BOUCLE SUR LES INDICES VALIDES DE LA COLONNE I
C
         DO 40 J = 1 , I
C
C
           IF (I.LE.NBMODD.OR.J.LE.NBMODD) THEN
             ZR(LDRESR+I*(I-1)/2+J-1) = 0.D0
             ZR(LDRESA+I*(I-1)/2+J-1) = 0.D0
           ELSE
C
C ----------- STOCKAGE DANS LE .UALF A LA BONNE PLACE (1 BLOC)
C
             PARTR = DBLE(ZC(LDBLO+I*(I-1)/2+J-1))
             PARTI = DIMAG(ZC(LDBLO+I*(I-1)/2+J-1))
             ZR(LDRESR+I*(I-1)/2+J-1) = PARTR
             ZR(LDRESA+I*(I-1)/2+J-1) = (PARTI-AMSO*PARTR)/(DPI*FREQ)
           ENDIF
C
 40      CONTINUE
 30   CONTINUE
C
C --- CREATION DU .DESC
C
      CALL WKVECT(NOMRES//'.MAEL_RAID_DESC','G V I',3,LDDESR)
      ZI(LDDESR) = 2
      ZI(LDDESR+1) = NBDEF
      ZI(LDDESR+2) = 2
      CALL WKVECT(NOMRES//'.MAEL_MASS_DESC','G V I',3,LDDESM)
      ZI(LDDESM) = 2
      ZI(LDDESM+1) = NBDEF
      ZI(LDDESM+2) = 2
      CALL WKVECT(NOMRES//'.MAEL_AMOR_DESC','G V I',3,LDDESA)
      ZI(LDDESA) = 2
      ZI(LDDESA+1) = NBDEF
      ZI(LDDESA+2) = 2
C
      CALL JEDEMA()
      END
