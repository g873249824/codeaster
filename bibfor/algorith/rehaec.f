      SUBROUTINE REHAEC(NOMRES,RESGEN,NOMSST)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 18/09/2012   AUTEUR LADIER A.LADIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C***********************************************************************
C    T. KERBER     DATE 14/05/93
C-----------------------------------------------------------------------
C  BUT:      < RESTITUTION HARMONIQUE ECLATEE >
      IMPLICIT NONE
C
C      RESTITUER EN BASE PHYSIQUE SUR UNE SOUS-STRUCTURE LES RESULTATS
C                ISSU DE LA SOUS-STRUCTURATION GENERALE
C  LE CONCEPT RESULTAT EST UN RESULTAT COMPOSE "DYNA_HARMO"
C
C-----------------------------------------------------------------------
C
C NOMRES   /I/: NOM K8 DU CONCEPT DYNA HARMO RESULTAT
C RESGEN   /I/: NOM K8 DU HARM_GENE AMONT
C NOMSST   /I/: NOM K8 DE LA SOUS-STRUCTURE SUR LAQUELLE ON RESTITUE
C
C
C
      INCLUDE 'jeveux.h'
C
C
      REAL*8       EPSI
      CHARACTER*4  CHAMP(8)
      CHARACTER*8  CHMP(3),CRIT,INTERP,K8B,NOMRES,BASMOD,MAILLA
      CHARACTER*8  LINT,NOMSST,MODGEN,RESGEN,SOUTR,K8REP
      CHARACTER*19 NUMDDL,NUMGEN,KNUME,KFREQ,HARMGE
      CHARACTER*24 CREFE(2),CHAMBA,CHAMNO,SELIAI,SIZLIA,SST
      CHARACTER*24 VALK(2)
      INTEGER      ITRESU(3),ELIM,IRET
      CHARACTER*8  K8BID,KBID
      INTEGER      IARG
C
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
      INTEGER I ,I1 ,IAD ,IARCHI ,IBID ,ICH 
      INTEGER IDRESU ,IEQ ,IER ,IRE1 ,IRE2 ,IRE3 
      INTEGER IRETOU ,J ,JFREQ ,JNUME ,K ,K1 ,LDNEW 
      INTEGER LFREQ ,LLCHAB ,LLNEQU ,LLNUEQ ,LLORS ,LLPRS ,LLREF1 
      INTEGER LLREF2 ,LLREFE ,LMAPRO ,LMOET ,LREFE ,LSILIA ,LSST 
      INTEGER N1 ,NBCHAM ,NBDDG ,NBFREQ ,NBSST ,NEQ 
      INTEGER NEQET ,NEQGEN ,NEQRED ,NUSST ,NUTARS 
C-----------------------------------------------------------------------
      DATA SOUTR  /'&SOUSSTR'/
C-----------------------------------------------------------------------
C
C --- ECRITURE DU TITRE
C
      CALL JEMARQ()
      CALL TITRE
C
C --- DETERMINATION DES CHAMPS A RESTITUER, PARMI DEPL, VITE ET ACCE
C
      HARMGE = RESGEN
C --- CALCUL DU NOMBRE DE CHAMPS A RESTITUER ET LEURS ADDRESSES

      CALL JEEXIN(RESGEN//'           .DEPL',IRE1)
      CALL JEEXIN(RESGEN//'           .VITE',IRE2)
      CALL JEEXIN(RESGEN//'           .ACCE',IRE3)
C
      IF (IRE1.EQ.0.AND.IRE2.EQ.0.AND.IRE3.EQ.0) THEN
        VALK (1) = RESGEN
        CALL U2MESG('F', 'ALGORITH14_35',1,VALK,0,0,0,0.D0)
      ENDIF
C     
      CALL GETVTX(' ','TOUT_CHAM',0,IARG,1,K8REP,N1)
      IF (K8REP(1:3).EQ.'OUI') THEN
        IF (IRE1.EQ.0) THEN
          CALL U2MESS('F','ALGORITH10_44')
        ENDIF
        IF (IRE2.EQ.0) THEN
          CALL U2MESS('F','ALGORITH10_45')
        ENDIF
        IF (IRE3.EQ.0) THEN
          CALL U2MESS('F','ALGORITH10_46')
        ENDIF
        NBCHAM = 3
        CHMP(1) = 'DEPL'
        CHMP(2) = 'VITE'
        CHMP(3) = 'ACCE'
        CALL JEVEUO(HARMGE//'.DEPL','L',ITRESU(1))
        CALL JEVEUO(HARMGE//'.VITE','L',ITRESU(2))
        CALL JEVEUO(HARMGE//'.ACCE','L',ITRESU(3))
      ELSE
C ----  ON RECHERCHE LES CHAMPS QU'IL FAUT RESTITUER      
         CALL GETVTX ( ' ', 'NOM_CHAM', 1,IARG,0, CHAMP, N1 )
         NBCHAM = -N1
         CALL GETVTX ( ' ', 'NOM_CHAM', 1,IARG,NBCHAM, CHAMP, N1 )
C ----   BOUCLE SUR LES CHAMPS DEMANDES
         DO 69 I = 1 , NBCHAM
         
           IF ( CHAMP(I).EQ.'DEPL' ) THEN
              CHMP(I) = 'DEPL'
              CALL JEEXIN ( HARMGE//'.DEPL' , IRET )
              IF ( IRET.EQ.0 ) THEN
               CALL U2MESS('F','ALGORITH10_11')
              ELSE
               CALL JEVEUO ( HARMGE//'.DEPL', 'L', ITRESU(I) )
              ENDIF
           ELSEIF ( CHAMP(I).EQ.'VITE' ) THEN
              CHMP(I) = 'VITE'
              CALL JEEXIN ( HARMGE//'.VITE' , IRET )
              IF ( IRET.EQ.0 ) THEN
               CALL U2MESS('F','ALGORITH10_12')
              ELSE
               CALL JEVEUO ( HARMGE//'.VITE', 'L', ITRESU(I) )
              ENDIF
           ELSEIF ( CHAMP(I).EQ.'ACCE' ) THEN
              CHMP(I) = 'ACCE'
              CALL JEEXIN ( HARMGE//'.ACCE' , IRET )
              IF ( IRET.EQ.0 ) THEN
               CALL U2MESS('F','ALGORITH10_13')
              ELSE
               CALL JEVEUO ( HARMGE//'.ACCE', 'L', ITRESU(I) )
              ENDIF
           ELSE
C ----        SI LE CHAMP N'EST PAS DEPL,VITE OU ACCE ON PLANTE
              CALL U2MESS('F','ALGORITH10_16')
           ENDIF
69       CONTINUE
      ENDIF
C
C     NOMBRE DE CHAMPS SYMBOLIQUES CALCULES.
C     ON S'ASSURE QUE LEUR NOMBRE EST NON NUL.
C
      IF (NBCHAM.EQ.0) THEN
        VALK (1) = RESGEN
        CALL U2MESG('F', 'ALGORITH14_35',1,VALK,0,0,0,0.D0)
      END IF
C
C --- RECUPERATION DE LA NUMEROTATION ET DU MODELE GENERALISE
C
      CALL JEVEUO(HARMGE//'.REFD','L',LLREF1)
      NUMGEN(1:14) = ZK24(LLREF1+3)(1:14)
      CALL JELIBE(HARMGE//'.REFD')
      NUMGEN(15:19) = '.NUME'
      CALL JEVEUO(NUMGEN//'.REFN','L',LLREF2)
      MODGEN = ZK24(LLREF2)(1:8)
      CALL JELIBE(NUMGEN//'.REFN')
      CALL JEVEUO(NUMGEN//'.NEQU','L',LLNEQU)
      NEQGEN = ZI(LLNEQU)
      CALL JELIBE(NUMGEN//'.NEQU')
C
C --- RECUPERATION NUMERO DE LA SOUS-STRUCTURE
C
      CALL JENONU(JEXNOM(MODGEN//'      .MODG.SSNO',NOMSST),NUSST)
      IF (NUSST.EQ.0) THEN
        VALK (1) = MODGEN
        VALK (2) = NOMSST
        CALL U2MESG('F', 'ALGORITH14_25',2,VALK,0,0,0,0.D0)
      ENDIF
C
C-- ON TESTE SI ON A EU RECOURS A L'ELIMINATION
C
      SELIAI=NUMGEN(1:14)//'.ELIM.BASE'
      SIZLIA=NUMGEN(1:14)//'.ELIM.TAIL'
      SST=   NUMGEN(1:14)//'.ELIM.NOMS'
C
      CALL JEEXIN(SELIAI,ELIM)
C     
      IF (ELIM .EQ. 0) THEN
            
        CALL JENONU(JEXNOM(NUMGEN//'.LILI',SOUTR),IBID)
        CALL JEVEUO(JEXNUM(NUMGEN//'.ORIG',IBID),'L',LLORS)
        CALL JENONU(JEXNOM(NUMGEN//'.LILI',SOUTR),IBID)
        CALL JELIRA(JEXNUM(NUMGEN//'.ORIG',IBID),'LONMAX',NBSST,KBID)
C
        NUTARS=0
        DO 20 I=1,NBSST
          IF(ZI(LLORS+I-1).EQ.NUSST) NUTARS=I
  20    CONTINUE
C
C
C --- NOMBRE DE MODES ET NUMERO DU PREMIER DDL DE LA SOUS-STRUCTURE
        CALL JENONU(JEXNOM(NUMGEN//'.LILI',SOUTR),IBID)
        CALL JEVEUO(JEXNUM(NUMGEN//'.PRNO',IBID),'L',LLPRS)
        NBDDG=ZI(LLPRS+(NUTARS-1)*2+1)
        IEQ=ZI(LLPRS+(NUTARS-1)*2)
C
      ELSE
C      
        NEQET=0
        IEQ=0
        CALL JELIRA(MODGEN//'      .MODG.SSNO','NOMMAX',NBSST,KBID)
        CALL JEVEUO(NUMGEN//'.NEQU','L',IBID)
        NEQRED=ZI(IBID)
        CALL JEVEUO(SELIAI,'L',LMAPRO)
        CALL JEVEUO(SIZLIA,'L',LSILIA)
        CALL JEVEUO(SST,'L',LSST)
        IBID=1
        DO 11 I=1,NBSST
          NEQET=NEQET+ZI(LSILIA+I-1)
  11    CONTINUE
C
        IEQ=0
        DO 41 I1=1,NUSST-1
            IEQ=IEQ+ZI(LSILIA+I1-1)
  41    CONTINUE
C        
        CALL WKVECT('&&MODE_ETENDU_REST_ELIM','V V C',NEQET,LMOET)    
      ENDIF
C
C --- RECUPERATION D'INFORMATIONS SUR LA SOUS-STRUCTURE
C
      CALL MGUTDM(MODGEN,NOMSST,IBID,'NOM_BASE_MODALE',IBID,BASMOD)
      IF (ELIM .NE. 0) THEN
        CALL DISMOI('F','NB_MODES_TOT',BASMOD,'RESULTAT',NBDDG,KBID,
     &              IER)
      ENDIF
      
      CALL JEVEUO(BASMOD//'           .REFD','L',LLREFE)
C -->AAC-->NORMALEMENT CE .REFD EST INCOHERENT AVEC CELUI DE DYNA_GENE
      LINT = ZK24(LLREFE+4)(1:8)
      CALL DISMOI('F','NOM_MAILLA',LINT,'INTERF_DYNA',IBID,
     &            MAILLA,IRET)
      CALL DISMOI('F','NOM_NUME_DDL',LINT,'INTERF_DYNA',IBID,
     &            NUMDDL,IRET)
      CALL DISMOI('F','NB_EQUA',NUMDDL,'NUME_DDL',NEQ,K8BID,IRET)
C
      CREFE(1) = MAILLA
      CREFE(2) = NUMDDL
C
C --- RECUPERATION DES FREQUENCES
C
      CALL GETVTX(' ','CRITERE'  ,0,IARG,1,CRIT,N1)
      CALL GETVR8(' ','PRECISION',0,IARG,1,EPSI,N1)
      CALL GETVTX(' ','INTERPOL' ,0,IARG,1,INTERP,N1)
C
      KNUME = '&&RETREC.NUM_RANG'
      KFREQ = '&&RETREC.FREQ'
      CALL RSTRAN(INTERP,HARMGE,' ',1,KFREQ,KNUME,NBFREQ,IRETOU)
      IF (IRETOU.NE.0) THEN
        CALL U2MESS('F','ALGORITH10_47')
      ENDIF
      CALL JEEXIN(KFREQ,IRET)
      IF (IRET.GT.0) THEN
        CALL JEVEUO(KFREQ,'E',JFREQ)
        CALL JEVEUO(KNUME,'E',JNUME)
      ENDIF
C
C --- ALLOCATION DE LA STRUCTURE DE DONNEES RESULTAT-COMPOSE
C
      CALL RSCRSD('G',NOMRES,'DYNA_HARMO',NBFREQ)
C
C -------------------------------------
C --- RESTITUTION SUR BASE PHYSIQUE ---
C -------------------------------------
C
      CALL JEVEUO(NUMGEN//'.NUEQ','L',LLNUEQ)
C
      IARCHI = 0
      IF (INTERP(1:3).NE.'NON') THEN 
        CALL U2MESS('F','ALGORITH3_86')
C
      ELSE
        CALL JEEXIN(HARMGE//'.ORDR',IRET)
C
        DO 40 I=0,NBFREQ-1
          IARCHI = IARCHI + 1

          DO 42 ICH=1,NBCHAM
            IDRESU = ITRESU(ICH)
C                       
C-- SI ELIMINATION, ON RESTITUE D'ABORD LES MODES GENERALISES       
            IF (ELIM .NE. 0) THEN      
              DO 22 I1=1,NEQET
                ZC(LMOET+I1-1)=DCMPLX(0.D0,0.D0)
                DO 33 K1=1,NEQRED
                  ZC(LMOET+I1-1)=ZC(LMOET+I1-1)+
     &              ZR(LMAPRO+(K1-1)*NEQET+I1-1)*
     &              ZC(IDRESU+K1-1+(ZI(JNUME+I)-1)*NEQRED)
  33            CONTINUE
  22          CONTINUE             
            ENDIF
            
            CALL RSEXCH(' ',NOMRES,CHMP(ICH),IARCHI,CHAMNO,IRET)
            IF (IRET.EQ.0) THEN
              CALL U2MESK('A','ALGORITH2_64',1,CHAMNO)
            ELSEIF (IRET.EQ.100) THEN
              CALL VTCREA(CHAMNO,CREFE,'G','C',NEQ)
            ELSE
              CALL ASSERT(.FALSE.)
            ENDIF
            CHAMNO(20:24) = '.VALE'
            CALL JEVEUO(CHAMNO,'E',LDNEW)
C
C --- BOUCLE SUR LES MODES PROPRES DE LA BASE
C
            DO 70 J=1,NBDDG
              CALL DCAPNO(BASMOD,'DEPL',J,CHAMBA)
              CALL JEVEUO(CHAMBA,'L',LLCHAB)
              
              IF (ELIM .NE. 0) THEN
                IAD=LMOET+IEQ+J-1
              ELSE
                IAD=IDRESU+(ZI(JNUME+I)-1)*NEQGEN+
     &              ZI(LLNUEQ+IEQ+J-2)-1
              ENDIF
C
C --- BOUCLE SUR LES EQUATIONS PHYSIQUES
C
              DO 80 K = 1,NEQ
                ZC(LDNEW+K-1)=ZC(LDNEW+K-1)+ZR(LLCHAB+K-1)*ZC(IAD)
80            CONTINUE
              CALL JELIBE(CHAMBA)
70          CONTINUE
            CALL JELIBE(CHAMNO)
            CALL RSNOCH(NOMRES,CHMP(ICH),IARCHI)
42        CONTINUE
          CALL RSADPA(NOMRES,'E',1,'FREQ',IARCHI,0,LFREQ,K8B)
          ZR(LFREQ) = ZR(JFREQ+I)
40      CONTINUE
C
      ENDIF
C
      CALL WKVECT(NOMRES//'           .REFD','G V K24',7,LREFE)
C --> AAC-->NORMALEMENT CE .REFD EST INCOHERENT AVEC CELUI DE DYNA_GENE
      ZK24(LREFE  ) = ZK24(LLREFE)
      ZK24(LREFE+1) = ZK24(LLREFE+1)
      ZK24(LREFE+2) = ZK24(LLREFE+2)
      ZK24(LREFE+3) = ZK24(LLREFE+3)
      ZK24(LREFE+4) = ZK24(LLREFE+4)
      ZK24(LREFE+5) = ZK24(LLREFE+5)
      ZK24(LREFE+6) = ZK24(LLREFE+6)
      CALL JELIBE(NOMRES//'           .REFD')
      CALL JELIBE(BASMOD//'           .REFD')
C
      CALL JELIBE(NUMGEN//'.NUEQ')
      CALL JEDETR('&&RETREC.NUM_RANG')
      CALL JEDETR('&&RETREC.FREQ')
C
      GOTO 9999
C
 9999 CONTINUE
      CALL JEDEMA()
      END
