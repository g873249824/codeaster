      SUBROUTINE XLAGSP(NOMA  ,FISS  ,ALGOLA,NDIM  ,
     &                  NLISEQ,NLISRL,NLISCO,NLISUP,NBASCO)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/05/2009   AUTEUR MAZET S.MAZET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C
      IMPLICIT NONE
      CHARACTER*8   NOMA,FISS
      INTEGER       NDIM
      INTEGER       ALGOLA
      CHARACTER*19  NLISEQ,NLISRL,NLISCO,NLISUP,NBASCO
C
C ----------------------------------------------------------------------
C
C ROUTINE XFEM (PREPARATION)
C
C CHOIX DE L'ESPACE DES LAGRANGES POUR LE CONTACT
C                   (VOIR BOOK VI 15/07/05) :
C    - DETERMINATION DES NOEUDS
C    - CREATION DES RELATIONS DE LIAISONS ENTRE LAGRANGE
C
C ----------------------------------------------------------------------
C
C
C IN  NDIM   : DIMENSION DE L'ESPACE
C IN  NOMA   : NOM DE L'OBJET MAILLAGE
C IN  ALGOLA : TYPE DE CREATION DES RELATIONS DE LIAISONS ENTRE LAGRANGE
C OUT NLISRL : LISTE REL. LIN. POUR V1 ET V2
C OUT NLISCO : LISTE REL. LIN. POUR V1 ET V2
C OUT NLISEQ : LISTE REL. LIN. POUR V2 SEULEMENT
C OUT NLISUP : LISTE REL. LIN. SUPPLÉMENTAIRES POUR MAILLAGE LINÉAIRE
C OUT NBASCO : CHAM_NO POUR BASE COVARIANTE
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32 JEXNUM,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      NBCMP
      PARAMETER    (NBCMP = 12)
      CHARACTER*8  LICMPR(NBCMP)
C
      INTEGER      NBMA,NBNO,NBAR,NBARTO
      INTEGER      AR(12,2),NA,NB,NMIL,NUNOA,MXAR
      INTEGER      NUNOB,NUNOM,NOMIL,NUNOAA,NUNOBB,NUNO
      INTEGER      IA,IIA,IA1,IA2,I,IRET,IMA,JMA,IBID,IBID2(12,3)
      INTEGER      JCOOR,JCONX1,JCONX2
      INTEGER      JCNSV,JCNSL
      REAL*8       LSNA,LSNB,LSTA,LSTB,A(3),B(3),C(3),CC(3),S
      CHARACTER*8  K8BID,TYPMA
      INTEGER      IFM,NIV
      CHARACTER*19 LTNO,LNNO,GRLTNO,GRLNNO,CNSBAS
      CHARACTER*19 CNSLT,CNSLN,GRLN,GRLT
      INTEGER      JLTSV,JLNSV,JGRLNV,JGRLTV
      CHARACTER*19 TABNO,TABINT,TABCRI
      INTEGER      JTABNO,JTABIN,JTABCR
      INTEGER      XXMMVD,ZXBAS
      REAL*8       LON,DIST1,DIST2,R8MAEM,TMP
      LOGICAL      MAQUA,EXILI
C
      DATA LICMPR/ 'X1' ,'X2' ,'X3' ,
     &             'X4' ,'X5' ,'X6' ,
     &             'X7' ,'X8' ,'X9' ,
     &             'X10','X11','X12'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('XFEM',IFM,NIV)
C
C --- RECUPERATION DE DONNEES RELATIVES AU MAILLAGE
C
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8BID,IRET)
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNO,K8BID,IRET)
      CALL JEVEUO(NOMA(1:8)//'.TYPMAIL','L',JMA)
      CALL JEVEUO(NOMA(1:8)//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA(1:8)//'.CONNEX','LONCUM'),'L',JCONX2)
      CALL JEVEUO(NOMA(1:8)//'.COORDO    .VALE','L',JCOOR)
C
C --- DIMENSIONNEMENT DU NOMBRE MAXIMUM D'ARETES COUPEES PAR LA FISSURE
C --- PAR LE NOMBRE DE NOEUDS DU MAILLAGE (À AUGMENTER SI NÉCESSAIRE)
C
      MXAR   = NBNO
C
C --- INITIALISATIONS
C
      ZXBAS  = XXMMVD('ZXBAS')
      NBARTO = 0
      CALL ASSERT(NBCMP.EQ.ZXBAS)
      TABNO  = '&&XLAGSP.TABNO'
      TABINT = '&&XLAGSP.TABINT'
      TABCRI = '&&XLAGSP.TABCRI'
      CNSLT  = '&&XLAGSP.CNSLT'
      CNSLN  = '&&XLAGSP.CNSLN'
      GRLT   = '&&XLAGSP.GRLT'
      GRLN   = '&&XLAGSP.GRLN'
      CNSBAS = '&&XLAGSP.CNSBAS'
C
C --- TRANSFO. CHAM_NO -> CHAM_NO_S DES LEVEL SETS
C
      LTNO   = FISS(1:8)//'.LTNO'
      LNNO   = FISS(1:8)//'.LNNO'
      CALL CNOCNS(LTNO  ,'V',CNSLT)
      CALL CNOCNS(LNNO  ,'V',CNSLN)
C
C --- TRANSFO. CHAM_NO -> CHAM_NO_S DES GRADIENTS
C
      GRLTNO = FISS(1:8)//'.GRLTNO'
      GRLNNO = FISS(1:8)//'.GRLNNO'
      CALL CNOCNS(GRLTNO,'V',GRLT)
      CALL CNOCNS(GRLNNO,'V',GRLN)
C
C --- ACCES AUX CHAM_NO_S LEVEL SETS ET GRADIENTS
C
      CALL JEVEUO(CNSLT(1:19)//'.CNSV','L',JLTSV )
      CALL JEVEUO(CNSLN(1:19)//'.CNSV','L',JLNSV )
      CALL JEVEUO(GRLT(1:19) //'.CNSV','L',JGRLTV)
      CALL JEVEUO(GRLN(1:19) //'.CNSV','L',JGRLNV)
C
C --- CREATION DU CHAM_NO_S DE LA BASE COVARIANTE
C
      CALL CNSCRE(NOMA,'NEUT_R',NBCMP,LICMPR,'V',CNSBAS)
C
C --- ACCES AU CHAM_NO_S DE LA BASE COVARIANTE
C
      CALL JEVEUO(CNSBAS(1:19)//'.CNSV','E',JCNSV)
      CALL JEVEUO(CNSBAS(1:19)//'.CNSL','E',JCNSL)
C
C --- CREATION OBJETS DE TRAVAIL
C --- TABNO  : COL 1,2     : NOEUDS EXTREMITE
C            : COL 3       : NOEUD MILIEU
C --- TABINT : COL 1,2(,3) : COORDONNEES DU POINT D'INTERSECTION
C
      CALL WKVECT(TABNO ,'V V I',3*MXAR   ,JTABNO)
      CALL WKVECT(TABINT,'V V R',NDIM*MXAR,JTABIN)
      CALL WKVECT(TABCRI,'V V R',1*MXAR   ,JTABCR)
C
C --- CREATION DE LA LISTE DES ARETES COUPEES
C
      EXILI=.FALSE.
      DO 100 IMA = 1,NBMA
        CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ZI(JMA-1+IMA)),TYPMA)
C
C ---- SI MAILLE NON VOLUMIQUE OU SURFACIQUE ON CONTINUE
C
        IF (((NDIM.EQ.3).AND.(TYPMA(1:4).NE.'HEXA'.AND.
     &           TYPMA(1:5).NE.'PENTA'.AND.
     &           TYPMA(1:5).NE.'TETRA'))
     &           .OR.((NDIM.EQ.2).AND.
     &           (TYPMA(1:4).NE.'TRIA'.AND.
     &           TYPMA(1:4).NE.'QUAD'))) THEN
          GOTO 100
        ENDIF
C
C --- LES ELEMENTS SONT-ILS LINEAIRES?
C
        MAQUA=.TRUE.
        IF (((NDIM.EQ.2).AND.((TYPMA.EQ.'TRIA3').OR.(TYPMA.EQ.'QUAD4')))
     &           .OR.((NDIM.EQ.3).AND.((TYPMA.EQ.'HEXA8')
     &           .OR.(TYPMA.EQ.'TETRA4').OR.(TYPMA.EQ.'PENTA6')))) THEN
          MAQUA=.FALSE.
          EXILI=.TRUE.
        ENDIF
C
C --- BOUCLE SUR LES ARETES DE LA MAILLE VOLUMIQUE
C
        CALL CONARE(TYPMA,AR,NBAR)
        DO 110 IA=1,NBAR
          NA    = AR(IA,1)
          NB    = AR(IA,2)
          NUNOA = ZI(JCONX1-1+ZI(JCONX2+IMA-1)+NA-1)
          NUNOB = ZI(JCONX1-1+ZI(JCONX2+IMA-1)+NB-1)
C
C --- SI CETTE ARETE N'EST PAS COUPEE PAR LA FISSURE, ON SORT
C
          LSNA  = ZR(JLNSV-1+(NUNOA-1)+1)
          LSNB  = ZR(JLNSV-1+(NUNOB-1)+1)
          IF (LSNA*LSNB.GE.0.D0) GOTO 110
          LSTA  = ZR(JLTSV-1+(NUNOA-1)+1)
          LSTB  = ZR(JLTSV-1+(NUNOB-1)+1)
          IF (LSTA.GE.0.D0.OR.LSTB.GE.0.D0) GOTO 110

C --- AU MOINS UNE ARETE COUPEE
          IF (.NOT.MAQUA) THEN
            NUNOM=0
          ELSE
            NMIL  = NOMIL(TYPMA,IA)
            NUNOM = ZI(JCONX1-1+ZI(JCONX2+IMA-1)+NMIL-1)
          ENDIF
C
C --- EST-CE QUE L'ARETE EST DEJA VUE ?
C
          IF (.NOT.MAQUA) THEN
            DO 120 I = 1,NBARTO
C             ARETE DEJA VUE
              IF (NUNOA.EQ.ZI(JTABNO-1+3*(I-1)+1).AND.
     &                 NUNOB.EQ.ZI(JTABNO-1+3*(I-1)+2)) GOTO 110
              IF (NUNOA.EQ.ZI(JTABNO-1+3*(I-1)+2).AND.
     &                 NUNOB.EQ.ZI(JTABNO-1+3*(I-1)+1)) GOTO 110
 120        CONTINUE
          ELSE
            DO 150 I = 1,NBARTO
C             ARETE DEJA VUE (ON A DEJA SON NOEUD MILIEU EN STOCK)
              IF (NUNOM.EQ.ZI(JTABNO-1+3*(I-1)+3)) GOTO 110
 150        CONTINUE
          ENDIF
C
C --- NOUVELLE ARETE
C
          NBARTO = NBARTO+1
          CALL ASSERT(NBARTO.LT.MXAR)
          ZI(JTABNO-1+3*(NBARTO-1)+1) = NUNOA
          ZI(JTABNO-1+3*(NBARTO-1)+2) = NUNOB
          ZI(JTABNO-1+3*(NBARTO-1)+3) = NUNOM
          DO 130 I=1,NDIM
            A(I)  = ZR(JCOOR-1+3*(NUNOA-1)+I)
            B(I)  = ZR(JCOOR-1+3*(NUNOB-1)+I)
            S     = -LSNA/(LSNB-LSNA)
            C(I)  = A(I)+S*(B(I)-A(I))
            ZR(JTABIN-1+NDIM*(NBARTO-1)+I)=C(I)
 130      CONTINUE
          IF (.FALSE.) THEN
            LON = 0.D0
            DO 140 I=1,NDIM
              LON = LON + (A(I)-B(I))*(A(I)-B(I))
 140        CONTINUE
            ZR(JTABCR-1+1*(NBARTO-1)+1) = SQRT(LON)
          ENDIF
C
C --- REMPLISSAGE DU CHAM_NO_S DE LA BASE COVARIANTE
C
          CALL XBASCO(NDIM  ,MAQUA,NUNOA ,NUNOB ,NUNOM ,
     &                A     ,B     ,C     ,S     ,
     &                JGRLNV,JGRLTV,JCNSV ,JCNSL )
C
C FIN DE BOUCLE SUR LES ARETES DE LA MAILLE IMA
C
 110    CONTINUE
C
 100  CONTINUE
C
C --- CAS MAILLAGE LINÉAIRE, ON AJOUTE LES RELATIONS POUR LES LAGRANGES
C     DES ARETES QUI NE SONT PAS DIRECTEMENT COUPÉES PAR LA FISSURE
C
      IF (EXILI) THEN
        IF (ALGOLA.EQ.0) THEN
          ALGOLA=2
          CALL U2MESS('A','XFEM_28')
        ENDIF
        CALL XLAGSL(NOMA,FISS,ALGOLA,NDIM,CNSBAS,NLISUP)
      ENDIF
C
C --- CREATION DU CHAM_NO DE LA BASE COVARIANTE
C
      IF (NBARTO.GT.0) THEN
        CALL CNSCNO(CNSBAS,' ','NON','G',NBASCO,'F',IBID)
      ENDIF
C
C --- CRITERE POUR DEPARTAGER LES ARETES HYPERSTATIQUES:
C     LONGUEUR DE FISSURE CONTROLÉE, I.E.
C     SOMME DES LONGUEURS DES ARETES DES FACETTES
C     DE CONTACT CONNECTEES A CHAQUE ARETE
C
      DO 200 IA=1,NBARTO
        NUNOA = ZI(JTABNO-1+3*(IA-1)+1)
        NUNOB = ZI(JTABNO-1+3*(IA-1)+2)
        NUNOM = ZI(JTABNO-1+3*(IA-1)+3)
        DO 210 I=1,NDIM
          C(I)=ZR(JTABIN-1+NDIM*(IA-1)+I)
 210    CONTINUE
        DIST1=R8MAEM()
        DIST2=R8MAEM()
        IA1=0
        IA2=0

        DO 220 IIA=1,NBARTO
          NUNOAA = ZI(JTABNO-1+3*(IIA-1)+1)
          NUNOBB = ZI(JTABNO-1+3*(IIA-1)+2)
          IF ((NUNOA.EQ.NUNOAA.AND.NUNOB.NE.NUNOBB)
     &             .OR.(NUNOA.EQ.NUNOBB.AND.NUNOB.NE.NUNOAA)) THEN
C           NUNOA CONNECTE LES DEUX ARETES
            DO 300 I=1,NDIM
              CC(I)=ZR(JTABIN-1+NDIM*(IIA-1)+I)
 300        CONTINUE
            LON=0.D0
            DO 310 I=1,NDIM
              LON = LON+(CC(I)-C(I))*(CC(I)-C(I))
 310        CONTINUE
            LON=SQRT(LON)
            IF (LON.LT.DIST1) THEN
              DIST1=LON
              IA1=IIA
            ENDIF
          ENDIF
          IF ((NUNOA.NE.NUNOAA.AND.NUNOB.EQ.NUNOBB)
     &             .OR.(NUNOA.NE.NUNOBB.AND.NUNOB.EQ.NUNOAA)) THEN
C           NUNOB CONNECTE LES DEUX ARETES
            DO 320 I=1,NDIM
              CC(I)=ZR(JTABIN-1+NDIM*(IIA-1)+I)
 320        CONTINUE
            LON=0.D0
            DO 330 I=1,NDIM
              LON = LON+(CC(I)-C(I))*(CC(I)-C(I))
 330        CONTINUE
            LON=SQRT(LON)
            IF (LON.LT.DIST2) THEN
              DIST2=LON
              IA2=IIA
            ENDIF
          ENDIF
 220    CONTINUE
        LON=0.D0
        IF (IA2.NE.0) THEN
          LON=LON+DIST2
        ENDIF
        IF (IA1.NE.0) THEN
          LON=LON+DIST1
        ENDIF

        ZR(JTABCR-1+1*(IA-1)+1)=LON

 200  CONTINUE
C
C --- CREATION DES LISTES DES RELATIONS DE LIAISONS ENTRE LAGRANGE
C
      CALL XLAGSC(NDIM  ,NBNO  ,NBARTO,MXAR  ,ALGOLA,
     &            JTABNO,JTABIN,JTABCR,JLNSV ,EXILI ,
     &            NLISEQ,NLISRL,NLISCO)
C
C --- DESTRUCTION DES OBJETS TEMPORAIRES
C
      CALL JEDETR(TABNO)
      CALL JEDETR(TABINT)
      CALL JEDETR(TABCRI)
      CALL DETRSD('CHAM_NO_S',CNSLT)
      CALL DETRSD('CHAM_NO_S',CNSLN)
      CALL DETRSD('CHAM_NO_S',GRLT)
      CALL DETRSD('CHAM_NO_S',GRLN)
C
C --- AFFICHAGE LISTE REL. LINEAIRES
C
      IF (NIV.GE.2) THEN
        WRITE(IFM,*) '<XFEM  > LISTE DES RELATIONS LINEAIRES'
        CALL UTIMSD(IFM,-1,.TRUE.,.TRUE.,NLISEQ,1,' ')
        CALL UTIMSD(IFM,-1,.TRUE.,.TRUE.,NLISRL,1,' ')
        CALL UTIMSD(IFM,-1,.TRUE.,.TRUE.,NLISCO,1,' ')
        CALL UTIMSD(IFM,-1,.TRUE.,.TRUE.,NLISUP,1,' ')
      ENDIF
C
      CALL JEDEMA()
      END
