      SUBROUTINE MERIM2(MODELE,CARELE,MATE,COMREF,COMPOR,LISCHA,CARCRI,
     &                  DEPDEL,POUGD,STADYN,DEPENT,VITENT,VALMOI,VALPLU,
     &                  OPTIOZ,MERIGI,RESIDU,VEDIRI,ITERAT,TABRET)
      IMPLICIT NONE
      INTEGER       ITERAT
      LOGICAL       TABRET(0:10)
      CHARACTER*(*) MATE,OPTIOZ
      CHARACTER*16  OPTION
      CHARACTER*19  LISCHA,MATN
      CHARACTER*24  MODELE,CARELE,COMPOR,COMREF
      CHARACTER*24  CARCRI,DEPDEL,STADYN,MERIGI,RESIDU
      CHARACTER*24  VEDIRI,DEPENT,VITENT
      CHARACTER*24  VALMOI,VALPLU,POUGD
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 28/03/2007   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_20
C ----------------------------------------------------------------------
C     CALCUL DES MATRICES ELEMENTAIRES DES ELEMENTS DU MODELE ET DES
C     TERMES ELEMENTAIRES DU RESIDU
C
C DUPLICATA DE MERIMO POUR POST_ZAC (OP0175)
C NE SUIT PAS LES EVOL DU MERIMO PRINCIPAL
C A RESORBER DES QUE POSSIBLE
C
C IN       MODELE  : NOM DU MODELE
C IN       LISCHA  : SD L_CHARGES
C IN       CARELE  : CARACTERISTIQUES DES POUTRES ET COQUES
C IN       MATE    : CHAMP DE MATERIAU CODE
C IN       COMPOR  : TYPE DE RELATION DE COMPORTEMENT
C IN       CARCRI  : CARTE DES CRITERES DE CONVERGENCE LOCAUX
C IN       DEPDEL  : CHAM_NO DE L'INCREMENT DE DEPLAC. DEPUIS T-
C IN       DDEPLA  : CHAM_NO DE L'INCREMENT DE DEPLAC. DEPUIS T-
C IN       DEPKM1  : CHAM_NO DE DEPLACEMENTS A L'ITERATION PRECEDENTE
C IN       VITKM1  : CHAM_NO DE VITESSES     A L'ITERATION PRECEDENTE
C IN       ACCKM1  : CHAM_NO D'ACCELERATIONS A L'ITERATION PRECEDENTE
C IN       VITPLU  : CHAM_NO DE VITESSES     A L'ITERATION ACTUELLE
C IN       ACCPLU  : CHAM_NO D'ACCELERATIONS A L'ITERATION ACTUELLE
C IN       ROMKM1  : VECTEURS-ROTATION ENTRE T- ET L'ITER. PRECE.
C IN       ROMK    : VECTEURS-ROTATION ENTRE T- ET L'ITER. ACTUE.
C IN       STADYN  : CARTE INDIQUANT SI STATIQUE OU EN DYNAMIQUE
C IN       OPTION  : OPTION DEMANDEE
C IN       ITERAT  : NUMERO D'ITERATION INTERNE
C IN/JXIN  VALMOI  : ETAT EN T-
C IN/JXVAR VALPLU  : ETAT EN T+
C IN       COMREF  : VALEURS DE REF DES VAR DE COMMANDE (TREF, ...)
C OUT      MERIGI  : MATRICES ELEMENTAIRES DE RIGIDITE
C OUT      RESIDU  : VECTEURS ELEMENTAIRES DES FORCES INTERIEURES
C OUT      VEDIRI  : VECTEURS ELEMENTAIRES BT.LAMBDA
C OUT      TABRET  : TABLEAU RESUMANT LES CODES RETOURS DU TE
C                    TABRET(0) = .TRUE. UN CODE RETOUR NON NUL EXISTE
C                    TABRET(I) = .TRUE. CODE RETOUR I RENCONTRE
C                                SINON .FALSE.
C                    I VALANT DE 1 A 10
C ----------------------------------------------------------------------
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER IAREFE,NBSS,JDIR,IBID,JFISS
      INTEGER NCHAR,JCHAR,JINF,ICHA,JMER,JRES,IRET,IER
      INTEGER NBRES,NDIR,NBRIG,NUMDI,NBOUT, NBIN
      PARAMETER ( NBOUT=7, NBIN=51)
      REAL*8       ITER
      LOGICAL      EXIGEO,EXICAR
      COMPLEX*16   CBID
      CHARACTER*16 OPTINT
      CHARACTER*8  K8BID,NOMCHA,NOMGD,VECEL,MATEL,DIREL
      CHARACTER*8  LPAOUT(NBOUT),LPAIN(NBIN)
      CHARACTER*24 LCHOUT(NBOUT),LCHIN(NBIN)
      CHARACTER*24 CHGEOM,CHCARA(15),CHITER,CHPESA
      CHARACTER*24 DEPMOI,SIGMOI,VARMOI,COMMOI
      CHARACTER*24 DEPPLU,SIGPLU,VARPLU,COMPLU
      CHARACTER*24 INSMOI,VRCMOI
      CHARACTER*24 INSPLU,VRCPLU
      CHARACTER*24 TEMREF,VRCREF
      CHARACTER*24 VARMOJ,CODRET,CACO3D
      CHARACTER*24 DDEPLA,DEPKM1,VITKM1,ACCKM1
      CHARACTER*24 VITPLU,ACCPLU,ROMKM1,ROMK
      CHARACTER*24 K24BID,LIGRMO,LIGRCH
      CHARACTER*24 PINTTO,CNSETO,HEAVTO,LONCHA,BASLOC,LSN,LST
C
      DATA VECEL,MATEL,DIREL/'&&RESIDU','&&MEMRIG','&&DIRICH'/
      DATA VARMOJ/'&&MERIMO.VARMOJ'/
      DATA CODRET/'&&MERIMO.CODE_RETOUR'/
      DATA CACO3D/'&&MERIMO.CARA_ROTA_FICTIF'/
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      OPTION = OPTIOZ

C --- CADRE X-FEM
      CALL JEEXIN(MODELE(1:8)//'.FISS',IER)
      IF (IER.NE.0) THEN
        CALL JEVEUO(MODELE(1:8)//'.FISS','L',JFISS)
        PINTTO=ZK8(JFISS)//'.TOPOSE.PINTTO'
        CNSETO=ZK8(JFISS)//'.TOPOSE.CNSETO'
        HEAVTO=ZK8(JFISS)//'.TOPOSE.HEAVTO'
        LONCHA=ZK8(JFISS)//'.TOPOSE.LONCHAM'
        BASLOC=ZK8(JFISS)//'.BASLOC'
        LSN   =ZK8(JFISS)//'.LNNO'
        LST   =ZK8(JFISS)//'.LTNO'
      ELSE
        PINTTO='&&MERIMO.PINTTO.BID'
        CNSETO='&&MERIMO.CNSETO.BID'
        HEAVTO='&&MERIMO.HEAVTO.BID'
        LONCHA='&&MERIMO.LONCHA.BID'
        BASLOC='&&MERIMO.BASLOC.BID'
        LSN   ='&&MERIMO.LNNO.BID'
        LST   ='&&MERIMO.LTNO.BID'
      ENDIF

C --- LECTURE DE L'ETAT EN T- ET T+
      CALL DESAGG(VALMOI,DEPMOI,SIGMOI,VARMOI,COMMOI,K24BID,K24BID,
     &            K24BID,K24BID)
      CALL DESAGG(VALPLU,DEPPLU,SIGPLU,VARPLU,COMPLU,K24BID,K24BID,
     &            K24BID,K24BID)

C --- LECTURE DES INFOS PROPRES AUX POUTRES GRANDES DEFORMATIONS
      CALL DESAGG(POUGD,DEPKM1,VITKM1,ACCKM1,VITPLU,ACCPLU,ROMKM1,ROMK,
     &            DDEPLA)

C --- LECTURE DES VARIABLES DE COMMANDE EN T- ET T+ ET VAL. DE REF
      CALL NMVCEX('TOUT',COMMOI,VRCMOI)
      CALL NMVCEX('INST',COMMOI,INSMOI)

      CALL NMVCEX('TOUT',COMPLU,VRCPLU)
      CALL NMVCEX('INST',COMPLU,INSPLU)

      CALL NMVCEX('TOUT',COMREF,VRCREF)

C --- VARIABLES INTERNES ISSUES DE L'ITERATION PRECEDENTE
C     (CELLES ISSUES DU LAGRANGIEN AUGMENTE EN NON LOCAL)
C     A CAUSE DES POUTRES GD -> AUSSI POUR RIGI_MECA_TANG
C     ET DONC ON PREVOIT LE CAS OU VARPLU N'EXISTE PAS ENCORE
      CALL EXISD('CHAMP_GD',VARPLU(1:19),IRET)
      IF (IRET.NE.0) THEN
        CALL COPISD('CHAMP_GD','V',VARPLU(1:19),VARMOJ(1:19))
      ELSE
        CALL COPISD('CHAMP_GD','V',VARMOI(1:19),VARMOJ(1:19))
      END IF

      LIGRMO = MODELE(1:8)//'.MODELE'

C --- CREATION DU CHAM_ELEM_S POUR ETENDRE LE CHAM_ELEM DE VARI_R:
C     ------------------------------------------------------------
      CALL EXISD('CHAM_ELEM_S',COMPOR,IRET)
      IF (IRET.EQ.0) CALL CESVAR(CARELE,COMPOR,LIGRMO,COMPOR)
      CALL COPISD('CHAM_ELEM_S','V',COMPOR,VARPLU)
      CALL COPISD('CHAM_ELEM_S','V',COMPOR,SIGPLU)


      CALL JEEXIN(MERIGI,IRET)
      IF (IRET.EQ.0) THEN
        MERIGI = MATEL//'.LISTE_RESU'
        CALL MEMARE('V',MATEL,MODELE(1:8),MATE,CARELE,'RIGI_MECA')
C --- NECESSAIRE POUR LA PRISE EN COMPTE DE MACRO-ELEMENT STATIQUE
        CALL DISMOI('F','NB_SS_ACTI',MODELE,'MODELE',NBSS,K8BID,IBID)
        IF (NBSS.NE.0) THEN
          CALL JEVEUO(MATEL//'.REFE_RESU','E',IAREFE)
          ZK24(IAREFE-1+3) (1:3) = 'OUI'
        ENDIF
C --- FIN MACRO-ELEMENT STATIQUE
        CALL WKVECT(MERIGI,'V V K24',2,JMER)
      ELSE
        CALL JEVEUO(MERIGI,'E',JMER)
      END IF
      CALL JEECRA(MERIGI,'LONUTI',0,K8BID)

      CALL JEEXIN(LISCHA//'.LCHA',IRET)
      IF (IRET.EQ.0) THEN
        NCHAR = 0
      ELSE
        CALL JELIRA(LISCHA//'.LCHA','LONMAX',NCHAR,K8BID)
      END IF
      CALL JEEXIN(RESIDU,IRET)
      IF (IRET.EQ.0) THEN
        RESIDU = VECEL//'.LISTE_RESU'
        CALL MEMARE('V',VECEL,MODELE(1:8),MATE,CARELE,'CHAR_MECA')
        CALL WKVECT(RESIDU,'V V K24',NCHAR+1,JRES)
      ELSE
        CALL JEVEUO(RESIDU,'E',JRES)
      END IF
      CALL JEECRA(RESIDU,'LONUTI',0,K8BID)

      CALL JEEXIN(VEDIRI,IRET)
      IF (IRET.EQ.0) THEN
        VEDIRI = DIREL//'.LISTE_RESU'
        CALL MEMARE('V',DIREL,MODELE(1:8),MATE,CARELE,'CHAR_MECA')
        CALL WKVECT(VEDIRI,'V V K24',NCHAR,JDIR)
      ELSE
        CALL JEVEUO(VEDIRI,'E',JDIR)
      END IF
      CALL JEECRA(VEDIRI,'LONUTI',0,K8BID)

      LPAOUT(1) = 'PMATUUR'
      LCHOUT(1) = MATEL//'.ME001'
      LPAOUT(2) = 'PMATUNS'
      LCHOUT(2) = MATEL//'.ME002'
      LPAOUT(3) = 'PVECTUR'
      LCHOUT(3) = VECEL//'.RE001'
      LPAOUT(4) = 'PCONTPR'
      LCHOUT(4) = SIGPLU
      LPAOUT(5) = 'PVARIPR'
      LCHOUT(5) = VARPLU
      LPAOUT(6) = 'PCODRET'
      LCHOUT(6) = CODRET
      LPAOUT(7) = 'PCACO3D'
      LCHOUT(7) = CACO3D

      CALL JEVEUO(LISCHA//'.LCHA','L',JCHAR)
      NOMCHA = ZK24(JCHAR) (1:8)
      CALL MEGEOM(MODELE,NOMCHA,EXIGEO,CHGEOM)

C --- CHAMP DE CARACTERISTIQUES ELEMENTAIRES
      CALL MECARA(CARELE(1:8),EXICAR,CHCARA)

C --- NUMERO DE L'ITERATION
      CHITER = '&&MERIMO.CH_ITERAT'
      ITER = ITERAT
      CALL MECACT('V',CHITER,'MODELE',MODELE(1:8)//'.MODELE','NEUT_R',1,
     &            'X1',IBID,ITER,CBID,K8BID)

C
      CHPESA = ' '
      CALL MECHPE(NCHAR,ZK24(JCHAR),CHPESA)
C
      LPAIN(1) = 'PGEOMER'
      LCHIN(1) = CHGEOM

      LPAIN(2) = 'PMATERC'
      LCHIN(2) = MATE
      LPAIN(51) = 'PMATERN'
      CALL ASSERT(MATE(9:18).EQ.'.MATE_CODE')
      MATN=MATE(1:8)//'.MATN_CODE'
      LCHIN(51) = MATN

      LPAIN(4) = 'PCONTMR'
      LCHIN(4) = SIGMOI
      LPAIN(5) = 'PVARIMR'
      LCHIN(5) = VARMOI
      LPAIN(6) = 'PCOMPOR'
      LCHIN(6) = COMPOR
      LPAIN(7) = 'PDEPLMR'
      LCHIN(7) = DEPMOI
      LPAIN(8) = 'PDEPLPR'
      LCHIN(8) = DEPDEL
      LPAIN(9) = 'PCACABL'
      LCHIN(9) = CHCARA(10)

      LPAIN(10) = 'PINSTMR'
      LCHIN(10) = INSMOI
      LPAIN(11) = 'PINSTPR'
      LCHIN(11) = INSPLU
      LPAIN(12) = 'PCARCRI'
      LCHIN(12) = CARCRI
      LPAIN(13) = ' '
      LCHIN(13) = ' '
      LPAIN(14) = ' '
      LCHIN(14) = ' '
      LPAIN(15) = 'PCAGNPO'
      LCHIN(15) = CHCARA(6)
      LPAIN(16) = 'PCAORIE'
      LCHIN(16) = CHCARA(1)
      LPAIN(17) = 'PCADISK'
      LCHIN(17) = CHCARA(2)
      LPAIN(18) = 'PCACOQU'
      LCHIN(18) = CHCARA(7)
      LPAIN(19) = 'PITERAT'
      LCHIN(19) = CHITER
      LPAIN(20) = 'PDDEPLA'
      LCHIN(20) = DDEPLA
      LPAIN(21) = 'PDEPKM1'
      LCHIN(21) = DEPKM1
      LPAIN(22) = 'PVITKM1'
      LCHIN(22) = VITKM1
      LPAIN(23) = 'PACCKM1'
      LCHIN(23) = ACCKM1
      LPAIN(24) = 'PVITPLU'
      LCHIN(24) = VITPLU
      LPAIN(25) = 'PACCPLU'
      LCHIN(25) = ACCPLU
      LPAIN(26) = 'PROMKM1'
      LCHIN(26) = ROMKM1
      LPAIN(27) = 'PROMK'
      LCHIN(27) = ROMK
      LPAIN(28) = 'PSTADYN'
      LCHIN(28) = STADYN
      LPAIN(29) = 'PVARIMP'
      LCHIN(29) = VARMOJ
      LPAIN(30) = 'PCAGNBA'
      LCHIN(30) = CHCARA(11)
      LPAIN(31) = 'PCAMASS'
      LCHIN(31) = CHCARA(12)
      LPAIN(32) = 'PCAGEPO'
      LCHIN(32) = CHCARA(5)
      LPAIN(33) = 'PDEPENT'
      LCHIN(33) = DEPENT
      LPAIN(34) = 'PVITENT'
      LCHIN(34) = VITENT
      LPAIN(35) = 'PVARCMR'
      LCHIN(35) = VRCMOI
      LPAIN(36) = 'PVARCPR'
      LCHIN(36) = VRCPLU
      LPAIN(37) = 'PNBSP_I'
      LCHIN(37) = CHCARA(1) (1:8)//'.CANBSP'
      LPAIN(38) = 'PFIBRES'
      LCHIN(38) = CHCARA(1) (1:8)//'.CAFIBR'
      LPAIN(39) = ' '
      LCHIN(39) = ' '
      LPAIN(40) = ' '
      LCHIN(40) = ' '
      LPAIN(41) = 'PVARCRR'
      LCHIN(41) = VRCREF
      LPAIN(42) = 'PPESANR'
      LCHIN(42) = CHPESA
      LPAIN(43) = 'PPINTTO'
      LCHIN(43) = PINTTO
      LPAIN(44) = 'PHEAVTO'
      LCHIN(44) = HEAVTO
      LPAIN(45) = 'PLONCHA'
      LCHIN(45) = LONCHA
      LPAIN(46) = 'PCNSETO'
      LCHIN(46) = CNSETO
      LPAIN(47) = 'PBASLOR'
      LCHIN(47) = BASLOC
      LPAIN(48) = 'PCACO3D'
      LCHIN(48) = CACO3D
      LPAIN(49) = 'PLSN'
      LCHIN(49) = LSN
      LPAIN(50) = 'PLST'
      LCHIN(50) = LST

      NBRES = 0

      IF (OPTION(1:9).EQ.'FULL_MECA') THEN
        CALL CALCUL('S',OPTION,LIGRMO,NBIN,LCHIN,LPAIN,
     &                                NBOUT,LCHOUT,LPAOUT,'V')
        ZK24(JMER  ) = LCHOUT(1)
        ZK24(JMER+1) = LCHOUT(2)
        NBRIG = 2
        CALL JEECRA(MERIGI,'LONUTI',NBRIG,K8BID)
        NBRES = 1
        ZK24(JRES+NBRES-1) = LCHOUT(3)
        CALL JEECRA(RESIDU,'LONUTI',NBRES,K8BID)
        CALL NMIRET(LCHOUT(6),TABRET)

      ELSE IF (OPTION(1:10).EQ.'RIGI_MECA ') THEN
        LPAIN(11) = 'PTEMPSR'
        CALL CALCUL('S',OPTION,LIGRMO,NBIN,LCHIN,LPAIN,
     &                                NBOUT,LCHOUT,LPAOUT,'V')
        ZK24(JMER  ) = LCHOUT(1)
        ZK24(JMER+1) = LCHOUT(2)
        NBRIG = 2
        CALL JEECRA(MERIGI,'LONUTI',NBRIG,K8BID)

      ELSE IF (OPTION(1:10).EQ.'RIGI_MECA_') THEN
        CALL CALCUL('S',OPTION,LIGRMO,NBIN,LCHIN,LPAIN,
     &                                NBOUT,LCHOUT,LPAOUT,'V')
        ZK24(JMER  ) = LCHOUT(1)
        ZK24(JMER+1) = LCHOUT(2)
        NBRIG = 2
        CALL JEECRA(MERIGI,'LONUTI',NBRIG,K8BID)

      ELSE IF (OPTION(1:9).EQ.'RAPH_MECA') THEN
        CALL CALCUL('S',OPTION,LIGRMO,NBIN,LCHIN,LPAIN,
     &                                NBOUT,LCHOUT,LPAOUT,'V')
        NBRES = 1
        ZK24(JRES+NBRES-1) = LCHOUT(3)
        CALL JEECRA(RESIDU,'LONUTI',NBRES,K8BID)
        CALL NMIRET(LCHOUT(6),TABRET)

      ELSE
        CALL U2MESS('F','ALGORITH5_81')
      END IF

C --- CALCUL DU RESIDU PARTIEL : F_INT + BT.LAMBDA

      IF (OPTION(1:4).EQ.'FULL' .OR. OPTION(1:4).EQ.'RAPH') THEN
        OPTINT = 'MECA_BTLA_R'
        IF (NCHAR.EQ.0) GO TO 20
        CALL JEVEUO(LISCHA//'.LCHA','L',JCHAR)
        CALL JEVEUO(LISCHA//'.INFC','L',JINF)
        NDIR = 0
        DO 10 ICHA = 1,NCHAR
          NUMDI = ZI(JINF+ICHA)
          IF (NUMDI.GT.0) THEN
            NOMCHA = ZK24(JCHAR+ICHA-1) (1:8)
            LIGRCH = NOMCHA//'.CHME.LIGRE'
            LPAIN(1) = 'PDDLMUR'
            LCHIN(1) = NOMCHA//'.CHME.CMULT'
            LPAIN(2) = 'PLAGRAR'
            LCHIN(2) = DEPPLU
            LPAOUT(1) = 'PVECTUR'
            LCHOUT(1) = DIREL//'.RE'
            CALL CODENT(NBRES+1,'D0',LCHOUT(1) (12:15))
            CALL CALCUL('S',OPTINT,LIGRCH,2,LCHIN,LPAIN,
     &                                    1,LCHOUT,LPAOUT,'V')
            NBRES = NBRES + 1
            ZK24(JRES+NBRES-1) = LCHOUT(1)
            NDIR = NDIR + 1
            ZK24(JDIR+NDIR-1) = LCHOUT(1)
          END IF
   10   CONTINUE
        CALL JEECRA(RESIDU,'LONUTI',NBRES,K8BID)
        CALL JEECRA(VEDIRI,'LONUTI',NDIR,K8BID)
      END IF

   20 CONTINUE
      CALL JEDEMA()
      END
