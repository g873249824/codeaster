      SUBROUTINE IMPINI(SDIMPR,SDSUIV,FONACT)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*24 SDIMPR
      CHARACTER*24 SDSUIV
      LOGICAL      FONACT(*)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (STRUCTURES DE DONNES)
C
C CREATION SD AFFICHAGE
C
C ----------------------------------------------------------------------
C
C
C IN SDIMPR : NOM DE LA SD POUR L'AFFICHAGE
C IN SDSUIV : NOM DE LA SD POUR LE SUIVI
C IN FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C
C --- DESCRIPTION DES SD
C
C    IMPINF = '&&OP0070.IMPR.INFO'   <JIMPIN>
C    VECTEUR VOLATILE D'ENTIERS DE LONGUEUR ZIMP (PARAMETER)
C    DIFFERENTES INFORMATIONS SUR L'AFFICHAGE
C      ZI(JIMPIN-1+1): NOMBRE D'INFOS DANS LE VECTEUR
C                       (Y COMPRIS CELUI-CI)
C      ZI(JIMPIN-1+2): NOMBRE MAXI DE COLONNES (COLMAX)
C      ZI(JIMPIN-1+3): LARGEUR MAXI D'UNE LIGNE (LIGMAX)
C      ZI(JIMPIN-1+4): NOMBRE UTILE (REEL) DE COLONNES (COLUTI)
C      ZI(JIMPIN-1+5): LARGEUR UTILE (REEL) D'UNE LIGNE (LIGUTI)
C      ZI(JIMPIN-1+6): 0 SI AFFICHAGE PAR DEFAUT
C                      1 SI AFFICHAGE PERSONNALISE
C                      2 SI AFFICHAGE MINIMUM
C      ZI(JIMPIN-1+7): NOMBRE MAXI DE LIGNES D'UN TITRE (TITMAX)
C      ZI(JIMPIN-1+8): 0 SI PAS DE SORTIE SUR FICHIER EXTERNE
C                      UNITE SI SORTIE SUR FICHIER EXTERNE
C      ZI(JIMPIN-1+9): LARGEUR MAXI D'UNE COLONNE
C
C    IMPCOL = '&&OP0070.DEFI.COL'    <JIMPCO>
C    VECTEUR VOLATILE D'ENTIERS DE LONGUEUR COLMAX
C    CODE (ENTIER) DEFINISSANT LE TYPE DE LA COLONNE. VOIR IMPDEF
C    POUR LA SIGNIFICATION ET LE CODE DE TOUTES LES COLONNES
C
C    IMPFOR = '&&OP0070.DEFI.FOR'    <JIMPFO>
C    VECTEUR VOLATILE D'ENTIERS DE LONGUEUR 4*COLMAX
C    VALEURS DES LONGUEURS D'AFFICHAGES POUR LES DIFFERENTS FORMATS
C      POUR LA COLONNE ICOL:
C        ZI(JIMPFO+4*(ICOL-1)+ICOL-1)   = LONGR
C        ZI(JIMPFO+4*(ICOL-1)+ICOL-1+1) = PRECR
C        ZI(JIMPFO+4*(ICOL-1)+ICOL-1+2) = LONGI
C        ZI(JIMPFO+4*(ICOL-1)+ICOL-1+3) = LONGK
C        LONGR  : LONGUEUR D'AFFICHAGE DU REEL
C        PRECR  : LONGUEUR D'AFFICHAGE DE LA PRECISION DU REEL
C        LONGI  : LONGUEUR D'AFFICHAGE DE L'ENTIER
C        LONGK  : LONGUEUR D'AFFICHAGE DE LA CHAINE
C    POUR L'AFFICHAGE PAR DEFAUT, UN SEUL FORMAT EST DISPONIBLE POUR
C    CHAQUE TYPE (UN ENTIER SERA DE LONGUEUR LONGI POUR TOUTES LES
C    COLONNES DE TYPE ENTIER).
C    POUR L'AFFICHAGE PERSONNALISE, ON PEUT CHANGER LE FORMAT D'UNE
C    COLONNE A L'AUTRE.
C    L'INFORMATION EST SURABONDANTE: CHAQUE COLONNE DEFINIT LES QUATRE
C    PARAMETRES DE FORMAT ALORS QU'ELLE N'EN UTILISE QU'UN (CHOISI
C    DANS '&&OP0070.DEFI.TYP'
C
C    IMPTYP = '&&OP0070.DEFI.TYP'    <JIMPTY>
C    VECTEUR VOLATILE D'ENTIERS DE LONGUEUR COLMAX
C    FORMAT D'AFFICHAGE POUR CHAQUE COLONNE
C      POUR LA COLONNE ICOL:
C        ZI(JIMPTY-1+ICOL)   = ITYP
C        ITYP = 1: ENTIER
C        ITYP = 2: REEL
C        ITYP = 3: CHAINE
C
C    IMPTIT = '&&OP0070.DEFI.TIT'    <JIMPTI>
C    VECTEUR VOLATILE DE K16 DE LONGUEUR TITMAX*COLMAX
C    TITRE DE CHAQUE COLONNE (AVEC TITMAX LIGNES POUR CHAQUE)
C
C    IMPRER = '&&OP0070.DEFI.RER' <JIMPRR>
C     VECTEUR VOLATILE DE REELS
C     CONTENU DE LA COLONNE (SI TYPE = REEL)
C    IMPRER = '&&OP0070.DEFI.REI' <JIMPRI>
C     VECTEUR VOLATILE D'ENTIERS
C     CONTENU DE LA COLONNE (SI TYPE = ENTIER)
C    IMPRER = '&&OP0070.DEFI.REK' <JIMPRK>
C     VECTEUR VOLATILE DE K16
C     CONTENU DE LA COLONNE (SI TYPE = CHAINE)
C    L'INFORMATION EST SURABONDANTE: CHAQUE COLONNE PEUT STOCKER
C    LES TROIS FORMATS ALORS QU'ELLE N'EN UTILISE QU'UN (CHOISI
C    DANS '&&OP0070.DEFI.TYP'
C
C    IMPMAR = '&&OP0070.DEFI.MAR' <JIMPMA>
C     EVENTUEL MARQUAGE DANS LES COLONNES (X OU B PAR EXEMPLE)
C
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      ZIMP,ZTIT,ZLIG,ZCOL,ZLAR,ZDEF
      PARAMETER    (ZIMP=9,ZTIT=3,ZLIG=255,ZCOL=16,ZLAR=16,ZDEF=30)
      INTEGER      ZCNV
      PARAMETER    (ZCNV=5)
      CHARACTER*24 IMPCOL,IMPTIT,IMPFOR,IMPTYP,IMPINF,IMPCNL
      INTEGER      JIMPCO,JIMPTI,JIMPFO,JIMPTY,JIMPIN,JIMPCL
      CHARACTER*24 IMPREK,IMPRER,IMPREI,IMPMAR,IMPSUI,IMPCNT,IMPCNV
      INTEGER      JIMPRK,JIMPRR,JIMPRI,JIMPMA,JIMPSU,JIMPCT,JIMPCV
      CHARACTER*24 IMPCNA,IMPTMP
      INTEGER      JIMPCA,JIMCOL
      CHARACTER*24 SUIVNB
      INTEGER      JSUINB
      INTEGER      LIGUTI,COLUTI
      INTEGER      LIGMAX,TITMAX,COLMAX,IMPMAX,LARMAX
      INTEGER      IOCC,NOC,NBOCC
      CHARACTER*16 MOTFAC,TYPM,CMP
      INTEGER      UNIT,NBSUIV
      INTEGER      INFCMP(4)
      INTEGER      IFM,NIV 
C      
C ----------------------------------------------------------------------
C      
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... CREATION SD AFFICHAGE' 
      ENDIF
C
      IF (ZDEF.NE.30) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- MOT-CLEF DECRIVANT L'AFFICHAGE DANS SUPERVISEUR STAT_NON_LINE
C
      MOTFAC = 'AFFICHAGE       '
C
C --- TAILLE DES VECTEURS
C --- NOMBRE MAXI DE COLONNES:          ZCOL/COLMAX
C --- LARGEUR MAXI D'UNE LIGNE:         ZLIG/LIGMAX
C --- NOMBRE MAXI DE LIGNES D'UN TITRE: ZTIT/TITMAX
C --- NOMBRE D'INFOS DANS LE VECTEUR  : ZIMP/IMPMAX
C --- LARGEUR MAXI D'UNE COLONNE      : ZLAR/LARMAX
C
      IMPMAX = ZIMP
      COLMAX = ZCOL
      LIGMAX = ZLIG
      TITMAX = ZTIT
      LARMAX = ZLAR
C
C --- CREATION DE LA SD D'AFFICHAGE
C --- INFORMATIONS GENERALES
C
      IMPINF = SDIMPR(1:14)//'INFO'
      IMPCOL = SDIMPR(1:14)//'DEFI.COL'
      IMPFOR = SDIMPR(1:14)//'DEFI.FOR'
      IMPTYP = SDIMPR(1:14)//'DEFI.TYP'
      IMPTIT = SDIMPR(1:14)//'DEFI.TIT'
      IMPSUI = SDIMPR(1:14)//'SUIVI'
      CALL WKVECT(IMPINF,'V V I',IMPMAX,JIMPIN)
      CALL WKVECT(IMPCOL,'V V I',COLMAX,JIMPCO)
      CALL WKVECT(IMPFOR,'V V I',4*COLMAX,JIMPFO)
      CALL WKVECT(IMPTYP,'V V I',COLMAX,JIMPTY)
      CALL WKVECT(IMPTIT,'V V K16',TITMAX*COLMAX,JIMPTI)
      CALL WKVECT(IMPSUI,'V V K24',1,JIMPSU)
C
C --- CONTENU DES COLONNES (TRIPLE)
C
      IMPRER = SDIMPR(1:14)//'DEFI.RER'
      IMPREI = SDIMPR(1:14)//'DEFI.REI'
      IMPREK = SDIMPR(1:14)//'DEFI.REK'
      CALL WKVECT(IMPRER,'V V R',COLMAX,JIMPRR)
      CALL WKVECT(IMPREI,'V V I',COLMAX,JIMPRI)
      CALL WKVECT(IMPREK,'V V K16',COLMAX,JIMPRK)
C
C --- MARQUAGE DANS LES COLONNES (X OU B PAR EXEMPLE)
C
      IMPMAR = SDIMPR(1:14)//'DEFI.MAR'
      CALL WKVECT(IMPMAR,'V V K8',COLMAX,JIMPMA)
C
C --- LISTE ET VALEURS DE TESTS DE CONVERGENCE
C
      IMPCNT = SDIMPR(1:14)//'CONV.TYPE'
      CALL WKVECT(IMPCNT,'V V K16',ZCNV,JIMPCT)
      IMPCNL = SDIMPR(1:14)//'CONV.LIEU'
      CALL WKVECT(IMPCNL,'V V K16',ZCNV,JIMPCL)
      IMPCNV = SDIMPR(1:14)//'CONV.VAL'
      CALL WKVECT(IMPCNV,'V V R',ZCNV,JIMPCV)
      IMPCNA = SDIMPR(1:14)//'CONV.ACT'
      CALL WKVECT(IMPCNA,'V V L',ZCNV,JIMPCA)
C
C --- INITIALISATIONS DES VARIABLES
C
      ZI(JIMPIN-1+1)  = IMPMAX
      ZI(JIMPIN-1+2)  = COLMAX
      ZI(JIMPIN-1+3)  = LIGMAX
      ZI(JIMPIN-1+7)  = TITMAX
      ZI(JIMPIN-1+9)  = LARMAX
C
C --- NOM DE LA SD POUR LE SUIVI ET NOMBRE DE SUIVIS
C
      ZK24(JIMPSU-1+1) = SDSUIV
      SUIVNB = SDSUIV(1:14)//'.NBSUIV'
      CALL JEVEUO(SUIVNB,'L',JSUINB)
      NBSUIV = ZI(JSUINB)
C
C --- AFFICHAGE DES COMPOSANTES OU LES RESIDUS SONT EVALUES
C      INFCMP(1):  RESI_RELA
C      INFCMP(2):  RESI_MAXI
C      INFCMP(3):  RESI_REFE
C      INFCMP(4):  CTCD_GEOM
C
      INFCMP(1) = 0
      INFCMP(2) = 0
      INFCMP(3) = 0
      INFCMP(4) = 0
C
C ----------------------------------------------------------------------
C     LECTURE DES INFORMATIONS DU MOT-CLEF AFFICHAGE DE STAT_NON_LINE
C ----------------------------------------------------------------------
C
C --- STRUCTURE TEMPORAIRE POUR COLONNES ACTIVEES
C --- CHAQUE COLONNE DE IMPTMP CONTIENT LE CODE DE LA COLONNE A ACTIVER
C
      IMPTMP = '&&IMPINI.COL  '
      CALL WKVECT(IMPTMP,'V V I',ZDEF,JIMCOL)
C
C --- NOMBRE D'OCCURRENCES DU MOT-CLEF FACTEUR DANS STAT_NON_LINE
C
      CALL GETFAC(MOTFAC,NBOCC)
C
C --- CAS STANDARD
C
      IF (NBOCC.EQ.0) THEN
        IOCC           = 0
        ZI(JIMPIN-1+6) = 0
        CALL IMPSTD(SDIMPR(1:14),IMPTMP(1:14),FONACT,INFCMP,NBSUIV,
     &              ZTIT,ZDEF,MOTFAC,IOCC)
        UNIT = ZI(JIMPIN-1+8)
        CALL IMPFIH(MOTFAC,1,UNIT)
        ZI(JIMPIN-1+8) = UNIT
      ENDIF
C
C --- BOUCLE SUR LES OCCURRENCES
C
      DO 10 IOCC = 1,NBOCC
C
C --- OPTION FICHIER/UNITE
C
        UNIT = ZI(JIMPIN-1+8)
        CALL IMPFIH(MOTFAC,IOCC,UNIT)
        ZI(JIMPIN-1+8) = UNIT
C
C --- TYPE DE COLONNE
C
        CALL GETVTX(MOTFAC,'NOM_COLONNE',IOCC,1,1,TYPM,NOC)
C
C --- INFO SUR LES RESIDUS
C
        CALL GETVTX(MOTFAC,'INFO_RESIDU',IOCC,1,1,CMP,NOC)
        INFCMP(1) = 0
        INFCMP(2) = 0
        INFCMP(3) = 0
        INFCMP(4) = 0
        IF (NOC.NE.0) THEN
          IF (CMP(1:3).EQ.'OUI') THEN
            INFCMP(1) = 1
            INFCMP(2) = 1
            INFCMP(3) = 1
            INFCMP(4) = 1
          ELSE IF (.NOT.(CMP(1:3).EQ.'NON')) THEN
            CALL ASSERT(.FALSE.)
          ENDIF
        ENDIF
C
C --- AFFICHAGE STANDARD
C
        IF (TYPM(1:8).EQ.'STANDARD') THEN
          ZI(JIMPIN-1+6) = 0
          CALL IMPSTD(SDIMPR(1:14),IMPTMP(1:14),FONACT,INFCMP,NBSUIV,
     &                ZTIT,ZDEF,MOTFAC,IOCC)
C
C --- MINIMUM
C
        ELSE IF (TYPM(1:7).EQ.'MINIMUM') THEN
          ZI(JIMPIN-1+6) = 2
          CALL IMPMIN(SDIMPR(1:14),IMPTMP(1:14),FONACT,INFCMP,NBSUIV,
     &                ZTIT,ZDEF,MOTFAC,IOCC)
C
C --- PERSONNALISE
C
        ELSE
          ZI(JIMPIN-1+6) = 1
          CALL IMPPER(SDIMPR(1:14),IMPTMP(1:14),FONACT,INFCMP,NBSUIV,
     &                ZTIT,ZDEF,MOTFAC,IOCC,TYPM(1:9))
        ENDIF
 10   CONTINUE

      COLUTI = ZI(JIMPIN-1+4)

      IF (COLUTI.GT.COLMAX) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- LARGEUR DE LA LIGNE (UNE COLONNE FAIT ZLAR+SEPARATEUR VERTICAL)
C
      LIGUTI = 1+COLUTI*(ZLAR+1)

      IF (LIGUTI.GT.LIGMAX) THEN
        CALL ASSERT(.FALSE.)
      ENDIF

      ZI(JIMPIN-1+5) = LIGUTI

      CALL JEDEMA()

      END
