      SUBROUTINE NMARPR(RESULT,SDDISC,LREUSE,NUMDER,INSDER,
     &                  NUMARC)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'
      REAL*8       INSDER
      LOGICAL      LREUSE
      INTEGER      NUMDER,NUMARC
      CHARACTER*19 SDDISC
      CHARACTER*8  RESULT
C
C ----------------------------------------------------------------------
C
C ROUTINE *_NON_LINE (ARCHIVAGE)
C
C PREMIER NUMERO A ARCHIVER
C
C ----------------------------------------------------------------------
C
C
C IN  RESULT : NOM DE LA SD RESULTAT
C IN  SDDISC : SD DISCRETISATION
C IN  NUMDER : DERNIER NUMERO ARCHIVE DANS RESULT
C               (OU 0 SI NON REENTRANT)
C IN  INSDER : DERNIER INSTANT ARCHIVE DANS RESULT
C               (R8VIDE SI NON REENTRANT)
C IN  LREUSE : .TRUE. SI CONCEPT REENTRANT
C OUT NUMARC : NUMERO DU PREMIER PAS A ARCHIVER
C
C
C
C
      CHARACTER*24 TPSDIT
      INTEGER      JTEMPS
      REAL*8       VALR(2),INST2
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- NOM SD_DISC
C
      TPSDIT = SDDISC(1:19)//'.DITR'
      CALL JEVEUO(TPSDIT,'L',JTEMPS)
C
      IF (LREUSE) THEN
C
C ----- FUTUR INSTANT A ARCHIVER
C
        INST2  = ZR(JTEMPS+2-1)
C
C ----- L'INSTANT INITIAL EST-IL SUPERIEUR AU DERNIER INSTANT ?
C
        IF (INST2.LE.INSDER) THEN
          VALR(1) = INSDER
          VALR(2) = INST2
          CALL U2MESR('I','ARCHIVAGE_1',2,VALR)
          CALL NMTTCH(RESULT,INST2 ,NUMDER)
          NUMARC = NUMDER
        ELSE
          NUMARC = NUMDER + 1
        ENDIF

      ELSE
        CALL ASSERT(NUMDER.EQ.0)
        NUMARC = 0
      ENDIF
C
      CALL JEDEMA()

      END
