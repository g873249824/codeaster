      SUBROUTINE NMARPR(SDDISC,MOTFAC,LREUSE,NUMDER,INSDER,
     &                  NUMARC)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/06/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      REAL*8       INSDER
      CHARACTER*16 MOTFAC
      LOGICAL      LREUSE
      INTEGER      NUMDER,NUMARC
      CHARACTER*19 SDDISC
C
C ----------------------------------------------------------------------
C
C ROUTINE *_NON_LINE (ARCHIVAGE)
C
C PREMIER NUMERO A ARCHIVER
C
C ----------------------------------------------------------------------
C
C
C IN  SDDISC : SD DISCRETISATION
C IN  MOTFAC : MOT-FACTEUR POUR LIRE ARCHIVAGE
C IN  NUMDER : DERNIER NUMERO ARCHIVE DANS RESULT 
C               (OU 0 SI NON REENTRANT)
C IN  INSDER : DERNIER INSTANT ARCHIVE DANS RESULT 
C               (R8VIDE SI NON REENTRANT)
C IN  LREUSE : .TRUE. SI CONCEPT REENTRANT
C OUT NUMARC : NUMERO DU PREMIER PAS A ARCHIVER
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER      ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8       ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16   ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL      ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8  ZK8
      CHARACTER*16    ZK16
      CHARACTER*24        ZK24
      CHARACTER*32            ZK32
      CHARACTER*80                ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      CHARACTER*24 TPSDIT
      INTEGER      JTEMPS
      INTEGER      N1
      REAL*8       VALR(2),INST2
      CHARACTER*16 K16BID
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- NOM SD_DISC
C    
      TPSDIT = SDDISC(1:19)//'.DITR'
      CALL JEVEUO(TPSDIT,'L',JTEMPS)
C
C --- OPTION ARCHIVAGE
C
      CALL GETVTX(MOTFAC,'DETR_NUME_SUIV',1,1,1,K16BID,N1    )
C      
      IF (LREUSE) THEN 
C
C ----- FUTUR INSTANT A ARCHIVER
C
        INST2  = ZR(JTEMPS+2-1)
C
C ----- L'INSTANT INITIAL EST-IL SUPERIEUR AU DERNIER INSTANT ?
C
        IF (INST2.LE.INSDER) THEN
          IF (N1.EQ.0) THEN
            VALR(1) = INSDER
            VALR(2) = INST2
            CALL U2MESR('F','ARCHIVAGE_1',2,VALR)
          ELSE
            CALL NMTTCH(SDDISC,INST2 ,NUMDER)
            NUMARC = NUMDER  
          ENDIF
        ELSE
          NUMARC = NUMDER + 1
        ENDIF
        
      ELSE
        CALL ASSERT(NUMDER.EQ.0)
        NUMARC = 0
      ENDIF
C
      CALL JEDEMA()

      END
