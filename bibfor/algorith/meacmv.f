      SUBROUTINE MEACMV ( MODELE, MATE, CARELE, FOMULT, LISCHA,
     >                    ITPS, PARTPS,
     >                    NUMEDD, ASSMAT, SOLVEU,
     >                    VECASS, MATASS, MAPREC, CNCHCI,
     >                    TYPESE, STYPSE, NOPASE, VAPRIN, REPRIN,
     >                    BASE, TPS1, TPS2, TPS3 )
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 01/07/2003   AUTEUR GNICOLAS G.NICOLAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C TOLE CRP_20
C TOLE CRP_21
C ----------------------------------------------------------------------
C     MECANIQUE STATIQUE - ACTUALISATION DES CHARGEMENTS MECANIQUES
C     * *                  *                 *           *
C ----------------------------------------------------------------------
C IN  MODELE  : NOM DU MODELE
C IN  MATE    : NOM DU MATERIAU
C IN  CARELE  : NOM D'1 CARAC_ELEM
C IN  FOMULT  : LISTE DES FONCTIONS MULTIPLICATRICES
C IN  LISCHA  : INFORMATION SUR LES CHARGEMENTS
C IN  ITPS    : NUMERO DU PAS DE TEMPS
C IN  PARTPS  : PARAMETRE TEMPORELS
C IN  NUMEDD  : PROFIL DE LA MATRICE
C IN  ASSMAT  : BOOLEEN POUR LE CALCUL DE LA MATRICE
C IN  SOLVEU  : METHODE DE RESOLUTION 'LDLT' OU 'GCPC'
C OUT VECASS  : VECTEUR ASSEMBLE SECOND MEMBRE
C OUT MATASS,MAPREC  MATRICE DE RIGIDITE ASSEMBLEE
C OUT CNCHCI  : OBJET DE S.D. CHAM_NO DIMENSIONNE A LA TAILLE DU
C               PROBLEME, VALANT 0 PARTOUT, SAUF LA OU LES DDLS IMPOSES
C               SONT TRAITES PAR ELIMINATION (= DEPLACEMENT IMPOSE)
C IN  BASE    : BASE DE TRAVAIL
C IN/OUT  MAPREC  : MATRICE PRECONDITIONNEE
C IN/OUT TPS1,2,3 : TEMPS DE CALCUL
C IN  TYPESE  : TYPE DE SENSIBILITE
C                0 : CALCUL STANDARD, NON DERIVE
C                SINON : DERIVE (VOIR METYSE)
C IN  STYPSE  : SOUS-TYPE DE SENSIBILITE (VOIR NTTYSE)
C . POUR UN CALCUL DE DERIVEE, ON A LES DONNEES SUIVANTES :
C IN  NOPASE  : NOM DU PARAMETRE SENSIBLE
C IN  VAPRIN  : VARIABLE PRINCIPALE (DEPLACEMENT) A L'INSTANT COURANT
C IN  REPRIN  : RESULTAT PRINCIPAL
C ----------------------------------------------------------------------
C
      IMPLICIT NONE
C
C 0.1. ==> ARGUMENTS
C
      INTEGER ITPS, TYPESE
C
      LOGICAL ASSMAT
C
      CHARACTER*1 BASE
      CHARACTER*19 LISCHA, SOLVEU
      CHARACTER*19 VECASS, MATASS, MAPREC
      CHARACTER*24 CNCHCI
      CHARACTER*24 MODELE, CARELE, FOMULT
      CHARACTER*24 NUMEDD
      CHARACTER*24 STYPSE
      CHARACTER*(*) VAPRIN, REPRIN
      CHARACTER*(*) NOPASE
      CHARACTER*(*) MATE
C
      REAL*8 PARTPS(*)
      REAL*8 TPS1(4), TPS2(4), TPS3(4)
C
C 0.2. ==> COMMUNS
C
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      CHARACTER*8        ZK8
      CHARACTER*16               ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                 ZK32
      CHARACTER*80                                          ZK80
      COMMON  / KVARJE / ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
C 0.3. ==> VARIABLES LOCALES
C
      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'MEACMV' )
C
      INTEGER JCHAR, JINF, NCHAR
      INTEGER NCHA
      INTEGER NH, IERR
      INTEGER JTP
      INTEGER NUMCHT, NUMCHY, NUMCHS
      INTEGER LONCH, LONCM1
      INTEGER JDIRI, JCHAM, JTHS, JLAPL, JCOMP
      INTEGER J2ND, J2ND1, J2ND2, J2ND3, J2ND4
      INTEGER IRET, IAUX, JAUX, K, TYPCUM
C
      REAL*8 TIME, ALPHA
C
      CHARACTER*1 TYPRES, TYPCOE
      CHARACTER*4 TYPCAL
      CHARACTER*8 MATELE, K8BID
      CHARACTER*8 NOMODE, NOMA, CHAREP, LCHAR
      CHARACTER*14 COM
      CHARACTER*16 NOSY
      CHARACTER*19 CHEXTR, LIGRMO
      CHARACTER*24 CHGEOM, CHCARA(15), CHTEMP, CHTREF, CHHARM
      CHARACTER*24 CHAMEL, TEMP,   BLAN24, K24BID
      CHARACTER*24 CHTIME, CHNUMC, CHFREQ, CHMASS
      CHARACTER*24 CHSIG,  CHEPS,  VEDIRI, VADIRI
      CHARACTER*24 VELAPL, VALAPL, VECOMP, VACOMP
      CHARACTER*24 VECHAM, VACHAM, CHLAPL, CHCOMP
      CHARACTER*24 CHDIRI, CHCHAM, CHTHS
      CHARACTER*24 CHARGE, INFOCH, VECTHS
      CHARACTER*24 CONTEG, CONTEN, DERITE
C
      LOGICAL ASS1ER
      LOGICAL EXITIM
      LOGICAL LBID
C
      COMPLEX*16 CALPHA
C
C DEB-------------------------------------------------------------------
C====
C 1. PREALABLES
C====
C
      CALL JEMARQ()
C
C 1.2. ==> NOM DES STRUCTURES
C
C 1.2.1. ==> FIXES
C
C               12   345678   9012345678901234
      COM    = '&&'//NOMPRO//'.COM__'
      CONTEG = '&&'//NOMPRO//'.SIEF_ELGA_DEPL '
      CONTEN = '&&'//NOMPRO//'.SIGM_ELNO_DEPL '
      DERITE = '&&'//NOMPRO//'.DERIVEE_TEMP   '
C
C               12345678
      MATELE = '&&MATELE'
C
C               123456789012345678901234
      BLAN24 = '                        '
C
C 1.2. ==> LES CONSTANTES
C
      TIME = PARTPS(1)
C
      CHARGE = LISCHA//'.LCHA'
      INFOCH = LISCHA//'.INFC'
C
      CALL NMVCLE ( MODELE, MATE, LISCHA, TIME, COM )
C
      CALL JEVEUO (CHARGE,'L',JCHAR)
      CALL JEVEUO (INFOCH,'L',JINF)
      NCHAR = ZI(JINF)
      NUMCHT = ZI(JINF-1+2+2*NCHAR)
      NUMCHY = ZI(JINF+4*NCHAR+5)
      NUMCHS = ZI(JINF+4*NCHAR+6)
      IF ( NUMCHT.GT.0 .OR. NUMCHY.GT.0 .OR. NUMCHS.GT.0 ) THEN
        NCHA = 1
        LCHAR = ZK24(JCHAR-1+NUMCHT)(1:8)
      ELSE
        NCHA = 0
        LCHAR = '        '
      ENDIF
      NH = 0
C
      TYPRES = 'R'
      NOMODE = MODELE(1:8)
      LIGRMO = NOMODE//'.MODELE'
C
      ASS1ER = .FALSE.
C
C 1.3. ==> DANS CERTAINS CAS DE DERIVEE, CALCUL DES CONTRAINTES PAR
C          ELEMENT AUX POINTS DE GAUSS ET AUX NOEUDS POUR LE NOUVEAU
C          CHAMP DE DEPLACEMENT.
C          ON REMARQUERA QUE CES CALCULS SONT PEUT-ETRE DEMANDES EN
C          TANT QU'OPTION. MAIS IL EST FAIT PLUS TARD DANS OP0046,
C          HORS DE LA BOUCLE EN TEMPS ACTUELLE. ON CHOISIT DONC DE
C          FAIRE EVENTUELLEMENT PLUSIEURS FOIS LE CALCUL POUR
C          SIMPLIFIER LA PROGRAMMATION.
C
      IF ( TYPESE.EQ.-1 ) THEN
C
        EXITIM = .TRUE.
        ALPHA  = 0.D0
        CALPHA = (0.D0 , 0.D0)
        CALL DISMOI('F','NOM_MAILLA',NOMODE,'MODELE',IAUX,NOMA,IRET)
        CALL MECHNC (NOMA,' ',0,CHNUMC)
C
        DO 13 , IAUX = 1 , 2
C
          IF ( IAUX.EQ.1 ) THEN
            NOSY = 'SIEF_ELGA_DEPL  '
            CHAMEL = CONTEG
          ELSE
            NOSY = 'SIGM_ELNO_DEPL  '
            CHAMEL = CONTEN
          ENDIF
C
          CALL MECHAM ( NOSY, NOMODE, NCHA, LCHAR, CARELE(1:8), NH,
     >                  CHGEOM, CHCARA, CHHARM, IRET )
C
          CALL MECHTI ( CHGEOM(1:8), TIME, CHTIME )
          CALL MECHTE ( NOMODE, NCHA, LCHAR, MATE, EXITIM, TIME,
     >                  CHTREF, CHTEMP )
C
          JAUX = 0
          CALL MECALC ( NOSY, NOMODE, VAPRIN, CHGEOM, MATE, CHCARA,
     >                  CHTEMP, CHTREF, CHTIME, CHNUMC, CHHARM,
     >                  CHSIG, CHEPS, CHFREQ, CHMASS, K24BID, CHAREP,
     >                  TYPCOE, ALPHA, CALPHA, K24BID, K24BID,
     >                  CHAMEL, LIGRMO, BASE, K24BID, K24BID, K24BID,
     >                  K24BID,
     >                  K24BID, K24BID, K8BID, JAUX, IRET )
C
  13    CONTINUE
C
C    RECOPIE DE "SIGM_ELNO_DEPL" CAR ON EN A BESOIN POUR LES DERIVEES
C
        CALL RSEXCH (REPRIN,'SIGM_ELNO_DEPL',ITPS,CHEXTR,IRET)
        IF ( IRET .LE. 100 ) THEN
          CALL COPISD('CHAMP_GD','G',CONTEN(1:19),CHEXTR(1:19))
          CALL RSNOCH (REPRIN,'SIGM_ELNO_DEPL',ITPS,' ')
        ENDIF
C
      ENDIF
C
C====
C 2. LE PREMIER MEMBRE
C====
C
C 2.1. ==> CALCULS ELEMENTAIRES DU 1ER MEMBRE:
C
      IF ( ASSMAT ) THEN
C
        CALL UTTCPU (1, 'DEBUT', 4, TPS1)
        CALL MERIME ( MODELE(1:8),NCHAR,ZK24(JCHAR),MATE,
     >                CARELE(1:8),.TRUE.,TIME,MATELE,NH,BASE)
        ASS1ER = .TRUE.
        CALL UTTCPU (1, 'FIN', 4, TPS1)
C
      ENDIF
C
C 2.2. ==> ASSEMBLAGE
C
      IF ( ASS1ER ) THEN
C
        CALL UTTCPU (2, 'DEBUT', 4, TPS2)
C
        CALL ASMATR ( 1, MATELE, ' ', NUMEDD, SOLVEU,
     >                LISCHA, 'ZERO', 'V', 1, MATASS )
        CALL DETRSD ('MATR_ELEM',MATELE)
C
C 2.3. ==> DECOMPOSITION OU CALCUL DE LA MATRICE DE PRECONDITIONEMENT
C
        CALL PRERES ( SOLVEU, 'V', IERR, MAPREC, MATASS )
C
        ASS1ER = .FALSE.
        CALL UTTCPU (2, 'FIN', 4, TPS2)
C
      ENDIF
C
C====
C 3. LES CHARGEMENTS
C====
C
      CALL UTTCPU (3, 'DEBUT', 4, TPS3)
C
C 3.1. ==> LES DIRICHLETS
C
      IF ( TYPESE.EQ.0 .OR. TYPESE.EQ.2 ) THEN
C
      VADIRI = BLAN24
      VEDIRI = BLAN24
      CHDIRI = BLAN24
C
      CALL VEDIME ( MODELE, CHARGE, INFOCH, TIME, TYPRES,
     >              TYPESE, NOPASE, VEDIRI )
C
      CALL ASASVE ( VEDIRI, NUMEDD,TYPRES,VADIRI)
      CALL ASCOVA('D', VADIRI,FOMULT,'INST',TIME,TYPRES,CHDIRI)
      CALL JEVEUO ( CHDIRI(1:19)//'.VALE','L',JDIRI)
C
      ENDIF
C
C 3.2. ==> CAS DU CHARGEMENT TEMPERATURE, HYDRATATION, SECHAGE
C
      IF ( TYPESE.EQ.0 ) THEN
C
      IF ( NUMCHT.GT.0 .OR. NUMCHY.GT.0 .OR. NUMCHS.GT.0 ) THEN
C
      VECTHS = BLAN24
      CHTHS = BLAN24
      IF ( NUMCHT.GT.0 ) THEN
        CALL VECTME ( MODELE, CARELE, MATE, COM, VECTHS )
        CALL ASASVE ( VECTHS, NUMEDD, TYPRES, CHTHS )
      ENDIF
      IF ( NUMCHY.GT.0 ) THEN
        CALL VECYME ( MODELE, CARELE, MATE, COM, NUMEDD, CHTHS )
      ENDIF
      IF ( NUMCHS.GT.0 ) THEN
        CALL VECSME ( MODELE, CARELE, MATE, COM, NUMEDD, CHTHS )
      ENDIF
C
      CALL JEVEUO (CHTHS,'L',JTP)
      CALL JEVEUO (ZK24(JTP)(1:19)//'.VALE','L',JTHS)
C
      ENDIF
C
      ENDIF
C
C 3.3. ==> FORCES DE LAPLACE
C
      IF ( TYPESE.EQ.0 ) THEN
C
      VALAPL = BLAN24
      VELAPL = BLAN24
      CHLAPL = BLAN24
      K24BID = BLAN24
C
      CALL VELAME ( MODELE, CHARGE, INFOCH, TIME,
     >              K24BID, K24BID, VELAPL)
C
      CALL ASASVE ( VELAPL, NUMEDD,TYPRES,VALAPL)
      CALL ASCOVA('D', VALAPL,FOMULT,'INST',TIME,TYPRES,CHLAPL)
      CALL JEVEUO (CHLAPL(1:19)//'.VALE','L',JLAPL)
C
      ENDIF
C
C 3.4. ==> AUTRES CHARGEMENTS
C
      IF ( TYPESE.LE.0 .OR. TYPESE.GE.5 ) THEN
C
      VACHAM = BLAN24
      VECHAM = BLAN24
      CHCHAM = BLAN24
      K24BID = BLAN24
C
C     ... DETERMINATION DU CHAMP DE TEMPERATURE
      CALL NMVCEX ('TEMP', COM, TEMP )
C
      IF ( TYPESE.EQ.-1 ) THEN
        TYPCAL = 'DLAG'
      ELSE
        TYPCAL = 'MECA'
      ENDIF
      CALL VECHME ( TYPCAL, MODELE, CHARGE, INFOCH, PARTPS,
     >              CARELE, MATE, TEMP, LIGRMO,
     >              VAPRIN, NOPASE, TYPESE, STYPSE,
     >              VECHAM )
C
      CALL ASASVE ( VECHAM, NUMEDD,TYPRES,VACHAM)
      CALL ASCOVA('D', VACHAM,FOMULT,'INST',TIME,TYPRES,CHCHAM)
      CALL JEVEUO ( CHCHAM(1:19)//'.VALE','L',JCHAM)
C
      ENDIF
C
C 3.5. ==> TERMES COMPLEMENTAIRES POUR CERTAINES DERIVEES
C
      IF ( TYPESE.EQ.-1 .OR. TYPESE.EQ.3 ) THEN
C
      VACOMP = BLAN24
      VECOMP = BLAN24
      CHCOMP = BLAN24
      K24BID = BLAN24

C     ... DETERMINATION DU CHAMP DE TEMPERATURE ET DE SA DERIVEE (DLAG)
C     ... DETERMINATION DE LA DERIVEE % DONNEES MATERIAUX        (MECA)

      IF ( TYPESE.EQ.-1 ) THEN
        TYPCAL = 'DLAG'
        CALL NMDETE ( MODELE, MATE, CHARGE, INFOCH, TIME,
     >                TYPESE, STYPSE, NOPASE,
     >                DERITE, LBID )
      ELSE
        TYPCAL = 'MECA'
      ENDIF

      CALL VECHDE ( TYPCAL, MODELE(1:8),NCHAR,ZK24(JCHAR), MATE,
     &              CARELE(1:8), PARTPS,
     >              VAPRIN, CONTEG, TEMP, DERITE, LIGRMO,
     >              NOPASE, TYPESE, STYPSE,
     >              VECOMP )
C
      CALL ASASVE ( VECOMP, NUMEDD,TYPRES,VACOMP)
      CALL ASCOVA('D', VACOMP,FOMULT,'INST',TIME,TYPRES,CHCOMP)
      CALL JEVEUO ( CHCOMP(1:19)//'.VALE','L',JCOMP)
C
      ENDIF
C
C 3.6. ==> SECOND MEMBRE DEFINITIF : VECASS
C
C 3.6.1. ==>  0 : CALCUL STANDARD
C            -1 : DERIVATION EULERIENNE (VIA UN CHAMP THETA)
C             1 : DERIVEE SANS INFLUENCE
C             2 : DERIVEE DE LA CL DE DIRICHLET
C             3 : PARAMETRE MATERIAU
C             4 : CARACTERISTIQUE ELEMENTAIRE (COQUES, ...)
C             5 : FORCE
C             N : AUTRES DERIVEES
C
      IF ( TYPESE.EQ.0 ) THEN
        TYPCUM = 3
        J2ND1 = JDIRI
        J2ND2 = JCHAM
        J2ND3 = JLAPL
        IF ( NUMCHT.GT.0 ) THEN
          TYPCUM = 4
          J2ND4 = JTHS
        ENDIF
      ELSEIF ( TYPESE.EQ.-1 ) THEN
        TYPCUM = 2
        J2ND1 = JCHAM
        J2ND2 = JCOMP
      ELSEIF ( TYPESE.EQ.1  ) THEN
        TYPCUM = 0
      ELSEIF ( TYPESE.EQ.2  ) THEN
        TYPCUM = 1
        J2ND1 = JDIRI
      ELSEIF ( TYPESE.EQ.3  ) THEN
        TYPCUM = 1
        J2ND1 = JCOMP
      ELSEIF ( TYPESE.EQ.5 ) THEN
        TYPCUM = 1
        J2ND1 = JCHAM
      ELSE
        CALL UTDEBM ( 'A', NOMPRO, 'ON NE SAIT PAS DERIVER' )
        CALL UTIMPK ( 'S', ' PAR RAPPORT AU CONCEPT ', 1, NOPASE )
        CALL UTFINM ()
        CALL UTMESS ( 'F', NOMPRO, 'ERREUR DE PROGRAMMATION.' )
      ENDIF
C
C 3.6.2. ==> ADRESSES ET LONGUEURS DU/DES SECOND(S) MEMEBRE(S)
C
      CALL JEVEUO (VECASS//'.VALE','E',J2ND)
C
      CALL JELIRA (VECASS//'.VALE','LONMAX',LONCH,K8BID)
      LONCM1 = LONCH - 1
C
C 3.6.3. ==> CUMUL DES DIFFERENTS TERMES
C
      IF ( TYPCUM.EQ.0 ) THEN
        DO 36000 , K = 0, LONCM1
          ZR(J2ND+K) = 0.D0
36000   CONTINUE
      ELSEIF ( TYPCUM.EQ.1 ) THEN
        DO 36001 , K = 0, LONCM1
          ZR(J2ND+K) = ZR(J2ND1+K)
36001   CONTINUE
      ELSEIF ( TYPCUM.EQ.2 ) THEN
        DO 36002 , K = 0, LONCM1
          ZR(J2ND+K) = ZR(J2ND1+K) + ZR(J2ND2+K)
36002   CONTINUE
      ELSEIF ( TYPCUM.EQ.3 ) THEN
        DO 36003 , K = 0, LONCM1
          ZR(J2ND+K) = ZR(J2ND1+K) + ZR(J2ND2+K) + ZR(J2ND3+K)
36003   CONTINUE
      ELSEIF ( TYPCUM.EQ.4 ) THEN
        DO 36004 , K = 0, LONCM1
          ZR(J2ND+K) = ZR(J2ND1+K) + ZR(J2ND2+K) + ZR(J2ND3+K)
     >               + ZR(J2ND4+K)
36004   CONTINUE
      ELSE
        CALL UTDEBM ( 'A', NOMPRO, 'MAUVAISE VALEUR DE TYPCUM' )
        CALL UTIMPI ( 'S', ': ', 1, TYPCUM )
        CALL UTFINM
        CALL UTMESS ( 'F', NOMPRO, 'ERREUR DE PROGRAMMATION' )
      ENDIF
C
C 3.7. ==> CHARGES CINEMATIQUES                              ---& CNCHCI
C
      CNCHCI = BLAN24
      CALL ASCAVC(CHARGE,INFOCH,FOMULT, NUMEDD,TIME,CNCHCI)
C
C====
C 4. DESTRUCTION DES CHAMPS TEMPORAIRES
C====
C
      CALL DETRSD('VECT_ELEM',VEDIRI(1:8))
      CALL JEDETC('V',VADIRI(1:8),1)
      CALL DETRSD('CHAMP_GD',CHDIRI(1:8))
      CALL DETRSD('VECT_ELEM',VECHAM(1:8))
      CALL JEDETC('V',VACHAM(1:8),1)
      CALL DETRSD('CHAMP_GD',CHCHAM(1:8))
C
      IF ( TYPESE.EQ.0 ) THEN
        IF ( NUMCHT.GT.0 ) THEN
          CALL DETRSD('VECT_ELEM',VECTHS(1:8))
          CALL DETRSD('CHAMP_GD',CHTHS(1:8))
        ENDIF
      ENDIF
C
      CALL JEDEMA()
C
      END
