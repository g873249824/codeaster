      SUBROUTINE MEACMV(MODELE,MATE  ,CARELE,FOMULT,LISCHA,
     &                  PARTPS,NUMEDD,ASSMAT,SOLVEU,VECASS,
     &                  MATASS,MAPREC,CNCHCI,BASE  ,COMPOR)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/06/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C
      IMPLICIT      NONE
      INCLUDE 'jeveux.h'
      LOGICAL       ASSMAT
      CHARACTER*1   BASE
      CHARACTER*19  LISCHA,SOLVEU,VECASS,MATASS,MAPREC
      CHARACTER*24  CNCHCI,MODELE,CARELE,FOMULT,NUMEDD,COMPOR
      CHARACTER*(*) MATE
      REAL*8        PARTPS(*)
C
C ----------------------------------------------------------------------
C     MECANIQUE STATIQUE - ACTUALISATION DES CHARGEMENTS MECANIQUES
C     **                   *                 *           *
C ----------------------------------------------------------------------
C IN  MODELE  : NOM DU MODELE
C IN  MATE    : NOM DU MATERIAU
C IN  CARELE  : NOM D'1 CARAC_ELEM
C IN  FOMULT  : LISTE DES FONCTIONS MULTIPLICATRICES
C IN  LISCHA  : INFORMATION SUR LES CHARGEMENTS
C IN  PARTPS  : PARAMETRES TEMPORELS
C IN  NUMEDD  : PROFIL DE LA MATRICE
C IN  ASSMAT  : BOOLEEN POUR LE CALCUL DE LA MATRICE
C IN  SOLVEU  : METHODE DE RESOLUTION 'LDLT' OU 'GCPC'
C OUT VECASS  : VECTEUR ASSEMBLE SECOND MEMBRE
C OUT MATASS,MAPREC  MATRICE DE RIGIDITE ASSEMBLEE
C OUT CNCHCI  : OBJET DE S.D. CHAM_NO DIMENSIONNE A LA TAILLE DU
C               PROBLEME, VALANT 0 PARTOUT, SAUF LA OU LES DDLS IMPOSES
C               SONT TRAITES PAR ELIMINATION (= DEPLACEMENT IMPOSE)
C IN  BASE    : BASE DE TRAVAIL
C IN/OUT  MAPREC  : MATRICE PRECONDITIONNEE
C IN  COMPOR  : COMPOR POUR LES MULTIFIBRE (POU_D_EM)
C----------------------------------------------------------------------
C


C 0.2. ==> COMMUNS


C 0.3. ==> VARIABLES LOCALES

      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'MEACMV' )

      INTEGER      JCHAR,JINF,NH,IERR,JTP,IBID
      INTEGER      NCHAR,TYPCUM
      REAL*8       TIME
      CHARACTER*1  TYPRES
      CHARACTER*2  CODRET
      CHARACTER*8  MATELE
      CHARACTER*8  NOMODE
      CHARACTER*14 COM
      CHARACTER*19 CHVREF, CHVARC
      CHARACTER*16 OPTION
      CHARACTER*19 CHAMN1,CHAMN2,CHAMN3,CHAMN4,LIGRMO
      CHARACTER*24 K24BID,
     &             BLAN24,VEDIRI,VADIRI,VELAPL,VALAPL,
     &             VECHAM,VACHAM,CHLAPL,CHDIRI,
     &             CHCHAM,CHTHS,CHARGE,INFOCH,VECTHS
      LOGICAL      ASS1ER,LBID,LHYDR,LSECH,LTEMP,LPTOT

C DEB-------------------------------------------------------------------
C====
C 1. PREALABLES
C====

      CALL JEMARQ()

C 1.2. ==> NOM DES STRUCTURES

C 1.2.1. ==> FIXES

C               12   345678   9012345678901234
      COM    = '&&'//NOMPRO//'.COM__'
      CHVARC = '&&'//NOMPRO//'.CHVRC'
C     -- POUR NE CREER Q'UN SEUL CHAMP DE VARIABLES DE REFERENCE
      CHVREF = MODELE(1:8)//'.CHVCREF'

C               12345678
      MATELE = '&&MATELE'

C
      BLAN24 = ' '
      K24BID = BLAN24
      LHYDR=.FALSE.
      LSECH=.FALSE.
      LPTOT=.FALSE.
      CHTHS = BLAN24

C 1.2. ==> LES CONSTANTES

      TIME = PARTPS(1)

      CHARGE = LISCHA//'.LCHA'

      CALL NMVCLE ( MODELE, MATE,CARELE, LISCHA, TIME, COM, CODRET)
      CALL VRCREF ( MODELE(1:8), MATE(1:8),CARELE(1:8),CHVREF)
      CALL NMVCEX ( 'TOUT',COM,CHVARC )
      CALL NMVCD2 ( 'HYDR',MATE,LHYDR, LBID )
      CALL NMVCD2 ( 'PTOT',MATE,LPTOT, LBID )
      CALL NMVCD2 ( 'SECH',MATE,LSECH, LBID )
      CALL NMVCD2 ( 'TEMP',MATE,LTEMP, LBID )

      CALL JEVEUO (CHARGE,'L',JCHAR)
      INFOCH = LISCHA//'.INFC'
      CALL JEVEUO (INFOCH,'L',JINF)
      NCHAR = ZI(JINF)

      NH = 0

      TYPRES = 'R'
      NOMODE = MODELE(1:8)
      LIGRMO = NOMODE//'.MODELE'

      ASS1ER = .FALSE.



C====
C 2. LE PREMIER MEMBRE
C====

C 2.1. ==> CALCULS ELEMENTAIRES DU 1ER MEMBRE:

      IF ( ASSMAT ) THEN

        CALL UTTCPU('CPU.OP0046.1', 'DEBUT',' ')
        CALL MERIME ( MODELE(1:8),NCHAR,ZK24(JCHAR),MATE,
     &                CARELE(1:8),.TRUE.,TIME,COMPOR,MATELE,NH,BASE)
        ASS1ER = .TRUE.
        CALL UTTCPU('CPU.OP0046.1', 'FIN',' ')

      ENDIF

C 2.2. ==> ASSEMBLAGE

      IF ( ASS1ER ) THEN

        CALL UTTCPU('CPU.OP0046.2', 'DEBUT',' ')
        CALL ASMATR ( 1, MATELE, ' ', NUMEDD, SOLVEU,
     &                LISCHA, 'ZERO', 'V', 1, MATASS )
        CALL DETRSD ('MATR_ELEM',MATELE)

C 2.3. ==> DECOMPOSITION OU CALCUL DE LA MATRICE DE PRECONDITIONEMENT

        CALL PRERES(SOLVEU,'V',IERR,MAPREC,MATASS,IBID,-9999)


        ASS1ER = .FALSE.
        CALL UTTCPU('CPU.OP0046.2', 'FIN',' ')

      ENDIF

C====
C 3. LES CHARGEMENTS
C====

      CALL UTTCPU('CPU.OP0046.3', 'DEBUT',' ')
C
C 3.1. ==> LES DIRICHLETS
C
      VADIRI = BLAN24
      VEDIRI = BLAN24
      CHDIRI = BLAN24
      CALL VEDIME(MODELE,CHARGE,INFOCH,TIME  ,TYPRES,
     &            VEDIRI)
      CALL ASASVE ( VEDIRI, NUMEDD,TYPRES,VADIRI)
      CALL ASCOVA('D', VADIRI,FOMULT,'INST',TIME,TYPRES,CHDIRI)
C
C 3.2. ==> CAS DU CHARGEMENT TEMPERATURE, HYDRATATION, SECHAGE,
C          PRESSION TOTALE (CHAINAGE HM)
C
      IF ( LTEMP .OR. LHYDR .OR. LSECH .OR. LPTOT) THEN
        VECTHS = BLAN24
        IF ( LTEMP) THEN
          CALL VECTME(MODELE,CARELE,MATE,COMPOR,COM,VECTHS)
          CALL ASASVE(VECTHS,NUMEDD,TYPRES,CHTHS)
        ENDIF
        IF ( LHYDR  ) THEN
          OPTION = 'CHAR_MECA_HYDR_R'
          CALL VECVME(OPTION,MODELE,CARELE,
     &                 MATE  ,COMPOR,COM   ,NUMEDD,CHTHS)
        ENDIF
        IF ( LPTOT  ) THEN
          OPTION = 'CHAR_MECA_PTOT_R'
          CALL VECVME(OPTION,MODELE,CARELE,
     &                  MATE  ,COMPOR,COM   ,NUMEDD,CHTHS)
        ENDIF
        IF ( LSECH  ) THEN
          OPTION = 'CHAR_MECA_SECH_R'
          CALL VECVME(OPTION,MODELE,CARELE,
     &                 MATE  ,COMPOR,COM   ,NUMEDD,CHTHS)
        ENDIF

        CALL JEVEUO (CHTHS,'L',JTP)
        CHTHS=ZK24(JTP)(1:19)
      ENDIF
C
C 3.3. ==> FORCES DE LAPLACE
C
      VALAPL = BLAN24
      VELAPL = BLAN24
      CHLAPL = BLAN24
      K24BID = BLAN24
      CALL VELAME(MODELE,CHARGE,INFOCH,K24BID, VELAPL)
      CALL ASASVE(VELAPL,NUMEDD,TYPRES,VALAPL)
      CALL ASCOVA('D',VALAPL,FOMULT,'INST',TIME,TYPRES,CHLAPL)
C
C 3.4. ==> AUTRES CHARGEMENTS
C
      VACHAM = BLAN24
      VECHAM = BLAN24
      CHCHAM = BLAN24
      K24BID = BLAN24

      CALL VECHME('S'   ,MODELE,CHARGE,INFOCH,PARTPS,
     &            CARELE,MATE  ,CHVARC,LIGRMO,VECHAM)
      CALL ASASVE(VECHAM, NUMEDD,TYPRES,VACHAM)
      CALL ASCOVA('D', VACHAM,FOMULT,'INST',TIME,TYPRES,CHCHAM)
C
C 3.6. ==> SECOND MEMBRE DEFINITIF : VECASS
C
      TYPCUM = 3
      CHAMN1 = CHDIRI(1:19)
      CHAMN2 = CHCHAM(1:19)
      CHAMN3 = CHLAPL(1:19)
      IF ( CHTHS(1:19).NE.' ' ) THEN
        TYPCUM = 4
        CHAMN4 = CHTHS(1:19)
      ENDIF
C
C 3.6.2. ==> CONCATENATION DES SECOND(S) MEMBRE(S) AVEC EVENTUELLEMENT
C            LEURS ENCAPSULATIONS FETI
C
      CALL FETCCN(CHAMN1,CHAMN2,CHAMN3,CHAMN4,TYPCUM,VECASS)

C
C 3.7. ==> CHARGES CINEMATIQUES                              ---& CNCHCI
C
      CNCHCI = BLAN24
      CALL ASCAVC(CHARGE,INFOCH,FOMULT,NUMEDD,TIME,CNCHCI)

C====
C 4. DESTRUCTION DES CHAMPS TEMPORAIRES
C====

      CALL DETRSD('VECT_ELEM',VEDIRI(1:19))
      CALL DETRSD('CHAMP_GD',CHDIRI(1:19))
      CALL DETRSD('VECT_ELEM',VELAPL(1:19))
      CALL DETRSD('CHAMP_GD',CHLAPL(1:19))
      CALL DETRSD('VECT_ELEM',VECHAM(1:19))
      CALL DETRSD('CHAMP_GD',CHCHAM(1:19))
      IF ( LTEMP ) THEN
        CALL DETRSD('VECT_ELEM',VECTHS(1:19))
        CALL DETRSD('CHAMP_GD',CHTHS(1:19))
      ENDIF

      CALL JEDEMA()
      END
