      SUBROUTINE NMFEXT(NUMEDD,ETA,SECMBR,RESOCO,DEFICO,CNFEXT)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 29/09/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
      IMPLICIT NONE
      REAL*8        ETA
      CHARACTER*19  CNFEXT
      CHARACTER*24  SECMBR,NUMEDD
      CHARACTER*(*) RESOCO,DEFICO

C ----------------------------------------------------------------------
C
C COMMANDE STAT_NON_LINE : RESULTANTE DES EFFORTS EXTERIEURS
C
C ----------------------------------------------------------------------
C     IN   NUMEDD : NUME_DDL
C     IN   ETA    : COEFFICIENT DE PILOTAGE
C     IN   SECMBR : VECTEURS ASSEMBLES DES CHARGEMENTS
C     IN   RESOCO : SD CONTACT (POUR REACTIONS DE CONTACT)
C     IN   DEFICO : SD CONTACT (POUR REACTIONS DE CONTACT)
C IN/JXOUT CNFEXT : RESULTANTE DES EFFORTS EXTERIEURS
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      ICONTA,IFM,NIV,NBPROC,JREFN,IINF,NIVMPI,IBID,NEQ,
     &             JATMU,I,NEQ1,JFEXT
      REAL*8       CONST(4),RBID
      CHARACTER*8  TYPCST(4),K8BID
      CHARACTER*24 CNFEDO, CNFEPI, CNDIDO, CNDIPI, CNFSDO, CNFSPI,KMET
      CHARACTER*24 K24BID,NOMCH(4),INFOFE
      CHARACTER*14 RESOCZ
      LOGICAL      LFETI
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C FETI OR NOT FETI ?
      CALL INFNIV(IFM,NIV)
      NBPROC=1
      CALL JEVEUO(NUMEDD(1:14)//'.NUME.REFN','L',JREFN)
      KMET=ZK24(JREFN+2)
      IF (KMET(1:4).EQ.'FETI') THEN
        LFETI=.TRUE.
        CALL JEVEUO('&FETI.FINF','L',IINF)
        INFOFE=ZK24(IINF)
        IF (INFOFE(10:10).EQ.'T') THEN
          NIVMPI=2
        ELSE
          NIVMPI=1
        ENDIF
        CALL FETMPI(3,IBID,IFM,NIVMPI,IBID,NBPROC,K24BID,K24BID,K24BID,
     &              RBID)
      ELSE
        LFETI=.FALSE.
      ENDIF
C
C --- INITIALISATIONS
C
      RESOCZ = RESOCO
C
C --- DEMONTAGE DES SECONDS MEMBRES
C
      CALL DESAGG (SECMBR, CNFEDO, CNFEPI, CNDIDO, CNDIPI,
     &                     CNFSDO, CNFSPI, K24BID, K24BID)
C
C --- REMPLISSAGE DU CHAM_NO CNFEXT COMME SOMME DES SECONDS MEMBRES
C     SI IL N'EXISTE PAS, ON LE CREER; SINON, ON ECRASE SES ANCIENNES
C     VALEURS
      TYPCST(1)='R'
      TYPCST(2)='R'
      TYPCST(3)='R'
      TYPCST(4)='R'
      CONST(1)=1.D0
      CONST(2)=1.D0
      CONST(3)=ETA
      CONST(4)=ETA
      NOMCH(1)=CNFEDO
      NOMCH(2)=CNFSDO
      NOMCH(3)=CNFEPI
      NOMCH(4)=CNFSPI
      CALL VTCMBL(4,TYPCST,CONST,TYPCST,NOMCH,'R',CNFEXT)
C
C --- REACTIONS DE CONTACT (METHODES DISCRETES)
C
      CALL JEEXIN(RESOCZ // '.ATMU', ICONTA)
      IF (ICONTA.NE.0) THEN
        IF (LFETI)
     &    CALL U2MESS('F','ALGORITH7_78')
        CALL JEVEUO(RESOCZ//'.ATMU','L',JATMU)
        CALL JELIRA(CNFEXT(1:19)//'.VALE','LONMAX',NEQ,K8BID)
        CALL JEVEUO(CNFEXT(1:19)//'.VALE', 'E', JFEXT)
        NEQ1=NEQ-1
        DO 20 I = 0, NEQ1
          ZR(JFEXT+I) = ZR(JFEXT+I) - ZR(JATMU+I)
 20     CONTINUE
      ENDIF

C SI FETI PARALLELE, ON COMMUNIQUE A CHAQUE PROC LA SOMME DES
C CHAM_NOS GLOBAUX PARTIELLEMENT CALCULES
C A OPTIMISER VIA UN DES CRITERES LOCAUX
      IF ((LFETI).AND.(NBPROC.GT.1)) THEN
        CALL JELIRA(CNFEXT(1:19)//'.VALE','LONMAX',NEQ,K8BID)
        K24BID=CNFEXT//'.VALE'
        CALL FETMPI(71,NEQ,IFM,NIVMPI,IBID,IBID,K24BID,K24BID,K24BID,
     &              RBID)
      ENDIF

      CALL JEDEMA()
      END
