      SUBROUTINE NMFEXT(NUMEDD, ETA, SECMBR, RESOCZ,DEFICZ, CNFEXT)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 25/01/2005   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE PBADEL P.BADEL

      IMPLICIT NONE
      REAL*8        ETA
      CHARACTER*14  RESOCO
      CHARACTER*16  DEFICO
      CHARACTER*19  CNFEXT
      CHARACTER*24  SECMBR, NUMEDD
      CHARACTER*(*) RESOCZ,DEFICZ

C ----------------------------------------------------------------------
C
C COMMANDE STAT_NON_LINE : RESULTANTE DES EFFORTS EXTERIEURS
C
C ----------------------------------------------------------------------
C     IN   NUMEDD : NUME_DDL
C     IN   ETA    : COEFFICIENT DE PILOTAGE
C     IN   SECMBR : VECTEURS ASSEMBLES DES CHARGEMENTS
C     IN   RESOCO : SD CONTACT (POUR REACTIONS DE CONTACT)
C     IN   DEFICO : SD CONTACT (POUR REACTIONS DE CONTACT)
C IN/JXOUT CNFEXT : RESULTANTE DES EFFORTS EXTERIEURS

C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------

      INTEGER      NEQ, I, ICONTA,JECPD,ICONTX
      INTEGER      JFEDO, JFEPI, JFSDO, JFSPI, JFEXT, JATMU, IRET
      CHARACTER*8  K8BID
      CHARACTER*24 CNFEDO, CNFEPI, CNDIDO, CNDIPI, CNFSDO, CNFSPI
      CHARACTER*24 K24BID
C ----------------------------------------------------------------------


      CALL JEMARQ()
      RESOCO = RESOCZ
      DEFICO = DEFICZ
      CALL DESAGG (SECMBR, CNFEDO, CNFEPI, CNDIDO, CNDIPI,
     &                     CNFSDO, CNFSPI, K24BID, K24BID)

      CALL EXISD('CHAMP_GD',CNFEXT,IRET)
      IF (IRET.EQ.0) CALL VTCREB(CNFEXT, NUMEDD, 'V', 'R',NEQ)

      CALL JEVEUO(CNFEDO(1:19) // '.VALE', 'L', JFEDO)
      CALL JEVEUO(CNFEPI(1:19) // '.VALE', 'L', JFEPI)
      CALL JEVEUO(CNFSDO(1:19) // '.VALE', 'L', JFSDO)
      CALL JEVEUO(CNFSPI(1:19) // '.VALE', 'L', JFSPI)
      CALL JEVEUO(CNFEXT       // '.VALE', 'E', JFEXT)
      CALL JELIRA(CNFEDO(1:19) // '.VALE', 'LONMAX', NEQ, K8BID)

      DO 10 I = 0, NEQ-1
        ZR(JFEXT+I) = ZR(JFEDO+I) + ZR(JFSDO+I)
     &                + ETA * (ZR(JFEPI+I) + ZR(JFSPI+I))
 10   CONTINUE 

C -- REACTIONS DE CONTACT
      CALL JEEXIN(DEFICO(1:16)//'.MAESCL', ICONTA)
      CALL JEEXIN(DEFICO(1:16)//'.XFEM', ICONTX)
      IF (ICONTA.GT.0.OR.ICONTX.GT.0) GOTO 11
      CALL JEEXIN(RESOCO // '.ATMU', ICONTA)
      IF (ICONTA.NE.0) THEN
        CALL JEVEUO (RESOCO // '.ATMU','L',JATMU)
        DO 20 I = 0, NEQ-1
          ZR(JFEXT+I) = ZR(JFEXT+I) - ZR(JATMU+I)
 20     CONTINUE
      END IF
 11   CONTINUE
      CALL JEDEMA()
      END
