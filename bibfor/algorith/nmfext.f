      SUBROUTINE NMFEXT(NUMEDD,ETA   ,FONACT,DEFICO,SDDYNA,
     &                  VEASSE)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/09/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C
      IMPLICIT NONE
      REAL*8        ETA
      CHARACTER*24  NUMEDD
      CHARACTER*24  DEFICO
      LOGICAL       FONACT(*)
      CHARACTER*19  SDDYNA
      CHARACTER*19  VEASSE(*)
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C RESULTANTE DES EFFORTS EXTERIEURS 
C      
C ----------------------------------------------------------------------
C
C
C IN  SDDYNA : SD DYNAMIQUE
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  DEFICO : SD DEFINITION CONTACT
C IN  NUMEDD : NUME_DDL
C IN  ETA    : COEFFICIENT DE PILOTAGE
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      IFM,NIV
      CHARACTER*19 NMCHEX,CNDUMM,CNUNIL,CNCTDC
      CHARACTER*19 CNFFDO,CNFFPI,CNFVDO
      CHARACTER*19 CNFEXT
      LOGICAL      ISFONC,LCTCD,LUNIL
      INTEGER      IFDO,N
      CHARACTER*19 VECT(20)
      REAL*8       COEF(20)        
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> CALCUL DES FORCES EXTERNES' 
      ENDIF 
C
C --- FONCTIONNALITES ACTIVEES
C    
      LCTCD  = ISFONC(FONACT,'CONT_DISCRET')
      LUNIL  = ISFONC(FONACT,'LIAISON_UNILATER')      
C
C --- INITIALISATIONS
C
      IFDO   = 0   
      CNFFDO = '&&CNCHAR.FFDO'
      CNFFPI = '&&CNCHAR.FFPI'
      CNFVDO = '&&CNCHAR.FVDO'                   
      CNDUMM = '&&CNCHAR.DUMM'  
      CNFEXT = NMCHEX(VEASSE,'VEASSE','CNFEXT')
      CALL VTZERO(CNFEXT)
C
C --- FORCES DE CONTACT DISCRET
C
      IF (LCTCD) THEN
        CNCTDC     = NMCHEX(VEASSE,'VEASSE','CNCTDC') 
        IFDO       = IFDO + 1 
        COEF(IFDO) = -1.D0   
        VECT(IFDO) = CNCTDC
      ENDIF      
C
C --- FORCES DE LIAISON_UNILATER
C
      IF (LUNIL) THEN
        CNUNIL     = NMCHEX(VEASSE,'VEASSE','CNUNIL') 
        IFDO       = IFDO + 1 
        COEF(IFDO) = -1.D0   
        VECT(IFDO) = CNUNIL
      ENDIF 
C
C --- CALCUL DU VECTEUR DES CHARGEMENTS FIXES     (QUE DES FORCES)
C
      CALL NMASFI(FONACT,SDDYNA,VEASSE,CNFFDO,CNFFPI,
     &            CNDUMM,CNDUMM)
C      
C --- CALCUL DU VECTEUR DES CHARGEMENTS VARIABLES (QUE DES FORCES)
C
      CALL NMASVA('CORR',FONACT,SDDYNA,DEFICO,VEASSE,
     &            CNFVDO)      
C
C --- CHARGEMENTS EXTERIEURS DONNEES
C
      IFDO       = IFDO + 1 
      COEF(IFDO) = 1.D0   
      VECT(IFDO) = CNFFDO
      IFDO       = IFDO + 1 
      COEF(IFDO) = 1.D0   
      VECT(IFDO) = CNFVDO
C
C --- CHARGEMENTS EXTERIEURS PILOTES
C      
      IFDO       = IFDO + 1 
      COEF(IFDO) = ETA   
      VECT(IFDO) = CNFFPI     
C
C --- VECTEUR RESULTANT 
C       
      DO 10 N = 1,IFDO
        CALL VTAXPY(COEF(N),VECT(N),CNFEXT)   
 10   CONTINUE  
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        CALL NMDEBG('VECT',CNFEXT,IFM   )      
      ENDIF 
C
      CALL JEDEMA()
      END
