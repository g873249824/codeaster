      SUBROUTINE NMRENU(MODELZ,FONACT,SDTIME,NUMEDD,LISCHA,
     &                  SOLVEU,DEFICO,RESOCO,RENUME)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 29/09/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE    
      CHARACTER*(*) MODELZ
      CHARACTER*24  SDTIME,NUMEDD 
      CHARACTER*19  LISCHA,SOLVEU
      CHARACTER*24  DEFICO,RESOCO
      LOGICAL       FONACT(*) 
      LOGICAL       RENUME   
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL)
C
C CHOIX DE RE-CREATION DU NUME_DDL
C      
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  FONACT : FONCTIONNALITES ACTIVEES (vOIR NMFONC)
C IN  LISCHA : LISTE DES CHARGES
C IN  SOLVEU : SOLVEUR
C IN  SDTIME : SD TIMER
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  DEFICO : SD DEF. CONTACT
C OUT RENUME : .TRUE. SI RECREER NUMEDDL
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      REAL*8       R8BID
      INTEGER      IBID
      CHARACTER*24 K24BLA,K24BID
      LOGICAL      ISFONC,LCTCC,LXFCM,LTFCM
      CHARACTER*24 CRNUDD
      INTEGER      JCRNUD 
      LOGICAL      LBID   
      INTEGER      IFM,NIV
C      
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)  
C
C --- ACCES OBJETS
C 
      CRNUDD = RESOCO(1:14)//'.NUDD'         
C
C --- INITIALISATIONS
C      
      RENUME = .FALSE.
      K24BLA = ' '
C
C --- FONCTIONNALITES ACTIVEES
C
      LCTCC  = ISFONC(FONACT,'CONT_CONTINU')
      LXFCM  = ISFONC(FONACT,'CONT_XFEM')             
C
C --- SI XFEM/CONTACT_CONTINU: NUMEDDL BOUGE - REASSEMBLAGE OBLIGATOIRE
C 
      IF (LXFCM) THEN
        CALL MMINFP(0    ,DEFICO,K24BLA,'XFEM_GG',
     &              IBID ,R8BID ,K24BID,LTFCM)
        IF (LTFCM) THEN
          RENUME = .TRUE.
        ENDIF
      ENDIF
      IF (LCTCC) THEN
        CALL JEVEUO(CRNUDD,'E',JCRNUD) 
        RENUME = ZL(JCRNUD)
      ENDIF
C
C --- RE-CREATION NUME_DDL SI NECESSAIRE
C
      IF (RENUME) THEN
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ...... RE-CREATION DU NUME_DDL '
        ENDIF
        CALL NMTIME('INIT' ,'TMP',SDTIME,LBID  ,R8BID )
        CALL NMTIME('DEBUT','TMP',SDTIME,LBID  ,R8BID )
        CALL NUMER3(MODELZ,LISCHA,SOLVEU,NUMEDD)
        CALL NMTIME('FIN'      ,'TMP',SDTIME,LBID  ,R8BID )
        CALL NMTIME('FACT_SYMB','TMP',SDTIME,LBID  ,R8BID )         
      ENDIF
      IF (LCTCC.AND..NOT.LXFCM) THEN
        ZL(JCRNUD) = .FALSE.
      ENDIF                           
C
      CALL JEDEMA()      
C
      END
