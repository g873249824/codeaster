        SUBROUTINE OP0081 ( IER )
      IMPLICIT REAL*8 (A-H,O-Z)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C-----------------------------------------------------------------------
C MODIF ALGORITH  DATE 05/09/2006   AUTEUR CIBHHPD L.SALMONA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C  BUT: OPERATEUR DE CALCUL DE MACRO-ELEMENT A PARTIR D'UNE BASE MODALE
C       ET DE MATRICES ASSEMBLEES
C-----------------------------------------------------------------------
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C-----  FIN  COMMUNS NORMALISES  JEVEUX  -------------------------------
C
      INTEGER      IER
      CHARACTER*8  NOMRES,NOMCON,NOMOPE,MAILLA,BASMOD,BLANC
      CHARACTER*9  OPTION
      CHARACTER*19 RAID,MASS,AMOR
      CHARACTER*24 NOMMAT,NOMREP,NOMFAM,NOMFAP,NOMFAD
C
      DATA BLANC /'        '/
C-----------------------------------------------------------------------
C
C
      CALL INFMAJ()
      CALL GETRES ( NOMRES, NOMCON, NOMOPE )
C
C --- RECUPERATION BASE MODALE, MATRICES ET CREATION .REFE
C     ET DETERMINATION OPTION DE CALCUL
C
      CALL REFE81 ( NOMRES, BASMOD, RAID, MASS, AMOR, MAILLA, OPTION )
C
C --- CALCUL DES MATRICES PROJETEES
C
C --- CAS CLASSIQUE
C
      IF ( OPTION .EQ. 'CLASSIQUE' ) THEN
         NOMMAT=NOMRES//'.MAEL_RAID'
         CALL ORTPRO(NOMMAT,'G',BASMOD,RAID,'RAIDEUR    ')
         NOMMAT=NOMRES//'.MAEL_MASS'
         CALL ORTPRO(NOMMAT,'G',BASMOD,MASS,'MASSE        ')
         IF (AMOR.NE.BLANC) THEN
            NOMMAT=NOMRES//'.MAEL_AMOR'
            CALL CALPRO(NOMMAT,'G',BASMOD,AMOR)
         ELSE
            CALL GETVR8(BLANC,'AMOR_REDUIT',1,1,0,BID,IOC)
            IF (IOC.LT.0) THEN
               NOMMAT=NOMRES//'.MAEL_AMOR'
              CALL CALAMO(NOMMAT,'G',BASMOD)
            ENDIF
         ENDIF
C
C --- CAS RITZ OU DIAG_MASS
C
      ELSEIF ( OPTION .EQ. 'RITZ'      .OR.
     +         OPTION .EQ. 'DIAG_MASS' ) THEN
         NOMMAT = NOMRES//'.MAEL_RAID'
         CALL CALPRO ( NOMMAT, 'G', BASMOD, RAID )
         NOMMAT = NOMRES//'.MAEL_MASS'
         CALL CALPRO ( NOMMAT, 'G', BASMOD, MASS )
         IF ( AMOR .NE. BLANC ) THEN
            NOMMAT = NOMRES//'.MAEL_AMOR'
            CALL CALPRO ( NOMMAT, 'G', BASMOD, AMOR )
         ENDIF
C
C - SINON
C
      ELSE
         CALL UTDEBM('F',NOMCON,'ARRET SUR OPTION DE CALCUL INCONNUE')
         CALL UTIMPK('L','   OPTION : ',1,OPTION)
         CALL UTFINM
      ENDIF
C
C --- CALCUL DES FORCES D'INERTIES
C
      NOMMAT = NOMRES//'.MAEL_INER'
      CALL INER81 ( NOMMAT, 'G', BASMOD, MASS )

      CALL VERISD ('MACR_ELEM_DYNA',NOMRES ) 

      END
