      SUBROUTINE OP0081()
      IMPLICIT NONE
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/04/2013   AUTEUR BODEL C.BODEL 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
C     BUT:
C       OPERATEUR DE CALCUL DE MACRO-ELEMENT A PARTIR D'UNE BASE MODALE
C       ET DE MATRICES ASSEMBLEES
C
C
C     ARGUMENTS:
C     ----------
C
C      ENTREE :
C-------------
C
C      SORTIE :
C-------------
C
C ......................................................................
C
C
C
C
      INCLUDE 'jeveux.h'
      INTEGER      IOC,N1,NBVAL,IMOD,IRET

      REAL*8       RBID,PI,R8PI

      CHARACTER*8  NOMRES,NOMCON,NOMOPE,MAILLA,BASMOD,BLANC,K8BID
      CHARACTER*19 RAID,MASS,AMOR,IMPE,TYPMAT
      CHARACTER*24 NOMMAT
      INTEGER      IARG,NBMOD,IOCM,IOCF,IOCA,VALI(2)
      INTEGER      LMASS,LRIGI,LAMOR,LDREF,LDRES
C
      DATA BLANC /'        '/
C
C-----------------------------------------------------------------------
C
      CALL INFMAJ()
      CALL GETRES(NOMRES, NOMCON, NOMOPE)

      PI=R8PI()
C
C --- MACR_ELEM_DYNA OBTENU PAR MODELE NUMERIQUE OU EXPERIMENTAL
      CALL GETFAC('MODELE_MESURE',NBVAL)
C
C --- RECUPERATION BASE MODALE, MATRICES ET CREATION .REFE
C     ET DETERMINATION OPTION DE CALCUL
C    
      CALL REFE81(NOMRES, BASMOD, RAID, MASS, AMOR, MAILLA)
C
C --- CALCUL DES MATRICES PROJETEES (SI PAS DE MOT-CLE MODELE_MESURE)
C
      IF (NBVAL.EQ.0) THEN
        IMPE = BLANC
        CALL GETVID(' ','MATR_IMPE',1,IARG,1,IMPE,N1)
        IF (IMPE.NE.BLANC) THEN
           CALL IMPE81(NOMRES, IMPE, BASMOD)
           TYPMAT='MATR_ASSE_DEPL_R'
           GOTO 10
        ENDIF
        CALL GETVID(' ','MATR_IMPE_RIGI',1,IARG,1,IMPE,N1)
        IF (IMPE.NE.BLANC) THEN
           CALL IMPE81(NOMRES, IMPE, BASMOD)
           TYPMAT='MATR_ASSE_DEPL_R'
           GOTO 10
        ENDIF      
        CALL GETVID(' ','MATR_IMPE_MASS',1,IARG,1,IMPE,N1)
        IF (IMPE.NE.BLANC) THEN
           CALL IMPE81(NOMRES, IMPE, BASMOD)
           TYPMAT='MATR_ASSE_DEPL_R'
           GOTO 10
        ENDIF
        CALL GETVID(' ','MATR_IMPE_AMOR',1,IARG,1,IMPE,N1)
        IF (IMPE.NE.BLANC) THEN
           CALL IMPE81(NOMRES, IMPE, BASMOD)
           TYPMAT='MATR_ASSE_DEPL_R'
           GOTO 10
        ENDIF

        NOMMAT = NOMRES//'.MAEL_RAID'
        CALL GETTCO(RAID,TYPMAT)

        IF (TYPMAT.EQ.'MATR_ASSE_DEPL_R') THEN
          CALL CALPRO ( NOMMAT, 'G', BASMOD, RAID )
        ELSE IF (TYPMAT.EQ.'MATR_ASSE_DEPL_C') THEN
          CALL CALPRC ( NOMMAT, 'G', BASMOD, RAID )
        ELSE
          CALL U2MESK('F','ALGORITH14_17',1,TYPMAT)
        ENDIF

        NOMMAT = NOMRES//'.MAEL_MASS'
        CALL CALPRO(NOMMAT, 'G', BASMOD, MASS )
        
        IF (AMOR.NE.BLANC) THEN
           NOMMAT=NOMRES//'.MAEL_AMOR'
           CALL CALPRO(NOMMAT,'G',BASMOD,AMOR)
        ELSE
           CALL GETVR8(BLANC,'AMOR_REDUIT',1,IARG,0,RBID,IOC)
           IF (IOC.LT.0) THEN
              NOMMAT=NOMRES//'.MAEL_AMOR'
             CALL CALAMO(NOMMAT,'G',BASMOD)
           ENDIF
        ENDIF
C
C ---   CALCUL DES FORCES D'INERTIES
C
        NOMMAT = NOMRES//'.MAEL_INER'
        CALL INER81 ( NOMMAT, 'G', BASMOD, MASS )
 10     CONTINUE

C ------------------------------------------------------------------- C

      ELSE
C
C -----  CAS OU LES MATRICES SONT REMPLIES A LA MAIN
C
         CALL DISMOI('F','NB_MODES_TOT',BASMOD,
     &               'RESULTAT',NBMOD,K8BID,IRET)
C
C ---    RECUPERATION DES VALEURS DE MASSES GENERALISEES ET VERIF :
C ---    LE NOMBRE DE VALEURS ENTREES = NOMBRE DE VECT DE LA BASE
C
C ---   MASSE GENERALISEE
        CALL WKVECT('&&OP0081.MASS','V V R',NBMOD,LMASS)
        CALL GETVR8('MODELE_MESURE','MASS_GENE',
     &              1,IARG,NBMOD,ZR(LMASS),IOCM)
        IF (IOCM.NE.NBMOD) THEN
          VALI(1) = NBMOD
          VALI(2) = IOCM
          IF(IOCM.LT.0) VALI(2) = -IOCM
          CALL U2MESG('F','ALGORITH17_31',1,'MASSE_GENE',2,VALI,0,0.D0)
        ENDIF
C
C ---   FREQUENCES PROPRES
        CALL WKVECT('&&OP0081.RIGI','V V R',NBMOD,LRIGI)
        CALL GETVR8('MODELE_MESURE ','FREQ',
     &              1,IARG,NBMOD,ZR(LRIGI),IOCF)

        IF (IOCF.NE.NBMOD) THEN
          VALI(1) = NBMOD
          VALI(2) = IOCF
          IF(IOCF.LT.0) VALI(2) = -IOCM
          CALL U2MESG('F','ALGORITH17_31',1,'FREQ',2,VALI,0,0.D0)
        ENDIF
C
C ---   AMORTISSEMENTS REDUITS
        CALL WKVECT('&&OP0081.AMOR','V V R',NBMOD,LAMOR)
        CALL GETVR8('MODELE_MESURE','AMOR_REDUIT',
     &              1,IARG,NBMOD,ZR(LAMOR),IOCA)
        IF (IOCA.NE.0.AND.IOCA.NE.NBMOD) THEN
          VALI(1) = NBMOD
          VALI(2) = IOCA
          IF(IOCF.LT.0) VALI(2) = -IOCM
          CALL U2MESG('F','ALGORITH17_31',1,'FREQ',2,VALI,0,0.D0)
        ENDIF
C
C ----- REMPLISSAGE
C
C ---   MASS_GENE : DIRECT
        CALL REMP81(NOMRES//'.MAEL_MASS',LMASS,BASMOD,NBMOD)
      
C ---   RIGI_GENE : LES CALCULER A PARTIR DE MASSE_GENE ET FREQ
        DO 30 IMOD=1,NBMOD
          ZR(LRIGI-1+IMOD) = 4*PI**2*ZR(LRIGI-1+IMOD)**2
     &                       *ZR(LMASS-1+IMOD)
 30     CONTINUE
        CALL REMP81(NOMRES//'.MAEL_RAID',LRIGI,BASMOD,NBMOD)
      
C ---   AMOR_GENE : LES CALCULER APARTIR D'AMOR_REDUIT, MASSE ET RIGI
        IF (IOCA.NE.0) THEN
          DO 40 IMOD=1,NBMOD
            ZR(LAMOR-1+IMOD) = 2*ZR(LAMOR-1+IMOD)*SQRT(ZR(LRIGI-1+IMOD)*
     &                         ZR(LMASS-1+IMOD))
 40       CONTINUE
          CALL REMP81(NOMRES//'.MAEL_AMOR',LAMOR,BASMOD,NBMOD)
        ENDIF
C
C ---   REMPLLISSAGE DES FORCES D'INERTIES
C
        CALL WKVECT(NOMRES//'.MAEL_INER_REFE','G V K24',2,LDREF)
        ZK24(LDREF)=BASMOD
        ZK24(LDREF+1)='        '
        CALL WKVECT(NOMRES//'.MAEL_INER_VALE','G V R',3*NBMOD,LDRES)
        
C ---   LE VEC DES MASSES EFFE EST REMPLI A 0, ON EMET UNE ALARME
C       (ON NE PEUT PAS LE REMPLIR, ON NE CONNAIT PAS LA MAT DE MASSE)
        CALL U2MESG('A','ALGORITH17_32',1,' ',0,1,0,0.D0)
        DO 50 IMOD=1,3*NBMOD
          ZR(LDRES-1+IMOD) = 0.D0
 50     CONTINUE
        

      ENDIF
C
C --- COMPATIBILITE AVEC SD MACR_ELEM_STAT
C
      CALL COMP81(NOMRES, BASMOD, RAID, MAILLA)

C --- MENAGE
      CALL JEDETR('&&OP0081.MASS')
      CALL JEDETR('&&OP0081.RIGI')
      CALL JEDETR('&&OP0081.AMOR')

      END
