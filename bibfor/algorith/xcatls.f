      SUBROUTINE XCATLS(NDIM,GEOFIS,CALLST,JLTSV,JLTSL,JLNSV,JLNSL,
     &                  NOMA,VECT1,VECT2,NOEUD,A,B,R,COTE)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 27/09/2011   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C
      IMPLICIT NONE
      INTEGER       NDIM,JLTSV,JLTSL,JLNSV,JLNSL
      CHARACTER*8   NOMA,COTE
      CHARACTER*16  GEOFIS
      LOGICAL       CALLST
      REAL*8        VECT1(3),VECT2(3),NOEUD(3),A,B,R

C ----------------------------------------------------------------------
C      CALCUL INITIAL DES LEVEL-SETS POUR LES FORMES PRE-DEFINIES
C      (CATALGOUE DE FISSURES)
C
C IN :
C  NDIM   : DIMENSION DU MAILLAGE
C  GEOFIS : GEOMETRIE DE LA FISSURE
C  CALLST : LOGICAL POUR SAVOIR SI IL FAUT CALCULER LA LST
C  NOMA   : OBJET MAILLAGE
C  A,B,R,NOEUD,COTE,VECT1,VECT2 :
C
C IN/OUT :
C  JLTSV  : ADRESSE POUR LES VALEURS DE LA LST
C  JLTSL  : ADRESSE POUR LE LOGICAL DE LA LST
C  JLNSV  : ADRESSE POUR LES VALEURS DE LA LSN
C  JLNSL  : ADRESSE POUR LE LOGICAL DE LA LSN

C            QUANTITES DEFINISSANT LA GEO DE LA FISS
C     ------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      INTEGER       INO,NBNO,JCOOR,IRET,I,J,IBID
      REAL*8        P2D(2),P3D(3),NORME,VECT3(3),MAT(3,3),PLOC(3)
      REAL*8        H
      REAL*8        NORI(3),NEXT(3),NMIL(3),VSEG(3),NSEG
      CHARACTER*8   K8BID,FISS
      CHARACTER*16  VALK(3),TYPDIS,K16BID
C
      CALL JEMARQ()

      CALL GETRES(FISS,K16BID,K16BID)
      CALL DISMOI('F','TYPE_DISCONTINUITE',FISS,'FISS_XFEM',
     &                                                 IBID,TYPDIS,IRET)

      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNO,K8BID,IRET)
      CALL JEVEUO(NOMA//'.COORDO    .VALE','L',JCOOR)

C     VERIFICATIONS (CAR REGLES INMPOSSIBLES DANS CAPY)
      IF (.NOT.CALLST) THEN
        IF (GEOFIS.EQ.'CYLINDRE'.OR.
     &      GEOFIS.EQ.'DEMI_PLAN'.OR.
     &      GEOFIS.EQ.'SEGMENT'.OR.
     &      GEOFIS.EQ.'DEMI_DROITE') THEN
          VALK(1) = 'INTERFACE'
          VALK(2) =  GEOFIS
          VALK(3) = 'FISSURE'
          CALL U2MESK('F','XFEM_23',3,VALK)
        ENDIF
      ELSEIF (CALLST) THEN
        IF (GEOFIS.EQ.'DROITE'.OR.
     &      GEOFIS.EQ.'ENTAILLE') THEN
          VALK(1) = 'FISSURE'
          VALK(2) =  GEOFIS
          VALK(3) = 'INTERFACE'
          CALL U2MESK('F','XFEM_23',3,VALK)
        ENDIF
      ENDIF

C     CAS ENTAILLE : ON SE RAMENE AU CAS D'UN RECTANGLE A BORDS ARONDIS
      IF (GEOFIS.EQ.'ENTAILLE') B=R

      IF (GEOFIS.EQ.'ELLIPSE'.OR.GEOFIS.EQ.'RECTANGLE'.OR.
     &    GEOFIS.EQ.'CYLINDRE'.OR.GEOFIS.EQ.'ENTAILLE') THEN

C       ----------------------------------------------------------------
C         TRAITEMENT DES CAS ELLIPSE, RECTANGLE, CYLINDRE ET ENTAILLE
C       ----------------------------------------------------------------

C       VECT1  = VECT DU DEMI-GRAND AXE 
C       VECT2  = VECT DU DEMI-PETIT AXE
C       NOEUD  = CENTRE DE L'ELLIPSE / RECTANGLE /ENTAILLE
C       A      =  DEMI-GRAND AXE (OU DEMI-LONGUEUR)
C       B      =  DEMI-PETIT AXE
C       SI FISSURE :
C       COTE   =  COTE DE LA FISSURE ('IN' OU 'OUT')

        DO 20 INO=1,NBNO

C         COORDONNEES 3D DU POINT DANS LE REPERE GLOBAL
          DO 21 I=1,NDIM
            P3D(I)=ZR(JCOOR-1+3*(INO-1)+I)
 21       CONTINUE

C         BASE LOCALE : (VECT1,VECT2,VECT3)
          CALL NORMEV(VECT1,NORME)
          CALL NORMEV(VECT2,NORME)
          CALL PROVEC(VECT1,VECT2,VECT3)

C         MATRICE DE PASSAGE LOC-GLOB
          DO 22 I=1,NDIM
            MAT(1,I)=VECT1(I)
            MAT(2,I)=VECT2(I)
            MAT(3,I)=VECT3(I)
 22       CONTINUE

C         PROJECTION DU POINT 3D DANS LE REPERE LOCAL LIE A L'ELLIPSE
          DO 23 I=1,NDIM
            PLOC(I)=0.D0
            DO 24 J=1,NDIM
              PLOC(I) = PLOC(I) + MAT(I,J) * (P3D(J)-NOEUD(J))
 24         CONTINUE
 23       CONTINUE

C         DISTANCE DU POINT A L'ELLIPSE / RECTANGLE
          IF (GEOFIS.EQ.'ELLIPSE'.OR.GEOFIS.EQ.'CYLINDRE') THEN
            CALL DISELL(PLOC,A,B,H)
          ELSEIF (GEOFIS.EQ.'RECTANGLE'.OR.GEOFIS.EQ.'ENTAILLE') THEN
            CALL DISREC(PLOC,A,B,R,H)
          ENDIF

C         STOCKAGE DES LEVEL SETS
          IF (TYPDIS.EQ.'FISSURE') THEN

            ZL(JLNSL-1+(INO-1)+1)=.TRUE.
            ZL(JLTSL-1+(INO-1)+1)=.TRUE.

            IF (GEOFIS.EQ.'ELLIPSE'.OR.GEOFIS.EQ.'RECTANGLE') THEN
            
C             LEVEL SET NORMALE CORRESPOND A LA 3EME COORDONNEE LOCALE
              ZR(JLNSV-1+(INO-1)+1)=PLOC(3)

C             SI LA FISSURE EST A L'EXTERIEUR DE L'ELLIPSE, ON PREND
C             L'OPPOSEE DE H (PAR DEFAUT, LA FISSURE EST A L'INTERIEUR)
              IF (COTE.EQ.'OUT') H = -1.D0 * H

C             LEVEL SET TANGENTE CORRESPOND A LA DISTANCE DU POINT
C             A L'ELLIPSE / RECTANGLE DANS LE PLAN (VECT1,VECT2)
              ZR(JLTSV-1+(INO-1)+1)=H

            ELSEIF (GEOFIS.EQ.'CYLINDRE') THEN

              ZR(JLTSV-1+(INO-1)+1) = PLOC(3)
              ZR(JLNSV-1+(INO-1)+1) = H

            ENDIF

          ELSEIF (TYPDIS.EQ.'INTERFACE') THEN

            ZR(JLNSV-1+(INO-1)+1)= H
            ZL(JLNSL-1+(INO-1)+1)=.TRUE.

C           LEVEL SET TANGENTE PAS DEFINIE
            CALL ASSERT(.NOT.CALLST)
            ZR(JLTSV-1+(INO-1)+1)= -1.D0
            ZL(JLTSL-1+(INO-1)+1)=.TRUE.

          ENDIF

 20     CONTINUE

      ELSEIF (GEOFIS.EQ.'DEMI_PLAN') THEN

C       ----------------------------------------------------------------
C                  TRAITEMENT DU CAS DEMI-PLAN
C       ----------------------------------------------------------------

C       VECT1 = VECT NORMAL AU PLAN DE FISSURE
C       VECT2 = VECT DANS LE PLAN DE FISSURE
C        (NORMALE AU FOND : DIRECTION DE PROPAGATION POTENTIELLE)
C       NOEUD = NOEUD DU FOND DE FISSURE

        DO 29 INO=1,NBNO

C         COORDONNEES 3D DU POINT DANS LE REPERE GLOBAL
          DO 25 I=1, NDIM
            P3D(I)=ZR(JCOOR-1+3*(INO-1)+I)
 25       CONTINUE

C         BASE LOCALE : (VECT2,VECT3,VECT1)
          CALL NORMEV(VECT1,NORME)
          CALL NORMEV(VECT2,NORME)
          CALL PROVEC(VECT1,VECT2,VECT3)

C         MATRICE DE PASSAGE LOC-GLOB
          DO 26 I=1,3
            MAT(1,I)=VECT2(I)
            MAT(2,I)=VECT3(I)
            MAT(3,I)=VECT1(I)
 26       CONTINUE

C         PROJECTION DU POINT 3D DANS LE REPERE LOCAL
          DO 27 I=1,3
            PLOC(I)=0.D0
            DO 28 J=1,3
              PLOC(I) = PLOC(I) + MAT(I,J) * (P3D(J)-NOEUD(J))
 28         CONTINUE
 27       CONTINUE

C         LEVEL SET NORMALE CORRESPOND A LA 3EME COORDONNEE LOCALE
          ZR(JLNSV-1+(INO-1)+1)= PLOC(3)
          ZL(JLNSL-1+(INO-1)+1)=.TRUE.

C         LEVEL SET TANGENTE CORRESPOND A LA 1ERE COORDONNEE LOCALE
          ZR(JLTSV-1+(INO-1)+1)= PLOC(1)
          ZL(JLTSL-1+(INO-1)+1)=.TRUE.

 29     CONTINUE

      ELSEIF (GEOFIS.EQ.'SEGMENT') THEN

C       ----------------------------------------------------------------
C                  TRAITEMENT DU CAS SEGMENT
C       ----------------------------------------------------------------

C       VECT1 = NOEUD DU FOND ORIGINE
C       VECT2 = NOEUD DU FOND EXTREMITE

        DO 100 I=1,3
          NORI(I) = VECT1(I)
          NEXT(I) = VECT2(I)
          NMIL(I) = (NORI(I) + NEXT(I))/2
          VSEG(I) = NEXT(I)-NORI(I)
 100    CONTINUE

        NSEG = SQRT(VSEG(1)**2 + VSEG(2)**2 + VSEG(3)**2)

        DO 50 INO=1,NBNO

C         COORDONNEES 2D DU POINT DANS LE REPERE GLOBAL
          DO 51 I=1, NDIM
            P2D(I)=ZR(JCOOR-1+3*(INO-1)+I)
 51       CONTINUE

          VECT3(1) = 0.D0
          VECT3(2) = 0.D0
          VECT3(3) = 1.D0

C         BASE LOCALE : (VSEG,VECT2)
          CALL NORMEV(VSEG,NORME)
          CALL PROVEC(VECT3,VSEG,VECT2)

C         MATRICE DE PASSAGE LOC-GLOB
          DO 52 I=1,2
            MAT(1,I)=VSEG(I)
            MAT(2,I)=VECT2(I)
 52       CONTINUE

C         PROJECTION DU POINT 2D DANS LE REPERE LOCAL
C         POSITIONNE AU CENTRE DU SEGEMENT
          DO 53 I=1,2
            PLOC(I)=0.D0
            DO 54 J=1,2
              PLOC(I) = PLOC(I) + MAT(I,J) * (P2D(J)-NMIL(J))
 54         CONTINUE
 53       CONTINUE

C         LEVEL SET NORMALE CORRESPOND A LA 2EME COORDONNEE LOCALE
          ZR(JLNSV-1+(INO-1)+1)= PLOC(2)
          ZL(JLNSL-1+(INO-1)+1)=.TRUE.

C         LEVEL SET TANGENTE EST DEFINIE PAR :
          ZR(JLTSV-1+(INO-1)+1)= ABS(PLOC(1)) - NSEG/2
          ZL(JLTSL-1+(INO-1)+1)=.TRUE.

 50     CONTINUE


      ELSEIF (GEOFIS.EQ.'DEMI_DROITE'.OR.
     &        GEOFIS.EQ.'DROITE') THEN

C       ----------------------------------------------------------------
C                   TRAITEMENT DES CAS DEMI_DROITE ET DROITE
C       ----------------------------------------------------------------

C       POUR LA DEMI-DROITE :
C         VECT1 = VECTEUR DIRECTEUR DE LA DEMI-DROITE 
C                 DANS LA DIRECTION DE PROPA 
C         NOEUD = NOEUD DU FOND DE FISSURE

C       POUR LA DROITE :
C         VECT1 = VECTEUR DIRECTEUR DE LA  DROITE
C         NOEUD = UN POINT DE LA DROITE

        DO 35 INO=1,NBNO

C         COORDONNEES 2D DU POINT DANS LE REPERE GLOBAL
          DO 36 I=1, NDIM
            P2D(I)=ZR(JCOOR-1+3*(INO-1)+I)
 36       CONTINUE

          VECT3(1) = 0.D0
          VECT3(2) = 0.D0
          VECT3(3) = 1.D0

C         BASE LOCALE : (VECT1,VECT2)
          CALL NORMEV(VECT1,NORME)
          CALL PROVEC(VECT3,VECT1,VECT2)

C         MATRICE DE PASSAGE LOC-GLOB
          DO 37 I=1,2
            MAT(1,I)=VECT1(I)
            MAT(2,I)=VECT2(I)
 37       CONTINUE

C         PROJECTION DU POINT 2D DANS LE REPERE LOCAL
          DO 38 I=1,2
            PLOC(I)=0.D0
            DO 39 J=1,2
              PLOC(I) = PLOC(I) + MAT(I,J) * (P2D(J)-NOEUD(J))
 39         CONTINUE
 38       CONTINUE

C         LEVEL SET NORMALE CORRESPOND A LA 2EME COORDONNEE LOCALE
          ZR(JLNSV-1+(INO-1)+1)= PLOC(2)
          ZL(JLNSL-1+(INO-1)+1)=.TRUE.

          IF (GEOFIS.EQ.'DEMI_DROITE') THEN

C           LEVEL SET TANGENTE CORRESPOND A LA 1ERE COORDONNEE LOCALE
            ZR(JLTSV-1+(INO-1)+1)= PLOC(1)
            ZL(JLTSL-1+(INO-1)+1)=.TRUE.

          ELSEIF (GEOFIS.EQ.'DROITE') THEN

C           LEVEL SET TANGENTE PAS DEFINIE
            CALL ASSERT(.NOT.CALLST)
            ZR(JLTSV-1+(INO-1)+1)= -1.D0
            ZL(JLTSL-1+(INO-1)+1)=.TRUE.
          
          ENDIF

 35     CONTINUE

      ENDIF

      CALL JEDEMA()
      END
