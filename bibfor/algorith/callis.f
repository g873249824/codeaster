      SUBROUTINE  CALLIS (NOMRES)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 05/07/2005   AUTEUR CIBHHPD L.SALMONA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT NONE
C***********************************************************************
C    P. RICHARD     DATE 13/10/92
C-----------------------------------------------------------------------
C  BUT:      < CALCUL DES LIAISONS >
C
C  CALCULER LES NOUVELLES MATRICE DE LIAISON EN TENANT COMPTE
C   DE L'ORIENTATION DES SOUS-STRUCTURES
C  ON DETERMINE LES MATRICE DE LIAISON, LES DIMENSIONS DE CES MATRICES
C  ET LE PRONO ASSOCIE
C
C  VERIFICATION DE LA COHERENCE DES INTERFACE EN VIS-A-VIS
C
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
C
C NOMRES   /I/: NOM UTILISATEUR DU RESULTAT
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32 JEXNOM, JEXNUM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CHARACTER*1    K1BID,KB
      CHARACTER*6    PGC
      CHARACTER*8    NOMRES,OPTION
      CHARACTER*24   FAMLI,FMLIA,PROMLI
      CHARACTER*24   FPLI1O,FPLI2O,FPLI1N,FPLI2N,INT1,INT2
      CHARACTER*8    SST1,SST2,INTF1,INTF2,MOD1,MOD2,
     &               LINT1,LINT2,K8BID,MA1,MA2,MATPRJ
      CHARACTER*16   MOTCLE(2)  
      INTEGER        NBLIS,LDPMLI,NBBLOC,LLLIA,IAD,NBLIG,I,J,IRET,
     &               IBID,NBNO1,NBNO2,NBMA1,NBMA2,IAGMA1,IAGMA2,
     &               IER,K,IDMAI1,IDMAI2,LLINT1,LLINT2,
     &               IINC,IREP11,IREP12,IREP21,IREP22,IOPT
      REAL*8         UN,MOINS1,RBID
C
C-----------------------------------------------------------------------
      DATA PGC /'CALLIS'/
      DATA UN,MOINS1 /1.0D+00,-1.0D+00/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C   NOM FAMILLE DEFINITION DES LIAISONS
C
C--------------NOMRES EST LE NOM DU MODELE GENERALISE
      FAMLI=NOMRES//'      .MODG.LIDF'
      FMLIA=NOMRES//'      .MODG.LIMA'
      PROMLI=NOMRES//'      .MODG.LIPR'
      MATPRJ='MATPROJ '

C
C  MINI-PROFNO DES LIAISON ORIENTEES ET NON ORIENTEE
C
      FPLI1O='&&'//'PGC.PROF.LI1O'
      FPLI2O='&&'//'PGC.PROF.LI2O'
      FPLI1N='&&'//'PGC.PROF.LI1N'
      FPLI2N='&&'//'PGC.PROF.LI2N'
C
C-----------------RECUPERATION DU NOMBRE DE LIAISONS--------------------
C             ET DECLARATION DES FAMILLES
C
      CALL JELIRA(FAMLI,'NMAXOC',NBLIS,K1BID)
C
      CALL WKVECT(PROMLI,'G V IS',NBLIS*9,LDPMLI)
C
C  NOM FAMILLE VOLATILE POUR PROFNO MATRICES ORIENTEES
C
      CALL JECREC(FPLI1N,'V V I','NU','DISPERSE','VARIABLE',NBLIS)
      CALL JECREC(FPLI2N,'V V I','NU','DISPERSE','VARIABLE',NBLIS)
      CALL JECREC(FPLI1O,'V V I','NU','DISPERSE','VARIABLE',NBLIS)
      CALL JECREC(FPLI2O,'V V I','NU','DISPERSE','VARIABLE',NBLIS)
C
C------------------------BOUCLE SUR LES LIAISON-------------------------
C    POUR COMPTAGE BLOC ET STOCKAGE DIMENSION ET AUTRE
C
C
C  FAMILLE A CREER POUR MATRICE LIAISON ORIENTEES
C
      CALL JECREC(FMLIA,'G V R','NU','DISPERSE','VARIABLE',NBLIS*3)
C
      NBBLOC=0
C
      DO 10 I=1,NBLIS

C   *******************************************
C  RECUPERATION DES DONNEES SOUS-STRUCTURES
C   *******************************************

C ------------- LA DEFINITION DE LA LIAISON
        CALL JEVEUO(JEXNUM(FAMLI,I),'L',LLLIA)
        SST1=ZK8(LLLIA)
        INTF1=ZK8(LLLIA+1)
        SST2=ZK8(LLLIA+2)
        INTF2=ZK8(LLLIA+3)

C ------------- ON VERIFIE SI MODES REDUITS OU PAS
        CALL GETVTX('LIAISON','OPTION',I,1,1,OPTION,IOPT)
        
        IF (OPTION.EQ.'CLASSIQU') THEN

C
C-------------LE NOM DES MODELES
C
          CALL MGUTDM(NOMRES,SST1,IBID,'NOM_MODELE  ',IBID,MOD1)
          CALL MGUTDM(NOMRES,SST2,IBID,'NOM_MODELE  ',IBID,MOD2)
C
C-------------LE NOM DES MAILLAGES
          CALL DISMOI('F','NOM_MAILLA',MOD1,'MODELE',IBID,MA1,IER) 
          CALL DISMOI('F','NOM_MAILLA',MOD2,'MODELE',IBID,MA2,IER) 
C
C--------------LES INTERFACES AMONT DES SOUS-STRUCTURES
          CALL MGUTDM(NOMRES,SST1,IBID,'NOM_LIST_INTERF',IBID,LINT1)
          CALL MGUTDM(NOMRES,SST2,IBID,'NOM_LIST_INTERF',IBID,LINT2)

C--------------LES NOMBRES DES NOEUDS DES INTERFACES
          INT1=LINT1//'.IDC_LINO'
          CALL JENONU(JEXNOM(INT1(1:13)//'NOMS',INTF1),IBID)
          CALL JELIRA(JEXNUM(INT1,IBID),'LONMAX',NBNO1,K8BID)
C      
          INT2=LINT2//'.IDC_LINO'
          CALL JENONU(JEXNOM(INT2(1:13)//'NOMS',INTF2),IBID)
          CALL JELIRA(JEXNUM(INT2,IBID),'LONMAX',NBNO2,K8BID)

C--------------LES LISTES DES NUMEROS DES NOEUDS DES INTERFACES
          CALL JENONU(JEXNOM(LINT1 //'.IDC_NOMS',INTF1),IBID)
          CALL JEVEUO(JEXNUM(LINT1 //'.IDC_LINO',IBID),'L',
     &                LLINT1)
     
          CALL JENONU(JEXNOM(LINT2 //'.IDC_NOMS',INTF2),IBID)
          CALL JEVEUO(JEXNUM(LINT2 //'.IDC_LINO',IBID),'L',
     &                LLINT2)
C

C  *******************************************
C  CALCUL DES MATRICES DE LIAISON
C  *******************************************

C  MATRICE DE LIAISON 1
C
          IAD=LDPMLI+(I-1)*9
          CALL LIACAR(NOMRES,SST1,INTF1,FPLI1N,FPLI1O,I,ZI(IAD))
          ZI(LDPMLI+(I-1)*9+2)=NBBLOC+1
          NBBLOC=NBBLOC+1

C  MATRICE DE LIAISON 2
C
          IAD=LDPMLI+(I-1)*9+3
          CALL LIACAR(NOMRES,SST2,INTF2,FPLI2N,FPLI2O,I,ZI(IAD))
          ZI(LDPMLI+(I-1)*9+5)=NBBLOC+1
          NBBLOC=NBBLOC+1
C
C  *******************************************
C  RECUPERATION DES DONNEES INCOMPATIBILITE
C  *******************************************
          IINC=0
C       On teste si la liaison est incompatible        
          CALL GETVTX('LIAISON','GROUP_MA_MAIT_1',I,1,1,K8BID,IREP11)
          CALL GETVTX('LIAISON','MAILLE_MAIT_1',I,1,1,K8BID,IREP12)
          CALL GETVTX('LIAISON','GROUP_MA_MAIT_2',I,1,1,K8BID,IREP21)
          CALL GETVTX('LIAISON','MAILLE_MAIT_2',I,1,1,K8BID,IREP22)
          IF ((IREP11.NE.0).OR.(IREP12.NE.0)) THEN
            MOTCLE(1) = 'MAILLE_MAIT_1'
            MOTCLE(2) = 'GROUP_MA_MAIT_1'
            CALL PRJLIS(MOD1,MA1,MOD2,MA2,NBNO1,NBNO2,MOTCLE,LINT1,
     &            LINT2,INTF1,INTF2,FPLI1O,FPLI2O,ZI(LDPMLI+(I-1)*9),
     &            ZI(LDPMLI+(I-1)*9+3),I,MATPRJ,NOMRES,SST1,SST2)
            NBLIG=ZI(LDPMLI+(I-1)*9+3)
            IINC=1
          ELSEIF ((IREP21.NE.0).OR.(IREP22.NE.0)) THEN
            MOTCLE(1) = 'MAILLE_MAIT_2'
            MOTCLE(2) = 'GROUP_MA_MAIT_2'
            CALL PRJLIS(MOD2,MA2,MOD1,MA1,NBNO2,NBNO1,MOTCLE,LINT2,
     &            LINT1,INTF2,INTF1,FPLI2O,FPLI1O,ZI(LDPMLI+(I-1)*9+3),
     &                  ZI(LDPMLI+(I-1)*9),I,MATPRJ,NOMRES,SST2,SST1)
            NBLIG=ZI(LDPMLI+(I-1)*9)
            IINC=2
          ELSE
            NBLIG=ZI(LDPMLI+(I-1)*9)
          ENDIF
C
C
C  MATRICE LAGRANGE-LAGRANGE
C
          IAD=LDPMLI+(I-1)*9+6
          ZI(IAD)=NBLIG
          ZI(IAD+1)=2
          ZI(IAD+2)=NBBLOC+1
          NBBLOC=NBBLOC+1
          
C-------------------------DETERMINATION MATRICES ORIENTEES--------------
C
C   ROTATION DES MATRICES DE LIAISON DE LA LIAISON COURANTE
C
          IF (IINC.EQ.0) THEN
            CALL VERILI(NOMRES,I,FPLI1O,FPLI2O,IRET)
            IF(IRET.GT.0) THEN
              CALL UTDEBM('F',PGC,
     &              'ARRET SUR PROBLEME COHERENCE INTERFACE')
              CALL UTFINM
            ENDIF
            IAD=LDPMLI+(I-1)*9
            CALL ROTLIS(NOMRES,FMLIA,ZI(IAD),FPLI1N,FPLI1O,I,SST1,
     &                  INTF1,UN)
            IAD=LDPMLI+(I-1)*9+3
            CALL ROTLIS(NOMRES,FMLIA,ZI(IAD),FPLI2N,FPLI2O,I,
     &                  SST2,INTF2,MOINS1)
            
          ELSE
            IF (IINC.EQ.1) THEN
              CALL INCLIS(NOMRES,SST1,SST2,INTF1,INTF2,FMLIA,FPLI1N,
     &                    FPLI2N,FPLI1O,FPLI2O,ZI(LDPMLI+(I-1)*9),
     &                    ZI(LDPMLI+(I-1)*9+3),I,MATPRJ)
            ELSEIF (IINC.EQ.2) THEN
              CALL INCLIS(NOMRES,SST2,SST1,INTF2,INTF1,FMLIA,FPLI2N,
     &                    FPLI1N,FPLI2O,FPLI1O,ZI(LDPMLI+(I-1)*9+3),
     &                    ZI(LDPMLI+(I-1)*9),I,MATPRJ)
            ENDIF
            CALL JEDETR(MATPRJ)
          ENDIF  
C
C  MATRICE LAGRANGE-LAGRANGE
C
          IAD=LDPMLI+(I-1)*9+6
          CALL INILAG(FMLIA,ZI(IAD))
C
        ELSE
        
C  MATRICE DE LIAISON 1
C
        IAD=LDPMLI+(I-1)*9
        ZI(LDPMLI+(I-1)*9+2)=NBBLOC+1
        CALL LIARED(NOMRES,FMLIA,ZI(IAD),FPLI1O,I,SST1,INTF1,UN)
        NBBLOC=NBBLOC+1
C
C  MATRICE DE LIAISON 2
C
        IAD=LDPMLI+(I-1)*9+3
        ZI(LDPMLI+(I-1)*9+5)=NBBLOC+1
        CALL LIARED(NOMRES,FMLIA,ZI(IAD),FPLI2O,I,SST2,INTF2,MOINS1)
        NBBLOC=NBBLOC+1
C
C  MATRICE LAGRANGE-LAGRANGE
C
        NBLIG=ZI(LDPMLI+(I-1)*9)
        IAD=LDPMLI+(I-1)*9+6
        ZI(IAD)=NBLIG
        ZI(IAD+1)=2
        ZI(IAD+2)=NBBLOC+1
        NBBLOC=NBBLOC+1
        CALL INILAG(FMLIA,ZI(IAD))
C
        ENDIF
C
  10  CONTINUE
C

C   DESTRUCTIONS COLLECTIONS VOLATILES DE TRAVAIL
C
      CALL JEDETR(FPLI1O)
      CALL JEDETR(FPLI2O)
      CALL JEDETR(FPLI1N)
      CALL JEDETR(FPLI2N)
C

 9999 CONTINUE
      CALL JEDEMA()
      END
