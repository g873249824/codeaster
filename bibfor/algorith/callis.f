      SUBROUTINE  CALLIS (NOMRES)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/05/2004   AUTEUR NICOLAS O.NICOLAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C***********************************************************************
C    P. RICHARD     DATE 13/10/92
C-----------------------------------------------------------------------
C  BUT:      < CALCUL DES LIAISONS >
      IMPLICIT NONE
C
C  CALCULER LES NOUVELLES MATRICE DE LIAISON EN TENANT COMPTE
C   DE L'ORIENTATION DES SOUS-STRUCTURES
C  ON DETERMINE LES MATRICE DE LIAISON, LES DIMENSIONS DE CES MATRICES
C  ET LE PRONO ASSOCIE
C
C  VERIFICATION DE LA COHERENCE DES INTERFACE EN VIS-A-VIS
C
C-----------------------------------------------------------------------
C
C NOMRES   /I/: NOM UTILISATEUR DU RESULTAT
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32  JEXNUM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CHARACTER*1    K1BID
      CHARACTER*6    PGC
      CHARACTER*8    NOMRES
      CHARACTER*24   FAMLI,FMLIA,PROMLI
      CHARACTER*24   FPLI1O,FPLI2O,FPLI1N,FPLI2N
      CHARACTER*8    SST1,SST2,INTF1,INTF2
      LOGICAL        PBLOG
      INTEGER        NBLIS,LDPMLI,NBBLOC,LLLIA,IAD,NBLIG,I,IRET
      REAL*8         UN,MOINS1
C
C-----------------------------------------------------------------------
      DATA PGC /'CALLIS'/
      DATA UN,MOINS1 /1.0D+00,-1.0D+00/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
      PBLOG=.FALSE.
C
C   NOM FAMILLE DEFINITION DES LIAISONS
C
      FAMLI=NOMRES//'      .MODG.LIDF'
      FMLIA=NOMRES//'      .MODG.LIMA'
      PROMLI=NOMRES//'      .MODG.LIPR'
C
C  MINI-PROFNO DES LIAISON ORIENTEES ET NON ORIENTEE
C
      FPLI1O='&&'//'PGC.PROF.LI1O'
      FPLI2O='&&'//'PGC.PROF.LI2O'
      FPLI1N='&&'//'PGC.PROF.LI1N'
      FPLI2N='&&'//'PGC.PROF.LI2N'
C
C-----------------RECUPERATION DU NOMBRE DE LIAISONS--------------------
C             ET DECLARATION DES FAMILLES
C
      CALL JELIRA(FAMLI,'NMAXOC',NBLIS,K1BID)
C
      CALL WKVECT(PROMLI,'G V IS',NBLIS*9,LDPMLI)
C
C  NOM FAMILLE VOLATILE POUR PROFNO MATRICES ORIENTEES
C
      CALL JECREC(FPLI1N,'V V I','NU','DISPERSE','VARIABLE',NBLIS)
      CALL JECREC(FPLI2N,'V V I','NU','DISPERSE','VARIABLE',NBLIS)
      CALL JECREC(FPLI1O,'V V I','NU','DISPERSE','VARIABLE',NBLIS)
      CALL JECREC(FPLI2O,'V V I','NU','DISPERSE','VARIABLE',NBLIS)
C
C------------------------BOUCLE SUR LES LIAISON-------------------------
C    POUR COMPTAGE BLOC ET STOCKAGE DIMENSION ET AUTRE
C
C
      NBBLOC=0
      DO 10 I=1,NBLIS
C   RECUPERATION DE LA DEFINITION DE LA LIAISON
        CALL JEVEUO(JEXNUM(FAMLI,I),'L',LLLIA)
        SST1=ZK8(LLLIA)
        INTF1=ZK8(LLLIA+1)
        SST2=ZK8(LLLIA+2)
        INTF2=ZK8(LLLIA+3)
C
C  MATRICE DE LIAISON 1
C
        IAD=LDPMLI+(I-1)*9
        CALL LIACAR(NOMRES,SST1,INTF1,FPLI1N,FPLI1O,I,ZI(IAD))
        ZI(LDPMLI+(I-1)*9+2)=NBBLOC+1
        NBBLOC=NBBLOC+1
C
C  MATRICE DE LIAISON 2
C
        IAD=LDPMLI+(I-1)*9+3
        CALL LIACAR(NOMRES,SST2,INTF2,FPLI2N,FPLI2O,I,ZI(IAD))
        ZI(LDPMLI+(I-1)*9+5)=NBBLOC+1
        NBBLOC=NBBLOC+1
C
C  MATRICE LAGRANGE-LAGRANGE
C
        NBLIG=ZI(LDPMLI+(I-1)*9)
        IAD=LDPMLI+(I-1)*9+6
        ZI(IAD)=NBLIG
        ZI(IAD+1)=2
        ZI(IAD+2)=NBBLOC+1
        NBBLOC=NBBLOC+1
C
C
C VERIFICATION COHERENCE LIAISON COURANTE
C
        CALL VERILI(NOMRES,I,FPLI1O,FPLI2O,IRET)
C
        IF(IRET.GT.0) PBLOG=.TRUE.
C
10    CONTINUE
C
      IF(PBLOG) THEN
        CALL UTDEBM('F',PGC,
     &'ARRET SUR PROBLEME COHERENCE INTERFACE')
        CALL UTFINM
      ENDIF
C
C-------------------------DETERMINATION MATRICES ORIENTEES--------------
C
C
C  FAMILLE A CREER POUR MATRICE LIAISON ORIENTEES
C
      CALL JECREC(FMLIA,'G V R','NU','DISPERSE','VARIABLE',NBBLOC)
C
C
      DO 20 I=1,NBLIS
C   RECUPERATION DE LA DEFINITION DE LA LIAISON
        CALL JEVEUO(JEXNUM(FAMLI,I),'L',LLLIA)
        SST1=ZK8(LLLIA)
        INTF1=ZK8(LLLIA+1)
        SST2=ZK8(LLLIA+2)
        INTF2=ZK8(LLLIA+3)
C
C   ROTATION DES MATRICES DE LIAISON DE LA LIAISON COURANTE
C
        IAD=LDPMLI+(I-1)*9
        CALL ROTLIS(NOMRES,FMLIA,ZI(IAD),FPLI1N,FPLI1O,I,SST1,INTF1,UN)
        IAD=LDPMLI+(I-1)*9+3
        CALL ROTLIS(NOMRES,FMLIA,ZI(IAD),FPLI2N,FPLI2O,I,
     &              SST2,INTF2,MOINS1)
C
C  MATRICE LAGRANGE-LAGRANGE
C
        IAD=LDPMLI+(I-1)*9+6
        CALL INILAG(FMLIA,ZI(IAD))
C
C
20    CONTINUE
C
C
C
C
C  SAUVEGARDE COLLECTION PAR INTERMEDIAIRE DU PREMIER OBJET
C
C
C   DESTRUCTIONS COLLECTIONS VOLATILES DE TRAVAIL
C
      CALL JEDETR(FPLI1O)
      CALL JEDETR(FPLI2O)
      CALL JEDETR(FPLI1N)
      CALL JEDETR(FPLI2N)
C
C
 9999 CONTINUE
      CALL JEDEMA()
      END
