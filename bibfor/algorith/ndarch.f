      SUBROUTINE NDARCH(RESULT,NUMINS,SDDISC,FORCE ,VALINC,
     &                  SDDYNA,NUMARC,INSTAP)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/12/2009   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      LOGICAL      FORCE
      INTEGER      NUMINS,NUMARC
      CHARACTER*8  RESULT
      CHARACTER*19 SDDISC,SDDYNA
      CHARACTER*19 VALINC(*)
      REAL*8       INSTAP
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C ARCHIVAGE DES CHAMPS POUR LA DYNAMIQUE
C
C ----------------------------------------------------------------------
C
C
C IN  RESULT : NOM UTILISATEUR DU CONCEPT RESULTAT
C IN  NUMINS : NUMERO DE L'INSTANT
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  FORCE  : VRAI SI ON SOUHAITE FORCER L'ARCHIVAGE
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE
C IN  NUMARC : NUMERO DE L'ARCHIVAGE
C IN  INSTAP : INSTANT COURANT
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      IRET
      CHARACTER*19 VITPLU,ACCPLU
      CHARACTER*24 CHAMP
      LOGICAL      DIINCL 
      LOGICAL      NDYNLO,LEXGE,LMUAP
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- FONCTIONNALITES ACTIVEES
C
      LEXGE  = NDYNLO(SDDYNA,'EXPL_GENE')
      LMUAP  = NDYNLO(SDDYNA,'MULTI_APPUI')
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VALINC,'VALINC','VITPLU',VITPLU)
      CALL NMCHEX(VALINC,'VALINC','ACCPLU',ACCPLU)               
C
C --- VITESSES
C
      IF (DIINCL(SDDISC,NUMINS,'VITE',FORCE)) THEN
        CALL RSEXCH(RESULT,'VITE',NUMARC,CHAMP,IRET)
        IF (IRET.LE.100) THEN
          CALL COPISD('CHAMP_GD','G',VITPLU(1:19),CHAMP(1:19))
          CALL RSNOCH(RESULT,'VITE',NUMARC,' ')
          CALL NMIMPR('IMPR','ARCHIVAGE','VITE',INSTAP,NUMARC)
        END IF
      END IF
C
C --- ACCELERATIONS
C
      IF (DIINCL(SDDISC,NUMINS,'ACCE',FORCE)) THEN
        CALL RSEXCH(RESULT,'ACCE',NUMARC,CHAMP,IRET)
        IF (IRET.LE.100) THEN
          CALL COPISD('CHAMP_GD','G',ACCPLU(1:19),CHAMP(1:19))
          CALL RSNOCH(RESULT,'ACCE',NUMARC,' ')
          CALL NMIMPR('IMPR','ARCHIVAGE','ACCE',INSTAP,NUMARC)
        END IF
      END IF
C
C --- DEPL/VITE/ACCE D'ENTRAINEMENTS EN MULTI-APPUIS
C
      IF (LMUAP) THEN
        CALL NDMAPA(RESULT,NUMINS,SDDISC,FORCE ,VALINC,
     &              SDDYNA,NUMARC,INSTAP)
      END IF
C
C --- CALCUL MODAL EN EXPLICITE
C
      IF (LEXGE) THEN
        CALL NDARAM(RESULT,SDDYNA,NUMARC)
      ENDIF   
C
      CALL JEDEMA()
      END
