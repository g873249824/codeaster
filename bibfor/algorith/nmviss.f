      SUBROUTINE NMVISS(NUMEDZ,SDDYNA,INSTAM,INSTAP,VECASZ)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 03/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*24 NUMEDZ
      CHARACTER*19 SDDYNA
      REAL*8       INSTAM,INSTAP
      CHARACTER*(*) VECASZ
C
C
C ----------------------------------------------------------------------
C
C
C
C
      CHARACTER*8 K8B,NOMRES,NOMA
      CHARACTER*8 RESULT,GNINTF,NOMACR,MAILLE
      CHARACTER*16 NOMCMD,TYPRES
      CHARACTER*19 RESU2,VECASS
      CHARACTER*14 NUMEDD
      CHARACTER*24 NOMCH,CHAMND,CHAND2,CHAMNV,CHANV2,CHAMNA,CHANA2 
      CHARACTER*24 TABRIG,TABEQU,TABINF,TABFRQ,TABFOR,TABAMO,TABMAS
      CHARACTER*15 SDEXSO
      CHARACTER*19 SDEXSZ
      REAL*8       INST,INSTD,IMPE12
      COMPLEX*16   C16BID
C
C     -----------------------------------------------------------------
C-----------------------------------------------------------------------
      INTEGER IARC ,IARC2 ,IBID ,ID1 ,ID2 ,IE ,IEQINT 
      INTEGER IFFOR ,IFREQ ,IOR ,IRET ,IVAA2 ,IVAD2 ,IVALA 
      INTEGER IVALD ,IVALV ,IVAV2 ,JAMOT ,JFOR ,JFRQ ,JINFO 
      INTEGER JMAST ,JRIGT ,LDNEW ,LINST ,NBMODE ,NBTROU ,NDDINT 
      INTEGER NEQ ,NUME ,NUME0 
      REAL*8 COEF1 ,COEF2 ,EPSI ,PAS ,R8BID 
C-----------------------------------------------------------------------
      DATA K8B/'        '/

      CALL JEMARQ()
      CALL INFMAJ()
C
C     -----------------------------------------------------------------
C
C
      VECASS = VECASZ
      RESULT = SDDYNA(1:8) 
      RESU2 = RESULT 
      NUMEDD = NUMEDZ(1:14)
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8B,IE)
      CALL NDYNKK(SDDYNA,'SDEXSO',SDEXSZ)
      SDEXSO = SDEXSZ(1:15)
      TABEQU=SDEXSO//'.EQINT'
      CALL JEVEUO(TABEQU,'L',IEQINT)
      CALL JELIRA(TABEQU,'LONMAX',NDDINT,K8B)
      TABINF=SDEXSO//'.INFO'
      CALL JEVEUO(TABINF,'L',JINFO)
C
      TABFRQ=SDEXSO//'.FREQ'
      CALL JEVEUO(TABFRQ,'L',JFRQ)
      PAS=ZR(JFRQ+1)-ZR(JFRQ)
      EPSI=1.D-6
      INST=INT(INSTAM*(1.D0+EPSI)/PAS)*PAS
      CALL JEEXIN(RESU2//'.ORDR',IRET)
      IF (IRET.EQ.0) THEN
        GOTO 40
      ELSE      
        CALL RSORAC(RESULT,'PREMIER',IBID,R8BID,K8B,C16BID,EPSI,
     &            'RELATIF',NUME0,1,NBTROU)
        CALL RSORAC(RESULT,'INST',IBID,INST,K8B,C16BID,EPSI,
     &            'RELATIF',NUME,1,NBTROU)
      ENDIF
C DECLARATION DU CHAMP RESULTAT
      NOMCH=VECASS 
      CALL JEEXIN(NOMCH(1:19)//'.REFE',IRET)
      IF (IRET.EQ.0) CALL VTCREB(NOMCH,NUMEDD,'V','R',NEQ)
      CALL JEVEUO(NOMCH(1:19)//'.VALE','E',LDNEW)
      DO 25 IE = 1,NEQ
        ZR(LDNEW+IE-1)=0.D0        
 25   CONTINUE
      TABRIG = SDEXSO//'.RIGT'
      NBMODE=NDDINT
      CALL JEVEUO(TABRIG,'L',JRIGT)
      TABMAS = SDEXSO//'.MAST'
      CALL JEVEUO(TABMAS,'L',JMAST)
      TABAMO = SDEXSO//'.AMOT'
      CALL JEVEUO(TABAMO,'L',JAMOT)
      INSTD=INST
      COEF1=(INSTAP-INSTD)/PAS
      COEF2=1.D0-COEF1
      DO 30 IOR = 1,NUME+1-NUME0
        IARC=IOR+NUME0
        IARC2=NUME+1-IOR
        CALL RSEXCH(RESULT,'DEPL',IARC2,CHAMND,IRET)
        CALL JEVEUO(CHAMND(1:19)//'.VALE','L',IVALD)
        CALL RSEXCH(RESULT,'VITE',IARC2,CHAMNV,IRET)
        CALL JEVEUO(CHAMNV(1:19)//'.VALE','L',IVALV)
        CALL RSEXCH(RESULT,'ACCE',IARC2,CHAMNA,IRET)
        CALL JEVEUO(CHAMNA(1:19)//'.VALE','L',IVALA)
        IF (IARC2.GT.0) THEN
          CALL RSEXCH(RESULT,'DEPL',IARC2-1,CHAND2,IRET)
          CALL JEVEUO(CHAND2(1:19)//'.VALE','L',IVAD2)
          CALL RSEXCH(RESULT,'VITE',IARC2-1,CHANV2,IRET)
          CALL JEVEUO(CHANV2(1:19)//'.VALE','L',IVAV2)
          CALL RSEXCH(RESULT,'ACCE',IARC2-1,CHANA2,IRET)
          CALL JEVEUO(CHANA2(1:19)//'.VALE','L',IVAA2)
        ENDIF
        IF (IOR.EQ.(NUME+1-NUME0)) THEN
          INST=INSTD+PAS
        ELSE
          CALL RSADPA(RESULT,'L',1,'INST',IARC,1,LINST,K8B)
          INST=ZR(LINST)
        ENDIF
C   CALL EXTR IMPE(INST_(NUME-IOR)=ZR(LINST))(ID1,ID2)
        IFREQ=INT(INST*(1.D0+EPSI)/PAS)+1    
        DO 31 ID1 = 1,NBMODE
          DO 32 ID2 = 1,NBMODE
            IMPE12=0.5D0*
     &      (ZR(JRIGT+(IFREQ-1)*NBMODE*NBMODE+(ID2-1)*NBMODE+ID1-1)+
     &       ZR(JRIGT+(IFREQ-1)*NBMODE*NBMODE+(ID1-1)*NBMODE+ID2-1))
            ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12* 
     &       ZR(IVALD+ZI(IEQINT+ID2-1)-1)*COEF1
            IF (IARC2.GT.0) ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12*
     &       ZR(IVAD2+ZI(IEQINT+ID2-1)-1)*COEF2           
            IMPE12=0.5D0*
     &      (ZR(JMAST+(IFREQ-1)*NBMODE*NBMODE+(ID2-1)*NBMODE+ID1-1)+
     &       ZR(JMAST+(IFREQ-1)*NBMODE*NBMODE+(ID1-1)*NBMODE+ID2-1))
            ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12* 
     &       ZR(IVALA+ZI(IEQINT+ID2-1)-1)*COEF1
            IF (IARC2.GT.0) ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12*
     &       ZR(IVAA2+ZI(IEQINT+ID2-1)-1)*COEF2
            IMPE12=0.5D0*
     &      (ZR(JAMOT+(IFREQ-1)*NBMODE*NBMODE+(ID2-1)*NBMODE+ID1-1)+
     &       ZR(JAMOT+(IFREQ-1)*NBMODE*NBMODE+(ID1-1)*NBMODE+ID2-1))
            ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12* 
     &       ZR(IVALV+ZI(IEQINT+ID2-1)-1)*COEF1
            IF (IARC2.GT.0) ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12*
     &       ZR(IVAV2+ZI(IEQINT+ID2-1)-1)*COEF2           
C     &      IMPE(IDDIN1,IDDIN2)*ZR(IVALD+ZI(IEQINT+IDDIN2-1)-1)      
 32       CONTINUE 
 31     CONTINUE        
 30   CONTINUE
 35   CONTINUE
      TABFOR = '&&NMVISS.FORM'
      IFFOR=ZI(JINFO+2)
      IF (IFFOR.EQ.0) GOTO 40
      CALL WKVECT(TABFOR,'V V R',NBMODE,JFOR)
      CALL IRMIT2(NBMODE,IFFOR,INSTAP,TABFOR)
      CALL JEVEUO(TABFOR,'L',JFOR)
      DO 36 ID1 = 1,NBMODE
        ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &  ZR(LDNEW+ZI(IEQINT+ID1-1)-1)+ZR(JFOR+ID1-1)
 36   CONTINUE 
      CALL JEDETR(TABFOR)
 40   CONTINUE
      CALL JEDEMA()
      END
