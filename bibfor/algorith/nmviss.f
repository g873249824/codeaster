      SUBROUTINE NMVISS(NUMEDD,SDDYNA,INSTAM,INSTAP,VECASZ)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/10/2012   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT      NONE
      INCLUDE      'jeveux.h'
      CHARACTER*19  SDDYNA
      CHARACTER*24  NUMEDD
      REAL*8        INSTAM,INSTAP
      CHARACTER*(*) VECASZ
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (DYNAMIQUE)
C
C CALCUL DES FORCES DE SOL
C
C ----------------------------------------------------------------------
C
C
C IN  SDDYNA : SD DYNAMIQUE
C IN  NUMEDD : NUME_DDL
C IN  INSTAM : INSTANT PRECEDENT
C IN  INSTAP : INSTANT COURANT
C OUT VECASS : VECTEUR ASSEMBLEE
C
C ----------------------------------------------------------------------
C
      CHARACTER*8  RESULT
      CHARACTER*19 VECASS
      CHARACTER*24 CHAMND,CHAND2,CHAMNV,CHANV2,CHAMNA,CHANA2
      CHARACTER*15 SDEXSO
      CHARACTER*19 SDEXSZ,RESU19
      CHARACTER*24 TABEQU,TABINF,NOMRES
      INTEGER      IEQINT,IDDINT,JNOMRE
      CHARACTER*24 TABRIG,TABMAS,TABAMO,TABFOR
      INTEGER      JRIGT,JMAST,JAMOT,JFOR
      CHARACTER*8  K8BID
      COMPLEX*16   C16BID
      INTEGER      NEQ,IARG
      INTEGER      NUME0,NUME,NBTRO1,NBTRO2
      REAL*8       INSTD,INST,PAS,COEF1,COEF2
      REAL*8       IMPE12,R8BID
      INTEGER      IORDR,IARC,IARC2,IRET,IBID
      INTEGER      ID1,ID2,IFREQ
      INTEGER      IVALD,IVALV,IVALA,IVAD2,IVAV2,IVAA2
      INTEGER      JINST,LDNEW
      INTEGER      NDDINT,UNITEF,NBMODE
      CHARACTER*16 MOTFAC
      CHARACTER*8  CRITER
      REAL*8       PREC
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      VECASS = VECASZ
      MOTFAC = 'ETAT_INIT'
      PREC   = 1.D-6
      CRITER = 'RELATIF'
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- ACCES SD EXCIT_SOL
C
      CALL NDYNKK(SDDYNA,'SDEXSO',SDEXSZ)
      SDEXSO = SDEXSZ(1:15)
      NOMRES = SDEXSO(1:15)//'.RESU'
      TABEQU = SDEXSO(1:15)//'.EQINT'
      TABINF = SDEXSO(1:15)//'.TABI'
      TABRIG = SDEXSO(1:15)//'.RIGT'
      TABMAS = SDEXSO(1:15)//'.MAST'
      TABAMO = SDEXSO(1:15)//'.AMOT'
      CALL JEVEUO(NOMRES,'L',JNOMRE)
      CALL JEVEUO(TABEQU,'L',IEQINT)
      CALL JEVEUO(TABINF,'L',IDDINT)
C
C --- INFORMATIONS GLOBALES
C
      PAS    = ZR(IDDINT-1+1)
      UNITEF = NINT(ZR(IDDINT-1+2))
      NDDINT = NINT(ZR(IDDINT-1+3))
      RESULT = ZK8(JNOMRE)
      RESU19 = RESULT
      NBMODE = NDDINT
C
C --- TOLERANCES
C
      CALL GETVR8(MOTFAC,'PRECISION',1,IARG,1,PREC  ,IRET)
      IF (IRET.EQ.0) PREC   = 1.D-6
      CALL GETVTX(MOTFAC,'CRITERE'  ,1,IARG,1,CRITER,IRET)
      IF (IRET.EQ.0) CRITER = 'RELATIF'
C
C --- RECUPERATION RESULTATS
C
      INST  = INSTAM
      INST  = INT(INSTAM*(1.D0+PREC)/PAS)*PAS
      CALL JEEXIN(RESU19//'.ORDR',IRET)
      IF (IRET.EQ.0) THEN
        GOTO 99
      ELSE
        CALL RSORAC(RESULT,'PREMIER',IBID  ,R8BID ,K8BID ,
     &              C16BID,PREC     ,CRITER,NUME0 ,1     ,
     &              NBTRO1)
        CALL RSORAC(RESULT,'INST'   ,IBID  ,INST  ,K8BID ,
     &              C16BID,PREC     ,CRITER,NUME  ,1     ,
     &              NBTRO2)
        IF ((ABS(NBTRO1).NE.1).OR.(ABS(NBTRO2).NE.1)) THEN
           CALL U2MESS('F','DYNAMIQUE_25')
        ENDIF
      ENDIF
C
C --- INITIALISATION DU CHAMP RESULTAT
C
      CALL JEVEUO(VECASS(1:19)//'.VALE','E',LDNEW)
      CALL R8INIR(NEQ, 0.D0, ZR(LDNEW), 1)
C
C --- ACCES MATRICES
C
      CALL JEVEUO(TABRIG,'L',JRIGT)
      CALL JEVEUO(TABMAS,'L',JMAST)
      CALL JEVEUO(TABAMO,'L',JAMOT)
C
      INSTD  = INST
      COEF1  = (INSTAP-INSTD)/PAS
      COEF2  = 1.D0-COEF1
C
      DO 30 IORDR = 1,NUME+1-NUME0
        IARC  = IORDR+NUME0
        IARC2 = NUME+1-IORDR
        CALL RSEXCH('F',RESULT,'DEPL',IARC2,CHAMND,IRET)
        CALL JEVEUO(CHAMND(1:19)//'.VALE','L',IVALD)
        CALL RSEXCH('F',RESULT,'VITE',IARC2,CHAMNV,IRET)
        CALL JEVEUO(CHAMNV(1:19)//'.VALE','L',IVALV)
        CALL RSEXCH('F',RESULT,'ACCE',IARC2,CHAMNA,IRET)
        CALL JEVEUO(CHAMNA(1:19)//'.VALE','L',IVALA)
        IF (IARC2.GT.0) THEN
          CALL RSEXCH('F',RESULT,'DEPL',IARC2-1,CHAND2,IRET)
          CALL JEVEUO(CHAND2(1:19)//'.VALE','L',IVAD2)
          CALL RSEXCH('F',RESULT,'VITE',IARC2-1,CHANV2,IRET)
          CALL JEVEUO(CHANV2(1:19)//'.VALE','L',IVAV2)
          CALL RSEXCH('F',RESULT,'ACCE',IARC2-1,CHANA2,IRET)
          CALL JEVEUO(CHANA2(1:19)//'.VALE','L',IVAA2)
        ENDIF
        IF (IORDR.EQ.(NUME+1-NUME0)) THEN
          INST=INSTD+PAS
        ELSE
          CALL RSADPA(RESULT,'L',1,'INST',IARC,1,JINST,K8BID)
          INST=ZR(JINST)
        ENDIF
C
        IFREQ = INT(INST*(1.D0+PREC)/PAS)+1
        DO 31 ID1 = 1,NBMODE
          DO 32 ID2 = 1,NBMODE
            IMPE12=0.5D0*
     &      (ZR(JRIGT+(IFREQ-1)*NBMODE*NBMODE+(ID2-1)*NBMODE+ID1-1)+
     &       ZR(JRIGT+(IFREQ-1)*NBMODE*NBMODE+(ID1-1)*NBMODE+ID2-1))
            ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12*
     &       ZR(IVALD+ZI(IEQINT+ID2-1)-1)*COEF1
            IF (IARC2.GT.0) ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12*
     &       ZR(IVAD2+ZI(IEQINT+ID2-1)-1)*COEF2
            IMPE12=0.5D0*
     &      (ZR(JMAST+(IFREQ-1)*NBMODE*NBMODE+(ID2-1)*NBMODE+ID1-1)+
     &       ZR(JMAST+(IFREQ-1)*NBMODE*NBMODE+(ID1-1)*NBMODE+ID2-1))
            ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12*
     &       ZR(IVALA+ZI(IEQINT+ID2-1)-1)*COEF1
            IF (IARC2.GT.0) ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12*
     &       ZR(IVAA2+ZI(IEQINT+ID2-1)-1)*COEF2
            IMPE12=0.5D0*
     &      (ZR(JAMOT+(IFREQ-1)*NBMODE*NBMODE+(ID2-1)*NBMODE+ID1-1)+
     &       ZR(JAMOT+(IFREQ-1)*NBMODE*NBMODE+(ID1-1)*NBMODE+ID2-1))
            ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12*
     &       ZR(IVALV+ZI(IEQINT+ID2-1)-1)*COEF1
            IF (IARC2.GT.0) ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &      ZR(LDNEW+ZI(IEQINT+ID1-1)-1)-IMPE12*
     &       ZR(IVAV2+ZI(IEQINT+ID2-1)-1)*COEF2
 32       CONTINUE
 31     CONTINUE
 30   CONTINUE
C
C --- LECTURE FORCES
C
      TABFOR = '&&NMVISS.FORM'
      IF (UNITEF.NE.0) THEN
        CALL WKVECT(TABFOR,'V V R',NBMODE,JFOR)
        CALL IRMIT2(NBMODE,UNITEF,INSTAP,TABFOR)
        CALL JEVEUO(TABFOR,'L',JFOR)
        DO 36 ID1 = 1,NBMODE
          ZR(LDNEW+ZI(IEQINT+ID1-1)-1)=
     &    ZR(LDNEW+ZI(IEQINT+ID1-1)-1)+ZR(JFOR+ID1-1)
 36     CONTINUE
      ENDIF
C
 99   CONTINUE
      CALL JEDETR(TABFOR)
      CALL JEDEMA()
      END
