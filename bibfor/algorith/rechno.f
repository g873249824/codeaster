      SUBROUTINE RECHNO(NOMA  ,IZONE ,NEWGEO,DEFICO,RESOCO,
     &                  IESCL0,NFESCL)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/09/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_20
C
      IMPLICIT     NONE
      INTEGER      IZONE
      CHARACTER*24 NEWGEO
      CHARACTER*24 DEFICO
      CHARACTER*24 RESOCO
      INTEGER      IESCL0     
      CHARACTER*8  NOMA
      INTEGER      NFESCL
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - APPARIEMENT - NODAL)
C
C RECHERCHE POUR CHAQUE NOEUD ESCLAVE LE NOEUD MAITRE LE PLUS 
C PROCHE ET REALISE L'APPARIEMENT (ECRITURE DE LA RELATION CINEMATIQUE)
C
C ----------------------------------------------------------------------
C
C
C NB: LES NOTIONS DE "MAITRE" ET
C D'"ESCLAVE" SONT FICTIVES ICI : ON PREND COMME SURFACE ESCLAVE
C CELLE QUI A LE MOINS DE NOEUDS POUR AVOIR PLUS DE CHANCES D'AVOIR
C UN APPARIEMENT INJECTIF.
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  IZONE  : NUMERO DE LA ZONE DE CONTACT
C IN  NEWGEO : GEOMETRIE ACTUALISEE EN TENANT COMPTE DU CHAMP DE
C              DEPLACEMENTS COURANT
C IN  DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  IESCL0 : INDICE DU PREMIER NOEUD ESCLAVE A EXAMINER
C OUT NFESCL : NOMBRE DE NOEUDS ESCLAVES DE LA ZONE
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFMMVD,CFDISI,ZAPME,ZAPPA,ZREAC
      CHARACTER*24 NDIMCO,PZONE,PSURNO,CONTNO,DDLCO
      INTEGER      JDIM,JZONE,JSUNO,JNOCO,JDDL
      CHARACTER*24 SANSNO,PSANS,APMEMO,APPARI,NORINI,MANOCO
      INTEGER      JSANS,JPSANS,JAPMEM,JAPPAR,JNRINI,JMANO
      CHARACTER*24 APCOEF,APCOFR,APJEFX,APJEFY,PDDL,APDDL,PNOMA
      INTEGER      JAPCOE,JAPCOF,JAPJFX,JAPJFY,JPDDL,JAPDDL,JPONO
      CHARACTER*24 PMANO,NORMCO,TANGCO,APPOIN,APJEU,NOMACO,APREAC
      INTEGER      JPOMA,JNORMO,JTANGO,JAPPTR,JAPJEU,JNOMA,JREAC
      INTEGER      TYPALF,FROT3D,IBID
      INTEGER      NESMAX,NDIM,NBNOE,NBNOM,NBDDLT
      INTEGER      POSESC,OLDPOS,SUPPOK
      INTEGER      ISURFE,ISURFM,SWAP,REAPPA
      INTEGER      JDECE,JCOOR
      INTEGER      KE,NUMMIN,POSMIN,IESCL
      REAL*8       DMIN,JEU      
      REAL*8       NORM(3),TANG(6),COEF(30),COFX(30),COFY(30)    
      INTEGER      POSNO(10),DDL(30) 
      INTEGER      IFM,NIV  
      CHARACTER*8  K8BID
      REAL*8       R8BID
      INTEGER      VALI(2)
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()      
      CALL INFDBG('CONTACT',IFM,NIV)    
C   
C --- AFFICHAGE
C 
      VALI(1) = IZONE
      CALL CFIMPD(IFM   ,NIV  ,'RECHNO',1, 
     &            VALI  ,R8BID,K8BID)       
C
C --- INFOS SUR LA CHARGE DE CONTACT
C
      CALL CFDISC(DEFICO,RESOCO(1:14),IBID,TYPALF,FROT3D,IBID)
C
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APCOFR = RESOCO(1:14)//'.APCOFR'
      APDDL  = RESOCO(1:14)//'.APDDL'
      APJEFX = RESOCO(1:14)//'.APJEFX'
      APJEFY = RESOCO(1:14)//'.APJEFY'
      APJEU  = RESOCO(1:14)//'.APJEU'
      APMEMO = RESOCO(1:14)//'.APMEMO'
      APPARI = RESOCO(1:14)//'.APPARI'
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APREAC = RESOCO(1:14)//'.APREAC'      
      CONTNO = DEFICO(1:16)//'.NOEUCO'
      DDLCO  = DEFICO(1:16)//'.DDLCO'
      NDIMCO = DEFICO(1:16)//'.NDIMCO'
      MANOCO = DEFICO(1:16)//'.MANOCO'      
      NOMACO = DEFICO(1:16)//'.NOMACO'
      NORINI = RESOCO(1:14)//'.NORINI'
      NORMCO = RESOCO(1:14)//'.NORMCO'
      PDDL   = DEFICO(1:16)//'.PDDLCO'
      PMANO  = DEFICO(1:16)//'.PMANOCO'
      PNOMA  = DEFICO(1:16)//'.PNOMACO'
      PSANS  = DEFICO(1:16)//'.PSSNOCO'
      PSURNO = DEFICO(1:16)//'.PSUNOCO'
      PZONE  = DEFICO(1:16)//'.PZONECO'
      SANSNO = DEFICO(1:16)//'.SSNOCO'
      TANGCO = RESOCO(1:14)//'.TANGCO'
C
      CALL JEVEUO(APCOEF,'E',JAPCOE)
      CALL JEVEUO(APDDL, 'E',JAPDDL)
      CALL JEVEUO(APJEU, 'E',JAPJEU)
      CALL JEVEUO(MANOCO,'L',JMANO )      
      CALL JEVEUO(APMEMO,'E',JAPMEM)
      CALL JEVEUO(APPARI,'E',JAPPAR)
      CALL JEVEUO(APPOIN,'E',JAPPTR)
      CALL JEVEUO(APREAC,'L',JREAC )      
      CALL JEVEUO(CONTNO,'L',JNOCO )
      CALL JEVEUO(DDLCO, 'L',JDDL )
      CALL JEVEUO(NDIMCO,'E',JDIM )
      CALL JEVEUO(NOMACO,'L',JNOMA )
      CALL JEVEUO(NORINI,'L',JNRINI)
      CALL JEVEUO(NORMCO,'E',JNORMO)
      CALL JEVEUO(PDDL  ,'L',JPDDL )
      CALL JEVEUO(PMANO, 'L',JPOMA)
      CALL JEVEUO(PNOMA, 'L',JPONO )
      CALL JEVEUO(PSANS, 'L',JPSANS)
      CALL JEVEUO(PSURNO,'L',JSUNO )
      CALL JEVEUO(PZONE, 'L',JZONE )
      CALL JEVEUO(SANSNO,'L',JSANS )
      CALL JEVEUO(TANGCO,'E',JTANGO)
      IF (TYPALF.NE.0) THEN
        CALL JEVEUO(APCOFR,'E',JAPCOF)
        CALL JEVEUO(APJEFX,'E',JAPJFX)
        CALL JEVEUO(APJEFY,'E',JAPJFY)
      ENDIF
      CALL JEVEUO(NEWGEO(1:19)//'.VALE','L',JCOOR)
C
C --- INITIALISATION DE VARIABLES
C
      ZAPME  = CFMMVD('ZAPME')
      ZAPPA  = CFMMVD('ZAPPA')
      ZREAC  = CFMMVD('ZREAC')       
C
C --- TYPE DE RECHERCHE DU NOEUD
C
      REAPPA = ZI(JREAC+ZREAC*(IZONE-1)+0)      
C
C --- NOMBRE MAXIMUM DE NOEUDS ESCLAVES ET DIMENSION DU PROBLEME
C
      NESMAX = CFDISI(DEFICO,'NESMAX'     ,IZONE)
      NDIM   = CFDISI(DEFICO,'NDIM'       ,IZONE)           
C
C --- NUMEROS DES SURFACES MAITRE ET ESCLAVE
C
      ISURFE = ZI(JZONE+IZONE)
      ISURFM = ZI(JZONE+IZONE-1) + 1
C
C --- NOMBRE DE NOEUDS DES SURFACES
C
      NBNOE  = ZI(JSUNO+ISURFE) - ZI(JSUNO+ISURFE-1)
      NBNOM  = ZI(JSUNO+ISURFM) - ZI(JSUNO+ISURFM-1)
C
C --- ON SE DEBROUILLE POUR QUE LA
C --- SURFACE ESCLAVE SOIT CELLE AVEC LE MOINS DE NOEUDS
C
      IF (NBNOM.LT.NBNOE) THEN
        SWAP   = NBNOE
        NBNOE  = NBNOM
        NBNOM  = SWAP
        SWAP   = ISURFE
        ISURFE = ISURFM
        ISURFM = SWAP
      END IF
C
C --- DECALAGE DANS CONTNO POUR TROUVER LES NOEUDS DES SURFACES
C
      JDECE = ZI(JSUNO+ISURFE-1)
C
C --- NOMBRE DE NOEUDS ESCLAVES DE LA ZONE A PRIORI
C
      ZI(JDIM+8+IZONE) = NBNOE  
C
C --- PREMIER NOEUD ESCLAVE DE LA ZONE
C
      IESCL    = IESCL0                
C
C --- APPARIEMENT PAR METHODE "BRUTE FORCE"
C --- DOUBLE BOUCLE SUR LES NOEUDS
C
      IF (REAPPA.EQ.1) THEN

        DO 50 KE = 1,NBNOE
C
C --- INDICE DANS CONTNO DU NOEUD ESCLAVE
C
          POSESC   = JDECE + KE
C
C --- ON ELIMINE LE NOEUD SI INTERDIT COMME ESCLAVE
C
          CALL CFELSN(IZONE ,NOMA  ,POSESC,JDIM  ,JAPMEM,
     &                JNOCO ,JPSANS,JSANS ,SUPPOK)
C
C --- SINON ON CHERCHE LE NOEUD MAITRE APPARIE
C     
          IF (SUPPOK.EQ.0) THEN                                
C
C --- RECHERCHE DU NOEUD MAITRE LE PLUS PROCHE PAR FORCE BRUTE
C
            CALL RECHP1(ZR(JCOOR),ZI(JSUNO),ZI(JNOCO),
     &                  KE       ,ISURFE   ,ISURFM   ,POSMIN,NUMMIN,
     &                  DMIN)
C
C --- CALCUL DE LA PROJECTION SUR LE NOEUD ET DU JEU MINIMUM
C       
            CALL PROJEN(IZONE ,NDIM  ,NEWGEO,RESOCO,DEFICO,
     &                  POSESC,-POSMIN,NORM  ,TANG  ,COEF  ,
     &                  COFX  ,COFY  ,JEU   ,NBNOM ,POSNO ,
     &                  NBDDLT,DDL)       
C
C --- STOCKAGE PARAMETRES DE L'APPARIEMENT 
C     
            CALL CFPARN(JAPMEM,JAPPAR,ZAPME ,ZAPPA ,
     &                  POSMIN,POSESC,POSMIN,IESCL)
C
C --- AJOUT DE LA LIAISON NODALE
C
            CALL CFADDM(JAPPTR,JAPJEU,JNORMO, 
     &                  JPDDL ,JTANGO,JAPCOF,JAPCOE,JAPJFX,
     &                  JAPJFY,JAPDDL,
     &                  TYPALF,FROT3D,POSESC,
     &                  IESCL ,NESMAX,NORM  ,TANG  ,COEF  ,
     &                  COFX  ,COFY  ,JEU   ,NBNOM ,POSNO ,
     &                  NBDDLT,DDL)
C
C --- NOEUD ESCLAVE SUIVANT
C
            IESCL = IESCL + 1             
C              
          ENDIF

   50   CONTINUE
C
C --- APPARIEMENT PAR VOISINAGE
C --- ON CHERCHE UN NOEUD CONNECTE A L'ANCIEN NOEUD LE PLUS PROCHE
C --- PAR UNE MAILLE DE CONTACT
C
      ELSE IF (REAPPA.EQ.2) THEN

        DO 110 KE = 1,NBNOE
C
C --- INDICE DANS CONTNO DU NOEUD ESCLAVE
C
          POSESC   = JDECE + KE
C
C --- ON REGARDE SI LE NOEUD EST INTERDIT COMME ESCLAVE
C
          CALL CFELSN(IZONE ,NOMA  ,POSESC,JDIM  ,JAPMEM,
     &                JNOCO ,JPSANS,JSANS ,SUPPOK)
C
C --- SINON ON CHERCHE LE NOEUD MAITRE APPARIE
C     
          IF (SUPPOK.EQ.0) THEN          
     
C
C --- ANCIEN NOEUD MAITRE LE PLUS PROCHE
C
            OLDPOS = ZI(JAPMEM+ZAPME*(POSESC-1)+1)   
C
C --- RECHERCHE DU NOEUD MAITRE LE PLUS PROCHE PAR VOISINAGE
C                    
            CALL RECHP2(ZR(JCOOR),ZI(JSUNO),ZI(JNOCO),
     &                  ZI(JMANO),ZI(JPOMA),ZI(JPONO),ZI(JNOMA),
     &                  KE       ,ISURFE   ,OLDPOS   ,POSMIN,
     &                  NUMMIN,DMIN)         
C
C --- CALCUL DE LA PROJECTION SUR LE NOEUD ET DU JEU MINIMUM
C       
            CALL PROJEN(IZONE ,NDIM  ,NEWGEO,RESOCO,DEFICO,
     &                  POSESC,-POSMIN,NORM  ,TANG  ,COEF  ,
     &                  COFX  ,COFY  ,JEU   ,NBNOM ,POSNO ,
     &                  NBDDLT,DDL)                  
C
C --- STOCKAGE PARAMETRES DE L'APPARIEMENT 
C     
            CALL CFPARN(JAPMEM,JAPPAR,ZAPME ,ZAPPA ,
     &                  POSMIN,POSESC,POSMIN,IESCL) 
C
C --- AJOUT D'UNE LIAISON
C
            CALL CFADDM(JAPPTR,JAPJEU,JNORMO, 
     &                  JPDDL ,JTANGO,JAPCOF,JAPCOE,JAPJFX,
     &                  JAPJFY,JAPDDL,
     &                  TYPALF,FROT3D,POSESC,
     &                  IESCL ,NESMAX,NORM  ,TANG  ,COEF  ,
     &                  COFX  ,COFY  ,JEU   ,NBNOM ,POSNO ,
     &                  NBDDLT,DDL) 
C
C --- NOEUD ESCLAVE SUIVANT
C
            IESCL = IESCL + 1  
C                   
            ENDIF

  110   CONTINUE
      ELSE 
        CALL ASSERT(.FALSE.)
      END IF
C
C --- NOMBRE DE NOEUDS ESCLAVES SUR LA ZONE
C
      NFESCL = IESCL - IESCL0         
C
      CALL JEDEMA()

      END
