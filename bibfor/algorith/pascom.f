      SUBROUTINE PASCOM(MECA)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/02/2007   AUTEUR GREFFET N.GREFFET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================

C ----------------------------------------------------------------------
C
C          EVALUATION DU PAS DE TEMPS DE COURANT POUR LE MODELE
C
C IN  MECA     : BASE MODALE (MODE_MECA)
C
C ----------------------------------------------------------------------
C

C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      IMPLICIT NONE

      INTEGER      ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8       ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16   ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL      ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8  ZK8
      CHARACTER*16    ZK16
      CHARACTER*24        ZK24
      CHARACTER*32            ZK32
      CHARACTER*80                ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      IBID,JCESD,JCESL,JCESV,N1,I
      INTEGER      NBMA,IMA,IAD,JPAS,NBDT,JREPE
      INTEGER      NBMODE
      INTEGER      JMASG,JRAIG,IOROL, JORDM
      REAL*8       DTCOU,VALEUR,PHI,DT
      CHARACTER*8  K8BID,STOCFL,MECA,K8B
      CHARACTER*14 K14B
      CHARACTER*19 CHAMS,LISINS
      CHARACTER*19 NOMSTM,NOMSTK
      CHARACTER*24 NUMK24,NUMM24

      CALL JEMARQ()

C     INITIALISATION DE DTCOU

      DTCOU = -1.D0

C     --- RECUPERATION DES FREQUENCES PROPRES

      CALL JELIRA(  MECA//'           .ORDR','LONUTI',NBMODE,K8B)
      CALL JEVEUO(  MECA//'           .ORDR','L',JORDM)
      IOROL = ZI(JORDM)
      CALL RSADPA(  MECA, 'L',1,'OMEGA2',IOROL,0, IAD,K8B)
      DTCOU = 1.D0 / SQRT(ZR(IAD))
      DO 21 I = 1,NBMODE-1
       IOROL = ZI(JORDM+I)
       CALL RSADPA(  MECA, 'L',1,'OMEGA2',IOROL,0, IAD,K8B)
       DT = 1.D0 / SQRT(ZR(IAD))
       IF (DT.LT.DTCOU) DTCOU = DT
   21 CONTINUE

      CALL GETVID(' ','STOP_CFL',1,1,1,STOCFL,N1)

C     VERIFICATION DE LA CONFORMITE DE LA LISTE D'INSTANTS

      CALL GETVID('INCREMENT','LIST_INST',1,1,1,LISINS,N1)
      CALL JEVEUO(LISINS//'.LPAS','L',JPAS)

      CALL JELIRA(LISINS//'.LPAS','LONMAX',NBDT,K8BID)

      CALL GETFAC('DIFF_CENT',N1)
      IF (N1.EQ.1) THEN
        DTCOU =DTCOU/(2.D0)
        CALL U2MESR('I','DYNAMIQUE_7',1,DTCOU)
      ELSE
        CALL GETFAC('TCHAMWA',N1)
        IF (N1.EQ.1) THEN
          CALL GETVR8('TCHAMWA','PHI',1,1,1,PHI,N1)
          DTCOU = DTCOU/(PHI*2.D0)
          CALL U2MESR('I','DYNAMIQUE_8',1,DTCOU)
        ELSE
          CALL U2MESS('F','DYNAMIQUE_1')
        ENDIF
      ENDIF

      DO 20 I=1,NBDT
        IF (ZR(JPAS-1+I).GT.DTCOU) THEN
          IF (STOCFL(1:3).EQ.'OUI') THEN
            CALL U2MESS('F','DYNAMIQUE_2')
          ELSE
            CALL U2MESS('A','DYNAMIQUE_2')
          ENDIF
        ENDIF
 20   CONTINUE

      CALL JEDEMA()

      END
