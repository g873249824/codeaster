      SUBROUTINE RECHMN(NOMA  ,NEWGEO,DEFICO,RESOCO,IZONE )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/12/2009   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INTEGER      IZONE
      CHARACTER*8  NOMA
      CHARACTER*24 DEFICO,RESOCO,NEWGEO    
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - APPARIEMENT - MAIT/ESCL)
C
C RECHERCHE DU NOEUD MAITRE LE PLUS PROCHE DU NOEUD ESCLAVE
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  IZONE  : NUMERO DE LA ZONE DE CONTACT
C IN  NEWGEO : GEOMETRIE ACTUALISEE EN TENANT COMPTE DU CHAMP DE
C              DEPLACEMENTS COURANT
C IN  DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      REAL*8       MMINFR,COORDE(3)
      INTEGER      NBNOE,NBDDLE
      INTEGER      ISURFE,ISURFM
      INTEGER      JCOOR,JDECE
      INTEGER      POSNOE,NUMNOE,POSAPP,TYPAPP
      INTEGER      KE,CODRET,IBID
      INTEGER      POSNOM,SUPPOK
      INTEGER      IFM,NIV
      LOGICAL      MMINFL,DIRAPP
      REAL*8       DIR(3),TOLEAP
      CHARACTER*8  NOMNOE
      CHARACTER*4  TYPNOE      
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()      
      CALL INFDBG('CONTACT',IFM,NIV)    
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> APPARIEMENT MAIT/ESCL - NOEUD '//
     &                 'MAITRE LE PLUS PROCHE' 
      ENDIF 
C
C --- INITIALISATIONS
C        
      DIR(1) = 0.D0
      DIR(2) = 0.D0
      DIR(3) = 0.D0 
      IBID   = 0     
C
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C
      CALL JEVEUO(NEWGEO(1:19)//'.VALE','L',JCOOR)      
C
C --- OPTIONS SUR LA ZONE DE CONTACT
C  
      DIRAPP = MMINFL(DEFICO,'TYPE_APPA_FIXE',IZONE )
      IF (DIRAPP) THEN
        DIR(1) = MMINFR(DEFICO,'TYPE_APPA_DIRX',IZONE)
        DIR(2) = MMINFR(DEFICO,'TYPE_APPA_DIRY',IZONE)      
        DIR(3) = MMINFR(DEFICO,'TYPE_APPA_DIRZ',IZONE) 
      ENDIF
      TOLEAP = MMINFR(DEFICO,'TOLE_APPA'        ,IZONE )              
C
C --- NUMEROS DES SURFACES MAITRE ET ESCLAVE
C
      CALL CFZONE(DEFICO,IZONE ,'ESCL',ISURFE)
      CALL CFZONE(DEFICO,IZONE ,'MAIT',ISURFM)
C
C --- NOMBRE DE NOEUDS DE LA SURFACE ESCLAVE
C
      CALL CFNBSF(DEFICO,ISURFE,'NOEU',NBNOE ,JDECE )       
C
C --- BOUCLE SUR LES NOEUDS ESCLAVES
C
      DO 50 KE = 1,NBNOE
C
C --- POSITION ET NUMERO DU NOEUD ESCLAVE
C
        POSNOE  = JDECE + KE
        CALL CFPOSM(NOMA  ,DEFICO,'NOEU',1     ,POSNOE,
     &              NUMNOE,CODRET)
        IF (CODRET.LT.0) THEN
          CALL ASSERT(.FALSE.) 
        ENDIF       
C
C --- ON ELIMINE LE NOEUD SI INTERDIT COMME ESCLAVE
C
        CALL CFMMEX(DEFICO,'CONT',IZONE ,NUMNOE,SUPPOK)
        IF (SUPPOK.EQ.1) THEN 
          TYPAPP = -1
          GOTO 65
        ENDIF
C
C --- CARACTERISTIQUES DU NOEUD ESCLAVE
C     
        CALL CFCARN(NOMA  ,DEFICO,RESOCO,NEWGEO,POSNOE,
     &              NBDDLE,COORDE,TYPNOE,NOMNOE)        
        IF (TYPNOE.NE.'ESCL') THEN
          CALL ASSERT(.FALSE.)
        ENDIF                
C
C --- RECHERCHE DU NOEUD MAITRE LE PLUS PROCHE 
C
        CALL MMREND(DEFICO,NEWGEO,ISURFM,COORDE,TOLEAP,
     &              DIRAPP,DIR   ,POSNOM)
        IF (POSNOM.EQ.POSNOE) THEN
          CALL ASSERT(.FALSE.)
        ENDIF
C
C --- SI NOEUD MAITRE PROCHE N'EXISTE PAS (TOLE_APPA)
C
        IF (POSNOM.EQ.0) THEN 
          TYPAPP = -2
          GOTO 65
        ENDIF 
C
C --- STOCKAGE PARAMETRES DE L'APPARIEMENT 
C     
        POSAPP = 0
        TYPAPP = 3       
C
   65   CONTINUE        
C
C --- STOCKAGE PARAMETRES DE L'APPARIEMENT 
C    
        CALL CFPARM(NOMA  ,DEFICO,RESOCO,IBID  ,TYPAPP,
     &              POSNOE,POSNOM,POSAPP)
              
   50 CONTINUE               
C
      CALL JEDEMA()
      END
