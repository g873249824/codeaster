      SUBROUTINE NMEXSO(SDDYNA)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRS_512
      IMPLICIT REAL*8(A-H,O-Z)
      INCLUDE 'jeveux.h'
      CHARACTER*19 SDDYNA
C
C
C ----------------------------------------------------------------------
C
C
C
C
      CHARACTER*8 K8B,NOMA,CHARGE
      CHARACTER*8 RESULT,GNINTF,NOMACR,MAILLE
      CHARACTER*14 NUMEDD
      CHARACTER*15 SDEXSO
      CHARACTER*19 SDEXSZ      
      CHARACTER*24 MAGRNO, NPRNO
      CHARACTER*24 TABEQU,TABFRQ,TABINF,TABRIG
      INTEGER GD,APRNO
      INTEGER IARG,IFFOR,IFMIS
C
C     -----------------------------------------------------------------
      DATA K8B/'        '/

      CALL JEMARQ()
      CALL INFMAJ()
C
C     -----------------------------------------------------------------
C
C
      RESULT = SDDYNA(1:8) 
      NUMEDD = RESULT//'.00000'
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8B,IE)
      CALL JEVEUO(NUMEDD//'.NUME.REFN','L',JREFN)
      NOMA = ZK24(JREFN)(1:8)
      CALL DISMOI('F','NUM_GD_SI',NUMEDD,'NUME_DDL',GD,K8B,IE)
      NEC = NBEC(GD)
      CALL GETFAC('EXCIT',NBEXCI)
      DO 1 I=1,NBEXCI
        CALL GETVID('EXCIT','CHARGE',I,IARG,1,CHARGE,NC)
        CALL JEEXIN(CHARGE//'.CHME.VEISS',IRET)
        IF (IRET.NE.0) GOTO 2
 1    CONTINUE
 2    CONTINUE
      CALL JEVEUO(CHARGE//'.CHME.VEISS','L',IDVEIS) 
 
C      CALL GETVEM(NOMA,'GROUP_NO','EXCIT_SOL','GROUP_NO_INTERF',
C     &  1,IARG,1,GNINTF,NG)
      GNINTF=ZK8(IDVEIS+4)
      IF (GNINTF.NE.' ') THEN
C      WRITE(6,*) 'GNINTF ',GNINTF
        MAGRNO = NOMA//'.GROUPENO'
        CALL JELIRA(JEXNOM(MAGRNO,GNINTF),'LONUTI',NBNO,K8B)
C  TABLEAU DES NOEUDS DE L INTERFACE

C        CALL WKVECT(TABNOE,'V V I',NBNO,IDNO)
        CALL JEVEUO(JEXNOM(MAGRNO,GNINTF),'L',IDNO)
      ELSE
C        CALL GETVTX('EXCIT_SOL','SUPER_MAILLE',1,IARG,1,MAILLE,NM)
        MAILLE=ZK8(IDVEIS+5) 
        CALL JEVEUO(NOMA//'.NOMACR','L',IAMACR)
        CALL JENONU(JEXNOM(NOMA//'.SUPMAIL',MAILLE),IMA)
C        CALL JELIRA(JEXNUM(NOMA//'.SUPMAIL',IMA),'LONMAX',NBNO,K8B)
        NOMACR = ZK8(IAMACR-1+IMA)
        CALL JELIRA(NOMACR//'.LINO','LONMAX',NBNO,K8B)
        CALL JEVEUO(NOMACR//'.LINO','L',IDNO)       
      ENDIF
      NPRNO = NUMEDD//'.NUME.PRNO'
      CALL JENONU(JEXNOM(NPRNO(1:19)//'.LILI','&MAILLA'),IBID)
      CALL JEVEUO(JEXNUM(NPRNO,IBID),'L',APRNO)
C      NEC = NBEC(GD)
      NDDINT=0
      DO 10 INO = 1,NBNO
        INOE = ZI(IDNO+INO-1)
        NCMP = ZI( APRNO + (NEC+2)*(INOE-1) + 2 - 1 )
        NDDINT=NDDINT+NCMP
 10   CONTINUE      
C  TABLEAU DES NUMEROS D EQUATION ACTIFS DE L INTERFACE
      CALL NDYNKK(SDDYNA,'SDEXSO',SDEXSZ)
      SDEXSO=SDEXSZ(1:15)
C      SDEXSO='&&NDLECT.SDEXSO'
      TABEQU=SDEXSO//'.EQINT'
      CALL WKVECT(TABEQU,'V V I',NDDINT,IEQINT)
      IDDINT=0 
      DO 20 INO = 1,NBNO
        INOE = ZI(IDNO+INO-1)
        NCMP = ZI( APRNO + (NEC+2)*(INOE-1) + 2 - 1 )
        IDDL = ZI( APRNO + (NEC+2)*(INOE-1) + 1 - 1 )
        DO 21 IC = 1,NCMP
          IDDINT=IDDINT+1
          ZI(IEQINT+IDDINT-1)=IDDL+IC-1
 21     CONTINUE            
 20   CONTINUE
      TABINF=SDEXSO//'.INFO'
      CALL WKVECT(TABINF,'V V I',5,JINFO)
      TABFRQ=SDEXSO//'.FREQ'
C      CALL GETVIS('EXCIT_SOL','UNITE_RESU_RIGI',1,IARG,1,IFMIS,N1)
      READ(ZK8(IDVEIS),'(I8)') IFMIS
      ZI(JINFO)=IFMIS
      
      IF (IFMIS.NE.0) THEN
        REWIND IFMIS 
        READ(IFMIS,*) AINST,PAS
        NFREQ=INT(AINST)
        ZI(JINFO+1)=NFREQ
        TABFRQ=SDEXSO//'.FREQ'
        CALL WKVECT(TABFRQ,'V V R',NFREQ,JFRQ)
        DO 101 I=1,NFREQ
          ZR(JFRQ+I-1) = (I-1)*PAS
  101   CONTINUE
C      READ(IFMIS) (ZR(JFRQ+IFR-1),IFR=1,NFREQ)
        NBMODE=NDDINT
        NBMOD2=NBMODE*NBMODE
        TABRIG=SDEXSO//'.RIGT'
        CALL WKVECT(TABRIG,'V V R',NBMOD2*NFREQ,JRIG) 
        DO 30 IFR = 1,NFREQ
          READ(IFMIS,*) RINST
          READ(IFMIS,1000) ((ZR(JRIG+(IFR-1)*NBMOD2+(I2-1)*NBMODE+I1-1),
     &                  I2=1,NBMODE),I1=1,NBMODE)     
 30     CONTINUE 
      ENDIF
      
C      CALL GETVIS('EXCIT_SOL','UNITE_RESU_FORC',1,IARG,1,IFFOR,N1)
C      IF (N1.EQ.0) THEN
C        ZI(JINFO+2)=0
C      ELSE
C        ZI(JINFO+2)=IFFOR      
C      ENDIF
      READ(ZK8(IDVEIS+3),'(I8)') IFFOR
      ZI(JINFO+2)=IFFOR 
C      CALL GETVIS('EXCIT_SOL','UNITE_RESU_MASS',1,IARG,1,IFMIS,N1)
      READ(ZK8(IDVEIS+1),'(I8)') IFMIS
      ZI(JINFO+3)=IFMIS
      IF (IFMIS.NE.0) THEN
        IF (ZI(JINFO).EQ.0) THEN
          REWIND IFMIS 
          READ(IFMIS,*) AINST,PAS
          NFREQ=INT(AINST)
          ZI(JINFO+1)=NFREQ
          TABFRQ=SDEXSO//'.FREQ'
          CALL WKVECT(TABFRQ,'V V R',NFREQ,JFRQ)
        DO 102 I=1,NFREQ
          ZR(JFRQ+I-1) = (I-1)*PAS
  102   CONTINUE
C      READ(IFMIS) (ZR(JFRQ+IFR-1),IFR=1,NFREQ)
        ENDIF
        REWIND IFMIS
        READ(IFMIS,*) AINST,PAS
        NFREQ=INT(AINST)
        DO 103 I=1,NFREQ
          ZR(JFRQ+I-1) = (I-1)*PAS
  103   CONTINUE
C      READ(IFMIS) (ZR(JFRQ+IFR-1),IFR=1,NFREQ)
        NBMODE=NDDINT
        NBMOD2=NBMODE*NBMODE
        TABRIG=SDEXSO//'.MAST'
        CALL WKVECT(TABRIG,'V V R',NBMOD2*NFREQ,JMASS) 
        DO 32 IFR = 1,NFREQ
          READ(IFMIS,*) RINST
         READ(IFMIS,1000) ((ZR(JMASS+(IFR-1)*NBMOD2+(I2-1)*NBMODE+I1-1),
     &                  I2=1,NBMODE),I1=1,NBMODE)
 32     CONTINUE      
      ENDIF

C      CALL GETVIS('EXCIT_SOL','UNITE_RESU_AMOR',1,IARG,1,IFMIS,N1)
      READ(ZK8(IDVEIS+2),'(I8)') IFMIS
      ZI(JINFO+4)=IFMIS
      IF (IFMIS.NE.0) THEN
        IF (ZI(JINFO).EQ.0.AND.ZI(JINFO+3).EQ.0) THEN
          REWIND IFMIS 
          READ(IFMIS,*) AINST,PAS
          NFREQ=INT(AINST)
          ZI(JINFO+1)=NFREQ
          TABFRQ=SDEXSO//'.FREQ'
          CALL WKVECT(TABFRQ,'V V R',NFREQ,JFRQ)
        DO 104 I=1,NFREQ
          ZR(JFRQ+I-1) = (I-1)*PAS
  104   CONTINUE
C      READ(IFMIS) (ZR(JFRQ+IFR-1),IFR=1,NFREQ)
        ENDIF
        REWIND IFMIS
        READ(IFMIS,*) AINST,PAS
        NFREQ=INT(AINST)
        DO 105 I=1,NFREQ
          ZR(JFRQ+I-1) = (I-1)*PAS
  105  CONTINUE
C      READ(IFMIS) (ZR(JFRQ+IFR-1),IFR=1,NFREQ)
        NBMODE=NDDINT
        NBMOD2=NBMODE*NBMODE
        TABRIG=SDEXSO//'.AMOT' 
        CALL WKVECT(TABRIG,'V V R',NBMOD2*NFREQ,JAMOR)
        DO 33 IFR = 1,NFREQ
          READ(IFMIS,*) RINST
         READ(IFMIS,1000) ((ZR(JAMOR+(IFR-1)*NBMOD2+(I2-1)*NBMODE+I1-1),
     &                  I2=1,NBMODE),I1=1,NBMODE)
 33     CONTINUE      
      ENDIF
      
      IF (ZI(JINFO).EQ.0) THEN
        TABRIG=SDEXSO//'.RIGT'
        CALL WKVECT(TABRIG,'V V R',NBMOD2*NFREQ,JRIG)      
        DO 61 ID1 = 1,NBMOD2*NFREQ
          ZR(JRIG + ID1 - 1) = 0.0D0
 61     CONTINUE      
      ENDIF
      
      IF (ZI(JINFO+3).EQ.0) THEN
        TABRIG=SDEXSO//'.MAST'
        CALL WKVECT(TABRIG,'V V R',NBMOD2*NFREQ,JMASS)
        DO 71 ID1 = 1,NBMOD2*NFREQ
          ZR(JMASS + ID1 - 1) = 0.0D0
 71     CONTINUE      
      ENDIF
      
      IF (ZI(JINFO+4).EQ.0) THEN
        TABRIG=SDEXSO//'.AMOT'
        CALL WKVECT(TABRIG,'V V R',NBMOD2*NFREQ,JAMOR)      
        DO 81 ID1 = 1,NBMOD2*NFREQ
          ZR(JAMOR + ID1 - 1) = 0.0D0
 81     CONTINUE      
      ENDIF
 1000 FORMAT((6(1X,1PE13.6)))
      CALL JEDEMA()
      END
