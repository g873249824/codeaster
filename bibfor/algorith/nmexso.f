      SUBROUTINE NMEXSO(NOMA  ,RESULT,SDDYNA,NUMEDD)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/02/2013   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRS_512
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXNOM
      CHARACTER*8  NOMA,RESULT
      CHARACTER*19 SDDYNA
      CHARACTER*24 NUMEDD
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (DYNAMIQUE)
C
C INITIALISATION FORCES DE SOL
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  RESULT : NOM DU RESULTAT
C IN  SDDYNA : SD DYNAMIQUE
C IN  NUMEDD : NUME_DDL
C
C ----------------------------------------------------------------------
C
      CHARACTER*15 SDEXSO
      CHARACTER*19 SDEXSZ
      CHARACTER*8  K8BID,CNFSOL
      CHARACTER*8  NOMACR
      CHARACTER*24 MAGRNO,MAILLE,NPRNO
      CHARACTER*24 TABEQU,TABFRQ,TABINF,NOMRES
      INTEGER      IEQINT,JFRQ,IDDINT,JNOMRE
      CHARACTER*24 GNINTF,TABRIG,TABMAS,TABAMO
      INTEGER      JRIG,JMAS,JAMO
      INTEGER      GD,APRNO
      REAL*8       PASA,PASM,PAS,AINST,RINST
      INTEGER      IAMACR,IDNO
      INTEGER      JDVEIS
      INTEGER      IBID,IRET
      INTEGER      IFREQ,I1,I2,INOE,INO,IMA,IDDL,ICMP
      CHARACTER*24 UNIAMO,UNIRIG,UNIMAS,UNIFOR
      INTEGER      UNITEA,UNITER,UNITEM,UNITEF
      INTEGER      UNIFRQ
      INTEGER      NFREQ,NFREQM,NFREQA
      INTEGER      NBMODE,NBMOD2,NBNO,NDDINT,NCMP,NEC,NBEC,NEQ
      CHARACTER*24 NCHSOL
      INTEGER      JCHSOL
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      TABFRQ = '&&NMEXSO.FREQ'
C
C --- ACCES NUMEROTATION
C
      CALL DISMOI('F','NB_EQUA'  ,NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
      CALL DISMOI('F','NUM_GD_SI',NUMEDD,'NUME_DDL',GD ,K8BID,IRET)
      NEC = NBEC(GD)
C
C --- ACCES SD EXCIT_SOL
C
      CALL NDYNKK(SDDYNA,'SDEXSO',SDEXSZ)
      SDEXSO = SDEXSZ(1:15)
C
C --- SAUVEGARDE NOM DU RESULTAT
C
      NOMRES = SDEXSO(1:15)//'.RESU'
      CALL WKVECT(NOMRES,'V V K8',1,JNOMRE)
      ZK8(JNOMRE) = RESULT
C
C --- RECUPERATION CHARGE
C
      NCHSOL = SDEXSO(1:15)//'.CHAR'
      CALL JEVEUO(NCHSOL,'L',JCHSOL)
      CNFSOL = ZK8(JCHSOL)
      CALL JEVEUO(CNFSOL//'.CHME.VEISS','L',JDVEIS)
C
C --- NOMS FICHIERS
C
      UNIRIG = ZK24(JDVEIS-1+1)
      UNIMAS = ZK24(JDVEIS-1+2)
      UNIAMO = ZK24(JDVEIS-1+3)
      UNIFOR = ZK24(JDVEIS-1+4)
      UNITER = 0
      UNITEM = 0
      UNITEA = 0
      UNITEF = 0
C
C --- GROUP_NO_INTERF
C
      GNINTF = ZK24(JDVEIS-1+5)
      IF (GNINTF.EQ.' ') THEN
        MAILLE = ZK24(JDVEIS-1+6)
        CALL JEVEUO(NOMA//'.NOMACR','L',IAMACR)
        CALL JENONU(JEXNOM(NOMA//'.SUPMAIL',MAILLE),IMA)
        NOMACR = ZK8(IAMACR-1+IMA)
        CALL JELIRA(NOMACR//'.LINO','LONMAX',NBNO,K8BID)
        CALL JEVEUO(NOMACR//'.LINO','L',IDNO)
      ELSE
        MAGRNO = NOMA(1:8)//'.GROUPENO'
        CALL JELIRA(JEXNOM(MAGRNO,GNINTF),'LONUTI',NBNO,K8BID)
        CALL JEVEUO(JEXNOM(MAGRNO,GNINTF),'L',IDNO)
      ENDIF
C
C --- NOMBRE DE DDL INTERNES
C
      NPRNO = NUMEDD(1:14)//'.NUME.PRNO'
      CALL JENONU(JEXNOM(NPRNO(1:19)//'.LILI','&MAILLA'),IBID)
      CALL JEVEUO(JEXNUM(NPRNO,IBID),'L',APRNO)
      NDDINT = 0
      DO 10 INO = 1,NBNO
        INOE   = ZI(IDNO+INO-1)
        NCMP   = ZI(APRNO + (NEC+2)*(INOE-1) + 2 - 1 )
        NDDINT = NDDINT+NCMP
 10   CONTINUE
C
C --- TABLEAU DES NUMEROS D EQUATION ACTIFS DE L INTERFACE
C
      TABEQU = SDEXSO(1:15)//'.EQINT'
      CALL WKVECT(TABEQU,'V V I',NDDINT,IEQINT)
      IDDINT=0
      DO 20 INO = 1,NBNO
        INOE = ZI(IDNO+INO-1)
        NCMP = ZI(APRNO + (NEC+2)*(INOE-1) + 2 - 1 )
        IDDL = ZI(APRNO + (NEC+2)*(INOE-1) + 1 - 1 )
        DO 21 ICMP = 1,NCMP
          IDDINT              = IDDINT+1
          ZI(IEQINT+IDDINT-1) = IDDL+ICMP-1
 21     CONTINUE
 20   CONTINUE
C
C --- OUVERTURE DES FICHIERS
C
      IF (UNIRIG.NE.' ') READ (UNIRIG,'(I24)') UNITER
      IF (UNIMAS.NE.' ') READ (UNIMAS,'(I24)') UNITEM
      IF (UNIAMO.NE.' ') READ (UNIAMO,'(I24)') UNITEA
      IF (UNIFOR.NE.' ') READ (UNIFOR,'(I24)') UNITEF
C
C --- QUEL FICHIER VA DONNER LA FREQUENCE ?
C
      UNIFRQ = 0
      IF (UNITER.EQ.0) THEN
        IF (UNITEM.EQ.0) THEN
          UNIFRQ = UNITEA
        ELSE
          UNIFRQ = UNITEM
        ENDIF
      ELSE
        UNIFRQ = UNITER
      ENDIF
C
      IF (UNIFRQ.EQ.0)      CALL ASSERT(.FALSE.)
      IF (UNIFRQ.EQ.UNITER) CALL U2MESS('I','DYNAMIQUE_20')
      IF (UNIFRQ.EQ.UNITEM) CALL U2MESS('I','DYNAMIQUE_21')
      IF (UNIFRQ.EQ.UNITEA) CALL U2MESS('I','DYNAMIQUE_22')
C
C --- LECTURE DU PAS D'ACTUALISATION
C
      REWIND UNIFRQ
      READ(UNIFRQ,*) AINST,PAS
      NFREQ       = NINT(AINST)
      CALL U2MESG('I','DYNAMIQUE_23',0,K8BID,1,NFREQ,1,PAS)
C
C --- TABLEAU DES FREQUENCES
C
      CALL WKVECT(TABFRQ,'V V R',NFREQ,JFRQ)
      DO 110 IFREQ=1,NFREQ
        ZR(JFRQ+IFREQ-1) = (IFREQ-1)*PAS
 110  CONTINUE
C
C --- VERIFICATIONS
C
      IF (UNITEM.NE.0) THEN
        IF (UNIFRQ.NE.UNITEM) THEN
          REWIND UNITEM
          READ(UNITEM,*) AINST,PASM
          NFREQM = INT(AINST)
          IF (NFREQM.NE.NFREQ) THEN
            CALL U2MESS('F','DYNAMIQUE_30')
          ENDIF
        ENDIF
      ENDIF
      IF (UNITEA.NE.0) THEN
        IF (UNIFRQ.NE.UNITEA) THEN
          REWIND UNITEA
          READ(UNITEA,*) AINST,PASA
          NFREQA = INT(AINST)
          IF (NFREQA.NE.NFREQ) THEN
            CALL U2MESS('F','DYNAMIQUE_31')
          ENDIF
        ENDIF
      ENDIF
C
C --- TAILLE TABLEAUX
C
      NBMODE = NDDINT
      NBMOD2 = NBMODE*NBMODE
C
C --- SAUVEGARDE INFORMATIONS
C
      TABINF = SDEXSO(1:15)//'.TABI'
      CALL WKVECT(TABINF,'V V R',3,IDDINT)
      ZR(IDDINT-1+1) = PAS
      ZR(IDDINT-1+2) = UNITEF
      ZR(IDDINT-1+3) = NDDINT
C
C --- LECTURE MATRICE REDUITE RIGIDITE A L'INTERFACE
C
      TABRIG = SDEXSO(1:15)//'.RIGT'
      CALL WKVECT(TABRIG,'V V R',NBMOD2*NFREQ,JRIG)
      IF (UNITER.NE.0) THEN
        DO 120 IFREQ = 1,NFREQ
          READ(UNITER,*) RINST
          READ(UNITER,1000) ((ZR(JRIG+(IFREQ-1)*NBMOD2+(I2-1)
     &                        *NBMODE+I1-1),
     &                        I2=1,NBMODE),I1=1,NBMODE)
120     CONTINUE
      ENDIF
C
C --- LECTURE MATRICE REDUITE MASSE A L'INTERFACE
C
      TABMAS = SDEXSO(1:15)//'.MAST'
      CALL WKVECT(TABMAS,'V V R',NBMOD2*NFREQ,JMAS)
      IF (UNITEM.NE.0) THEN
        DO 130 IFREQ = 1,NFREQ
          READ(UNITEM,*) RINST
          READ(UNITEM,1000) ((ZR(JMAS+(IFREQ-1)*NBMOD2+(I2-1)
     &                        *NBMODE+I1-1),
     &                        I2=1,NBMODE),I1=1,NBMODE)
130     CONTINUE
      ENDIF
C
C --- LECTURE MATRICE REDUITE AMORTISSEMENT A L'INTERFACE
C
      TABAMO = SDEXSO(1:15)//'.AMOT'
      CALL WKVECT(TABAMO,'V V R',NBMOD2*NFREQ,JAMO)
      IF (UNITEA.NE.0) THEN
        DO 140 IFREQ = 1,NFREQ
          READ(UNITEA,*) RINST
          READ(UNITEA,1000) ((ZR(JAMO+(IFREQ-1)*NBMOD2+(I2-1)
     &                        *NBMODE+I1-1),
     &                        I2=1,NBMODE),I1=1,NBMODE)
140     CONTINUE
      ENDIF
C
      CALL JEDETR(TABFRQ)
 1000 FORMAT((6(1X,1PE13.6)))
      CALL JEDEMA()
      END
