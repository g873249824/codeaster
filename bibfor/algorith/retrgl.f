      SUBROUTINE RETRGL(NOMRES,RESGEN,MAILSK,PROFNO)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/02/2007   AUTEUR LEBOUVIER F.LEBOUVIER 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C***********************************************************************
      IMPLICIT REAL*8 (A-H,O-Z)
C  C. VARE     DATE 16/11/94
C-----------------------------------------------------------------------
C
C  BUT : < RESTITUTION TRANSITOIRE GLOBALE >
C
C        RESTITUER EN BASE PHYSIQUE SUR UN MAILLAGE SQUELETTE LES
C        RESULTATS ISSUS D'UN CALCUL TRANSITOIRE PAR SOUS-STRUCTURATION
C        CLASSIQUE
C
C        LE CONCEPT RESULTAT EST UN RESULTAT COMPOSE "DYNA_TRANS"
C
C-----------------------------------------------------------------------
C
C NOMRES /I/ : NOM K8 DU CONCEPT DYNA_TRANS RESULTAT
C RESGEN /I/ : NOM K8 DU RESULTAT GENERALISE AMONT (TRAN_GENE)
C MAILSK /I/ : NOM K8 DU MAILLAGE SQUELETTE SUPPORT
C PROFNO /I/ : NOM K19 DU PROF_CHNO DU SQUELETTE
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32 JEXNUM,JEXNOM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      REAL*8       EPSI
      CHARACTER*6  PGC
      CHARACTER*8  CHMP(3),K8REP,CRIT,INTERP,K8B,NOMRES,BASMOD,MAILLA
      CHARACTER*8  LINT,MAILSK,MODGEN,RESGEN,SOUTR,KBID
      CHARACTER*19 NUMDDL,NUMGEN,KNUME,KINST,TRANGE,PROFNO
      CHARACTER*24 CREFE(2),CHAMBA,INDIRF,CHAMNO
      CHARACTER*24 VALK
      INTEGER      ITRESU(3)
      CHARACTER*8 K8BID
C
C-----------------------------------------------------------------------
      DATA PGC   /'RETRGL'/
      DATA SOUTR /'&SOUSSTR'/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
      INDIRF = '&&'//PGC//'.INDIR.SST'
C
C --- ECRITURE DU TITRE
C
      CALL TITRE
C
C --- VERIFICATION SQUELETTE
C
      CALL JEEXIN(MAILSK//'.INV.SKELETON',IRET)
      IF (IRET.EQ.0) THEN
        VALK = MAILSK
        CALL U2MESG('F', 'ALGORITH14_48',1,VALK,0,0,0,0.D0)
      ENDIF
      CALL JEVEUO(MAILSK//'.INV.SKELETON','L',LLINSK)
C
C --- DETERMINATION DES CHAMPS A RESTITUER, PARMI DEPL, VITE ET ACCE
C
      TRANGE = RESGEN
      CALL JEEXIN(RESGEN//'           .DEPL',IRE1)
      CALL JEEXIN(RESGEN//'           .VITE',IRE2)
      CALL JEEXIN(RESGEN//'           .ACCE',IRE3)
C
      IF (IRE1.EQ.0.AND.IRE2.EQ.0.AND.IRE3.EQ.0.D0) THEN
        VALK = RESGEN
        CALL U2MESG('F', 'ALGORITH14_49',1,VALK,0,0,0,0.D0)
      ENDIF
C
      CALL GETVTX(' ','TOUT_CHAM',0,1,1,K8REP,N1)
      IF (K8REP(1:3).EQ.'OUI') THEN
        IF (IRE1.EQ.0) THEN
          CALL U2MESS('F','ALGORITH10_44')
        ENDIF
        IF (IRE2.EQ.0) THEN
          CALL U2MESS('F','ALGORITH10_45')
        ENDIF
        IF (IRE3.EQ.0) THEN
          CALL U2MESS('F','ALGORITH10_46')
        ENDIF
        NBCHAM = 3
        CHMP(1) = 'DEPL'
        CHMP(2) = 'VITE'
        CHMP(3) = 'ACCE'
        CALL JEVEUO(TRANGE//'.DEPL','L',ITRESU(1))
        CALL JEVEUO(TRANGE//'.VITE','L',ITRESU(2))
        CALL JEVEUO(TRANGE//'.ACCE','L',ITRESU(3))
      ELSE
        CALL GETVTX(' ','NOM_CHAM',0,1,1,K8REP,N1)
        IF (K8REP(1:4).EQ.'DEPL'.AND.IRE1.EQ.0) THEN
          CALL U2MESS('F','ALGORITH10_44')
        ELSEIF (K8REP(1:4).EQ.'DEPL'.AND.IRE1.NE.0) THEN
          NBCHAM = 1
          CHMP(1) = 'DEPL'
          CALL JEVEUO(TRANGE//'.DEPL','L',ITRESU(1))
        ELSEIF (K8REP(1:4).EQ.'VITE'.AND.IRE2.EQ.0) THEN
          CALL U2MESS('F','ALGORITH10_45')
        ELSEIF (K8REP(1:4).EQ.'VITE'.AND.IRE2.NE.0) THEN
          NBCHAM = 1
          CHMP(1) = 'VITE'
          CALL JEVEUO(TRANGE//'.VITE','L',ITRESU(1))
        ELSEIF (K8REP(1:4).EQ.'ACCE'.AND.IRE3.EQ.0) THEN
          CALL U2MESS('F','ALGORITH10_46')
        ELSEIF (K8REP(1:4).EQ.'ACCE'.AND.IRE3.NE.0) THEN
          NBCHAM = 1
          CHMP(1) = 'ACCE'
          CALL JEVEUO(TRANGE//'.ACCE','L',ITRESU(1))
        ENDIF
      ENDIF
C
C --- RECUPERATION DE LA NUMEROTATION ET DU MODELE GENERALISE
C
      CALL JEVEUO(TRANGE//'.REFD','L',LLREF1)
      NUMGEN(1:14) = ZK24(LLREF1+5)
      NUMGEN(15:19) = '.NUME'
      CALL JEVEUO(NUMGEN//'.REFN','L',LLREF2)
      MODGEN = ZK24(LLREF2)
      CALL JEVEUO(NUMGEN//'.NEQU','L',LLNEQU)
      NEQGEN = ZI(LLNEQU)
C
      CALL JELIRA(MODGEN//'      .MODG.SSNO','NOMMAX',NBSST,K8BID)
      KBID = '  '
      CALL MGUTDM(MODGEN,KBID,1,'NB_CMP_MAX',NBCMP,K8BID)
C
C --- RECUPERATION DES ROTATIONS
C
      CALL WKVECT('&&'//PGC//'ROTX','V V R',NBSST,LTROTX)
      CALL WKVECT('&&'//PGC//'ROTY','V V R',NBSST,LTROTY)
      CALL WKVECT('&&'//PGC//'ROTZ','V V R',NBSST,LTROTZ)
      DO 15 I = 1,NBSST
        CALL JEVEUO(JEXNUM(MODGEN//'      .MODG.SSOR',I),'L',LLROT)
        ZR(LTROTZ+I-1) = ZR(LLROT)
        ZR(LTROTY+I-1) = ZR(LLROT+1)
        ZR(LTROTX+I-1) = ZR(LLROT+2)
15    CONTINUE
C
C --- CREATION DU PROF-CHAMNO
C
      CALL GENUGL(PROFNO,INDIRF,MODGEN,MAILSK)
      CALL JELIRA(PROFNO//'.NUEQ','LONMAX',NEQ,K8BID)
C
C --- RECUPERATION DU NOMBRE DE NOEUDS
C
      CALL DISMOI('F','NB_NO_MAILLA',MAILSK,'MAILLAGE',NBNOT,K8BID,IRET)
C
C --- INFORMATIONS POUR CREATION DES CHAMNO A PARTIR DES .REFE
C
      CREFE(1) = MAILSK
      CREFE(2) = PROFNO
C
C --- RECUPERATION DES INSTANTS
C
      CALL GETVTX(' ','CRITERE'  ,0,1,1,CRIT,N1)
      CALL GETVR8(' ','PRECISION',0,1,1,EPSI,N1)
      CALL GETVTX(' ','INTERPOL' ,0,1,1,INTERP,N1)
C
      KNUME = '&&RETREC.NUM_RANG'
      KINST = '&&RETREC.INSTANT'
      CALL RSTRAN(INTERP,TRANGE,' ',1,KINST,KNUME,NBINST,IRETOU)
      IF (IRETOU.NE.0) THEN
        CALL U2MESS('F','ALGORITH10_47')
      ENDIF
      CALL JEEXIN(KINST,IRET)
      IF (IRET.GT.0) THEN
        CALL JEVEUO(KINST,'E',JINST)
        CALL JEVEUO(KNUME,'E',JNUME)
      END IF
C
C --- ALLOCATION DE LA STRUCTURE DE DONNEES RESULTAT-COMPOSE
C
      CALL RSCRSD(NOMRES,'DYNA_TRANS',NBINST)
C
C -------------------------------------
C --- RESTITUTION SUR BASE PHYSIQUE ---
C -------------------------------------
C
      CALL JEVEUO(NUMGEN//'.NUEQ','L',LLNUEQ)
      CALL JENONU(JEXNOM(NUMGEN//'.LILI',SOUTR),IBID)
      CALL JEVEUO(JEXNUM(NUMGEN//'.ORIG',IBID),'L',LLORS)
      CALL JENONU(JEXNOM(NUMGEN//'.LILI',SOUTR),IBID)
      CALL JEVEUO(JEXNUM(NUMGEN//'.PRNO',IBID),'L',LLPRS)
C
      IARCHI = 0
      IF (INTERP(1:3).NE.'NON') THEN
        CALL JEVEUO(TRANGE//'.INST','L',IDINSG)
        CALL JELIRA(TRANGE//'.INST','LONMAX',NBINSG,K8B)
        CALL WKVECT('&&RETREC.VECTGENE','V V R',NEQGEN,IDVECG)
C
        DO 30 I=0,NBINST-1
          IARCHI = IARCHI + 1
C
          DO 32 ICH=1,NBCHAM
            IDRESU = ITRESU(ICH)
            CALL RSEXCH(NOMRES,CHMP(ICH),IARCHI,CHAMNO,IRET)
            IF (IRET.EQ.0) THEN
              CALL U2MESK('A','ALGORITH2_64',1,CHAMNO)
            ELSEIF (IRET.EQ.100) THEN
              CALL VTCREA(CHAMNO,CREFE,'G','R',NEQ)
            ELSE
              CALL U2MESS('F','ALGORITH3_16')
            ENDIF
            CHAMNO(20:24) = '.VALE'
            CALL JEVEUO(CHAMNO,'E',LDNEW)
            CALL EXTRAC(INTERP,EPSI,CRIT,NBINSG,ZR(IDINSG),ZR(JINST+I),
     &                  ZR(IDRESU),NEQGEN,ZR(IDVECG),IER)
C
C --- BOUCLE SUR LES SOUS-STRUCTURES
C
            DO 34 K=1,NBSST
              CALL JEEXIN(JEXNUM(INDIRF,K),IRET)
C
C --- TEST SI LA SST GENERE DES DDL GLOBAUX
C
              IF (IRET.NE.0) THEN
                KBID = '  '
                CALL MGUTDM(MODGEN,KBID,K,'NOM_BASE_MODALE',IBID,BASMOD)
                CALL BMNBMD(BASMOD,'TOUT',NBBAS)
                KBID = '  '
                CALL MGUTDM(MODGEN,KBID,K,'NOM_NUME_DDL',IBID,NUMDDL)
                CALL DISMOI('F','NB_EQUA',NUMDDL,'NUME_DDL',NEQS,KBID,
     &                      IRET)
                CALL WKVECT('&&'//PGC//'.TRAV','V V R',NEQS,LTVEC)
C
C --- RECUPERATION DU NUMERO TARDIF DE LA SST
C
                DO 36 J=1,NBSST
                  IF (ZI(LLORS+J-1).EQ.K) NUTARS=J
36              CONTINUE
                IEQ = ZI(LLPRS+(NUTARS-1)*2)
C
C --- BOUCLE SUR LES MODES PROPRES DE LA BASE
C
                DO 38 J=1,NBBAS
                  CALL DCAPNO(BASMOD,'DEPL',J,CHAMBA)
                  CALL JEVEUO(CHAMBA,'L',LLCHAB)
                  IAD = IDVECG + ZI(LLNUEQ+IEQ+J-2) - 1
C
C --- BOUCLE SUR LES EQUATIONS PHYSIQUES
C
                  DO 40 L=1,NEQS
                    ZR(LTVEC+L-1)=ZR(LTVEC+L-1)+ZR(LLCHAB+L-1)*ZR(IAD)
40                CONTINUE
38              CONTINUE
                CALL JEVEUO(JEXNUM(INDIRF,K),'L',LLIND)
                CALL JELIRA(JEXNUM(INDIRF,K),'LONMAX',NBCOU,K8BID)
                NBCOU = NBCOU/2
                DO 45 L=1,NBCOU
                  IDEP = ZI(LLIND+(L-1)*2)
                  IAR = ZI(LLIND+(L-1)*2+1)
                  ZR(LDNEW+IAR-1) = ZR(LTVEC+IDEP-1)
45              CONTINUE
                CALL JEDETR('&&'//PGC//'.TRAV')
              ENDIF
C
34          CONTINUE
            CALL RSNOCH(NOMRES,CHMP(ICH),IARCHI,' ')
C
C --- ROTATION DU CHAMP AUX NOEUDS
C
            CALL ROTCHM(PROFNO,ZR(LDNEW),ZR(LTROTZ),NBSST,ZI(LLINSK),
     &                  NBNOT,NBCMP,3)
            CALL ROTCHM(PROFNO,ZR(LDNEW),ZR(LTROTY),NBSST,ZI(LLINSK),
     &                  NBNOT,NBCMP,2)
            CALL ROTCHM(PROFNO,ZR(LDNEW),ZR(LTROTX),NBSST,ZI(LLINSK),
     &                  NBNOT,NBCMP,1)
C
32        CONTINUE
          CALL RSADPA(NOMRES,'E',1,'INST',IARCHI,0,LINST,K8B)
          ZR(LINST) = ZR(JINST+I)
30      CONTINUE
C
      ELSE
        CALL JEEXIN(TRANGE//'.ORDR',IRET)
        IF (IRET.NE.0.AND.ZI(JNUME).EQ.1) IARCHI=-1
C
        DO 50 I=0,NBINST-1
          IARCHI = IARCHI + 1
C
          DO 52 ICH=1,NBCHAM
            IDRESU = ITRESU(ICH)
            CALL RSEXCH(NOMRES,CHMP(ICH),IARCHI,CHAMNO,IRET)
            IF (IRET.EQ.0) THEN
              CALL U2MESK('A','ALGORITH2_64',1,CHAMNO)
            ELSEIF (IRET.EQ.100) THEN
              CALL VTCREA(CHAMNO,CREFE,'G','R',NEQ)
            ELSE
              CALL U2MESS('F','ALGORITH3_16')
            ENDIF
            CHAMNO(20:24) = '.VALE'
            CALL JEVEUO(CHAMNO,'E',LDNEW)
C
C --- BOUCLE SUR LES SOUS-STRUCTURES
C
            DO 54 K=1,NBSST
              CALL JEEXIN(JEXNUM(INDIRF,K),IRET)
C
C --- TEST SI LA SST GENERE DES DDL GLOBAUX
C
              IF (IRET.NE.0) THEN
                KBID = '  '
                CALL MGUTDM(MODGEN,KBID,K,'NOM_BASE_MODALE',IBID,BASMOD)
                CALL BMNBMD(BASMOD,'TOUT',NBBAS)
                KBID = '  '
                CALL MGUTDM(MODGEN,KBID,K,'NOM_NUME_DDL',IBID,NUMDDL)
                CALL DISMOI('F','NB_EQUA',NUMDDL,'NUME_DDL',NEQS,KBID,
     &                      IRET)
                CALL WKVECT('&&'//PGC//'.TRAV','V V R',NEQS,LTVEC)
C
C --- RECUPERATION DU NUMERO TARDIF DE LA SST
C
                DO 56 J=1,NBSST
                  IF (ZI(LLORS+J-1).EQ.K) NUTARS=J
56              CONTINUE
                IEQ = ZI(LLPRS+(NUTARS-1)*2)
C
C --- BOUCLE SUR LES MODES PROPRES DE LA BASE
C
                DO 58 J=1,NBBAS
                  CALL DCAPNO(BASMOD,'DEPL',J,CHAMBA)
                  CALL JEVEUO(CHAMBA,'L',LLCHAB)
                  IAD=IDRESU+(ZI(JNUME+I)-1)*NEQGEN+ZI(LLNUEQ+IEQ+J-2)-1
C
C --- BOUCLE SUR LES EQUATIONS PHYSIQUES
C
                  DO 60 L=1,NEQS
                    ZR(LTVEC+L-1)=ZR(LTVEC+L-1)+ZR(LLCHAB+L-1)*ZR(IAD)
60                CONTINUE
58              CONTINUE
                CALL JEVEUO(JEXNUM(INDIRF,K),'L',LLIND)
                CALL JELIRA(JEXNUM(INDIRF,K),'LONMAX',NBCOU,K8BID)
                NBCOU = NBCOU/2
                DO 65 L=1,NBCOU
                  IDEP = ZI(LLIND+(L-1)*2)
                  IAR = ZI(LLIND+(L-1)*2+1)
                  ZR(LDNEW+IAR-1) = ZR(LTVEC+IDEP-1)
65              CONTINUE
                CALL JEDETR('&&'//PGC//'.TRAV')
              ENDIF
C
54          CONTINUE
            CALL RSNOCH(NOMRES,CHMP(ICH),IARCHI,' ')
C
C --- ROTATION DU CHAMP AUX NOEUDS
C
            CALL ROTCHM(PROFNO,ZR(LDNEW),ZR(LTROTZ),NBSST,ZI(LLINSK),
     &                  NBNOT,NBCMP,3)
            CALL ROTCHM(PROFNO,ZR(LDNEW),ZR(LTROTY),NBSST,ZI(LLINSK),
     &                  NBNOT,NBCMP,2)
            CALL ROTCHM(PROFNO,ZR(LDNEW),ZR(LTROTX),NBSST,ZI(LLINSK),
     &                  NBNOT,NBCMP,1)
C
52        CONTINUE
          CALL RSADPA(NOMRES,'E',1,'INST',IARCHI,0,LINST,K8B)
          ZR(LINST) = ZR(JINST+I)
50      CONTINUE
C
      ENDIF
C
      CALL WKVECT(NOMRES//'           .REFD','G V K24',6,LREFE)
      ZK24(LREFE  ) = ZK24(LLREF1)
      ZK24(LREFE+1) = ZK24(LLREF1+1)
      ZK24(LREFE+2) = ZK24(LLREF1+2)
      ZK24(LREFE+3) = ZK24(LLREF1+3)
      ZK24(LREFE+4) = ZK24(LLREF1+4)
      ZK24(LREFE+5) = ZK24(LLREF1+5)
C
      CALL JEDETC('V','&&'//PGC,1)
      CALL JEDETC(' ','&&RETREC',1)
C
      GOTO 9999
C
 9999 CONTINUE
      CALL JEDEMA()
      END
