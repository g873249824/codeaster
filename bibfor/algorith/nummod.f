      SUBROUTINE  NUMMOD (NOMNUM,NOMSTO,MODMEC)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 05/12/2001   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C***********************************************************************
C    G. JACQUART     DATE 1995
C-----------------------------------------------------------------------
C    BUT: < NUMEROTATION GENERALISEE >
C
C    DETERMINER LA NUMEROTATION GENERALISEE A PARTIR D'UN MODE_MECA
C    OU D'UN MODE_GENE
C    LA NUMEROTATION SERA PAR DEFAUT PLEINE
C
C-----------------------------------------------------------------------
C
C NOMNUM /I/ : NOM K19 DE LA NUMEROTATION GENERALISEE .NUME
C NOMSTO /I/ : NOM K19 DE LA NUMEROTATION GENERALISEE .SLCS
C MODMEC /I/ : NOM K8 DU MODE_MECA OU DU MODE_GENE
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32  JEXNUM,JEXNOM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CHARACTER*6  PGC
      CHARACTER*8  MODMEC,NOMCOU,KBID,K8BID,MATRAS
      CHARACTER*14 NUMDD1
      CHARACTER*16 TYPE
      CHARACTER*19 NOMNUM,NOMSTO
      CHARACTER*24 MATRIC,TYPROF
      REAL*8       BID,EBID,TBLOC ,JEVTBL
      COMPLEX*16   CBID
C
C-----------------------------------------------------------------------
      DATA PGC /'NUMMOD'/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C-----------------------------------------------------------------------
C
      CALL GETVIS(' ','NB_VECT',0,1,1,NBVECT,N1)
      CALL GETVTX(' ','STOCKAGE',0,1,1,TYPROF,N1)
C
C-----RECUPERATION DU NB DE MODES DU CONCEPT MODE_MECA OU MODE_GENE
C
      CALL RSORAC(MODMEC,'LONUTI',IBID,BID,K8BID,CBID,EBID,'ABSOLU',
     +            NBMODE,1,NBID)
C
C-----TEST NBVECT A UTILISER / NBMODE
C
      IF (NBVECT.LE.NBMODE) THEN
         NBMODE = NBVECT
      ELSE
         CALL UTMESS('I',PGC,
     +                'NOMBRE DE VECTEURS DEMANDE TROP GRAND ON PREND '
     +                //'TOUS LES MODES DU CONCEPT MODE_MECA ')
      ENDIF
C
C-----CREATION DU .REFN
C
      CALL WKVECT(NOMNUM//'.REFN','G V K24',2,LDREF)
      ZK24(LDREF)=MODMEC
      ZK24(LDREF+1)='DEPL_R'
C
C-----CREATION DU .DESC
C
      CALL WKVECT(NOMNUM//'.DESC','G V I',1,LDDESC)
      ZI(LDDESC)=2
C
C---------------------------DECLARATION JEVEUX--------------------------
C
C     CREATION DE LA COLLECTION .LILI
C
      CALL JECREO(NOMNUM//'.LILI','G N K8')
      CALL JEECRA(NOMNUM//'.LILI','NOMMAX',2,' ')
      CALL JECROC(JEXNOM(NOMNUM//'.LILI','&SOUSSTR'))
      CALL JECROC(JEXNOM(NOMNUM//'.LILI','LIAISONS'))
C
C     CREATION DES COLLECTIONS
C
      CALL JECREC(NOMNUM//'.PRNO','G V I','NU',
     &'DISPERSE','VARIABLE',2)
      CALL JECREC(NOMNUM//'.ORIG','G V I','NU',
     &'DISPERSE','VARIABLE',2)
C
C------RECUPERATION DES DIMENSIONS PRINCIPALES
C
      CALL WKVECT(NOMNUM//'.NEQU','G V I',1,LDNEQU)
      ZI(LDNEQU)=NBMODE
C
C-----ECRITURE DIMENSIONS
C
      CALL JENONU(JEXNOM(NOMNUM//'.LILI','&SOUSSTR'),IBID)
      CALL JEECRA(JEXNUM(NOMNUM//'.PRNO',IBID),'LONMAX',
     &2,' ')
      CALL JENONU(JEXNOM(NOMNUM//'.LILI','&SOUSSTR'),IBID)
      CALL JEECRA(JEXNUM(NOMNUM//'.ORIG',IBID),'LONMAX',2,' ')
      CALL JENONU(JEXNOM(NOMNUM//'.LILI','LIAISONS'),IBID)
      CALL JEECRA(JEXNUM(NOMNUM//'.PRNO',IBID),'LONMAX',
     &2,' ')
      CALL JENONU(JEXNOM(NOMNUM//'.LILI','LIAISONS'),IBID)
      CALL JEECRA(JEXNUM(NOMNUM//'.ORIG',IBID),'LONMAX',2,' ')
      CALL JENONU(JEXNOM(NOMNUM//'.LILI','&SOUSSTR'),IBID)
      CALL JEVEUO(JEXNUM(NOMNUM//'.PRNO',IBID),'E',LDPRS)
      CALL JENONU(JEXNOM(NOMNUM//'.LILI','&SOUSSTR'),IBID)
      CALL JEVEUO(JEXNUM(NOMNUM//'.ORIG',IBID),'E',LDORS)
      CALL JENONU(JEXNOM(NOMNUM//'.LILI','LIAISONS'),IBID)
      CALL JEVEUO(JEXNUM(NOMNUM//'.PRNO',IBID),'E',LDPRL)
      CALL JENONU(JEXNOM(NOMNUM//'.LILI','LIAISONS'),IBID)
      CALL JEVEUO(JEXNUM(NOMNUM//'.ORIG',IBID),'E',LDORL)
C
      ZI(LDORS)=1
      ZI(LDPRS+1)=NBMODE
      ZI(LDPRS)=1
      ZI(LDORL)=1
      ZI(LDORL+1)=1
      ZI(LDPRL)=0
      ZI(LDPRL+1)=0
C
C-----BOUCLES DE COMPTAGE DES DDL
C
C
C-----ALLOCATIONS DIVERSES
C
      CALL WKVECT(NOMNUM//'.DEEQ','G V I',NBMODE*2,LDDEEQ)
      CALL WKVECT(NOMNUM//'.NUEQ','G V I',NBMODE,LDNUEQ)
C
C       REMPLISSAGE DU .DEEQ ET DU .NUEQ
C
        DO 100 J=1,NBMODE
          ZI(LDNUEQ+J-1)=J
          ZI(LDDEEQ+2*J-1)=1
          ZI(LDDEEQ+2*J-2)=J
100     CONTINUE
C
C     CREATION DU STOCKAGE LIGNE DE CIEL
C
C-----CREATION DU .REFE
C
      CALL WKVECT(NOMSTO//'.REFE','G V K24',1,LDREF)
      CALL JEECRA(NOMSTO//'.REFE','DOCU',1,'SLCS')
      ZK24(LDREF)=NOMNUM
C
C-----RECUPERATION TAILLE DE BLOC EN ARGUMENT
C
      TBLOC=JEVTBL()
      NTBLOC=INT(1.D+3*TBLOC)
C
C     VERIF QUE LA MATRICE TIENT SUR 1 BLOC
C
      IF (TYPROF(1:5).EQ.'PLEIN') THEN
        IF (NTBLOC.LT.(NBMODE*(NBMODE+1)/2)) THEN
          CALL UTMESS('F',PGC,
     +                ' LA MATRICE NE TIENT PAS DANS UN SEUL BLOC '
     +                //' ON ARRETE TOUT ')
        ENDIF
      ELSE
        IF (NTBLOC.LT.NBMODE) THEN
          CALL UTMESS('F',PGC,
     +                ' LA MATRICE NE TIENT PAS DANS UN SEUL BLOC '
     +                //' ON ARRETE TOUT ')
        ENDIF
      ENDIF
C
C-----DETERMINATION DU PROFIL (LIGNE DE CIEL : PLEIN OU DIAG)
C
      CALL WKVECT(NOMSTO//'.HCOL','G V I',NBMODE,LDHCOL)
C
      DO 200 I=1,NBMODE
         IF (TYPROF.EQ.'PLEIN') THEN
           ZI(LDHCOL+I-1)=I
         ELSE
           ZI(LDHCOL+I-1)=1
         ENDIF
200   CONTINUE
C
C-----DETERMINATION DU NOMBRE DE BLOCS
C
      NBLOC=1
      CALL WKVECT(NOMSTO//'.IABL','G V I',NBMODE,LDIABL)
      DO 110 I=1,NBMODE
        ZI(LDIABL+I-1)=NBLOC
110   CONTINUE
C
C-----CREATION DES OBJETS ADIA ET ABLO
C
      CALL WKVECT(NOMSTO//'.ABLO','G V I',NBLOC+1,LDABLO)
      CALL WKVECT(NOMSTO//'.ADIA','G V I',NBMODE,LDADIA)
C
      NBLOC=1
      NTERM=0
      ZI(LDABLO)=0
      ZI(LDABLO+1)=NBMODE
C
      DO 120 I=1,NBMODE
        NTERM=NTERM+ZI(LDHCOL+I-1)
        ZI(LDADIA+I-1)=NTERM
120   CONTINUE
C
C-----SAUVEGARDE DES OBJETS ALLOUES
C
C
C-----DETERMINATION DU .DESC
C
      CALL WKVECT(NOMSTO//'.DESC','G V I',4,LDDESC)
      ZI(LDDESC)=NBMODE
      ZI(LDDESC+1)=NTERM
      ZI(LDDESC+2)=NBLOC
      IF (TYPROF(1:5).EQ.'PLEIN') THEN
        ZI(LDDESC+3)=NBMODE
      ELSE
        ZI(LDDESC+3)=1
      ENDIF
C
C-----SAUVEGARDES DIVERSES
C
C
 9999 CONTINUE
      CALL JEDEMA()
      END
