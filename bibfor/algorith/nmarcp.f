      SUBROUTINE NMARCP(TYPOST,SDPOST,VECMOD,FREQR ,IMODE )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/12/2011   AUTEUR BEAURAIN J.BEAURAIN 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*4  TYPOST
      CHARACTER*19 SDPOST
      CHARACTER*19 VECMOD  
      REAL*8       FREQR
      INTEGER      IMODE
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - ARCHIVAGE)
C
C VECTEUR DE DEPL. POUR LE MODE
C
C ----------------------------------------------------------------------
C
C
C IN  TYPOST : TYPE DE POST-TRAITEMENTS (FLAMBEMENT OU MODE_VIBR)
C IN  SDPOST : SD POUR POST-TRAITEMENTS (CRIT_FLAMB ET MODE_VIBR)
C OUT VECMOD : VECTEUR DE DEPLACEMENT POUR LE MODE
C OUT FREQR  : FREQUENCE ATTACHEE AU MODE
C OUT IMODE  : VAUT ZEOR S'IL N'Y A PAS DE MODE 
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      IBID,NUMORD,NUMD2
      CHARACTER*24 K24BID 
      REAL*8       R8BID,R8VIDE
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- MODE SELECTIONNE: INFOS DANS SDPOST
C
      IF ( TYPOST .EQ. 'VIBR' ) THEN
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'SOLU_FREQ_VIBR',
     &              IBID             ,FREQR ,K24BID) 
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'SOLU_NUME_VIBR',
     &              NUMORD           ,R8BID ,K24BID)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'SOLU_MODE_VIBR',
     &              IBID             ,R8BID ,VECMOD)
      ELSEIF ( TYPOST .EQ. 'FLAM' ) THEN  
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'SOLU_FREQ_FLAM',
     &              IBID             ,FREQR ,K24BID) 
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'SOLU_NUME_FLAM',
     &              NUMORD           ,R8BID ,K24BID)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'SOLU_MODE_FLAM',
     &              IBID             ,R8BID ,VECMOD)
      ELSEIF ( TYPOST .EQ. 'STAB' ) THEN 
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'SOLU_FREQ_STAB',
     &              IBID             ,FREQR ,K24BID) 
        IF (NUMORD.LT.1) THEN
          NUMD2 = NUMORD
        ELSE
          NUMD2 = 1
        ENDIF    
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'SOLU_NUME_STAB',
     &              NUMD2            ,R8BID ,K24BID)
        CALL NMLESD('POST_TRAITEMENT',SDPOST,'SOLU_MODE_STAB',
     &              IBID             ,R8BID ,VECMOD)           
      ELSE
        CALL ASSERT(.FALSE.)  
      ENDIF     
C
C --- EXTRACTION DU MODE
C
      IF (FREQR.EQ.R8VIDE()) THEN
        IMODE = 0
      ELSE
        IMODE = 1
      ENDIF  
C
      CALL JEDEMA()
      END
