      SUBROUTINE NMEVDT(SDTIME,SDERRO,TIMER )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/04/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'
      CHARACTER*24 SDERRO
      CHARACTER*24 SDTIME
      CHARACTER*3  TIMER
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C VERIFICATION DU DECLENCHEMENT DES EVENT-DRIVEN TIMER ET INTERRUPTION
C
C ----------------------------------------------------------------------
C
C
C IN  SDERRO : SD GESTION DES ERREURS
C IN  SDTIME : SD TIMER
C IN  TIMER  : NOM DU TIMER
C                'PAS'   TIMER POUR UN PAS DE TEMPS
C                'ITE'   TIMER POUR UNE ITERATION DE NEWTON
C
C ----------------------------------------------------------------------
C
      LOGICAL      MTCPUI,MTCPUP,STOPUS
      INTEGER      ETAUSR
      CHARACTER*4  ETNEWT
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      MTCPUP = .FALSE.
      MTCPUI = .FALSE.
      STOPUS = (ETAUSR().EQ.1)
C
      IF (TIMER.EQ.'PAS') THEN
C
C ----- ASSEZ DE TEMPS POUR UN NOUVEAU PAS ?
C
        CALL NMTIMA(SDTIME,'PAS',MTCPUP)
      ELSEIF  (TIMER.EQ.'ITE') THEN
        CALL NMLEEB(SDERRO,'NEWT',ETNEWT)
C
C ----- ASSEZ DE TEMPS POUR UNE NOUVELLE ITERATION DE NEWTON ?
C
        IF (ETNEWT.NE.'CONV') CALL NMTIMA(SDTIME,'ITE',MTCPUI)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- INTERRUPTION DEMANDEE PAR SIGNAL ?
C
      STOPUS = ETAUSR().EQ.1
C
C --- SAUVEGARDE DES EVENEMENTS
C
      CALL NMCREL(SDERRO,'ERRE_EXCP',STOPUS)
      CALL NMCREL(SDERRO,'ERRE_TIMP',MTCPUP)
      CALL NMCREL(SDERRO,'ERRE_TIMN',MTCPUI)
C
      CALL JEDEMA()
      END
