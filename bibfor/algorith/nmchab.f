      SUBROUTINE NMCHAB (FAMI,KPG,KSP,NDIM,TYPMOD,IMATE,COMPOR,CRIT,
     &                   INSTAM,INSTAP,DEPS,SIGM,VIM,
     &                   OPTION,SIGP,VIP,DSIDEP,IRET)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DKVIILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PROIX J.M.PROIX
C.======================================================================
      IMPLICIT NONE
C
C     INTEGRATION LOCALE DES LOIS DE COMPORTEMENT DE CHABOCHE 
C          RELATIONS : 'VMIS_CIN1_CHAB' 'VMIS_CIN2_CHAB'
C          RELATIONS : 'VISC_CIN1_CHAB' 'VISC_CIN2_CHAB'
C          RELATIONS : 'VMIS_CIN2_MEMO' 'VISC_CIN2_MEMO'
C
C     ARGUMENTS :
C       IN      FAMI    FAMILLE DE POINT DE GAUSS (RIGI,MASS,...)
C       IN      KPG,KSP NUMERO DU (SOUS)POINT DE GAUSS
C       IN      NDIM    DIMENSION DE L ESPACE (3D=3,2D=2,1D=1)
C       IN      TYPMOD  TYPE DE MODELISATION
C               IMATE   ADRESSE DU MATERIAU CODE
C               COMPOR  COMPORTEMENT DE L ELEMENT
C                       COMPOR(1) = RELATION DE COMPORTEMENT
C                       COMPOR(2) = NB DE VARIABLES INTERNES
C                       COMPOR(3) = TYPE DE DEFORMATION
C               CRIT    CRITERES  LOCAUX, EN PARTICULIER
C                       CRIT(1) = NOMBRE D ITERATIONS MAXI A CONVERGENCE
C                                 (ITER_INTE_MAXI == ITECREL)
C                       CRIT(3) = VALEUR DE LA TOLERANCE DE CONVERGENCE
C                                 (RESI_INTE_RELA == RESCREL)
C               INSTAM  INSTANT T
C               INSTAP  INSTANT T+DT
C               DEPS    INCREMENT DE DEFORMATION TOTALE
C               SIGM    CONTRAINTE A T
C               VIM     VARIABLES INTERNES A T    + INDICATEUR ETAT T
C    ATTENTION  VIM     VARIABLES INTERNES A T MODIFIEES SI REDECOUPAGE
C               OPTION     OPTION DE CALCUL A FAIRE
C                             'RIGI_MECA_TANG'> DSIDEP(T)
C                             'FULL_MECA'     > DSIDEP(T+DT) , SIG(T+DT)
C                             'RAPH_MECA'     > SIG(T+DT)
C       OUT     SIGP    CONTRAINTE A T+DT
C               VIP     VARIABLES INTERNES A T+DT + INDICATEUR ETAT T+DT
C               DSIDEP  MATRICE DE COMPORTEMENT TANGENT A T+DT OU T
C               IRET    CODE RETOUR DE  L'INTEGRATION DE LA LDC
C                              IRET=0 => PAS DE PROBLEME
C                              IRET=1 => ABSENCE DE CONVERGENCE 
C
C               ATTENTION LES TENSEURS ET MATRICES SONT RANGES DANS
C               L'ORDRE :  XX,YY,ZZ,SQRT(2)*XY,SQRT(2)*XZ,SQRT(2)*YZ
C               -----------------------------------------------------
C
      INTEGER KPG,KSP,NDIM,IMATE,NBVAR,IRET
      REAL*8 DEPSTH(6),PM,C2INF,GAMM20
      REAL*8 PLAST,DEPSMO,SIGMMO,E,NU,TROISK,DEPS(6),DEUXMU
      REAL*8 RPM,SIELEQ,SEUIL,DP,CM,AINF,CP,RPVM,RPVP
      REAL*8 COEF,SIGEDV(6),KRON(6),DEPSDV(6),EPSPM(6)
      REAL*8 SIGMDV(6),SIGPDV(6),EM,NUM,KSIP(6),QP
      REAL*8 TROIKM,DEUMUM,SIGMP(6),SIGEL(6),PP,EPSPP(6)
      REAL*8 UN,RAC2,C2P,RADI,GAMMA0,GAMMAP,DELTA1,DELTA2
      REAL*8 R0,RINF,B,CINF,K,W,MAT(18),C2M,GAMM2P,UNRAC2
      REAL*8 DEPSP(6),ALFAM(6),ALFA(6),DALFA(6),N1,N2
      REAL*8 SIGM(6),VIM(*),SIGP(6),VIP(*),DSIDEP(6,6),TRACE
      REAL*8 ALFA2M(6),ALFA2(6),DALFA2(6),MATEL(4),XM(6),XP(6)
      REAL*8 DT,KSIM(6),QM,CRIT(10),INSTAM,INSTAP,BETA1,BETA2
      CHARACTER*(*) FAMI
      CHARACTER*8   TYPMOD(*)
      CHARACTER*16  COMPOR(3),OPTION
      COMMON/FCHAB/MAT,PM,SIGEDV,EPSPM,ALFAM,ALFA2M,DEUXMU,RPVM,RPVP,
     &    QM,QP,KSIM,KSIP,DT,N1,N2,DEPSP,
     &    BETA1,BETA2,NDIMSI,NBVAR,VISC,MEMO,IDELTA
      INTEGER NDIMSI,I,NITER,VISC,MEMO,IDELTA
      DATA    KRON/1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
C=======================================================================
C
      IRET=0
      CALL NMCHAM(FAMI,KPG,KSP,IMATE,COMPOR,
     &            MATEL,MAT,NBVAR,MEMO,VISC,IDELTA,COEF)
     
C     NBVARI=2+6*NBVAR+MEMO*14
      UN     = 1.0D0
      RAC2   = SQRT(2.D0)
      UNRAC2 = 1.D0/SQRT(2.D0)
      EM     = MATEL(1)
      NUM    = MATEL(2)
      DEUMUM = EM/(UN+NUM)
      TROIKM = EM/(UN-2.D0*NUM)
      E      = MATEL(3)
      NU     = MATEL(4)
      DEUXMU = E/(UN+NU)
      TROISK = E/(UN-2.D0*NU)
      R0     = MAT(1)
      RINF   = MAT(2)
      B      = MAT(3)
      CINF   = MAT(4)
      K      = MAT(5)
      W      = MAT(6)
      GAMMA0 = MAT(7)
      AINF   = MAT(8)
      C2INF  = MAT(9)
      GAMM20 = MAT(10)
      IF (IDELTA.GT.0.D0) THEN
         DELTA1 = MAT(17)
         DELTA2 = MAT(18)
      ELSE
         DELTA1=1.D0
         DELTA2=1.D0
      ENDIF
      N1=1.D0
      N2=1.D0
      
C --- INITIALISATIONS :
C     ===============

      NDIMSI = 2*NDIM
      DP     = 0.D0
      CALL R8INIR(6,0.D0,DEPSP,1)
      SEUIL  = 0.D0
      DT = INSTAP - INSTAM
      PM    = VIM(1)
      PLAST = VIM(2)
      NITER=0
      IF (MEMO.EQ.0) THEN
         RPM    = RINF + (R0-RINF)*EXP(-B*PM)
      ELSEIF (MEMO.EQ.1) THEN
         RPVM   = VIM(15)
         RPM    = RPVM + R0
         QM     = VIM(16)
         CALL R8INIR(6,0.D0,KSIM,1)
         CALL R8INIR(6,0.D0,KSIP,1)
         CALL R8INIR(6,0.D0,EPSPM,1)
         CALL R8INIR(6,0.D0,EPSPP,1)
         CALL DCOPY(NDIMSI,VIM(17),1,KSIM,1)
         CALL DCOPY(NDIMSI,VIM(23),1,EPSPM,1)
         QP=QM
         CALL DCOPY(NDIMSI,KSIM,1,KSIP,1)
         RPVP  = RPVM
      ENDIF
      CM     = CINF  * (UN + (K-UN)*EXP(-W*PM))
      C2M    = C2INF * (UN + (K-UN)*EXP(-W*PM))
C
C     ========================================
      CALL DCOPY(NDIMSI,VIM(3),1,ALFAM,1)
      CALL DSCAL(NDIMSI-3,RAC2,ALFAM(4),1)
      IF (NBVAR.EQ.2) THEN
         CALL DCOPY(NDIMSI,VIM(9),1,ALFA2M,1)
         CALL DSCAL(NDIMSI-3,RAC2,ALFA2M(4),1)
      ELSE
         CALL R8INIR(6,0.D0,ALFA2M,1)
      ENDIF
C
C --- CALCUL DE DEPSMO ET DEPSDV :
C     ==========================
      DEPSMO = 0.D0
      CALL DCOPY(NDIMSI,DEPS,1,DEPSTH,1)
      CALL DAXPY(3,-COEF,KRON,1,DEPSTH,1)
      DEPSMO=TRACE(3,DEPSTH)/3.D0
      CALL DCOPY(NDIMSI,DEPSTH,1,DEPSDV,1)
      CALL DAXPY(3,-DEPSMO,KRON,1,DEPSDV,1)

C       -------------------------------------------------
      SIGMMO=TRACE(3,SIGM)/3.D0
      DO 70 I=1,NDIMSI
        SIGMP(I)= DEUXMU/DEUMUM*(SIGM(I)-SIGMMO*KRON(I)) +
     &            TROISK/TROIKM*SIGMMO*KRON(I)
70    CONTINUE
C     SIGMMO A PU CHANGER A CAUSE DE TROISK/TROIKM
      SIGMMO=TRACE(3,SIGMP)/3.D0

C --- CALCUL DU SEUIL :
C     ================================================
      SIELEQ = 0.D0
      DO 90 I = 1,NDIMSI
        SIGMDV(I) = SIGMP(I)- SIGMMO*KRON(I)
        SIGEDV(I) = SIGMDV(I) + DEUXMU * DEPSDV(I)
        SIGEL(I)  = SIGEDV(I)-CM*ALFAM(I)/1.5D0-C2M*ALFA2M(I)/1.5D0
        SIELEQ    = SIELEQ + SIGEL(I)*SIGEL(I)
 90   CONTINUE
      SIELEQ     = SQRT(1.5D0*SIELEQ)
      SEUIL      = SIELEQ - RPM

C --- CALCUL DE SIGP,VIP
C     ===============================
      IF ( OPTION(1:9) .EQ. 'RAPH_MECA' .OR.
     &     OPTION(1:9) .EQ. 'FULL_MECA'     ) THEN
C
C       CALCUL DE DP :
C       ------------
         IF (SEUIL.LE.0.D0) THEN
            PLAST = 0.D0
            DP    = 0.D0
         ELSE
C ---       DETERMINATION DE DP SOLUTION D'UNE EQUATION NON LINEAIRE
            CALL NMCHDP(CRIT,SEUIL,DP,IRET,NITER)
            IF (IRET.GT.0) GOTO 9999
            PLAST = UN
         ENDIF
C
         PP     = PM + DP
         GAMMAP = GAMMA0 * (AINF + (UN-AINF)*EXP(-B*PP))
         GAMM2P = GAMM20 * (AINF + (UN-AINF)*EXP(-B*PP))
         
         IF (MEMO.EQ.1) THEN
            CALL DCOPY(NDIMSI,EPSPM,1,EPSPP,1)
            CALL DAXPY(NDIMSI,1.D0,DEPSP,1,EPSPP,1)
         ENDIF

         DO 110 I = 1, NDIMSI
           IF (CINF.NE.0.D0) THEN
              DALFA(I) = (N1*DEPSP(I)-GAMMAP*DELTA1*DP*ALFAM(I))
              DALFA(I) = DALFA(I)/(UN+GAMMAP*DELTA1*DP)
           ELSE
              DALFA(I)=0.D0
           ENDIF
           IF (NBVAR.EQ.2) THEN
              IF (C2INF.NE.0.D0) THEN
                 DALFA2(I) = (N2*DEPSP(I)-GAMM2P*DELTA2*DP*ALFA2M(I))
                 DALFA2(I) = DALFA2(I) /(UN+GAMM2P*DELTA2*DP)
              ELSE
                 DALFA2(I)=0.D0
              ENDIF
           ENDIF
  110    CONTINUE
C
         DO 130 I = 1,NDIMSI
            ALFA(I)   = ALFAM(I)  + DALFA(I)
            IF (NBVAR.EQ.2) THEN
               ALFA2(I)   = ALFA2M(I)  + DALFA2(I)
            ENDIF
            SIGPDV(I) = SIGEDV(I) - DEUXMU * DEPSP(I)
            SIGP(I)   = SIGPDV(I) + (SIGMMO + TROISK*DEPSMO)*KRON(I)
 130     CONTINUE
C
      ENDIF

C ---- CALCUL DE LA MATRICE DE COMPORTEMENT TANGENTE COHERENTE DSIDEP
      IF ( OPTION(1:14) .EQ. 'RIGI_MECA_TANG'.OR.
     &     OPTION(1:9)  .EQ. 'FULL_MECA'         ) THEN
      CALL NMCHAT(MATEL,MAT,NBVAR,MEMO,VISC,PLAST,SIGMDV,DEPSDV,PM,DP,
     &            NDIMSI,DT,RPVP,QP,VIM,IDELTA,N1,N2,BETA1,BETA2,DSIDEP)
C
      ENDIF

C     ========================================
      IF (OPTION(1:9).EQ.'RAPH_MECA' .OR.
     &    OPTION(1:9).EQ.'FULL_MECA')     THEN
         VIP(1)=PP
         VIP(2)=NITER
         CALL DCOPY(NDIMSI,ALFA,1,VIP(3),1)
         CALL DSCAL(NDIMSI-3,UNRAC2,VIP(6),1)
         IF (NBVAR.EQ.2) THEN
            CALL DCOPY(NDIMSI,ALFA2,1,VIP(9),1)
            CALL DSCAL(NDIMSI-3,UNRAC2,VIP(12),1)
         ENDIF
         IF (MEMO.EQ.1) THEN
            VIP(15)=RPVP
            VIP(16)=QP
            CALL DCOPY(NDIMSI,KSIP,1,VIP(17),1)
            CALL DCOPY(NDIMSI,EPSPP,1,VIP(23),1)
         ENDIF
      ENDIF

C     Critere de radialite
      IF (OPTION(1:9).NE.'RIGI_MECA') THEN
         IF (CRIT(10).GT.0.D0) THEN
C           CALCUL DE X1, X2         
            CP  =CINF * (UN + (K-UN)*EXP(-W*PP))
            C2P =C2INF *(UN + (K-UN)*EXP(-W*PP))
            CALL DCOPY(NDIMSI,ALFAM,1,XM,1)
            CALL DCOPY(NDIMSI,ALFA, 1,XP,1)
            CALL DSCAL(NDIMSI,CM/1.5D0,XM,1)
            CALL DSCAL(NDIMSI,CP/1.5D0,XP,1)
            IF (NBVAR.EQ.2) THEN
               CALL DAXPY(NDIMSI,C2M/1.5D0,ALFA2M,1,XM,1)
               CALL DAXPY(NDIMSI,C2P/1.5D0,ALFA2, 1,XP,1)
            ENDIF
            CALL RADIAL(NDIMSI,SIGM,SIGP,VIM(2),VIP(2),1,XM,XP,
     &                  RADI)

            IF (RADI.GT.CRIT(10)) THEN
               IRET=2
            ENDIF
         ENDIF
      ENDIF

 9999 CONTINUE
      END
