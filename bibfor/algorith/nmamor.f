      SUBROUTINE NMAMOR(FONACT,SDDYNA,VALINC,MEASSE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 31/01/2012   AUTEUR IDOUX L.IDOUX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE IDOUX L.IDOUX       
      IMPLICIT NONE
      INTEGER       FONACT(*)
      CHARACTER*19  SDDYNA,VALINC(*),MEASSE(*)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - CALCUL)
C
C CALCUL DES ENERGIES
C INITIALISATION DU VECTEUR FORCES D AMORTISSEMENT 
C NECESSAIRE EN PRESENCE D UNE VITESSE INITIALE
C
C
C ----------------------------------------------------------------------
C
C 
C FONACT : FONCTIONNALITES ACTIVEES
C SDDYNA : SD DYNAMIQUE
C VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C MEASSE : VARIABLE CHAPEAU POUR NOM DES MATR_ASSE
C
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      CHARACTER*19 AMORT,VITMOI,FAMMOI
      INTEGER      IAMORT,NEQ,IVITMO,IFAMMO,IAUX
      LOGICAL      NDYNLO,LAMOR,ISFONC,LENER
C
      LAMOR = NDYNLO(SDDYNA,'MAT_AMORT')
      LENER = ISFONC(FONACT,'ENERGIE') 
C
      IF (LENER.AND.LAMOR) THEN
        CALL NMCHEX(MEASSE,'MEASSE','MEAMOR',AMORT)
        CALL JEVEUO(AMORT//'.&INT','L',IAMORT)
C
        NEQ=ZI(IAMORT+2)
C
        CALL NMCHEX(VALINC,'VALINC','VITMOI',VITMOI)
        CALL JEVEUO(VITMOI//'.VALE','L',IVITMO)
C
        CALL NMCHEX(VALINC,'VALINC','FAMMOI',FAMMOI)
        CALL JEVEUO(FAMMOI//'.VALE','E',IFAMMO)
C
        CALL MRMULT('ZERO',IAMORT,ZR(IVITMO),'R',ZR(IFAMMO),1)
        DO 10 IAUX=1,NEQ
          ZR(IFAMMO-1+IAUX)=-ZR(IFAMMO-1+IAUX)
  10    CONTINUE
      ENDIF 
C
      END
