      SUBROUTINE NDASVA(PHASE ,SDDYNA,VEASSE,CNVADY)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*4  PHASE
      CHARACTER*19 CNVADY
      CHARACTER*19 VEASSE(*)
      CHARACTER*19 SDDYNA
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C CALCUL DES COMPOSANTES DU VECTEUR SECOND MEMBRE DANS LE CAS DYNAMIQUE
C  - CHARGEMENT DE TYPE NEUMANN
C  - CHARGEMENT VARIABLE AU COURS DU PAS DE TEMPS
C  - CHARGEMENT DONNE 
C      
C ----------------------------------------------------------------------
C
C
C IN  PHASE  : 'PRED' OU 'CORR'
C IN  SDDYNA : SD DYNAMIQUE 
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE  
C OUT CNVADY : VECT_ASSE DE TOUS LES CHARGEMENTS VARIABLES DONNES
C
C
C
C
      INTEGER      IFM,NIV   
      INTEGER      IFDO,N
      CHARACTER*19 CNVARI(20)
      REAL*8       COVARI(20)
      CHARACTER*19 CNDYNA,CNMODA,CNIMPE
      LOGICAL      NDYNLO,LIMPE,LAMMO
C 
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... CALCUL NEUMANN VARIABLE '//
     &                ' EN DYNAMIQUE' 
      ENDIF
C
C --- FONCTIONNALITES ACTIVEES
C     
      LIMPE  = NDYNLO(SDDYNA,'IMPE_ABSO')
      LAMMO  = NDYNLO(SDDYNA,'AMOR_MODAL')
C
C --- INITIALISATIONS
C
      IFDO   = 0    
      CALL VTZERO(CNVADY)
C
C --- CALCUL DES FORCES DYNAMIQUES VARIABLES
C               
      CALL NMCHEX(VEASSE,'VEASSE','CNDYNA',CNDYNA)
      IFDO         = IFDO+1 
      CNVARI(IFDO) = CNDYNA
      COVARI(IFDO) = -1.D0
      IF (LAMMO) THEN
        IF (PHASE.EQ.'PRED') THEN
          CALL NMCHEX(VEASSE,'VEASSE','CNMODP',CNMODA)
        ELSEIF (PHASE.EQ.'CORR') THEN  
          CALL NMCHEX(VEASSE,'VEASSE','CNMODC',CNMODA)
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
        IFDO         = IFDO+1 
        CNVARI(IFDO) = CNMODA
        COVARI(IFDO) = -1.D0
      ENDIF 
      IF (LIMPE) THEN
        IF (PHASE.EQ.'PRED') THEN
          CALL NMCHEX(VEASSE,'VEASSE','CNIMPP',CNIMPE)
        ELSEIF (PHASE.EQ.'CORR') THEN  
          CALL NMCHEX(VEASSE,'VEASSE','CNIMPC',CNIMPE)
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF        
        IFDO         = IFDO+1 
        CNVARI(IFDO) = CNIMPE
        COVARI(IFDO) = -1.D0
      ENDIF     
 
C        
C --- VECTEUR RESULTANT CHARGEMENT DONNE
C       
      DO 10 N = 1,IFDO
        CALL VTAXPY(COVARI(N),CNVARI(N),CNVADY)
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ......... FORC. DYNA. DONNEES' 
          WRITE (IFM,*) '<MECANONLINE> .........  ',N,' - COEF: ',
     &                   COVARI(N)
          CALL NMDEBG('VECT',CNVARI(N),IFM)
        ENDIF           
 10   CONTINUE     
C
      CALL JEDEMA()
      END
