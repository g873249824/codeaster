      SUBROUTINE ACCEL0(MODELE,NUMEDD,MATE  ,COMPOR,CARELE,
     &                  LISCHA,INSTIN,MAPREC,SOLVEU,PARMET,
     &                  CARCRI,FONACT,RESOCO,COMREF,NUMINS,
     &                  SDDISC,SDDYNA,SDSENS,VALMOI,VALPLU,
     &                  DEPALG,POUGD ,SECMBR,MEELEM,MEASSE,
     &                  VEELEM)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 25/03/2008   AUTEUR REZETTE C.REZETTE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      REAL*8        INSTIN,PARMET(*)
      CHARACTER*24  MATE
      CHARACTER*19  SOLVEU,MAPREC,LISCHA,SDDYNA
      CHARACTER*24  MODELE,NUMEDD,COMPOR,CARELE,CARCRI,RESOCO
      CHARACTER*24  VALMOI(8),VALPLU(8),DEPALG(8)
      CHARACTER*19  MEELEM(8),VEELEM(30)
      CHARACTER*19  MEASSE(8)
      LOGICAL       FONACT(*)
      CHARACTER*24  SDSENS
      INTEGER       NUMINS
      CHARACTER*19  SDDISC
      CHARACTER*24  COMREF
      CHARACTER*24  POUGD(8),SECMBR(8)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (DYNAMIQUE)
C
C CALCUL DE L'ACCELERATION INITIALE
C
C ----------------------------------------------------------------------
C
C
C     ==> ON SUPPOSE QUE LA VITESSE INITIALE EST NULLE
C                    QUE LES DEPLACEMENTS IMPOSES SONT NULS
C     ==> ON NE PREND EN COMPTE QUE LES CHARGES DYNAMIQUES, CAR LES
C         CHARGES STATIQUES SONT EQUILIBREES PAR LES FORCES INTERNES
C
C
C IN  SDDISC : SD DISCRETISATION
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      CHARACTER*32 JEXNUM
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      NBDONN,NBPILO
      REAL*8       CODONN(8),COPILO(8)
      CHARACTER*19 CNDONN(8),CNPILO(8)
      INTEGER      IERR,NEQ,IADIA,JVALM,IRET,ISLVI,II,ZILSV3
      REAL*8       Z, DZ,R8BID
      CHARACTER*1  BASE
      LOGICAL      ISFONC,NDYNLO,LCTCC,LSENSI,LGRFL,LMACR
      INTEGER      NRPASE
      CHARACTER*14 K14BLA
      CHARACTER*24 DEPDE0,DEPSOL
      CHARACTER*24 DDEPLA,DEPOLD,DEPPRE(2)
      CHARACTER*24 CNCHMP,CNCGMP,CNDIRP
      CHARACTER*24 VECHMP,VECGMP,VEDIRP
      CHARACTER*24 CRITER,CHGRFL
      INTEGER      NBSST
      CHARACTER*19 MASSE,SSTRU,MATRIX(2)
      CHARACTER*24 NDYNKK
      CHARACTER*24 K24BLA,K24BID,K24CIN
      CHARACTER*24 DEPMOI,SIGMOI,VARMOI,COMMOI,ACCPLU
      CHARACTER*24 DEPALT(8),POUGDT(8),SECMBT(8)
      CHARACTER*24 CNTRAV
      INTEGER      JTRAV
      CHARACTER*8  K8BID,KMPIC
      CHARACTER*19 VEELET(30),MESSTR
      CHARACTER*24 CNFNOD,CNBUDI,CNVCPR
      INTEGER      IFM,NIV,IBID
C
      DATA DEPSOL /'&&ACCEL0.SOLU'/
      DATA CNFNOD /'&&ACCEL0.FNOD'/
      DATA CNVCPR /'&&ACCEL0.VCPR'/
      DATA CNBUDI /'&&ACCEL0.BUDI'/
      DATA K24CIN /'&&ACCEL0.CINE'/
      DATA CNDIRP /' '/
      DATA CNCHMP /' '/
      DATA CNCGMP /' '/
      DATA VEDIRP /' '/
      DATA VECHMP /' '/
      DATA VECGMP /' '/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... CALCUL DE L''ACCELERATION '//
     &                'INITIALE'
      ENDIF
C
C --- INITIALISATIONS
C
      CRITER = '&&RESGRA_GCPC'
      CNTRAV = '&&CNPART.CHP1'
      VECHMP = '&&VECHMP'
      VECGMP = '&&VECGMP'
      VEDIRP = '&&VEDIRP'
      NRPASE = 0
      BASE   = 'V'
      K24BLA = ' '
      K14BLA = ' '
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- FONCTIONNALITES ACTIVEES
C
      LGRFL  = NDYNLO(SDDYNA,'FORCE_FLUIDE')
      LCTCC  = ISFONC(FONACT,'CONT_CONTINU')
      LMACR  = ISFONC(FONACT,'MACR_ELEM_STAT')
      LSENSI = .FALSE.
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C
      CALL DESAGG(VALMOI,DEPMOI,SIGMOI,VARMOI,COMMOI,
     &            K24BID,K24BID,K24BID,K24BID)
      CALL DESAGG(VALPLU,K24BID,K24BID,K24BID,K24BID,
     &            K24BID,ACCPLU,K24BID,K24BID)
      CALL DESAGG(DEPALG,DDEPLA,K24BID,DEPOLD,DEPPRE(1),
     &            DEPPRE(2),K24BID,K24BID,K24BID)
      MESSTR = MEELEM(6)
      MASSE  = MEASSE(3)
      SSTRU  = MEASSE(6)
C
C --- ASSEMBLAGE DE LA MATRICE DE MASSE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... CALCUL MATRICE'
      ENDIF
      CALL NMASSM(FONACT,K24BLA,LISCHA,SOLVEU,NUMEDD,
     &            INSTIN,INSTIN,'MASRI',MEELEM,MASSE)
C
C --- SI METHODE CONTINUE ON REMPLACE LES TERMES DIAGONAUX NULS PAR
C --- DES UNS POUR POUVOIR INVERSER LA MATRICE ASSEMBLE MATASS
C
      IF (LCTCC) THEN
        CALL MTDSCR(MASSE)
        CALL MTDSC2(MASSE,'SXDI','L',IADIA)
      CALL DISMOI('F','MPI_COMPLET',MASSE,'MATR_ASSE',IBID,KMPIC,IBID)
      IF (KMPIC.NE.'OUI') CALL U2MESS('F','CALCULEL6_54')
        CALL JEVEUO(JEXNUM(MASSE//'.VALM',1),'E',JVALM)
        DO 10 II=1,NEQ
         IF (ZR(JVALM-1+ZI(IADIA-1+II)) .EQ. 0.D0) THEN
             ZR(JVALM-1+ZI(IADIA-1+II)) = 1.D0
         ENDIF
10      CONTINUE
      ENDIF
C
C --- ON EVITE L'ARRET FATAL LORS DE L'INVERSION DE LA MATRICE DE MASSE
C
      CALL JEVEUO(SOLVEU//'.SLVI','E',ISLVI)
      ZILSV3        = ZI(ISLVI-1+3)
      ZI(ISLVI-1+3) = 2
C
C --- INVERSION DE LA MATRICE DE MASSE
C
      CALL PRERES(SOLVEU,'V',IERR,MAPREC,MASSE )
      ZI(ISLVI-1+3) = ZILSV3
C
      IF (IERR.EQ.2) THEN
        CALL NULVEC(ACCPLU)
        CALL U2MESS('A','MECANONLINE_69')
        ZI(ISLVI-1+3) = ZILSV3
        GOTO 9999
      ENDIF
C
C --- LA MATRICE PEUT ETRE QUASI-SINGULIERE PAR EXEMPLE POUR LES DKT
C
      IF (IERR.EQ.1) THEN
        CALL U2MESS('A','MECANONLINE_78')
      ENDIF
C
C --- INCREMENT DE DEPLACEMENT NUL
C
      DEPDE0 = '&&CNPART.ZERO'
      CALL AGGLOM(DDEPLA,DEPDE0,DEPOLD,DEPPRE(1),
     &            DEPPRE(2),K24BLA,K24BLA,K24BLA, 5, DEPALT)
C
C --- CALCUL ET ASSEMBLAGE DES MATRICES MACRO-ELEMENTS
C
      IF (LMACR) THEN
        CALL NMCALM(MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &              R8BID ,R8BID ,CARCRI,VALMOI,VALPLU,
     &              DEPALT,'MESSTR','RIGI_MECA','V'   ,LMACR ,
     &              MEELEM)
        CALL NMASSM(FONACT,RESOCO,LISCHA,SOLVEU,NUMEDD,
     &              R8BID ,R8BID ,'SSTRU',MEELEM,SSTRU)
      END IF
C
C --- CALCUL SECONDS MEMBRES DES MACRO-ELEMENTS
C
      IF (LMACR) THEN
        CALL NMMACV(DEPMOI,MESSTR,SSTRU ,CNTRAV)
        CALL JEVEUO(CNTRAV(1:19)//'.VALE','L',JTRAV)
C
C --- CALCUL PAR SOUS-STRUCTURATION
C
        CALL NMLSSV('LECT',LISCHA,NBSST)
        IF (NBSST.GT.0) THEN
          CALL NMSSSV(MODELE,MATE  ,CARELE,NUMEDD,LISCHA,
     &                INSTIN,VEELEM,MEELEM,MEASSE,ACCPLU)
        ENDIF
      ENDIF
C
C --- VARIABLE CHAPEAU BIDON
C
      VEELET(5)  = VEDIRP(1:19)
      VEELET(7)  = VECHMP(1:19)
      VEELET(11) = VECGMP(1:19)
C
C --- CALCUL DES VECT_ELEM DU SECOND MEMBRE
C
      CALL NMCALV('FORC_ACCE_INIT',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            0.D0  ,INSTIN,CARCRI,PARMET,NUMEDD,
     &            VALMOI,VALPLU,DEPALT,POUGDT,SDSENS,
     &            SDDYNA,LSENSI,NRPASE,BASE  ,MEASSE,
     &            VEELET)
C
C --- ASSEMBLAGE DES VECT_ELEM DU SECOND MEMBRE
C
      CALL NMASSV('FORC_ACCE_INIT1',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            SOLVEU,NUMEDD,FONACT,0.D0  ,INSTIN,
     &            0.D0  ,0.D0  ,SDDYNA,MEELEM,VALMOI,
     &            VALPLU,SECMBT,DEPALT,POUGD ,VEELET,
     &            LSENSI,SDSENS,NRPASE,MEASSE,CNCHMP)
      CALL NMASSV('FORC_ACCE_INIT2',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            SOLVEU,NUMEDD,FONACT,0.D0  ,INSTIN,
     &            0.D0  ,0.D0  ,SDDYNA,MEELEM,VALMOI,
     &            VALPLU,SECMBT,DEPALT,POUGD ,VEELET,
     &            LSENSI,SDSENS,NRPASE,MEASSE,CNCGMP)
      CALL NMASSV('FORC_ACCE_INIT3',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            SOLVEU,NUMEDD,FONACT,0.D0  ,INSTIN,
     &            0.D0  ,0.D0  ,SDDYNA,MEELEM,VALMOI,
     &            VALPLU,SECMBT,DEPALT,POUGD ,VEELET,
     &            LSENSI,SDSENS,NRPASE,MEASSE,CNDIRP)
C
C --- CALCUL DU SECOND MEMBRE
C
      CALL NMASSI(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &            COMPOR,LISCHA,SOLVEU,FONACT,PARMET,
     &            CARCRI,SDDISC,NUMINS,R8BID ,VALMOI,
     &            VALPLU,POUGD ,SECMBR,DEPALG,SDDYNA,
     &            SDSENS,MEELEM,MEASSE,VEELEM,CNFNOD,
     &            CNBUDI,CNVCPR)
C
C --- POUR LE CALCUL DE DDEPLA, IL FAUT METTRE CNCINE A ZERO :
C --- ON LE FAIT PROPREMENT VIA DES ROUTINES DEDIEES CHAM_NO
C
      CALL COPISD('CHAMP_GD','V',ACCPLU(1:19),K24CIN)
      CALL JERAZO(K24CIN(1:19)//'.VALE',NEQ,1)
C
C --- PREPARATION DU SECOND MEMBRE
C
      CNDONN(1) = CNCHMP(1:19)
      CNDONN(2) = CNCGMP(1:19)
      CNDONN(3) = CNDIRP(1:19)
      CNDONN(4) = CNFNOD(1:19)
      CNDONN(5) = CNBUDI(1:19)
      CNDONN(6) = CNVCPR(1:19)
      CODONN(1) =  1
      CODONN(2) =  1
      CODONN(3) =  1
      CODONN(4) = -1
      CODONN(5) = -1
      CODONN(6) = -1
      IF (LMACR) THEN
        NBDONN    = 7
        NBPILO    = 0
        CNDONN(7) = CNTRAV(1:19)
        CODONN(7) = -1
      ELSE
        NBDONN    = 6
        NBPILO    = 0
      ENDIF
C
C --- RESOLUTION
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... RESOLUTION'
      ENDIF
      MATRIX(1) = MASSE
      MATRIX(2) = MAPREC
      CALL NMRESO(K14BLA,NBDONN,CODONN,CNDONN,NBPILO,
     &            COPILO,CNPILO,K24CIN,SOLVEU,MATRIX,
     &            DEPSOL)
C
C --- RECONSTRUCTION SOLUTION
C
      CALL COPISD('CHAMP_GD','V',DEPSOL,ACCPLU)
C
C --- DESTRUCTION DES VARIABLES
C
      CALL DETRSD('CHAMP_GD',K24CIN)
      CALL JEEXIN(CRITER(1:19)//'.CRTI',IRET)
      IF ( IRET .NE. 0 ) THEN
         CALL JEDETR(CRITER(1:19)//'.CRTI' )
         CALL JEDETR(CRITER(1:19)//'.CRTR' )
         CALL JEDETR(CRITER(1:19)//'.CRDE' )
      ENDIF
      CALL DETRSD('CHAMP_GD',DEPSOL)
C
C --- PRISE EN COMPTE DU CHARGEMENT FORCE_FLUIDE
C
      IF (LGRFL) THEN
        CHGRFL = NDYNKK(SDDYNA,'CHGRFL')
        Z      = 0.0D0
        DZ     = 0.0D0
        CALL GFACC0(Z     ,DZ    ,NUMEDD,ACCPLU,CHGRFL)
      ENDIF
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... ACCPLU : '
        CALL NMDEBG('VECT',ACCPLU,IFM)
      ENDIF
C
9999  CONTINUE
C
      CALL JEDEMA()
      END
