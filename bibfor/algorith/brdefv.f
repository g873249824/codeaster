      SUBROUTINE BRDEFV(E1I,E2I,A,T,B,K0,K1,ETA1,
     #K2,ETA2,PW,E0F,E1F,E2F,E2PC,E2PT,SIGE2)

C     ROUTINE ANCIENNEMENT NOMMEE DEF_VISC

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 08/12/2009   AUTEUR DEBONNIERES P.DE-BONNIERES 
C ======================================================================
C COPYRIGHT (C) 1991 - 2009  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================

C        REPONSE EN RELAXATION
C     A E(T)=A*T+B AVEC E1(0)=E1I ET E2(0)=E2I
C     GESTION DES DEFORMATIONS PLASTIQUES ETAGE 2 (AS SEPTEMBRE 2004)
C     E2P(C OU T)=DEFORMATION PLASTIQUE ETAGE 2 EN +(T) OU -(C)

        IMPLICIT REAL*8(A-Z)
      LOGICAL H1,H2
      REAL*8 EFLIM

C     EFLIM=3.0E-2
      H1=.FALSE.
C     ECOULEMENT NIV 2 COMPRESSION
      E2P=E2PT
      CALL BRE2EC(K0,K1,K2,ETA1,ETA2,E1I,E2I,A,T,B,E2P,PW,E2F)
      IF((E2F-E2P).LT.0.D0)THEN
C      ON EST EN COMP
       IF(E2F.LE.E2PC)THEN
C       PRINT *,'HYPOTHESE ECOULEMENT COMP OK'
        H1=.TRUE.
        SIGE2=K2*(E2F-E2P)
        E2PC=E2F
        CALL BRE1EC(K0,K1,K2,ETA1,ETA2,E1I,E2I,A,T,B,E2P,PW,E1F)
       END IF
      END IF

      IF(H1)GOTO 10

      H2=.FALSE.
C     HYPOTHESE  ECOULEMENT NIV 2 TRACTION
      E2P=E2PC
      CALL BRE2EC(K0,K1,K2,ETA1,ETA2,E1I,E2I,A,T,B,E2P,PW,E2F)
      IF((E2F-E2P).GT.0.D0)THEN
C      ON EST EN TRACTION
       IF(E2F.GE.E2PT)THEN
C       HYPOTHESE ECOULEMENT OK
        H2=.TRUE.
        E2PT=E2F
        SIGE2=K2*(E2F-E2P)
        CALL BRE1EC(K0,K1,K2,ETA1,ETA2,E1I,E2I,A,T,B,E2P,PW,E1F)
       END IF
      END IF

      IF(H2) GOTO 10

C      PRINT*,'HYPOTHESES ECOULEMENT FAUSSES : BLOCAGE NIVEAU 2'
      E2F=E2I
      CALL BRE1BL(K0,K1,K2,ETA1,ETA2,E1I,E2I,A,T,B,PW,E1F)
      SIGE1=K1*E1F
      SIGE2=SIGE1

C     CALCUL DE E0(T)

10    CONTINUE
C10    GOTO 30
C      IF (E1F.GT.EFLIM) THEN
C      E1F=EFLIM
C      END IF
C      IF (E1F.LT.(-EFLIM)) THEN
C      E1F=-EFLIM
C      END IF
C      IF (E2F.GT.EFLIM) THEN
C      E2F=EFLIM
C      END IF
C      IF (E2F.LT.(-EFLIM)) THEN
C      E2F=-EFLIM
C      END IF
C      IF (E2PT.GT.EFLIM) THEN
C      E2PT=EFLIM
C      END IF
C      IF (E2PT.LT.(-EFLIM)) THEN
C      E2PT=-EFLIM
C      END IF
C       IF (E2PC.GT.EFLIM) THEN
C      E2PC=EFLIM
C      END IF
C      IF (E2PC.LT.(-EFLIM)) THEN
C      E2PC=-EFLIM
C      END IF

30    CONTINUE
      E0F=A*T+B-E1F-E2F
      END
