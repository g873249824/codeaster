      SUBROUTINE DYOEXT(MAILLA,TYPCHA,TOPO  ,SUBTOP,CMP   ,
     &                  VARINT,DEPPLU,VITPLU,ACCPLU,SIGPLU,
     &                  VARPLU,DEPENT,VITENT,ACCENT,ICTC  ,
     &                  CNSINZ,INOEUD,ICMP  ,VALR  )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/12/2009   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2005  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT     NONE
      CHARACTER*8  MAILLA
      INTEGER      TYPCHA
      CHARACTER*8  TOPO
      INTEGER      SUBTOP
      CHARACTER*8  CMP
      INTEGER      VARINT
      CHARACTER*19 DEPPLU,VITPLU,ACCPLU,SIGPLU,VARPLU
      CHARACTER*19 DEPENT,VITENT,ACCENT
      INTEGER      ICTC
      CHARACTER*19 CNSINZ
      INTEGER      INOEUD,ICMP
      REAL*8       VALR
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - UTILITAIRE)
C
C RECUPERATION DE LA COMPOSANTE POUR UN SUIVI EN TEMPS REEL
C ET/OU UNE OBSERVATION
C
C ----------------------------------------------------------------------
C
C
C IN  MAILLA : NOM DU MAILLAGE
C IN  TYPCHA : TYPE DE CHAMP
C           TYPCHA = 1      'DEPL_ABSOLU'
C           TYPCHA = 2      'VITE_ABSOLU'
C           TYPCHA = 3      'ACCE_ABSOLU'
C           TYPCHA = 4      'DEPL'
C           TYPCHA = 5      'VALE_CONT'
C           TYPCHA = 6      'VITE'
C           TYPCHA = 7      'ACCE'
C           TYPCHA = 8      'SIEF_ELGA'
C           TYPCHA = 9      'VARI_ELGA'
C IN  TOPO   : ENTITE TOPOLOGIQUE PRINCIPALE (NOEUD OU MAILLE)
C IN  SUBTOP : NUMERO DU POINT DE GAUSS SI ENTITE PRINCIPALE EST MAILLE
C IN  CMP    : COMPOSANTE A OBSERVER
C IN  VARINT : VARIABLE INTERNE A OBSERVER SI TYPCHA=9
C IN  DEPPLU : DEPLACEMENTS A L'INSTANT ACTUEL
C IN  VITPLU : VITESSES A L'INSTANT ACTUEL
C IN  ACCPLU : ACCELERATIONS A L'INSTANT ACTUEL
C IN  SIGPLU : CONTRAINTES A L'INSTANT ACTUEL
C IN  VARPLU : VARIABLES INTERNES A L'INSTANT ACTUEL
C IN  DEPENT : DEPLACEMENTS D'ENTRAINEMENT
C IN  VITENT : VITESSES D'ENTRAINEMENT
C IN  ACCENT : ACCELERATIONS D'ENTRAINEMENT
C IN  ICTC   : VAUT ZERO SI LE CHAM_NO_S DE CONTACT N'EXISTE PAS
C IN  CNSINZ : CHAM_NO CONTENANT LES INFOS SUR LE CONTACT
C OUT INOEUD : NUMERO ABSOLU DU NOEUD
C OUT ICMP   : NUMERO ABSOLU DE LA COMPOSANTE
C OUT VALR   : VALEUR REELLE DE LA COMPOSANTE POUR SIEF_ELGA
C                ET VARI_ELGA
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      COMPLEX*16   CBID
      INTEGER      IRET
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C ---
C
      VALR = 0.D0
      IF     (TYPCHA.EQ.1) THEN
        CALL POSDDL('CHAM_NO',DEPPLU,TOPO,CMP,INOEUD,ICMP)
        CALL POSDDL('CHAM_NO',DEPENT,TOPO,CMP,INOEUD,ICMP)
      ELSEIF (TYPCHA.EQ.2) THEN
        CALL POSDDL('CHAM_NO',VITPLU,TOPO,CMP,INOEUD,ICMP)
        CALL POSDDL('CHAM_NO',VITENT,TOPO,CMP,INOEUD,ICMP)
      ELSEIF (TYPCHA.EQ.3) THEN
        CALL POSDDL('CHAM_NO',ACCPLU,TOPO,CMP,INOEUD,ICMP)
        CALL POSDDL('CHAM_NO',ACCENT,TOPO,CMP,INOEUD,ICMP)
      ELSEIF (TYPCHA.EQ.4) THEN
        CALL POSDDL('CHAM_NO',DEPPLU,TOPO,CMP,INOEUD,ICMP)
      ELSEIF (TYPCHA.EQ.5) THEN
        IF (ICTC.NE.0) THEN
          CALL POSDDL('CHAM_NO',CNSINZ,TOPO,CMP,INOEUD,ICMP)
        ELSE
          ICMP = 0
        ENDIF
      ELSEIF (TYPCHA.EQ.6) THEN
        CALL POSDDL('CHAM_NO',VITPLU,TOPO,CMP,INOEUD,ICMP)
      ELSEIF (TYPCHA.EQ.7) THEN
        CALL POSDDL('CHAM_NO',ACCPLU,TOPO,CMP,INOEUD,ICMP)
      ELSEIF (TYPCHA.EQ.8) THEN
        CALL UTCH19(SIGPLU(1:19),MAILLA,TOPO,' ',SUBTOP,
     &              0,1,CMP,'R',VALR,CBID,IRET)
      ELSEIF (TYPCHA.EQ.9) THEN
        CALL UTCH19(VARPLU(1:19),MAILLA,TOPO,' ',SUBTOP,
     &              0,VARINT,'VARI','R',VALR,CBID,IRET)
      ELSEIF (TYPCHA.EQ.11) THEN
        CALL POSDDL('CHAM_NO',DEPPLU,TOPO,CMP,INOEUD,ICMP)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
      CALL JEDEMA()
      END
