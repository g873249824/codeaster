      SUBROUTINE DLTINI ( LCREA, NUME,RESULT,
     &                    DEPINI, VITINI, ACCINI,
     &                    FEXINI, FAMINI, FLIINI,
     &                    NEQ, NUMEDD, INCHAC, BASENO)
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/03/2013   AUTEUR BERRO H.BERRO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C     CALCUL MECANIQUE TRANSITOIRE PAR INTEGRATION DIRECTE
C     RECUPERATION DES CONDITIONS INITIALES
C     ------------------------------------------------------------------
C OUT : LCREA  : CREATION OU NON DU RESULTAT
C OUT : NUME   : NUMERO D'ORDRE DE REPRISE
C OUT : DEPINI : CHAMP DE DEPLACEMENT INITIAL OU DE REPRISE
C OUT : VITINI : CHAMP DE VITESSE INITIALE OU DE REPRISE
C OUT : ACCINI : CHAMP D'ACCELERATION INITIALE OU DE REPRISE
C IN  : NEQ    : NOMBRE D'EQUATIONS
C IN  : NUMEDD : NUMEROTATION DDL
C IN  : BASENO : BASE DES NOMS DE STRUCTURES
C VAR : INCHAC : CALCUL OU NON DE L'ACCELERATION INITIALE
C     ------------------------------------------------------------------
C CORPS DU PROGRAMME
      IMPLICIT NONE

C DECLARATION PARAMETRES D'APPELS
      INCLUDE 'jeveux.h'
      REAL*8 DEPINI(*), VITINI(*), ACCINI(*)
      REAL*8 FEXINI(*), FAMINI(*), FLIINI(*)
      CHARACTER*8 BASENO,RESULT
      CHARACTER*24 NUMEDD
      LOGICAL LCREA,LENER,LINFO
      INTEGER NUME
      INTEGER NEQ
      INTEGER INCHAC
      INTEGER IRE, IRET, JVALE
      INTEGER NAI, NDI, NDY, NVI, NOCC
      INTEGER IERR
      CHARACTER*8  REUSE
      CHARACTER*19  CHAMP, CHAM2
      INTEGER      IARG
C     ------------------------------------------------------------------
C
      CALL JEMARQ()
      LCREA = .TRUE.
      LINFO = .FALSE.
C
C====
C 2.  --- EST-ON EN REPRISE ? ---
C====
C
      CALL GETVID('ETAT_INIT','RESULTAT',1,IARG,1,REUSE,NDY)
      LENER=.FALSE.
      CALL GETFAC('ENERGIE',NOCC)
      IF (NOCC.GT.0) THEN
        LENER = .TRUE.
      ENDIF
C
C====
C 3. EN REPRISE
C====
C
      IF ( NDY .NE. 0 ) THEN
         IF (LENER) THEN
           LINFO = .TRUE.
         ENDIF
C
C        --- RECUPERATION DES CHAMPS DEPL VITE ET ACCE ---
         CALL RSEXCH(' ',REUSE,'DEPL',NUME,CHAMP,IRET)
         IF ( IRET .NE. 0 ) THEN
            CALL U2MESK('F','ALGORITH3_25',1,REUSE)
         ELSE
            CALL JEVEUO(CHAMP//'.VALE','L',JVALE)
            CALL DCOPY(NEQ,ZR(JVALE),1,DEPINI,1)
         ENDIF
         CALL RSEXCH(' ',REUSE,'VITE',NUME,CHAMP,IRET)
         IF ( IRET .NE. 0 ) THEN
            CALL U2MESK('F','ALGORITH3_26',1,REUSE)
         ELSE
            CALL JEVEUO(CHAMP//'.VALE','L',JVALE)
            CALL DCOPY(NEQ,ZR(JVALE),1,VITINI,1)
         ENDIF
         CALL RSEXCH(' ',REUSE,'ACCE',NUME,CHAMP,IRET)
         IF ( IRET .NE. 0 ) THEN
            CALL U2MESK('F','ALGORITH3_27',1,REUSE)
         ELSE
            CALL JEVEUO(CHAMP//'.VALE','L',JVALE)
            CALL DCOPY(NEQ,ZR(JVALE),1,ACCINI,1)
         ENDIF
         CALL RSEXCH(' ',REUSE,'FORC_EXTE',NUME,CHAMP,IRET)
         IF (IRET .EQ . 0 ) THEN
           CALL JEVEUO(CHAMP//'.VALE','L',JVALE)
           CALL DCOPY(NEQ,ZR(JVALE),1,FEXINI,1)
         ENDIF
         CALL RSEXCH(' ',REUSE,'FORC_AMOR',NUME,CHAMP,IRET)
         IF (IRET .EQ . 0 ) THEN
           CALL JEVEUO(CHAMP//'.VALE','L',JVALE)
           CALL DCOPY(NEQ,ZR(JVALE),1,FAMINI,1)
         ENDIF
         CALL RSEXCH(' ',REUSE,'FORC_LIAI',NUME,CHAMP,IRET)
         IF (IRET .EQ . 0 ) THEN
           CALL JEVEUO(CHAMP//'.VALE','L',JVALE)
           CALL DCOPY(NEQ,ZR(JVALE),1,FLIINI,1)
         ENDIF
C
C        --- CREE-T-ON UNE NOUVELLE STRUCTURE ? ---
         IF ( RESULT .EQ. REUSE ) THEN
           LCREA = .FALSE.
           CALL RSRUSD ( RESULT, NUME+1 )
         ENDIF
C====
C 4. --- RECUPERATION DES CONDITIONS INITIALES ---
C====
C
      ELSE
         CALL JEEXIN(RESULT(1:8)//'           .REFD',IRE)
         IF (IRE.GT.0) THEN
           LCREA = .FALSE.
         ENDIF

         NUME = 0
         CALL GETVID('ETAT_INIT','DEPL',1,IARG,1,CHAMP,NDI)
         IF (NDI.GT.0) THEN
            IF (LENER) THEN
              LINFO = .TRUE.
            ENDIF
            CALL CHPVER('F',CHAMP,'NOEU','DEPL_R',IERR)
            INCHAC = 1
            CHAM2 = BASENO//'.DEPINI'
            CALL VTCREB (CHAM2, NUMEDD, 'V', 'R', NEQ)
            CALL VTCOPY(CHAMP,CHAM2,' ',IRET)
            CALL JEVEUO(CHAM2//'.VALE','L',JVALE)
            CALL DCOPY(NEQ,ZR(JVALE),1,DEPINI,1)
         ELSE
            CALL U2MESS('I','ALGORITH3_28')
         ENDIF
C
         CALL GETVID('ETAT_INIT','VITE',1,IARG,1,CHAMP,NVI)
         IF (NVI.GT.0) THEN
            IF (LENER) THEN
              LINFO = .TRUE.
            ENDIF
            CALL CHPVER('F',CHAMP,'NOEU','DEPL_R',IERR)
            INCHAC = 1
            CHAM2 = BASENO//'.VITINI'
            CALL VTCREB (CHAM2, NUMEDD, 'V', 'R', NEQ)
            CALL VTCOPY(CHAMP,CHAM2,' ',IRET)
            CALL JEVEUO(CHAM2//'.VALE','L',JVALE)
            CALL DCOPY(NEQ,ZR(JVALE),1,VITINI,1)
         ELSE
            CALL U2MESS('I','ALGORITH3_29')
         ENDIF

         CALL GETVID('ETAT_INIT','ACCE',1,IARG,1,CHAMP,NAI)
         IF (NAI.GT.0 ) THEN
           IF (LENER) THEN
             LINFO = .TRUE.
           ENDIF
           CALL CHPVER('F',CHAMP,'NOEU','DEPL_R',IERR)
           INCHAC = 0
           CHAM2 = BASENO//'.ACCINI'
           CALL VTCREB (CHAM2, NUMEDD, 'V', 'R', NEQ)
           CALL VTCOPY(CHAMP,CHAM2,' ',IRET)
           CALL JEVEUO(CHAM2//'.VALE','L',JVALE)
           CALL DCOPY(NEQ,ZR(JVALE),1,ACCINI,1)
         ENDIF
C
      ENDIF
C
      IF (LINFO) THEN
        CALL U2MESS('I','ETATINIT_5')
      ENDIF
C
      CALL JEDEMA()
      END
