      SUBROUTINE NIFORC(NDIM,NNO1,NNO2,NNO3,NPG,IW,VFF1,VFF2,VFF3,IDF1,
     &   IDF2,DFF1,DFF2,VU,VG,VP,COMPOR,TYPMOD,MATE,GEOMI,SIG,DDL,VECT)
                         
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/02/2007   AUTEUR MICHEL S.MICHEL 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
      IMPLICIT NONE
      CHARACTER*8   TYPMOD(*)
      CHARACTER*16  COMPOR(*)
      INTEGER       NDIM,NNO1,NNO2,NNO3,NPG,IW,IDF1,IDF2,MATE
      INTEGER       VU(3,27),VG(27),VP(27)
      REAL*8        GEOMI(NDIM,NNO1),DFF1(NNO1,4),DFF2(NNO2,3)
      REAL*8        VFF1(NNO1,NPG),VFF2(NNO2,NPG),VFF3(NNO3,NPG)
      REAL*8        SIG(2*NDIM,NPG),DDL(*),VECT(*)

C-----------------------------------------------------------------------
C
C     BUT:  CALCUL  DE L'OPTION FORC_NODA EN QUASI INCOMPRESSIBLE
C                  DEFORMATION = 'SIMO_MIEHE' EN 3D/AXI/DPLAN
C     APPELEE PAR  TE0455
C IN NDIM     : DIMENSION DE L'ESPACe
C IN  NNO1    : NOMBRE DE NOEUDS DE L'ELEMENT LIES AUX DEPLACEMENTS
C IN  NNO2    : NOMBRE DE NOEUDS DE L'ELEMENT LIES AU GONFLEMENT
C IN  NNO3    : NOMBRE DE NOEUDS DE L'ELEMENT LIES A LA PRESSION 
C IN  NPG     : NOMBRE DE POINTS DE GAUSS
C IN  IW      : POIDS DES POINTS DE GAUSS
C IN  VFF1    : VALEUR  DES FONCTIONS DE FORME LIES AUX DEPLACEMENTS
C IN  VFF2    : VALEUR  DES FONCTIONS DE FORME LIES AU GONFLEMENT
C IN  VFF3    : VALEUR  DES FONCTIONS DE FORME LIES A LA PRESSION
C IN  IDFF1   : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C IN  IDFF2   : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C OUT DFF1    : DERIVEE FONCTION DE FORME (PT DE GAUSS COURANT) A T+
C OUT DFF2    : DERIVEE FONCTION DE FORME (PT DE GAUSS COURANT)
C IN  VU
C IN  VG
C IN  VP
C IN  GEOMI   : COORDONEES DES NOEUDS
C IN  TYPMOD  : TYPE DE MODELISATION
C IN  OPTION  : OPTION DE CALCUL
C IN  MATE    : MATERIAU CODE
C IN  COMPOR  : COMPORTEMENT
C IN  LGPG    : "LONGUEUR" DES VARIABLES INTERNES POUR 1 POINT DE GAUSS
C               CETTE LONGUEUR EST UN MAJORANT DU NBRE REEL DE VAR. INT.
C IN  CRIT    : CRITERES DE CONVERGENCE LOCAUX
C IN  INSTM   : INSTANT PRECEDENT
C IN  INSTP   : INSTANT DE CALCUL
C IN  TEMPM   : TEMPERATURE AUX NOEUDS A L'INSTANT PRECEDENT
C IN  TEMPP   : TEMPERATURE AUX NOEUDS A L'INSTANT DE CALCUL
C IN  TREF    : TEMPERATURE DE REFERENCE
C IN  DDLM    : DEGRES DE LIBERTE A L'INSTANT PRECEDENT
C IN  DDLD    : INCREMENT DES DEGRES DE LIBERTE
C IN  ANGMAS  : LES TROIS ANGLES DU MOT_CLEF MASSIF (AFFE_CARA_ELEM)
C IN  SIGM    : CONTRAINTES A L'INSTANT PRECEDENT
C IN  VIM     : VARIABLES INTERNES A L'INSTANT PRECEDENT
C OUT SIGP    : CONTRAINTES DE CAUCHY (RAPH_MECA ET FULL_MECA)
C OUT VIP     : VARIABLES INTERNES    (RAPH_MECA ET FULL_MECA)
C OUT VECT    : FORCES INTERNES
C OUT MATR    : MATRICE DE RIGIDITE (RIGI_MECA_TANG ET FULL_MECA)
C OUT CODRET  : CODE RETOUR
C-----------------------------------------------------------------------

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

      CHARACTER*2 K2RET
      LOGICAL AXI,GRAND,NONLOC
      INTEGER NDDL,VIJ(3,3),LIJ(3,3),NDU
      INTEGER G,KL,SA,RA,NA,IA,JA,KK
      REAL*8 GEOMM(3*27),DEPLM(3*27),GM,PM,JM,R,W,WM,FM(3,3),EPSM(6)
      REAL*8 TAU(6),TAUHY,TAUDV(6)
      REAL*8 GRADGM(3),C,GONFM(27),PRESM(27)
      REAL*8 DDOT,RBID,KR(6),ID(3,3),T1,T2
      REAL*8 AM,AP,BM,BOA,AA,BB,DAA,DBB,DBOA,D2BOA

      PARAMETER (GRAND = .TRUE.)
      DATA    KR   /1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
      DATA    ID   /1.D0, 0.D0, 0.D0, 
     &              0.D0, 1.D0, 0.D0,
     &              0.D0, 0.D0, 1.D0/
      DATA    VIJ  / 1, 4, 5,
     &               4, 2, 6,
     &               5, 6, 3 /
C-----------------------------------------------------------------------

C - INITIALISATION

      AXI  = TYPMOD(1).EQ.'AXIS'
      NDDL = NNO1*NDIM + NNO2 + NNO3
      NDU  = NDIM
      IF (AXI) NDU = 3

      CALL R8INIR(NDDL,0.D0,VECT,1)
      CALL R8INIR(6,0.D0,TAU,1)

C    REACTUALISATION DE LA GEOMETRIE ET EXTRACTION DES CHAMPS
      DO 10 NA = 1,NNO1
        DO 20 IA = 1,NDIM
          GEOMM(IA+NDIM*(NA-1)) = GEOMI(IA,NA) + DDL(VU(IA,NA))
          DEPLM(IA+NDIM*(NA-1)) = DDL(VU(IA,NA))
 20     CONTINUE
 10   CONTINUE
      DO 30 RA = 1,NNO2
        GONFM(RA) = DDL(VG(RA))
 30   CONTINUE
      DO 40 SA = 1,NNO3
        PRESM(SA) = DDL(VP(SA))
 40   CONTINUE

 
C - CALCUL POUR CHAQUE POINT DE GAUSS

      DO 1000 G = 1,NPG

C      LONGUEUR CARACTERISTIQUE -> PARAMETRE C
        CALL RCVALA(MATE,' ','NON_LOCAL',0,' ',0.D0,
     &              1,'C_GONF',C,K2RET,'  ')
        NONLOC = K2RET.EQ.'OK' .AND. C.NE.0.D0
       
C      CALCUL DES ELEMENTS GEOMETRIQUES
        CALL DFDMIP(NDIM,NNO1,AXI,GEOMI,G,IW,VFF1(1,G),IDF1,R,W,DFF1)
        CALL NMEPSI(NDIM,NNO1,AXI,GRAND,VFF1(1,G),R,DFF1,DEPLM,FM,EPSM)
        CALL DFDMIP(NDIM,NNO1,AXI,GEOMM,G,IW,VFF1(1,G),IDF1,R,WM,DFF1)
        CALL NMMALU(NNO1,AXI,R,VFF1(1,G),DFF1,LIJ)


        JM = FM(1,1)*(FM(2,2)*FM(3,3)-FM(2,3)*FM(3,2))
     &     - FM(2,1)*(FM(1,2)*FM(3,3)-FM(1,3)*FM(3,2))
     &     + FM(3,1)*(FM(1,2)*FM(2,3)-FM(1,3)*FM(2,2))

       
C      CALCUL DE LA PRESSION ET DU GONFLEMENT
        GM = DDOT(NNO2,VFF2(1,G),1,GONFM,1)
        PM = DDOT(NNO3,VFF3(1,G),1,PRESM,1)

C      CALCUL DU GRADIENT DU GONFLEMENT POUR LA REGULARISATION
        IF (NONLOC) THEN
          CALL DFDMIP(NDIM,NNO2,AXI,GEOMI,G,IW,VFF2(1,G),IDF2,R,W,DFF2)
          DO 100 IA = 1,NDIM
            GRADGM(IA) = DDOT(NNO2,DFF2(1,IA),1,GONFM,1)
 100      CONTINUE
        END IF

C      CONTRAINTE DE KIRCHHOFF
        CALL DCOPY(2*NDIM,SIG(1,G),1,TAU,1)
        CALL DSCAL(2*NDIM,JM,TAU,1)
        TAUHY = (TAU(1)+TAU(2)+TAU(3))/3.D0
        DO 200 KL = 1,6
          TAUDV(KL) = TAU(KL) - TAUHY*KR(KL)
 200    CONTINUE


C     CALCUL DES FONCTIONS A,B,... QUIE LIENT G ET J
        CALL NIRELA(JM,GM,GM,AM,AP,BM,BOA,AA,BB,DAA,DBB,DBOA,D2BOA) 
              
C      VECTEUR FINT:U
        DO 300 NA=1,NNO1
        DO 310 IA=1,NDU
          KK = VU(IA,NA)
          T1 = 0
          DO 320 JA = 1,NDU
            T2 = TAUDV(VIJ(IA,JA)) + PM*BB*ID(IA,JA)
            T1 = T1 + T2*DFF1(NA,LIJ(IA,JA))
 320      CONTINUE
          VECT(KK) = VECT(KK) + W*T1
 310    CONTINUE
 300    CONTINUE

C      VECTEUR FINT:G
        T2 = TAUHY*AA - PM*DBOA
        DO 350 RA=1,NNO2
          KK = VG(RA)
          T1 = VFF2(RA,G)*T2
          VECT(KK) = VECT(KK) + W*T1
 350    CONTINUE
 
        IF (NONLOC) THEN
          DO 355 RA=1,NNO2
            KK = VG(RA)
            T1 = C*DDOT(NDIM,GRADGM,1,DFF2(RA,1),NNO2)
            VECT(KK) = VECT(KK) + W*T1
 355      CONTINUE
        END IF

C      VECTEUR FINT:P
        T2 = BM - BOA
        DO 370 SA=1,NNO3
          KK = VP(SA)
          T1 = VFF3(SA,G)*T2
          VECT(KK) = VECT(KK) + W*T1
 370    CONTINUE
        
 1000 CONTINUE
      END
