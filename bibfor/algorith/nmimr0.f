      SUBROUTINE NMIMR0(SDIMPR,SDCONV,SDERRO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'
      CHARACTER*24 SDIMPR,SDCONV,SDERRO
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (UTILITAIRE)
C
C INITIALISATION DES INFORMATIONS SUR LES RESIDUS DANS LE TABLEAU DE
C CONVERGENCE
C
C ----------------------------------------------------------------------
C
C
C IN  SDIMPR : SD AFFICHAGE
C IN  SDCONV : SD GESTION DE LA CONVERGENCE
C IN  SDERRO : GESTION DES ERREURS
C
C
C
C
      CHARACTER*24 CNVLIE,CNVVAL,CNVNCO
      INTEGER      JCNVLI,JCNVVA,JCNVNC
      INTEGER      IRESI,NRESI
      REAL*8       R8BID,VALE,R8VIDE
      INTEGER      IBID
      CHARACTER*16 K16BID,LIEU
      CHARACTER*8  K8BID
      CHARACTER*9  COLONN
      LOGICAL      ERRPIL
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      VALE = R8VIDE()
      LIEU = ' '
C
C --- ACCES SD CONVERGENCE
C
      CNVLIE = SDCONV(1:19)//'.LIEU'
      CNVVAL = SDCONV(1:19)//'.VALE'
      CNVNCO = SDCONV(1:19)//'.NCOL'
      CALL JEVEUO(CNVLIE,'E',JCNVLI)
      CALL JEVEUO(CNVVAL,'E',JCNVVA)
      CALL JEVEUO(CNVNCO,'L',JCNVNC)
      CALL JELIRA(CNVNCO,'LONMAX',NRESI,K8BID)
C
C --- BOUCLE SUR LES RESIDUS
C
      DO 10 IRESI = 1,NRESI
        COLONN = ZK16(JCNVNC-1+IRESI)(1:9)
        IF (COLONN.EQ.'RESI_RELA') THEN
          CALL IMPSDR(SDIMPR,'RESI_RELA',K16BID,VALE  ,IBID  )
          CALL IMPSDR(SDIMPR,'RELA_NOEU',LIEU  ,R8BID ,IBID  )
        ELSEIF (COLONN.EQ.'RESI_MAXI') THEN
          CALL IMPSDR(SDIMPR,'RESI_MAXI',K16BID,VALE  ,IBID  )
          CALL IMPSDR(SDIMPR,'MAXI_NOEU',LIEU  ,R8BID ,IBID  )
        ELSEIF (COLONN.EQ.'RESI_REFE') THEN
          CALL IMPSDR(SDIMPR,'RESI_REFE',K16BID,VALE  ,IBID  )
          CALL IMPSDR(SDIMPR,'REFE_NOEU',LIEU  ,R8BID ,IBID  )
        ELSEIF (COLONN.EQ.'RESI_COMP') THEN
          CALL IMPSDR(SDIMPR,'RESI_COMP',K16BID,VALE  ,IBID  )
          CALL IMPSDR(SDIMPR,'COMP_NOEU',LIEU  ,R8BID ,IBID  )
        ELSEIF (COLONN.EQ.'FROT_NEWT') THEN
          CALL IMPSDR(SDIMPR,'FROT_NEWT',K16BID,VALE  ,IBID  )
          CALL IMPSDR(SDIMPR,'FROT_NOEU',LIEU  ,R8BID ,IBID  )
        ENDIF
        ZR(JCNVVA-1+IRESI)   = VALE
        ZK16(JCNVLI-1+IRESI) = LIEU
  10  CONTINUE
C
C --- ERREUR LORS DU PILOTAGE
C
      CALL NMERGE(SDERRO,'ERRE_PILO',ERRPIL)
      IF (ERRPIL) THEN
        CALL IMPSDR(SDIMPR,'PILO_COEF',LIEU  ,VALE  ,IBID  )
      ENDIF
C
      CALL JEDEMA()
      END
