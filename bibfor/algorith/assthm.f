      SUBROUTINE  ASSTHM(NNO, NNOS,NPG, POIDSG, VFF, DFDE, DFDN, DFDK,
     &                   GEOM, NOMTE,CRIT,TREF,DEPLM,DEPLP,
     &                   CONTM,CONTP,VARIM,VARIP,
     &                   DEFGEM,DEFGEP,
     &                   DRDS,DRDE,DSDE,B,DFDI,R,
     &                   MATUU,VECTU,RINSTM,RINSTP,
     &                   OPTION,IMATE,MECANI,PRESS1,PRESS2,TEMPE,
     &                   DIMDEF,DIMCON,NBVARI,NDDL,
     &                   NMEC,NP1,NP2,NDIM,COMPOR,TYPMOD,AXI,
     >                   NVOMAX,NNOMAX,NSOMAX,NBVOS,VOISIN,P2P1,CODRET)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/09/2002   AUTEUR UFBHHLL C.CHAVANT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C TOLE CRP_20
C TOLE CRP_21
       IMPLICIT NONE
C
       INTEGER      NNO,NNOS, NPG, IMATE,DIMDEF,DIMCON
       INTEGER      DIMMAT
       PARAMETER    (DIMMAT=120)
       INTEGER      NBVARI,NDDL,NMEC,NP1,NP2,NDIM
       CHARACTER*16 NOMTE, OPTION,COMPOR(*)
       REAL*8       POIDSG(NPG),VFF(NNO,NPG),DFDE(*),DFDN(*),DFDI(NNO,3)
       REAL*8       DFDK(*),GEOM(NDIM,NNO),CRIT(*),POIDS
       REAL*8       DEPLP(NDDL,NNO),DEPLM(NDDL,NNO)
       REAL*8       CONTM(DIMCON*NPG),CONTP(DIMCON*NPG)
       REAL*8       VARIM(NBVARI*NPG),VARIP(NBVARI*NPG)
       REAL*8       MATUU(*),MATRI(DIMMAT,DIMMAT),VECTU(NDDL,NNO)
       REAL*8       RINSTP,RINSTM
       REAL*8       TREF,DEFGEM(DIMDEF),DEFGEP(DIMDEF)
       REAL*8       DRDS(DIMDEF,DIMCON),DRDE(DIMDEF,DIMDEF)
       REAL*8       DSDE(DIMCON,DIMDEF),B(DIMDEF,NDDL*NNO)
       REAL*8       R(DIMDEF)  
       INTEGER      MECANI(5),PRESS1(7),PRESS2(7),TEMPE(5)
       INTEGER      YAMEC,YAP1,YAP2,YATE  
       INTEGER      ADDEME,ADDEP1,ADDEP2,ADDETE ,II,JJ 
       CHARACTER*8  TYPMOD(2)
       LOGICAL AXI,P2P1
       INTEGER      CODRET
       INTEGER NVOMAX,NNOMAX,NSOMAX
       INTEGER VOISIN(NVOMAX,NNOMAX)
       INTEGER NBVOS(NSOMAX)
       REAL*8 FACDG
C.......................................................................
C
C     BUT:  CALCUL  DES OPTIONS RIGI_MECA_TANG, RAPH_MECA ET FULL_MECA
C           EN MECANIQUE DES MILIEUX POREUX AVEC COUPLAGE THM 
C.......................................................................
C IN  NNO     : NOMBRE DE NOEUDS DE L'ELEMENT
C IN  NNOS    : NOMBRE DE NOEUDS SOMMET DE L'ELEMENT
C IN  NPG     : NOMBRE DE POINTS DE GAUSS
C IN  POIDSG  : POIDS DES POINTS DE GAUSS
C IN  VFF     : VALEUR  DES FONCTIONS DE FORME
C IN  DFDE    : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C IN  DFDN    : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C IN  DFDK    : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C IN  GEOM    : COORDONEES DES NOEUDS
C IN  NOMTE   : NOM DU TYPE DE L'ELEMENT
C IN  OPTION  : OPTION DE CALCUL
C IN  IMATE   : MATERIAU CODE
C IN  COMPOR  : COMPORTEMENT
C IN  CRIT    : CRITERES DE CONVERGENCE LOCAUX + THETA
C IN  DEPLP   : DEPLACEMENT A L INSTANT PLUS
C IN  DEPLM   : DEPLACEMENT A L INSTANT MOINS
C IN  RINSTM  : INSTANT PRECEDENT
C IN  RINSTP  : INSTANT COURANT
C IN  AXI     : VRAI SI ELEMENT APPELANT AXI
C IN  P2P1   : VRAI SI ELEMENT APPELANT P2P1
C IN VOISIN
C  POUR UN SOMMET J DE 1 A NNOS : 
C         VOISIN(1:NDIM,J) =  LES NDIM NOEUDS MILIEUX VOSIN DU SOMMMET
C
C
C  POUR UN MILIEU J DE 1 A NNOS +1 A NNO: 
C         VOISIN(1:2,J) =  LES 2 NOEUDS DU SEGMENT DONT IL EST LE MILIEU
C
C
C OUT CODRET  : CODE RETOUR LOIS DE COMPORTEMENT
C OUT DFDI    : DERIVEE DES FCT FORME
C OUT CONTP   : CONTRAINTES 
C OUT VARIP   : VARIABLES INTERNES
C OUT MATUU   : MATRICE DE RIGIDITE PROFIL (RIGI_MECA_TANG ET FULL_MECA)
C OUT VECTU   : FORCES NODALES (RAPH_MECA ET FULL_MECA)
C......................................................................
C
      INTEGER KPG,I,J,N,M,G,KK,K,KJI
      REAL*8  DT,TA,TA1
      INTEGER N1,N2,IDL,IDL1M,IIDL,IIDL1,IIDL2
      REAL*8          VARBIO,VARLQ,VARVP,RELA,RELBIO,RELLIQ,RELVP,USVARL
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER  ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      IF(NDDL*NNO.GT.DIMMAT) THEN
         CALL UTMESS('F','ASSTHM','DIMENSIONEMENT ' )
      ENDIF
C
C  DETERMINATION DES VARIABLES CARACTERISANT LE MILIEU
C  
C
      YAMEC  = MECANI(1)
      ADDEME = MECANI(2)
      YAP1   = PRESS1(1)
      ADDEP1 = PRESS1(3)
      YAP2   = PRESS2(1)
      ADDEP2 = PRESS2(3)
      YATE   = TEMPE(1)
      ADDETE = TEMPE(2)
C
C  CALCUL DE CONSTANTES UTILES
C
C     
      DT = RINSTP-RINSTM
      TA= CRIT(4)
      TA1 = 1.D0-TA
C
C INITIALISATION DE VECTU, MATUU A 0 SUIVANT OPTION
C
      IF (OPTION.NE.'RIGI_MECA_TANG') THEN
         DO 1 I=1,NDDL
            DO 2 J=1,NNO
               VECTU(I,J)=0.D0
 2          CONTINUE
 1       CONTINUE
      ENDIF
      
      IF ((OPTION.EQ.'RIGI_MECA_TANG').OR.(OPTION.EQ.'FULL_MECA')) THEN
         DO 3 I=1,NDDL*NNO
            DO 4 J=1,NDDL*NNO
               MATUU(I+(J-1)*NDDL*NNO)=0.D0
 4          CONTINUE
 3       CONTINUE
         DO 5 I=1,DIMMAT
            DO 6 J=1,DIMMAT
               MATRI(I,J)=0.D0
 6          CONTINUE
 5       CONTINUE
      ENDIF
C
C **********************************************************************
C     CALCUL POUR CHAQUE POINT DE GAUSS : BOUCLE SUR KPG
C
C$
      DO 10 KPG=1,NPG
C        CALCUL DE LA MATRICE B AU POINT DE GAUSS
C
         CALL CABTHM(NDDL,NNO,NNOS,
     >               DIMDEF,NDIM,NPG,KPG,POIDSG,DFDE,DFDN,DFDK,
     &               DFDI,GEOM,POIDS,VFF,B,NMEC,YAMEC,ADDEME,YAP1,
     &               ADDEP1,YAP2,ADDEP2,YATE,ADDETE,NP1,NP2,AXI,
     >               NVOMAX,NNOMAX,NSOMAX,NBVOS,VOISIN,P2P1)

C
C  CALCUL DES DEFORMATIONS GENERALISEES
C
            DO 108 I=1,DIMDEF
                DEFGEM(I)=0.D0
                DEFGEP(I)=0.D0
                DO 109 N=1,NNO
                   DO 110 J=1,NDDL
                      DEFGEM(I)=DEFGEM(I)
     &                  +B(I,(N-1)*NDDL+J)*DEPLM(J,N)
                      DEFGEP(I)=DEFGEP(I)
     &                  +B(I,(N-1)*NDDL+J)*DEPLP(J,N)
 110               CONTINUE
 109            CONTINUE
 108        CONTINUE
C
C         
C APPEL A LA ROUTINE EQUTHM
C
       CALL EQUTHM(
     &          IMATE,OPTION,TA,TA1,NDIM,COMPOR,TYPMOD,
     &          DIMDEF,DIMCON,NBVARI,
     &          DEFGEM,CONTM((KPG-1)*DIMCON+1),
     &          VARIM((KPG-1)*NBVARI+1),
     &          DEFGEP,CONTP((KPG-1)*DIMCON+1),
     &          VARIP((KPG-1)*NBVARI+1),
     &          MECANI,PRESS1,PRESS2,TEMPE,
     &          CRIT,RINSTM,RINSTP,DT,
     &          R,DRDS,DSDE,DRDE,CODRET)
       IF ( CODRET.NE.0) THEN
         GOTO 9000
       ENDIF
            
C
C
C  CONTRIBUTION DU POINT DE GAUSS KPG A LA MATRICE TANGENTE ET 
C        AU RESIDU
C
C     MATRICE TANGENTE : REMPLISSAGE EN NON SYMETRIQUE
C        A VOIR CE QUE CELA DONNE EN SYMETRIQUE

         IF(OPTION(1:16).EQ.'RIGI_MECA_TANG' .OR.
     &      OPTION(1:9).EQ.'FULL_MECA') THEN

            DO 111 N=1,NNO*NDDL
               DO 112 M=1, NNO*NDDL
                  DO 113 I=1,DIMDEF
                     DO 114 J=1,DIMDEF
                        MATRI(N,M)=MATRI(N,M)+
     &                     B(J,N)*DRDE(J,I)*B(I,M)*POIDS
 114                 CONTINUE
 113              CONTINUE
 112           CONTINUE
 111        CONTINUE
C
C  ELEMENTS P2P1
C
C
C REMPLISSAGE DE LA MATRICE MATUU : LE MEME QUE DANS SONS3D
C ON CONSIDERE LA MATRICE TOUJOURS NON SYMETRIQUE 
C
            IF (KPG.EQ.NPG) THEN
C
C  IMPOSER PAR LA MATRICE XMILIEU = 1/2(X VOISIN 1 + X VOISIN 2)
C
        IF ( P2P1) THEN
          IDL1M = NMEC+1
          IF(OPTION(1:16).EQ.'RIGI_MECA_TANG' .OR.
     >      OPTION(1:9).EQ.'FULL_MECA') THEN

            DO 200 N=NNOS+1,NNO
               N1 = VOISIN(1,N)
               N2 = VOISIN(2,N)
               DO 201 IDL = IDL1M,NDDL
                 IIDL  = (N-1 )*NDDL+IDL
                 IIDL1 = (N1-1)*NDDL+IDL
                 IIDL2 = (N2-1)*NDDL+IDL
C
C  ON PREND UN FACTEUR DE NORMALISATION = VALEU DIAGONALE
C  DU PREMIER NOEUD SOMMET
C
            FACDG = MATRI(IIDL1,IIDL1)
                 MATRI(IIDL1,IIDL1) = MATRI(IIDL1,IIDL1)+FACDG/4.D0
                 MATRI(IIDL1,IIDL2) = MATRI(IIDL1,IIDL2)+FACDG/4.D0
                 MATRI(IIDL2,IIDL1) = MATRI(IIDL2,IIDL1)+FACDG/4.D0
                 MATRI(IIDL2,IIDL2) = MATRI(IIDL2,IIDL2)+FACDG/4.D0
                 MATRI(IIDL1,IIDL ) = -FACDG/2.D0
                 MATRI(IIDL2,IIDL ) = -FACDG/2.D0
                 MATRI(IIDL ,IIDL1) = -FACDG/2.D0
                 MATRI(IIDL ,IIDL2) = -FACDG/2.D0
                 MATRI(IIDL ,IIDL ) =  FACDG 
               
 201           CONTINUE
 200        CONTINUE
          ENDIF
        ENDIF
               KJI=1
               DO 115 II=1,NDDL*NNO
                  DO 116 JJ=1,NDDL*NNO
                     MATUU(KJI) = MATRI(II,JJ)
                     KJI= KJI + 1
 116              CONTINUE
 115           CONTINUE                        
            ENDIF
         ENDIF
C
C     RESIDU
C
         IF((OPTION(1:9).EQ.'FULL_MECA' .OR.
     &     OPTION(1:9).EQ.'RAPH_MECA'))THEN
            DO 117 I=1,NDDL
               DO 118 N=1, NNO
                  DO 119 K=1,DIMDEF
                     VECTU(I,N)=VECTU(I,N)+
     &                     B(K,NDDL*(N-1)+I)*R(K)*POIDS
 119              CONTINUE
 118           CONTINUE
 117        CONTINUE
        ENDIF
C
 10   CONTINUE
C
C
 9000 CONTINUE
      END
