      SUBROUTINE NMFLAM(MODELE,NUMEDD,CARELE,COMPOR,SOLVEU,
     &                  NUMINS,RESULT,MATE  ,COMREF,LISCHA,
     &                  DEFICO,RESOCO,METHOD,PARMET,FONACT,
     &                  CARCRI,ITERAT,SDDISC,SDTIME,OPTFLA,
     &                  VALMOI,VALPLU,POUGD ,SOLALG,MATASS,
     &                  MEELEM,MEASSE,VEELEM,SDDYNA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/11/2008   AUTEUR GREFFET N.GREFFET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      INTEGER      NUMINS,ITERAT
      REAL*8       PARMET(*)
      CHARACTER*8  RESULT,OPTFLA
      CHARACTER*19 MEELEM(*)
      CHARACTER*24 RESOCO,DEFICO
      CHARACTER*16 METHOD(*)
      CHARACTER*19 MATASS
      CHARACTER*19 LISCHA,SOLVEU,SDDISC,SDDYNA
      CHARACTER*24 MODELE,NUMEDD,CARELE,COMPOR
      CHARACTER*24 VALMOI(8),VALPLU(8)
      CHARACTER*19 VEELEM(*),SOLALG(*)
      CHARACTER*24 MATE,SDTIME
      CHARACTER*24 CARCRI,POUGD,COMREF
      LOGICAL      FONACT(*)
      CHARACTER*19 MEASSE(*)
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C CALCUL DE MODES
C      
C ----------------------------------------------------------------------
C      
C
C IN  OPTFLA : TYPE DE CALCUL
C              'FLAMBSTA' MODES DE FLAMBEMENT EN STATIQUE
C              'FLAMBDYN' MODES DE FLAMBEMENT EN DYNAMIQUE
C              'VIBRDYNA' MODES VIBRATOIRES
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : LISTE DES CHARGES
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  DEFICO : SD DEF. CONTACT
C IN  SDDYNA : SD POUR LA DYNAMIQUE
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION (VOIR NMLECT)
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION (VOIR NMLECT)
C IN  SOLVEU : SOLVEUR
C IN  CARCRI : PARAMETRES METHODES D'INTEGRATION LOCALES (VOIR NMLECT)
C IN  SDDISC : SD DISC_INST
C IN  PREMIE : SI PREMIER INSTANT DE CALCUL
C IN  NUMINS : NUMERO D'INSTANT
C IN  ITERAT : NUMERO D'ITERATION
C IN  VALMOI : VARIABLE CHAPEAU POUR ETAT EN T-
C IN  VALPLU : VARIABLE CHAPEAU POUR ETAT EN T+
C IN  POUGD  : VARIABLE CHAPEAU POUR POUR POUTRES EN GRANDES ROTATIONS
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  MATASS : MATRICE ASSEMBLEE GLOBALE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      JINFO
      CHARACTER*24 TPSDII
      INTEGER      NFREQ,NFREQC,NUMARC
      INTEGER      I,ISLVK,IM,LJEVEU,IBID
      INTEGER      DEFO,LDCCVG
      REAL*8       BANDE(2),R8BID
      REAL*8       FREQM,FREQV,FREQA,FREQR,R8MAEM
      CHARACTER*4  MOD45
      CHARACTER*8  MODES
      CHARACTER*8  SYME
      CHARACTER*16 K16BID,OPTMOD,VARACC,TYPMAT
      CHARACTER*19 MATGEO,MODE,VECFLA,MATAS2  
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      CALL JEVEUO(SOLVEU(1:19)//'.SLVK','E',ISLVK)
      MODES  = '&&NM45BI'    
      MODE   = '&&NMFLAM.MODEFLAMB'
      VECFLA = '&&NMOP45.VECTFLAMB'
      MATGEO = '&&NMFLAM.RIGIGEOM'      
      MATAS2 = '&&NMFLAM.MATASS'      
C  
C --- RECUPERATION DES OPTIONS
C         
      CALL NMFLAL(COMPOR,METHOD,OPTFLA,MOD45 ,DEFO  ,
     &            NFREQ ,TYPMAT,OPTMOD,BANDE)
C
C --- ON FORCE LA MATRICE TANGENTE EN SYMETRIQUE A CAUSE DE SORENSEN
C
      SYME   = ZK24(ISLVK+5-1)(1:8)
      ZK24(ISLVK+5-1)='OUI'    
C
C --- CALCUL DE LA MATRICE TANGENTE ASSEMBLEE ET DE LA MATRICE GEOM.
C
      CALL NMFLMA(TYPMAT,MOD45 ,DEFO  ,PARMET,MODELE,
     &            MATE  ,CARELE,SDDISC,SDDYNA,FONACT,
     &            NUMINS,ITERAT,VALPLU,VALPLU,POUGD ,
     &            SOLALG,LISCHA,COMREF,DEFICO,RESOCO,
     &            SOLVEU,NUMEDD,COMPOR,CARCRI,SDTIME,
     &            MEELEM,MEASSE,VEELEM,LDCCVG,MATAS2,
     &            MATGEO)
C
C --- RETABLISSEMENTS VALEURS
C 
      ZK24(ISLVK+5-1) = SYME(1:3)
C
C --- CALCUL DES MODES PROPRES
C    
C  ON DIFFERENCIE NFREQ (DONNEE UTILISATEUR) DE NFREQC
C  QUI EST LE NB DE FREQ TROUVEES PAR L'ALGO DANS NMOP45
C
      NFREQC = NFREQ
      CALL NMOP45(MATAS2,MATGEO,DEFO  ,OPTMOD,NFREQC,
     &            BANDE ,MOD45 ,MODES )
      IF (NFREQC.EQ.0) THEN
        GOTO 999
      ENDIF
C
C --- ARCHIVAGE
C
      TPSDII = SDDISC(1:19)//'.DIIR'
      CALL JEVEUO(TPSDII,'L',JINFO)  
      NUMARC = NINT(ZR(JINFO))-1
      
      IF ( MOD45 .EQ. 'VIBR' ) THEN
        VARACC = 'FREQ    '
      ELSEIF ( MOD45 .EQ. 'FLAM' ) THEN  
        VARACC = 'CHAR_CRIT'
      ELSE
        CALL ASSERT(.FALSE.)  
      ENDIF
      FREQM = R8MAEM()
      IM = 0
      DO 60 I = 1,NFREQC
        CALL RSADPA(MODES,'L',1,VARACC,I,0,LJEVEU,K16BID)
        FREQV = ZR(LJEVEU)
        FREQA = ABS(FREQV)
        IF (FREQA.LT.FREQM) THEN
          IM    = I
          FREQM = FREQA
          FREQR = FREQV
        END IF
   60 CONTINUE
      CALL RSADPA(RESULT,'E',1,VARACC,NUMARC,0,LJEVEU,K16BID)
      ZR(LJEVEU) = FREQR
C
C --- AFFICHAGE DES MODES
C
      CALL NMIMPR('IMPR','IMPR_MODE',MOD45,ZR(LJEVEU),IM)
C
      CALL RSEXCH(MODES,'DEPL',IM    ,MODE,IBID)
      IF ( MOD45 .EQ. 'VIBR' ) THEN
        CALL RSEXCH(RESULT,'MODE_MECA',NUMARC,VECFLA,IBID)
        IF (IBID.LE.100) THEN
          CALL COPISD('CHAMP_GD','G',MODE,VECFLA)
          CALL RSNOCH(RESULT,'MODE_MECA',NUMARC,' ')
        END IF
      ELSEIF ( MOD45 .EQ. 'FLAM' ) THEN 
        CALL RSEXCH(RESULT,'MODE_FLAMB',NUMARC,VECFLA,IBID)
        IF (IBID.LE.100) THEN
          CALL COPISD('CHAMP_GD','G',MODE,VECFLA)
          CALL RSNOCH(RESULT,'MODE_FLAMB',NUMARC,' ')
        END IF
      ELSE
        CALL ASSERT(.FALSE.)  
      ENDIF
C
C --- AFFICHAGE ARCHIVAGE
C
      CALL NMIMPR('IMPR','ARCH_MODE',MOD45,R8BID,NUMARC)
C
  999 CONTINUE      
C
      CALL JEDETC('G',MODES,1)
      CALL JEDEMA()
      END
