      SUBROUTINE NMFLAM(MODELE,NUMEDD,CARELE,COMPOR,SOLVEU,NUMINS,
     &                  VALPLU,RESULT,MATE,COMREF,
     &           LISCHA,MEDIRI,RESOCO,METHOD,PARMET,CARCRI,
     &           ITERAT,POUGD,DEPDEL,PARTPS,
     &           DEFICO,STADYN,PREMIE,CMD,DEPENT,VITENT,LAMORT,
     &           MEMASS,MASSE,AMORT,COEVIT,COEACC,LICCVG)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 18/04/2005   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
      IMPLICIT NONE
      INTEGER NUMINS,ITERAT, LICCVG(*)
      REAL*8 PARMET(*),COEVIT,COEACC
      CHARACTER*8 RESULT
      CHARACTER*24 RESOCO
      CHARACTER*16 METHOD(6),CMD
      CHARACTER*19 MATASS,LISCHA,SOLVEU,PARTPS,MATRIX(2)
      CHARACTER*24 MODELE,NUMEDD,CARELE,COMPOR,VALPLU
      CHARACTER*24 MEDIRI,DEFICO,MAESCL,STADYN,MATE
      CHARACTER*24 CARCRI,VALMOI,POUGD,DEPDEL,COMREF
      CHARACTER*24 DEPENT,VITENT,RIGID,MEMASS,MEAMOR,AMORT
      CHARACTER*24 MASSE
      LOGICAL LAMORT,PREMIE
C ----------------------------------------------------------------------
C-------- CALCUL DE FLAMBEMENT NON LINEAIRE--
C ----------------------------------------------------------------------

C IN       MODELE K24  MODELE
C IN       NUMEDD K24  NUME_DDL
C IN       CARELE K24  CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN       COMPOR K24  COMPORTEMENT
C IN       SOLVEU K19  SOLVEUR
C IN       NUMINS  I   NUMERO D'INSTANT
C IN       VALPLU K24  ETAT EN T+

C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------

      CHARACTER*32 JEXNUM
      INTEGER ZI,IER
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------

      INTEGER IDES,NBV,NFREQ
      CHARACTER*8 MATEL,SYME
      CHARACTER*24 K24BID,SIGPLU
      INTEGER I,IRET,ISLVK,IM
      CHARACTER*19 MATGEO
      INTEGER LDSOR,ICODE,NEQ,ICO,IVEC,INIT,DEFO,NUMARC,LJEVEU,LVEC
      CHARACTER*16 K16BID,OPTION
      REAL*8 BANDE(2),FREQM,FREQA,R8MAEM


C ----------------------------------------------------------------------
      CALL JEMARQ()

      CALL GETVIS('CRIT_FLAMB','NB_FREQ',1,1,1,NFREQ,IRET)
      CALL GETVR8('CRIT_FLAMB','CHAR_CRIT',1,1,2,BANDE,IRET)

C     ON FORCE L'ASSEMBLAGE DE LA MATRICE TANGENTE EN SYMETRIQUE
C     A CAUSE DE SORENSEN

      CALL JEVEUO(SOLVEU//'.SLVK','L',ISLVK)
      SYME = ZK24(ISLVK+5-1)(1:8)
      ZK24(ISLVK+5-1)='OUI'

C
C --    RE-CALCUL DE LA MATRICE TANGENTE ASSEMBLEE (ET NON FACTORISEE)
C

       CALL NMMATR('FLAMBEMENT',MODELE,NUMEDD,MATE,CARELE,COMREF,COMPOR,
     &           LISCHA,MEDIRI,RESOCO,METHOD,SOLVEU,PARMET,CARCRI,
     &           PARTPS,NUMINS,ITERAT,VALPLU,POUGD,DEPDEL,VALPLU,MATRIX,
     &           K16BID,DEFICO,STADYN,PREMIE,CMD,DEPENT,VITENT,LAMORT,
     &           MEMASS,MASSE,AMORT,COEVIT,COEACC,LICCVG(5))

C     ON RETABLIT LA SYMETRIE ORIGINELLE

      ZK24(ISLVK+5-1)=SYME(1:3)
      MATASS=MATRIX(1)

C         SI ON EST EN PETITS DEPLACEMENTS, DEFO=0
C          ON CALCULER LES VALEURS PROPRES DE KT+LAMBDA.KG
C         SINON ON CALCULE LES VPDE KT+LAMBDA.ID

      CALL JEVEUO(COMPOR(1:19)//'.VALE','L',INIT)
      CALL JEVEUO(COMPOR(1:19)//'.DESC','L',IDES)
      DEFO = 0
      NBV = ZI(IDES-1+3)
      DO 10 I = 1,NBV
        IF (ZK16(INIT+2+16*(I-1)).EQ.'GREEN'
     & .OR. ZK16(INIT+2+16*(I-1)).EQ.'GREEN_GR' .OR.
     &      ZK16(INIT+2+16*(I-1)).EQ.'SIMO_MIEHE') THEN
          DEFO = 1
        END IF
   10 CONTINUE


C   CALCUL DE LA RIGIDITE GEOMETRIQUE DANS LE CAS HPP

      IF (DEFO.EQ.0) THEN
         CALL DESAGG(VALPLU,K24BID,SIGPLU,K24BID,K24BID,K24BID,K24BID,
     &              K24BID,K24BID)
         MATEL = '&&NMFLAM'
         CALL DETRSD('MATR_ELEM',MATEL)

         CALL MERIBI(MODELE(1:8),CARELE(1:8),SIGPLU,MATEL,0)

         MATGEO = '&&NMFLAM.RIGIGEOM'
         CALL ASMATR(1,MATEL,' ',NUMEDD,SOLVEU,' ','ZERO','V',1,MATGEO)

         CALL UTMESS('I','NMFLAM','CALCUL FLAMBEMENT NON LINEAIRE HPP')
         OPTION = 'BANDE'

      ELSE

         CALL UTMESS('I','NMFLAM','FLAMBEMENT NON LINEAIRE GREEN')
         MATGEO=MATASS
         OPTION = 'PLUS_PETITE'

      ENDIF

      CALL NMOP45(IER,MATASS,MATGEO,DEFO,OPTION,NUMINS,RESULT,NFREQ,
     &            BANDE)

      CALL JEDEMA()
      END
