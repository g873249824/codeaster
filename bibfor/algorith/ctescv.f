      SUBROUTINE CTESCV(CVEC1,CVEC0,CVEC01,CVEC00,NDIM,XER)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 03/07/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
C
C***********************************************************************
C    P. RICHARD                                 DATE 31/07/91
C-----------------------------------------------------------------------
C  BUT: < COMPLEXE TEST DE CONVERGENCE >
C
C TESTER LA CONVERGENCE PAR ESTIMATION DE LA COLINEARITE
C      DU VECTEUR COURANT AVEC CELUI DE L'ITERATION PRECEDANTE
C      RENVOIE L'ERREUR DE COLINEARITE RELATIVE
C     ET COPIE DU MODE DE L'ITERATION COURANTE DANS L'ANCIEN
C
C-----------------------------------------------------------------------
C
C CVEC1    /I/: VECTEUR ITERATION COURANTE
C CVEC0    /M/: VECTEUR ITERATION PRECEDENTE
C NDIM     /I/: DIMENSION DES VECTEURS
C XER      /O/: ERREUR RELATIVE DE COLINEARITE
C
C-----------------------------------------------------------------------
C
      COMPLEX*16 CVEC1(NDIM),CVEC0(NDIM)
      COMPLEX*16 CVEC01(NDIM),CVEC00(NDIM)
      COMPLEX*16 CCONJ,CNORM,CPROD
      REAL*8     EPS,R8MIEM
C
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
C
C-----------------------------------------------------------------------
      INTEGER I ,NDIM 
      REAL*8 PIMA ,PREA ,XER 
C-----------------------------------------------------------------------
      EPS = R8MIEM()**(2.0D+0 / 3.0D+0)
C   PRODUIT SCALAIRE
C
C   Produit scalaire inv(M)*X1*X0
      CPROD=DCMPLX(0.D0,0.D0)
      DO 10 I=1,NDIM
        CALL ZCONJU(CVEC1(I),PREA,PIMA)
        CCONJ=DCMPLX(PREA,-PIMA)
        CPROD=CPROD+(CCONJ*CVEC00(I))
 10   CONTINUE

C
C   Produit scalaire inv(M)*X0*X0
      CNORM=DCMPLX(0.D0,0.D0)
      DO 15 I=1,NDIM
        CALL ZCONJU(CVEC01(I),PREA,PIMA)
        CCONJ=DCMPLX(PREA,-PIMA)
        CNORM=CNORM+(CCONJ*CVEC00(I))
 15   CONTINUE

C    Ancien calcul d'erreur
C
C   Produit scalaire inv(M)*X1*X1
C      CNORM2=DCMPLX(0.D0,0.D0)
C      DO 16 I=1,NDIM
C        CALL ZCONJU(CVEC1(I),PREA,PIMA)
C        CCONJ2=DCMPLX(PREA,-PIMA)
C        CNORM2=CNORM2+(CCONJ2*CVEC0(I))
C 16   CONTINUE
C      WRITE(6,*)'CNORM2 = ',CNORM2
C
C   CALCUL ERREUR ORTHOGONALITE
C
C      XER=0.D0
C      DO 20 I=1,NDIM
C        CERRE=CVEC1(I)-(CNORM2*CVEC01(I)/CNORM)
C        CALL ZCONJU(CERRE,PREA,PIMA)
C        XMODU=(PREA**2)+(PIMA**2)
C        XER=XER+XMODU
C 20   CONTINUE
C
C      XER=(XER/(DBLE(CNORM2)))**0.5D0

      IF (ABS(CNORM).LT.EPS) THEN
        XER=100.D0
      ELSE
        XER=ABS(1.D0-ABS(CPROD)/ABS(CNORM))
      ENDIF
C
C
C  RECOPIE DU VECTEUR COURANT DANS LE PRECEDENT
C
      DO 30 I=1,NDIM
        CVEC0(I)=CVEC1(I)
 30   CONTINUE
C
      END
