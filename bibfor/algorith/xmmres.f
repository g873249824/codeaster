      SUBROUTINE XMMRES(DEFICO,DEPDEL,NUMEDD,MODELE,CNSINR)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 10/07/2007   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT

      IMPLICIT     NONE
      CHARACTER*19 CNSINR
      CHARACTER*24 DEFICO,DEPDEL,NUMEDD,MODELE

C   BUT : PREPARER LE CHAM_NO_S POUR L ARCHIVAGE DU CONTACT PAR NMARCH
C         POUR LA METHODE CONTINUE AVEC X-FEM

C   IN       DEFICO : SD DU CONTACT
C   IN       DEPDEL : DEPLACEMENT AU PAS DE TEMPS COURANT
C   IN       NUMEDD : NUME_DDL POUR LA CREATION DES CHAM_NO
C   IN       MODELE : NOM DU MODELE
C   IN/OUT   CNSINR : CHAM_NO_S POUR L ARCHIVAGE DU CONTACT


C ======================================================================
C ------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
      CHARACTER*32 JEXNUM,JEXATR
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)

C --------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------
C ======================================================================

      INTEGER      JFISS,JCESV1,JCESV2,JCESV3,JCESL1,JCESL2,JCESL3,JDIM
      INTEGER      JCESD1,JCESD2,JCESD3,JCESK1,NBMA,IRET,IMA,IAD,I,IA,IN
      INTEGER      NINTER,JMAI,ITYPMA,NUNO,JCONX1,JCONX2,J,NDIM,IER
      INTEGER      JDEPL,JDEPV,NOMIL,JCNSVR,JCNSLR,CPTSAM,IBID
      CHARACTER*8  FISS,NOMA,K8BID,TYPMA,LICMP(3),LICMPR(6),NOMNO
      CHARACTER*19 CHS1,CHS2,CHS3,DEPDES,DEPCN
      REAL*8       XYZ(3),LAMBDA(3),R8PREM,DIST,COEF
      INTEGER      IZONE,XXCONI
      CHARACTER*24 K24BLA
      LOGICAL      LBID

      CALL JEMARQ()

      CHS1 = '&&XMMRES.CHS1'
      CHS2 = '&&XMMRES.CHS2'
      CHS3 = '&&XMMRES.CHS3'
      DEPDES = '&&XMMRES.DEPDES'
      DEPCN = '&&XMMRES.DEPCN'

      CALL JEVEUO(MODELE(1:8)//'.FISS','L',JFISS)
      FISS=ZK8(JFISS)

C     TRANSFORMATION DES CHAM_ELEM EN CHAM_ELEM_S
      CALL CELCES(MODELE(1:8)//'.TOPOFAC.LO','V',CHS1)
      CALL CELCES(MODELE(1:8)//'.TOPOFAC.AI' ,'V',CHS2)
      CALL CELCES(MODELE(1:8)//'.TOPOFAC.PI' ,'V',CHS3)

C     RECUPERATION DES ADRESSES DESCRIPTEUR,VALEUR ET LOGIQUE
      CALL JEVEUO(CHS1//'.CESD','L',JCESD1)
      CALL JEVEUO(CHS2//'.CESD','L',JCESD2)
      CALL JEVEUO(CHS3//'.CESD','L',JCESD3)

      CALL JEVEUO(CHS1//'.CESV','L',JCESV1)
      CALL JEVEUO(CHS2//'.CESV','L',JCESV2)
      CALL JEVEUO(CHS3//'.CESV','L',JCESV3)

      CALL JEVEUO(CHS1//'.CESL','L',JCESL1)
      CALL JEVEUO(CHS2//'.CESL','L',JCESL2)
      CALL JEVEUO(CHS3//'.CESL','L',JCESL3)

      CALL ASSERT(ZI(JCESD1).EQ.ZI(JCESD2))
      CALL ASSERT(ZI(JCESD1).EQ.ZI(JCESD3))

C     DONNÉES RELATIVES AU MAILLAGE
      CALL JEVEUO(CHS1//'.CESK','L',JCESK1)
      NOMA=ZK8(JCESK1-1+1)
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8BID,IRET)
      CALL JEVEUO(NOMA//'.TYPMAIL','L',JMAI)
      CALL JEVEUO(NOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA//'.CONNEX','LONCUM'),'L',JCONX2)
      CALL JEVEUO(NOMA//'.DIME','L',JDIM)
      NDIM=ZI(JDIM-1+6)
C
C --- ZONE DE CONTACT IZONE CORRESPONDANTE
C
      IZONE  = XXCONI(DEFICO,FISS,'MAIT') 
        
C     RECUPERATION DU COEFFICIENT DE MISE A L'ECHELLE DES PRESSIONS DE
C     CONTACT
      CALL MMINFP(IZONE ,DEFICO,K24BLA,'COEF_ECHELLE',
     &            IBID  ,COEF  ,K24BLA,LBID)

C     TRANSFORMATION DU CHAM_NO DES DDL EN UN CHAM_NO_S
      CALL CNOCNS(DEPDEL,'V',DEPDES)
      LICMP(1) = 'LAGS_C'
      LICMP(2) = 'LAGS_F1'
      LICMP(3) = 'LAGS_F2'
      CALL CNSRED(DEPDES,0,0,NDIM,LICMP,'V',DEPCN)
C      CALL IMPRSD('CHAMP',DEPCN,6,'DEPRED')
      CALL JEVEUO(DEPCN//'.CNSV','L',JDEPV)
      CALL JEVEUO(DEPCN//'.CNSL','L',JDEPL)

C     CREATION DU CHAM_NO_S POUR L ARCHIVAGE DU CONTACT
C     X_PT, Y_PT, Z_PT, LAGS_C, LAGC_F1, LAGS_F2
      LICMPR(1) = 'X1'
      LICMPR(2) = 'X2'
      LICMPR(3) = 'X3'
      LICMPR(4) = 'X4'
      LICMPR(5) = 'X5'
      LICMPR(6) = 'X6'
      CALL JEEXIN(CNSINR,IER)
      IF (IER.EQ.0) CNSINR='&&XMMRES.CNSINR'
      CALL CNSCRE(NOMA,'NEUT_R',6,LICMPR,'V',CNSINR)
      CALL JEVEUO(CNSINR//'.CNSV','E',JCNSVR)
      CALL JEVEUO(CNSINR//'.CNSL','E',JCNSLR)

      CPTSAM=0

C     BOUCLE SUR LES MAILLES
      DO 100 IMA=1,NBMA

        ITYPMA=ZI(JMAI-1+IMA)
        CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ITYPMA),TYPMA)

        CALL CESEXI('C',JCESD1,JCESL1,IMA,1,1,1,IAD)
        IF (IAD.LE.0)  GOTO 100
        NINTER = ZI(JCESV1-1+IAD)

C       BOUCLE SUR LES POINTS D'INTERSECTION
        DO 120 I=1,NINTER
          CALL CESEXI('S',JCESD2,JCESL2,IMA,1,1,4*(I-1)+1,IAD)
          CALL ASSERT(IAD.GT.0)
          IA = NINT(ZR(JCESV2-1+IAD))
          CALL CESEXI('S',JCESD2,JCESL2,IMA,1,1,4*(I-1)+2,IAD)
          CALL ASSERT(IAD.GT.0)
          IN = NINT(ZR(JCESV2-1+IAD))
C
C         RECUPERATION DES COORDONNES DU POINT D'INTERSECTION
          XYZ(3)=0.D0
          DO 121 J=1,NDIM
            CALL CESEXI('S',JCESD3,JCESL3,IMA,1,1,NDIM*(I-1)+J,IAD)
            CALL ASSERT(IAD.GT.0)
            XYZ(J)=ZR(JCESV3-1+IAD)
 121      CONTINUE

C         RECUPERATION DU NUMERO DU NOEUD OU EST STOCKE LE LAGS_C
          IF (IN.EQ.0) THEN
            CALL ASSERT(IA.NE.0)
C           NUMERO LOCAL DU NOEUD MILIEU ASSOCIÉE A CETTE ARETE
            IN=NOMIL(TYPMA,IA)
          ENDIF
          NUNO=ZI(JCONX1-1+ZI(JCONX2+IMA-1)+IN-1)

C         VALEUR DES LAMBDAS
          CALL ASSERT(ZL(JDEPL-1+NDIM*(NUNO-1)+1))
          LAMBDA(1)=ZR(JDEPV-1+NDIM*(NUNO-1)+1)  * COEF
          LAMBDA(2)=ZR(JDEPV-1+NDIM*(NUNO-1)+2)
          IF (NDIM.EQ.3) THEN
            LAMBDA(3)=ZR(JDEPV-1+NDIM*(NUNO-1)+3)
          ELSEIF (NDIM.EQ.2) THEN
            LAMBDA(3)=0.D0
          ENDIF

          IF (ABS(LAMBDA(1)).GT.R8PREM()) THEN

C           VERIFICATION SI ON A DEJA ENREGISTRE CE POINT
            IF (ZL(JCNSLR-1+6*(NUNO-1)+1)) THEN
C             POINT DEJA ENREGISTRE, VERIF CONCORDANCE DES VALEURS
              DIST=SQRT(  (ZR(JCNSVR-1+6*(NUNO-1)+1)-XYZ(1)) **2
     &                   +(ZR(JCNSVR-1+6*(NUNO-1)+2)-XYZ(2)) **2
     &                   +(ZR(JCNSVR-1+6*(NUNO-1)+3)-XYZ(3)) **2
     &                   +(ZR(JCNSVR-1+6*(NUNO-1)+4)-LAMBDA(1)) **2 )
              CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NUNO),NOMNO)
              IF (DIST.GT.R8PREM()) CALL U2MESK('A','ALGORITH11_56',1,NO
     &MNO)
            ELSE
C             ENREGISTREMENT DU CHAMP D'ARCHIVAGE DU CONTACT
              ZR(JCNSVR-1+6*(NUNO-1)+1)=XYZ(1)
              ZR(JCNSVR-1+6*(NUNO-1)+2)=XYZ(2)
              IF (NDIM.EQ.3) THEN
                ZR(JCNSVR-1+6*(NUNO-1)+3)=XYZ(3)
              ELSEIF (NDIM.EQ.2) THEN
                ZR(JCNSVR-1+6*(NUNO-1)+3)=0.D0
              ENDIF
              ZR(JCNSVR-1+6*(NUNO-1)+4)=LAMBDA(1)
              ZR(JCNSVR-1+6*(NUNO-1)+5)=LAMBDA(2)
              ZR(JCNSVR-1+6*(NUNO-1)+6)=LAMBDA(3)

              ZL(JCNSLR-1+6*(NUNO-1)+1)=.TRUE.
              ZL(JCNSLR-1+6*(NUNO-1)+2)=.TRUE.
              ZL(JCNSLR-1+6*(NUNO-1)+3)=.TRUE.
              ZL(JCNSLR-1+6*(NUNO-1)+4)=.TRUE.
              ZL(JCNSLR-1+6*(NUNO-1)+5)=.TRUE.
              ZL(JCNSLR-1+6*(NUNO-1)+6)=.TRUE.

C            IF (XYZ(1).GE.-1.D-10.AND.XYZ(2).GE.0.D0) THEN
C            IF (XYZ(2).GE.0.D0) THEN
C              CPTSAM=CPTSAM+1
C              VECSAM(5*(CPTSAM-1)+1)=NUNO
C              VECSAM(5*(CPTSAM-1)+2)=XYZ(1)
C              VECSAM(5*(CPTSAM-1)+3)=XYZ(2)
C              VECSAM(5*(CPTSAM-1)+4)=ATAN2(XYZ(2),XYZ(1))*180.D0/R8PI()
C              VECSAM(5*(CPTSAM-1)+5)=-1.D0 * LAMBDA(1)
C            ENDIF

            ENDIF
          ENDIF
 120    CONTINUE

 100  CONTINUE

      IF (CPTSAM.EQ.0) CALL DETRSD('CHAM_NO_S',CNSINR)

C      CALL IMPRSD('CHAMP',CNSINR,6,'CNSINR')

C C     TRI SUIVANT THETA CROISSANT
C       DO 900 PD=1,CPTSAM-1
C         PP=PD
C         DO 901 I=PP,CPTSAM
C          IF (VECSAM(5*(I-1)+4).LT.VECSAM(5*(PP-1)+4)) PP=I
C  901    CONTINUE
C         DO 902 K=1,5
C           TAMPON(K)=VECSAM(5*(PP-1)+K)
C           VECSAM(5*(PP-1)+K)=VECSAM(5*(PD-1)+K)
C           VECSAM(5*(PD-1)+K)=TAMPON(K)
C  902    CONTINUE
C  900  CONTINUE

C      WRITE(6,*)'VECSAM '
C      WRITE(6,697)
C      DO 910 I=1,CPTSAM
C        Q(1)=VECSAM(5*(I-1)+1)
C        Q(2)=VECSAM(5*(I-1)+2)
C        Q(3)=VECSAM(5*(I-1)+3)
C        Q(4)=VECSAM(5*(I-1)+4)
C        Q(5)=VECSAM(5*(I-1)+5)
C        WRITE(6,699)(Q(K),K=1,5)
C 910  CONTINUE

 697  FORMAT(7X,'N',14X,'X',14X,'Y',14X,'THETA',14X,'LAGS_C')
 699   FORMAT(1X,5(D13.7,4X))

      CALL JEDEMA()
      END
