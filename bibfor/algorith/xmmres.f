      SUBROUTINE XMMRES(DEPDEL,MODELE,VEASSE,CNSINR)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 29/01/2013   AUTEUR FERTE G.FERTE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C
      IMPLICIT     NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXATR
      CHARACTER*19 CNSINR
      CHARACTER*19 VEASSE(*)
      CHARACTER*19 DEPDEL
      CHARACTER*8  MODELE
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE XFEM - POST-TRAITEMENT)
C
C CREER LE CHAM_NO_S POUR L ARCHIVAGE DU CONTACT PAR NMARCH
C
C ----------------------------------------------------------------------
C
C
C IN  DEPDEL : DEPLACEMENT AU PAS DE TEMPS COURANT
C IN  MODELE : NOM DU MODELE
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C OUT CNSINR : CHAM_NO_S POUR L'ARCHIVAGE DU CONTACT
C
C
C
C
      INTEGER      IFM,NIV
      INTEGER      JCESV1,JCESV2,JCESV3,JCESV4,JCESV5
      INTEGER      JCESL1,JCESL2,JCESL3,JCESL4,JCESL5,JTMDIM,NDIME
      INTEGER      JCESD1,JCESD2,JCESD3,JCESD4,JCESD5
      INTEGER      JCONT,JCONL,JFROT,JFROL,JDEPL,JLAGV
      INTEGER      JCESK1,NBMA,IRET,IMA,IAD,I,IA,IN,IADB,K
      INTEGER      NINTER,JMAI,ITYPMA,NUNO,JCONX1,JCONX2,J,NDIM
      INTEGER      JDEPV,NOMIL,JCNSVR,JCNSLR,CFMMVD
      INTEGER      NSOM,NOSOM(2),AR(12,3),NBAR,ZRESU
      INTEGER      ZXAIN,XXMMVD
      INTEGER      JXC
      INTEGER      IBID,NBNO
      CHARACTER*8  NOMA,K8BID,TYPMA
      CHARACTER*19 DEPDES,DEPCN,FCONT,FCONTS
      CHARACTER*19 FCTCN,FFROT,FFROTS,FFROCN,LAGCN
      CHARACTER*19 FACLOS,AINTES,PINTES,BASECS
      CHARACTER*19 FACLON,AINTER,PINTER,BASECO
      CHARACTER*19 LST,LSTNO
      CHARACTER*24 DEJCAL
      INTEGER      JDEJCA

      REAL*8       XYZ(3),JEU,FF(2),MULT,CONT
      REAL*8       DDOT,SAUT(3),GLIT(3),P(3,3),N(3),GLI,LAGFRO(3)
      REAL*8       LAGSF,RR,RNXYZ(3),RN,ALPHA,LONGAR,LEVELS
      REAL*8       TAU1(3),TAU2(3)
      REAL*8       RNX,RNY,RNZ,RTXYZ(3),RTGX,RTGY,RTGZ,RTAX,RTAY,RTAZ

C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- INITIALISATIONS
C
      FACLOS = '&&XMMRES.FACLOS'
      AINTES = '&&XMMRES.AINTES'
      PINTES = '&&XMMRES.PINTES'
      BASECS = '&&XMMRES.BASECS'
      LSTNO  = '&&XMMRES.LSTNO'
      CONT   = 0.D0
      CALL DISMOI('F','NOM_MAILLA',MODELE,'MODELE',IBID,NOMA,IRET)
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNO,K8BID,IBID)
C
C --- ACCES SD CONTACT
C
      ZRESU  = CFMMVD('ZRESU')
      ZXAIN  = XXMMVD('ZXAIN')
      CALL NMCHEX(VEASSE,'VEASSE','CNELTC',FCONT)
      CALL NMCHEX(VEASSE,'VEASSE','CNELTF',FFROT)
C
C --- ACCES SD XFEM
C
      FACLON = MODELE(1:8)//'.TOPOFAC.LO'
      AINTER = MODELE(1:8)//'.TOPOFAC.AI'
      PINTER = MODELE(1:8)//'.TOPOFAC.OE'
      BASECO = MODELE(1:8)//'.TOPOFAC.BA'
      LST    = MODELE(1:8)//'.LTNO'
      DEPDES = '&&XMMRES.DEPDES'
      DEPCN  = '&&XMMRES.DEPCN'
      LAGCN  = '&&XMMRES.LAGCN'
      FCONTS = '&&XMMRES.CONT_S'
      FCTCN  = '&&MMMRES.FCTCN'
      FFROTS = '&&MMMRES.FROT_S'
      FFROCN = '&&MMMRES.FROTCN'
C
C --- TRANSFORMATION DES CHAM_ELEM EN CHAM_ELEM_S
C
      CALL CELCES(FACLON,'V',FACLOS)
      CALL CELCES(AINTER,'V',AINTES)
      CALL CELCES(PINTER,'V',PINTES)
      CALL CELCES(BASECO,'V',BASECS)
      CALL CELCES(LST,'V',LSTNO)
C
C --- ACCES AUX CHAM_ELEM_S
C
      CALL JEVEUO(FACLOS//'.CESD','L',JCESD1)
      CALL JEVEUO(AINTES//'.CESD','L',JCESD2)
      CALL JEVEUO(PINTES//'.CESD','L',JCESD3)
      CALL JEVEUO(BASECS//'.CESD','L',JCESD4)
      CALL JEVEUO( LSTNO//'.CESD','L',JCESD5)
C
      CALL JEVEUO(FACLOS//'.CESV','L',JCESV1)
      CALL JEVEUO(AINTES//'.CESV','L',JCESV2)
      CALL JEVEUO(PINTES//'.CESV','L',JCESV3)
      CALL JEVEUO(BASECS//'.CESV','L',JCESV4)
      CALL JEVEUO( LSTNO//'.CESV','L',JCESV5)
C
      CALL JEVEUO(FACLOS//'.CESL','L',JCESL1)
      CALL JEVEUO(AINTES//'.CESL','L',JCESL2)
      CALL JEVEUO(PINTES//'.CESL','L',JCESL3)
      CALL JEVEUO(BASECS//'.CESL','L',JCESL4)
      CALL JEVEUO( LSTNO//'.CESL','L',JCESL5)

      CALL ASSERT(ZI(JCESD1).EQ.ZI(JCESD2))
      CALL ASSERT(ZI(JCESD1).EQ.ZI(JCESD3))
C
C --- DONNEES RELATIVES AU MAILLAGE
C
      CALL JEVEUO(FACLOS//'.CESK','L',JCESK1)
      NOMA   = ZK8(JCESK1-1+1)
      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8BID,IRET)
      CALL JEVEUO(NOMA//'.TYPMAIL','L',JMAI)
      CALL JEVEUO(NOMA//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA//'.CONNEX','LONCUM'),'L',JCONX2)
      CALL DISMOI('F','DIM_GEOM',NOMA,'MAILLAGE',NDIM,K8BID,IRET)
      CALL JEVEUO('&CATA.TM.TMDIM','L',JTMDIM)
C
C --- SD TEMPORAIRE POUR VERIF NOEUDS DEJA CALCULES
C
      DEJCAL = '&&XMMRES.DEJCAL'
      CALL WKVECT(DEJCAL,'V V I',NBNO,JDEJCA)
C
C --- TRANSFORMATION ET REDUCTION DES CHAM_NOEU
C
      CALL XMMRED(NDIM  ,DEPDEL,DEPDES,LAGCN ,DEPCN,
     &            FCONT ,FCONTS,FCTCN,
     &            FFROT ,FFROTS,FFROCN)
C
C --- ACCES CHAM_NO
C
      CALL JEVEUO(LAGCN//'.CNSV','L',JLAGV)
      CALL JEVEUO(DEPCN//'.CNSV','L',JDEPV)
      CALL JEVEUO(DEPCN//'.CNSL','L',JDEPL)
      CALL JEVEUO(FCTCN//'.CNSV','L',JCONT)
      CALL JEVEUO(FCTCN//'.CNSL','L',JCONL)
      CALL JEVEUO(FFROCN//'.CNSV','L',JFROT)
      CALL JEVEUO(FFROCN//'.CNSL','L',JFROL)
C
C --- ACCES AU CHAM_NO_S VALE_CONT
C
      CALL JEVEUO(CNSINR//'.CNSV','E',JCNSVR)
      CALL JEVEUO(CNSINR//'.CNSL','E',JCNSLR)
C
C --- BOUCLE SUR LES MAILLES
C
      DO 100 IMA=1,NBMA

        ITYPMA=ZI(JMAI-1+IMA)
        CALL JENUNO(JEXNUM('&CATA.TM.NOMTM',ITYPMA),TYPMA)
C       NDIME : DIMENSION TOPOLOGIQUE DE LA MAILLE
        NDIME= ZI(JTMDIM-1+ITYPMA)

C       ON ZAPPE LES MAILLES DE BORD (MAILLES NON PRINCIPALES)
        IF (NDIM.NE.NDIME) GOTO 100

        CALL CONARE(TYPMA,AR,NBAR)

        CALL CESEXI('C',JCESD1,JCESL1,IMA,1,1,1,IAD)
        IF (IAD.LE.0) GOTO 100

        CALL JEVEUO(MODELE//'.XFEM_CONT'  ,'L',JXC)
        NINTER = ZI(JCESV1-1+IAD)

C       BOUCLE SUR LES POINTS D'INTERSECTION
        DO 120 I=1,NINTER
          CALL CESEXI('S',JCESD2,JCESL2,IMA,1,1,ZXAIN*(I-1)+1,IAD)
          CALL ASSERT(IAD.GT.0)
          IA = NINT(ZR(JCESV2-1+IAD))
          CALL ASSERT(IA.LE.NBAR)
          CALL CESEXI('S',JCESD2,JCESL2,IMA,1,1,ZXAIN*(I-1)+2,IAD)
          CALL ASSERT(IAD.GT.0)
          IN = NINT(ZR(JCESV2-1+IAD))
          CALL CESEXI('S',JCESD2,JCESL2,IMA,1,1,ZXAIN*(I-1)+3,IAD)
          CALL ASSERT(IAD.GT.0)
          LONGAR =ZR(JCESV2-1+IAD)
          CALL CESEXI('S',JCESD2,JCESL2,IMA,1,1,ZXAIN*(I-1)+4,IAD)
          CALL ASSERT(IAD.GT.0)
          ALPHA = ZR(JCESV2-1+IAD)

C         ADRESSE DU DEBUT MEMOIRE DE LA BASE COVARIANTE
          CALL CESEXI('S',JCESD4,JCESL4,IMA,1,1,NDIM*NDIM*(I-1)+1,IADB)
          CALL ASSERT(IADB.GT.0)
C
C         RECUPERATION DES COORDONNES DU POINT D'INTERSECTION
          XYZ(3)=0.D0
          DO 121 J=1,NDIM
            CALL CESEXI('S',JCESD3,JCESL3,IMA,1,1,NDIM*(I-1)+J,IAD)
            CALL ASSERT(IAD.GT.0)
            XYZ(J)=ZR(JCESV3-1+IAD)
 121      CONTINUE

C         RECUP DES NUMEROS GLOBAUX DES NOEUDS DE L'ARETE/NOEUD SOMMET
          IF (IN.GT.0) THEN
            NSOM = 1
            NOSOM(1) = ZI(JCONX1-1+ZI(JCONX2+IMA-1)+IN-1)
            FF(1)=1.D0
            MULT=0.5D0
          ELSEIF (IA.GT.0) THEN
            NSOM = 2
            NOSOM(1)=ZI(JCONX1-1+ZI(JCONX2+IMA-1)+AR(IA,1)-1)
            NOSOM(2)=ZI(JCONX1-1+ZI(JCONX2+IMA-1)+AR(IA,2)-1)
            FF(1) = 1.D0 - ALPHA/LONGAR
            FF(2) = ALPHA/LONGAR
            MULT=1.0D0
          ELSE
            GOTO 120
          ENDIF

C         RECUPERATION DU NUMERO DU NOEUD OU EST STOCKE LE LAGS_C
          IF (ZI(JXC).EQ.1 .OR. ZI(JXC).EQ.3) THEN
C           CAS LAGRANGES AUX NOEUDS
C           VALE_CONT SUR LE PREMIER NOEUD DE L'ARETE
            IF (IA.NE.0) THEN
              NUNO=ZI(JCONX1-1+ZI(JCONX2+IMA-1)+AR(IA,1)-1)
            ELSE IF (IN.NE.0) THEN
              NUNO=ZI(JCONX1-1+ZI(JCONX2+IMA-1)+IN-1)
            ENDIF
          ENDIF
C         VERIFICATION SI ON A DEJA ENREGISTRE CE POINT
          IF (ZI(JDEJCA+NUNO-1).EQ.1) GOTO 120
C         RACINE DE R AU POINT D'INTERSECTION
          LEVELS = 0.D0
          DO 125 K=1,NSOM
            CALL CESEXI('C',JCESD5,JCESL5,IMA,K,1,1,IAD)
C         C'EST FAUX MAIS C'ETAIT DEJA COMME CA
C         IL FAUT RECUPERER LES FF DE FORMES
            LEVELS = LEVELS + ZR(JCESV5-1+IAD)
 125      CONTINUE
          RR =SQRT(ABS(LEVELS))

C         RECUP NORMALE, VECTEURS TANGENTS AU POINT D'INTERSECTION
          N(3)=0.D0
          TAU1(3)=0.D0

          DO 130 J=1,NDIM
            N(J)   =ZR(JCESV4-1+IADB-1+J)
            TAU1(J)=ZR(JCESV4-1+IADB-1+NDIM+J)
            IF (NDIM.EQ.3) TAU2(J)=ZR(JCESV4-1+IADB-1+2*NDIM+J)
 130      CONTINUE

C         INDICATEUR DE CONTACT
C         IMPOSSIBLE A REMPLIR SI L'INTEGRATION N'EST PAS AUX NOEUDS

C         JEU
          CALL VECINI(NDIM,0.D0,SAUT)
          DO 140 J=1,NDIM
            DO 141 K=1,NSOM
C             DDL HEAVISIDE
              IF (ZL(JDEPL-1+2*NDIM*(NOSOM(K)-1)+J)) THEN
                SAUT(J) = SAUT(J) - 2.D0 * FF(K) *
     &                    ZR(JDEPV-1+2*NDIM*(NOSOM(K)-1)+J)
              ENDIF
C             DDL ASYMPTOTIQUE
              IF (ZL(JDEPL-1+2*NDIM*(NOSOM(K)-1)+NDIM+J)) THEN
                SAUT(J) = SAUT(J) - 2.D0 * FF(K) * RR *
     &                    ZR(JDEPV-1+2*NDIM*(NOSOM(K)-1)+NDIM+J)
              ENDIF
 141        CONTINUE
 140      CONTINUE
          JEU = DDOT(NDIM,N,1,SAUT,1)

C         RNX, RNY, RNZ SONT LES 3 COMPOSANTES DE RNXYZ
          CALL VECINI(3,0.D0,RNXYZ)
          DO 144 J=1,NDIM
            DO 145 K = 1,NSOM
              RNXYZ(J) = RNXYZ(J) + FF(K) * MULT *
     &                   ZR(JCONT-1+3*NDIM*(NOSOM(K)-1)+J)
C             DDL HEAVISIDE
              IF (ZL(JCONL-1+3*NDIM*(NOSOM(K)-1)+NDIM+1)) THEN
                RNXYZ(J) = RNXYZ(J) - FF(K) * MULT *
     &                     ZR(JCONT-1+3*NDIM*(NOSOM(K)-1)+NDIM+J)
              ENDIF
C             DDL ASYMPTOTIQUE
              IF (ZL(JCONL-1+3*NDIM*(NOSOM(K)-1)+2*NDIM+1)) THEN
                RNXYZ(J) = RNXYZ(J) - FF(K) * RR * MULT *
     &                     ZR(JCONT-1+3*NDIM*(NOSOM(K)-1)+2*NDIM+J)
              ENDIF
 145        CONTINUE
 144      CONTINUE
          CALL NORMEV(RNXYZ,RN)
          RNX = RNXYZ(1)
          RNY = RNXYZ(2)
          RNZ = RNXYZ(3)

C         GLIX, GLIY, GLI
          CALL VECINI(3,0.D0,GLIT)
          CALL XMAFR1(NDIM,N,P)
          DO 150 J=1,NDIM
            DO 151  K=1,NDIM
              GLIT(J)=GLIT(J)+P(J,K)*SAUT(K)
 151        CONTINUE
 150      CONTINUE
          CALL NORMEV(GLIT,GLI)

C         RTAX, RTAY, RTAZ, RTGX, RTGY, RTGZ
          CALL VECINI(3,0.D0,RTXYZ)
          CALL VECINI(3,0.D0,LAGFRO)

          DO 164 J=1,NDIM
            DO 163 K=1,NSOM
              LAGFRO(J) = LAGFRO(J) + FF(K) *
     &                 ZR(JLAGV-1+NDIM*(NOSOM(K)-1)+2) * TAU1(J)
              IF (NDIM.EQ.3) LAGFRO(J) = LAGFRO(J) + FF(K) *
     &                 ZR(JLAGV-1+NDIM*(NOSOM(K)-1)+3) * TAU2(J)
 163        CONTINUE
 164      CONTINUE

          DO 161 J=1,NDIM
            DO 162 K = 1,NSOM
              RTXYZ(J) = RTXYZ(J) + FF(K) * MULT *
     &                   ZR(JFROT-1+3*NDIM*(NOSOM(K)-1)+J)
C             DDL HEAVISIDE
              IF (ZL(JFROL-1+3*NDIM*(NOSOM(K)-1)+NDIM+1)) THEN
                RTXYZ(J) = RTXYZ(J) - FF(K) * MULT *
     &                     ZR(JFROT-1+3*NDIM*(NOSOM(K)-1)+NDIM+J)
              ENDIF
C             DDL ASYMPTOTIQUE
              IF (ZL(JFROL-1+3*NDIM*(NOSOM(K)-1)+2*NDIM+1)) THEN
                RTXYZ(J) = RTXYZ(J) - FF(K) * RR * MULT *
     &                     ZR(JFROT-1+3*NDIM*(NOSOM(K)-1)+2*NDIM+J)
              ENDIF
 162        CONTINUE
 161      CONTINUE

C         NORME DU SEMI-MULTIPLICATEUR DE LAGRANGE DU FROTTEMENT
          CALL NORMEV(LAGFRO,LAGSF)

          IF (LAGSF.GE.0.999D0) THEN
C           LE POINT EST GLISSANT
            RTGX = RTXYZ(1)
            RTGY = RTXYZ(2)
            RTGZ = RTXYZ(3)
            RTAX = 0.D0
            RTAY = 0.D0
            RTAZ = 0.D0
          ELSE
C           LE POINT EST ADHERENT
            RTAX = RTXYZ(1)
            RTAY = RTXYZ(2)
            RTAZ = RTXYZ(3)
            RTGX = 0.D0
            RTGY = 0.D0
            RTGZ = 0.D0
          END IF

C         LAGRANGES AUX NOEUDS, VALE_CONT SUR LE PREMIER NOEUD DE L'AR
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+1)=CONT
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+2)=JEU
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+3)=RN
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+4)=RNX
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+5)=RNY
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+6)=RNZ
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+9)=GLI
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+10)=RTAX
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+11)=RTAY
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+12)=RTAZ
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+13)=RTGX
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+14)=RTGY
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+15)=RTGZ
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+16)= RNX + RTAX + RTGX
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+17)= RNY + RTAY + RTGY
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+18)= RNZ + RTAZ + RTGZ
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+19)= SQRT((RNX+RTAX+RTGX)**2 +
     &                                        (RNY+RTAY+RTGY)**2 +
     &                                        (RNZ+RTAZ+RTGZ)**2)
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+25)=XYZ(1)
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+26)=XYZ(2)
          ZR(JCNSVR-1+ZRESU*(NUNO-1)+27)=XYZ(3)

          ZL(JCNSLR-1+ZRESU*(NUNO-1)+1)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+2)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+3)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+4)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+5)=.TRUE.
          IF (NDIM.EQ.3) ZL(JCNSLR-1+ZRESU*(NUNO-1)+6)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+9)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+10)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+11)=.TRUE.
          IF (NDIM.EQ.3) ZL(JCNSLR-1+ZRESU*(NUNO-1)+12)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+13)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+14)=.TRUE.
          IF (NDIM.EQ.3) ZL(JCNSLR-1+ZRESU*(NUNO-1)+15)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+16)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+17)=.TRUE.
          IF (NDIM.EQ.3) ZL(JCNSLR-1+ZRESU*(NUNO-1)+18)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+19)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+25)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+26)=.TRUE.
          ZL(JCNSLR-1+ZRESU*(NUNO-1)+27)=.TRUE.
          ZI(JDEJCA+NUNO-1) = 1

 120    CONTINUE

 100  CONTINUE

      CALL JEDETR(FCONT)
      CALL DETRSD('CHAMP',FCONTS)
      CALL DETRSD('CHAMP',FCTCN)
      CALL JEDETR(FFROT)
      CALL JEDETR(DEJCAL)
      CALL DETRSD('CHAMP',FFROTS)
      CALL DETRSD('CHAMP',FFROCN)
      CALL DETRSD('CHAMP',DEPDES)
      CALL DETRSD('CHAMP',DEPCN)
      CALL DETRSD('CHAMP',LAGCN)
C
      CALL JEDEMA()
      END
