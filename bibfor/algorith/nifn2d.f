       SUBROUTINE NIFN2D(NNO1  , NNO2  , NPG   , POIDSG, VFF1  , VFF2  ,
     &                   DFDE1 , DFDK1 , DFDI  , GEOM  , AXI   , SIG   ,
     &                   DEPLM , DDEPL , GONFLM ,DGONFL ,
     &                   FINTU , FINTA )
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 30/01/2002   AUTEUR VABHHTS J.TESELET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
       IMPLICIT NONE
       LOGICAL       AXI
       INTEGER       NNO1,NNO2, NPG
       REAL*8        DFDE1(*),DFDK1(*)
       REAL*8        POIDSG(NPG), VFF1(NNO1,NPG),VFF2(NNO2,NPG)
       REAL*8        GEOM(2,NNO1)
       REAL*8        SIG(5,NPG),DFDI(NNO1,2)
       REAL*8        FINTU(2,9), FINTA(2,4)
       REAL*8 DEPLM(2,NNO1),DDEPL(2,NNO1),GONFLM(2,NNO2),DGONFL(2,NNO2)

C......................................................................
C
C     BUT:  CALCUL  DE L'OPTION FORC_NODA EN QUASI INCOMPRESSIBLE
C......................................................................
C IN  NNO1    : NOMBRE DE NOEUDS DE L'ELEMENT LIES AUX DEPLACEMENTS
C IN  NNO2    : NOMBRE DE NOEUDS DE L'ELEMENT LIES A LA PRESSION
C IN  NPG    : NOMBRE DE POINTS DE GAUSS
C IN  POIDSG  : POIDS DES POINTS DE GAUSS
C IN  VFF1    : VALEUR  DES FONCTIONS DE FORME LIES AUX DEPLACEMENTS
C IN  VFF2    : VALEUR  DES FONCTIONS DE FORME LIES A LA PRESSION
C IN  DFDE1   : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C IN  DFDK1   : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C IN  GEOM    : COORDONEES DES NOEUDS
C IN  TYPMOD  : TYPE DE MODELISATION
C IN  OPTION  : OPTION DE CALCUL
C IN  IMATE   : MATERIAU CODE
C IN  COMPOR  : COMPORTEMENT
C IN  LGPG    : "LONGUEUR" DES VARIABLES INTERNES POUR 1 POINT DE GAUSS
C               CETTE LONGUEUR EST UN MAJORANT DU NBRE REEL DE VAR. INT.
C IN  CRIT    : CRITERES DE CONVERGENCE LOCAUX
C IN  INSTAM  : INSTANT PRECEDENT
C IN  INSTAP  : INSTANT DE CALCUL
C IN  TM      : TEMPERATURE AUX NOEUDS A L'INSTANT PRECEDENT
C IN  TP      : TEMPERATURE AUX NOEUDS A L'INSTANT DE CALCUL
C IN  TREF    : TEMPERATURE DE REFERENCE
C IN  DEPLMT  : DEPLACEMENTS ET PRESSION A L'INSTANT PRECEDENT
C IN  DEPLPT  : INCREMENT DE DEPLACEMENTS ET DE PRESSION
C IN  SIGM    : CONTRAINTES A L'INSTANT PRECEDENT
C IN  VIM     : VARIABLES INTERNES A L'INSTANT PRECEDENT
C OUT DFDI    : DERIVEE DES FONCTIONS DE FORME  AU DERNIER PT DE GAUSS
C OUT DEF     : PRODUIT DER. FCT. FORME PAR F   AU DERNIER PT DE GAUSS
C OUT SIGP    : CONTRAINTES DE CAUCHY (RAPH_MECA ET FULL_MECA)
C OUT VIP     : VARIABLES INTERNES    (RAPH_MECA ET FULL_MECA)
C OUT KUU   : MATRICE DE RIGIDITE PROFIL (RIGI_MECA_TANG ET FULL_MECA)
C OUT VECTU   : FORCES NODALES (RAPH_MECA ET FULL_MECA)
C......................................................................

      LOGICAL      GRAND
      INTEGER      KPG,N,I
      REAL*8       DEF(4,9,2)
      REAL*8       TMP, RAC2, RBID
      REAL*8       F(3,3),R,POIDS,EPSM(6),DEPS(6), SIGMA(6)
      REAL*8       GM,DG,DIVUM,DDIVU
      REAL*8       R8DOT
C -------------------------------------------------------------------


C - PRE REQUIS
      IF (NNO1 .GT. 9) CALL UTMESS('F','NIFN2D','DVP : TROP DE NOEUDS')

C - INITIALISATION
      CALL R8INIR(18, 0.D0, FINTU,1)
      CALL R8INIR( 8, 0.D0, FINTA,1)
      RAC2  = SQRT(2.D0)
      GRAND = .FALSE.

C - CALCUL POUR CHAQUE POINT DE GAUSS

      DO 800 KPG = 1,NPG
C - CALCUL DU GONFLEMENT
        GM = 0.D0
        DG = 0.D0
        DO 1 N = 1, NNO2
          GM = GM + VFF2(N,KPG)*GONFLM(2,N)
          DG = DG + VFF2(N,KPG)*DGONFL(2,N)
 1      CONTINUE


C      CALCUL DES ELEMENTS GEOMETRIQUES
        CALL R8INIR(6, 0.D0, EPSM,1)
        CALL R8INIR(6, 0.D0, DEPS,1)
        CALL NMGEOM(2,NNO1,AXI,GRAND,GEOM,KPG,POIDSG(KPG),
     &              VFF1(1,KPG),DFDE1,RBID,DFDK1,DEPLM,POIDS,DFDI,
     &              F,EPSM,R)
        CALL NMGEOM(2,NNO1,AXI,GRAND,GEOM,KPG,POIDSG(KPG),
     &              VFF1(1,KPG),DFDE1,RBID,DFDK1,DDEPL,POIDS,DFDI,
     &              F,DEPS,R)
        DIVUM = EPSM(1) + EPSM(2) + EPSM(3)
        DDIVU = DEPS(1) + DEPS(2) + DEPS(3)

C      CALCUL DE LA MATRICE B

        DO 35 N=1,NNO1
          DO 30 I=1,2
            DEF(1,N,I) =  F(I,1)*DFDI(N,1)
            DEF(2,N,I) =  F(I,2)*DFDI(N,2)
            DEF(3,N,I) =  0.D0
            DEF(4,N,I) = (F(I,1)*DFDI(N,2) + F(I,2)*DFDI(N,1))/RAC2
 30       CONTINUE
 35     CONTINUE

C      TERME DE CORRECTION (3,3) AXI QUI PORTE EN FAIT SUR LE DDL 1
        IF (AXI) THEN
          DO 50 N=1,NNO1
            DEF(3,N,1) = F(3,3)*VFF1(N,KPG)/R
 50       CONTINUE
        END IF

C      CALCUL DES CONTRAINTES MECANIQUES A L'EQUILIBRE
        SIGMA(1) = SIG(1,KPG)
        SIGMA(2) = SIG(2,KPG)
        SIGMA(3) = SIG(3,KPG)
        SIGMA(4) = SIG(4,KPG)*RAC2
        SIGMA(5) = 0.D0
        SIGMA(6) = 0.D0

C        CALCUL DE FINT_U
        DO 3 N=1,NNO1
          DO 2 I=1,2
            TMP = R8DOT(4, SIGMA,1, DEF(1,N,I),1)
            FINTU(I,N) = FINTU(I,N) + TMP*POIDS
 2        CONTINUE
 3      CONTINUE

C        CALCUL DE FINT_P ET FINT_G
        DO 4 N = 1, NNO2
          TMP = (DIVUM + DDIVU - GM - DG)*VFF2(N, KPG)
          FINTA(1,N) = FINTA(1,N) + TMP*POIDS

          TMP = SIG(5,KPG)*VFF2(N,KPG)
          FINTA(2,N) = FINTA(2,N) + TMP*POIDS
 4      CONTINUE

 800  CONTINUE
      END
