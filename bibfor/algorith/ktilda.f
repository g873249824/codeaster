      SUBROUTINE KTILDA (MODELE, NUMEDD, MATE  , CARELE, COMPOR, CARCRI,
     &                   COEVIT, COEACC,
     &                   LAMORT, MEMASS, MEDIRI, COMMOI, COMPLU, COMREF,
     &                   DEPMOI, DEPDEL, DDEPLA, DEPKM1, VITKM1, ACCKM1,
     &                   DEPPLU, VITPLU, ACCPLU, ROMKM1, ROMK  , STADYN,
     &                   DEPENT, VITENT,
     &                   SIGMOI, SIGPLU, VARMOI, VARPLU,
     &                   LISCHA, INSTAM, INSTAP, OPTION, PREMKT,
     &                   REASMA, POINTR,
     &                   POINTM, POINTA, KTILD , VERESI, VEDIRI,
     &                   MAPREC, SOLVEU, INCHA2, ITERAT)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 25/09/2002   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C INTRODUCTION DES COEF.: COEVIT ET COEACC DEPENDANT DE L'ALGO.CHOISI
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*24 MODELE, NUMEDD, CARELE, COMPOR, CARCRI,
     &             MEMASS, MEDIRI, DEPMOI, DEPDEL,
     &             DDEPLA, DEPKM1, VITKM1, ACCKM1, DEPPLU, VITPLU,
     &             ACCPLU, ROMKM1, ROMK  , STADYN, SIGMOI, SIGPLU,
     &             VARMOI, VARPLU, VERESI,
     &             VEDIRI, KTILD, DEPENT, VITENT, COMMOI, COMPLU, COMREF

      CHARACTER*(*) MATE
      CHARACTER*19 SOLVEU, INCHA2, MAPREC, LISCHA
      CHARACTER*16 OPTION
      LOGICAL LAMORT, REASMA
      LOGICAL PREMKT
      REAL*8  CMASSE, CRIGID, INSTAM, INSTAP
      INTEGER POINTM, POINTA, POINTK, POINTR
C ----------------------------------------------------------------------
C     D Y N A M I Q U E  N O N  L I N E A I R E
C     CALCUL ET TRIANGULARISATION DE LA MATRICE D'ITERATION
C
C     LA MATRICE D'AMORTISSEMENT EST UNE COMBINAISON LINEAIRE DES
C     MATRICES DE MASSE ET DE RIGIDITE (RAYLEIGH DAMPING)
C
C
C
C OUT POUR LE PREMIER PASSAGE SEULEMENT:
C             =========================
C     POINTM  : POINTEUR DE LA MATRICE DE MASSE
C     POINTA  : POINTEUR DE LA MATRICE D'AMORTISSEMENT
C     POINTK  : POINTEUR DE LA MATRICE D'ITERATION
C     VERESI  : VECTEUR ELEMENTAIRE DU RESIDU CALCULE
C     VEDIRI  : VECTEUR ELEMENTAIRE DU CHARGEMENT DIRICHLET
C
C ----------------------------------------------------------------------
C
C
C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------
C
      CHARACTER*24 MERIGI, RIGID, MASSE, AMORT, CHTIMM, CHTIMP
      CHARACTER*24 MEAMOR, VARDEP, LAGDEP, K24BID
      CHARACTER*8  NOMDDL, K8BID
      CHARACTER*4  TYPE(3), TYPMAT
      REAL*8       UN, DEUX, QUATRE, PAS, COEF1(2), COEF2(3),
     &             EPSABS
      INTEGER      NPASSE, NBMAT, NDIGIT, IERR, IBID
      COMPLEX*16   CBID
      LOGICAL      TABRET(0:10)
      CHARACTER*24 VALMOI(8), VALPLU(8), POUGD(8), LIMAT(3)


      DATA MERIGI,RIGID,MASSE,AMORT / 2*' ','&&MMASSE',
     &                                      '&&MAMORT' /
      DATA MEAMOR  /'&&AMORT_KTILDA'/
      DATA NOMDDL  /'        '/
      DATA K24BID  /' '/
C
      CALL JEMARQ()
      UN = 1.D0
CC    COEF1(1) = CRIGID
CC    COEF1(2) = CMASSE
      COEF2(1) = UN
      COEF2(2) = COEACC
      COEF2(3) = COEVIT
      TYPE(1)  = 'R'
      TYPE(2)  = 'R'
      TYPE(3)  = 'R'
      TYPMAT   = 'R'
      LIMAT(1) = ' '
      LIMAT(2) = ' '
      LIMAT(3) = ' '


C PREPARATION DE L'INTERFACE AVEC MERIMO ET APPEL

C    VARIABLES NON LOCALES
      VARDEP = ' '
      LAGDEP = ' '

C    ENCAPSULATION DES PARAMETRES
      CALL AGGLOM (DEPMOI,SIGMOI,VARMOI,COMMOI,K24BID,K24BID,
     &             K24BID,K24BID,4,VALMOI)
      CALL AGGLOM (DEPPLU,SIGPLU,VARPLU,COMPLU,VARDEP,LAGDEP,
     &             K24BID,K24BID,6,VALPLU)
      CALL AGGLOM (DEPKM1,VITKM1,ACCKM1,VITPLU,ACCPLU,ROMKM1,ROMK,
     &             DDEPLA,8,POUGD)

      CALL MERIMO (MODELE, CARELE, MATE,COMREF,COMPOR, LISCHA, CARCRI,
     &             DEPDEL,POUGD,STADYN,DEPENT,VITENT,VALMOI,VALPLU,
     &             OPTION,MERIGI,VERESI,VEDIRI,ITERAT,TABRET)

      IF (.NOT.REASMA) GOTO 10
      CALL ASASMA (MERIGI,MEDIRI,NUMEDD,RIGID,SOLVEU,INCHA2)
      CALL MTDSCR (RIGID)
      CALL JEVEUT(RIGID(1:19)//'.&INT','E',POINTR)
C*** CALCUL DES MATRICES ELEMENTAIRES D AMORTISSEMENT
C
      IF (LAMORT) THEN
        CALL JEVEUO(LISCHA // '.INFC','L',JINFC)
        NBCHAR = ZI(JINFC)
        CALL JEVEUO(LISCHA // '.LCHA','L',IACHAR)
        CALL WKVECT('&&KTILDA.LISTE_CHARGE','V V K8',NBCHAR,IACHA2)
        DO 1 ,I=1,NBCHAR
          ZK8(IACHA2-1+I)=ZK24(IACHAR-1+I)(1:8)
 1      CONTINUE
        CALL MEAMME ('AMOR_MECA', MODELE, NBCHAR, ZK8(IACHA2), MATE,
     &               CARELE, .TRUE. , INSTAM, MERIGI, MEMASS, MEAMOR)
        CALL JEDETR('&&KTILDA.LISTE_CHARGE')
        CALL ASMATR (1,MEAMOR,' ',NUMEDD,SOLVEU,
     +                 INCHA2,'ZERO','V',1,AMORT)
        CALL MTDSCR (AMORT)
        CALL JEVEUT(AMORT(1:19)//'.&INT','E',POINTA)
      ENDIF
   10 CONTINUE
C
C*** AU PREMIER PASSAGE PAR KTILDA, INITIALISATION DES MATRICES KTILD
C*** ET AMORT
      IF ( PREMKT ) THEN
        PREMKT = .FALSE.
        CALL ASMATR (1,MEMASS,' ',NUMEDD,SOLVEU,
     +                 INCHA2,'ZERO','V',1,MASSE)
        CALL MTDSCR (MASSE)
        CALL JEVEUT(MASSE(1:19)//'.&INT','E',POINTM)
        CALL MTDEFS (KTILD,RIGID,'V',TYPMAT)
        CALL MTDSCR (KTILD)
        CALL JEVEUO(KTILD(1:19)//'.&INT','E',POINTK)
C
        IF (.NOT.LAMORT) POINTA = 0
      ELSE
        CALL MTDSCR (KTILD)
        CALL JEVEUO(KTILD(1:19)//'.&INT','E',POINTK)
      ENDIF
C
      LIMAT(1) = RIGID
      LIMAT(2) = MASSE
      LIMAT(3) = AMORT
C
C*** CALCUL DE LA MATRICE KTILD
      IF ( LAMORT ) THEN
         NBMAT = 3
      ELSE
         NBMAT = 2
      ENDIF
      CALL MTCMBL (NBMAT,TYPE,COEF2,TYPE,LIMAT,TYPMAT,KTILD,NOMDDL,
     +             ' ',' ',.TRUE.)
      CALL PRERES (SOLVEU,'V',IERR,MAPREC,KTILD)
 9999 CONTINUE
      CALL JEDEMA()
      END
