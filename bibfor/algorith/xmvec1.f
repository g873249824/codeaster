      SUBROUTINE XMVEC1(NDIM,JNNE,NDEPLE,NNC   ,JNNM   ,
     &                  HPG   ,NFAES ,FFC   ,FFE   ,FFM   ,
     &                  JACOBI,DLAGRC,JPCAI ,CFACE ,COEFCR,
     &                  COEFCP,LPENAC,JEU   ,NORM  ,
     &                  TYPMAI,NSINGE,NSINGM,RRE   ,RRM   ,
     &                  NCONTA,JDDLE ,JDDLM,NFHE  ,NFHM  ,
     &                  LMULTI,HEAVNO,HEAVFA,VTMP  )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C
      IMPLICIT NONE
      INTEGER  NDIM,JNNE(3),JNNM(3),NNC,NFAES
      INTEGER  JPCAI,CFACE(3,5),NSINGE,NSINGM
      REAL*8   HPG,FFC(9),JACOBI,FFE(20),FFM(20)
      REAL*8   DLAGRC,JEU,NORM(3),COEFCR,COEFCP,RRE,RRM
      REAL*8   VTMP(336)
      CHARACTER*8  TYPMAI
      INTEGER  NCONTA,NDEPLE,JDDLE(2),JDDLM(2)
      INTEGER  NFHE,NFHM,HEAVNO(8),HEAVFA(*)
      LOGICAL  LPENAC,LMULTI
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE XFEMGG - CALCUL ELEM.)
C
C VECTEUR SECOND MEMBRE SI CONTACT AVEC COMPLIANCE (XFEM)
C
C ----------------------------------------------------------------------
C ROUTINE SPECIFIQUE A L'APPROCHE <<GRANDS GLISSEMENTS AVEC XFEM>>,
C TRAVAIL EFFECTUE EN COLLABORATION AVEC I.F.P.
C ----------------------------------------------------------------------
C
C IN  NDIM   : DIMENSION DU PROBLEME
C IN  NNE    : NOMBRE DE NOEUDS DE LA MAILLE ESCLAVE
C IN  NNES   : NOMBRE DE NOEUDS SOMMETS DE LA MAILLE ESCLAVE
C IN  NNM    : NOMBRE DE NOEUDS DE LA MAILLE MAITRE
C IN  HPG    : POIDS DU POINT INTEGRATION DU POINT DE CONTACT
C IN  NFAES  : NUMERO DE LA FACETTE DE CONTACT ESCLAVE
C IN  FFC    : FONCTIONS DE FORME DU POINT DE CONTACT DANS ELC
C IN  FFE    : FONCTIONS DE FORME DU POINT DE CONTACT DANS ESC
C IN  FFM    : FONCTIONS DE FORME DE LA PROJECTION DU PTC DANS MAIT
C IN  JACOBI : JACOBIEN DE LA MAILLE AU POINT DE CONTACT
C IN  DLAGRC : LAGRANGE DE CONTACT AU POINT D'INTÉGRATION
C IN  JPCAI  : POINTEUR VERS LE VECT DES ARRETES ESCLAVES INTERSECTEES
C IN  CFACE  : MATRICE DE CONECTIVITE DES FACETTES DE CONTACT
C IN  COEFCA : COEF_REGU_CONT
C IN  JEU    : VALEUR DU JEU
C IN  NORM   : VALEUR DE LA NORMALE AU POINT DE CONTACT
C IN  NSINGE  : NOMBRE DE FONCTION SINGULIERE ESCLAVE
C IN  NSINGM  : NOMBRE DE FONCTION SINGULIERE MAITRE
C IN  RRE    : SQRT LST ESCLAVE
C IN  RRM    : SQRT LST MAITRE
C I/O VTMP   : VECTEUR SECOND MEMBRE ELEMENTAIRE DE CONTACT/FROTTEMENT
C ----------------------------------------------------------------------
      INTEGER I,J,K,II,IN,PL,XOULA,IIN,NDDLE
      INTEGER NNE,NNES,NNEM,NNM,NNMS,DDLES,DDLEM,DDLMS,DDLMM
      INTEGER IFH,IDDL
      REAL*8  VV,IESCL(6),IMAIT(6)
C ----------------------------------------------------------------------
C
C
C --- INITIALISATION
C
      IESCL(1) = 1
      IESCL(2) =-1
      IESCL(2+NFHE)=-RRE
      IMAIT(1) = 1
      IMAIT(2) = 1
      IMAIT(2+NFHM)= RRM

C --------------------- CALCUL DE [L1_CONT]-----------------------------
C
      NNE=JNNE(1)
      NNES=JNNE(2)
      NNEM=JNNE(3)
      NNM=JNNM(1)
      NNMS=JNNM(2)
      DDLES=JDDLE(1)
      DDLEM=JDDLE(2)
      DDLMS=JDDLM(1)
      DDLMM=JDDLM(2)
      NDDLE = DDLES*NNES+DDLEM*NNEM
C
      IF (NNM.NE.0) THEN
C
      DO 10 J = 1,NDIM
        DO 20 I = 1,NDEPLE
          CALL INDENT(I,DDLES,DDLEM,NNES,IIN)
          IF(LPENAC) THEN
            VV = HPG*JACOBI*DLAGRC*
     &          FFE(I)*NORM(J)
          ELSE
            VV = HPG*JACOBI*(DLAGRC-COEFCR*JEU) *
     &          FFE(I)*NORM(J)
          ENDIF
          IF (LMULTI) THEN
            DO 15 IFH = 1,NFHE
              IESCL(1+IFH)=HEAVFA(NFHE*(I-1)+IFH)
   15       CONTINUE
          ENDIF
          DO 25 IDDL=1,1+NFHE+NSINGE
            II = IIN + (IDDL-1)*NDIM + J
            VTMP(II) = -IESCL(IDDL)*VV
   25     CONTINUE
   20   CONTINUE
        DO 30 I = 1,NNM
          CALL INDENT(I,DDLMS,DDLMM,NNMS,IIN)
          IIN = IIN + NDDLE
           IF(LPENAC) THEN
             VV = HPG*JACOBI*DLAGRC*
     &            FFM(I)*NORM(J)
          ELSE
             VV = HPG*JACOBI*(DLAGRC-COEFCR*JEU) *
     &            FFM(I)*NORM(J)
          ENDIF
          IF (LMULTI) THEN
            DO 35 IFH = 1,NFHM
              IMAIT(1+IFH)=HEAVFA(NFHE*NNE+NFHM*(I-1)+IFH)
   35       CONTINUE
          ENDIF
          DO 45 IDDL=1,1+NFHM+NSINGM
            II = IIN + (IDDL-1)*NDIM + J
            VTMP(II) = IMAIT(IDDL)*VV
   45     CONTINUE
   30   CONTINUE
   10 CONTINUE
      ELSE
      DO 50 J = 1,NDIM
        DO 60 I = 1,NDEPLE
C --- BLOCS ES,SI
          IF(LPENAC) THEN
            VV = HPG*JACOBI*DLAGRC*
     &          FFE(I)*NORM(J)
          ELSE
            VV = HPG*JACOBI*(DLAGRC-COEFCR*JEU) *
     &          FFE(I)*NORM(J)
          ENDIF
          CALL INDENT(I,DDLES,DDLEM,NNES,IIN)
          II = IIN + J
          VTMP(II) = RRE * VV
60      CONTINUE
50    CONTINUE
      ENDIF
C
C --------------------- CALCUL DE [L2]----------------------------------
C
      DO 40 I = 1,NNC
        CALL XPLMA2(NDIM,NNE,NNES,DDLES,I,NFHE,PL)
        IF (LMULTI) PL = PL + (HEAVNO(I)-1)*NDIM
        IF(LPENAC) THEN
          VTMP(PL) = -HPG*JACOBI*(DLAGRC/COEFCP+JEU)
     &     *FFC(I)
        ELSE
          VTMP(PL) = -HPG*JACOBI*JEU*FFC(I)
        ENDIF
40    CONTINUE
C
      END
