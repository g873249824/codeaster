      SUBROUTINE ASCIMA (INFCHA,NU,MATASS,CUMUL)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/02/2008   AUTEUR PELLET J.PELLET 
C RESPONSABLE VABHHTS J.PELLET
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      CHARACTER*19       INFCHA
      CHARACTER*(*)      NU,MATASS
      INTEGER NCHCI
C ----------------------------------------------------------------------
C  BUT : ON NOTE LES DDLS ELIMINES PAR LES CHARGES CINEMATIQUES
C
C  REMARQUE : LE RESTE DU TRAITEMENT DES CHARGES CINEMATIQUES EST FAIT
C             LORS DE LA RESOLUTION (ASMCHC+CSMBGG)
C
C IN  K*  INFCHA : / SD_INFCHA (K19)
C                  / NOM D'UN OBJET JEVEUX (K24) CONTENANT
C                    LES NOMS DES CHARGES CINEMATIQUES (K8)
C
C IN  NU      : NUME_DDL
C VAR MATASS  : MATR_ASSE : CREATION / MISE A JOUR DE .CCID
C IN  CUMUL   : 'ZERO' / 'CUMU'
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C----------------------------------------------------------------------
C     VARIABLES LOCALES
C----------------------------------------------------------------------
      CHARACTER*4 CUMUL
      CHARACTER*8 KBID
      CHARACTER*19 INFCH2
      INTEGER IRET,IRET1,IRET2,IRET3,ICH,NCHARG,JLCHA,JINFC,JLCHCI
C-----------------------------------------------------------------------
      CALL JEMARQ()

      INFCH2=INFCHA
      IF (INFCH2.EQ.' ') GOTO 9999

      CALL JEEXIN(INFCH2//'.LCHA',IRET1)
      CALL JEEXIN(INFCH2//'.INFC',IRET2)
      CALL JEEXIN(INFCHA,IRET3)
      IF (IRET1+IRET2+IRET3.EQ.0) GOTO 9999


C     -- CAS SD_INFCHA :
      IF (IRET1+IRET2.GT.0) THEN
        CALL JEEXIN(INFCH2//'.LCHA',IRET)
        IF (IRET.EQ.0) GOTO 9999

        CALL JEVEUO(INFCH2//'.LCHA','L',JLCHA)
        CALL JEVEUO(INFCH2//'.INFC','L',JINFC)
        NCHARG = ZI(JINFC)
        CALL WKVECT('&&ASCIMA.LCHCI','V V K24',NCHARG,JLCHCI)

        NCHCI = 0
        DO 1 ICH = 1,NCHARG
          IF (ZI(JINFC+ICH).LT.0) THEN
            NCHCI = NCHCI+1
            ZK24(JLCHCI-1+NCHCI) = ZK24(JLCHA-1+ICH)
          ENDIF
1       CONTINUE
        IF ( NCHCI.EQ.0 ) GOTO 9999
        CALL ASSCHC(MATASS,NCHCI,ZK24(JLCHCI),NU,CUMUL)


C     -- CAS LISTE DE CHARGES CINEMATIQUES :
      ELSE
        CALL JEVEUO(INFCHA,'L',JLCHCI)
        CALL JELIRA(INFCHA,'LONMAX',NCHCI,KBID)
        CALL ASSCHC(MATASS,NCHCI,ZK8(JLCHCI),NU,CUMUL)
      ENDIF





 9999 CONTINUE
      CALL JEDETR('&&ASCIMA.LCHCI')
      CALL JEDEMA()
      END
