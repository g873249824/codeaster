      SUBROUTINE DLFEXT(NVECA,NCHAR,TEMPS,NEQ,LIAD,
     &                  LIFO,CHARGE,INFOCH,FOMULT,MODELE,
     &                  MATE,CARELE,NUMEDD,F)
      IMPLICIT  NONE
      INTEGER NVECA,NCHAR,NEQ,LIAD(*)
      REAL*8 TEMPS,F(*)
      CHARACTER*24 LIFO(*),INFOCH,FOMULT
      CHARACTER*24 MODELE,CARELE,CHARGE,MATE,NUMEDD
C ----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/06/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ----------------------------------------------------------------------

C  CALCUL DU SECOND MEMBRE F* A PARTIR DE :
C      - VECT_ASSE
C      - CHARGE

C  INPUT:
C        NVECA    : NOMBRE D'OCCURENCES DU MOT CLE VECT_ASSE
C        NCHAR    : NOMBRE D'OCCURENCES DU MOT CLE CHARGE
C        TEMPS    : INSTANT DE CALCUL
C        NEQ      : NOMBRE D'EQUATIONS (D.D.L. ACTIFS)
C        LIAD     : LISTE DES ADRESSES DES VECTEURS CHARGEMENT (NVECT)
C        LIFO     : LISTE DES NOMS DES FONCTIONS EVOLUTION (NVECT)
C        CHARGE   : LISTE DES CHARGES
C        INFOCH   : INFO SUR LES CHARGES
C        FOMULT   : LISTE DES FONC_MULT ASSOCIES A DES CHARGES
C        MODELE   : NOM DU MODELE
C        MATE     : NOM DU CHAMP DE MATERIAU
C        CARELE   : CARACTERISTIQUES DES POUTRES ET COQUES
C        NUMEDD   : NUME_DDL DE LA MATR_ASSE RIGID

C  OUTPUT:
C        F        : VECTEUR FORCE EXTERIEURE (NEQ)
C ----------------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER JINF,LONCH,IF1,IF2
      INTEGER IRET,IEQ
      INTEGER N1
      REAL*8 PARTPS(3),R8PREM,R8VIDE
      CHARACTER*4 TYPMAT,TYPCAL,PARA
      CHARACTER*16 METHOD
      CHARACTER*19 LIGRMO,LISCHA
      CHARACTER*24 VECHMP,VACHMP,CNCHMP,K24BID,K24BLA
      CHARACTER*24 VAPRIN
      INTEGER      IARG

      DATA VECHMP,VACHMP,CNCHMP/3*' '/
      DATA K24BID/' '/
      DATA TYPCAL/'MECA'/

C DEB ------------------------------------------------------------------

C====
C 1. PREALABLES
C====
C
      CALL JEMARQ()

      LIGRMO = MODELE(1:8)//'.MODELE'
      TYPMAT = 'R'
      PARA = 'INST'
      LISCHA = CHARGE(1:19)
      K24BLA = ' '
      CALL ASSERT(LISCHA.EQ.INFOCH(1:19))

      PARTPS(1) = TEMPS
      PARTPS(2) = R8VIDE()
      PARTPS(3) = R8VIDE()

C -- METHODE D'INTEGRATION
      CALL GETVTX('SCHEMA_TEMPS','SCHEMA',1,IARG,1,METHOD,N1)

C
      TYPCAL = 'MECA'

C 2.1. ==> --- CAS D'UN CHARGEMENT DEFINI PAR VECT_ASSE ---

      IF (NVECA.NE.0) THEN

        CALL FEXT(TEMPS,NEQ,NVECA,LIAD,LIFO,F)

C 2.2. ==> --- CAS D'UN CHARGEMENT DEFINI PAR CHARGE ---

      ELSE IF (NCHAR.NE.0) THEN

C 2.2.1 ==>

        CALL JEVEUO(INFOCH,'L',JINF)
        NCHAR = ZI(JINF)


        CALL VECHME(TYPCAL,MODELE,CHARGE,INFOCH,PARTPS,
     &              CARELE,MATE  ,K24BID,LIGRMO,VAPRIN,
     &              ' '   ,0     ,K24BLA,VECHMP)
        CALL ASASVE(VECHMP,NUMEDD,TYPMAT,VACHMP)
        CALL ASCOVA('D',VACHMP,FOMULT,'INST',TEMPS,TYPMAT,CNCHMP)
        CALL JELIRA(CNCHMP(1:19)//'.VALE','LONMAX',LONCH,K24BID)
        CALL JEVEUO(CNCHMP(1:19)//'.VALE','E',IF1)

        CALL DCOPY(NEQ,ZR(IF1),1,F,1)

C 2.2.2. ==> -- LES DIRICHLETS

        CALL VEDIME(MODELE,CHARGE,INFOCH,TEMPS,TYPMAT,
     &              0     ,' '   ,VECHMP)
        CALL ASASVE(VECHMP,NUMEDD,TYPMAT,VACHMP)
        CALL ASCOVA('D',VACHMP,FOMULT,PARA,TEMPS,TYPMAT,CNCHMP)
        CALL JELIRA(CNCHMP(1:19)//'.VALE','LONMAX',LONCH,K24BID)
        CALL JEVEUO(CNCHMP(1:19)//'.VALE','L',IF2)

C -- TEST DE PRESENCE DE CHARGEMENT DIRICHLET (DEPL IMPOSE NON NUL)
        IRET = 0
        DO 2221 , IEQ = 1,LONCH
          IF (ABS(ZR(IF2+IEQ-1)).GT.R8PREM()) IRET = 1
 2221   CONTINUE
        IF ((IRET.EQ.1).AND.(METHOD.NE.'NEWMARK')) THEN
          CALL U2MESS('F','ALGORITH3_20')
        END IF

        DO 2222 , IEQ = 1,LONCH
          F(IEQ) = F(IEQ) + ZR(IF2+IEQ-1)
 2222   CONTINUE

      ELSE
         CALL R8INIR ( NEQ , 0.D0 , F , 1 )
      ENDIF

      CALL JEDETR(CNCHMP)

      CALL JEDEMA()

      END
