      SUBROUTINE NMASSD(MODELE,NUMEDD,MATE  ,CARELE,LISCHA,
     &                  DEPEST,VEASSE,CNPILO,CNDONN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/09/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      CHARACTER*19 LISCHA
      CHARACTER*24 MODELE,NUMEDD,MATE,CARELE
      CHARACTER*24 DEPEST
      CHARACTER*19 VEASSE(*)      
      CHARACTER*19 CNPILO,CNDONN
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C CALCUL DU SECOND MEMBRE POUR LA PREDICTION - DEPLACEMENT DONNE OU
C EXTRAPOLE
C      
C ----------------------------------------------------------------------
C
C
C IN  MODELE : NOM DU MODELE
C IN  NUMEDD : NOM DE LA NUMEROTATION
C IN  MATE   : NOM DU CHAMP DE MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  LISCHA : SD L_CHARGES
C IN  DEPEST : DEPLACEMENT ESTIME (PAR DEPL_CALC OU EXTROPLATION)
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C OUT CNPILO : VECTEUR ASSEMBLE DES FORCES PILOTEES
C OUT CNDONN : VECTEUR ASSEMBLE DES FORCES DONNEES
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      IFM,NIV
      INTEGER      I,NBVEC  
      REAL*8       COEF(8)
      CHARACTER*19 VECT(8)
      CHARACTER*19 NMCHEX,CNDIPI,CNDIDO,CNBEST(2)
      CHARACTER*19 VEDEST(2)
C 
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... CALCUL SECOND MEMBRE' 
      ENDIF 
C
C --- INITIALISATIONS
C
      VEDEST(1) = '&&NMASSD.VEEST1'
      VEDEST(2) = '&&NMASSD.VEEST2'  
      CNBEST(1) = '&&NMASSD.CNEST1'     
      CNBEST(2) = '&&NMASSD.CNEST2'   
      CALL VTZERO(CNPILO)
      CALL VTZERO(CNDONN)      
C
C --- DEPLACEMENT IMPOSES 
C             
      CNDIDO = NMCHEX(VEASSE,'VEASSE','CNDIDO')
C
C --- DEPLACEMENT PILOTES
C             
      CNDIPI = NMCHEX(VEASSE,'VEASSE','CNDIPI')      
C
C --- CALCUL DES REACTIONS D'APPUI BT.LAMBDA      
C
      CALL NMDIRI(MODELE,NUMEDD,MATE  ,CARELE,LISCHA,
     &            DEPEST,VEDEST(1),CNBEST(1))
C
C --- CONDITIONS DE DIRICHLET B.U
C
      CALL NMBUDI(MODELE,NUMEDD,LISCHA,DEPEST,VEDEST(2),
     &            CNBEST(2))
C
C --- VALEURS POUR SOMME DES FORCES
C  
      NBVEC   = 3
      COEF(1) = 1.D0
      COEF(2) = 1.D0
      COEF(3) = -1.D0    
      VECT(1) = CNDIDO
      VECT(2) = CNBEST(1) 
      VECT(3) = CNBEST(2)
C
C --- CHARGEMENT FIXE
C       
      IF (NBVEC.GT.8) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
      DO 10 I = 1,NBVEC
        CALL VTAXPY(COEF(I),VECT(I),CNDONN)      
 10   CONTINUE
C
C --- CHARGEMENT PILOTE
C
      CNPILO = CNDIPI
C
      CALL JEDEMA()
      END
