      SUBROUTINE NMEXTR(NOMA  ,NOMO  ,SDEXTR,PHENOM,DEPL  ,
     &                  SIGM  ,VARI  ,TEMP  ,MOTFAC,NBOCC ,
     &                  NTEXTR)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 17/01/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      CHARACTER*8  NOMA,NOMO
      CHARACTER*19 SDEXTR
      CHARACTER*19 DEPL,SIGM,VARI,TEMP
      CHARACTER*16 PHENOM
      INTEGER      NBOCC,NTEXTR
      CHARACTER*16 MOTFAC
C
C ----------------------------------------------------------------------
C
C ROUTINE *_NON_LINE (STRUCTURES DE DONNES - EXTRACTION)
C
C LECTURE DES DONNEES
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE 
C IN  NOMO   : NOM DU MODELE
C IN  SDEXTR : NOM DE LA SD POUR EXTRACTION
C IN  PHENOM : TYPE DE PHENOMENE A EXTRAIRE
C               TH             - THERMIQUE
C               ME             - MECANIQUE
C               MEST           - MECANIQUE - STATIQUE
C               MEDY           - MECANIQUE - DYNAMIQUE
C               MEDY_MUAP      - MECANIQUE - DYNAMIQUE - MULTI-APPUI
C               ME**_****_CONT - MECANIQUE - CONTACT
C IN  MOTFAC : MOT-FACTEUR POUR LIRE 
C IN  NBOCC  : NOMBRE D'OCCURRENCES DE MOTFAC
C IN  DEPL   : CHAMP DE DEPLACEMENT (SERT AUX VERIF)
C IN  TEMP   : CHAMP DE TEMPERATURE (SERT AUX VERIF)
C IN  SIGM   : CHAMP DE CONTRAINTE  (SERT AUX VERIF)
C IN  VARI   : CHAMP DE VAR. INTERNES  (SERT AUX VERIF)
C OUT NTEXTR : NOMBRE TOTAL D'EXTRACTIONS
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER      ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8       ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16   ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL      ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8  ZK8
      CHARACTER*16    ZK16
      CHARACTER*24        ZK24
      CHARACTER*32            ZK32
      CHARACTER*80                ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      IOCC
      INTEGER      NBEXT
      INTEGER      NBNO,NBMA,NBPI,NBSPI,NBCMP
      CHARACTER*2  CHAINE
      CHARACTER*16 NOMCHA
      CHARACTER*4  TYPCHA
      LOGICAL      LEXTR
      CHARACTER*24 LISTNO,LISTMA,LISTPI,LISTSP,LISTCP
      CHARACTER*24 EXTINF,EXTCHA,EXTTYP,EXTACT
      INTEGER      JEXTIN,JEXTCH,JEXTTY,JEXTAC
      CHARACTER*19 CHAMP
      CHARACTER*8  EXTRCP,EXTRCH,EXTRGA
C      
C ----------------------------------------------------------------------
C      
      CALL JEMARQ()                       
C
C --- INITIALISATIONS
C
      NTEXTR  = 0
C
C --- SD PRINCIPALE (INFO)
C
      EXTINF = SDEXTR(1:14)//'     .INFO'
      CALL WKVECT(EXTINF,'V V I'  ,6*NBOCC+3,JEXTIN)
      ZI(JEXTIN+1-1) = NBOCC
      ZI(JEXTIN+2-1) = 0
      ZI(JEXTIN+3-1) = 1
      IF (NBOCC.EQ.0) GOTO 99
C
C --- SD LISTE DES CHAMPS
C
      EXTCHA = SDEXTR(1:14)//'     .CHAM'
      CALL WKVECT(EXTCHA,'V V K16',NBOCC    ,JEXTCH)
C
C --- SD TYPE D'EXTRACTION (CHAMP, GAUSS, COMPOSANTES)
C     
      EXTTYP = SDEXTR(1:14)//'     .EXTR'
      CALL WKVECT(EXTTYP,'V V K8' ,3*NBOCC  ,JEXTTY)
C
C --- SD ACTIVATION EXTRACTION
C     
      EXTACT = SDEXTR(1:14)//'     .ACTI'
      CALL WKVECT(EXTACT,'V V L'  ,NBOCC    ,JEXTAC)      
C
      DO 10 IOCC = 1 , NBOCC
C      
        NBEXT  = 0
        EXTRGA = 'NONE'
        EXTRCP = 'NONE'
        EXTRCH = 'NONE'
C
C ----- GENERATION DU NOM DES SD
C
        CALL IMPFOI(0,2,IOCC,CHAINE)
        LISTNO = SDEXTR(1:14)//CHAINE(1:2)//'   .NOEU'
        LISTMA = SDEXTR(1:14)//CHAINE(1:2)//'   .MAIL'
        LISTPI = SDEXTR(1:14)//CHAINE(1:2)//'   .POIN'
        LISTSP = SDEXTR(1:14)//CHAINE(1:2)//'   .SSPI'
        LISTCP = SDEXTR(1:14)//CHAINE(1:2)//'   .CMP '
C
C ----- NOM DU CHAMP
C
        CALL NMEXTC(PHENOM,MOTFAC,IOCC  ,NOMCHA,LEXTR )
        IF (LEXTR) THEN
          ZK16(JEXTCH-1+IOCC) = NOMCHA
        ELSE
          CALL U2MESK('A','EXTRACTION_99',1,NOMCHA)
          ZK16(JEXTCH-1+IOCC) = 'NONE'
          GOTO 999
        ENDIF
C
C ----- TYPE DU CHAMP (NOEU OU ELGA)
C
        CALL NMEXTT(NOMCHA,TYPCHA)
C
C ----- RECUPERATION D'UN CHAMP TEST POUR VERIF. COMPOSANTES
C
        IF (TYPCHA.EQ.'NOEU') THEN 
          IF (PHENOM(1:2).EQ.'ME') THEN
            CHAMP  = DEPL
          ELSEIF (PHENOM(1:2).EQ.'TH') THEN
            CHAMP  = TEMP
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF  
        ELSEIF (TYPCHA.EQ.'ELGA') THEN
          IF (NOMCHA(1:4).EQ.'SIEF') THEN
            CHAMP  = SIGM
          ELSEIF (NOMCHA(1:4).EQ.'VARI') THEN
            CHAMP  = VARI
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
C
C ----- LECTURE DE L'ENDROIT POUR EXTRACTION (MAILLE/NOEUD)
C
        CALL NMEXTL(NOMA  ,NOMO  ,MOTFAC,IOCC  ,NOMCHA,
     &              TYPCHA,LISTNO,LISTMA,NBNO  ,NBMA  ,
     &              EXTRCH)
C
C ----- LECTURE INFO. SI CHAM_ELGA/CHAM_ELEM
C
        IF (TYPCHA.EQ.'ELGA') THEN
          CALL NMEXTP(MOTFAC,IOCC  ,NOMCHA,CHAMP ,LISTPI,
     &                LISTSP,NBPI  ,NBSPI ,EXTRGA)
        ENDIF
C
C ----- LECTURE ET VERIF DES COMPOSANTES
C
        CALL NMEXTK(NOMA  ,MOTFAC,IOCC  ,CHAMP ,NOMCHA,
     &              TYPCHA,LISTNO,LISTMA,LISTPI,LISTSP,
     &              NBNO  ,NBMA  ,NBPI  ,NBSPI ,LISTCP,
     &              NBCMP )
C
C ----- TYPE EXTRACTION SUR LES COMPOSANTES
C
        CALL NMEXTF(MOTFAC,IOCC  ,EXTRCP)
C
C ----- DECOMPTE DES POINTS D'EXTRACTION
C
        CALL NMEXTN(TYPCHA,EXTRCP,EXTRGA,EXTRCH,NBNO  ,
     &              NBMA  ,NBCMP ,NBPI  ,NBSPI ,NBEXT )
C
C ----- SAUVEGARDE
C
        ZK8(JEXTTY+3*(IOCC-1)+1-1)  = EXTRCH 
        ZK8(JEXTTY+3*(IOCC-1)+2-1)  = EXTRGA 
        ZK8(JEXTTY+3*(IOCC-1)+3-1)  = EXTRCP
        ZI(JEXTIN+3+6*(IOCC-1)+1-1) = NBCMP
        ZI(JEXTIN+3+6*(IOCC-1)+2-1) = NBNO
        ZI(JEXTIN+3+6*(IOCC-1)+3-1) = NBMA
        ZI(JEXTIN+3+6*(IOCC-1)+4-1) = NBPI
        ZI(JEXTIN+3+6*(IOCC-1)+5-1) = NBSPI
        ZI(JEXTIN+3+6*(IOCC-1)+6-1) = NBEXT
C
  999   CONTINUE
C
        NTEXTR = NTEXTR + NBEXT
C
 10   CONTINUE
 99   CONTINUE
C
      ZI(JEXTIN+2-1) = NTEXTR
C
      CALL JEDEMA()
      END
