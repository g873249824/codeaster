      SUBROUTINE NMFLMA(TYPMAT,MOD45 ,DEFO  ,PARMET,MODELZ,
     &                  MATE  ,CARELE,SDDISC,SDDYNA,FONACT,
     &                  NUMINS,ITERAT,VALMOI,VALPLU,POUGD ,
     &                  SOLALG,LISCHA,COMREF,DEFICO,RESOCO,
     &                  SOLVEU,NUMEDD,COMPOR,CARCRI,SDTIME,
     &                  MEELEM,MEASSE,VEELEM,LDCCVG,MATASS,
     &                  MATGEO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/11/2008   AUTEUR GREFFET N.GREFFET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE    
      CHARACTER*16  TYPMAT
      CHARACTER*4   MOD45
      INTEGER       DEFO
      REAL*8        PARMET(*)
      LOGICAL       FONACT(*)
      CHARACTER*(*) MODELZ
      CHARACTER*24  MATE,CARELE
      CHARACTER*24  COMPOR,CARCRI
      INTEGER       NUMINS,ITERAT,LDCCVG
      CHARACTER*19  SDDISC,SDDYNA,LISCHA,SOLVEU
      CHARACTER*24  DEFICO,RESOCO,SDTIME
      CHARACTER*24  COMREF,NUMEDD
      CHARACTER*24  VALMOI(8),VALPLU(8),POUGD(8)
      CHARACTER*19  MEELEM(*),MEASSE(*),VEELEM(*),SOLALG(*)    
      CHARACTER*19  MATASS,MATGEO 
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL - UTILITAIRE)
C
C CALCUL DE LA MATRICE GLOBALE POUR FLAMBEMENT/MODES VIBRATOIRES
C      
C ----------------------------------------------------------------------
C
C
C IN  TYPMAT : TYPE DE MATRICE DE RIGIDITE A UTILISER 
C                'ELASTIQUE/TANGENTE/SECANTE'
C IN  MOD45  : TYPE DE CALCUL DE MODES PROPRES
C              'VIBR'     MODES VIBRATOIRES
C              'FLAM'     MODES DE FLAMBEMENT  
C IN  DEFO   : TYPE DE DEFORMATIONS
C                0        PETITES DEFORMATIONS (MATR. GEOM.)
C                1        GRANDES DEFORMATIONS (PAS DE MATR. GEOM.)
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : LISTE DES CHARGES
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  DEFICO : SD DEF. CONTACT
C IN  SDDYNA : SD POUR LA DYNAMIQUE
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION (VOIR NMLECT)
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION (VOIR NMLECT)
C IN  SOLVEU : SOLVEUR
C IN  CARCRI : PARAMETRES METHODES D'INTEGRATION LOCALES (VOIR NMLECT)
C IN  SDDISC : SD DISC_INST
C IN  PREMIE : SI PREMIER INSTANT DE CALCUL
C IN  NUMINS : NUMERO D'INSTANT
C IN  ITERAT : NUMERO D'ITERATION
C IN  VALMOI : VARIABLE CHAPEAU POUR ETAT EN T-
C IN  VALPLU : VARIABLE CHAPEAU POUR ETAT EN T+
C IN  POUGD  : VARIABLE CHAPEAU POUR POUR POUTRES EN GRANDES ROTATIONS
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C OUT LDCCVG : CODE RETOUR DE L'INTEGRATION DU COMPORTEMENT
C                0 : CAS DE FONCTIONNEMENT NORMAL
C                1 : ECHEC DE L'INTEGRATION DE LA LDC
C                3 : SIZZ PAS NUL POUR C_PLAN DEBORST
C OUT MATASS : MATRICE ASSEMBLEE GLOBALE
C OUT MATGEO : MATRICE GEOMETRIQUE GLOBALE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      LOGICAL      REASMA
      LOGICAL      LCRIGI,LCFINT,LMACR
      LOGICAL      NDYNLO,LAMOR,LDYNA
      LOGICAL      ISFONC,LXFCM,LCTCC,LSUIV,LCTCD
      CHARACTER*16 OPTRIG,OPTAMO
      INTEGER      REINCR
      CHARACTER*8  NOMDDL      
      CHARACTER*24 CODERE
      CHARACTER*19 NMCHEX,RIGI2,MASSE,AMORT,MEMASS,MEGEOM
      INTEGER      NBMAT
      REAL*8       COEMAT(3)
      CHARACTER*24 LIMAT(3)
      CHARACTER*4  TYPCST(3)      
      INTEGER      NBMATR
      CHARACTER*6  LTYPMA(20)
      CHARACTER*16 LOPTME(20),LOPTMA(20)
      LOGICAL      LASSME(20),LCALME(20) 
      INTEGER      IFM,NIV
C      
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... CALCUL MATRICE' 
      ENDIF 
C
C --- INITIALISATIONS : ON FORCE LE REASSEMBLAGE
C
      CALL NMCMAT('INIT',' ',' ',' ',.TRUE.,
     &            .TRUE.,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &            LCALME,LASSME)
      CODERE = '&&NMFLMA.CODERE'  
      NOMDDL = ' '           
C
C --- FONCTIONNALITES ACTIVEES
C
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
      LCTCC  = ISFONC(FONACT,'CONT_CONTINU')
      LCTCD  = ISFONC(FONACT,'CONT_DISCRET')      
      LXFCM  = ISFONC(FONACT,'CONT_XFEM')
      LAMOR  = NDYNLO(SDDYNA,'MAT_AMORT')
      LSUIV  = ISFONC(FONACT,'FORCE_SUIVEUSE') 
      LMACR  = ISFONC(FONACT,'MACR_ELEM_STAT')
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C 
      MASSE  = NMCHEX(MEASSE,'MEASSE','MEMASS')
      AMORT  = NMCHEX(MEASSE,'MEASSE','MEAMOR') 
      MEMASS = NMCHEX(MEELEM,'MEELEM','MEMASS')
      MEGEOM = NMCHEX(MEELEM,'MEELEM','MEGEOM')            
C
C --- OBJET POUR RECONSRUCTION RIGIDITE TOUJOURS SYLMETRIQUE
C
      RIGI2 = '&&NMFLMA.RIGISYME'
C
C --- PARAMETRES
C
      REINCR = NINT(PARMET(1))
C
C --- REASSEMBLAGE DE LA MATRICE GLOBALE      
C
      IF ((REINCR.EQ.0) .AND. (NUMINS.NE.1)) THEN
        REASMA = .FALSE.
      ENDIF  
      IF (NUMINS.EQ.1) THEN
        REASMA = .TRUE.
      ENDIF  
      IF ((REINCR.NE.0) .AND. (NUMINS.NE.1)) THEN
        REASMA = MOD(NUMINS-1,REINCR) .EQ. 0
      ENDIF
C
C --- SI XFEM/CONTACT_CONTINU: ERREUR FATALE
C      
      IF ((LXFCM).OR.(LCTCC)) THEN
        CALL U2MESS('F','MECANONLINE5_3')
      ENDIF   
C
C --- OPTION DE CALCUL DE MERIMO
C
      IF (TYPMAT.EQ.'TANGENTE') THEN
        OPTRIG = 'RIGI_MECA_TANG'
      ELSE IF (TYPMAT.EQ.'SECANTE') THEN
        OPTRIG = 'RIGI_MECA_ELAS'
      ELSE IF (TYPMAT.EQ.'ELASTIQUE') THEN
        OPTRIG = 'RIGI_MECA'
      ELSE
        CALL ASSERT(.FALSE.)  
      END IF   
C
C --- A RECALCULER
C
      LCRIGI = REASMA
      LCFINT = .FALSE.
C
C --- CALCUL DES MATR-ELEM DE RIGIDITE 
C      
      IF (LCRIGI) THEN
        CALL NMCMAT('AJOU','MERIGI',OPTRIG,' ',.TRUE.,
     &              REASMA,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &              LCALME,LASSME) 
      ENDIF
C
C --- CALCUL DES MATR-ELEM D'AMORTISSEMENT DE RAYLEIGH A CALCULER 
C --- NECESSAIRE SI MATR_ELEM RIGIDITE CHANGE !
C
      IF (LCRIGI.AND.LAMOR) THEN
        OPTAMO = 'AMOR_MECA'
        CALL NMCMAT('AJOU','MEAMOR',OPTAMO,' ',.TRUE.,
     &              .TRUE.,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &              LCALME,LASSME) 
      ENDIF       
C
C --- CALCUL DES MATR-ELEM DES CHARGEMENTS SUIVEURS 
C
      IF (LSUIV) THEN
        CALL NMCMAT('AJOU','MESUIV',' ',' ',.TRUE.,
     &              .FALSE.,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &              LCALME,LASSME)     
      ENDIF
C
C --- CALCUL DE LA RIGIDITE GEOMETRIQUE DANS LE CAS HPP
C
      IF (MOD45 .EQ. 'FLAM') THEN
        IF (DEFO.EQ.0) THEN
          CALL NMCMAT('AJOU','MEGEOM',' ',' ',.TRUE.,
     &                .FALSE.,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &                LCALME,LASSME)         
        ENDIF
      ENDIF
C
C --- CALCUL DES MATR-ELEM DES SOUS-STRUCTURES 
C
      IF (LMACR) THEN
        CALL NMCMAT('AJOU','MESSTR',' ',' ',.TRUE.,
     &              .FALSE.,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &              LCALME,LASSME)     
      ENDIF
C
C --- CALCUL ET ASSEMBLAGE DES MATR_ELEM DE LA LISTE
C
      IF (NBMATR.GT.0) THEN
        CALL NMXMAT(MODELZ,MATE  ,CARELE,COMPOR,CARCRI,
     &              SDDISC,SDDYNA,FONACT,NUMINS,ITERAT,
     &              VALMOI,VALPLU,POUGD ,SOLALG,LISCHA,
     &              COMREF,DEFICO,RESOCO,SOLVEU,NUMEDD,
     &              SDTIME,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &              LCALME,LASSME,LCFINT,MEELEM,MEASSE,
     &              VEELEM,LDCCVG,CODERE)
      ENDIF
C
C --- ON RECONSTRUIT RIGI2 TOUJOURS SYMETRIQUE
C
      CALL ASMARI(FONACT,DEFICO,MEELEM,NUMEDD,SOLVEU,
     &              LISCHA,RIGI2)
C
C --- COEFFICIENTS POUR MATRICES
C    
      IF (LDYNA) THEN      
        LIMAT(1) = RIGI2
        LIMAT(2) = MASSE
        LIMAT(3) = AMORT
        IF (LAMOR) THEN
          NBMAT = 3
        ELSE
          NBMAT = 2
        END IF
      ELSE
        LIMAT(1) = RIGI2
        NBMAT    = 1      
      ENDIF      
      TYPCST(1) = 'R'
      TYPCST(2) = 'R'
      TYPCST(3) = 'R'
      COEMAT(1) = 1.D0
      COEMAT(2) = 0.D0
      COEMAT(3) = 0.D0
      MATASS = RIGI2
C
C --- ASSEMBLAGE MATRICE TANGENTE
C     
      IF (REASMA) THEN
        CALL MTCMBL(NBMAT ,TYPCST,COEMAT,LIMAT,MATASS,
     &              NOMDDL,' '   ,'ELIM=')
        
C
C --- PRISE EN COMPTE DE LA MATRICE TANGENTE DES FORCES SUIVEUSES
C 
        IF (LSUIV) THEN
          CALL ASCOMA(MEELEM,NUMEDD,SOLVEU,LISCHA,MATASS)
        ENDIF               
C
C --- PRISE EN COMPTE DE LA MATRICE TANGENTE DU FROTTEMENT
C
        IF (LCTCD) THEN
          CALL NMASFR(DEFICO,RESOCO,MATASS)
        ENDIF
      ENDIF
C
C --- CALCUL DE LA RIGIDITE GEOMETRIQUE DANS LE CAS HPP
C
      IF (MOD45 .EQ. 'FLAM') THEN
        IF (DEFO.EQ.0) THEN
          CALL ASMATR(1,MEGEOM,' ',NUMEDD,SOLVEU,' ','ZERO','V',
     &                1,MATGEO)
        ELSE
          MATGEO = MATASS
        ENDIF
      ELSEIF (MOD45 .EQ. 'VIBR') THEN
        CALL ASMAMA(MEMASS,' ',NUMEDD,SOLVEU,LISCHA,
     &              MATGEO)
      ENDIF           
C
9999  CONTINUE   
C
      CALL JEDEMA()        
C
      END
