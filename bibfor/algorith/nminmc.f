      SUBROUTINE NMINMC(FONACT,LISCHA,SDDYNA,MODELE,COMPOR,
     &                  SOLVEU,NUMEDD,DEFICO,RESOCO,CARCRI,
     &                  MATE  ,CARELE,SDDISC,MEELEM,MEASSE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/09/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      LOGICAL      FONACT(*)
      CHARACTER*19 LISCHA,SDDYNA,SOLVEU
      CHARACTER*24 NUMEDD,RESOCO,DEFICO
      CHARACTER*24 MODELE,COMPOR
      CHARACTER*24 CARCRI
      CHARACTER*24 MATE,CARELE
      CHARACTER*19 MEELEM(*),MEASSE(*)
      CHARACTER*19 SDDISC
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (CALCUL)
C
C PRE-CALCUL DES MATRICES ELEMENTAIRES CONSTANTES AU COURS DU CALCUL
C      
C ----------------------------------------------------------------------
C
C
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  SDDYNA : SD DYNAMIQUE
C IN  COMPOR : CARTE COMPORTEMENT
C IN  MODELE : NOM DU MODELE
C IN  SOLVEU : SOLVEUR
C IN  NUMEDD : NUME_DDL
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  DEFICO : SD DEFINITION CONTACT
C IN  LISCHA : LISTE DES CHARGEMENTS
C IN  MATE   : NOM DU CHAMP DE MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  SDDISC : SD DISCRETISATION
C OUT MEELEM : MATRICES ELEMENTAIRES
C OUT MEASSE : MATRICES ASSEMBLEES
C      
C ----------------------------------------------------------------------
C
      CHARACTER*16 OPMASS,OPRIGI
      CHARACTER*24 K24BLA
      LOGICAL      NDYNLO,ISFONC,LMACR,LDYNA,LEXPL,LBID
      INTEGER      IFM,NIV
      INTEGER      NUMINS
      INTEGER      NBMATR
      CHARACTER*19 K19BLA
      CHARACTER*6  LTYPMA(20)
      CHARACTER*16 LOPTME(20),LOPTMA(20)
      LOGICAL      LASSME(20),LCALME(20)      
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> PRECALCUL DES MATR_ELEM CONSTANTES'
      ENDIF
C
C --- INITIALISATIONS
C
      LMACR  = ISFONC(FONACT,'MACR_ELEM_STAT')
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
      LEXPL  = NDYNLO(SDDYNA,'EXPLICITE')
      K24BLA = ' '
      K19BLA = ' '
C      
      CALL NMCMAT('INIT',' '   ,' '   ,' '   ,LBID  ,
     &            LBID  ,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &            LCALME,LASSME)
C
C --- INSTANT INITIAL
C
      NUMINS = 1         
C
C --- MATRICE DE RIGIDITE ASSOCIEE AUX LAGRANGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... MATR_ELEM DE'//
     &                ' RIGIDITE ASSOCIEE AUX LAGRANGE'
      ENDIF
      CALL NMCMAT('AJOU','MEDIRI',' ',' ',.TRUE.,
     &            .FALSE.,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &            LCALME,LASSME)
C
C --- MATRICE DE MASSE
C
      IF (LDYNA) THEN
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ... MATR_ELEM DE MASSE'
        ENDIF      
        IF (LEXPL) THEN
          IF (NDYNLO(SDDYNA,'MASS_DIAG'))THEN
            OPMASS = 'MASS_MECA_EXPLI'
          ELSE
            OPMASS = 'MASS_MECA'
          ENDIF
        ELSE
          OPMASS = 'MASS_MECA'
        ENDIF
        CALL NMCMAT('AJOU','MEMASS',OPMASS,' ',.TRUE.,
     &              .FALSE.,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &               LCALME,LASSME)   
                
      ENDIF
C
C --- MATRICES DES MACRO-ELEMENTS
C --- ON DOIT ASSEMBLER _AVANT_ ACCEL0
C
      IF (LMACR) THEN
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ... MATR_ELEM DES MACRO_ELEMENTS'
        ENDIF 
        OPRIGI = 'RIGI_MECA'
        CALL NMCMAT('AJOU','MESSTR',OPRIGI,' '   ,.TRUE.,
     &              .TRUE.,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &              LCALME,LASSME)    
      ENDIF
C
C --- CALCUL ET ASSEMBLAGE DES MATR_ELEM DE LA LISTE
C
      IF (NBMATR.GT.0) THEN
        CALL NMXMA2(MODELE,MATE  ,CARELE,COMPOR,CARCRI,
     &              SDDISC,FONACT,NUMINS,K24BLA,K24BLA,
     &              K19BLA,LISCHA,DEFICO,RESOCO,SOLVEU,
     &              NUMEDD,NBMATR,LTYPMA,LOPTME,LOPTMA,
     &              LCALME,LASSME,MEELEM,MEASSE)
      ENDIF           
C
      CALL JEDEMA()
      END
