      SUBROUTINE REACLM(NOMA  ,DEFICO,VALPLU)
C      
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 22/06/2009   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8  NOMA
      CHARACTER*24 VALPLU(8),DEFICO
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - FROTTEMENT)
C
C REACTUALISATION DES SEUILS DE FROTTEMENT PAR LES MULTIPLICATEURS
C DE CONTACT
C      
C ----------------------------------------------------------------------
C
C 
C IN  NOMA   : NOM DU MAILLAGE
C IN  DEFICO : SD DE DEFINITION DU CONTACT
C IN  VALPLU : ETAT EN T+  
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFMMVD,ZTABF,ZMAES
      INTEGER      NTMAE,NTPC,IMAE,POSMAE,NBPC,IPC,NNO,K,NUMMAE
      INTEGER      CFDISI,IZONE,NDIM,IBID,CODRET
      REAL*8       LAMBDA,KSIPC1,KSIPC2
      REAL*8       MCON(9),FF(9)
      CHARACTER*8  ALIAS
      CHARACTER*19 CNSPLU
      CHARACTER*24 K24BID,DEPPLU
      CHARACTER*24 MAESCL,TABFIN
      INTEGER      JMAESC,JTABF
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- RECUPERATION DES QCQS DONNEES
C
      MAESCL = DEFICO(1:16) // '.MAESCL'
      TABFIN = DEFICO(1:16) // '.TABFIN'
      CALL JEVEUO(MAESCL,'L',JMAESC)
      CALL JEVEUO(TABFIN,'E',JTABF)
C
      ZTABF = CFMMVD('ZTABF')
      ZMAES = CFMMVD('ZMAES')
      IZONE = 0
      NDIM  = CFDISI(DEFICO,'NDIM',IZONE )
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C       
      CALL DESAGG(VALPLU,DEPPLU,K24BID,K24BID,K24BID,
     &            K24BID,K24BID,K24BID,K24BID)      

C
C --- TRANSFORMATION DEPPLU EN CHAM_NO_S
C
      CNSPLU = '&&REACLM.CNSPLU'
      CALL CNOCNS(DEPPLU,'V',CNSPLU)
C
C --- BOUCLE SUR LES POINTS DE CONTACT
C
      NTMAE = ZI(JMAESC)
      NTPC  = 0
      DO 30 IMAE = 1,NTMAE
        POSMAE = ZI(JMAESC+ZMAES*(IMAE-1)+1)
        NBPC   = ZI(JMAESC+ZMAES*(IMAE-1)+3)
        CALL CFPOSM(NOMA  ,DEFICO,'MAIL',1     ,POSMAE,
     &              NUMMAE,CODRET) 
        IF (CODRET.GE.0) THEN
          CALL MMELTY(NOMA  ,NUMMAE,ALIAS ,NNO   ,IBID)
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF                   
        CALL CALLAM(NOMA  ,DEFICO,CNSPLU,POSMAE,NNO   ,
     &              MCON  )     
        DO 20 IPC = 1,NBPC
          KSIPC1    = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+3)
          KSIPC2    = ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+12)    
          LAMBDA = 0.D0
          CALL MMNONF(NDIM,NNO,ALIAS,KSIPC1,KSIPC2,FF)
          DO 10 K = 1,NNO
            LAMBDA = FF(K)*MCON(K) + LAMBDA
 10       CONTINUE
          ZR(JTABF+ZTABF*NTPC+ZTABF*(IPC-1)+14) = LAMBDA
 20     CONTINUE
        NTPC = NTPC + NBPC
 30   CONTINUE
C 

      CALL DETRSD('CHAM_NO_S',CNSPLU)

      CALL JEDEMA()
      END
