      SUBROUTINE NMCERE(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,CARCRI,FONACT,DEFICO,
     &                  ITERAT,SDNURO,VALMOI,VALPLU,POUGD ,
     &                  SOLALG,VEELEM,VEASSE,SDTIME,OFFSET,
     &                  RHO   ,ETA   ,RESIDU,LDCCVG)
C 
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 07/10/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      LOGICAL       FONACT(*)
      INTEGER       ITERAT,LDCCVG
      REAL*8        ETA,RHO, OFFSET,RESIDU
      CHARACTER*19  LISCHA,SDNURO
      CHARACTER*24  MODELE,NUMEDD,MATE  ,CARELE,COMREF,COMPOR
      CHARACTER*24  CARCRI,DEFICO,SDTIME
      CHARACTER*24  VALMOI(8),POUGD (8),VALPLU(8) 
      CHARACTER*19  VEELEM(*),SOLALG(*)
      CHARACTER*19  VEASSE(*)
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PILOTAGE)
C
C CHOIX DU ETA DE PILOTAGE PAR CALCUL DU RESIDU
C      
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : L_CHARGES
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  DEFICO : SD DEFINITION CONTACT
C IN  VALMOI : VARIABLE CHAPEAU POUR ETAT EN T-
C IN  VALPLU : VARIABLE CHAPEAU POUR ETAT EN T+
C IN  POUGD  : VARIABLE CHAPEAU POUR POUTRES EN GRANDES ROTATIONS
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  ITERAT : NUMERO D'ITERATION DE NEWTON
C IN  VEELEM : VARIABLE CHAPEAU POUR NOM DES VECT_ELEM
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  OFFSET : DECALAGE DE ETA_PILOTAGE EN FONCTION DE RHO
C IN  RHO    : PARAMETRE DE RECHERCHE_LINEAIRE
C IN  ETA    : PARAMETRE DE PILOTAGE
C IN  SDTIME : SD TIMER
C OUT LDCCVG : CODE RETOUR DE L'INTEGRATION DU COMPORTEMENT
C                 0 : CAS DE FONCTIONNEMENT NORMAL
C                 1 : ECHEC DE L'INTEGRATION DE LA LDC
C                 3 : SIZZ PAS NUL POUR C_PLAN DEBORST
C OUT RESIDU : RESIDU OPTIMAL SI L'ON A CHOISI LE RESIDU
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      LOGICAL      ISFONC,REAROT
      INTEGER      NEQ,IRET,INDRO,ISNNEM
      CHARACTER*8  K8BID
      CHARACTER*19 VEFINT,VEDIRI,CNFINT,CNDIRI
      CHARACTER*24 K24BID,K24BLA,CODERE
      CHARACTER*24 VALPLT(8)
      CHARACTER*19 SOLALT(30)
      CHARACTER*19 DEPDET,DEPDEL,DEPPR1,DEPPR2
      INTEGER      JDEPDT,JDEPDL,JDU0, JDU1
      CHARACTER*24 DEPPLT,DDEP
      INTEGER      JDEPPT,JDDEPL     
      CHARACTER*24 DEPPLU
      INTEGER      JDEPPL
      CHARACTER*24 SIGPLU,VARPLU,COMPLU
      CHARACTER*19 NMCHEX,K19BLA
      LOGICAL      LBID
      REAL*8       R8BID      
      INTEGER      IFM,NIV
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('PILOTAGE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<PILOTAGE> ...... CALCUL DU RESIDU' 
      ENDIF         
C
C --- INITIALISATIONS
C
      K24BLA = ' '
      K19BLA = ' '
      REAROT = ISFONC(FONACT,'REAROT')     
      DDEP   = '&&CNCETA.CHP0'
      DEPDET = '&&CNCETA.CHP1'
      DEPPLT = '&&CNCETA.CHP2'
      CODERE = '&&NMCETA.CODRE1'
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C      
C --- POUTRES EN GRANDES ROTATIONS
C    
      IF (REAROT) THEN
        CALL JEVEUO(SDNURO//'.NDRO','L',INDRO)                 
      ELSE
        INDRO = ISNNEM()
      ENDIF      
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C      
      CALL DESAGG(VALPLU,DEPPLU,SIGPLU,VARPLU,COMPLU,
     &            K24BID,K24BID,K24BID,K24BID)    
      DEPDEL = NMCHEX(SOLALG,'SOLALG','DEPDEL')
      DEPPR1 = NMCHEX(SOLALG,'SOLALG','DEPPR1')
      DEPPR2 = NMCHEX(SOLALG,'SOLALG','DEPPR2')  
      VEDIRI = NMCHEX(VEELEM,'VEELEM','CNDIRI')
      CNDIRI = NMCHEX(VEASSE,'VEASSE','CNDIRI')
      VEFINT = NMCHEX(VEELEM,'VEELEM','CNFINT')
      CNFINT = NMCHEX(VEASSE,'VEASSE','CNFINT') 
C
C --- MISE A JOUR DEPLACEMENT 
C --- DDEP = RHO*DEPPRE(1) + (ETA-OFFSET)*DEPPRE(2)
C 
      CALL JEVEUO(DEPPR1(1:19)//'.VALE','L',JDU0)
      CALL JEVEUO(DEPPR2(1:19)//'.VALE','L',JDU1)
      CALL JEVEUO(DDEP(1:19)  //'.VALE','E',JDDEPL)    
      CALL R8INIR(NEQ   ,0.D0      ,ZR(JDDEPL),1)
      CALL DAXPY (NEQ   ,RHO       ,ZR(JDU0)  ,1, ZR(JDDEPL),1)
      CALL DAXPY (NEQ   ,ETA-OFFSET,ZR(JDU1)  ,1, ZR(JDDEPL),1)
C
C --- MISE A JOUR DE L'INCREMENT DE DEPLACEMENT DEPUIS LE DEBUT 
C --- DU PAS DE TEMPS DEPDET = DEPDEL+DDEP
C 
      CALL JEVEUO(DEPDEL(1:19)//'.VALE','L',JDEPDL) 
      CALL JEVEUO(DEPDET(1:19)//'.VALE','E',JDEPDT) 
      CALL MAJOUR(NEQ    ,REAROT,ZI(INDRO),ZR(JDEPDL),ZR(JDDEPL),
     &            1.D0   ,ZR(JDEPDT))
C
C --- MISE A JOUR DU DEPLACEMENT DEPPLT = DEPPLU+DDEP
C  
      CALL JEVEUO(DEPPLU(1:19)//'.VALE','L',JDEPPL)
      CALL JEVEUO(DEPPLT(1:19)//'.VALE','E',JDEPPT)  
      CALL MAJOUR(NEQ    ,REAROT,ZI(INDRO),ZR(JDEPPL),ZR(JDDEPL),
     &            1.D0   ,ZR(JDEPPT))
C
C --- RECONSTRUCTION DES VARIABLES CHAPEAUX
C
      CALL AGGLOM(DEPPLT,SIGPLU,VARPLU,COMPLU,K24BLA,
     &            K24BLA,K24BLA,K24BLA, 4, VALPLT)
      CALL NMCHSO(SOLALG,'SOLALG','DEPDEL',DEPDET,SOLALT)
C      
C --- REACTUALISATION DES FORCES INTERIEURES
C 
      CALL NMTIME('INIT' ,'TMP',SDTIME,LBID  ,R8BID )
      CALL NMTIME('DEBUT','TMP',SDTIME,LBID  ,R8BID )      
      CALL NMFINT(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &            COMPOR,LISCHA,CARCRI,FONACT,ITERAT,
     &            K19BLA,DEFICO,VALMOI,VALPLT,POUGD ,
     &            SOLALT,VEASSE,LDCCVG,CODERE,VEFINT)   
      CALL NMTIME('FIN'      ,'TMP',SDTIME,LBID  ,R8BID )
      CALL NMTIME('INTE_COMP','TMP',SDTIME,LBID  ,R8BID )     
C
C --- ASSEMBLAGE DES FORCES INTERIEURES
C      
      CALL NMAINT(NUMEDD,FONACT,DEFICO,VEELEM,VEASSE,
     &            VEFINT,CNFINT)                 
C      
C --- REACTUALISATION DES REACTIONS D'APPUI BT.LAMBDA
C
      CALL NMDIRI(MODELE,NUMEDD,MATE  ,CARELE,LISCHA,
     &            K19BLA,VALPLT,VEDIRI)
      CALL NMADIR(NUMEDD,FONACT,DEFICO,VEASSE,VEDIRI,
     &            CNDIRI)      
C
C --- REACTUALISATION DES EFFORTS EXTERIEURS (AVEC ETA)
C
      CALL NMFEXT(NUMEDD,ETA   ,FONACT,DEFICO,K19BLA,
     &            VEASSE)
C
C --- CALCUL DU RESIDU
C
      IF (LDCCVG .EQ. 0) THEN 
        CALL NMPILR(NUMEDD,VEASSE,RESIDU) 
      ENDIF
C
      CALL JEDEMA()
      END
