      SUBROUTINE NMOBSE(NOMA  ,SDSENS,SDIETO,SDOBSE,NUMINS,
     &                  INSTAN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/06/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      CHARACTER*8   NOMA
      CHARACTER*19  SDOBSE
      CHARACTER*24  SDIETO,SDSENS
      INTEGER       NUMINS
      REAL*8        INSTAN
C
C ----------------------------------------------------------------------
C
C ROUTINE *_NON_LINE (OBSERVATION)
C
C REALISER LES OBSERVATIONS
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  SDEXTR : NOM DE LA SD POUR EXTRACTION
C IN  SDSENS : SD SENSIBILITE
C IN  SDIETO : SD GESTION IN ET OUT
C IN  SDOBSE : SD OBSERVATION
C IN  NUMINS : NUMERO DE L'INSTANT COURANT
C IN  INSTAN : INSTANT COURANT
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER      ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8       ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16   ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL      ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8  ZK8
      CHARACTER*16    ZK16
      CHARACTER*24        ZK24
      CHARACTER*32            ZK32
      CHARACTER*80                ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      CHARACTER*24 LISTNO,LISTMA,LISTPI,LISTSP,LISTCP
      INTEGER      JNO   ,JMA   
      CHARACTER*24 OBSINF,OBSCHA,OBSTYP,OBSACT
      INTEGER      JOBSIN,JOBSCH,JOBSTY,JOBSAC
      CHARACTER*24 OBSTAB
      INTEGER      JOBST      
      CHARACTER*19 NOMTAB
      INTEGER      NBCMP,NBNO,NBMA,NBCHAM
      INTEGER      NBPI,NBSPI
      INTEGER      NBOBSV
      INTEGER      IOBS,NOBSEF,ICHAM
      CHARACTER*2  CHAINE
      CHARACTER*24 NOMCHA,NOMCHS
      CHARACTER*4  TYPCHA
      CHARACTER*19 CHAMP
      CHARACTER*8  EXTRCP,EXTRCH,EXTRGA,K8BID
      CHARACTER*19 CHGAUS,CHNOEU,CHELGA
      LOGICAL      LOBSV
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- SD POUR LE NOM DE LA TABLE
C 
      OBSTAB = SDOBSE(1:14)//'     .TABL'
      CALL JEVEUO(OBSTAB,'L',JOBST )
      NOMTAB = ZK24(JOBST)(1:19)
C
C --- SD PRINCIPALE (INFO)
C
      OBSINF = SDOBSE(1:14)//'     .INFO'
      CALL JEVEUO(OBSINF,'L',JOBSIN)
      NBOBSV = ZI(JOBSIN-1+1)
C
C --- SD LISTE DES CHAMPS
C     
      OBSCHA = SDOBSE(1:14)//'     .CHAM'
      CALL JEVEUO(OBSCHA,'L',JOBSCH)
      CALL JELIRA(OBSCHA,'LONMAX',NBCHAM,K8BID)
      NBCHAM = NBCHAM / 2      
C
C --- SD TYPE D'EXTRACTIONS
C     
      OBSTYP = SDOBSE(1:14)//'     .EXTR'
      CALL JEVEUO(OBSTYP,'L',JOBSTY)
C
C --- SD ACTIVATION EXTRACTION
C     
      OBSACT = SDOBSE(1:14)//'     .ACTI'
      CALL JEVEUO(OBSACT,'L',JOBSAC)
C      
      NOBSEF  = 0
C
      DO 10 IOBS = 1 , NBOBSV
C
C ----- OBSERVATION
C
        LOBSV  = ZL(JOBSAC+IOBS-1)
        IF (.NOT.LOBSV) THEN
          GOTO 99
        ENDIF
C
C ----- GENERATION NOM DES SD
C      
        CALL IMPFOI(0,2,IOBS,CHAINE)
        LISTNO = SDOBSE(1:14)//CHAINE(1:2)//'   .NOEU'
        LISTMA = SDOBSE(1:14)//CHAINE(1:2)//'   .MAIL'
        LISTPI = SDOBSE(1:14)//CHAINE(1:2)//'   .POIN'
        LISTSP = SDOBSE(1:14)//CHAINE(1:2)//'   .SSPI'
        LISTCP = SDOBSE(1:14)//CHAINE(1:2)//'   .CMP '
C
C ----- NOM DU CHAMP
C  
        ICHAM  = ZI(JOBSIN-1+4+7*(IOBS-1)+7-1)
        NOMCHA = ZK24(JOBSCH+2*(ICHAM-1)+1-1)
        NOMCHS = ZK24(JOBSCH+2*(ICHAM-1)+2-1)
        IF (NOMCHA.EQ.'NONE') GOTO 99
C
C ----- TYPE DE CHAMP      
C
        CALL NMEXTT(SDIETO,NOMCHA,TYPCHA)
C
C ----- RECUPERATION DU CHAMP
C
        CALL NMEXTD(NOMCHA,SDIETO,SDSENS,CHAMP )
C
C ----- NOMBRE DE COMPOSANTES/NOEUDS/MAILLES
C
        NBCMP  = ZI(JOBSIN-1+4+7*(IOBS-1)-1+1)
        NBNO   = ZI(JOBSIN-1+4+7*(IOBS-1)-1+2)
        NBMA   = ZI(JOBSIN-1+4+7*(IOBS-1)-1+3)
        NBPI   = ZI(JOBSIN-1+4+7*(IOBS-1)-1+4)
        NBSPI  = ZI(JOBSIN-1+4+7*(IOBS-1)-1+5)
C
C ----- ACCES LISTES
C
        IF (TYPCHA.EQ.'NOEU') CALL JEVEUO(LISTNO,'L',JNO)
        IF (TYPCHA.EQ.'ELGA') CALL JEVEUO(LISTMA,'L',JMA)
C
C ----- TYPES D'EXTRACTION
C
        EXTRCH = ZK8(JOBSTY+3*(IOBS-1)+1-1)
        EXTRGA = ZK8(JOBSTY+3*(IOBS-1)+2-1)
        EXTRCP = ZK8(JOBSTY+3*(IOBS-1)+3-1)
C
C ----- CREATION SD DONNEES TEMPORAIRES
C
        CHELGA = '&&NMOBSE.VALE.ELGA'
        CHGAUS = '&&NMOBSE.VALE.GAUS'
        CHNOEU = '&&NMOBSE.VALE.NOEU'
        CALL NMEXT0(TYPCHA,NBMA  ,NBNO  ,NBPI  ,NBSPI ,
     &              NBCMP ,CHNOEU,CHGAUS,CHELGA,EXTRGA,
     &              EXTRCH)
C
C ----- EXTRAIRE LES VALEURS ET STOCKAGE DANS VECTEURS TEMPORAIRES
C
        CALL NMEXT1(NOMA  ,CHAMP ,TYPCHA,NOMCHA,NOMCHS,
     &              NBMA  ,NBNO  ,NBPI  ,NBSPI ,NBCMP ,
     &              EXTRGA,EXTRCH,EXTRCP,LISTNO,LISTMA,
     &              LISTPI,LISTSP,LISTCP,CHNOEU,CHGAUS,
     &              CHELGA)
C
C ----- SAUVER LES VALEURS DANS LA TABLE
C
        CALL NMOBS2(NOMA  ,SDOBSE,NOMTAB,NUMINS,INSTAN,
     &              TYPCHA,NOMCHA,NOMCHS,NBMA  ,NBNO  ,
     &              NBPI  ,NBSPI ,NBCMP ,EXTRGA,EXTRCH,
     &              EXTRCP,LISTNO,LISTMA,LISTPI,LISTSP,
     &              LISTCP,CHAMP ,CHNOEU,CHELGA,NOBSEF)
C
        CALL JEDETR(CHGAUS)
        CALL JEDETR(CHNOEU)        
        CALL JEDETR(CHELGA)
C
 99     CONTINUE

 10   CONTINUE
C
C --- AFFICHAGE
C
      IF (NOBSEF.EQ.0) THEN
        CALL U2MESS('I','OBSERVATION_39')
      ELSEIF (NOBSEF.EQ.1) THEN
        CALL U2MESS('I','OBSERVATION_38')
      ELSE
        CALL U2MESI('I','OBSERVATION_37',1,NOBSEF)
      ENDIF  
C
C --- DESTRUCTION DES CHAM_ELEM_S
C
      DO 45 ICHAM = 1,NBCHAM
        NOMCHS = ZK24(JOBSCH+2*(ICHAM-1)+2-1)
        CALL JEDETR(NOMCHS)
  45  CONTINUE 
C
      CALL JEDEMA()
C
      END
