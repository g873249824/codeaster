      FUNCTION NMCRI7(DP)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 30/01/2012   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_7

      IMPLICIT NONE
C
C     ARGUMENTS:
C     ----------
      REAL*8 NMCRI7,DP
C ----------------------------------------------------------------------
C    BUT:  EVALUER LA FONCTION DONT ON CHERCHE LE ZERO
C          POUR LES LOI DE VMIS_POU
C
C     IN:  DP  : ACCROISSEMENT DE DEFORMATION VISQUEUSE
C    OUT:  NMCRI7 : VALEUR DU CRITERE  DE CONVERGENCE DE L'EQUATION NON
C                   LINEAIRE A RESOUDRE
C                   (DONT ON CHERCHE LE ZERO)
C
C----- COMMONS NECESSAIRES A VMIS_POU
C      COMMONS COMMUNS A NMCRI6 ET POUINP

      COMMON/RCPOU7/MATER,SIGM,VIM,DEPS,RC,RP,NE,MYE,MZE,MXE,AY,AZ,
     &              NITER,PREC
      COMMON/RCPOU8/DP0,RP0,EI,NP2,MM,DQ,ME,MP,ALPHA,BETA,QP,AQ
C
      REAL*8 SIGM(4),VIM(7),DP0,RP0
      REAL*8 DEPS(4),MATER(28)
      REAL*8 XAX,AY,AZ,RC,NB,XAY,XBY,XAZ,XBZ,AA,SY,EP,SU,PUISS
      REAL*8 EA,EIY,EIZ,GJX,NP2,EPU
      REAL*8 PCUM, RP,DEPSX,DQSIY,DQSIZ,DQSIX,MM,PREC2
      REAL*8 NE,MYE,MZE,MXE,QPY,QPZ,XNP,XMEY,XMPY,XMEZ,XMPZ,XMPX
      REAL*8 F1,C1,F2,C2,F3,C3,F4,C4,PMOINS,NITER,PREC,AQM,POUAQP
      REAL*8 DQ,ME,MP,ALPHA,BETA,QP,AQ,EI,BA,BB,FA,NMCRI8,DQPY,DQPZ
      INTEGER NUMLOI,NITMAX,N,IRET

      EXTERNAL NMCRI8

      NITMAX = INT(NITER)
      NUMLOI = NINT(MATER( 1 ))
      XMPY   = MATER( 2 )
      XMEY   = MATER( 3 )
      XAY    = MATER( 4 )
      XBY    = MATER( 5 )
      XMPZ   = MATER( 6 )
      XMEZ   = MATER( 7 )
      XMPX   = MATER( 8 )
      XAZ    = MATER( 9 )
      XBZ    = MATER(10 )
      SU     = MATER(11 )
      SY     = MATER(12 )
      EP     = MATER(14 )
      PUISS  = MATER(15 )
      AA     = MATER(16 )
      XNP    = MATER(21 )
      EA     = MATER(25)
      EIY    = MATER(26)
      EIZ    = MATER(27)
      GJX    = MATER(28)

      DEPSX  = DEPS(1)
      DQSIY  = DEPS(2)
      DQSIZ  = DEPS(3)
      DQSIX  = DEPS(4)
      PMOINS = VIM(5)
      QPY    = VIM(6)
      QPZ    = VIM(7)
      PCUM  = PMOINS+DP

      NE = SIGM(1)+EA*DEPSX
      MYE = SIGM(2)+EIY*DQSIY
      MZE = SIGM(3)+EIZ*DQSIZ
      MXE = SIGM(4)+GJX*DQSIX

      NP2 = XNP*XNP
      XAX = 1.D0/XMPX/XMPX

      IF ( NUMLOI .EQ. 1 ) THEN
        NB = SY + EP*PCUM
      ELSE IF ( NUMLOI .EQ. 2 ) THEN
        EPU = (SU - SY ) / EP
        NB = SY + EP*PCUM/(1.D0+(PCUM/EPU)**PUISS)**(1.D0/PUISS)
      ENDIF
      RP=NB*AA
      DP0=DP
      RP0=RP

C     CALCUL DE DQPY PAR RESOLUTION NUMERIQUE

      EI=EIY
      MM=SIGM(2)
      DQ=DQSIY
      ME=XMEY
      MP=XMPY
      ALPHA = XAY
      BETA = XBY
      QP = QPY
      AQM = POUAQP(QP,ALPHA,BETA,ME,MP)
      BA = 0.D0
      BB = DP*NP2*AQM*ABS(MM+EI*DQ)/(RP+EI*DP*NP2*AQM)

      IF ((DP.EQ.0.D0).OR.(BB.EQ.0.D0)) THEN
         AY = AQM
      ELSE
         FA = NMCRI8(BA)
         CALL ASSERT(FA.LE.0.D0)
C         PREC2=PREC*ME/EI*RP
         PREC2=PREC
         CALL ZEROFR(1,'BRENT',NMCRI8,BA,BB,PREC2,NITMAX,DQPY,IRET,N)
         CALL ASSERT(IRET.EQ.0)
         AY = AQ
      ENDIF

C     CALCUL DE DQPZ PAR RESOLUTION NUMERIQUE

      EI=EIZ
      MM=SIGM(3)
      DQ=DQSIZ
      ME=XMEZ
      MP=XMPZ
      ALPHA = XAZ
      BETA = XBZ
      QP = QPZ
      AQM = POUAQP(QP,ALPHA,BETA,ME,MP)
      BA = 0.D0
      BB = DP*NP2*AQM*ABS(MM+EI*DQ)/(RP+EI*DP*NP2*AQM)

      IF ((DP.EQ.0.D0).OR.(BB.EQ.0.D0)) THEN
         AZ = AQM
      ELSE
         FA = NMCRI8(BA)
         CALL ASSERT(FA.LE.0.D0)
C         PREC2=PREC*ME/EI*RP
         PREC2=PREC
         CALL ZEROFR(1,'BRENT',NMCRI8,BA,BB,PREC2,NITMAX,DQPZ,IRET,N)
         AZ = AQ
      ENDIF

      F1=NE/(RP+EA*DP)/XNP
      C1=F1*F1
      F2=MYE/(RP+EIY*DP*AY*NP2)
      C2=AY*F2*F2
      F3=MZE/(RP+EIZ*DP*AZ*NP2)
      C3=AZ*F3*F3
      F4=MXE/(RP+GJX*DP*XAX*NP2)
      C4=XAX*F4*F4

      NMCRI7 = 1.D0 - NP2*( C1+C2+C3+C4 )
C
      END
