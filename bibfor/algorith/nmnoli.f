      SUBROUTINE NMNOLI(COMPOR,SDDISC,CARCRI,SDCRIT,FONACT,
     &                  DERNIE,MODELE,MATE  ,SDSENS,CARELE,
     &                  LISCH2,DEFICO,RESOCO,SDDYNA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 14/09/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.

C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.

C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C
      IMPLICIT NONE
      INTEGER      DERNIE
      CHARACTER*19 SDDISC,SDCRIT,LISCH2,SDDYNA
      CHARACTER*24 COMPOR,CARCRI
      CHARACTER*24 MODELE,MATE,CARELE
      CHARACTER*24 DEFICO,RESOCO,SDSENS
      INTEGER      FONACT(*)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (SD EVOL_NOLI)
C
C PREPARATION DE LA SD EVOL_NOLI
C
C ----------------------------------------------------------------------
C
C
C IN  MAILLA : NOM DU MAILLAGE
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  COMPOR : COMPORTEMENT
C IN  SDDISC : SD DISC_INST
C IN  SDCRIT : INFORMATIONS RELATIVES A LA CONVERGENCE
C IN  CARCRI : CARTE DES CRITERES DE CONVERGENCE LOCAUX
C IN  MODELE : NOM DU MODELE
C IN  MATE   : CHAMP DE MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  DERNIE : NUMERO DU DERNIER NUMERO ARCHIVE (OU 0 SI NOUVEAU)
C IN  SDSENS : SD SENSIBILITE
C IN  DEFICO : SD POUR LA DEFINITION DU CONTACT
C IN  RESOCO : SD POUR LA RESOLUTION DE CONTACT
C OUT LISCH2 : NOM DE LA SD INFO CHARGE POUR STOCKAGE DANS LA SD
C              RESULTAT
C IN  SDDYNA : SD DYNAMIQUE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      NVAL
      PARAMETER    (NVAL=18)
C
      INTEGER      NUMARC,DINUAR,JSENSN,NMAX
      INTEGER      IFM,NIV
      INTEGER      NUMINS
      LOGICAL      FORCE,INCR,NDYNLO,LDYNA
      CHARACTER*8  RESULT,NOPASE
      CHARACTER*24 SENSNB
      CHARACTER*24 NOOBJ      
      CHARACTER*19 VALINI(NVAL)
      INTEGER      NRPASE,NBPASE
      CHARACTER*19 DEPMOI,SIGMOI,VARMOI,VITMOI,ACCMOI
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> PREPARATION DE LA SD EVOL_NOLI'
      ENDIF
C
C --- INITIALISATIONS
C
      CALL NMCHAI('VALINC','LONMAX',NMAX  )
      CALL ASSERT(NMAX.EQ.NVAL)  
      CALL NMCHA0('VALINC','ALLINI',' ',VALINI)     
C
C --- FONCTIONNALITES ACTIVEES
C
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
C
C --- ACCES SD SENSIBILITE
C
      SENSNB = SDSENS(1:16)//'.NBPASE '
      CALL JEVEUO(SENSNB,'L',JSENSN)
      NBPASE = ZI(JSENSN+1-1)
C
C --- DETERMINATION DU NOM DE LA SD INFO_CHARGE STOCKEE
C --- DANS LA SD RESULTAT
C       
      NOOBJ ='12345678'//'.1234'//'.EXCIT.INFC'           
      CALL GNOMSD(NOOBJ,10,13)
      LISCH2 = NOOBJ(1:19)      
C
C --- NUMERO D'ARCHIVAGE COURANT
C
      NUMARC = DINUAR(SDDISC)     
C
C --- NOUVEAU CONCEPT
C
      IF (DERNIE.EQ.0) THEN
C
C --- NOM DES CHAMPS
C
        DO 10 NRPASE = NBPASE,0,-1
          CALL NMNSLE(SDSENS,NRPASE,'RESULT',RESULT)
          CALL NMNSLE(SDSENS,NRPASE,'DEPMOI',DEPMOI)
          CALL NMNSLE(SDSENS,NRPASE,'SIGMOI',SIGMOI)
          CALL NMNSLE(SDSENS,NRPASE,'VARMOI',VARMOI)
          IF (LDYNA) THEN
            CALL NMNSLE(SDSENS,NRPASE,'VITMOI',VITMOI)
            CALL NMNSLE(SDSENS,NRPASE,'ACCMOI',ACCMOI)
          END IF
C
C --- CREATION DE LA SD EVOL_NOLI
C
          CALL RSCRSD('G',RESULT,'EVOL_NOLI',100)
C
C --- ARCHIVAGE DE L'ETAT INITIAL
C
          IF (NUMARC.EQ.0) THEN
C
C --- CHAMPS A STOCKER
C
            CALL NMCHSO(VALINI,'VALINC','DEPPLU',DEPMOI,VALINI)
            CALL NMCHSO(VALINI,'VALINC','VITPLU',VITMOI,VALINI)
            CALL NMCHSO(VALINI,'VALINC','ACCPLU',ACCMOI,VALINI)
            CALL NMCHSO(VALINI,'VALINC','SIGPLU',SIGMOI,VALINI)
            CALL NMCHSO(VALINI,'VALINC','VARPLU',VARMOI,VALINI)
C
C --- AFFICHAGE
C
            CALL NMIMPR('IMPR','ARCH_INIT',' ',0.D0,0)
            IF (NRPASE.GT.0) THEN
              CALL NMNSLE(SDSENS,NRPASE,'NOPASE',NOPASE)
              CALL NMIMPR('IMPR','ARCH_SENS',NOPASE,0.D0,0)
            END IF
C
C --- ARCHIVAGE EFFECTIF
C
            NUMINS = 0
            FORCE  = .TRUE.
            INCR   = NRPASE.EQ.0
            CALL NMARCH(RESULT,NUMINS,SDDISC,FORCE ,COMPOR,
     &                  SDCRIT,CARCRI,DEFICO,RESOCO,VALINI,INCR  ,
     &                  MODELE,MATE  ,CARELE,FONACT,LISCH2,
     &                  SDDYNA)
          END IF   
 10   CONTINUE
C
C --- CONCEPT REENTRANT
C
      ELSE
C      
C --- DESTRUCTION DES STRUCTURES DE DONNEES RESULTAT A PARTIR 
C --- DU NUMERO D'ARCHIVAGE COURANT
C
        DO 20 NRPASE = 0,NBPASE
          CALL NMNSLE(SDSENS,NRPASE,'RESULT',RESULT)
          CALL RSRUSD(RESULT,NUMARC)
   20   CONTINUE
      END IF
C
      CALL JEDEMA()

      END
