      SUBROUTINE  LIPSRB(NOMRES,MATPRJ,SST1,SST2,INTF1,INTF2,
     &                   LINO1,LINO2,INDIN1,INDIN2,
     &                   DDLMAS,DDLSLA,NBMOMA,NBMOSL,IMAST,
     &                   TRAMOD)
      IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 21/06/2010   AUTEUR CORUS M.CORUS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C-----------------------------------------------------------------------
C    M. CORUS     DATE 04/02/10
C-----------------------------------------------------------------------
C  BUT:      < CALCUL DE LA MATRICE DE PROJECTION >
C
C  CALCULER LA MATRICE DE PROJECTION POUR LE CAS DES INTERFACES 
C  INCOMPATIBLES EN TENANT COMPTE DE L'ORIENTATION DES SOUS-STRUCTURES.
C  GESTION DES LIAISONS INCOMPATIBLES
C
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
C
C NOMRES   /I/: NOM UTILISATEUR DU RESULTAT
C MATPRJ   /O/: MATRICE DE PROJECTION
C SST1     /I/: NOM UTILISATEUR DE LA SOUS STRUCTURE 1
C SST2     /I/: NOM UTILISATEUR DE LA SOUS STRUCTURE 2
C INTF1    /I/: NOM UTILISATEUR DE L'INTERFACE 1
C INTF2    /I/: NOM UTILISATEUR DE L'INTERFACE 2
C LINO1 /I/: VECTEUR CONTENANT LA LISTE DES NOEUDS D'INTEFACE 1
C LINO2 /I/: VECTEUR CONTENANT LA LISTE DES NOEUDS D'INTEFACE 2
C INDIN1 /I/: VECTEUR CONTENANT LES INDICES ASSOCIES AUX DDL 
C                 D'INTERFACE 1
C INDIN2 /I/: VECTEUR CONTENANT LES INDICES ASSOCIES AUX DDL 
C                 D'INTERFACE 2
C DDLMAS  /I/: NOMBRE DE DDL ACTIFS DE L'INTERFACE MAITRE
C DDLSLA  /I/: NOMBRE DE DDL ACTIFS DE L'INTERFACE ESCLAVE
C NBMOMA /I/: NOMBRE DE MODES DE L'INTERFACE MAITRE
C NBMOSL /I/: NOMBRE DE MODES DE L'INTERFACE ESCLAVE
C IMAST    /I/: NUMERO DE L'INTERFACE MAITRE. SI IMAST < 0, LES NOEUDS 
C               COINCIDENT ET ABS(IMAST) EST L'INTERFACE MAITRE
C TRAMOD   /I-O/: TRACE DES MODES A PROJETER SUR L'INTERFACE MAITRE
C                 SUBSTITUE PAR LES MODES PROJETES EN SORTIE DE ROUTINE
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32 JEXNOM, JEXNUM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
C-- VARIABLES EN ENTREES / SORTIE
      INTEGER      DDLMAS,DDLSLA,NBMOMA,NBMOSL,IMAST
      CHARACTER*8  NOMRES,MATPRJ,SST1,SST2,INTF1,INTF2
      CHARACTER*24 LINO1,LINO2,INDIN1,INDIN2

C-- VARIABLES DE LA ROUTINE      
      INTEGER      IBID,I1,J1,K1,L1,M1,N1,LROT1,LROT2,LTRAN1,LTRAN2,
     &             NBNO1,NBNO2,LNOMA1,LNOMA2,LCOOR1,LCOOR2,NUMNO,
     &             LNO1,LNO2,DIMA,LDEPEN,IER,NBMAST,NBSLAV,LNOMAS,
     &             LNOSLA,LDIST,INDMIN,LPHIR,LVISLA,LTRAMO,
     &             LPROJT,DECAL,LMATS,LMATU,LMATV,LMSM1U,LVSM1U,
     &             NBMOD,LINDMA,LINDSL,INFO,LWORK,JWORK,POSSLA,
     &             POSMAS,INDSLA,INDMAS,LVIMAS
      CHARACTER*8  KBID,MAIL1,MAIL2
      REAL*8       TR1(3),TR2(3),ANG1(3),ANG2(3),ROT1(3,3),ROT2(3,3),
     &             DISMAX,DISMIN,DX,DY,DZ,SWORK
      CHARACTER*24 INT1,INT2,K24BID,TRAMOD 
      
C-----------C
C--       --C      
C-- DEBUT --C      
C--       --C
C-----------C

      CALL JEMARQ()
      
C-- RECUPERATION DES TRANSLATIONS ET ROTATIONS DES INTERFACES
      CALL JENONU(JEXNOM(NOMRES//'      .MODG.SSNO',SST1),IBID)
      CALL JEVEUO(JEXNUM(NOMRES//'      .MODG.SSOR',IBID),
     &            'L',LROT1)
      CALL JENONU(JEXNOM(NOMRES//'      .MODG.SSNO',SST1),IBID)
      CALL JEVEUO(JEXNUM(NOMRES//'      .MODG.SSTR',IBID),
     &            'L',LTRAN1)

      CALL JENONU(JEXNOM(NOMRES//'      .MODG.SSNO',SST2),IBID)
      CALL JEVEUO(JEXNUM(NOMRES//'      .MODG.SSOR',IBID),
     &            'L',LROT2)

      CALL JENONU(JEXNOM(NOMRES//'      .MODG.SSNO',SST2),IBID)
      CALL JEVEUO(JEXNUM(NOMRES//'      .MODG.SSTR',IBID),
     &            'L',LTRAN2)
     
      DO 10 I1=1,3
         ANG1(I1)=ZR(LROT1+I1-1)
         ANG2(I1)=ZR(LROT2+I1-1)
         TR1(I1)=ZR(LTRAN1+I1-1)
         TR2(I1)=ZR(LTRAN2+I1-1)
  10  CONTINUE
      
      CALL ROTATI(ANG1,ROT1)
      CALL ROTATI(ANG2,ROT2)

C------------------------------------------------------------C
C--                                                        --C
C-- RECUPERATION DES COORDONNEES DES NOEUDS DE L'INTERFACE --C
C--                                                        --C
C------------------------------------------------------------C

C-- INTERFACE AMONT DE LA SOUS-STRUCTURE 1
      CALL MGUTDM(NOMRES,SST1,IBID,'NOM_LIST_INTERF',IBID,KBID)
C-- NOEUDS DE LA SOUS STRUCTURE 1      
      CALL MGUTDM(NOMRES,SST1,IBID,'NOM_MAILLAGE',IBID,MAIL1)
      CALL JEVEUO(MAIL1//'.COORDO    .VALE','L',LNOMA1)      
C-- NOMBRE DE NOEUDS DE L'INTERFACE 1
      INT1=KBID//'.IDC_LINO'
      CALL JENONU(JEXNOM(INT1(1:13)//'NOMS',INTF1),IBID)
      CALL JELIRA(JEXNUM(INT1,IBID),'LONMAX',NBNO1,KBID)
      CALL JEVEUO(LINO1,'L',LNO1)
      
C-- INTERFACE AMONT DE LA SOUS-STRUCTURE 2
      CALL MGUTDM(NOMRES,SST2,IBID,'NOM_LIST_INTERF',IBID,KBID)
C-- NOMBRE DE NOEUDS DE L'INTERFACE 2
      INT2=KBID//'.IDC_LINO'
      CALL JENONU(JEXNOM(INT2(1:13)//'NOMS',INTF2),IBID)
      CALL JELIRA(JEXNUM(INT2,IBID),'LONMAX',NBNO2,KBID)
C-- NOEUDS DE LA SOUS STRUCTURE 2    
      CALL MGUTDM(NOMRES,SST2,IBID,'NOM_MAILLAGE',IBID,MAIL2)
      CALL JEVEUO(MAIL2//'.COORDO    .VALE','L',LNOMA2)
      CALL JEVEUO(LINO2,'L',LNO2)

C---------------------------------------------------------------C
C--                                                           --C
C-- TRANSFORMATION GEOM. DES COORD. DES NOEUDS DE L'INTERFACE --C
C--                                                           --C
C---------------------------------------------------------------C
      
C-- ALLOCATION DES VECTEURS DE COORDONNEES
      CALL WKVECT('&&LIPSRB.COORD_INT1','V V R',3*NBNO1,LCOOR1)
      CALL WKVECT('&&LIPSRB.COORD_INT2','V V R',3*NBNO2,LCOOR2)

C-- ROTATION ET TRANSLATION DES NOEUDS
      DO 20 I1=1,NBNO1
        NUMNO=ZI(LNO1+(I1-1))
        DO 30 J1=1,3
           ZR(LCOOR1+(I1-1)*3+J1-1)=TR1(J1)+
     &        ROT1(J1,1)*ZR(LNOMA1+(NUMNO-1)*3)+
     &        ROT1(J1,2)*ZR(LNOMA1+(NUMNO-1)*3+1)+
     &        ROT1(J1,3)*ZR(LNOMA1+(NUMNO-1)*3+2)
  30    CONTINUE
  20  CONTINUE

      DO 40 I1=1,NBNO2
        NUMNO=ZI(LNO2+(I1-1))
        DO 50 J1=1,3
           ZR(LCOOR2+(I1-1)*3+J1-1)=TR2(J1)+
     &        ROT2(J1,1)*ZR(LNOMA2+(NUMNO-1)*3)+
     &        ROT2(J1,2)*ZR(LNOMA2+(NUMNO-1)*3+1)+
     &        ROT2(J1,3)*ZR(LNOMA2+(NUMNO-1)*3+2)
  50    CONTINUE
  40  CONTINUE    

C--------------------------------------------------------------------C
C--                                                                --C
C-- BOUCLE SUR LES NOEUDS ESCLAVES POUR TROUVER LES NOEUDS MAITRES --C
C--                                                                --C
C--------------------------------------------------------------------C

C-- CHOIX DU NOMBRE DE NOEUDS MAITRES
C
C-- PAR DEFAUT, ON EN PREND 5 
      DIMA=5
C-- ON AJUSTE EN FONCTION DE LA DIMENSION DU MAILLAGE      
      IF (IMAST .EQ. 1) THEN
        CALL DISMOI('F','Z_CST',MAIL1,'MAILLAGE',IBID,K24BID,IER)
        IF (K24BID(1:3).EQ.'OUI') DIMA=2
      ELSE
        CALL DISMOI('F','Z_CST',MAIL2,'MAILLAGE',IBID,K24BID,IER)
        IF (K24BID(1:3).EQ.'OUI') DIMA=2
      ENDIF
C-- ET DU NOMBRE DE NOEUDS MAITRES
      IF (IMAST .EQ. 1) THEN
        DIMA=MIN(DIMA,NBNO1)
      ELSE
        DIMA=MIN(DIMA,NBNO2)
      ENDIF

C-- IL FAUDRAIT TESTER QUE, EN 3D, POUR CHAQUE ESCLAVE, LES NOEUDS 
C-- MAITRES NE SONT PAS ALIGNES. 
C-- CF. LA CONSTRUCTION DE LA RELATION DE PROJECTION

C-- ON DUPLIQUE LES POINTEURS POUR MAITRES / ESCLAVES
      IF (IMAST .LE. 1) THEN
        NBMAST=NBNO1
        NBSLAV=NBNO2
        LNOMAS=LCOOR1
        LNOSLA=LCOOR2
        CALL JEVEUO(INDIN1,'L',LINDMA)
        CALL JEVEUO(INDIN2,'L',LINDSL)
      ELSE
        NBMAST=NBNO2
        NBSLAV=NBNO1
        LNOMAS=LCOOR2
        LNOSLA=LCOOR1
        CALL JEVEUO(INDIN2,'L',LINDMA)
        CALL JEVEUO(INDIN1,'L',LINDSL)
      ENDIF      

C-- ALLOCATION DE LA MATRICE DE DEPENDANCES      
      CALL WKVECT('&&LIPSRB.DEPEND_NOEUDS','V V I',NBSLAV*DIMA,LDEPEN)
C-- ALLOCATION DE LA MATRICE DES DISTANCES      
      CALL WKVECT('&&LIPSRB.DIST_NOEUDS','V V R',NBMAST,LDIST)
      
      DO 60 I1=1,NBSLAV
C-- DISTANCE AU NOEUD ESCLAVE COURANT 
        DISMAX=0.D0
        DISMIN=1.D16
        
        DO 70 J1=1,NBMAST
           ZR(LDIST+J1-1)=
     &       (ZR(LNOSLA+(I1-1)*3)-
     &        ZR(LNOMAS+(J1-1)*3))**2+
     &       (ZR(LNOSLA+(I1-1)*3+1)-
     &        ZR(LNOMAS+(J1-1)*3+1))**2+
     &       (ZR(LNOSLA+(I1-1)*3+2)-
     &        ZR(LNOMAS+(J1-1)*3+2))**2
           IF (ZR(LDIST+J1-1) .GT. DISMAX) THEN
             DISMAX=ZR(LDIST+J1-1)
           ENDIF  
           IF (ZR(LDIST+J1-1) .LT. DISMIN) THEN
             DISMIN=ZR(LDIST+J1-1)
             INDMIN=J1
           ENDIF  
  70    CONTINUE 

C-- RECHERCHE DES DIMA PLUS PROCHES VOISINS  
        IF (DIMA .EQ. 1) THEN
          ZI(LDEPEN+I1-1)=INDMIN
        ELSE
          ZI(LDEPEN+(I1-1)*DIMA)=INDMIN
          DO 80 J1=1,DIMA-1
            ZR(LDIST+INDMIN-1)=DISMAX
            DISMIN=DISMAX
            DO 90 K1=1,NBMAST
               IF (ZR(LDIST+K1-1) .LT. DISMIN) THEN
                 DISMIN=ZR(LDIST+K1-1)
                 INDMIN=K1
               ENDIF
  90        CONTINUE
            ZI(LDEPEN+(I1-1)*DIMA+J1)=INDMIN     
  80      CONTINUE
        ENDIF
  60  CONTINUE  

C---------------------------------------------C
C--                                         --C
C-- CONSTRUCTION DES RELATIONS CINEMATIQUES --C
C--                                         --C
C---------------------------------------------C
C--
C-- MATRICE_PHIR CORRESPOND A LA MATRICE D'UN MOUVEMENT DE
C-- CORPS RIGIDE LINEARISE AUTOUR DU NOEUD ESCLAVE
C--
C-- DEP CORRESPOND AUX 6 COMPOSANTES DE DEPLACEMENT / ROTATION
C--         _                       _  _    _
C--        |  1   0   0   0   0   0 | |  DX  |
C--        |  0   1   0   0   0   0 | |  DY  |
C--        |  0   0   1   0   0   0 | |  DZ  |
C-- Q_MAST=|  0  -LZ  LY  1   0   0 | |  DRX | = PHI_RIGI.AMP_GEN_RIGI
C--        |  LZ  0  -LX  0   1   0 | |  DRY |
C--        |_-LY  LX  0   0   0   1_| |_ DRZ_|
C--     
C--   OU DX, DY, DZ, DRX, DRY ET DRZ SONT LES AMPLITUDES DU MODE,
C--   ET LX, LY ET LZ LA DISTANCE ENTRE LE NOEUD COURANT ET LE NOEUD 
C--   ESCLAVE DANS LES DIRECTIONS X, Y ET Z
C--
C-- ON CONSTRUIT CES MATRICES POUR CHAQUE NOEUD MAITRE, ON LES CONCATENE
C-- ET ON CALCULE LA PSEUDO INVERSE QUI PERMET DE PROJETER LES 
C-- MOUVEMENTS D'UN ENSEMBLE DE NOEUD MAITRE SUR LE MOUVEMENT DE CORPS 
C-- RIGIDE MOYEN DU NUAGE DE NOEUDS MAITRES, DE SORTE QUE LE MOUVEMENT 
C-- DES ESCLAVES S'ECRIVE :
C-- 
C--     Q_SLAV = (PHI_RIGIDE)^+ Q_MAST
C-- 
C-- OU ^+  CORRESPOND A LA PSEUDO INVERSE

C-- ALLOCATION DE LA MATRICE PROJETEE
      CALL WKVECT('&&LIPSRB.TR_MOD_MAST_PRO','V V R',DDLSLA*NBMOMA,
     &            LPROJT)

C-- ALLOCATION DES MATRICES DE TRAVAIL TEMPORAIRES
      CALL WKVECT('&&LIPSRB.MAT_PHIR','V V R',DIMA*36,LPHIR)
    
      CALL WKVECT('&&LIPSRB.MAT_S','V V R',6,LMATS)
      CALL WKVECT('&&LIPSRB.MAT_U','V V R',36,LMATU)
      CALL WKVECT('&&LIPSRB.MAT_V','V V R',36*DIMA*DIMA,LMATV)

C-- DESACTIVATION DU TEST FPE
      CALL MATFPE(-1)
      
      CALL DGESVD('A','A',6,6*DIMA,ZR(LPHIR),6,ZR(LMATS),ZR(LMATU),6,
     &              ZR(LMATV),6*DIMA,SWORK,-1,INFO)
      LWORK=INT(SWORK)
      CALL WKVECT('&&LIPSRB.MAT_SVD_WORK','V V R',LWORK,JWORK)
      
      CALL WKVECT('&&LIPSRB.MAT_SM1XUT','V V R',36,LMSM1U) 
      CALL WKVECT('&&LIPSRB.MAT_VXSM1XUT','V V R',36*DIMA,LVSM1U)

C-- CONSTRUCTION DES VECTEURS D'INDICES POUR LES DDL
C--     EN RENUMEROTANT L'INTERFACE DE 1 A DDLMAS/DDLSLA
      POSSLA=1
      POSMAS=1
      CALL WKVECT('&&LIPSRB.IND_INT_MAST','V V I',6*NBMAST,LVIMAS)
      CALL WKVECT('&&LIPSRB.IND_INT_SLAV','V V I',6*NBSLAV,LVISLA)
      DO 65 I1=1,6*NBMAST
        IF (ZI(LINDMA+I1-1) .GT. 0) THEN
          ZI(LVIMAS+I1-1)=POSMAS
          POSMAS=POSMAS+1
        ENDIF  
  65  CONTINUE
      DO 75 I1=1,6*NBSLAV
        IF (ZI(LINDSL+I1-1) .GT. 0) THEN
          ZI(LVISLA+I1-1)=POSSLA
          POSSLA=POSSLA+1
        ENDIF  
  75  CONTINUE
            
C------------------------------C
C--                          --C
C-- PROJECTION DE LA MATRICE --C
C--                          --C
C------------------------------C            
      CALL JEVEUO(TRAMOD,'L',LTRAMO)

      DO 100 I1=1,NBSLAV
C-- INITIALISER A CHAQUE FOIS, PUISQUE LA SVD ECRASE TOUT...      
        DO 85 J1=1,DIMA*36
          ZR(LPHIR+J1-1)=0.D0
  85    CONTINUE

C-- CONSTRUCTION DE LA MATRICE DE CORPS RIGIDE POUR LE NOEUD COURANT
        DO 110 J1=1,DIMA
          NUMNO=ZI(LDEPEN+(I1-1)*DIMA+J1-1)-1
          DX=(ZR(LNOMAS+NUMNO*3)-
     &        ZR(LNOSLA+(I1-1)*3))
          DY=(ZR(LNOMAS+NUMNO*3+1)-
     &        ZR(LNOSLA+(I1-1)*3+1))
          DZ=(ZR(LNOMAS+NUMNO*3+2)-
     &        ZR(LNOSLA+(I1-1)*3+2))
          DECAL=(J1-1)*36
          DO 120 K1=1,6

C-- POUR RECONSTRUIRE LES ROTATIONS, ON GARDE TOUTES LES COMPOSANTES
C-- SI LES NOEUDS DE L'INTERFACE MAITRE PORTENT LES DDL DRX DRY ET DRZ 
C-- (CAS 2D), ET UNIQUEMENT LES TRANSLATIONS SINON (CAS 3D)

C            ZR(LPHIR+DECAL+(K1-1)*7)=1.  
C            ZR(LPHIR+DECAL+(K1-1)*7)=1.-INT((K1-1)/3)
             IF (ZI(LINDMA+6*NUMNO+K1-1) .GT. 0) THEN
               ZR(LPHIR+DECAL+(K1-1)*7)=1.D0
             ELSE
               ZR(LPHIR+DECAL+(K1-1)*7)=0.D0
             ENDIF
             
  120     CONTINUE
          ZR(LPHIR+DECAL+4)=  DZ
          ZR(LPHIR+DECAL+5)= -DY
          ZR(LPHIR+DECAL+9)= -DZ                 
          ZR(LPHIR+DECAL+11)= DX
          ZR(LPHIR+DECAL+15)= DY
          ZR(LPHIR+DECAL+16)=-DX   
  110   CONTINUE
  
C-- CONSTRUCTION DE LA MATRICE D'OBSERVATION    

        CALL DGESVD('A','A',6,6*DIMA,ZR(LPHIR),6,ZR(LMATS),ZR(LMATU),6,
     &              ZR(LMATV),6*DIMA,ZR(JWORK),LWORK,INFO)
            
C-- VOIR A RAJOUTER UN TEST EN FONCTION DE LA DIMENSION DU MAILLAGE,
C-- POUR LE RECOLLEMENT DES INTERFACES
        DO 130 K1=1,6
          DO 140 J1=1,6
C-- TEST SUR LA VALEUR SINGULIERE, POUR LIMITER LES PB DE
C-- CONDITIONNEMENT
              IF (ABS(ZR(LMATS+J1-1)).GT. 1.D-10) THEN        
                ZR(LMSM1U+(K1-1)*6+J1-1)=(1/ZR(LMATS+J1-1))*
     &                                  ZR(LMATU+(J1-1)*6+K1-1)
              ENDIF
  140     CONTINUE
  130   CONTINUE    
                   
        DO 150 K1=1,6
          DO 160 J1=1,6*DIMA
            ZR(LVSM1U+(K1-1)*6*DIMA+J1-1)=0.D0
            DO 170 L1=1,6
              ZR(LVSM1U+(K1-1)*6*DIMA+J1-1)=
     &               ZR(LVSM1U+(K1-1)*6*DIMA+J1-1)+
     &               ZR(LMATV+(J1-1)*6*DIMA+L1-1)*
     &               ZR(LMSM1U+(K1-1)*6+L1-1)
  170       CONTINUE 
  160     CONTINUE
  150   CONTINUE
        
C-- REMPLISSAGE DE LA MATRICE PROJETEE
C-- ON VERIFIE A CHAQUE PASSAGE QUE LES DDL MAITRES
C-- ET ESCLAVES EXISTENT DANS LA DEFINITION DES INTERFACES

        DO 180 J1=1,6
          INDSLA=ZI(LVISLA+(I1-1)*6+J1-1)
          IF (INDSLA .GT. 0) THEN
            DO 190 L1=1,NBMOMA
              ZR(LPROJT+(L1-1)*DDLSLA+INDSLA-1)=0.D0
              DO  200 K1=1,6*DIMA
                NUMNO=ZI(LDEPEN +(I1-1)*DIMA+INT((K1-1)/6))
                INDMAS=ZI(LVIMAS+(NUMNO-1)*6+MOD(K1-1,6))
                IF (INDMAS .GT. 0) THEN
                  ZR(LPROJT+(L1-1)*DDLSLA+INDSLA-1)=
     &            ZR(LPROJT+(L1-1)*DDLSLA+INDSLA-1)+
     &            ZR(LVSM1U+(J1-1)*6*DIMA+K1-1)*
     &            ZR(LTRAMO+(L1-1)*DDLMAS+INDMAS-1)
                ENDIF
  200         CONTINUE
  190       CONTINUE
          ENDIF
  180   CONTINUE
  100 CONTINUE
  
C-- REACTIVATION DU TEST FPE
      CALL MATFPE(1)

C-- SUBSTITUTION DES MODES A PROJETER PAR LES MODES PROJETES
      CALL JEDETR(TRAMOD)
      TRAMOD='&&LIPSRB.TR_MOD_MAST_PRO'

C-- DESTRUCTION DES MATRICES TEMPORAIRES       

      CALL JEDETR('&&LIPSRB.IND_INT_MAST')
      CALL JEDETR('&&LIPSRB.IND_INT_SLAV')
      CALL JEDETR('&&LIPSRB.MAT_PHIR')
      CALL JEDETR('&&LIPSRB.MAT_TRACE_PROJ')
      CALL JEDETR('&&LIPSRB.MAT_S')
      CALL JEDETR('&&LIPSRB.MAT_U')
      CALL JEDETR('&&LIPSRB.MAT_V')
      CALL JEDETR('&&LIPSRB.MAT_SM1XUT')
      CALL JEDETR('&&LIPSRB.MAT_VXSM1XUT')
      CALL JEDETR('&&LIPSRB.MAT_SVD_WORK')
      CALL JEDETR('&&LIPSRB.COORD_INT1')
      CALL JEDETR('&&LIPSRB.COORD_INT2')
      CALL JEDETR('&&LIPSRB.DEPEND_NOEUDS')
      CALL JEDETR('&&LIPSRB.DIST_NOEUDS')

C---------C
C--     --C
C-- FIN --C
C--     --C
C---------C

      CALL JEDEMA()
      END
