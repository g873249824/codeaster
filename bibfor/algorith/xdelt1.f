         SUBROUTINE XDELT1(NUM,NDIM,KSI,JTABAR,S,DELTA)
         IMPLICIT NONE

          REAL*8    KSI
          REAL*8    DELTA,S
          INTEGER   NUM,NDIM,JTABAR

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 20/12/2010   AUTEUR PELLET J.PELLET 
C TOLE CRS_1404
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C              CALCUL DE LA QUANTITE A MINIMISER POUR LE CALCUL
C            DES COORDONNEES DE REFERENCE DU PT MILIEU DE L'ARETE
C
C     ENTREE
C       NUM     : NUMERO DE LA FONCTION A RESOUDRE
C       NDIM    : DIMENSION TOPOLOGIQUE DU MAILLAGE
C       KSI     : COORDONNEES DE REFERENCE DU POINT
C       JTABAR  : COORDONNEES DES 3 NOEUDS DE L'ARETE
C       S       : ABSCISSE CURVILIGNE DU POINT SUR L'ARETE
C
C     SORTIE
C       DELTA  : PREMIERE QUANTITE A MINIMISER
C     ----------------------------------------------------------------
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  ------------------------
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  ------------------------
C
          REAL*8        FCTF,FCTG,FCTH
          REAL*8        DFCTF,DFCTG,DFCTH
          REAL*8        COEF1,COEF2,COEF3,COEF4
          REAL*8        PT1(NDIM),PT2(NDIM),PT3(NDIM)
          REAL*8        MU,D,R8PREM
          REAL*8        BORSUP, BORINF,DERSUP
          INTEGER       I
          CHARACTER*8   TYPFCT
C
C---------------------------------------------------------------------

      BORSUP=0.D0
      BORINF=0.D0
      DERSUP=0.D0

C    CALCUL DE COEF1, COEF2, COEF3, D
      COEF1=0.D0
      COEF2=0.D0
      COEF3=0.D0
      CALL VECINI(NDIM,0.D0,PT1)
      CALL VECINI(NDIM,0.D0,PT2)
      CALL VECINI(NDIM,0.D0,PT3)

      DO 101 I=1, NDIM
        PT1(I)=ZR(JTABAR-1+I)
        PT2(I)=ZR(JTABAR-1+NDIM+I)
        PT3(I)=ZR(JTABAR-1+2*NDIM+I)
 101  CONTINUE

      DO 102 I=1,NDIM
        COEF1 = COEF1 + (PT1(I)-2*PT3(I)+PT2(I))*
     &                                  (PT1(I)-2*PT3(I)+PT2(I))
 102  CONTINUE

      DO 103 I=1,NDIM
        COEF2 = COEF2 + (PT2(I)-PT1(I))*(PT1(I)-2*PT3(I)+PT2(I))
 103  CONTINUE

      DO 104 I=1,NDIM
        COEF3 = COEF3 + (PT2(I)-PT1(I))*(PT2(I)-PT1(I))/4
 104  CONTINUE

      D = COEF2*COEF2 - 4*COEF1*COEF3

      FCTF = 0.D0
      FCTG = 0.D0
      FCTH = 0.D0
      DFCTF = 0.D0
      DFCTG = 0.D0
      DFCTH = 0.D0

      IF(NUM.EQ.1) THEN
C     FCTF : FONCTION ABSCISSE CURVILIGNE POUR COEF1 NE 0 ET D=0
        CALL ASSERT(ABS(COEF1).GT.R8PREM() .AND. ABS(D).LE.R8PREM())
        FCTF = COEF1*KSI*KSI + COEF2*KSI + COEF2-COEF1 -2*S*SQRT(COEF1)
        DFCTF = 2*COEF1*KSI + COEF2
        CALL ASSERT(ABS(DFCTF).GT.R8PREM())
        DELTA = FCTF/DFCTF

      ELSEIF(NUM.EQ.2) THEN
C     FCTG : FONCTION ABSCISSE CURVILIGNE POUR COEF1 NE 0 ET D>0
        CALL ASSERT(ABS(COEF1).GT.R8PREM() .AND. D.GT.R8PREM())
        MU = SQRT(D/(4*COEF1*COEF1))
        COEF4 = MU*MU*SQRT(COEF1)/4
        TYPFCT = 'ACOSH'
        CALL FCTHYP(TYPFCT,(2*COEF1*KSI+COEF2)/(2*COEF1*MU),BORSUP)
        CALL FCTHYP(TYPFCT,(COEF2-2*COEF1)/(2*COEF1*MU),BORINF)
        FCTG =  COEF4*(SINH(2*BORSUP)-2*BORSUP)
     &          - COEF4*(SINH(2*BORINF)-2*BORINF) -S
        TYPFCT = 'DACOSH'
        CALL FCTHYP(TYPFCT,(2*COEF1*KSI+COEF2)/(2*COEF1*MU),DERSUP)
        DFCTG= COEF4*(2/MU)*DERSUP*(COSH(2*BORSUP)-1)
        CALL ASSERT(ABS(DFCTG).GT.R8PREM())
        DELTA = FCTG/DFCTG

      ELSEIF(NUM.EQ.3) THEN
C     FCTH : FONCTION ABSCISSE CURVILIGNE POUR COEF1 NE 0 ET D<0
        CALL ASSERT(ABS(COEF1).GT.R8PREM() .AND. D.LT.R8PREM())
        MU = SQRT(-D/(4*COEF1*COEF1))
        COEF4 = MU*MU*SQRT(COEF1)/4
        TYPFCT = 'ASINH'
        CALL FCTHYP(TYPFCT,(2*COEF1*KSI+COEF2)/(2*COEF1*MU),BORSUP)
        CALL FCTHYP(TYPFCT,(COEF2-2*COEF1)/(2*COEF1*MU),BORINF)
        FCTH =  COEF4*(SINH(2*BORSUP)+2*BORSUP)
     &           - COEF4*(SINH(2*BORINF)+2*BORINF) -S
        TYPFCT = 'DASINH'
        CALL FCTHYP(TYPFCT,(2*COEF1*KSI+COEF2)/(2*COEF1*MU),DERSUP)
        DFCTH= COEF4*(2/MU)*DERSUP*(COSH(2*BORSUP)+1)
        CALL ASSERT(ABS(DFCTH).GT.R8PREM())
        DELTA = FCTH/DFCTH

      ENDIF


      END
