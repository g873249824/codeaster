      SUBROUTINE PIESGV(NEPS,TAU,MAT,VIM,EPSM,EPSP,EPSD,TYPMOD,
     &           ETAMIN,ETAMAX,COPILO)


C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
      CHARACTER*8 TYPMOD
      INTEGER  NEPS, MAT
      REAL*8   TAU,EPSM(NEPS),EPSD(NEPS),EPSP(NEPS),ETAMIN,ETAMAX
      REAL*8   VIM(3),COPILO(2,2)

C ----------------------------------------------------------------------
C     PILOTAGE PRED_ELAS POUR ENDO_SCALAIRE (EN GRAD_VARI)
C ----------------------------------------------------------------------
C
C IN  NEPS    DIMENSION DES DEFORMATIONS (3*NDIM+2)
C IN  MAT     NATURE DU MATERIAU
C IN  VIM     VARIABLES INTERNES EN T-
C IN  EPSM    CHAMP DE DEFORMATION EN T-
C IN  EPSP    INCREMENT FIXE
C IN  EPSD    INCREMENT PILOTE
C IN  ETAMIN  BORNE INF DU PILOTAGE (INUTILISE)
C IN  ETAMAX  BORNE SUP DU PILOTAGE (INUTILISE)
C OUT COPILO  COEFFICIENTS DE PILOTAGE :
C               F := COPILO(1,1)+COPILO(2,1)*ETA = TAU
C               F := COPILO(1,2)+COPILO(2,2)*ETA = TAU
C ----------------------------------------------------------------------
      LOGICAL CPLAN,CROISS,GAUCHE,DROITE
      INTEGER NDIM,NDIMSI,I,N
      REAL*8 COPLAN
      REAL*8 AM,A,DRDA,D1A0,D2A0
      REAL*8 ETAM,ETAP,ETAL,PRECVG
      REAL*8 EP0(6),TREP0,EP0DV(6),GAMEP0,DGADE0(6),PHI0
      REAL*8 EP1(6),TREP1,EP1DV(6),GAMEP1,DGADE1(6),PHI1
      REAL*8 EPM(6),TREPM,EPMDV(6),GAMEPM,DGADEM(6),PHIM,GM,DGM
      REAL*8 EPP(6),TREPP,EPPDV(6),GAMEPP,DGADEP(6),PHIP,GP,DGP
      REAL*8 EPL(6),TREPL,EPLDV(6),GAMEPL,DGADEL(6),PHIL,GL,DGL
      REAL*8 DDOT,LCESVF
C ----------------------------------------------------------------------
C  ITEMAX: NOMBRE MAX D'ITERATIONS POUR LA METHODE DE NEWTON
C  PREC  : VARIATION PREC*DA POUR REPRESENTATIF DE LA CONVERGENCE
C  PREMIN: BORNE INF POUR DA DANS LE CRITERE PRECEDENT
      INTEGER ITEMAX
      REAL*8 PREC,PREMIN
      PARAMETER (PREC=1.D-2,PREMIN=1.D-10,ITEMAX=100)
C ----------------------------------------------------------------------
      REAL*8 LAMBDA,DEUXMU,TROISK,RIGMIN,PC,PR,EPSTH
      COMMON /LCEE/ LAMBDA,DEUXMU,TROISK,RIGMIN,PC,PR,EPSTH
C ----------------------------------------------------------------------
      REAL*8 PK,PM,PP
      COMMON /LCES/ PK,PM,PP
C ----------------------------------------------------------------------
      REAL*8 PCT,PCH,PCS
      COMMON /LCER/ PCH,PCT,PCS
C ----------------------------------------------------------------------

C -- INITIALISATION

      CPLAN  = TYPMOD.EQ.'C_PLAN  '
      NDIM   = (NEPS-2)/3
      NDIMSI = 2*NDIM
      AM     = VIM(1)


C -- LECTURE DES CARACTERISTIQUES MATERIAU

      CALL LCERMA(MAT,'NONE',1,1,'+')


C -- ENDOMMAGEMENT CIBLE

      A = AM+TAU

C    NON PILOTABLE CAR TROP PRES DE L'ENDOMMAGEMENT ULTIME
      IF (A.GE.1) THEN
        CALL R8INIR(4,0.D0,COPILO,1)
        GOTO 9999
      END IF
      DRDA = LCESVF(1,A)


C -- EXTRACTION DES DEFORMATIONS ET DES PARAMETRES NON LOCAUX

      DO 10 I = 1,NDIMSI
        EP0(I) = EPSM(I)+EPSP(I)
        EP1(I) = EPSD(I)
 10   CONTINUE

      IF (CPLAN) THEN
        COPLAN = -LAMBDA / (LAMBDA + DEUXMU)
        EP0(3) = COPLAN*(EP0(1)+EP0(2))
        EP1(3) = COPLAN*(EP1(1)+EP1(2))
      END IF

      CALL LCERVF(0,NDIMSI,EP0,TREP0,EP0DV,GAMEP0,DGADE0)
      CALL LCERVF(0,NDIMSI,EP1,TREP1,EP1DV,GAMEP1,DGADE1)

      PHI0 = EPSM(NDIMSI+2) + PR*EPSM(NDIMSI+1) +
     &       EPSP(NDIMSI+2) + PR*EPSP(NDIMSI+1)
      PHI1 = EPSD(NDIMSI+2) + PR*EPSD(NDIMSI+1)


C -- ESTIMATION DU CRITERE DE CONVERGENCE

      D1A0 = LCESVF(1,0.D0)
      D2A0 = LCESVF(2,0.D0)
      PRECVG = ABS(D2A0/D1A0)*PK*MAX((A-AM),PREMIN)*PREC
C -- RESOLUTION EN FONCTION DES BORNES

      DO 20 I = 1,NDIMSI
        EPM(I) = EP0(I) + ETAMIN*EP1(I)
        EPP(I) = EP0(I) + ETAMAX*EP1(I)
 20   CONTINUE
      CALL LCERVF(1,NDIMSI,EPM,TREPM,EPMDV,GAMEPM,DGADEM)
      CALL LCERVF(1,NDIMSI,EPP,TREPP,EPPDV,GAMEPP,DGADEP)
      PHIM = PHI0+ETAMIN*PHI1
      PHIP = PHI0+ETAMAX*PHI1
      GM = -DRDA*GAMEPM-PK-PR*A+PHIM
      GP = -DRDA*GAMEPP-PK-PR*A+PHIP
      DGM = -DRDA*DDOT(NDIMSI,DGADEM,1,EP1,1)+PHI1
      DGP = -DRDA*DDOT(NDIMSI,DGADEP,1,EP1,1)+PHI1


C 1. NE CONTRIBUE PAS AU PILOTAGE (TOUJOURS SOUS LE SEUIL)

      IF (GM.LE.0 .AND. GP.LE.0) THEN
        CALL R8INIR(4,0.D0,COPILO,1)
        GOTO 9999
      END IF


C 2. BORNES SUPERIEURES AU SEUIL : DOUBLE NEWTON

      IF ( GM.GE.0 .AND. GP.GE.0) THEN

C      INITIALISATION A GAUCHE ET A DROITE
        ETAM = ETAMIN
        ETAP = ETAMAX

        DO 100 N = 1,ITEMAX

C        TEST DE CONVERGENCE
          GAUCHE = ABS(GM).LE.PRECVG
          DROITE = ABS(GP).LE.PRECVG
          IF (GAUCHE.AND.DROITE) GOTO 150

C        ABSENCE DE SOLUTION SI FONCTION AU-DESSUS DE ZERO
          IF (DGM.GE.0 .OR. DGP.LE.0) THEN
            GOTO 9999
          END IF

C        METHODE DE NEWTON A GAUCHE ET A DROITE
          IF (.NOT.GAUCHE) ETAM = ETAM - GM/DGM
          IF (.NOT.DROITE) ETAP = ETAP - GP/DGP

C        CALCUL DE LA FONCTION ET DERIVEE
          IF (.NOT.GAUCHE) THEN
            DO 110 I = 1,NDIMSI
              EPM(I) = EP0(I) + ETAM*EP1(I)
 110        CONTINUE
            CALL LCERVF(1,NDIMSI,EPM,TREPM,EPMDV,GAMEPM,DGADEM)
            PHIM = PHI0+ETAM*PHI1
            GM = -DRDA*GAMEPM-PK-PR*A+PHIM
            DGM = -DRDA*DDOT(NDIMSI,DGADEM,1,EP1,1)+PHI1
          END IF

          IF (.NOT.DROITE) THEN
            DO 120 I = 1,NDIMSI
              EPP(I) = EP0(I) + ETAP*EP1(I)
 120        CONTINUE
            CALL LCERVF(1,NDIMSI,EPP,TREPP,EPPDV,GAMEPP,DGADEP)
            PHIP = PHI0+ETAP*PHI1
            GP = -DRDA*GAMEPP-PK-PR*A+PHIP
            DGP = -DRDA*DDOT(NDIMSI,DGADEP,1,EP1,1)+PHI1
          END IF

 100    CONTINUE

C      ECHEC DE LA RESOLUTION AVEC LE NOMBRE D'ITERATIONS REQUIS
        CALL U2MESS('F','PILOTAGE_83')

C      POST-TRAITEMENT DES SOLUTIONS
 150    CONTINUE
        COPILO(1,1) = TAU+ETAM
        COPILO(2,1) = -1
        COPILO(1,2) = TAU-ETAP
        COPILO(2,2) = 1
        GOTO 9999
      END IF


C 3. BORNES DE PART ET D'AUTRE DU SEUIL --> NEWTON DEPUIS POSITIVE

      IF (GM.GE.0) THEN
        CROISS = .FALSE.
        ETAL = ETAMIN
        GL   = GM
        DGL  = DGM
      ELSE
        CROISS = .TRUE.
        ETAL = ETAMAX
        GL   = GP
        DGL  = DGP
      END IF

      DO 200 N = 1,ITEMAX

C      TEST DE CONVERGENCE
        IF (ABS(GL).LE.PRECVG) GOTO 250

C      METHODE DE NEWTON A GAUCHE ET A DROITE
        ETAL = ETAL - GL/DGL

C      CALCUL DE LA FONCTION ET DERIVEE
        DO 210 I = 1,NDIMSI
          EPL(I) = EP0(I) + ETAL*EP1(I)
 210    CONTINUE
        CALL LCERVF(1,NDIMSI,EPL,TREPL,EPLDV,GAMEPL,DGADEL)
        PHIL = PHI0+ETAL*PHI1
        GL = -DRDA*GAMEPL-PK-PR*A+PHIL
        DGL = -DRDA*DDOT(NDIMSI,DGADEL,1,EP1,1)+PHI1
 200  CONTINUE

C    ECHEC DE LA RESOLUTION AVEC LE NOMBRE D'ITERATIONS REQUIS
      CALL U2MESS('F','PILOTAGE_83')

C    POST-TRAITEMENT DES SOLUTIONS
 250  CONTINUE
      COPILO(1,2)=0
      COPILO(2,2)=0
      IF (CROISS) THEN
        COPILO(1,1) = TAU-ETAL
        COPILO(2,1) = 1
      ELSE
        COPILO(1,1) = TAU+ETAL
        COPILO(2,1) = -1
      END IF

 9999 CONTINUE
      END
