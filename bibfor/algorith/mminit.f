      SUBROUTINE MMINIT(NOMA  ,DEFICO,RESOCO,SDDYNA,VALINC)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/04/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      CHARACTER*8  NOMA
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*19 VALINC(*)
      CHARACTER*19 SDDYNA
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - ALGORITHME)
C
C INITIALISATIONS
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  DEFICO : SD DEFINITION DU CONTACT
C IN  RESOCO : SD RESOLUTION DU CONTACT
C IN  SDDYNA : SD DYNAMIQUE
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      IFM,NIV
      LOGICAL      NDYNLO,LDYNA,CFDISL
      LOGICAL      LCTCC,LTFCM,LXFCM
      CHARACTER*19 DEPGEO,DEPLAM
      CHARACTER*19 VITINI,ACCINI
      CHARACTER*19 DEPMOI,ACCPLU,VITPLU
      CHARACTER*19 XSEUCO,XSEUCP
      CHARACTER*19 XINDCO,XMEMCO,XINDCP,XMEMCP
      CHARACTER*24 TABFIN,ETATCT
      INTEGER      JTABF ,JETAT
      INTEGER      ZTABF ,ZETAT
      INTEGER      CFMMVD,CFDISI
      INTEGER      IPC,NTPC
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> INITIALISATIONS'
      ENDIF
C
C --- FONCTIONNALITES ACTIVEES
C
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
      LTFCM  = CFDISL(DEFICO,'CONT_XFEM_GG')
      LCTCC  = CFDISL(DEFICO,'FORMUL_CONTINUE')
      LXFCM  = CFDISL(DEFICO,'FORMUL_XFEM')
C
C --- PARAMETRES
C
      ZTABF  = CFMMVD('ZTABF')
      ZETAT  = CFMMVD('ZETAT')
      NTPC   = CFDISI(DEFICO,'NTPC'     )
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VALINC,'VALINC','DEPMOI',DEPMOI)
      CALL NMCHEX(VALINC,'VALINC','VITPLU',VITPLU)
      CALL NMCHEX(VALINC,'VALINC','ACCPLU',ACCPLU)
C
C --- MISE A ZERO LAGRANGIENS (LAMBDA TOTAUX)
C
      IF (LTFCM) THEN
        CALL XMISZL(DEPMOI,DEFICO,NOMA  )
      ELSEIF (LCTCC) THEN
        CALL MISAZL(DEPMOI,DEFICO)
        IF (LDYNA) THEN
          CALL MISAZL(ACCPLU,DEFICO)
          CALL MISAZL(VITPLU,DEFICO)
        ENDIF
      ENDIF
C
C --- RETABLISSEMENT DE L ETAT DE CONTACT DU DERNIER PAS CONVERGE
C --- POUR PERMETTRE LE REDECOUPAGE (CF. MMMRES)
C
      IF (.NOT.LXFCM) THEN
        TABFIN = RESOCO(1:14)//'.TABFIN'
        ETATCT = RESOCO(1:14)//'.ETATCT'
        CALL JEVEUO(TABFIN,'E',JTABF)
        CALL JEVEUO(ETATCT,'L',JETAT)
        DO 100 IPC = 1,NTPC
          ZR(JTABF+ZTABF*(IPC-1)+22) = ZR(JETAT-1+ZETAT*(IPC-1)+1)
          ZR(JTABF+ZTABF*(IPC-1)+16) = ZR(JETAT-1+ZETAT*(IPC-1)+2)
          ZR(JTABF+ZTABF*(IPC-1)+17) = ZR(JETAT-1+ZETAT*(IPC-1)+3)
  100   CONTINUE
      ELSE
        XINDCO = RESOCO(1:14)//'.XFIN'
        XMEMCO = RESOCO(1:14)//'.XMEM'
        XINDCP = RESOCO(1:14)//'.XFIP'
        XMEMCP = RESOCO(1:14)//'.XMEP'
        XSEUCO = RESOCO(1:14)//'.XFSE'
        XSEUCP = RESOCO(1:14)//'.XFSP'
        CALL COPISD('CHAMP_GD','V',XINDCP,XINDCO)
        CALL COPISD('CHAMP_GD','V',XMEMCP,XMEMCO)
        CALL COPISD('CHAMP_GD','V',XSEUCP,XSEUCO)
      ENDIF
C
C --- AFIN QUE LE VECTEUR DES FORCES D'INERTIE NE SOIT PAS MODIFIE AU
C --- COURS DE LA BOUCLE DES CONTRAINTES ACTIVES PAR L'APPEL A OP0070
C --- ON LE DUPLIQUE ET ON UTILISE CETTE COPIE FIXE (VITINI,ACCINI)
C
      VITINI = RESOCO(1:14)//'.VITI'
      ACCINI = RESOCO(1:14)//'.ACCI'
      IF (LDYNA) THEN
        CALL COPISD('CHAMP_GD','V',VITPLU,VITINI)
        CALL COPISD('CHAMP_GD','V',ACCPLU,ACCINI)
      END IF
C
C --- SAUVEGARDE DEPLACEMENTS A L'INSTANT MOINS PR BCL GEOMETRIE
C
      DEPGEO = RESOCO(1:14)//'.DEPG'
      CALL COPISD('CHAMP_GD','V',DEPMOI,DEPGEO)
C
C --- SAUVEGARDE DEPLACEMENTS A L'INSTANT MOINS PR BCL FROTTEMENT
C
      DEPLAM = RESOCO(1:14)//'.DEPF'
      CALL COPISD('CHAMP_GD','V',DEPMOI,DEPLAM)
C
C --- INITIALISATION DES CYCLES
C
      IF (LCTCC) THEN
        CALL MMCYCZ(DEFICO,RESOCO)
      ENDIF
C
      CALL JEDEMA()
      END
