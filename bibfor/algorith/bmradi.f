      SUBROUTINE BMRADI(BASMOD,INTF,NOMINT,NUMINT,NBDDL,IVDDL,NBDIF)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT NONE
C
C***********************************************************************
C    P. RICHARD     DATE 25/04/91/
C-----------------------------------------------------------------------
C  BUT:     < BASE MODALE RANG DDL ASSOCIES AUX DEFORMEES INTERFACE >
C
C    RENDRE UN VECTEUR DONNANT LES RANGS DES DDL ASSOCIES AUX DEFORMEES
C   CORRESPONDANT A UNE INTERFACE ( DEFINIE DANS UN CONCEPT DE BASE
C   MODALE) DANS UN CONCEPT BASE MODALE) ASSOCIEES AU DDL D'UNE
C    INTERFACE
C  L'INTERFACE EST DONNEE SOIT PAR SON NOM SOIT PAR SON NUMERO
C
C ARRET AVEC MESSAGE SI DIMENSION EN ENTREE DU VECTEUR EST INSUFFISANTE
C RENVOI LE NOMBRE DE DDL TROUVES SI CELUI CI EST PLUS PETIT QUE CELUI
C  DONNE EN ENTREE
C-----------------------------------------------------------------------
C
C BASMOD   /I/: NOM UTILISATEUR DE LA BASE MODALE OU BLANC
C INTF   /I/: NOM UTILISATEUR DE LA LISTE INTERFACE  OU BLANC
C NOMINT   /I/: NOM DE L'INTERFACE
C NUMINT   /I/: NUMERO DE L'INTERFACE
C NBDDL    /I/: NOMBRE DE RANGS ATTENDUS
C IVDDL    /I/: VECTEUR DES RANGS DES DDL
C NBDIF    /O/: NOMBRE ATTENDU - NOMBRE TROUVE
C
C
C
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM,JEXNOM
C
C
C-----------------------------------------------------------------------
      INTEGER I ,INOE ,IRAN ,IRET ,J ,LLDEEQ ,LLDES
      INTEGER LLNOE ,LLREF ,NBCMP ,NBCPMX ,NBDDL ,NBDIF ,NBEC
      INTEGER NBNOE ,NBNOT ,NEQ ,NUMINT ,NUNOE
C-----------------------------------------------------------------------
      PARAMETER (NBCPMX=300)
      CHARACTER*1 K1BID
      CHARACTER*8 BASMOD,NOMINT,INTF
      CHARACTER*8 K8BID
      CHARACTER*19 NUMDDL
      CHARACTER*24 NOEINT
      CHARACTER*24 VALK(2)
      INTEGER IVDDL(NBDDL),IDEC(NBCPMX)
      INTEGER VALI
C
C-----------------------------------------------------------------------
C
C
      CALL JEMARQ()
      NBDIF=NBDDL
C
C---------------RECUPERATION INTERF_DYNA ET NUME_DDL-----------------
C                 SI DONNEE BASE MODALE OU INTERF_DYNA
C
      IF (BASMOD(1:1).NE.' ') THEN
C
        CALL JEVEUO(BASMOD//'           .REFD','L',LLREF)
        INTF=ZK24(LLREF+4)
        IF(INTF.EQ.'        ') THEN
          VALK (1) = BASMOD
          CALL U2MESG('F', 'ALGORITH12_30',1,VALK,0,0,0,0.D0)
        ENDIF
        NUMDDL=ZK24(LLREF+3)
      ELSE
        IF(INTF(1:1).NE.' ') THEN
          CALL JEVEUO(INTF//'.INTFDY.   .REFE','L',LLREF)
          NUMDDL=ZK24(LLREF+1)
        ELSE
          VALK (1) = BASMOD
          VALK (2) = INTF
          CALL U2MESG('F', 'ALGORITH12_31',2,VALK,0,0,0,0.D0)
        ENDIF
      ENDIF
C
C
C
C------------RECUPERATION DONNEE GRANDEUR SOUS-JACENTE------------------
C
      CALL DISMOI('F','NB_CMP_MAX',INTF,'INTERF_DYNA',NBCMP,K8BID,IRET)
      CALL DISMOI('F','NB_EC',INTF,'INTERF_DYNA',NBEC,K8BID,IRET)
C
C----------------RECUPERATION EVENTUELLE DU NUMERO INTERFACE------------
C
      IF(NUMINT.LT.1) THEN
        IF(NOMINT.EQ.'          ')THEN
          VALK (1) = NOMINT
          VALI = NUMINT
          CALL U2MESG('F', 'ALGORITH12_29',1,VALK,1,VALI,0,0.D0)
        ELSE
          CALL JENONU(JEXNOM(INTF//'.IDC_NOMS',NOMINT),NUMINT)
        ENDIF
      ENDIF
C
C
C-----------RECUPERATION DU NOMBRE DE DDL PHYSIQUES ASSEMBLES-----------
C
C
      CALL DISMOI('F','NB_EQUA',NUMDDL,'NUME_DDL',NEQ,K8BID,IRET)
C
C
C------------RECUPERATION DU NOMBRE DE NOEUD DE L'INTERFACES------------
C
      NOEINT=INTF//'.IDC_LINO'
C
      CALL JELIRA(JEXNUM(NOEINT,NUMINT),'LONMAX',NBNOE,K1BID)
      CALL JEVEUO(JEXNUM(NOEINT,NUMINT),'L',LLNOE)
C
C
C-------------RECUPERATION DU DESCRIPTEUR DES DEFORMEES-----------------
C
      CALL JEVEUO(INTF//'.IDC_DEFO','L',LLDES)
      CALL JELIRA(INTF//'.IDC_DEFO','LONMAX',NBNOT,K1BID)
      NBNOT = NBNOT/(2+NBEC)
C
C----------------RECUPERATION ADRESSE DEEQ------------------------------
C
C----ON AJOUT .NUME POUR OBTENIR LE PROF_CHNO
      NUMDDL(15:19)='.NUME'
      CALL JEVEUO(NUMDDL//'.DEEQ','L',LLDEEQ)
C
C------RECUPERATION DES NUMERO ORDRE DEFORMEES (COLONNES)---------------
C-----ET RANGS DES DDL D'INTERFACE (LIGNES) DANS VECTEUR ASSEMBLE-------
C
C RECUPERATION RANG DDL
C
      DO 20 I=1,NBNOE
        INOE=ZI(LLNOE+I-1)
        NUNOE=ZI(LLDES+INOE-1)
        CALL ISDECO(ZI(LLDES+2*NBNOT+(INOE-1)*NBEC+1-1),IDEC,NBCMP)
        DO 30 J=1,NBCMP
          IF(IDEC(J).GT.0) THEN
            NBDIF=NBDIF-1
            IF(NBDIF.GE.0) THEN
              CALL CHEDDL(ZI(LLDEEQ),NEQ,NUNOE,J,IRAN,1)
              IVDDL(NBDDL-NBDIF)=IRAN
            ENDIF
          ENDIF
 30     CONTINUE
 20   CONTINUE
C
      NBDIF=-NBDIF
C
      CALL JEDEMA()
      END
