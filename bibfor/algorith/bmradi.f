      SUBROUTINE BMRADI(BASMOD,INTF,NOMINT,NUMINT,NBDDL,IVDDL,NBDIF)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 25/11/98   AUTEUR CIBHHGB G.BERTRAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***********************************************************************
C    P. RICHARD     DATE 25/04/91/
C-----------------------------------------------------------------------
C  BUT:     < BASE MODALE RANG DDL ASSOCIES AUX DEFORMEES INTERFACE >
C
C    RENDRE UN VECTEUR DONNANT LES RANGS DES DDL ASSOCIES AUX DEFORMEES
C   CORRESPONDANT A UNE INTERFACE ( DEFINIE DANS UN CONCEPT DE BASE
C   MODALE) DANS UN CONCEPT BASE MODALE) ASSOCIEES AU DDL D'UNE
C    INTERFACE
C  L'INTERFACE EST DONNEE SOIT PAR SON NOM SOIT PAR SON NUMERO
C
C ARRET AVEC MESSAGE SI DIMENSION EN ENTREE DU VECTEUR EST INSUFFISANTE
C RENVOI LE NOMBRE DE DDL TROUVES SI CELUI CI EST PLUS PETIT QUE CELUI
C  DONNE EN ENTREE
C-----------------------------------------------------------------------
C
C BASMOD   /I/: NOM UTILISATEUR DE LA BASE MODALE OU BLANC
C INTF   /I/: NOM UTILISATEUR DE LA LISTE INTERFACE  OU BLANC
C NOMINT   /I/: NOM DE L'INTERFACE
C NUMINT   /I/: NUMERO DE L'INTERFACE
C NBDDL    /I/: NOMBRE DE RANGS ATTENDUS
C IVDDL    /I/: VECTEUR DES RANGS DES DDL
C NBDIF    /O/: NOMBRE ATTENDU - NOMBRE TROUVE
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32 JEXNOM, JEXNUM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      PARAMETER (NBCPMX=300)
      CHARACTER*1 K1BID
      CHARACTER*6      PGC
      CHARACTER*8 BASMOD,NOMINT,INTF
      CHARACTER*8 K8BID
      CHARACTER*19 NUMDDL
      CHARACTER*24 NOEINT
      INTEGER IVDDL(NBDDL),IDEC(NBCPMX)
C
C-----------------------------------------------------------------------
       DATA PGC /'BMRADI'/
C-----------------------------------------------------------------------
C
C
      CALL JEMARQ()
      NBDIF=NBDDL
C
C---------------RECUPERATION INTERF_DYNA ET NUME_DDL-----------------
C                 SI DONNEE BASE MODALE OU INTERF_DYNA
C
      IF (BASMOD(1:1).NE.' ') THEN
        CALL JEVEUO(BASMOD//'           .UTIL','L',LLUTI)
C
        CALL JEVEUO(BASMOD//'           .REFE','L',LLREF)
        INTF=ZK24(LLREF)
        IF(INTF.EQ.'        ') THEN
          CALL UTDEBM('F',PGC,
     &'ARRET SUR BASE MODALE SANS INTERF_DYNA')
          CALL UTIMPK('L',' BASE MODALE  DONNEE --> ',1,BASMOD)
          CALL UTFINM
        ENDIF
        NUMDDL=ZK24(LLREF+1)
      ELSE
        IF(INTF(1:1).NE.' ') THEN
          CALL JEVEUO(INTF//'.INTFDY.   .REFE','L',LLREF)
          NUMDDL=ZK24(LLREF+1)
        ELSE
          CALL UTDEBM('F',PGC,
     &'ARRET SUR MANQUE ARGUMENTS')
          CALL UTIMPK('L',' BASE MODALE  DONNEE --> ',1,BASMOD)
          CALL UTIMPK('L',' INTERF_DYNA  DONNEE --> ',1,INTF)
          CALL UTFINM
        ENDIF
      ENDIF
C
C
C
C------------RECUPERATION DONNEE GRANDEUR SOUS-JACENTE------------------
C
      CALL DISMOI('F','NB_CMP_MAX',INTF,'INTERF_DYNA',NBCMP,K8BID,IRET)
      CALL DISMOI('F','NB_EC',INTF,'INTERF_DYNA',NBEC,K8BID,IRET)
C
C----------------RECUPERATION EVENTUELLE DU NUMERO INTERFACE------------
C
      IF(NUMINT.LT.1) THEN
        IF(NOMINT.EQ.'          ')THEN
          CALL UTDEBM('F',PGC,
     &'PROBLEME ARGUMENTS DE DEFINITION INTERFACE')
          CALL UTIMPK('L',' NOM INTERFACE DONNE',1,NOMINT)
          CALL UTIMPI('L',' NUMERO INTERFACE DONNE',1,NUMINT)
          CALL UTFINM
        ELSE
          CALL JENONU(JEXNOM(INTF//'      .INTD.NOMS',NOMINT),NUMINT)
        ENDIF
      ENDIF
C
C
C-----------RECUPERATION DU NOMBRE DE DDL PHYSIQUES ASSEMBLES-----------
C
C
      CALL DISMOI('F','NB_EQUA',NUMDDL,'NUME_DDL',NEQ,K8BID,IRET)
C
C
C------------RECUPERATION DU NOMBRE DE NOEUD DE L'INTERFACES------------
C
      NOEINT=INTF//'      .INTD.LINO'
C
      CALL JELIRA(JEXNUM(NOEINT,NUMINT),'LONMAX',NBNOE,K1BID)
      CALL JEVEUO(JEXNUM(NOEINT,NUMINT),'L',LLNOE)
C
C
C-------------RECUPERATION DU DESCRIPTEUR DES DEFORMEES-----------------
C
      CALL JEVEUO(INTF//'      .INTD.DEFO','L',LLDES)
      CALL JELIRA(INTF//'      .INTD.DEFO','LONMAX',NBNOT,K1BID)
      NBNOT = NBNOT/(2+NBEC)
C
C----------------RECUPERATION ADRESSE DEEQ------------------------------
C
      CALL JEVEUO(NUMDDL//'.DEEQ','L',LLDEEQ)
C
C------RECUPERATION DES NUMERO ORDRE DEFORMEES (COLONNES)---------------
C-----ET RANGS DES DDL D'INTERFACE (LIGNES) DANS VECTEUR ASSEMBLE-------
C
C RECUPERATION RANG DDL
C
      DO 20 I=1,NBNOE
        INOE=ZI(LLNOE+I-1)
        NUNOE=ZI(LLDES+INOE-1)
        CALL ISDECO(ZI(LLDES+2*NBNOT+(INOE-1)*NBEC+1-1),IDEC,NBCMP)
        DO 30 J=1,NBCMP
          IF(IDEC(J).GT.0) THEN
            NBDIF=NBDIF-1
            IF(NBDIF.GE.0) THEN
              CALL CHEDDL(ZI(LLDEEQ),NEQ,NUNOE,J,IRAN,1)
              IVDDL(NBDDL-NBDIF)=IRAN
            ENDIF
          ENDIF
 30     CONTINUE
 20   CONTINUE
 80   CONTINUE
C
      NBDIF=-NBDIF
C
      CALL JEDEMA()
      END
