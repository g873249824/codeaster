      SUBROUTINE MISAZL(VECINC,DEFICO)
C      
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 14/09/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      CHARACTER*19  VECINC
      CHARACTER*24  DEFICO
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - UTILITAIRE)
C
C MISE A ZERO DES LAGRANGIENS CONTACT/FROTTEMENT DANS VECTEUR INCONNUES
C      
C ----------------------------------------------------------------------
C
C IN  DEFICO : SD DE DEFINITION DU CONTACT
C I/O VECINC : VECTEUR DES INCONNUES
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
      CHARACTER*32       JEXNOM , JEXNUM
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFDISI
      INTEGER      NNOCO ,NTNOE
      INTEGER      INO   ,NBNO  ,NEC   ,NCMPMX,NUMNO
      INTEGER      IBID  ,IER
      INTEGER      JNOCMP,JPRNO ,JNUEQ ,JVALE ,JDG
      INTEGER      INDIK8,NUMLC ,NUMLF1,NUMLF2
      INTEGER      IPOSDG,POSLC ,POSLF1,POSLF2
      INTEGER      INUEQ ,IVALC ,IVALF1,IVALF2
      CHARACTER*4  TYPNO
      CHARACTER*8  NOMGD ,KBID
      CHARACTER*19 PRNO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      NNOCO  = CFDISI(DEFICO,'NNOCO')
      NTNOE  = CFDISI(DEFICO,'NTNOE')
      NBNO   = 0      
C
C --- ACCES AU NOM DE LA GRANDEUR
C
      CALL DISMOI('F','NOM_GD',VECINC,'CHAM_NO',IBID,NOMGD,IER)
C
C --- ACCES AU NOM ET AU NOMBRE DES COMPOSANTES DE LA GRANDEUR
C
      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'L',JNOCMP)
      CALL DISMOI('F','NB_CMP_MAX',NOMGD,'GRANDEUR',NCMPMX,KBID,IER)
C
C --- ACCES AU PROF_CHNO ET AU POINTEUR .NUEQ
C
      CALL DISMOI('F','PROF_CHNO',VECINC,'CHAM_NO',IBID,PRNO,IER)
      CALL JEVEUO(JEXNUM(PRNO//'.PRNO',1),'L',JPRNO)
      CALL JEVEUO(PRNO//'.NUEQ','L',JNUEQ)
C
C --- ACCES AU NOMBRE D'ENTIERS CODES POUR PARCOURIR LE .PRNO
C
      CALL DISMOI('F','NB_EC',NOMGD,'GRANDEUR',NEC,KBID,IER)
C
C --- ACCES AU .VALE DU CHAMP VECINC
C
      CALL JEVEUO(VECINC//'.VALE','E',JVALE)
C
C -- RECHERCHE DES NUMEROS DES COMPOSANTES DANS LA GRANDEUR
C
      NUMLC  = INDIK8(ZK8(JNOCMP),'LAGS_C' ,1,NCMPMX)
      NUMLF1 = INDIK8(ZK8(JNOCMP),'LAGS_F1',1,NCMPMX)
      NUMLF2 = INDIK8(ZK8(JNOCMP),'LAGS_F2',1,NCMPMX)
C
C --- PARCOURS DES NOEUDS ESCLAVES ET ANNULATION DES LAGR. DANS LE .VALE
C
      DO 10 INO = 1,NNOCO
C       NOEUDS ESCLAVES
        CALL CFTYPN(DEFICO,INO   ,TYPNO )
        IF (TYPNO.EQ.'ESCL') THEN
          NBNO   = NBNO+1
C         NUMERO ABSOLU DU NOEUD ESCLAVE
          CALL CFNUMN(DEFICO,1     ,INO   ,NUMNO )
C         DEBUT DU DESCRIPTEUR GRANDEUR DU NOEUD ESCLAVE
          JDG = JPRNO - 1 + (NUMNO-1)*(2+NEC) + 1 + 2
C         POSITIONS DES LAGRANGES DANS LE DG
          POSLC  = IPOSDG(ZI(JDG),NUMLC )
          POSLF1 = IPOSDG(ZI(JDG),NUMLF1)
          POSLF2 = IPOSDG(ZI(JDG),NUMLF2)
C         INDIRECTION VERS LE .NUEQ
          INUEQ = ZI(JPRNO - 1 + (NUMNO-1)*(2+NEC) + 1)
          CALL ASSERT(POSLC.NE.0)
C         ADRESSE DU DDL LAGS_C DANS LE .VALE
          IVALC = ZI(JNUEQ - 1 +  INUEQ - 1 + POSLC)
          ZR(JVALE - 1 + IVALC) = 0.D0 
          IF (POSLF1.NE.0) THEN
C           ADRESSE DU DDL LAGS_F1 DANS LE .VALE
            IVALF1 = ZI(JNUEQ - 1 + INUEQ - 1 + POSLF1)
            ZR(JVALE - 1 + IVALF1) = 0.D0 
            IF (POSLF2.NE.0) THEN
C              ADRESSE DU DDL LAGS_F2 DANS LE .VALE
               IVALF2 = ZI(JNUEQ - 1 + INUEQ - 1 + POSLF2)
               ZR(JVALE - 1 + IVALF2) = 0.D0 
            ENDIF
          ENDIF
        ENDIF  
 10   CONTINUE
      CALL ASSERT(NBNO.EQ.NTNOE)
C      
      CALL JEDEMA()
      END
