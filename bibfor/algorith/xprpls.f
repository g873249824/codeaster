      SUBROUTINE XPRPLS(DNOMO,DNOMA,CNXINV,DCNSLN,DCNSLT,DISFR,NOMO,
     &                  NOMA,CNSLN,CNSLT,GRLN,GRLT,FISS,CORRES,NDIM,
     &                  DAMAX)
      IMPLICIT NONE

      CHARACTER*8    DNOMO,DNOMA,FISS,NOMO,NOMA
      CHARACTER*16   CORRES
      CHARACTER*19   CNXINV,DCNSLN,DCNSLT,CNSLN,CNSLT,GRLN,GRLT,DISFR
      INTEGER        NDIM
      REAL*8         DAMAX

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/08/2009   AUTEUR GENIAUT S.GENIAUT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2009  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT

C     ------------------------------------------------------------------
C
C       XPRPLS   : X-FEM PROPAGATION : PROJECTION DES LEVEL SETS
C       ------     -     --            -              -     -
C
C  DANS LE CADRE DE LA PROPAGATION X-FEM AVEC LA METHODE UPWIND, ON PEUT
C  UTILISER DEUX MAILLAGES DIFFERENTS POUR LE MODELE PHYSIQUE ET POUR LA
C  REPRESENTATION DES LEVEL SETS. DANS CE CAS, ON DOIT PROJECTER
C  LES LEVEL SETS SUR LE MAILLAGE PHYSIQUE A PARTIR DU MAILLAGE UTILISE
C  POUR LA REPRESENTATION DES LEVEL SETS.
C
C  ENTREE
C  ------
C
C    * MODELE POUR LA REPRESENTATION DES LEVEL SETS
C      --------------------------------------------
C     DNOMO  = NOM DU MODELE
C     DNOMA  = NOM DU MAILLAGE
C     CNXINV = CONNECTIVITE INVERSEE DU MAILLAGE DNOMA
C     DCNSLN = CHAMP_NO_S DES VALEURS DE LA LEVEL SET NORMALE
C     DCNSLT = CHAMP_NO_S DES VALEURS DE LA LEVEL SET TANGENTE
C     DISFR  = NOM DU VECTEUR JEVEUX OU LES DISTANCE^2 ENTRE LES NOEUDS
C              DU MAILLAGE DNOMA ET LE FOND DU FISSURE SONT STOCKEES.
C              CE VECTEUR EST DONNE PAR XPRVIT.F.
C
C
C    * MODELE PHYSIQUE
C      ---------------
C     NOMO   = NOM DU MODELE
C     NOMA   = NOME DU MAILLAGE
C     CNSLN  = CHAMP_NO_S DES VALEURS DE LA LEVEL SET NORMALE
C     CNSLT  = CHAMP_NO_S DES VALEURS DE LA LEVEL SET TANGENTE
C     GRLN   = CHAMP_NO_S DES VALEURS DU GRADIENT DE CNSLN
C     GRLT   = CHAMP_NO_S DES VALEURS DU GRADIENT DE CNSLT
C
C
C     FISS   = NOM DU FISSURE AVANT LA PHASE DE MISE A JOUR DES LEVEL
C              SETS
C     CORRES = NOM DU OBJET JEVEUX OU ON PEUT STOCKER LA CORRESPONDANCE
C              ENTRE LES DEUX MAILLAGES
C     NDIM   = DIMENSION DU MODELE (DNOMO OU NOMO)
C     DAMAX  = AVANCEMENT MAXIMAL DE LA FISSURE
C
C
C  SORTIE
C  ------
C     CNSLN  = CHAMP_NO_S DES NOUVELLES VALEURS DE LA LEVEL SET NORMALE
C              POUR LE MODELE PHYSIQUE
C     CNSLT  = CHAMP_NO_S DES NOUVELLES VALEURS DE LA LEVEL SET TANGENTE
C              POUR LE MODELE PHYSIQUE
C     GRLN   = CHAMP_NO_S DES NOUVELLES VALEURS DU GRADIENT DE CNSLN
C              POUR LE MODELE PHYSIQUE
C     GRLT   = CHAMP_NO_S DES NOUVELLES VALEURS DU GRADIENT DE CNSLT
C              POUR LE MODELE PHYSIQUE
C
C     ------------------------------------------------------------------

C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16             ZK16
      CHARACTER*24                      ZK24
      CHARACTER*32                               ZK32
      CHARACTER*80                                        ZK80
      COMMON  /KVARJE/ ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
      CHARACTER*32    JEXNUM,JEXATR,JEXNOM
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------

C     CHARACTERISTICS OF THE MESHES
      INTEGER       DNBNO,DNBMA

C     PROJECTION LEVEL SETS MESH
      REAL*8        RADTOR,RAYON
      CHARACTER*19  ECONS,EFROM
      INTEGER       JECONS,JDISFR,NBELNO,JELNO,NBELPR,JEFROM,JCNLNV,
     &              JCNLTV,JCNLNL,JCNLTL

C     PROJECTION PHYSICAL MESH
      CHARACTER*19  TMPLSN,TMPLST
      INTEGER       JFONF,LONG,NBPTFF,NBNO,JCOOR,JNTO,NUNOPR,
     &              JTMPLT,JTMPLN,LNOFF
      REAL*8        EPS,XM,YM,ZM,XI1,YI1,ZI1,XJ1,YJ1,ZJ1,XIJ,YIJ,
     &              ZIJ,XIM,YIM,ZIM,S,NORM2,XN,YN,ZN,D,DMIN
      CHARACTER*24  TMPFF

C     PROJECTION CODE
      LOGICAL        LDMAX
      REAL*8         DISTMA
      CHARACTER*8    LPAIN(4),LPAOUT(2)
      CHARACTER*19   CNOLS,CELGLS,CHAMS,GRLS
      CHARACTER*24   LCHIN(4),LCHOUT(2),LIGREL

C     GENERAL PURPOSE
      INTEGER       IRET,I,J,IBID
      CHARACTER*8   K8B
      CHARACTER*1   K1BID
      REAL*8        R8MAEM,R8PREM
      INTEGER       IFM,NIV

C-----------------------------------------------------------------------
C     DEBUT
C-----------------------------------------------------------------------
      CALL JEMARQ()
      CALL INFMAJ()
      CALL INFNIV(IFM,NIV)

      IF (NIV.GE.0) THEN
         WRITE(IFM,*)
         WRITE(IFM,*)'   PROJECTION DES LEVEL SETS SUR LE MAILLAGE'//
     &               ' PHYSIQUE'
      ENDIF

C     CALCULATE THE RADIUS OF THE TORUS AROUND THE CRACK FRONT USED TO
C     DETERMINE WHICH NODES MUST BE CONSIDERED FOR THE PROJECTION. THIS
C     VALUE IS EQUAL TO THE RADIUS ENTERED BY THE USER FOR THE
C     ESTIMATION OF THE RESIDUALS + THE MINIMUM EDGE DIMENSION OF THE
C     ELEMENTS IN THE LEVELSET MESH. THIS VALUE IS NOT KNOW BUT THE USER
C     SHOULD USE A VALUE FOR THE RADIUS EQUAL AT LEAST TO THE ELEMENT
C     DIMENSION. THE RADIUS ITSELF CAN THEREFORE BE USED AS A SAFE
C     ESTIMATION.
      CALL GETVR8(' ','RAYON',1,1,1,RAYON,IRET)
      RADTOR = (RAYON+DAMAX)**2

C ----------------------------------------------------------------------
C     LEVEL SETS MESH: RETREIVE THE ELEMENTS THAT MUST BE USED FOR THE
C                      PROJECTION
C ----------------------------------------------------------------------

C     RETRIEVE THE NUMBER OF NODES AND ELEMENTS IN THE MESH
      CALL DISMOI('F','NB_NO_MAILLA',DNOMA,'MAILLAGE',DNBNO,K8B,IRET)
      CALL DISMOI('F','NB_MA_MAILLA',DNOMA,'MAILLAGE',DNBMA,K8B,IRET)

C     RETRIEVE THE DISTANCE OF EACH NODE FROM THE FRONT
      CALL JEVEUO(DISFR,'L',JDISFR)

C     THE NODES OF THE LEVEL SETS MESH THAT ARE INSIDE THE TORUS ARE
C     RETRIEVED. THE ELEMENTS CONTAINING EACH OF THESE NODES ARE
C     STORED.
      ECONS = '&&OP0010.ECONS'
      CALL WKVECT(ECONS,'V V L',DNBMA,JECONS)

      DO 50 I=1,DNBMA
         ZL(JECONS-1+I) = .FALSE.
50    CONTINUE

      DO 100 I=1,DNBNO

         IF (ZR(JDISFR-1+I).LE.RADTOR) THEN

C           THE NODE IS INSIDE THE TORUS. RETRIEVE ALL THE ELEMENTS
C           CONTAINING THIS NODE
            CALL JELIRA(JEXNUM(CNXINV,I),'LONMAX',NBELNO,K8B)
            CALL JEVEUO(JEXNUM(CNXINV,I),'L',JELNO)

            DO 150 J=1,NBELNO
               ZL(JECONS-1+ZI(JELNO-1+J)) = .TRUE.
150         CONTINUE

         ENDIF

100   CONTINUE

C     COUNT THE NUMBER OF ELEMENTS INVOLVED IN THE PROJECTION
      NBELPR = 0

      DO 200 I=1,DNBMA
         IF (ZL(JECONS-1+I)) NBELPR = NBELPR+1
200   CONTINUE

C     STORE THE NUMBER OF THESE ELEMENTS ONLY. THESE INFORMATIONS ARE
C     USED FOR THE PROJECTION
      EFROM = '&&OP0010.EFROM'
      CALL WKVECT(EFROM,'V V I',NBELPR,JEFROM)

      NBELPR = 0

      DO 300 I=1,DNBMA

         IF (ZL(JECONS-1+I)) THEN

            NBELPR = NBELPR + 1
            ZI(JEFROM-1+NBELPR) = I

         ENDIF

300   CONTINUE

      CALL JEDETR(ECONS)

C ----------------------------------------------------------------------
C     PHYSICAL MESH: RETREIVE THE NODES INVOLVED IN THE PROJECTION
C ----------------------------------------------------------------------

C     RETRIEVE THE NUMBER OF NODES AND ELEMENTS IN THE MESH
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNO,K8B,IRET)

C     RETRIEVE THE COORDINATES OF THE NODES
      CALL JEVEUO(NOMA//'.COORDO    .VALE','L',JCOOR)

C     RETRIEVE THE POINTS ON THE CRACK FRONT
      CALL JEVEUO(FISS//'.FONDFISS','L',JFONF)
      CALL JELIRA(FISS//'.FONDFISS','LONMAX',LONG,K1BID)
      NBPTFF=LONG/4

C     CREATE THE VECTOR WHERE THE DISTANCES WILL BE STORED
      CALL WKVECT('&OP0010.DISPH','V V I',NBNO,JNTO)

      XI1 = ZR(JFONF-1+4*(1-1)+1)
      YI1 = ZR(JFONF-1+4*(1-1)+2)
      ZI1 = ZR(JFONF-1+4*(1-1)+3)

      NUNOPR = 0
 
C     EACH NODE OF THE PHYSICAL MESH IS CONSIDERED
      EPS = 1.D-12
      DO 2000 I=1,NBNO

C        COORDINATES OF NODE M
         XM=ZR(JCOOR-1+(I-1)*3+1)
         YM=ZR(JCOOR-1+(I-1)*3+2)
         ZM=ZR(JCOOR-1+(I-1)*3+3)

C        THE PROJECTION IS NEEDED ONLY FOR THE 3D CASE
         IF(NBPTFF.GT.1) THEN
           DMIN = R8MAEM()

C          CONSIDER EACH POINT OF THE CRACK FRONT
           DO 2100 J=1,NBPTFF-1
C            COORD PT I, AND J
             XI1 = ZR(JFONF-1+4*(J-1)+1)
             YI1 = ZR(JFONF-1+4*(J-1)+2)
             ZI1 = ZR(JFONF-1+4*(J-1)+3)
             XJ1 = ZR(JFONF-1+4*(J-1+1)+1)
             YJ1 = ZR(JFONF-1+4*(J-1+1)+2)
             ZJ1 = ZR(JFONF-1+4*(J-1+1)+3)
C            VECTORS IJ AND IM
             XIJ = XJ1-XI1
             YIJ = YJ1-YI1
             ZIJ = ZJ1-ZI1
             XIM = XM-XI1
             YIM = YM-YI1
             ZIM = ZM-ZI1
            
C            PARAM S (PRODUIT SCALAIRE...)
             S   = XIJ*XIM + YIJ*YIM + ZIJ*ZIM
             NORM2 = XIJ*XIJ + YIJ*YIJ + ZIJ*ZIJ
             S     = S/NORM2
C            SI N=P(M) SORT DU SEGMENT
             IF((S-1).GE.EPS) S = 1.D0
             IF(S.LE.EPS)     S = 0.D0
C            COORD DE N
             XN = S*XIJ+XI1
             YN = S*YIJ+YI1
             ZN = S*ZIJ+ZI1
C            DISTANCE MN**2
             D = (XN-XM)*(XN-XM)+(YN-YM)*(YN-YM)+(ZN-ZM)*(ZN-ZM)
             IF(D.LT.DMIN) THEN
               DMIN = D
             ENDIF

2100       CONTINUE

         ELSE

C            2D CASE - ONLY ONE POINT AT THE CRACK TIP!
C            SAVE CPU TIME: THE SQUARE OF THE DISTANCE IS EVALUATED!
             DMIN = (XI1-XM)*(XI1-XM)+(YI1-YM)*(YI1-YM)+
     &              (ZI1-ZM)*(ZI1-ZM)

         ENDIF

         IF (DMIN.LE.RADTOR) THEN
C           THE NODE IS INSIDE THE TORUS AND THEREFORE IT IS STORED.
            NUNOPR = NUNOPR+1
            ZI(JNTO-1+NUNOPR) = I
         ENDIF

2000  CONTINUE

C ----------------------------------------------------------------------
C     PROJECT THE LEVEL SETS
C ----------------------------------------------------------------------

C     PROJECT THE LEVELSETS FROM THE AUXILIARY MESH TO THE PHYSICAL
C     MESH. THE NODAL FIELD IS EXTRAPOLATED OUTSIDE THE AUXILIARY MESH.
      LDMAX = .FALSE.
      DISTMA = R8MAEM()


C     CREATE THE "CONNECTION" TABLE BETWEEN THE PHYSICAL AND AUXILIARY
C     MESHES
      IF (NDIM.EQ.2) THEN
         CALL PJ2DCO('PARTIE',DNOMO,NOMO,NBELPR,ZI(JEFROM),NUNOPR,
     &                ZI(JNTO),' ',' ',CORRES,LDMAX,DISTMA)
      ELSE
         CALL PJ3DCO('PARTIE',DNOMO,NOMO,NBELPR,ZI(JEFROM),NUNOPR,
     &               ZI(JNTO),' ',' ',CORRES,LDMAX,DISTMA)
      ENDIF

C     CREATE TWO TEMPORARY FIELDS WHERE THE PROJECTED VALUES WILL BE
C     STORED
      TMPLSN = '&&OP0010.TMPLSN'
      TMPLST = '&&OP0010.TMPLST'

C     PROJECTION OF THE NORMAL LEVELSET. THE EXISTING FIELD DATA
C     STRUCTURES ARE AUTOMATICALLY DESTROYED BY THE SUBROUTINE "CNSPRJ"
      CALL CNSPRJ(DCNSLN,CORRES,'G',TMPLSN,IBID)
      CALL ASSERT(IBID.EQ.0)

C     PROJECTION OF THE TANGENTIAL LEVELSET. THE EXISTING FIELD DATA
C     STRUCTURES ARE AUTOMATICALLY DESTROYED BY THE SUBROUTINE "CNSPRJ"
      CALL CNSPRJ(DCNSLT,CORRES,'G',TMPLST,IBID)
      CALL ASSERT(IBID.EQ.0)

      CALL JEDETR(CORRES)

C     RETREIVE THE EXISTING NORMAL LEVEL SET FIELD
      CALL JEVEUO(CNSLN//'.CNSV','E',JCNLNV)
      CALL JEVEUO(CNSLN//'.CNSL','E',JCNLNL)

C     RETREIVE THE EXISTING TANGENTIAL LEVEL SET FIELD
      CALL JEVEUO(CNSLT//'.CNSV','E',JCNLTV)
      CALL JEVEUO(CNSLT//'.CNSL','E',JCNLTL)

C     RETREIVE THE TEMPORARY FIELDS WHERE THE PROJECTED VALUES OF THE
C     LEVEL SET HAVE BEEN STORED
      CALL JEVEUO(TMPLSN//'.CNSV','L',JTMPLN)
      CALL JEVEUO(TMPLST//'.CNSV','L',JTMPLT)

C     SUBSTITUTE THE PROJECTED VALUES OF THE LEVEL SETS INTO THE
C     EXISTING LEVEL SET FIELDS ONLY FOR THE NODES IN THE PHYSICAL MESH
C     INVOLVED IN THE PROJECTION
      DO 3000 I=1,NUNOPR

C        SUBSTITUTE THE PROJECTED VALUES OF THE NORMAL LEVEL SET INTO
C        THE EXISTING NORMAL LEVEL SET OF THE PHYSICAL MESH
         ZR(JCNLNV-1+ZI(JNTO-1+I)) = ZR(JTMPLN-1+ZI(JNTO-1+I))
         ZL(JCNLNL-1+ZI(JNTO-1+I)) = .TRUE.

C        SUBSTITUTE THE PROJECTED VALUES OF THE TANGENTIAL LEVEL SET
C        INTO THE EXISTING TANGENTIAL LEVEL SET OF THE PHYSICAL MESH
         ZR(JCNLTV-1+ZI(JNTO-1+I)) = ZR(JTMPLT-1+ZI(JNTO-1+I))
         ZL(JCNLTL-1+ZI(JNTO-1+I)) = .TRUE.

3000  CONTINUE

C     DESTROY THE TEMPORARY PROJECTED LEVEL SETS
      CALL JEDETC(' ',TMPLSN,1)
      CALL JEDETC(' ',TMPLST,1)

C ----------------------------------------------------------------------
C     CALCULATE THE GRADIENTS OF THE LEVEL SETS OF THE PHYSICAL MESH
C ----------------------------------------------------------------------

      IF (NIV.GE.0) THEN
         WRITE(IFM,*)'   CALCUL DES GRADIENTS DES LEVEL SETS SUR LE'//
     &               ' MAILLAGE PHYSIQUE'
      ENDIF

C     NORMAL LEVEL SET
      LIGREL = NOMO//'.MODELE'
      CNOLS = '&&OP0010.GR.CNOLS'
      CELGLS =  '&&OP0010.GR.CELGLS'
      CHAMS =  '&&OP0010.GR.CHAMS'

      CALL CNSCNO(CNSLN,' ','NON','V',CNOLS,'F',IBID)
      LPAIN(1)='PGEOMER'
      LCHIN(1)=NOMA//'.COORDO'
      LPAIN(2)='PNEUTER'
      LCHIN(2)=CNOLS
      LPAOUT(1)='PGNEUTR'
      CELGLS =  '&&OP0010.GR.CELGLS'
      LCHOUT(1)=CELGLS

      CALL CALCUL('S','GRAD_NEUT_R',LIGREL,2,LCHIN,LPAIN,1,LCHOUT,
     &             LPAOUT,'V')

      CALL CELCES (CELGLS, 'V', CHAMS)
      CALL CESCNS (CHAMS, ' ', 'V', GRLN)

      CALL JEDETC(' ',CNOLS,1)
      CALL JEDETC(' ',CELGLS,1)
      CALL JEDETC(' ',CHAMS,1)

C     TANGENTIAL LEVEL SET
      CALL CNSCNO(CNSLT,' ','NON','V',CNOLS,'F',IBID)
      LPAIN(1)='PGEOMER'
      LCHIN(1)=NOMA//'.COORDO'
      LPAIN(2)='PNEUTER'
      LCHIN(2)=CNOLS
      LPAOUT(1)='PGNEUTR'
      CELGLS =  '&&OP0010.GR.CELGLS'
      LCHOUT(1)=CELGLS

      CALL CALCUL('S','GRAD_NEUT_R',LIGREL,2,LCHIN,LPAIN,1,LCHOUT,
     &             LPAOUT,'V')

      CALL CELCES (CELGLS, 'V', CHAMS)
      CALL CESCNS (CHAMS, ' ', 'V', GRLT)

      CALL JEDETC(' ',CNOLS,1)
      CALL JEDETC(' ',CELGLS,1)
      CALL JEDETC(' ',CHAMS,1)

C-----------------------------------------------------------------------
C     FIN
C-----------------------------------------------------------------------
      CALL JEDEMA()
      END
