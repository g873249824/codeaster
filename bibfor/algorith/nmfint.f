      SUBROUTINE NMFINT (MODELE, NUMEDD, MATE  , CARELE, COMREF,
     &                   COMPOR, LISCHA, CARCRI, POUGD , ITERAT,
     &                   MODEDE, NUMEDE, SOLVDE, PARMET, PARCRI,
     &                   VALMOI, DEPDEL, RESOCZ, VALPLU, CNRESI,
     &                   CNDIRI, LICCVG, OPTIOZ, CONV,   STADYN,
     &                   DEPENT, VITENT)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/01/2006   AUTEUR MABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_21

      IMPLICIT NONE
      INTEGER       LICCVG
      INTEGER       ITERAT
      REAL*8        PARMET(*), PARCRI(*), CONV(*)
      CHARACTER*(*) RESOCZ, OPTIOZ
      CHARACTER*8   MODEDE
      CHARACTER*14  RESOCO
      CHARACTER*16  OPTION
      CHARACTER*19  LISCHA, CNRESI, CNDIRI, SOLVDE
      CHARACTER*24  MODELE, NUMEDD, MATE, CARELE, COMPOR, COMREF, CARCRI
      CHARACTER*24  VALMOI, POUGD , DEPDEL, VALPLU, STADYN
      CHARACTER*24  DEPENT, VITENT, NUMEDE

C ----------------------------------------------------------------------
C
C STAT_NON_LINE : INTEGRATION DE LA LOI DE COMPORTEMENT
C                 CALCUL DES FORCES INTERIEURES ET DES REACTIONS D'APPUI
C
C ----------------------------------------------------------------------
C
C     IN   MODELE : NOM DU MODELE
C     IN   NUMEDD : NOM DE LA NUMEROTATION
C     IN   MATE   : NOM DU CHAMP DE MATERIAU
C     IN   CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C     IN   COMREF : VALEURS DE REF DES VARIABLES DE COMMANDE
C     IN   COMPOR : CARTE DECRIVANT LE TYPE DE COMPORTEMENT
C     IN   LISCHA : SD L_CHARGES
C     IN   CARCRI : CARTE DES CRITERES DE CONVERGENCE LOCAUX
C     IN   POUGD  : TABLEAU DE K24 CONTENANT LES NOMS DES OBJETS
C     IN   ITERAT : NUMERO DE L'ITERATION DE NEWTON
C     IN   VALMOI : VARIABLES EN T-
C     IN   DEPDEL : INCR. DE DEPLACEMENT DEPUIS L'INSTANT PRECEDENT
C                  RELATIFS AUX POUTRES EN GRANDS DEPL.
C     IN   RESOCO : SD DE RESOLUTION POUR LE CONTACT ET/OU LE FROTTEMENT
C     VAR  VALPLU : VARIABLES EN T+
C IN/JXOUT CNRESI : "RESIDU" = FINT + BT.LAMBDA + AT.MU
C IN/JXOUT CNDIRI :                   BT.LAMBDA + AT.MU
C     OUT  LICCVG : CODE RETOUR DE L'INTEGRATION DU COMPORTEMENT
C                    =  0 : CAS DE FONCTIONNEMENT NORMAL
C                    =  1 : ECHEC DE L'INTEGRATION DE LA LDC
C                    =  3 : SIZZ PAS NUL POUR C_PLAN DEBORST
C IN       OPTION : 'RAPH_MECA' OU 'FULL_MECA' (A DISPARAITRE)
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR,LICOEF(2)
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------


      INTEGER      NEQ, ICONTA, JRESI, JDIRI, JATMU, JAFMU, I,IRET
      LOGICAL      TABRET(0:10)
      CHARACTER*8  K8BID,LIVEL(2)
      CHARACTER*19 K19BID
      CHARACTER*24 VERESI, VEDIRI, MERIGI

      DATA MERIGI         /'&&MEMRIG.LISTE_RESU'/
      DATA VERESI,VEDIRI  /'&&RESIDU.LISTE_RESU','&&DIRICH.LISTE_RESU'/

C REMARQUE : POUR LE NOM DE MERIGI, CF. ROUTINE NMMATR.

C-----------------------------------------------------------------------


      CALL JEMARQ()
      RESOCO = RESOCZ
      OPTION = OPTIOZ

C -- LOI DE COMPORTEMENT NON LOCALE

      IF (MODEDE .NE. ' ') THEN
        CALL DELAGR(MODEDE, NUMEDE, MATE,   COMREF, COMPOR,
     &              SOLVDE, PARMET, PARCRI, CARCRI, ITERAT,
     &              VALMOI, DEPDEL, VALPLU, CONV,   LICCVG)
        IF (LICCVG.EQ.1) GOTO 9999
      END IF


C --- FORCES INTERIEURES ET REACTIONS D'APPUI ELEMENTAIRES

      CALL MERIMO (MODELE, CARELE, MATE  , COMREF, COMPOR,
     &             LISCHA, CARCRI, DEPDEL, POUGD , STADYN,
     &             DEPENT, VITENT, VALMOI, VALPLU, OPTION,
     &             MERIGI, VERESI, VEDIRI, ITERAT+1, TABRET )
      LICCVG = 0
      IF (TABRET(0)) THEN
         IF ( TABRET(3) ) THEN
             LICCVG = 3
         ELSE
             LICCVG = 1
         ENDIF
         IF ( TABRET(1) ) THEN
             LICCVG = 1
         ENDIF
      ENDIF

C --- ASSEMBLAGE DES RESIDUS
      CALL JEEXIN('&&CFMMEL.LISTE_RESU',IRET)

      IF (IRET.GT.0) THEN
      LIVEL(1)=VERESI
      LIVEL(2)='&&CFMVEL'
      LICOEF(1)=1.D0
      LICOEF(2)= 1.D0

      CALL ASSVEC('V',CNRESI,2,LIVEL,LICOEF,NUMEDD,' ','ZERO',1)

      LIVEL(1)=VEDIRI
      LIVEL(2)='&&CFMVEL'
      LICOEF(1)=1.D0
      LICOEF(2)= 1.D0
      CALL ASSVEC('V',CNDIRI,2,LIVEL,LICOEF,NUMEDD,' ','ZERO',1)
      ELSE
      LIVEL(1)=VERESI
      LICOEF(1)=1.D0
      CALL ASSVEC('V',CNRESI,1,LIVEL,LICOEF,NUMEDD,' ','ZERO',1)

      LIVEL(1)=VEDIRI
      LICOEF(1)=1.D0
      CALL ASSVEC('V',CNDIRI,1,LIVEL,LICOEF,NUMEDD,' ','ZERO',1)
      ENDIF

C --- PRISE EN COMPTE DES FORCES DE FROTTEMENT
      IF (IRET.GT.0)  GOTO 12
      CALL JEEXIN(RESOCO // '.AFMU', ICONTA)
      IF (ICONTA.NE.0) THEN
        CALL JEVEUO (CNRESI // '.VALE','E',JRESI)
        CALL JEVEUO (CNDIRI // '.VALE','E',JDIRI)
        CALL JEVEUO (RESOCO // '.AFMU','L',JAFMU)
        CALL JELIRA (CNRESI // '.VALE','LONMAX',NEQ,K8BID)

        DO 10 I = 0, NEQ-1
          ZR(JRESI+I) =  ZR(JRESI+I) +  ZR(JAFMU+I)
          ZR(JDIRI+I) =  ZR(JDIRI+I) +  ZR(JAFMU+I)
 10     CONTINUE
      ENDIF
 12   CONTINUE

9999  CONTINUE
      CALL JEDEMA()
      END
