      SUBROUTINE AJLIPA(NOMO,BASE)
      IMPLICIT   NONE
      CHARACTER*(*) NOMO
      CHARACTER*1 BASE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 16/02/2010   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2009  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PELLET J.PELLET
C ----------------------------------------------------------
C  BUT :
C     CREATION EVENTUELLE D'UNE SD_PARTITION DANS UN MODELE
C ----------------------------------------------------------

C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX --------------------

      CHARACTER*19 LIGR19
      CHARACTER*8 MODELE,PARTIT


      INTEGER I,RANG,NBPROC,IFM,NIV,IBID,JLGRF,ISD,NBSD,NBMA,JMAIL
      INTEGER IDD,NBMASD,I2,NMPP,NMP0,NMP0AF,ICO,NBPRO1,KRANG,NMP1,IEXI
      INTEGER ICOBIS,JFDIM,DIST0,JNUMSD,JSDMPI,JFETA,VALI(3),NBMAMO,IMA
      CHARACTER*19 SDFETI
      CHARACTER*24 K24B,KDIS
      CHARACTER*32 JEXNUM
      REAL*8 RBID
      LOGICAL LMPI,LSD,PLEIN0
      DATA K24B /' '/
C------------------------------------------------------------------
      CALL JEMARQ()
      CALL INFNIV(IFM,NIV)

      MODELE=NOMO
      LIGR19=MODELE//'.MODELE'
      CALL JEVEUO(LIGR19//'.LGRF','E',JLGRF)



C     -- S'IL EXISTE DEJA UNE PARTITION, ON LA DETRUIT :
C     ---------------------------------------------------
      PARTIT=ZK8(JLGRF-1+2)
      IF (PARTIT.NE.' ') THEN
        CALL DETRSD('PARTITION',PARTIT)
        ZK8(JLGRF-1+2)=' '
      ENDIF


C     -- S'IL N'A QU'UN SEUL PROC, IL N'Y A RIEN A FAIRE :
C     -----------------------------------------------------
      NBPROC=1
      RANG=0
      CALL MPICM0(RANG,NBPROC)
      LMPI=(NBPROC.GT.1)
      IF (.NOT.LMPI) GOTO 70


C     -- SI LE MODELE N'A PAS DE MAILLES, IL N'Y A RIEN A FAIRE :
C     -----------------------------------------------------
      CALL JEEXIN(MODELE//'.MAILLE',IEXI)
      IF (IEXI.EQ.0) GOTO 70


C     -- SI L'UTILISATEUR NE VEUT PAS DE DISTRUTION DES CALCULS,
C        IL N'Y A RIEN A FAIRE :
C     -----------------------------------------------------
      CALL GETVTX('PARTITION','PARALLELISME',1,1,1,KDIS,IBID)
      IF (KDIS.EQ.'CENTRALISE') GOTO 70



      CALL GCNCON('_',PARTIT)
      ZK8(JLGRF-1+2)=PARTIT


      CALL GETVIS('PARTITION','CHARGE_PROC0_MA',1,1,1,DIST0,IBID)
      CALL GETVIS('PARTITION','CHARGE_PROC0_SD',1,1,1,DIST0,IBID)
      CALL GETVID('PARTITION','PARTITION',1,1,1,SDFETI,ISD)
      LSD=(ISD.EQ.1)
      IF (LSD) CALL ASSERT(KDIS.EQ.'SOUS_DOMAINE')






      IF (LSD) THEN
C     -----------------------------------------------
        CALL JEVEUO(SDFETI//'.FDIM','L',JFDIM)
        NBSD=ZI(JFDIM-1+1)
        IF (NBPROC.GT.1) THEN
C           IL FAUT AU MOINS UN SD PAR PROC HORS PROC0
          IF (((NBSD-DIST0).LT.(NBPROC-1)) .AND.
     &        (DIST0.GT.0)) CALL U2MESS('F','ALGORITH16_99')
          IF ((NBSD.LT.NBPROC) .AND. (DIST0.EQ.0)) THEN
            VALI(1)=RANG
            CALL U2MESI('F','ALGORITH17_1',1,VALI)
          ENDIF
        ELSEIF (NBPROC.EQ.1) THEN
          DIST0=0
        ENDIF
      ENDIF


C     ALLOCATION DE L'OBJET 'SD_PARTITION.NUPROC.MAILLE'
C     -----------------------------------------
      CALL JEVEUO(MODELE//'.MAILLE','L',JMAIL)
      CALL JELIRA(MODELE//'.MAILLE','LONMAX',NBMA,K24B)
      CALL WKVECT(PARTIT//'.NUPROC.MAILLE','G V I',NBMA+1,JNUMSD)
      ZI(JNUMSD-1+NBMA+1)=NBPROC

C     NBMAMO : NBRE DE MAILLES DU MODELE
      NBMAMO=0
      DO 10 IMA=1,NBMA
        ZI(JNUMSD-1+IMA)=-999
        IF (ZI(JMAIL-1+IMA).NE.0)NBMAMO=NBMAMO+1
   10 CONTINUE


      IF (LSD) THEN
C     ----------------------------------------
        CALL MUMMPI(0,IFM,NIV,K24B,NBSD,DIST0)
        CALL JEVEUO('&MUMPS.LISTE.SD.MPI','L',JSDMPI)
        DO 30 IDD=1,NBSD
          IF (ZI(JSDMPI+IDD).EQ.1) THEN
            CALL JEVEUO(JEXNUM(SDFETI//'.FETA',IDD),'L',JFETA)
            CALL JELIRA(JEXNUM(SDFETI//'.FETA',IDD),'LONMAX',NBMASD,
     &                  K24B)
            DO 20 I=1,NBMASD
              I2=ZI(JFETA-1+I)
              IF (ZI(JNUMSD-1+I2).NE.-999) THEN
C                 -- MAILLE COMMUNE A PLUSIEURS SOUS-DOMAINES
                VALI(1)=I2
                CALL U2MESI('F','ALGORITH16_98',1,VALI)
              ELSE
                ZI(JNUMSD-1+I2)=RANG
              ENDIF
   20       CONTINUE
          ENDIF
   30   CONTINUE
        CALL MPICM1('MPI_MAX','I',NBMA,ZI(JNUMSD),RBID)
        CALL JEDETR('&MUMPS.LISTE.SD.MPI')


      ELSEIF (KDIS.EQ.'MAIL_DISPERSE') THEN
C     ----------------------------------------
C       -- LE PROC 0 A UNE CHARGE DIFFERENTE DES AUTRES (DIST0) :
C       NMPP NBRE DE MAILLES PAR PROC (A LA LOUCHE)
        CALL ASSERT(NBPROC.GT.0)
        NMPP=MAX(1,NBMAMO/NBPROC)
C       NMP0 NBRE DE MAILLES AFFECTEES AU PROC0 (A LA LOUCHE)
        NMP0=(DIST0*NMPP)/100

C       -- AFFECTATION DES MAILLES AUX DIFFERENTS PROCS :
        NMP0AF=0
        ICO=0
        NBPRO1=NBPROC
        PLEIN0=.FALSE.
        IF (NBPROC.EQ.1) NMP0=NBMAMO
        DO 40,IMA=1,NBMA
          IF (ZI(JMAIL-1+IMA).EQ.0)GOTO 40
          ICO=ICO+1
          KRANG=MOD(ICO,NBPRO1)
          IF (PLEIN0)KRANG=KRANG+1
          IF (KRANG.EQ.0)NMP0AF=NMP0AF+1
          ZI(JNUMSD-1+IMA)=KRANG
          IF (NMP0AF.EQ.NMP0) THEN
            PLEIN0=.TRUE.
            NBPRO1=NBPROC-1
          ENDIF
   40   CONTINUE


      ELSEIF (KDIS.EQ.'MAIL_CONTIGU') THEN
C       ----------------------------------------
        CALL ASSERT(NBPROC.GT.0)
C       NMP0 NBRE DE MAILLES AFFECTEES AU PROC0 :
        NMPP=MAX(1,NBMAMO/NBPROC)
        NMP0=(DIST0*NMPP)/100
        IF (NBPROC.EQ.1) THEN
          NMP0=NBMAMO
          NMP1=0
        ELSE
          NMP1=((NBMAMO-NMP0)/(NBPROC-1))+1
        ENDIF

C       -- AFFECTATION DES MAILLES AUX DIFFERENTS PROCS :
C          ON AFFECTE LES 1ERES MAILLES AU PROC0 PUIS LES AUTRES
C          AUX AUTRES PROCS.
        NMPP=NMP0
        KRANG=0
        ICO=0
        DO 50,IMA=1,NBMA
          IF (ZI(JMAIL-1+IMA).EQ.0)GOTO 50
          ICO=ICO+1
C         -- ON CHANGE DE PROC :
          IF (ICO.GT.NMPP) THEN
            ICO=1
            NMPP=NMP1
            KRANG=KRANG+1
          ENDIF
          ZI(JNUMSD-1+IMA)=KRANG
   50   CONTINUE



C       -- ON VERIFIE QUE TOUTES LES MAILLES SONT DISTRIBUEES :
        ICO=0
        ICOBIS=0
        DO 60 I=1,NBMA
          IF (ZI(JNUMSD-1+I).GE.0)ICO=ICO+1
          IF (ZI(JNUMSD-1+I).EQ.RANG)ICOBIS=ICOBIS+1
   60   CONTINUE
        CALL ASSERT(ICO.EQ.NBMAMO)
      ENDIF




   70 CONTINUE

      CALL JEDEMA()
      END
