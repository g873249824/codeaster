      SUBROUTINE VPZBAB(N,IBAS,LHI,M,D,ZVPS,IZ)
C
C***********************************************************************
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 01/03/2000   AUTEUR DURAND C.DURAND 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C***********************************************************************
C     PROCEDURE BALBAK
C     (CF. WILKINSON & REINSCH LINEAR ALGEBRA PP.321-322)
C     TRANSFORMATION INVERSE D UN ENSEMBLE DE VECTEURS PROPRES A DROITE
C     D UNE MATRICE CONDITIONNEE, EN VECTEURS PROPRES DE LA MATRICE  
C     INITIALE A PARTIR DE LAQUELLE LA MATRICE CONDITIONNEE A ETE
C     CALCULEE PAR UN APPEL A LA ROUTINE VPZBAA (OU VPZBAL).
C
C
C --- DECLARATIONS
C
      IMPLICIT NONE
C
C ARGUMENTS
C ---------
      INTEGER N, IBAS, LHI, M, IZ
      REAL*8 D(N), ZVPS(IZ,M)
C
C VARIABLES LOCALES
C -----------------
      INTEGER I, II, J, K, LHI1, IBAS1
      REAL*8 S
C
C
C***********************************************************************
C                     DEBUT DU CODE EXECUTABLE 
C***********************************************************************
C
C
      IF (IBAS.LE.LHI) THEN
       DO 40 I = IBAS, LHI
         S = D(I)
C
C LES VECTEURS PROPRES A GAUCHE SUBISSENT LA TRANSFORMATION INVERSE
C SI L INSTRUCTION PRECEDENTE EST REMPLACEE PAR S=1/D(I)
C
         DO 20 J = 1, M
            ZVPS(I,J) = ZVPS(I,J)*S
   20    CONTINUE
C
   40  CONTINUE
      ENDIF
C
      I = IBAS
      IBAS1 = IBAS - 1
      IF (IBAS1.GE.1) THEN
       DO 100 II = 1, IBAS1
         I = I - 1
         K = NINT(D(I))
C
         IF (K.NE.I) THEN
          DO 80 J = 1, M
            S = ZVPS(I,J)
            ZVPS(I,J) = ZVPS(K,J)
            ZVPS(K,J) = S
   80     CONTINUE
         ENDIF
C
  100  CONTINUE
      ENDIF
C
      LHI1 = LHI + 1
      IF (LHI1.GT.N) GO TO 9999
C
      DO 160 I = LHI1, N
         K = NINT(D(I))
C
         IF (K.NE.I) THEN
          DO 140 J = 1, M
            S = ZVPS(I,J)
            ZVPS(I,J) = ZVPS(K,J)
            ZVPS(K,J) = S
  140     CONTINUE
         ENDIF
C
  160 CONTINUE
C
 9999 CONTINUE
      END
