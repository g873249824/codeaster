      SUBROUTINE RECMOD ( MODMEC, NBMODE, NBAMOR, BANDE,
     &                    TYMMEC, GRDMOD )
      IMPLICIT   NONE
      INTEGER             NBMODE, NBAMOR
      REAL*8              BANDE(2)
      CHARACTER*8         MODMEC, TYMMEC
      CHARACTER*16        GRDMOD
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 29/09/2006   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C  BUT: RECUPERER LES INFORMATIONS DE TYPE MODE DYNAMIQUE POUR
C        LE CALCUL DYNAMIQUE ALEATOIRE
C
C OUT : MODMEC : NOMBRE DE MODES DYNAMIQUES UTILISES DANS LE CALCUL
C OUT : NBMODE : NOMBRE DE MODES DYNAMIQUES UTILISES DANS LE CALCUL
C OUT : NBAMOR : NOMBRE D AMORTISSEMENTS MODAUX DONNES
C OUT : BANDE  : LES DEUX BORNES DE L INTERVALLE DE FREQUENCES
C OUT : TYMMEC : TPYE R OU C POUR LES MODES MECAS
C OUT : GRDMOD : TYPE DE GRANDEUR A RECUPERER DANS LES MODES DYN ET STA
C-----------------------------------------------------------------------
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
      INTEGER         ZI
      COMMON  /IVARJE/ZI(1)
      REAL*8          ZR
      COMMON  /RVARJE/ZR(1)
      COMPLEX*16      ZC
      COMMON  /CVARJE/ZC(1)
      LOGICAL         ZL
      COMMON  /LVARJE/ZL(1)
      CHARACTER*8     ZK8
      CHARACTER*16            ZK16
      CHARACTER*24                     ZK24
      CHARACTER*32                              ZK32
      CHARACTER*80                                       ZK80
      COMMON  /KVARJE/ZK8(1), ZK16(1), ZK24(1), ZK32(1), ZK80(1)
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      INTEGER       IBID, NBTROU, NBMOD1, LNUMOR, ILMODE, IAD, IMOD1,
     &              IM, IRET, IADRMG, ILAMOD, ILAMOR, NA1, NA2
      REAL*8        RBID, FREQ1, AMUNIF
      COMPLEX*16    C16B
      CHARACTER*8   K8B
      CHARACTER*24  NOMCHA
C     ------------------------------------------------------------------
C
      CALL JEMARQ()
C
C-----MODES RETENUS
C
      CALL GETVID ( 'BASE_MODALE', 'MODE_MECA', 1,1,1, MODMEC, IBID )
C
      CALL RSORAC ( MODMEC, 'LONUTI', IBID, RBID, K8B, C16B, 0.0D0,
     &                                      K8B, NBMOD1, 1, NBTROU )
      CALL WKVECT('&&RECMOD.NUMERO.ORDRE','V V I', NBMOD1, LNUMOR )
      CALL RSORAC ( MODMEC, 'TOUT_ORDRE', IBID, RBID, K8B, C16B, 0.0D0,
     &                                K8B, ZI(LNUMOR), NBMOD1, NBTROU )
C
      CALL GETVIS ( 'BASE_MODALE', 'NUME_ORDRE', 1,1,0, IBID, NBMODE )
      NBMODE = -NBMODE
      IF ( NBMODE .EQ. 0 ) THEN
         CALL GETVR8 ( 'BASE_MODALE', 'BANDE', 1,1,2, BANDE, IBID )
         CALL WKVECT ( '&&OP0131.LISTEMODES', 'V V I', NBMOD1, ILMODE )
         DO 126 IM = 1 , NBMOD1
            IMOD1 = ZI(LNUMOR+IM-1)
            CALL RSADPA ( MODMEC, 'L',1, 'FREQ', IMOD1, 0, IAD, K8B )
            FREQ1 = ZR(IAD)
            IF ( (FREQ1-BANDE(1))*(FREQ1-BANDE(2)) .LE. 0.D0 ) THEN
               NBMODE = NBMODE + 1
               ZI(ILMODE-1+NBMODE) = IMOD1
            ENDIF
 126     CONTINUE
         IF ( NBMODE .EQ. 0 ) THEN
            CALL U2MESS('F','ALGORITH10_31')
         ENDIF
      ELSE
         CALL WKVECT ( '&&OP0131.LISTEMODES', 'V V I', NBMODE, ILMODE )
         CALL GETVIS ( 'BASE_MODALE', 'NUME_ORDRE', 1,1,NBMODE,
     &                                              ZI(ILMODE), IBID )
         DO 232 IM = 1 , NBMODE
            IF ( ZI(ILMODE-1+IM) .GT. NBMOD1 ) THEN
               CALL U2MESS('F','ALGORITH10_32')
            ENDIF
  232    CONTINUE
      ENDIF
C
C----AMORTISSEMENTS MODAUX RETENUS
C
      CALL WKVECT ( '&&OP0131.LISTEAMOR','V V R8', NBMODE, ILAMOR )
      CALL GETVR8 ( 'BASE_MODALE', 'AMOR_REDUIT', 1,1,0, RBID, NA1 )
      NBAMOR = - ( NA1 )
      IF ( NBAMOR .NE. 0 ) THEN
         IF ( NA1 .NE. 0 ) THEN
      CALL GETVR8('BASE_MODALE','AMOR_REDUIT',1,1,NBMODE,ZR(ILAMOR),NA1)
         ENDIF
      ELSE
         CALL GETVR8 ( 'BASE_MODALE', 'AMOR_UNIF',1,1,1, AMUNIF, IBID )
         DO 127 IM = 1 , NBMODE
            ZR(ILAMOR-1+IM) = AMUNIF
 127     CONTINUE
      ENDIF
C
C------CONSITUTION DE LA LISTE DES ADRESSES DES MODES DYNAMIQUES
C
      GRDMOD = 'DEPL'
      CALL WKVECT ( '&&OP0131.LISTADRMODE' ,'V V I', NBMODE, ILAMOD )
      DO 211 IM = 1 , NBMODE
         IMOD1 = ZI(ILMODE+IM-1)
         CALL RSEXCH ( MODMEC, GRDMOD, IMOD1, NOMCHA, IRET )
         IF ( IRET.NE. 0 ) THEN
            CALL UTDEBM( 'F', 'RECMOD', 'MANQUE LA DEFORMEE MODALE')
            CALL UTIMPI('L',' POUR LE MODE ',1,IMOD1)
            CALL UTFINM( )
         ENDIF
         CALL JEVEUT ( NOMCHA(1:19)//'.VALE', 'L', ZI(ILAMOD+IM-1) )
 211  CONTINUE
      CALL JELIRA ( NOMCHA(1:19)//'.VALE', 'TYPE', IBID, TYMMEC )
C
C-----RECUPERATION DE LA MASSE GENERALISEE
C
      CALL WKVECT ( '&&OP0131.MASSEGENE', 'V V R8', NBMODE, IADRMG )
      DO 231 IM = 1 , NBMODE
         IMOD1 = ZI(ILMODE+IM-1)
         CALL RSADPA ( MODMEC, 'L',1, 'MASS_GENE', IMOD1, 0, IAD, K8B )
         ZR(IADRMG+IM-1) = ZR(IAD)
  231 CONTINUE
C
      CALL JEDETR ( '&&RECMOD.NUMERO.ORDRE' )
      CALL JEDEMA()
      END
