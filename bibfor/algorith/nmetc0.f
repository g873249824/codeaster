      SUBROUTINE NMETC0(MODELE,SDIETO,COMPOR,RESOCO,NBCHAM,
     &                  ZIOCH )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 05/03/2012   AUTEUR IDOUX L.IDOUX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INTEGER      NBCHAM,ZIOCH
      CHARACTER*24 SDIETO,COMPOR
      CHARACTER*24 MODELE,RESOCO
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (GESTION IN ET OUT)
C
C NOM DU CHAMP NUL
C
C ----------------------------------------------------------------------
C
C SI NOM = ' ' : PAS D'INIT
C
C IN  MODELE : NOM DU MODELE
C IN  COMPOR : CARTE COMPORTEMENT
C IN  RESOCO : SD DE RESOLUTION DU CONTACT
C IN  SDIETO : SD GESTION IN ET OUT
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ---------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX -----------------------------
C
      CHARACTER*24 IOLCHA
      INTEGER      JIOLCH
      CHARACTER*24 NOMCHA,NOMCH0
      CHARACTER*24 DEPL0,VITE0,ACCE0,SIGM0,VARI0,STRX0
      CHARACTER*24 EXTE0,AMOR0,LIAI0,NODA0
      CHARACTER*19 XINDC0,XSEUC0,XCOHE0
      INTEGER      ICHAM
      CHARACTER*8  LPAIN(1),LPAOUT(3)
      CHARACTER*24 LCHIN(1),LCHOUT(3)
      INTEGER      IBID,IRET
      CHARACTER*19 LIGRMO
      LOGICAL      LBID
      CHARACTER*24 CHGEOM
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- NOM DES CHAMPS INITIAUX NULS
C
      DEPL0  = '&&CNPART.ZERO'
      VITE0  = '&&CNPART.ZERO'
      ACCE0  = '&&CNPART.ZERO'
      AMOR0  = '&&CNPART.ZERO'
      LIAI0  = '&&CNPART.ZERO'
      SIGM0  = '&&NMETCR.SIGMO0'
      VARI0  = '&&NMETCR.VARMO0'
      STRX0   = '&&NMETCR.STRMO0'

      XINDC0 = RESOCO(1:14)//'.XFI0'
      XSEUC0 = RESOCO(1:14)//'.XFS0'
      XCOHE0 = RESOCO(1:14)//'.XCO0'
C
C --- CREATION DES CHAMPS INITIAUX VIDES
C
      CALL DISMOI('F','NOM_LIGREL',MODELE,'MODELE',IBID  ,LIGRMO,IRET)
      CALL COPISD('CHAM_ELEM_S','V',COMPOR,SIGM0)
      CALL COPISD('CHAM_ELEM_S','V',COMPOR,VARI0)
      CALL MEGEOM(MODELE,' ',LBID,CHGEOM)
      LPAIN(1)  = 'PGEOMER'
      LCHIN(1)  = CHGEOM
      LPAOUT(1) = 'PVARI_R'
      LCHOUT(1) = VARI0
      LPAOUT(2) = 'PSIEF_R'
      LCHOUT(2) = SIGM0
      LPAOUT(3) = 'PSTRX_R'
      LCHOUT(3) = STRX0
      CALL CALCUL('S'   ,'TOU_INI_ELGA',LIGRMO,
     &            1     ,LCHIN         ,LPAIN ,
     &            3     ,LCHOUT        ,LPAOUT,
     &            'V'   ,'OUI')
C
C --- ACCES SD CHAMPS
C
      IOLCHA = SDIETO(1:19)//'.LCHA'
      CALL JEVEUO(IOLCHA,'E',JIOLCH)
C
C --- NOM DU CHAMP NUL
C
      DO 40 ICHAM = 1,NBCHAM

        NOMCHA = ZK24(JIOLCH+ZIOCH*(ICHAM-1)+1-1)
        IF (NOMCHA.EQ.'DEPL') THEN
          NOMCH0 = DEPL0
        ELSEIF (NOMCHA.EQ.'VITE') THEN
          NOMCH0 = VITE0
        ELSEIF (NOMCHA.EQ.'ACCE') THEN
          NOMCH0 = ACCE0
        ELSEIF (NOMCHA.EQ.'FORC_AMOR') THEN
          NOMCH0 = AMOR0
        ELSEIF (NOMCHA.EQ.'FORC_LIAI') THEN
          NOMCH0 = LIAI0
        ELSEIF (NOMCHA.EQ.'SIEF_ELGA') THEN
          NOMCH0 = SIGM0
        ELSEIF (NOMCHA.EQ.'VARI_ELGA') THEN
          NOMCH0 = VARI0
        ELSEIF (NOMCHA.EQ.'STRX_ELGA') THEN
          NOMCH0 = STRX0
        ELSEIF (NOMCHA.EQ.'COMPORTEMENT') THEN
          NOMCH0 = ' '
        ELSEIF (NOMCHA.EQ.'VALE_CONT') THEN
          NOMCH0 = ' '
        ELSEIF (NOMCHA.EQ.'INDC_ELEM') THEN
          NOMCH0 = XINDC0
        ELSEIF (NOMCHA.EQ.'SECO_ELEM') THEN
          NOMCH0 = XSEUC0
        ELSEIF (NOMCHA.EQ.'COHE_ELEM') THEN
          NOMCH0 = XCOHE0
        ELSEIF (NOMCHA.EQ.'MODE_FLAMB') THEN
          NOMCH0 = ' '
        ELSEIF (NOMCHA.EQ.'DEPL_VIBR') THEN
          NOMCH0 = ' '
        ELSEIF (NOMCHA.EQ.'DEPL_ABSOLU') THEN
          NOMCH0 = DEPL0
        ELSEIF (NOMCHA.EQ.'VITE_ABSOLU') THEN
          NOMCH0 = DEPL0
        ELSEIF (NOMCHA.EQ.'ACCE_ABSOLU') THEN
          NOMCH0 = DEPL0
        ELSEIF (NOMCHA.EQ.'FORC_NODA') THEN
          NOMCH0 = DEPL0
        ELSEIF (NOMCHA.EQ.'MODE_STAB') THEN
          NOMCH0 = ' '
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
        ZK24(JIOLCH+ZIOCH*(ICHAM-1)+2-1) = NOMCH0
   40 CONTINUE
C
      CALL JEDEMA()
      END
