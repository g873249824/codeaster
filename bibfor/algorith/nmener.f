      SUBROUTINE NMENER(VALINC,VEASSE,MEASSE,SDDYNA,ETA,SDENER)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 31/01/2012   AUTEUR IDOUX L.IDOUX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE IDOUX L.IDOUX
C
      IMPLICIT NONE
      CHARACTER*19  SDDYNA,SDENER
      CHARACTER*19  VALINC(*),VEASSE(*),MEASSE(*)
      REAL*8        ETA
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - CALCUL)
C
C CALCUL DES ENERGIES
C      
C ----------------------------------------------------------------------
C
C IN  VALINC   : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  VEASSE   : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  MEASSE   : VARIABLE CHAPEAU POUR NOM DES MATR_ASSE
C IN  SDDYNA   : SD DYNAMIQUE
C IN  SDENER   : SD ENERGIE
C IN  ETA      : COEFFICIENT DU PILOTAGE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C 
      CHARACTER*19 DEPMOI,DEPPLU,VITMOI,VITPLU,MASSE,AMORT,RIGID
      CHARACTER*19 FEXMOI,FEXPLU,FAMMOI,FNOMOI
      CHARACTER*19 FAMPLU,FLIMOI,FLIPLU,FNOPLU
      CHARACTER*24 K8B
      CHARACTER*8  K8BID
      INTEGER      IDEPMO,IDEPPL,IVITMO,IVITPL
      INTEGER      NEQ,I,J,IVEASS
      INTEGER      IFEXMO,IFAMMO,IFLIMO,IFNOMO
      INTEGER      IFEXPL,IFAMPL,IFLIPL,IFNOPL
      INTEGER      IFEXTE,IFAMOR,IFLIAI,IFCINE,IRET(32),IFNODA
      LOGICAL      NDYNLO,LDYNA,LAMOR,LEXPL

      DATA AMORT ,MASSE     /'&&OP0070.AMORT','&&OP0070.MASSE'/
      DATA RIGID            /'&&OP0070.RIGID'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
      K8BID=' '
      CALL NMCHEX(VALINC,'VALINC','DEPMOI',DEPMOI)
      CALL JEVEUO(DEPMOI//'.VALE','L',IDEPMO)
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)
      CALL JEVEUO(DEPPLU//'.VALE','L',IDEPPL)
      CALL JELIRA(DEPMOI//'.VALE','LONMAX',NEQ,K8B)
      LDYNA=NDYNLO(SDDYNA,'DYNAMIQUE')
      LAMOR=NDYNLO(SDDYNA,'MAT_AMORT')
      LEXPL=NDYNLO(SDDYNA,'EXPLICITE')
      IF (LDYNA) THEN
        CALL NMCHEX(VALINC,'VALINC','VITMOI',VITMOI)
        CALL JEVEUO(VITMOI//'.VALE','L',IVITMO)
        CALL NMCHEX(VALINC,'VALINC','VITPLU',VITPLU)
        CALL JEVEUO(VITPLU//'.VALE','L',IVITPL)
      ENDIF
      CALL NMCHEX(VALINC,'VALINC','FEXMOI',FEXMOI)
      CALL NMCHEX(VALINC,'VALINC','FEXPLU',FEXPLU)
      CALL NMCHEX(VALINC,'VALINC','FAMMOI',FAMMOI)
      CALL NMCHEX(VALINC,'VALINC','FNOMOI',FNOMOI)
      CALL NMCHEX(VALINC,'VALINC','FAMPLU',FAMPLU)
      CALL NMCHEX(VALINC,'VALINC','FLIMOI',FLIMOI)
      CALL NMCHEX(VALINC,'VALINC','FLIPLU',FLIPLU)
      CALL NMCHEX(VALINC,'VALINC','FNOPLU',FNOPLU)
      CALL NMCHEX(MEASSE,'MEASSE','MERIGI',RIGID)
      CALL NMCHEX(MEASSE,'MEASSE','MEMASS',MASSE)
      CALL NMCHEX(MEASSE,'MEASSE','MEAMOR',AMORT)
C
      DO 10 I=1,32
        IRET(I)=0
        CALL JEEXIN(VEASSE(I)//'.VALE',IRET(I))
 10   CONTINUE
C
      CALL JEVEUO(FEXMOI//'.VALE','L',IFEXMO)
      CALL JEVEUO(FAMMOI//'.VALE','L',IFAMMO)
      CALL JEVEUO(FLIMOI//'.VALE','L',IFLIMO)
      CALL JEVEUO(FNOMOI//'.VALE','L',IFNOMO)
      CALL JEVEUO(FEXPLU//'.VALE','E',IFEXPL)
      CALL JEVEUO(FAMPLU//'.VALE','E',IFAMPL)
      CALL JEVEUO(FLIPLU//'.VALE','E',IFLIPL)
      CALL JEVEUO(FNOPLU//'.VALE','E',IFNOPL)
C     
      DO 20 I=1,NEQ
        ZR(IFEXPL-1+I)=0.D0
        ZR(IFAMPL-1+I)=0.D0
        ZR(IFLIPL-1+I)=0.D0
        ZR(IFNOPL-1+I)=0.D0
 20   CONTINUE
C
      CALL WKVECT('FEXTE','V V R',2*NEQ,IFEXTE)
      CALL WKVECT('FAMOR','V V R',2*NEQ,IFAMOR)
      CALL WKVECT('FLIAI','V V R',2*NEQ,IFLIAI)
      CALL WKVECT('FNODA','V V R',2*NEQ,IFNODA)
      CALL WKVECT('FCINE','V V R',NEQ,IFCINE)
C
      DO 30 I=1,32
        IF (IRET(I).NE.0) THEN
          CALL JEVEUO(VEASSE(I)//'.VALE','L',IVEASS)
          IF ((I.EQ.7 ).OR.(I.EQ.9 ).OR.(I.EQ.11).OR.(I.EQ.15)
     &    .OR.(I.EQ.20)) THEN
            DO 40 J=1,NEQ
              ZR(IFEXPL-1+J)=ZR(IFEXPL-1+J)+ZR(IVEASS-1+J)
 40         CONTINUE
          ELSE IF (I.EQ.8) THEN
C FORCES PILOTEES : PARAMETRE ETA A PRENDRE EN COMPTE
            DO 50 J=1,NEQ
              ZR(IFEXPL-1+J)=ZR(IFEXPL-1+J)+ETA*ZR(IVEASS-1+J)
 50         CONTINUE
          ELSE IF ((I.EQ.2).OR.(I.EQ.10)) THEN
C BtLAMBDA                : IL FAUT PRENDRE L OPPOSE
C CHARGEMENT ONDES PLANES : IL FAUT PRENDRE L OPPOSE
            DO 60 J=1,NEQ
              ZR(IFEXPL-1+J)=ZR(IFEXPL-1+J)-ZR(IVEASS-1+J)
 60         CONTINUE
          ELSE IF (I.EQ.27) THEN
            DO 70 J=1,NEQ
              ZR(IFAMPL-1+J)=ZR(IFAMPL-1+J)+ZR(IVEASS-1+J)
 70         CONTINUE
          ELSE IF ((I.EQ.16).OR.(I.EQ.17).OR.(I.EQ.31).OR.
     &             (I.EQ.23).OR.(I.EQ.28).OR.(I.EQ.29)) THEN
            DO 80 J=1,NEQ
              ZR(IFLIPL-1+J)=ZR(IFLIPL-1+J)+ZR(IVEASS-1+J)
 80         CONTINUE
C ON ENLEVE LA CONTRIBUTION DU CONTACT EN METHODE CONTINUE DANS
C LES FORCES INTERNES (ROUTINE NMAINT)
            IF ((I.EQ.16).OR.(I.EQ.17)) THEN
              DO 90 J=1,NEQ
                ZR(IFNOPL-1+J)=ZR(IFNOPL-1+J)-ZR(IVEASS-1+J)
 90           CONTINUE
            ENDIF
C CNDIRI CONTIENT BTLAMBDA PLUS CONTRIBUTION CNCTDF DU CONTACT.
C ON SOUHAITE AJOUTER -BT.LAMBDA A FEXTE. ON AJOUTE DONC -CNDIRI, 
C MAIS IL FAUT ALORS RETRANCHER -CNCTDF ENSUITE
            IF (I.EQ.23) THEN
              DO 100 J=1,NEQ
                ZR(IFEXPL-1+J)=ZR(IFEXPL-1+J)+ZR(IVEASS-1+J)
 100          CONTINUE
            ENDIF
          ELSEIF (I.EQ.1) THEN
            DO 110 J=1,NEQ
              ZR(IFNOPL-1+J)=ZR(IFNOPL-1+J)+ZR(IVEASS-1+J)
 110        CONTINUE
C ON ENLEVE LA CONTRIBUTION DU CONTACT EN METHODE CONTINUE DANS 
C LES FORCES INTERNES
          ELSEIF (I.EQ.21) THEN
            DO 120 J=1,NEQ
              ZR(IFCINE-1+J)=ZR(IFCINE-1+J)+ZR(IVEASS-1+J)
 120        CONTINUE
          ENDIF
        ENDIF
 30   CONTINUE
C
      DO 130 I=1,NEQ
        ZR(IFEXTE-1+I+NEQ)=ZR(IFEXPL-1+I)
        ZR(IFEXTE-1+I)=ZR(IFEXMO-1+I)
        ZR(IFLIAI-1+I+NEQ)=ZR(IFLIPL-1+I)
        ZR(IFLIAI-1+I)=ZR(IFLIMO-1+I)
        ZR(IFAMOR-1+I+NEQ)=ZR(IFAMPL-1+I)
        ZR(IFAMOR-1+I)=ZR(IFAMMO-1+I)
        ZR(IFNODA-1+I+NEQ)=ZR(IFNOPL-1+I)
        ZR(IFNODA-1+I)=ZR(IFNOMO-1+I)
 130  CONTINUE
C
      CALL ENERCA(VALINC, ZR(IDEPMO), ZR(IVITMO), 
     &            ZR(IDEPPL), ZR(IVITPL), MASSE, AMORT, 
     &            RIGID, ZR(IFEXTE), 
     &            ZR(IFAMOR), ZR(IFLIAI), ZR(IFNODA), ZR(IFCINE), 
     &            LAMOR, LDYNA, LEXPL, SDENER, K8BID)
C
C     BUG REPORTE PAR MICHAEL.
C     ON NE PEUT PAS UTILISER NMFPAS POUR METTRE LES CHAMPS PLUS
C     EN CHAMP MOINS, SINON CA POSE PROBLEME EN LECTURE D'ETAT INITIAL
C     SI POURSUITE.
C     ON FAIT DONC LE REPORT DE CHAMP ICI
C
      CALL COPISD('CHAMP_GD','V',FEXPLU,FEXMOI)
      CALL COPISD('CHAMP_GD','V',FAMPLU,FAMMOI)
      CALL COPISD('CHAMP_GD','V',FLIPLU,FLIMOI)
      CALL COPISD('CHAMP_GD','V',FNOPLU,FNOMOI)
C
      CALL JEDETR('FEXTE')
      CALL JEDETR('FAMOR')
      CALL JEDETR('FLIAI')
      CALL JEDETR('FNODA')
      CALL JEDETR('FCINE')
C
      CALL JEDEMA()
C
      END
