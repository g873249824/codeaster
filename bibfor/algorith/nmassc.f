      SUBROUTINE NMASSC(FONACT,SDDYNA,SDTIME,VEASSE,CNPILO,
     &                  CNDONN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 17/12/2012   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*24 SDTIME
      CHARACTER*19 CNPILO,CNDONN
      INTEGER      FONACT(*)
      CHARACTER*19 SDDYNA
      CHARACTER*19 VEASSE(*)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - CORRECTION)
C
C CALCUL DU SECOND MEMBRE POUR LA CORRECTION
C
C ----------------------------------------------------------------------
C
C
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  SDDYNA : SD POUR LA DYNAMIQUE
C IN  SDTIME : SD TIMER
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C OUT CNPILO : VECTEUR ASSEMBLE DES FORCES PILOTEES
C OUT CNDONN : VECTEUR ASSEMBLE DES FORCES DONNEES
C
C
C
C
      INTEGER      IFM,NIV
      INTEGER      I,NBVEC,NBCOEF
      CHARACTER*19 CNFFDO,CNDFDO,CNFVDO,CNVADY
      CHARACTER*19 CNFFPI,CNDFPI,CNDIRI
      CHARACTER*19 CNFINT,CNBUDI
      PARAMETER    (NBCOEF=7)
      REAL*8       COEF(NBCOEF)
      CHARACTER*19 VECT(NBCOEF)
      REAL*8       NDYNRE,COEEQU
      LOGICAL      NDYNLO,LDYNA

C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ...... CALCUL SECOND MEMBRE'
      ENDIF
C
C --- INITIALISATIONS
C
      CNFFDO = '&&CNCHAR.FFDO'
      CNFFPI = '&&CNCHAR.FFPI'
      CNDFDO = '&&CNCHAR.DFDO'
      CNDFPI = '&&CNCHAR.DFPI'
      CNFVDO = '&&CNCHAR.FVDO'
      CNVADY = '&&CNCHAR.FVDY'

      CALL NMCHEX(VEASSE,'VEASSE','CNFINT',CNFINT)
      CALL NMCHEX(VEASSE,'VEASSE','CNBUDI',CNBUDI)
      CALL NMCHEX(VEASSE,'VEASSE','CNDIRI',CNDIRI)
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
C
C --- MESURES
C
      CALL NMTIME(SDTIME,'INI','SECO_MEMB')
      CALL NMTIME(SDTIME,'RUN','SECO_MEMB')

C --- CALCUL DU VECTEUR DES CHARGEMENTS FIXES        (NEUMANN)
C
      CALL NMASFI(FONACT,SDDYNA,VEASSE,CNFFDO,CNFFPI)
C
C --- CALCUL DU VECTEUR DES CHARGEMENTS FIXES        (DIRICHLET)
C
      CALL NMASDI(FONACT,VEASSE,CNDFDO,CNDFPI)
C
C --- CALCUL DU VECTEUR DES CHARGEMENTS VARIABLES    (NEUMANN)
C
      CALL NMASVA(SDDYNA,VEASSE,CNFVDO)
C
C --- CALCUL DU VECTEUR DES CHARGEMENTS VARIABLES DYNAMIQUES (NEUMANN)
C
      IF (LDYNA) THEN
        COEEQU = NDYNRE(SDDYNA,'COEF_MPAS_EQUI_COUR')
        CALL NDASVA('CORR',SDDYNA,VEASSE,CNVADY)
      ENDIF
C
C --- CHARGEMENTS DONNES AVEC PRISE EN COMPTE L'ERREUR DE L'ERREUR QUI
C    FAITE SUR LES DDLS IMPOSES (CNDFDO - CNBUDI)
C
      NBVEC   = 6
      COEF(1) = 1.D0
      COEF(2) = 1.D0
      COEF(3) = -1.D0
      COEF(4) = -1.D0
      COEF(5) = -1.D0
      COEF(6) = 1.D0
C
      VECT(1) = CNFFDO
      VECT(2) = CNFVDO
      VECT(3) = CNFINT
      VECT(4) = CNBUDI
      VECT(5) = CNDIRI
      VECT(6) = CNDFDO
C
      IF (LDYNA) THEN
        NBVEC = 7
        COEF(NBVEC) = COEEQU
        VECT(NBVEC) = CNVADY
      ENDIF
C
      IF (NBVEC.GT.NBCOEF) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
      DO 10 I = 1,NBVEC
        CALL VTAXPY(COEF(I),VECT(I),CNDONN)
 10   CONTINUE
C
C --- CHARGEMENTS PILOTES
C
      NBVEC   = 2
      COEF(1) = 1.D0
      COEF(2) = 1.D0
      VECT(1) = CNFFPI
      VECT(2) = CNDFPI
      IF (NBVEC.GT.NBCOEF) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
      DO 15 I = 1,NBVEC
        CALL VTAXPY(COEF(I),VECT(I),CNPILO)
 15   CONTINUE
C
      CALL NMTIME(SDTIME,'END','SECO_MEMB')
C
      CALL JEDEMA()
      END
