      SUBROUTINE NMDIDI (MODELE, NUMEDD, LISCHA, DEPMOI, CNDIDI)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/02/2003   AUTEUR PBADEL P.BADEL 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE PBADEL P.BADEL

      IMPLICIT NONE
      CHARACTER*19  LISCHA
      CHARACTER*24  MODELE, NUMEDD, DEPMOI, CNDIDI

C ----------------------------------------------------------------------
C
C COMMANDE STAT_NON_LINE : REFERENCE POUR DIRICHLET DIFFERENTIEL
C
C ----------------------------------------------------------------------
C IN       MODELE : MODELE
C IN       NUMEDD : NUME_DDL
C IN       LISCHA : SD L_CHARGES
C IN       DEPMOI : DEPLACEMENTS A L'INSTANT INITIAL
C IN/JXOUT CNDIDI : SECOND MEMBRE DIDI : BDIDI.UREF (OU INEXISTANT)
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      CHARACTER*32       JEXNUM , JEXNOM , JEXR8 , JEXATR
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------


      INTEGER      NUMREF, N1, NEVO, IRET, NEQ
      INTEGER      NCHAR, NBR, JDIDI, JCHAR, JINF, ICHA
      CHARACTER*8  NOMCHA, LPAIN(2), LPAOUT(1), VEDIDI, K8BID
      CHARACTER*16 OPTION
      CHARACTER*19 DEPDID
      CHARACTER*24 EVOL,CHAMP, MASQUE
      CHARACTER*24 LIGRMO, LIGRCH, LCHIN(2), LCHOUT(1)

      DATA VEDIDI /'&&VEDIDI'/
C ----------------------------------------------------------------------


      CALL JEMARQ()
      CALL DETRSD('CHAMP_GD',CNDIDI)
      CALL JEEXIN(LISCHA // '.LCHA',IRET)
      IF ( IRET .EQ. 0 ) GOTO 9999


C ======================================================================
C            CONSTRUCTION DE LA CONFIGURATION DE REFERENCE
C ======================================================================

C    PAR DEFAUT : CHAMP DE DEPLACEMENT INITIAL
      DEPDID = DEPMOI

C    EXTRACTION DE LA CONFIGURATION DE REFERENCE LE CAS ECHEANT
      CALL GETVIS ('ETAT_INIT','NUME_DIDI',1,1,1,NUMREF,N1)
      CALL GETVID ('ETAT_INIT','EVOL_NOLI',1,1,1,EVOL,NEVO)
      IF ((N1.GT.0) .AND. (NEVO.GT.0)) THEN
        CALL RSEXCH (EVOL,'DEPL',NUMREF,DEPDID,IRET)
        IF (IRET.NE.0) CALL UTMESS('F','NMDIDI','LE CHAMP DE DEPLA'
     &  // 'CEMENT DIDI N''EST PAS TROUVE DANS LE CONCEPT ' // EVOL)
      END IF



C ======================================================================
C                   CONSTRUCTION DU VECTEUR BDIDI.UREF
C ======================================================================

C REM : LE TERME BT.LAMBDA EST EGALEMENT CALCULE. IL EST NUL CAR A CE
C       STADE, LES LAMBDAS SONT NULS.


C -- CONTRUCTION DES VECT_ELEM

C    LISTE DES CHARGES
      CALL JELIRA(LISCHA // '.LCHA','LONMAX',NCHAR,K8BID)
      CALL JEVEUO(LISCHA // '.LCHA','L',JCHAR)
      CALL JEVEUO(LISCHA // '.INFC','L',JINF)


C    CREATION DU RESU_ELEM SI BESOIN
      CALL JEEXIN(VEDIDI // '.LISTE_RESU',IRET)
      IF ( IRET .EQ. 0 ) THEN
        CALL MEMARE('V',VEDIDI,MODELE(1:8),' ',' ','CHAR_MECA')
        CALL WKVECT(VEDIDI // '.LISTE_RESU','V V K24',NCHAR,JDIDI)
      ELSE
        CALL JEVEUO(VEDIDI // '.LISTE_RESU','E',JDIDI)
      ENDIF
      MASQUE = VEDIDI // '.VEXXX'


C    BOUCLE SUR LES CHARGES DE TYPE DIRICHLET DIFFERENTIEL
      NBR = 0
      DO 10 ICHA = 1,NCHAR

C      SI CE N'EST PAS UNE CHARGE DE TYPE DIRICHLET DIFFERENTIEL
        IF (ZI(JINF+ICHA).LE.0.OR.ZI(JINF+3*NCHAR+2+ICHA).EQ.0) GOTO 10

        NOMCHA = ZK24(JCHAR+ICHA-1)(1:8)
        CALL JEEXIN(NOMCHA // '.CHME.LIGRE.LIEL',IRET)
        IF (IRET.LE.0) GOTO 10
        CALL EXISD('CHAMP_GD',NOMCHA//'.CHME.CMULT',IRET)
        IF (IRET.LE.0) GOTO 10

        NBR = NBR + 1
        CALL CODENT(NBR,'D0',MASQUE(12:14))

        LIGRCH    =  NOMCHA // '.CHME.LIGRE'
        LPAIN(1)  = 'PDDLMUR'
        LCHIN(1)  =  NOMCHA // '.CHME.CMULT'
        LPAIN(2)  = 'PDDLIMR'
        LCHIN(2)  =  DEPDID
        LPAOUT(1) = 'PVECTUR'
        LCHOUT(1) =  MASQUE
        OPTION    = 'MECA_BU_R'
        CALL CALCUL('S',OPTION,LIGRCH,2,LCHIN,LPAIN,1,LCHOUT,LPAOUT,'V')

        ZK24(JDIDI-1+NBR) = LCHOUT(1)
 10   CONTINUE
      CALL JEECRA(VEDIDI // '.LISTE_RESU','LONUTI',NBR,K8BID)


C -- ASSEMBLAGE DES VECT_ELEM

      IF (NBR.NE.0)
     &  CALL ASSVEC ('V',CNDIDI,1,VEDIDI,1.D0,NUMEDD,' ','ZERO',1)


 9999 CONTINUE
      CALL JEDEMA()
      END
