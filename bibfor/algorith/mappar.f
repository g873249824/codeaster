      SUBROUTINE MAPPAR(PREMIE,NOMA,DEFICO,NEWGEO,
     &                  VECNTD,NEQ,VECNTX,VECNTY,
     &                  VECNTZ)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 30/04/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
      IMPLICIT NONE
      LOGICAL      PREMIE
      CHARACTER*8  NOMA
      CHARACTER*24 DEFICO
      CHARACTER*24 NEWGEO
C
C ----------------------------------------------------------------------
C ROUTINE APPELLEE PAR : NMIBLE
C ----------------------------------------------------------------------
C
C REALISE L'APPARIEMENT ENTRE SURFACE ESCLAVE ET SURFACE MAITRE POUR 
C LE CONTACT METHODE CONTINUE.
C
C METHODE : POUR CHAQUE POINT DE CONTACT (SUR UNE MAILLE ESCLAVE ET
C AVEC UN SCHEMA D'INTEGRATION DONNE), ON RECHERCHE LE NOEUD MAITRE LE
C PLUS PROCHE ET ON PROJETTE SUR LES MAILLES QUI L'ENTOURE
C
C STOCKAGE DES POINTS  DE CONTACT DES SURFACES  ESCLAVES ET APPARIEMENT
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  PREMIE : VAUT .TRUE. SI PREMIER INSTANT DE STAT/DYNA_NON_LINE
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  NEWGEO : NOUVELLE GEOMETRIE (AVEC DEPLACEMENT)
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER IFM,NIV
      INTEGER NDIM,ZTABF,CFMMVD,ZMAES
      INTEGER INI,INI1,INI2,INI3
      INTEGER NTMA,POSNO,POSMIN,NPEX,SUPPOK
      INTEGER IZONE,TYCO
      INTEGER NTPC,IMA,POSMA,NUMAE,NBN
      INTEGER IMABAR,ITEMAX
      INTEGER INIBA1,INIBA2,INIBA3,NOQBA1,NOQBA2,TYPBAR
      INTEGER RACCK,IBID,VALRET
      INTEGER VECNTD(1,*),VECNTX(1,*),VECNTY(1,*),VECNTZ(1,*)
      REAL*8 XIMIN,YIMIN,T1MIN(3),T2MIN(3),GEOM(3),LAMBDA,XPG,YPG,HPG
      REAL*8 DIR(3),NORME1,TOLEOU,NMIN(3),JEUMIN,VNORM(3)
      REAL*8       R8BID(3),EPSMAX
      CHARACTER*8  ALIAS
      CHARACTER*24 COTAMA,MAESCL,TABFIN,NDIMCO
      INTEGER      JMACO,JMAESC,JTABF,JDIM,NEQ
      CHARACTER*24 K24BLA,K24BID
      LOGICAL PROJIN,BARSOU,LISSS,LBID,VECPOU
      LOGICAL COMPLI,CTCINI,DIRAPP,EXNOE,LPIVAU
      DATA K24BLA /' '/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)        
C      
C --- RECUPERATION DE QUELQUES DONNEES      
C
      COTAMA = DEFICO(1:16) // '.MAILCO'
      MAESCL = DEFICO(1:16) // '.MAESCL'
      TABFIN = DEFICO(1:16) // '.TABFIN'
      NDIMCO = DEFICO(1:16) // '.NDIMCO'
      CALL JEVEUO(COTAMA,'L',JMACO)
      CALL JEVEUO(MAESCL,'L',JMAESC)
      CALL JEVEUO(TABFIN,'E',JTABF)
      CALL JEVEUO(NDIMCO,'E',JDIM)
C
      ZTABF = CFMMVD('ZTABF')  
      ZMAES = CFMMVD('ZMAES')    
C
C --- INFOS GENERIQUES POUR L'ALGORITHME D'APPARIEMENT
C      
      CALL MMINFP(0,DEFICO,K24BLA,'PROJ_NEWT_ITER',
     &            ITEMAX,R8BID,K24BID,LBID)
      CALL MMINFP(0,DEFICO,K24BLA,'PROJ_NEWT_EPSI',
     &            IBID,EPSMAX,K24BID,LBID)   
      CALL MMINFP(0,DEFICO,K24BLA,'TOLE_PROJ_EXT',
     &            IBID,TOLEOU,K24BID,LBID)     
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> APPARIEMENT' 
      ENDIF            
C
C --- LISSAGE DES NORMALES 
C      
      CALL LISSAG(NOMA,DEFICO,NEWGEO,ITEMAX,EPSMAX,0.D0)
C    
C --- BOUCLE SUR LES MAILLES ESCLAVES
C
      NTMA = ZI(JMAESC)
      NTPC = 0
      NDIM = ZI(JDIM)
      DO 20 IMA = 1,NTMA
C
C --- OPTIONS SUR LA ZONE DE CONTACT
C    
        IZONE  = ZI(JMAESC+3*(IMA-1)+2)
        CALL MMINFP(IZONE,DEFICO,K24BLA,'SEUIL_INIT',
     &              IBID,LAMBDA,K24BID,LBID)
        LAMBDA = -ABS(LAMBDA)
        CALL MMINFP(IZONE,DEFICO,K24BLA,'INTEGRATION',
     &              TYCO,R8BID,K24BID,LBID)
        CALL MMINFP(IZONE,DEFICO,K24BLA,'LISSAGE',
     &              IBID,R8BID,K24BID,LISSS)        
        CALL MMINFP(IZONE,DEFICO,K24BLA,'DIRE_APPA',
     &              IBID,DIR,K24BID,DIRAPP)
        CALL MMINFP(IZONE,DEFICO,K24BLA,'VECT_ORIE_POU',
     &              IBID,R8BID,K24BID,VECPOU)         
        CALL MMINFP(IZONE,DEFICO,K24BLA,'COMPLIANCE',
     &              IBID,R8BID,K24BID,COMPLI)  
        CALL MMINFP(IZONE,DEFICO,K24BLA,'CONTACT_INIT',
     &              IBID,R8BID,K24BID,CTCINI)
        CALL MMINFP(IZONE,DEFICO,K24BLA,'EXCLUSION_PIV_NUL',
     &              IBID,R8BID,K24BID,LPIVAU)              
C
C --- INFOS SUR LA MAILLE ESCLAVE COURANTE
C       
        POSMA  = ZI(JMAESC+ZMAES*(IMA-1)+1)
        NUMAE  = ZI(JMACO+POSMA-1)
        NBN    = ZI(JMAESC+ZMAES*(IMA-1)+3)      
        CALL MMELTY(NOMA,NUMAE,ALIAS,IBID,IBID)      
C
C --- ON TESTE SI LA MAILLE ESCLAVE CONTIENT DES NOEUDS INTERDITS DANS
C --- SANS_GROUP_NO OU SANS_NOEUD
C
        CALL MMEXCL(DEFICO,NOMA,IZONE,POSMA,NBN,
     &              NPEX,INI1,INI2,INI3)
C
C --- ON TESTE SI LA MAILLE EST UNE MAILLE DE FISSURE
C --- GROUP_MA_FOND OU MAILLE_FOND
C
        CALL MMFOND(NOMA,DEFICO,IZONE,NBN,POSMA,IMA,
     &              BARSOU,IMABAR,TYPBAR,
     &              INIBA1,INIBA2,INIBA3,NOQBA1,NOQBA2)
C
C --- APPARIEMENT - BOUCLE SUR LES POINTS DE CONTACT
C              
        DO 10 INI = 1,NBN
          IF (NIV.GE.2) THEN
            WRITE (IFM,*) '<CONTACT> ... CALCUL COORDONNEES POINT'//
     &                    ' DE CONTACT' 
          ENDIF        
C
C --- COORDONNEES DANS ELEMENT DE REFERENCE ET POIDS DU POINT DE CONTACT
C
          CALL MMGAUS(ALIAS,TYCO,INI,XPG,YPG,HPG)
C
C --- CALCUL DES COORDONNEES REELLES DU POINT DE CONTACT          
C 
          CALL MCOPCO(NOMA,DEFICO,NEWGEO,'ESCL',POSMA,XPG,YPG,GEOM)
C
C --- RECHERCHE DU NOEUD MAITRE LE PLUS PROCHE DU POINT DE CONTACT
C
          IF (NIV.GE.2) THEN
            WRITE (IFM,*) '<CONTACT> ... RECH. ND MAITRE LE PLUS PROCHE'
          ENDIF 
          CALL MMREND(DEFICO,NEWGEO,IZONE,GEOM,DIRAPP,DIR,
     &                POSNO)
C
C --- PROJECTION DU POINT DE CONTACT SUR LA MAILLE MAITRE
C
          IF (NIV.GE.2) THEN
            WRITE (IFM,*) '<CONTACT> ... PROJECTION' 
          ENDIF 
          CALL MMREMA(NOMA,DEFICO,NEWGEO,
     &                IZONE,GEOM,POSNO,DIRAPP,DIR,
     &                POSMIN,JEUMIN,NMIN,
     &                T1MIN,T2MIN,XIMIN,YIMIN,PROJIN)
C          
C --- VECTEURS TANGENTS LISSES    
C          
          IF (LISSS) THEN
            CALL COPNOR(NOMA,POSMIN,XIMIN,YIMIN,DEFICO,
     &                  T1MIN,T2MIN)
          END IF
C
C --- DEFINITION BASE TANGENTE LOCALE DANS LE CAS DES POUTRES
C 
          IF (VECPOU) THEN
            CALL MMINFP(IZONE,DEFICO,K24BLA,'VECT_ORIE_POU',
     &                  IBID,T2MIN,K24BID,LBID)
            CALL NORMEV(T2MIN,NORME1)
          END IF  
C
C --- ON TESTE SI NOEUD EST IMPLIQUE DANS DES RELATIONS
C --- DE TYPE LAGRANGE/LIAISON_DDL
C      
          CALL MMNORM(NDIM,T1MIN,T2MIN,VNORM)
          EXNOE= .FALSE. 
          IF (LPIVAU) THEN 
            CALL REDCEX(DEFICO,NOMA,INI,POSMA,IZONE,VNORM,VECNTD,
     &                  NEQ,VECNTX,VECNTY,VECNTZ,EXNOE,IFM,
     &                  PREMIE)
          END IF
C                 
C --- DEFINITION BASE TANGENTE LOCALE APRES EXCLUSION DES NOEUDS
C          
          CALL MMTGEX(DEFICO,NOMA,NDIM,
     &                IZONE,POSMA,INI,NPEX,INI1,INI2,
     &                SUPPOK,T1MIN,T2MIN,VALRET)   
C          
C --- STOCKAGE DES VALEURS DANS LA CARTE (VOIR MMCART)
C  
          IF (NIV.GE.2) THEN
            WRITE (IFM,*) '<CONTACT> ... STOCKAGE VALEURS APPARIEMENT' 
          ENDIF 
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+1)  = NUMAE
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+2)  = ZI(JMACO+POSMIN-1)
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+3)  = XPG
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+12) = YPG          
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+4)  = XIMIN
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+5)  = YIMIN
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+6)  = T1MIN(1)
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+7)  = T1MIN(2)
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+8)  = T1MIN(3)
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+9)  = T2MIN(1)
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+10) = T2MIN(2)
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+11) = T2MIN(3)
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+15) = IZONE
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+16) = HPG
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+23) = IMA
          ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+24) = IMABAR  
          IF (PREMIE) THEN
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+14) = LAMBDA
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+21) = 0.D0
          END IF
C          
C --- CONTACT_INIT
C 
          IF (PREMIE) THEN
            IF (CTCINI) THEN
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+13) = 1.D0
            ELSE
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+13) = 0.D0
            END IF
          ENDIF  
C
C --- COMPLIANCE
C          
          IF (.NOT.COMPLI) THEN 
            ZR(JTABF+ZTABF*NTPC+ZTABF* (INI-1)+21) = 1.D0
          END IF
C
C --- NOEUDS EXCLUS PAR PROJECTION HORS ZONE
C              
C           IF (INI .EQ. NBN .AND. NNEX .EQ. NBN) THEN
C             DO 11 INI4 = 1,NBN
C               ZR(JTABF+ZTABF*NTPC+ZTABF*(INI4-1)+22) = 1.D0
C  11         CONTINUE
C           ELSE
C             DO 12 INI4 = 1,NBN
C               ZR(JTABF+ZTABF*NTPC+ZTABF*(INI4-1)+22) = 0.D0
C  12         CONTINUE
C           END IF
         IF (.NOT. PROJIN) THEN
           ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+22) = 1.D0
         ELSE
           ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+22) = 0.D0
         ENDIF
C
C --- NOEUDS EXCLUS PAR SANS_GROUP_NO
C           
          IF (SUPPOK.EQ.1 .AND. NPEX.EQ.1) THEN
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+17) = 1.D0
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+18) = INI1
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+19) = 0.D0
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+20) = 0.D0
          ELSEIF (SUPPOK.EQ.1 .AND. NPEX.EQ.2) THEN
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+17) = 2.D0
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+18) = INI1
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+19) = INI2
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+20) = 0.D0
          ELSEIF (SUPPOK.EQ.1 .AND. NPEX.EQ.3) THEN
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+17) = 3.D0
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+18) = INI1
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+19) = INI2
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+20) = INI3
          ELSE
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+17) = 0.D0
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+18) = 0.D0
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+19) = 0.D0
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+20) = 0.D0
          END IF
C
C --- NOEUDS EXCLUS PAR GROUP_NO_FOND
C     
          IF (BARSOU) THEN
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+27) = TYPBAR
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+25) = 0.D0
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+26) = 0.D0
            
            IF (INI .EQ. INIBA1) THEN
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+25) = INIBA1
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+26) = NOQBA1
            ELSEIF (INI .EQ. INIBA2) THEN
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+25) = INIBA2
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+26) = NOQBA2
            ELSEIF (INI .EQ. INIBA3) THEN
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+25) = INIBA3
              ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+26) = (INIBA1*INIBA2)
            END IF
          ELSE
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+25) = 0.D0
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+26) = 0.D0
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+27) = 0.D0
          END IF
C
C --- NOEUDS EXCLUS PAR GROUP_NO_RACC
C   
          CALL MMRACC(DEFICO,IZONE,POSMA,INI,RACCK)

          IF (RACCK.EQ.1) THEN
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+28) = INI
          ELSE
            ZR(JTABF+ZTABF*NTPC+ZTABF*(INI-1)+28) = 0.D0
          END IF   
C
C --- NOEUDS EXCLUS PAR GESTION AUTOMATIQUE DES 
C --- RELATIONS SURABONDANTES AVEC LE CONTACT
C
          IF (EXNOE) THEN
            ZR(JTABF+ZTABF*NTPC+ZTABF* (INI-1)+29) = 1.D0
          END IF
C
C --- AFFICHAGE
C
          IF (NIV.GE.2) THEN
            CALL MMIMP1(IFM,NOMA,INI,NBN,NTPC,JTABF,JEUMIN,NMIN)
          ENDIF                                 
 10     CONTINUE
        NTPC = NTPC + NBN
 20   CONTINUE
      ZR(JTABF-1+1) = NTPC
C      
      CALL JEDEMA()
      END
