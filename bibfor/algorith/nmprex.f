      SUBROUTINE NMPREX(NUMEDD,DEPMOI,SOLALG,SDDISC,NUMINS,
     &                  INCEST,DEPEST)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/04/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      CHARACTER*24 NUMEDD
      CHARACTER*19 SDDISC,INCEST
      CHARACTER*19 SOLALG(*),DEPMOI,DEPEST
      INTEGER      NUMINS
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PREDICTION)
C
C PREDICTION PAR EXTRAPOLATION
C      
C ----------------------------------------------------------------------
C
C
C IN  NUMEDD : NUME_DDL
C IN  NUMINS : NUMERO INSTANT COURANT
C IN  SDDISC : SD DISC_INST
C IN  DEPMOI : DEPL. EN T-
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C OUT INCEST : INCREMENT DE DEPLACEMENT EN PREDICTION
C OUT DEPEST : DEPLACEMENT ESTIME
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      JDEPES,JINCES,JOLD
      INTEGER      IRET,NEQ
      CHARACTER*8  K8BID
      CHARACTER*19 DEPOLD
      INTEGER      IFM,NIV
      REAL*8       DIINST,INSTAM,INSTAP,INSTAA,COEF
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... PAR EXTRAPOLATION' 
      ENDIF 
C
C --- INITIALISATIONS
C
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ   ,K8BID,IRET)
      INSTAM    = DIINST(SDDISC,NUMINS-1)
      INSTAP    = DIINST(SDDISC,NUMINS  )
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(SOLALG,'SOLALG','DEPOLD',DEPOLD)      
C
C --- INITIALISATION DU DEPLACEMENT ESTIME
C    
      CALL COPISD('CHAMP_GD','V',DEPMOI,DEPEST)
      CALL JEVEUO(DEPEST(1:19)//'.VALE','E',JDEPES)           
C
C --- INITIALISATION DE L'INCREMENT
C
      CALL JEVEUO(INCEST(1:19)//'.VALE','E',JINCES)  
      CALL R8INIR(NEQ,0.D0,ZR(JINCES),1)      
C
C --- EXTRAPOLATION DES DEPLACEMENTS S'IL EXISTE UN PAS PRECEDENT
C
      IF (NUMINS .GE . 2) THEN
        INSTAA = DIINST(SDDISC,NUMINS-2)
        IF (INSTAA .EQ. INSTAM) CALL U2MESS('F','ALGORITH8_28')
        COEF = (INSTAP-INSTAM) / (INSTAM-INSTAA)
        CALL JEVEUO(DEPOLD(1:19)// '.VALE','L',JOLD)
        CALL DAXPY(NEQ,COEF,ZR(JOLD),1,ZR(JDEPES),1)
        CALL DAXPY(NEQ,COEF,ZR(JOLD),1,ZR(JINCES),1)
      END IF
C
      CALL JEDEMA()
      END
