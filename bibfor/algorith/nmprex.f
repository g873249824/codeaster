      SUBROUTINE NMPREX(METHOD,VALMOI,DEPALG,INSTAM,INSTAP,
     &                  SDDISC,NUMINS,DEPPRE,DEPEST)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      REAL*8       INSTAP,INSTAM
      CHARACTER*16 METHOD(*)
      CHARACTER*24 VALMOI(8),DEPALG(8)
      CHARACTER*24 DEPPRE(2),DEPEST 
      CHARACTER*19 SDDISC
      INTEGER      NUMINS
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PREDICTION)
C
C PREDICTION PAR EXTRAPOLATION
C      
C ----------------------------------------------------------------------
C
C
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION
C IN  INSTAM : INSTANT MOINS
C IN  INSTAP : INSTANT PLUS 
C IN  NUMINS : NUMERO INSTANT COURANT
C IN  SDDISC : SD DISC_INST
C IN  VALMOI : ETAT EN T-
C IN  VALMOI : VECTEURS DEPLACEMENTS
C OUT DEPPRE : INCREMENT DE DEPLACEMENT EN PREDICTION
C OUT DEPEST : DEPLACEMENT ESTIME
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER      JEST, JDEPM, JDEPDE,JOLD,NEQ
      CHARACTER*8  K8BID
      CHARACTER*24 K24BID     
      CHARACTER*24 DEPMOI,DEPOLD
      INTEGER      IFM,NIV
      REAL*8       INSTAA,COEF,DIINST
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... PAR EXTRAPOLATION' 
      ENDIF 
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL DESAGG(VALMOI,DEPMOI,K24BID,K24BID,K24BID,
     &            K24BID,K24BID,K24BID,K24BID)
      CALL DESAGG(DEPALG,K24BID,K24BID,DEPOLD,K24BID,
     &            K24BID,K24BID,K24BID,K24BID)     
      CALL JELIRA(DEPMOI(1:19)//'.VALE','LONMAX',NEQ,K8BID)    
C
C --- INITIALISATION DU DEPLACEMENT ESTIME
C
      CALL JEVEUO(DEPEST(1:19)//'.VALE','E',JEST)
      CALL JEVEUO(DEPMOI(1:19)//'.VALE','L',JDEPM) 
      CALL DCOPY (NEQ,ZR(JDEPM),1,ZR(JEST),1)
C
C --- INITIALISATION DE L'INCREMENT
C
      CALL JEVEUO(DEPPRE(1)(1:19)// '.VALE','E',JDEPDE)  
      CALL R8INIR(NEQ,0.D0,ZR(JDEPDE),1)      
C
C --- EXTRAPOLATION DES DEPLACEMENTS S'IL EXISTE UN PAS PRECEDENT
C
      IF (NUMINS .GE . 2) THEN
        INSTAA = DIINST(SDDISC,NUMINS-2)
        IF (INSTAA .EQ. INSTAM) CALL U2MESS('F','ALGORITH8_28')
        COEF = (INSTAP-INSTAM) / (INSTAM-INSTAA)
        CALL JEVEUO(DEPOLD(1:19)// '.VALE','L',JOLD)
        CALL DAXPY(NEQ,COEF,ZR(JOLD),1,ZR(JEST)  ,1)
        CALL DAXPY(NEQ,COEF,ZR(JOLD),1,ZR(JDEPDE),1)
      END IF
C
      CALL JEDEMA()
      END
