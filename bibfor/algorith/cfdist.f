      SUBROUTINE CFDIST(DEFICO,IZONE ,POSNOE,COORD ,INST  ,
     &                  JEUSUP)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 01/04/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2004  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C 
      IMPLICIT     NONE
      CHARACTER*24 DEFICO
      INTEGER      IZONE
      INTEGER      POSNOE
      REAL*8       INST,JEUSUP,COORD(3)
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - APPARIEMENT)
C
C CALCUL DU JEU SUPPLEMENTAIRE
C
C ----------------------------------------------------------------------
C
C
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  IZONE  : ZONE DE CONTACT
C IN  POSNOE : INDICE DU NOEUD ESCLAVE DANS CONTNO
C IN  INST   : VALEUR DE L'INSTANT DE CALCUL
C IN  COORD  : VALEUR DES COORDONNEES DU NOEUD COURANT
C OUT DISSUP : JEU SUPPLEMENTAIRE  
C
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      IER
      CHARACTER*24 JEUPOU,JEUCOQ,JEUSUC
      INTEGER      JJSUP,JJCOQ,JJPOU
      CHARACTER*24 JEUFO1,JEUFO2,JEUFO3
      INTEGER      JJFO1,JJFO2,JJFO3      
      CHARACTER*8  JEUF1,JEUF2,JEUF3
      CHARACTER*8  NOMPAR(3)
      REAL*8       R8BID,VALPAR(3)
      REAL*8       DIST1,DIST2,DIST3,DIST4,DIST5,DIST6
      LOGICAL      LDPOU,LDCOQ
      CHARACTER*24 K24BID,K24BLA
      INTEGER      IBID
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- LECTURE DES SD POUR LE CONTACT POTENTIEL
C
      JEUPOU = DEFICO(1:16)//'.JEUPOU'
      JEUCOQ = DEFICO(1:16)//'.JEUCOQ'
      JEUSUC = DEFICO(1:16)//'.JSUPCO'
      JEUFO1 = DEFICO(1:16)//'.JFO1CO'
      JEUFO2 = DEFICO(1:16)//'.JFO2CO'
      JEUFO3 = DEFICO(1:16)//'.JFO3CO'      
C     
      CALL JEVEUO(JEUSUC,'L',JJSUP )      
      CALL JEVEUO(JEUPOU,'L',JJPOU )
      CALL JEVEUO(JEUCOQ,'L',JJCOQ )
      CALL JEVEUO(JEUFO1,'L',JJFO1 )
      CALL JEVEUO(JEUFO2,'L',JJFO2 )
      CALL JEVEUO(JEUFO3,'L',JJFO3 )         
C
C --- INITIALISATIONS
C
      DIST1 = 0.D0
      DIST2 = 0.D0
      DIST3 = 0.D0
      DIST4 = 0.D0
      DIST5 = 0.D0 
      DIST6 = 0.D0  
C
C --- OPTIONS SUR LA ZONE DE CONTACT
C    
      CALL MMINFP(IZONE ,DEFICO,K24BLA,'DIST_POUTRE',
     &            IBID  ,R8BID ,K24BID,LDPOU)
      CALL MMINFP(IZONE ,DEFICO,K24BLA,'DIST_COQUE',
     &            IBID  ,R8BID ,K24BID,LDCOQ)               
C
C --- EN VUE DE L'INTERPOLATION DU JEU PAR DES VARIABLES D'ESPACE
C
      NOMPAR(1) = 'X'
      NOMPAR(2) = 'Y'
      NOMPAR(3) = 'Z'
      VALPAR(1) = COORD(1)
      VALPAR(2) = COORD(2)
      VALPAR(3) = COORD(3)      
C
C --- VALEUR DU JEU SUPPLEMENTAIRE SI C'EST UNE FONCTION DE L'ESPACE
C
      JEUF1 = ZK8(JJFO1+IZONE-1)
      JEUF2 = ZK8(JJFO2+IZONE-1)
      IF ((JEUF1.NE.' ').OR.(JEUF2.NE.' ')) THEN
        IF (JEUF1.NE.' ') THEN
          CALL FOINTE ('F',JEUF1,3,NOMPAR,VALPAR,DIST1,IER)
        ENDIF
        IF (JEUF2.NE.' ') THEN
          CALL FOINTE ('F',JEUF2,3,NOMPAR,VALPAR,DIST2,IER)
        ENDIF
      ENDIF
C
C --- EN VUE DE L'INTERPOLATION DU JEU PAR UNE VARIABLE DE TEMPS
C
      NOMPAR(1) = 'INST'
      VALPAR(1) = INST     
C
C --- VALEUR DU JEU SUPPLEMENTAIRE SI C'EST UNE FONCTION DU TEMPS
C      
      JEUF3 = ZK8(JJFO3+IZONE-1)      
      IF (JEUF3.NE.' ') THEN
        CALL FOINTE('F',JEUF3,1,NOMPAR,VALPAR,DIST3,IER)
      ENDIF
C
C --- VALEUR DU JEU SUPPLEMENTAIRE SI C'EST CONSTANT
C      
      DIST6  = ZR(JJSUP+IZONE-1)
C
C --- VALEUR DU JEU SUPPLEMENTAIRE SI DIST_POUTRE
C
      IF (LDPOU) THEN
        IF (POSNOE.EQ.0) THEN
          CALL ASSERT(.FALSE.)
        ENDIF
        DIST4 = ZR(JJPOU-1+POSNOE)
      ENDIF
C
C --- VALEUR DU JEU SUPPLEMENTAIRE SI DIST_COQUE
C
      IF (LDCOQ) THEN
        IF (POSNOE.EQ.0) THEN
          CALL ASSERT(.FALSE.)
        ENDIF      
        DIST5 = ZR(JJCOQ-1+POSNOE)
      ENDIF
C
C --- TOTAL JEU SUPPLEMENTAIRE
C
      JEUSUP = DIST1 + DIST2 + DIST3 + DIST4 + DIST5 + DIST6     
C
      CALL JEDEMA ()
      END
