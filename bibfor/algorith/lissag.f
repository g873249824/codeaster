      SUBROUTINE LISSAG(NOMA  ,DEFICO,NEWGEO,ITEMAX,EPSMAX)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 24/09/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8  NOMA
      CHARACTER*24 DEFICO,NEWGEO
      INTEGER      ITEMAX
      REAL*8       EPSMAX     
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - APPARIEMENT)
C
C CALCUL ET STOCKAGE DES NORMALES MOYENNEES AUX NOEUDS ET
C DES VECTEURS TANGENTS A CHAQUE NOEUD MAITRE
C      
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  NEWGEO : NOUVELLE GEOMETRIE (AVEC DEPLACEMENT GEOMETRIQUE)
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  ITEMAX : NOMBRE MAXI D'ITERATIONS DE NEWTON POUR LA PROJECTION
C IN  EPSMAX : RESIDU POUR CONVERGENCE DE NEWTON POUR LA PROJECTION
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER JMACO,INOE,NUNOE,NBMA,JPOMA,JDEC,JMANO,NUMA
      INTEGER NBNO,POSNO,JNOCO,JNOESC,JDIM,JCOOR,NDIMG,I
      INTEGER IMA,INO,POSMA,JDECNO,JPONO,NO(9),NNO,NDIM
      INTEGER JNOMA,POSNNO(30),OO
      INTEGER IZONE,JZOCO,IBID
      INTEGER IFM,NIV
      REAL*8  TAU1(3),TAU2(3),NORMAL(3),NORME1,NORMN
      REAL*8  VNORM(3),COORPT(3),COORMA(27),R8BID,R8BID3(3),R8MIEM
      CHARACTER*8 ALIAS,FFORME
      INTEGER      CFMMVD,ZNOES
      CHARACTER*24 CONTMA,CONTNO,NOESCL
      CHARACTER*24 NDIMCO,PMANO,PNOMA,MANOCO,NOMACO,NOZOCO
      CHARACTER*24 K24BLA,K24BID
      LOGICAL LBID,FONFIS,VECPOU
      INTEGER NIVERR 
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- RECUPERATION DE QUELQUES DONNEES
C
      CONTMA = DEFICO(1:16)//'.MAILCO'
      CONTNO = DEFICO(1:16)//'.NOEUCO'
      NOESCL = DEFICO(1:16)//'.NOESCL'
      NDIMCO = DEFICO(1:16)//'.NDIMCO'
      PMANO  = DEFICO(1:16)//'.PMANOCO'
      PNOMA  = DEFICO(1:16)//'.PNOMACO'
      MANOCO = DEFICO(1:16)//'.MANOCO'
      NOMACO = DEFICO(1:16)//'.NOMACO'
      NOZOCO = DEFICO(1:16)//'.NOZOCO'
      CALL JEVEUO(CONTMA,'L',JMACO)
      CALL JEVEUO(CONTNO,'L',JNOCO)
      CALL JEVEUO(NOESCL,'E',JNOESC)
      CALL JEVEUO(PMANO ,'L',JPOMA)
      CALL JEVEUO(MANOCO,'L',JMANO)
      CALL JEVEUO(PNOMA ,'L',JPONO)
      CALL JEVEUO(NOMACO,'L',JNOMA)
      CALL JEVEUO(NDIMCO,'L',JDIM)
      CALL JEVEUO(NOZOCO,'L',JZOCO)
      CALL JEVEUO(NEWGEO(1:19)//'.VALE','L',JCOOR)    
      ZNOES = CFMMVD('ZNOES')
C
C --- INITIALISATIONS
C
      NDIMG  = ZI(JDIM)
      NBNO   = ZI(JDIM+4)      
      K24BLA = ' '    
      FFORME = 'CONTINUE' 
C
C --- SI FOND_FISSURE, ON NE CALCULE PAS LES NORMALES
C
      CALL MMINFP(0,DEFICO,K24BLA,'FOND_FISSURE',
     &            IBID,R8BID,K24BID,FONFIS)
   
      IF (FONFIS) THEN
        GOTO 999
      ELSE
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<CONTACT> ... LISSAGE DES NORMALES' 
        ENDIF         
      END IF                      
C
C ======================================================================
C
      DO 10 INOE = 1,NBNO
        NORMN = 0.D0
        DO 16 I = 1,3
          NORMAL(I) = 0.D0
          VNORM(I)  = 0.D0
 16     CONTINUE      
        POSNO = INOE
        IZONE = ZI(JZOCO+POSNO-1)
        NBMA  = ZI(JPOMA+POSNO) - ZI(JPOMA+POSNO-1)
        JDEC  = ZI(JPOMA+POSNO-1)      
C
C --- SI LE NOEUD EST ESCLAVE ON SORT
C  
        IF (ZR(JNOESC+ZNOES*(POSNO-1)+1) .EQ. -1.D0) THEN
          GOTO 10
        ENDIF  
C
C --- NUMERO ET COORDONNEES DU NOEUD MAITRE
C         
        NUNOE = ZI(JNOCO+POSNO-1)         
        DO 15 I = 1,3        
          COORPT(I) = ZR(JCOOR-1+3*(NUNOE-1)+I)
 15     CONTINUE
C
C --- BOUCLE SUR LES MAILLES CONTENANT LE NOEUD MAITRE
C
        DO 20 IMA = 1,NBMA
          POSMA = ZI(JMANO+JDEC+IMA-1)
          NUMA  = ZI(JMACO+POSMA-1)
          CALL MMELTY(NOMA,NUMA,ALIAS,NNO,NDIM)          
C          
C --- RECUPERATION DE LA GEOMETRIE DES NOEUDS
C
          JDECNO = ZI(JPONO+POSMA-1)
          DO 45 OO = 1,NNO
            POSNNO(OO) = ZI(JNOMA+JDECNO+OO-1)
            NO(OO)     = ZI(JNOCO+POSNNO(OO)-1)
 45       CONTINUE
C
C --- COORDONNEES DES NOEUDS DE LA MAILLE MAITRE
C
          DO 50 INO = 1,NNO
            COORMA(3*(INO-1)+1) = ZR(JCOOR+3*(NO(INO)-1))
            COORMA(3*(INO-1)+2) = ZR(JCOOR+3*(NO(INO)-1)+1)
            COORMA(3*(INO-1)+3) = ZR(JCOOR+3*(NO(INO)-1)+2)
 50       CONTINUE
C
C --- CALCUL DES VECTEURS TANGENTS DE LA MAILLE MAITRE
C    
          CALL MMNEWT(ALIAS ,NNO   ,NDIM  ,COORMA,COORPT,
     &                ITEMAX,EPSMAX,FFORME,R8BID ,R8BID,
     &                TAU1  ,TAU2  ,NIVERR)
C
C --- NORMALISATION DES VECTEURS TANGENTS DE LA MAILLE MAITRE
C
          CALL MMTANN(NDIM  ,TAU1  ,TAU2  ,NIVERR)
C
C --- TRAITEMENT DES ERREURS
C           
          IF (NIVERR.EQ.2) THEN  
            CALL MMERRO(DEFICO,K24BLA,NOMA,
     &               'LISSAG','F','MAT_SING',
     &                NUMA,NUNOE,IBID,
     &                IBID,R8BID,K24BID)
          ELSEIF (NIVERR.EQ.3) THEN
            CALL MMERRO(DEFICO,K24BLA,NOMA,
     &               'LISSAG','F','NON_CONV',
     &                NUMA,NUNOE,IBID,
     &                IBID,R8BID,K24BID)
          ELSEIF (NIVERR.EQ.4) THEN
            CALL MMERRO(DEFICO,K24BLA,NOMA,
     &               'LISSAG','F','VECT_TANG_NUL',
     &                NUMA,NUNOE,IBID,
     &                IBID,R8BID,K24BID)
          ELSEIF (NIVERR.EQ.1) THEN
            CALL MMERRO(DEFICO,K24BLA,NOMA,
     &               'LISSAG','F','ELEM_INC',
     &                NUMA,NUNOE,IBID,
     &                IBID,R8BID,K24BID)          
          ENDIF 
C
C --- CALCUL DE LA NORMALE 
C
          IF (NDIMG .EQ. 2) THEN          
            VNORM(1) = TAU1(2)
            VNORM(2) = -TAU1(1)
            VNORM(3) = 0.D0
          ELSEIF (NDIMG .EQ. 3) THEN
C
C --- DEFINITION BASE TANGENTE LOCALE SUR LA MAILLE MAITRE
C --- DANS LE CAS DES POUTRES: 
C --- ATTENTION A L'ORIENTATION DE VECT_ORIE_POU = TAU2
C
            CALL MMINFP(IZONE,DEFICO,K24BLA,'VECT_ORIE_POU',
     &                  IBID,R8BID3,K24BID,VECPOU)      
            IF (VECPOU) THEN
              CALL MMINFP(IZONE,DEFICO,K24BLA,'VECT_ORIE_POU',
     &                    IBID,TAU2,K24BID,LBID)            
              CALL NORMEV(TAU2,NORME1)             
            END IF
            
            CALL PROVEC(TAU2,TAU1,VNORM)
          ELSE
            CALL ASSERT(.FALSE.)   
          END IF
C
C --- NORMALE RESULTANTE SUR MAILLE MAITRE
C
          DO 60 I = 1,3
            NORMAL(I) = NORMAL(I) + VNORM(I)
 60       CONTINUE
 
 20     CONTINUE
C
C --- MOYENNATION DE LA NORMALE SUR TOUTES LES MAILLES LIEES AU NOEUD
C
        DO 70 I = 1,3
          NORMAL(I) = NORMAL(I) / NBMA
 70     CONTINUE
C
C --- NORMALISATION DE LA NORMALE SUR TOUTES LES MAILLES LIEES AU NOEUD
C 
        CALL NORMEV(NORMAL,NORMN)
        IF (NORMN.LE.R8MIEM()) THEN
           CALL MMERRO(DEFICO,K24BLA,NOMA,
     &                 'LISSAG','F','NORM_NUL',
     &                  IBID,NUNOE,IBID,
     &                  IBID,R8BID,K24BID)        
        ENDIF        
C
C --- STOCKAGE DE LA NORMALE MOYENNEE NORMALISEE SUR LE NOEUD MAITRE
C 
        DO 71 I = 1,3
          ZR(JNOESC+ZNOES*(INOE-1)+I+1) = NORMAL(I)
 71     CONTINUE                     
C
C --- CONSTRUCTION DES VECTEURS TANGENTS
C
        IF (NDIMG .EQ. 3) THEN
          IF (ZR(JNOESC+ZNOES*(INOE-1)+1+1) .NE. 0.D0) THEN
            TAU1(1) = -ZR(JNOESC+ZNOES*(INOE-1)+2+1)/
     &                 ZR(JNOESC+ZNOES*(INOE-1)+1+1)
            TAU1(2) = 1.D0
            TAU1(3) = 0.D0
          ELSEIF (ZR(JNOESC+ZNOES*(INOE-1)+2+1) .NE. 0.D0) THEN
            TAU1(1) = 1.D0
            TAU1(2) = -ZR(JNOESC+ZNOES*(INOE-1)+1+1)/
     &                 ZR(JNOESC+ZNOES*(INOE-1)+2+1)
            TAU1(3) = 0.D0
          ELSEIF (ZR(JNOESC+ZNOES*(INOE-1)+3+1) .NE. 0.D0) THEN
            TAU1(1) = 0.D0
            TAU1(2) = 1.D0
            TAU1(3) = -ZR(JNOESC+ZNOES*(INOE-1)+2+1)/
     &                 ZR(JNOESC+ZNOES*(INOE-1)+3+1)
          END IF
          CALL PROVEC(TAU1,NORMAL,TAU2)
        ELSEIF (NDIMG .EQ. 2) THEN
          TAU1(1) = -ZR(JNOESC+ZNOES*(INOE-1)+2+1)
          TAU1(2) = ZR(JNOESC+ZNOES*(INOE-1)+1+1)
          TAU1(3) = 0.D0
          TAU2(1) = 0.D0
          TAU2(2) = 0.D0
          TAU2(3) = 0.D0
        END IF
C
C --- STOCKAGE DES VECTEURS TANGENTS SUR LE NOEUD MAITRE 
C         
        DO 90 I = 1,3
          ZR(JNOESC+ZNOES*(INOE-1)+3+1+I) = TAU1(I)
          ZR(JNOESC+ZNOES*(INOE-1)+6+1+I) = TAU2(I)
 90     CONTINUE
     
 10   CONTINUE
 
 999  CONTINUE
C
      CALL JEDEMA()
      END
