      SUBROUTINE NDASSP(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,CARCRI,FONACT,DEFICO,
     &                  SDDYNA,VALMOI,VALPLU,POUGD ,SOLALG,
     &                  VEELEM,VEASSE,SDTIME,LDCCVG,CODERE,
     &                  CNDONN)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 29/09/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      INTEGER      LDCCVG
      LOGICAL      FONACT(*)
      CHARACTER*19 LISCHA,SDDYNA
      CHARACTER*24 MODELE,NUMEDD,MATE, CODERE  ,SDTIME
      CHARACTER*24 CARELE,COMPOR,COMREF,CARCRI,DEFICO
      CHARACTER*24 VALMOI(8),POUGD(8),VALPLU(8)
      CHARACTER*19 SOLALG(*),VEASSE(*),VEELEM(*) 
      CHARACTER*19 CNDONN        
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PREDICTION)
C
C CALCUL DU SECOND MEMBRE POUR LA PREDICTION - DYNAMIQUE
C      
C ----------------------------------------------------------------------
C
C
C IN  MODELE : NOM DU MODELE
C IN  NUMEDD : NOM DE LA NUMEROTATION
C IN  LISCHA : SD L_CHARGES
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  SDDYNA : SD DYNAMIQUE
C IN  VALMOI : VARIABLE CHAPEAU POUR ETAT EN T-
C IN  VEELEM : VARIABLE CHAPEAU POUR NOM DES VECT_ELEM
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C OUT CNDONN : VECTEUR ASSEMBLE DES FORCES DONNEES
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      I,NBVEC,ITERAT
      CHARACTER*19 CNFFDO,CNDFDO,CNFVDO  
      CHARACTER*19 CNDUMM   
      CHARACTER*19 NMCHEX 
      CHARACTER*19 VEBUDI
      REAL*8       COEF(8)
      CHARACTER*19 VECT(8)
      CHARACTER*19 CNFINT
      CHARACTER*19 VEFINT      
      CHARACTER*19 CNBUDI,CNVCPR,CNFNOD
      CHARACTER*24 K24BID,DEPMOI,VITMOI,ACCMOI
      CHARACTER*24 VECLAG
      LOGICAL      LBID
      REAL*8       R8BID
      INTEGER      NDYNIN
      LOGICAL      LDEPL,LVITE,LACCE
C 
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C   
      ITERAT = 0    
      CALL VTZERO(CNDONN)
      CNDUMM = '&&CNCHAR.DUMM'  
      CNFFDO = '&&CNCHAR.FFDO'
      CNDFDO = '&&CNCHAR.DFDO'
      CNFVDO = '&&CNCHAR.FVDO'  
C
C --- TYPE DE FORMULATION SCHEMA DYNAMIQUE GENERAL
C
      LDEPL  = NDYNIN(SDDYNA,'FORMUL_DYNAMIQUE').EQ.1
      LVITE  = NDYNIN(SDDYNA,'FORMUL_DYNAMIQUE').EQ.2
      LACCE  = NDYNIN(SDDYNA,'FORMUL_DYNAMIQUE').EQ.3                  
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL DESAGG(VALMOI,DEPMOI,K24BID,K24BID,K24BID,
     &            VITMOI,ACCMOI,K24BID,K24BID)
      CNFINT  = NMCHEX(VEASSE,'VEASSE','CNFINT') 
      VEFINT  = NMCHEX(VEELEM,'VEELEM','CNFINT')         
C
C --- CALCUL DU VECTEUR DES CHARGEMENTS FIXES (NEUMANN+DIRICHLET)      
C
      CALL NMASFI(FONACT,SDDYNA,VEASSE,CNFFDO,CNDUMM,
     &            CNDFDO,CNDUMM)
C      
C --- CALCUL DU VECTEUR DES CHARGEMENTS VARIABLES (QUE NEUMANN)     
C
      CALL NMASVA('PRED',FONACT,SDDYNA,DEFICO,VEASSE,
     &            CNFVDO)
C
C --- SECOND MEMBRE DES VARIABLES DE COMMANDE
C
      CNVCPR = NMCHEX(VEASSE,'VEASSE','CNVCPR')   
C
C --- CALCUL DES FORCES INTERIEURES
C
      CALL NMTIME('INIT' ,'TMP',SDTIME,LBID  ,R8BID )
      CALL NMTIME('DEBUT','TMP',SDTIME,LBID  ,R8BID )  
      CALL NMFINT(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &            COMPOR,LISCHA,CARCRI,FONACT,ITERAT,
     &            SDDYNA,DEFICO,VALMOI,VALPLU,POUGD ,
     &            SOLALG,VEASSE,LDCCVG,CODERE,VEFINT)
      CALL NMTIME('FIN'      ,'TMP',SDTIME,LBID  ,R8BID )
      CALL NMTIME('FORC_INTE','TMP',SDTIME,LBID  ,R8BID ) 
     
C
C --- ASSEMBLAGE DES FORCES INTERIEURES
C      
      CALL NMAINT(NUMEDD,FONACT,DEFICO,VEELEM,VEASSE,
     &            VEFINT,CNFINT)    
C
C --- QUEL VECTEUR D'INCONNUES PORTE LES LAGRANGES ?
C
      IF (LDEPL) THEN
        VECLAG = DEPMOI
      ELSEIF (LVITE) THEN
        VECLAG = VITMOI
      ELSEIF (LACCE) THEN
        VECLAG = ACCMOI
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF          
C
C --- CONDITIONS DE DIRICHLET B.U
C
      CNBUDI = NMCHEX(VEASSE,'VEASSE','CNBUDI') 
      VEBUDI = NMCHEX(VEELEM,'VEELEM','CNBUDI')
      CALL NMBUDI(MODELE,NUMEDD,LISCHA,VECLAG,VEBUDI,
     &            CNBUDI)
C
C --- CHARGEMENTS DONNES
C 
       CNFNOD = NMCHEX(VEASSE,'VEASSE','CNFNOD')
      NBVEC   = 6
      COEF(1) = 1.D0
      COEF(2) = 1.D0
      COEF(3) = -1.D0
      COEF(4) = -1.D0
      COEF(5) = 1.D0 
      COEF(6) = 1.D0    
      VECT(1) = CNFFDO
      VECT(2) = CNFVDO 
      VECT(3) = CNBUDI
      VECT(4) = CNFINT
      VECT(4) = CNFNOD
      VECT(5) = CNVCPR 
      VECT(6) = CNDFDO 
      

C
C --- CHARGEMENT DONNE
C       
      IF (NBVEC.GT.8) THEN
        CALL ASSERT(.FALSE.)
      ENDIF
      DO 10 I = 1,NBVEC      
        CALL VTAXPY(COEF(I),VECT(I),CNDONN)                
 10   CONTINUE      
C
      CALL JEDEMA()
      END
