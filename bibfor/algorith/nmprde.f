      SUBROUTINE NMPRDE(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,METHOD,SOLVEU,FONACT,
     &                  PARMET,CARCRI,SDPILO,SDDISC,NUMINS,
     &                  INST  ,VALMOI,VALPLU,POUGD ,SECMBR,
     &                  DEPALG,LICCVG,MATASS,MAPREC,PREMIE,
     &                  PARCRI,DEFICO,RESOCO,CONV  ,CNRESI,
     &                  CNDIRI,SDDYNA,SDSENS,MEELEM,MEASSE,
     &                  VEELEM)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      LOGICAL      PREMIE,FONACT(*)
      INTEGER      NUMINS,LICCVG(*)
      REAL*8       PARMET(*),INST(*)
      REAL*8       PARCRI(*),CONV(*)
      CHARACTER*14 SDPILO
      CHARACTER*16 METHOD(*)
      CHARACTER*19 MAPREC,MATASS
      CHARACTER*19 LISCHA,SOLVEU,SDDISC,SDDYNA
      CHARACTER*19 CNRESI,CNDIRI
      CHARACTER*24 MODELE,NUMEDD, MATE, CARELE, COMREF, COMPOR
      CHARACTER*24 CARCRI 
      CHARACTER*24 VALMOI(8),POUGD(8),VALPLU(8),DEPALG(8),SECMBR(8)
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*24 SDSENS
      CHARACTER*8  MEELEM(8),VEELEM(30) 
      CHARACTER*19 MEASSE(8)
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PREDICTION)
C
C PREDICTION PAR DEPLACEMENT DONNE
C      
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : L_CHARGES
C IN  MATASS : NOM DE LA MATRICE DU PREMIER MEMBRE ASSEMBLEE
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION
C IN  SOLVEU : SOLVEUR
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  SDPILO : SD PILOTAGE
C IN  SDDISC : SD DISC_INST
C IN  NUMINS : NUMERO D'INSTANT
C IN  VALMOI : ETAT EN T-
C IN  VALPLU : ETAT EN T+ 
C IN  SECMBR : SECONDS MEMBRES
C IN  POUGD  : INFOS POUTRES EN GRANDES ROTATIONS
C IN  DEPALG : VARIABLE CHAPEAU POUR DEPLACEMENTS
C IN  MEELEM : MATRICES ELEMENTAIRES
C IN  MEASSE : MATRICES ASSEMBLEES
C IN  VEELEM : VECTEURS ELEMENTAIRES
C OUT ETA    : COEFFICIENT DE PILOTAGE
C OUT LICCVG : CODES RETOURS
C                      (1) - PILOTAGE
C                      (5) - MATASS SINGULIERE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      CHARACTER*1  BASE
      LOGICAL      LSENSI
      INTEGER      NRPASE
      INTEGER      JDEPDE, JDDEPL,JNUM
      INTEGER      NBDIRI, NEQ, I,IRET,FACCVG
      REAL*8       INSTAM, INSTAP, X(2)
      REAL*8       CODONN(2), COPILO(1), DIINST
      CHARACTER*8  VEDEST(2), K8BID,VEELET(30),MEDIRI
      CHARACTER*16 K16BID
      CHARACTER*24 DEPDE0,DEPSOL(2),DEPOLD,DDEPLA,DEPPRE(2)      
      CHARACTER*24 K24BID,K24BLA
      CHARACTER*19 MATRIX(2),CNDONN(2),CNPILO(1)
      CHARACTER*24 DEPMOI,DEPEST,CNBEST
      CHARACTER*24 VALMOT(8),DEPALT(8)
      CHARACTER*24 CNDIDO,CNDIPI,CNCINE

      DATA VEDEST /'&&VEPRE1', '&&VEPRE2'/
      DATA CNBEST /'&&NMPREX.BUEST'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      DEPEST    = '&&CNPART.CHP1'
      DEPSOL(1) = '&&CNPART.CHP2'
      DEPSOL(2) = '&&CNPART.CHP2'
      LSENSI    = .FALSE.
      K24BLA    = ' '
      NRPASE    = 0
      BASE      = 'V'    
      INSTAM    = DIINST(SDDISC,NUMINS-1)
      INSTAP    = DIINST(SDDISC,NUMINS  )
      MATRIX(1) = MATASS   
      MATRIX(2) = MAPREC                
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL DESAGG(VALMOI,DEPMOI,K24BID,K24BID,K24BID,
     &            K24BID,K24BID,K24BID,K24BID)
      CALL DESAGG(SECMBR,K24BID,K24BID,CNDIDO,CNDIPI,
     &            K24BID,K24BID,K24BID,CNCINE)
      CALL DESAGG(DEPALG,DDEPLA,K24BID,DEPOLD,DEPPRE(1),
     &            DEPPRE(2),K24BID,K24BID,K24BID) 
      MEDIRI = MEELEM(2)
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ   ,K8BID,IRET)
C
C --- INCREMENT DE DEPLACEMENT NUL EN PREDICTION
C  
      DEPDE0 = '&&CNPART.ZERO'        
      CALL AGGLOM(DDEPLA,DEPDE0,DEPOLD,DEPPRE(1),
     &            DEPPRE(2),K24BLA,K24BLA,K24BLA, 5, DEPALT)
C
C --- VALEUR DU DEPLACEMENT A ESTIMER
C             
      IF (METHOD(5) .EQ. 'EXTRAPOL') THEN
        CALL NMPREX(METHOD,VALMOI,DEPALG,INSTAM,INSTAP,
     &              SDDISC,NUMINS,DEPPRE,DEPEST)

      ELSE IF (METHOD(5) .EQ. 'DEPL_CALCULE') THEN
        CALL NMPRDC(METHOD,VALMOI,INSTAP,DEPPRE,DEPEST)
        CALL JEEXIN(LISCHA(1:19)//'.LCHA', IRET)
        IF ( IRET .EQ. 0 ) THEN
          GOTO 9999
        END IF
        CALL JELIRA(MEDIRI(1:8)//'.LISTE_RESU','LONUTI',NBDIRI,K8BID)
        IF (NBDIRI.EQ.0) THEN
          GOTO 9999
        END IF        
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
 
C ======================================================================
C   PROJECTION DU DEPLACEMENT SUR L'ESPACE DES DEPLACEMENTS ADMISSIBLES
C ======================================================================

C
C --- REASSEMBLAGE EVENTUEL DE LA MATRICE DE PROJECTION
C 
      CALL NMMATR('PREDICTION',MODELE,NUMEDD,MATE  ,CARELE,
     &            COMREF,COMPOR,LISCHA,RESOCO,METHOD,
     &            SOLVEU,PARMET,CARCRI,SDDISC,NUMINS,
     &            0     ,VALMOI,POUGD ,VALPLU,MATASS,
     &            MAPREC,K16BID,DEFICO,DEPALT,PREMIE,
     &            FONACT,MEELEM,MEASSE,VEELEM,FACCVG,
     &            SDDYNA)
C
      IF ((FACCVG.EQ.1).OR.(FACCVG.EQ.2)) GOTO 9999
C
C --- VARIABLES CHAPEAUX BIDONS
C
      CALL AGGLOM(DEPEST,K24BLA,K24BLA,K24BLA,
     &            K24BLA,K24BLA,K24BLA,K24BLA, 6, VALMOT)
      VEELET(2)  = VEDEST(1)
      VEELET(3)  = VEDEST(2)
C
C --- CALCUL DE B.UEST
C
      CALL NMCALV('LAGR_MECA',
     &            MODELE,LISCHA,MATE  ,CARELE,COMPOR,
     &            INSTAM,INSTAP,CARCRI,PARMET,NUMEDD,
     &            VALMOT,VALPLU,DEPALG,POUGD ,SDSENS,
     &            SDDYNA,LSENSI,NRPASE,BASE  ,MEASSE,
     &            VEELET)
     
      CALL VEBTLA(MODELE,MATE  ,CARELE,DEPEST,LISCHA,
     &            VEDEST(1))      
      X(1) = -1
      X(2) =  1
      CALL ASSVEC('V',CNBEST,2,VEDEST,X,NUMEDD,' ','ZERO',1)
C
C --- RESOLUTION EN TENANT COMPTE DU PILOTAGE
C
      CNDONN(1) = CNDIDO
      CNDONN(2) = CNBEST
      CODONN(1) =  1
      CODONN(2) = -1
      CNPILO(1) = CNDIPI
      COPILO(1) =  1
      CALL NMRESO(SDPILO,2     ,CODONN,CNDONN,1     ,
     &            COPILO,CNPILO,CNCINE,SOLVEU,MATRIX,
     &            DEPSOL)
C
C --- MISE A JOUR (EXCEPTE LES LAGRANGES)
C 
      CALL JEVEUO(NUMEDD(1:14)// '.NUME.DELG','L',JNUM)

      CALL JEVEUO(DEPSOL(1)(1:19)//'.VALE','L',JDDEPL)
      CALL JEVEUO(DEPPRE(1)(1:19)//'.VALE','E',JDEPDE)
      DO 10 I = 1, NEQ
        IF (ZI(JNUM+I-1).EQ.0) THEN
          ZR(JDEPDE+I-1) = ZR(JDEPDE+I-1) + ZR(JDDEPL+I-1)
        ENDIF  
 10   CONTINUE

      CALL JEVEUO(DEPSOL(2)(1:19)// '.VALE','L',JDDEPL)
      CALL JEVEUO(DEPPRE(2)(1:19)// '.VALE','E',JDEPDE)
      DO 11 I = 1, NEQ
        IF (ZI(JNUM+I-1).EQ.0) THEN
          ZR(JDEPDE+I-1) = ZR(JDDEPL+I-1)
        ENDIF  
 11   CONTINUE
C
C --- RECOPIE CODE RETOUR ERREURS      
C
      LICCVG(5) = FACCVG
       
 9999 CONTINUE

C
      CALL JEDEMA()
      END
