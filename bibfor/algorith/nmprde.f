      SUBROUTINE NMPRDE(MODELE,NUMEDD,NUMFIX,MATE  ,CARELE,
     &                  COMREF,COMPOR,LISCHA,METHOD,SOLVEU,
     &                  FONACT,PARMET,CARCRI,SDDISC,SDTIME,
     &                  NUMINS,VALINC,SOLALG,LICCVG,MATASS,
     &                  MAPREC,DEFICO,RESOCO,SDDYNA,CODERE,
     &                  MEELEM,MEASSE,VEELEM,VEASSE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/12/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2010  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C TOLE CRP_21
C
      IMPLICIT NONE
      INTEGER      FONACT(*)
      INTEGER      NUMINS,LICCVG(*)
      REAL*8       PARMET(*)
      CHARACTER*16 METHOD(*)
      CHARACTER*19 MAPREC,MATASS
      CHARACTER*19 LISCHA,SOLVEU,SDDISC,SDDYNA
      CHARACTER*24 NUMEDD,NUMFIX
      CHARACTER*24 MODELE,MATE, CARELE, COMREF, COMPOR
      CHARACTER*24 CARCRI
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*24 CODERE,SDTIME
      CHARACTER*19 VEELEM(*),VEASSE(*)
      CHARACTER*19 MEELEM(*),MEASSE(*)
      CHARACTER*19 SOLALG(*),VALINC(*)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - PREDICTION)
C
C PREDICTION PAR DEPLACEMENT DONNE (EXTRAPOL/DEPL_CALCULE)
C
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL (VARIABLE AU COURS DU CALCUL)
C IN  NUMFIX : NUME_DDL (FIXE AU COURS DU CALCUL)
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : L_CHARGES
C IN  MAPREC : MATRICE DE PRECONDITIONNEMENT (GCPC)
C IN  MATASS : MATRICE ASSEMBLEE
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION
C IN  SOLVEU : SOLVEUR
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  SDDISC : SD DISC_INST
C IN  SDDYNA : SD DYNAMIQUE
C IN  SDTIME : SD TIMER
C IN  DEFICO : SD CONTACT DEFINITION
C IN  RESOCO : SD CONTACT RESOLUTION
C IN  FONACT : FONCTIONNALITES ACTIVEES
C IN  NUMINS : NUMERO D'INSTANT
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  MEELEM : VARIABLE CHAPEAU POUR NOM DES MATR_ELEM
C IN  MEASSE : VARIABLE CHAPEAU POUR NOM DES MATR_ASSE
C IN  VEELEM : VARIABLE CHAPEAU POUR NOM DES VECT_ELEM
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C OUT CODERE : CHAM_ELEM CODE RETOUR ERREUR INTEGRATION LDC
C OUT LICCVG : CODES RETOURS (* POUR INDIQUER CEUX QUI SONT CHANGES)
C               (1)   - PILOTAGE
C               (2) * - INTEGRATION DE LA LOI DE COMPORTEMENT
C               (3)   - TRAITEMENT DU CONTACT
C               (4)   - MATRICE DE CONTACT
C               (5) * - MATRICE DU SYSTEME SINGULIERE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      CHARACTER*19 INCEST,DEPEST,DEPMOI
      CHARACTER*19 DEPSO1,DEPSO2
      LOGICAL      LPROJ
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      DEPEST    = '&&CNPART.CHP1'
      INCEST    = '&&CNPART.CHP2'
      CALL VTZERO(DEPEST)
      CALL VTZERO(INCEST)
      CALL NMCHEX(SOLALG,'SOLALG','DEPSO1',DEPSO1)
      CALL NMCHEX(SOLALG,'SOLALG','DEPSO2',DEPSO2)
      CALL VTZERO(DEPSO1)
      CALL VTZERO(DEPSO2)
      LPROJ     = .TRUE.
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VALINC,'VALINC','DEPMOI',DEPMOI)
C
C --- VALEUR DU DEPLACEMENT -> DEPEST
C --- VALEUR DE L'INCREMENT DE DEPLACEMENT -> INCEST
C
      IF (METHOD(5) .EQ. 'EXTRAPOL') THEN
        CALL NMPREX(NUMEDD,DEPMOI,SOLALG,SDDISC,NUMINS,
     &              INCEST,DEPEST)
      ELSE IF (METHOD(5) .EQ. 'DEPL_CALCULE') THEN
        CALL NMPRDC(METHOD,NUMEDD,DEPMOI,SDDISC,NUMINS,
     &              INCEST,DEPEST)
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- RECOPIE DE LA SOLUTION
C      
      IF (NUMINS.EQ.1) THEN
        CALL VTCOPY(INCEST,DEPSO1)      
      ELSE
        CALL COPISD('CHAMP_GD','V',INCEST,DEPSO1)
      ENDIF
C
C --- PROJECTION POUR AVOIR UN CHAMP DE DEPLACEMENT
C --- CINEMATIQUEMENT ADMISSIBLE
C
      IF (LPROJ) THEN
        CALL NMPRCA(MODELE,NUMEDD,NUMFIX,MATE  ,CARELE,
     &              COMREF,COMPOR,LISCHA,METHOD,SOLVEU,
     &              FONACT,PARMET,CARCRI,SDDISC,SDTIME,
     &              NUMINS,VALINC,SOLALG,LICCVG,MATASS,
     &              MAPREC,DEFICO,RESOCO,SDDYNA,CODERE,
     &              MEELEM,MEASSE,VEELEM,VEASSE,DEPEST)
      ENDIF
C
      CALL JEDEMA()
      END
