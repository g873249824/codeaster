      SUBROUTINE CFPETI(RESOCO,NEQ   ,NBLIAI,NBLIAC,LLF   ,
     &                  LLF1  ,LLF2  ,RHO   ,LLLIAI,LLLIAC)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/09/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
      IMPLICIT NONE
      CHARACTER*24 RESOCO
      INTEGER      NEQ,NBLIAI
      INTEGER      NBLIAC,LLF,LLF1,LLF2
      REAL*8       RHO
      INTEGER      LLLIAI,LLLIAC
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - RESOLUTION)
C
C VERIFICATION SI L'ENSEMBLE DES LIAISONS SUPPOSEES EST TROP PETIT
C
C ----------------------------------------------------------------------
C
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  NEQ    : NOMBRE D'EQUATIONS
C IN  NBLIAC : NOMBRE DE LIAISONS ACTIVES
C IN  LLF    : NOMBRE DE LIAISONS DE FROTTEMENT (EN 2D)
C              NOMBRE DE LIAISONS DE FROTTEMENT SUIVANT LES DEUX
C               DIRECTIONS SIMULTANEES (EN 3D)
C IN  LLF1   : NOMBRE DE LIAISONS DE FROTTEMENT SUIVANT LA
C               PREMIERE DIRECTION (EN 3D)
C IN  LLF2   : NOMBRE DE LIAISONS DE FROTTEMENT SUIVANT LA
C               SECONDE DIRECTION (EN 3D)
C IN  NBLIAI : NOMBRE DE LIAISONS
C OUT RHO    : COEFFICIENT DE MISE A JOUR
C               1   - TOUTES LES LIAISONS SONT ACTIVES
C               VAL - VALEUR A CORRIGER SUR LE JEU POUR LA LIAISON LLMIN
C OUT LLLIAI : NUMERO DE LA LIAISON LA PLUS VIOLEE
C OUT LLLIAC : NUMERO DE LA LIAISON _ACTIVE_ LA PLUS VIOLEE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI 
      COMMON  / IVARJE / ZI(1) 
      REAL*8             ZR 
      COMMON  / RVARJE / ZR(1) 
      COMPLEX*16         ZC 
      COMMON  / CVARJE / ZC(1) 
      LOGICAL            ZL 
      COMMON  / LVARJE / ZL(1) 
      CHARACTER*8        ZK8 
      CHARACTER*16                ZK16 
      CHARACTER*24                          ZK24 
      CHARACTER*32                                    ZK32 
      CHARACTER*80                                              ZK80 
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1) 
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      REAL*8       UN
      PARAMETER    (UN=1.D0)
      REAL*8       RHORHO 
      REAL*8       AADELT,JEUOLD,JEUNEW,JEUINC
      REAL*8       R8MAEM,R8PREM
      LOGICAL      LIAIAC,DELPOS,LELPIV
      INTEGER      BTOTAL,ILIAI,ILIAC
      CHARACTER*19 LIAC 
      INTEGER      JLIAC
      CHARACTER*24 APCOEF,APDDL,APPOIN
      INTEGER      JAPCOE,JAPDDL,JAPPTR
      CHARACTER*24 JEUITE
      INTEGER      JJEUIT
      CHARACTER*19 DDEPLC,DDELT
      INTEGER      JDDEPC,JDDELT
      INTEGER      NBDDL,JDECAL
      CHARACTER*2  TYPEC0
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ() 
C
C --- ACCES STRUCTURES DE DONNEES DE CONTACT
C
      LIAC   = RESOCO(1:14)//'.LIAC'
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APDDL  = RESOCO(1:14)//'.APDDL'
      JEUITE = RESOCO(1:14)//'.JEUITE'
      CALL JEVEUO(LIAC  ,'L',JLIAC )
      CALL JEVEUO(APPOIN,'L',JAPPTR)
      CALL JEVEUO(APCOEF,'L',JAPCOE)
      CALL JEVEUO(APDDL ,'L',JAPDDL)
      CALL JEVEUO(JEUITE,'L',JJEUIT)
C
C --- ACCES AUX CHAMPS DE TRAVAIL
C --- DDEPLC: INCREMENT DE SOLUTION APRES CORRECTION DU CONTACT
C --- DDELT : INCREMENT DE SOLUTION ITERATION DE CONTACT
C
      DDEPLC = RESOCO(1:14)//'.DELC'
      DDELT  = RESOCO(1:14)//'.DDEL'
      CALL JEVEUO(DDEPLC(1:19)//'.VALE','L',JDDEPC)
      CALL JEVEUO(DDELT (1:19)//'.VALE','L',JDDELT)
C
C --- INITIALISATIONS
C
      RHORHO = R8MAEM()
      DELPOS = .FALSE.
      TYPEC0 = 'C0'
      LLLIAI = 0
      BTOTAL = NBLIAC+LLF+LLF1+LLF2
C
C --- VERIFICATION : ENSEMBLE DES LIAISONS SUPPOSEES TROP PETIT ? 
C
      IF (NBLIAC.EQ.NBLIAI) THEN
C
C ----- TOUTES LES LIAISONS SONT ACTIVES
C 
        RHORHO = UN
      ELSE IF (NBLIAC.LT.NBLIAI) THEN
C
C ----- RECHERCHE DES LIAISONS NON ACTIVES
C
        DO 180 ILIAI = 1,NBLIAI
C
          LIAIAC = .FALSE.
C 
C ------- LA LIAISON ILIAI EST-ELLE ACTIVE ? (-> LIAIAC)
C
          DO 170 ILIAC = 1,BTOTAL
            IF (ZI(JLIAC-1+ILIAC).EQ.ILIAI) LIAIAC = .TRUE.
  170     CONTINUE
C 
C ------- CALCUL DE RHOMIN
C
          IF (.NOT.LIAIAC) THEN
C 
C --------- CALCUL DE [A].{DDELT} SI LA LIAISON N'EST PAS ACTIVE
C
            JDECAL = ZI(JAPPTR+ILIAI-1)
            NBDDL  = ZI(JAPPTR+ILIAI) - ZI(JAPPTR+ILIAI-1)
            CALL CALADU(NEQ,NBDDL,ZR(JAPCOE+JDECAL),ZI(JAPDDL+JDECAL),
     &                  ZR(JDDELT),AADELT)
C
C --------- SI [A].{DDELT} EST POSITIF: LIAISON ACTIVEE 
C
            IF (AADELT.GT.R8PREM()) THEN
C
C ----------- ON NE PREND PAS EN COMPTE UNE LIAISON A PIVOT NUL
C
              CALL CFELPV(ILIAI ,TYPEC0,RESOCO,NBLIAI,LELPIV)
              IF (LELPIV) THEN
                GOTO 180
              ELSE
                DELPOS = .TRUE.
C
C ------------- VALEUR DE {JEU(DEPTOT)} : JEU AVANT ITERATION DE NEWTON
C                
                JEUOLD = ZR(JJEUIT+3*(ILIAI-1)+1-1)
C
C ------------- CALCUL DE [A].{DDEPLC} - CORRECTION DU JEU
C
                CALL CALADU(NEQ,NBDDL,ZR(JAPCOE+JDECAL),
     &                      ZI(JAPDDL+JDECAL),ZR(JDDEPC),JEUINC)
C
C ------------- CALCUL DE {JEU(DEPTOT) - [A].{DDEPLC}}/[A].{DDELT}
C
                JEUNEW = JEUOLD-JEUINC
                JEUNEW = JEUNEW/AADELT
C
C ------------- RHOMIN = MIN({JEU(DEPTOT) - A.DDEPLC}/{{A.DDELT})
C
                IF (JEUNEW.LT.RHORHO) THEN
                  RHORHO = JEUNEW
C
C --------------- LLLIAI: LIAISON LA PLUS VIOLEE
C
                  LLLIAI = ILIAI
                ENDIF
              ENDIF
            ENDIF
          ENDIF
 180    CONTINUE
C
C ----- TOUS LES {A.DELTA} SONT NEGATIFS
C
        IF (.NOT.DELPOS) THEN
          RHORHO = UN
        ENDIF
      ENDIF
C
C --- ON FAIT EN SORTE QUE RHORHO <= 1.D0
C
      RHO    = MIN(RHORHO,UN)
C
C --- LIAISON ACTIVE
C
      IF (LLLIAI.NE.0) THEN
        LLLIAC = NBLIAC + LLF + LLF1 + LLF2 + 1
      ENDIF
C 
      CALL JEDEMA() 
C
      END 
