      SUBROUTINE PEWEXT ( RESU)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/07/2005   AUTEUR VABHHTS J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
      IMPLICIT   NONE
      CHARACTER*(*)       RESU
C ----------------------------------------------------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16            ZK16
      CHARACTER*24                    ZK24
      CHARACTER*32                            ZK32
      CHARACTER*80                                    ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     -----  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------

      INTEGER         I, IRET, JINST, NDDL
      INTEGER         IDEPL0, IFORC0,IDEPL1,IFORC1
      INTEGER         NBORD,JORD,NUMORD
      REAL*8          INST,PREC,F0U0,F1U0,F0U1,F1U1,W,VALER(3)
      REAL*8          DDOT
      COMPLEX*16      C16B
      CHARACTER*8     CRIT, RESULT
      CHARACTER*8     K8B, TYPARR(4)
      CHARACTER*16    NOPARR(4)
      CHARACTER*24    DEPLA0, DEPLA1, FORCE0, FORCE1
      CHARACTER*24    LISORD
      CHARACTER*80    ERREUR(3)


      DATA ERREUR /'UN INSTANT DEMANDE N''A PAS ETE CALCULE',
     &             'IMPOSSIBLE D''EXTRAIRE UN DEPLACEMENT',
     &             'IMPOSSIBLE D''EXTRAIRE LES FORCES NODALES'  /
C-----------------------------------------------------------------------


      CALL JEMARQ()
      LISORD = '&&PEWEXT.VECTORDR'
      CALL GETVID(' ', 'RESULTAT' , 0, 1, 1, RESULT, IRET)


C -- INITIALISATION DE LA TABLE RESULTAT

      TYPARR(1) = 'I'
      TYPARR(2) = 'R'
      TYPARR(3) = 'R'
      TYPARR(4) = 'R'

      NOPARR(1) = 'NUME_ORDRE'
      NOPARR(2) = 'INST'
      NOPARR(3) = 'TRAV_ELAS'
      NOPARR(4) = 'TRAV_REEL'

      CALL TBCRSD ( RESU, 'G' )
      CALL TBAJPA ( RESU, 4, NOPARR, TYPARR )



C -- EXTRACTION DES NUMEROS D'ORDRE DU CALCUL

      CALL GETVR8(' ', 'PRECISION', 1, 1, 1, PREC  , IRET)
      CALL GETVTX(' ', 'CRITERE'  , 1, 1, 1, CRIT  , IRET)
      CALL RSUTNU(RESULT,' ',0,LISORD,NBORD,PREC,CRIT,IRET)
      IF (IRET .NE. 0) CALL UTMESS('F', 'PEWEXT', ERREUR(1))
      CALL JEVEUO ( LISORD, 'L', JORD )


C -- CALCUL DU TRAVAIL DES FORCES EXTERIEURES AUX DIFFERENTS INNSTANTS

      DO 800 I = 1 , NBORD
        CALL JEMARQ()
        CALL JERECU('V')
        NUMORD = ZI(JORD-1+I)

C      EXTRACTION DE L'INSTANT DE CALCUL
        CALL RSADPA(RESULT, 'L', 1, 'INST', NUMORD, 0, JINST, K8B)
        INST = ZR(JINST)

C      EXTRACTION DU CHAMP DE DEPLCAMENT
        CALL RSEXCH(RESULT, 'DEPL', NUMORD, DEPLA1, IRET)
        IF (IRET.NE.0) CALL UTMESS('F', 'PEWEXT', ERREUR(2))

C      EXTRACTION DU CHAMP DE FORCE NODALE
        CALL RSEXCH(RESULT, 'FORC_NODA', NUMORD, FORCE1, IRET)
        IF (IRET.NE.0) CALL UTMESS('F', 'PEWEXT', ERREUR(3))

C      CALCUL DU PRODUIT SCALAIRE F.U
        CALL JELIRA(DEPLA1(1:19)//'.VALE','LONMAX',NDDL,K8B)
        CALL JEVEUO(DEPLA1(1:19)//'.VALE','L',IDEPL1)
        CALL JEVEUO(FORCE1(1:19)//'.VALE','L',IFORC1)

        F1U1 = DDOT(NDDL, ZR(IDEPL1),1, ZR(IFORC1),1)


C      CALCUL DE L'INTEGRALE I(F.DU)
         IF (I.GE.2) THEN
          CALL JEVEUO(DEPLA0(1:19)//'.VALE','L',IDEPL0)
          CALL JEVEUO(FORCE0(1:19)//'.VALE','L',IFORC0)
          F1U0 = DDOT(NDDL, ZR(IDEPL0),1, ZR(IFORC1),1)
          F0U1 = DDOT(NDDL, ZR(IDEPL1),1, ZR(IFORC0),1)
          W = W + 0.5D0 *(F0U1-F1U0+F1U1-F0U0)
        ELSE
          W = 0
        END IF

        VALER(1) = INST
        VALER(2) = F1U1/2
        VALER(3) = W
        CALL TBAJLI (RESU,4,NOPARR,NUMORD,VALER,C16B,K8B,0)

        DEPLA0 = DEPLA1
        FORCE0 = FORCE1
        F0U0 = F1U1

        CALL JEDEMA()
 800  CONTINUE

      CALL JEDETC('V','&&PEWEXT',1)
      CALL JEDEMA()
      END
