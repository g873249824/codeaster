      SUBROUTINE DDLPHY (DEPPLU,NEQ,VECT,DESC)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 05/03/2012   AUTEUR IDOUX L.IDOUX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE IDOUX L.IDOUX 
C ----------------------------------------------------------------------
C     CALCUL DES ENERGIES
C ----------------------------------------------------------------------
C  IN      : DEPPLU   : VECTEUR DES INCONNUS
C  IN      : NEQ      : DIMENSION DU VECTEUR
C  IN/OUT  : VECT     : EN ENTREE : VECTEUR COMPLET
C                       EN SORTIE : LES DDL NON PHYSIQUES SONT A ZERO
C  OUT     : DESC     : DESCRIPTEUR DES COMPOSANTES
C
C CORPS DU PROGRAMME
      IMPLICIT NONE
C DECLARATION PARAMETRES D'APPELS
C
      REAL*8 VECT(*)
      CHARACTER*19 DEPPLU
      CHARACTER*8  DESC(*)
      INTEGER NEQ
C
C    ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- FIN COMMUNS NORMALISES  JEVEUX  ----------------------------
C
C DECLARATION VARIABLES LOCALES
C
      CHARACTER*8  NOMGD,KBID,NOMA,EXCLUS(200)
      CHARACTER*19 PRNO
      CHARACTER*32 JEXNUM,JEXNOM
      INTEGER      IAUX,IER,JNOCMP,NCMPMX,JPRNO,JNUEQ,NEC
      INTEGER      JDG,INUEQ,JAUX,KAUX,IPOSDG
      INTEGER      NBNOT,IBID
      INTEGER      NBEXCL,IVAL,POS,IVECT2
      LOGICAL      GARDER
C
      CALL JEMARQ()
C
      DO 5  IAUX=1,200
        EXCLUS(IAUX)=' '
5     CONTINUE
      CALL WKVECT('VECTMP','V V R',NEQ,IVECT2) 
      DO 10 IAUX=1,NEQ
        ZR(IVECT2-1+IAUX)=VECT(IAUX)
        VECT(IAUX)=0.D0
        DESC(IAUX)=' '
10    CONTINUE
      CALL DISMOI('F','NOM_GD',DEPPLU,'CHAM_NO',IBID,NOMGD,IER)
      CALL JEVEUO(JEXNOM('&CATA.GD.NOMCMP',NOMGD),'L',JNOCMP)
      CALL DISMOI('F','NB_CMP_MAX',NOMGD,'GRANDEUR',NCMPMX,KBID,IER)
      CALL DISMOI('F','PROF_CHNO',DEPPLU,'CHAM_NO',IBID,PRNO,IER)
      CALL JEVEUO(JEXNUM(PRNO//'.PRNO',1),'L',JPRNO)
      CALL JEVEUO(PRNO//'.NUEQ','L',JNUEQ)
      CALL DISMOI('F','NB_EC',NOMGD,'GRANDEUR',NEC,KBID,IER)
      CALL DISMOI('F','NOM_MAILLA',DEPPLU,
     &            'CHAM_NO',IBID,NOMA,IER)
      CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',NBNOT,KBID,IER)
      NBEXCL=0
C
      DO 20 IAUX = 1,NBNOT
C       DEBUT DU DESCRIPTEUR GRANDEUR DU NOEUD
        JDG = JPRNO - 1 + (IAUX-1)*(2+NEC) + 1 + 2
C       INDIRECTION VERS LE .NUEQ
        INUEQ = ZI(JPRNO - 1 + (IAUX-1)*(2+NEC) + 1)
C       POSITIONS DES DDL PHYSIQUES DANS LE DG
        DO 21 JAUX=1,NCMPMX
          POS = IPOSDG(ZI(JDG),JAUX)
          IF (POS.NE.0) THEN
C           A EXCLURE OU CONSERVER
            GARDER=.TRUE.
            DO 22 KAUX = 1,NBEXCL
              IF (EXCLUS(KAUX).EQ.ZK8(JNOCMP-1+JAUX)) THEN
                GARDER=.FALSE.
              ENDIF
22          CONTINUE
C           ADRESSE DU DDL DANS LE .VALE           
            IVAL = ZI(JNUEQ - 1 +  INUEQ - 1 + POS)
            DESC(IVAL) = ZK8(JNOCMP-1+JAUX)
            IF (GARDER) THEN
              VECT(IVAL) = ZR(IVECT2-1+IVAL)
            ENDIF
          ENDIF
21      CONTINUE
20    CONTINUE
C
      CALL JEDETR('VECTMP')
C
      CALL JEDEMA()
C
      END
