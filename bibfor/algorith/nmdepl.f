      subroutine NMDEPL(MODELE,NUMEDD,MATE,CARELE,COMREF,COMPOR,LISCHA,
     &                 CNFEXT,PARMET,CARCRI,MODEDE,NUMEDE,SOLVDE,
     &                 PARCRI,POUGD,ITERAT,VALMOI,RESOCO,VALPLU,CNRESI,
     &                 CNDIRI,REAROT,NURO,METHOD,NUMINS,OPTION,CONV,
     &                 STADYN,DEPENT,VITENT,LAMORT,MEMASS,MASSE,AMORT,
     &                 COEVIT,COEACC,INDRO,SECMBR,INSTAP,INSTAM,CMD,
     &                 ETAN,PARTPS,PREMIE,ZFON,FONACT,DEPKM1,VITKM1,
     &                 ACCKM1,VITPLU,ACCPLU,ROMKM1,ROMK,PILOTE,DEPDEL,
     &                 DEPPIL,DEPOLD,LIGRCF,CARTCF,MCONEL,SCONEL,
     &                 MAILLA,DEPPLT,DEFICO,CNCINE,SOLVEU,LREAC,ETA,
     &                 LICCVG,DDEPLA,VITMOI,ACCMOI)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 06/09/2005   AUTEUR TORKHANI M.TORKHANI 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
C
      implicit none
      INTEGER       ZFON
      logical REAROT,LAMORT,PREMIE,FONACT(ZFON),LREAC(2)
      integer ITERAT,LICCVG(2),INDRO,NUMINS
      real*8 PARMET(*),CONV(*),INST(3),ETA,ETAN
      real*8 PARCRI(*),COEVIT,COEACC
      real*8 INSTAP,INSTAM
      character*8 MODEDE,MCONEL,SCONEL,MAILLA
      character*14 PILOTE
      character*16 OPTION,METHOD(*),CMD
      character*19 LISCHA,CNRESI,CNDIRI,CNFEXT,SOLVDE,PARTPS
      character*19 NURO,LIGRCF,CARTCF,SOLVEU
      character*24 MODELE,NUMEDD,MATE,CARELE,COMREF,COMPOR
      character*24 CARCRI,VALMOI,POUGD,DDEPLA,VALPLU,DEPDEL
      character*24 RESOCO,SECMBR,DEPOLD,NUMEDE,DEPPIL(2)
      character*24 STADYN,DEPENT,VITENT,MEMASS,MASSE,AMORT
      character*24 DEPKM1,VITKM1,ACCKM1,VITPLU,ACCPLU
      character*24 ROMKM1,ROMK,DEPPLT,DEFICO,CNCINE
      character*24 VITMOI,ACCMOI
C
C
C ----------------------------------------------------------------------
C
C                   CALCUL DE L'INCREMENT DE DEPLACEMENT
C
C                A PARTIR DE(S) DIRECTION(S) DE DESCENTE :
C
C              PRISE EN COMPTE DU PILOTAGE ET DE LA RECHERCHE LINEAIRE
C
C ----------------------------------------------------------------------
C
C IN       MODELE K24  MODELE
C IN       NUMEDD K24  NUME_DDL
C IN       MATE   K24  CHAMP MATERIAU
C IN       CARELE K24  CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN       COMREF K24  VARI_COM DE REFERENCE
C IN       COMPOR K24  COMPORTEMENT
C IN       LISCHA K19  L_CHARGES
C IN       CNFEXT K19  RESULTANTE DES EFFORTS EXTERIEURS
C IN       PARMET  R8  PARAMETRES DES METHODES DE RESOLUTION
C IN       CARCRI K24  PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN       MODEDE K8   MODELE NON LOCAL
C IN       NUMEDE K24  NUME_DDL NON LOCAL
C IN       SOLVDE K19  SOLVEUR NON LOCAL
C IN       PARCRI  R   CRITERES DE CONVERGENCE GLOBAUX
C IN       POUGD  K24  DONNES POUR POUTRES GRANDES DEFORMATIONS
C IN       ITERAT  I   NUMERO D'ITERATION DE NEWTON
C IN       VALMOI K24  ETAT EN T-
C IN       ZFON    I   LONGUEUR MAXI DU VECTEUR FONACT
C IN       FONACT  I   FONCTIONNALITES ACTIVEES
C            FONACT(1):  RECHERCHE LINEAIRE
C            FONACT(2):  PILOTAGE
C            FONACT(3):  LOIS NON LOCALES
C            FONACT(4):  CONTACT DISCRET
C            FONACT(5):  CONTACT CONTINU
C            FONACT(6):  METHODE XFEM
C            FONACT(7):  ALGORITHME DE DE BORST
C            FONACT(8):  CONVERGENCE PAR RESIDU DE REFERENCE
C            FONACT(9):  METHODE XFEM AVEC CONTACT
C            FONACT(10): CONTACT/FROTTEMENT CONTINU
C IN       RESOCO K24  SD CONTACT
C IN/JXVAR VALPLU K24  ETAT EN T+ : SIGPLU ET VARPLU
C IN/JXVAR CNRESI K19  FINT+BT.LAMBDA
C IN/JXVAR CNDIRI K19  BT.LAMBDA
C IN       REAROT L    BOOLEEN DE PRESENCE DE DDL DE GRDE ROTATION
C IN/JXIN  NURO   K19  TYPE DES DDLS (CF. MAJDVA)
C IN       METHOD K16  INFORMATIONS SUR LES METHODES DE RESOLUTION
C                      VOIR DETAIL DES COMPOSANTES DANS NMLECT
C IN       NUMINS  I   NUMERO D'INSTANT
C OUT      OPTION K16  NOM D'OPTION PASSE A MERIMO 
C IN       PILOTE K14  SD PILOTAGE
C IN       NBEFFE  I   NOMBRE DE VALEURS DE PILOTAGE ENTRANTES
C IN       DEPDEL K24  INCREMENT DE DEPLACEMENT CUMULE
C IN       DEPPIL K24  CORRECTION DE DEPLACEMENT DE L'ITERATION
C IN       DEPOLD K24  INCREMENT DE DEPLACEMENT PAS PRECEDENT (LONG_ARC)
C OUT      ETA     R8  PARAMETRE DE PILOTAGE
C OUT      LICCVG  I   CODES RETOURS 
C                       (1) PILOTAGE
C                       (2) LOI DE COMPORTEMENT
C                       (3) CONTACT - FROTTEMENT
C                       (4) CONTACT - FROTTEMENT
C OUT      DDEPLA K24  DIRECTION DE DESCENTE REACTUALISEE
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      integer ZI
      common /IVARJE/ ZI(1)
      real*8 ZR
      common /RVARJE/ ZR(1)
      complex*16 ZC
      common /CVARJE/ ZC(1)
      logical ZL
      common /LVARJE/ ZL(1)
      character*8 ZK8
      character*16 ZK16
      character*24 ZK24
      character*32 ZK32
      character*80 ZK80
      common /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      logical CFINT
      integer NEQ,JDEPM,JDEPDE,JDEPP,JDDEPL,IBID
      character*8 K8BID
      character*19 K19BLA
      character*24 DEPMOI,SIGMOI,COMMOI
      character*24 DEPPLU,SIGPLU,VARPLU,COMPLU
      character*24 K24BID,VARDEP,LAGDEP,K24BLA
C
      integer IRET,IRE2,JTRA,JRESI,JRSST,NBSS
      character*24 TABTRA
      TABTRA = '&&NMDEPL.TABTRA'
C -- TRAITEMENT EVENTUEL DU CONTACT ET/OU DU FROTTEMENT
C     PROJECTION DE DELTA.U + DU0 = DU SUR CONTACT ADMISSIBLE
      if (FONACT(4)) then
        call NMCOFR(MAILLA,DEPPLT,DEPDEL,DEPPIL,DEFICO,RESOCO,CNCINE,
     &              ITERAT,INSTAP,CONV,LICCVG,LREAC)
      end if
C
C    A-T-ON BESOIN DE REACTUALISER LES RIGI_ELEM OU PAS 
      call NMMATR('FORCES_INT',K24BLA,K24BLA,K24BLA,K24BLA,K24BLA,
     &           K24BLA,K19BLA,K24BLA,' ',METHOD,K19BLA,PARMET,K24BLA,
     &           PARTPS,NUMINS,ITERAT,K24BLA,K24BLA,K24BLA,K24BLA,
     &           K19BLA,OPTION,DEFICO,STADYN,PREMIE,CMD,DEPENT,VITENT,
     &           LAMORT,MEMASS,MASSE,AMORT,COEVIT,COEACC,IBID)
C
C    PAS DE RECHERCHE LINEAIRE
C    EN PARTICULIER SUITE A LA PREDICTION
      if (.not.FONACT(1) .or. ITERAT.eq.0) then
C
        call NMPICH(MODELE,NUMEDD,MATE,CARELE,COMREF,COMPOR,LISCHA,
     &              CNFEXT,PARMET,CARCRI,MODEDE,NUMEDE,SOLVDE,PARCRI,
     &              POUGD,ITERAT,VALMOI,RESOCO,VALPLU,CNRESI,CNDIRI,
     &              REAROT,FONACT,CONV,INDRO,PILOTE,DEPDEL,DEPPIL,
     &              DEPOLD,INSTAP-INSTAM,SECMBR,ETA,LICCVG,DDEPLA)
        if (LICCVG(1) .eq. 1) goto 9999
        CFINT = .true.
      else
C
C -- RECHERCHE LINEAIRE
C
        if (FONACT(2)) then
C
C        AVEC PILOTAGE        
C
          call NMREPL(MODELE,NUMEDD,MATE,CARELE,COMREF,COMPOR,LISCHA,
     &                CNFEXT,PARMET,CARCRI,MODEDE,NUMEDE,SOLVDE,PARCRI,
     &                DEPPIL,INST,ITERAT,VALMOI,POUGD,DEPDEL,RESOCO,
     &                DDEPLA,VALPLU,CNRESI,CNDIRI,CONV,LICCVG,REAROT,
     &                INDRO,SECMBR,INSTAP-INSTAM,PILOTE,ETAN,ETA,DEPOLD)
C
C
          else
C
C        SANS PILOTAGE
            call COPISD('CHAMP_GD','V',DEPPIL(1),DDEPLA)
            call NMRECH(MODELE,NUMEDD,MATE,CARELE,COMREF,COMPOR,LISCHA,
     &                  CNFEXT,PARMET,CARCRI,MODEDE,NUMEDE,SOLVDE,
     &                  PARCRI,ITERAT,VALMOI,POUGD,DEPDEL,RESOCO,DDEPLA,
     &                  VALPLU,CNRESI,CNDIRI,CONV,LICCVG(2),REAROT,INDRO
     &                 )
        end if
C      CALCUL DE RIGI_ELEM SI DEMANDE	
        if (OPTION .eq. 'FULL_MECA') then
          CFINT = .true.
        else
          CFINT = .false.
        end if
      end if
C
      if (CMD .eq. 'DYNA_TRAN_EXPLI') then
C ------------> MISE A JOUR DES VITESSES :
C               {Vn+1}={Vn}+DT/2*({An}+{An+1})
C                       {Un}={Un+1}
C                       {An}={An+1}
C                       {Vn}={Vn+1}
        call JELIRA(ACCMOI(1:19)//'.VALE','LONMAX',NEQ,K8BID)
        call MXMAJD(NEQ,REAROT,NURO,INSTAP-INSTAM,VITMOI,ACCMOI,VITPLU,
     &              ACCPLU)
      else
C -- MISE A JOUR DES DEPLACEMENTS
        call DESAGG(VALMOI,DEPMOI,SIGMOI,K24BID,COMMOI,K24BID,K24BID,
     &              K24BID,K24BID)
        call DESAGG(VALPLU,DEPPLU,SIGPLU,VARPLU,COMPLU,VARDEP,LAGDEP,
     &              K24BID,K24BID)
        call JELIRA(DEPMOI(1:19)//'.VALE','LONMAX',NEQ,K8BID)
C
        call JEVEUO(DEPMOI(1:19)//'.VALE','L',JDEPM)
        call JEVEUO(DEPDEL(1:19)//'.VALE','E',JDEPDE)
        call JEVEUO(DEPPLU(1:19)//'.VALE','E',JDEPP)
        call JEVEUO(DDEPLA(1:19)//'.VALE','L',JDDEPL)
C
        if (CMD(1:4) .eq. 'STAT') then
          call MAJOUR(NEQ,REAROT,ZI(INDRO),ZR(JDEPDE),ZR(JDDEPL),1.d0,
     &                ZR(JDEPDE))
          call MAJOUR(NEQ,REAROT,ZI(INDRO),ZR(JDEPP),ZR(JDDEPL),1.d0,
     &                ZR(JDEPP))
        else
          call MAJDVA(NEQ,REAROT,NURO,COEVIT,COEACC,DEPMOI,DDEPLA,
     &                DEPDEL,DEPKM1,VITKM1,ACCKM1,DEPPLU,VITPLU,ACCPLU,
     &                ROMKM1,ROMK)
        end if
C
        if (CFINT) then
C
C --- CONTACT METHODE CONTINUE AVEC OU SANS XFEM
C
          IF (FONACT(5)) THEN
            IF (FONACT(9)) THEN
              CALL XMMCME(MODELE(1:8),DEPMOI,DEPDEL,DEFICO,
     &                    MCONEL,SCONEL)
            ELSE
              CALL MMCMEM(MODELE,DEPMOI,DEPDEL,VITMOI,ACCMOI,
     &                    LIGRCF,CARTCF,MCONEL,SCONEL)
            ENDIF
          ENDIF
          call NMFINT(MODELE,NUMEDD,MATE,CARELE,COMREF,COMPOR,LISCHA,
     &                CARCRI,POUGD,ITERAT,MODEDE,NUMEDE,SOLVDE,PARMET,
     &                PARCRI,VALMOI,DEPDEL,RESOCO,VALPLU,CNRESI,CNDIRI,
     &                LICCVG(2),OPTION,CONV,STADYN,DEPENT,VITENT)
C
C   NECESSAIRE POUR LA PRISE EN COMPTE DE MACRO-ELEMENT STATIQUE
          call DISMOI('F','NB_SS_ACTI',MODELE,'MODELE',NBSS,K8BID,IRET)
          if (NBSS .gt. 0) then
            call JEEXIN('&&SSRIGI.REFE_RESU',IRET)
            if (IRET .ne. 0) then
              call JEEXIN(TABTRA,IRE2)
              if (IRE2 .eq. 0) then
                call WKVECT(TABTRA,'V V R',NEQ,JTRA)
              else
                call JEVEUO(TABTRA,'E',JTRA)
              end if
              call JEVEUO(CNRESI(1:19)//'.VALE','E',JRESI)
              call JEVEUO('&&ASRSST           .&INT','L',JRSST)
              call MRMULT('ZERO',JRSST,ZR(JDEPP),'R',ZR(JTRA),1)
              call DAXPY(NEQ,1.d0,ZR(JTRA),1,ZR(JRESI),1)
            end if
          end if
C
C   FIN MACRO-ELEMENT STATIQUE
C
         end if
      end if
C
C
 9999 continue
      end
