      SUBROUTINE NMDEPL(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                  COMPOR,LISCHA,FONACT,PARMET,CARCRI,
     &                  MAILLA,PARCRI,METHOD,LICCVG,CONV  ,
     &                  CNFEXT,CNFINT,CNDIRI,SDNURO,SOLVEU,
     &                  PREMIE,NUMINS,ITERAT,OPTION,MATASS,
     &                  SDDISC,VALMOI,VALPLU,POUGD ,SECMBR,
     &                  DEPALG,VEELEM,MEELEM,MEASSE,SDDYNA,
     &                  INSTAP,INSTAM,ETA   ,SDPILO,DEFICO,
     &                  RESOCO,DEFICU,RESOCU)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2003  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
C
      IMPLICIT NONE
      LOGICAL      PREMIE,FONACT(*)
      INTEGER      ITERAT,LICCVG(*),NUMINS
      REAL*8       PARMET(*),CONV(*),ETA
      REAL*8       PARCRI(*)
      REAL*8       INSTAP,INSTAM
      CHARACTER*8  MAILLA
      CHARACTER*14 SDPILO
      CHARACTER*16 OPTION,METHOD(*)
      CHARACTER*19 LISCHA,SDDISC
      CHARACTER*19 CNFINT,CNDIRI,CNFEXT
      CHARACTER*19 SDNURO,SOLVEU,MATASS,SDDYNA
      CHARACTER*24 MODELE,NUMEDD,MATE,CARELE,COMREF,COMPOR
      CHARACTER*24 CARCRI
      CHARACTER*24 VALMOI(8),POUGD (8),VALPLU(8),SECMBR(8),DEPALG(8)
      CHARACTER*8  MEELEM(8),VEELEM(30)
      CHARACTER*19 MEASSE(8)
      CHARACTER*24 DEFICO,DEFICU,RESOCU,RESOCO
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C CALCUL DE L'INCREMENT DE DEPLACEMENT A PARTIR DE(S) DIRECTION(S) 
C DE DESCENTE
C PRISE EN COMPTE DU PILOTAGE ET DE LA RECHERCHE LINEAIRE
C      
C ----------------------------------------------------------------------
C
C
C IN  MODELE : MODELE
C IN  NUMEDD : NUME_DDL
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMREF : VARI_COM DE REFERENCE
C IN  COMPOR : COMPORTEMENT
C IN  LISCHA : L_CHARGES
C IN  PARMET : PARAMETRES DES METHODES DE RESOLUTION
C IN  CARCRI : PARAMETRES DES METHODES D'INTEGRATION LOCALES
C IN  PARCRI : CRITERES DE CONVERGENCE GLOBAU
C IN  VALMOI : ETAT EN T-
C IN  VALPLU : ETAT EN T+ 
C IN  SECMBR : SECONDS MEMBRES
C IN  POUGD  : INFOS POUTRES EN GRANDES ROTATIONS
C IN  DEPALG : VARIABLE CHAPEAU POUR DEPLACEMENTS
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  MEELEM : MATRICES ELEMENTAIRES
C IN  MEASSE : MATRICES ASSEMBLEES
C IN  VEELEM : VECTEURS ELEMENTAIRES
C IN  DEFICO : SD DEF. CONTACT
C IN  RESOCO : SD RES. CONTACT
C IN  DEFICU : SD DEF. LIAISON_UNILATERALE
C IN  RESOCU : SD RES. LIAISON_UNILATERALE
C IN  CNFEXT : FORCES EXTERNES
C OUT CNFINT : FORCES INTERNES   - FINT + AT.MU
C OUT CNDIRI : REACTIONS D'APPUI - BT.LAMBDA + AT.MU
C IN  SDNURO : TYPE DES DDLS (CF. MAJDVA)
C IN  METHOD : INFORMATIONS SUR LES METHODES DE RESOLUTION
C IN  NUMINS : NUMERO D'INSTANT
C OUT OPTION : NOM D'OPTION PASSE A MERIMO 
C IN  MATASS : NOM DE LA MATRICE DU PREMIER MEMBRE ASSEMBLEE
C IN  SDPILO : SD PILOTAGE
C IN  NBEFFE : NOMBRE DE VALEURS DE PILOTAGE ENTRANTES
C IN  SDDYNA : SD DEDIEE A LA DYNAMIQUE (CF NDLECT)
C OUT ETA    : PARAMETRE DE PILOTAGE
C OUT LICCVG : CODES RETOURS 
C                       (1) PILOTAGE
C                       (2) LOI DE COMPORTEMENT
C                       (3) CONTACT - FROTTEMENT
C                       (4) CONTACT - FROTTEMENT
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      LOGICAL      LCFINT,NDYNLO,REASMA,LBID
      CHARACTER*24 DEPMOI,SIGMOI,VARMOI,COMMOI,VITMOI
      CHARACTER*24 ACCMOI
      CHARACTER*24 DEPPLU,SIGPLU,VARPLU,COMPLU,VITPLU
      CHARACTER*24 ACCPLU
      CHARACTER*24 CNCINE
      CHARACTER*24 DEPOLD,DDEPLA,DEPDEL,DEPPRE(2)
      CHARACTER*24 DEPKM1,VITKM1,ACCKM1,ROMKM1,ROMK             
      CHARACTER*24 K24BID,K24BLA
      REAL*8       DINST,ETAN,R8BID,OFFSET,RHO
      CHARACTER*16 METCOR,METPRE
      CHARACTER*8  K8BID
      INTEGER      INDRO ,ISNNEM,ITERG,LDCCVG,PILCVG,NEQ,IRET
      LOGICAL      ISFONC,LUNIL,LCTCD,LPILO,LRELI,LCTCC,LXFEM,REAROT
      CHARACTER*8  VEFINT,VEDIRI
      CHARACTER*8  MERIGI,MESSTR
      CHARACTER*19 SSTRU   
      INTEGER      IFM,NIV         
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> CORRECTION INCR. DEPL.' 
      ENDIF       
C
C --- INITIALISATIONS
C
      DINST  = INSTAP - INSTAM
      ETAN   = ETA
      RHO    = 1.D0
      OFFSET = 0.D0
      ETA    = 0.D0      
      K24BLA = ' '
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- FONCTIONNALITES ACTIVEES
C    
      LUNIL  = ISFONC(FONACT,'LIAISON_UNILATER')
      LCTCD  = ISFONC(FONACT,'CONT_DISCRET')
      LCTCC  = ISFONC(FONACT,'CONT_CONTINU')
      LXFEM  = ISFONC(FONACT,'XFEM') 
      LPILO  = ISFONC(FONACT,'PILOTAGE')
      LRELI  = ISFONC(FONACT,'RECH_LINE')
      REAROT = ISFONC(FONACT,'REAROT')   
C      
C --- POUTRES EN GRANDES ROTATIONS
C    
      IF (REAROT) THEN
        CALL JEVEUO(SDNURO//'.NDRO','L',INDRO)                 
      ELSE
        INDRO = ISNNEM()
      ENDIF   
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C
      CALL DESAGG(VALMOI,DEPMOI,SIGMOI,VARMOI,COMMOI,
     &            VITMOI,ACCMOI,K24BID,K24BID)
      CALL DESAGG(VALPLU,DEPPLU,SIGPLU,VARPLU,COMPLU,
     &            VITPLU,ACCPLU,K24BID,K24BID)
      CALL DESAGG(POUGD ,DEPKM1,VITKM1,ACCKM1,ROMKM1,
     &            ROMK  ,K24BID,K24BID,K24BID)     
      CALL DESAGG(SECMBR,K24BID,K24BID,K24BID,K24BID,
     &            K24BID,K24BID,K24BID,CNCINE)
      CALL DESAGG(DEPALG,DDEPLA,DEPDEL,DEPOLD,DEPPRE(1),
     &            DEPPRE(2),K24BID,K24BID,K24BID)  
      VEFINT = VEELEM(1)   
      VEDIRI = VEELEM(2) 
      MERIGI = MEELEM(1)
      MESSTR = MEELEM(6)
      SSTRU  = MEASSE(6)
C
C --- A-T-ON BESOIN DE REACTUALISER LES FORCES INTERNES ?
C
      CALL NMCHOI('FORCES_INT',
     &            PARMET,METHOD,SDDISC,METCOR,METPRE,
     &            NUMINS,PREMIE,ITERAT,DEFICO,SDDYNA,
     &            OPTION,REASMA,LBID  ,LBID  ,LBID  )  
C
C --- PAS DE RECHERCHE LINEAIRE (EN PARTICULIER SUITE A LA PREDICTION)
C
      IF (.NOT.LRELI .OR. ITERAT.EQ.0) THEN
        IF (LPILO) THEN
          CALL NMPICH(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                COMPOR,LISCHA,CNFEXT,CNFINT,CNDIRI,
     &                CARCRI,FONACT,SDPILO,SDDYNA,ITERAT,
     &                INDRO ,DINST ,RESOCO,VALMOI,VALPLU,
     &                SECMBR,POUGD ,DEPALG,VEELEM,MEELEM,
     &                MEASSE,ETA   ,RHO   ,OFFSET,LICCVG)
          IF (LICCVG(1) .EQ. 1) THEN
            GOTO 9999
          ENDIF             
        ENDIF        
        LCFINT = .TRUE.       
      ELSE
C
C -- RECHERCHE LINEAIRE
C    
        IF (LPILO) THEN
          CALL NMREPL(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                COMPOR,LISCHA,CNFEXT,CNFINT,CNDIRI,
     &                PARMET,CARCRI,FONACT,ITERAT,INDRO ,
     &                PARCRI,CONV  ,METHOD,RESOCO,SDPILO,
     &                SDDYNA,VALMOI,VALPLU,DEPALG,POUGD ,
     &                SECMBR,VEELEM,MEELEM,MEASSE,DINST ,
     &                ETAN  ,ETA   ,RHO   ,OFFSET,LICCVG)
        ELSE
          CALL COPISD('CHAMP_GD','V',DEPPRE(1),DDEPLA)
          CALL NMRELI(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &                COMPOR,LISCHA,CNFEXT,CNFINT,CNDIRI,
     &                PARMET,CARCRI,FONACT,ITERAT,INDRO ,
     &                PARCRI,CONV  ,METHOD,RESOCO,VALMOI,  
     &                VALPLU,DEPALG,POUGD ,VEELEM,MEELEM,
     &                MEASSE,SDDYNA,PILCVG)
          LICCVG(2) = PILCVG
        END IF
        IF (OPTION .EQ. 'FULL_MECA') THEN
          LCFINT = .TRUE.
        ELSE
          LCFINT = .FALSE.
        END IF
      END IF
C
C --- AJUSTEMENT DE LA DIRECTION DE DESCENTE (AVEC ETA, RHO ET OFFSET)
C
      CALL NMPILD(NEQ   ,DEPALG,LPILO ,LRELI ,ETA   ,
     &            ITERAT,RHO   ,OFFSET)       
C
      IF (LCTCD.OR.LUNIL) THEN
        LCFINT = .TRUE.
      ENDIF     
C
C --- ACTUALISATION DES DEPLACEMENTS
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... ACTUALISATION DU DEPLACEMENT' 
      ENDIF
      IF (NDYNLO(SDDYNA,'EXPLICITE')) THEN
        CALL MXMAJD(DINST ,VITMOI, ACCMOI,VITPLU,ACCPLU,
     &              SDDYNA)
        LCFINT = .FALSE.
      ELSE
        CALL NMMAJD(MAILLA,FONACT,CONV  ,LICCVG,SDDYNA,
     &              MATASS,SDNURO,INDRO ,ITERAT,INSTAP,
     &              DEFICO,DEFICU,RESOCO,RESOCU,CNCINE,
     &              DEPMOI,DEPPLU,ACCPLU,VITPLU,DDEPLA,
     &              DEPDEL,DEPKM1,VITKM1,ACCKM1,ROMKM1,
     &              ROMK)
      ENDIF
C
C --- CALCUL DES FORCES INTERNES
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> ... REAC. FORCES INTERNES ?' 
      ENDIF
      IF (LCFINT) THEN
        
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ... -> OUI'
        ENDIF       
C
C --- CALCUL VECT_ELEM CONTACT METHODE CONTINUE AVEC OU SANS XFEM
C
        IF (LCTCC) THEN
          IF (LXFEM) THEN
              CALL MMINFP(0     ,DEFICO,K24BLA,'ITER_GEOM_MAXI',
     &                    ITERG ,R8BID ,K24BID,LBID)
              IF (ITERG.GT.0) THEN
                CALL XMTCME(MODELE(1:8),DEPMOI,DEPDEL,RESOCO)
              ELSEIF (ITERG.EQ.0) THEN
                CALL XMMCME(MODELE(1:8),MAILLA,DEPMOI,DEPDEL,RESOCO)
              ENDIF
          ELSE
            CALL MMCMEM('CORRECTION',
     &                  MAILLA,MODELE,DEFICO,RESOCO,DEPMOI,
     &                  DEPDEL,VITMOI,VITPLU,ACCMOI)
          ENDIF
        ENDIF
        CALL NMFINT(OPTION,
     &              MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &              COMPOR,LISCHA,CARCRI,FONACT,RESOCO,
     &              ITERAT,SDDYNA,LDCCVG,VALMOI,VALPLU,
     &              POUGD ,DEPALG,MERIGI,MESSTR,VEDIRI,
     &              VEFINT,SSTRU ,CNFINT,CNDIRI)
        LICCVG(2) = LDCCVG
      ELSE
        IF (NIV.GE.2) THEN
          WRITE (IFM,*) '<MECANONLINE> ... -> NON'
        ENDIF        
      ENDIF
C
 9999 CONTINUE

      CALL JEDEMA()
      END
