      SUBROUTINE DY2MBR(NOMO  ,MATE  ,CARELE,NUMDDL,NEQ  ,
     &                  LISCHA,NBPASE,NRPASE,INPSCO,FREQ ,
     &                  VEDIRI,VENEUM,VEVOCH,VASSEC,J2ND  )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 17/01/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT      NONE
      CHARACTER*19  LISCHA
      INTEGER       NBPASE,NRPASE,NEQ,J2ND
      REAL*8        FREQ
      CHARACTER*8   NOMO
      CHARACTER*14  NUMDDL
      CHARACTER*19  VEDIRI,VENEUM,VEVOCH,VASSEC
      CHARACTER*24  MATE,CARELE
      CHARACTER*(*) INPSCO
C
C ----------------------------------------------------------------------
C
C DYNA_LINE_HARM
C
C CALCUL DU SECOND MEMBRE
C
C ----------------------------------------------------------------------
C
C
C IN  NBPASE : NOMBRE DE PARAMETRE SENSIBLE
C IN  NRPASE : NUMERO DE PARAMETRE SENSIBLE ( =0 => CALCUL STANDARD)
C IN  INPSCO : STRUCTURE CONTENANT LA LISTE DES NOMS (CF. PSNSIN)
C IN  VEDIRI : VECT_ELEM DE L'ASSEMBLAGE DES ELEMENTS DE LAGRANGE
C IN  VENEUM : VECT_ELEM DE L'ASSEMBLAGE DES CHARGEMENTS DE NEUMANN
C IN  VEVOCH : VECT_ELEM DE L'ASSEMBLAGE DES CHARGEMENTS EVOL_CHAR
C IN  VASSEC : VECT_ELEM DE L'ASSEMBLAGE DES CHARGEMENTS VECT_ASSE_CHAR
C IN  LISCHA : SD LISTE DES CHARGES
C IN  NUMDDL : NOM DU NUME_DDL
C IN  FREQ   : VALEUR DE LA FREQUENCE
C IN  NOMO   : NOM DU MODELE
C IN  MATE   : NOM DU CHAMP DE MATERIAU CODE
C IN  CARELE : CARACTERISTIQUES DES POUTRES ET COQUES
C IN  NEQ    : NOMBRE D'EQUATIONS DU SYSTEME
C IN  J2ND   : ADRESSE DU VECTEUR ASSEMBLE SECOND MEMBRE
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      REAL*8       R8BID
      INTEGER      IEQ
      INTEGER      TYPESE
      INTEGER      J2ND1,J2ND2,J2ND3,J2ND4,J2ND5
      CHARACTER*1  TYPRES
      CHARACTER*8  NOPASE,PARA
      CHARACTER*19 CNDIRI,CNCOMK,CNNEUM,CNVOCH,CNVEAC,CNVASS
      CHARACTER*19 VECOMP
      CHARACTER*24 STYPSE
      CHARACTER*19 DEPL,ACCE
      CHARACTER*19 CNCHKM,CNCHMP
      INTEGER      JDCHK,JDVEK
      COMPLEX*16   CZERO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      TYPRES = 'C'
      PARA   = 'FREQ'
      CZERO  = DCMPLX(0.D0,0.D0)
      CNDIRI = '&&DY2MBR.CNDIRI'
      CNNEUM = '&&DY2MBR.CNNEUM'
      CNVOCH = '&&DY2MBR.CNVOCH'
      CNVEAC = '&&DY2MBR.CNVEAC'
      CNVASS = '&&DY2MBR.CNVASS'
      CNCHMP = '&&DY2MBR.CNCHMP'
      CNCOMK = '&&DY2MBR.CNCOMK'
      VECOMP = '&&DY2MBR.VECOMP'
      CALL VTCREB(CNDIRI,NUMDDL,'V',TYPRES,NEQ)
      CALL VTCREB(CNNEUM,NUMDDL,'V',TYPRES,NEQ)
      CALL VTCREB(CNVOCH,NUMDDL,'V',TYPRES,NEQ)
      CALL VTCREB(CNVEAC,NUMDDL,'V',TYPRES,NEQ)
      CALL VTCREB(CNVASS,NUMDDL,'V',TYPRES,NEQ)
      CALL VTCREB(CNCHMP,NUMDDL,'V',TYPRES,NEQ)
      CALL VTCREB(CNCOMK,NUMDDL,'V',TYPRES,NEQ)
C
      CNCHKM = '&&DY2MBR.CNCHKM'
      CALL WKVECT(CNCHKM,'V V C',NEQ,JDCHK) 
      CALL ZINIT(NEQ,CZERO,ZC(J2ND),1)
C
C --- NOM DU PARAMETRE SENSIBLE
C
      CALL PSNSLE(INPSCO,NRPASE,1     ,NOPASE)
C
C --- DETERMINATION DU TYPE DE DERIVATION
C
      IF (NRPASE.GT.0) THEN
        CALL METYSE(NBPASE,INPSCO,NOPASE,TYPESE,STYPSE)
      ELSE
        TYPESE = 0
        STYPSE = ' '
      ENDIF
C
C --- CHARGEMENTS DE DIRICHLET
C
      IF (TYPESE.EQ.0 .OR. TYPESE.EQ.2) THEN
C
C ----- NOM DES VECTEURS ELEMENTAIRES
C
        CALL PSNSLE(INPSCO,NRPASE,13    ,VEDIRI)
C
C ----- ASSEMBLAGE
C
        CALL ASCOMB(LISCHA,VEDIRI,TYPRES,PARA  ,FREQ  ,
     &              CNDIRI)
      ENDIF
C
C --- CHARGEMENTS DE NEUMANN STANDARDS
C
      IF ( TYPESE.EQ.0 .OR. TYPESE.EQ.-1 .OR. TYPESE.EQ. 5) THEN
C
C ----- NOM DES VECTEURS ELEMENTAIRES
C
        CALL PSNSLE(INPSCO,NRPASE,12    ,VENEUM)
C
C ----- ASSEMBLAGE
C
        CALL ASCOMB(LISCHA,VENEUM,TYPRES,PARA  ,FREQ  ,
     &              CNNEUM)
      ENDIF
C
C --- CHARGEMENT DE TYPE EVOL_CHAR
C
      IF (TYPESE.EQ.0) THEN
        CALL ASCOMB(LISCHA,VEVOCH,TYPRES,PARA  ,FREQ  ,
     &              CNVOCH)
      ENDIF
C
C --- CHARGEMENT DE TYPE VECT_ASSE_CHAR
C
      IF (TYPESE.EQ.0) THEN
        CALL ASCOMB(LISCHA,VASSEC,TYPRES,PARA  ,FREQ  ,
     &              CNVEAC)
      ENDIF
C
C --- CHARGEMENT DE TYPE VECT_ASSE
C
      IF (TYPESE.EQ.0) THEN
        CALL CNVESL(LISCHA,TYPRES,NEQ   ,PARA  ,FREQ  ,
     &              CNVASS)
      ENDIF
C
C --- TERMES COMPLEMENTAIRES POUR DERIVEES MATERIAUX ET LAGR.
C
      IF ( TYPESE.EQ.3 ) THEN
C
C ----- CHAMP DE DEPLACEMENT
C
        CALL PSNSLE(INPSCO,0     ,4     ,DEPL)
C
C ----- CALCUL DES VECTEURS ELEMENTAIRES
C
        CALL VECHD2('DYNK',NOMO  ,MATE  ,CARELE,LISCHA,
     &              R8BID ,DEPL  ,NOPASE,VECOMP)
C
C ----- ASSEMBLAGE
C
        CALL ASCHAR(LISCHA,NUMDDL,VECOMP,'C'   ,PARA  ,
     &              FREQ  ,CNCOMK)
      ENDIF
C
C --- TERMES COMPLEMENTAIRES POUR LES CARACTERISTIQUES ELEMENTAIRES
C
      IF (TYPESE.EQ.4) THEN
C
C ----- CHAMP DE DEPLACEMENT
C
        CALL PSNSLE(INPSCO,0     ,4     ,DEPL)
C
C ----- CALCUL DES VECTEURS ELEMENTAIRES
C
        CALL VECHD2('DYNK',NOMO  ,MATE  ,CARELE,LISCHA,
     &              R8BID ,DEPL  ,NOPASE,VECOMP)
C
C ----- ASSEMBLAGE
C
        CALL ASCHAR(LISCHA,NUMDDL,VECOMP,'C'   ,PARA  ,
     &              FREQ  ,CNCHMP)
C
        CALL JEVEUO(CNCHMP(1:19)//'.VALE','L',JDVEK)
        DO 50 IEQ = 1,NEQ
          ZC(JDCHK-1+IEQ) = ZC(JDVEK-1+IEQ)
   50   CONTINUE
C
C ----- CHAMP D'ACCELERATION
C
        CALL PSNSLE(INPSCO,0     ,16    ,ACCE)
C
C ----- CALCUL DES VECTEURS ELEMENTAIRES
C
        CALL VECHD2('DYNM',NOMO  ,MATE  ,CARELE,LISCHA,
     &              R8BID ,ACCE  ,NOPASE,VECOMP)
C
C ----- ASSEMBLAGE
C
        CALL ASCHAR(LISCHA,NUMDDL,VECOMP,'C'   ,PARA  ,
     &              FREQ  ,CNCHMP)
C
        CALL JEVEUO(CNCHMP(1:19)//'.VALE','L',JDVEK)
        DO 51 IEQ = 1,NEQ
          ZC(JDCHK-1+IEQ) = ZC(JDCHK-1+IEQ) + ZC(JDVEK-1+IEQ)
   51   CONTINUE

      ENDIF
C
      IF ( TYPESE.EQ.-1 ) THEN
        CALL U2MESI('F','SENSIBILITE_1', 1 , TYPESE)
      ENDIF
C
C --- CUMUL DES DIFFERENTS TERMES DU SECOND MEMBRE DEFINITIF
C
      IF (TYPESE.EQ.0) THEN
        CALL JEVEUO(CNDIRI(1:19)//'.VALE','L',J2ND1)
        CALL JEVEUO(CNNEUM(1:19)//'.VALE','L',J2ND2)
        CALL JEVEUO(CNVOCH(1:19)//'.VALE','L',J2ND3)
        CALL JEVEUO(CNVEAC(1:19)//'.VALE','L',J2ND4)
        CALL JEVEUO(CNVASS(1:19)//'.VALE','L',J2ND5)
        DO 300 IEQ = 1, NEQ
          ZC(J2ND+IEQ-1) = 
     &                     ZC(J2ND1+IEQ-1) +
     &                     ZC(J2ND2+IEQ-1) +
     &                     ZC(J2ND3+IEQ-1) +
     &                     ZC(J2ND4+IEQ-1) +
     &                     ZC(J2ND5+IEQ-1)
300     CONTINUE
      ENDIF
C
      IF ( TYPESE.EQ.2) THEN
        CALL JEVEUO(CNDIRI(1:19)//'.VALE','L',J2ND1)
        DO 310 IEQ = 1, NEQ
          ZC(J2ND+IEQ-1) = ZC(J2ND1+IEQ-1)
310     CONTINUE
      ENDIF
C
      IF ( TYPESE.EQ.3) THEN
        CALL JEVEUO(CNCOMK(1:19)//'.VALE','L',J2ND1)
        DO 320 IEQ = 1, NEQ
          ZC(J2ND+IEQ-1) = ZC(J2ND1+IEQ-1)
320     CONTINUE
      ENDIF
C
      IF ( TYPESE.EQ.4) THEN
        CALL JEVEUO(CNCHKM,'L',J2ND1)
        DO 330 IEQ = 1, NEQ
          ZC(J2ND+IEQ-1) = ZC(J2ND1+IEQ-1)
330     CONTINUE
      ENDIF
C
      IF ( TYPESE.EQ.5) THEN
        CALL JEVEUO(CNNEUM(1:19)//'.VALE','L',J2ND1)
        DO 340 IEQ = 1, NEQ
          ZC(J2ND+IEQ-1) = ZC(J2ND1+IEQ-1)
340     CONTINUE
      ENDIF
C
      CALL JEDETR(CNCHKM)
      CALL DETRSD('CHAMP_GD',CNDIRI)
      CALL DETRSD('CHAMP_GD',CNNEUM)
      CALL DETRSD('CHAMP_GD',CNVOCH)
      CALL DETRSD('CHAMP_GD',CNVEAC)
      CALL DETRSD('CHAMP_GD',CNVASS)
      CALL DETRSD('CHAMP_GD',CNCHMP)
      CALL DETRSD('CHAMP_GD',CNCOMK)
C
      CALL JEDEMA()

      END
