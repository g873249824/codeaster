      SUBROUTINE DY2MBR( NBPASE, NRPASE, INPSCO, BASENO, INFCHA, NUMDDL,
     &    FREQ, FOMULT, MODELE, MATE, CARELE, VADIRI, VACHAM, NEQ, J2ND)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 08/02/2008   AUTEUR MACOCCO K.MACOCCO 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE CAMBIER S.CAMBIER
C ----------------------------------------------------------------------
C
C DYNAMIQUE : CALCUL DU SECOND MEMBRE DANS DYNA_LINE_HARM
C **                      *    *  **
C ----------------------------------------------------------------------
C
C      IN NBPASE : NOMBRE DE PARAMETRE SENSIBLE
C      IN NRPASE : NUMERO DE PARAMETRE SENSIBLE ( =0 => CALCUL STANDARD)
C      IN INPSCO : STRUCTURE CONTENANT LA LISTE DES NOMS (CF. PSNSIN)
C      IN BASENO : BASE DU NOM DES STRUCTURES
C      IN INFCHA : INFORMATIONS SUR LES CHARGEMENTS
C      IN NUMDDL  : PROFIL DE LA MATRICE
C      IN FREQ   : VALEUR DE LA FREQUENCE
C      IN FOMULT : LISTE DES FONCTIONS MULTIPLICATIVES
C      IN MODELE : NOM DU MODELE
C      IN MATE   : NOM DU CHAMP DE MATERIAU CODE
C      IN CARELE : CARACTERISTIQUES DES POUTRES ET COQUES
C      IN VADIRI : OBJET JEVEUX CONTENANT LA LISTE DES CHAM_NO
C                  RESULTAT DE L'ASSEMBLAGE DES ELEMENTS DE LAGRANGE
C      IN VACHAM : OBJET JEVEUX CONTENANT LA LISTE DES CHAM_NO
C                 RESULTAT DE L'ASSEMBLAGE DES CHARGEMENTS DE NEUMANN
C      IN        : NOMBRE D'EQUATIONS DU SYSTEME
C      IN/JOUT J2ND : ADRESSE DU VECTEUR ASSEMBLE SECOND MEMBRE
C
C ----------------------------------------------------------------------
C
      IMPLICIT NONE
C
C 0.1. ==> ARGUMENTS
C
      INTEGER       NBPASE, NRPASE, NEQ, J2ND
      REAL*8        FREQ
      CHARACTER*8   BASENO
      CHARACTER*14  NUMDDL
      CHARACTER*19  INFCHA
      CHARACTER*24  FOMULT, VADIRI, VACHAM
      CHARACTER*24  MODELE, MATE, CARELE
      CHARACTER*(*) INPSCO
C
C 0.2. ==> COMMUNS
C
C     ----- DEBUT DES COMMUNS JEVEUX -----------------------------------
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16            ZK16
      CHARACTER*24                    ZK24
      CHARACTER*32                            ZK32
      CHARACTER*80                                    ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C     ----- FIN DES COMMUNS JEVEUX -------------------------------------
C
C 0.3. ==> VARIABLES LOCALES
C
      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'DY2MBR' )

      INTEGER      IBID
      REAL*8       R8BID
      CHARACTER*24 K24BID, BLAN24

      INTEGER       IEQ, NCHAR, IRET,JDVEM,JDVEK
      INTEGER       TYPESE, IAUX, JAUX, TYPCUM
      INTEGER       J2ND1, J2ND2, JINF, JCHAR
      CHARACTER*1   TYPRES
      CHARACTER*4   TYPCAL
      CHARACTER*8   NOPASE, PARA
      CHARACTER*19  LIGRMO, K19BID
      CHARACTER*24  CHDIRI, CHCHAM, VEDIRI, VECHAM,CNCHMP
      CHARACTER*24  VECOMP, VACOMP, CHCOMK, VAPRIN,CNCHKM,VACOM2
      CHARACTER*24 CHARGE, INFOCH, LCHAR
      CHARACTER*24 STYPSE

C ----------------------------------------------------------------------

C===============
C 1. PREALABLES
C===============
C
      CALL JEMARQ()
C
C====
C 1.1  ==> INITIALISATIONS DIVERSES
C====
C               123456789012345678901234
      BLAN24 = '                        '
      K19BID = '                   '

      CHDIRI = BASENO//'.CH1.ASCOVA'
      CHCHAM = BASENO//'.CH2.ASCOVA'
      CHCOMK = BASENO//'.CH3.ASCOVA'
C          CES TROIS OBJETS SONT EN FAIT LOCAUX A DY2MBR, MAIS ON NE
C          LES CREE QU UNE SEULE FOIS DANS LES BOUCLES EN FREQUENCES
C          ET EN PARAMETRE DE L OP0060 (=> NOM &&OP0060...) POUR NE
C          PAS DEGRADER LE TEMPS DE CALCUL
      PARA  = 'FREQ'
      TYPRES ='C'
      VECOMP = BLAN24
      CNCHKM = 'CHARGEMENT'

C====
C 1.2 ==> DETERMINATION DU TYPE DE DERIVATION
C====
C       0 : CALCUL STANDARD
C      -1 : DERIVATION EULERIENNE (VIA UN CHAMP THETA)
C       1 : DERIVEE SANS INFLUENCE
C       2 : DERIVEE DE LA CL DE DIRICHLET
C       3 : PARAMETRE MATERIAU
C       4 : CARACTERISTIQUE ELEMENTAIRE (COQUES, ...)
C       5 : FORCE
C       N : AUTRES DERIVEES
C
      CALL PSNSLE ( INPSCO, NRPASE, 1, NOPASE )

      IF ( NRPASE.GT.0 ) THEN
        CALL METYSE ( NBPASE, INPSCO, NOPASE, TYPESE, STYPSE )
      ELSE
        TYPESE = 0
        STYPSE = ' '
      ENDIF
C
C===============
C  2. ASSEMBLAGE DES DIFFERENTS CHARGEMENTS
C===============

C====
C 2.1 ==> LES DIRICHLETS
C====
      IF ( TYPESE.EQ.0 .OR. TYPESE.EQ.2 ) THEN

        CALL PSNSLE ( INPSCO, NRPASE, 13, VEDIRI )
        VADIRI(6:8) = VEDIRI(6:8)

        CALL ASCOVA('G',VADIRI,FOMULT,PARA,FREQ,TYPRES,CHDIRI)

      ENDIF

C====
C 2.2 ==> CHARGEMENTS DE NEUMANN + DERIV EULERIENNE
C====
      IF ( TYPESE.EQ.0 .OR. TYPESE.EQ.-1 .OR. TYPESE.EQ. 5) THEN

        CALL PSNSLE ( INPSCO, NRPASE, 12, VECHAM )
        VACHAM(6:8) = VECHAM(6:8)

        CALL ASCOVA('G',VACHAM,FOMULT,PARA,FREQ,TYPRES,CHCHAM)

      ENDIF

C====
C 2.3 ==> TERMES COMPLEMENTAIRES POUR DERIVEES MATERIAUX ET LAGR.
C====
      IF ( TYPESE.EQ.3 ) THEN
C
        CALL PSNSLE ( INPSCO, NRPASE, 1, NOPASE )
        LIGRMO = MODELE(1:8)//'.MODELE'
C
        TYPCAL = 'DYNK'
C
        IAUX = 0
        JAUX = 4
        CALL PSNSLE ( INPSCO, IAUX, JAUX, VAPRIN )

        CHARGE = INFCHA//'.LCHA'
        INFOCH = INFCHA//'.INFC'
        CALL JEEXIN(CHARGE,IRET)
        IF (IRET .NE. 0 ) THEN
          CALL JEVEUO (CHARGE,'L',JCHAR)
          CALL JEVEUO (INFOCH,'L',JINF)
          NCHAR = ZI(JINF)
          LCHAR = ZK24(JCHAR)
        ELSE
          NCHAR = 0
          LCHAR = BLAN24
        ENDIF
        CALL VECHDE ( TYPCAL, MODELE(1:8), NCHAR, LCHAR, MATE,
     &                CARELE(1:8), R8BID,
     &                VAPRIN, K24BID, K19BID, K24BID, LIGRMO,
     &                NOPASE, VECOMP )
C
        VACOMP = BLAN24
        CALL ASASVE ( VECOMP, NUMDDL,'C',VACOMP)

        CALL ASCOVA('D',VACOMP,FOMULT,PARA,FREQ,TYPRES,CHCOMK)
C
      ENDIF

C====
C 2.4 ==> TERMES COMPLEMENTAIRES POUR LES CARACTERISTIQUES ELEMENTAIRES
C====

        IF (TYPESE.EQ.4) THEN

C TYPCAL POUR  -DK/DP * DEPL
          TYPCAL = 'DYNK'
C VAPRIN : CHAMP DE DEPL (IAUX = 0 ET JAUX = 4)
          IAUX = 0
          JAUX = 4
          CALL PSNSLE(INPSCO,IAUX,JAUX,VAPRIN)
          CHARGE = INFCHA//'.LCHA'
          INFOCH = INFCHA//'.INFC'
          CALL JEEXIN(CHARGE,IRET)
          IF (IRET.NE.0) THEN
            CALL JEVEUO(CHARGE,'L',JCHAR)
            CALL JEVEUO(INFOCH,'L',JINF)
            NCHAR = ZI(JINF)
            LCHAR = ZK24(JCHAR)
          ELSE
            NCHAR = 0
            LCHAR = BLAN24
          END IF
          CALL VECHDE ( TYPCAL, MODELE(1:8), NCHAR, LCHAR, MATE,
     &                  CARELE(1:8), R8BID,
     &                  VAPRIN, K24BID, K19BID, K24BID, LIGRMO,
     &                  NOPASE, VECOMP )

          VACOMP = BLAN24
          CNCHMP = 'CHARGEMENT_KM'
          CALL ASASVE(VECOMP,NUMDDL,'C',VACOMP)
          CALL ASCOVA('D',VACOMP,FOMULT,PARA,FREQ,TYPRES,CNCHMP)
          CALL JEVEUO(CNCHMP(1:19)//'.VALE','L',JDVEK)

          CALL WKVECT(CNCHKM,'V V C',NEQ,J2ND1)
          DO 50,IEQ = 1,NEQ
            ZC(J2ND1-1+IEQ) = ZC(JDVEK-1+IEQ)
   50     CONTINUE

C TYPCAL POUR LE PRODUIT -DM/DP * ACCE
          TYPCAL = 'DYNM'
C VACOM2 : CHAMP ACCE (IAUX = 0 ET JAUX = 16)
          IAUX = 0
          JAUX = 16
          CALL PSNSLE(INPSCO,IAUX,JAUX,VACOM2)
          CALL VECHDE ( TYPCAL, MODELE(1:8), NCHAR, LCHAR, MATE,
     &                  CARELE(1:8), R8BID,
     &                  VACOM2, K24BID, K19BID, K24BID, LIGRMO,
     &                  NOPASE, VECOMP )
          VACOMP = BLAN24
          CALL ASASVE(VECOMP,NUMDDL,'C',VACOMP)
          CALL ASCOVA('D',VACOMP,FOMULT,PARA,FREQ,TYPRES,CNCHMP)
          CALL JEVEUO(CNCHMP(1:19)//'.VALE','L',JDVEM)

          DO 51,IEQ = 1,NEQ
            ZC(J2ND1-1+IEQ) = ZC(J2ND1-1+IEQ) + ZC(JDVEM-1+IEQ)
   51     CONTINUE

        END IF
C
      IF ( TYPESE.EQ.-1 ) THEN
        CALL U2MESI('A','SENSIBILITE_1', 1 , TYPESE)
        CALL U2MESK('F','UTILITAI7_99', 1 ,NOMPRO)
      ENDIF
C===============
C  3. CUMUL DES DIFFERENTS TERMES DU SECOND MEMBRE DEFINITIF
C===============
C
C====
C 3.1 ==> DETERMINATION DU NOMBRE DE TERMES A SOMMER EN FONCTION
C         DU TYPE DE DERIVATION
C====
C
      IF ( TYPESE.EQ.0 ) THEN
        TYPCUM = 2
        CALL JEVEUO(CHDIRI(1:19)//'.VALE','L',J2ND1)
        CALL JEVEUO(CHCHAM(1:19)//'.VALE','L',J2ND2)
      ELSEIF ( TYPESE.EQ.1  ) THEN
        TYPCUM = 0
      ELSEIF ( TYPESE.EQ.2  ) THEN
        TYPCUM = 1
        CALL JEVEUO(CHDIRI(1:19)//'.VALE','L',J2ND1)
      ELSEIF ( TYPESE.EQ.3  ) THEN
        TYPCUM = 1
        CALL JEVEUO(CHCOMK(1:19)//'.VALE','L',J2ND1)
      ELSEIF ( TYPESE.EQ.4  ) THEN
        TYPCUM = 1
        CALL JEVEUO(CNCHKM,'L',J2ND1)
      ELSEIF ( TYPESE.EQ.5 ) THEN
        TYPCUM = 1
        CALL JEVEUO(CHCHAM(1:19)//'.VALE','L',J2ND1)
      ELSE
        CALL U2MESI('A','SENSIBILITE_1', 1 , TYPESE)
        CALL U2MESK('F','UTILITAI7_99', 1 ,NOMPRO)
      ENDIF

C====
C 3.2 ==> CUMUL
C====

      IF ( TYPCUM.EQ.0 ) THEN
        DO 300 , IEQ = 0, NEQ-1
          ZC(J2ND+IEQ) = DCMPLX(0.D0,0.D0)
300   CONTINUE
      ELSEIF ( TYPCUM.EQ.1 ) THEN
        DO 301 , IEQ = 0, NEQ-1
          ZC(J2ND+IEQ) = ZC(J2ND1+IEQ)
301   CONTINUE
      ELSEIF ( TYPCUM.EQ.2 ) THEN
        DO 302 , IEQ = 0, NEQ-1
          ZC(J2ND+IEQ) = ZC(J2ND1+IEQ) + ZC(J2ND2+IEQ)
302   CONTINUE
CR      ELSEIF ( TYPCUM.EQ.3 ) THEN
CR        DO 303 , IEQ = 0, NEQ-1
CR          ZC(J2ND+IEQ) = ZC(J2ND1+IEQ) + ZC(J2ND2+IEQ) + ZC(J2ND3+IEQ)
CR303   CONTINUE
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF

      CALL JEDETR(CNCHKM)

C FIN ------------------------------------------------------------------

       CALL JEDEMA()

      END
