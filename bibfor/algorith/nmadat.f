      SUBROUTINE NMADAT(SDDISC,NUMINS,ITERAT,VALMOI,VALPLU,FINPAS)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 27/07/2009   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2009  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE GENIAUT S.GENIAUT
C
      IMPLICIT NONE
      CHARACTER*24 VALMOI(8),VALPLU(8)
      CHARACTER*19 SDDISC
      INTEGER      NUMINS,ITERAT
      LOGICAL      FINPAS

C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME)
C
C GESTION DE L'ADAPTATION DE PAS DE TEMPS
C   CALCUL DE DTPLUS
C      
C ----------------------------------------------------------------------
C
C
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  NUMINS : 
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C 
      INTEGER      IFM,NIV
      INTEGER      IBID,NOCC,IOCC,JDT,NMAX,I,JTEMPS,NIPO,JIPO
      CHARACTER*19 METLIS,MODETP,DTPLUS,LISARC
      CHARACTER*8  K8B
      REAL*8       R8B,R8MAEM,DT,MIN,PASMIN,PASMAX,DIINST,DTM,PIPO
      REAL*8       INST,R8VIDE,TOLE
      LOGICAL      LADAP,DIADAP,UNCROK
      INTEGER      LGINI,LGTEMP,NBINI,INSPAS,JITER,ITERM
      INTEGER      JARCH,JINFO,FREARC,NBTEMP
      INTEGER      N2,N3,NLIARC,JLIARC,IRET


      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)  

      WRITE(IFM,*)'    '

C     ------------------------------------------------------------------
C     INITIALISATIONS
C     ------------------------------------------------------------------

      CALL UTDIDT('L',SDDISC,'LIST',IBID,'METHODE',R8B,IBID,METLIS)
C
C     ON NE FAIT DE L'ADAPTATION DE PAS DE TEMPS QU'EN GESTION AUTO
      IF (METLIS.NE.'AUTO') GOTO 9999

      INST = DIINST(SDDISC,NUMINS)

C     NOMBRE DE SCHEMAS D'ADAPTATION : NOCC
      CALL UTDIDT('L',SDDISC,'ADAP',IBID,'NB_OCC',R8B,NOCC,K8B)

C     LISTE DES NOCC PAS DE TEMPS POSSIBLES
      DTPLUS = '&&NMADAP.DTPLUS'
      CALL WKVECT(DTPLUS,'V V R',NOCC,JDT)

C     PAS DE TEMPS PAR DEFAUT (LE DERNIER, SAUF SI JALON) : DTM
      CALL UTDIDT('L',SDDISC,'LIST',IBID,'DT-',DTM,IBID,K8B)

C     STOCKAGE DE ITERTAT NEWTON ET EXTENSION
      CALL JEVEUO(SDDISC//'.ITER','L',JITER)
      ZI(JITER-1+NUMINS)=ITERAT
      CALL JELIRA(SDDISC//'.ITER','LONMAX',NMAX,K8B)
      CALL JUVECA(SDDISC//'.ITER',NMAX+1)

C     PROCHAIN INSTANT DE PASSAGE OBLIGATOIRE (IPO) ?
      CALL JELIRA(SDDISC//'.LIPO','LONMAX',NIPO,K8B)
      CALL JEVEUO(SDDISC//'.LIPO','L',JIPO)
      DO 10 I =1,NIPO
        IF (ZR(JIPO-1+I).GT.INST) THEN
          PIPO = ZR(JIPO-1+I)
          GOTO 20
        ENDIF 
        IF (I.EQ.NIPO) THEN
C         ON DOIT ETRE AU DERNIER PAS DE TEMPS
C         CAR ON NE TROUVE PLUS D'IPO
          FINPAS = .TRUE.
          GOTO 9999
        ENDIF
 10   CONTINUE

 20   CONTINUE

C     ------------------------------------------------------------------
C     CALCUL DU PAS DE TEMPS
C     ------------------------------------------------------------------

      WRITE(IFM,*)'PAS DE TEMPS POUR CHAQUE METHODE D ADAPTATION :'    
      DO 100 IOCC = 1,NOCC
        CALL UTDIDT('L',SDDISC,'ADAP',IOCC,'METHODE',R8B,IBID,MODETP)

        ZR(JDT-1+IOCC) = R8VIDE()   

        LADAP = DIADAP(SDDISC,IOCC,NUMINS)
        IF (LADAP) THEN
          CALL NMCADT(SDDISC,IOCC,NUMINS,VALMOI,VALPLU,ZR(JDT-1+IOCC))
        ENDIF           

C       IMPRESSION
        IF (ZR(JDT-1+IOCC) .NE. R8VIDE() ) THEN
          WRITE(IFM,*)'   ',MODETP,' - DT = ',ZR(JDT-1+IOCC)  
        ELSE
          WRITE(IFM,*)'   ',MODETP,' - DT = CRITERE NON VERIFIE'
        ENDIF

 100  CONTINUE
      
C     ON CHOISIT LE PLUS PETIT DT PARMI LES NOCC PAS DE TEMPS POSSIBLES
C     SI AUCUN CRITERE N'EST VERIFIE, ON PREND LE PAS DE TEMPS "MOINS"
      DT = R8MAEM()
      UNCROK=.FALSE.
      DO 200 IOCC = 1,NOCC
        IF (ZR(JDT-1+IOCC) .NE. R8VIDE() ) THEN
          DT = MIN(DT,ZR(JDT-1+IOCC))
          UNCROK = .TRUE.
        ENDIF 
 200  CONTINUE
      IF (.NOT.UNCROK) DT = DTM
 
      CALL JEDETR(DTPLUS) 

C     VA T-ON DEPASSER LE PROCHAIN IPO ?
      IF (INST+DT.LT.PIPO) THEN
C       ON ENREGISTRE DT
        CALL UTDIDT('E',SDDISC,'LIST',IBID,'DT-',DT,IBID,K8B)
      ELSE
        WRITE(IFM,*)' ON DEPASSE LE PROCHAIN INSTANT DE PASSAGE ',
     &                                            INST+DT,' >= ',PIPO
        DT = PIPO-INST
C       ON N'ENREGISTRE PAS DT
      ENDIF

      WRITE(IFM,*)' PAS DE TEMPS RETENU : DT =  ',DT

C     ------------------------------------------------------------------
C     VERIFICATIONS ET INSERTION
C     ------------------------------------------------------------------
      
C     ON VERIFIE LES GARDE FOUS
      CALL UTDIDT('L',SDDISC,'LIST',IBID,'PAS_MINI',PASMIN,IBID,K8B)
      CALL UTDIDT('L',SDDISC,'LIST',IBID,'PAS_MAXI',PASMAX,IBID,K8B)
      CALL UTDIDT('L',SDDISC,'LIST',IBID,'NB_PAS_MAXI',R8B,NMAX,K8B)
      IF (DT.LT.PASMIN) CALL U2MESR('F','DISCRETISATION_11',1,DT)
      IF (DT.GT.PASMAX) CALL U2MESR('F','DISCRETISATION_12',1,DT)
      IF (NUMINS.GT.NMAX) CALL U2MESS('F','DISCRETISATION_13')

C     INSERTION DU NOUVEL INSTANT
C     IL FAUDRAIT SE SERVIR DE LA ROUTINE NMDCEI EN L'ADAPTANT !
C     MAIS ECRIRE UNE ROUTINE COMMUNE EST TRES COMPLIQUE
C     
      CALL UTDIDT('L',SDDISC,'LIST',IBID,'NBINST',R8B,LGINI,K8B)
      NBINI  = LGINI  - 1
      INSPAS = 1
      LGTEMP = LGINI  + INSPAS
      CALL JUVECA(SDDISC//'.DITR',LGTEMP)
      CALL JEVEUO(SDDISC//'.DITR','E',JTEMPS)
      DO 12 I = NBINI, NUMINS+1, -1
        ZR(JTEMPS+I+INSPAS) = ZR(JTEMPS+I)
12    CONTINUE
      ZR(JTEMPS+NUMINS+1) = INST+DT


C     INSERTION DE L' INSTANT DANS LA LISTE D'ARCHIVAGE !!!!
C     IL FAUDRAIT SE SERVIR DE LA ROUTINE NMDCEA EN L'ADAPTANT !
C     MAIS ECRIRE UNE ROUTINE COMMUNE EST TRES COMPLIQUE
C
      CALL JELIRA(SDDISC//'.DIAL','LONMAX',LGINI,K8B)
      NBINI  = LGINI  - 1
      INSPAS = 1
      LGTEMP = LGINI  + INSPAS
      NBTEMP = LGTEMP - 1
      CALL JUVECA(SDDISC//'.DIAL',LGTEMP)
      CALL JEVEUO(SDDISC//'.DIAL','E',JARCH)         
      CALL JEVEUO(SDDISC//'.DIIR','L',JINFO)
      FREARC = NINT(ZR(JINFO-1+2))
      IF (FREARC .EQ. 0) THEN
        DO 60 I = NBINI, NUMINS+1, -1
          ZL(JARCH+I+INSPAS) = ZL(JARCH+I)
60      CONTINUE
        ZL(JARCH+NUMINS+1) = .FALSE.
      ELSE
        DO 70 I = 0, NBTEMP
          ZL(JARCH+I) = .FALSE.
70      CONTINUE
        DO 80 I = FREARC, NBTEMP, FREARC
          ZL(JARCH+I) = .TRUE.
80      CONTINUE
      END IF       

C     SI LE NOUVEL INSTANT INSERER EST DANS LA LISTE D'ARCHIVAGE
      CALL GETVID('ARCHIVAGE','LIST_INST',1,1,1,LISARC,N2)
      CALL GETVR8('ARCHIVAGE','INST'     ,1,1,0,R8B   ,N3)
      CALL GETVR8('ARCHIVAGE','PRECISION',1,1,1,TOLE,IRET)
      IF (N2.EQ.0.AND.N3.EQ.0) GOTO 9999
      N3 = -N3
      IF (N3.GE.1) THEN
        LISARC = '&&NMADAT.LISARC'
        NLIARC =  N3
        CALL WKVECT(LISARC,'V V R8',N3,JLIARC)
        CALL GETVR8('ARCHIVAGE','INST',1,1,NLIARC,ZR(JLIARC),IRET)
      ELSE
        CALL JEVEUO(LISARC//'.VALE','L',JLIARC)
        CALL JELIRA(LISARC//'.VALE','LONMAX',NLIARC,K8B)
      ENDIF
      CALL UTACLI(INST+DT,ZR(JLIARC),NLIARC,TOLE,IRET)
      IF (IRET.NE.-1)  ZL(JARCH+NUMINS+1) = .TRUE.
      IF (N3.GE.1)  CALL JEDETR(LISARC)

 9999 CONTINUE
      CALL JEDEMA()
      END
