      SUBROUTINE NMDETE(MODELZ,MATZ,CARELZ,NCHAR,LCHAR,INSTAN,
     &                  TYPESE,NOPASE,TEMMOZ,EXITMP)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 18/09/2007   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C    DETERMINATION DU CHAMP DE TEMPERATURE OU DE SA DERIVEE
C             : 'TEMP' : ON VEUT UN CHAMP DE TEMPERATURE
C IN  MATE    : CHAMP DE MATERIAU
C IN  CARELE  : CARA_ELEM
C IN  NCHAR, LCHAR  : LISTE DES CHARGES
C IN  INSTAM  : INSTAM DE LA DETERMINATION
C IN  TYPESE  : TYPE DE SENSIBILITE
C                0 : CALCUL STANDARD, NON DERIVE
C                SINON : DERIVE (VOIR METYSE)
C IN  NOPASE  : NOM DU PARAMETRE SENSIBLE LE CAS ECHEANT
C VAR TEMMOI  : CHAM_NO_TEMP_R (OU CARTE_TEMP_F(INST,EPAIS))
C OUT EXITMP  : TRUE SI LE CHAMP N'EST PAS CONSTRUIT PAR DEFAUT
C ----------------------------------------------------------------------
C
      IMPLICIT NONE
C
C 0.1. ==> ARGUMENTS
C
      INTEGER TYPESE
      LOGICAL EXITMP
      CHARACTER*8 MODELE,MATE,MATEN,CARELE
      CHARACTER*19 TEMMOI
      INTEGER NCHAR
      CHARACTER*(*) LCHAR(NCHAR)
      CHARACTER*(*) NOPASE
      CHARACTER*(*) MODELZ,MATZ,TEMMOZ,CARELZ
C
      REAL*8 INSTAN
C
C 0.2. ==> COMMUNS
C
C     ----- DEBUT COMMUNS NORMALISES  JEVEUX  --------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
C 0.3. ==> VARIABLES LOCALES
C
      INTEGER NUCHTH,NBCHAM,VALI,JTEMP,I
      INTEGER IERD,ICORET,IRET,IBID,IRET2
C
      REAL*8 TIME
      REAL*8 VALR
      REAL*8 ZERO
C
      CHARACTER*8 TEMPE,K8BID,TEMPEN
      CHARACTER*16 NOMCHA
      CHARACTER*16 TYSD
      CHARACTER*19 CH19,CHVARC
      CHARACTER*24 NOM24,LIGRMO
      CHARACTER*24 VALK(2)
C
      COMPLEX*16 CBID
C
      LOGICAL CHPNUL,AVRC
C
C DEB ------------------------------------------------------------------
      CALL JEMARQ()
      EXITMP = .FALSE.
      MODELE = MODELZ
      CARELE = CARELZ
      TEMMOI = TEMMOZ
      MATE   = MATZ
      LIGRMO = MODELE//'.MODELE'
      CHPNUL = .TRUE.

      CALL ASSERT(TYPESE.EQ.-1)


C     NUCHTH : NUMERO DE LA CHARGE THERMIQUE
      NUCHTH = 0
      DO 10 I = 1,NCHAR
        CALL JEEXIN(LCHAR(I)(1:8)//'.CHME.TEMPE.TEMP',IRET)
        IF (IRET.NE.0) NUCHTH=I
   10 CONTINUE


C     EXISTE-T-IL AFFE_MATERIAU/AFFE_VARC/TEMP (NOUVELLE SYNTAXE) ?
C     AVRC : .TRUE. SI AFFE_MATERIAU/AFFE_VARC EST UTILISE
      MATEN=MATE
      CALL PSGENC(MATEN,NOPASE,MATE,IRET)
      IF (IRET.EQ.0) THEN
        CALL JEEXIN(MATE//'.CVRCVARC',IRET2)
        AVRC=(IRET2.GT.0)
      ELSE
        AVRC=.FALSE.
      ENDIF

C     -- VERIF EXCLUSIONS :
      IF (AVRC) CALL ASSERT(NUCHTH.EQ.0)
      IF (NUCHTH.NE.0) CALL ASSERT(.NOT.AVRC)



C 1. IL EXISTE CHARGEMENT THERMIQUE DANS LE CHAMP DE MATERIAU
C    (NOUVELLE SYNTAXE : AFFE_VARC)
C==================================================================
      IF (AVRC) THEN
        CALL VRCINS(MODELE,MATE,CARELE,0,' ',INSTAN,TEMMOI)



C 2. IL EXISTE CHARGE THERMIQUE (ANCIENNE SYNTAXE TEMP_CALCULEE):
C==================================================================
      ELSE IF (NUCHTH.GT.0) THEN
C
C 2.1. ==> ON RECUPERE LE NOM DE LA STRUCTURE THERMIQUE ASSOCIE AU
C          CALCUL MECANIQUE
C
C 2.1.1. ==> POUR LA REFERENCE
C
        NOM24 = LCHAR(NUCHTH)(1:8)//'.CHME.TEMPE.TEMP'
        CALL JEVEUO(NOM24,'L',JTEMP)
        TEMPE = ZK8(JTEMP)
C
        CALL GETTCO(TEMPE,TYSD)
C
C 2.1.2. ==> DANS LE CAS D'UN CALCUL DERIVE
C            REMARQUE : IL FAUT APPLIQUER GETTCO SUR LA STRUCTURE
C            PREMIERE CAR LE TYPE DES STRUCTURES DERIVEES EST INCONNU
C            PAR GETTCO, FONCTION SUPERVISEUR
C
        IF (TYPESE.EQ.-1) THEN
          TEMPEN=TEMPE
          CALL PSGENC(TEMPEN,NOPASE,TEMPE,IRET)
          IF (IRET.NE.0) THEN
            VALK(1) = TEMPEN
            VALK(2) = NOPASE(1:8)
            CALL U2MESK('F','ALGORITH7_17',2,VALK)
          ENDIF
        ENDIF
C
C 2.2. ==> SI LE CHAMP FINAL EXISTE DEJA, ON LE DETRUIT:
C
        CALL DETRSD('CHAMP_GD',TEMMOI)
C
C 2.3. ==> CHOIX SELON LE TYPE DE DONNEES
C
        IF (TYPESE.LE.0) THEN
C
C 2.3.1. ==> ON RECUPERE UN CALCUL THERMIQUE PREALABLE
C
          IF (TYSD(1:9).EQ.'EVOL_THER') THEN
C
            CALL DISMOI('F','NB_CHAMP_UTI',TEMPE,'RESULTAT',NBCHAM,
     &                  K8BID,IERD)
C
C --------- RECUPERATION DU CHAMP DE TEMPERATURE DANS TEMPE
C
            IF (NBCHAM.GT.0) THEN
C
              TIME = INSTAN
              NOMCHA = 'TEMP'
              CALL RSINCH(TEMPE,NOMCHA,'INST',TIME,TEMMOI,'CONSTANT',
     &                    'CONSTANT',1,'V',ICORET)
C
              IF (ICORET.GE.10) THEN
                VALK(1) = TEMPE
                VALR = TIME
                VALI = ICORET
                CALL U2MESG('F','ALGORITH13_64',1,VALK,1,VALI,1,VALR)
              ENDIF
              EXITMP = .TRUE.
              CHPNUL = .FALSE.

            ELSE
              CALL U2MESK('F','ALGORITH7_18',1,TEMPE)
            ENDIF
C
C 2.3.2. ==> C'EST UNE CARTE, UN CHAM_NO OU UN CHAM_ELEM
C
          ELSEIF ((TYSD(1:8).EQ.'CHAM_NO_') .OR.
     &            (TYSD(1:6).EQ.'CARTE_') .OR.
     &            (TYSD(1:10).EQ.'CHAM_ELEM_')) THEN
C
            CH19 = TEMPE
            CALL COPISD('CHAMP_GD','V',CH19(1:19),TEMMOI)
            EXITMP = .TRUE.
            CHPNUL = .FALSE.
C
C 2.3.3. ==> C'EST PAS PREVU ...
C
          ELSE
            CALL U2MESK('F','ALGORITH7_19',1,TEMPE)
          ENDIF
        ENDIF



C 3. IL N'Y A PAS DE CHARGEMENT THERMIQUE :
C==================================================================
      ELSE
        CALL EXISD('CHAMP_GD',MATE(1:8)//'.TEMPE_REF',IRET)
        IF (IRET.NE.0) THEN
          CALL COPISD('CHAMP_GD','V',MATE(1:8)//'.TEMPE_REF',TEMMOI)
          CHPNUL = .FALSE.
        ENDIF
      ENDIF



C 4. ON REGROUPE ICI TOUS LES CAS OU ON AFFECTE UNE VALEUR NULLE
C    AU CHAMP :
C    SI C'EST UNE TEMPERATURE, QUAND RIEN N'A ETE DIT DANS LES
C    COMMANDES
C    SI C'EST UNE DERIVEE DE LA TEMPERATURE, QUAND CE
C    N'EST PAS LA RECUPERATION D'UN CALCUL THERMIQUE PREALABLE
C    LE NOM DU CHAMP DE TEMPERATURE EST BIDONIFIE
C==================================================================
      IF (CHPNUL) THEN
        ZERO = 0.D0
        CALL MECACT('V',TEMMOI,'MODELE',LIGRMO,'TEMP_R',1,'TEMP',IBID,
     &              ZERO,CBID,K8BID)
      ENDIF



C 5.  -- TRANSFORMATION DU CHAMP DE TEMPERATURE EN 1 CHAMP DE VARC:
C==================================================================
      IF (.NOT.AVRC) THEN
        CHVARC='&&NMDETE.CHAVRC'
        CALL VRCIN4(MODELE,CARELE,TEMMOI,CHVARC)
        CALL COPISD('CHAMP','V',CHVARC,TEMMOI)
        CALL DETRSD('CHAMP',CHVARC)
      ENDIF



C FIN ------------------------------------------------------------------
      CALL JEDEMA()
      END
