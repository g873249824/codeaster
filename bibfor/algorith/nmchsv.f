      SUBROUTINE NMCHSV(FONACT,VEASSE,SDDYNA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      INTEGER       FONACT(*)
      CHARACTER*19  SDDYNA
      CHARACTER*19  VEASSE(*)
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (DYNAMIQUE - ALGORITHME)
C
C SAUVEGARDE DES VECTEURS SECONDS MEMBRES ET EFFORTS INTERIEURS
C      
C ----------------------------------------------------------------------
C
C
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C IN  SDDYNA : SD DYNAMIQUE
C
C
C
C
      CHARACTER*19  OLFEDO,OLFSDO,OLDIDO,OLDIDI,OLFINT
      CHARACTER*19  OLONDP,OLLAPL,OLCINE
      CHARACTER*19  CNFEDO,CNFSDO,CNDIDO,CNDIDI,CNFINT
      CHARACTER*19  CNONDP,CNLAPL,CNCINE
      LOGICAL       NDYNLO,ISFONC
      LOGICAL       LONDE,LLAPL,LDIDI   
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- FONCTIONNALITES ACTIVEES
C     
      LONDE  = NDYNLO(SDDYNA,'ONDE_PLANE')  
      LLAPL  = ISFONC(FONACT,'LAPLACE')
      LDIDI  = ISFONC(FONACT,'DIDI')          
C
C --- NOM DES CHAMPS PAS PRECEDENT
C   
      CALL  NDYNKK(SDDYNA,'OLDP_CNFEDO',OLFEDO) 
      CALL  NDYNKK(SDDYNA,'OLDP_CNFSDO',OLFSDO)      
      CALL  NDYNKK(SDDYNA,'OLDP_CNDIDO',OLDIDO)
      CALL  NDYNKK(SDDYNA,'OLDP_CNDIDI',OLDIDI) 
      CALL  NDYNKK(SDDYNA,'OLDP_CNFINT',OLFINT)  
      CALL  NDYNKK(SDDYNA,'OLDP_CNONDP',OLONDP) 
      CALL  NDYNKK(SDDYNA,'OLDP_CNLAPL',OLLAPL) 
      CALL  NDYNKK(SDDYNA,'OLDP_CNCINE',OLCINE)  
C
C --- NOM DES CHAMPS PAS COURANT
C           
      CALL NMCHEX(VEASSE,'VEASSE','CNFEDO',CNFEDO)
      CALL NMCHEX(VEASSE,'VEASSE','CNFSDO',CNFSDO) 
      CALL NMCHEX(VEASSE,'VEASSE','CNDIDO',CNDIDO)
      CALL NMCHEX(VEASSE,'VEASSE','CNDIDI',CNDIDI) 
      CALL NMCHEX(VEASSE,'VEASSE','CNFINT',CNFINT)
      CALL NMCHEX(VEASSE,'VEASSE','CNONDP',CNONDP) 
      CALL NMCHEX(VEASSE,'VEASSE','CNLAPL',CNLAPL)  
      CALL NMCHEX(VEASSE,'VEASSE','CNCINE',CNCINE)      
C
C --- RECOPIE DES CHAMPS
C
      CALL COPISD('CHAMP_GD','V',CNFINT,OLFINT)
      CALL COPISD('CHAMP_GD','V',CNFEDO,OLFEDO)
      CALL COPISD('CHAMP_GD','V',CNFSDO,OLFSDO)
      CALL COPISD('CHAMP_GD','V',CNDIDO,OLDIDO)
      CALL COPISD('CHAMP_GD','V',CNCINE,OLCINE)
      IF (LONDE) THEN
        CALL COPISD('CHAMP_GD','V',CNONDP,OLONDP)
      ENDIF      
      IF (LDIDI) THEN
        CALL COPISD('CHAMP_GD','V',CNDIDI,OLDIDI)      
      ENDIF      
      IF (LLAPL) THEN
        CALL COPISD('CHAMP_GD','V',CNLAPL,OLLAPL)      
      ENDIF
C
      CALL JEDEMA()
      END
