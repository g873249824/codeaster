      SUBROUTINE NMCHSV(CNRESI, SECMBR, CNFOLD, SECOLD )

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 07/02/2006   AUTEUR GREFFET N.GREFFET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      CHARACTER*19  CNRESI, CNFOLD
      CHARACTER*24  SECMBR(8) , SECOLD(8)
C
C ----------------------------------------------------------------------
C
C  SAUVEGARDE DES VECTEURS SECONDS MEMBRES ET EFFORTS INTERIEURS
C
C ----------------------------------------------------------------------
C     IN  CNRESI : VECTEUR DES FORCES INTERIEURS
C     IN  SECMBR : VECTEURS ASSEMBLES DES CHARGEMENTS
C     OUT CNFOLD : COPIE DE CNRESI
C     OUT SECOLD : COPIE DE SECMBR
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      INTEGER       IRET     
      CHARACTER*24  DEPOLD, DEPPIL(2)
      CHARACTER*24  CNFEDO, CNFEPI, CNDIDO, CNDIPI, CNFSDO, CNFSPI
      CHARACTER*24  CNDIDI, CNCINE
      CHARACTER*24  FEDOLD, FEPILD, DIDOLD, DIPILD, FSDOLD, FSPILD
      CHARACTER*24  DIDILD, CINELD
C
C ----------------------------------------------------------------------
C
      DATA FEDOLD, FEPILD    /'&&OP0070.FEDOLD', '&&OP0070.FEPILD'/
      DATA FSDOLD, FSPILD    /'&&OP0070.FSDOLD', '&&OP0070.FSPILD'/
      DATA DIDOLD, DIPILD    /'&&OP0070.DIDOLD', '&&OP0070.DIPILD'/
      DATA DIDILD, CINELD    /'&&OP0070.DIDILD', '&&OP0070.CINELD'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
      CALL COPISD('CHAMP_GD','V',CNRESI,CNFOLD)
      CALL DESAGG (SECMBR, CNFEDO, CNFEPI, CNDIDO, CNDIPI,
     &             CNFSDO, CNFSPI, CNDIDI, CNCINE)
      CALL EXISD('CHAMP',CNFEDO, IRET)
      IF ( IRET .NE. 0 ) THEN
        CALL COPISD('CHAMP_GD','V',CNFEDO,FEDOLD)
      ENDIF
      CALL EXISD('CHAMP',CNFEPI, IRET)
      IF ( IRET .NE. 0 ) THEN
        CALL COPISD('CHAMP_GD','V',CNFEPI,FEPILD)
      ENDIF
      CALL EXISD('CHAMP',CNDIDO, IRET)
      IF ( IRET .NE. 0 ) THEN
        CALL COPISD('CHAMP_GD','V',CNDIDO,DIDOLD)
      ENDIF
      CALL EXISD('CHAMP',CNDIPI, IRET)
      IF ( IRET .NE. 0 ) THEN
        CALL COPISD('CHAMP_GD','V',CNDIPI,DIPILD)
      ENDIF
      CALL EXISD('CHAMP',CNFSDO, IRET)
      IF ( IRET .NE. 0 ) THEN
        CALL COPISD('CHAMP_GD','V',CNFSDO,FSDOLD)
      ENDIF
      CALL EXISD('CHAMP',CNFSPI, IRET)
      IF ( IRET .NE. 0 ) THEN
        CALL COPISD('CHAMP_GD','V',CNFSPI,FSPILD)
      ENDIF
      CALL EXISD('CHAMP',CNDIDI, IRET)
      IF ( IRET .NE. 0 ) THEN
        CALL COPISD('CHAMP_GD','V',CNDIDI,DIDILD)
      ENDIF
      CALL EXISD('CHAMP',CNCINE, IRET)
      IF ( IRET .NE. 0 ) THEN
        CALL COPISD('CHAMP_GD','V',CNCINE,CINELD)
      ENDIF
      CALL AGGLOM (FEDOLD, FEPILD, DIDOLD,DIPILD ,
     &             FSDOLD, FSPILD, DIDILD, CINELD, 8, SECOLD)
C
      CALL JEDEMA()
      END
