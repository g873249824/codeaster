      SUBROUTINE CFMMCO(DEFICO,RESOCO,IZONE,NOMCOZ,ACTION,VALR)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 06/06/2011   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      CHARACTER*24  DEFICO,RESOCO
      CHARACTER*(*) NOMCOZ
      CHARACTER*1   ACTION
      INTEGER       IZONE
      REAL*8        VALR
C      
C ----------------------------------------------------------------------
C
C ROUTINE UTILITAIRE POUR LE CONTACT (TOUTES METHODES)
C
C RETOURNE LES COEFFICIENTS VARAIBLES AU COURS DU CALCUL
C
C ----------------------------------------------------------------------
C
C  
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  IZONE  : NUMERO DE LA ZONE
C IN  ACTION : 'E' ECRIT DANS LA SD
C              'L' LIT DANS LA SD
C IN  NOMCOE : NOM DU COEFFICIENT
C I/O VALR   : VALEUR REELLE
C
C ------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------
C 
      INTEGER      CFMMVD,ZTACO
      CHARACTER*24 TABCOF
      INTEGER      JTABCO
      CHARACTER*24 NOMCOE
      INTEGER      CFDISI,NZOCO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      NOMCOE = NOMCOZ
      NZOCO  = CFDISI(DEFICO,'NZOCO')
      CALL ASSERT(IZONE.LE.NZOCO)
      CALL ASSERT(IZONE.GE.1)   
C
C --- ACCES SD
C
      ZTACO  = CFMMVD('ZTACO')
      TABCOF = RESOCO(1:14)//'.TABL.COEF'
      CALL JEVEUO(TABCOF,'E',JTABCO)
C
      IF (ACTION.EQ.'E') THEN
        IF (NOMCOE.EQ.'E_N') THEN
          ZR(JTABCO+ZTACO*(IZONE-1)+1 -1) = VALR
        ELSEIF (NOMCOE.EQ.'E_T') THEN
          ZR(JTABCO+ZTACO*(IZONE-1)+2 -1) = VALR
        ELSEIF (NOMCOE.EQ.'COEF_REGU_CONT') THEN
          ZR(JTABCO+ZTACO*(IZONE-1)+3 -1) = VALR
        ELSEIF (NOMCOE.EQ.'COEF_REGU_FROT') THEN
          ZR(JTABCO+ZTACO*(IZONE-1)+4 -1) = VALR
        ELSEIF (NOMCOE.EQ.'COEF_PENA_CONT') THEN
          ZR(JTABCO+ZTACO*(IZONE-1)+5 -1) = VALR
        ELSEIF (NOMCOE.EQ.'COEF_PENA_FROT') THEN
          ZR(JTABCO+ZTACO*(IZONE-1)+6 -1) = VALR
        ELSEIF (NOMCOE.EQ.'COEF_STAB_CONT') THEN
          ZR(JTABCO+ZTACO*(IZONE-1)+7 -1) = VALR
        ELSEIF (NOMCOE.EQ.'COEF_STAB_FROT') THEN
          ZR(JTABCO+ZTACO*(IZONE-1)+8 -1) = VALR
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
      ELSEIF (ACTION.EQ.'L') THEN
        VALR   = 0.D0
        IF (NOMCOE.EQ.'E_N') THEN
          VALR = ZR(JTABCO+ZTACO*(IZONE-1)+1 -1)
        ELSEIF (NOMCOE.EQ.'E_T') THEN
          VALR = ZR(JTABCO+ZTACO*(IZONE-1)+2 -1)
        ELSEIF (NOMCOE.EQ.'COEF_REGU_CONT') THEN
          VALR = ZR(JTABCO+ZTACO*(IZONE-1)+3 -1)
        ELSEIF (NOMCOE.EQ.'COEF_REGU_FROT') THEN
          VALR = ZR(JTABCO+ZTACO*(IZONE-1)+4 -1)
        ELSEIF (NOMCOE.EQ.'COEF_PENA_CONT') THEN
          VALR = ZR(JTABCO+ZTACO*(IZONE-1)+5 -1)
        ELSEIF (NOMCOE.EQ.'COEF_PENA_FROT') THEN
          VALR = ZR(JTABCO+ZTACO*(IZONE-1)+6 -1)
        ELSEIF (NOMCOE.EQ.'COEF_STAB_CONT') THEN
          VALR = ZR(JTABCO+ZTACO*(IZONE-1)+7 -1)
        ELSEIF (NOMCOE.EQ.'COEF_STAB_FROT') THEN
          VALR = ZR(JTABCO+ZTACO*(IZONE-1)+8 -1)
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF        
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
      CALL JEDEMA()
      END
