      SUBROUTINE RECHCO (PREMIE,LREAC,INST,NOMA,NEWGEO,DEFICO,RESOCO)
C ======================================================================
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/09/2002   AUTEUR BSERRE B.SERRE 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C
      IMPLICIT NONE
C
      LOGICAL      PREMIE,LREAC
      REAL*8       INST
      CHARACTER*8  NOMA
      CHARACTER*24 NEWGEO,DEFICO,RESOCO
C
C ----------------------------------------------------------------------
C ROUTINE APPELEE PAR : NMCONT
C ----------------------------------------------------------------------
C
C LISTE DES NOEUDS ESCLAVES COURANTS. RECHERCHE DE LA MAILLE (OU DU
C NOEUD) MAITRE ASSOCIEE A CHAQUE NOEUD ESCLAVE.
C
C IN  PREMIE : VAUT .TRUE. SI C'EST LE PREMIER CALCUL (PAS DE PASSE)
C IN  LREAC  : VAUT .TRUE. SI REACTUALISATION GEOMETRIQUE
C IN  INST   : VALEUR DE L'INSTANT DE CALCUL
C IN  NOMA   : NOM DU MAILLAGE
C IN  NEWGEO : GEOMETRIE ACTUALISEE EN TENANT COMPTE DU CHAMP DE
C              DEPLACEMENTS COURANT
C IN  DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C VAR RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C
C REMARQUE IMPORTANTE
C -------------------
C
C ON DOIT PRENDRE EN COMPTE UN EVENTUEL JEU FICTIF INTRODUIT
C PAR L'UTILISATEUR SOUS LES MOTS-CLES DIST_1 ET DIST_2, ET RANGE
C DANS LE TABLEAU JEUSUP : CE JEU DEVRA ETRE SOUSTRAIT AU VRAI JEU.
C ON MET PREALABLEMENT LE TABLEAU APJEU A ZERO POUR TOUS LES NOEUDS
C ESCLAVES POTENTIELS (NESMAX).
C
C * POUR LES ZONES SANS REACTUALISATION DE L'APPARIEMENT, ON AFFECTE
C   AU TABLEAU APJEU LA VALEUR DE JEUSUP POUR LA ZONE
C   A TOUS LES NOEUDS ESCLAVES (EN NOMBRE CONNU PUISQUE INCHANGE).
C   ON PASSERA ENSUITE DANS LES ROUTINES RECHNO ET CHMANO
C   (APPELEES PAR PROJCO) OU L'ON SOUSTRAIT (DANS RECHNO, SEULEMENT SI
C   PHASE='FINALE', C'EST-A-DIRE APPARIEMENT NODAL) CETTE VALEUR A LA
C   DISTANCE TROUVEE ENTRE LE NOEUD ESCLAVE ET LA MAILLE MAITRE.
C
C * POUR LES ZONES AVEC REACTUALISATION DE L'APPARIEMENT, ON NE CONNAIT
C   PAS A PRIORI LE NOMBRE DE NOEUDS ESCLAVES. DANS RECHNO ET CHMANO,
C   LA PARTIE D'APJEU UTILE VAUT 0, AUQUEL ON RAJOUTE LA DISTANCE
C   NOEUD-MAILLE. ENSUITE (ON CONNAIT DES LORS LE NOMBRE DE NOEUDS
C   ESCLAVES DE LA ZONE), ON SOUSTRAIT A CE JEU REEL LE JEU FICTIF
C   JEUSUP DE LA ZONE. ON NE REPASSERA PAS DANS PROJCO PUISQUE
C   L'APPARIEMENT A CHANGE (LA PROJECTION ET LE CALCUL DU JEU ONT ETE
C   FAITS DANS RECHCO).
C
C
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      CHARACTER*32       JEXNUM , JEXNOM
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      NZOMAX
      PARAMETER    (NZOMAX = 100)
      INTEGER      NESOLD(NZOMAX),IOLD(NZOMAX),JDIM,IFM,IMPR,IER
      INTEGER      IZONE,NZOCO,NNOCO,NESMAX,NESCL,ESCL,IESCL,IESCL0
      INTEGER      JMETH,JZONE,JNOCO,JSUNO,JAPPAR,JAPPTR,JREAC,JCOEF
      INTEGER      JAPMEM,JAPNOR,JAPJEU,JAPCOE,JAPDDL
      INTEGER      NDIM,REAAPP,APPAR,REACTU,K,JOLDAP,JOLDPT,JCMCF
      INTEGER      JJSUP,JJFO1,JJFO2,NUMNO,POSNO,JCOOR
      INTEGER      JFRO,JPENA,JCOMA
      REAL*8       CMULT,DIST1,DIST2,VALPAR(3),X,Y,Z
      CHARACTER*8  K8BID,JEUF1,JEUF2,NOMPAR(3)
      CHARACTER*24 NDIMCO,METHCO,PZONE,CONTMA,CONTNO,PSURNO,DIRCO
      CHARACTER*24 MANOCO,PMANO,NORMCO,APPARI,APPOIN,APNORM,APREAC,APJEU
      CHARACTER*24 APCOEF,APDDL,APMEMO,COEFCO,NOZOCO
      CHARACTER*24 JEUSUP,JEUFO1,JEUFO2,APTANG,APJEFX,APJEFY,JEUINI
      CHARACTER*24 CARACF,FROTE,PENAL,COMAFO
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ ()
C
C ======================================================================
C                      RECUPERATION D'ADRESSES
C ======================================================================
C
C --- LECTURE DES SD POUR LE CONTACT POTENTIEL
C
      NDIMCO = DEFICO(1:16)//'.NDIMCO'
      METHCO = DEFICO(1:16)//'.METHCO'
      PZONE  = DEFICO(1:16)//'.PZONECO'
      CONTNO = DEFICO(1:16)//'.NOEUCO'
      PSURNO = DEFICO(1:16)//'.PSUNOCO'
      JEUSUP = DEFICO(1:16)//'.JSUPCO'
      JEUFO1 = DEFICO(1:16)//'.JFO1CO'
      JEUFO2 = DEFICO(1:16)//'.JFO2CO'
      COEFCO = DEFICO(1:16)//'.COEFCO'
      CARACF = DEFICO(1:16)//'.CARACF'
      FROTE  = DEFICO(1:16)//'.FROTE'
      PENAL  = DEFICO(1:16)//'.PENAL'
      COMAFO = DEFICO(1:16)//'.COMAFO'

      CALL JEVEUO (NDIMCO,'E',JDIM)
      CALL JEVEUO (METHCO,'L',JMETH)
      CALL JEVEUO (PZONE ,'L',JZONE)
      CALL JEVEUO (CONTNO,'L',JNOCO)
      CALL JEVEUO (PSURNO,'L',JSUNO)
      CALL JEVEUO (JEUSUP,'E',JJSUP)
      CALL JEVEUO (JEUFO1,'L',JJFO1)
      CALL JEVEUO (JEUFO2,'L',JJFO2)
      CALL JEVEUO (COEFCO,'L',JCOEF)
      CALL JEVEUO (CARACF,'L',JCMCF)
      CALL JEVEUO (FROTE, 'E',JFRO)
      CALL JEVEUO (PENAL, 'E',JPENA)
      CALL JEVEUO (COMAFO,'E',JCOMA)

      NDIM   = ZI(JDIM)
      NZOCO  = ZI(JDIM+1)
      IF (NZOCO.GT.NZOMAX) THEN
        CALL UTMESS ('F','RECHCO_01','ERREUR DE DIMENSIONNEMENT : '
     &               //'NOMBRE MAXIMAL DE ZONES')
      END IF
      NNOCO  = ZI(JDIM+4)
      NESMAX = ZI(JDIM+8)
C
C --- ADRESSES DES SD A LIRE OU REMPLIR POUR LE CONTACT EFFECTIF
C
      APREAC = RESOCO(1:14)//'.APREAC'
      APMEMO = RESOCO(1:14)//'.APMEMO'
      APPARI = RESOCO(1:14)//'.APPARI'
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APNORM = RESOCO(1:14)//'.APNORM'
      APTANG = RESOCO(1:14)//'.APTANG'
      APJEU  = RESOCO(1:14)//'.APJEU'
      APJEFX = RESOCO(1:14)//'.APJEFX'
      APJEFY = RESOCO(1:14)//'.APJEFY'
      JEUINI = RESOCO(1:14)//'.JEUINI'
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APDDL  = RESOCO(1:14)//'.APDDL'
C
      CALL JEVEUO (APPARI,'E',JAPPAR)
      CALL JEVEUO (APPOIN,'E',JAPPTR)
      CALL JEVEUO (APJEU ,'E',JAPJEU)
      CALL JEVEUO (APREAC,'E',JREAC)
C
C --- COORDONNEES DES NOEUDS DU MAILLAGE
C
      CALL JEVEUO (NEWGEO(1:19)//'.VALE','L',JCOOR)
C
C --- EN VUE DE L'INTERPOLATION DU JEU PAR DES VARIABLES D'ESPACE
C
      NOMPAR(1) = 'X'
      NOMPAR(2) = 'Y'
      NOMPAR(3) = 'Z'
C
C --- ACTUALISATION DES NORMALES POUR LES NOEUDS POTENTIELS DE CONTACT
C
      CALL ACNORM (NDIM,NNOCO,NOMA,NEWGEO,DEFICO)
C
C --- SAUVEGARDE DE RESULTATS DU PASSE SI ON N'EST PAS AU 1ER CALCUL
C
      IF (.NOT.PREMIE) THEN
C
        NESCL = ZI(JAPPAR)
C
C - RECOPIE DANS DES TABLEAUX DE TRAVAIL DE APPARI ET APPOIN
C
        CALL WKVECT ('&&RECHCO.APPARI','V V I',3*NESCL+1,JOLDAP)
        CALL WKVECT ('&&RECHCO.APPOIN','V V I',NESCL+1,JOLDPT)
C
        DO 5 K = 1,3*NESCL+1
          ZI(JOLDAP+K-1) = ZI(JAPPAR+K-1)
 5      CONTINUE
        DO 6 K = 0,NESCL
          ZI(JOLDPT+K) = ZI(JAPPTR+K)
 6      CONTINUE
C
C - STOCKAGE DU NOMBRE DE NOEUDS ESCLAVES ET DU DECALAGE DES ADRESSES
C - DE DEBUT DANS L'ANCIENNE CONFIGURATION : TABLEAUX &&RECHCO_...
C
        IOLD(1) = 0
        DO 7 IZONE = 1,NZOCO
          NESOLD(IZONE) = ZI(JDIM+8+IZONE)
          IF (IZONE.GE.2) IOLD(IZONE) = IOLD(IZONE-1) +
     &                                  ZI(JDIM+8+IZONE-1)
 7      CONTINUE
C
      END IF
C
C ======================================================================
C                           APPARIEMENT
C ======================================================================
C
      IESCL = 0
      ZI(JAPPTR) = 0
C
C --- MISE A ZERO DU JEU
C
      DO 8 K = 1,NESMAX
        ZR(JAPJEU+K-1) = 0.D0
 8    CONTINUE
C
      DO 10 IZONE = 1,NZOCO
C
C --- NOMBRE DE NOEUDS ESCLAVES ENREGISTRES A CE JOUR
C
        IESCL0 = IESCL
C
C --- REACTUALISATIONS A FAIRE
C
        REAAPP = ZI(JREAC+4*(IZONE-1))
        IF(.NOT.LREAC) REAAPP = 0
C
C ----------------------------------------------------------------------
C     SI PAS DE REACTUALISATION DE L'APPARIEMENT POUR CETTE ZONE
C ----------------------------------------------------------------------
C
        IF (REAAPP.EQ.0) THEN
C
C --- INCREMENTATION DU COMPTEUR D'APPARIEMENT FIXE POUR LA ZONE
C
          ZI(JREAC+4*(IZONE-1)+1) = ZI(JREAC+4*(IZONE-1)+1) + 1
C
C --- RECOPIE DES MORCEAUX ENCORE VALABLES DES TABLEAUX APPARI ET APPOIN
C
          DO 40 K = 1,NESOLD(IZONE)
           ZI(JAPPAR+3*(IESCL+K-1)+1) = ZI(JOLDAP+3*(IOLD(IZONE)+K-1)+1)
           ZI(JAPPAR+3*(IESCL+K-1)+2) = ZI(JOLDAP+3*(IOLD(IZONE)+K-1)+2)
           ZI(JAPPAR+3*(IESCL+K-1)+3) = ZI(JREAC+4*(IZONE-1)+2)
           ZI(JAPPTR+IESCL+K)         = ZI(JOLDPT+IOLD(IZONE)+K)
 40       CONTINUE
C
C --- INCREMENTATION DU NOMBRE DE NOEUDS ESCLAVES
C
          IESCL = IESCL + NESOLD(IZONE)
C
          GO TO 10
C
        END IF
C
C ----------------------------------------------------------------------
C         SI REACTUALISATION DE L'APPARIEMENT POUR CETTE ZONE
C     OU PASSAGE INITIAL POUR REMPLIR LES SD (CAS SANS APPARIEMENT)
C ----------------------------------------------------------------------
C
        ZI(JREAC+4*(IZONE-1)+1) = 0
C
C --- DETERMINATION DES CARACTERISTIQUES DE LA REACTUALISATION
C
        REACTU = ZI(JREAC+4*(IZONE-1)+2)
        ESCL   = ZI(JREAC+4*(IZONE-1)+3)
C
C --- COEFFICIENT MULTIPLICATEUR DE LA RELATION UNILATERALE
C
        CMULT = ZR(JCOEF+IZONE-1)
C
C --- BRANCHEMENT SELON LE TYPE D'APPARIEMENT
C
        APPAR = ZI(JMETH+9*(IZONE-1)+1)
        IF ((APPAR.EQ.0).OR.(APPAR.EQ.-1).OR.(APPAR.EQ.4)) THEN
         CALL RECHNO ('FINALE',IZONE,ESCL,REAAPP,REACTU,NEWGEO,DEFICO,
     &                  RESOCO,IESCL,CMULT)
        ELSE IF (APPAR.EQ.1) THEN
          CALL RECHME (IZONE,ESCL,REAAPP,REACTU,NOMA,NEWGEO,DEFICO,
     &                 RESOCO,IESCL,CMULT)
        ELSE IF (APPAR.EQ.2) THEN
C          CALL RECHTE ()
          CALL UTMESS ('F','RECHCO_02','L''APPARIEMENT PAR LA METHODE '
     &                 //'DES TERRITOIRES N''EST PAS OPERATIONNEL')
        ELSE IF (APPAR.EQ.3) THEN
C          CALL RECHHI ()
          CALL UTMESS ('F','RECHCO_03','L''APPARIEMENT PAR LA METHODE '
     &                 //'HIERARCHIQUE N''EST PAS OPERATIONNEL')
        END IF
C
C --- ADDITION DU JEU FICTIF DE LA ZONE DANS APJEU
C
        DO 60 K = IESCL0+1,IESCL
          POSNO = ZI(JAPPAR+3*(K-1)+1)
C
C --- NUMERO DU NOEUD ESCLAVE COURANT
C
          NUMNO = ZI(JNOCO+POSNO-1)
C
C --- COORDONNEES DU NOEUD ESCLAVE COURANT
C
          X = ZR(JCOOR+3*(NUMNO-1))
          Y = ZR(JCOOR+3*(NUMNO-1)+1)
          Z = ZR(JCOOR+3*(NUMNO-1)+2)
C
          VALPAR(1) = X
          VALPAR(2) = Y
          VALPAR(3) = Z
C
C
C --- VALEUR DU JEU SUPPLEMENTAIRE SI C'EST UNE "FONCTION" D'ESPACE
C
          DIST1 = 0.D0
          DIST2 = 0.D0
          JEUF1 = ZK8(JJFO1+IZONE-1)
          JEUF2 = ZK8(JJFO2+IZONE-1)
          IF ((JEUF1.NE.' ').OR.(JEUF2.NE.' ')) THEN
            IF (JEUF1.NE.' ')
     &        CALL FOINTE ('F',JEUF1,3,NOMPAR,VALPAR,DIST1,IER)
            IF (JEUF2.NE.' ')
     &        CALL FOINTE ('F',JEUF2,3,NOMPAR,VALPAR,DIST2,IER)
            ZR(JJSUP+IZONE-1) = DIST1 + DIST2
          ENDIF
          ZR(JAPJEU+K-1) = ZR(JAPJEU+K-1) - ZR(JJSUP+IZONE-1)
C
C
C --- CARACTERISTIQUES DU FROTTEMENT POUR METHODES
C --- "PENALISATION" ET "LAGRANGIEN"
C
          ZR(JFRO -1+  K  ) = ZR(JCMCF+6* (IZONE-1)+4)
          ZR(JPENA-1+2*K-1) = ZR(JCMCF+6* (IZONE-1)+2)
          ZR(JPENA-1+2*K  ) = ZR(JCMCF+6* (IZONE-1)+3)
          ZR(JCOMA-1+  K  ) = ZR(JCMCF+6* (IZONE-1)+6)
 60     CONTINUE
C
C --- NOMBRE DE NOEUDS ESCLAVES DANS LA ZONE
C
        ZI(JDIM+8+IZONE) = IESCL - IESCL0
C
 10   CONTINUE
C
C --- STOCKAGE DES LONGUEURS EFFECTIVES
C
      NESCL = IESCL
      ZI(JAPPAR) = NESCL
      IF (NESCL.GT.NESMAX) THEN
        CALL UTMESS ('F','RECHCO_04','ERREUR DE DIMENSIONNEMENT : '
     &               //'NOMBRE MAXIMAL DE NOEUDS ESCLAVES')
      END IF
      IF (ZI(JAPPTR+NESCL).GT.30*NESMAX) THEN
        CALL UTMESS ('F','RECHCO_05','ERREUR DE DIMENSIONNEMENT '
     &               //'DES TABLEAUX APCOEF ET APDDL')
      END IF
      CALL JEECRA (APPARI,'LONUTI',3*NESCL+1,K8BID)
      CALL JEECRA (APPOIN,'LONUTI',NESCL+1,K8BID)
      CALL JEECRA (APNORM,'LONUTI',3*NESCL,K8BID)
      CALL JEECRA (APTANG,'LONUTI',6*NESCL,K8BID)
      CALL JEECRA (APJEU ,'LONUTI',NESCL,  K8BID)
      CALL JEECRA (APJEFX,'LONUTI',NESCL,  K8BID)
      CALL JEECRA (APJEFY,'LONUTI',NESCL,  K8BID)
      CALL JEECRA (JEUINI,'LONUTI',NESCL,  K8BID)
      CALL JEECRA (APCOEF,'LONUTI',ZI(JAPPTR+NESCL),K8BID)
      CALL JEECRA (APDDL ,'LONUTI',ZI(JAPPTR+NESCL),K8BID)
C
C --- IMPRESSIONS POUR LES DEVELOPPEURS
C
      CALL INFNIV (IFM,IMPR)
      IF (IMPR.GE.2) THEN
        CALL JEVEUO (APMEMO,'L',JAPMEM)
        CALL JEVEUO (APNORM,'L',JAPNOR)
        CALL JEVEUO (APCOEF,'L',JAPCOE)
        CALL JEVEUO (APDDL, 'L',JAPDDL)
        WRITE (IFM,*)
        WRITE (IFM,1070) '--------------------------------------'
        WRITE (IFM,1070) '     IMPRESSIONS DE VERIFICATION      '
        WRITE (IFM,1070) '      APRES APPARIEMENT (RECHCO)      '
        WRITE (IFM,1070) '--------------------------------------'
        WRITE (IFM,*)
C        WRITE (IFM,1060) '---> NESCL = ',NESCL
C        WRITE (IFM,*)
C        WRITE (IFM,1050) '---> APREAC'
C        WRITE (IFM,1030) (ZI(JREAC+K-1),K=1,4*NZOCO)
C        WRITE (IFM,*)
C        WRITE (IFM,1050) '---> APMEMO'
C        WRITE (IFM,1020) (ZI(JAPMEM+K-1),K=1,4*NNOCO)
C        WRITE (IFM,*)
        WRITE (IFM,1050) '---> APPARI'
        WRITE (IFM,1080) ZI(JAPPAR)
        WRITE (IFM,1010) (ZI(JAPPAR+K),K=1,3*NESCL)
        WRITE (IFM,*)
C        WRITE (IFM,1050) '---> APPOIN'
C        WRITE (IFM,1030) (ZI(JAPPTR+K),K=0,NESCL)
C        WRITE (IFM,*)
        WRITE (IFM,1050) '---> APNORM'
        WRITE (IFM,1000) (ZR(JAPNOR+K-1),K=1,3*NESCL)
        WRITE (IFM,*)
        WRITE (IFM,1050) '---> APJEU'
        WRITE (IFM,1000) (ZR(JAPJEU+K-1),K=1,NESCL)
        WRITE (IFM,*)
C        WRITE (IFM,1050) '---> APCOEF'
C        WRITE (IFM,1000) (ZR(JAPCOE+K-1),K=1,ZI(JAPPTR+NESCL))
C        WRITE (IFM,*)
C        WRITE (IFM,1050) '---> APDDL'
C        WRITE (IFM,1010) (ZI(JAPDDL+K-1),K=1,ZI(JAPPTR+NESCL))
C        WRITE (IFM,*)
        WRITE (IFM,1070) '--------------------------------------'
        WRITE (IFM,*)
      END IF
C
      CALL JEDETR ('&&RECHCO.APPARI')
      CALL JEDETR ('&&RECHCO.APPOIN')
C
C ----------------------------------------------------------------------
C
 1000 FORMAT (('<CONTACT_3> ',8X,6(1E10.3,1X)))
 1010 FORMAT (('<CONTACT_3> ',8X,6(I5,2X)))
 1020 FORMAT (('<CONTACT_3> ',8X,8(I5,2X)))
 1030 FORMAT (('<CONTACT_3> ',8X,10(I5,2X)))
 1040 FORMAT (('<CONTACT_3> ',8X,6(I5,2X)))
 1050 FORMAT ('<CONTACT_3> ',A11)
 1060 FORMAT ('<CONTACT_3> ',A13,I5)
 1070 FORMAT ('<CONTACT_3> ',A38)
 1080 FORMAT ('<CONTACT_3> ',9X,I5)
C
      CALL JEDEMA ()
      END
