      SUBROUTINE RECHCO(NOMA  ,DEFICO,RESOCO,NEWGEO,
     &                  PREMIE,INST)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 21/10/2008   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C
      IMPLICIT NONE
      LOGICAL      PREMIE
      REAL*8       INST
      CHARACTER*8  NOMA
      CHARACTER*24 NEWGEO
      CHARACTER*24 DEFICO
      CHARACTER*24 RESOCO
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - APPARIEMENT)
C
C RECHERCHE DE LA MAILLE OU DU NOEUD MAITRE ASSOCIE A CHAQUE 
C NOEUD ESCLAVE
C
C ----------------------------------------------------------------------
C
C
C IN  PREMIE : VAUT .TRUE. SI C'EST LE PREMIER CALCUL (PAS DE PASSE)
C IN  INST   : VALEUR DE L'INSTANT DE CALCUL
C IN  NOMA   : NOM DU MAILLAGE
C IN  NEWGEO : GEOMETRIE ACTUALISEE EN TENANT COMPTE DU CHAMP DE
C              DEPLACEMENTS COURANT
C IN  DEFICO : SD DE DEFINITION DU CONTACT (ISSUE D'AFFE_CHAR_MECA)
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      CFMMVD,ZAPPA,ZCARF,CFDISI
      INTEGER      NESMAX,NESCLT,NZOCO,NFESCL
      INTEGER      IBID,K,IZONE,IESCL,IESCL0,ITEMAX
      INTEGER      IAPPA,TYPALF
      INTEGER      POSNOE,NUMNOE
      INTEGER      JCOOR,VALI(2)
      CHARACTER*24 SAUVAP,SAUVPT,SAUVIO      
      CHARACTER*24 APDDL,APJEU,APPARI,APPOIN,COMAFO,CONTNO
      INTEGER      JAPJEU,JAPPAR,JAPPTR,JCOMA,JNOCO
      CHARACTER*24 CARFRO,FROTE
      INTEGER      JCARFR,JFRO
      CHARACTER*24 JEUINI,PENAL,NDIMCO
      INTEGER      JPENA,JDIM
      CHARACTER*24 APJEFX,APJEFY,APCOEF
      CHARACTER*8  K8BID
      INTEGER      IFM,NIV
      REAL*8       R8BID,COEFRO,COEFPN,COEFPT,COEFTE,DIST 
      REAL*8       COORDE(3)  
      REAL*8       CFDISR,EPSMAX   
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()      
      CALL INFDBG('CONTACT',IFM,NIV)      
C
C --- INFOS SUR LA CHARGE DE CONTACT
C
      CALL CFDISC(DEFICO,' ',IBID,TYPALF,IBID,IBID)
      CALL CFIMPE(IFM,NIV,'CFGEOM',3)      
C
C --- LECTURE DES SD POUR LE CONTACT POTENTIEL
C
      APCOEF = RESOCO(1:14)//'.APCOEF'
      APDDL  = RESOCO(1:14)//'.APDDL'
      APJEFX = RESOCO(1:14)//'.APJEFX'
      APJEFY = RESOCO(1:14)//'.APJEFY'
      APJEU  = RESOCO(1:14)//'.APJEU'
      APPARI = RESOCO(1:14)//'.APPARI'
      APPOIN = RESOCO(1:14)//'.APPOIN'
      CARFRO = DEFICO(1:16)//'.CARFRO'
      COMAFO = DEFICO(1:16)//'.COMAFO'
      CONTNO = DEFICO(1:16)//'.NOEUCO'
      FROTE  = DEFICO(1:16)//'.FROTE'
      JEUINI = RESOCO(1:14)//'.JEUINI'
      NDIMCO = DEFICO(1:16)//'.NDIMCO'      
      PENAL  = DEFICO(1:16)//'.PENAL'
C
      CALL JEVEUO(APJEU ,'E',JAPJEU)
      CALL JEVEUO(APPARI,'E',JAPPAR)
      CALL JEVEUO(APPOIN,'E',JAPPTR)
      CALL JEVEUO(CARFRO,'L',JCARFR)
      CALL JEVEUO(COMAFO,'E',JCOMA )
      CALL JEVEUO(CONTNO,'L',JNOCO )
      CALL JEVEUO(FROTE ,'E',JFRO  )
      CALL JEVEUO(PENAL ,'E',JPENA )
      CALL JEVEUO(NDIMCO,'E',JDIM  )      
C
C --- INITIALISATION DE VARIABLES
C
      NESCLT = ZI(JAPPAR)
      IZONE  = 0
      NZOCO  = CFDISI(DEFICO,'NZOCO' ,IZONE)
      NESMAX = CFDISI(DEFICO,'NESMAX',IZONE)
      ZAPPA  = CFMMVD('ZAPPA')
      ZCARF  = CFMMVD('ZCARF')
      SAUVAP = '&&RECHCO.APPARI'
      SAUVPT = '&&RECHCO.APPOIN'
      SAUVIO = '&&RECHCO.IOLD'              
C
C --- COORDONNEES DES NOEUDS DU MAILLAGE
C
      CALL JEVEUO(NEWGEO(1:19)//'.VALE','L',JCOOR)
C
C --- INFOS GENERIQUES POUR L'ALGORITHME D'APPARIEMENT
C         
      EPSMAX = CFDISR(DEFICO,'PROJ_NEWT_RESI',IZONE )
      ITEMAX = CFDISI(DEFICO,'PROJ_NEWT_ITER',IZONE )       
C
C --- CALCUL DES NORMALES/TANGENTES EN CHAQUE NOEUD (SI NECESSAIRE)
C     
      CALL CFCALN(NOMA  ,DEFICO,RESOCO,NEWGEO,ITEMAX,
     &            EPSMAX)
C
C --- SAUVEGARDE DE RESULTATS DU PASSE SI ON N'EST PAS AU 1ER CALCUL
C
      IF (.NOT. PREMIE) THEN
        CALL SAUVCO(DEFICO,RESOCO,SAUVAP,SAUVPT,SAUVIO)
      END IF
C
C --- APPARIEMENT
C    
      ZI(JAPPTR) = 0
C
C --- MISE A ZERO DU JEU
C
      DO 8 K = 1,NESMAX
        ZR(JAPJEU+K-1) = 0.D0
 8    CONTINUE
C
C --- INDICE DE DEBUT DU NOEUD ESCLAVE COURANT
C 
      IESCL      = 0
C
      DO 10 IZONE = 1,NZOCO
C
C --- REACTUALISATION DE L'APPARIEMENT POUR CETTE ZONE
C
        VALI(1) = IZONE
        CALL CFIMPD(IFM   ,NIV  ,'RECHCO',2, 
     &              VALI  ,R8BID,K8BID)   
C          
C --- DEBUT DU STOCKAGE DES INFOS SUR LES NOEUDS ESCLAVES
C --- POUR LA ZONE COURANTE
C
        IESCL0 = IESCL + 1
C
C --- TYPE D'APPARIEMENT
C
        IAPPA  = CFDISI(DEFICO,'APPARIEMENT',IZONE)
C
C --- COEFFICIENTS DE PENALISATION
C 
        COEFPN = ZR(JCARFR+ZCARF*(IZONE-1)+1)
        COEFPT = ZR(JCARFR+ZCARF*(IZONE-1)+2)
C
C --- COEFFICIENT DE FROTTEMENT
C             
        COEFRO = ZR(JCARFR+ZCARF*(IZONE-1)+3) 
C
C --- COEFFICIENT THETA POUR FROTTEMENT
C   
        COEFTE = ZR(JCARFR+ZCARF*(IZONE-1)+4)                     
C
C --- APPEL DE LA METHODE D'APPARIEMENT
C
        IF (IAPPA.EQ.0) THEN
          CALL RECHNO(NOMA  ,IZONE ,NEWGEO,DEFICO,RESOCO,
     &                IESCL0,NFESCL)
        ELSEIF (IAPPA .EQ. 1) THEN          
          CALL RECHME(NOMA  ,IZONE ,NEWGEO,DEFICO,RESOCO,
     &                IESCL0,NFESCL)   
        ELSE
          CALL ASSERT(.FALSE.)
        END IF   
C
C --- NOUVEL INDICE DANS LA BOUCLE DES NOEUDS ESCLAVES
C
        IESCL = IESCL0 + NFESCL - 1             
C
C --- CALCULS GLOBAUX SUR LA ZONE
C
        DO 60 K = IESCL0,IESCL
C
C --- CARACTERISTIQUES NOEUD ESCLAVE
C
          POSNOE = ZI(JAPPAR+ZAPPA*(K-1)+1)
          NUMNOE = ZI(JNOCO+POSNOE-1)
          COORDE(1) = ZR(JCOOR+3*(NUMNOE-1))
          COORDE(2) = ZR(JCOOR+3*(NUMNOE-1)+1)
          COORDE(3) = ZR(JCOOR+3*(NUMNOE-1)+2) 
C
C --- CALCUL DU JEU FICTIF DE LA ZONE
C    
          CALL CFDIST(DEFICO,IZONE ,POSNOE,COORDE,INST  ,
     &                DIST  )
C
C --- ADDITION DU JEU FICTIF DE LA ZONE DANS APJEU
C
          ZR(JAPJEU+K-1) = ZR(JAPJEU+K-1) - DIST
C
C --- RECOPIE CARACTERISTIQUES ZONE -> NOEUDS ESCLAVES
C           
          ZR(JFRO-1+K)      = COEFRO
          ZR(JPENA-1+2*K-1) = COEFPN
          ZR(JPENA-1+2*K)   = COEFPT
          ZR(JCOMA-1+K)     = COEFTE
 60     CONTINUE
C
C --- NOMBRE DE NOEUDS ESCLAVES DANS LA ZONE
C
        ZI(JDIM+8+IZONE) = IESCL - IESCL0 + 1
C
 10   CONTINUE
C
C --- STOCKAGE DES LONGUEURS EFFECTIVES
C
      NESCLT     = IESCL 
      ZI(JAPPAR) = NESCLT
      IF (NESCLT .GT. NESMAX) THEN
        CALL ASSERT(.FALSE.)
      END IF
      IF (ZI(JAPPTR+NESCLT) .GT. 30*NESMAX) THEN
        CALL ASSERT(.FALSE.)
      END IF
      CALL JEECRA(APPARI,'LONUTI',ZAPPA*NESCLT+1,K8BID)
      CALL JEECRA(APPOIN,'LONUTI',NESCLT+1,K8BID)
      CALL JEECRA(APJEU ,'LONUTI',NESCLT,K8BID)
      CALL JEECRA(JEUINI,'LONUTI',NESCLT,K8BID)
      CALL JEECRA(APCOEF,'LONUTI',ZI(JAPPTR+NESCLT),K8BID)
      CALL JEECRA(APDDL ,'LONUTI',ZI(JAPPTR+NESCLT),K8BID)
      IF (TYPALF .NE. 0) THEN
        CALL JEECRA(APJEFX,'LONUTI',NESCLT,K8BID)
        CALL JEECRA(APJEFY,'LONUTI',NESCLT,K8BID)
      END IF
C
C --- NETTOYAGE DES VECTEURS DE SAUVEGARDE
C
      CALL JEDETR(SAUVAP)
      CALL JEDETR(SAUVPT)
      CALL JEDETR(SAUVIO)
C
      CALL JEDEMA
      END
