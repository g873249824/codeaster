      SUBROUTINE CASEMO(LRAIDE,LAMOR,LMASSE,NEQ,MXRESF,NBMODE,
     &                  FREQ,VECT,
     &                  NUMODE,DVECTI,DVECTM,CDVAL,CDVEC)

C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/06/2012   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C CALCUL SENSIBILITE DE MODES PROPRES
C HYPOTHESES : MODES SIMPLES, DC/DP SONT NULLES
C-----------------------------------------------------------------------

      IMPLICIT NONE

C PARAMETRES D'APPELS
      INTEGER LRAIDE,LAMOR,LMASSE,NEQ,MXRESF,NBMODE,NUMODE
      REAL*8 FREQ(MXRESF,*)
      COMPLEX*16 VECT(*),DVECTI(*),CDVAL,CDVEC(*),DVECTM(*)

C ENTREES :
C LRAIDE : DESCRIPTEUR MATRICE RAIDEUR
C LAMOR : DESCRIPTEUR MATRICE AMORTISSEMENT
C LMASSE : DESCRIPTEUR MATRICE MASSE
C NEQ : NOMBRE DE DDL
C MXRESF : NOMBRE DE MODES MAXI
C NBMODE : NOMBRE DE MODES CALCULES
C NUMODE : NUMERO DU MODE TRAITE
C FREQ : FREQUENCES PROPRES ET VALEURS PROPRES
C VECT : VECTEURS PROPRES
C DVECTI : DK/DP * VECTEUR PROPRE
C DVECTM : DM/DP * VECTEUR PROPRE

C SORTIES :
C CDVAL : DERIVEE VALEUR PROPRE
C CDVEC : DERIVEE VECTEUR PROPRE

C --------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ---------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8  ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------------

C VARIABLES LOCALES

      INTEGER IRET,IEQ,IRESU,ILIG,ICOL
      INTEGER JA,JB,JCAN,JTRAV,JA2,JB2,JVALS,JU,JV,NEQ2
      REAL*8 R8PREM,EPS,LBR,LBI,LB2R,LB2I
      COMPLEX*16 LB,LB2,DCONJG,PSIC
      CHARACTER*6 NOMPRO
      CHARACTER*8 BASENO
      CHARACTER*15 MATA,VECB,MATA2,VECB2
      CHARACTER*17 VCAN,VTRAV,VALS,MATU,MATV

      PARAMETER (NOMPRO = 'CASEMO')

      CALL JEMARQ()

      BASENO = '&&'//NOMPRO

C FREQ(NUMODE,1) : FREQUENCE PROPRE
C FREQ(NUMODE,2) : OMEGA2
C FREQ(NUMODE,3) : AMORTISSEMENT REDUIT
C FREQ(NUMODE,5) : MASSE GENERALISEE
C FREQ(NUMODE,7) : AMORTISSEMENT GENERALISE

C TRANSCRIPTION DE FREQ EN VALEUR PROPRE COMPLEXE

      LBR = -FREQ(NUMODE,3)*SQRT(FREQ(NUMODE,2))/
     &       SQRT(1.D0-FREQ(NUMODE,3)*FREQ(NUMODE,3))
      LBI = SQRT(FREQ(NUMODE,2))
      LB = DCMPLX(LBR,LBI)

      LB2R = LBR*LBR-LBI*LBI
      LB2I = 2.D0*LBR*LBI
      LB2 = DCMPLX(LB2R,LB2I)


       PSIC = 2.D0*LB*FREQ(NUMODE,5)+FREQ(NUMODE,7)

C CALCUL DE LA DERIVEE DE LA VALEUR PROPRE

        CDVAL = 0.D0
        DO 126 IEQ = 1,NEQ
          CDVAL = CDVAL+DCONJG(VECT(IEQ))*DVECTI(IEQ) +
     &            LB2*DCONJG(VECT(IEQ))*DVECTM(IEQ)
126    CONTINUE
       CDVAL = -CDVAL/PSIC

C CALCUL DE LA DERIVEE DU VECTEUR PROPRE

C CONSTRUCTION MATRICES DU SYSTEME : A*X = B

      MATA = BASENO//'_MAT_A'
      VECB = BASENO//'_VEC_B'
      CALL WKVECT(MATA,'V V C',NEQ*NEQ,JA)
      CALL WKVECT(VECB,'V V C',NEQ,JB)

      VTRAV = BASENO//'_VEC_TRAV'
      VCAN = BASENO//'_VEC_CAN'
      CALL WKVECT(VTRAV,'V V C',NEQ,JTRAV)
      CALL WKVECT(VCAN,'V V C',NEQ,JCAN)

C CREATION DE LA MATRICE A

      DO 100 IEQ = 1,NEQ
        ZC(JCAN-1+IEQ) = 0.D0
100   CONTINUE

      DO 200 IEQ = 1,NEQ
        IRESU = JA+(IEQ-1)*NEQ
        ZC(JCAN-1+IEQ) = LB2
        CALL MCMULT('ZERO',LMASSE,ZC(JCAN),ZC(IRESU),1,.FALSE.)
        IF (LAMOR.NE.0) THEN
          ZC(JCAN-1+IEQ) = LB
          CALL MCMULT('CUMU',LAMOR,ZC(JCAN),ZC(IRESU),1,.FALSE.)
        ENDIF
        ZC(JCAN-1+IEQ) = 1.D0
        CALL MCMULT('CUMU',LRAIDE,ZC(JCAN),ZC(IRESU),1,.FALSE.)
        ZC(JCAN-1+IEQ) = 0.D0
200   CONTINUE

C CREATION DU VECTEUR B

      DO 300 IEQ = 1,NEQ
        ZC(JTRAV-1+IEQ) = 2.D0*LB*VECT(IEQ)
300   CONTINUE
      CALL MCMULT('ZERO',LMASSE,ZC(JTRAV),ZC(JCAN),1,.FALSE.)
      IF (LAMOR.NE.0) THEN
        CALL MCMULT('CUMU',LAMOR,VECT,ZC(JCAN),1,.FALSE.)
      ENDIF

      DO 700 IEQ = 1,NEQ
        ZC(JB-1+IEQ) = -DVECTI(IEQ)-ZC(JCAN-1+IEQ)*CDVAL
     &                 -LB2*DVECTM(IEQ)
C SI DERIVATION AMORTISSEMENT, IL FAUT RAJOUTER :
C     - LAMBDA*C'*VECT
700   CONTINUE

      CALL JEDETR(VCAN)
      CALL JEDETR(VTRAV)

C RESOLUTION SYSTEME COMPLEXE PAR APPROCHE REELLE :
C PASSAGE A L ESPACE DOUBLE

      NEQ2 = NEQ*2
      MATA2 = BASENO//'_MAT_A2'
      VECB2 = BASENO//'_VEC_B2'
      CALL WKVECT(MATA2,'V V R',NEQ2*NEQ2,JA2)
      CALL WKVECT(VECB2,'V V R',NEQ2,JB2)

      DO 800 ICOL = 1,NEQ
        DO 810 ILIG = 1,NEQ
          IRESU = JA-1+(ICOL-1)*NEQ+ILIG
          ZR(JA2-1+(ICOL-1)*NEQ2+ILIG) = DBLE(ZC(IRESU))
          ZR(JA2-1+(ICOL-1)*NEQ2+NEQ+ILIG) = DIMAG(ZC(IRESU))
          ZR(JA2-1+NEQ2*NEQ+(ICOL-1)*NEQ2+ILIG) =
     &        -DIMAG(ZC(IRESU))
          ZR(JA2-1+NEQ2*NEQ+(ICOL-1)*NEQ2+NEQ+ILIG) =
     &         DBLE(ZC(IRESU))
810     CONTINUE
        ZR(JB2-1+ICOL) = DBLE(ZC(JB-1+ICOL))
        ZR(JB2-1+NEQ+ICOL) = DIMAG(ZC(JB-1+ICOL))
800   CONTINUE

      CALL JEDETR(MATA)
      CALL JEDETR(VECB)

      VALS = BASENO//'_VAL_SING'
      MATU = BASENO//'_U'
      MATV = BASENO//'_V'

      CALL WKVECT(VTRAV,'V V R',NEQ2,JTRAV)
      CALL WKVECT(VALS,'V V R',NEQ2,JVALS)
      CALL WKVECT(MATU,'V V R',NEQ2*NEQ2,JU)
      CALL WKVECT(MATV,'V V R',NEQ2*NEQ2,JV)

C LA MATRICE A EST SINGULIERE => CALCUL PAR SVD
      EPS = 1.0D+02*R8PREM()
      CALL RSLSVD(NEQ2,NEQ2,NEQ2,ZR(JA2),ZR(JVALS),ZR(JU),ZR(JV),
     &            1,ZR(JB2),EPS,IRET,ZR(JTRAV))

      IF (IRET.NE.0) THEN
        CALL U2MESS('F','ALGORITH_77')
      ENDIF

C DERIVEE DU VECTEUR PROPRE
      DO 900 IEQ = 1,NEQ
        CDVEC(IEQ) = DCMPLX(ZR(JB2-1+IEQ),ZR(JB2-1+NEQ+IEQ))
900   CONTINUE

      CALL JEDETR(VTRAV)
      CALL JEDETR(MATA2)
      CALL JEDETR(VECB2)
      CALL JEDETR(VALS)
      CALL JEDETR(MATU)
      CALL JEDETR(MATV)


      CALL JEDEMA()

      END
