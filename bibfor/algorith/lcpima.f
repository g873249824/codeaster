      SUBROUTINE LCPIMA(FAMI,KPG,KSP,POUM,MATE,COMPOR,INSTAM,INSTAP,
     &                  CRIT,SIGM,VIM)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/06/2012   AUTEUR PROIX J-M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C ***************************************************************
C *       INTEGRATION DE LA LOI SIMO_MIEHE ECROUISSAGE ISOTROPE *
C *        LECTURE DES CARACTERISTIQUES DU MATERIAU             *
C ***************************************************************
C IN  MATE    : ADRESSE DU MATERIAU
C IN  COMPOR  : COMPORTEMENT
C IN  TEMP    : TEMPERATURE A L'INSTANT DU CALCUL
C IN  INSTAM  : INTANT T-
C IN  INSTAP  : INSTANT T+
C IN COMMON   : PM DOIT DEJA ETRE AFFECTE (PLASTICITE CUMULEE EN T-)
C ----------------------------------------------------------------------

      IMPLICIT NONE

C DECLARATION GLOBALE

      INTEGER       MATE,KPG,KSP
      CHARACTER*16  COMPOR
      CHARACTER*(*) FAMI
      CHARACTER*1   POUM
      REAL*8        TEMP,INSTAM,INSTAP,CRIT(*),SIGM(*),VIM(*)

C  COMMON MATERIAU POUR VON MISES

      INTEGER JPROL,JVALE,NBVAL
      REAL*8  PM,YOUNG,NU,MU,UNK,TROISK,COTHER
      REAL*8  SIGM0,EPSI0,DT,COEFM,RPM,PENTE

      COMMON /LCPIM/
     &          PM,YOUNG,NU,MU,UNK,TROISK,COTHER,
     &          SIGM0,EPSI0,DT,COEFM,RPM,PENTE,
     &          APUI,NPUI,SIGY,JPROL,JVALE,NBVAL
C ----------------------------------------------------------------------

C DECLARATION LOCALE

      INTEGER ICODRE(3),LGPG
      CHARACTER*8  NOMRES(3),KBID,TYPE
      REAL*8       EPSTHE,SIGY,AIRE,DSDE,VALRM(2)
      REAL*8       R8BID,VALRES(3),RESU,APUI,NPUI,RPRIM,R8MIEM
      INTEGER      IRET1,IRET2,IBID
C ----------------------------------------------------------------------


C 1 - A L INSTANT COURANT YOUNG, MU ET UNK

      CALL RCVALB (FAMI,KPG,KSP,POUM,MATE,' ','ELAS', 0,KBID,R8BID,
     &             1,'NU',NU,ICODRE(1), 2)

      CALL VERIFT(FAMI,KPG,KSP,POUM,MATE,'ELAS',1,EPSTHE,IRET1)
      CALL RCVARC(' ','TEMP',POUM,FAMI,KPG,KSP,TEMP,IRET2)
      IF (COMPOR(6:14).EQ.'ISOT_TRAC') THEN
        CALL RCTYPE(MATE,1,'TEMP',TEMP,RESU,TYPE)
        IF ((TYPE.EQ.'TEMP').AND.(IRET1.EQ.1))
     &        CALL U2MESS('F','CALCULEL_31')
        CALL RCTRAC(MATE,1,'SIGM',RESU,JPROL,JVALE,NBVAL,
     &             YOUNG)
      ELSE
        CALL RCVALB (FAMI,KPG,KSP,POUM,MATE,' ','ELAS', 0,KBID,R8BID,
     &              1,'E',YOUNG,ICODRE(1), 2)
      ENDIF
      
C     CRIT_RUPT
      IF ((CRIT(11).GT.0.D0).AND.(VIM(14).GT.0.D0)) THEN
         LGPG = 14
         CALL RUPMAT (FAMI,KPG,KSP,MATE,VIM,LGPG,YOUNG,SIGM)
      ENDIF
      MU     = YOUNG/(2.D0*(1.D0+NU))
      TROISK = YOUNG/(1.D0-2.D0*NU)
      UNK    = TROISK/3.D0

C 2 - COEFFICIENT DE DILATATION THERMIQUE ALPHA
C     => CONTRAINTE THERMIQUE COTHER

      COTHER = TROISK*EPSTHE

C 3 - SIGY, PENTE ET ECROUISSAGE A TEMP ET EN P-

      IF(COMPOR(10:14).EQ.'_TRAC') THEN
        CALL RCFONC('S',1,JPROL,JVALE,NBVAL,SIGY,
     &             R8BID,R8BID,R8BID,R8BID,R8BID,R8BID,R8BID,R8BID)

        CALL RCFONC('V',1,JPROL,JVALE,NBVAL,R8BID,
     &             R8BID,R8BID,PM,RPM,PENTE,AIRE,R8BID,R8BID)
      ENDIF

      IF(COMPOR(10:14).EQ.'_LINE') THEN
        NOMRES(1)='D_SIGM_EPSI'
        NOMRES(2)='SY'
        CALL RCVALB (FAMI,KPG,KSP,POUM,MATE,' ','ECRO_LINE',0,KBID,
     &              R8BID,2,NOMRES,VALRES,ICODRE(1), 2)
        DSDE=VALRES(1)
        SIGY=VALRES(2)
        IF ((YOUNG-DSDE).LT.R8MIEM()) THEN
           VALRM(1)=DSDE
           VALRM(2)=YOUNG
           CALL U2MESG('F','COMPOR1_54',0,' ',0,IBID,2,VALRM)
        ELSE
           PENTE=DSDE*YOUNG/(YOUNG-DSDE)
        ENDIF
        RPM=PENTE*PM+SIGY
      ENDIF

      IF (COMPOR(10:14) .EQ. '_PUIS') THEN
          NOMRES(1)='SY'
          NOMRES(2)='A_PUIS'
          NOMRES(3)='N_PUIS'
          CALL RCVALB(FAMI,KPG,KSP,POUM,MATE,' ','ECRO_PUIS',0,KBID,
     &                   R8BID,3,NOMRES,VALRES,ICODRE, 2)
          SIGY   = VALRES(1)
          APUI   = VALRES(2)
          NPUI   = VALRES(3)
          CALL ECPUIS(YOUNG,SIGY,APUI,1.D0/NPUI,PM,0.D0,RPM,RPRIM)
      ENDIF

C 4 - PARAMETRES DE CARACTERISTIQUES VISQUEUSES SI BESOIN

      DT = INSTAP - INSTAM
      IF (COMPOR(1:4).EQ.'VISC') THEN
        NOMRES(1)= 'SIGM_0'
        NOMRES(2)= 'EPSI_0'
        NOMRES(3)= 'M'
        CALL RCVALB (FAMI,KPG,KSP,POUM,MATE,' ','VISC_SINH',0,KBID,
     &              R8BID,3,NOMRES,VALRES,ICODRE(1), 2)
        SIGM0=VALRES(1)
        EPSI0=VALRES(2)
        COEFM= VALRES(3)
      ENDIF

      END
