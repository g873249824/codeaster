      SUBROUTINE NMMOAM(SDAMMO)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      CHARACTER*24 SDAMMO
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ---------------------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX -----------------------------
C
      CHARACTER*6  PGC
      CHARACTER*8  K8BID,MODMEC,MAILLA,LISTAM
      CHARACTER*14 NUMDDL
      CHARACTER*24 DEEQ
      CHARACTER*24 MATRIC,NOMCHA
      REAL*8       PI,R8PI,R8BID
      INTEGER      IBID,IER,IRET,IAM,I
      INTEGER      NA,NB,N,NM
      INTEGER      NBMD,NEQ,NBMODE,NBMAX,NBAMOR
      INTEGER      IADRIF,IDDEEQ,LMAT,IAMOR,LTVEC,LPAR
      INTEGER      JVALMO,JBASMO,JAMOR,JVAL,JAMO2
      LOGICAL      EXIAM,GETEXM
      DATA PGC/'NMMOAM'/
C
C ---------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      EXIAM = .FALSE.
      PI    = R8PI()
      CALL GETVID('AMOR_MODAL','MODE_MECA',1,1,1,MODMEC,NBMD)
      CALL JEVEUO(MODMEC//'           .REFD','L',IADRIF)
      MATRIC =  ZK24(IADRIF)(1:8)
      CALL DISMOI('F','NOM_MAILLA'  ,MATRIC,'MATR_ASSE',IBID,MAILLA,IER)
      CALL DISMOI('F','NOM_NUME_DDL',MATRIC,'MATR_ASSE',IBID,NUMDDL,
     &         IRET)
      DEEQ = NUMDDL//'.NUME.DEEQ'
      CALL JEVEUO(DEEQ,'L',IDDEEQ)
      CALL DISMOI('F','NB_EQUA',MATRIC,'MATR_ASSE',NEQ,K8BID,IRET)
C
C --- ALLOCATION DESCRIPTEUR DE LA MATRICE
C
      CALL MTDSCR(MATRIC(1:8))
      CALL JEVEUO(MATRIC(1:19)//'.&INT','E',LMAT)
C
      CALL JELIRA(MODMEC//'           .ORDR','LONMAX',NBMODE,K8BID)
      CALL GETVIS('AMOR_MODAL','NB_MODE',1,1,1,NBMAX,NM)
      NBMODE = MIN(NBMODE,NBMAX)
      CALL WKVECT(SDAMMO(1:19)//'.VALM','V V R',3*NBMODE,JVALMO)
      CALL WKVECT(SDAMMO(1:19)//'.BASM','V V R',NBMODE*NEQ,JBASMO)
C
C     ----- RECUPERATION DES AMORTISSEMENTS -----

      CALL WKVECT('&&'//PGC//'.AMORTISSEMENT','V V R',NBMODE,JAMOR)

      NA = 0
      NB = 0
      CALL GETVR8('AMOR_MODAL','AMOR_REDUIT',1,1,0,R8BID,NA)
      EXIAM = GETEXM('AMOR_MODAL','LIST_AMOR')
      IF(EXIAM) THEN
         CALL GETVID('AMOR_MODAL','LIST_AMOR',1,1,0,K8BID,NB)
      ENDIF
      IF (NA.NE.0 .OR. NB.NE.0) THEN
        IF (NA.NE.0) THEN
          NBAMOR = -NA
          CALL GETVR8('AMOR_MODAL','AMOR_REDUIT',1,1,NBAMOR,
     &                ZR(JAMOR),NA)
        ELSE
          CALL GETVID('AMOR_MODAL','LIST_AMOR',1,1,1,LISTAM,N)
          CALL JELIRA(LISTAM//'           .VALE','LONMAX',NBAMOR,K8BID)
          CALL JEVEUO(LISTAM//'           .VALE','L',IAMOR)
          DO 30 IAM = 1,NBMODE
             ZR(JAMOR+IAM-1) = ZR(IAMOR+IAM-1)
   30     CONTINUE
        ENDIF

        IF (NBAMOR.GT.NBMODE) THEN
            CALL U2MESS('A','ALGORITH8_19')
         ENDIF
         IF (NBAMOR.LT.NBMODE) THEN
            CALL WKVECT('&&'//PGC//'.AMORTISSEMEN2','V V R',
     &                   NBMODE,JAMO2)
            DO 40 IAM = 1,NBAMOR
               ZR(JAMO2+IAM-1) = ZR(JAMOR+IAM-1)
 40         CONTINUE
            DO 42 IAM = NBAMOR+1,NBMODE
               ZR(JAMO2+IAM-1) = ZR(JAMOR+NBAMOR-1)
 42         CONTINUE
            NBAMOR = NBMODE
            JAMOR = JAMO2
         ENDIF
      ENDIF
C --- ALLOCATION VECTEUR DE TRAVAIL
C
      CALL WKVECT('&&'//PGC//'.VECT1','V V R',NEQ,LTVEC)
      DO 10 I=1,NBMODE
        CALL RSADPA(MODMEC,'L',1,'MASS_GENE',I,0,LPAR,K8BID)
        ZR(JVALMO+3*(I-1)+1-1) = ZR(LPAR)
        CALL RSADPA(MODMEC,'L',1,'FREQ',I,0,LPAR,K8BID)
        ZR(JVALMO+3*(I-1)+2-1) = ZR(LPAR)*2.0D0*PI
        ZR(JVALMO+3*(I-1)+3-1) = ZR(JAMOR+I-1)
        CALL RSEXCH(MODMEC,'DEPL',I,NOMCHA,IRET)
        CALL JEVEUO(NOMCHA(1:19)//'.VALE','L',JVAL)
C
C ----- CALCUL PRODUIT MATRICE DEFORMEE
C
        CALL DCOPY(NEQ,ZR(JVAL),1,ZR(LTVEC),1)
        CALL ZERLAG(ZR(LTVEC),NEQ,ZI(IDDEEQ))
        CALL MRMULT('ZERO',LMAT,ZR(LTVEC),'R',ZR(JBASMO+(I-1)*NEQ),1)
C
C     --- MISE A ZERO DES DDL DE LAGRANGE
        CALL ZERLAG(ZR(JBASMO+(I-1)*NEQ),NEQ,ZI(IDDEEQ))
 10   CONTINUE

      CALL JEDETC('V','&&NMMOAM',1)
C
      CALL JEDEMA()
      END
