      SUBROUTINE CFFLM2(RESOCO,RESIGR,NDIM  ,NEQ   ,NESMAX,
     &                  NBLIAC,NBLIAI,GLITOL,GLIMIN,GLIMAX)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'
      CHARACTER*24 RESOCO
      REAL*8       RESIGR
      REAL*8       GLIMIN,GLIMAX,GLITOL
      INTEGER      NEQ,NBLIAC,NESMAX,NDIM,NBLIAI
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - RESOLUTION)
C
C CONSTRUCTION DE LA MATRICE TANGENTE DE FROTTEMENT - TERME NEGATIF
C
C ----------------------------------------------------------------------
C
C
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  RESIGR : RESI_GLOB_RELA
C IN  NEQ    : NOMBRE D'EQUATIONS
C IN  NDIM   : DIMENSION DU PROBLEME
C IN  NESMAX : NOMBRE MAX DE NOEUDS ESCLAVES
C IN  NBLIAC : NOMBRE DE LIAISONS ACTIVES
C IN  NBLIAI : NOMBRE DE LIAISONS
C IN  GLIMIN : GLISSEMENT MINIMUM
C IN  GLIMAX : GLISSEMENT MAXIMUM
C IN  GLITOL : TOELRANCE POUR DETECTER UN GLISSEMENT NUL
C
C
C
C
      INTEGER      NDLMAX
      PARAMETER   (NDLMAX = 30)
      INTEGER      JDECAL,NBDDL
      REAL*8       GLIS
      REAL*8       COEFPT,COEFFF,COEFTE,BETA,ALPHA
      REAL*8       LAMBDC,LAMBDF
      INTEGER      ILIAC,ILIAI,ILIAC2
      CHARACTER*19 MU,LIAC,AFMU
      INTEGER      JMU,JLIAC,JAFMU
      CHARACTER*24 APDDL,APPOIN,APCOFR
      INTEGER      JAPDDL,JAPPTR,JAPCOF
      CHARACTER*24 TACFIN
      INTEGER      JTACF
      INTEGER      CFMMVD,ZTACF
      CHARACTER*19 FRO2
      INTEGER      JFRO2
      CHARACTER*19 DEPLC
      INTEGER      JDEPC
      LOGICAL      LIAACT
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- LECTURE DES STRUCTURES DE DONNEES DE CONTACT
C
      APPOIN = RESOCO(1:14)//'.APPOIN'
      APCOFR = RESOCO(1:14)//'.APCOFR'
      APDDL  = RESOCO(1:14)//'.APDDL'
      LIAC   = RESOCO(1:14)//'.LIAC'
      TACFIN = RESOCO(1:14)//'.TACFIN'
      AFMU   = RESOCO(1:14)//'.AFMU'
      MU     = RESOCO(1:14)//'.MU'
      FRO2   = RESOCO(1:14)//'.FRO2'
      CALL JEVEUO(APPOIN,'L',JAPPTR)
      CALL JEVEUO(APCOFR,'L',JAPCOF)
      CALL JEVEUO(APDDL, 'L',JAPDDL)
      CALL JEVEUO(LIAC,  'L',JLIAC )
      CALL JEVEUO(TACFIN,'L',JTACF )
      CALL JEVEUO(AFMU , 'L',JAFMU )
      CALL JEVEUO(MU,    'E',JMU   )
      ZTACF  = CFMMVD('ZTACF')      
C
C --- ACCES AUX CHAMPS DE TRAVAIL
C --- DEPLC : INCREMENT DE DEPLACEMENT CUMULE DEPUIS DEBUT 
C ---         DU PAS DE TEMPS AVEC CORRECTION DU CONTACT
C
      DEPLC  = RESOCO(1:14)//'.DEPC'
      CALL JEVEUO(DEPLC (1:19)//'.VALE','L',JDEPC)  
C
C --- CALCUL DE LA MATRICE E_T*AaT
C
      DO 100 ILIAI = 1,NBLIAI
C
C ----- INITIALISATION DE LA COLONNE
C
        CALL JEVEUO(JEXNUM(FRO2,ILIAI), 'E', JFRO2 )
        CALL R8INIR(NDLMAX,0.D0,ZR(JFRO2),1)
C
C ----- LA LIAISON EST-ELLE ACTIVE ?
C
        LIAACT = .FALSE.
        DO 200 ILIAC = 1,NBLIAC
          IF (ZI(JLIAC-1+ILIAC).EQ.ILIAI) THEN
            LIAACT = .TRUE.
            ILIAC2 = ILIAC
          ENDIF
  200   CONTINUE        
C
C ----- CALCUL
C
        IF (LIAACT) THEN
C
C ------- REPERAGE DE LA LIAISON
C
          JDECAL = ZI(JAPPTR+ILIAI-1)
          NBDDL  = ZI(JAPPTR+ILIAI) - ZI(JAPPTR+ILIAI-1)
C                                 
C ------- CALCUL DU JEU TANGENT CORRIGE
C
          CALL CFCGLC(NDIM  ,NEQ   ,NESMAX,RESOCO,ILIAI ,
     &                JDECAL,NBDDL ,JDEPC ,JAPDDL,JAPCOF,
     &                GLIS  )               
C
C ------- PARAMETRES
C          
          COEFFF = ZR(JTACF+ZTACF*(ILIAI-1)+1-1)
          COEFPT = ZR(JTACF+ZTACF*(ILIAI-1)+3-1)
          COEFTE = ZR(JTACF+ZTACF*(ILIAI-1)+4-1)
C
C ------- LAMBDA DE CONTACT ET DE FROTTEMENT
C          
          LAMBDC = ZR(JMU+ILIAC2-1)
          LAMBDF = COEFFF*LAMBDC
C
C ------- DETERMINATION DE BETA
C
          IF (LAMBDF.EQ.0.D0) THEN
            BETA = 0.D0
          ELSE
            IF (GLIS.LE.(GLIMAX*GLITOL)) GLIS = GLIMIN
            ALPHA = SQRT(LAMBDF/GLIS)
            BETA  = SQRT(1.D0/(LAMBDF*GLIS))
            IF (ALPHA.GT.SQRT(COEFPT)) BETA = 0.D0
          ENDIF
C
C ------- ON MULTIPIE BETA PAR COEF_MATR_FROT QUI VAUT 1
C ------- SI LE RESIDU EST PLUS PETIT QUE 1E-3
C
          IF ( RESIGR .GE. 1.D-03 ) THEN
            BETA   = SQRT(COEFTE) * BETA
          ENDIF
          CALL CALAPR(NBDDL,BETA,ZR(JAFMU),
     &                  ZI(JAPDDL+JDECAL),ZR(JFRO2))
        ENDIF
        CALL JELIBE(JEXNUM(FRO2,ILIAI))
  100 CONTINUE
C 
      CALL JEDEMA() 
C
      END 
