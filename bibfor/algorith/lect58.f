      SUBROUTINE LECT58 (IDEAS,NOMRES,MAIL,TYPRES,ACCES,LISTR8,
     &                   LISTIS,PRECIS,CRIT,EPSI)
C     -----------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 25/09/2006   AUTEUR A3BHHAE H.ANDRIAMBOLOLONA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2002  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
C     LECT58 : LECTURE FICHIER FORMAT UNIVERSEL DATASET 58
C
C     IN : IDEAS : NUMERO LOGIQUE DU FICHIER UNV
C     IN : NOMRES : NOM DE LA SD RESULTATS
C     IN : MAIL : NOM DU MAILLAGE
C     IN : TYPRES : TYPE DE RESULTAT ('EVOL_ELAS','DYNA_TRANS')
C     IN : ACCES : TYPE D'ACCES ('TOUT_ORDRE','NUME_ORDRE','INST',...)
C     IN : LISTR8 : NOM DE L'OBJET CONTENANT LA LISTE DES INSTANTS
C                        OU DES FREQUENCES A LIRE
C     IN : LISTIS : NOM DE L'OBJET CONTENANT LA LISTE DES
C                        NUMEROS D'ORDRE A LIRE
C     IN : PRECIS : INDICATEUR DE VERIFICATION DE LA PRECISION
C     IN : CRIT : PRECISION : CRITERE RELATIF OU ABSOLU
C     IN : EPSI : PRECISION DEMANDEE
C     -----------------------------------------------------------------
      IMPLICIT NONE
      LOGICAL ASTOCK
      INTEGER IDEAS,PRECIS
      CHARACTER*(*) NOMRES,MAIL,TYPRES,ACCES,LISTR8,LISTIS,CRIT
      REAL*8 EPSI
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ---------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32 JEXNOM,JEXNUM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  -------------------------
C
      CHARACTER*1   PRFNOE
      CHARACTER*6   NOMROU, KAR
      CHARACTER*8   K8BID, LABK8, NOMGD, LICMP(30), MAILLA
      CHARACTER*16  NOMSYM,MOTCLE(1),TYMOCL(1)
      CHARACTER*19  CNS,NOMCH,PRFCHN
      CHARACTER*24  VABS,VORI,VCOR,VALMES,NOOJB
      CHARACTER*80  LIGNE, REPEM1, REC(20)
      INTEGER NBABS, ITYPE, IDIR, NBNMES, ICHAMP, NBMESU
      INTEGER LABEL, LCORR, IBID, LORI
      INTEGER NBREC,IFIELD,NBABS1,INATUR,INATU1
      INTEGER LVALC,LVALR,LABS
      INTEGER IREC,IRET,NBNO,IFRES,IUNIFI
      INTEGER NBOCC,IOCC,NBNO2,IAGNO2,I,ICMPM
      INTEGER NUMORD,JCNSV,JCNSL,IMES,ICMP,INO,IVAL,JABS,NCMP
      REAL*8 AMIN,APAS,RBID,RVAL,DIR(3)
      COMPLEX*16 CVAL,CZERO,CUN
      LOGICAL TROUVE,ZCMPLX,FICAB,FICVA
C
      DATA NOMROU/'LECT58'/
C----------------------------------------------------------------------
C
      CALL JEMARQ()
C
      PRFNOE='N'

      REPEM1 (  1 : 50 ) =
     & '    -1                                            '
      REPEM1 ( 51 : 80 ) =
     & '                              '
      MAILLA = MAIL
      CZERO = DCMPLX(0.D0,0.D0)
      CUN = DCMPLX(1.D0,0.D0)
      NBMESU = 0
      FICAB = .FALSE.
      FICVA = .FALSE.
      VABS = '&&ABSCISSES'
      VORI = '&&ORIENTATIONS'
      VCOR = '&&CORRESPONDANCE'
      VALMES = '&&VALEURSMESUREES'
      CNS = '&&CNS'
C
C RECUPERATION DU NOMBRE DE NOEUDS DU MAILLAGE : NBNMES
      CALL DISMOI('F','NB_NO_MAILLA',MAILLA,'MAILLAGE',
     &                   NBNMES,K8BID,IBID)
C
C RECUPERATION DU NOM SYMBOLIQUE DU CHAMP : NOMSYM
      CALL GETVTX(' ','NOM_CHAM',1,0,1,NOMSYM,NBOCC)
      IF(NBOCC .LT. 0)
     &  CALL UTMESS('A',NOMROU,'ON NE TRAITE PAS ACTUELLEMENT '//
     &        'PLUSIEURS NOM_CHAM SIMULTANEMENT, ON NE CONSIDERE '//
     &        'QUE LE PREMIER ARGUMENT ')
C
C VECTEUR DES NUMEROS DES NOEUDS MESURE SELON L ORDRE FICHIER UNV
      CALL WKVECT ( VCOR , 'V V I' , NBNMES*6 , LCORR )
C
C VECTEUR DES ORIENTATIONS DE MESURE SELON L ORDRE DU FICHIER UNV
      CALL WKVECT ( VORI , 'V V I' , NBNMES*6 , LORI  )
C
      REWIND IDEAS

   10 CONTINUE
      READ (IDEAS, 1000, END = 170) LIGNE
      IF (LIGNE .NE. REPEM1) GO TO 10

      READ (IDEAS, '(A6)', END = 170, ERR = 160) KAR
      IF (KAR.EQ.'    58') THEN
        NBREC = 11
      ELSE
C POSITIONNEMENT A LA FIN DU DATASET
        GO TO 11
      END IF

C LECTURE DE L'ENTETE DU DATASET
      DO 20 IREC = 1,NBREC
        READ (IDEAS,'(A80)',ERR=160) REC(IREC)
   20 CONTINUE

C RECHERCHE DU NOMBRE DE VALEURS CONTENUES DANS LE DATASET
      IREC = 7
      IFIELD = 2
      CALL DECOD2(REC,IREC,IFIELD,0,NBABS,RBID,TROUVE)
      IF (.NOT. FICAB) THEN
        CALL WKVECT(VABS,'V V R',NBABS,LABS)
        NBABS1 = NBABS
        FICAB = .TRUE.
      ELSE
        IF (NBABS .NE. NBABS1) THEN
          CALL UTMESS('F',NOMROU,'NOMBRE DE VALEURS DANS LE '//
     &              'FICHIER UNV DATASET 58 NON IDENTIQUE')
        END IF
      END IF
C
C- RECHERCHE DE LA NATURE DU CHAMP
C   REEL     --> INATUR = 2,4
C   COMPLEXE --> INATUR = 5,6
      IFIELD = 1
      CALL DECOD2(REC,IREC,IFIELD,0,INATUR,RBID,TROUVE)
      IF (NBMESU .EQ. 0) THEN
        INATU1 = INATUR
      ELSE
        IF (INATUR .NE. INATU1) THEN
          CALL UTMESS('F',NOMROU,'NATURE DU CHAMP DANS LE '//
     &              'FICHIER UNV DATASET 58 NON IDENTIQUE')
        END IF
      END IF
      IF (INATUR.EQ.5 .OR. INATUR.EQ.6) THEN
        IF (NOMRES(1:6) .EQ. 'DYNA_T') THEN
          CALL UTMESS('F',NOMROU,'LE TYPE DE RESULTAT DYNA_TRANS'//
     &              'NE SUPPORTE PAS LES DONNEES COMPLEXES')
        END IF
        ZCMPLX = .TRUE.
        IF (.NOT. FICVA) THEN
          CALL WKVECT(VALMES,'V V C',NBABS*NBNMES*3,LVALC)
          FICVA = .TRUE.
        END IF
      ELSE
        IF (NOMRES(1:6) .EQ. 'DYNA_H') THEN
          CALL UTMESS('F',NOMROU,'LE TYPE DE RESULTAT DYNA_HARMO'//
     &              'NE SUPPORTE PAS LES DONNEES REELLES')
        END IF
        ZCMPLX = .FALSE.
        IF (.NOT. FICVA) THEN
          CALL WKVECT(VALMES,'V V R',NBABS*NBNMES*3,LVALR)
          FICVA = .TRUE.
        END IF
      END IF

C RECUPERATION RANGEMENT DES VALEURS : EVEN / UNEVEN : ITYPE
      IFIELD = 3
      CALL DECOD2(REC,IREC,IFIELD,0,ITYPE,RBID,TROUVE)
      IF (ITYPE .EQ. 1) THEN
C RECUPERATION ABSCISSE MIN ET PAS : AMIN APAS
        IFIELD = 4
        CALL DECOD2(REC,IREC,IFIELD,1,IBID,AMIN,TROUVE)
        IFIELD = 5
        CALL DECOD2(REC,IREC,IFIELD,1,IBID,APAS,TROUVE)
      END IF

C LECTURE DU TYPE DU CHAMP
      IREC = 9
      IFIELD = 1
      CALL DECOD2(REC,IREC,IFIELD,0,ICHAMP,RBID,TROUVE)
      IF (ICHAMP .EQ. 2) THEN
        IF (NOMSYM .NE. 'SIEF_NOEU') GO TO 11
        IF (NBMESU .EQ. 0) THEN
          NCMP = 6
          LICMP(1) = 'SIXX'
          LICMP(2) = 'SIYY'
          LICMP(3) = 'SIZZ'
          LICMP(4) = 'SIXY'
          LICMP(5) = 'SIXZ'
          LICMP(6) = 'SIYZ'
          IF (ZCMPLX) THEN
            NOMGD = 'SIEF_C'
          ELSE
            NOMGD = 'SIEF_R'
          ENDIF
        ENDIF
      ENDIF
      IF (ICHAMP .EQ. 3) THEN
        IF (NOMSYM .NE. 'EPSI_NOEU_DEPL') GO TO 11
        IF (NBMESU .EQ. 0) THEN
          NCMP = 6
          LICMP(1) = 'EPXX'
          LICMP(2) = 'EPYY'
          LICMP(3) = 'EPZZ'
          LICMP(4) = 'EPXY'
          LICMP(5) = 'EPXZ'
          LICMP(6) = 'EPYZ'
          IF (ZCMPLX) THEN
            CALL UTMESS ( 'F' , NOMROU , 'ON NE TRAITE PAS '//
     &          'ACTUELLEMENT LES DEFORMATIONS COMPLEXES')
          ELSE
            NOMGD = 'EPSI_R'
          ENDIF
        ENDIF
      ENDIF
      IF (ICHAMP .EQ. 8 .OR. ICHAMP .EQ. 11 .OR. ICHAMP .EQ. 12) THEN
        IF (ICHAMP .EQ. 8) THEN
          IF (NOMSYM .NE. 'DEPL') GO TO 11
        ENDIF
        IF (ICHAMP .EQ. 11) THEN
          IF (NOMSYM .NE. 'VITE') GO TO 11
        ENDIF
        IF (ICHAMP .EQ. 12) THEN
          IF (NOMSYM .NE. 'ACCE') GO TO 11
        ENDIF
        IF (NBMESU .EQ. 0) THEN
          NCMP = 12
          LICMP(1) = 'D1'
          LICMP(2) = 'D2'
          LICMP(3) = 'D3'
          LICMP(4) = 'D1X'
          LICMP(5) = 'D1Y'
          LICMP(6) = 'D1Z'
          LICMP(7) = 'D2X'
          LICMP(8) = 'D2Y'
          LICMP(9) = 'D2Z'
          LICMP(10) = 'D3X'
          LICMP(11) = 'D3Y'
          LICMP(12) = 'D3Z'
          IF (ZCMPLX) THEN
            NOMGD = 'DEPL_C'
          ELSE
            NOMGD = 'DEPL_R'
          ENDIF
        ENDIF
      ENDIF

      NBMESU = NBMESU + 1
      IF (NBMESU .GT. NBNMES*6) THEN
        CALL UTMESS('F',NOMRES,'NOMBRE DE DATASET 58 '//
     &              'SUPERIEUR A NBNOEUD * NBCMP ')
      END IF

C LECTURE DU NUMERO DU NOEUD
      IREC = 6
      IFIELD = 6
      CALL DECOD2(REC,IREC,IFIELD,0,LABEL,RBID,TROUVE)
      IF (LABEL .EQ. 0) THEN
        LIGNE = REC(IREC)
        LABK8 = LIGNE(32:41)
        CALL JENONU (JEXNOM (MAILLA//'.NOMNOE', LABK8), LABEL)
      ELSE
C PRE_IDEAS RAJOUTE UN 'N' DEVANT LE NUMERO DU NOEUD (VOIR ECRNEU)
        CALL CODNOP(LABK8,PRFNOE,1,1)
        CALL CODENT(LABEL,'G',LABK8(2:8))
        CALL JENONU (JEXNOM (MAILLA//'.NOMNOE', LABK8), LABEL)
      END IF
      ZI(LCORR-1 + NBMESU) = LABEL

C LECTURE DU CODE DE LA DIRECTION DE MESURE
      IREC = 6
      IFIELD = 7
      CALL DECOD2(REC,IREC,IFIELD,0,IDIR,RBID,TROUVE)
      ZI(LORI-1 +NBMESU) = IDIR

C LECTURE DES VALEURS
      CALL LECTVL(ZCMPLX,ITYPE,NBABS,INATUR,IDEAS,NBMESU,
     &                   LABS,AMIN,APAS,LVALC,LVALR)

      READ (IDEAS, 1000, END = 170) LIGNE
      IF ( LIGNE .NE. REPEM1) THEN
        CALL UTDEBM('F',NOMROU,'INCOHERANCE DANS LE DATASET 58 : '//
     &     'LE NOMBRE DE VALEURS FOURNIES NE CORRESPOND PAS AU '//
     &     'NOMBRE DE VALEURS ATTENDUES')
         CALL UTIMPI('L','MESURE CONCERNEE : ',1,NBMESU)
         CALL UTFINM
      ENDIF

      GO TO 10

  160 CONTINUE
C EN CAS D ERREUR DE LECTURE DU FICHIER UNV
      CALL UTMESS('F',NOMROU,'ERREUR DANS LA LECTURE DU FICHIER IDEAS')
      CALL UTFINM

   11 CONTINUE
C POSITIONNEMENT A LA FIN DU DATASET
      READ ( IDEAS , 1000 , END = 170 ) LIGNE
      IF ( LIGNE .NE. REPEM1 ) GO TO 11
      GO TO 10

  170 CONTINUE
C FIN LECTURE FICHIER UNV
C
      IFRES = IUNIFI ('MESSAGE')
      WRITE(IFRES,1001) NBMESU
 1001 FORMAT('NOMBRE DE MESURES : ',I6)
      IF (NBMESU .EQ. 0) THEN
        WRITE(IFRES,1002) NOMSYM
 1002   FORMAT('AUCUN CHAMP ',A16,' TROUVE')
        CALL UTMESS('A',NOMROU,'SEULES LES DONNEES DE TYPE '//
     &        'DEPLACEMENT, VITESSE, ACCELERATION, '//
     &        'DEFORMATION OU CONTRAINTE '//
     &        'SONT ACTUELLEMENT TRAITEES ')
        GO TO 9999
      ENDIF

C CREATION DE SD_RESULTAT DYNA_TRANS / DYNA_HARMO / HARM_GENE : TYPRES
      IF((ZCMPLX) .AND. (TYPRES(1:6) .EQ. 'DYNA_T'))
     &  CALL UTMESS('F',NOMROU,'DONNEES : COMPLEXES, '//
     &        'INCOMPATIBLES AVEC DYNA_TRANS')

      IF((.NOT.ZCMPLX) .AND. (TYPRES(1:6) .NE. 'DYNA_T'))
     &  CALL UTMESS('F',NOMROU,'DONNEES : REELLES, '//
     &        'INCOMPATIBLES AVEC DYNA_HARMO OU HARM_GENE')

      CALL RSCRSD(NOMRES,TYPRES,NBABS)
      NOOJB='12345678.00000.NUME.PRNO'
      CALL GNOMSD ( NOOJB,10,14)
      PRFCHN=NOOJB(1:19)
      DO 200 NUMORD = 1,NBABS
        RVAL = ZR(LABS-1 +NUMORD)
        CALL NUMEOK(ACCES,NUMORD,RVAL,LISTR8,LISTIS,PRECIS,
     &                CRIT,EPSI,ASTOCK)
        IF(ASTOCK) THEN
          CALL CNSCRE(MAILLA,NOMGD,NCMP,LICMP,'V',CNS)
          CALL JEVEUO(CNS//'.CNSV','E',JCNSV)
          CALL JEVEUO(CNS//'.CNSL','E',JCNSL)
          DO 303 IMES = 1,NBMESU
            ICMP = ZI(LORI-1 + IMES)
            IVAL = NBABS*(IMES-1) + NUMORD
            INO = ZI(LCORR-1 + IMES)
            IF(ZCMPLX) THEN
              CVAL = ZC(LVALC-1 +IVAL)
            ELSE
              RVAL = ZR(LVALR-1 +IVAL)
            ENDIF
            IF (ICMP .LT. 0) THEN
              ICMP = -ICMP
              IF(ZCMPLX) THEN
                CVAL = -CVAL
              ELSE
                RVAL = -RVAL
              ENDIF
            ENDIF
            IF (NOMGD(1:4) .EQ. 'DEPL') THEN
C ON SUPPOSE QUE ICMP EST COMPRIS ENTRE -3 ET 3
              IDIR = (INO-1)*NCMP + (ICMP-1)*3 + 3
              IF(ZCMPLX) THEN
                ZC(JCNSV-1 + (INO-1)*NCMP+ICMP) = CVAL
                ZC(JCNSV-1 + IDIR+1) = CZERO
                ZC(JCNSV-1 + IDIR+2) = CZERO
                ZC(JCNSV-1 + IDIR+3) = CZERO
                ZC(JCNSV-1 + IDIR+ICMP) = CUN
              ELSE
                ZR(JCNSV-1 + (INO-1)*NCMP+ICMP) = RVAL
                ZR(JCNSV-1 + IDIR+1) = 0.D0
                ZR(JCNSV-1 + IDIR+2) = 0.D0
                ZR(JCNSV-1 + IDIR+3) = 0.D0
                ZR(JCNSV-1 + IDIR+ICMP) = 1.D0
              ENDIF
              ZL(JCNSL-1 + (INO-1)*NCMP+ICMP) = .TRUE.
              ZL(JCNSL-1 + IDIR+1) = .TRUE.
              ZL(JCNSL-1 + IDIR+2) = .TRUE.
              ZL(JCNSL-1 + IDIR+3) = .TRUE.

C TRAITEMENT DES ORIENTATIONS POUR DEPL
      CALL GETFAC('REDEFI_ORIENT',NBOCC)
      IF (NBOCC.GT.0) THEN
        DO 304 IOCC = 1,NBOCC
          MOTCLE(1) = 'NOEUD'
          TYMOCL(1) = 'NOEUD'
          CALL RELIEM(' ',MAILLA,'NU_NOEUD','REDEFI_ORIENT',IOCC,1,
     &                 MOTCLE, TYMOCL,'&&DEFDIR',NBNO2)
          CALL JEVEUO('&&DEFDIR','L',IAGNO2)
          DO 305 I = 1,NBNO2
            IF(ZI(IAGNO2-1 +I) .EQ. INO) THEN
          CALL GETVIS('REDEFI_ORIENT','CODE_DIR',IOCC,0,1,ICMPM,IBID)
              IF(ICMP .EQ. ICMPM) THEN
          CALL GETVR8('REDEFI_ORIENT','DIRECTION',IOCC,0,3,DIR,IBID)
                IF(ZCMPLX) THEN
                  ZC(JCNSV-1 + IDIR+1) = DCMPLX(DIR(1),0.D0)
                  ZC(JCNSV-1 + IDIR+2) = DCMPLX(DIR(2),0.D0)
                  ZC(JCNSV-1 + IDIR+3) = DCMPLX(DIR(3),0.D0)
                ELSE
                  ZR(JCNSV-1 + IDIR+1) = DIR(1)
                  ZR(JCNSV-1 + IDIR+2) = DIR(2)
                  ZR(JCNSV-1 + IDIR+3) = DIR(3)
                ENDIF
              ENDIF
            ENDIF
 305      CONTINUE
          CALL JEDETR('&&DEFDIR')
 304    CONTINUE
      ENDIF
C FIN TRAITEMENT DES ORIENTATIONS POUR DEPL

            ENDIF
            IF (NOMGD(1:4) .EQ. 'SIEF') THEN
              CALL GETFAC('REDEFI_ORIENT',NBOCC)
              IF (NBOCC.GT.0)
     &          CALL UTMESS('A',NOMROU,'ON NE TRAITE PAS '//
     &            'ACTUELLEMENT LA REDEFINITION DES ORIENTATIONS '//
     &            'POUR LES CHAMPS DE CONTRAINTE ')
              IF(ZCMPLX) THEN
                ZC(JCNSV-1 + (INO-1)*NCMP+ICMP) = CVAL
              ELSE
                ZR(JCNSV-1 + (INO-1)*NCMP+ICMP) = RVAL
              ENDIF
              ZL(JCNSL-1 + (INO-1)*NCMP+ICMP) = .TRUE.
            ENDIF
            IF (NOMGD(1:4) .EQ. 'EPSI') THEN
              CALL GETFAC('REDEFI_ORIENT',NBOCC)
              IF (NBOCC.GT.0)
     &          CALL UTMESS('A',NOMROU,'ON NE TRAITE PAS '//
     &            'ACTUELLEMENT LA REDEFINITION DES ORIENTATIONS '//
     &            'POUR LES CHAMPS DE DEFORMATION ')
              ZR(JCNSV-1 + (INO-1)*NCMP+ICMP) = RVAL
              ZL(JCNSL-1 + (INO-1)*NCMP+ICMP) = .TRUE.
            ENDIF
 303      CONTINUE


C RECUPERATION DU NOM DU CHAMP POUR NUMORD : NOMCH
          CALL RSEXCH(NOMRES,NOMSYM,NUMORD,NOMCH,IRET)
          CALL CNSCNO(CNS,PRFCHN,'NON','G',NOMCH)
C
          CALL RSNOCH(NOMRES,NOMSYM,NUMORD,' ')
          IF(ZCMPLX) THEN
            CALL RSADPA(NOMRES,'E',1,'FREQ',NUMORD,0,JABS,K8BID)
          ELSE
            CALL RSADPA(NOMRES,'E',1,'INST',NUMORD,0,JABS,K8BID)
          ENDIF
          ZR(JABS) = ZR(LABS-1 + NUMORD)
C
          CALL DETRSD('CHAM_NO_S',CNS)
        ENDIF
C FIN BOUCLE SUR NUMERO ORDRE
 200  CONTINUE

 9999 CONTINUE

      CALL JEDETR(VABS)
      CALL JEDETR(VORI)
      CALL JEDETR(VCOR)
      CALL JEDETR(VALMES)

      CALL JEDEMA()
C
 1000 FORMAT ( A80 )
C
      END
