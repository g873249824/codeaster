      SUBROUTINE MMCONV(NOMA  ,SDIMPR,DEFICO,RESOCO,VALINC,
     &                  SOLALG,VFROT ,NFROT )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 02/04/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      CHARACTER*8  NOMA
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*24 SDIMPR
      CHARACTER*19 VALINC(*),SOLALG(*)
      REAL*8       VFROT
      CHARACTER*16 NFROT
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE)
C
C CONVERGENCE LIEE AU CONTACT CONTINUE - CAS DE NEWTON GENERALISE
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  SDIMPR : SD AFFICHAGE
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  RESOCO : SD POUR LA RESOLUTION DE CONTACT
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C OUT VFROT  : VALEUR NORME_MAX (RESI_FROT)
C OUT NFROT  : LIEU OU VALEUR NORME_MAX (RESI_FROT)
C
C --------------- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------
C

      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      INTEGER      CFDISI,IRESOF
      CHARACTER*19 DEPPLU,DEPMOI,DDEPLA
      REAL*8       R8BID,R8VIDE
      INTEGER      IBID
      CHARACTER*16 LIECYC,TYPCYC
      LOGICAL      CFDISL,LALLV,LNEWTF
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      TYPCYC = ' '
      NFROT  = ' '
      VFROT  = R8VIDE()
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C
      CALL NMCHEX(VALINC,'VALINC','DEPMOI',DEPMOI)
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)
      CALL NMCHEX(SOLALG,'SOLALG','DDEPLA',DDEPLA)
C
C --- PARAMETRES
C
      IRESOF = CFDISI(DEFICO,'ALGO_RESO_FROT')
      LALLV  = CFDISL(DEFICO,'ALL_VERIF'     )
      LNEWTF = IRESOF.NE.0
C
C --- EVALUATION RESIDU
C
      IF (LNEWTF) THEN
C
C ----- MISE A JOUR DES SEUILS
C
        CALL MMREAS(NOMA  ,DEFICO,RESOCO,VALINC)
C
C ----- CALCUL RESIDU DE FROTTEMENT
C
        CALL MMMCRF(NOMA  ,DDEPLA,DEPPLU,NFROT ,VFROT )
      ENDIF
C
C --- CYCLAGE ?
C
      IF (.NOT.LALLV) THEN
        CALL MMCYCL(DEFICO,RESOCO,TYPCYC,LIECYC)
        CALL IMPSDR(SDIMPR,'CTCC_INFO',TYPCYC,R8BID ,IBID)
      ENDIF
C
      CALL JEDEMA()
      END
