      SUBROUTINE MMCONV(NIVEAU,NOMA  ,DEFICO,RESOCO,LELTF ,
     &                  SDIMPR,VALINC,MAXREL,MMCVCA,MMCVFR,
     &                  MMCVGO)
C     
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 15/03/2010   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      CHARACTER*8  NOMA
      INTEGER      NIVEAU
      LOGICAL      MAXREL
      CHARACTER*19 VALINC(*)
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*24 SDIMPR
      LOGICAL      MMCVCA,MMCVFR,MMCVGO,LELTF
C      
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - ALGORITHME - UTILITAIRE)
C
C GESTION DE LA CONVERGENCE 
C      
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  NIVEAU : NIVEAU DE LA BOUCLE METHODE CONTINUE
C      3     BOUCLE GEOMETRIE
C      2     BOUCLE SEUILS DE FROTTEMENT
C      1     BOUCLE CONTRAINTES ACTIVES
C IN  MAXREL : .TRUE. SI CRITERE RESI_GLOB_RELA ET CHARGEMENT = 0,
C                     ON UTILISE RESI_GLOB_MAXI
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  DEFICO : SD DE DEFINITION DU CONTACT
C IN  RESOCO : SD DE RESOLUTION DU CONTACT
C IN  SDIMPR : SD AFFICHAGE
C IN  MMCVCA : FIN DE BOUCLE DE CONTRAINTES ACTIVES
C OUT MMCVFR : FIN DE BOUCLE POUR LE SEUIL DE FROTTEMENT
C OUT MMCVGO : FIN DE BOUCLE POUR LA BOUCLE DE GEOMETRIE
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      REAL*8       EPSFRO,EPSGEO,CFDISR
      INTEGER      MAXCON,MAXFRO,MAXGEO,ITEMUL
      LOGICAL      CFDISL
      CHARACTER*19 DEPGEO,DEPLAM,DEPPLU
      INTEGER      MMITCA,MMITFR,MMITGO
      INTEGER      NBREAF,NBREAG
      INTEGER      CFDISI,NTPC,IBID
      CHARACTER*16 CVGNOE,K16BLA
      REAL*8       CVGVAL,R8BID ,R8VIDE
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- INITIALISATIONS
C
      NTPC   = CFDISI(DEFICO,'NTPC')  
      DEPGEO = RESOCO(1:14)//'.DEPG' 
      DEPLAM = RESOCO(1:14)//'.DEPF' 
      K16BLA = ' '
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C       
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)
C
C --- INFOS BOUCLE FROTTEMENT
C 
      CALL MMBOUC(RESOCO,'FROT','READ',MMITFR)
      MAXFRO  = CFDISI(DEFICO,'ITER_FROT_MAXI')
      NBREAF  = CFDISI(DEFICO,'NB_ITER_FROT'  )
      EPSFRO  = CFDISR(DEFICO,'RESI_FROT'     )  
C
C --- INFOS BOUCLE GEOMETRIE
C   
      CALL MMBOUC(RESOCO,'GEOM','READ',MMITGO)     
      MAXGEO  = CFDISI(DEFICO,'ITER_GEOM_MAXI')  
      NBREAG  = CFDISI(DEFICO,'NB_ITER_GEOM'  )
      EPSGEO  = CFDISR(DEFICO,'RESI_GEOM'     )
C
C --- INFOS BOUCLES CONTACT
C      
      CALL MMBOUC(RESOCO,'CONT','READ',MMITCA)
      ITEMUL  = CFDISI(DEFICO,'ITER_CONT_MULT')
      IF (ITEMUL.EQ.-1) THEN
        MAXCON  = CFDISI(DEFICO,'ITER_CONT_MAXI')  
      ELSE
        MAXCON  = ITEMUL*NTPC
      ENDIF
C
      GO TO (101,102,103) NIVEAU
 101  CONTINUE
C
C --- CONVERGENCE CONTRAINTES ACTIVES
C
      IF ((.NOT.MMCVCA).AND.(MMITCA.EQ.MAXCON)) THEN
        IF (LELTF) THEN
          CALL U2MESS('A','CONTACT3_86')
          MMCVCA = .TRUE.        
        ELSE
          CALL U2MESS('F','CONTACT3_85')
        ENDIF  
      END IF
      CALL IMPSDR(SDIMPR,'CTCC_NOEU',K16BLA,R8BID ,IBID)
      CALL IMPSDR(SDIMPR,'CTCC_BOUC',K16BLA,R8VIDE(),IBID)      
C
      IF (MMCVCA) THEN
        CALL NMIMPR('IMPR','CNV_CTACT',' ',0.D0,MMITCA)      
      ENDIF
      GOTO 999
 102  CONTINUE
C
C --- CONVERGENCE SEUIL FROTTEMENT
C
      CALL MMMCRI(NOMA  ,DEPLAM,DEPPLU,EPSFRO,CVGNOE,
     &            CVGVAL,MMCVFR)
C     
      IF (CFDISL(DEFICO,'REAC_FROT_MANU')) THEN
        IF (MMITFR.EQ.NBREAF) THEN
          IF (.NOT.MMCVFR) THEN
            CALL U2MESS('A','CONTACT3_97')
          ENDIF
          MMCVFR = .TRUE.
        ELSE
          MMCVFR = .FALSE.
        ENDIF        
      ENDIF
C     
      IF (CFDISL(DEFICO,'REAC_FROT_SANS')) THEN
        MMCVFR = .TRUE.
      ENDIF
C      
      IF (CFDISL(DEFICO,'REAC_FROT_AUTO')) THEN
        IF ((.NOT.MMCVFR).AND.(MMITFR.EQ.(MAXFRO+1))) THEN
          CALL U2MESS('F','CONTACT3_87')  
        ENDIF 
      ENDIF
      CALL IMPSDR(SDIMPR,'CTCC_NOEU',CVGNOE,R8BID ,IBID)
      CALL IMPSDR(SDIMPR,'CTCC_BOUC',K16BLA,CVGVAL,IBID)              
C
      IF (MMCVFR) THEN
        CALL NMIMPR('IMPR','CNV_SEUIL',' ',0.D0,MMITFR)
      ELSE     
        CALL COPISD('CHAMP_GD','V',DEPPLU,DEPLAM) 
      ENDIF 
      GOTO 999
 103  CONTINUE
C
C --- CONVERGENCE GEOMETRIE
C
      CALL MMMCRI(NOMA  ,DEPGEO,DEPPLU,EPSGEO,CVGNOE,
     &            CVGVAL,MMCVGO)
C     
      IF (CFDISL(DEFICO,'REAC_GEOM_MANU')) THEN
        IF (MMITGO.EQ.NBREAG) THEN
          IF (.NOT.MMCVGO) THEN
            CALL U2MESS('A','CONTACT3_96')
          ENDIF
          MMCVGO = .TRUE.
        ELSE
          MMCVGO = .FALSE.
        ENDIF        
      ENDIF
C     
      IF (CFDISL(DEFICO,'REAC_GEOM_SANS')) THEN
        MMCVGO = .TRUE.
      ENDIF 
C      
      IF (CFDISL(DEFICO,'REAC_GEOM_AUTO')) THEN
        IF ((.NOT.MMCVGO).AND.(MMITGO.EQ.(MAXGEO+1))) THEN
          CALL U2MESS('F','CONTACT3_81')
        ENDIF 
      ENDIF   
      CALL IMPSDR(SDIMPR,'CTCC_NOEU',CVGNOE,R8BID ,IBID)
      CALL IMPSDR(SDIMPR,'CTCC_BOUC',K16BLA,CVGVAL,IBID)              
C
      IF (MMCVGO) THEN
        CALL NMIMPR('IMPR','CNV_GEOME',' ',0.D0,MMITGO)
        CALL IMPSDM(SDIMPR,'ITER_NEWT',' ')
        IF (MAXREL) THEN
          CALL NMCVGI('CVG_MX') 
        ELSE
          CALL NMCVGI('CVG_OK') 
        ENDIF
      ELSE     
        CALL COPISD('CHAMP_GD','V',DEPPLU,DEPGEO)        
      ENDIF    
      GOTO 999
C    
 999  CONTINUE
C
      CALL JEDEMA()
      END
