      SUBROUTINE CALAMO(NOMRES,CLASSE,BASMOD)
      IMPLICIT REAL*8 (A-H,O-Z)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 11/05/2009   AUTEUR NISTOR I.NISTOR 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C***********************************************************************
C    T. KERBER     DATE 02/06/93
C-----------------------------------------------------------------------
C    BUT : CALCUL DE LA MATRICE D'AMORTISSEMENT MODAL
C
C          CONSISTE A DETERMINER LA MATRICE D'AMORTISSEMENT POUR UN
C          MACRO-ELEMENT, EN FONCTION DES AMORTISSEMENTS REDUITS.
C          LA MATRICE RESULTAT EST DIAGONALE MAIS STOCKEE TRIANGLE SUP,
C          POUR RESTER COHERENTE AVEC LES AUTRES MATRICES.
C-----------------------------------------------------------------------
C
C NOMRES /I/ : NOM K19 DE LA MATRICE CARRE RESULTAT
C CLASSE /I/ : CLASSE DE LA BASE JEVEUX DE L'OBJET RESULTAT
C BASMOD /I/ : NOM UT DE LA BASE MODALE DE PROJECTION
C 
C TOLE CRP_6
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER ZI
      INTEGER VALI(3)
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      REAL*8       PI
      CHARACTER*1  CLASSE
      CHARACTER*8  BASMOD,BLANC,K8BID
      CHARACTER*24 CHAVAL,NOMRES
      CHARACTER*24 VALK(2)
C
C-----------------------------------------------------------------------
      DATA BLANC /'                    '/
C-----------------------------------------------------------------------
C
      CALL JEMARQ()
      PI=4.D0*ATAN(1.D0)
C
C --- CREATION DU .REFE
C
      CALL WKVECT(NOMRES(1:18)//'_REFE','G V K24',2,LDREF)
      ZK24(LDREF) = BASMOD
C
C --- RECUPERATION DES DIMENSIONS DE LA BASE MODALE
C
C   NOMBRE DE MODES PROPRES
C
      CALL DISMOI('F','NB_MODES_DYN',BASMOD,'RESULTAT',
     &                      NBMOD,K8BID,IER)
C
C   NOMBRE TOTAL DE MODES ET DEFORMEES
C
      CALL DISMOI('F','NB_MODES_TOT',BASMOD,'RESULTAT',
     &                      NBDEF,K8BID,IER)
C
C --- CREATION DU .DESC
C
      CALL WKVECT(NOMRES(1:18)//'_DESC','G V I',3,LDDES)
      ZI(LDDES)   = 2
      ZI(LDDES+1) = NBDEF
      ZI(LDDES+2) = 2
C
C --- ALLOCATION DE LA MATRICE RESULTAT
C
      NTAIL = NBDEF* (NBDEF+1)/2
      CALL WKVECT(NOMRES(1:18)//'_VALE',CLASSE//' V R',NTAIL,LDRES)
C
C --- REMPLISSAGE DES VALEURS DIAGONALES
C
      CALL GETVR8(BLANC,'AMOR_REDUIT',1,1,0,BID,IOC)
      NBAMOR = -IOC
      IF (NBAMOR.GT.NBMOD) THEN
        VALI (1) = NBMOD
        VALI (2) = NBAMOR
        VALI (3) = NBMOD
        CALL U2MESG('A','ALGORITH15_90',0,' ',3,VALI,0,0.D0)
        CALL WKVECT('&&CALAMO.COEFF','V V R',NBMOD,LAMOR)
        CALL GETVR8(BLANC,'AMOR_REDUIT',1,1,NBMOD,ZR(LAMOR),IOC)
C
      ELSE IF (NBAMOR.LT.NBMOD) THEN
         CALL WKVECT('&&CALAMO.COEFF','V V R',NBAMOR,LAMOR)
         CALL GETVR8(BLANC,'AMOR_REDUIT',1,1,NBAMOR,ZR(LAMOR),IOC)
         IDIFF = NBMOD - NBAMOR
         VALI (1) = IDIFF
         VALI (2) = NBMOD
         VALI (3) = IDIFF
         CALL U2MESG('A','ALGORITH15_91',0,' ',3,VALI,0,0.D0)
         CALL WKVECT('&&CALAMO.COEFF2','V V R',NBMOD,LAMO2)
         DO 20 IAM = 1,NBAMOR
            ZR(LAMO2+IAM-1) = ZR(LAMOR+IAM-1)
 20      CONTINUE
         DO 22 IAM = NBAMOR,NBMOD
            ZR(LAMO2+IAM-1) = ZR(LAMOR+NBAMOR-1)
 22      CONTINUE
         LAMOR = LAMO2
C
       ELSE IF (NBAMOR.EQ.NBMOD) THEN
         CALL WKVECT('&&CALAMO.COEFF','V V R',NBMOD,LAMOR)
         CALL GETVR8(BLANC,'AMOR_REDUIT',1,1,NBMOD,ZR(LAMOR),IOC)
       ENDIF
C
      DO 10 I = 1,NBMOD
        IAD = I* (I+1)/2
        CALL RSADPA(BASMOD,'L',1,'FREQ',I,0,LFREQ,K8BID)
        CALL RSADPA(BASMOD,'L',1,'MASS_GENE',I,0,LMGEN,K8BID)
        COEFF = 4.D0*PI*ZR(LFREQ)*ZR(LAMOR+I-1)*ZR(LMGEN)
        ZR(LDRES+IAD-1) = COEFF
10    CONTINUE
C
      CALL JEDETC('V','&&CALAMO',1)
C
      GOTO 9999
C
 9999 CONTINUE
      CALL JEDEMA()
      END
