      SUBROUTINE BMNODI(BASMDZ,INTFZ,NMINTZ,NUMINT,NBDEF,IVCORD,NBDIF)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 28/06/2005   AUTEUR NICOLAS O.NICOLAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***********************************************************************
C    P. RICHARD     DATE 09/0491/
C-----------------------------------------------------------------------
C  BUT:       < BASE MODALE NUMERO ORDRE DES DEFORMEES INTERFACE>
C
C  SI BASE MODALE DONNEE:
C  ----------------------
C    RENDRE UN VECTEUR DONNANT LES NUMEROS ORDRE DES DEFORMEES (DANS
C  UN CONCEPT BASE MODALE) ASSOCIEES AU DDL D'UNE INTERFACE
C
C  SI PAS DE BASE MODALE DONNEE:
C  ----------------------
C    RENDRE UN VECTEUR DONNANT LES NUMEROS ORDRE DES DEFORMEES A CALCULE
C  RELATIF A UNE INTERFACE D'UNE INTERF_DYNA
C
C  L'INTERFACE EST DONNEE SOIT PAR SON NOM SOIT PAR SON NUMERO
C
C-----------------------------------------------------------------------
C
C BASMDZ   /I/: NOM UTILISATEUR DE LA BASE MODALE OU BLANC
C INTFZ    /I/: NOM UTILISATEUR DE L'INTERF_DYNA OU BLANC
C NMINTZ   /I/: NOM DE L'INTERFACE
C NUMINT   /I/: NUMERO DE L'INTERFACE
C NBDEF    /I/: NOMBRE DE NUMERO ORDRE ATTENDUS
C IVCORD   /O/: VECTEUR DES NUMEROS D'ORDRE A REMPLIR
C NBDIF    /0/: NOMBRE ATTENDU - NOMBRE TROUVE
C
C-------- DEBUT COMMUNS NORMALISES  JEVEUX  ----------------------------
C
      INTEGER          ZI
      COMMON  /IVARJE/ ZI(1)
      REAL*8           ZR
      COMMON  /RVARJE/ ZR(1)
      COMPLEX*16       ZC
      COMMON  /CVARJE/ ZC(1)
      LOGICAL          ZL
      COMMON  /LVARJE/ ZL(1)
      CHARACTER*8      ZK8
      CHARACTER*16              ZK16
      CHARACTER*24                        ZK24
      CHARACTER*32                                  ZK32
      CHARACTER*80                                            ZK80
      COMMON  /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
      CHARACTER*32 JEXNOM, JEXNUM
C
C----------  FIN  COMMUNS NORMALISES  JEVEUX  --------------------------
C
      CHARACTER*6      PGC
      CHARACTER*8 BASMOD,NOMINT,INTF,BLANC,INTFB
      CHARACTER*8 K8BID
      CHARACTER*(*) BASMDZ,NMINTZ,INTFZ
      CHARACTER*24 NOEINT
      INTEGER IVCORD(NBDEF),IDEC(300)
      CHARACTER*10 TYPBAS(3)
      CHARACTER*1 K1BID
C
C-----------------------------------------------------------------------
      DATA TYPBAS/'CLASSIQUE','CYCLIQUE','RITZ'/
      DATA PGC /'BMNODI'/
C-----------------------------------------------------------------------
C
C
      CALL JEMARQ()
      BASMOD = BASMDZ
      NOMINT = NMINTZ
      INTF   = INTFZ
      BLANC='        '
      IF(BASMOD.EQ.BLANC.AND.INTF.EQ.BLANC) THEN
          CALL UTDEBM('F',PGC,'ARRET SUR MANQUE ARGUMENT')
          CALL UTIMPK('L',' BASE MODALE DONNEE --> ',1,BASMOD)
          CALL UTIMPK('L',' INTERF_DYNA DONNEE --> ',1,INTF)
          CALL UTFINM
      ENDIF
C
      NBDIF=NBDEF
      NBMOD=0
C
C
C-------------RECUPERATION DU TYPE DE BASE ET INTERF_DYNA------------
C
      IF(BASMOD.NE.BLANC) THEN
        CALL JEVEUO(BASMOD//'           .UTIL','L',LLUTI)
        IDESC=ZI(LLUTI)
        NBMOD=ZI(LLUTI+2)
        IF(IDESC.NE.1) THEN
          CALL UTDEBM('F',PGC,'ARRET SUR TYPE DE BASE INCORRECTE')
          CALL UTIMPK('L',' BASE MODALE DONNEE --> ',1,BASMOD)
          CALL UTIMPK('L',' TYPE  BASE MODALE --> ',1,TYPBAS(IDESC))
          CALL UTIMPK('L',' TYPE ATTENDU --> ',1,TYPBAS(1))
          CALL UTFINM
        ENDIF
C
        CALL JEVEUO(BASMOD//'           .REFD','L',LLREF)
        INTFB=ZK24(LLREF+4)
        IF(INTF.NE.BLANC.AND.INTF.NE.INTFB) THEN
          CALL UTDEBM('F',PGC,'ARRET SU INCOHERENCE DONNEES')
          CALL UTIMPK('L',' BASE MODALE DONNEE --> ',1,BASMOD)
          CALL UTIMPK('L',' INTERF_DYNA CORRESPONDANTE --> ',1,
     &                INTFB)
          CALL UTIMPK('L',' INTERF_DYNA DONNEE --> ',1,INTF)
          CALL UTFINM
        ELSE
          INTF=INTFB
        ENDIF
      ENDIF
C
C
C----------------RECUPERATION DONNEES GRANDEUR SOUS-JACENTE-------------
C
      CALL DISMOI('F','NB_CMP_MAX',INTF,'INTERF_DYNA',NBCMP,
     &            K8BID,IRET)
      CALL DISMOI('F','NB_EC',INTF,'INTERF_DYNA',NBEC,
     &            K8BID,IRET)
C
C
C
C----------------RECUPERATION EVENTUELLE DU NUMERO INTERFACE------------
C
      IF(NUMINT.LT.1) THEN
        IF(NOMINT.EQ.'          ') THEN
          CALL UTDEBM('F',PGC,
     &'PROBLEME ARGUMENTS DE DEFINITION INTERFACE')
          CALL UTIMPK('L',' NOM INTERFACE DONNE',1,NOMINT)
          CALL UTIMPI('L',' NUMERO INTERFACE DONNE',1,NUMINT)
          CALL UTFINM
        ELSE
          CALL JENONU(JEXNOM(INTF//'      .INTD.NOMS',NOMINT),NUMINT)
        ENDIF
      ENDIF
C
C----------RECUPERATION DU NOMBRE DE NOEUD DE L' INTERFACES-------------
C
      NOEINT=INTF//'      .INTD.LINO'
C
        CALL JELIRA(JEXNUM(NOEINT,NUMINT),'LONMAX',NBNOE,K1BID)
        CALL JEVEUO(JEXNUM(NOEINT,NUMINT),'L',LLNOE)
C
C-------------RECUPERATION DU DESCRIPTEUR DES DEFORMEES-----------------
C
C
      CALL JEVEUO(INTF//'      .INTD.DEFO','L',LLDES)
      CALL JELIRA(INTF//'      .INTD.DEFO','LONMAX',NBNOT,K1BID)
      NBNOT = NBNOT/(2+NBEC)
C
C-----------RECUPERATION DES NUMERO ORDRE DEFORMEES --------------------
C
C
C RECUPERATION NUMERO ORDRE  DEFORMEES
C
      DO 20 I=1,NBNOE
        INOE=ZI(LLNOE+I-1)
        IORDEF=ZI(LLDES+NBNOT+INOE-1)+NBMOD
        CALL ISDECO(ZI(LLDES+2*NBNOT+(INOE-1)*NBEC+1-1),IDEC,NBCMP)
C
        DO 30 J=1,NBCMP
          IF(IDEC(J).GT.0) THEN
            NBDIF=NBDIF-1
            IF(NBDIF.GE.0) IVCORD(NBDEF-NBDIF)=IORDEF
            IORDEF=IORDEF+1
          ENDIF
 30     CONTINUE
C
 20   CONTINUE
C
      NBDIF=-NBDIF
C
      CALL JEDEMA()
      END
