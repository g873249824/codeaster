      SUBROUTINE DFLLSV(LISIFR,LISEVR,LISEVK,LISESU,ISAUVE,
     &                  EVEN  ,ACTION,SUBMET,SUBAUT,PASMIN,
     &                  NBRPAS,NIVEAU,PCPLUS,CMMAXI,PRCOLL,
     &                  DUCOLL,PENMAX,CRICMP,VALERE,NOCHAM,
     &                  NOCMP )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 27/02/2012   AUTEUR GREFFET N.GREFFET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
C
      IMPLICIT NONE
      CHARACTER*24 LISIFR,LISEVR,LISEVK,LISESU    
      INTEGER      ISAUVE
      REAL*8       PASMIN,PCPLUS,PENMAX
      CHARACTER*16 EVEN,ACTION
      CHARACTER*16 SUBMET,SUBAUT
      INTEGER      NBRPAS,NIVEAU
      REAL*8       VALERE
      CHARACTER*16 NOCHAM,NOCMP,CRICMP
      REAL*8       CMMAXI,PRCOLL,DUCOLL
C
C ----------------------------------------------------------------------
C
C OPERATEUR DEFI_LIST_INST
C
C ECRITURE DES INFORMATIONS DANS LA SD LIST
C
C ----------------------------------------------------------------------
C
C
C IN  LISIFR : NOM DE L'OBJET INFOS SUR LA LISTE
C IN  LISEVR : NOM DE L'OBJET INFOS ECHEC - REELS
C IN  LISEVK : NOM DE L'OBJET INFOS ECHEC - CHAINES
C IN  LISESU : NOM DE L'OBJET INFOS ECHEC - OPTIONS DECOUPE
C IN  ISAUVE : OCCURRENCE POUR LA SAUVEGARDE
C IN  EVEN   : NOM DE L'EVENEMENT
C IN  ACTION : NOM DE L'ACTION
C IN  SUBMET : TYPE DE SUBDIVISION
C IN  SUBAUT : TYPE DE SUBDIVISION AUTOMATIQUE
C IN  PASMIN : VALEUR DE SUBD_PAS_MINI
C IN  NBRPAS : VALEUR DE SUBD_PAS
C IN  NIVEAU : VALEUR DE SUBD_NIVEAU
C IN  PCPLUS : VALEUR DE PCENT_ITER_PLUS
C IN  PENMAX : VALEUR DE PENE_MAXI
C IN  CRICMP : VALEUR DE CRIT_COMP
C IN  VALERE : VALEUR DE VALE_REF
C IN  NOCHAM : VALEUR DE NOM_CHAM
C IN  NOCMP  : VALEUR DE NOM_CMP
C IN  CMMAXI : VALEUR DE COEF_MULT_MAXI
C IN  PRCOLL : VALEUR DE PREC_COLLISION
C IN  DUCOLL : VALEUR DE DUREE_COLLISION
C
C -------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C ---------------- FIN DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER      DFLLVD,LEEVR,LEEVK,LESUR   
      INTEGER      JLINR,JEEVR,JEEVK,JESUR
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- TAILLE DES VECTEURS
C 
      LEEVR  = DFLLVD('LEEVR')
      LEEVK  = DFLLVD('LEEVK')
      LESUR  = DFLLVD('LESUR')      
C
C --- ACCES SD
C    
      CALL JEVEUO(LISIFR,'E',JLINR )
      CALL JEVEUO(LISEVR,'E',JEEVR )
      CALL JEVEUO(LISEVK,'E',JEEVK )
      CALL JEVEUO(LISESU,'E',JESUR )
C
C --- ALARME SI LE RE-DECOUPAGE EN CAS D'ERREUR EST DEBRAYE
C
      IF (EVEN.EQ.'DIVE_ERRE') THEN
        IF (ACTION.EQ.'ARRET') CALL U2MESS('I','DISCRETISATION_9')    
      ENDIF
C
C --- AU MOINS UNE ACTION DE SOUS-DECOUPAGE A ETE DEFINIE
C
      IF (ACTION.EQ.'DECOUPE') THEN
        ZR(JLINR-1+7) = 1.D0
      ENDIF
C
C --- TYPE D'EVENEMENT
C
      IF (EVEN.EQ.'DIVE_ERRE') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+1) = 0.D0
      ELSEIF (EVEN.EQ.'DIVE_ITER') THEN    
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+1) = 1.D0
      ELSEIF (EVEN.EQ.'DELTA_GRANDEUR') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+1) = 2.D0
      ELSEIF (EVEN.EQ.'COMP_NCVG') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+1) = 3.D0
      ELSEIF (EVEN.EQ.'COLLISION') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+1) = 4.D0
      ELSEIF (EVEN.EQ.'INTERPENETRATION') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+1) = 5.D0               
      ELSEIF (EVEN.EQ.'DIVE_RESI') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+1) = 6.D0               
      ELSEIF (EVEN.EQ.'INSTABILITE') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+1) = 7.D0               
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF 
C
C --- ACTION SI EVENEMENT DECLENCHE
C         
      IF (ACTION.EQ.'ARRET') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+2) = 0.D0
      ELSEIF (ACTION.EQ.'DECOUPE') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+2) = 1.D0    
      ELSEIF (ACTION.EQ.'ITER_SUPPL') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+2) = 2.D0
      ELSEIF (ACTION.EQ.'AUTRE_PILOTAGE') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+2) = 3.D0
      ELSEIF (ACTION.EQ.'ADAPT_COEF_PENA') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+2) = 4.D0
      ELSEIF (ACTION.EQ.'CONTINUE') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+2) = 5.D0
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF
C
C --- EVENEMENT 'DELTA_GRANDEUR' - PARAMETRES
C
      IF (EVEN.EQ.'DELTA_GRANDEUR') THEN
        ZR  (JEEVR-1+LEEVR*(ISAUVE-1)+5) = VALERE
        ZK16(JEEVK-1+LEEVK*(ISAUVE-1)+1) = NOCHAM
        ZK16(JEEVK-1+LEEVK*(ISAUVE-1)+2) = NOCMP
        ZK16(JEEVK-1+LEEVK*(ISAUVE-1)+3) = CRICMP
      ENDIF
C
C --- EVENEMENT 'INTERPENETRATION' - PARAMETRES
C
      IF (EVEN.EQ.'INTERPENETRATION') THEN
        ZR(JEEVR-1+LEEVR*(ISAUVE-1)+6) = PENMAX
      ENDIF
C
C --- ACTION 'DECOUPE' - PARAMETRES
C
      IF (SUBMET.EQ.'MANUEL') THEN
        ZR(JESUR-1+LESUR*(ISAUVE-1)+1) = 1.D0
        ZR(JESUR-1+LESUR*(ISAUVE-1)+2) = NBRPAS
        ZR(JESUR-1+LESUR*(ISAUVE-1)+3) = PASMIN
        ZR(JESUR-1+LESUR*(ISAUVE-1)+4) = NIVEAU
      ELSEIF (SUBMET.EQ.'AUTO') THEN
        ZR(JESUR-1+LESUR*(ISAUVE-1)+1) = 2.D0
        ZR(JESUR-1+LESUR*(ISAUVE-1)+3) = PASMIN
        ZR(JESUR-1+LESUR*(ISAUVE-1)+5) = PRCOLL
        ZR(JESUR-1+LESUR*(ISAUVE-1)+6) = DUCOLL
        IF (SUBAUT.EQ.'COLLISION') THEN
          ZR(JESUR-1+LESUR*(ISAUVE-1)+10) = 1.D0
        ELSEIF (SUBAUT.EQ.'EXTRAPOLE') THEN
          ZR(JESUR-1+LESUR*(ISAUVE-1)+10) = 2.D0
        ELSE
          CALL ASSERT(.FALSE.)
        ENDIF
      ENDIF
C
C --- ACTION 'ITER_SUPPL' - PARAMETRES
C
      IF (ACTION.EQ.'ITER_SUPPL') THEN
        ZR(JESUR-1+LESUR*(ISAUVE-1)+7) = PCPLUS
      ENDIF
C
C --- ACTION 'ADAPT_COEF_PENA' - PARAMETRES
C
      IF (ACTION.EQ.'ADAPT_COEF_PENA') THEN
        ZR(JESUR-1+LESUR*(ISAUVE-1)+8) = CMMAXI
      ENDIF   
C
      CALL JEDEMA()      
C
      END
