      SUBROUTINE OP0010()
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/04/2013   AUTEUR JAUBERT A.JAUBERT 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MASSIN P.MASSIN
C TOLE CRP_20
C
      IMPLICIT NONE
C
C ----------------------------------------------------------------------
C
C OPERATEUR PROPA_XFEM
C
C CALCUL DE LA FISSURE APRES PROPAGATION AU PAS DE TEMPS SUIVANT
C
C ----------------------------------------------------------------------
C
C
C
C
      INCLUDE 'jeveux.h'
      INTEGER        IFM,NIV,IBID,NDIM,IRET,
     &               JCARAF,CLSM,JCONX1,
     &               JCONX2,NBMA,I,J
      INTEGER        IADRMA
      REAL*8         LCMIN,DELTAT
      CHARACTER*8    K8BID,NOMA,NOMO,FISS,FISPRE,METHOD,FISINI,NCRACK
      CHARACTER*16   K16BID,TYPDIS
      CHARACTER*19   CNSVT,CNSVN,GRLT,GRLN,CNSLT,CNSLN,CNSEN,
     &               CNSENR,NOESOM,ISOZRO,NORESI,CNXINV,CNSBL,CNSDIS,
     &               CNSLJ,VPOINT,DELTA
      CHARACTER*24   LISMAE,LISNOE,VCN,GRLR,VCNT,GRLRT
      CHARACTER*32   JEXATR
      REAL*8         MESERR(3),R8B
      CHARACTER*8    TEST,MSGOUT(2)
      CHARACTER*1    K1BID
C     MESSAGES

C     CRACK ADVANCEMENT
      REAL*8         DAMAX,DTTOT,VMAX,RAYON,DAFISS,BMAX
      CHARACTER*24   VVIT,VBETA
      CHARACTER*19   CNSBET,LISTP
      INTEGER        CRACK,JBETA,JVIT,JFISS,NBVAL,NFISS
      INTEGER        NUMFIS

C     LEVELSET AUXILIARY MESH
      CHARACTER*8    UNOMO,UNOMA,GRIAUX
      INTEGER        JLISNO
      CHARACTER*19   UCNSLT,UCNSLN,UGRLT,UGRLN,UCNXIN,DISFR,NODTOR,
     &               ELETOR,LIGGRD
      LOGICAL        GRILLE,LOCDOM

C     DUMMY MODEL
      CHARACTER*8    DNOMA,DNOMO
      CHARACTER*19   DCNSLT,DCNSLN,DGRLT,DGRLN,DCNXIN

C     FIELD PROJECTION
      REAL*8         RADTOR
      CHARACTER*16   CORRES
      CHARACTER*19   NDOMP,EDOMG

C     TEST_MAIL
      REAL*8         DIST,DISTOL

C     DOMAINE LOCALISATION
      INTEGER        NBNO,JGLTP,JGLNP,JGLT,JGLN,JGLTL,JGLNL
      CHARACTER*19   GRLTC,GRLNC
      LOGICAL        LDPRE
      REAL*8         RADIMP,RADLIM
      INTEGER        IARG

C     FRONT SUR LA GRILLE 
      LOGICAL       GOINOP
      CHARACTER*19  CNSEG,CNSENG,CNSLJG
      CHARACTER*24  LISMAG,LISNOG
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFMAJ()
      CALL INFDBG('XFEM',IFM,NIV)
C
C --- NOM DU CONCEPT FISSURE
C
      CALL GETRES(FISS,K16BID,K16BID)

C
C --- RETRIEVE THE NAME OF THE CRACK THAT MUST BE ELABORATED
C
      CALL GETVID(' ','FISS_PROP',1,IARG,1,FISPRE,IBID)

C     VERIFICATION QUE L'ON TRAITE UNE FISSURE ET NON UNE INTERFACE
      CALL DISMOI('F','TYPE_DISCONTINUITE',FISPRE,'FISS_XFEM',
     &                                                 IBID,TYPDIS,IRET)
      IF (TYPDIS.NE.'FISSURE') CALL U2MESS('F','XFEM2_1')

C
C --- NOM DU MODELE
C
      CALL GETVID(' ','MODELE',1,IARG,1,NOMO,IBID)

C     CHECK THAT A CRACK HAS BEEN DEFINED ON THE MODEL
C     AND RETRIEVE THE NUMBER OF CRACKS IN THE MODEL
      CALL DISMOI('F','NB_FISS_XFEM',NOMO,'MODELE',NFISS,K8BID,IRET)
      IF (NFISS.EQ.0) CALL U2MESK('F','XFEM2_93',1,NOMO)

C     RETRIEVE THE NAME OF THE DATA STRUCTURE CONTAINING EACH CRACK
      CALL JEVEUO(NOMO//'.FISS','L',JFISS)

      NUMFIS=0
C     SEARCH FOR THE CRACK THAT MUST BE PROPAGATED
      DO 1 CRACK=1,NFISS

         NCRACK = ZK8(JFISS-1+CRACK)
         IF (NCRACK.EQ.FISPRE) NUMFIS=CRACK

1     CONTINUE

      IF (NUMFIS.EQ.0) THEN
         MSGOUT(1) = FISPRE
         MSGOUT(2) = NOMO
         CALL U2MESK('F','XFEM2_89',2,MSGOUT)
      ENDIF
C
C --- RETRIEVE THE NAME OF THE MODEL THAT SHOULD BE USED AS AN AUXILIARY
C     GRID FOR THE EVALUATION OF THE LEVELSETS.
C
      CALL JEEXIN(FISPRE//'.GRI.MODELE',IBID)
      IF (IBID.EQ.0) THEN
C        NO AUXILIARY GRID USED
         GRIAUX=' '
         GRILLE=.FALSE.
      ELSE
C        AUXILIARY GRID USED
         CALL JEVEUO(FISPRE//'.GRI.MODELE','L',IBID)
         GRIAUX=ZK8(IBID-1+1)
         GRILLE=.TRUE.
      ENDIF

C     WRITE A WARNING IF THE CRACK HAS BEEN DEFINED GIVING DIRECTLY THE
C     TWO LEVEL SET FIELDS
      CALL JEEXIN(FISPRE//'.CHAMPS.LVS',IBID)
      IF ((IBID.GT.0).AND.(.NOT.GRILLE)) THEN
         CALL JEVEUO(FISPRE//'.CHAMPS.LVS','L',IBID)
         IF (ZL(IBID)) CALL U2MESS('A','XFEM_69')
      ENDIF

C     CHECK IF THE LOCALIZATION OF THE DOMAIN SHOULD BE ACTIVATED
      LOCDOM=.FALSE.
      CALL GETVTX(' ','ZONE_MAJ',1,IARG,1,K8BID,IBID)
      RADIMP=0.D0
      IF (K8BID(1:4).EQ.'TORE') THEN
C        OK, THE LOCALIZATION MUST BE ACTIVATED
         LOCDOM = .TRUE.
C        CHECK IF THE USER HAS SPECIFIED THE RADIUS OF THE TORUS
         CALL GETVR8(' ','RAYON_TORE',1,IARG,1,RADIMP,IBID)
         IF (IBID.EQ.0) THEN
C           THE USER HAS NOT SPECIFIED THE RADIUS OF THE TORUS
            RADIMP = -1.D0
         ELSE
            RADIMP = RADIMP**2
         ENDIF
      ELSE
C        THE WHOLE GRID MUST BE USED
         LOCDOM = .FALSE.
      ENDIF

C
C --- NOM DU MAILLAGE ATTACHE AU MODELE
C
      CALL JEVEUO(NOMO(1:8)//'.MODELE    .LGRF','L',IADRMA)
      NOMA  = ZK8(IADRMA)
C
C --- DIMENSION DU PROBLEME
C
      CALL DISMOI('F','DIM_GEOM',NOMA,'MAILLAGE',NDIM,K8BID,IRET)
      IF ((NDIM.LT.2).OR.(NDIM.GT.3)) THEN
        CALL U2MESS('F','XFEM_18')
      ENDIF

      CALL DISMOI('F','NB_MA_MAILLA',NOMA,'MAILLAGE',NBMA,K8BID,IBID)
      CALL JEVEUO(NOMA(1:8)//'.CONNEX','L',JCONX1)
      CALL JEVEUO(JEXATR(NOMA(1:8)//'.CONNEX','LONCUM'),'L',JCONX2)
C
C --- CONNECTIVITE INVERSEE
C

      CNXINV = '&&XPRREO.CNCINV'
      CALL CNCINV(NOMA,IBID,0,'V',CNXINV)

C     RETRIEVE THE MAXIMUM ADVANCEMENT OF THE CRACK FRONT
      CALL GETVR8(' ','DA_MAX',1,IARG,1,DAMAX,IBID)

C     RETRIEVE THE VALUE FOR THE "TEST_MAIL" PARAMETER
      CALL GETVTX(' ','TEST_MAIL',1,IARG,1,TEST,IBID)

C     ISSUE AN ALARM FOR THE USER
      IF (TEST(1:3).EQ.'OUI') THEN
         IF (NDIM.EQ.2) CALL U2MESS('F','XFEM2_87')
      ENDIF

C     RECUPERATION DES VITESSES DE PROPAGATION, DES ANGLES
C     DE BIFURCATION ET DE L'AVANCEE MAXIMALE DE LA FISSURE
C     A PROPAGER

      VVIT  = '&&OP0010.VVIT'
      VBETA = '&&OP0010.VBETA'

      CALL GETVR8(' ','VITESSE',0,IARG,0,R8B,NBVAL)

      CALL WKVECT(VBETA,'V V R8',-NBVAL,JBETA)
      CALL WKVECT(VVIT,'V V R8',-NBVAL,JVIT)

      CALL GETVR8(' ','ANGLE',0,IARG,-NBVAL,ZR(JBETA),IBID)
      CALL GETVR8(' ','VITESSE',0,IARG,-NBVAL,ZR(JVIT),IBID)

      CALL GETVR8(' ','DA_FISS',0,IARG,1,DAFISS,IBID)

C     RECUPERATION DU NOMBRE DE CYCLES
      CALL GETVR8(' ','NB_CYCLES',0,IARG,1,DTTOT,IBID)
C
C --- RECUPERATION DES LEVEL SETS ET GRADIENTS
C
      CNSLT = '&&OP0010.CNSLT'
      CNSLN = '&&OP0010.CNSLN'
      GRLT  = '&&OP0010.GRLT'
      GRLN  = '&&OP0010.GRLN'
      CALL CNOCNS(FISPRE//'.LTNO','V',CNSLT)
      CALL CNOCNS(FISPRE//'.LNNO','V',CNSLN)
      CALL CNOCNS(FISPRE//'.GRLTNO','V',GRLT)
      CALL CNOCNS(FISPRE//'.GRLNNO','V',GRLN)
C
C --- DUPLICATION DES GROUP_MA_ENRI ET GROUP_NO_ENRI
C
      LISMAE = FISS//'.GROUP_MA_ENRI'
      LISNOE = FISS//'.GROUP_NO_ENRI'
      CALL JEDUPO(FISPRE//'.GROUP_MA_ENRI','G',LISMAE,.FALSE.)
      CALL JEDUPO(FISPRE//'.GROUP_NO_ENRI','G',LISNOE,.FALSE.)
C
C --- DUPLICATION DE INFO ET MODELE (LA NOUVELLE FISSURE RESTE
C     ATTACHE AU MODELE SAIN INITIAL
C
      CALL JEDUPO(FISPRE//'.INFO'  ,'G',FISS//'.INFO'  ,.FALSE.)
      CALL JEDUPO(FISPRE//'.MODELE','G',FISS//'.MODELE',.FALSE.)
C
C --- RECUPERATION DES CARACTERISTIQUES DU FOND DE FISSURE
C
      CALL JEDUPO(FISPRE//'.CARAFOND','G',FISS//'.CARAFOND',.FALSE.)
      CALL JEVEUO(FISS//'.CARAFOND','L',JCARAF)

C   RECUPERATION DE LA METHODE DE REINITIALISATION A EMPLOYER
      CALL GETVTX(' ','METHODE',1,IARG,1,METHOD,IBID)

C   RETRIEVE THE RADIUS THAT MUST BE USED TO ASSESS THE LOCAL RESIDUAL
      CALL GETVR8(' ','RAYON',1,IARG,1,RAYON,IBID)

C     SET THE DEFAULT VALUES FOR THE DOMAIN RESTRICTION FLAG
      LDPRE = .FALSE.

C-----------------------------------------------------------------------
C     RETRIEVE THE AUXILIARY GRID FOR THE LEVELSETS, IF THIS IS THE CASE
C-----------------------------------------------------------------------
      IF (GRILLE) THEN

         UNOMO = GRIAUX

C        RETRIEVE THE NAME OF THE MAILLAGE
         CALL JEVEUO(UNOMO//'.MODELE    .LGRF','L',IADRMA)
         UNOMA  = ZK8(IADRMA)

C        RETRIEVE THE LEVELSETS AND THEIR GRADIENTS ON THE AUXILIARY
C        GRID
         UCNSLT = '&&OP0010.UCNSLT'
         UCNSLN = '&&OP0010.UCNSLN'
         UGRLT  = '&&OP0010.UGRLT'
         UGRLN  = '&&OP0010.UGRLN'
         CALL CNOCNS(FISPRE//'.GRI.LTNO','V',UCNSLT)
         CALL CNOCNS(FISPRE//'.GRI.LNNO','V',UCNSLN)
         CALL CNOCNS(FISPRE//'.GRI.GRLTNO','V',UGRLT)
         CALL CNOCNS(FISPRE//'.GRI.GRLNNO','V',UGRLN)

C        CREATE THE INVERSE CONNECTIVITY
         UCNXIN = '&&OP0010.UCNCINV'
         CALL CNCINV(UNOMA,IBID,0,'V',UCNXIN)

C        CREATE A TEMPORARY JEVEUO OBJECT TO STORE THE "CONNECTION"
C        BETWEEN THE PHYSICAL AND AUXILIARY MESH USED IN THE PROJECTION
         CORRES = '&&OP0010.CORRES'

C        WRITE SOME INFORMATIONS ABOUT THE MODELS USED IN THE
C        PROPAGATION
         IF (NIV.GE.0) THEN
            WRITE(IFM,*)'UNE GRILLE AUXILIAIRE EST UTILISEE POUR LA'//
     &                  ' PROPAGATION:'
            WRITE(IFM,*)'   MODELE PHYSIQUE  : ',NOMO
            WRITE(IFM,*)'   MODELE GRILLE AUXILIAIRE: ',UNOMO
         ENDIF

      ELSE

C        NO PROJECTION REQUIRED
         CORRES = ' '

C        WRITE SOME INFORMATIONS ABOUT THE MODELS USED IN THE
C        PROPAGATION
         IF (NIV.GE.0) THEN
            WRITE(IFM,*)'LA PROPAGATION EST CALCULEE SUR LE MODELE '//
     &                  'DE LA STRUCTURE.'
            WRITE(IFM,*)'AUCUNE GRILLE AUXILIAIRE N''EST UTILISEE.'
            WRITE(IFM,*)'   MODELE STRUCTURE: ',NOMO
         ENDIF

      ENDIF

C-----------------------------------------------------------------------
C     CHECK FOR THE COHERENCE OF THE USE OF THE AUXILIARY GRID AND
C     DOMAIN LOCALISATION BETWEEN THE PREVIOUS AND THE ACTUAL STEP
C-----------------------------------------------------------------------

C     CHECK THE CONDITION ON THE VALUE OF DAMAX IF THE DOMAIN
C     LOCALISATION HAS BEEN REQUESTED (ONLY FOR 3D MESHES)
      IF(LOCDOM.AND.(NDIM.EQ.3))THEN
         CALL JEVEUO(VBETA,'L',JBETA)
         CALL JELIRA(VBETA,'LONMAX',J,K1BID)
         BMAX = 0.D0
         DO 500 I=1,J
            IF (ABS(ZR(JBETA-1+I)).GT.BMAX) BMAX=ABS(ZR(JBETA-1+I))
500      CONTINUE
C        THE CHECK IS MADE ONLY IF THE ANGLE IS GREATER THAN 3 DEGREES
C        AND LOWER OF 90 DEGREES
         IF ((BMAX.LT.1.57D0).AND.(BMAX.GT.5.2D-2)) THEN
            IF (DAFISS.LT.(RAYON/COS(BMAX))) THEN
               MESERR(1)=DAMAX
               MESERR(2)=DAFISS
               MESERR(3)=RAYON/COS(BMAX)*DAMAX/DAFISS
               CALL U2MESR('A','XFEM2_94',3,MESERR)
            ENDIF
         ENDIF
      ENDIF

      CALL JEEXIN(FISPRE//'.PRO.RAYON_TORE',IBID)
      IF (IBID.NE.0) THEN
         LDPRE=.TRUE.
      ELSE
         LDPRE=.FALSE.
      ENDIF

C     IF THE DOMAIN LOCALISATION HAS BEEN USED PREVIOUSLY, IT MUST BE
C     USED ALSO IN THIS STEP
      IF (LDPRE.AND.(.NOT.LOCDOM)) CALL U2MESS('F','XFEM2_97')

C     IF AN AUXILIARY GRID IS USED IN THIS STEP, STORE ITS NAME FOR THE
C     NEW CRACK
      IF (GRILLE) THEN
         CALL WKVECT(FISS//'.GRI.MODELE','G V K8',1,IBID)
         ZK8(IBID) = GRIAUX
      ENDIF

C-----------------------------------------------------------------------
C     SET THE CORRECT VALUE OF THE WORKING MODEL IN ORDER TO ASSESS
C     CORRECTLY THE CASE IN WHICH THE USER WANTS TO USE ONLY ONE MODEL
C     AND THE CASE IN WHICH HE OR SHE WANTS TO USE TWO DIFFERENT MODELS.
C     ALL THE FOLLOWING SUBROUTINES REFER TO A DUMMY MODEL AND ALL THE
C     VARIABLES REFERRED TO THIS MODEL BEGIN WITH THE LETTER "D".
C-----------------------------------------------------------------------

      IF (GRILLE) THEN

         DNOMA  = UNOMA
         DNOMO  = UNOMO
         DCNSLT = UCNSLT
         DCNSLN = UCNSLN
         DGRLT  = UGRLT
         DGRLN  = UGRLN
         DCNXIN = UCNXIN

      ELSE

         DNOMA  = NOMA
         DNOMO  = NOMO
         DCNSLT = CNSLT
         DCNSLN = CNSLN
         DGRLT  = GRLT
         DGRLN  = GRLN
         DCNXIN = CNXINV

      ENDIF

C-----------------------------------------------------------------------
C     INITIALISE THE SIMPLEXE OR THE UPWIND SCHEME
C-----------------------------------------------------------------------

      NOESOM = '&&OP0010.NOESOM'
      NORESI = '&&OP0010.NORESI'
      IF(.NOT.GRILLE) THEN
         VCN = '&&OP0010.VCN'
         GRLR = '&&OP0010.GRLR'
      ELSE
         VCN = UNOMA//'.GRLI'
         GRLR = UNOMA//'.GRLR'
      ENDIF

      IF (GRILLE) THEN
C        RETREIVE THE LENGTH OF THE SHORTEST EDGE IN THE GRID FROM THE
C        SD_GRILLE
         CALL JEVEUO(UNOMA//'.GRLR','L',IBID)
         LCMIN=ZR(IBID)
      ENDIF

C     FISPRE AND FISS ARE NOT USED BY THE UPWIND SCHEMA. HOWEVER THEY
C     ARE PASSED TO THE SUBROUTINE IN ORDER TO USE THE SAME SUBROUTINE
C     FOR THE SIMPLEXE AND UPWIND SCHEMA.
      CALL XPRINI(DNOMO,DNOMA,DCNXIN,GRILLE,FISPRE,FISS,DCNSLN,DCNSLT,
     &            DGRLT,NOESOM,NORESI,VCN,GRLR,LCMIN)

C-----------------------------------------------------------------------
C     CALCUL DES POINTS DU FOND DE FISSURE SUR LA GRILLE
C     DANS LE CADRE DE L'UTILISATION D'UN FOND VIRTUEL
C-----------------------------------------------------------------------

      GOINOP=.FALSE.
      IF ((GRILLE).AND.(NDIM.EQ.3).AND.(METHOD.NE.'GEOMETRI')) THEN
        LISMAG = '&&OP0010.LISTE_MA_ENRICH'
        LISNOG = '&&OP0010.LISTE_NO_ENRICH'
        GOINOP=.TRUE.
        CALL XLENRI(DNOMA  ,FISPRE  ,GOINOP,LISMAG,LISNOG)

        CNSLJG = '&&OP0010.CNSLJG'
        CNSEG='&&OP0010.CNSEG'
        CNSENG='&&OP0010.CNSENG'
        CALL XENRCH(DNOMO,DNOMA,DCNSLT,DCNSLN,CNSLJG,CNSEG,CNSENG,
     &              NDIM,FISPRE,GOINOP,LISMAG,LISNOG)

         CALL JEDETR(CNSLJG)
         CALL JEDETR(CNSEG)
         CALL JEDETR(CNSENG)
      ENDIF

C-----------------------------------------------------------------------
C     CALCUL DES CHAM_NO_S DES VITESSES DE PROPAGATION
C-----------------------------------------------------------------------

         IF (LOCDOM) THEN
                IF (RADIMP.LE.0.D0) THEN
                   RADTOR=(RAYON+DAMAX)**2
                ENDIF
         ENDIF

      IF (NIV.GE.0) THEN
         WRITE(IFM,*)
         WRITE(IFM,*)'OP0010-1) CALCUL DU CHAMP DE VITESSE AUX NOEUDS'
         WRITE(IFM,901)
      ENDIF

      CNSVT='&&OP0010.CNSVT'
      CNSVN='&&OP0010.CNSVN'
      VPOINT='&&OP0010.VPOINT'
      CNSBET='&&OP0010.CNSBET'
      LISTP='&&OP0010.LISTP'
      DISFR='&&OP0010.DISFR'
      CNSBL='&&OP0010.CNSBL'
      CNSDIS='&&OP0010.CNSDIS'
      DELTA='&&OP0010.DELTA'

      CALL XPRVIT(DNOMA,FISPRE,NDIM,VVIT,VBETA,LCMIN,CNSVT,CNSVN,VPOINT,
     &            CNSBL,CNSDIS,DISFR,CNSBET,LISTP,DAMAX,
     &            LOCDOM,RADIMP,RADTOR,DELTA,UCNSLT,UCNSLN)



C-----------------------------------------------------------------------
C     DOMAINS USED FOR THE RESTRICTION AND FOR THE PROJECTION
C-----------------------------------------------------------------------

      IF (NIV.GE.0) THEN
         WRITE(IFM,*)
         WRITE(IFM,*)'OP0010-2) DOMAINE DE CALCUL'
         WRITE(IFM,901)
      ENDIF

      IF (LOCDOM) THEN
         VCNT = '&&OP0010.VCNT'
         GRLRT = '&&OP0010.GRLRT'
      ELSE
         VCNT  = VCN
         GRLRT = GRLR
      ENDIF

C     DEFINE THE PROJECTION DOMAINS FOR THE PHYSICAL AND LEVEL SET
C     MESHES (IF THE AUXILIARY GRID IS USED)
      IF (GRILLE) THEN
         NDOMP = '&&OP0010.NDOMP'
         EDOMG = '&&OP0010.EDOMG'
         CALL XPRDOM(DNOMA,DCNXIN,DISFR,NOMA,CNXINV,FISPRE,
     &               DAMAX,NDOMP,EDOMG,RADTOR)
      ELSE
C        IF THE PROJECTION HAS NOT BEEN SELECTED, THE ESTIMATION OF THE
C        RADIUS OF THE TORUS DEFINING THE LOCAL DOMAIN TO BE USED FOR
C        THE LEVEL SET UPDATE CALCULATIONS MUST BE ESTIMATED HERE
         RADTOR = (RAYON+DAMAX)**2
      ENDIF

C     RETREIVE THE RADIUS OF THE TORUS TO BE IMPOSED
      IF (LOCDOM) THEN
C        THE USER HAS NOT SPECIFIED THE RADIUS. THE RADIUS USED IN
C        THE PREVIOUS PROPAGATION SHOULD BE RETREIVED, IF ANY
         IF ((RADIMP.LT.0.D0).AND.LDPRE) THEN
            CALL JEVEUO(FISPRE//'.PRO.RAYON_TORE','L',IBID)
            RADIMP = ZR(IBID)
         ENDIF
      ENDIF

C     DEFINE THE DOMAIN USED FOR THE LEVEL SET COMPUTATION (ONLY IF
C     THE LOCALISATION HAS BEEN SELECTED)
      NODTOR='&&OP0010.NODTOR'
      ELETOR='&&OP0010.ELETOR'
      LIGGRD='&&OP0010.LIGGRD'

      CALL XPRTOR(METHOD,DNOMO,DNOMA,DCNXIN,FISPRE,FISS,VCN,GRLR,DCNSLN,
     &            DGRLN,DCNSLT,DGRLT,LOCDOM,RADTOR,RADIMP,CNSDIS,DISFR,
     &            CNSBL,NODTOR,ELETOR,LIGGRD,VCNT,GRLRT)

C     CHECK IF THE RADIUS OF THE TORUS IS GREATER THAN THE CRITICAL
C     VALUE
      IF (LDPRE) THEN
         CALL JEVEUO(FISPRE//'.PRO.RAYON_TORE','L',IBID)

C        CALCULATE THE CRITICAL VALUE OF THE RADIUS
         RADLIM = DAMAX**2+ZR(IBID)**2

         IF(RADLIM.LT.RADTOR) THEN
            MESERR(1)=SQRT(RADTOR)
            MESERR(2)=SQRT(RADLIM)
            CALL U2MESR('A','XFEM2_88',2,MESERR)
         ENDIF

      ENDIF

      IF (LOCDOM.AND.(NIV.GE.0)) THEN
         WRITE(IFM,*)'   LE DOMAINE DE CALCUL EST LOCALISE AUTOUR DU'//
     &               ' FOND DE LA FISSURE:'
         WRITE(IFM,*)'      RAYON DU TORE DE LOCALISATION = ',
     &                SQRT(RADTOR)

         CALL JELIRA(NODTOR,'LONMAX',I,K1BID)
         WRITE(IFM,*)'      NOMBRE DE NOEUDS DU DOMAINE   = ',I
      ENDIF

      IF ((.NOT.LOCDOM).AND.(NIV.GE.0)) THEN
         IF(GRIAUX.EQ.' ') THEN
            WRITE(IFM,*)'   LE DOMAINE DE CALCUL COINCIDE AVEC LE'//
     &                  ' MODELE PHYSIQUE ',NOMO
         ELSE
            WRITE(IFM,*)'   LE DOMAINE DE CALCUL COINCIDE AVEC LE'//
     &                  ' MODELE GRILLE AUXILIAIRE ',GRIAUX
         ENDIF
      ENDIF

C     MAKE SOME CHECKS

C     THE VALUE OF RAYON MUST BE GREATER THAN THE SHORTEST EDGE IN THE
C     MESH IN ORDER TO BE ABLE TO CALCULATE THE LOCAL RESIDUAL
      IF (RAYON.LT.LCMIN) THEN
         MESERR(1)=RAYON
         MESERR(2)=LCMIN
         CALL U2MESR('F','XFEM2_64',2,MESERR)
      ENDIF

C     THE VALUE OF DAMAX SHOULD BE GREATER THAN THE SHORTEST EDGE IN THE
C     MESH. IF THIS IS NOT TRUE, THE MESH COULD FAIL TO CORRECTLY
C     REPRESENT THE LEVEL SETS. THIS IS NOT A FATAL ERROR AND A WARNING
C     MESSAGE IS ISSUED.
      IF (LCMIN.GT.DAMAX) THEN
         MESERR(1)=DAMAX
         MESERR(2)=LCMIN
         CALL U2MESR('A','XFEM2_63',2,MESERR)
      ENDIF

C-----------------------------------------------------------------------
C     AJUSTEMENT DE VT
C-----------------------------------------------------------------------

      IF (METHOD.NE.'GEOMETRI') THEN

         IF (NIV.GE.0) THEN
            WRITE(IFM,*)
            WRITE(IFM,*)'OP0010-3) AJUSTEMENT DU CHAMP DES VITESSES VN'
            WRITE(IFM,903)
         ENDIF

         CALL XPRAJU(DNOMA,FISS,DCNSLT,CNSVT,CNSVN,DTTOT,VMAX)

      ENDIF

C-----------------------------------------------------------------------
C     PROPAGATION DES LEVEL SETS
C-----------------------------------------------------------------------
      IF (NIV.GE.0) THEN
         WRITE(IFM,*)
         IF (METHOD.EQ.'GEOMETRI') THEN
            WRITE(IFM,*)'OP0010-3) MISE A JOUR DES LEVEL SETS'
         ELSE
            WRITE(IFM,*)'OP0010-4) PROPAGATION DES LEVEL SETS'
         ENDIF
         WRITE(IFM,904)

C        WRITE SOME INFORMATIONS
         WRITE(IFM,*)'   AVANCEE MAXIMALE DU FOND DE FISSURE    = '
     &               ,DAFISS
         WRITE(IFM,*)'   NOMBRE DE CYCLES DE FATIGUE            = '
     &               ,DTTOT
      ENDIF

      IF (METHOD.EQ.'GEOMETRI') THEN
         WRITE(IFM,*)'   '
         WRITE(IFM,*)'   UTILISATION DE LA METHODE GEOMETRIQUE.'
         CALL XPRGEO(DNOMA,DCNSLN,DCNSLT,DGRLN,DGRLT,VPOINT,CNSBL,DTTOT,
     &               NODTOR,LIGGRD,CNSBET,LISTP)
         GOTO 1000
      ENDIF

      CALL XPRLS(DNOMA,DCNSLN,DCNSLT,DGRLN,DGRLT,CNSVN,CNSVT,
     &           CNSBL,DTTOT,NODTOR,ELETOR,LIGGRD,DELTA)

      CALL JEDETR(CNSVT)
      CALL JEDETR(CNSVN)
      CALL JEDETR(CNSBL)

C-----------------------------------------------------------------------
C     REINITIALISATION DE LSN
C-----------------------------------------------------------------------

      IF (NIV.GE.0) THEN
         WRITE(IFM,*)
         WRITE(IFM,*)'OP0010-5) REINITIALISATION DE LSN'
         WRITE(IFM,905)
      ENDIF

      DELTAT = LCMIN*0.45D0
      ISOZRO = '&&OP0010.ISOZRO'

      IF (METHOD.EQ.'SIMPLEXE') THEN
         CALL XPRREI(DNOMA,FISS,FISPRE,NOESOM,NORESI,DCNSLN,DCNSLT,
     &               DGRLN,DELTAT,LCMIN,'LN',ISOZRO,DCNXIN,NODTOR,
     &               ELETOR,LIGGRD)
      ENDIF

C "ELSE" AVOIDED IN ORDER TO LEAVE ROOM FOR A FUTURE METHOD
      IF (METHOD.EQ.'UPWIND') THEN
         CALL XPRUPW('REINITLN',DNOMA,FISPRE,VCNT,GRLRT,
     &               NOESOM,LCMIN,DCNSLN,DGRLN,DCNSLT,DGRLT,
     &               DELTAT,NORESI,ISOZRO,NODTOR,ELETOR,LIGGRD)
      ENDIF

C-----------------------------------------------------------------------
C     REORTHOGONALISATION DE LST
C-----------------------------------------------------------------------
      IF (NIV.GE.0) THEN
         WRITE(IFM,*)
         WRITE(IFM,*)'OP0010-6) REORTHOGONALISATION DE LST'
         WRITE(IFM,906)
      ENDIF

      IF (METHOD.EQ.'SIMPLEXE') THEN
      CALL XPRREO(DNOMA,FISS,NOESOM,NORESI,DCNSLN,DCNSLT,DGRLN,
     &            DGRLT,DELTAT,ISOZRO,DCNXIN,NODTOR,ELETOR,LIGGRD)
      ENDIF

C "ELSE" AVOIDED IN ORDER TO LEAVE ROOM FOR A FUTURE METHOD
      IF (METHOD.EQ.'UPWIND') THEN
         CALL XPRUPW('REORTHOG',DNOMA,FISPRE,VCNT,GRLRT,
     &                NOESOM,LCMIN,DCNSLN,DGRLN,DCNSLT,DGRLT,
     &                DELTAT,NORESI,ISOZRO,NODTOR,ELETOR,LIGGRD)
      ENDIF

      CALL JEDETR(ISOZRO)

C-----------------------------------------------------------------------
C     REINITIALISATION DE  LST
C-----------------------------------------------------------------------

      IF (NIV.GE.0) THEN
         WRITE(IFM,*)
         WRITE(IFM,*)'OP0010-7) REINITIALISATION DE LST'
         WRITE(IFM,907)
      ENDIF

      IF (METHOD.EQ.'SIMPLEXE') THEN
         CALL XPRREI(DNOMA,FISS,FISPRE,NOESOM,NORESI,DCNSLN,DCNSLT,
     &               DGRLT,DELTAT,LCMIN,'LT',ISOZRO,DCNXIN,NODTOR,
     &               ELETOR,LIGGRD)
      ENDIF

C "ELSE" AVOIDED IN ORDER TO LEAVE ROOM FOR A FUTURE METHOD
      IF (METHOD.EQ.'UPWIND') THEN
          CALL XPRUPW('REINITLT',DNOMA,FISPRE,VCNT,GRLRT,
     &                NOESOM,LCMIN,DCNSLN,DGRLN,DCNSLT,DGRLT,
     &                DELTAT,NORESI,ISOZRO,NODTOR,ELETOR,LIGGRD)
      ENDIF

      CALL JEDETR(ISOZRO)
1000  CONTINUE
      CALL JEDETR(VVIT)
      CALL JEDETR(VBETA)
      CALL JEDETR(NOESOM)
      IF (METHOD(1:6).EQ.'UPWIND') THEN
         IF (.NOT.GRILLE) THEN
            CALL JEDETR(VCN)
            CALL JEDETR(GRLR)
         ENDIF
         IF (LOCDOM) THEN
            CALL JEDETR(VCNT)
            CALL JEDETR(GRLRT)
         ENDIF
      ENDIF
      CALL JEDETR(CNSDIS)
      CALL JEDETR(NODTOR)
      CALL JEDETR(ELETOR)
      CALL JEDETR(LIGGRD)
      CALL JEDETR(VPOINT)
      CALL JEDETR(CNSBET)
      CALL JEDETR(LISTP)

C-----------------------------------------------------------------------
C     THE NEW VALUES OF THE LEVELSETS FOR THE AUXILIARY MESH (TWO GRIDS
C     CASE ONLY) ARE STORED. AFTER THAT THESE VALUES MUST BE PROJECTED
C     TO THE PHYSICAL MESH FOR THE FRACTURE MECHANICS COMPUTATIONS.
C-----------------------------------------------------------------------

      IF (GRILLE) THEN

C       CREATE THE CHAMP_NO WITH THE NEW VALUES OF THE LEVELSETS AND
C       THEIR GRADIENTS. THE EXISTING CHAMP_NO ARE AUTOMATICALLY
C       DESTROYED BY THE SUBROUTINE "CNSCNO"
        CALL CNSCNO(DCNSLT,' ','OUI','G',FISS//'.GRI.LTNO','F',IBID)
        CALL CNSCNO(DCNSLN,' ','OUI','G',FISS//'.GRI.LNNO','F',IBID)
        CALL CNSCNO(DGRLT,' ','OUI','G',FISS//'.GRI.GRLTNO','F',IBID)
        CALL CNSCNO(DGRLN,' ','OUI','G',FISS//'.GRI.GRLNNO','F',IBID)

C       PROJECT THE LEVEL SETS
        CALL XPRPLS(DNOMO,DCNSLN,DCNSLT,NOMO,NOMA,
     &              CNSLN,CNSLT,GRLN,GRLT,CORRES,NDIM,NDOMP,EDOMG)

C       STORE THE LIST OF THE NODES OF THE STRUCTURAL MESH WHERE THE
C       PROJECTION HAS BEEN CARRIED OUT
        CALL DISMOI('F','NB_NO_MAILLA',NOMA,'MAILLAGE',J,K8BID,IRET)
        CALL WKVECT(FISS//'.PRO.NOEUD_PROJ','G V L',J,IRET)

        CALL JEVEUO(NDOMP,'L',IBID)
        CALL JELIRA(NDOMP,'LONMAX',J,K1BID)

        DO 1001 I=1,J
           ZL(IRET-1+ZI(IBID-1+I)) = .TRUE.
1001    CONTINUE

      ENDIF

      CALL JEDETR(DISFR)

C     NOW I CAN WORK ON THE PHYSICAL MESH

C-----------------------------------------------------------------------
C     REAJUSTEMENT DES LEVEL SETS TROP PROCHES DE 0
C-----------------------------------------------------------------------
      IF (NIV.GE.0) THEN
         WRITE(IFM,*)
         IF (METHOD.EQ.'GEOMETRI') THEN
            WRITE(IFM,*)'OP0010-4) ENRICHISSEMENT DE LA SD FISS_XFEM'
         ELSE
            WRITE(IFM,*)'OP0010-8) ENRICHISSEMENT DE LA SD FISS_XFEM'
         ENDIF
         WRITE(IFM,908)
      ENDIF

      CALL XAJULS(NOMA,NBMA,CNSLT,CNSLN,JCONX1,JCONX2,CLSM)

      IF (NIV.GE.0) THEN
         WRITE(IFM,*)'NOMBRE DE LEVEL SET REAJUSTEES APRES CONTROLE:',
     &               CLSM
      ENDIF

C-----------------------------------------------------------------------
C     EXTENSION DES LEVEL SETS AUX NOEUDS MILIEUX
C-----------------------------------------------------------------------

      CALL XPRMIL(NOMA,CNSLT,CNSLN)

C     IF THE DOMAINE LOCALISATION HAS BEEN USED ON THE PHYSICAL MODEL,
C     THE VALUES OF THE LEVEL SET GRADIENTS OUTSIDE THE DOMAINE MUST
C     BE COPIED FROM THE ORIGINAL VALUES (NOW THEY ARE EQUAL TO ZERO!)
      IF ((.NOT.GRILLE).AND.LOCDOM) THEN
C        RETRIEVE THE LIST OF THE NODES USED IN THE LAST LOCALIZATION
         CALL JEVEUO(FISS//'.PRO.NOEUD_TORE','E',JLISNO)
         CALL JELIRA(FISS//'.PRO.NOEUD_TORE','LONMAX',NBNO,K8BID)

         GRLTC  = '&&OP0010.GRLTC'
         GRLNC  = '&&OP0010.GRLNC'

         CALL CNOCNS(FISPRE//'.GRLTNO','V',GRLTC)
         CALL CNOCNS(FISPRE//'.GRLNNO','V',GRLNC)

         CALL JEVEUO(GRLTC//'.CNSV','L',JGLTP)
         CALL JEVEUO(GRLNC//'.CNSV','L',JGLNP)

         CALL JEVEUO(GRLT//'.CNSV','E',JGLT)
         CALL JEVEUO(GRLT//'.CNSL','E',JGLTL)
         CALL JEVEUO(GRLN//'.CNSV','E',JGLN)
         CALL JEVEUO(GRLN//'.CNSL','E',JGLNL)

         DO 2000 I=1,NBNO

            IF (.NOT.ZL(JLISNO-1+I)) THEN
               ZR(JGLT-1+NDIM*(I-1)+1) = ZR(JGLTP-1+NDIM*(I-1)+1)
               ZL(JGLTL-1+NDIM*(I-1)+1) = .TRUE.
               ZR(JGLT-1+NDIM*(I-1)+2) = ZR(JGLTP-1+NDIM*(I-1)+2)
               ZL(JGLTL-1+NDIM*(I-1)+2) = .TRUE.

               ZR(JGLN-1+NDIM*(I-1)+1) = ZR(JGLNP-1+NDIM*(I-1)+1)
               ZL(JGLNL-1+NDIM*(I-1)+1) = .TRUE.
               ZR(JGLN-1+NDIM*(I-1)+2) = ZR(JGLNP-1+NDIM*(I-1)+2)
               ZL(JGLNL-1+NDIM*(I-1)+2) = .TRUE.

               IF(NDIM.EQ.3) THEN
                  ZR(JGLT-1+NDIM*(I-1)+3) = ZR(JGLTP-1+NDIM*(I-1)+3)
                  ZL(JGLTL-1+NDIM*(I-1)+3) = .TRUE.

                  ZR(JGLN-1+NDIM*(I-1)+3) = ZR(JGLNP-1+NDIM*(I-1)+3)
                  ZL(JGLNL-1+NDIM*(I-1)+3) = .TRUE.
               ENDIF

            ENDIF

2000     CONTINUE

         CALL JEDETR(GRLTC)
         CALL JEDETR(GRLNC)

      ENDIF

      CALL CNSCNO(CNSLT,' ','NON','G',FISS//'.LTNO','F',IBID)
      CALL CNSCNO(CNSLN,' ','NON','G',FISS//'.LNNO','F',IBID)
      CALL CNSCNO(GRLT,' ','NON','G',FISS//'.GRLTNO','F',IBID)
      CALL CNSCNO(GRLN,' ','NON','G',FISS//'.GRLNNO','F',IBID)

C     IF THE DOMAIN LOCALISATION HAS NOT BEEN USED, THE BOOLEAN LIST
C     OF THE NODES IN THE TORE MUST BE DESTROYED
      IF (.NOT.LOCDOM) THEN
           CALL JEDETR(FISS//'.PRO.NOEUD_TORE')
      ENDIF

C     IF THE DOMAIN LOCALISATION HAS BEEN USED, THE RADIUS OF THE TORUS
C     USED IN THE LOCALISATION MUST BE STORED
      IF (LOCDOM) THEN
         CALL WKVECT(FISS//'.PRO.RAYON_TORE','G V R',1,IBID)
C        VALUE OF THE RADIUS USED IN THE ACTUAL PROPAGATION
         ZR(IBID) = RADTOR
      ENDIF

      CALL JEDETR(DELTA)
C----------------------------------------------------------------------+
C                 FIN DE LA PARTIE PROPAGATION :                       |
C                 ----------------------------                         |
C    LA SD FISS_XFEM EST ENRICHIE COMME DANS OP0041 : DEFI_FISS_XFEM   |
C   ( TOUTE MODIF. AFFECTANT OP0041 DOIT ETRE REPERCUTEE PLUS BAS,     |
C     EXCEPTE L'APPEL A SDCONX )                                       |
C----------------------------------------------------------------------+

C-----------------------------------------------------------------------
C     CALCUL DE L'ENRICHISSEMENT ET DES POINTS DU FOND DE FISSURE
C-----------------------------------------------------------------------

      CNSLJ = '&&OP0010.CNSLJ'
      CNSEN='&&OP0010.CNSEN'
      CNSENR='&&OP0010.CNSENR'
      GOINOP=.FALSE.
      CALL XENRCH(NOMO,NOMA,CNSLT,CNSLN,CNSLJ,CNSEN,CNSENR,
     &            NDIM,FISS,GOINOP,LISMAE,LISNOE)

      CALL CNSCNO(CNSENR,' ','NON','G',FISS//'.STNOR','F',IBID)
      CALL CNSCNO(CNSEN,' ','NON','G',FISS//'.STNO','F',IBID)

C-----------------------------------------------------------------------
C     CALCUL DE LA BASE LOCALE AU FOND DE FISSURE
C-----------------------------------------------------------------------

      CALL XBASLO(NOMA  ,FISS  ,GRLT  ,GRLN  , NDIM)

C-----------------------------------------------------------------------
C     ELABORATE THE OPTION "TEST_MAIL"
C-----------------------------------------------------------------------

C     CHECK THE MESH, IF THIS IS THE CASE
      IF (TEST(1:3).EQ.'OUI') THEN
C        RETREIVE THE DISTANCE BETWEEN THE PROPAGATED CRACK AND THE
C        INITIAL FRONT
         CALL GETVR8(' ','DISTANCE',1,IARG,1,DIST,IBID)
C        RETREIVE THE VALUE OF THE TOLERANCE
         CALL GETVR8(' ','TOLERANCE',1,IARG,1,DISTOL,IBID)
C        RETREIVE THE INITIAL CRACK
         CALL GETVID(' ','FISS_INITIALE',1,IARG,1,FISINI,IBID)
C        CHECK THE CRACK FRONT
         CALL XPRDIS(FISINI,FISS,DIST,DISTOL,LCMIN)

      ENDIF

C-----------------------------------------------------------------------
C     FIN
C-----------------------------------------------------------------------
      CALL JEDETR(CNXINV)

 901  FORMAT (10X,37('-'))
 903  FORMAT (10X,35('-'))
 904  FORMAT (10X,26('-'))
 905  FORMAT (10X,23('-'))
 906  FORMAT (10X,26('-'))
 907  FORMAT (10X,23('-'))
 908  FORMAT (10X,33('-'))

      CALL JEDEMA()
      END
