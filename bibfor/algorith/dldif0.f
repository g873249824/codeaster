      SUBROUTINE DLDIF0 ( RESULT,FORCE1,
     &                    NEQ, ISTOC, IARCHI, IFM,
     &                    LAMORT,
     &                    IMAT, MASSE, RIGID, AMORT,
     &                    DEP0, VIT0, ACC0,
     &                    DEPL1, VITE1, ACCE1, VITE2,
     &                    FEXTE, FAMOR, FLIAI,
     &                    NCHAR, NVECA, LIAD, LIFO, MODELE,
     &                    ENER, SOLVEU,
     &                    MATE, CARELE, CHARGE, INFOCH, FOMULT, NUMEDD,
     &                    DT, TEMPS,
     &                    TABWK0, TABWK1,
     &                    ARCHIV, NBTYAR, TYPEAR ,NUMREP)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 15/04/2013   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C TOLE CRP_21
C     ------------------------------------------------------------------
C     CALCUL MECANIQUE TRANSITOIRE PAR INTEGRATION DIRECTE
C     AVEC  METHODE EXPLICITE :  DIFFERENCES CENTREES
C     ------------------------------------------------------------------
C  IN  : NEQ       : NOMBRE D'EQUATIONS
C  IN  : ISTOC     : PILOTAGE DU STOCKAGE DES RESULTATS
C  IN  : IARCHI    : PILOTAGE DE L'ARCHIVAGE DES RESULTATS
C  IN  : LAMORT    : LOGIQUE INDIQUANT SI IL Y A AMORTISSEMENT
C  IN  : IMAT      : TABLEAU D'ADRESSES POUR LES MATRICES
C  IN  : MASSE     : MATRICE DE MASSE
C  IN  : NCHAR     : NOMBRE D'OCCURENCES DU MOT CLE CHARGE
C  IN  : NVECA     : NOMBRE D'OCCURENCES DU MOT CLE VECT_ASSE
C  IN  : LIAD      : LISTE DES ADRESSES DES VECTEURS CHARGEMENT (NVECT)
C  IN  : LIFO      : LISTE DES NOMS DES FONCTIONS EVOLUTION (NVECT)
C  IN  : MODELE    : NOM DU MODELE
C  IN  : MATE      : NOM DU CHAMP DE MATERIAU
C  IN  : CARELE    : CARACTERISTIQUES DES POUTRES ET COQUES
C  IN  : CHARGE    : LISTE DES CHARGES
C  IN  : INFOCH    : INFO SUR LES CHARGES
C  IN  : FOMULT    : LISTE DES FONC_MULT ASSOCIES A DES CHARGES
C  IN  : NUMEDD    : NUME_DDL DE LA MATR_ASSE RIGID
C  VAR : DEP0      : TABLEAU DES DEPLACEMENTS A L'INSTANT N
C  VAR : VIT0      : TABLEAU DES VITESSES A L'INSTANT N
C  VAR : ACC0      : TABLEAU DES ACCELERATIONS A L'INSTANT N
C  IN  : TEMPS     : INSTANT COURANT
C IN  NUMREP : NUMERO DE REUSE POUR LA TABLE PARA_CALC
C
C CORPS DU PROGRAMME
      IMPLICIT NONE
C DECLARATION PARAMETRES D'APPELS
C
      INCLUDE 'jeveux.h'
      INTEGER NEQ, ISTOC, IARCHI, IFM, IVIT0R
      INTEGER IFNOBI,IFCIBI
      INTEGER ARCHIV, NBTYAR
      INTEGER IMAT(3)
      INTEGER NCHAR, NVECA, LIAD(*)
C
      REAL*8 DEP0(*), VIT0(*), ACC0(*)
      REAL*8 DEPL1(NEQ), VITE1(NEQ), ACCE1(NEQ)
      REAL*8 VITE2(NEQ)
      REAL*8 FEXTE(*),FAMOR(*),FLIAI(*)
      REAL*8 TABWK0(NEQ), TABWK1(NEQ)
      REAL*8 DT, TEMPS
C
      CHARACTER*8  MASSE, RIGID, AMORT
      CHARACTER*16 TYPEAR(NBTYAR)
      CHARACTER*24 MODELE, MATE, CARELE, CHARGE, INFOCH, FOMULT, NUMEDD
      CHARACTER*24 LIFO(*)
      CHARACTER*19 SOLVEU,SDENER
      CHARACTER*8 RESULT
      CHARACTER*19 FORCE1
      INTEGER       NUMREP

      LOGICAL LAMORT, ENER

C
C
C
C
      INTEGER      IFORC1,IEQ,ALARM
      REAL*8       R8BID
      CHARACTER*19 MASSE1,AMORT1,RIGID1,K19BID
C
C --- CALCUL DES DEPLACEMENTS ET VITESSES
C
      DO 21 , IEQ = 1 , NEQ
        VITE1(IEQ) = VIT0(IEQ) + DT*ACC0(IEQ)
        DEPL1(IEQ) = DEP0(IEQ) + DT*VITE1(IEQ)
   21 CONTINUE

C====
C 3. CALCUL DU SECOND MEMBRE F*
C====

      CALL JEVEUO(FORCE1(1:19)//'.VALE','E',IFORC1)

      CALL DLFEXT ( NVECA, NCHAR, TEMPS, NEQ,LIAD,
     &               LIFO, CHARGE, INFOCH, FOMULT,
     &              MODELE, MATE, CARELE, NUMEDD,ZR(IFORC1) )

      IF (ENER) THEN
        DO 433, IEQ =1,NEQ
          FEXTE(IEQ)=FEXTE(IEQ+NEQ)
          FEXTE(IEQ+NEQ)=ZR(IFORC1+IEQ-1)
  433   CONTINUE
      ENDIF

      CALL DLFDYN ( IMAT(1),IMAT(3), LAMORT, NEQ,
     &              DEPL1, VITE1, ZR(IFORC1), TABWK0)
C
C====
C 4.  RESOLUTION DU PROBLEME M . A = F ET DE LA VITESSE STOCKEE
C           --- RESOLUTION AVEC FORCE1 COMME SECOND MEMBRE ---
C====
C
      R8BID = DT/2.D0
C
      DO 40 , IEQ = 1 , NEQ
C
        ACCE1(IEQ) = TABWK1(IEQ)*ZR(IFORC1+IEQ-1)
C
C        --- VITESSE AUX INSTANTS 'TEMPS + DT' ---
        VITE2(IEQ) = VITE1(IEQ) + R8BID*ACCE1(IEQ)
C
   40 CONTINUE

C
C====
C 5.  CALCUL DES ENERGIES
C
C====
C
      SDENER=SOLVEU(1:8)//'.ENER      '
      IF (ENER) THEN
        MASSE1=MASSE//'           '
        AMORT1=AMORT//'           '
        RIGID1=RIGID//'           '
        CALL WKVECT('FNODABID','V V R',2*NEQ,IFNOBI)
        CALL WKVECT('FCINEBID','V V R',2*NEQ,IFCIBI)
C ON CALCULE LA VITESSE A T N-1
        CALL WKVECT('VIT0_TR','V V R',NEQ,IVIT0R)
        DO 50 IEQ=1,NEQ
          ZR(IVIT0R-1+IEQ)=VIT0(IEQ)+R8BID*ACC0(IEQ)
 50     CONTINUE
        CALL ENERCA(K19BID, DEP0,ZR(IVIT0R),DEPL1,VITE2,MASSE1,
     &             AMORT1,RIGID1,FEXTE ,FAMOR ,FLIAI ,
     &             ZR(IFNOBI) ,ZR(IFCIBI), LAMORT,.TRUE.,.FALSE.,
     &             SDENER,'&&DLDIFF')
        CALL JEDETR('FNODABID')
        CALL JEDETR('FCINEBID')
        CALL JEDETR('VIT0_TR')
      ENDIF
C====
C 5. TRANSFERT DES NOUVELLES VALEURS DANS LES ANCIENNES
C====
C
      CALL DCOPY ( NEQ ,DEPL1, 1, DEP0, 1)
      CALL DCOPY ( NEQ ,VITE1, 1, VIT0, 1)
      CALL DCOPY ( NEQ ,ACCE1, 1, ACC0, 1)

C====
C 7. ARCHIVAGE EVENTUEL DANS L'OBJET SOLUTION
C====
C
      IF ( ARCHIV.EQ.1 ) THEN
C
        ISTOC = 0
        ALARM = 1
C
        CALL DLARCH ( RESULT,NEQ, ISTOC, IARCHI, ' ',
     &                ALARM, IFM, TEMPS,
     &                NBTYAR, TYPEAR, MASSE,
     &                DEPL1, VITE2, ACCE1,
     &                FEXTE(NEQ+1),FAMOR(NEQ+1),FLIAI(NEQ+1) )

      ENDIF
C===
C 8. ARCHIVAGE DES PARAMETRES
C===
      CALL NMARPC(RESULT,SDENER,NUMREP,TEMPS)
C
      END
