      SUBROUTINE CFAPRE(NOMA  ,DEFICO,RESOCO,NEWGEO,SDAPPA)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      CHARACTER*8  NOMA
      CHARACTER*19 SDAPPA
      CHARACTER*24 DEFICO,RESOCO
      CHARACTER*19 NEWGEO
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODES DISCRETES - APPARIEMENT)
C
C RECOPIE DE LA SD APPARIEMENT DEDIEE POUR LE CONTACT
C
C ----------------------------------------------------------------------
C
C
C IN  NOMA   : NOM DU MAILLAGE
C IN  SDAPPA : NOM DE LA SD APPARIEMENT
C IN  NEWGEO : NOUVELLE GEOMETRIE (AVEC DEPLACEMENT GEOMETRIQUE)
C IN  DEFICO : SD POUR LA DEFINITION DE CONTACT
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C
C
C
C
      INTEGER      IFM,NIV
      INTEGER      IZONE,I,ILIAI,IP
      INTEGER      JDECNE
      INTEGER      INOE
      INTEGER      POSMAE,POSNOE,POSMAM,POSNOM
      INTEGER      NUMNOE
      INTEGER      ENTAPP,TYPAPP
      LOGICAL      CFDISL,LCTFD,LCTF3D
      INTEGER      CFDISI,NZOCO,NDIMG,NBPT,NBLIAI
      INTEGER      CFDISD,NESMAX
      LOGICAL      LVERI,MMINFL
      CHARACTER*8  NOMNOE
      REAL*8       KSIPR1,KSIPR2,TAU1M(3),TAU2M(3)
      REAL*8       COORNE(3),DISSUP
      REAL*8       MMINFR,COEFFF,COEFPN,COEFPT,COEFTE
      INTEGER      MMINFI
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('CONTACT',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<CONTACT> ......... RECOPIE DE L''APPARIEMENT'
      ENDIF
C
C --- INFOS SUR LA CHARGE DE CONTACT
C
      LCTFD  = CFDISL(DEFICO,'FROT_DISCRET')
      LCTF3D = CFDISL(DEFICO,'FROT_3D'     )
C
C --- NOMBRE TOTAL DE NOEUDS ESCLAVES ET DIMENSION DU PROBLEME
C
      NZOCO  = CFDISI(DEFICO,'NZOCO' )
      NDIMG  = CFDISI(DEFICO,'NDIM'  )
C
C --- INITIALISATIONS
C
      IP     = 1
      ILIAI  = 0
      POSMAE = 0
C
C --- BOUCLE SUR LES ZONES
C
      DO 10 IZONE = 1,NZOCO
C
C ----- INFORMATION SUR LA ZONE
C
        NBPT   = MMINFI(DEFICO,'NBPT'  ,IZONE )
        JDECNE = MMINFI(DEFICO,'JDECNE',IZONE )
C
C ----- MODE VERIF: ON SAUTE LES POINTS
C
        LVERI  = MMINFL(DEFICO,'VERIF',IZONE )
        IF (LVERI) THEN
          IP     = IP + NBPT
          GOTO 25
        ENDIF
C
C ----- COEFFICIENTS
C
        CALL CFMMCO(DEFICO,RESOCO,IZONE,'E_N','L',
     &              COEFPN)
        CALL CFMMCO(DEFICO,RESOCO,IZONE,'E_T','L',
     &              COEFPT)
        COEFFF = MMINFR(DEFICO,'COEF_COULOMB'   ,IZONE )
        COEFTE = MMINFR(DEFICO,'COEF_MATR_FROT' ,IZONE )
C
C ----- BOUCLE SUR LES NOEUDS DE CONTACT
C
        DO 20 I = 1,NBPT
C
C ------- NOEUD ESCLAVE COURANT
C
          INOE   = I
          POSNOE = JDECNE + INOE
C
C ------- INDICE ABSOLU DANS LE MAILLAGE DU NOEUD
C
          CALL CFNUMN(DEFICO,1     ,POSNOE,NUMNOE)
C
C ------- COORDONNEES DU NOEUD
C
          CALL CFCORN(NEWGEO,NUMNOE,COORNE)
C
C ------- NOM DU NOEUD
C
          CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NUMNOE),NOMNOE)
C
C ------- INFOS APPARIEMENT
C
          CALL APINFI(SDAPPA,'APPARI_TYPE'     ,IP    ,TYPAPP)
          CALL APINFI(SDAPPA,'APPARI_ENTITE'   ,IP    ,ENTAPP)
          CALL APINFR(SDAPPA,'APPARI_PROJ_KSI1',IP    ,KSIPR1)
          CALL APINFR(SDAPPA,'APPARI_PROJ_KSI2',IP    ,KSIPR2)
          CALL APVECT(SDAPPA,'APPARI_TAU1'     ,IP    ,TAU1M )
          CALL APVECT(SDAPPA,'APPARI_TAU2'     ,IP    ,TAU2M )
C
C ------- RECOPIE APPARIEMENT
C
          IF (TYPAPP.LT.0) THEN
            IF (NIV.GE.2) THEN
              CALL CFAPPI(NOMA  ,DEFICO,NOMNOE,TYPAPP,ENTAPP)
            ENDIF
            GOTO 35
          ELSEIF (TYPAPP.EQ.1) THEN
C --------- CARAC. MAITRE
            POSNOM = ENTAPP
C --------- LIAISON DE CONTACT EFFECTIVE
            ILIAI  = ILIAI + 1
C --------- CALCUL LIAISON
            CALL CFAPNO(NOMA  ,NEWGEO,DEFICO,RESOCO,LCTFD ,
     &                  LCTF3D,NDIMG ,IZONE ,POSNOE,NUMNOE,
     &                  COORNE,POSNOM,TAU1M ,TAU2M ,ILIAI )

          ELSEIF (TYPAPP.EQ.2) THEN
C --------- CARAC. MAITRE
            POSMAM = ENTAPP
C --------- LIAISON DE CONTACT EFFECTIVE
            ILIAI  = ILIAI + 1
C --------- CALCUL LIAISON
            CALL CFAPMA(NOMA  ,NEWGEO,DEFICO,RESOCO,LCTFD ,
     &                  LCTF3D,NDIMG ,IZONE ,POSNOE,NUMNOE,
     &                  COORNE,POSMAM,KSIPR1,KSIPR2,TAU1M ,
     &                  TAU2M ,ILIAI )
          ELSE
            CALL ASSERT(.FALSE.)
          ENDIF
C
C ------- CALCUL DU JEU FICTIF DE LA ZONE
C
          CALL CFDIST(DEFICO,'DISCRETE',IZONE ,POSNOE,POSMAE,
     &                COORNE,DISSUP  )
C
C ------- CARACTERISTIQUES DE LA LIAISON POUR LA ZONE
C
          CALL CFPARZ(RESOCO,ILIAI ,COEFFF,COEFPN,COEFPT,
     &                COEFTE,DISSUP,IZONE ,IP    ,NUMNOE,
     &                POSNOE)
C
  35      CONTINUE
C
C ------- POINT SUIVANT
C
          IP     = IP + 1
          CALL ASSERT(ILIAI.LE.IP)
C
  20    CONTINUE
  25    CONTINUE
  10  CONTINUE
C
C --- NOMBRE DE LIAISONS EFFECTIVES
C
      NBLIAI = ILIAI
      CALL CFECRD(RESOCO,'NBLIAI',NBLIAI)
      NESMAX = CFDISD(RESOCO,'NESMAX')
      CALL ASSERT(NBLIAI.LE.NESMAX)
C
      CALL JEDEMA()
      END
