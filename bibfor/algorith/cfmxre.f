      SUBROUTINE CFMXRE(NOMA  ,NOMO  ,DEFICO,RESOCO,NUMINS,
     &                  SDDISC,SOLALG,VALINC,VEASSE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 14/09/2010   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2007  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT      NONE
      CHARACTER*24  RESOCO,DEFICO
      CHARACTER*8   NOMA,NOMO
      CHARACTER*19  SDDISC
      CHARACTER*19  SOLALG(*),VEASSE(*),VALINC(*)
      INTEGER       NUMINS
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (POST_TRAITEMENT)
C
C REMPLIR LE VALE_CONT POUR L'ARCHIVAGE DU CONTACT 
C
C ----------------------------------------------------------------------
C
C      
C IN  DEFICO : SD DE DEFINITION DU CONTACT
C IN  RESOCO : SD DE TRAITEMENT NUMERIQUE DU CONTACT
C IN  NOMO   : NOM DU MODELE
C IN  NOMA   : NOM DU MAILLAGE
C IN  NUMINS : NUMERO DU PAS DE CHARGE
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C
C ------------- DEBUT DECLARATIONS NORMALISEES JEVEUX -----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C --------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ---------------
C 
      INTEGER      IFM,NIV
      CHARACTER*19 CNSINR,CNSPER  
      LOGICAL      CFDISL,LCTCC,LCTCD,LXFCM,LEXIV,LALLV
      CHARACTER*19 DDEPLA,DEPDEL,DEPPLU
      REAL*8       DIINST,INST(2)
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFNIV(IFM,NIV)
C
C --- TYPE DE CONTACT
C    
      LCTCC  = CFDISL(DEFICO,'FORMUL_CONTINUE')
      LCTCD  = CFDISL(DEFICO,'FORMUL_DISCRETE') 
      LXFCM  = CFDISL(DEFICO,'FORMUL_XFEM')
      LEXIV  = CFDISL(DEFICO,'EXIS_VERIF') 
      LALLV  = CFDISL(DEFICO,'ALL_VERIF')
C
C --- TOUT VERIF -> ON SAUTE
C
      IF (LALLV) THEN
        GOTO 50
      ENDIF      
C
C --- INSTANT
C      
      INST(1) = DIINST(SDDISC,NUMINS)
      INST(2) = INST(1) - DIINST(SDDISC,NUMINS-1)  
C
C --- DECOMPACTION DES VARIABLES CHAPEAUX
C      
      CALL NMCHEX(SOLALG,'SOLALG','DDEPLA',DDEPLA)
      CALL NMCHEX(SOLALG,'SOLALG','DEPDEL',DEPDEL)
      CALL NMCHEX(VALINC,'VALINC','DEPPLU',DEPPLU)
C
C --- NOM DU CHAM_NO VALE_CONT ET PERCUSSION
C
      CNSINR = RESOCO(1:14)//'.VALE' 
      CNSPER = RESOCO(1:14)//'.PERC'    
C
C --- POST-TRAITEMENT
C
      IF (LXFCM) THEN
        CALL XMMRES(DEPDEL,NOMO  ,VEASSE,CNSINR)
      ELSEIF (LCTCC) THEN  
        CALL MMMRES(NOMA  ,INST  ,DEFICO,RESOCO,DEPPLU,
     &              DEPDEL,VEASSE,CNSINR,CNSPER)
      ELSEIF (LCTCD) THEN 
        CALL CFRESU(NOMA  ,NUMINS,INST  ,DEFICO,RESOCO,
     &              DEPPLU,DEPDEL,DDEPLA,CNSINR,CNSPER)
      ELSE
        CALL ASSERT(.FALSE.) 
      ENDIF 
C
C --- METHODE VERIF
C 
  50  CONTINUE
C       
      IF (LEXIV) THEN
        CALL CFMMVE(NOMA  ,DEFICO,RESOCO,VALINC)
      ENDIF                     
C
      CALL JEDEMA()
      END
