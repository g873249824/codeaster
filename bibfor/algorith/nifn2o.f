       SUBROUTINE NIFN2O(NNO1  ,NNO2  ,NPG   ,IPOIDS,IVF1  ,IVF2  ,
     &                   IDFDE1,DFDI  ,GEOM  ,AXI   ,SIG   ,IMATE ,
     &                   COMPOR,DEPLM ,PRESM ,PIM   ,STAB  ,FINTU ,
     &                   FINTA ,FINTP)

C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 13/06/2012   AUTEUR COURTOIS M.COURTOIS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE PELLET J.PELLET
C TOLE CRS_1404

       IMPLICIT NONE

      INCLUDE 'jeveux.h'
       LOGICAL       AXI

       INTEGER       NNO1,NNO2,NPG,IPOIDS,IVF1,IVF2,IDFDE1,IMATE

       REAL*8        GEOM(2,NNO1),DFDI(NNO1,2)
       REAL*8        SIG(5,NPG), STAB
       REAL*8        FINTU(2,9),FINTA(1,4),FINTP(2,9)
       REAL*8        DEPLM(2,NNO1),PRESM(1,NNO2),PIM(2,NNO1)

       CHARACTER*16  COMPOR(4)

C......................................................................
C
C     BUT:  CALCUL  DE L'OPTION FORC_NODA EN QUASI INCOMPRESSIBLE
C                  DEFORMATION = 'PETIT' AVEC LA METHODE OSGS
C......................................................................
C IN  NNO1    : NOMBRE DE NOEUDS DE L'ELEMENT LIES AUX DEPLACEMENTS
C IN  NNO2    : NOMBRE DE NOEUDS DE L'ELEMENT LIES A LA PRESSION
C IN  NPG     : NOMBRE DE POINTS DE GAUSS
C IN  IPOIDS  : POIDS DES POINTS DE GAUSS
C IN  IVF1    : VALEUR  DES FONCTIONS DE FORME LIES AUX DEPLACEMENTS
C IN  IVF2    : VALEUR  DES FONCTIONS DE FORME LIES A LA PRESSION
C IN  IDFDE1  : DERIVEE DES FONCTIONS DE FORME ELEMENT DE REFERENCE
C IN  GEOM    : COORDONEES DES NOEUDS
C IN  AXI     : CALCUL AXISYMETRIQUE OU NON
C IN  DEPLM   : DEPLACEMENTS A L'INSTANT PRECEDENT
C IN  GONFLM  : VARIABLES LIEES AU GONFLEMENT A L'INSTANT PRECEDENT
C IN  SIG     : CONTRAINTES A L'INSTANT PRECEDENT
C OUT DFDI    : DERIVEE DES FONCTIONS DE FORME  AU DERNIER PT DE GAUSS
C OUT  FINTU  : VECTEUR DES FORCES INTERNES (COMPOSANTES U)
C OUT  FINTA  : VECTEUR DES FORCES INTERNES (COMPOSANTES P et G)
C......................................................................

      LOGICAL      GRAND

      INTEGER      KPG,N,I,NDIM

      REAL*8       TMP, RAC2,  PM, DIVUM,VALPI(2),GRADP(2),TMP2
      REAL*8       DEF(4,9,2),F(3,3),R,POIDS,EPSM(6), SIGMA(6)
      REAL*8       DDOT, VFF1, TMP1, ALPHA
C -------------------------------------------------------------------

C - PRE REQUIS
      IF (NNO1 .GT. 9) CALL U2MESS('F','ALGORITH6_54')

C - INITIALISATION
      CALL R8INIR(18, 0.D0, FINTU,1)
      CALL R8INIR( 4, 0.D0, FINTA,1)
      CALL R8INIR(18, 0.D0, FINTP,1)
      RAC2  = SQRT(2.D0)
      GRAND = .FALSE.
      NDIM  = 2

C - CALCUL POUR CHAQUE POINT DE GAUSS
      DO 800 KPG = 1, NPG

C - CALCUL DE LA PRESSION
        PM = 0.D0
        DO 1 N = 1, NNO2
          PM = PM + ZR(IVF2-1+N+(KPG-1)*NNO2)*PRESM(1,N)
 1      CONTINUE

C - CALCUL DES ELEMENTS GEOMETRIQUES :F,DFDI
        CALL R8INIR(6, 0.D0, EPSM,1)
        CALL NMGEOM(NDIM,NNO1,AXI,GRAND,GEOM,KPG,IPOIDS,IVF1,IDFDE1,
     &              DEPLM,.TRUE.,POIDS,DFDI,F,EPSM,R)
        DIVUM = EPSM(1) + EPSM(2) + EPSM(3)

C - CALCUL DU GRAD DE PRESSION PROJETE ET DU GRAD DE LA PRESSION
        VALPI(1) = 0.D0
        VALPI(2) = 0.D0
        GRADP(1) = 0.D0
        GRADP(2) = 0.D0
        DO 10 N = 1, NNO1
          DO 20 I = 1, NDIM
            GRADP(I) = GRADP(I)+DFDI(N,I)*PRESM(1,N)
            VALPI(I) = VALPI(I) + ZR(IVF2+N+(KPG-1)*NNO2-1)*PIM(I,N)
 20       CONTINUE
 10     CONTINUE


C - CALCUL DE LA MATRICE B
        DO 35 N = 1, NNO1
          DO 30 I = 1, NDIM
            DEF(1,N,I) =  F(I,1)*DFDI(N,1)
            DEF(2,N,I) =  F(I,2)*DFDI(N,2)
            DEF(3,N,I) =  0.D0
            DEF(4,N,I) = (F(I,1)*DFDI(N,2) + F(I,2)*DFDI(N,1))/RAC2
 30       CONTINUE
 35     CONTINUE

C - TERME DE CORRECTION (3,3) AXI QUI PORTE EN FAIT SUR LE DDL 1
        IF (AXI) THEN
          DO 50 N = 1, NNO1
            VFF1 = ZR(IVF1-1+N+(KPG-1)*NNO1)
            DEF(3,N,1) = F(3,3)*VFF1/R
 50       CONTINUE
        END IF

C - CALCUL DES CONTRAINTES MECANIQUES A L'EQUILIBRE
        DO 40 I = 1, 3
          SIGMA(I) = SIG(I,KPG)
 40     CONTINUE
        SIGMA(4) = SIG(4,KPG)*RAC2
        SIGMA(5) = 0.D0
        SIGMA(6) = 0.D0

C - CALCUL DE L'INVERSE DE KAPPA
        CALL CALALP(KPG,IMATE,COMPOR,ALPHA)

C - CALCUL DE FINT_U OK
        DO 60 N = 1, NNO1
          DO 70 I = 1, NDIM
            FINTU(I,N) = FINTU(I,N)
     &                 + DDOT(2*NDIM,SIGMA,1,DEF(1,N,I),1)*POIDS
 70       CONTINUE
 60     CONTINUE

C - CALCUL DE FINT_A PRESSION
        DO  80 N = 1, NNO2
          TMP1 = 0.D0
          TMP2 = 0.D0
C - PRODUIT SCALAIRE DE GRAD FONC DE FORME DE P ET GRAD P OU FONC DE PI
          DO 90 I = 1, NDIM
            TMP1 = TMP1 + DFDI(N,I)*GRADP(I)
            TMP2 = TMP2 + DFDI(N,I)*VALPI(I)
  90      CONTINUE
          TMP=(DIVUM-PM*ALPHA)*ZR(IVF2+N+(KPG-1)*NNO2-1)
     &       -STAB*(TMP1-TMP2)
          FINTA(1,N) = FINTA(1,N) + TMP*POIDS
 80     CONTINUE

C - CALCUL DE FINTP : RESIDU DE PI
        DO 100 N = 1, NNO1
          DO 110 I = 1, NDIM
            TMP = ZR(IVF1+N+(KPG-1)*NNO1-1) * (GRADP(I) - VALPI(I))
            FINTP(I,N) = FINTP(I,N) + STAB*TMP*POIDS
 110      CONTINUE
 100    CONTINUE
 800  CONTINUE
      END
