      SUBROUTINE OP0075()
      IMPLICIT NONE
C-----------------------------------------------------------------------
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/04/2013   AUTEUR PELLET J.PELLET 
C ======================================================================
C COPYRIGHT (C) 1991 - 2013  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C-----------------------------------------------------------------------
C
C     OPERATEUR REST_GENE_PHYS
C
C ----------------------------------------------------------------------
      INCLUDE 'jeveux.h'
C     ------------------------------------------------------------------
      CHARACTER*8  K8BID,NOMRES,RESIN,MODE,BLANC8,PARAM(3)
      CHARACTER*16 CONCEP,NOMCMD,TYPRES,TYPREP,CHAMP(4)
      CHARACTER*19 PROFNO
      CHARACTER*24 MATGEN,NUMGEN,BASEMO
      LOGICAL      PRSIMP
      INTEGER      JORD,NBORD,I,IORD,LPAIN(3),LPAOUT(3),IARG,IBID,IR1
      INTEGER      J,J1REFE,J2REFE,J3REFE,JREFN,N1,NBCHAM
C     ------------------------------------------------------------------
      CALL JEMARQ()
      CALL INFMAJ()
C     ------------------------------------------------------------------
      DATA K8BID/'        '/
      DATA PARAM/'MODELE','CHAMPMAT','CARAELEM'/
      BLANC8 = '        '
C     -----------------------------------------------------------------
      CALL GETRES(NOMRES,TYPRES,NOMCMD)
C
C     --- PHASE DE TEST SUR LES CHAMPS A RESTITUER
      CALL GETVTX(' ','NOM_CHAM',1,IARG,4,CHAMP,NBCHAM)
      IF (NBCHAM.LT.0) THEN
        CALL U2MESS('E','ALGORITH9_44')
      ELSE
        DO 20 I=1,NBCHAM
          DO 10 J=I+1,NBCHAM
            IF (CHAMP(I).EQ.CHAMP(J)) THEN
              CALL U2MESS('E','ALGORITH9_30')
            ENDIF
   10     CONTINUE
          IF (CHAMP(I).EQ.'ACCE_ABSOLU') THEN
            CALL GETVID(' ','ACCE_MONO_APPUI',1,IARG,1,K8BID,N1)
            IF (N1.EQ.0) THEN
              CALL U2MESS('E','ALGORITH9_45')
            ENDIF
          ENDIF
   20   CONTINUE
      ENDIF
C
C     --- CREATION DU .REFN DU PROFIL :
      PROFNO = '&&OP0075'//'.PROFC.NUME'
C
      CALL WKVECT(PROFNO(1:19)//'.REFN','V V K24',4,JREFN)
      ZK24(JREFN+1)='DEPL_R'
C
      CALL GETVID(' ','RESU_GENE',1,IARG,1,RESIN,IR1)
      CALL GETTCO(RESIN,CONCEP)
C
C     --- INDICATEUR : 1) CALCUL CLASSIQUE AVEC UNE SIMPLE PROJECTION 
C       -           OU 2) SANS MATRICE GENERALISEE (PROJ_MESU_MODAL)
      PRSIMP=.TRUE.
C
      CALL JEVEUO(RESIN//'           .REFD','L',J1REFE)
      MATGEN=ZK24(J1REFE)
      NUMGEN=ZK24(J1REFE+3)
      BASEMO=ZK24(J1REFE+4)
C
C     --- LE RESU_GENE NE VIENT PAS DE PROJ_MESU_MODAL
      IF ((MATGEN(1:8).NE.BLANC8) .OR. (NUMGEN(1:8).NE.BLANC8)) THEN
        TYPREP = 'MODE_MECA'
        IF (BASEMO(1:8).NE.BLANC8) CALL GETTCO(BASEMO,TYPREP)
C       --- LA BASE REFERENCEE DANS LE .REFD N'EST PAS UN MODE_MECA
        IF (TYPREP(1:9).NE.'MODE_MECA') THEN
          PRSIMP = .FALSE.
C         --- CHERCHER ALORS LE NUME_DDL_GENE POUR Y TROUVER DES INFOS
C           - SUR UN POTENTIEL MODE_GENE (CAS D'UNE DOUBLE-RESTITUTION)
          IF (NUMGEN(1:8).EQ.BLANC8) THEN
C           --- PAS D'ENTREE DANS LE .REFD => CHERCHER DANS LA MATRICE K
            CALL JEVEUO(MATGEN(1:8)//'           .REFA','L',J2REFE)
            NUMGEN=ZK24(J2REFE+1)(1:14)
          ENDIF
          CALL JEVEUO(NUMGEN(1:14)//'.NUME.REFN','L',J3REFE)
          CALL GETTCO(ZK24(J3REFE),TYPREP)
        ENDIF
      ENDIF
C
C
C     --- DYNAMIQUE TRANSITOIRE ---
      IF (CONCEP(1:9).EQ.'TRAN_GENE') THEN
        IF (PRSIMP) THEN
C         --- SIMPLE RESTITUTION => APPELER TRAN75 AVEC MODE=BLANC8
          CALL TRAN75(NOMRES,TYPRES,RESIN,BLANC8)
C
        ELSEIF (TYPREP(1:9).EQ.'MODE_GENE') THEN
C         --- RECUPERER LA BASE MODALE POUR DOUBLE RESTITUTION
          CALL GETVID(' ','MODE_MECA',1,IARG,1,MODE,IBID)
          IF (IBID.EQ.0) CALL U2MESS('F','ALGORITH9_48')
C
          CALL TRAN75(NOMRES,TYPRES,RESIN,MODE)
C
        ELSE
C     REMARQUE 1: BLINDAGE
C         --- IMPOSSIBILE DE DETERMINER LE TYPE DE RESTITUTION A PARTIR
C           - DE LA SD_DYNA_GENE, LA SD A PROBABLEMENT ETE MAL DEFINIE 
C           - A LA BASE. ON ARRETE LE CALCUL.
          CALL ASSERT(.FALSE.)
        ENDIF
C
C     --- CALCUL MODAL SANS SOUS-STRUCTURATION
      ELSEIF (CONCEP(1:9).EQ.'MODE_GENE') THEN
        CALL REGENE(NOMRES,RESIN,PROFNO)
C
C     --- CALCUL HARMONIQUE
      ELSEIF (CONCEP(1:9).EQ.'HARM_GENE') THEN
        IF (PRSIMP) THEN
C         --- SANS SOUS STRUCTURATION
          CALL HARM75(NOMRES,TYPRES,RESIN,NOMCMD,BLANC8)
C
        ELSEIF (TYPREP(1:9).EQ.'MODE_GENE') THEN
C         --- AVEC SOUS STRUCTURATION, RECUPERER LA BASE MODALE
          CALL GETVID(' ','MODE_MECA',1,IARG,1,MODE,IBID)
          IF (IBID.EQ.0) CALL U2MESS('F','ALGORITH9_48')
C
          CALL HARM75(NOMRES,TYPRES,RESIN,NOMCMD,MODE)
C
        ELSE
C         --- BLINDAGE : VOIR REMARQUE 1
          CALL ASSERT(.FALSE.)
        ENDIF
      ENDIF
C
C     --- STOCKAGE DES RESULTATS
      CALL GETTCO(RESIN,CONCEP)
      IF ((CONCEP(1:9).EQ.'MODE_GENE')) THEN
        CALL JEVEUO(NOMRES//'           .ORDR','L',JORD)
        CALL JELIRA(NOMRES//'           .ORDR','LONUTI',NBORD,K8BID)
        DO 50 IORD=1,NBORD
          CALL RSADPA(RESIN,'L',3,PARAM,ZI(JORD+IORD-1),0,LPAIN,K8BID)
          CALL RSADPA(NOMRES,'E',3,PARAM,ZI(JORD+IORD-1),0,LPAOUT,K8BID)
          DO 40 I=1,3
            ZK8(LPAOUT(I))=ZK8(LPAIN(I))
   40     CONTINUE
   50   CONTINUE
      ENDIF

      CALL JEDEMA()
      END
