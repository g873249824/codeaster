      SUBROUTINE ADNOFI ( USAGE,
     >                    NBOPT, TABENT, TABREE, TABCAR, LGCAR )
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 16/10/2002   AUTEUR GNICOLAS G.NICOLAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
C RESPONSABLE GNICOLAS G.NICOLAS
C TOLE CRP_20
C     ------------------------------------------------------------------
C      ADAPTATION - NOMS DES FICHIERS
C      --           --       --
C      DETERMINATION DES NOMS D'OBJETS ET DE FICHIERS
C     ------------------------------------------------------------------
C
C     USAGE = 1 : DECODAGE DES MACRO-COMMANDES 'MACR_ADAP_MAIL' ET
C                 'MACR_INFO_MAIL'
C           = 2 : DECODAGE DE LA COMMANDE 'IMPR_FICO_HOMA'
C
C     LE NOM DU REPERTOIRE DE CALCUL DE HOMARD EST CONSTRUIT A PARTIR
C     DU NOM DU CONCEPT DU MAILLAGE CORRESPONDANT A L'ITERATION 0.
C
C     LES NOMS DES FICHIERS SONT DETERMINES AUTOMATIQUEMENT EN FONCTION
C     DU NOM DU CONCEPT AUQUEL IL SE RATTACHE, SELON LA REGLE SUIVANTE :
C     SI LE NOM DU CONCEPT EST NCPT ET SI NITER EST LE NUMERO DE
C     L'ITERATION DE DEPART, NOUS AVONS :
C     NOM DU FICHIER AU FORMAT MED ASSOCIE : NCPT.'NITER'.MED
C     NOM DU FICHIER HOMARD ASSOCIE : NCPT.'NITER'.HOM
C     EXEMPLE : LE MAILLAGE A L'ITERATION 3 SERA LIE AUX
C               FICHIERS MAILL.3.MED ET MAILL.3.HOM
C
C     LES NOMS D'OBJET HOMARD SUIVENT LA MEME REGLE.
C
      IMPLICIT NONE
C
C 0.1. ==> ARGUMENTS
C
      INTEGER USAGE
      INTEGER NBOPT
      INTEGER TABENT(NBOPT), LGCAR(NBOPT)
C
      REAL*8 TABREE(NBOPT)
C
      CHARACTER*(*) TABCAR(NBOPT)
C
C 0.2. ==> COMMUNS
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
C 0.3. ==> VARIABLES LOCALES
C
      CHARACTER*6 NOMPRO
      PARAMETER ( NOMPRO = 'ADNOFI' )
C
      INTEGER LXLGUT
C
      INTEGER CODRET
      INTEGER IAUX, JAUX
      INTEGER IFM, NIVINF
      INTEGER MODHOM, TYPRAF, TYPDER
      INTEGER NITER
      INTEGER NBMAJS
      INTEGER LGSN, LGSNP1
      INTEGER LCN, LCNP1
      INTEGER LCMN, LCMNP1
      INTEGER LOMN, LOMNP1, LORN, LORNP1
      INTEGER LCRN
      INTEGER LNMMN, LNMMN1
      INTEGER LNMDIN
      INTEGER LMMN, LMMNP1, LMSN, LMSNP1, LMIN
      INTEGER LHMN, LHMNP1
      INTEGER LCHINM
      INTEGER LLISTE
      INTEGER NBADMX, NBADAP, NRADAP, ADMEMI, ADMEMK
      INTEGER LREPHC
C
      CHARACTER*2 SUFN, SUFNP1
      CHARACTER*8 COMN, COMNP1
      CHARACTER*8 OMN, OMNP1, ORN, ORNP1
      CHARACTER*8 CRN
      CHARACTER*8 NOMAST, NORESU
      CHARACTER*8 NOPASE
      CHARACTER*8 SAUX08
      CHARACTER*16 CN, CNP1
      CHARACTER*16 CHINME
      CHARACTER*16 NOMSYM
      CHARACTER*24 NOMSTI, NOMSTK
      CHARACTER*32 NMDMN, NMDMN1
      CHARACTER*32 NMDIN
      CHARACTER*72 FMMN, FMMNP1, FMSN, FMSNP1, FMIN
      CHARACTER*72 FHMN, FHMNP1
      CHARACTER*72 FLISTE
      CHARACTER*72 REPHC
C
      LOGICAL LRESU
C
C====
C 1. RECUPERATION DES ARGUMENTS
C====
C
      CODRET = 0
C
C 1.1. ==> ENTIERS
C
      MODHOM = TABENT(2)
      NBMAJS = TABENT(8)
      TYPRAF = TABENT(6)
      TYPDER = TABENT(7)
      IFM    = TABENT(29)
      NIVINF = TABENT(30)
C
C 1.2. ==> CARACTERES
C
      IF ( USAGE.EQ.1 ) THEN
C
        LCMN = LGCAR(2)
        IF ( LCMN.GT.0 ) THEN
          COMN(1:LCMN) = TABCAR(2)(1:LCMN)
        ENDIF
C
        LCMNP1 = LGCAR(3)
        IF ( LCMNP1.GT.0 ) THEN
          COMNP1(1:LCMNP1) = TABCAR(3)(1:LCMNP1)
        ENDIF
C
        LCRN = LGCAR(4)
        IF ( LCRN.GT.0 ) THEN
          CRN(1:LCRN) = TABCAR(4)(1:LCRN)
        ENDIF
C
        LCHINM = LGCAR(5)
        IF ( LCHINM.GT.0 ) THEN
          CHINME(1:LCHINM) = TABCAR(5)(1:LCHINM)
        ENDIF
C
        IAUX = LGCAR(39)
        NOMSTI = TABCAR(39)(1:IAUX)
C
        IAUX = LGCAR(40)
        NOMSTK = TABCAR(40)(1:IAUX)
C
      ENDIF
C
C====
C 2. DETERMINATION DU NUMERO DE L'ITERATION
C====
C
      IF ( USAGE.EQ.1 ) THEN
C
C 2.1. ==> POUR UNE ADAPTATION, IL EST DEDUIT DU NOM DU CONCEPT
C          DU MAILLAGE INITIAL
C
C     NBADMX : NOMBRE MAXIMUM DE CAS D'ADAPTATION POSSIBLES
C     NBADAP : NOMBRE DE CAS D'ADAPTATION DEJA TRAITES
C     NRADAP : NUMERO DU CAS D'ADAPTATION TRAITE
C     ADMEMK(J)(1:8)  : NOM DU CONCEPT DU MAILLAGE INITIAL DU CAS J
C     ADMEMK(J)(9:16) : NOM DU CONCEPT DU DERNIER MAILLAGE N+1 DU CAS J
C     ADMEMI(1,J) : LONGUEUR DE ADMEMK(1,J)
C     ADMEMI(2,J) : LONGUEUR DE ADMEMK(2,J)
C     ADMEMI(3,J) : NUMERO DE L'ITERATION COURANTE DU CAS J
C
      IF ( MODHOM.EQ.1 ) THEN

C 2.1.1. ==> ALLOCATION/RECUPERATION/AGRANDISSEMENT DES TABLEAUX DE
C            MEMORISATION DES NOMS DE CONCEPT
C
        CALL JEEXIN ( NOMSTK, IAUX )
        IF ( IAUX.EQ.0 ) THEN
          NBADMX = 3
          CALL WKVECT ( NOMSTK, 'G V K16', NBADMX, ADMEMK )
          JAUX = 3*NBADMX
          CALL WKVECT ( NOMSTI, 'G V I',   JAUX  , ADMEMI )
          NBADAP = 0
        ELSE
          CALL JELIRA ( NOMSTK, 'LONMAX', NBADMX, SAUX08 )
          CALL JELIRA ( NOMSTK, 'LONUTI', NBADAP, SAUX08 )
          IF ( NBADAP.EQ.NBADMX-1 ) THEN
            NBADMX = 2*NBADMX
            CALL JUVECA ( NOMSTK, NBADMX )
            JAUX = 3*NBADMX
            CALL JUVECA ( NOMSTI, JAUX )
          ENDIF
          CALL JEVEUO ( NOMSTK, 'E', ADMEMK )
          CALL JEVEUO ( NOMSTI, 'E', ADMEMI )
        ENDIF
C
C 2.1.2. ==> ON CHERCHE S'IL EXISTE UNE ADAPTATION DEJA TRAITEE POUR
C            LAQUELLE LE MAILLAGE N+1 CORRESPOND AU MAILLAGE N ACTUEL
C            CELA VEUT DIRE QUE L'ON PROLONGE CETTE ADAPTATION
C
        NRADAP = 0
        DO 21 , JAUX = 1 , NBADAP
          IF ( ZI(ADMEMI+3*JAUX-2).EQ.LCMN ) THEN
            IF ( ZK16(ADMEMK+JAUX-1)(9:8+LCMN).EQ.COMN(1:LCMN) ) THEN
              NRADAP = JAUX
            ENDIF
          ENDIF
   21   CONTINUE
C
C 2.1.3. ==> POUR UNE NOUVELLE ADAPTATION :
C            . VERIFICATION QUE C'EST BIEN UN MAILLAGE DE DEPART
C              SI OUI :
C              . INCREMENTATION DU NOMBRE D'ADAPTATIONS
C              . MEMORISATION DU MAILLAGE INITIAL
C              . MEMORISATION DE L'ITERATION NULLE
C            POUR UNE SUITE D'ADAPTATION :
C            . INCREMENTATION DU NUMERO D'ITERATION
C
        IF ( NRADAP.EQ.0 ) THEN
          CALL ADINMA ( COMN(1:LCMN), IAUX, JAUX )
          IF ( JAUX.EQ.0 ) THEN
            IF ( IAUX.NE.0 ) THEN
              CODRET = 1
              CALL UTMESS
     >('E', NOMPRO, 'LE MAILLAGE '//COMN(1:LCMN)//' N EST PAS INITIAL.')
            ENDIF
          ENDIF
          NBADAP = NBADAP + 1
          CALL JEECRA ( NOMSTK, 'LONUTI',  NBADAP, SAUX08 )
          NRADAP = NBADAP
          ZI(ADMEMI+3*NRADAP-3) = LCMN
          ZK16(ADMEMK+NRADAP-1)(1:LCMN) = COMN(1:LCMN)
          ZI(ADMEMI+3*NRADAP-1) = 0
        ELSE
          ZI(ADMEMI+3*NRADAP-1) = ZI(ADMEMI+3*NRADAP-1) + 1
        ENDIF
C
C 2.1.4. ==> . RECUPERATION DU NUMERO D'ITERATION
C            . MEMORISATION DU MAILLAGE N+1 COURANT
C
        NITER = ZI(ADMEMI+3*NRADAP-1)
        ZI(ADMEMI+3*NRADAP-2) = LCMNP1
        ZK16(ADMEMK+NRADAP-1)(9:8+LCMNP1) = COMNP1
C
        IF ( NIVINF.GE.2 ) THEN
          WRITE(IFM,*) 'NOMBRE D ADAPTATIONS ENREGISTREES :'
          WRITE(IFM,*) NBADAP
          WRITE(IFM,*) 'NUMERO DE L ADAPTATION EN COURS :'
          WRITE(IFM,*) NRADAP
        ENDIF
C
C 2.2. ==> POUR UNE INFORMATION, IL EST NUL
C
      ELSE
C
        NITER = 0
C
      ENDIF
C
      ELSE
C
C 2.3. ==> IL A ETE MEMORISE
C
        NITER = TABENT(3)
C
      ENDIF
C
C====
C 3. SUFFIXES EN FONCTION DU NUMERO DE L'ITERATION
C====
C
      CALL CODENT ( NITER, 'G', SUFN )
      LGSN = LXLGUT(SUFN)
C
      CALL CODENT ( NITER+1, 'G', SUFNP1 )
      LGSNP1 = LXLGUT(SUFNP1)
C
      CN(1:LGSN) = SUFN(1:LGSN)
      LCN = LGSN + 4
      CN(LGSN+1:LCN) = '.MED'
C
      CNP1(1:LGSNP1) = SUFNP1(1:LGSNP1)
      LCNP1 = LGSNP1 + 4
      CNP1(LGSNP1+1:LCNP1) = '.MED'
C
C====
C 4. LE REPERTOIRE OU SERA UTILISE HOMARD : C'EST UN NOM DE CONCEPT,
C    SUFFIXE PAR LE MODE HOMARD
C     . POUR UNE ADAPTATION, CELUI DU CONCEPT DU MAILLAGE CORRESPONDANT
C       A L'ITERATION 0.
C     . POUR UNE INFORMATION, CELUI DU CONCEPT DU MAILLAGE A ANALYSER
C====
C
      IF ( USAGE.EQ.1 ) THEN
C
        IF ( MODHOM.EQ.2 ) THEN
          LREPHC = LCMN + 5
          REPHC(1:LREPHC) = COMN(1:LCMN)//'_INFO'
        ELSE
          IAUX = ZI(ADMEMI+3*NRADAP-3)   
          REPHC(1:IAUX) = ZK16(ADMEMK+NRADAP-1)(1:IAUX)
C
          LREPHC = IAUX + 5
          IF ( MODHOM.EQ.1 ) THEN
            REPHC(IAUX+1:LREPHC) = '_ADAP'
          ELSE
           REPHC(IAUX+1:LREPHC) = '_MJSO'
          ENDIF
        ENDIF
C
      ENDIF
C
C====
C 5. LES NOMS DES FICHIERS
C====
C
C 5.1. ==> LA LISTE DE SORTIE
C
      FLISTE(1:6) = 'LISTE.'
      IAUX = 6 + LGSN
      FLISTE(7:IAUX) = SUFN(1:LGSN)
      IF ( MODHOM.EQ.1 ) THEN
        FLISTE(IAUX+1:IAUX+6) = '.VERS.'
        LLISTE = IAUX+6+LGSNP1
        FLISTE(IAUX+7:LLISTE) = SUFNP1(1:LGSNP1)
      ELSEIF ( MODHOM.EQ.2 ) THEN
        LLISTE = IAUX+5
        FLISTE(IAUX+1:LLISTE) = '.INFO'
      ELSE
        FLISTE(IAUX+1:IAUX+6) = '.MJSO.'
        LLISTE = IAUX+6+LGSNP1
        FLISTE(IAUX+7:LLISTE) = SUFNP1(1:LGSNP1)
      ENDIF
C
C 5.2. ==> LES FICHIERS ET LES OBJETS
C          OXN    : OBJET HOMARD POUR X A L'ITERATION N
C          LOXN OU LOXNP1 : LONGUEUR DU NOM DE L'OBJET DE TYPE X
C          FMXN   : FICHIER MED POUR X A L'ITERATION N
C          FHXN   : FICHIER HOMARD POUR X A L'ITERATION N
C          FMXNP1 : FICHIER MED POUR X A L'ITERATION N+1
C          FHXNP1 : FICHIER HOMARD POUR X A L'ITERATION N+1
C          LYXN OU LYXNP1 : LONGUEUR DU NOM DU FICHIER DE TYPE Y
C                           POUR LA VARIABLE X
C          REMARQUE : ON DETERMINE TOUS LES NOMS ET ON FILTRERA AU
C                     MOMENT DE L'ARCHIVAGE
C
C 5.2.1. ==> MAILLAGE ET RENUMEROTATION
C
      FMMN(1:6) = 'MAILL.'
      FMMN(7:6+LCN) = CN(1:LCN)
      LMMN = LCN + 6
      LHMN= LMMN
      FHMN = FMMN
      FHMN(LHMN-2:LHMN) = 'HOM'
C
      OMN(1:3) = 'MAI'
      OMN(4:3+LGSN) = SUFN(1:LGSN)
      LOMN = LGSN + 3
      LORN = LOMN
      ORN = OMN
      ORN(1:3) = 'REN'
C
      FMMNP1(1:6) = 'MAILL.'
      FMMNP1(7:6+LCNP1) = CNP1(1:LCNP1)
      LMMNP1 = LCNP1 + 6
      LHMNP1= LMMNP1
      FHMNP1 = FMMNP1
      FHMNP1(LHMNP1-2:LHMNP1) = 'HOM'
C
      OMNP1(1:3) = 'MAI'
      OMNP1(4:3+LGSNP1) = SUFNP1(1:LGSNP1)
      LOMNP1 = LGSNP1 + 3
      LORNP1 = LOMNP1
      ORNP1 = OMNP1
      ORNP1(1:3) = 'REN'
C
C 5.2.2. ==> SOLUTION
C
      FMSN(1:6) = 'SOLUT.'
      FMSN(7:6+LCN) = CN(1:LCN)
      LMSN = LCN + 6
      FMSNP1(1:6) = 'SOLUT.'
      FMSNP1(7:6+LCNP1) = CNP1(1:LCNP1)
      LMSNP1 = LCNP1 + 6
C
C 5.2.3. ==> INDICATEUR
C
      FMIN(1:6) = 'INDIC.'
      FMIN(7:6+LCN) = CN(1:LCN)
      LMIN = LCN + 6
C
C====
C 6. LES NOMS MED
C====
C
      IF ( USAGE.EQ.1 ) THEN
C
C 6.1. ==> PAR DEFAUT, ON NE MET RIEN
C
      LNMMN = 0
      LNMMN1 = 0
      LNMDIN = 0
C
C 6.2. ==> LE MAILLAGE
C
C 6.2.1. ==> MAILLAGE D'ENTREE :
C            . SI INFORMATION
C            . SI ADAPTATION LIBRE
C            . SI ADAPTATION ET ITERATION = 0
C            . SI ADAPTATION ET ITERATION > 0 ET MAJ DE SOLUTION
C
      IF ( MODHOM.EQ.2 .OR.
     >     ( MODHOM.EQ.1 .AND. ( TYPRAF.EQ.1 .OR. TYPDER.EQ.1 ) ) .OR.
     >     ( MODHOM.EQ.1 .AND. NITER.EQ.0 ) .OR.
     >     ( MODHOM.EQ.1 .AND. NITER.GT.0 .AND. NBMAJS.NE.0 ) ) THEN

C                 12345678
        NOMAST = '        '
        NOMAST(1:LCMN) = COMN(1:LCMN)
C
        CALL MDNOMA ( NMDMN, LNMMN, NOMAST, IAUX )
C
        IF ( IAUX.NE.0 ) THEN
          CODRET = CODRET + 1
        ENDIF
C
      ENDIF
C
C 6.2.2. ==> MAILLAGE DE SORTIE : SI ADAPTATION
C
      IF ( MODHOM.EQ.1 ) THEN
C                 12345678
        NOMAST = '        '
        NOMAST(1:LCMNP1) = COMNP1(1:LCMNP1)
C
        CALL MDNOMA ( NMDMN1, LNMMN1, NOMAST, IAUX )
C
        IF ( IAUX.NE.0 ) THEN
          CODRET = CODRET + 1
        ENDIF
C
      ENDIF
C
C 6.3. ==> L'INDICATEUR D'ERREUR : POUR UNE ADAPTATION LIBRE
C
      IF ( MODHOM.EQ.1 .AND.
     >     ( TYPRAF.EQ.1 .OR. TYPDER.EQ.1 ) ) THEN
C
C                 1234567890123456
        NORESU = '        '
        NORESU(1:LCRN) = CRN(1:LCRN)
C
        NOMSYM = '                '
        NOMSYM(1:LCHINM) = CHINME(1:LCHINM)
C
C                 12345678
        NOPASE = '        '
C
        LRESU = .TRUE.
C
        CALL MDNOCH ( NMDIN, LNMDIN,
     >                LRESU, NORESU, NOMSYM, NOPASE, IAUX )
C
        IF ( IAUX.NE.0 ) THEN
          CODRET = CODRET + 1
        ENDIF
C
      ENDIF
C
      ENDIF
C
C====
C 7. STOCKAGE DES ARGUMENTS
C====
C
C 7.1. ==> ENTIERS
C
      IF ( USAGE.EQ.1 ) THEN
        TABENT(3) = NITER
      ENDIF
C
C 7.2. ==> CARACTERES
C
C 7.2.1. ==> LA LISTE DE SORTIE
C
      LGCAR(1) = LLISTE
      TABCAR(1)(1:LLISTE) = FLISTE(1:LLISTE)
C
C 7.2.2. ==> LES OBJETS ET LES FICHIERS
C
      LGCAR(11) = LMMN
      TABCAR(11)(1:LMMN) = FMMN(1:LMMN)
      LGCAR(19) = LHMN
      TABCAR(19)(1:LHMN) = FHMN(1:LHMN)
      LGCAR(21) = LOMN
      TABCAR(21)(1:LOMN) = OMN(1:LOMN)
      LGCAR(23) = LORN
      TABCAR(23)(1:LORN) = ORN(1:LORN)
C
      IF ( MODHOM.NE.2 ) THEN
        LGCAR(20) = LHMNP1
        TABCAR(20)(1:LHMNP1) = FHMNP1(1:LHMNP1)
        LGCAR(22) = LOMNP1
        TABCAR(22)(1:LOMNP1) = OMNP1(1:LOMNP1)
        LGCAR(24) = LORNP1
        TABCAR(24)(1:LORNP1) = ORNP1(1:LORNP1)
      ELSE
        LGCAR(20) = 0
        LGCAR(22) = 0
        LGCAR(24) = 0
      ENDIF
C
      IF ( MODHOM.EQ.1 ) THEN
        LGCAR(12) = LMMNP1
        TABCAR(12)(1:LMMNP1) = FMMNP1(1:LMMNP1)
      ELSE
        LGCAR(12) = 0
      ENDIF
C
      IF ( NBMAJS.EQ.0 ) THEN
        LGCAR(13) = 0
        LGCAR(14) = 0
      ELSE
        LGCAR(13) = LMSN
        TABCAR(13)(1:LMSN) = FMSN(1:LMSN)
        LGCAR(14) = LMSNP1
        TABCAR(14)(1:LMSNP1) = FMSNP1(1:LMSNP1)
      ENDIF
C
      IF ( MODHOM.EQ.1 .AND.
     >     ( TYPRAF.EQ.1 .OR. TYPDER.EQ.1 ) ) THEN
        LGCAR(15) = LMIN
        TABCAR(15)(1:LMIN) = FMIN(1:LMIN)
      ELSE
        LGCAR(15) = 0
      ENDIF
C
C 7.2.3. ==> LE REPERTOIRE DE CALCUL DE HOMARD
C
      IF ( USAGE.EQ.1 ) THEN
        LGCAR(29) = LREPHC
        TABCAR(29)(1:LREPHC) = REPHC(1:LREPHC)
      ENDIF
C
C 7.2.4. ==> LES NOMS MED
C
      IF ( USAGE.EQ.1 ) THEN
C
      LGCAR(31) = LNMMN
      IF ( LNMMN.GT.0 ) THEN
        TABCAR(31)(1:LNMMN) = NMDMN(1:LNMMN)
      ENDIF
C
      LGCAR(32) = LNMMN1
      IF ( LNMMN1.GT.0 ) THEN
        TABCAR(32)(1:LNMMN1) = NMDMN1(1:LNMMN1)
      ENDIF
C
      LGCAR(35) = LNMDIN
      IF ( LNMDIN.GT.0 ) THEN
        TABCAR(35)(1:LNMDIN) = NMDIN(1:LNMDIN)
      ENDIF
C
      ENDIF
C
C====
C 8. BILAN
C====
C
      IF ( CODRET.NE.0 ) THEN
        CALL UTMESS ( 'F' , NOMPRO, 'PROBLEMES.' )
      ENDIF
C
      END
