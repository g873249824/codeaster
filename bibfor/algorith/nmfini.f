      SUBROUTINE NMFINI(SDDYNA,VALINC,MEASSE,MODELE,MATE  ,
     &                  CARELE,COMPOR,CARCRI,SDTIME,SDDISC,
     &                  NUMINS,SOLALG,LISCHA,COMREF,DEFICO,
     &                  RESOCO,RESOCU,NUMEDD,PARCON,SDSENS,
     &                  VEELEM,VEASSE)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 05/03/2012   AUTEUR IDOUX L.IDOUX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C TOLE CRP_21
C RESPONSABLE IDOUX L.IDOUX       
      IMPLICIT NONE
      CHARACTER*19  SDDYNA,VALINC(*),MEASSE(*)
      CHARACTER*24  MODELE,MATE,CARELE,COMPOR,CARCRI,SDTIME,COMREF
      CHARACTER*24  DEFICO,RESOCO,RESOCU,NUMEDD,SDSENS
      CHARACTER*19  SDDISC,SOLALG(*),LISCHA,VEELEM(*),VEASSE(*)
      INTEGER       NUMINS
      REAL*8        PARCON(8)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME - CALCUL)
C
C CALCUL DES ENERGIES
C INITIALISATION DES VECTEURS DE FORCE POUR LE CALCUL DES ENERGIES 
C
C ----------------------------------------------------------------------
C 
C IN  SDDYNA : SD DYNAMIQUE
C IN  VALINC : VARIABLE CHAPEAU POUR INCREMENTS VARIABLES
C IN  MEASSE : VARIABLE CHAPEAU POUR NOM DES MATR_ASSE
C IN  MODELE : MODELE
C IN  MATE   : CHAMP MATERIAU
C IN  CARELE : CARACTERISTIQUES DES ELEMENTS DE STRUCTURE
C IN  COMPOR : COMPORTEMENT
C IN  CARCRI : PARAMETRES METHODES D'INTEGRATION LOCALES (VOIR NMLECT)
C IN  SDTIME : SD TIMER
C IN  SDDISC : SD DISCRETISATION TEMPORELLE
C IN  NUMINS : NUMERO D'INSTANT
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  LISCHA : LISTE DES CHARGES
C IN  COMREF : VARI_COM DE REFERENCE
C IN  DEFICO : SD DEF. CONTACT
C IN  RESOCO : SD RESOLUTION CONTACT
C IN  RESOCU : SD RESOLUTION LIAISON_UNILATER
C IN  NUMEDD : NUME_DDL
C IN  PARCON : PARAMETRES DU CRITERE DE CONVERGENCE REFERENCE
C                     1 : SIGM_REFE
C                     2 : EPSI_REFE
C                     3 : FLUX_THER_REFE
C                     4 : FLUX_HYD1_REFE
C                     5 : FLUX_HYD2_REFE
C                     6 : VARI_REFE
C                     7 : EFFORT (FORC_REFE)
C                     8 : MOMENT (FORC_REFE)
C IN  SDSENS : SD SENSIBILITE
C IN  VEELEM : VECTEURS ELEMENTAIRES
C IN  VEASSE : VARIABLE CHAPEAU POUR NOM DES VECT_ASSE
C
C --- DEBUT DECLARATIONS NORMALISEES JEVEUX ----------------------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C --- FIN DECLARATIONS NORMALISEES JEVEUX ------------------------------
C
      CHARACTER*19 MASSE,AMORT,VITMOI,ACCMOI
      CHARACTER*19 FEXMOI,FAMMOI,FLIMOI
      INTEGER      IMASSE,IAMORT,IVITMO,IACCMO
      INTEGER      IFEXMO,IFAMMO,IFLIMO
      INTEGER      NEQ,IAUX,ICV,IMA
      LOGICAL      NDYNLO,LAMOR,LDYNA
      CHARACTER*8  K8BID
      INTEGER      NBVECT,NRPASE,ICNFNO,IFNOMO,IRET
      CHARACTER*16 LOPTVE
      CHARACTER*6  LTYPVE
      LOGICAL      LASSVE,LCALVE,LSENS
      CHARACTER*19 CNFNOD,FNOMOI
C
      CALL JEMARQ()
C
      LAMOR = NDYNLO(SDDYNA,'MAT_AMORT')
      LDYNA = NDYNLO(SDDYNA,'DYNAMIQUE')
      CALL NMCHEX(VALINC,'VALINC','FEXMOI',FEXMOI)
      CALL JEVEUO(FEXMOI//'.VALE','E',IFEXMO)
      CALL DISMOI('F','NB_EQUA',NUMEDD,'NUME_DDL',NEQ,K8BID,IRET)
C
C --- AJOUT DE LA FORCE DE LIAISON ET DE LA FORCE D AMORTISSEMENT
C --- MODAL
C
      CALL NMCHEX(VALINC,'VALINC','FAMMOI',FAMMOI)
      CALL JEVEUO(FAMMOI//'.VALE','L',IFAMMO)
      CALL NMCHEX(VALINC,'VALINC','FLIMOI',FLIMOI)
      CALL JEVEUO(FLIMOI//'.VALE','L',IFLIMO)
      DO 10 IAUX=1,NEQ
        ZR(IFEXMO-1+IAUX)=ZR(IFAMMO-1+IAUX)+ZR(IFLIMO-1+IAUX)
 10   CONTINUE
C
C --- AJOUT DU TERME C.V
C
      IF (LAMOR) THEN
        CALL NMCHEX(MEASSE,'MEASSE','MEAMOR',AMORT)
        CALL MTDSCR(AMORT)
        CALL JEVEUO(AMORT//'.&INT','L',IAMORT)
        CALL NMCHEX(VALINC,'VALINC','VITMOI',VITMOI)
        CALL JEVEUO(VITMOI//'.VALE','L',IVITMO)
        CALL WKVECT('&&NMFINI.CV','V V R',NEQ,ICV)
        CALL MRMULT('ZERO',IAMORT,ZR(IVITMO),'R',ZR(ICV),1)
        DO 20 IAUX=1,NEQ
          ZR(IFEXMO-1+IAUX) = ZR(IFEXMO-1+IAUX) + ZR(ICV-1+IAUX)
 20     CONTINUE
        CALL JEDETR('&&NMFINI.CV')
      ENDIF
C
C --- AJOUT DU TERME M.A
C
      IF (LDYNA) THEN
        CALL NMCHEX(MEASSE,'MEASSE','MEMASS',MASSE)
        CALL MTDSCR(MASSE)
        CALL JEVEUO(MASSE//'.&INT','L',IMASSE)
        CALL NMCHEX(VALINC,'VALINC','ACCMOI',ACCMOI)
        CALL JEVEUO(ACCMOI//'.VALE','L',IACCMO)
        CALL WKVECT('&&NMFINI.MA','V V R',NEQ,IMA)
        CALL MRMULT('ZERO',IMASSE,ZR(IACCMO),'R',ZR(IMA),1)
        DO 30 IAUX=1,NEQ
          ZR(IFEXMO-1+IAUX) = ZR(IFEXMO-1+IAUX) + ZR(IMA-1+IAUX)
 30     CONTINUE
        CALL JEDETR('&&NMFINI.MA')
      ENDIF
C
C --- AJOUT DU TERME CNFNOD
C
      NBVECT=0
      CALL NMCVEC('AJOU','CNFNOD','SIGMOI',.TRUE.,.TRUE.,
     &            NBVECT,LTYPVE,LOPTVE,LCALVE,LASSVE)
      LSENS=.FALSE.
      NRPASE=0
      CALL NMXVEC(MODELE,MATE  ,CARELE,COMPOR,CARCRI,
     &            SDTIME,SDDISC,SDDYNA,NUMINS,VALINC,
     &            SOLALG,LISCHA,COMREF,DEFICO,RESOCO,
     &            RESOCU,NUMEDD,PARCON,SDSENS,LSENS ,
     &            NRPASE,VEELEM,VEASSE,MEASSE,NBVECT,
     &            LTYPVE,LCALVE,LOPTVE,LASSVE)
      CALL NMCHEX(VEASSE,'VEASSE','CNFNOD',CNFNOD)
      CALL JEVEUO(CNFNOD//'.VALE','L',ICNFNO)
      DO 40 IAUX=1,NEQ
        ZR(IFEXMO-1+IAUX) = ZR(IFEXMO-1+IAUX) + ZR(ICNFNO-1+IAUX)
 40   CONTINUE
C
C --- INITIALISATION DES FORCES INTERNES
C
      CALL NMCHEX(VALINC,'VALINC','FNOMOI',FNOMOI)
      CALL JEVEUO(FNOMOI//'.VALE','E',IFNOMO)
      DO 50 IAUX=1,NEQ
        ZR(IFNOMO-1+IAUX) = ZR(ICNFNO-1+IAUX)
 50   CONTINUE
C
      CALL JEDEMA()
C
      END
