      SUBROUTINE NMMAJC(FONACT,SDDYNA,SDNURO,DELTAT,NUMEDD,
     &                  VALMOI,VALPLU,POUGD ,SOLALG)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 29/09/2008   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2008  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT NONE
      LOGICAL      FONACT(*)
      CHARACTER*19 SDNURO,SDDYNA   
      CHARACTER*24 NUMEDD
      CHARACTER*24 POUGD(8),VALMOI(8),VALPLU(8)
      CHARACTER*19 SOLALG(*)
      REAL*8       DELTAT     
C 
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (ALGORITHME )
C
C MISE A JOUR LES CHAMPS SOLUTIONS AVEC INCREMENT SOLUTION ET CONTACT
C      
C ----------------------------------------------------------------------
C
C
C IN  FONACT : FONCTIONNALITES ACTIVEES (VOIR NMFONC)
C IN  SDNURO : SD POUTRES EN GRANDES ROTATIONS
C IN  SDDYNA : SD DYNAMIQUE
C IN  NUMEDD : NOM DU NUME_DDL
C IN  VALPLU : VARIABLE CHAPEAU POUR ETAT EN T+
C IN  VALMOI : VARIABLE CHAPEAU POUR ETAT EN T-
C IN  POUGD  : VARIABLE CHAPEAU POUR POUTRES EN GRANDES ROTATIONS
C IN  SOLALG : VARIABLE CHAPEAU POUR INCREMENTS SOLUTIONS
C IN  DELTAT : INCREMENT DE TEMPS
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER            ZI
      COMMON  / IVARJE / ZI(1)
      REAL*8             ZR
      COMMON  / RVARJE / ZR(1)
      COMPLEX*16         ZC
      COMMON  / CVARJE / ZC(1)
      LOGICAL            ZL
      COMMON  / LVARJE / ZL(1)
      CHARACTER*8        ZK8
      CHARACTER*16                ZK16
      CHARACTER*24                          ZK24
      CHARACTER*32                                    ZK32
      CHARACTER*80                                              ZK80
      COMMON  / KVARJE / ZK8(1) , ZK16(1) , ZK24(1) , ZK32(1) , ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      LOGICAL      ISFONC,NDYNLO,REAROT,LDYNA,LSTAT,LEXPL
      LOGICAL      LEXGE,LTCHA
      LOGICAL      LDEPL,LVITE,LACCE
      INTEGER      NDYNIN
      CHARACTER*24 K24BID,DEPPLU,VITPLU,ACCPLU,DEPMOI,VITMOI
      CHARACTER*19 NMCHEX
      CHARACTER*19 DEPDEL,VITDEL,ACCDEL
      CHARACTER*19 DDEPLA,DVITLA,DACCLA
      REAL*8       NDYNRE,COEVIT,COEFPR
      INTEGER      IFM,NIV   
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV)
C
C --- AFFICHAGE
C
      IF (NIV.GE.2) THEN
        WRITE (IFM,*) '<MECANONLINE> MISE A JOUR DES INCONNUES'
      ENDIF   
C
C --- DECOMPACTION VARIABLES CHAPEAUX
C
      CALL DESAGG(VALPLU,DEPPLU,K24BID,K24BID,K24BID,
     &            VITPLU,ACCPLU,K24BID,K24BID)  
      CALL DESAGG(VALMOI,DEPMOI,K24BID,K24BID,K24BID,
     &            VITMOI,K24BID,K24BID,K24BID)       
      DEPDEL = NMCHEX(SOLALG,'SOLALG','DEPDEL')
      VITDEL = NMCHEX(SOLALG,'SOLALG','VITDEL')
      ACCDEL = NMCHEX(SOLALG,'SOLALG','ACCDEL') 
      DDEPLA = NMCHEX(SOLALG,'SOLALG','DDEPLA')
      DVITLA = NMCHEX(SOLALG,'SOLALG','DVITLA')    
      DACCLA = NMCHEX(SOLALG,'SOLALG','DACCLA')
C
C --- FONCTIONNALITES ACTIVEES
C    
      LSTAT  = NDYNLO(SDDYNA,'STATIQUE')
      LDYNA  = NDYNLO(SDDYNA,'DYNAMIQUE')
      REAROT = ISFONC(FONACT,'REAROT')
      LEXGE  = NDYNLO(SDDYNA,'EXPL_GENE')  
      LEXPL  = NDYNLO(SDDYNA,'EXPLICITE') 
      LTCHA  = NDYNLO(SDDYNA,'TCHAMWA')
C
C --- TYPE DE FORMULATION SCHEMA DYNAMIQUE GENERAL
C
      IF (LSTAT) THEN
        LDEPL = .TRUE.
        LVITE = .FALSE.
        LACCE = .FALSE.
      ELSE
        LDEPL = NDYNIN(SDDYNA,'FORMUL_DYNAMIQUE').EQ.1
        LVITE = NDYNIN(SDDYNA,'FORMUL_DYNAMIQUE').EQ.2
        LACCE = NDYNIN(SDDYNA,'FORMUL_DYNAMIQUE').EQ.3     
      ENDIF  
C
C --- MISE A JOUR INCONNUE PRINCIPALE
C
      COEFPR = 1.D0
      IF (LDEPL) THEN
        IF (LSTAT) THEN
          CALL NMMAJI(NUMEDD,REAROT,SDNURO,COEFPR,DEPDEL,
     &                DDEPLA,DEPDEL)
          CALL NMMAJI(NUMEDD,REAROT,SDNURO,COEFPR,DEPPLU,
     &                DDEPLA,DEPPLU)
        ENDIF   
      ELSEIF (LVITE) THEN
        CALL NMMAJI(NUMEDD,REAROT,SDNURO,COEFPR,VITDEL,
     &              DVITLA,VITDEL)
        CALL NMMAJI(NUMEDD,REAROT,SDNURO,COEFPR,VITPLU,
     &              DVITLA,VITPLU)           
      ELSEIF (LACCE) THEN
        IF (LEXPL) THEN
          CALL COPISD('CHAMP_GD','V',DACCLA,ACCPLU) 
        ELSE 
          CALL NMMAJI(NUMEDD,REAROT,SDNURO,COEFPR,ACCDEL,
     &                DACCLA,ACCDEL)
          CALL NMMAJI(NUMEDD,REAROT,SDNURO,COEFPR,ACCPLU,
     &                DACCLA,ACCPLU)         
        ENDIF         
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF 
C
C --- COEFFICIENTS
C
      IF (LSTAT) THEN
        GOTO 999
      ELSE   
        COEVIT = NDYNRE(SDDYNA,'COEF_VITE')  
      ENDIF             
C
C ---- MISE A JOUR INCONNUES SECONDAIRES
C 
      IF (LDEPL) THEN
        IF (REAROT) THEN
          CALL MAJDVA(NUMEDD,SDNURO,SDDYNA,VALMOI,VALPLU,
     &                POUGD ,SOLALG) 
        ELSE
          CALL VTAXPY(1.D0,DDEPLA,DEPPLU)       
          CALL VTAXPY(1.D0,DVITLA,VITPLU)
          CALL VTAXPY(1.D0,DACCLA,ACCPLU)   
          CALL VTAXPY(1.D0,DDEPLA,DEPDEL)             
          CALL VTAXPY(1.D0,DVITLA,VITDEL)
          CALL VTAXPY(1.D0,DACCLA,ACCDEL)         
        ENDIF
      ELSEIF (LVITE) THEN                         
        CALL VTAXPY(1.D0,DDEPLA,DEPPLU)
        CALL VTAXPY(1.D0,DACCLA,ACCPLU)    
        CALL VTAXPY(1.D0,DACCLA,ACCDEL)        
        CALL VTZERO(DEPDEL)                
        CALL VTAXPY(1.D0,DEPPLU,DEPDEL)
        CALL VTAXPY(-1.D0,DEPMOI,DEPDEL) 
      ELSEIF (LACCE) THEN
        IF (LEXPL) THEN
          IF (.NOT.LTCHA) THEN
            CALL VTAXPY(COEVIT,ACCPLU,VITPLU) 
          ENDIF
        ELSE
          CALL VTAXPY(1.D0,DDEPLA,DEPPLU)
          CALL VTAXPY(1.D0,DVITLA,VITPLU)           
        ENDIF 
        CALL VTAXPY(1.D0,DDEPLA,DEPDEL)
        CALL VTAXPY(1.D0,DVITLA,VITDEL)          
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF                          
C
C --- MISE A JOUR DES DEPL/VITE/ACCE GENERALISEES
C
      IF (LEXGE) THEN
        CALL MXMAJD(DELTAT,SDDYNA,VALMOI,VALPLU)
      ENDIF          
C
C --- AFFICHAGE
C 
 999  CONTINUE
      IF (NIV.GE.2) THEN      
        WRITE (IFM,*) '<MECANONLINE> ...... DEPPLU : '
        CALL NMDEBG('VECT',DEPPLU,6)        
        WRITE (IFM,*) '<MECANONLINE> ...... DEPDEL : '
        CALL NMDEBG('VECT',DEPDEL,6)
        IF (LDYNA) THEN
          WRITE (IFM,*) '<MECANONLINE> ...... VITPLU : '
          CALL NMDEBG('VECT',VITPLU,6)        
          WRITE (IFM,*) '<MECANONLINE> ...... VITDEL : '
          CALL NMDEBG('VECT',VITDEL,6)        
          WRITE (IFM,*) '<MECANONLINE> ...... ACCPLU : '
          CALL NMDEBG('VECT',ACCPLU,6)        
          WRITE (IFM,*) '<MECANONLINE> ...... ACCDEL : '
          CALL NMDEBG('VECT',ACCDEL,6)        
        ENDIF
      ENDIF       
C
      CALL JEDEMA()
      END
