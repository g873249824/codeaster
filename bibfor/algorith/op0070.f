      SUBROUTINE OP0070(IER)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION 
C MODIF ALGORITH  DATE 19/12/2007   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE MABBAS M.ABBAS
C TOLE CRP_20
C
      IMPLICIT NONE
      INTEGER            IER
C      
C ----------------------------------------------------------------------
C
C COMMANDE:  STAT_NON_LINE ET DYNA_NON_LINE
C      
C ----------------------------------------------------------------------
C
C
C OUT IER    : NOMBRE D'ERREURS RENCONTREES      
C      
C ----------------------------------------------------------------------
C
C
C --- PARAMETRES DE MECA_NON_LINE
C
      INTEGER      ZFON  ,ZPMET ,ZPCRI ,ZCONV
      INTEGER      ZINST ,ZPCON ,ZNMETH,ZLICC
      PARAMETER   (ZFON    = 19,ZPMET  = 30,ZPCRI  = 11,ZCONV = 21)
      PARAMETER   (ZINST   = 5 ,ZPCON  =  5,ZNMETH = 7 ,ZLICC = 5)    
      LOGICAL      FONACT(ZFON)
      REAL*8       PARMET(ZPMET),PARCRI(ZPCRI),CONV(ZCONV)
      REAL*8       INST(ZINST)  ,PARCON(ZPCON)  
      CHARACTER*16 METHOD(ZNMETH)  
      INTEGER      LICCVG(ZLICC)    
C
C --- CODES RETOURS POUR GESTION DE L'ALGO
C 
      LOGICAL      ECHLDC,ITEMAX,CONVER,FINPAS 
      LOGICAL      ECHCON(2)
      LOGICAL      PREMIE,ECHEQU,MTCPUI,MTCPUP
      LOGICAL      MAXREL,ECHPIL
C      
      LOGICAL      FORCE ,INCR  ,LBID
C
      INTEGER      IFM   ,NIV 
      INTEGER      I     ,IBID  ,IRET
      INTEGER      NIVEAU,NUMINS,ITERAT
      REAL*8       ETA
      REAL*8       INSTAM,INSTAP
      REAL*8       R8BID ,R8VIDE,VALR(3)
C
      CHARACTER*8  RESULT,MAILLA
C
      CHARACTER*16 OPTION,CMD, K16BID
      CHARACTER*19 LISCHA,LISCH2
      CHARACTER*19 SOLVEU
      CHARACTER*19 CNFINT,CNDIRI,CNFEXT
      CHARACTER*19 CNVCFO,CNVCF1,CNVFRE       
      CHARACTER*24 CARCRI
      CHARACTER*19 LISINS
      CHARACTER*19 MAPREC,MATASS
      CHARACTER*24 MODELE,NUMEDD,MATE  ,CARELE,COMPOR
      CHARACTER*24 COMREF
C
C --- FONCTIONS
C
      LOGICAL      ISFONC,DIDERN,NDYNLO   
      REAL*8       DIINST,NDYNRE 
      INTEGER      DININS  
C
C --- STRUCTURES DE DONNEES
C      
      CHARACTER*24 SDSUIV,SDIMPR,SDSENS,SDTIME
      CHARACTER*19 SDNURO,SDDYNA
      CHARACTER*19 SDDISC,SDCRIT
      CHARACTER*14 SDPILO,SDOBSE
      CHARACTER*24 DEFICO,RESOCO,DEFICU,RESOCU 
C
C --- VARIABLES CHAPEAUX
C           
      CHARACTER*24 VALMOI(8),VALPLU(8),SECMBR(8),POUGD (8),DEPALG(8) 
C
C --- MATR_ELEM, VECT_ELEM ET MATR_ASSE
C       
      CHARACTER*8  MEELEM(8),VEELEM(30) 
      CHARACTER*19 MEASSE(8)
C
C ----------------------------------------------------------------------
C
      DATA SDPILO, SDOBSE    /'&&OP0070.PILOT', '&&OP0070.OBSER'/
      DATA SDIMPR, SDSUIV    /'&&OP0070.IMPR.', '&&OP0070.SUIV.'/  
      DATA SDSENS            /'&&OP0070.SENS.'/  
      DATA SDTIME            /'&&OP0070.TIME.'/  
      DATA SDNURO            /'&&OP0070.NUME.ROTATION'/             
      DATA SDDISC            /'&&OP0070.SDDISC'/
      DATA SDCRIT            /'&&OP0070.SDCRIT'/       
      DATA LISCHA            /'&&OP0070.LISCHA'/
      DATA CARCRI            /'&&OP0070.PARA_LDC'/
      DATA SOLVEU            /'&&OP0070.SOLVEUR'/
      DATA DEFICO, RESOCO    /'&&OP0070.DEFIC',  '&&OP0070.RESOC'/
      DATA DEFICU, RESOCU    /'&&OP0070.DEFUC',  '&&OP0070.RESUC'/
      DATA COMREF            /'&&OP0070.COREF'/
      DATA CNFINT, CNDIRI    /'&&OP0070.CNFINT', '&&OP0070.CNDIRI'/
      DATA CNFEXT            /'&&OP0070.CNFEXT'/
      DATA CNVCFO, CNVFRE    /'&&OP0070.CNVCFO', '&&OP0070.CNVFRE'/
      DATA CNVCF1            /'&&OP0070.CNVCF1'/
      DATA MAPREC, MATASS    /'&&OP0070.MAPREC', '&&OP0070.MATASS'/
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C -- TITRE
C
      CALL TITRE ()
      CALL INFMAJ()
      CALL INFDBG('MECA_NON_LINE',IFM,NIV) 
C
C ======================================================================
C     RECUPERATION DES OPERANDES ET INITIALISATION
C ======================================================================
C
C --- QUELLE COMMANDE APPELLE CETTE OP (STA OU DYN)
C
      CALL GETRES(RESULT,K16BID,CMD   )
C
C --- PREMIERES INITALISATIONS 
C
      CALL NMINI0(ZFON  ,ZPMET ,ZPCRI ,ZCONV ,ZINST ,
     &            ZPCON ,ZNMETH,ZLICC ,FONACT,PARMET,
     &            PARCRI,CONV  ,INST  ,PARCON,METHOD,  
     &            LICCVG,ETA   ,NUMINS,PREMIE,MTCPUI,
     &            MTCPUP,FINPAS,LISCH2)
C
C --- LECTURE DES OPERANDES DE LA COMMANDE 
C
      CALL NMDATA(RESULT,MODELE,MATE  ,CARELE,COMPOR,
     &            LISCHA,SOLVEU,METHOD,PARMET,PARCRI,
     &            PARCON,CARCRI,SDDYNA,SDSENS)
C
C --- ETAT INITIAL ET CREATION DES STRUCTURES DE DONNEES
C
      CALL NMINIT(RESULT,MODELE,NUMEDD,MATE  ,COMPOR,
     &            CARELE,PARMET,LISCHA,MAPREC,SOLVEU,
     &            CARCRI,SDDISC,SDNURO,DEFICO,SDCRIT,
     &            COMREF,CNVCFO,CNVCF1,ZFON  ,FONACT,
     &            CNVFRE,PARCON,PARCRI,LISCH2,MAILLA,
     &            LISINS,INSTAM,SDPILO,SDDYNA,SDIMPR,
     &            SDSUIV,SDSENS,SDOBSE,SDTIME,DEFICU,
     &            RESOCU,RESOCO,VALMOI,VALPLU,POUGD ,
     &            SECMBR,DEPALG,MEASSE,VEELEM,MEELEM)
C
C --- INITIALISATION DES TIMERS
C
      CALL NMTIME('INIT','ALL',SDTIME,LBID  ,R8BID )
C
C ======================================================================
C     BOUCLE SUR LES PAS DE TEMPS
C ======================================================================
C
 200  CONTINUE
C
      CALL JERECU('V')
      CALL NMTIME('DEBUT','PAS',SDTIME,LBID  ,R8BID )
C
C --- SI PLUS D'UN NIVEAU DE SUBDIVISION -> ON DECOUPE
C
 210  CONTINUE
      IF ((DININS(SDDISC,NUMINS-1)-DININS(SDDISC,NUMINS)).GT.1) THEN
        CALL DIDECO(SDDISC,NUMINS,SDCRIT,-1 ,IRET)
        IF (IRET.EQ.0) THEN
          GOTO 210
        ELSE
          CALL U2MESS('F','MECANONLINE2_36')
        ENDIF
      ENDIF
      INSTAP = DIINST(SDDISC, NUMINS)
C
C --- IMPRESSION TITRE TABLEAU DE CONVERGENCE
C
      IF (NDYNLO(SDDYNA,'EXPLICITE')) THEN
        CALL NMIMPR('TITR','EXPLICITE',' ',INSTAP,0)
      ELSE
        CALL NMIMPR('TITR','IMPLICITE',' ',INSTAP,0)
      ENDIF
C
C --- REINITIALISATION DU TABLEAU DE CONVERGENCE
C
      DO 10 I = 1 , 21
        CONV(I) = R8VIDE()
 10   CONTINUE
      CONV(3)  = -1
      CONV(10) = -1
C
C --- INITIALISATION DU CONTACT POUR LE NOUVEAU PAS DE TEMPS
C
      CALL CFINIT(MAILLA,FONACT,DEFICO,RESOCO,NINT(PARMET(1)),
     &            NUMINS,SDDYNA,VALMOI,VALPLU)
C
C --- INITIALISATION DES CHAMPS D'INCONNUES POUR LE NOUVEAU PAS DE TEMPS
C  
      CALL NMNPAS(INSTAM,INSTAP,PREMIE,FONACT,DEFICO,
     &            RESOCO,SDSENS,SDDYNA,VALMOI,VALPLU,
     &            POUGD ,DEPALG,SDNURO)
C
C --- ESTIMATION D'UNE FORCE DE REFERENCE LIEE AUX VAR. COMMANDES EN T+
C
      CALL NMFCOM('INCR',INSTAM,INSTAP,MODELE,NUMEDD,
     &            MATE  ,CARELE,COMPOR,LISCHA,VALMOI,
     &            VALPLU,COMREF,CNVCFO,CNVCF1)
C
C --- PARAMETRES DE L'INSTANT DE CALCUL (SUIVANT SCHEMA D'INTEGRATION)
C
      INST(1) = INSTAP
      INST(2) = INSTAP - INSTAM
      INST(3) = PARMET(30)
      INST(4) = 0.D0
      INST(5) = 0.D0
      IF (NDYNLO(SDDYNA,'DYNAMIQUE')) THEN
        IF(NDYNLO(SDDYNA,'THETA_METHODE'))THEN
          INST(4) = NDYNRE(SDDYNA,'THETA')
        ELSE
          INST(4) = NDYNRE(SDDYNA,'ALPHA')
          INST(5) = NDYNRE(SDDYNA,'DELTA')                 
        ENDIF
      END IF
C
C --- CALCUL DES CHARGEMENTS EXTERIEURS
C
      CALL NMCHAR('FIXE',' '   ,MODELE,NUMEDD,MATE  ,
     &            CARELE,COMPOR,LISCHA,CARCRI,INST  ,
     &            FONACT,PARMET,SOLVEU,VALMOI,VALPLU,
     &            POUGD ,SECMBR,DEPALG,VEELEM,MEELEM,
     &            MEASSE,SDSENS,SDDYNA)
     
      IF (ISFONC(FONACT,'CONT_CONTINU')) THEN
        NIVEAU = 4
      ELSE
        NIVEAU = -1
      ENDIF
C
C ======================================================================
C    BOUCLE POUR CONTACT METHODE CONTINUE
C ======================================================================
C
  101 CONTINUE
      CALL NMIBLE(NIVEAU,
     &            PREMIE,MODELE,MAILLA,DEFICO,RESOCO,
     &            FONACT,LISCHA,SOLVEU,NUMEDD,MATASS,
     &            INST  ,SDDYNA,VALMOI,VALPLU,DEPALG,
     &            MEELEM,MEASSE)
C     
C --- PREDICTION D'UNE DIRECTION DE DESCENTE
C
      CALL NMPRED(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &            COMPOR,LISCHA,METHOD,SOLVEU,FONACT,
     &            PARMET,CARCRI,SDPILO,SDDISC,NUMINS,
     &            INST  ,VALMOI,VALPLU,POUGD ,SECMBR,
     &            DEPALG,LICCVG,MATASS,MAPREC,PREMIE,                 
     &            PARCRI,DEFICO,RESOCO,CONV  ,CNFINT,
     &            CNDIRI,SDDYNA,SDSENS,MEELEM,MEASSE,
     &            VEELEM)
      PREMIE = .FALSE.
      ITERAT = 0
C
C ======================================================================
C     BOUCLE SUR LES ITERATIONS DE NEWTON
C ======================================================================
C   
 300  CONTINUE

      CALL NMTIME('DEBUT','ITE',SDTIME,LBID  ,R8BID ) 
C
C --- CALCUL PROPREMENT DIT DE L'INCREMENT DE DEPLACEMENT
C --- EN CORRIGEANT LA (LES) DIRECTIONS DE DESCENTE
C --- SI CONTACT OU PILOTAGE OU RECHERCHE LINEAIRE
C --- DES FORCES INTERIEURES (RHO SI RL, ETA SI PILOTAGE)
C --- DES RIGI_ELEM (SI DEMANDE)
C   
      CALL NMDEPL(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &            COMPOR,LISCHA,FONACT,PARMET,CARCRI,
     &            MAILLA,PARCRI,METHOD,LICCVG,CONV  ,
     &            CNFEXT,CNFINT,CNDIRI,SDNURO,SOLVEU,
     &            PREMIE,NUMINS,ITERAT,OPTION,MATASS,
     &            SDDISC,VALMOI,VALPLU,POUGD ,SECMBR,
     &            DEPALG,VEELEM,MEELEM,MEASSE,SDDYNA,
     &            INSTAP,INSTAM,ETA   ,SDPILO,DEFICO,
     &            RESOCO,DEFICU,RESOCU)
   
      IF (LICCVG(1).EQ.1) GOTO 4000

      IF (NDYNLO(SDDYNA,'EXPLICITE')) THEN
        CONVER = .TRUE.
        GOTO 540
      ENDIF
C
C --- CALCUL DES FORCES SUIVEUSES
C
      CALL NMCHAR('SUIV','CORRECTION',MODELE,NUMEDD,MATE  ,
     &            CARELE,COMPOR,LISCHA,CARCRI,INST  ,
     &            FONACT,PARMET,SOLVEU,VALMOI,VALPLU,
     &            POUGD ,SECMBR,DEPALG,VEELEM,MEELEM,
     &            MEASSE,SDSENS,SDDYNA)

C
C --- CALCUL DE LA RESULTANTE DES FORCES EXTERIEURES
C
      CALL NMFEXT(NUMEDD,ETA   ,SECMBR,FONACT,RESOCO,
     &            CNFEXT)

C
C --- SUIVI DE DDL
C
      CALL DYOBAR(MAILLA,INSTAM,LISINS,SDIMPR,SDSUIV,
     &            SDOBSE,SDDYNA,RESOCO,VALPLU,SECMBR,
     &            DEPALG,.TRUE.)

 4000 CONTINUE
C
C --- ESTIMATION DE LA CONVERGENCE
C
      CALL NMCONV(CNFINT,CNDIRI,CNFEXT,CNVCFO,PARCRI,
     &            ITERAT,ETA   ,CONV  ,LICCVG,ITEMAX,
     &            CONVER,ECHLDC,ECHEQU,ECHCON,ECHPIL,
     &            FINPAS,SDCRIT,NUMINS,SDDISC,PARMET,
     &            CNVFRE,MAILLA,INST  ,VALMOI,VALPLU,
     &            DEPALG,MEASSE,SDDYNA,CNVCF1,NUMEDD, 
     &            DEFICO,RESOCO,MATASS,SDIMPR,FONACT,
     &            MAXREL,MATE  ,COMREF)

C
C --- ENREGISTRE LES ERREURS A CETTE ITERATION
C
      CALL DIERRE(SDDISC,SDCRIT,ITERAT)
C
C --- ON A CONVERGE ON FINIT LE PAS DE TEMPS
C
540   CONTINUE
      IF ( CONVER ) THEN
        CALL NMTIME('FIN','ITE',SDTIME,LBID  ,R8BID ) 
        GOTO 550
      ENDIF
C
C --- CA NE SE PASSE PAS BIEN... -> ON VA TENTER DE REDECOUPER
C --- 1 - LE NOMBRE D'ITERATIONS MAXIMAL EST ATTEINT
C --- 2 - SI LA MATRICE EST SINGULIERE
C --- 3 - S'IL Y A ECHEC DANS L'INTEGRATION DE LA LOI DE COMPORTEMENT
C --- 4 - S'IL Y A ECHEC DANS LE TRAITEMENT DU CONTACT
C --- 5 - S'IL Y A ECHEC DANS LE PILOTAGE
C
      IF ( ITEMAX    .OR.
     &     ECHPIL    .OR.
     &     ECHEQU    .OR.
     &     ECHLDC    .OR.
     &     ECHCON(1) .OR. ECHCON(2) )  THEN
        GOTO 500
      ENDIF
C      
C --- SINON ON CONTINUE LES ITERATIONS DE NEWTON : CALCUL DE LA DESCENTE
C
      CALL NMDESC(MODELE,NUMEDD,MATE  ,CARELE,COMREF,
     &            COMPOR,LISCHA,RESOCO,METHOD,SOLVEU,
     &            PARMET,CARCRI,SDPILO,SDDISC,FONACT,
     &            NUMINS,ITERAT,VALMOI,POUGD ,DEPALG,
     &            VALPLU,SECMBR,CNFINT,CNDIRI,ETA   ,
     &            LICCVG,DEFICO,PREMIE,MATASS,MAPREC,
     &            MEELEM,MEASSE,VEELEM,SDDYNA)     
C
C --- TEMPS DISPONIBLE POUR FAIRE UNE NOUVELLE ITERATION DE NEWTON ?
C
      CALL NMTIME('FIN','ITE',SDTIME,LBID  ,R8BID )
      CALL NMTIME('MES','ITE',SDTIME,MTCPUI,R8BID )
      ITERAT = ITERAT + 1
      IF (MTCPUI) THEN
        GOTO 1000
      ELSE
        GOTO 300
      ENDIF
C
C --- EN L'ABSENCE DE CONVERGENCE ON CHERCHE A SUBDIVISER LE PAS 
C --- DE TEMPS SI L'UTILISATEUR A FAIT LA DEMANDE
C
 500  CONTINUE
C
C ======================================================================
C     FIN DES ITERATIONS DE NEWTON
C ======================================================================
C  

C     SI ON A PAS ITEMAX ET QUE L'ON ARRIVE ICI C'EST UN PROBLEME DE
C        PILOTAGE, DE MATRICE SINGULIERE, DE CONTACT, DE LOI DE
C        COMPORTEMENT. DANS CE CAS ON NE PEUT PAS UTILISER LES RESIDUS,
C        ON FORCE LA SUBDIVISION (FDECUP=1 ON FORCE)
C     SI ON A ITEMAX ON NE DOIT PAS FORCER LA SUBDIVISION MAIS UTILISER
C        UNE DES METHODES DE SUBDIVISION (FDECUP=2 ON NE FORCE PAS)
      IF (ITEMAX) THEN
        CALL DIDECO(SDDISC,NUMINS,SDCRIT,2,IRET)
      ELSE
        CALL DIDECO(SDDISC,NUMINS,SDCRIT,1,IRET)
      ENDIF  
      

C     IRET=0 LA SUBDIVISION C'EST BIEN PASSEE
C     IRET=1 PAS DE SUBDIVISION DEMANDEE
C     IRET=2 SUBDIVISION DEMANDEE, MAIS CRITERE SUR LE NIVEAU OU SUR LE
C            PAS DE TEMPS ATTEINT, ON NE FAIT PAS LA SUBDIVISION
C     IRET=3 AUTORISATION DE FAIRE DES ITERATIONS EN PLUS
C
C     ARRET=NON ==> NINT(PARCRI(4)).EQ.1

C     LA SUBDIVISION C'EST BIEN PASSEE
      IF (IRET.EQ.0)  THEN
        CALL NMTIME('FIN','ITE',SDTIME,LBID  ,R8BID )
        CALL NMTIME('FIN','PAS',SDTIME,LBID  ,VALR(1))
        CALL NMIMPR('    ','TPS_PAS',' ',VALR,0)
        CALL NMTIME('MES','PAS',SDTIME,MTCPUP,R8BID )
        GOTO 600

C     AUTORISATION DE FAIRE DES ITERATIONS EN PLUS
      ELSE IF (IRET.EQ.3) THEN
        ITEMAX = .FALSE.
        GOTO 540
C     ARRET=NON
C     PAS DE SUBDIVISION DEMANDEE
C     LE NOMBRE D'ITERATION MAXI EST ATTEINT
C     ON VA A LA SUBDIVISION OU AU PAS DE TEMPS SUIVANT
      ELSEIF ((IRET.EQ.1).AND.(NINT(PARCRI(4)).EQ.1).AND.(ITEMAX))THEN
        CALL U2MESS('A','MECANONLINE2_37')
        CALL NMTIME('FIN','ITE',SDTIME,LBID  ,R8BID )
        GOTO 550

C     ARRET=NON
C     SUBDIVISION DEMANDEE, MAIS CRITERE NIVEAU OU PAS DE TEMPS ATTEINT
C     ON VA A LA SUBDIVISION OU AU PAS DE TEMPS SUIVANT
      ELSEIF  ((IRET.EQ.2).AND.(NINT(PARCRI(4)).EQ.1))THEN
        CALL U2MESS('A','MECANONLINE2_37')
        CALL NMTIME('FIN','ITE',SDTIME,LBID  ,R8BID )
        GOTO 550

C     ARRET DU CALCUL
      ELSE
        CALL NMTIME('FIN','ITE',SDTIME,LBID  ,R8BID )
        GOTO 1000
      ENDIF

 550  CONTINUE

C ======================================================================
C  FIN DU PAS DE TEMPS
C ======================================================================

      CALL NMTBLE(NIVEAU, 
     &            MODELE,MAILLA,DEFICO,RESOCO,FONACT,
     &            INST  ,MAXREL,SDIMPR,VALMOI,VALPLU)

      IF (NIVEAU.GT.0) THEN
        GOTO 101
      ENDIF
C
C ======================================================================
C  FIN BOUCLE POUR CONTACT METHODE CONTINUE
C ======================================================================
C

C
C --- TEMPS DISPONIBLE
C
      CALL NMTIME('FIN','PAS',SDTIME,LBID  ,VALR(1) )
      CALL NMTIME('MES','PAS',SDTIME,MTCPUP,R8BID )
C
C --- IMPRESSION TEMPS
C
      IF (ISFONC(FONACT,'CONT_DISCRET')) THEN
        IF (ISFONC(FONACT,'CONT_VERIF')) THEN
          CALL NMIMPR('    ','TPS_PAS',' ',VALR,0)
        ELSE
          CALL CFITER(RESOCO,'L','TIMA',IBID,VALR(3))
          CALL CFITER(RESOCO,'L','TIMG',IBID,VALR(2))
          CALL NMIMPR('    ','TPS_PAS',' ',VALR,1)
        ENDIF
      ELSE
        CALL NMIMPR('    ','TPS_PAS',' ',VALR,0)
      ENDIF
C
C --- ECRITURE DES NOEUDS EN CONTACT SI ON A CONVERGE
C
      CALL CFMXRE(MAILLA,MODELE,DEFICO,RESOCO,FONACT,
     &            MATASS,NUMEDD,NUMINS,DEPALG,ECHCON,
     &            INST  )
C
C --- OBSERVATION EVENTUELLE
C
      CALL DYOBAR(MAILLA,INSTAP,LISINS,SDIMPR,SDSUIV,
     &            SDOBSE,SDDYNA,RESOCO,VALPLU,SECMBR,
     &            DEPALG,.FALSE.)
C
C --- ARCHIVAGE DES RESULTATS
C
      FINPAS = FINPAS .OR. DIDERN(SDDISC, NUMINS)
C
      CALL NMTIME('DEBUT','ARC',SDTIME,LBID  ,R8BID )
      INCR  = .NOT.ISFONC(FONACT,'SENSIBILITE')
      FORCE = MTCPUP.OR.FINPAS
      CALL NMARCH(RESULT,NUMINS,SDDISC,FORCE ,COMPOR,
     &            SDCRIT,RESOCO,VALPLU,INCR  ,MODELE,
     &            MATE  ,CARELE,FONACT,LISCH2,SDDYNA)
      CALL NMTIME('FIN','ARC',SDTIME,LBID  ,R8BID )
C      
C --- CALCUL DE POST-TRAITEMENT: FLAMBEMENT ET MODES VIBRATOIRES
C
      CALL NMPOST(MODELE,NUMEDD,CARELE,COMPOR,SOLVEU,
     &            NUMINS,RESULT,MATE  ,COMREF,LISCHA,
     &            DEFICO,RESOCO,METHOD,PARMET,FONACT,
     &            CARCRI,ITERAT,SDDISC,PREMIE,LICCVG,
     &            VALMOI,VALPLU,DEPALG,POUGD ,MATASS,
     &            MAPREC,MEELEM,MEASSE,VEELEM,SDDYNA)
C
C --- CALCUL DE SENSIBILITE
C
      IF (ISFONC(FONACT,'SENSIBILITE')) THEN
        CALL NMSENS(MODELE,NUMEDD,MATE  ,COMPOR,CARELE,
     &              LISCHA,SDCRIT,FONACT,SDSENS,SDDYNA,
     &              SOLVEU,MATASS,MAPREC,SDDISC,INST  ,
     &              NUMINS,SECMBR,VALMOI,VALPLU,DEPALG,
     &              POUGD ,CARCRI,PARMET,MEELEM,MEASSE,
     &              VEELEM)
      ENDIF


C -- DERNIER INSTANT DE CALCUL ? -> ON SORT DE STAT_NON_LINE

      IF (FINPAS) GOTO 900

C -- SINON : REACTUALISATION

      CALL NMFPAS(FONACT,SDDYNA,VALMOI,VALPLU,DEPALG)
      INSTAM = INSTAP
      NUMINS = NUMINS + 1

C -- TEMPS DISPONIBLE POUR FAIRE UN NOUVEAU PAS DE TEMPS ?

 600  CONTINUE

      IF (MTCPUP) THEN
        GOTO 1000
      END IF

      IF (NUMINS.EQ.1) CALL COPISD(' ','G',LISCHA,LISCH2)

C -- SAUVEGARDE DU SECOND MEMBRE POUR ALPHA-METHODE

      IF ( NDYNLO(SDDYNA,'HHT_COMPLET')) THEN
        CALL NMCHSV(CNFINT,SECMBR,SDDYNA)
      ENDIF

      GOTO 200

C ======================================================================
C     GESTION DES ERREURS
C ======================================================================

1000  CONTINUE

C -- ON COMMENCE PAR ARCHIVER LE PAS DE TEMPS PRECEDENT
      IF (NUMINS.NE.1) THEN
        FORCE = .TRUE.
        INCR  = .TRUE.
        CALL NMARCH(RESULT,NUMINS-1,SDDISC,FORCE ,COMPOR,
     &              SDCRIT,RESOCO,VALPLU,INCR  ,MODELE,
     &              MATE  ,CARELE,FONACT,LISCH2,SDDYNA)     
      ENDIF
      CALL COPISD(' ','G',LISCHA,LISCH2)

C -- GESTION DES ERREURS ET EXCEPTIONS

      CALL NMERRO(MTCPUI,MTCPUP,ITEMAX,NUMINS,ITERAT,
     &            ECHLDC,ECHEQU,ECHCON,ECHPIL,SDTIME)

C ======================================================================
C     SORTIE
C ======================================================================

 900  CONTINUE

C
C --- COPIE DE LA SD INFO_CHARGE DANS LA BASE GLOBALE
C
      CALL COPISD(' ','G',LISCHA,LISCH2)
C
C --- MENAGE FINAL
C
      CALL NMMENG(FONACT)
C
      CALL JEDEMA()

      END
