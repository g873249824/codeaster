      SUBROUTINE MMMCRI(CRITER,NOMA  ,DEPMOI,DEPGEO,DEPPLU,
     &                  RESOCO,EPSMAX,CVGNOE,CVGVAL,MMCONV)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 09/11/2012   AUTEUR DELMAS J.DELMAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C
      IMPLICIT NONE
      INCLUDE 'jeveux.h'

      CHARACTER*32 JEXNUM
      CHARACTER*4  CRITER
      CHARACTER*8  NOMA
      CHARACTER*19 DEPMOI
      CHARACTER*19 DEPGEO
      CHARACTER*19 DEPPLU
      CHARACTER*24 RESOCO
      REAL*8       EPSMAX
      LOGICAL      MMCONV
      CHARACTER*16 CVGNOE
      REAL*8       CVGVAL
C
C ----------------------------------------------------------------------
C
C ROUTINE CONTACT (METHODE CONTINUE - ALGORITHME - UTILITAIRE)
C
C CALCUL DU CRITERE DE CONVERGENCE
C
C ----------------------------------------------------------------------
C
C
C IN  CRITER : 'GEOM' OU 'FROT'
C IN  NOMA   : NOM DU MAILLAGE
C IN  DEPMOI : CHAMP GEOMETRIQUE A L'ITERATION GEOM. N-2
C IN  DEPGEO : CHAMP GEOMETRIQUE A L'ITERATION GEOM. N-1
C IN  DEPPLU : CHAMP GEOMETRIQUE A L'ITERATION GEOM. N
C IN  EPSMAX : VALEUR DU CRITERE DE CONVERGENCE
C OUT CVGNOE : LIEU OU LE CRITERE EST MAX
C OUT CVGVAL : VALEUR DU CRITERE MAX
C OUT MMCONV : VAUT .TRUE. SI LE CRITERE EST OK
C
C
C
C
      REAL*8       VMAX1,VMAX2,VMAX3,VMAX4,VMAXI,RMIN
      REAL*8       CRIDEP,CRILBD,ALPHA,R8VIDE,R8PREM
      CHARACTER*24 VTDIFF,VTDIF2
      CHARACTER*8  LICMP(3),NOMNOE
      INTEGER      NCMP,NUMNO1,NUMNO2,NUMNO3,NUMNO4,NUMNOE
      LOGICAL      MMCVGE,MMCVFR
      CHARACTER*24 MAXDEP
      INTEGER      JMAXDE
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- CALCUL DU CRITERE (DEPLACEMENT RELATIF)
C
      MMCONV = .FALSE.
C
C --- INITIALISATIONS
C
      VMAX1  = 0.D0
      VMAX2  = 0.D0
      VMAX3  = 0.D0
      VMAX4  = 0.D0
      CRIDEP = 0.D0
      CRILBD = 0.D0
      CVGNOE = ' '
      CVGVAL = R8VIDE()
      ALPHA  = -1.D0
      MMCVGE = .FALSE.
      MMCVFR = .FALSE.
C
C --- CONSTRUCTION CHAM_NO DEPPLU-DEPGEO
C
      VTDIFF = '&&MMMCRI.VTDIFF'
      CALL COPISD('CHAMP_GD','V',DEPPLU,VTDIFF)
      CALL VTAXPY(ALPHA,DEPGEO,VTDIFF)

      IF (CRITER.EQ.'GEOM') THEN
C
C --- LA REFERENCE POUR LA BOUCLE DE GEOMETRIE EST DEPGEO-DEPMOI
C
        VTDIF2 = '&&MMMCRI.VTDIF2'
        CALL COPISD('CHAMP_GD','V',DEPGEO,VTDIF2)
        CALL VTAXPY(ALPHA,DEPMOI,VTDIF2)
C
C --- VARIATION RELATIVE DE DEPPLU-DEPGEO SUR LES DEPLACEMENTS
C                           DEPGEO-DEPMOI
C
        NCMP     = 3
        LICMP(1) = 'DX'
        LICMP(2) = 'DY'
        LICMP(3) = 'DZ'

        CALL CNOMAX(VTDIFF,NCMP,LICMP,VMAX1,NUMNO1)
        CALL CNOMAX(VTDIF2,NCMP,LICMP,VMAX2,NUMNO2)
C
C --- STOCKAGE DU MAX DE LA NORME DU DEPLACEMENT
C
        MAXDEP = RESOCO(1:14)//'.MAXD'
        CALL JEVEUO(MAXDEP,'E',JMAXDE)
        IF (ZR(JMAXDE).LT.0.D0) THEN
          ZR(JMAXDE-1+1) = VMAX2
          RMIN           = R8PREM()
        ELSE
          ZR(JMAXDE-1+1) = MAX(ZR(JMAXDE-1+1),VMAX2)
          RMIN           = 1.D-6*ZR(JMAXDE-1+1)
        ENDIF
C
        IF (VMAX2.LE.RMIN) THEN
          IF (VMAX2.EQ.0.D0) THEN
            CRIDEP = 10.0D0*EPSMAX
          ELSE
            CRIDEP = 1.D-1*EPSMAX
          ENDIF
        ELSE
          CRIDEP = VMAX1/VMAX2
        ENDIF
C
C --- TEST DE CONVERGENCE
C
        IF (CRIDEP.LT.ABS(EPSMAX)) THEN
          MMCVGE = .TRUE.
        ELSE
          MMCVGE = .FALSE.
        END IF

      ELSEIF (CRITER.EQ.'FROT') THEN

C
C --- VARIATION RELATIVE DE DEPPLU-DEPGEO SUR LES LAGS_C
C
        NCMP     = 1
        LICMP(1) = 'LAGS_C'
        LICMP(2) = ' '
        LICMP(3) = ' '

        CALL CNOMAX(VTDIFF,NCMP,LICMP(1),VMAX3,NUMNO3)
        CALL CNOMAX(DEPPLU,NCMP,LICMP(1),VMAX4,NUMNO4)

        IF (VMAX4.GT.0.D0) THEN
          CRILBD = VMAX3/VMAX4
        ELSE
          CRILBD = 0.D0
        END IF
C
C --- TEST DE CONVERGENCE
C
        IF (CRILBD.LT.ABS(EPSMAX)) THEN
          MMCVFR = .TRUE.
        ELSE
          MMCVFR = .FALSE.
        END IF

      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF

C
C --- CONVERGENCE FINALE
C
      MMCONV = MMCVGE.OR.MMCVFR
C
C --- INFORMATIONS: NOM DU NOEUD ET VALEUR REACTUALISATION
C
      IF (CRITER.EQ.'FROT') THEN
        NUMNOE = NUMNO3
        VMAXI  = CRILBD
      ELSE
        NUMNOE = NUMNO1
        VMAXI  = CRIDEP
      ENDIF
      IF (NUMNOE.EQ.0) THEN
        NOMNOE = ' '
      ELSE
        CALL JENUNO(JEXNUM(NOMA//'.NOMNOE',NUMNOE),NOMNOE)
      ENDIF
      CVGNOE = NOMNOE//'        '
      CVGVAL = VMAXI
C
      CALL DETRSD('CHAMP_GD',VTDIFF)
      IF (CRITER.EQ.'GEOM') THEN
        CALL DETRSD('CHAMP_GD',VTDIF2)
      ENDIF
C
      CALL JEDEMA()
      END
