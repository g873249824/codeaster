      SUBROUTINE MMMCRI(CRITER,DEPGEO,DEPPLU,EPSMAX,MMCONV)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 14/10/2008   AUTEUR DESOZA T.DESOZA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT NONE
      CHARACTER*4  CRITER
      CHARACTER*24 DEPGEO
      CHARACTER*24 DEPPLU
      REAL*8       EPSMAX
      LOGICAL      MMCONV
C      
C ----------------------------------------------------------------------
C ROUTINE APPELEE PAR : MMCONV
C ----------------------------------------------------------------------
C
C CALCUL D'UN CRITERE DE CONVERGENCE GEOMETRIQUE POUR LA METHODE 
C DE CONTACT CONTINU.
C ON SE BASE SUR LA DIFFERENCE RELATIVE ENTRE DEPPLU ET DEPGEO
C
C IN  CRITER : 'GEOM' OU 'FROT'
C IN  DEPGEO : CHAMP GEOMETRIQUE INITIAL
C IN  DEPPLU : CHAMP DE DEPLACEMENTS A L'ITERATION COURANTE
C IN  EPSMAX : VALEUR DU CRITERE DE CONVERGENCE
C OUT MMCONV : VAUT .TRUE. SI LE CRITERE EST OK
C
C -------------- DEBUT DECLARATIONS NORMALISEES  JEVEUX ----------------
C
      INTEGER ZI
      COMMON /IVARJE/ZI(1)
      REAL*8 ZR
      COMMON /RVARJE/ZR(1)
      COMPLEX*16 ZC
      COMMON /CVARJE/ZC(1)
      LOGICAL ZL
      COMMON /LVARJE/ZL(1)
      CHARACTER*8 ZK8
      CHARACTER*16 ZK16
      CHARACTER*24 ZK24
      CHARACTER*32 ZK32
      CHARACTER*80 ZK80
      COMMON /KVARJE/ZK8(1),ZK16(1),ZK24(1),ZK32(1),ZK80(1)
C
C -------------- FIN  DECLARATIONS  NORMALISEES  JEVEUX ----------------
C
      REAL*8 VMAX1,VMAX2,CRIDEP,CRILBD,ALPHA
      CHARACTER*24 VTDIFF
      CHARACTER*8 LICMP(3)
      INTEGER NCMP,NUMNO1,NUMNO2
      LOGICAL MMCVGE,MMCVFR
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
C
C --- CALCUL DU CRITERE (DEPLACEMENT RELATIF)
C
      MMCONV = .FALSE.
C
C --- INITIALISATIONS
C      
      VMAX1  = 0.D0
      VMAX2  = 0.D0
      CRIDEP = 0.D0
      CRILBD = 0.D0
      ALPHA  = -1.D0
      MMCVGE = .FALSE.
      MMCVFR = .FALSE.
C
C --- CONSTRUCTION CHAM_NO DEPPLU-DEPGEO
C
      VTDIFF = '&&MMMCRI.VTDIFF'
      CALL COPISD('CHAMP_GD','V',DEPPLU,VTDIFF)
      CALL VTAXPY(ALPHA,DEPGEO,VTDIFF)

      IF (CRITER.EQ.'DEPL') THEN
C
C --- VARIATION RELATIVE DE DEPPLU-DEPGEO SUR LES DEPLACEMENTS
C
        NCMP     = 3
        LICMP(1) = 'DX'
        LICMP(2) = 'DY'
        LICMP(3) = 'DZ'

        CALL CNOMAX(VTDIFF,NCMP,LICMP,VMAX1,NUMNO1)
        CALL CNOMAX(DEPPLU,NCMP,LICMP,VMAX2,NUMNO2)

        IF (VMAX2.GT.0.D0) THEN
          CRIDEP = VMAX1/VMAX2
        ELSE
          CRIDEP = 0.D0
        END IF
C      
C --- TEST DE CONVERGENCE
C
        IF (CRIDEP.LT.ABS(EPSMAX)) THEN
          MMCVGE = .TRUE.
        ELSE
          MMCVGE = .FALSE.
        END IF
C
        MMCONV = MMCVGE
C
      ELSEIF (CRITER.EQ.'CONT') THEN
C
C --- VARIATION RELATIVE DE DEPPLU-DEPGEO SUR LES LAGS_C
C
        NCMP     = 1
        LICMP(1) = 'LAGS_C'
        LICMP(2) = ' '
        LICMP(3) = ' '

        CALL CNOMAX(VTDIFF,NCMP,LICMP(1),VMAX1,NUMNO1)
        CALL CNOMAX(DEPPLU,NCMP,LICMP(1),VMAX2,NUMNO2)

        IF (VMAX2.GT.0.D0) THEN
          CRILBD = VMAX1/VMAX2
        ELSE
          CRILBD = 0.D0
        END IF
C      
C --- TEST DE CONVERGENCE
C
        IF (CRILBD.LT.ABS(EPSMAX)) THEN
          MMCVFR = .TRUE.
        ELSE
          MMCVFR = .FALSE.
        END IF
C
        MMCONV = MMCVFR
C
      ELSE
        CALL ASSERT(.FALSE.)
      ENDIF

      CALL DETRSD('CHAMP_GD',VTDIFF)

      CALL JEDEMA()
      END
