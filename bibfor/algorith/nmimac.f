      SUBROUTINE NMIMAC(SDIMPR,SDSUIV,FONACT)
C
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 18/09/2012   AUTEUR ABBAS M.ABBAS 
C ======================================================================
C COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
C (AT YOUR OPTION) ANY LATER VERSION.                                   
C                                                                       
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
C                                                                       
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.         
C ======================================================================
C RESPONSABLE ABBAS M.ABBAS
C
      IMPLICIT     NONE
      INCLUDE      'jeveux.h'
      CHARACTER*24 SDIMPR,SDSUIV
      INTEGER      FONACT(*)
C
C ----------------------------------------------------------------------
C
C ROUTINE MECA_NON_LINE (IMPRESSION - INITIALISATIONS)
C
C ACTIVATION DES COLONNES POUR LE PAS DE TEMPS
C
C ----------------------------------------------------------------------
C
C
C IN  SDIMPR : SD AFFICHAGE
C IN  SDSUIV : SD SUIVI_DDL
C IN  FONACT : FONCTIONNALITES ACTIVEES
C
C ----------------------------------------------------------------------
C
      INTEGER      IFM,NIV
      LOGICAL      ISFONC,LRELI,LPILO,LCTCD,LCTCC
      LOGICAL      LBORST,LREFE,LFETI,LCOMP
      LOGICAL      LBOUCC,LBOUCF,LBOUCG,LALLV,LNEWTF,LNEWTC
      CHARACTER*24 SDTABC,SLCOLO,SDCOLO
      INTEGER      ICOLO,NBCOLO
      CHARACTER*24 SUIINF
      INTEGER      JSUIIN
      LOGICAL      LINFRE,LINFTP,LCSV
      INTEGER      ISUIV,NBSUIV
      CHARACTER*1  INDSUI
      CHARACTER*9  TYPCOL
C
C ----------------------------------------------------------------------
C
      CALL JEMARQ()
      CALL INFNIV(IFM,NIV)
C
C --- FONCTIONNALITES ACTIVEES
C
      LRELI  = ISFONC(FONACT,'RECH_LINE')
      LPILO  = ISFONC(FONACT,'PILOTAGE')
      LCTCD  = ISFONC(FONACT,'CONT_DISCRET')
      LCTCC  = ISFONC(FONACT,'CONT_CONTINU')
      LREFE  = ISFONC(FONACT,'RESI_REFE')
      LBORST = ISFONC(FONACT,'DEBORST')
      LFETI  = ISFONC(FONACT,'FETI')
      LBOUCF = ISFONC(FONACT,'BOUCLE_EXT_FROT')
      LBOUCG = ISFONC(FONACT,'BOUCLE_EXT_GEOM')
      LBOUCC = ISFONC(FONACT,'BOUCLE_EXT_CONT')
      LNEWTF = ISFONC(FONACT,'FROT_NEWTON')
      LNEWTC = ISFONC(FONACT,'CONT_NEWTON')
      LCOMP  = ISFONC(FONACT,'RESI_COMP')
      LALLV  = ISFONC(FONACT,'CONT_ALL_VERIF')
C
C --- TABLEAU DE CONVERGENCE ET OPTIONS
C
      CALL OBGETO(SDIMPR,'TABLEAU_CONV',SDTABC)
      CALL OBGETB(SDIMPR,'INFO_RESIDU' ,LINFRE)
      CALL OBGETB(SDIMPR,'INFO_TEMPS'  ,LINFTP)
      CALL OBGETB(SDTABC,'SORTIE_CSV'  ,LCSV  )
C
C --- LISTE DES COLONNES DISPONIBLES
C
      CALL OBGETO(SDTABC,'COLONNES_DISPOS',SLCOLO)
      CALL OBGETI(SLCOLO,'NBRE_STRUCTS'   ,NBCOLO)
C
C --- DESACTIVATION TOUTES LES COLONNES
C
      CALL OBLRAZ(SLCOLO)
C
C --- PAS DE TEMPS
C
      IF (LCSV)   CALL OBLSAP(SLCOLO,'INCR_INST',.TRUE.)
C
C --- CONTACT - BOUCLE GEOMETRIQUE
C
      IF (LBOUCG) CALL OBLSAP(SLCOLO,'BOUC_GEOM',.TRUE.)
C
C --- CONTACT - BOUCLE FROTTEMENT
C
      IF (LBOUCF) CALL OBLSAP(SLCOLO,'BOUC_FROT',.TRUE.)
C
C --- CONTACT - BOUCLE CONTACT
C
      IF (LBOUCC) CALL OBLSAP(SLCOLO,'BOUC_CONT',.TRUE.)
C
C --- ITERATIONS DE NEWTON
C
      CALL OBLSAP(SLCOLO,'ITER_NUME',.TRUE.)
C
C --- RESI_GLOB_RELA
C
      CALL OBLSAP(SLCOLO,'RESI_RELA',.TRUE.)
      IF (LINFRE) CALL OBLSAP(SLCOLO,'RELA_NOEU',.TRUE.)
C
C --- RESI_GLOB_MAXI
C
      CALL OBLSAP(SLCOLO,'RESI_MAXI',.TRUE.)
      IF (LINFRE) CALL OBLSAP(SLCOLO,'MAXI_NOEU',.TRUE.)
C
C --- SEUIL DE COULOMB (NEWTON GENERALISE)
C
      IF (LNEWTF) THEN
        CALL OBLSAP(SLCOLO,'FROT_NEWT',.TRUE.)
        IF (LINFRE) THEN
          CALL OBLSAP(SLCOLO,'FROT_NOEU',.TRUE.)
        ENDIF
      ENDIF
C
C --- STATUTS DE CONTACT (NEWTON GENERALISE)
C
      IF (LNEWTC) THEN
        CALL OBLSAP(SLCOLO,'CONT_NEWT',.TRUE.)
      ENDIF
C
C --- RESIDU PAR REFERENCE
C
      IF (LREFE) THEN
        CALL OBLSAP(SLCOLO,'RESI_REFE',.TRUE.)
        IF (LINFRE) THEN
          CALL OBLSAP(SLCOLO,'REFE_NOEU',.TRUE.)
        ENDIF
      ENDIF
C
C --- RESIDU PAR FORCES NODALES CMP (THM)
C
      IF (LCOMP) THEN
        CALL OBLSAP(SLCOLO,'RESI_COMP',.TRUE.)
        IF (LINFRE) THEN
          CALL OBLSAP(SLCOLO,'COMP_NOEU',.TRUE.)
        ENDIF
      ENDIF
C
C --- BOUCLES CONTACT
C
      IF (LBOUCG.OR.LBOUCF.OR.LBOUCC) THEN
        CALL OBLSAP(SLCOLO,'BOUC_VALE',.TRUE.)
        IF (LINFRE) THEN
          CALL OBLSAP(SLCOLO,'BOUC_NOEU',.TRUE.)
        ENDIF
      ENDIF
C
C --- METHODE DE BORST
C
      IF (LBORST) THEN
        CALL OBLSAP(SLCOLO,'DEBORST  ',.TRUE.)
      ENDIF
C
C --- RECHERCHE LINEAIRE
C
      IF (LRELI) THEN
        CALL OBLSAP(SLCOLO,'RELI_NBIT',.TRUE.)
        CALL OBLSAP(SLCOLO,'RELI_COEF',.TRUE.)
      ENDIF
C
C --- PILOTAGE
C
      IF (LPILO) THEN
        CALL OBLSAP(SLCOLO,'PILO_COEF',.TRUE.)
      ENDIF
C
C --- OPTION D'ASSEMBLAGE
C
      CALL OBLSAP(SLCOLO,'MATR_ASSE',.TRUE.)
C
C --- CONTACT DISCRET - INFORMATIONS SUR SOUS-ITERATIONS
C
      IF (LCTCD.AND.(.NOT.LALLV)) THEN
        CALL OBLSAP(SLCOLO,'CTCD_NBIT',.TRUE.)
      ENDIF
C
C --- CONTACT CONTINU - DETECTION CYCLAGE
C
      IF (LCTCC.AND.(.NOT.LALLV)) THEN
        CALL OBLSAP(SLCOLO,'CTCC_CYCL',.TRUE.)
      ENDIF
C
C --- FETI
C
      IF (LFETI) THEN
        CALL OBLSAP(SLCOLO,'FETI_NBIT',.TRUE.)
      ENDIF
C
C --- TEMPS PASSE DANS L'ITERATION
C
      IF (LINFTP) THEN
        CALL OBLSAP(SLCOLO,'ITER_TIME',.TRUE.)
      ENDIF
C
C --- ACTIVATION DES COLONNES POUR LE SUIVI EN TEMPS REEL
C
      SUIINF = SDSUIV(1:14)//'     .INFO'
      CALL JEVEUO(SUIINF,'L',JSUIIN)
      NBSUIV = ZI(JSUIIN+1-1)
      DO 20 ISUIV = 1,NBSUIV
        CALL IMPFOI(0,1,ISUIV,INDSUI)
        TYPCOL = 'SUIV_DDL'//INDSUI
        CALL OBLSAP(SLCOLO,TYPCOL,.TRUE.)
  20  CONTINUE
C
C --- CALCUL DE LA LARGEUR DE LA LIGNE
C
      CALL OBTCLA(SDTABC)
C
C --- PAS DE VALEUR AFFECTEE
C
      DO 30 ICOLO = 1,NBCOLO
        CALL OBLGOI(SLCOLO,ICOLO ,SDCOLO)
        CALL OBSETB(SDCOLO,'VALE_AFFE',.FALSE.)
 30   CONTINUE
C
      CALL JEDEMA()

      END
