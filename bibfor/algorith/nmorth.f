      SUBROUTINE NMORTH (FAMI,KPG,KSP,NDIM,PHENOM,TYPMOD,IMATE,SECHM,
     &                   SECHP,SREF,TM,TP,TREF,EPSM,DEPS,SIGM,OPTION,
     &                   ANGMAS,SIGP,VIP,DSIDEP)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 12/07/2006   AUTEUR CIBHHPD L.SALMONA 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT NONE
      CHARACTER*(*)    FAMI
      INTEGER          KPG,KSP,NDIM,IMATE
      REAL*8           SECHM,SECHP,SREF,EPSM(6),DEPS(6),SIGM(6),SIGP(6)
      REAL*8           TP,TM,TREF,ANGMAS(3),DSIDEP(6,6),P(3,3),VIP
      CHARACTER*16     OPTION,PHENOM
      CHARACTER*8      TYPMOD(*)
C TOLE CRP_21

C  IN    FAMI   : FAMILLE DE POINT DE GAUSS
C  IN    KPG    : NUMERO DU POINT DE GAUSS
C  IN    KSP    : NUMERO DU SOUS POINT DE GAUSS
C  IN    NDIM   : DIMENSION DU PROBLEME
C  IN    PHENOM : PHENOMENE (ELAS_ORTH OU ELAS_ISTR)
C  IN    TYPMOD : TYPE DE MODELISATION
C  IN    IMATE  : ADRESSE DU MATERIAU
C  IN    SECHM  : SECHAGE A L INSTANT T-
C  IN    SECHP  : SECHAGE A L INSTANT T+
C  IN    SREF   : SECHAGE DE REFERENCE
C  IN    TM     : TEMPERATURE A L INSTANT T-
C  IN    TP     : TEMPERATURE A L INSTANT T+
C  IN    TREF   : TEMPERATURE DE REFERENCE
C  IN    EPSM   : DEFORMATION A L INSTANT T-
C  IN    DESPS  : INCREMENT DE DEFORMATION
C  IN    SIGM   : CONTRAINTE A L INSTANT T-
C  IN    OPTION : OPTION A CALCULER
C  IN    ANGMAS : ANGLE DU REPERE LOCAL D ORTHOTROPIE
C  OUT   SIGP   : CONTRAINTE A L INSTANT T+
C  OUT   VIP    : VARIABLE INTERNE (NECESSAIRE
C                 CAR IL EN EXISTE FORCEMENT UNE)
C  OUT   DSIDEP : MATRICE DE RIGIDITE TANGENTE 

C     VARIABLE LOCALE      
      REAL*8 RBID,R8VIDE,HYDR,REPERE(4),HOOKF(36)
      REAL*8 VALPAR(3),VALRES(3),DEPLTH(6),DEPGTH(6),DEPSTR(6)
      REAL*8 ALPTM,ALPLM,ALPNM,ALPTP,ALPLP,ALPNP
      REAL*8 DEPSME(6),RAC2
      INTEGER IRET,NBSIGM,I,J
      CHARACTER*8 NOMRES(3),NOMPAR(2),MODELI
      CHARACTER*2 CODRET(3)
      DATA NOMRES /'ALPHA_L','ALPHA_N','ALPHA_T'/
      DATA NOMPAR /'TEMP','SECH'/

      RAC2=SQRT(2.D0)
      NBSIGM=NDIM*2

      DO 1 I=1,NBSIGM
        IF (I.LE.3) THEN
         DEPSTR(I)=DEPS(I)
       ELSE
          DEPSTR(I)=DEPS(I)/RAC2
       ENDIF  
 1    CONTINUE

      IF (ANGMAS(1).EQ.R8VIDE()) CALL UTMESS('F','NMORTH',
     & 'LA DEFINITION DU REPERE D ORTHOTROPIE NE PEUT'//
     & ' SE FAIRE QUE VIA LE MOT CLE ANGL_REP D AFFE_CARA_ELEM')
      
      REPERE(1)=1.D0
      REPERE(2)=ANGMAS(1)
      
      IF (TYPMOD(1).EQ.'3D') THEN
        MODELI='CA'
        REPERE(3)=ANGMAS(2)
        REPERE(4)=ANGMAS(3)
      ELSE IF (TYPMOD(1).EQ.'C_PLAN') THEN
        CALL UTMESS ('F','NMORTH','MODELISATION C_PLAN NON SUPPORTE')
      ELSE IF (TYPMOD(1).EQ.'D_PLAN') THEN
        MODELI='DP'
      ELSE IF (TYPMOD(1).EQ.'AXIS')   THEN
        MODELI='AX'
      ELSE
        CALL UTMESS('F','NMORTH','TYPE D ELEMENT INCOMPATIBLE'//
     &                  ' AVEC UNE LOI ELASTIQUE ANISOTROPE')
      ENDIF

      DO 2 I=1,NBSIGM
        DEPGTH(I)=0.D0
2     CONTINUE

      CALL RCVARC(' ','HYDR','+',FAMI,KPG,KSP,HYDR,IRET)
      IF (IRET.NE.0) HYDR=0.D0
C     APPEL A DMATMC POUR RECUPERER LA MATRICE TANGENTE
      CALL DMATMC(MODELI,IMATE,TP,HYDR,SECHP,RBID,REPERE,
     &            RBID,NBSIGM,HOOKF,.FALSE.)

      DO 5 I=1,NBSIGM
        DO 15 J=1,NBSIGM
          IF (J.GT.3)  HOOKF(NBSIGM*(J-1)+I)=2*HOOKF(NBSIGM*(J-1)+I)
 15     CONTINUE
 5    CONTINUE
      IF ( OPTION.EQ.'RIGI_MECA_TANG'.OR.
     &     OPTION.EQ.'FULL_MECA') THEN
        DO 10 I=1,NBSIGM
          DO 20 J=1,NBSIGM
            DSIDEP(I,J)=HOOKF(NBSIGM*(J-1)+I)
 20       CONTINUE
 10     CONTINUE
      ENDIF


      IF ( OPTION.EQ.'FULL_MECA'.OR.OPTION.EQ.'RAPH_MECA') THEN
      
        VALPAR(1)=TP
        VALPAR(2)=SECHP

        IF (PHENOM.EQ.'ELAS_ORTH') THEN

C RECUPERATION DES PARAMETRES MATERIAUX A L INSTANT -

          CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS_ORTH',2,NOMPAR,
     &              VALPAR,3,NOMRES,VALRES,CODRET,' ')
          IF (CODRET(1).NE.'OK') VALRES(1)=0.D0
          IF (CODRET(2).NE.'OK') VALRES(2)=0.D0
          IF (CODRET(3).NE.'OK') VALRES(3)=0.D0
          ALPLM=VALRES(1)
          ALPNM=VALRES(2)
          ALPTM=VALRES(3)

C RECUPERATION DES PARAMETRES MATERIAUX A L INSTANT +

          CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS_ORTH',2,NOMPAR,
     &                VALPAR,3,NOMRES,VALRES,CODRET,' ')
          IF (CODRET(1).NE.'OK') VALRES(1)=0.D0
          IF (CODRET(2).NE.'OK') VALRES(2)=0.D0
          IF (CODRET(3).NE.'OK') VALRES(3)=0.D0
          ALPLP=VALRES(1)
          ALPNP=VALRES(2)
          ALPTP=VALRES(3)
        ELSE IF (PHENOM.EQ.'ELAS_ISTR') THEN

C RECUPERATION DES PARAMETRES MATERIAUX A L INSTANT -

         CALL RCVALB(FAMI,KPG,KSP,'-',IMATE,' ','ELAS_ISTR',2,NOMPAR,
     &               VALPAR,2,NOMRES,VALRES,CODRET,' ')
          IF (CODRET(1).NE.'OK') VALRES(1)=0.D0
          IF (CODRET(2).NE.'OK') VALRES(2)=0.D0
          VALRES(3)=VALRES(1)
          ALPLM=VALRES(1)
          ALPNM=VALRES(2)
          ALPTM=VALRES(1)
C RECUPERATION DES PARAMETRES MATERIAUX A L INSTANT +

          CALL RCVALB(FAMI,KPG,KSP,'+',IMATE,' ','ELAS_ISTR',2,NOMPAR,
     &                VALPAR,2,NOMRES,VALRES,CODRET,' ')
          IF (CODRET(1).NE.'OK') VALRES(1)=0.D0
          IF (CODRET(2).NE.'OK') VALRES(2)=0.D0
          VALRES(3)=VALRES(1)
          ALPLP=VALRES(1)
          ALPNP=VALRES(2)
          ALPTP=VALRES(1)
        ENDIF

C INCREMENT DE DEFORMATIONS D ORIGINE THERMIQUE DANS LE REPERE LOCAL
      
        DEPLTH(1)=ALPLP*(TP-TREF)-ALPLM*(TM-TREF)
        DEPLTH(2)=ALPTP*(TP-TREF)-ALPTM*(TM-TREF)
        DEPLTH(3)=ALPNP*(TP-TREF)-ALPNM*(TM-TREF)
        DEPLTH(4)=0.D0
        DEPLTH(5)=0.D0
        DEPLTH(6)=0.D0

C RECUPERATION DE LA MATRICE DE PASSAGE
        CALL MATROT(ANGMAS,P)

C PASSAGE DU TENSEUR DES DEFORMATIONS THERMIQUES DANS LE REPERE GLOBAL

        CALL UTPSLG(1,3,P,DEPLTH,DEPGTH)


C CALCUL DES DEFORMATIONS MECANIQUES

        DO 30 I=1,NBSIGM
          DEPSME(I)=DEPSTR(I)-DEPGTH(I)
 30     CONTINUE

C CONTRAINTE A L ETAT +
        DO 40 I=1,NBSIGM
          IF (I.LE.3) THEN
            SIGP(I)=SIGM(I)
          ELSE  
            SIGP(I)=SIGM(I)/RAC2
          ENDIF
 40     CONTINUE

        DO 60 I=1,NBSIGM
          DO 70 J=1,NBSIGM
            SIGP(I)=SIGP(I)+HOOKF(NBSIGM*(J-1)+I)*DEPSME(J)
 70       CONTINUE
 60     CONTINUE

C PAS DE VARIABLE INTERNE POUR CE COMPORTEMENT
        VIP=0.D0

C REMISE AU FORMAT ASTER DES VALEURS EXTRA DIAGONALES
        DO 80 I=4,NBSIGM
         SIGP(I)=SIGP(I)*RAC2
80      CONTINUE
      ENDIF
     
      END
