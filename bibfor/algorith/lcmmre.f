        SUBROUTINE LCMMRE ( TYPMOD, NMAT, MATERD, MATERF,
     &      COMP,NBCOMM, CPMONO, PGL,TOUTMS,HSR, NR, NVI,VIND,
     &       ITMAX, TOLER,TIMED,TIMEF,YD,YF,DEPS,DY,R,IRET)
        IMPLICIT NONE
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 14/06/2011   AUTEUR PROIX J-M.PROIX 
C ======================================================================
C COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C (AT YOUR OPTION) ANY LATER VERSION.
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
C   1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
C ======================================================================
C RESPONSABLE JMBHH01 J.M.PROIX
C TOLE CRP_21
C       ----------------------------------------------------------------
C     MONOCRISTAL  : CALCUL DES TERMES DU SYSTEME NL A RESOUDRE = R(DY)
C                  VARINT =  DEPSVP (DALPHAS DGAMMAS DPS) PAR SYSTEME
C                  DY =  DSIG (DGAMMAS PAR SYSTEME)
C                  Y  =  SIG   (GAMMAS  PAR SYSTEME)
C                  R  = ( R1  R2   )
C  CAS PARTICULEIR : POUR KOCKS-RAUCH, DY = DSIG  DRs s=1,Ns
C  KOCKS-RAUCH, VARINT = DEPSVP (DRS DGAMMAS DPS) PAR SYSTEME
C  ATTENTION IL FAUT CALCULER -R
C
C     IN  TYPMOD    :  TYPE DE MODELISATION
C         NMAT   :  DIMENSION MATER
C         MATERD :  COEFFICIENTS MATERIAU A T
C         MATERF :  COEFFICIENTS MATERIAU A T+DT
C         COMP   :  NOM COMPORTEMENT
C         NBCOMM :  INCIDES DES COEF MATERIAU
C         CPMONO :  NOM DES COMPORTEMENTS
C         PGL    :  MATRICE DE PASSAGE
C         TOUTMS :  TENSEURS D'ORIENTATION
C         HSR    :  MATRICE D'INTERACTION
C         NVI    :  NOMBRE DE VARIABLES INTERNES
C         VIND   :  VARIABLES INTERNES A L'INSTANT PRECEDENT
C         ITMAX  :  ITER_INTE_MAXI
C         TOLER  :  RESI_INTE_RELA
C         TIMED  :  ISTANT PRECEDENT
C         TIMEF  :  INSTANT ACTUEL
C         YD     :  VARIABLES A T       = ( SIGD VIND (EPSD3)  )
C         YF     :  VARIABLES A T + DT  = ( SIGF VINF (EPSF3)  )
C         DY     :  SOLUTION ESSAI      = ( DSIG DVIN (DEPS3) )
C         DEPS   :  INCREMENT DE DEFORMATION
C         YF     :  VARIABLES A T + DT =  ( SIGF X1F X2F PF (EPS3F) )
C         DY     :  SOLUTION           =  ( DSIG DX1 DX2 DP (DEPS3) )
C         NR     :  DIMENSION DECLAREE DRDY
C     OUT R      :  RESIDU DU SYSTEME NL A T + DT
C         IRET   :  CODE RETOUR
C     ----------------------------------------------------------------
      INTEGER NDT , NDI , NMAT, NR, NVI, NSFV, IRET
      INTEGER NBFSYS,IFA,NBSYS,IS,ITMAX
      INTEGER NBCOMM(NMAT,3),NSFA,IFL,NUECOU
C
      REAL*8 DKOOH(6,6),FKOOH(6,6),TIMED, TIMEF
      REAL*8 SIGF(6), SIGD(6), MSNS(3,3),PGL(3,3),DGAMM1
      REAL*8 DEPS(*),DEPSE(6), DEVI(6),DT
      REAL*8 EPSED(6) , FETFE6(6), H1SIGF(6),VIND(*)
      REAL*8 MATERD(NMAT*2) ,MATERF(NMAT*2),EPSEF(6)
      REAL*8 MS(6),NG(3),TAUS,DGAMMA,DALPHA,DP,RP
      REAL*8 R(NR),DY(NR),YD(NR),YF(NR),TOLER,FE(3,3)
      REAL*8 TOUTMS(5,24,6), HSR(5,24,24),Q(3,3),LG(3),ID6(6)
      REAL*8 HOOKF(6,6),GAMSNS(3,3),FP(3,3)
      REAL*8 CRIT,SGNS,EXPBP(24)
      CHARACTER*8  TYPMOD
      CHARACTER*16 CPMONO(5*NMAT+1),COMP(*),NOMFAM
C     ----------------------------------------------------------------
      COMMON /TDIM/   NDT , NDI
C     ----------------------------------------------------------------
      DATA ID6/1.D0,1.D0,1.D0,0.D0,0.D0,0.D0/
C
      DT=TIMEF-TIMED
C
C                 -1                     -1
C -   HOOKF, HOOKD , DFDS , FETFE6 = HOOKD  SIGD + DEPS - DEPSP
C
      IF (MATERF(NMAT).EQ.0) THEN
         CALL LCOPIL  ( 'ISOTROPE' , TYPMOD , MATERD(1) , DKOOH )
         CALL LCOPIL  ( 'ISOTROPE' , TYPMOD , MATERF(1) , FKOOH )
         CALL LCOPLI  ( 'ISOTROPE' , TYPMOD , MATERF(1) , HOOKF )
      ELSEIF (MATERF(NMAT).EQ.1) THEN
         CALL LCOPIL  ( 'ORTHOTRO' , TYPMOD , MATERD(1) , DKOOH )
         CALL LCOPIL  ( 'ORTHOTRO' , TYPMOD , MATERF(1) , FKOOH )
         CALL LCOPLI  ( 'ORTHOTRO' , TYPMOD , MATERF(1) , HOOKF )
      ENDIF

      IF (COMP(3)(1:5).NE.'PETIT') THEN
C Y contient : SIGF=PK2 (sans les SQRT(2) !), puis les alpha_s
         CALL LCEQVN(NDT,YF(1),SIGF)
C        CONTRAINTES PK2          
C Y contient : FeTFe - Id, puis les alpha_s
         CALL LCPRMV(FKOOH,SIGF,FETFE6)
         CALL DSCAL(6,2.D0,FETFE6,1)
         CALL R8INIR(6,0.D0,DEVI,1)
         CALL R8INIR(9,0.D0,GAMSNS,1)
         CALL DAXPY(6,1.D0,ID6,1,FETFE6,1)
      ELSE
         CALL LCEQVN(NDT,YF(1),SIGF)
         CALL R8INIR(6,0.D0,DEVI,1)
      ENDIF
      NBFSYS=NBCOMM(NMAT,2)
      IRET=0
      

C     NSFA : debut de la famille IFA dans DY et YD, YF
      NSFA=6
C     NSFV : debut de la famille IFA dans les variables internes
      NSFV=6

      DO 6 IFA=1,NBFSYS
      
         IFL=NBCOMM(IFA,1)           
         NUECOU=NINT(MATERF(NMAT+IFL))
         NOMFAM=CPMONO(5*(IFA-1)+1)       

         CALL LCMMSG(NOMFAM,NBSYS,0,PGL,MS,NG,LG,0,Q)

         DO 7 IS=1,NBSYS

            CALL LCMMLC(COMP,NMAT,NBCOMM,CPMONO,PGL,TOUTMS,HSR,NSFV,
     &      NSFA,IFA,NBSYS,IS,DT,NVI,VIND,SIGF,FETFE6,YD,DY,
     &      ITMAX,TOLER,MATERF,EXPBP,NUECOU,
     &      TAUS,DALPHA,DGAMMA,DP,CRIT,SGNS,RP,MSNS,MS,IRET)

            IF (IRET.GT.0) GOTO 9999

            IF ((NUECOU.EQ.4).OR.(NUECOU.EQ.5)) THEN
C              POUR KOCKS-RAUCH ALPHA représente la variable principale
               R(NSFA+IS)=-(DY(NSFA+IS)-DALPHA)
            ELSE
               DGAMM1=DY(NSFA+IS)
               R(NSFA+IS)=-(DGAMM1-DGAMMA)
            ENDIF

            IF (COMP(3)(1:5).EQ.'PETIT') THEN
               CALL DAXPY(6,DGAMMA,MS,1,DEVI,1)
            ELSE
               CALL DAXPY(9,DGAMMA,MSNS,1,GAMSNS,1)
            ENDIF
  7     CONTINUE

        NSFA=NSFA+NBSYS
        NSFV=NSFV+NBSYS*3

  6   CONTINUE

      IF (COMP(3)(1:5).NE.'PETIT') THEN
         CALL CALCFE(NR,NDT,VIND,DEPS,GAMSNS,FE,FP,IRET)       
         IF (IRET.GT.0) GOTO 9999
         CALL LCGRLA ( FE,FETFE6)
         CALL LCPRMV ( FKOOH,   SIGF  , H1SIGF )
         CALL LCDIVE ( FETFE6,   H1SIGF  , R(1) )
      ELSE      
         CALL LCEQVN ( NDT , YD(1)       , SIGD)
         CALL LCPRMV ( DKOOH,   SIGD  , EPSED )
         CALL LCDIVE ( DEPS ,   DEVI  , DEPSE )
         CALL LCSOVE ( EPSED,   DEPSE , EPSEF )
C LA PREMIERE EQUATION EST  (HF-1)SIGF -(HD-1)SIGD -(DEPS-DEPSP)=0
         CALL LCPRMV ( FKOOH,   SIGF  , H1SIGF )
         CALL LCDIVE ( EPSEF,   H1SIGF  , R(1) )
      ENDIF
      
9999  CONTINUE
      END
