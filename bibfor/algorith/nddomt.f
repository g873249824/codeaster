      SUBROUTINE NDDOMT (METHOD,PARMEI,PARMER)
C            CONFIGURATION MANAGEMENT OF EDF VERSION
C MODIF ALGORITH  DATE 23/02/2000   AUTEUR GJBHHEL E.LORENTZ 
C ======================================================================
C COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
C THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
C (AT YOUR OPTION) ANY LATER VERSION.                                 
C
C THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
C WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
C MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
C GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
C
C YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
C ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
C    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
C ======================================================================
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*16       METHOD(5)
      INTEGER                   PARMEI(3)
      REAL*8                           PARMER(1)
C ----------------------------------------------------------------------
C     SAISIE DES DONNEES DE LA METHODE DE RESOLUTION
C
C OUT METHOD  : DESCRIPTION DE LA METHODE DE RESOLUTION
C               METHOD(1): NOM DE LA METHODE NON LINEAIRE : NEWTON
C               METHOD(2): TYPE DE MATRICE (TANGENTE OU ELASTIQUE)
C               METHOD(3): (DECHARGE OU RIEN)       --> PAS UTILISE
C               METHOD(4): (NON , BGFGS OU BROYDEN) --> PAS UTILISE
C               METHOD(5): METHODE D'INITIALISATION
C OUT PARMEI  : PARAMETRES ENTIERS DE LA METHODE
C               PARMEI(1) = REAC_INCR
C               PARMEI(2) = REAC_ITER
C               PARMEI(3) = ITER_LINE_MAXI
C OUT PARMER  : PARAMETRES REELS DE LA METHODE
C               PARMER(1) = RESI_LINE_RELA
C
C ----------------------------------------------------------------------
      INTEGER            IOCC
      CHARACTER*8        K8BID
      CHARACTER*16       K16BID,NOMCMD
C DEB ------------------------------------------------------------------
      CALL GETFAC('NEWTON',IOCC)
      IF ( IOCC .EQ. 1 ) THEN
        METHOD(1) = 'NEWTON'
        METHOD(3) = 'RIEN'
        METHOD(4) = 'NON'
        CALL GETVTX('NEWTON','MATRICE',1,1,1,METHOD(2),N1)
        IF ( METHOD(2)(1:8) .EQ. 'TANGENTE' ) THEN
          CALL GETVIS('NEWTON','REAC_INCR',1,1,1,PARMEI(1),N1)
          IF(PARMEI(1).LE.0) THEN
            CALL UTMESS('F','NMDOMT_1',' REAC_INCR NEGATIF')
          ENDIF
          CALL GETVIS('NEWTON','REAC_ITER',1,1,1,PARMEI(2),N1)
          IF(PARMEI(2).LT.0) THEN
            CALL UTMESS('F','NMDOMT_2',' REAC_ITER NEGATIF')
          ENDIF
        ENDIF
        CALL GETVTX('NEWTON','PREDICTION',1,1,1,METHOD(5),N1)
        IF (N1.EQ.0) METHOD(5) = METHOD(2)
        IF (METHOD(2).EQ.'ELASTIQUE'.AND.METHOD(5).EQ.'TANGENTE')
     &    METHOD(5) = 'ELASTIQUE'
C
        CALL GETRES (K8BID,K16BID,NOMCMD)
        IF ((NOMCMD(1:13).EQ.'STAT_NON_LINE').OR.
     &      (NOMCMD(1:14).EQ.'THER_MECA_NOLI')) THEN
          CALL GETVR8('NEWTON','RESI_LINE_RELA',1,1,1,PARMER(1),N1)
          CALL GETVIS('NEWTON','ITER_LINE_MAXI',1,1,1,PARMEI(3),N1)
        END IF
      ENDIF
C FIN ------------------------------------------------------------------
      END
