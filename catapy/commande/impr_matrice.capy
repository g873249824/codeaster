#& MODIF COMMANDE  DATE 09/10/2002   AUTEUR DURAND C.DURAND 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================
IMPR_MATRICE=PROC(nom="IMPR_MATRICE",op= 159,
                  fr="Impression des matrices élémentaires et des matrices assemblées",
                  docu="U7.04.32-c",
            UIinfo={"groupes":("Impression",)},
         regles=(AU_MOINS_UN('MATR_ELEM','MATR_ASSE'),),
         
         MATR_ELEM       =FACT(statut='f',min=1,max='**',
           FICHIER         =SIMP(statut='f',typ='TXM' ),
           FORMAT          =SIMP(statut='f',typ='TXM',defaut="IDEAS",
                                 into=("IDEAS","RESULTAT") ),
           b_format      =BLOC(condition = "FORMAT == 'IDEAS'",
             VERSION         =SIMP(statut='f',typ='I',defaut= 5,into=( 5 ,) ),
           ),
#  créer les types matr_elem  et vect_elem        
           MATRICE         =SIMP(statut='o',typ=(matr_elem, vect_elem)),
#  Quelle regle pour TOUT, NOEUD, GROUP_NO, MAILLE, GROUP_MA           
           TOUT            =SIMP(statut='f',typ='TXM',into=("OUI",) ),
           NOEUD           =SIMP(statut='f',typ=no,max='**'),
           GROUP_NO        =SIMP(statut='f',typ=grno,max='**'),
           MAILLE          =SIMP(statut='f',typ=ma,max='**'),
           GROUP_MA        =SIMP(statut='f',typ=grma,max='**'),
           NOM_CMP         =SIMP(statut='f',typ='TXM',max='**'),
           GRAIN           =SIMP(statut='f',typ='TXM',defaut="VALEUR",
                                 into=("VALEUR","NOEUD","MAILLE") ),
           NB_CHIFFRE      =SIMP(statut='f',typ='I',defaut= 4 ),
         ),
         MATR_ASSE       =FACT(statut='f',min=1,max='**',
           FICHIER         =SIMP(statut='f',typ='TXM' ),
           FORMAT          =SIMP(statut='f',typ='TXM',defaut="IDEAS",
                                 into=("IDEAS","RESULTAT") ),
           VERSION         =SIMP(statut='f',typ='I',defaut= 5,into=( 5 ,) ),
#  créer le type matr_elem           
           MATRICE         =SIMP(statut='o',typ=matr_asse),
#  Quelle regle pour TOUT, NOEUD, GROUP_NO, MAILLE, GROUP_MA                      
           TOUT            =SIMP(statut='f',typ='TXM',into=("OUI",) ),
           NOEUD           =SIMP(statut='f',typ=no,max='**'),
           GROUP_NO        =SIMP(statut='f',typ=grno,max='**'),
           MAILLE          =SIMP(statut='f',typ=ma,max='**'),
           GROUP_MA        =SIMP(statut='f',typ=grma,max='**'),
           OPTION          =SIMP(statut='f',typ='TXM',defaut="SOUS_MATRICE",
                                 into=("SOUS_MATRICE","LIGNE","COLONNE") ),
           NOM_CMP         =SIMP(statut='f',typ='TXM',max='**'),
           GRAIN           =SIMP(statut='f',typ='TXM',defaut="VALEUR",
                                 into=("VALEUR","NOEUD") ),
           NB_CHIFFRE      =SIMP(statut='f',typ='I',defaut= 4 ),
           VALE_ZERO       =SIMP(statut='f',typ='R',defaut= 0.E+0 ),
         ),
)  ;
