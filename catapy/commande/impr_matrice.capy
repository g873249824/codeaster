#& MODIF COMMANDE  DATE 08/02/2005   AUTEUR CIBHHLV L.VIVAN 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
IMPR_MATRICE=PROC(nom="IMPR_MATRICE",op= 159,
                  fr="Impression des matrices élémentaires et des matrices assemblées",
                  UIinfo={"groupes":("Impression",)},
                  regles=(AU_MOINS_UN('MATR_ELEM','MATR_ASSE'),),
# ======================================================================
   MATR_ELEM       =FACT(statut='f',max='**',
#
           MATRICE     =SIMP(statut='o',typ=(matr_elem, vect_elem)),
           FORMAT      =SIMP(statut='f',typ='TXM',defaut="IDEAS",
                                 into=("IDEAS","RESULTAT") ),
#
         b_format_ideas  =BLOC(condition="FORMAT=='IDEAS'",fr="unité logique d'impression et version IDEAS",
           UNITE       =SIMP(statut='f',typ='I',defaut=30),  
           VERSION     =SIMP(statut='f',typ='I',defaut= 5,into=( 5 ,), ),  ),
#
         b_format_resultat  =BLOC(condition="FORMAT=='RESULTAT'",fr="unité logique d'impression au format RESULTAT",
                             regles=(PRESENT_ABSENT('TOUT','GROUP_MA','MAILLE','GROUP_NO','NOEUD'),),
           UNITE       =SIMP(statut='f',typ='I',defaut=8),
           TOUT        =SIMP(statut='f',typ='TXM',into=("OUI",) ),
           NOEUD       =SIMP(statut='f',typ=no   ,validators=NoRepeat(),max='**'),
           GROUP_NO    =SIMP(statut='f',typ=grno ,validators=NoRepeat(),max='**'),
           MAILLE      =SIMP(statut='f',typ=ma   ,validators=NoRepeat(),max='**'),
           GROUP_MA    =SIMP(statut='f',typ=grma ,validators=NoRepeat(),max='**'),
           NOM_CMP     =SIMP(statut='f',typ='TXM',max='**'),
           GRAIN       =SIMP(statut='f',typ='TXM',defaut="VALEUR",into=("VALEUR","NOEUD","MAILLE") ),
           NB_CHIFFRE  =SIMP(statut='f',typ='I',defaut= 4 ),  ),
         ),
# ======================================================================
   MATR_ASSE       =FACT(statut='f',max='**',
#
           MATRICE     =SIMP(statut='o',typ=matr_asse_gd),
           FORMAT      =SIMP(statut='f',typ='TXM',defaut="IDEAS",into=("IDEAS","RESULTAT") ),
# 
         b_format_ideas  =BLOC(condition="FORMAT=='IDEAS'",fr="unité logique d'impression et version IDEAS",
           UNITE       =SIMP(statut='f',typ='I',defaut=30),  
           VERSION     =SIMP(statut='f',typ='I',defaut= 5,into=( 5 ,), ),  ),
# 
         b_format_resultat  =BLOC(condition="FORMAT=='RESULTAT'",fr="unité logique d'impression au format RESULTAT",
                             regles=(PRESENT_ABSENT('TOUT','GROUP_MA','MAILLE','GROUP_NO','NOEUD'),),
           UNITE       =SIMP(statut='f',typ='I',defaut=8),
           TOUT        =SIMP(statut='f',typ='TXM',into=("OUI",) ),
           NOEUD       =SIMP(statut='f',typ=no   ,validators=NoRepeat(),max='**'),
           GROUP_NO    =SIMP(statut='f',typ=grno ,validators=NoRepeat(),max='**'),
           MAILLE      =SIMP(statut='f',typ=ma   ,validators=NoRepeat(),max='**'),
           GROUP_MA    =SIMP(statut='f',typ=grma ,validators=NoRepeat(),max='**'),
           OPTION      =SIMP(statut='f',typ='TXM',defaut="SOUS_MATRICE",into=("SOUS_MATRICE","LIGNE","COLONNE") ),
           NOM_CMP     =SIMP(statut='f',typ='TXM',max='**'),
           GRAIN       =SIMP(statut='f',typ='TXM',defaut="VALEUR",into=("VALEUR","NOEUD") ),
           NB_CHIFFRE  =SIMP(statut='f',typ='I',defaut= 4 ),
           VALE_ZERO   =SIMP(statut='f',typ='R',defaut= 0.E+0 ),  ),
         ),
# ======================================================================
)  ;
