# ======================================================================
# COPYRIGHT (C) 1991 - 2012  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# person_in_charge: irmela.zentner at edf.fr
GENE_ACCE_SEISME=MACRO(nom="GENE_ACCE_SEISME",
                     op=OPS('Macro.gene_acce_seisme_ops.gene_acce_seisme_ops'),
                     sd_prod=table_fonction,
                     fr="Generation d'accelerogrammes sismiques ",
                     reentrant='n',
                     UIinfo={"groupes":("Fonctions","Dynamique",)},

         INIT_ALEA       =SIMP(statut='f',typ='I'),
         TITRE           =SIMP(statut='f',typ='TXM',max='**'),
         INFO            =SIMP(statut='f',typ='I',defaut= 1,into=( 1 , 2) ),
         PAS_INST        =SIMP(statut='o',typ='R' ),
         NB_POIN           =SIMP(statut='f',typ='I',fr="nombre de points" ),
         PESANTEUR         =SIMP(statut='o', typ='R', fr="constante de normalisation de ACCE_MAX, ECART_TYPE et INTE_ARIAS (g) ou le spectre" ),
         DUREE_PHASE_FORTE =SIMP(statut='o',typ='R',fr="dur√©e phase forte du signal" ),
         NB_TIRAGE        =SIMP(statut='f',typ='I',defaut= 1,fr="nombre accelerogrammes" ),
         FREQ_FILTRE       =SIMP(statut='f',typ='R',fr="frequence du filtre: corner frequency"),
#
         DSP        = FACT(statut='f',max=1,     
            AMOR_REDUIT   =SIMP(statut='o',typ='R'),
            FREQ_FOND     =SIMP(statut='o',typ='R', fr="frequence centrale"),
            FREQ_PENTE    =SIMP(statut='f',typ='R',  fr="pente pour l'evolution de la frequence centrale"),        
        ),
         SPEC_MEDIANE    = FACT(statut='f',max=1,
        regles=(ENSEMBLE('ERRE_ZPA','ERRE_MAX','ERRE_RMS'),EXCLUS('FREQ_PAS','LIST_FREQ'),),
            SPEC_OSCI       =SIMP(statut='o',typ=(fonction_sdaster),),
            AMOR_REDUIT     =SIMP(statut='o', typ='R', val_min=0., val_max=1.),
            FREQ_PAS      =SIMP(statut='f',typ='R' , fr="pas"),      
            LIST_FREQ       =SIMP(statut='f', typ=listr8_sdaster ),            
            NB_ITER      =SIMP(statut='f',typ='I' ,defaut=0, val_min=0,fr="nombre d'iterations pour fitter le spectre"  ,),
            ERRE_ZPA      =SIMP(statut='f',typ='R' ,defaut=(1.,0.2), min=1,max=2,  fr="coef et erreur maxi ZPA",),
            ERRE_MAX      =SIMP(statut='f',typ='R' ,defaut=(0.5,0.2), min=1,max=2,  fr="coef et erreur maxi global",),
            ERRE_RMS      =SIMP(statut='f',typ='R' ,defaut=(0.5,0.2), min=1,max=2,  fr="coef et erreur maxi rms",),
            FREQ_PENTE    =SIMP(statut='f',typ='R',  fr="pente pour l'evolution de la frequence centrale"), 
            METHODE         =SIMP(statut='f',typ='TXM',defaut="HARMO",into=("NIGAM","HARMO") ),            
        ),
         SPEC_UNIQUE    = FACT(statut='f',max=1,
        regles=(ENSEMBLE('ERRE_ZPA','ERRE_MAX','ERRE_RMS'),EXCLUS('FREQ_PAS','LIST_FREQ'),),
            ERRE_ZPA      =SIMP(statut='f',typ='R' ,defaut=(1.,0.2), min=1,max=2,  fr="coef et erreur maxi ZPA",),
            ERRE_MAX      =SIMP(statut='f',typ='R' ,defaut=(0.5,0.2), min=1,max=2,  fr="coef et erreur maxi global",),
            ERRE_RMS      =SIMP(statut='f',typ='R' ,defaut=(0.5,0.2), min=1,max=2,  fr="coef et erreur maxi rms",),
            SPEC_OSCI       =SIMP(statut='o',typ=(fonction_sdaster),),
            AMOR_REDUIT     =SIMP(statut='o', typ='R', val_min=0., val_max=1.),
            FREQ_PAS      =SIMP(statut='f',typ='R' , fr="pas"),
            LIST_FREQ       =SIMP(statut='f', typ=listr8_sdaster ),
            NB_ITER      =SIMP(statut='f',typ='I' ,defaut=0, val_min=0,fr="nombre d'iterations pour fitter le spectre" ,),
            METHODE         =SIMP(statut='f',typ='TXM',defaut="HARMO",into=("NIGAM","HARMO") ),    
        ),
#       
         SPEC_FRACTILE    = FACT(statut='f',max=1,
        regles=(ENSEMBLE('ERRE_ZPA','ERRE_MAX','ERRE_RMS'), EXCLUS('FREQ_PAS','LIST_FREQ'),),
            SPEC_OSCI       =SIMP(statut='o',typ=(fonction_sdaster),),
            SPEC_1_SIGMA       =SIMP(statut='o',typ=(fonction_sdaster),),  
            AMOR_REDUIT     =SIMP(statut='o', typ='R', val_min=0., val_max=1.),
            FREQ_PAS      =SIMP(statut='f',typ='R' , fr="pas"),    
            LIST_FREQ       =SIMP(statut='f', typ=listr8_sdaster ),               
           FREQ_PENTE    =SIMP(statut='f',typ='R',  fr="pente pour l'evolution de la frequence centrale"),           
        ),


         regles=(UN_PARMI('DSP','SPEC_MEDIANE','SPEC_UNIQUE','SPEC_FRACTILE'),),    
         MODULATION      = FACT(statut='o',max=1, 
            regles=(EXCLUS('ACCE_MAX','INTE_ARIAS','ECART_TYPE'),),         
            TYPE         = SIMP(statut='o',typ='TXM' , into=("GAMMA","JENNINGS_HOUSNER","CONSTANT")),
            ACCE_MAX     = SIMP(statut='f',typ='R',fr="PGA: acceleration max au sol (g)" ),
            ECART_TYPE   = SIMP(statut='f',typ='R',fr="ecart-type" ),
            INTE_ARIAS   = SIMP(statut='f',typ='R',fr="intensite d'Arias" ),
              c_type_mod   = BLOC(condition="TYPE=='GAMMA' ",
                           INST_INI     = SIMP(statut='o',typ='R',fr="instant debut phase forte" ),
                            ),
            ),
)  ;
 
