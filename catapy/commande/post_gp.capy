#& MODIF COMMANDE  DATE 31/10/2006   AUTEUR REZETTE C.REZETTE 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                  
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================

from Macro.post_gp_ops import post_gp_ops
def post_gp_prod(self, TABL_RESU, **kargs):
   """Typage des sd_prod
   """
   if TABL_RESU != None:
      self.type_sdprod(TABL_RESU, table_sdaster)
   return table_sdaster

POST_GP=MACRO(nom="POST_GP", op=post_gp_ops, sd_prod=post_gp_prod,
              fr="Calcul du critère énergétique Gp suite à un calcul thermo-mécanique",
              reentrant='n',
              UIinfo={"groupes":("Post traitements",)},
              regles=(AU_MOINS_UN('IDENTIFICATION', 'PREDICTION'),),
      
      # Résultat, modèle, comportement, chargement
      RESULTAT     = SIMP(statut='o',typ=(evol_elas,evol_noli,dyna_trans,mode_meca),),
      RESU_THER    = SIMP(statut='f',typ=evol_ther,),
      MODELE       = SIMP(statut='o',typ=modele_sdaster),
      MATER        = SIMP(statut='o',typ=mater_sdaster),
      
      COMP_ELAS    = FACT(statut='o',
            RELATION    = SIMP(statut='f',typ='TXM',defaut="ELAS",
                            into=("ELAS","ELAS_VMIS_LINE","ELAS_VMIS_TRAC"),),
            DEFORMATION = SIMP(statut='f',typ='TXM',defaut="PETIT",into=("PETIT","GREEN"),),
      ),
      
      EXCIT        = FACT(statut='f', max='**',
            CHARGE      = SIMP(statut='o', typ=(char_meca,char_cine_meca)),
            FONC_MULT   = SIMP(statut='f', typ=(fonction_sdaster,nappe_sdaster,formule)),
            TYPE_CHARGE = SIMP(statut='f', typ='TXM', defaut="FIXE", into=("FIXE",)),
      ),
      SYME_CHAR    = SIMP(statut='f',typ='TXM',defaut="SANS",into=("SYME","ANTI","SANS")),
      
      DIRECTION    = SIMP(statut='o', typ='R', max=3),
      THETA_2D     = FACT(statut='o', max='**',
                          fr="paramètres de définition des champs theta",
            GROUP_NO    = SIMP(statut='o', typ=grno, validators=NoRepeat(), max='**'),
            R_INF       = SIMP(statut='o', typ='R'),
            R_SUP       = SIMP(statut='o', typ='R'),
      ),
      
      # copeaux
      GROUP_MA     = SIMP(statut='o', typ=grma, validators=NoRepeat(), max='**'),
      PAS_ENTAILLE = SIMP(statut='o', typ='R', val_min=0.),
      
      # critère sur Gp
      CRIT_MAXI_GP = SIMP(statut='f', typ='TXM', defaut="ABSOLU",
                          into=("RELATIF","ABSOLU")),
      
      # correction axisymétrie
      RAYON_AXIS   = SIMP(statut='f', typ='R', val_min=0., defaut=1.),
      
      # identification
      IDENTIFICATION = FACT(statut='f', max=1,
            KJ_CRIT     = SIMP(statut='o', typ='R', val_min=0., max='**'),
            TEMP        = SIMP(statut='o', typ='R', val_min=0., max='**'),
      ),
      
      # prédiction
      PREDICTION   = FACT(statut='f', max=1,
            GP_CRIT     = SIMP(statut='o', typ='R', val_min=0., max='**'),
            TEMP        = SIMP(statut='o', typ='R', val_min=0., max='**'),
      ),
      
      # table résultat
      TABL_RESU    = SIMP(statut='o', typ=CO,),
      
      INFO         = SIMP(statut='f', typ='I', defaut=1, into=(1, 2),),
)
