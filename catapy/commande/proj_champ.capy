#& MODIF COMMANDE  DATE 22/04/2003   AUTEUR MCOURTOI M.COURTOIS 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================
# RESPONSABLE VABHHTS J.PELLET
def proj_champ_prod(RESULTAT=None,CHAM_NO_REFE=None,**args ):
    if AsType(RESULTAT)     == evol_ther      : return evol_ther
    if AsType(RESULTAT)     == evol_elas      : return evol_elas
    if AsType(RESULTAT)     == evol_noli      : return evol_noli
    if AsType(RESULTAT)     == evol_char      : return evol_char
    if AsType(CHAM_NO_REFE) == cham_no_depl_r : return cham_no_depl_r
    if AsType(CHAM_NO_REFE) == cham_no_depl_c : return cham_no_depl_c
    if AsType(CHAM_NO_REFE) == cham_no_pres_c : return cham_no_pres_c
    if AsType(CHAM_NO_REFE) == cham_no_temp_r : return cham_no_temp_r
    if AsType(CHAM_NO_REFE) == cham_no_epsi_r : return cham_no_epsi_r
    if AsType(CHAM_NO_REFE) == cham_no_sief_r : return cham_no_sief_r
    if AsType(CHAM_NO_REFE) == cham_no_flux_r : return cham_no_flux_r
    raise AsException("type de concept resultat non prevu")

PROJ_CHAMP=OPER(nom="PROJ_CHAMP",op= 166,sd_prod=proj_champ_prod,docu="U4.72.05-d",reentrant='n',
            UIinfo={"groupes":("Résultats et champs",)},
                fr="Projection d'un champ aux noeuds sur les noeuds d'un autre maillage",
#
         METHODE         =SIMP(statut='f',typ='TXM',defaut="NUAGE_DEG_1",
                               into=("NUAGE_DEG_0","NUAGE_DEG_1","ELEM",) ),
         b_nuage         =BLOC(condition="(METHODE=='NUAGE_DEG_1') or (METHODE=='NUAGE_DEG_0')",
                               fr="Lissage d'un nuage de points",
           CHAM_NO         =SIMP(statut='o',typ=(cham_no_depl_r,cham_no_depl_c,cham_no_pres_c,cham_no_temp_r,
                                                 cham_no_epsi_r,cham_no_sief_r,cham_no_flux_r)),
           CHAM_NO_REFE    =SIMP(statut='o',typ=(cham_no_depl_r,cham_no_depl_c,cham_no_pres_c,cham_no_temp_r,
                                                 cham_no_epsi_r,cham_no_sief_r,cham_no_flux_r)),
         ),
         b_elem          =BLOC(condition="METHODE=='ELEM'",
                              fr="Utilisation des fonctions de forme du maillage initial",
           regles=(EXCLUS('TOUT_ORDRE','NUME_ORDRE','INST','FREQ','LIST_INST','LIST_FREQ','LIST_ORDRE'),
                   EXCLUS('TOUT_CHAM','NOM_CHAM',), ),
           RESULTAT        =SIMP(statut='o',typ=(evol_ther,evol_elas,evol_noli,evol_char) ),
           MODELE_1        =SIMP(statut='o',typ=modele),
           MODELE_2        =SIMP(statut='o',typ=modele),

           TOUT_CHAM       =SIMP(statut='f',typ='TXM',into=("OUI",) ),
           NOM_CHAM        =SIMP(statut='f',typ='TXM',max='**'),

           TOUT_ORDRE      =SIMP(statut='f',typ='TXM',into=("OUI",) ),
           NUME_ORDRE      =SIMP(statut='f',typ='I',max='**' ),
           LIST_ORDRE      =SIMP(statut='f',typ=listis),
           INST            =SIMP(statut='f',typ='R',max='**' ),
           LIST_INST       =SIMP(statut='f',typ=listr8),
           FREQ            =SIMP(statut='f',typ='R',max='**' ),
           LIST_FREQ       =SIMP(statut='f',typ=listr8),
         ),

         VIS_A_VIS       =FACT(statut='f',min=1,max='**',
           regles=(AU_MOINS_UN('TOUT_1','GROUP_MA_1','MAILLE_1','GROUP_NO_1','NOEUD_1'),
                   AU_MOINS_UN('TOUT_2','GROUP_MA_2','MAILLE_2','GROUP_NO_2','NOEUD_2'),),
           TOUT_1          =SIMP(statut='f',typ='TXM',into=("OUI",) ),
           GROUP_MA_1      =SIMP(statut='f',typ=grma,max='**'),
           MAILLE_1        =SIMP(statut='f',typ=ma,max='**'),
           GROUP_NO_1      =SIMP(statut='f',typ=grno,max='**'),
           NOEUD_1         =SIMP(statut='f',typ=no,max='**'),
           TOUT_2          =SIMP(statut='f',typ='TXM',into=("OUI",) ),
           GROUP_MA_2      =SIMP(statut='f',typ=grma,max='**'),
           MAILLE_2        =SIMP(statut='f',typ=ma,max='**'),
           GROUP_NO_2      =SIMP(statut='f',typ=grno,max='**'),
           NOEUD_2         =SIMP(statut='f',typ=no,max='**'),
         ),

         TITRE           =SIMP(statut='f',typ='TXM',max='**' ),
)  ;
