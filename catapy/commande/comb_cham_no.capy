#& MODIF COMMANDE  DATE 22/04/2003   AUTEUR MCOURTOI M.COURTOIS 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2001  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================
# RESPONSABLE G8BHHXD X.DESROCHES
def comb_cham_no_prod(COMB_R,COMB_C,COMB_FOURIER,**args):
  if COMB_C != None:
    type_mat = AsType(COMB_C.get_child('CHAM_NO').get_valeur())
    if type_mat in  (cham_no_depl_c,cham_no_depl_r) : return cham_no_depl_c
    if type_mat in  (cham_no_temp_c,cham_no_temp_r) : return cham_no_temp_c
    if type_mat in  (cham_no_pres_c,cham_no_pres_r) : return cham_no_pres_c
  elif COMB_R != None:
    type_mat = AsType(COMB_R.get_child('CHAM_NO').get_valeur())
    if type_mat in  (cham_no_depl_c,cham_no_depl_r) : return cham_no_depl_r
    if type_mat in  (cham_no_temp_c,cham_no_temp_r) : return cham_no_temp_r
    if type_mat in  (cham_no_pres_c,cham_no_pres_r) : return cham_no_pres_r
    if type_mat ==  matr_asse_gene_r : return matr_asse_gene_r
  elif COMB_FOURIER != None:
    type_mat = AsType(COMB_FOURIER.get_child('CHAM_NO').get_valeur())
    if type_mat == cham_no_temp_r : return cham_no_temp_r
    if type_mat == cham_no_depl_r : return cham_no_depl_r
  raise AsException("type de concept resultat non prevu")


COMB_CHAM_NO=OPER(nom="COMB_CHAM_NO",op=  30,sd_prod=comb_cham_no_prod
                    ,fr="Combinaison linéaire de champs aux noeuds",
                     docu="U4.72.02-g",reentrant='f',
            UIinfo={"groupes":("Résultats et champs",)},
         regles=(UN_PARMI('COMB_R','COMB_C','COMB_FOURIER'),),
         COMB_R          =FACT(statut='f',min=1,max='**',
           PARTIE          =SIMP(statut='f',typ='TXM',into=("REEL","IMAG",) ),
           CHAM_NO         =SIMP(statut='o',typ=(cham_no_temp_r,cham_no_temp_c,cham_no_depl_r,cham_no_depl_c
                                                ,cham_no_pres_r,cham_no_pres_c ) ),
           COEF_R          =SIMP(statut='o',typ='R' ),
         ),
         COMB_C          =FACT(statut='f',min=1,max='**',
           regles=(UN_PARMI('COEF_R','COEF_C' ),),
           CHAM_NO         =SIMP(statut='o',typ=(cham_no_temp_r,cham_no_depl_r,cham_no_pres_r,cham_no_temp_c
                                                ,cham_no_depl_c,cham_no_pres_c ) ),
           COEF_R          =SIMP(statut='f',typ='R' ),
           COEF_C          =SIMP(statut='f',typ='C' ),
         ),
         COMB_FOURIER    =FACT(statut='f',min=1,max='**',
           CHAM_NO         =SIMP(statut='o',typ=(cham_no_temp_r,cham_no_depl_r) ),
           COEF_R          =SIMP(statut='f',typ='R',defaut= 1. ),
           NUME_MODE       =SIMP(statut='o',typ='I' ),
           TYPE_MODE       =SIMP(statut='o',typ='TXM',into=("SYME","ANTI") ),
         ),
         b_angl = BLOC ( condition = "COMB_FOURIER != None",
           ANGL            =SIMP(statut='o',typ='R' ),
         ),
)  ;
