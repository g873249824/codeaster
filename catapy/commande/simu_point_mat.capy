#& MODIF COMMANDE  DATE 07/07/2009   AUTEUR REZETTE C.REZETTE 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2006  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                  
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# RESPONSABLE PROIX J.M.PROIX
# -*- coding: iso-8859-1 -*-

from Macro.simu_point_mat_ops import simu_point_mat_ops

SIMU_POINT_MAT=MACRO(nom="SIMU_POINT_MAT", op=simu_point_mat_ops,sd_prod=table_sdaster,
                   UIinfo={"groupes":("Résolution",)},
                   fr="Calcul de l'évolution mécanique, en quasi-statique,"
                      +" d'un point matériel en non linéaire",
   COMP_INCR       =C_COMP_INCR(),
   COMP_ELAS       =FACT(statut='f',max='**',
           RESI_INTE_RELA  =SIMP(statut='f',typ='R',defaut= 1.0E-6),
           ITER_INTE_MAXI  =SIMP(statut='f',typ='I',defaut= 10 ),
           RELATION        =SIMP(statut='o',typ='TXM',defaut="ELAS",
                                 into=("ELAS","ELAS_VMIS_LINE","ELAS_VMIS_TRAC",
                                      "ELAS_POUTRE_GR","CABLE","ELAS_HYPER")),
           DEFORMATION     =SIMP(statut='f',typ='TXM',defaut="PETIT" ,into=("PETIT","GREEN","GREEN_GR",) ),
         ),
   MATER           =SIMP(statut='o',typ=mater_sdaster,max=30),
## ANGLE : rotation de ANGLE autour de Z uniquement, et seulement pour les déformations imposées.
   ANGLE      =SIMP(statut='f',typ='R',max=1, defaut=0.),
# --MASSIF : orientation du materiau (monocristal, orthotropie)
   MASSIF          =FACT(statut='f',max='**',
     regles=(UN_PARMI('ANGL_REP','ANGL_EULER'),),
     ANGL_REP        =SIMP(statut='f',typ='R',max=3),
     ANGL_EULER      =SIMP(statut='f',typ='R',min=3,max=3),
   ),
   INCREMENT       =C_INCREMENT(),
   NEWTON          =C_NEWTON(),
   RECH_LINEAIRE   =C_RECH_LINEAIRE(),                                      
   CONVERGENCE     =C_CONVERGENCE(),
   SUIVI_DDL      = FACT(statut='f',max=4,                                                                   
       NUME_SUIVI      =SIMP(statut='o',typ='I' ,min=1,max=4),                                               
       NOM_CHAM        =SIMP(statut='o',typ='TXM',validators=NoRepeat(),max=1,                               
                             into=("DEPL","SIEF_ELGA","VARI_ELGA",)),                                        
       NOM_CMP         =SIMP(statut='o',typ='TXM',max=1 ),                                                   
   ),                                                                                                        
   ARCHIVAGE       =FACT(statut='f',
     regles=(EXCLUS('PAS_ARCH','LIST_INST','INST'),
            EXCLUS('ARCH_ETAT_INIT','NUME_INIT'), ),  
     LIST_INST       =SIMP(statut='f',typ=(listr8_sdaster) ),                                                 
     INST            =SIMP(statut='f',typ='R',validators=NoRepeat(),max='**' ),
     PAS_ARCH        =SIMP(statut='f',typ='I' ),
     PRECISION       =SIMP(statut='f',typ='R',defaut= 1.E-6),
     ARCH_ETAT_INIT  =SIMP(statut='f',typ='TXM',into=("OUI",)),
     NUME_INIT       =SIMP(statut='f',typ='I'),
     DETR_NUME_SUIV  =SIMP(statut='f',typ='TXM',into=("OUI",)),
     CHAM_EXCLU      =SIMP(statut='f',typ='TXM',validators=NoRepeat(),max='**',
            into=("DEPL","SIEF_ELGA","VARI_ELGA","LANL_ELGA")),
            ),       
   MODELISATION  =SIMP(statut='f',typ='TXM',defaut="3D",validators=NoRepeat(),max=1,
                       into=("3D","C_PLAN","D_PLAN",)),                                                       
   b_3D = BLOC(condition="MODELISATION ==  '3D'",
                       fr="Trajets de chargement en 3D",                    
          SIGM_IMPOSE=FACT(statut='f',
                 SIXX = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 SIYY = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 SIZZ = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 SIXY = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 SIXZ = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 SIYZ = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                            ),
          EPSI_IMPOSE=FACT(statut='f',
                 EPXX = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 EPYY = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 EPZZ = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 EPXY = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 EPXZ = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                 EPYZ = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                            ),
            ),
            
   b_2D = BLOC(condition="MODELISATION !=  '3D'",
                    fr="Trajets de chargement en 2D",
                    
         SIGM_IMPOSE=FACT(statut='f',
                SIXX = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                SIYY = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                SIXY = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                           ),
         EPSI_IMPOSE=FACT(statut='f',
                EPXX = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                EPYY = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                EPXY = SIMP(statut='f',typ=(fonction_sdaster,nappe_sdaster,formule) ),
                           ),
             ),

   b_3Dini = BLOC(condition="MODELISATION ==  '3D'",
                      fr="Etat initial en 3D",                    
          SIGM_INIT=FACT(statut='f',
                 SIXX = SIMP(statut='f',typ='R',max=1,defaut=0.0E+0),
                 SIYY = SIMP(statut='f',typ='R',max=1,defaut=0.0E+0),
                 SIZZ = SIMP(statut='f',typ='R',max=1,defaut=0.0E+0),
                 SIXY = SIMP(statut='f',typ='R',max=1,defaut=0.0E+0),
                 SIXZ = SIMP(statut='f',typ='R',max=1,defaut=0.0E+0),
                 SIYZ = SIMP(statut='f',typ='R',max=1,defaut=0.0E+0),
                            ),
          EPSI_INIT=FACT(statut='f',
                 EPXX = SIMP(statut='o',typ='R',max=1),
                 EPYY = SIMP(statut='o',typ='R',max=1),
                 EPZZ = SIMP(statut='o',typ='R',max=1),
                 EPXY = SIMP(statut='o',typ='R',max=1),
                 EPXZ = SIMP(statut='o',typ='R',max=1),
                 EPYZ = SIMP(statut='o',typ='R',max=1),
                            ),
          VARI_INIT=FACT(statut='f',
                 VALE = SIMP(statut='o',typ='R',max='**'),
                            ),
            ),
            
   b_2Dini = BLOC(condition="MODELISATION !=  '3D'",
                    fr="Etat initial en 2D",
                    
         SIGM_INIT=FACT(statut='f',
                SIXX = SIMP(statut='f',typ='R',max=1,defaut=0.0E+0),
                SIYY = SIMP(statut='f',typ='R',max=1,defaut=0.0E+0),
                SIXY = SIMP(statut='f',typ='R',max=1,defaut=0.0E+0),
                           ),
         EPSI_INIT=FACT(statut='f',
                EPXX = SIMP(statut='o',typ='R',max=1),
                EPYY = SIMP(statut='o',typ='R',max=1),
                EPXY = SIMP(statut='o',typ='R',max=1),
                           ),
          VARI_INIT=FACT(statut='f',
                 VALE    = SIMP(statut='o',typ='R',max='**'),
                            ),
             ),
   INFO            =SIMP(statut='f',typ='I',defaut=1,into=(1,2) ),
)

