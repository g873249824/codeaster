#& MODIF COMMANDE  DATE 25/01/2011   AUTEUR MACOCCO K.MACOCCO 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR   
# (AT YOUR OPTION) ANY LATER VERSION.                                 
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT 
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF          
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU    
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                            
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE   
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,       
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.      
# ======================================================================
# RESPONSABLE GALENNE E.GALENNE
from Macro.post_k1_k2_k3_ops import post_k1_k2_k3_ops
POST_K1_K2_K3=MACRO(nom="POST_K1_K2_K3",op=post_k1_k2_k3_ops,sd_prod=table_sdaster,
                   fr="Calcul des facteurs d'intensité de contraintes en 2D et en 3D par extrapolation des sauts de déplacements"
                     +" sur les lèvres de la fissure",
                   reentrant='n',
            UIinfo={"groupes":("Post-traitements","Rupture",)},

           regles=(UN_PARMI('RESULTAT','TABL_DEPL_SUP'),
                   EXCLUS('FISSURE','FOND_FISS'),
                   PRESENT_PRESENT('FISSURE','RESULTAT'),
                   PRESENT_PRESENT('FOND_FISS','VECT_K1'),
                   PRESENT_PRESENT('TABL_DEPL_SUP','VECT_K1'),
                   #PRESENT_PRESENT('RESULTAT','FOND_FISS'),
                   ),

         MODELISATION  =SIMP(statut='o',typ='TXM',
                             into=("3D","AXIS","D_PLAN","C_PLAN"),
                             fr="Modélisation cohérente avec celle utilisée pour le calcul des déplacements"),
         FOND_FISS     =SIMP(statut='f',typ=fond_fiss),
         FISSURE       =SIMP(statut='f',typ=fiss_xfem),
         NB_NOEUD_COUPE=SIMP(statut='f',typ='I',defaut=5,val_min = 3),

#        bloc correspondant a la donnee du fond de fissure pour les fissures maillees
         b_fond_fiss   =BLOC (condition="(FOND_FISS!= None)",
                         MAILLAGE      = SIMP(statut='o',typ=maillage_sdaster),
                         TYPE_MAILLAGE = SIMP(statut='f',typ='TXM',into=("LIBRE","REGLE"),defaut="REGLE"),
                         NOEUD         = SIMP(statut='f',typ=no  ,validators=NoRepeat(),max='**'),
                         GROUP_NO      = SIMP(statut='f',typ=grno,validators=NoRepeat(),max='**'),
                         SANS_NOEUD    = SIMP(statut='f',typ=no  ,validators=NoRepeat(),max='**'),
                         SANS_GROUP_NO = SIMP(statut='f',typ=grno,validators=NoRepeat(),max='**'),
                         TOUT          = SIMP(statut='f',typ='TXM',into=("OUI",) ),
                         EVOL_THER     = SIMP(statut='f',typ=(evol_ther),fr="Température sur le fond de fissure")
                         ),
#        bloc correspondant a la donnee de la fissure pour les fissures X-FEM
         b_fissure     =BLOC (condition="(FISSURE!= None)",
                         MAILLAGE      = SIMP(statut='o',typ=maillage_sdaster),
                         NB_POINT_FOND = SIMP(statut='f',typ='I' ,),
                         NUME_FOND     = SIMP(statut='f',typ='I',defaut=1),
                         DTAN_ORIG     = SIMP(statut='f',typ='R',max='**'),
                         DTAN_EXTR     = SIMP(statut='f',typ='R',max='**'),
                         ),
         MATER         =SIMP(statut='o',typ=mater_sdaster,
                             fr="Matériau homogène et isotrope cohérent avec celui utilisé pour le calcul des déplacements"),
         RESULTAT      =SIMP(statut='f',typ=(evol_elas,evol_noli),
                             fr="Déplacement des noeuds de la lèvre supérieure et inférieure"),
         TABL_DEPL_SUP =SIMP(statut='f',typ=table_sdaster,
                             fr="Table issue de post_releve_t sur les noeuds de la lèvre supérieure"),
         TABL_DEPL_INF =SIMP(statut='f',typ=table_sdaster,
                             fr="Table issue de post_releve_t sur les noeuds de la lèvre inférieure"),
         ABSC_CURV_MAXI=SIMP(statut='o',typ='R',
                             fr="Distance maximum à partir du fond de fissure à utiliser pour le calcul"),  
         PREC_VIS_A_VIS=SIMP(statut='f',typ='R',defaut=0.1),
         TOUT_ORDRE    =SIMP(statut='f',typ='TXM',into=("OUI",) ),
         NUME_ORDRE    =SIMP(statut='f',typ='I',validators=NoRepeat(),max='**'),
         LIST_ORDRE    =SIMP(statut='f',typ=listis_sdaster),
         INST          =SIMP(statut='f',typ='R',validators=NoRepeat(),max='**'),
         LIST_INST     =SIMP(statut='f',typ=listr8_sdaster),
             b_acce_reel     =BLOC(condition="(INST != None)or(LIST_INST != None)",
               CRITERE         =SIMP(statut='f',typ='TXM',defaut="RELATIF",into=("RELATIF","ABSOLU") ),
               b_prec_rela=BLOC(condition="(CRITERE=='RELATIF')",
                   PRECISION       =SIMP(statut='f',typ='R',defaut= 1.E-6,),),
               b_prec_abso=BLOC(condition="(CRITERE=='ABSOLU')",
                   PRECISION       =SIMP(statut='o',typ='R',),),
             ),
         SYME_CHAR       =SIMP(statut='f',typ='TXM',defaut="SANS",into=("SYME","SANS") ),
         INFO          =SIMP(statut='f',typ='I',defaut=1,into=(1,2)),
         VECT_K1       =SIMP(statut='f',typ='R',max=3,min=3,
                             fr="Vecteur normal au plan de fissure, orienté de la lèvre inférieure vers la lèvre supérieure"),  
         TITRE         =SIMP(statut='f',typ='TXM',max='**'),  
)  ;
