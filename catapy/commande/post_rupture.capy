#& MODIF COMMANDE  DATE 19/04/2011   AUTEUR GENIAUT S.GENIAUT 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                  
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# RESPONSABLE GENIAUT S.GENIAUT
from Macro.post_rupture_ops import post_rupture_ops
POST_RUPTURE=MACRO(nom="POST_RUPTURE",op=post_rupture_ops,sd_prod=table_sdaster,
                   fr="post-traitements en Rupture",
                   reentrant='f',
                   UIinfo={"groupes":("Résultats et champs","Rupture",)},

      TABLE     = SIMP(statut='o',typ=table_sdaster),

#     rq : il est impossible de proposer le bon choix pour OPERATION suivant la valeur de reuse...
      OPERATION = SIMP(statut='o',typ='TXM',into=(
                                                  'ABSC_CURV_NORM',
                                                  'ANGLE_BIFURCATION',
#                                                  'COMPTAGE_CYCLES',
                                                  'LOI_PROPA',
#                                                  'CUMUL_CYCLES',
                                                 )
                       ),                   

#-----------------------------------------------------------------------------------------------------------------------------------
#                 'ABSC_CURV_NORM'
#-----------------------------------------------------------------------------------------------------------------------------------


      b_absc = BLOC(condition="OPERATION == 'ABSC_CURV_NORM'",fr="normalise l'abscisse curviligne",

                    NOM_PARA = SIMP(statut='f',typ='TXM',max=1,defaut="ABSC_CURV_NORM",fr="Nom de la nouvelle colonne"),
                  
                   ),

#-----------------------------------------------------------------------------------------------------------------------------------
#                 'ANGLE_BIFURCATION'
#-----------------------------------------------------------------------------------------------------------------------------------
                  
      b_angle = BLOC(condition="OPERATION == 'ANGLE_BIFURCATION'  ",fr="Angle de bifurcation",

                     NOM_PARA = SIMP(statut='f',typ='TXM',max=1,defaut="BETA",fr="Nom de la nouvelle colonne"),
#                     CRITERE  = SIMP(statut='f',typ='TXM',max=1,defaut="SITT_MAX",into=('SITT_MAX','K1_MAX','K2_NUL','G_MAX'),),
                     CRITERE  = SIMP(statut='f',typ='TXM',max=1,defaut="SITT_MAX",into=('SITT_MAX','K1_MAX','K2_NUL'),),
                     b_mate = BLOC(condition="CRITERE == 'G_MAX'  ",fr="info pour le calcul du critere en G",
                                   MATER = SIMP(statut='o',typ=mater_sdaster,),
                                   MODELISATION  =SIMP(statut='o',typ='TXM',into=("AXIS","D_PLAN","C_PLAN"),),
                                   ),
                  
                     ),

#-----------------------------------------------------------------------------------------------------------------------------------
#                 'COMPTAGE_CYCLES'
#-----------------------------------------------------------------------------------------------------------------------------------
                  
      b_Comptage = BLOC(condition="OPERATION == 'COMPTAGE_CYCLES'  ",fr="Comptage des cycles",

                     NOM_PARA = SIMP(statut='o',typ='TXM',validators=NoRepeat(),max='**',
                                     fr="Nom des quantités sur lesquelles s'effectuent le comptage"),
                     COMPTAGE = SIMP(statut='o',typ='TXM',into=("RAINFLOW","RCCM","NATUREL","UNITAIRE")),

                     b_Comptage_Unitaire = BLOC(condition="COMPTAGE=='UNITAIRE'",
                                                fr="comptage unitaire pour les amplitudes constantes",

                                                COEF_MULT_MINI = SIMP(statut='o',typ='R',),
                                                COEF_MULT_MAXI = SIMP(statut='o',typ='R',),

                                               ),

                        ),

#-----------------------------------------------------------------------------------------------------------------------------------
#                 'LOI_PROPA'
#-----------------------------------------------------------------------------------------------------------------------------------
                  
      b_Loi_Propa   = BLOC(condition="OPERATION == 'LOI_PROPA'  ",fr="calcul de l'incrément d'avancée de fissure par cycle",

         NOM_PARA       = SIMP(statut='f',typ='TXM',defaut="DELTA_A"   ,max=1,fr="Nom de la nouvelle colonne"),
         NOM_DELTA_K_EQ = SIMP(statut='f',typ='TXM',defaut="DELTA_K_EQ",max=1,fr="Nom de la quantité correspondant au Delta_K_eq"),
         LOI            = SIMP(statut='o',typ='TXM',into=("PARIS",)),

         b_paris = BLOC(condition = "LOI=='PARIS'",
                        C = SIMP(statut='o',typ='R',),
                        M = SIMP(statut='o',typ='R',),
                       ),

                        ),

#-----------------------------------------------------------------------------------------------------------------------------------
#                 'CUMUL_CYCLES'
#-----------------------------------------------------------------------------------------------------------------------------------
                  
      b_cumul = BLOC(condition="OPERATION == 'CUMUL_CYCLES'  ",fr="Cumul sur les cycles",

                     NOM_PARA = SIMP(statut='f',typ='TXM',max=1,defaut="DELTA_A",fr="Nom de la colonne à traiter"),
                     CUMUL    = SIMP(statut='f',typ='TXM',max=1,defaut="LINEAIRE",into=('LINEAIRE',)),
                  
                     ),


#-----------------------------------------------------------------------------------------------------------------------------------

)  ;
