#& MODIF COMMUN  DATE 17/01/2011   AUTEUR ABBAS M.ABBAS 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY  
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY  
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR     
# (AT YOUR OPTION) ANY LATER VERSION.                                                  
#                                                                       
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT   
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF            
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU      
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.                              
#                                                                       
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE     
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,         
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.        
# ======================================================================
# RESPONSABLE ABBAS M.ABBAS
def C_ARCHIVAGE(COMMAND) :  #COMMUN#
    
    assert COMMAND in ('DYNA_NON_LINE','STAT_NON_LINE','THER_NON_LINE',)
    
    kwargs = {}

# ----------------------------------------------------------------------------------------------------------------------------------
#  PARAMETRES COMMUNS
# ----------------------------------------------------------------------------------------------------------------------------------
     
    kwargs['regles']         = (EXCLUS('PAS_ARCH','LIST_INST','INST'),)
    kwargs['LIST_INST']      = SIMP(statut='f',typ=(listr8_sdaster) )
    kwargs['INST']           = SIMP(statut='f',typ='R',validators=NoRepeat(),max='**' )
    kwargs['PAS_ARCH']       = SIMP(statut='f',typ='I' )
    kwargs['PRECISION']      = SIMP(statut='f',typ='R',defaut= 1.0E-6)
    kwargs['NUME_INIT']      = SIMP(statut='f',typ='I')
    kwargs['DETR_NUME_SUIV'] = SIMP(statut='f',typ='TXM',into=("OUI",))
           
# ----------------------------------------------------------------------------------------------------------------------------------
#  CHAM_EXCLU
# ----------------------------------------------------------------------------------------------------------------------------------

    if COMMAND in ('STAT_NON_LINE'):
        kwargs['CHAM_EXCLU']      = SIMP(statut='f',typ='TXM',validators=NoRepeat(),max='**',
                                         into=("DEPL","SIEF_ELGA","VARI_ELGA","VALE_CONT"))
    
    if COMMAND in ('DYNA_NON_LINE'):
        kwargs['CHAM_EXCLU']      = SIMP(statut='f',typ='TXM',validators=NoRepeat(),max='**',
                                         into=("DEPL","SIEF_ELGA","VARI_ELGA","ACCE","VITE","VALE_CONT"))
       
    if COMMAND in ('THER_NON_LINE'):
        kwargs['CHAM_EXCLU']      = SIMP(statut='f',typ='TXM',validators=NoRepeat(),max='**',
                                         into=("VARI",))
                                 
# ----------------------------------------------------------------------------------------------------------------------------------
#  ARCH_ETAT_INIT
# ----------------------------------------------------------------------------------------------------------------------------------
                                 
    if COMMAND in ('STAT_NON_LINE','DYNA_NON_LINE'):
        kwargs['ARCH_ETAT_INIT']  = SIMP(statut='f',typ='TXM',into=("OUI",))
        kwargs['NUME_INIT     ']  = SIMP(statut='f',typ='I')
 
    mcfact = FACT(statut='f',max='**', **kwargs)

    return mcfact
