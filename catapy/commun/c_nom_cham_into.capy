#& MODIF COMMUN  DATE 19/05/2011   AUTEUR MACOCCO K.MACOCCO 
#            CONFIGURATION MANAGEMENT OF EDF VERSION
# ======================================================================
# COPYRIGHT (C) 1991 - 2011  EDF R&D                  WWW.CODE-ASTER.ORG
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM; IF NOT, WRITE TO EDF R&D CODE_ASTER,
#    1 AVENUE DU GENERAL DE GAULLE, 92141 CLAMART CEDEX, FRANCE.
# ======================================================================
# RESPONSABLE VABHHTS J.PELLET
# ce fichier contient la liste des "into" possibles pour le mot cle NOM_CHAM
# c'est a dire les noms de champs des SD RESULTAT (DATA de la routine RSCRSD)

def C_NOM_CHAM_INTO( typ_cham=None ) : #COMMUN# 
  import types
# Liste de tout les champs
  l_tout_cham = [
                        "ACCE",
                        "ACCE_ABSOLU",
                        "ALPH0_ELGA_EPSP",
                        "ALPHP_ELGA_ALPH0",
                        "COMPORTEMENT",
                        "COMPORTHER",
                        "CRIT_ELNO",
                        "DEDE_ELNO",
                        "DEDE_NOEU",
                        "DEGE_ELNO",
                        "DEGE_NOEU",
                        "DEPL",
                        "DEPL_ABSOLU",
                        "DERA_ELGA",
                        "DERA_ELNO",
                        "DERA_NOEU",
                        "DESI_ELNO",
                        "DESI_NOEU",
                        "DETE_ELNO",
                        "DETE_NOEU",
                        "DISS_ELGA",
                        "DISS_ELNO",
                        "DISS_NOEU",
                        "DURT_ELNO",
                        "DURT_NOEU",
                        "ECIN_ELEM",
                        "EFCA_ELNO",
                        "EFCA_NOEU",
                        "EFGE_ELNO",
                        "EFGE_NOEU",
                        "ENDO_ELGA",
                        "ENDO_ELNO",
                        "ENDO_NOEU",
                        "ENEL_ELGA",
                        "ENEL_ELNO",
                        "ENEL_NOEU",
                        "EPEQ_ELGA",
                        "EPEQ_ELNO",
                        "EPEQ_NOEU",
                        "EPFD_ELGA",
                        "EPFD_ELNO",
                        "EPFD_NOEU",
                        "EPFP_ELGA",
                        "EPFP_ELNO",
                        "EPFP_NOEU",
                        "EPME_ELGA",
                        "EPME_ELNO",
                        "EPMG_ELGA",
                        "EPMG_ELNO",
                        "EPMG_NOEU",
                        "EPMQ_ELGA",
                        "EPMQ_ELNO",
                        "EPMQ_NOEU",
                        "EPOT_ELEM",
                        "EPSA_ELNO",
                        "EPSA_NOEU",
                        "EPSG_ELGA",
                        "EPSG_ELNO",
                        "EPSG_NOEU",
                        "EPSI_ELGA",
                        "EPSI_ELNO",
                        "EPSI_NOEU",
                        "EPSP_ELGA",
                        "EPSP_ELNO",
                        "EPSP_NOEU",
                        "EPTQ_ELNO",
                        "EPTU_ELNO",
                        "EPVC_ELGA",
                        "EPVC_ELNO",
                        "EPVC_NOEU",
                        "ERME_ELEM",
                        "ERME_ELNO",
                        "ERME_NOEU",
                        "ERTH_ELEM",
                        "ERTH_ELNO",
                        "ERTH_NOEU",
                        "ERZ1_ELEM",
                        "ERZ2_ELEM",
                        "ETOT_ELEM",
                        "ETOT_ELGA",
                        "ETOT_ELNO",
                        "FERRAILLAGE",
                        "FLHN_ELGA",
                        "FLUX_ELGA",
                        "FLUX_ELNO",
                        "FLUX_NOEU",
                        "FORC_NODA",
                        "FSUR_2D",
                        "FSUR_3D",
                        "FVOL_2D",
                        "FVOL_3D",
                        "GRAD_NOEU_THETA",
                        "HYDR_ELNO",
                        "HYDR_NOEU",
                        "INDL_ELGA",
                        "INTE_ELNO",
                        "INTE_NOEU",
                        "IRRA",
                        "LANL_ELGA",
                        "META_ELGA_TEMP",
                        "META_ELNO",
                        "META_NOEU",
                        "MODE_FLAMB",
                        "PMPB_ELGA",
                        "PMPB_ELNO",
                        "PMPB_NOEU",
                        "PRAC_ELNO",
                        "PRAC_NOEU",
                        "PRES",
                        "PRME_ELNO",
                        "QIRE_ELEM",
                        "QIRE_ELNO",
                        "QIRE_NOEU",
                        "QIZ1_ELEM",
                        "QIZ2_ELEM",
                        "REAC_NODA",
                        "SICA_ELNO",
                        "SICA_NOEU",
                        "SICO_ELNO",
                        "SICO_NOEU",
                        "SIEF_ELGA",
                        "SIEF_ELNO",
                        "SIEF_NOEU",
                        "SIEF_SENO_SEGA",
                        "SIEQ_ELGA",
                        "SIEQ_ELNO",
                        "SIEQ_NOEU",
                        "SIGM_ELNO",
                        "SIGM_NOEU",
                        "SING_ELEM",
                        "SING_ELNO",
                        "SIPM_ELNO",
                        "SIPO_ELNO",
                        "SIPO_NOEU",
                        "SIRO_ELEM",
                        "SITQ_ELNO",
                        "SITU_ELNO",
                        "SIZ1_NOEU",
                        "SIZ2_NOEU",
                        "SOUR_ELGA",
                        "SPMX_ELGA",
                        "TEMP",
                        "THETA",
                        "VACO_ELNO",
                        "VAEX_ELGA",
                        "VAEX_ELNO",
                        "VAEX_NOEU",
                        "VALE_CONT",
                        "VARC_ELGA",
                        "VARI_ELGA",
                        "VARI_ELNO",
                        "VARI_NOEU",
                        "VATU_ELNO",
                        "VITE",
                        "VITE_ABSOLU",
                        "VITE_VENT",
                        ]
#
# Si aucun argument n'est passe, on utilise tous les types de champs possibles
  if ( typ_cham is None ) :
    l_ncham = l_tout_cham
#
# Sinon, on n'utilise que les champs dont le type est passe en argument
  else :
    l_typ_cham = []
    if (type(typ_cham) == types.StringType) :
      l_typ_cham.append(typ_cham)
    else :
      l_typ_cham = typ_cham
    l_ncham = []
    for typ in l_typ_cham :
     for cham in l_tout_cham :
       if (cham.find(typ) != -1) :
        if (cham.split('_')[1] == typ):
           l_ncham.append(cham)

  return tuple(l_ncham)
