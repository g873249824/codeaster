#!/bin/bash
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2018 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# script alias to the waf engine script
# It also allows to run any other program in the build environment

# source the environment only if DEVTOOLS_COMPUTER_ID is not already defined
printf "checking environment... "
if [ -z "$DEVTOOLS_COMPUTER_ID" ]; then
    env='unstable'
    [ `hg branch 2> /dev/null | egrep -c 'v[0-9]+'` -eq 1 ] && env='stable-updates'
    [ "${WAF_SUFFIX}" = "mpi" ] && env=${env}_${WAF_SUFFIX}
    fenv=$HOME/dev/codeaster/devtools/etc/env_${env}.sh
    if [ -e ${fenv} ]; then
        . ${fenv}
        echo "loading ${fenv}"
    else
        echo "no found"
    fi
else
    echo "already set"
fi

# call waf.engine or another program?
if [ $# -lt 1 ]; then
    # no argument: use waf
    true
elif [[ "$1" =~ ^\- ]]; then
    # start with hiphen: suppose to be a waf option
    true
elif [ "$1" = "reconfigure" ]; then
    wafscript=$0
    [ "${WAF_SUFFIX}" = "mpi" ] && wafscript=${wafscript}_${WAF_SUFFIX}
    python -c "from subprocess import call ; $(grep WAFCMDLINE build/${WAF_SUFFIX}/c4che/release_cache.py) ; call(['${wafscript}'] + WAFCMDLINE)"
    exit $?
else
    # is the first argument a waf command ?
    wafcmd=(build buildelem clean configure dist distcheck distclean \
            i18n install list step test uninstall)
    found=0
    # remove '_debug' suffix
    called=${1//_debug/}
    for cmd in ${wafcmd[@]}
    do
        if [ "$called" = "$cmd" ]; then
            found=1
            break
        fi
    done
    if [ ${found} -eq 0 ]; then
        # not a waf command, call passed command line
        "${@}"
        exit $?
    fi
fi

# really execute waf
engine=$(echo ${0} | sed -e 's/\main$/engine/g')
echo "executing: ${engine} ${@}"
${engine} "${@}"
exit $?
