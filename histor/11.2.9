========================================================================
Version 11.2.9 du : 07/08/2012
========================================================================


-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR courtois     COURTOIS Mathieu       DATE 06/08/2012 - 16:13:10

--------------------------------------------------------------------------------
RESTITUTION FICHE 019292 DU 2012-08-01 14:25:46
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Beaucoup de tests en segfault en 11.2.7
FONCTIONNALITE
   De nombreux tests échouent dans FIN en segmentation fault.
   En effet, dans rsinfo, on fait JEDETR(NOSTDE) or cette variable n'est pas initialisée car 
   jamais utilisée (supprimer avec la sensibilité).
   
   Selon son contenu, ça passe ou ça casse.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    zzzz264a par exemple
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 018823 DU 2012-05-04 13:23:40
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Revoir l'ecriture des exceptions en C
FONCTIONNALITE
   Quatre objectifs pour cette évolution :
   
   1. Séparer le traitement des exceptions en C du stockage de la commande courante 
   (nécessaire pour se raccorder au jeu de commandes depuis le fortran).
   
   2. Exposer les macros permettant d'écrire les exceptions dans un module séparé pour 
   faciliter l'utilisation ailleurs que astermodule.c
   
   3. Masquer le traitement du "niveau" permettant la gestion d'exceptions en cascade 
   (semblable aux "marques" de jeveux).
   
   4. Clarifier les macros (le vocabulaire) pour faciliter la compréhension.
   
   ------
   
   (1) Il y avait une imbrication du traitement des exceptions en C et celui de la 
   commande courante : les fonctions empile/depile qui stocke le pointeur vers la commande 
   courante, traitaient également le comptage de la pile de gestion des exceptions 
   (variable "niveau").
   
   Cela conduisait à des contournements quand on utilisait le mécanisme des 'exceptions' 
   dans d'autres fonctionnalités : getvectjev/getcolljev/putvectjev, prepcompcham ; avec 
   une source d'erreur (cf. issue18712).
   
   Les fonctions empile/depile ne gèrent que le pointeur de la commande courante.
   
   (2) On définit les fonctions nécessaires à l'implémentation d'exceptions dans 
   aster_exceptions.c (et son fichier d'entête aster_exceptions.h). Il suffit donc de 
   #include "aster_exceptions.h" pour utiliser les exceptions.
   
   
   (3) L'incrément du "niveau" est masqué dans la macro "try". On ajoute une macro 
   "endTry()" qui se charge de le décrémenter.
   
   (4) Vocabulaire revu pour simplifier la compréhension et rapprocher de la syntaxe 
   Python, cf. commentaires dans aster_exceptions.c :
   
   /*
    * The fortran subroutines can raise an exception by calling interruptTry via XFINI
    * or UEXCEP (usually UEXCEP if called through UTEXCP or U2MESS subroutines).
    * XFINI is called at the end of a normal execution and raise the EOFError exception.
    * 
    * try { . . . . . . . . . . . . . . . . .if (gExcNumb = setjmp(env)) { <--
    * . . .... . . . . . . . . . . . . . . . . . . . ... . . . . . . . . . . |
    * . . .interruptTry( code ); . . . . . . . . . . longjmp(env, code); . ---
    * . . .... . . . . . . . . . . . . . . . . . . . ...
    * } . . . . . . . . . . . . .---> . . . .}
    * except( code ) { . . . . . . . . . . . else if (gExcEnv == code ) {
    * . . .... . . . . . . . . . . . . . . . . . . . ...
    * } . . . . . . . . . . . . . . . . . . .}
    * finally { . . . . . . . . . . . . . . .else {
    * . . .... . . . . . . . . . . . . . . . . . . . ...
    * } . . . . . . . . . . . . . . . . . . .}
    * endTry(); . . . . . . . . . . . 
    *
    */
   
   
   Deux différences avec le comportement des exceptions Python :
   - Si une exception se produit dans un des blocs (et n'est pas interceptée), elle n'est 
   pas re-émise à la fin du 'finally'.
   - L'instruction supplémentaire 'endTry' est nécessaire pour décrémenter le niveau. Ne 
   pas oublier 'endTry' s'il y a un 'return' dans un bloc.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    astout small & short
NB_JOURS_TRAV  : 2.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019089 DU 2012-07-02 08:37:10
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Problxc3xa8me xc3xa9crasement mxc3xa9moire
FONCTIONNALITE
   Problème
   --------
   
   Il y a un écrasement mémoire lors d'un CALC_TABLE avec beaucoup d'occurrences de FILTRE.
   
   
   Correction
   ----------
   
   L'écrasement mémoire est toujours lié au nombre de TITREs lors de la création de la table 
   (comme dans issue18982). Cela se passe dans des routines très anciennes, avant la version 
   7.
   Ironie de l'histoire, c'est moi qui ait mis un premier garde-fou en 7.6.5 !
   
   La programmation des routines titre?.f est tout sauf claire... Au lieu de manipuler 
   l'indice dans le tableau, on s'amuse à incrémenter directement l'adresse.
   
   titre1: En cas de ligne trop longue, on utilise un indice supplémentaire dans le tableau à 
   remplir (incrément de l'adresse) mais le numéro de ligne dans le tableau initial n'est pas 
   incrémenté, or c'est lui qui est utilisé pour limiter les itérations...
   
   Ici, on ajoute un autre garde-fou pour s'assurer que l'adresse ne déborde pas du 
   dimensionnement initial :
   
   IF (LDONS1 .GT. LDONS-1+MXLIGS) THEN
    . LDONS1 = LDONS1 - 1
    . GOTO 1200
   ENDIF
   
   De plus, autant pour optimiser la taille des tableaux passés en argument que pour la 
   robustesse, on limite le nombre de titre lors de la construction des arguments pour 
   CREA_TABLE.
   
   
   Report en version 10: Table.py et titre1.f
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    xc3xa9tude jointe
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019141 DU 2012-07-09 13:27:50
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Message d'erreur en cas d'erreur de syntaxe dans le catalogue
FONCTIONNALITE
   Il y a une erreur de syntaxe dans le catalogue. Le message d'erreur ne peut être 
   affiché correctement car une chaîne interne n'est pas unicode.
   Ici il s'agissait de "Début SIMP".
   
   Le message d'erreur est le suivant :
   
   compilation du catalogue de commandes . . . . . . . . . . [FAILED]
   Code retour : 1024
   >> Catalogue de commandes : DEBUT RAPPORT
   Compte-rendu de validation du catalogue ASTER
    . Début Commande :DEBUT
    . . .Début SIMP : XXX
    . . . . !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    . . . . ! L'attribut 'into' doit être un tuple : u'EC2' !
    . . . . !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    . . .Fin SIMP : XXX
    . Fin commande :DEBUT
   Fin Compte-rendu de validation du catalogue ASTER
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    erreur de programmation
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019136 DU 2012-07-06 17:10:51
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    [FORMA] Paramxc3xa8tre LANG dans DEBUT
FONCTIONNALITE
   Problème
   ========
   
   Dans eficas 6.5.0 (avec le catalogue de la 11.2), si on ajoute le mot-clé LANG dans DEBUT, 
   on ne peut pas valider la commande (reste de couleur "jaune").
   
   Correction
   ==========
   
   Quand LANG est non vide, on active la "localisation" en important Execution.i18n qui est 
   absent dans eficas.
   
   Il faut protéger cette action pour ne l'exécuter que si on est dans Code_Aster (comme 
   c'est déjà le cas pour d'autres fonctionnalités).
   
   La correction est dans ops.py.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    ouverture dans eficas
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019062 DU 2012-06-27 08:36:24
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Report de restitution
FONCTIONNALITE
   Les fiches suivantes ont été restituées en 11.2.4 sans les fichiers sources :
   
   - issue19023: Erreur dans un CALC_FONCTION de MACR_SPECTRE
   - issue18924: getcolljev d'une collection contigue
   - issue18928: En NEW11.1.24, le cas-test erreu09b s'arrete par manque de temps CPU sur Calibre 7.
   
   issue19023 a déjà été reportée via issue19104.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    ras
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019063 DU 2012-06-27 08:43:46
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Affichage des messages en anglais ne fonctionne plus depuis 11.2.1
FONCTIONNALITE
   Suite à la modification de properties.py & E_Core.py, le nom "court" de la version 
   (par exemple 'unstable') était indéfini.
   
   Le fichier contenant les traductions n'était donc pas trouvé (car cherché avec le 
   nom 'aster_?').
   
   On propose de vérifier que le fichier de traduction est trouvé et qu'un texte est 
   traduit correctement dans supv003a, passé avec LANG='EN'.
   
   txt = "On attend un objet concept."
   trad = "A concept object is expected."
   C'est un texte de N_ASSD.py que l'on ne devrait pas modifier souvent.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    supv003a
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019288 DU 2012-08-01 11:54:17
TYPE express concernant astk (VERSION 10.5)
TITRE
    Anomalies dans astk/as_run lors d'une exxc3xa9cution multiple
FONCTIONNALITE
   "exécution multiple" : lancement simultané du même test sur plusieurs machines.
   
   1. problème avec des chemins contenant des caractères accentués.
   
   => une erreur se produit lorsque le profil est modifié. Une impression de debug 
   n'encodait pas la chaîne avant de l'imprimer or ici elle contient les chemins 
   modifiés, donc des caractères accentués.
   
   
   2. problème lorsque le login n'est pas identique partout.
   
   => Si on souhaite conserver les résultats obtenus sur chaque machine, ceux-ci sont 
   déposés dans le répertoire $HOME/MULTI/... de chaque machine.
   Or lors de la création du répertoire, on exécute depuis la machine locale :
      ssh xxxx "mkdir $HOME/MULTI/..."
   
   Comme il s'agit de ", $HOME est remplacé par le shell et donc par le HOME local.
   
   L'utilisation de " (et non ') est, selon un commentaire, requise pour récupérer 
   correctement l'output des commandes exécutées.
   On remplace donc les $ par \$ sur la ligne de commande.
   
   Impact possible sur les commandes qui mettaient sciemment une variable sur la ligne 
   de commande en souhaitant qu'elle soit évaluée avant exécution.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    unittest asrun
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019150 DU 2012-07-10 06:21:10
TYPE anomalie concernant astk (VERSION 1.2)
TITRE
    as_run et la construction de librairie
FONCTIONNALITE
   Problème
   --------
   
   La mise à jour en 11.2.2 a modifiée beaucoup de routines.
   Une partie des fichiers objets (.o) ne sont pas archivés dans la bibliothèque.
   Il en résulte un problème à l'édition de lien avec des symboles qui n'existent 
   plus.
   
   Correction
   ----------
   
   Le problème apparaît car il y a beaucoup de nouveaux .o à archiver et, pour 
   s'assurer que la ligne de commande ne sera pas trop longue, l'archivage est 
   effectué en deux temps.
   Par ailleurs, de même que seuls les fichiers source plus récents que leur .o sont 
   compilés, seuls les .o plus récents que la bibliothèque sont archivés.
   Or, une fois que la première partie des .o est archivée, la bibliothèque mise à 
   jour devient plus récente que les .o restants !
   
   Remarque : cela ne se produit pas lors de la compilation initiale d'une version car 
   la bibliothèque n'existe pas encore et donc la comparaison de date n'est pas faite.
   
   La correction consiste à stocker la date initiale de la bibliothèque au lieu de 
   l'interroger à chaque fois.
   
   Pour corriger le problème après la mise à jour en 11.2.2, il suffit de supprimer le 
   répertoire "lib" de la version, puis lancer : as_run --vers=unstable --make
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    mise xc3xa0 jour 11.2.2
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019057 DU 2012-06-25 16:42:05
TYPE anomalie concernant astk (VERSION 1.2)
TITRE
    Diagnostic en niveau debug
FONCTIONNALITE
   En mode debug dans as_run (et le niveau de messages 5 dans astk active 
   l'option --debug de as_run), en cas d'erreur quelle soit <S>, <E> ou <F>, on 
   lève l'exception RunAsterError.
   
   Le diagnostic est alors <F>_SYSTEM pour tous les calculs en erreur.
   On ajoutera simplement un rappel dans le fichier d'erreur (".e") pour ne pas 
   être surpris !
   
   Rappel : le niveau 3 est conseillé dans astk, suffisamment bavard pour voir 
   ce qui se passe en cas de problème, pas trop indigeste dans la fenêtre des 
   messages !
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    mode debug
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------
RESTITUTION FICHE 018264 DU 2012-01-23 13:21:17
TYPE evolution concernant astk (VERSION )
TITRE
    Lancement d'un calcul aprxc3xa8s un job soit terminxc3xa9
FONCTIONNALITE
   On souhaite lancer deux calculs successivement sans attendre la fin du premier pour 
   soumettre le second :
   
    - Le premier calcul est soumis normalement.
    - Lors de la soumission du second, on précise qu'il doit démarrer uniquement après 
   que le premier est terminé.
   
   Dans l'interface astk, une nouvelle entrée du menu Options "after_job" apparaît 
   (l'étiquette est le nom du paramètre et n'est donc pas traduit ou mis en forme). Le 
   champ sera transmis tel quel au gestionnaire de batch : on fournit le numéro du 
   premier calcul.
   
   Le paramètre after_job est inséré dans le fichier export.
   
   En interactif, il est ignoré.
   En batch, une option spécifique est ajouté lors de la soumission :
   
    * pour LSF : #BSUB -w ended(123456)
    * pour PBS : #PBS -W depend=after:123456
    * pour SGE : #$ -hold_jid 123456
    * pour SLURM : #SBATCH --dependency=after:123456
   
   
   Non testé avec PBS.
   Disponible dans astk/as_run 1.10.6
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    lancement de 2 jobs en chaine
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 015852 DU 2010-11-02 10:31:07
TYPE evolution concernant astk (VERSION )
TITRE
    Calcul distribuxc3xa9 xc3xa0 partir d'une base
FONCTIONNALITE
   Fiche soldée sans développement.
   
   On souhaite :
   - effectuer un calcul (unique) assez long.
   - effectuer ensuite une étude paramétrique qui utilise la base précédemment 
   produite.
   
   Il est déjà possible de :
   - lancer une étude paramétrique en sauvegardant la base.
   - effectuer ensuite une poursuite de cette étude paramétrique (avec le même jeu de 
   paramètres évidemment) qui réutilise la base de chaque calcul.
   
   Ceci est décrit dans u2.08.07.
   
   Dans le cas particulier où la base est la même pour tous les calculs, il faut 
   préparer le répertoire "base" pour chaque calcul comme s'il avait été produit par 
   une étude paramétrique ("result_dir"/calc_i/base ou bhdf).
   A niveau, on peut faire des liens symboliques pour économiser l'espace disque.
   
   NB : ne pas perdre de vue que 200 calculs produisant chacun une base de 2 Go 
   occupent 400 Go de disque sur le compte de l'utilisateur ET dans le répertoire de 
   travail !
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    ras
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 007994 DU 2004-08-05 00:00:00
TYPE evolution concernant astk (VERSION 7.3)
TITRE
    soumission conditionnelle d'etudes
FONCTIONNALITE
   fiche réalisée pour la partie batch seulement par issue18264.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    ras
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019293 DU 2012-08-01 15:23:40
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    CALC_TABLE - Erreur lors de l'evaluation d'une formule avec module python math
FONCTIONNALITE
   Problème
   --------
   
   L'évaluation via CALC_TABLE d'une formule contenant "math.xxx" échoue alors que "import math" 
   est présent dans le jeu de commandes.
   
   Correction
   ----------
   
   Le problème exsite depuis l'évolution pour minimiser la quantité de mémoire consommée dans les 
   objets du superviseur (issue11522 en 11.1.19).
   
   On stocke, sous l'attribut parent_context, le contexte courant au moment de la création de la 
   formule. On y supprime les objets venant du catalogue pour réduire la taille (surtout les 
   références qui empêcheraient la libération de mémoire). On supprime en particulier tous les 
   modules.
   
   Dans le test joint, le module math est importé dans le jeu de commandes, mais sa référence est 
   supprimé du contexte stocké. Il n'est donc plus disponible pour l'évaluation.
   
   On corrige en ne supprimant que les modules de Accas (ceux du catalogue).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    test fourni
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019276 DU 2012-07-31 07:52:45
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Couverture de code : IMPR_TABLE
FONCTIONNALITE
   Non validés :
   IMPR_TABLE          __                  FORMAT_C = 'REEL_IMAG'
   IMPR_TABLE          __                  IMPR_FONCTION = 'OUI'
   
   => FORMAT_C n'est pas utilisé puisque qu'il n'y a pas de colonne complexe dans une 
      table. Eventuellement, on aurait pu se contenter de passer ce mot-clé à IMPR_FONCTION 
      mais il n'y existe pas. On supprime ce mot-clé.
      Présent dans 62 tests.
   
   => IMPR_FONCTION='OUI' : validé dans zzzz128b pour une fonction réelle et une 
      complexe dans la même table.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    zzzz128b
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019287 DU 2012-08-01 11:47:35
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Erreur moche avec MACRO_ELAS_MULT
FONCTIONNALITE
   Problème
   --------
   
   Plantage dans la partie superviseur dans MACRO_ELAS_MULT.
   
   On est arrêté par un assert dans N_ASSD.change_type :
     assert self._as_co != 0
   
   
   Correction
   ----------
   
   Le problème vient du catalogue dans la fonction sdprod où on fait :
   
   . if isinstance(NUME_DDL,CO) :
   . . self.type_sdprod(NUME_DDL,nume_ddl_sdaster)
   . else:
   . . self.type_sdprod(NUME_DDL,NUME_DDL.__class__)
   
   NUME_DDL acceptant soit un concept de type nume_ddl_sdaster, soit un CO('xxx').
   
   Ce qui signifie :
   . Si NUME_DDL est un type CO,
   . . on le type comme un nume_ddl_sdaster
   . sinon
   . . on le type avec son type actuel
   
   1. mais pourquoi donc vouloir typer un concept qui l'est déjà !
   
   2. "assert self._as_co != 0" signifie "self/concept est un type CO". Cette vérification a été ajoutée 
   en 11.1.19. Le problème peut donc apparaître en STA11.2.
   
   Le problème ne se produit que en PAR_LOT='NON' car le concept est déjà attaché à l'étape et on ne passe 
   donc pas dans la même branche.
   
   Plusieurs catalogues de commandes sont incorrects :
   - MACRO_ELAS_MULT pour NUME_DDL
   - PROJ_BASE pour NUME_DDL_GENE
   - MACRO_EXPANS pour RESU_EX, RESU_ET, RESU_RD
   - MACRO_MATR_ASSE pour NUME_DDL
   
   L'erreur se produit si on fournit un concept existant et non un CO('xx') pour ces mots-clés.
   
   Le bon test à faire dans le catalogue est :
   
   . if NUME_DDL.is_typco():
   . . self.type_sdprod(NUME_DDL,nume_ddl_sdaster)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    test fourni
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019095 DU 2012-07-02 13:46:16
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    DEFI_FICHIER avec ACCES='NEW' nom tronqué à 80 caractères
FONCTIONNALITE
   Problème
   --------
   
   Lorsque l'on fait DEFI_FICHIER/ACCES='NEW' et TYPE != 'ASCII', le fichier est effacé s'il existe. 
   Dans le catalogue de DEFI_FICHIER, FICHIER est limité à 255 caractères, mais dans la fonction C 
   appelé pour effacer le fichier, le nom est tronqué à 80 caractères.
   
   
   Correction
   ----------
   
   La fonction rmfile est réécrite en utilisant les fonctions de copie de chaines de caractères au 
   lieu des boucles et en allouant dynamiquement les chaines à la longueur nécessaire.
   
   Il n'y a donc que la limite dans le catalogue et la variable fortran dans ops026 à 255 
   caractères.
   
   Remontée d'erreur de syntaxe : En 11.1.23, des erreurs se sont glissées dans N_VALIDATOR.py 
   (mauvais placements de parenthèses) qui conduisent à un traceback Python non formatté. Possible 
   que cette erreur ait été intégrée dans eficas 6.5.0.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    test élémentaire
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR cuvillie     CUVILLIEZ Sam          DATE 08/06/2012 - 02:58:34

--------------------------------------------------------------------------------
RESTITUTION FICHE 016103 DU 2010-12-21 10:42:21
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Outil pour evaluer la reponse du modele de Hujeux pour differents essais de laboratoire
FONCTIONNALITE
   La macro-commande CALC_ESSAI_GEOMECA développée dans le cadre du projet ARISTHYD permet de
   simuler différents essais de
   laboratoire (triaxial drainé/non drainé en chargement monotone ou cyclique, essai de
   cisaillement cyclique...) pour 
   une liste de paramètres de chargement donnée par l'utilisateur, et de post-traiter les
   résultats obtenus (ensuite écrits 
   sous forme de graphiques au format xmgrace ou disponibles sous forme de table), afin
   d'évaluer la cohérence d'un jeu de 
   paramètres matériau d'une loi de comportement de sol. Les lois (élastoplastiques) de sol
   autorisées autorisées sont :
    - 'HUJEUX','DRUCK_PRAGER','DRUCK_PRAG_N_A','CAM_CLAY','CJS'
   Il est possible de superposer des courbes de référence (expérimentales) aux graphiques
   obtenus en résultat, ou de 
   récupérer les résultats bruts de toutes les simulations sous forme de tables.
   
   Pour l'instant 4 types d'essai sont disponibles (pour en intégrer de nouveaux, procéder
   par copier-coller). A chaque type 
   d'essai correspond un mot-clé facteur (répétable) :
    - 'ESSAI_TD' . . : essai Triaxial monotone Drainé
    - 'ESSAI_TND' . .: essai Triaxial monotone Non Drainé
    - 'ESSAI_CISA_C' : essai de Cisaillement Cyclique drainé
    - 'ESSAI_TND_C' .: essai Triaxial Non Drainé Cyclique
   
   La syntaxe (capy) est la suivante:
   CALC_ESSAI_GEOMECA = MACRO(
    . . . . . . . . . . ...
    . . . . . . . . . . MATER . . . = SIMP(statut='o',typ=mater_sdaster),
    . . . . . . . . . . COMP_INCR . = C_COMP_INCR(),
    . . . . . . . . . . CONVERGENCE = C_CONVERGENCE(),
   
    . . . . . . . . . . regles=(AU_MOINS_UN('COMP_INCR'), # car COMP_INCR est facultatif dans
   C_COMP_INCR
    . . . . . . . . . . . . . . AU_MOINS_UN('ESSAI_TD' . .,
    . . . . . . . . . . . . . . . . . . . . 'ESSAI_TND' . ,
    . . . . . . . . . . . . . . . . . . . . 'ESSAI_CISA_C',
    . . . . . . . . . . . . . . . . . . . . 'ESSAI_TND_C' ,),),
   
    . . . . . . . . . . ESSAI_TD = FACT(statut='f',max='**',
    
    . . . . . . . . . . . . .P_CONF . . .= SIMP(statut='o',typ='R',max='**',),
    . . . . . . . . . . . . .EPSI_IMPOSE = SIMP(statut='o',typ='R',max='**',),
    . . . . . . . . . . . . .NB_INST . . = SIMP(statut='f',typ='I',val_min=100,defaut=100),
   
    . . . . . . . . . . . . .TABLE_RESU .=
   SIMP(statut='f',typ=CO,max='**',validators=NoRepeat(),),
    . . . . . . . . . . . . .GRAPHIQUE . =
   SIMP(statut='f',typ='TXM',max='**',validators=NoRepeat(),
    . . . . . . . . . . . . . . . . . . . . . . into= .('P-Q','EPS_AXI-Q','EPS_AXI-EPS_VOL',),
    . . . . . . . . . . . . . . . . . . . . . . defaut=('P-Q','EPS_AXI-Q','EPS_AXI-EPS_VOL',),),
    . . . . . . . . . . . . .TABLE_REF . = SIMP(statut='f',typ=table_sdaster,max='**',),
   
    . . . . . . . . . . . . . . . . . . .),
   
    . . . . . . . . . . ESSAI_TND = FACT(statut='f',max='**',
    
    . . . . . . . . . . . . .P_CONF . . .= SIMP(statut='o',typ='R',max='**',),
    . . . . . . . . . . . . .EPSI_IMPOSE = SIMP(statut='o',typ='R',max='**',),
    . . . . . . . . . . . . .BIOT_COEF . = SIMP(statut='f',typ='R',defaut=1.,),
    . . . . . . . . . . . . .NB_INST . . = SIMP(statut='f',typ='I',val_min=100,defaut=100),
   
    . . . . . . . . . . . . .TABLE_RESU .=
   SIMP(statut='f',typ=CO,max='**',validators=NoRepeat(),),
    . . . . . . . . . . . . .GRAPHIQUE . =
   SIMP(statut='f',typ='TXM',max='**',validators=NoRepeat(),
    . . . . . . . . . . . . . . . . . . . . . . into= .('P-Q','EPS_AXI-Q','EPS_AXI-PRE_EAU',),
    . . . . . . . . . . . . . . . . . . . . . . defaut=('P-Q','EPS_AXI-Q','EPS_AXI-PRE_EAU',),),
    . . . . . . . . . . . . .TABLE_REF . = SIMP(statut='f',typ=table_sdaster,max='**',),
   
    . . . . . . . . . . . . . . . . . . .),
   
    . . . . . . . . . . ESSAI_CISA_C = FACT(statut='f',max='**',
    
    . . . . . . . . . . . . .P_CONF . . .= SIMP(statut='o',typ='R',max='**',),
    . . . . . . . . . . . . .EPSI_IMPOSE = SIMP(statut='o',typ='R',max='**',),
    . . . . . . . . . . . . .EPSI_ELAS . = SIMP(statut='f',typ='R',defaut=1.E-7,val_max=1.E-7),
    . . . . . . . . . . . . .NB_CYCLE . .= SIMP(statut='o',typ='I',val_min=1),
    . . . . . . . . . . . . .NB_INST . . = SIMP(statut='f',typ='I',val_min=25,defaut=25),
   
    . . . . . . . . . . . . .TABLE_RESU .=
   SIMP(statut='f',typ=CO,max='**',validators=NoRepeat(),),
    . . . . . . . . . . . . .GRAPHIQUE . =
   SIMP(statut='f',typ='TXM',max='**',validators=NoRepeat(),
    . . . . . . . . . . . . . . . . . . . . . . into= .('EPSXY-SIGXY','EPSXY-G','EPSXY-D',),
    . . . . . . . . . . . . . . . . . . . . . . defaut=('EPSXY-SIGXY','EPSXY-G','EPSXY-D',),),
    . . . . . . . . . . . . .TABLE_REF . = SIMP(statut='f',typ=table_sdaster,max='**',),
   
    . . . . . . . . . . . . . . . . . . .),
   
    . . . . . . . . . . ESSAI_TND_C = FACT(statut='f',max='**',
    
    . . . . . . . . . . . . .P_CONF . . .= SIMP(statut='o',typ='R',max='**',),
    . . . . . . . . . . . . .SIGM_IMPOSE = SIMP(statut='o',typ='R',max='**',),
    . . . . . . . . . . . . .BIOT_COEF . = SIMP(statut='f',typ='R',defaut=1.,),
    . . . . . . . . . . . . .UN_SUR_K . .= SIMP(statut='o',typ='R',),
    . . . . . . . . . . . . .NB_CYCLE . .= SIMP(statut='o',typ='I',val_min=1),
    . . . . . . . . . . . . .NB_INST . . = SIMP(statut='f',typ='I',val_min=25,defaut=25),
   
    . . . . . . . . . . . . .TABLE_RESU .=
   SIMP(statut='f',typ=CO,max='**',validators=NoRepeat(),),
    . . . . . . . . . . . . .GRAPHIQUE . =
   SIMP(statut='f',typ='TXM',max='**',validators=NoRepeat(),
    . . . . . . . . . . . . . . . . . . . . . . into= .('NCYCL-DSIGM','P-Q','SIG_AXI-PRE_EAU',),
    . . . . . . . . . . . . . . . . . . . . . .
   defaut=('NCYCL-DSIGM','P-Q','SIG_AXI-PRE_EAU',),),
    . . . . . . . . . . . . .TABLE_REF . = SIMP(statut='f',typ=table_sdaster,max='**',),
   
    . . . . . . . . . . . . . . . . . . .),
   
    . . . . . . . . . .INFO = SIMP(statut='f',typ='I',defaut= 1,into=(1,2) ),)
   
   Tous les calculs réalisés par la macro le sont avec SIMU_POINT_MAT (SUPPORT='POINT'), il
   est donc possible d'enchaîner de 
   multiples essais (i.e. de multiples valeurs de paramètres de chargement pour chaque essai)
   pour un temps de calcul 
   raisonnable.
   
   Remarques :
   -----------
   1) J'ai corrigé la coquille suivante dans genpy.py, sans quoi il n'était pas possible de
   typer les listes de tables 
   produites par la macro (mot-clé TABLE_RESU) :
   L191 : . . . . st.append("CO('"+ self.sdname+ "')") 
   remplacé par : st = st.append("CO('"+ self.sdname+ "')")
   2) Pour l'essai triaxial Non Drainé Cyclique 'ESSAI_TND_C', on cherche à détecter le
   nombre de cycles (de contrainte 
   axiale effective imposée) au bout duquel le sol se liquéfie. Lorsque le critère de
   liquéfaction est atteint, il est 
   possible (et normal dans ce cas) que SIMU_POINT_MAT plante en erreur de convergence. Il
   est donc nécessaire 
   d'intercepter ce type d'erreur avec un bloc try/except, afin de s'assurer que le critère
   de liquéfaction est bien atteint 
   au dernier pas de temps convergé. Ceci est possible en jdc,mais pas dans une macro... La
   fiche issue19056 a donc été 
   créée, et je contourne le problème en attendant qu'elle soit corrigée. La programmation
   est pour le coup plus 
   compliquée, il faudra penser à la remanier lorsque cette fiche sera corrigée.
   
   Impact :
   --------
   capy : (A) calc_essai_geomeca.capy
   py . : (A) calc_essai_geomeca_ops.py, geomec_essais.py, geomec_utils.py
    . . . (M) compor2.py, genpy.py
   test : (A) comp012a.comm
   
   Validation :
   ------------
   Nouveau cas-test COMP012A.
   - On prend les valeurs de références ('SOURCE_EXTERNE') des tests SSNV197A, WTNV133A, et
   WTNV134B dans lesquels sont 
   respectivement simulés les essais ESSAI_TD,  ESSAI_TND, et ESSAI_TND_C.
   - Pour ESSAI_CISA_C, on fait un test de non régression.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : V6.07.112, U4.90.21, U2.04.08
VALIDATION
    comp012a
NB_JOURS_TRAV  : 35.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR lefebvre     LEFEBVRE Jean-Pierre   DATE 08/06/2012 - 03:42:12

--------------------------------------------------------------------------------
RESTITUTION FICHE 019285 DU 2012-08-01 10:39:02
TYPE express concernant Code_Aster (VERSION 10.5)
TITRE
    Dxc3xa9clarer la fonction LSHIFT dans editgd.f, exisdg.f, iposdg.f et nddl.f
FONCTIONNALITE
   Problème :
   =========
   Lors de la mise à jour 11.2.5 toutes les déclarations IMPLICIT ont été retirées du source
   et remplacées par IMPLICIT NONE (issue019070). 
   
   Avec le compilateur gfortran 4.1.2 la fonction LSHIFT doit être déclarée explicitement
   (issue017397), les versions plus récentes
   et le compilateur Intel la considèrent comme une fonction intrinséque. 
   
   Correction effectuée :
   ====================
   Les routines editgd.f, exisdg.f, iposdg.f et nddl.f sont modifiées pour ajouter la
   déclaration INTEGER LSHIFT.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    version locale sur clap0f0q
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019290 DU 2012-08-01 13:26:17
TYPE express concernant Code_Aster (VERSION 10.5)
TITRE
    Ecriture sur unitxc3xa9 non dxc3xa9finie dans JEFINI
FONCTIONNALITE
   Problème :
   ========
   
   Lors de la mise à jour 11.2.8 la routine JEFINI a été modifiée avec une instruction
   WRITE(IFM,*) ' ' alors que la variable IFM n'était pas encore affectée. Cette instruction
   provoque une erreur à l'exécution avec le compilateur gfortran.
   
   Correction effectuée :
   ====================
   
   On supprime cette instruction. On en profite pour corriger les deux messages d'information
   JEVEUX1_77 et JEVEUX_78 où il manque un mot.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    sur version locale gfortan
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019135 DU 2012-07-06 17:07:25
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    [FORMA] DEFI_MATERIAU vide = erreur JEVEUX
FONCTIONNALITE
   Problème :
   ========
    
   Lorsque l'on définit un matériau, il faut que la commande contienne au moins un
   comportement. Dans l'exemple fourni : ACIER=DEFI_MATERIAU(), rien n'est défini !
   
   Correction apportée :
   ====================
   
   Dans l'opérateur, on récupère le nombre de mots clés facteurs NBCRME, si ce dernier vaut 0
   on émet un message d'erreur :
   
   
     # Commande No :  0002            Concept de type : mater_sdaster
     # ------------------------------------------------------------------------------------------
     ACIER=DEFI_MATERIAU(INFO=1,
                         );
   
      
      !-------------------------------------------------------------------------------------!
      ! <EXCEPTION> <MODELISA10_16>                                                         !
      !                                                                                     !
      ! Il est obligatoire de fournir au moins un comportement pour définir le matériau. !
      !-------------------------------------------------------------------------------------!
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    xc3xa9tude fournie
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 009555 DU 2006-03-15 10:25:28
TYPE evolution concernant Code_Aster (VERSION 2.x)
TITRE
    remplacer les OPEN par des ULOPEN
FONCTIONNALITE
   Les routines irdeec, irdeer, irdrec, irdrer, ecrfre ont été supprimées en version 11.0.28.
   La routine iredca a été supprimée en version 10.3.16.
   L'instruction OPEN a été supprimée de irdepl en version 11.0.28 et de irtitr en version
   11.1.4.
   La proposition de remplacer OPEN par ULOPEN dans ces routines est obsolète.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    sans objet
NB_JOURS_TRAV  : 0.05
--------------------------------------------------------------------------------
RESTITUTION FICHE 019300 DU 2012-08-02 15:48:03
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    En version 11.2.8, des cas-tests sont cassés par manque de mémoire sur toutes les plate-formes.
FONCTIONNALITE
   Un certain nombre de tests s'arrêtent par manque de mémoire sur toutes les plates-formes
   suite à la restitution de la fiche 19007. Les fichiers .para associés aux tests n'ont pas
   pu être mis à jour en raison des conflits entre les différentes restitutions. 
   J'ajuste la mémoire des tests suivants : 
   
   ssnp102a  
   ssnp110a 
   ssnp110b    
   ssnp110c 
   ssnp110e   
   ssnp311a 
   ssnp312a 
   ssnp312b  
   ssnv108a 
   ssnv218a  
   ascou18a 
   
   et de ascou16a, sslv135a, ssnp102b, ssnp131b, ssnv108c qui auraient pu sortir en erreur. 
   
   Les autres tests sslv130b, zzzz263a et zzzz265a font l'objet de la fiche 19307.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    tests concernés
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR torkhani     TORKHANI Mohamed       DATE 08/07/2012 - 10:31:28

--------------------------------------------------------------------------------
RESTITUTION FICHE 012769 DU 2008-11-04 10:59:01
TYPE evolution concernant Code_Aster (VERSION 7.0)
TITRE
    Calcul de dynamique transitoire avec matrices de rigidite et d'amortissement gyroscopique fonction de la vitesse de rotation
FONCTIONNALITE
   CONTEXTE :
   Pour pourvoir modéliser une machine tournante en ralentissement ou montée en vitesse dans Code_Aster, 
   il faut tenir compte de la variation des matrices de gyroscopie en fonction des grandeurs angulaires. 
   
   
   FONCTIONNALITES DEVELOPPEES :
   1) On programme une nouvelle OPTION=RIGI_GYRO pour les éléments finis de poutres de Timoshenko et 
   Euler et les elements discrets (DIS_TR). Le developpement est valide sur un cas test de CADYRO : une 
   ligne d'arbres en ralentissement modélisée par une poutre avec un disque modelisé par un élément 
   discret. Cette matrice n'a de sens qu'en transitoire de vitesse de rotation. 
   
   2) Pour l'effet transitoire, on propose également de faire évoluer l'architecture de 
   DYNA_TRAN_MODAL (et DYNA_VIBRA) et ce afin de tenir compte de l'évolution des matrices gyroscopiques 
   (MECA_GYRO et RIGI_GYRO) qui sont simplement multiplées par la vitesse et l'accélération angulaires 
   respectivement. Pour ce faire, dans les catalogues de DTM et DYNA_VIBRA, on ajoute un mot-clé simple 
   VITESSE_VARIABLE ='NON'/'OUI' ('NON' par défaut) qui conditionne la nature de VITE_ROTA et ACCE_ROTA 
   ainsi que la présence des matrices gyroscopiques. 
   
   - Si VITESSE_VARIABLE ='NON', on doit obligatoirement renseigner la valeur de la vitesse de rotation 
   (mot-clé VITE_ROTA, défini par un réel). 
   
   - Si VITESSE_VARIABLE ='OUI', on doit obligatoirement renseigner la loi imposée de vitesse angulaire 
   (mot-clé VITE_ROTA, défini par une formule/fonction) et la matrice d'amortissement gyroscopique (mot-
   clé MATR_GYRO). La loi imposée d'accélération angulaire (mot-clé ACCE_ROTA, définie par une 
   formule/fonction) et la matrice de raideur gyroscopique (mot-clé MATR_RIGY) sont facultatives. Si 
   ACCE_ROTA n'est pas fournie, elle est négligée (pas de dérivation numérique à partir de VITE_ROTA).
   
   3) Comme ce développement concerne aussi bien les aspects linéaires que non linéaires, on étend par 
   cette fiche le périmètre d'utilisation de la fonctionnalité de rotor fissuré ROTOR_FISS au transitoire 
   de vitesse. Jusqu'ici, cette fonctionnalité était valide seulement à vitesse de rotation constante. 
   Dans ce cas, l'angle de la fissure est calculé avec les valeurs de la vitesse de rotation VITE_ROTA et 
   de l'angle initial ANGL_INIT). 
   
   - Si VITESSE_VARIABLE ='NON', on garde la même chose mais on fait sortir le mot-clé VITE_ROTA du bloc 
   ROTOR_FISS et on le fait remonter au niveau du bloc du transitoire de vitesse (information redondante 
   sur la vitesse de rotation). 
   
   - Si VITESSE_VARIABLE ='OUI', on ajoute un mot-clé simple ANGL_ROTA pour renseigner la loi d'angle de 
   rotation, nécessaire à la définition de la fissure 1D par rapport au chargement tournant. 
   
   
   VALIDATION :
   - sdll144a, sdll144b : rotor à un disque reposant sur appuis et palier (deux versions pour deux lois de 
   vitesse linéaire et exponontielle). Le cas-test comporte un 'reuse' dans DYNA_VIBRA (DTM).
   - sdnl133c : idem que sdnl133a et b mais vitesse de rotation variable. 
   - sdnl133d : cas-test permettant de capitaliser les routines python pormettant de générer la loi 
   de "souplesse" de la fissure en fonction de l'angle de rotation à partir d'un calcul 3D sur une 
   éprouvette fissurée. 
   
   
   IMPACT SOURCES :
   calc_matr_elem.capy, macro_matr_asse.capy : nouvelle OPTION='RIGI_GYRO'
   dyna_tran_modal.capy, dyna_vibra.capy : nouveaux mot-clés pour le transitoire de vitesse 
   rigi_gyro.cata : nouveau catalogue d'option 'RIGI_GYRO'
   gener_medtr0.cata, gener_mepdt1.cata, gener_mepde1.cata, gener_mepmf1.cata : catalogue des elements 
   POU_D_T/E/DM et DIST_TR
   op0009.f : operateur CALC_MATR_ELEM
   mdtr74.f, mdeul1.f, mdnewm : DTM schémas EULER et NEWMARK
   mdfnli.f, mdrfis.f : routines spécifiques au rotor fissuré
   ssdt74.f, mdadap.f, mddevo.f : impact modification des paramètres de mdfnli et mdeul1
   merigy.f : appel a CALCUL pour RIGI_GYRO
   te0262.f, te0464.f, porigy.f, ptgy02.f : nouvelles TE pour RIGI_GYRO
   
   
   IMPACT DOCUMENTAIRE :
   DOC R5.05.07
   DOC U2.06.31, U2..06.32
   DOC U4.61.01 (CACL_MATR_ELEM), U4.61.21 (MACRO_MATR_ASSE), U4.53.21 (DTM), U4.53.03 (DYNA_VIBRA)
   DOC V2.02.144, V5.02.133
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : r5.05.07,v2.02.144,v5.02.133,u2.06.31,u2.06.32,u4.61.01,u4.61.21,u4.53.03,u4.53.21
VALIDATION
    sdll144, sdnl133
NB_JOURS_TRAV  : 15.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 018827 DU 2012-05-07 11:01:15
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Faire xc3xa9voluer les docs des SDLL124 et SDLL125
FONCTIONNALITE
   Quelques modifications sur les docs V :
   1) supprimer les tableaux pour les fréquences de traction/compression et torsion.
   2) dire que l'on teste les valeurs de ces fréquences en NON_REGRESSION.
   3) dire que les valeurs des vitesses critiques se trouvent dans les output de IMPR_DIAG_CAMPBELL.
   
   En conséquence, des modifications sur les .comm des cas-tests SDLL124 et SDLL125 :
   1) AUTRE_ASTER --> SOURCE_EXTERNE
   2) Test de NON_REGRESSION sur les premiers modes de torsion et de traction (pas de référence externe).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : v2.02.124,v2.02.125
VALIDATION
    sdll124, sdll125
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR zentner      ZENTNER Irmela         DATE 08/06/2012 - 02:29:00

--------------------------------------------------------------------------------
RESTITUTION FICHE 019177 DU 2012-07-13 10:12:36
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Paramètre PGA pour  GENE_ACCE_SEISME
FONCTIONNALITE
   Probleme
   ----------------
   GENE_ACCE_SEISME permet de générer des signaux sismiques à partir d'une DSP 
   évolutive et une fonction de modulation. La fonction de modulation est 
   caractérisée par sa forme (TYPE), la durée de la 
   phase forte (DUREE_PHASE_FORTE), le début de la phase forte (INST_INI) et un 
   paramètre donnant l'amplitude (ou l'énergie). Pour l'instant c'est l'intensité 
   d'Arias (INTE_ARIAS). Or l'énergie dépend aussi de la durée de la phase forte 
   et dans la pratique, on souhaite souvent donner plutôt le PGA (peak ground 
   acceleration = accélération maximale au sol) et non l'énergie totale.
   
   Résolution
   ------------
   On ajoute les mots-clé ACCE_MAXI et ECART_TYPE dans la définition de la 
   fonction de modulation. On doit avoir  UN_PARMI 
   ('ACCE_MAX', 'INTE_ARIAS', 'ECART_TYPE').
   
   Si ACCE_MAXI (PGA) est donné, alors on l'associe au maximum médian des 
   trajectoires du processus (signaux sismiques) et on détermine l'écart-type 
   équivalent via le facteur de pic.  On peut aussi directement donner 
   l'ECART_TYPE.
   
   On ajoute aussi le mot clé PESANTEUR (obligatoire). Si PESANTEUR=g, où g=9.81 
   m/s2, alors on doit donner le PGA (ACCE_MAX), ECART-TYPE et INTE_ARIAS en g.  
   
   TEST
   ---------------------
   On ajoute le cas test zzzz317c pour tester l'option ACCE_MAXI. La valeur 
   renseignée devrait correspondre à la médiane des maxima de N signaux générés 
   (moyennant l'approximation par le facteur de pic).
   On met à jour zzzz317a et zzzz317b en y ajoutant notamment des tests avec 
   ECART_TYPE.
   
   DOC
   -------------------------
   Mise à jour de la doc R et U4
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : R4.05.05, U4.36.04
VALIDATION
    zzzz317a,zzzz317b,zzzz317c
NB_JOURS_TRAV  : 1.5
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

       C AJOUT supervis/aster_exceptions    courtois M.COURTOIS         133    133      0
 CASTEST AJOUT comp012a                     cuvillie M.CUVILLIEZ        410    410      0
 CASTEST AJOUT sdll144a                     torkhani M.TORKHANI         317    317      0
 CASTEST AJOUT sdll144b                     torkhani M.TORKHANI         319    319      0
 CASTEST AJOUT sdnl133c                     torkhani M.TORKHANI         319    319      0
 CASTEST AJOUT sdnl133d                     torkhani M.TORKHANI         580    580      0
 CASTEST AJOUT zzzz317c                      zentner I.ZENTNER          250    250      0
 CASTEST MODIF ascou16a                     lefebvre J-P.LEFEBVRE       394      2      2
 CASTEST MODIF ascou18a                     lefebvre J-P.LEFEBVRE       281      2      2
 CASTEST MODIF aspic01b                     courtois M.COURTOIS         506      1      5
 CASTEST MODIF sdll124a                     torkhani M.TORKHANI         277     41     18
 CASTEST MODIF sdll125a                     torkhani M.TORKHANI         298     41     18
 CASTEST MODIF sdll125b                     torkhani M.TORKHANI         299     41     17
 CASTEST MODIF sdll125c                     torkhani M.TORKHANI         275     41     17
 CASTEST MODIF sdnl133a                     torkhani M.TORKHANI         286      3      2
 CASTEST MODIF sdnl133b                     torkhani M.TORKHANI         315      3      2
 CASTEST MODIF sslv135a                     lefebvre J-P.LEFEBVRE      1127      2      2
 CASTEST MODIF ssnp102a                     lefebvre J-P.LEFEBVRE       470      2      2
 CASTEST MODIF ssnp102b                     lefebvre J-P.LEFEBVRE       378      2      2
 CASTEST MODIF ssnp110a                     lefebvre J-P.LEFEBVRE       296      2      1
 CASTEST MODIF ssnp110b                     lefebvre J-P.LEFEBVRE       269      2      2
 CASTEST MODIF ssnp110c                     lefebvre J-P.LEFEBVRE       373      2      2
 CASTEST MODIF ssnp110e                     lefebvre J-P.LEFEBVRE       811      2      2
 CASTEST MODIF ssnp131b                     lefebvre J-P.LEFEBVRE       273      2      2
 CASTEST MODIF ssnp311a                     lefebvre J-P.LEFEBVRE       477      2      2
 CASTEST MODIF ssnp312a                     lefebvre J-P.LEFEBVRE       659      2      2
 CASTEST MODIF ssnp312b                     lefebvre J-P.LEFEBVRE       605      2      2
 CASTEST MODIF ssnp503a                     courtois M.COURTOIS         168      1      2
 CASTEST MODIF ssnp503b                     courtois M.COURTOIS         229      1      2
 CASTEST MODIF ssnp503c                     courtois M.COURTOIS         164      1      2
 CASTEST MODIF ssnp503d                     courtois M.COURTOIS         229      1      2
 CASTEST MODIF ssnp503e                     courtois M.COURTOIS         182      1      2
 CASTEST MODIF ssnp503f                     courtois M.COURTOIS         222      1      2
 CASTEST MODIF ssnp503g                     courtois M.COURTOIS         185      1      2
 CASTEST MODIF ssnp503h                     courtois M.COURTOIS         282      1      2
 CASTEST MODIF ssnp503i                     courtois M.COURTOIS         185      1      2
 CASTEST MODIF ssnp503j                     courtois M.COURTOIS         263      1      2
 CASTEST MODIF ssnp503k                     courtois M.COURTOIS         179      1      2
 CASTEST MODIF ssnp503l                     courtois M.COURTOIS         270      1      2
 CASTEST MODIF ssnp503m                     courtois M.COURTOIS         214      1      2
 CASTEST MODIF ssnp503n                     courtois M.COURTOIS         220      1      2
 CASTEST MODIF ssnp503o                     courtois M.COURTOIS         255      1      2
 CASTEST MODIF ssnp503p                     courtois M.COURTOIS         254      1      2
 CASTEST MODIF ssnp503q                     courtois M.COURTOIS         229      1      2
 CASTEST MODIF ssnp504a                     courtois M.COURTOIS         173      1      2
 CASTEST MODIF ssnp504b                     courtois M.COURTOIS         244      1      2
 CASTEST MODIF ssnp504c                     courtois M.COURTOIS         172      1      2
 CASTEST MODIF ssnp504d                     courtois M.COURTOIS         240      1      2
 CASTEST MODIF ssnp504e                     courtois M.COURTOIS         233      1      2
 CASTEST MODIF ssnp504f                     courtois M.COURTOIS         228      1      2
 CASTEST MODIF ssnp504g                     courtois M.COURTOIS         232      1      2
 CASTEST MODIF ssnp505a                     courtois M.COURTOIS         239      2      3
 CASTEST MODIF ssnp505b                     courtois M.COURTOIS         287      2      3
 CASTEST MODIF ssnv108a                     lefebvre J-P.LEFEBVRE       312      2      2
 CASTEST MODIF ssnv108c                     lefebvre J-P.LEFEBVRE       200      1      1
 CASTEST MODIF ssnv173a                     courtois M.COURTOIS         279      1      2
 CASTEST MODIF ssnv173b                     courtois M.COURTOIS         387      1      3
 CASTEST MODIF ssnv173d                     courtois M.COURTOIS         233      1      2
 CASTEST MODIF ssnv173e                     courtois M.COURTOIS         395      1      3
 CASTEST MODIF ssnv173f                     courtois M.COURTOIS         230      1      2
 CASTEST MODIF ssnv173g                     courtois M.COURTOIS         223      1      2
 CASTEST MODIF ssnv173h                     courtois M.COURTOIS         213      1      2
 CASTEST MODIF ssnv173i                     courtois M.COURTOIS         234      1      2
 CASTEST MODIF ssnv173j                     courtois M.COURTOIS         229      1      2
 CASTEST MODIF ssnv182b                     courtois M.COURTOIS         283      1      2
 CASTEST MODIF ssnv182c                     courtois M.COURTOIS         228      1      2
 CASTEST MODIF ssnv182d                     courtois M.COURTOIS         224      1      2
 CASTEST MODIF ssnv182e                     courtois M.COURTOIS         212      1      2
 CASTEST MODIF ssnv182f                     courtois M.COURTOIS         216      1      2
 CASTEST MODIF ssnv182h                     courtois M.COURTOIS         285      1      2
 CASTEST MODIF ssnv182i                     courtois M.COURTOIS         226      1      2
 CASTEST MODIF ssnv182j                     courtois M.COURTOIS         211      1      2
 CASTEST MODIF ssnv182k                     courtois M.COURTOIS         225      1      2
 CASTEST MODIF ssnv182l                     courtois M.COURTOIS         228      1      2
 CASTEST MODIF ssnv195a                     courtois M.COURTOIS         346      1      2
 CASTEST MODIF ssnv195b                     courtois M.COURTOIS         305      1      2
 CASTEST MODIF ssnv195c                     courtois M.COURTOIS         409      1      2
 CASTEST MODIF ssnv195d                     courtois M.COURTOIS         301      1      2
 CASTEST MODIF ssnv201a                     courtois M.COURTOIS         321      1      3
 CASTEST MODIF ssnv201b                     courtois M.COURTOIS         323      1      3
 CASTEST MODIF ssnv508a                     courtois M.COURTOIS         290      1      2
 CASTEST MODIF ssnv508b                     courtois M.COURTOIS         271      1      2
 CASTEST MODIF ssnv508c                     courtois M.COURTOIS         324      1      2
 CASTEST MODIF ssnv508d                     courtois M.COURTOIS         327      1      2
 CASTEST MODIF ssnv508e                     courtois M.COURTOIS         331      1      2
 CASTEST MODIF ssnv509a                     courtois M.COURTOIS         291      1      2
 CASTEST MODIF ssnv509b                     courtois M.COURTOIS         290      1      2
 CASTEST MODIF supv002a                     courtois M.COURTOIS         147      9      9
 CASTEST MODIF supv003a                     courtois M.COURTOIS          67     17      2
 CASTEST MODIF zzzz128b                     courtois M.COURTOIS          70     26      1
 CASTEST MODIF zzzz262a                     courtois M.COURTOIS         615      1      2
 CASTEST MODIF zzzz317a                      zentner I.ZENTNER          361    146     94
 CASTEST MODIF zzzz317b                      zentner I.ZENTNER          111     33     26
CATALOGU AJOUT options/rigi_gyro            torkhani M.TORKHANI          41     41      0
CATALOGU MODIF typelem/gener_medtr0         torkhani M.TORKHANI         187      3      1
CATALOGU MODIF typelem/gener_mepde1         torkhani M.TORKHANI         282      3      1
CATALOGU MODIF typelem/gener_mepdt1         torkhani M.TORKHANI         282      3      1
CATALOGU MODIF typelem/gener_mepmf1         torkhani M.TORKHANI         282      4      1
CATALOPY AJOUT commande/calc_essai_geomeca   cuvillie M.CUVILLIEZ        148    148      0
CATALOPY MODIF commande/calc_matr_elem      torkhani M.TORKHANI         164     10      3
CATALOPY MODIF commande/dyna_tran_modal     torkhani M.TORKHANI         299     13      2
CATALOPY MODIF commande/dyna_vibra          torkhani M.TORKHANI         472     12      2
CATALOPY MODIF commande/gene_acce_seisme     zentner I.ZENTNER           58     18      9
CATALOPY MODIF commande/impr_table          courtois M.COURTOIS         118      1      3
CATALOPY MODIF commande/macro_elas_mult     courtois M.COURTOIS          72      2      4
CATALOPY MODIF commande/macro_expans        courtois M.COURTOIS          72      3      5
CATALOPY MODIF commande/macro_matr_asse     torkhani M.TORKHANI         109      5      7
CATALOPY MODIF commande/proj_base           courtois M.COURTOIS          68      3      6
       C MODIF supervis/astermodule         courtois M.COURTOIS        2890     55    185
       C MODIF utilitai/rmfile              courtois M.COURTOIS          66     20     29
 FORTRAN AJOUT calculel/merigy              torkhani M.TORKHANI         105    105      0
 FORTRAN AJOUT elements/porigy              torkhani M.TORKHANI         132    132      0
 FORTRAN AJOUT elements/ptgy02              torkhani M.TORKHANI         159    159      0
 FORTRAN AJOUT elements/te0262              torkhani M.TORKHANI          99     99      0
 FORTRAN AJOUT elements/te0464              torkhani M.TORKHANI          92     92      0
 FORTRAN MODIF algorith/mdadap              torkhani M.TORKHANI         738      5      5
 FORTRAN MODIF algorith/mddevo              torkhani M.TORKHANI         394      4      4
 FORTRAN MODIF algorith/mdeul1              torkhani M.TORKHANI         590     65     17
 FORTRAN MODIF algorith/mdfnli              torkhani M.TORKHANI         122      4      4
 FORTRAN MODIF algorith/mdnewm              torkhani M.TORKHANI         442     76     16
 FORTRAN MODIF algorith/mdrfis              torkhani M.TORKHANI         101     10      5
 FORTRAN MODIF algorith/mdtr74              torkhani M.TORKHANI         902     45     17
 FORTRAN MODIF algorith/ssdt74              torkhani M.TORKHANI         411      8      7
 FORTRAN MODIF assembla/nddl                lefebvre J-P.LEFEBVRE        47      2      2
 FORTRAN MODIF calculel/editgd              lefebvre J-P.LEFEBVRE       107      2      2
 FORTRAN MODIF calculel/exisdg              lefebvre J-P.LEFEBVRE        45      2      2
 FORTRAN MODIF calculel/op0009              torkhani M.TORKHANI         205      4      1
 FORTRAN MODIF jeveux/impmem                lefebvre J-P.LEFEBVRE        44      2      2
 FORTRAN MODIF jeveux/jefini                lefebvre J-P.LEFEBVRE       197      1      2
 FORTRAN MODIF modelisa/op0005              lefebvre J-P.LEFEBVRE       174      6      2
 FORTRAN MODIF postrele/iposdg              lefebvre J-P.LEFEBVRE        97      2      2
 FORTRAN MODIF utilifor/u2mesg              courtois M.COURTOIS         145      3      3
 FORTRAN MODIF utilitai/rsinfo              courtois M.COURTOIS         422      1      7
 FORTRAN MODIF utilitai/titre1              courtois M.COURTOIS         157     16      6
       H AJOUT include/aster_exceptions     courtois M.COURTOIS          61     61      0
  PYTHON AJOUT Macro/calc_essai_geomeca_ops   cuvillie M.CUVILLIEZ         87     87      0
  PYTHON AJOUT Macro/geomec_essais          cuvillie M.CUVILLIEZ        897    897      0
  PYTHON AJOUT Macro/geomec_utils           cuvillie M.CUVILLIEZ        908    908      0
  PYTHON MODIF Build/B_ETAPE                courtois M.COURTOIS         844      5      5
  PYTHON MODIF Cata/ops                     courtois M.COURTOIS         478      2      2
  PYTHON MODIF Execution/genpy              cuvillie M.CUVILLIEZ        318      3      3
  PYTHON MODIF Execution/i18n               courtois M.COURTOIS          73      5      2
  PYTHON MODIF Macro/gene_acce_seisme_ops    zentner I.ZENTNER          274     62     54
  PYTHON MODIF Macro/macr_spectre_ops       courtois M.COURTOIS         377      2      2
  PYTHON MODIF Messages/compor2             cuvillie M.CUVILLIEZ        271    121      1
  PYTHON MODIF Messages/jeveux1             lefebvre J-P.LEFEBVRE       453      3      3
  PYTHON MODIF Messages/modelisa10          lefebvre J-P.LEFEBVRE       101      5      1
  PYTHON MODIF Messages/utilitai4           courtois M.COURTOIS         326      2      2
  PYTHON MODIF Noyau/N_ASSD                 courtois M.COURTOIS         235      5      3
  PYTHON MODIF Noyau/N_ENTITE               courtois M.COURTOIS         242      3      3
  PYTHON MODIF Noyau/N_JDC_CATA             courtois M.COURTOIS         137      4      4
  PYTHON MODIF Noyau/N_OBJECT               courtois M.COURTOIS         134      3      3
  PYTHON MODIF Noyau/N_utils                courtois M.COURTOIS         208     13      2
  PYTHON MODIF Noyau/N_VALIDATOR            courtois M.COURTOIS        1397     17     17
  PYTHON MODIF Utilitai/gauss_process        zentner I.ZENTNER          303     41     18
  PYTHON MODIF Utilitai/Table               courtois M.COURTOIS        1019      3      2
  PYTHON MODIF Validation/V_ETAPE           courtois M.COURTOIS         240      5      5
  PYTHON MODIF Validation/V_MCCOMPO         courtois M.COURTOIS         127      5      3


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :   18        5057      5057             +5057
 MODIF :  140       43538      1214     863      +351
 SUPPR :    0           0                 0        +0
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :  158       48595      6271     863     +5408 
