========================================================================
Version 10.6.9 du : 31/05/2012
========================================================================


-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR sfayolle     FAYOLLE Sebastien      DATE 05/29/2012 - 05:53:19

--------------------------------------------------------------------------------
RESTITUTION FICHE 018677 DU 2012-04-08 12:34:04
TYPE anomalie concernant Code_Aster (VERSION 11.1)
TITRE
    DEFI_GLRC: mots-clés MP1X, MP2X, MP1Y, MP2Y inopérants
FONCTIONNALITE
   Anomalie
   ~~~~~~~~~
   
   Dans DEFI_GLRC pour RELATION='GLRC_DAMA' :
   1) les mots-clés MP1X, MP2X, MP1Y et MP2Y qui définissent les limites du critère de 
   plasticité de Johansen sont inopérants. Ces mots clés peuvent être soient des 
   fonctions soient des constantes.
   2) les mots-clés BT1, BT2, EAT et OMT qui servent dans le calcul de la matrice de 
   cisaillement transverse sont inopérants.
   
   Impacts code
   ~~~~~~~~~~~~~
   
   1) Catalogue de commande defi_glrc.capy
   ------------------------------------------
   
   Pour le critère de plasticité, on définit deux jeux de mots clés :
   _MP1X, MP1Y, MP2X et MP2Y dans le cas où on est en présence de réels
   _MP1X_FO, MP1Y_FO, MP2X_FO et MP2Y_FO dans le cas où on définit des listes de réels
   
   Comme on ne peut pas mélanger les types, on ajoute les règles suivantes :
   _ENSEMBLE('MP1X', 'MP1Y', 'MP2X', 'MP2Y')
   _ENSEMBLE('MP1X_FO', 'MP1Y_FO', 'MP2X_FO', 'MP2Y_FO')
   _PRESENT_ABSENT('MP1X', 'MP1X_FO', 'MP1Y_FO', 'MP2X_FO', 'MP2Y_FO')
   
   Pour le cisaillement transverse, on ajoute les mots-clés BT1, BT2, EAT et OMT qui 
   sont des réels. L'utilisateur peut soit renseigner BT1 et BT2 soit EAT et OMT mais 
   pas les quatre paramètres en même temps.
   
   2) Fortran
   ------------
   
   2.1) dglrda.f
   
   Cette routine appelé par DEFI_GLRC réalise l'homogénéisation des paramètres de la 
   dalle en béton armé et vérifie la cohérence des paramètres utilisateurs. 
   On a ajouté les appels à BT1, BT2, EAT et OMT. Si on ne trouve que EAT et OMT, on 
   calcul BT1 et BT2 par la formule :
   
   BTI = 5.D0/6.D0*HH/2.D0*(EB/(1+NUB)+EAT*OMT)
   
   Dans le cas où l'utilisateur n'a pas renseigné les MPIJ ou les MPIJ_FO, on fait 
   comme avant appel à moconm.f pour calculer les limites du critères de plasticité et 
   ses dérivées.
   
   Si l'utilisateur a renseigné les MPIJ_FO alors on appelle mocon2.f pour calculer les 
   dérivées.
   
   Si l'utilisateur a renseigné les MPIJ alors on remplit directement les valeurs 
   maximales du critères.
   
   2.X) mppffn.f
   
   Cette routine calcule notamment les moments limites de plasticité. On introduit la 
   gestion du cas où on utilise des constantes.
   
   2.X) restzo.f
   
   Cette routine calcule la fonction indiquant si on est proche du somment du cône. On 
   introduit la gestion du cas où on utilise des constantes.
   
   2.X) glrcmm.f
   
   Cette routine récupère les bornes du critère de plasticité. On la modifie pour 
   traiter le cas où ceux-ci sont définis par des fonctions ou des constantes
   
   2.X) cdnfon.f
   
   Cette routine calcul la dérivée numérique d'une fonction. On lui ajoute la 
   possibilité de retourner un code retour IER=2 quand la fonction n'existe pas. De 
   plus la valeur de la dérivée est initialisée à 0 dans tous les cas.
   
   2.X) dxglrc.f
   
   Cette routine sert à appeler la ldc GLRC_DAMA ou GLRC_DM. Dans le cas de 
   l'utilisation d'élément prenant en compte le cisaillement transverse, on calculait 
   les BTI. Maintenant on récupère ceux définis ou calculés dans DEFI_GLRC.
   
   2.X) glrcad.f 
   
   Suppression des appels à JEMARQ et JEDEMA
   
   2.X) autres
   
   D'autres modifications mineures dans mmfonc.f, moconm.f
   
   3) Structure de donnée sd_mater.py
   ---------------------------------------
   
   On modifie la routine python de vérification de la structure de donnée sd_mater. 
   Initialement dans GLRC_DAMA, on crée des fonctions qui décrive le critère de 
   plasticité. Ces sd_fonction sont vérifiés. Dans le cas où on utilise des constantes, 
   il ne faut pas chercher à les vérifier.
   
   Validation
   ~~~~~~~~~~~~
   
   Pour tester l'utilisation des mots clés MPIJ_FO, on modifie le cas test sdns106a.
   Pour tester les mots clés BT1, BT2, on modifie sdns108a.
   Pour tester les mots clés EAT, OMT, on modifie sdns108b.
   Pour tester les mots clés MPIJ, on introduit une nouvelle modélisation sdns108c pour 
   laquelle on a une référence issue d'Europlexus
   
   On passe aussi l'ensemble des cas tests utilisant GLRC_DAMA
   
   Impact documentaire
   ~~~~~~~~~~~~~~~~~~~~~~
   
   [U4.42.06] Opérateur DEFI_GLRC
   [V5.06.108] SDNS108 - Réponse dynamique d'une dalle en béton armé appuyée sur 4 
   cotés soumise à une charge concentrée
RESU_FAUX_VERSION_EXPLOITATION    :  OUI   DEPUIS : 10.0.0
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 11.0.0
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.42.06, V5.06.108
VALIDATION
    cas test
DEJA RESTITUE DANS : 11.1.23
NB_JOURS_TRAV  : 9.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 018902 DU 2012-05-24 07:12:23
TYPE anomalie concernant Code_Aster (VERSION 11.1)
TITRE
    Plantage dans plexu02a
FONCTIONNALITE
   Problème
   ~~~~~~~~~
   
   Suite à ma restitution 18677, le cas test plexu02a ne fonctionne plus.
   En effet, les mesages d'erreur sont explicites :
   _il manque EAT
   _le type attendu pour MPIJ n'est pas le bon.
   
   Correction
   ~~~~~~~~~~~
   
   Le premier problème vient du fait que j'ai rendu obligatoire le renseignement de EAT (module d'Young des 
   aciers transverses) quand on renseigne une densité de ferraillage d'aciers transverse OMT.
   
   Le deuxième problème vient du fait que pour une plus grande lisibilité, dans la fiche 18677, j'ai introduit 
   des nouveaux mots clés. En effet, les MPIJ sont des réels et les MPIJ_FO sont des fonctions. Ils suffit de 
   remplacer dans le cas test MPIJ par MPIJ_FO et transformer les DEFI_LIST_REEL en DEFI_FONCTION.
   
   Impact
   ~~~~~~~~
   
   plexu02a.comm
   
   Validation
   ~~~~~~~~~~~~
   
   Cas test plexu02a
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    cas test
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR brie         BRIE Nicolas           DATE 05/29/2012 - 05:53:20

--------------------------------------------------------------------------------
RESTITUTION FICHE 018868 DU 2012-05-15 09:52:00
TYPE anomalie concernant Code_Aster (VERSION 11.1)
TITRE
    NORM_MODE : bug si modes issus de DEFI_BASE_MODALE et norme par rapport xc3xa0 une matrice
FONCTIONNALITE
   Probleme:
   l'operateur NORM_MODE plante avec un message pas clair lorsqu'on essaie de normer des
   modes issus de DEFI_BASE_MODALE, mais qu'on n'a pas donne en entree de NORME_MODE les deux
   matrices MASSE et RAIDE. Le message (variant selon le cas) est du type :
      !-----------------------------------------------------------------------------------!
      ! <EXCEPTION> <JEVEUX_26>                                                           !
      !                                                                                   !
      !      Objet JEVEUX inexistant dans les bases ouvertes : >????????           .REFA< !
      !      l'objet n'a pas Ã©tÃ© crÃ©Ã© ou il a Ã©tÃ© dÃ©truit                            
       !
      !-----------------------------------------------------------------------------------!
   Si la base modale contient des modes complexes et qu'on n'a pas donne de matrice AMOR en
   entree, on obtient un message similaire.
   
   ---------------------
   Solution:
   On ajoute des filtres dans les sources fortran (ce n'est pas possible dans le catalogue de
   commande).
   Au cours d'une boucle deja existante sur les modes presents dans le concept d'entree, on
   teste le caractere reel ou complexe des modes.
   Si la base ne contient que des modes reels, on renvoie le nouveau message suivant
   (ALGELINE_6) si l'utilisateur n'a pas renseigne a la fois RAIDE et MASSE (les deux sont
   necessaires pour recalculer les parametres modaux) :
     
   !-----------------------------------------------------------------------------------------------------------------!
      ! <F> <ALGELINE_6>                                                                    
                              !
      !                                                                                     
                              !
      !  La base modale Ã  normer est issue de DEFI_BASE_MODALE.                            
                               !
      !  Pour pouvoir mettre à jour les paramÃ¨tres modaux, il faut donc donner les matrices
   de raideur et de masse. !
      !  ---------                                                                          
                              !
      !  Conseil :                                                                          
                              !
      !  Renseignez les mot-clÃ©s RAIDE et MASSE.                                           
                               !
      !                                                                                     
                              !
      !                                                                                     
                              !
      ! Cette erreur est fatale. Le code s'arrÃªte.                                         
                               !
     
   !-----------------------------------------------------------------------------------------------------------------!
   
   Si la base contient des modes complexes, et que l'utilisateur n'a pas renseigne en plus le
   mot-cle AMOR, un nouveau message (ALGELINE_8) est emis :
      !--------------------------------------------------------------------------------!
      ! <F> <ALGELINE_8>                                                               !
      !                                                                                !
      !  La base modale est issue de DEFI_BASE_MODALE et contient des modes complexes. !
      !  Pour normer par rapport Ã  RIGI_GENE ou MASS_GENE,                             !
      !  il faut donner une matrice d'amortissement.                                   !
      !  ---------                                                                     !
      !  Conseil :                                                                     !
      !  Renseignez le mot-clÃ© AMOR.                                                   !
      !                                                                                !
      !                                                                                !
      ! Cette erreur est fatale. Le code s'arrÃªte.                                     !
      !--------------------------------------------------------------------------------!
   
   --------------
   Impacts
   * fortran :  op0037.f
   * python :   algeline.py
   * doc :      U4.52.11 (NORM_MODE)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.52.11
VALIDATION
    cas-test avec NORM_MODE + test personnel
NB_JOURS_TRAV  : 2.0
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR assire       ASSIRE Aimery          DATE 05/29/2012 - 05:53:21

--------------------------------------------------------------------------------
RESTITUTION FICHE 018826 DU 2012-05-07 09:14:34
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    CALC_EUROPLEXUS : problème avec la création des ORTS
FONCTIONNALITE
   Problème dans CALC_EUROPLEXUS :
   -------------------------------
   
   L'opérateur ne définit pas de "ORTS" pour tous les groupes affectés par GLRC. Le problème
   se produit lorsqu'on affecte le même matériau à deux lignes distinctes :
   
   AFFE=(._F(GROUP_MA.=.('DALQ1'),MATER.=.MAT1),
   ......._F(GROUP_MA.=.('DALQ2'),MATER.=.MAT1),
   
   
   Correction :
   ------------
   
   ligne 1061 :    self.gmaGLRC.extend(group_ma)
   n'est appelé que si le matériau n'était pas déjà présent dans dic_mater.
    ( ligne 1045 :   if not dic_mater.has_key(nom_mater):
   
   Il faut donc ajouter un else à ce if : 
   
   else :
   ....if beton:
   ........self.gmaGLRC.extend(group_ma)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    plexu02a
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

 CASTEST MODIF plexu02a                      macocco K.MACOCCO          449      2     12
CATALOPY MODIF commande/defi_glrc            macocco K.MACOCCO          112      2      7
 FORTRAN MODIF algeline/op0037               macocco K.MACOCCO          663     20      6
  PYTHON MODIF Macro/calc_europlexus_ops     macocco K.MACOCCO         2583      4      1
  PYTHON MODIF Messages/algeline             macocco K.MACOCCO          447     20      2


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :    0           0         0                +0
 MODIF :    5        4254        48      28       +20
 SUPPR :    0           0                 0        +0
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :    5        4254        48      28       +20 
