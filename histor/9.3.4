

-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR abbas        ABBAS Mickael          DATE 07/07/2008 - 12:06:08

--------------------------------------------------------------------------------
RESTITUTION FICHE 012252 DU 2008-06-30 07:56:05
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   tests ssnv104f, ssnv128a et j en mxc3xa9moire dynamique
FONCTIONNALITE
   Y a un bug dans l'appariement nodal.
   Quand appariement nodal, on dit NUM_NOEUD = ABS(NUM_MAILLE) dans CFTANR
   Il y a confusion entre le numero ABSOLU du noeud dans le maillage et le numero relatif du
   noeud de contact (dans les SD contact)
   
   Correction dans rechno+cftanr
   Les cas-tests sont OK (!)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 9.2.18
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   cas-tests eux-mexc3xaam en mxc3xa9moire dynamqiue
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR assire       ASSIRE Aimery          DATE 01/07/2008 - 18:05:02

--------------------------------------------------------------------------------
RESTITUTION FICHE 010834 DU 2007-05-04 14:39:25
TYPE evolution concernant Code_Aster (VERSION )
TITRE
   Chainage Aster-Europlexus
FONCTIONNALITE
   la restitution de cette fiche est reporté en NEW9.3, après juin 2008.
   Elle reste pour le moment en attente valide_EDA
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U7.03.10
VALIDATION
   zzzz235a
NB_JOURS_TRAV  : 30.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR desoza       DE SOZA Thomas         DATE 08/07/2008 - 10:59:11

--------------------------------------------------------------------------------
RESTITUTION FICHE 011946 DU 2008-04-08 15:43:31
TYPE evolution concernant Code_Aster (VERSION )
TMA : CS
TITRE
   Maj pylotage pour Salome 4.1
FONCTIONNALITE
   Objet
   =====
   
   Cette fiche a eu pour but de porter Pylotage vers Salomé 4 mais aussi de rendre le
   maintien en phase de Pylotage plus simple à l'avenir.
   
   Description
   ===========
   
   - Désormais les méthodes python Salomé de GEOM/SMESH sont recopiées telles quelles depuis
   une distribution Salomé (on copie les fichiers $ROOT_SALOME/GEOM*/bin/salome/geompyDC.py
   et $ROOT_SALOME/SMESH*/bin/salome/smeshDC.py). Quelques modifications sont à apporter
   ensuite à ces fichiers, on trouvera dans l'archive "patch.tar.gz" jointe à la fiche,
   l'essentiel des modifs.
   Reste encore les méthodes d'export de maillages (SMESH) qui sont surchargées pour
   permettre de gérer le fait qu'un Salomé est distant (simple enrobage).
   - Le portage vers la Salomé 4 a aussi pris en compte les fiches 11481 et 11073 sur le
   module VISU (pour Stanley).
   
   Remarque
   ========
   
   Désormais les méthodes disponibles dans Pylotage sont sensiblement les mêmes que celles de
   Salomé, on peut donc utiliser la doc TUI sans encombre. A contrario, il faut suivre les
   évolutions de Salomé avec attention.
   
   Installation
   ============
   
   Voir l'article wiki qui détaille cela. Pour récupérer Pylotage :
   
   desoza@claut621:~$ cd /tmp
   desoza@claut621:/tmp$ svn export svn://cla02aster/astersalome/pylotage/tags/2.0.1
   pylotage-2.0.1
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   perso
--------------------------------------------------------------------------------
RESTITUTION FICHE 012085 DU 2008-05-13 09:28:50
TYPE evolution concernant Code_Aster (VERSION )
TITRE
   Installation de Salomxc3xa9 sur Bull
FONCTIONNALITE
   Objet
   =====
   
   Cette fiche avait pour but de rendre l'installation brute de Salomé sur la Bull (version
   3.2.9 et 4.1.2) utilisable dans Aster (via Pylotage).
   
   Description
   ===========
   
   ** Un grand merci à Aimery pour m'avoir aidé à faire un script de lancement de Salomé
   utilisable par tout le monde et qui permette d'appeler Salomé depuis EXEC_LOGICIEL avec
   une commande du type :
   
   [desoza@aster3 ~]$ /aster/outils/SALOME_4.1.2/AMA/runSalome -t < ex01_cube2build.py
   
   qui si le script python fait un export au format MED produit un maillage.
   
   ** Nous avons installé les 2 prérequis de Pylotage omniORB et omniORBpy dans le répertoire
   /aster/public sur la machine Bull, puis enfin Pylotage (en version 2.0.1) compatible
   Salomé 4.1.3 (mais elle fonctionne aussi avec la 4.1.2 de la Bull).
   
   Remarques
   =========
   
   La version 4.1.2 de Salomé sur la Bull n'est pas validée par NEPAL. A partir de la version
   4.1.3 ce sera le cas car la machine Aster devient une plate-forme cible.
   
   Pour utiliser Pylotage, il faut pour l'instant surcharger le config.txt pour indiquer le
   chemin (via un script shell) du module Python.
   
   La première utilisation visée de Pylotage sur la Bull (hors Stanley) et le portage de
   MACR_CABRI_MAIL vers Salomé (Fiche 12237).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   perso
NB_JOURS_TRAV  : 1.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 012158 DU 2008-06-04 09:45:10
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TMA : DeltaCad
TITRE
   test de contact ssnv104i devient NOOK quand on raffine le maillage
FONCTIONNALITE
   Objet
   =====
   
   Le futur cas-test PERF005A est une copie de SSNV104I (contact de Hertz entre deux sphères)
   dont on a raffiné le maillage.
   Ce maillage produit avec Gibi est raffiné grâce au fichier de géométrie paramétré. Par
   ailleurs le maillage est généré à la volée avec la commande EXEC_LOGICIEL.
   Avec un maillage très raffiné (317 000 PENTA6), le test devient NOOK.
   
   Analyse
   =======
   
   J'ai lancé plusieurs variantes STA9.2 et STA9.3, avec EXEC_LOGICIEL, avec PRE_GIBI et un
   maillage produit par gibi sur ma machine :
   
   STA9.2 / EXEC_LOGICIEL / OK
   STA9.3 / EXEC_LOGICIEL / NOOK
   
   STA9.2 / PRE_GIBI      / OK
   STA9.3 / PRE_GIBI      / OK
   
   En récupérant le maillage Gibi produit par EXEC_LOGICIEL sur la Bull et en le comparant
   avec le maillage produit par Gibi sur ma machine, on voit que la connectivité est la même
   mais que certaines coordonnées sont légèrement différentes (on est loin après la virgule).
   Est-ce que cela explique le NOOK ? Pas sûr.
   
   La différence majeure entre 9.2 et 9.3 sur le contact, c'est le changement de méthode de
   projection. Est-ce que la nouvelle méthode de projection est plus sensible à un mauvais
   maillage ? Pourtant les deux maillages sont "aussi mauvais" l'un et l'autre.
   
   
   En fait le problème vient du mot-clé TOLE_PROJ_EXT. Il est fixé dans ce cas-test à
   TOLE_PROJ_EXT=0.01. Dès que l'on raffine, cette valeur est trop dure car du coup le noeud
   situé au pôle sur la sphère (là où la pression est la plus grande), est exclus de
   l'appariement et donc du contact. On constate donc une interpénétration (voir image
   interp.png).
   En repassant à la valeur par défaut (0.5), le test redevient OK et l'interpénétration
   disparaît. Les contraintes redeviennent continues (image gauss.png).
   
   Conclusion
   ==========
   
   RAS donc sur le contact. Une anomalie dans Salomé sur l'affichage des points de Gauss des
   pyramides a cependant été découverte (Fiche 12215).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   sur le cas-test
--------------------------------------------------------------------------------
RESTITUTION FICHE 012187 DU 2008-06-12 07:28:55
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Contact : format d'affichage
FONCTIONNALITE
   L'affichage en INFO=2 des informations développeurs de contact affichait : 
   
   <CONTACT> INFOS SPECIFIQUES SUR LES FORMULATIONS MAILLEES - NIVEAU DEVELOPPEUR
    <CONTACT>          55848 55849 55850 55851 ***** ***** ***** *****
    <CONTACT>          ***** ***** ***** ***** ***** ***** ***** *****
   
   pour des maillages comportant plus de 100000 noeuds.
   
   On passe le format en I7 (jusqu'à 10000000 de noeuds donc) et on réduit le nombre
   d'affichages par ligne à 6 colonnes.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   nxc3xa9ant
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 012272 DU 2008-07-07 07:20:53
TYPE express concernant Code_Aster (VERSION 7.0)
TITRE
   MUMPS - mode verbeux activxc3xa9 par dxc3xa9faut
FONCTIONNALITE
   Le mode verbeux a été activé par défaut par erreur lors de la dernière restit. On repasse
   sur un affichage fonction de INFO=1,2.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   nxc3xa9ant
NB_JOURS_TRAV  : 0.01
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR foucault     FOUCAULT Alexandre     DATE 07/07/2008 - 17:42:17

--------------------------------------------------------------------------------
RESTITUTION FICHE 012221 DU 2008-06-20 12:49:57
TYPE anomalie concernant Code_Aster (VERSION 9.4)
TITRE
   En NEW9.3.2, le cas-test wtnv134a s?arrete en ERREUR_<F> sur Calibre 5 (claut626).
FONCTIONNALITE
   Probleme releve:
   ----------------
   Suite au développement de S.Meunier dans mgauss.f, une erreur 
   fatale a été constatée dans le cas test wtnv134a. 
   
   Localisation de l'erreur:
   -------------------------
   Cette erreur provient de l'utilisation de mgauss.f pour calculer 
   le déterminant de la matrice tangente DSDE de la loi de Hujeux, 
   dans la routine nmhuj.f.
   
   Solution proposee:
   ------------------
   En modifiant un caractère d'appel de la routine, on empêche le 
   problème de se produire: Passage de 'NFSD' à 'NCSD'.
   Mais le vrai probleme provient d'une erreur liee au calcul de ce 
   determinant. Il ne peut être entrepris que lors d'un appel en 
   mode FULL_MECA, car la valeur du determinant est stockee dans la 
   variable interne VINF(33)
   
   Routine modifiee:
   -----------------
   nmhuj.f
   
   Validation:
   -----------
   Cas test wtnv134a: Apres modification, le cas-test se deroule 
   normalement
   
   Impact documentaire:
   --------------------
   Doc R7.01.23 (loi de Hujeux)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : R7.01.23
VALIDATION
   rxc3xa9fxc3xa9rence logiciel GEFDYN
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 012226 DU 2008-06-23 08:42:57
TYPE anomalie concernant Code_Aster (VERSION 9.4)
TITRE
   Loi de Hujeux: Incrxc3xa9ment de dxc3xa9formation volumique nul
FONCTIONNALITE
   Probleme releve:
   ----------------
   Le probleme s'est produit lors de l'étude d'une colonne de sol 
   sous séisme avec la loi de Hujeux. Il a été constaté qu'après la 
   consolidation statique, lors de l'initialisation de la solution 
   pour le calcul dynamique, après la restitution liée à la fiche 
   11399, le calcul ne pouvait plus se lancer, avec échec au 
   premier pas de temps.
   
   Localisation de l'erreur:
   -------------------------
   Suite à l'introduction de mecanisme de traction (fiche 11399), 
   des modifications ont ete apportees à la routine hujela.f. 
   Cette routine permet notamment de traiter l'élasticité non-
   linéaire dans la loi de Hujeux.
   Si l'etat de contraintes isotrope entre en traction et dépasse 
   la valeur limite fixee par l'utilisateur (PISO=1.5*PTRAC), il 
   est necessaire de limiter la valeur a PISO et non à une pression 
   isotrope nulle.
   Cette fiche permet donc de ramener l'etat de contraintes sur la 
   surface de charge.
   
   Routine impactee:
   ----------------
   hujela.f
   
   Impact documentaire:
   -------------------
   R7.01.23
   
   Version Code_Aster:
   ------------------
   NEW9
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : R7.01.23
VALIDATION
   NON REGRESSION
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR galenne      GALENNE Erwan          DATE 07/07/2008 - 13:03:45

--------------------------------------------------------------------------------
RESTITUTION FICHE 012246 DU 2008-06-27 12:14:45
TYPE anomalie concernant Code_Aster (VERSION 9.3)
TITRE
   En NEW9.3.2, le cas-test sdlv123b s?arrete en NOOK sur Calibre 5 (clau5aaa).
FONCTIONNALITE
   Anomalie
   --------
   Le cas test sdlv123b s'arrête en NOOK sur Calibre 5 : le G local (opérateur CALC_G, option
   CALC_G, lissage Lagrange - Legendre) est faux sur le noeud testé.
   La valeur locale de G est même non physique (valeurs en 10^20 en certains noeuds).
   
   Explication
   -----------
   Les valeurs élémentaires de G sont calculées pour les NNO noeuds du fond de fissure
   (LISSAGE_THETA='LAGRANGE'), et on cherche les valeurs locales sur la base des (NDEG+1)
   polynomes de Legendre (LISSAGE_THETA='LEGENDRE'). Pour passer des valeurs élémentaires aux
   valeurs locales, il faut résoudre un problème de NNO équations à (NDEG+1) inconnues
   (Attention ! erreur dans la doc R, il ne faut pas oublier le polynome de degré 0)
   La résolution se fait par appel à mgauss (méthode V).
   
   Dans le cas test, NNO=5 et NDEG=5 (valeur par défaut) --> on cherche donc à résoudre un
   problème de 5 équations à 6 inconnues !
   Sur Bull (et sur Calibre5 en Debug), la routine mgauss réussit à résoudre le système et
   donne une solution physiquement acceptable (mais pas de bonne qualité !).
   Sur Calibre5 en Nodebug, la solution obtenue est non physique.
   
   On note par ailleurs :
   - que le déterminant de la matrice à inverser est très faible ;
   - qu'avec la méthode W de mgauss, on s'arrête (proprement) avec un message indiquant que
   la matrice n'est pas inversible.
   
   En conclusion : on cherche à résoudre un problème qui n'est inversible.. et on avait de la
   chance jusqu'à présent d'obtenir une solution qui n'était pas complètement abérrante !
   
   Correction
   ----------
   Jusqu'à présent on vérifiait que NDEG <= NNO (routine op0100 --> message Rupture0_84). Il
   faut en fait vérifier que NDEG < NNO.
   On change aussi le degré du polynome dans le fichier de commande, et la valeur du test de
   non-régression. 
   --> correction à reporter aussi en v8.
   
   Résultat faux ?
   --------------
   Il y a un risque de résultat faux pour les lissages de Lagrange - Legendre (cas qui n'est
   pas le plus fréquent), si NDEG=NNO (et donc dans les cas où le nombre de noeuds en fond de
   fissure est inférieur à 7).
   Le risque est donc faible.
RESU_FAUX_VERSION_EXPLOITATION    :  OUI   DEPUIS : 8.0.0
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 9.0.0
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : R7.02.01, U4.82.03,V2.04.123
VALIDATION
   sdlv123b
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------
RESTITUTION FICHE 012161 DU 2008-06-04 12:14:24
TYPE anomalie concernant Code_Aster (VERSION 9.2)
TITRE
   POST_K1_K2_K3 et modelisation X-FEM
FONCTIONNALITE
   Anomalie
   --------
   L'opérateur POST_K1_K2_K3 plante brutalement dans une étude sur une modélisation X-FEM en
   3D pour des maillages fins.
   
   Explication
   -----------
   Le plantage est dû à une mémoire insuffisante pour POST_K1_K2_K3. 
   Cet opérateur est en effet très gourmant (nombreux PROJ_CHAM), et il faut lui réserver de
   la place. Pour cela, il faut distinguant quand on lance le calcul la mémoire totale et la
   mémoire Aster. En ajustant correctement les paramètres de la mémoire (puis les options de
   l'opérateur), on arrive à obtenir une solution satisfaisante.
   
   Correction
   ----------
   Cette fiche ne signale donc pas une anomalie... mais a permis d'en détecter une (nommage
   des objets dans la macro-commande limitant de fait le nombre de points de fond à 99). On
   corrige post_k1_K2_k3_ops.py
   
   Remarques
   ---------
   -> quand on plante pour un problème mémoire dans une macro-commande python, le message
   d'erreur n'est pas explicite. Y'aurait-il un moyen d'améliorer ça ?
   
   -> POST_K1_K2_K3 appelle, pour chaque point du fond, PROJ_CHAM. On constate que PROJ_CHAM
   demande de plus en plus de temps à chaque appel (fiche émise : 12175)
   
   -> Le calcul est fait pas défaut sur chaque point du fond, ce qui n'est pas forcément
   optimal : il serait sans doute préférable de faire le calcul sur un nombre de points fixés
   par l'utilisateur, répartis uniformément le long du fond. Une réflexion est en cours pour
   savoir où faire les développements (dans DEFI_FISS_XFEM ou dans POST_K1_K2_K3 / CALC_G).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   xc3xa9tude fournie
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------
RESTITUTION FICHE 012227 DU 2008-06-23 15:55:51
TYPE aide utilisation concernant Code_Aster (VERSION 9.3)
TITRE
   MACR_LIGN_COUPE et POST_RCCM
FONCTIONNALITE
   Contexte
   --------
   L'opérateur POST_RCCM utilise en entrée des tables de relevés de contraintes sur des
   lignes de coupe. Ces lignes doivent être traversantes (sauf cas particulier ?).
   Ces tables peuvent être issues de POST_RELEVE_T ou MACR_LIGN_COUPE.
   
   Problème rencontré
   ------------------
   L'utilisateur (R. Perony) compare les valeurs de contraintes linéarisées (PM, PB, ...)
   pour deux lignes de coupes qui sont sensées être identiques ("le 2ème ligament est juste
   une extension plus longue du premier hors de l'épaisseur de la structure"). Il s'étonne
   que les résultats soient différents.
   
   Explication
   -----------
   Les deux lignes de coupe utilisées sont en fait différentes :
   - pour la 1ère ligne de coupe, le noeud extrémité est bien à la limite de la matière mais
   le noeud origine est dans la matière (==> la ligne de coupe n'est pas traversante)
   - pour la 2ème ligne de coupe, les noeuds origine et extrémité sont à l'extérieur de la
   matière. L'opérateur MACR_LIGN_COUPE sélectionne correctement les noeuds dans et hors de
   la matière.
   
   Au final, le calcul sur la première ligne de coupe n'a pas de sens... et il n'y avait
   aucune raison de trouver le même résultat entre les deux calculs.
   
   Conclusion
   ----------
   Cela n'a a priori pas de sens de calculer le PM-PB sur une partie seulement d'une ligne
   de coupe traversant la structure. 
   Pour être sûr de traverser complètement la structure, dans les cas où l'on ne connait pas
   exactement les points origines et extrémités, il est recommandé de les choisir
   "franchement" à l'extérieur de la matière : l'opérateur MACR_LIGN_COUPE sélectionnera
   lui-même les noeuds à l'intérieur de la matière. (c'est d'ailleurs ce qui a été fait dans
   le fichier de commande de la présente fiche, avec la seconde ligne de coupe)
   On vérifie au passage que le résultat de POST_RCCM est insensible au choix du nombre de
   noeuds dans la ligne de coupe NB_NOEUD_COUPE (moins de 0,1 % d'écart sur le PM-PB entre
   9 et 99 noeuds).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.83.11
VALIDATION
   /
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR laverne      LAVERNE Jérôme         DATE 07/07/2008 - 16:19:51

--------------------------------------------------------------------------------
RESTITUTION FICHE 011744 DU 2008-02-12 17:04:52
TYPE evolution concernant Code_Aster (VERSION 9.4)
TITRE
   Elements d'interface lagrangien augmentxc3xa9
FONCTIONNALITE
   ------------------------------------------------------------------
   MODELE D'INTERFACE
   ------------------------------------------------------------------
   
   Nouvel élément fini permettant de représenter l'amorcage et la 
   propagation de fissures 2D et 3D dans une direction donnée. 
   La loi de propagation est fournie par un modèle cohésif reliant 
   la contrainte normale a l'interface et le saut de déplacement 
   entre les lèvres de la fissure. La résolution du problème de 
   minimisation sous contrainte s'appuie sur une formulation Lagrangien augmenté.
   
   Ce modèle correspond au lot5.1 du projet ENDO qui vise à 
   améliorer la modélisation de la propagation de fissures.
   - Permet de travailler avec des lois cohésives non régularisées
   - Disponible avec des mailles quadratiques.
   - En 2D et 3D.
   
   ------------------------------------------------------------------
   ELÉMENTS FINIS QUADRATIQUES : QUAD8, HEXA20 et PENTA15
   ------------------------------------------------------------------
   Les noeuds milieux portent les multiplicateurs de lagrange 
   qui correspondent à la contrainte normale : SIGN, SITX, SITY 
   
   ------------------------------------------------------------------
   MODELISATIONS : PLAN_INTERFACE, AXIS_INTERFACE, 3D_INTERFACE
   ------------------------------------------------------------------
   2 lois de comportement cohésives
   avec deux parametres materiau : GC et SIGC
   
   CZM_TAC_MIX : 
   Loi cohésive linéaire avec irréversibilité de type TALON-CURNIER
   Paramètre numérique : Penalisation du lagrangien : PENA_LAGR
   
   
   CZM_OUV_MIX : 
   Loi cohésive linéaire en mode I pur si conditions aux limites 
   sur les éléments (ex : conditions de symétrie).
   Paramètres numériques : 
   Penalisation du lagrangien : PENA_LAGR
   Rigidité en mode de glissement : RIGI_GLIS
   
   -----------------------------------------------------------------
   MAILLAGE DES ELEMENTS D'INTERFACE
   -----------------------------------------------------------------
   Pour créer une couche d'éléments d'interface avec la bonne 
   numérotation locale on utilise ORIE_FISSURE (dans MODI_MAILLAGE) 
   qui renumérote si besoin les éléments.
   Cette fonctinalité existe déjà pour les éléments de joint.
   Des travaux sont en cours pour l'améliorer. 
   
   ----------------------------------------------------------------
   AJOUT D'UN DEPLACEMENT DE REFERENCE POUR L'OPTION REFE_FORC_NODA
   ----------------------------------------------------------------
   Dans STAT_NON_LINE, sous CONVERGENCE, l'utilisateur fournit
   une contrainte de référence SIGM_REFE.
   On ajoute la définition d'un deplacement de référence DEPL_REFE
   (dual de la contrainte normale pour ce type d'éléments) 
   nécessaire pour le calcul d'une force de référence.
   
   -----------------------------------------------------------------
   DEFINITION DE L'ORIENTATION DE LA FISSURE AVEC "AFFE_CARA_ELEM"
   -----------------------------------------------------------------
   Dans le .comm l'utilisateur doit fournir les angles d'euler 
   correspondant au passage du repère global au repère local
   à la fissure.
   
   exemple :
   ORIEN_FI=AFFE_CARA_ELEM(
   MODELE=MO,
   MASSIF=(_F(GROUP_MA='JOINTS',ANGL_EULER=(-90, 0 ,-90))))
   
   Cela permet d'avoir le même repère local pour tous les éléments
   finis d'interface et pouvoir ainsi post_traiter des résultats 
   cohérents en mode II ou III. 
   
   ------------------------------------------------------------------
   DETAILS DES AJOUTS (A) ou MODIFICATIONS (M) DES SOURCES     
   ------------------------------------------------------------------
   
   (M) affe_modele.capy   ajout des 3 modélisations xxx_INTERFACE
   (M) defi_materiau.capy ajout de PENA_LAGR et RIGI_GLIS
                          dans RUPT_FRAG
   (M) c_comp_incr.capy   ajout des 2 lois CZM_xxx_MIX
   (M) stat_non_line.capy ajout de DEPL_REFE sous CONVERGENCE
   
   (M) phenomene_modelisation__.cata  ajout des modélisations 
       PLAN_INTERFACE, AXIS_INTERFACE, 3D_INTERFACE
   (M) grandeur_simple__.cata         
       ajout SIGN, SITX et SITY (multipicateurs de lagrange) 
       dans "DEPL_R", "DEPL_F" et "DEPL_C"
       ajout CONT_X CONT_Y CONT_Z (contrainte de minimisation) 
       dans "SIEF_R" et "SIEF_C"
       ajout DEPL dans "PREC" (depl de réf pour REFE_FORC_NODA)
   (M) forc_noda.cata       
       ajout en IN de "PCAMASS  CAMASS" pour recup ANGL_EULER
       avec AFFE_CARA_ELEM  
   (M) refe_forc_noda.cata  idem 
   (M) pilo_pred_elas.cata  idem 
   
   (M) nmpipe.f   ajout de PCAMASS dans la liste des champs IN 
                  (option PILO_PRED_ELAS) et passage de l'argument 
                  CARELE pour définir PCHIN pour PCAMASS
   (M) nmrefe.f   ajout de PCAMASS dans la liste des champs IN 
                  (option REFE_FORC_NODA)             
   (M) nmpilo.f   passage de CARELE et modif de l'appel de nmpipe.f
   (M) nmpich.f   modif de l'appel de nmpilo.f (passage de CARELE)
   (M) nmrepl.f   modif de l'appel de nmpilo.f (passage de CARELE)                           
   (M) op0070.f   Dimension de PARCON : ZPCON=9 (DEPL_REFE)
   (M) nmdocn.f   Ajout de la lecture de DEPL_REFE
   (M) nmrefe.f   Passage de DEPL_REFE a l'option REFE_FORC_NODA
   (M) nminit.f   Commentaire maj : ajout de DEPL_REFE dans PARCON
   
   (A) gener_ei3d_3.cata   EF d'interface 3D (HEXA20, PENTA15)
   (A) gener_ei2d_2.cata   EF d'interface 2D (QUAD8)
   
   (A) czm_ouv_mix.py    catalogue de comportement
   (A) czm_tac_mix.py    catalogue de comportement 
   
   (A) eiangl.f    Définition des angles d'euler aux noeuds
   (A) eicine.f    Calcul des éléments cinématiques
   (A) eiinit.f    Initialisation des accesseurs aux ddls
   (A) eifint.f    Options de calcul raph_meca, full_meca etc...
   (A) eifono.f    Option forc_noda
   (A) lceiou.f    Loi de comportement d'ouverture CZM_OUV_MIX
   (A) lc0040.f    numéro de la loi CZM_OUV_MIX
   (A) lceitc.f    Loi de comportement générale CZM_TAC_MIX                          
   (A) lc0041.f    numéro de la loi CZM_TAC_MIX
   (A) eifore.f    Calcul du vecteur nodal de reference
   (A) pipeei.f    Pilotage pred_elas : implantation de TE0359
   (A) pipetc.f    Pilotage pred_elas pour la loi CZM_TAC_MIX
   (A) pipeou.f    Pilotage pred_elas pour la loi CZM_OUV_MIX
   (A) te0359.f    Option PILO_PRED_ELAS
   (A) te0360.f    Options RAPH_MECA, FULL_...
   (A) te0361.f    Options FORC_NODA et REFE_FORC_NODA
   (A) te0362.f    Option COOR_ELGA (3D uniquement)
   
   
   ------------------------------------------------------------------
   VALIDATION
   ------------------------------------------------------------------
   
   (A) ssnp118g   tests élémentaires 2D PLAN et 3D sur CZM_xxx_MIX
   (A) ssnp118h
   (A) ssnp118i
   
   (A) ssna115c   test arrachement 2D AXIS avec CZM_TAC_MIX
   
   (A) ssnv199e   tests DCB 3D avec CZM_OUV_MIX , HEXA20 et PENTA15
   (A) ssnv199f
   
   ------------------------------------------------------------------
   ELEMENTS DE JOINT : INTENDANCE 
   ------------------------------------------------------------------
   
   (M) lcejli.f  modif de l'écriture de VIP(4) mais pas de la val
   (M) ssnp118abcdef.mail  modif du sens de num de la maille de joint
   (M) pipeba.f            modif de commentaires
   (M) czm_lin_reg.py    modif de doc et de SEUIL_DEP en SEUILDEP
                         et ajout de modélisation = '3D'  
   (M) czm_exp_reg.py    idem czm_lin_reg.py 
   (A) ssna115b          test arrachement 2D AXIS avec CZM_LIN_REG  
                
   ------------------------------------------------------------------
   MODIFS OU AJOUT DE DOC
   ------------------------------------------------------------------
   
   (A) R3.06.13  Doc des éléments d'interface.
   (A) R7.02.11  Doc des ldc cohésives CZM_xxx_MIX
   
   (M) U3.13.14   nouvelles modélisations czm : xxx_INTERFACE
   (M) U4.41.01   AFFE_MODELE
   (M) U4.43.01   DEFI_MATERIAU  
   (M) U4.51.03   STAT_NON_LINE
   (M) U4.51.11   comportements non linéaires
   
   (M) V6.04.199 ajout des modélisations e et f
   (M) V6.03.118 ajout des modélisations g,h et i
   (M) V6.01.115 ajout des modélisations b et c
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : R3.06.13, R7.02.11, U3.13.14, U4.43.01,U4.41.01, U4.51.03, U4.51.11, V6.04.199, V6.03.118, V6.01.115
VALIDATION
   ssnp118efg, ssna115c, ssnv199ef
NB_JOURS_TRAV  : 30.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR meunier      MEUNIER Sébastien      DATE 07/07/2008 - 15:17:14

--------------------------------------------------------------------------------
RESTITUTION FICHE 012173 DU 2008-06-06 17:12:25
TYPE evolution concernant Code_Aster (VERSION )
TITRE
   ARLEQUIN - Amxc3xa9lioration performances de AFFE_CHAR_MECA
FONCTIONNALITE
   Constat :
   ---------
   
   La performance de la construction d'une charge Arlequin dans AFFE_CHAR_MECA n'est pas
   totalement satisfaisante. Elle prend un temps généralement non négligeable et peut même
   être parfois plus longue que la résolution du problème lui-même (comme par exemple dans le
   test sslp104b).
   
   En profilant justement le test sslp104b avec gprof, avec l'aide de Jacques, on se rend
   compte que la routine mgauss.f est appelée 1 376 448 fois. Cette routine sert à résoudre
   un système matriciel linéaire. 3 méthodes sont possibles : 2 par des méthodes Lapack
   (méthodes S et V, V étant la plus rapide des 2) et une par la "méthode Rateau" (W), qui
   est annoncée comme étant la plus rapide des 3. Effectivement, en choisissant simplement la
   méthode Rateau au lieu de la méthode V dans intinc, intsma et refere, on divise par 2 le
   temps passé dans AFFE_CHAR_MECA dans sslp104b.
   
   sslp104b :
   ----------
   
   AFFE_CHAR_MECA   user     system     user + system
   SANS SURCHARGE   14.96     0.58      15.54
   APRES SURCHARGE  6.89      0.50      7.39
   
   Un autre petit test perso sur 2 cubes imbriqués maillés en hexaèdres et en tétraèdres
   confirme ses résultats :
   
   en hexa :
   ---------
   AFFE_CHAR_MECA   user     system     user + system
   SANS SURCHARGE   53.56     1.88      55.44
   APRES SURCHARGE  26.68     1.43      28.12
   
   
   en tetra :
   ----------
   AFFE_CHAR_MECA   user     system     user + system
   SANS SURCHARGE   31.39     1.13      32.52
   APRES SURCHARGE  17.80     0.94      18.74
   
   Je passe donc tous les sources Arlequin qui font intervenir mgauss par la méthode W.
   
   Impact :
   --------
   intinc.f  intsma.f  minter.f  refere.f  sommet.f
   
   Question :
   ----------
   Faut-il généraliser cela aux autres routines du code ?
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   Liste restreinte
NB_JOURS_TRAV  : 3.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 012164 DU 2008-06-05 12:34:03
TYPE anomalie concernant Code_Aster (VERSION 9.3)
TITRE
   ARLEQUIN - bug xc3xa9crasement mxc3xa9moire
FONCTIONNALITE
   Un petit test Arlequin simple joint plante méchamment :
   
   => modèle grossier : un gros cube (100 de côté, pas de discrétisation uniforme de 10 sur
   les arêtes) sur lequel on appuie sur la face supérieure
   
   => modèle fin (patch) : un petit cube à l'intérieur du gros cube (10 de côté, pas de
   discrétisation uniforme de 1 sur les arêtes)
   
   Plantage dans AFFE_CHAR_MECA dans appari.f
   
   <F> <JEVEUX_01>   ECRASEMENT AMONT POSSIBLE ADRESSE >  -2593787
   
   En debug, on apprend que l'instruction coupable est à la ligne 162 de appari.f.
   En passant en debug jeveux, on se rend compte que le problème a en fait lieu à dans
   grmama.f à la ligne 150. On cherche à écrire en dehors du tableau de correspondance
   mailles/mailles.
   
   On agrandit donc ce tableau de manière heuristique. La longueur de &&GRMAMA.LISTE.RESERVE
   est portée de
   
   < NARE = NARE + N*(N-1)/2
   
   à
   
   > NARE = NARE + N*(N-1)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   Test pixc3xa8ce jointe
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR michel       MICHEL-PONNELLE Sylvie   DATE 07/07/2008 - 10:30:57

--------------------------------------------------------------------------------
RESTITUTION FICHE 012229 DU 2008-06-24 14:05:32
TYPE express concernant Code_Aster (VERSION 9.3)
TITRE
   suppression du test ssnx101b et modification de ssnx101a
FONCTIONNALITE
   On supprime la modélisation B du test ssnx101 et on intègre la validation de l'utilisation
   conjointe PILOTAGE/LONG_ARC et RECH_LINEAIRE en réalisant 2 fois le même calcul avec et
   sans recherche linéaire.
   On utilise désormais ITER_LINE_MAXI = 5 (et pas 0 comme dans la version antérieure)
   
   Remarque : on retrouve bien la même solution, même si dans le cas présent la recherche
   linéaire n'apporte rien (seul un incrément utilise des itérations de recherche linéaire,
   et cela a plutôt tendance à ralentir la convergence).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : V6.06.101
VALIDATION
   sans objet
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR pellet       PELLET Jacques         DATE 08/07/2008 - 13:42:29

--------------------------------------------------------------------------------
RESTITUTION FICHE 012281 DU 2008-07-08 07:54:43
TYPE express concernant Code_Aster (VERSION 7.0)
TITRE
   dxc3xa9gradation des performances CPU pour les tests de contact en 9.3.03
FONCTIONNALITE
   Problème:
   ---------
   Suite aux évolutions de la 9.3.03, on constate une baisse significative des performances
   CPU de certains tests de contact.
                                                                                            
                           
   Par exemple: cabri02b : 369 s ->943 s
                                                                                            
                           
   Solution:
   ---------
   Le problème vient de mon évolution (en 9.3.03) concernant l'usage de resoud.f dans la
   routine rldlgb.f
   Je n'avais pas vu que dans rldlgb.f, on utilisait une routine "optimisée" de
   descente/remontée pour la multi-frontale (rlbfr8.f).
                                                                                            
                           
   Je modifie rltfr8.f pour qu'elle appelle rlbfr8.f lorsque le nombre de seconds membres est
   > 4.
                                                                                            
                           
   Validation:
   -----------
   Suite à cette correction, j'ai fait passer les 77 tests de contact les plus dégradés en 9.3.03
                                                                                            
                           
   Notations :
   A : temps CPU version 9.3.02
   B : temps CPU version 9.3.03
   C : temps CPU après correction de rltfr8.f
                                                                                            
                           
   B-C     : gain apporté par la correction
   C-A     : perte (en secondes) liée à l'évolution 9.3.03 (après correction)
   (C-A)/A : perte (en %) liée à l'évolution 9.3.03 (après correction)
                                                                                            
                           
   Au total, pour ces 77 tests, l'évolution 9.3.03 avait fait perdre 24% de temps CPU.
   20% de la perte a été récupérée par la correction présentée ici et il reste 4% de temps perdu.
                                                                                            
                           
   test            A           B          C           B - C       C - A  (C-A)/A
   --------------------------------------------------------------------------------
   ascou04a      172.26      180.04      175.69        4.35        3.43     2%
   ascou08a      101.20      106.17      105.76        0.41        4.56     5%
   ascou09a      172.93      181.53      180.45        1.08        7.52     4%
   ascou19a      703.16      725.98      718.94        7.04       15.78     2%
   aspic07a      313.51      336.11      311.64       24.47       -1.87    -1%
   cabri02a      347.75     1045.16      373.27      671.89       25.52     7%
   cabri02b      369.49      942.93      364.89      578.04       -4.60    -1%
   demo003a      134.17      149.10      158.67       -9.57       24.50    18%
   hsna120a     1728.92     2478.99     1884.34      594.65      155.42     9%
   mac3c01a     1010.36     1053.52     1045.15        8.37       34.79     3%
   sdnl111c      615.24      650.40      633.91       16.49       18.67     3%
   sdnl111d      317.24      326.95      327.33       -0.38       10.09     3%
   sdns105a       67.64       74.96       80.22       -5.26       12.58    19%
   sdnv100f      242.92      255.67      235.78       19.89       -7.14    -3%
   sdnv100j      150.63      154.60      155.49       -0.89        4.86     3%
   sdnv103a      150.87      199.32      144.11       55.21       -6.76    -4%
   sdnv103b      168.01      172.93      173.43       -0.50        5.42     3%
   sdnv104a      271.07      280.15      280.14        0.01        9.07     3%
   sdnv104b      280.53      289.86      301.70      -11.84       21.17     8%
   sdnv105a     1093.11     1155.29     1131.95       23.34       38.84     4%
   sdnv105c     1288.39     1350.36     1271.43       78.93      -16.96    -1%
   sslv313b      571.17      593.85      600.73       -6.88       29.56     5%
   ssna105a       48.91       53.77       56.81       -3.04        7.90    16%
   ssna105b      159.56      170.94      172.25       -1.31       12.69     8%
   ssna111a      158.89      173.25      180.78       -7.53       21.89    14%
   ssna111b      732.50      754.56      751.89        2.67       19.39     3%
   ssna115a       90.15      101.34      104.90       -3.56       14.75    16%
   ssnp110d      172.91      186.35      179.82        6.53        6.91     4%
   ssnp133a       79.22       84.88       85.18       -0.30        5.96     8%
   ssnp133b       41.24       45.12       47.92       -2.80        6.68    16%
   ssnv104i       11.75       20.69       17.12        3.57        5.37    46%
   ssnv108d       82.72       87.44       91.87       -4.43        9.15    11%
   ssnv128b       44.29       48.62       47.33        1.29        3.04     7%
   ssnv128e       64.69       69.53       68.04        1.49        3.35     5%
   ssnv128f      186.65      221.46      192.55       28.91        5.90     3%
   ssnv128g       48.31       52.13       53.84       -1.71        5.53    11%
   ssnv128k      256.60      293.12      259.59       33.53        2.99     1%
   ssnv128l       64.48       67.58       63.24        4.34       -1.24    -2%
   ssnv128m      173.16      179.03      182.48       -3.45        9.32     5%
   ssnv128p      171.14      176.10      174.75        1.35        3.61     2%
   ssnv129b       65.88       78.27       67.53       10.74        1.65     3%
   ssnv166a      119.79      245.69      126.74      118.95        6.95     6%
   ssnv166b      201.76      208.44      218.71      -10.27       16.95     8%
   ssnv166c      249.06      450.77      251.30      199.47        2.24     1%
   ssnv185b       69.86       78.86       75.15        3.71        5.29     8%
   ssnv185f       90.07       97.99       93.97        4.02        3.90     4%
   ssnv185g      142.39      154.59      146.82        7.77        4.43     3%
   ssnv185h       51.16       55.76       57.28       -1.52        6.12    12%
   ssnv185k       40.90       45.27       49.15       -3.88        8.25    20%
   ssnv199b      171.78      182.45      196.52      -14.07       24.74    14%
   ssnv199d      179.67      186.64      188.00       -1.36        8.33     5%
   ssnv209a      120.50      126.94      125.80        1.14        5.30     4%
   ssnv209b       70.29       75.26       80.46       -5.20       10.17    14%
   ssnv209c       90.81       98.07       99.29       -1.22        8.48     9%
   ssnv209d      105.65      109.32      111.21       -1.89        5.56     5%
   ssnv209e      279.93      296.41      275.96       20.45       -3.97    -1%
   ssnv209h      467.50      483.99      481.97        2.02       14.47     3%
   ssnv501c      181.93      192.63      184.15        8.48        2.22     1%
   ssnv504b       76.92      183.23       84.31       98.92        7.39    10%
   ssnv504c       36.48       40.70       40.51        0.19        4.03    11%
   ssnv504f       70.52      166.92       75.39       91.53        4.87     7%
   ssnv504h      179.74      188.85      190.07       -1.22       10.33     6%
   ssnv504i      141.38      147.11      146.78        0.33        5.40     4%
   ssnv505a      477.29      489.15      464.79       24.36      -12.50    -3%
   ssnv505b       74.83       79.60       76.90        2.70        2.07     3%
   ssnv505e       99.26      102.74      102.31        0.43        3.05     3%
   ssnv506a       32.48       36.65       40.91       -4.26        8.43    26%
   ssnv506b       25.34       28.76       32.37       -3.61        7.03    28%
   ssnv506c      347.05      651.14      363.20      287.94       16.15     5%
   ssnv506d      251.94      315.78      261.01       54.77        9.07     4%
   ssnv506e      162.19      176.63      170.58        6.05        8.39     5%
   ssnv506f      671.52      708.14      685.04       23.10       13.52     2%
   yyyy106a      316.76      687.70      331.84      355.86       15.08     5%
   yyyy106b      270.35      658.36      275.24      383.12        4.89     2%
   zzzz231a       61.77       73.58       80.54       -6.96       18.77    30%
   zzzz231b       28.08       33.91       38.30       -4.39       10.22    36%
   zzzz231c       29.71       36.61       39.35       -2.74        9.64    32%
   --------------------------------------------------------------------------------
   TOTAL       18910.00    23462.69    19714.83     3747.86      804.55     4%
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   77 tests bien choisis
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 012282 DU 2008-07-08 08:32:12
TYPE express concernant Code_Aster (VERSION 7.0)
TITRE
   9.3.03 : tous les tests MPI sont cassxc3xa9s
FONCTIONNALITE
   Problème:
   ---------
   Les 24 tests de la liste des tests parallèles mpi sont cassés sur bull en version 9.3.03 :
     ssls09c   ssll117f  ssnp121l  ssnv112d  ssnv173i  wtnp111b
     mumps02a  ssnl101a  ssnv129e  mumps01a  mumps04a  ssna117b
     ssnp118d  wtnp109a  ssnp118a  ssnl125a  ssll106f  wtnv100c
     ssnp116d  ssnp124b  ssnv126a  wtna101a  mumps05a  mumps05b
                                                                                            
                           
   Solution:
   ---------
   J'avais oublié lors de ma dernière restitution d'implémenter les fonctionnalités "BCAST"
   et "REDUCE" de la routine mpicm1a.f.
   Je répare cet oubli.
                                                                                            
                           
   Validation:
   -----------
   J'ai fait passer tous les tests "mpi" (sauf mumps05a,b trop longs). Ils sont tous OK sauf :
     - ssls09c  : il est déjà cassé en séquentiel (fiche 12260)
     - mumps01a : je dois supprimer l'ajout "PETSC" que j'avais fait la semaine dernière dans
   ce test car Petsc ne fonctionne pas sur bull en mode "mpi".
                                                                                            
                           
   Sources modifiés :
   ------------------
   mpicm1a.f
   mumps01a.comm
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   22 tests MPI
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR proix        PROIX Jean-Michel      DATE 07/07/2008 - 12:50:45

--------------------------------------------------------------------------------
RESTITUTION FICHE 011382 DU 2007-10-19 11:54:10
TYPE evolution concernant Code_Aster (VERSION 2.x)
TITRE
   MN08 : Utilisation de DEFI_COMPOR pour remplacer le mot-clxc3xa9 COMP_INCR
FONCTIONNALITE
   Dans le cadre de la fiche 5661, on a restitué un nouveau catalogue de lois de
   comportement, sans impact sur les fichiers de commandes des utilisateurs. Passer
   systématiquement par DEFI_COMPOR serait très impactant, et pas si intéressante que cela.
   Du coup l'intérêt de cette fiche tombe.
   
   Cette fiche est sans suite
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   aucune
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR assire       ASSIRE Aimery          DATE 07/07/2008 - 12:50:45

--------------------------------------------------------------------------------
RESTITUTION FICHE 011267 DU 2007-09-21 11:02:32
TYPE aide utilisation concernant Salome (VERSION )
TITRE
   Stanley et Salome : comment configurer STANLEY en DHCP / IP fixe
FONCTIONNALITE
   Le probleme venait d'une mauvaise configuration du fichier /etc/hosts en DHCP.
   
   
   En DHCP, un fichier /etc/hosts devrait ressembler à cela :
   
   127.0.0.1    localhost
   127.0.0.2    ma_machine.der.edf.fr ma_machine
   
   L'adresse IP récupérée en DHCP n'est pas renseignée dans /etc/hosts, mais est mise à jour
   par le client DHCP via un ifconfig.
   
   
   En IP Fixe, ca devrait ressembler à cela :
   
   127.0.0.1    localhost
   130.98.x.y   ma_machine.der.edf.fr ma_machine
   
   
   On peut utiliser la commande ifconfig pour modifier l'adresse IP de la machine (pratique
   pour le mettre en dans un script).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   perso
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR flejou       FLEJOU Jean Luc        DATE 07/07/2008 - 12:50:45

--------------------------------------------------------------------------------
RESTITUTION FICHE 012074 DU 2008-05-07 15:26:49
TYPE anomalie concernant Code_Aster (VERSION 9.3)
TITRE
   Poutre + STAT_NON_LINE + SIEF_ELNO_ELGA + PESANTEUR
FONCTIONNALITE
   Il n'y a pas d'erreur dans le calcul de la pesanteur, ou d'une charge répartie. Elles sont
   traitées de la même manière.
   
   Si on prend une poutre verticale découpée en 2 éléments de même longueur, et avec la
   pesanteur verticale. Son poids est P=Rho.S.L.
   Le noeud encastré est n1, le noeud milieu est n2, le noeud libre est n3.
   
   Aster calcule les forces aux noeuds pour chaque élément et fait la somme. On a donc
   F1=P/4, F2=P/4+P/4, F3=P/4. Ensuite Aster calcule les déplacements.
   
   Si MECA_STATIQUE, Aster calcule les efforts aux noeuds en utilisant la matrice de raideur
   de l'élément et les déplacements précédemment calculés : EFGE_ELNO_DEPL
   
   Si STAT_NON_LINE, Aster fait la somme des contraintes aux noeuds à partir des contraintes
   aux points de Gauss SIEF_ELNO_ELGA. Et cela ne donne pas la même chose que MECA_STATIQUE,
   car on impose au noeud 1 à la fois des conditions de déplacement et d'effort, on ne tient
   donc pas compte de l'effort appliqué au noeud 1. La seule façon de retrouver les bons
   efforts est d'utiliser la matrice de raideur de l'élément comme dans MECA_STATIQUE, ce qui
   n'est juste qu'en linéaire, donc faux en général dans un STAT_NON_LINE.
   Si le calcul est non-linéaire, pour trouver les bons résultats il faut dédoubler le noeud
   1 (nouveau noeud A) et mettre entre le noeud A et le noeud 1 un discret suffisamment
   rigide. On impose donc un effort au noeud 1 et les déplacements au noeud A.
   Les cas tests ssll101f,g mettent cela en oeuvre, à comparer au cas test ssll101b. On
   trouve les mêmes résultats après un MECA_STATIQUE et après un STAT_NON_LINE.
   
   Une autre solution est de mailler beaucoup plus finement, mais dans ce cas on perd
   l'intérêt d'avoir des éléments de poutres 'exacts', et il restera toujours une erreur
   Er=1/2n (pour une poutre découpée en n éléments de longueurs identiques).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   ssll101f,g,b
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR messier      MESSIER Julien         DATE 07/07/2008 - 12:50:46

--------------------------------------------------------------------------------
RESTITUTION FICHE 012185 DU 2008-06-11 16:01:12
TYPE aide utilisation concernant Code_Aster (VERSION 7.0)
TITRE
   Plantage dans Mumps
FONCTIONNALITE
   Ai demandé l'allocation, pour mon calcul, de la classe mpi16G_200h_4p.
   Le calcul se déroule normalement (jusqu'à une non convergence 
   plus "classique"). Je n'ai donc plus d'erreur directement liée à 
   l'utilisation de MUMPS. 
   
   En résumé, les modifications que j'ai apportées à mon fichier de 
   commande sont :
   - le passage à une allocation de mémoire dynamique
   - le passage du calcul dans la classe mpi16G_200h_4p.
   
   Je passe la fiche en résolu. Merci.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   aucune
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR mikchevitch  MIKCHEVITCH Alexei     DATE 07/07/2008 - 17:52:58

--------------------------------------------------------------------------------
RESTITUTION FICHE 012193 DU 2008-06-16 12:23:55
TYPE evolution concernant Code_Aster (VERSION )
TMA : DeltaCad
TITRE
   performances PRE_IDEAS
FONCTIONNALITE
   Objectif
   =========
   -revoir la commande PRE_IDEAS pour ameliorer ses 
   performances.
   
   Réalisation
   ===========
   Réalisation effectuée en 2 étapes:
   -étape A: profiler l'etude fournie pour générer un listing 
   afin de déceler les routines consommatrices en CPU.
   -étape B: remaniement algorithmique des routines gourmandes 
   en CPU.
   
   1) Etape A
   ----------
   On a constate que la routine JUVECA a ete appelée 728 fois 
   et qu'elle a utilise 43,24% du total du calcul.
   Elle fait donc partie des routines consommatrice en CPU à 
   cause principalement des appels à JEDETR/WKVECT 
   relativement gourmands; neanmoins, nous avons remarque que 
   la routine SLEELT "abuse" de JUVECA (622 appels sur 728).
   
   Suite a ce constat, la conclusion a ete la suivante:
   -L'optimisation de PRE_IDEAS doit passer par une 
   intervention algorithmique dans SLEELT.
   -Pour reduire le temps CPU, il faut reduire le nombre 
   d'appels a JUVECA dans SLEELT.
   
   2) Etape B
   ----------
   Apres discussion avec Jacques, nous avons modifie le code 
   de SLEELT afin de redimensionner les objets JEVEUX en 
   doublant leur taille lorsque celle-ci n'est plus suffisante 
   (au lieu d'augmenter leur taille "pas a pas").
   
   Les resultats sont concluants:
   -avant:
   COMMAND:       USER:     SYSTEM:   USER+SYS:    ELAPSED 
   PRE_IDEAS:   143.40:       2.64:     146.04:     151.68 
   
   -apres:
   COMMAND:       USER:     SYSTEM:   USER+SYS:    ELAPSED 
   PRE_IDEAS:    23.99:       1.37:      25.36:      30.68 
   
   Validation
   ----------
   -passage de l'etude fournie
   -passage d'une liste restreinte a la commande PRE_IDEA (114 
   cas-tests)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   Maillage joint d'une xc3xa9tude
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR meunier      MEUNIER Sébastien      DATE 07/07/2008 - 17:52:59

--------------------------------------------------------------------------------
RESTITUTION FICHE 012115 DU 2008-05-23 08:37:17
TYPE evolution concernant Code_Aster (VERSION )
TMA : DeltaCad
TITRE
   ARLEQUIN - Passage des impressions INFO = 2 dans python
FONCTIONNALITE
   Objectif
   ========
   - regrouper tous les messages Arlequin dans un fichier de message python,
   - faire appel a ces messages dans les fortrans d'Arlequin lorsque le niveau d'impression
   est egal a 2.
   
   Realisation
   ===========
   Pour les 27 routines qui emettent des messages Arlequin pour un niveau 
   d'impression egal a 2, nous avons:
   - reporte les 127 messages dans 2 fichiers de message python specifiques a Arlequin
   (arlequindebg.py et arlequindebg2.py) puis nous leur avons attribue un identifiant. 
   - developpe la routine "chapeau" (arldbg.f) qui est chargee de faire appel aux routines
   U2MESG, U2MESS, U2MESI, U2MESK, U2MESR en fonction de la nature du message
   - appele la routine "chapeau" avec l'identifiant du message correspondant. 
   
   
   Impact
   ------
   python  : arlequindebg.py, arlequindebg2.py
   
   fortran : arlapf.f, arlcou.f, arlgdg.f, arlpar.f, arlbbs.f, arlbo0.f, arlboi.f, arlchi.f,
   arlclc.f,arlfg.f,arlfil.f,arllcc.f,arllec.f,arllpo.f,
   arlmai.f,arlmed.f,arlmol.f,arlmom.f,arlnor.f,arlpon.f,arlver.f,echmap.f,
   echmco.f,intmad.f,intmam.f,plint2.f,plint3.f.
   
   Exemple:
   -------
   Dans la routine arlpar.f, nous avions avant notre intervention les lignes de code suivantes:
         IF (NIV.GE.2) THEN
           WRITE(IFM,*) '<ARLEQUIN> *** PARAMETRES ARLEQUIN'
           WRITE(IFM,*) '<ARLEQUIN> ... ECHANTILLONNAGE DE LA FRONTIERE '//
        &               ' < NHAPP  > : ',NHAPP
          ENDIF
   i) Nous avons commence par creer un message d'identifiant "arlequindebg_1" dans le fichier
   python arlequindebg.py
   1: _("""
    <ARLEQUIN> *** PARAMETRES ARLEQUIN'
    <ARLEQUIN> ... ECHANTILLONNAGE DE LA FRONTIERE  < NHAPP  > : %(i1)s
   """),
   
   ii) Ensuite, nous avons developpe arldbg.f en ajoutant un bloc supplementaire propre a la
   routine arlpar:
   IF (NOMPRO.EQ.'ARLPAR') THEN
      IF (IOCC.EQ.1) THEN     <= IOCC correspond a l'occurrence du message 
                                 dans la routine.
         CALL U2MESG('I','ARLEQUINDEBG_1',NK,VALK,NI,VALI,NR,VALR)
      ENDIF
   ENDIF
   
   iii) Enfin, nous avons remplace les WRITEs presents dans arlpar.f par un appel a arldbg.f
        VALI(1)= NHAPP
        CALL ARLDBG(NOMPRO,NIV,IFM,1,NI,VALI,NR,VALR,NK,VALK)
   
   Validation
   ==========
   - passage de 10 cas-tests mettant en evidence la methode Arlequin, avec comme
   particularite un INFO=2 dans AFFE_CHAR_MECA et dans l'operateur de resolution.
   - passage du cas-test sslp104b avec et sans surcharge toujours avec INFO=2, puis
   comparaison des chaines de caracteres commencant par "<ARLEQUIN>".
   - passage de la liste restreinte.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   sslp104b + 10 tests perso
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

 CASTEST AJOUT ssna115b                      laverne J.LAVERNE          313    313      0
 CASTEST AJOUT ssna115c                      laverne J.LAVERNE          330    330      0
 CASTEST AJOUT ssnp118g                      laverne J.LAVERNE          535    535      0
 CASTEST AJOUT ssnp118h                      laverne J.LAVERNE          530    530      0
 CASTEST AJOUT ssnp118i                      laverne J.LAVERNE          519    519      0
 CASTEST AJOUT ssnv199e                      laverne J.LAVERNE          363    363      0
 CASTEST AJOUT ssnv199f                      laverne J.LAVERNE          388    388      0
 CASTEST AJOUT zzzz235a                       assire A.ASSIRE           245    245      0
 CASTEST MODIF mumps01a                       pellet J.PELLET           158      1     22
 CASTEST MODIF sdlv123b                      galenne E.GALENNE          260      4      3
 CASTEST MODIF sslp104c                      rezette C.REZETTE          204      2      2
 CASTEST MODIF ssnp118a                      laverne J.LAVERNE          395    160     24
 CASTEST MODIF ssnp118b                      laverne J.LAVERNE          600     11      8
 CASTEST MODIF ssnp118c                      laverne J.LAVERNE          602     12     16
 CASTEST MODIF ssnp118d                      laverne J.LAVERNE          386    163     29
 CASTEST MODIF ssnp118e                      laverne J.LAVERNE          598     15     12
 CASTEST MODIF ssnp118f                      laverne J.LAVERNE          606     16     18
 CASTEST MODIF ssnx101a                       michel S.MICHEL           329    244    259
 CASTEST MODIF wtnv134a                     foucault A.FOUCAULT         872      1      1
 CASTEST SUPPR ssnx101b.comm                  michel S.MICHEL           348      0    348
CATALOGU AJOUT typelem/gener_ei2d_2          laverne J.LAVERNE          158    158      0
CATALOGU AJOUT typelem/gener_ei3d_3          laverne J.LAVERNE          150    150      0
CATALOGU MODIF compelem/grandeur_simple__    laverne J.LAVERNE          746     12      7
CATALOGU MODIF compelem/phenomene_modelisation__    laverne J.LAVERNE         1402     12      1
CATALOGU MODIF options/forc_noda             laverne J.LAVERNE           94      3      3
CATALOGU MODIF options/pilo_pred_elas        laverne J.LAVERNE           37      2      1
CATALOGU MODIF options/refe_forc_noda        laverne J.LAVERNE           63      3      1
CATALOPY AJOUT commande/macr_europlexus       assire A.ASSIRE           134    134      0
CATALOPY MODIF commande/affe_cara_elem        assire A.ASSIRE           566      2      1
CATALOPY MODIF commande/affe_modele          laverne J.LAVERNE          250      4      1
CATALOPY MODIF commande/defi_materiau        laverne J.LAVERNE         2870      4      2
CATALOPY MODIF commande/stat_non_line        laverne J.LAVERNE          367      3      2
CATALOPY MODIF commun/c_comp_incr            laverne J.LAVERNE          251      3      1
 FORTRAN AJOUT algorith/eiangl               laverne J.LAVERNE           48     48      0
 FORTRAN AJOUT algorith/eicine               laverne J.LAVERNE           89     89      0
 FORTRAN AJOUT algorith/eifint               laverne J.LAVERNE          248    248      0
 FORTRAN AJOUT algorith/eifono               laverne J.LAVERNE           84     84      0
 FORTRAN AJOUT algorith/eifore               laverne J.LAVERNE           84     84      0
 FORTRAN AJOUT algorith/eiinit               laverne J.LAVERNE          100    100      0
 FORTRAN AJOUT algorith/lc0040               laverne J.LAVERNE           53     53      0
 FORTRAN AJOUT algorith/lc0041               laverne J.LAVERNE           53     53      0
 FORTRAN AJOUT algorith/lceiou               laverne J.LAVERNE          214    214      0
 FORTRAN AJOUT algorith/lceitc               laverne J.LAVERNE          249    249      0
 FORTRAN AJOUT algorith/pipeei               laverne J.LAVERNE           96     96      0
 FORTRAN AJOUT algorith/pipeou               laverne J.LAVERNE           90     90      0
 FORTRAN AJOUT algorith/pipetc               laverne J.LAVERNE          154    154      0
 FORTRAN AJOUT elements/te0359               laverne J.LAVERNE          105    105      0
 FORTRAN AJOUT elements/te0360               laverne J.LAVERNE          173    173      0
 FORTRAN AJOUT elements/te0361               laverne J.LAVERNE          101    101      0
 FORTRAN AJOUT elements/te0362               laverne J.LAVERNE           89     89      0
 FORTRAN AJOUT utilitai/arldbg               rezette C.REZETTE          429    429      0
 FORTRAN MODIF algeline/rltfr8                pellet J.PELLET           159     16      2
 FORTRAN MODIF algorith/cftanr                 abbas M.ABBAS            232      7      3
 FORTRAN MODIF algorith/hujela              foucault A.FOUCAULT         233      4      6
 FORTRAN MODIF algorith/lcejli               laverne J.LAVERNE          257      3      9
 FORTRAN MODIF algorith/nmdocn               laverne J.LAVERNE          158      4      1
 FORTRAN MODIF algorith/nmhuj               foucault A.FOUCAULT         496      5      3
 FORTRAN MODIF algorith/nminit               laverne J.LAVERNE          374      2      1
 FORTRAN MODIF algorith/nmpich               laverne J.LAVERNE          154      2      2
 FORTRAN MODIF algorith/nmpilo               laverne J.LAVERNE          243      5      4
 FORTRAN MODIF algorith/nmpipe               laverne J.LAVERNE          279      8      4
 FORTRAN MODIF algorith/nmrefe               laverne J.LAVERNE          216      8      5
 FORTRAN MODIF algorith/nmrepl               laverne J.LAVERNE          367      2      2
 FORTRAN MODIF algorith/op0070               laverne J.LAVERNE          632      2      2
 FORTRAN MODIF algorith/pipeba               laverne J.LAVERNE          179      3      2
 FORTRAN MODIF algorith/rechno                 abbas M.ABBAS            287      2      2
 FORTRAN MODIF calculel/arlapf               rezette C.REZETTE          148     15     17
 FORTRAN MODIF calculel/arlcou               rezette C.REZETTE          117     13      6
 FORTRAN MODIF calculel/arlgdg               rezette C.REZETTE          140     18     24
 FORTRAN MODIF calculel/arlpar               rezette C.REZETTE          223     22     38
 FORTRAN MODIF calculel/grmama               meunier S.MEUNIER          199      2      2
 FORTRAN MODIF calculel/mgauss               meunier S.MEUNIER          279      6     12
 FORTRAN MODIF calculel/mgausw               meunier S.MEUNIER          166     17     20
 FORTRAN MODIF calculel/minter               meunier S.MEUNIER          131      3      3
 FORTRAN MODIF calculel/op0100               galenne E.GALENNE         1037      3      3
 FORTRAN MODIF calculel/refere               meunier S.MEUNIER          152      3      3
 FORTRAN MODIF calculel/sommet               meunier S.MEUNIER           66      2      2
 FORTRAN MODIF from_c/mpicm1a                 pellet J.PELLET           144     37     11
 FORTRAN MODIF modelisa/acearp                assire A.ASSIRE           496     93     10
 FORTRAN MODIF modelisa/arlbbs               rezette C.REZETTE          136     22     15
 FORTRAN MODIF modelisa/arlbo0               rezette C.REZETTE          141     14      6
 FORTRAN MODIF modelisa/arlboi               rezette C.REZETTE           98     14      9
 FORTRAN MODIF modelisa/arlchi               rezette C.REZETTE          378     12      8
 FORTRAN MODIF modelisa/arlclc               rezette C.REZETTE          151     12      7
 FORTRAN MODIF modelisa/arlfg                rezette C.REZETTE          117     11      5
 FORTRAN MODIF modelisa/arlfil               rezette C.REZETTE           81     14     10
 FORTRAN MODIF modelisa/arllcc               rezette C.REZETTE          230     17     13
 FORTRAN MODIF modelisa/arllec               rezette C.REZETTE          138     14     10
 FORTRAN MODIF modelisa/arllpo               rezette C.REZETTE          124     14      6
 FORTRAN MODIF modelisa/arlmai               rezette C.REZETTE          441     41     64
 FORTRAN MODIF modelisa/arlmed               rezette C.REZETTE           85     12      4
 FORTRAN MODIF modelisa/arlmol               rezette C.REZETTE          178     12     10
 FORTRAN MODIF modelisa/arlmom               rezette C.REZETTE          126     12     10
 FORTRAN MODIF modelisa/arlnor               rezette C.REZETTE           94     11      5
 FORTRAN MODIF modelisa/arlpon               rezette C.REZETTE          108     12      5
 FORTRAN MODIF modelisa/arlver               rezette C.REZETTE          235     16     14
 FORTRAN MODIF modelisa/echmap               rezette C.REZETTE          252     32     29
 FORTRAN MODIF modelisa/echmco               rezette C.REZETTE          201     27     25
 FORTRAN MODIF modelisa/intinc               meunier S.MEUNIER          179      3      3
 FORTRAN MODIF modelisa/intmad               rezette C.REZETTE          369     31     57
 FORTRAN MODIF modelisa/intmam               rezette C.REZETTE          497     40     78
 FORTRAN MODIF modelisa/intsma               meunier S.MEUNIER          242     11     11
 FORTRAN MODIF modelisa/mode18               laverne J.LAVERNE          393     10      1
 FORTRAN MODIF modelisa/plint2               rezette C.REZETTE          352     19     25
 FORTRAN MODIF modelisa/plint3               rezette C.REZETTE          692     20     24
 FORTRAN MODIF modelisa/surfcl                desoza T.DESOZA           474      3      3
 FORTRAN MODIF stbtrias/sleelt               rezette C.REZETTE          274     53     11
  PYTHON AJOUT Comportement/czm_ouv_mix      laverne J.LAVERNE           42     42      0
  PYTHON AJOUT Comportement/czm_tac_mix      laverne J.LAVERNE           44     44      0
  PYTHON AJOUT Macro/macr_europlexus_ops      assire A.ASSIRE          1526   1526      0
  PYTHON AJOUT Messages/arlequindebg2        rezette C.REZETTE          159    159      0
  PYTHON AJOUT Messages/arlequindebg         rezette C.REZETTE          451    451      0
  PYTHON AJOUT Messages/plexus                assire A.ASSIRE            69     69      0
  PYTHON MODIF Comportement/czm_exp_reg      laverne J.LAVERNE           40      6      5
  PYTHON MODIF Comportement/czm_lin_reg      laverne J.LAVERNE           43      9      7
  PYTHON MODIF Macro/post_k1_k2_k3_ops       galenne E.GALENNE         1192      5      5
  PYTHON MODIF Messages/algorith17           laverne J.LAVERNE           35      8      1
  PYTHON MODIF Messages/algorith6            laverne J.LAVERNE          279      5      1
  PYTHON MODIF Messages/modelisa9             assire A.ASSIRE           403      5      2
  PYTHON MODIF Messages/rupture0             galenne E.GALENNE          553      3      3


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :   35        8415      8415             +8415
 MODIF :   84       28551      1534    1105      +429
 SUPPR :    1         348               348      -348
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :  120       37314      9949    1453     +8496 
