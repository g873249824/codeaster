

-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR sellenet     SELLENET Nicolas       DATE 05/01/2010 - 22:46:32

--------------------------------------------------------------------------------
RESTITUTION FICHE 013918 DU 2009-09-22 07:35:17
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TMA : DeltaCad
TITRE
   Valgrind : conditional jump
FONCTIONNALITE
   Cette fiche fait suite a la fiche 13202 qui consistait entre autre 
   a identifier les variables non initialisees dans Code-Aster. 
   Cette identification avait ete realisee en passant la liste restreinte sur 
   Calibre 5 avec Valgrind. Nous avions comptabilise 284 variables non
   initialisées.
   L'objectif de la fiche 13918 a ete d'initialiser ces variables.
   
   Bilan:
   - 42 fichiers fortran corriges
   - 2 fiches d'anomalie emises : 14171 (resolue), 15151 (emis)
   
   A noter que plusieurs cas n'ont pas ete traites car:
   
   a) l'initialisation des variables incriminees etait correcte malgre le 
   constat de Valgrind, par exemple:
   (cas-test ssnp138b): routine impfic.f, ligne 113 :
   "IF((K1DEV.GT.K1MAX).OR.(K1DEV.LT.K1MIN)) THEN":  
   Valgrind detecte que l'une de ces variables n'est pas initialisee. 
   Pourtant, K1DEV,K1MAX,K1MIN sont construites a partir de G, FIC1, FIC2, K1, 
   K2 qui sont parfaitement initialisees.
   
   Idem pour:
   (cas-test wtnv102b): routine thmrcp(L658),variable SATM
   (cas-test hpla100c): routine nmerge(L97),variables ZL(JECOD+I-1)
   (cas-test ssna115b): routine conori(L133),variables LOREO0,LFACE0
   (cas-test wtnp102a): routine nmrech(L75),variable FOPT initialisee par R8MAEM
   
   b) l'initialisation n'etait pas possible, lorsque:
   - Valgrind detecte une erreur dans une routine d'une librairie d'Aster (lib 
   med par exemple),
   - Valgrind detecte une variable non initialisee provenant d'un common:
   (cas-test sensd08b): routine jjvern (L51), variable NOMOS
   - des routines ont ete resorbees dans l'intervalle de temps qui separe
   la realisation des fiches 13202 et 13918:
   (cas-test sdll105a) routine op0135 (L525)
   
   c) l'initialisation n'a pas ete envisagee car le source en question
   sera remanie (voire resorbe) dans les semaines a venir, 
   notamment la loi de comportement du cas-test ssnv206a:
   (cas-test ssnv206a) routine lkcomp (558)
   
   Validation: 
   - passage sur Calibre 5 avec Valgrind d'une liste de cas-tests illustrant ces
    problèmes d'initialisation,
   - passage de la liste restreinte sur Bull
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   valgrind liste restreinte
--------------------------------------------------------------------------------
RESTITUTION FICHE 013919 DU 2009-09-22 07:37:23
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TMA : DeltaCad
TITRE
   Valgrind : invalid read
FONCTIONNALITE
   Cette fiche fait suite a la fiche 13202 qui consistait entre autre 
   a identifier les lectures et ecritures invalides dans Code-Aster. 
   Cette identification avait ete realisee en passant la liste restreinte sur 
   Calibre 5 avec Valgrind. Nous avions comptabilise 143 "invalid read".
   
   Parmi les 143 "Invalid read" detectes, nous avons analyse ceux qui etaient 
   exploitables: Ce sont ceux qui possedent des references a des fichiers fortan
   dans le premier bloc (commençant par Invalid read of size ...) et dont le 
   second bloc (commençant par Address) mentionne ".... bytes before ...".
   Nous en avons comptes 14.
   
   L'objectif de la fiche 13919 a ete de corriger ces 14 lectures/ecritures
   invalides.
   
   Bilan:
   - 4 fichiers de bibc,
   - 4 fichiers de bibfor.
   
   Remarques:
   - Certains cas n'ont pas ete traites car il s'agissait d'ecritures/lectures
   dans des routines de la librairie med (reveles par le cas-test forma03a).
   - Un cas n'a pas trouve reponse, il s'agit de l'appel a znaupd dans la routine
   vpsorc.f. Pourtant la declaration des tableaux qui passent dans cette routine
   (lib arpack) est correcte.
   
   Validation: 
   - passage sur Calibre 5 avec Valgrind d'une liste de cas-tests illustrant ces
    problemes d' "invalid read".
   - passage de la liste restreinte sur Bull
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   valgrind liste restreinte
--------------------------------------------------------------------------------
RESTITUTION FICHE 013920 DU 2009-09-22 07:39:41
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TMA : DeltaCad
TITRE
   Valgrind : definitely lost
FONCTIONNALITE
   Cette fiche fait suite a la fiche 13202 qui consistait entre autre a detecter 
   les fuites memoires dans Code-Aster. Cette identification avait ete realisee 
   en passant la liste restreinte sur Calibre 5 avec Valgrind. 
   Nous avions comptabilise 4 fuites memoire.
   
   Bilan:
   
   - cas hdfrat: (hdfrat.c:45)
   Ce cas a ete corrige (ajout de free(nom)).
   
   - cas hpalloc: (hpalloc.c:32)
   Cette fonction alloue de la memoire et retourne le pointeur de l'espace 
   alloue. Aucune correction n'a ete envisagee.
   
   - cas calcul: (calcul.f:1)
   Le problème est du a la presence de tableaux automatiques comme 
   a pu le constater Thomas De Soza: "Ces tableaux sont dimensionnes a partir 
   d'arguments d'entree de la routine, ils ne peuvent donc pas être alloues a la 
   compilation." C'est le cas des tableaux LPAIN et LCHIN dimensionnes a NIN. 
   
   - cas gerpas: (gerpas.f:1)
   Idem au cas precedent: Les tableaux automatiques COEL, COTHE, DCOTHE, COEFF 
   et DCOEFF sont dimensionnes a NMAT.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   valgrind liste restreinte
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR delmas       DELMAS Josselin        DATE 05/01/2010 - 22:46:33

--------------------------------------------------------------------------------
RESTITUTION FICHE 014207 DU 2009-11-19 14:37:04
TYPE anomalie concernant Code_Aster (VERSION 9.6)
TITRE
   LIRE_CHAMP / TYPE_CHAMP='ELGA_XXXX_X'
FONCTIONNALITE
   Problème :
   ========
   Dans LIRE_CHAMP, il faut préciser le type de champ lu. Pour les types de champs ELGA, un
   certain nombre sont prévus. Mais en réalité, on ne peut lire que les champs ELGA_SIEF_R
   sinon on s'arrête en erreur <F>.
   
   Analyse :
   =======
   Dans op0192.f, on compare le type fourni par l'utilisateur et les types prévus. Mais le
   problèmes est qu'on ne compare pas les bonnes chaines de caractères : on ne compare que
   les 9 premiers caractères du type fourni alors qu'il faut comparer les 11 premiers.
   
   On note que ce problème n'est jamais apparu avant car LIRE_CHAMP sur des champs ELGA n'est
   pas testé dans la base de test.
   
   Correction :
   ==========
   Dans op0192 :
   138c138
   < ELSE IF (TYCH(1:9).EQ.'ELGA_EPSI_R') THEN
   ---
   > ELSE IF (TYCH(1:11).EQ.'ELGA_EPSI_R') THEN
   
   141c141
   < ELSE IF (TYCH(1:9).EQ.'ELGA_VARI_R') THEN
   ---
   > ELSE IF (TYCH(1:11).EQ.'ELGA_VARI_R') THEN
   
   Impact :
   ======
   op0192.f
   
   A faire en v9 et en v10
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   passage test
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 014188 DU 2009-11-16 14:30:04
TYPE anomalie concernant Code_Aster (VERSION 10.1)
TITRE
   LIRE_RESU / FORMAT='IDEAS_DS58' et UNITE
FONCTIONNALITE
   Problème :
   ========
   Quand on fait LIRE_RESU / FORMAT='IDEAS_DS58' et qu'on précise UNITE, la valeur n'est pas
   prise en compte et est mise à une valeur par défaut.
   
   On peut voir un exemple dans sdld104a où on précise UNITE=33 et l'écho de la commande
   montre UNITE=19.
   
   Analyse :
   =======
   En réalité, quand on rentrait UNITE = 33, on lisait bien l'unité 33 mais on affichait dans
   l'écho UNITE = 19 (valeur par défaut) ; il n'y avait pas de risque de résultat faux. Pour
   s'en convaincre, il suffit d'imprimer l'unité lu dans l'op0150.
   
   Correction :
   ==========
   Il faut supprimer UNITE du bloc b_dataset_58_b.
   
   131d130
   <            UNITE           =SIMP(statut='f',typ='I',defaut= 19 ),
   
   Impact :
   ======
   lire_resu.capy
   
   A faire en v9 et v10
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   passage sdld104a
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR courtois     COURTOIS Mathieu       DATE 05/01/2010 - 22:46:33

--------------------------------------------------------------------------------
RESTITUTION FICHE 014259 DU 2009-12-03 09:29:54
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Erreur sur l'evaluation de fonctions
FONCTIONNALITE
   En PAR_LOT='OUI', on tente d'évaluer une fonction issue de DEFI_FONCTION :
   - çà fonctionne si on a utilisé DEFI_FONCTION/VALE
   - çà plante (pas clairement) si on a utilisé DEFI_FONCTION/ABSCISSE+ORDONNEE.
   
   Ce n'était pas dit qu'on ne pouvait pas le faire.
   
   Après correction, les 3 cas possibles fonctionnent :
    - VALE
    - VALE_PARA / VALE_FONC
    - ABSCISSE / ORDONNEE
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   test xc3xa9lxc3xa9mentaire
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 014268 DU 2009-12-08 10:44:07
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   En NEW9.5.14, le cas-test perfe03a s'arrete en erreur_<F> sur Calibre4.
FONCTIONNALITE
   Il s'agit en fait d'une erreur liée au caractere aléatoire du post-traitement effectué
   dans perfe03a.com1 : on calcule une probabilité de rupture, et on construit la fonction
   proba=f(contrainte). Or ici, il n'y a qu'un seul point pour construire la fonction :
      
      Etape : DEFI_FONCTION    ligne : 162    fichier : 'fort.1'  Mot-clé simple : ABSCISSE
      ! Nombre d'arguments de (333336593.97146946,) incorrect (min = 2, max =**) !
      Mot-clé simple : ORDONNEE
      ! Nombre d'arguments de (0.5,) incorrect (min = 2, max = **) !
      
   On ajoute donc un test pour construire la fonction si le nombre de points est > 1.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   perfe03a
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 014338 DU 2009-12-23 15:33:09
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Tri des tables faux
FONCTIONNALITE
   Le tri d'une table pouvait être faux dans certains cas où la table contient des trous
   (paramètre non défini sur certaines lignes) et où ce paramètre ne faisait pas partie des
   clés de tri.
   
   Il restait dans les lignes de la table des données parasites (invisibles lors d'une
   impression), utilisées pendant la phase de tri.
   Il semble que ces données ne perturbaient pas le premier tri (y compris avec plusieurs
   clés de tri) mais uniquement les tris suivants.
   La table n'était pas triée correctement mais le contenu des lignes n'étaient pas mélangé
   pour autant.
   
   
   Le message qui dit qu'un paramètre est absent d'une table était en triple :
    table0_2 == table0_4 == table0_5 !
   => modif dans calc_table_ops.py
RESU_FAUX_VERSION_EXPLOITATION    :  OUI   DEPUIS : 9.3.21
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 9.3.21
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   tables issues de DEFI_SOL_MISS
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

 CASTEST MODIF perfe03a                      macocco K.MACOCCO          335      1      1
CATALOPY MODIF commande/lire_resu            macocco K.MACOCCO          218      1      2
 FORTRAN MODIF algeline/vpsorc               macocco K.MACOCCO          334      2      1
 FORTRAN MODIF algorith/asenap               macocco K.MACOCCO          250      2      1
 FORTRAN MODIF algorith/dylach               macocco K.MACOCCO          286      2      3
 FORTRAN MODIF algorith/grdthm               macocco K.MACOCCO          334      7      1
 FORTRAN MODIF algorith/lceobl               macocco K.MACOCCO         1040      2      2
 FORTRAN MODIF algorith/lkcomp               macocco K.MACOCCO          596      2      1
 FORTRAN MODIF algorith/lklmat               macocco K.MACOCCO          154      2      2
 FORTRAN MODIF algorith/mdicho               macocco K.MACOCCO          175      4      2
 FORTRAN MODIF algorith/meacmv               macocco K.MACOCCO          468      2      1
 FORTRAN MODIF algorith/ndlect               macocco K.MACOCCO          463      2      1
 FORTRAN MODIF algorith/nmbarc               macocco K.MACOCCO         1344      3      3
 FORTRAN MODIF algorith/ntdoet               macocco K.MACOCCO          282      2      1
 FORTRAN MODIF algorith/preflx               macocco K.MACOCCO          303      3      2
 FORTRAN MODIF algorith/rbph01               macocco K.MACOCCO          218      2      1
 FORTRAN MODIF algorith/rk21co               macocco K.MACOCCO          111      5      1
 FORTRAN MODIF algorith/tran75               macocco K.MACOCCO          470      3      1
 FORTRAN MODIF algorith/trprot               macocco K.MACOCCO          561     15     12
 FORTRAN MODIF calculel/medom1               macocco K.MACOCCO          214      2      1
 FORTRAN MODIF elements/reeref               macocco K.MACOCCO          222      2      2
 FORTRAN MODIF elements/reereg               macocco K.MACOCCO          138      2      2
 FORTRAN MODIF elements/te0204               macocco K.MACOCCO          788      4      2
 FORTRAN MODIF elements/te0421               macocco K.MACOCCO          233      6      2
 FORTRAN MODIF elements/te0449               macocco K.MACOCCO          217      5      4
 FORTRAN MODIF elements/xjacob               macocco K.MACOCCO           82     10      5
 FORTRAN MODIF elements/zerofo               macocco K.MACOCCO          123      2      1
 FORTRAN MODIF jeveux/jjvern                 macocco K.MACOCCO           78      4      2
 FORTRAN MODIF modelisa/lrmdes               macocco K.MACOCCO          148      2      1
 FORTRAN MODIF modelisa/lrmmno               macocco K.MACOCCO          223      2      2
 FORTRAN MODIF modelisa/op0018               macocco K.MACOCCO          656      2      1
 FORTRAN MODIF postrele/op0051               macocco K.MACOCCO          416      4      2
 FORTRAN MODIF postrele/rvcpnc               macocco K.MACOCCO          697     13      4
 FORTRAN MODIF postrele/rvpost               macocco K.MACOCCO          290      2      2
 FORTRAN MODIF prepost/ircam1                macocco K.MACOCCO          356      2      1
 FORTRAN MODIF prepost/irgmcn                macocco K.MACOCCO          303      2      1
 FORTRAN MODIF prepost/irmad1                macocco K.MACOCCO          169      7      2
 FORTRAN MODIF utilitai/chpve2               macocco K.MACOCCO           86      6      3
 FORTRAN MODIF utilitai/op0192               macocco K.MACOCCO          334      3      3
 FORTRAN MODIF utilitai/peecin               macocco K.MACOCCO          369      2      1
 FORTRAN MODIF utilitai/peingl               macocco K.MACOCCO          740      8      2
  PYTHON MODIF Macro/calc_table_ops          macocco K.MACOCCO          178      3      3
  PYTHON MODIF SD/co_fonction                macocco K.MACOCCO          341     13      5


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :    0           0         0                +0
 MODIF :   43       15343       170      93       +77
 SUPPR :    0           0                 0        +0
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :   43       15343       170      93       +77 
