========================================================================
Version 11.2.19 du : 17/10/2012
========================================================================


-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR abbas        ABBAS Mickael          DATE 10/15/2012 - 05:26:43

--------------------------------------------------------------------------------
RESTITUTION FICHE 019709 DU 2012-10-10 17:50:43
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    FORCE_SOL : bug dans NMEXSO
FONCTIONNALITE
   Problème
   ========
   
   Un bug a été introduit dans la routine NMEXSO pour la lecture des 
   matrices temporelles d'interface.
   On lit dans les unités UNITER, UNITEM, UNITEA associées aux mots 
   clés UNITE_RESU_RIGI, UNITE_RESU_MASS, UNITE_RESU_AMOR de 
   FORCE_SOL sans vérifier si ces derniers sont tous présents et que 
   les unités peuvent être nulles. D'où une fin de fichier brutale 
   sur l'unité UNITEM valant 0 dans une étude où seul le mot clé 
   UNITE_RESU_RIGI est présent.
   
   Solution
   ========
   
   On n'ouvre les fichiers que si l'unité est différente de zéro
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    miss03
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019617 DU 2012-09-28 15:48:55
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    En NEW11.02.13 les tests ssnv225a et b demandent plus de temps CPU (49% et 45% de temps en plus).
FONCTIONNALITE
   roblème
   ========
   
   En NEW11.02.13 les tests ssnv225a et b demandent plus de temps CPU (49% et 45% de temps en
   plus).
   
   La commande qui demande plus de temps est SIMU_POINT_MAT.
   
   Solution
   ========
   
   Problème lié à la fiche issue19552 (SIMU_POINT_MAT en mode "ELEMENT" appelel STAT_NON_LINE)
   Après la correction de l'issue19552, le temps CPU a diminué significativement.
   Le surcout de l'affichage est désormais inférieur à 15% (ce qui reste élevé, mais bcp
   moins que les 50%) !
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    les cas-tests
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019616 DU 2012-09-28 15:38:22
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Dxc3xa9gradation du temps CPU de comp001h, comp002f et comp002g en 11.02.13
FONCTIONNALITE
   Problème
   ========
   
   En NEW11.02.13 les tests comp001h, comp002f et comp002g demandent plus de temps CPU (57%,
   22% et 17% de temps en plus).
   
   La commande qui demande plus de temps est TEST_COMPOR.
   
   Solution
   ========
   
   Problème lié à la fiche issue19552 (TEST_COMPOR en mode "ELEMENT" appelle STAT_NON_LINE)
   Après la correction de l'issue19552, le temps CPU a diminué significativement.
   Le surcout de l'affichage est désormais inférieur à 15% (ce qui reste élevé, mais bcp
   moins que les 50%) !
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    les cas-tests
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR alarcon      ALARCON Albert         DATE 10/16/2012 - 03:48:02

--------------------------------------------------------------------------------
RESTITUTION FICHE 018892 DU 2012-05-22 14:28:41
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    AR02 extension de MACRO_MATR_ASSE aux vecteurs
FONCTIONNALITE
   Contexte 
   **************
   Cette fiche est une évolution de la macro-commande MACRO_MATR_ASSE dans le but d'étendre
   la fonctionnalité « caluls elementaires + assemblage » aux cas des vecteurs.
   
   Evolutions 
   **************
   La macro-commande change de nom et devient maintenant ASSEMBLAGE. (cf. RTA)
   
   Globalement, en ce qui concerne les matrices, toutes les fonctionnalités de MACR_MATR_ASSE
   sont reprises à l'identique et, pour ce qui est des vecteurs, on intègre la plupart des
   fonctionnalités pour les cas «CHAR_MECA », « CHAR_THER » et « CHAR_ACOU » (bien que lors
   de la RTA on avait convenu qu'on s'intéressait au cas « CHAR_MECA » uniquement, la prise
   en compte des deux derniers cas ne rajoute pas de complexité supplémentaire à la macro)
   
   Dans le but de rendre la macro-commande ergonomique et simple à l'utilisation, quelques
   cas particuliers pour les vecteurs ne sont pas intégrés : option  « FORC_NODA » et le cas
   de la statique avec présence de sous-structures. Dans ce cas, l'utilisateur devra passer
   par CALC_VECT_ELEM et ASSE_VECTEUR comme c'était le cas auparavant.
   
   Quelques détails à retenir 
   *********************
   → rajout d'un mot-clé facteur VECT_ASSE pour le cas des vecteurs
   
   → un mot-clé CHARGE est au premier niveau de la macro pour les charges communes des
   matrices et vecteurs. Pour les charges spécifiques à chaque vecteur, un deuxième mot-clé
   CHARGE est à l'intérieur de VECT_ASSE. Les charges s'additionnent et les doublons sont
   interdits. (cf. RTA)
   
   → Dans le cas où on utilise la macro pour assembler des vecteurs avec un NUME_DDL entrant,
   il est obligatoire de renseigner les charges utilisées lors de la création du
   NUME_DDL.(cf. RTA)
   
   → Il est n'est pas possible d'assembler des vecteurs sans aucune charge.
   
   → Il est impossible d'avoir un nume_ddl en type CO et demander l'assemblage de vecteurs
   seulement.
   
   Sources modifiées
   *********************
   
    → nouvelles : assemblage.capy + assemblage_ops.py
    → matrice0.py (ajout / modification des nouveaux messages)
    → suppression de macro_matr_asse.capy + macro_matr_asse_ops.py
   
    → Tous les cas-test utilisant MACRO_MATR_ASSE passent en ASSEMBLAGE et on rajoute
   l'assemblage des vecteurs si possible. 149 cas-test impactés, que voici :
   
   ahlv100a ahlv100f ahlv100g ahlv100h ahlv100i ahlv100j ahlv100k ahlv100m ahlv100q ahlv100r
   ahlv100s ahlv101a ahlv101b ahlv101c efica01a elsa01b elsa01c elsa01d fdnv100a forma02b
   forma02d forma12a forma12b forma12c forma12d forma12e miss03a miss03b miss03c miss04b
   miss06a miss06b miss06c sdld02a sdld02e sdld02f sdld103a sdld103b sdld105a sdld21a sdld21b
   sdld21c sdld21d sdld30a sdld313a sdld31b sdld34a sdld34b sdll109b sdll112a sdll112b
   sdll123a sdll123b sdll123c sdll123d sdll123e sdll123f sdll124a sdll125a sdll125b sdll125c
   sdll126a sdll126b sdll126c sdll126d sdll127a sdll127b sdll127c sdll128a sdll129a sdll131a
   sdll135a sdll135b sdll135c sdll135d sdll135e sdll138a sdll140a sdll141a sdll141b sdll141c
   sdll141d sdll141e sdll144a sdll144b sdll147a sdll149a sdll149b sdll14a sdll14b sdll14c
   sdls01a sdls01e sdls01f sdls01g sdls01h sdls03a sdls03b sdls03c sdls03d sdls07d sdls07e
   sdls102a sdls102b sdls106d sdls119a sdls119b sdls122a sdlv125a sdlv132a sdlx02c sdlx02d
   sdlx02e sdlx02f sdlx100a sdnd102a sdnd102b sdnd102c sdnd106a sdnd112a sdnd120a sdnd121a
   sdnl113a sdnl131a sdnl133a sdnl133b sdnl133c sdns106e sdns106f sdns107a sdns107b sdnv102a
   sdnv106a sdnv107b shll102a shll103a shls200a ssll106a ssll106c ssll106e ssll11c ssls111a
   ssls111b ssls117a ssls117b zzzz108b zzzz137a zzzz200b rccm02a
   
   
   Validation
   *********************
   Tous les cas test précédents
   
   Documentation impactée
   *********************
   
   U4.61.21 → doc MACRO_MATR_ASSE qui devient donc celle d' ASSEMBLAGE. On garde la même
   référence.
   
   Impacts doc collatéraux (26 docs) → a0.02.10 a0.02.20 a0.02.30 a0.02.40 a0.02.50 a0.02.60
   d0.03.01 d5.01.02 d9.02.01 r4.02.01 r5.05.04 r6.01.02 u1.02.00 u2.06.09 u2.06.10 u2.06.11
   u2.06.31 u2.06.32 u2.07.06 u2.09.03 u4.01.02 u4.01.04 u4.65.01 v2.08.012 v5.02.113 v7.15.100
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : U4.61.21 d0.03.01 d5.01.02 d9.02.01 r4.02.01 r5.05.04 r6.01.02 u1.02.00 u2.06.09 u2.06.10 u2.06.11 u2.06.31 u2.06.32 u2.07.06 u2.09.03 u4.01.02 u4.01.04 u4.65.01 v2.08.012 v5.02.113 v7.15.100
VALIDATION
    tous les cas test qui utilisent MACRO_MATR_ASSE
NB_JOURS_TRAV  : 10.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 018291 DU 2012-01-25 15:38:17
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Appariement manuel des frequences dans le mode dynamique de MACR_RECAL
FONCTIONNALITE
   Problème
   ======================
   
   Dans le cas particulier de la dynamique, MACR_RECAL cherche à optimiser une fonctionnelle
   composé de l'écart expérimental-numérique combinant l'écart des fréquences propres (FF) et
   du critère de MAC. Souvent, lorsque le modèle est loin de l'objectif, il peut y avoir un
   désappariement dans l'ordre des modes. C'est pourquoi MACR_RECAL propose la possibilité de
   faire un appariement manuel des modes au fur et à mesure de l'optimisation (
   APPARIEMENT_MANUEL='OUI' ) en faisant apparaître une fenêtre de MAC et laissant le choix
   de l'appariement à l'utilisateur. 
   Dans l'état actuel, les permutations éventuelles des modes sont bien  prises en compte
   pour le critère de MAC, mais elles sont laissées dans l'état initial pour le cas des FF, à
   l'insu de l'utilisateur.
   On n'optimise donc pas la fonctionnelle proposée à l'utilisateur, conduisant
   potentiellement à des résultats faux.
   
   Corrections et changements
   ============================
   
   A chaque fois que l'on demande l'information de l'appariement, le choix utilisateur est
   stockée pour, à la fin du calcul esclave en cours, venir permuter la table des fréquences
   associée. Pour cela, on récupère en Python l'information de la table des fréquences
   initiale, on la permute, on détruit le concept aster de type table initial, et on refait
   un nouveau CREA_TABLE du même nom avec les valeurs permutées. 
   
   Par ailleurs, et afin d'éviter des erreurs lors de cette permutation, on modifie la
   fenêtre de MAC affichée pour que l'utilisateur ne puisse permuter que les colonnes de
   cette matrice. Cela n'enlève aucune généralité au choix utilisateur (les matrices sont
   symétriques) mais élimine toute source d'erreur lorsqu'on affecte ce choix aux fréquences.
   
   On profite de cette fiche pour permettre l'apparition des fenêtres MAC pour les
   algorithmes hybride, génétique et Levenberg (seul hybride était activé jusqu'à présent),
   pouvant tous être utiles en dynamique.
   
   
   Sources impactées
   ======================
   reca_mac.py
   recal.py
   macr_recal_ops.py
RESU_FAUX_VERSION_EXPLOITATION    :  OUI   DEPUIS : 10.1.2
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 10.1.2
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    validé sur sdls121a en mode manuel
NB_JOURS_TRAV  : 2.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019376 DU 2012-08-28 14:58:32
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    [FORUM] : problème de redémarrage dans DYNA_LINE_TRAN en version 10
FONCTIONNALITE
   Problème
   *****************
   
   DYNA_LINE_TRAN plante lorsque l'utilisateur essaie de lancer un calcul avec un état
   initial (ETAT_INIT) issu d'un calcul précédent qui ne porte pas le même nom que l'actuel.
   Ce problème existe en version  11 mais aussi en 10. En gros, on n'a pas le droit de faire :
   
   DEP_0 = DYNA_LINE_TRAN ( )
   
   DEP_1 = DYNA_LINE_TRAN (ETAT_INIT=_F(RESULTAT=DEP_0))
   alors que le suivant marche très bien.
   
   DEP_0 = DYNA_LINE_TRAN ( )
   
   DEP_0 = DYNA_LINE_TRAN (reuse=DEP_0 ,ETAT_INIT=_F(RESULTAT=DEP_0))
   
   Le code plante avec une erreur pas très claire pour l'utilisateur :
   !-----------------------------------------------------!
      ! <EXCEPTION> <JEVEUX_23>                                                             
           !
      !                                                                                     
           !
      !      Nom de Collection ou de RÃ©pertoire de noms inexistant :  DEP_1             
   .DESC$$XNOM !
     
   !-----------------------------------------------------!
   Solution
   *****************
   
   Il y a une petite erreur dans la routine DLTINI.f (récupération des conditions initiales)
   qui va chercher ces infos dans le nom du concept de la commande en cours, en non pas de la
   commande donnée dans ETAT_INIT.  Lorsqu'on fait un « reuse », les deux concepts ont le
   même nom, donc aucun souci.  Dans le cas particulier de cette fiche, le code plante car on
   fait un CALL RSEXCH(*) sur un concept qui n'existe pas.
   On modifie  donc DLTINI.f pour qu'il pointe sur le bon concept.
   
   Sources impactées
   *****************
   
   dltini.f 
   
   *****************
   PS : je mets en PJ de la fiche la correction pour V10.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    tous les cas test DYNA_VIBRA
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR sfayolle     FAYOLLE Sebastien      DATE 10/16/2012 - 03:48:04

--------------------------------------------------------------------------------
RESTITUTION FICHE 019640 DU 2012-10-03 09:59:32
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Correction docs U et syntaxe GLRC_DM et DEFI_GLRC
FONCTIONNALITE
   Problème
   ~~~~~~~~~
   
   Les noms de certains des paramètres de GLRC_DM peuvent porter à 
   confusion.
   En effet, on utilise SYT (effort membranaire du seuil de fissuration en 
   traction ) qui peut être confondu avec le SYT de ENDO_ISOT_BETON 
   (contrainte du seuil de fissuration en traction). De même, SYC et SYF 
   ne sont pas explicites.
   Certains points de la documentation ne sont pas assez précis
   
   Solutions
   ~~~~~~~~~~
   
   On modifie les paramètres problématiques dans GLRC_DM et DEFI_GLRC :
   
   SYT devient NYT. dimensions effort/longueur.
   SYC devient NYC. dimensions effort/longueur. Rappeler que cela est
   SYF devient MYF. dimensions d'effort. 
   EPSI_FLEX devient KAPPA_FLEX
   
   Impacts sources
   ~~~~~~~~~~~~~~~
   
   defi_materiau.capy : définition des paramètres de GLRC_DM
   defi_glrc.capy : définition des paramètres d'homogénéisation pour 
   GLRC_DM
   
   dglrdm.f : routine d'homogénéisation de DEFI_GLRC pour GLRC_DM
   cgrdm.f : lecture des paramètres de GLRC_DM
   
   Impacts doc
   ~~~~~~~~~~~~~~
   
   U4.42.06, U4.43.01, R7.01.32, V6.05.106
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.42.06, U4.43.01, R7.01.32, V6.05.106
VALIDATION
    cas test
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR boiteau      BOITEAU Olivier        DATE 10/16/2012 - 03:48:05

--------------------------------------------------------------------------------
RESTITUTION FICHE 019608 DU 2012-09-28 12:32:42
TYPE anomalie concernant Code_Aster (VERSION 11.4)
TITRE
    Correction restitution INFO_MODE faite en 11.2.15
FONCTIONNALITE
   PROBLEME
   ========
   En travaillant sur l'op. INFO_MODE (et son fortran op0032) je me suis rendu compte de quel
   ques coquilles et erreurs fonctionnelles produites lors de la restit. dédiées du 27/09/12 
   (V11.2.15).
   
   Je les traces et propose une correction ici. Je me suis mis d'accord avec les intervenants
   de la restit. considérée.
   
       1/ Les mot-clés SEUIL_CHAR_CRIT et SEUIL_FREQ ont été introduits pour distinguer le
        "zéro modal" du flambement et de la dynamique, mais ds le Fortran on continue comme
        avant à les considérer tous les 2 comme étant produits pour une étude de dynamique !
        
            ==> Je corrige donc ceci ds op0032 en ne passant en w2 que SEUIl_FREQ.
   
       RQ. Je fais pareil ds MODE_ITER_SIMULT/INV qui sont eux-aussi incohérents sur ce
       point (de détail) depuis 13 ans.
     
       - Le capy a été complètement réorganisé et suite à cette réorganisation j'ai noté
         qqes menus pbs:
      
          2a/ Avec TYPE_RESU='MODE_COMPLEXE", les paramètres SEUIL_FREQ, PREC_SHIFT et NMAX_
          ITER_SHIFT sont inutiles: le fortran n'ira pas les lire car ils sont dévolus à la
          méthode de Sturm et non à la méthode 'APM' (seule utilisable ici).
   
              ==> Je les enlève du bloc.
   
          2b/ Avec TYPE_RESU='MODE_COMPLEXE' on permet au paramètre METHODE de prendre les
          valeurs 'AUTO', 'STURM' et 'APM'. En fait seule la valeur 'APM' est pertinente ici.
   
          2c/ Avec TYPE_RESU='DYNAMIQUE'/'MODE_FLAMB' on permet au au paramètre METHODE de 
          prendre les valeurs 'AUTO' et 'STURM'. En fait seule la valeur 'STURM' est 
          pertinente ici.
   
             ==> Le critère 'AUTO' n'est pertinent que lorsqu'on a le choix. C'est le cas ici
           pour TYPE_RESU='GENERAL' où on laisse 'AUTO', 'STURM' et 'APM'. Je supprime toute
           ambiguité ds le capy en faisant le ménage à ce niveau.
   
           2d/ Avec TYPE_RESU='GENERAL' on a dupliqué les mot-clés FREQ_TYPE_CONTOUR/RAYON_
          CONTOUR et FREQ_CENTRE_CONTOUR en CHAR_CRIT_TYPE_CONTOUR....
          mais ces mot-clés ne sont pas appelés ds le Fortran ! Alors qu'on peut en avoir
          besoin. De plus cette fonctionnalité n'est même pas testée !
   
            ==> Je change la logique de dénomination qui n'a pas lieu d'être ici. Ds le plan
            complexe on ne parle plus de frequence ou de charge critique puisqu'on ne fait pas
            la transformation f --> w2 pour l'un et lambda -> -lambda. 
            Donc je modifie FREQ_TYPE_CONTOUR/RAYON_CONTOUR/CENTRE_CONTOUR et leur pendant en
           CHAR_CRIT. Ils deviennent tout simplement:
                 TYPE_CONTOUR, RAYON_CONTOUR et CENTRE_CONTOUR (pour TYPE_RESU='MODE_COMPLEXE'
             et TYPE_RESU='GENERAL').
    
            2e/ Avec TYPE_RESU='GENERAL', les mot-clés **CONTOUR se trouvaient étrangement ds
            le bloc COMPTAGE, je les remonte d'un cran pour être cohérent avec les 3 autres
            types. Je gère avec les règles python les exclusions 'CHAR_CRIT'/'CONTOUR'.
   
            2f/ Le paramètre RAYON_CONTOUR doit rester un paramètre obligeatoire (on a pas
            de valeur par défaut à proposer !). Je le protège aussi ds le F77 au cas où.
   
            2e/ Détail cosmétique: on appel l'option 'IMPR_STURM' du bloc commun SOLVEUR, 
            j'adapte son nom pour être cohérent avec le nouvelle dénomination de l'op. Je la
            renomme 'INFO_MODE'.
   
       3a/ Ds op0032 je supprime plusieures comparaison 'TYPE_MODE.EQ."GENERAL"' alors que
          cela fait belle lurette qu'on a choisi, suivant la nature du pb, "MODE_FLAMB" ou
          "MODE_COMPLEXE". 
   
   SOURCES RESTITUEES
   ==================
     F77: op0032.f, op0044.f et op0045.f
     CAPY: impr_sturm.capy, c_colveur.capy
   
   IMPACTS FONCTIONNELS
   ====================
     Corrections de nbreux pbs fonctionnels potentiels et d'incohérences ds INFO_MODE.
     Correction mineure pour MODE_ITER_SIMULT/INV.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.52.01
VALIDATION
    informatique,fonctionnelle,non-r?gression
DEJA RESTITUE DANS : 10.7.5
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019618 DU 2012-09-28 16:10:12
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Amxc3xa9liorer l'ergonomie et les performances de INFO_MODE
FONCTIONNALITE
   CONTEXTE-CONSTAT
   =================
      L'opérateur INFO_MODE permet de calculer le nbre de modes présents ds une bande donnée
      (pour un spectre réel) et ds un disque donné (pour un spectre complexe). Cet entier
      , ainsi que les caractéristiques de la zone de sélection des modes, sont tracés ds une 
      table en résultat de l'op.
      Cet opérateur est censé aider l'utilisateur à pré-calibrer son calcul modal afin de 
      limiter sa zone de calcul ds un MODE_ITER** ou un CALC_MODAL/MACRO_MODE_MECA ultérieur.
      En pratique, il est trés peu utilisé notamment en raison de son surcoût calcul: 
         - Mémoire: même pic mémoire que pour le calcul modal proprement dit,
         - Temps: entre 30% et 50% du calcul modal.
      et de son ergonomie frustre:
       - On ne s'intéresse qu'à une zone du spectre à la fois alors que les op. modaux de
        calcul (MODE_ITER_INV ou MACRO_MODE_MECA) sont ds une logique de zones multiples
       contiguës.
   
   OBJECTIFS
   =========
       1/ Améliorer progressivement l'ergonomie et les performances pour encourager son usage
       dans une utilisation explicite par l'utilisateur:
           Rendre intéressant pour l'utilisateur à tout point de vue (fonctionnel, performance)
           de faire un ou plusieurs INFO_MODE avant de lancer un MODE_ITER** ou une MACRO
           associée.
   
       2/ Améliorer les perfs de la macro MACRO_MODE_MECA (op. conseillé pour les gros calculs 
          modaux en taille de pb et/ou taille de spectre recherché) en tirant partie d'un 
          couplage (transparent pour l'utilisateur): 
               INFO_MODE (pré-traitements non redondant comme actuellement)
             + MODE_ITER_SIMULT (calcul modal proprement dit)
             + INFO_MODE (posttraitement de vérif non redondant comme actuellement).
   
       3/ Faciliter la // prochaine de cet op.
   
   ANALYSE
   =======
       En calcul de DYNAMIQUE ou de FLAMBEMENT avec INFO_MODE on sélectionne une seule bande
       fréquentielle via des mot-clés FREQ ou CHAR_CRIT_MIN/MAX.
       Cela coute au moins 2 factorisations numériques de matrices dynamiques (voire plus si
       il faut décaler les shifts), soit une pour chaque borne. Cette étape numérique est
       parmis les plus coûteuses opérées ds le code.
       L'idée, toute simple, est de limiter ces factos en permettant à l'utilisateur de 
       rentrer une liste de fréquences (ou de charges critiques). Ainsi pour une liste, par
       exemple de 7 fréquences, cela lui coûte 7 factos alors que, actuellement, les 6 appels
       INFO_MODE requis pour produire le même résultat, coûtent au total 12 factos.
   
       Dans d'autres restits, Ce processus sera ensuite mutualisé:
         - avec MODE_ITER_SIMULT option 'BANDE': qui pourra recevoir en entrée, en plus des 2
          bornes de la bande, le résultat d'un INFO_MODE préalable pour éviter de refaire les
         (au minimum) 2 factos du test de Sturm initial.
         - avec MACRO_MODE_MECA, pour soulager les multiples appels souterrains à MODE_ITER
          _SIMULT + BANDE + STURM.
   
   DETAILS FONCTIONNELS
   ====================
     a/Ds INFO_MODE l'utlisateur qui veut désormais calibrer un calcul dynamique ou de 
      flambement renseigne la liste des modes par un des mot-clés:
        - soit FREQ (si TYPE_MODE='DYNAMIQUE')
        - soit CHAR_CRIT ('MODE_FLAMB' ou 'GENERAL').
      On supprime les anciens mot-clés _MIN/MAX pour être cohérent avec les autres op du
      modal.
      Ce fonctionnement est évidemment illicite avec 'MODE_COMPLEXE'.
      La liste doit comporter au moins 2 valeurs strictement croissantes (sinon Erreur Fatale 
      via ALGELINE2_29).
     
       NBMOD10 = INFO_MODE(MATR_RIGI=RIGI,MATR_MASS=MASS,INFO=1,
             FREQ=(8.5E+2,9.E+2,10.E+2,11.E+2,12.E+2,13.E+2,14.E+2,15.E+2,16.E+2),
             ...)
    
     b/L'affichage ds le .mess repête les mêmes infos qu'actuellement en précisant, en plus,
      le numéro de la bande considérée:
    
      ------------------------------------------------------------------------
        VERIFICATION DU SPECTRE DE FREQUENCES (METHODE DE STURM)
   
       LE NOMBRE DE FREQUENCES DANS LA BANDE N   1 DE 
       BORNES ( 8.500E+02, 9.000E+02) EST    2
      ------------------------------------------------------------------------
        LE NOMBRE DE FREQUENCES DANS LA BANDE N   2 DE 
        BORNES ( 9.000E+02, 1.000E+03) EST    1
      ------------------------------------------------------------------------
       ........
        LE NOMBRE DE FREQUENCES DANS LA BANDE N   8 DE 
        BORNES ( 1.500E+03, 1.600E+03) EST    2
      ------------------------------------------------------------------------
      
     c/La table résultant de INFO_MODE comporte, non plus 2 lignes, mais NB_BANDE + 1.
      (on a aussi déplacé en dernière colonne, la colonne résultat NB_MODE)
    
      #ASTER 11.02.15 CONCEPT NBMOD10 CALCULE LE 27/09/2012 A 10:21:53 DE TYPE         
      #TABLE_SDASTER                                                                   
                  FREQ_MIN_____FREQ_MAX_____NB_MODE   
                  8.50000E+02__9.00000E+02____2
                  9.00000E+02__1.00000E+03____1
                  1.00000E+03__1.10000E+03____1
                  1.10000E+03__1.20000E+03____0
    ......
                  1.50000E+03__1.60000E+03____2
   
     
     d/Les bornes de ces bandes sont désormais les bornes réelles qui ont effectivement servies
      aux calculs du test de Sturm (elles sont éventuellement décalées si elles correspondent
      à un mode propre). Alors qu'actuellement, il s'agit des bornes initiales rentrées par
      l'utilisateur, ce qui:
        - peut induire en erreur en cas de modes proches desdites bornes,
        - induit des pbs numériques non gérés (sans alarme) en cas de couplage INFO_MODE + MODE
         ITER_SIMULT.
        - induit de possibles non-consistances de comportement/résultat entre une usage stand
          alone MODE_ITER_SIMULT et un usage chaîné INFO_MODE + MODE_ITER_SIMULT.
   
      e/Les décalages de shift (ou seuillage si valeur trop faible) sont fait de la même
       manière ds tous les opérateurs modaux et ds tous les scénarios:
        => Consistance des comportements qqes soient les chaînages d'opérateurs.
   
      f/Si, à force d'être décalée une borne inf devient supérieure à une borne sup, on s'ar
        rête en ERREUR_FATALE(ALGELINE3_68).
   
   VALIDATION
   ==========
      Informatique, fonctionnelle, non-régression avec les 450 cas-tests modaux sur Aster4 seq.
      Rajout ds les cas-tests:
       - En dynamique (sdlx201a): 
            * INFO_MODE avec FREQ= 2 valeurs,
            * INFO_MODE avec LISTE_FREQ= liste de 6 valeurs avec 'LDLT'
            * Idem avec 'MULT_FRONT'
            * Idema avec 'MUMPS'.
       - En flambement (sdls504a):
            * INFO_MODE avec CHAR_CRIT= liste de 6 valeurs (autres params par défaut).
   
      + par adhérence pour suppression des mot-clés _MIN/MAX
       forma11c,sdld02a,sdld02b,sdld102c,sdll123a,sdlx201a,ssll130b
   
   MESURES DE PERFORMANCE
   ========================
     Cas-test perf013a (N=1M, NNZ=10M, GEP sym réels)
   
   __________MUMPS_(RENUM=QAMD+IC)_MULT_FRONT_(RENUM=METIS)_MULT_FRONT_(RENUM=MD)
   INFO_MODE
   + liste 9 freq____199s_____________363s__________________710s
   
   8_INFO_MODEs
   standards ________360s_____________648s_________________1360s
   
   MODE_ITER_SIMULT
   calcul std (BANDE+STURM)
   10 modes___________166s____________ 265s_________________476s
   
   Vm_Peak____________3969Mo___________5214Mo_______________5350Mo
   
   RQ1: On a bien le gain de presque un facteur 2 escompté.
   RQ2. Un INFO_MODE (sur une bande) coûte bien 20/30% d'un calcul modal std.
   RQ3: Impact important du paramètre solveur linéaire ET renuméroteur.
   
   SOURCES IMPACTEES
   =================
     F77: op0032.f, vpecst.f et vpfopr.f
     CATAPY: info_mode.capy
     PY: algeline2/3.py
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.52.01
VALIDATION
    informatique,fonctionnelle,non-rxc3xa9gression
NB_JOURS_TRAV  : 6.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019643 DU 2012-10-03 15:13:48
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    MN03 Nouvel usage en calcul modal: chaxc3xaenage INFO_MODE + MODE_ITER_SIMULT
FONCTIONNALITE
   RQ PREALABLE:
   ===============
      * Ce type de couplage pourrait sans doute aussi s'envisager (par soucis d'homogénéité 
        fonctionnelle principalement) entre INFO_MODE et MODE_ITER_INV (option SEPARE/AJUSTE).
        Mais cet opérateur est beaucoup moins utilisé sur de gros pbs que SIMULT (et ses
        macros) et les gains en temps y seraient moins notables.
   
   CONTEXTE
   ========
      Idem fiche 19618.
   
   IMPACT FONCTIONNEL
   ==================
      (Extrait de sdls504a.comm)
      NBMOD1 = INFO_MODE(...
               CHAR_CRIT=(-1.E+6,-5.E+5,0.0,1.E+5,1.1E+6,),)
      RESULT0=MODE_ITER_SIMULT( ....
               CALC_CHAR_CRIT=_F(OPTION='BANDE',
   	           TABLE_CHAR_CRIT=NBMOD1,
   		    CHAR_CRIT=(-1.E+06,1.E+05)),)
   
      On peut désormais utiliser la table générée par un INFO_MODE préalable (ds l'idéal
      lors d'un run précédent) pour lancer un calcul modal via MODE_ITER_SIMULT + 
      OPTION='BANDE'.
      On spécifie comme d'habitude les bornes de la bande considérée via le paramètre
              - FREQ  (ou CHAR_CRIT en flambement)
      et si on renseigne le paramètre (facultatif)
              - TABLE_FREQ (resp. TABLE_CHAR_CRIT)
      par le nom de la TABLE générée préalablement via un INFO_MODE, l'opérateur ne va pas
      faire le coûteux test de Sturm préalable mais s'appuyer sur celui préalablement calculé 
      ds INFO_MODE.
      Si ce nouveau mot-clé n'est pas renseigné, on procède comme avant en effectuant le test 
      de Sturm adéquat.
   
     Rq1: La recherche ds la TABLE s'effectue par rapport aux fréquences initia
       lement fournies par l'utilisateur ds INFO_MODE. Et non par rapport aux fréquences
       effectivement utilisées par les tests de Sturm (elles ont été peut-être décalées !).
       Evidemment, une fois les bonnes lignes de la TABLE isolées, ce sont les valeurs 
       effectives correspondantes qui sont fournies aux algos de MODE_ITER_SIMULT.  
   
     Rq2: Comme expliqué ds les fiches 17078/19618, beaucoup d'attention a été apportée au pb
       de la gestion des bornes si elles sont très proches d'un mode et qu'il faille les
       décaler. Numériquement et informatiquement, un effort particulier a été apporté pour
       essayer de garantir une certaine isofonctionnalité entre
           MODE_ITER_SIMULT option=BANDE 
       et
           INFO_MODE + MODE_ITER_SIMULT option=BANDE
     D'autre part, le nouveau mode de décalage est bien plus robuste lorsqu'on enchaîne diffé
     rents MODE_ITER_SIMULT sur des bornes contigües (comme c'est la cas ds MACRO_MODE_MECA 
     cf. fiche à venir).
   
     Rq3: Le surcoût calcul d'un INFO_MODE préalable peut-être négligeable car il peut 
       entièrement être mutualisé avec l'étape de pré-traitement de MODE_ITER_SIMULT. D'autre
       part cette façon de procéder peut faire gagner presque un facteur 2 sur les simulations
       MACRO_MODE_MECA.
   
     Rq4: Une autre incitation à utiliser ce type de chaînage est qu'en procédant en 2 temps
      on a plus de latitude pour paramétrer son calcul modal.
       On peut faire une étude prospective avec un INFO_MODE sur plusieurs bandes 
       fréquentielles, un peu à l'aveuglette pour voir ce que cela donne !
                
                 nbmode=INFO_MODE + LISTE_FREQ=(F1,F2,F3,....,Fn)
       
       Puis réutiliser ces coûteuses estimations avec divers MODE_ITER_SIMULT qui vont éventu
       ellement agglomérer plusieurs bandes:
   
              MODE_ITER_SIMULT + BANDE + FREQ=(F1,F3) + TABLE_FREQ=nbmode
              MODE_ITER_SIMULT + BANDE + FREQ=(F4,F7) + TABLE_FREQ=nbmode
                 ....
   
   DETAILS INFORMATIQUES/NUMERIQUES
   ================================
      Compte-tenu des travaux préparatoires des fiches pré-citées, le seul problème délicat à 
      gérer dans cette fiche concernait l'extraction de la TABLE INFO_MODE des bonnes 
      informations. En pratique, on filtre et on extrait de la table les lignes dont les FMIN 
      et les FMAX sont (à epsilon près) inclus ds la bande recherchée.
      Ces lignes constituent une table provisoire dont on extrait ensuite les colonnes FMIN,
      FMAX et NB_MODE afin de controler qu'elle ne comporte pas de trou ou de recouvrement !
      Si tout est ok, on somme ces nbres de fréquences, c'est le nbre de modes contenus ds la 
      bande global. 
   
     RQ5: On teste le présence de trou ou de recouvrements entre les bornes contigues des 
         bandes en controlant leurs écarts 2 à 2 (à VERIF_MODE/PREC_SHIFT près, par défaut 
         0.5%). C'est important surtout pour les bornes externes. Celles internes sont par
         définition contigües.
     RQ6: Si les valeurs testées sont inférieures à 100*R8PREM() on passe en critère absolu.
     RQ7: Comme expliqué précédemment on est obligé de distinguer ds la TABLE, les valeurs
      initiales rentrées par l'utilisateur et celles effectives ayant servies au calcul. On
      le fait en introduisant deux nouvelles colonnes: 'BORNE_MIN/MAX_EFFECT'.
   
   NOUVEAUX MESSAGES
   =================
      Pour gérér les problèmes pouvant ce produire lors du procédé décrit précedemment, on 
      introduit 4 nouveaux msgs: 
   
    * Si la table comporte des valeurs décalées, à la lecture de cette table MODE_ITER_SIMULT 
    émet une ALARME (c'est le même comportement que pour un MODE_ITER_SIMULT seul):
   
   26 : _(u"""
   Attention, la bande sélectionnée dans la table %(k1)s comporte au moins une de ses bornes 
   légèrement décalée. Ce décalage a été opéré afin de ne pas perturber la methode de
   comptage (méthode de Sturm). Il a été effectué en se basant sur la paramétrage 
   (NMAX_ITER_SHIFT/PREC_SHIFT/SEUIL_**) de l'opérateur IMPR_STURM qui a générer la TABLE.
   """),
    
    * Lors de la lecture de la TABLE, ALGELINE2_23/24/25 (UTMESS_F)
   
   23 : _(u"""
   On a rencontré un problème à la lecture de la table %(k1)s.
   --> Conseil:
   Vérifiez que cette carte a bien été générée précédemment par un appel à INFO_MODE.
   """),
   
   24 : _(u"""
   On a rencontré un problème à la lecture de la table %(k1)s. Elle ne comporte aucune ligne
   dont les bornes sont strictement comprises entre les valeurs de la bande de test:
                                       [ %(r1)f , %(r2)f ]
    --> Conseil:
   Vérifiez le contenu de la table via un IMPR_TABLE et modifiez les bornes de l'option BANDE
   en conséquence.
   Au pire, relancez votre calcul sans spécifier de nom de table. L'opérateur effectuera alors
   l'étape complète de prétraitement de maniére transparente.
   Mais le calcul sera un peu plus coûteux puisqu'il ne mutualisera pas cette étape commune 
   avec INFO_MODE.
   """),
   
   25 : _(u"""
   On a rencontré un problème à la lecture de la table %(k1)s. Elle comporte des trous ou des
   recouvrements par  rapport aux bornes choisies. Le solveur modal risque donc de pas 
   calculer strictement tous les modes requis.
    --> Conseil:
   Vérifiez le contenu de la table via un IMPR_TABLE.
   Modifiez éventuellement la valeur par défaut du paramètre VERI_MODE/PREC_SHIFT. ELle 
   détermine l'écartement entre les bornes de la bande de test et celles de la bande 
   recherchée.
   Au pire, relancez votre calcul sans spécifier de nom de table. L'opérateur effectuera alors
   l'étape complète de prétraitement de maniére transparente.
   Mais le calcul sera un plus coûteux puisqu'il ne mutualisera pas cette étape commune avec
   INFO_MODE.
   """),
   
   VALIDATION
   ===========
      Informatique, fonctionnelle, non-régression avec les 450 cas-tests modaux sur Aster4  
      seq.
      Rajout ds les cas-tests (en complément des calculs INFO_MODEs rajoutés ds la fiche 
      19618):
       - En dynamique (sdlx201a): 
            * MODE_ITER_SIMULT + TABLE_FREQ + BANDE=(F1,F3) + SOLVEUR=LDLT
            * Tester iso-fonctionnalité: Idem avec SIMULT std sans TABLE_FREQ
            * 2 autres calculs similaires en variant bornes de la bande (F1/F4 et F3/F6) et 
           SOLVEUR (MF/MUMPS).
   
       - En flambement (sdls504a):
            * MODE_ITER_SIMULT + TABLE_CHAR_CRIT + BANDE=(F1,F4)
            * Tester iso-fonctionnalité: Idem avec SIMULT std sans TABLE_CHAR_CRIT
   
   SOURCES IMPACTEES
   ==================
   CAPY: mode_iter_simult.capy
   F77: op0045.f, vpfopr.f, vpecst.f, vptabl.f (new)
   PY: algeline2.py
   TEST: sdlx201a.comm, sdls504a.comm
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : U4.52.01,U4.52.03
VALIDATION
    informatique,fonctionnelle
NB_JOURS_TRAV  : 5.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019708 DU 2012-10-10 17:07:33
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    MOD6 - Amélioration des performances de MACRO_MODE_MECA
FONCTIONNALITE
   CONTEXTE
   ========
     Lorsqu'on souhaite calculer un grand nombre de fréquences propres, il n'est pas conseillé
     d'utiliser directement MODE_ITER_SIMULT. On économise du temps calcul (voire aussi de
     la mémoire et de la précision ds les résultats) en utilisant une macro encapsulant cet
     opérateur. Il s'agit de MACRO_MODE_MECA.
     Cette macro va lancer toute une série de MODE_ITER_SIMULT sur des sous-bandes (contigües)
     de la bande recherchée.
   
   OBJET
   =====
     L'objectif de cette fiche est d'améliorer les consommations en temps de cette macro (
     en s'appuyant sur les travaux des fiches 19608/19643). A l'issue de cette optimisation
     en mode séq, on pourra passer à la // proprement dite de ladite macro.
     
     Par exemple, sur perf013a on gagne un facteur 2 à paramètres numériques constants. On 
     gagne à nouveau un facteur 2 si on utilise MUMPS sur 4 process MPI.
     Donc, au total, un facteur 4 sans rajouter une once de MPI ds le code !
   
   ANALYSE
   =======
   
     Amélioration de l'ergonomie
     ----------------------------
     Notons que la possibilité de lancer, au préalable, un INFO_MODE sur une liste de 
     fréquences peut faciliter le paramétrage des bornes de la bande de MACRO_MODE_MECA.
     On a les mêmes avantages en terme d'ergonomie que pour un chaînage INFO_MODE + MODE_ITER
     _SIMULT (fiche 19643).
   
     Gain en temps: principe
     -----------------------
     D'autre part, ds cette macro on effectue toute une série de test de Sturm redondants (en
     pré et post-traitement du calcul modal proprement dit):
       - pour chaque pré-estimation du nbre de fréquences présentes ds la BANDE,
       - pour chaque post-vérification du bon nbre de fréquences calculées.
     
     Cela coûte donc 4 factorisations de matrice dynamique (de taille celle du pb) par fréq.
     internes et 2 par fréq. externes à la bande. En organisant différement les calculs, ces
     chiffres peuvent se ramener, respectivement, à 1 et 2.
     Ainsi, par exemple, pour une bande découpée en dix intervalles,
                  --> 2 freqs externes et 9 internes
     On peut passer de
                     2*2 + 9*4 = 40 factos     à        2*2 + 9*1 = 13 factos !
     Comme ces étapes de pré et post-traitements peuvent représenter jusqu'à 80% du calcul
     (c'est d'autant plus vrai que le nbre de fréquences par sous-bande est faible et/ou que
     la taille du pb est grande), le gain en temps peut donc jusqu'à un facteur 2.
   
     RQ0. Le pic mémoire reste identique. De même la précision des calculs et la robustesse du
     processus modal ne sont pas impactés.
   
     Gain en temps: nouvel algorithme
     ----------------------------------
     Exemple d'un MACRO_MODE_MECA sur N+1 fréquences/N sous-bandes
   
     Au lieu de simplement lancer une boucle de
       do i=1,N
           MODE_ITER_SIMULT + BANDE + F=(F_i,F_i+1) + VERI_MODE/STURM='OUI' 
       enddo
   
     On effectue d'abord un
      
      nb_mode=INFO_MODE + LISTE_FREQ=(F_1,F_2...F_N+1)
     
     puis la boucle de MODE_ITER_SIMULT qui vont profiter des tests de Sturm précédents
     et en débranchant le test de Sturm local à la sous-bande
       do i=1,N
           MODE_ITER_SIMULT + BANDE + F=(F_i,F_i+1) + VERI_MODE/STURM='NON' + 
           FREQ_LISTE=nb_mode
       enddo
     
     Puis on conclut par un test de Sturm de vérification global (par opposition au test
     de Sturm locaux à chaque sous-bande comme fait précédemment):
       INFO_MODE + FREQ_MIN=premier mode calculé de la première sous-bande
                 + FREQ_MAX=dernier mode calculé de la dernière sous-bande.
     
     et on vérifie que le nbre de fréquences ainsi calculé est égale à la somme des nbre de
     modes prévus, sous-bande par sous-bande, ds l'INFO_MODE initial.
   
     RQ1. Pour ce test de Sturm final, on décale les bornes (ds le Python) de la même façon
     que ds le fortran (vpfopr): en tenant compte de SEUIL_FREQ et de VERI_MODE/PREC_SHIFT.
   
     RQ2. Pour rester iso-fonctionnel avec l'ancien mode de vérification (qui peut avoir ses
     adeptes!) et pour fournir un outil d'investigation supplémentaire à l'utilisateur en
     cas de pbs: modes multiples ratés, deux fois la même valeur...
     On propose trois types de post-vérification de Sturm ds la macro:
      
      VERI_MODE/STURM='LOCAL'  --> L'ancien mode qui demande à chaque MODE_ITER_SIMULT de
          faire sa propre vérif. Très coûteux.
      VERI_MODE/STURM='GLOBAL' --> Nouveau mode, on ne fait qu'une vérif global. Peu coûteux.
            (PAR DEFAUT)
      VERI_MODE/STURM='NON'    --> Pas de vérif de Sturm, ni local, ni globale. Mode sans 
                 filet pour utilisateur averti.
   
     au lieu du VERI_MODE/STURM='OUI' (defaut)/'NON' actuel (calqué sur celui de SIMULT)
   
     RQ3: Gain en temps, si une sous-bande est vide on imprime le message MODAL_6 (en I
       si STOP_FREQ_VIDE='NON' en F sinon)
       De même si la bande globale est vide on émet une ALARME, MODAL_8 (si 'NON') ou une 
       ERREUR_FATALE (sinon).
       Si STURM='GLOBAL' et bande=vide UTMESS_I MODAL_7.
       Ces messages se substituent aux messages des MODE_ITER_SIMULT concernant les bandes
       vides (puisqu'on ne les lance plus si on sait a priori que la bande est vide !)
   
     RQ4: En fin de Macro_mode_méca on ré-explique à l"utilisateur (en qqes lignes) les 
        vérifications de post-traitements qui sont opérées suivant son paramétrage:
        UTMESS_I MODAL_2/3/4
        UTMESS_F MODAL_5 (si STURM='GLOBAL' n'est pas vérifié)
        Exemple:
          2: _(u"""
              Opérateur MACRO_MODE_MECA
          Pas de test de Sturm demandé (VERI_MODE=_F(STURM='NON')).
          Donc, à l'issu de chaque calcul modal sur une sous-bande, on vérifie seulement que:
            - la norme de l'erreur est bien valide (via le paramètre VERI_MODE/SEUIL),
            - chaque fréquence est bien incluse dans la bande spécifiée (VERI_MODE/PREC_SHIFT).
          Pas de test de Sturm local ou global.
               """),
   
     Gain en temps/mémoire et résolution de pb (ponctuel) de robustesse: solveur linéaire
     -------------------------------------------------------------------------------------
     Jusqu'à présent cette macro ne pouvait pas choisir son solveur linéaire (mot-clé 
     SOLVEUR). Elle était tributaire des choix par défaut de MODE_ITER_SIMULT. Pour bénéficier
     de gain en temps et/ou en mémoire, voire pour tenter de résoudre des pbs numériques
     ponctuels, il serait intéressant de pouvoir changer de solveur linéaire avec tous le 
     paramétrage associé (en particulier METHODE, RENUM et NPREC).
   
     Exemple 1: MUMPS + RENUM='QAMD' peut être bien meilleur que MULT_FRONT + METIS (x 2 en
                temps).
     Exemple 2: En cas de pb de décalages récurrents du test de Sturm, on peut vouloir jouer 
                sur les paramètres solveur linéaire et/ou le paramètre NPREC.
     Exemple 3: Pour réduire la taille du pic mémoire requis par un calcul, on peut vouloir 
                utiliser MUMPS en //.
   
      On propose donc de rajouter dans le CAPY de MACRO_MODE_MECA le bloc SOLVEUR:
        SOLVEUR = C_SOLVEUR('INFO_MODE')
      On l'utilise pour les 2 op. appelés en sous-main: INFO_MODE et MODE_ITER_SIMULT.
   
     RQ5. On ne peut juste pas modifier les paramètres du solveur linéaire lié aux descentes
     remontées (POSTTRAITEMENTS, RESI_RELA). Ils sont d'un intérêt mineur ici.
   
     Gain en robustesse
     ------------------
     A l'heure actuelle, si une borne de sous-bande est proche d'un mode propre, celle-ci est
     décalée de deux manières différentes suivant qu'elle soit borne sup. ou borne inf. d'une
     sous-bande ! Ainsi si on cherche les modes présents ds les sous-bandes:
                  [50___100] et [100__150]
     avec 100 un mode propre,
     on va décaler, par exemple une seule fois, pour s'intéresser aux nouvelles sous-bandes
                 [50___105] et [95__150]
     On a donc créé articficiellement une zone de recouvrement entre les 2 sous-bandes
     ([95__105]) avec le risque d'un calcul de deux fois la même fréquence (par exemple si
      il y'en a eu proche de 98 ou de 102).
   
     Avec le nouveau mode de découpage qui impose que chaque fréquence n'est traité (et décal
     lée) qu'une fois, ce risque disparait. Le décalage de l'exemple précédent deviendra
                [50___105] et [105__150]
   
     Mesure de performances
     ----------------------
     Cas-test perf013a (N=1 M), on cherche toutes les fréquences ds l'intervalle [0,4000]
     découpé en 8 sous-bandes.
   
   ___________ACTUEL____NEW1________NEW2__________NEW3_____________NEW4
   ___________with_MF__with_MF__with_MUMPS+QAMD_IDEM_with_#mpi=4___#mpi=8
   _____________OOC______OOC__________IC___________IC_______________IC
   ----------------------------------------------------------------------------------------
   Temps_______2427______1224_______906___________578______________517
   elapsed (en s)
   Vmpeak______5248______5304_____(3200+810)___(2010+810)_______(700+800)
   (en Mo)
   
     Donc, coté temps de simulation, on gagne un facteur 2 avec la nouvelle écriture de
     MACRO_MODE_MECA. Si de plus, on utilise MUMPS + QAMD on regagne 25%.
     Si on paraléllise la partie MUMPS, on gagne à nouveau 30% (sur 4 processus MPI).
     Bref, sur ce cas là, on gagne au total jusqu'à un facteur 4.
   
     RQ6. La partie factorisation numérique de MUMPS (la seule partie vraiment efficace en //)
          est encore moins importante qu'avant ds une simulation MACRO_MODE_MECA (en gros
          70% du temps total). Donc le speed-up thérique en temps est borné à 3.
     RQ7. Le // de MUMPS ne sert ici qu'à faire baisser le pic mémoire.
     RQ8. Ce parallélisme numérique sera à conjuguer éventuelle avec la parallélisation
          informatique future de la macro.
   
   IMPACT FONCTIONNEL
   ==================
     Ds l'op: MACRO_MODE_MECA
     Nouveau mot-clé SOLVEUR (idem que celui de INFO_MODE).
     Nouvelles valeurs du mot-clé VERI_MODE/STURM='GLOBAL'/'LOCAL'/'NON'.
     On supprime les mot-clés redondants qui ne sont pas homogènes avec les autres op. modaux
       FREQ_MIN/FREQ_MAX/NB_BLOC_FREQ.
     
     Je ne supprime finalement pas le mot-clé STOP_FREQ_VIDE (de MACRO_MODE_MECA et de _SIMULT)
     car il peut avoir un intérêt fonctionnel (en particulier il émet un signal dédié qu'on
     peut récupérer ds le python pour prendre des décisions dynamiquement: élargissement ou
     décalage de la bande de recherche....)
   
   VALIDATION
   ===========
      Les 22 cas-tests avec MACRO_MODE_MECA passent sur aster4 seq.
      On enrichit leurs paramétrages pour activer les nouveaux mot-clés:
      miss01a et miss05a STURM='LOCAL'
      Les 3 macros de forma011c on fait varier le solveur linéaire: MUMPS, MULT_FRONT et LDLT
   
      + Par adhérence suppression mot-clés: forma11c,sdll109b,sdll131a,sdls300a,sdnl131a.
     
   SOURCES IMPACTEES
   =================
   PY: macro_mode_meca_ops.py, modal.py
   CAPY: macro_mode_meca.capy
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.52.01
VALIDATION
    informatique,fonctionnelle,non-régression
NB_JOURS_TRAV  : 5.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019676 DU 2012-10-08 16:18:43
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Il faut interdire SOLVEUR MUMPS + GESTION_MEMOIRE='AUTO' dans la commande FACTORISER
FONCTIONNALITE
   ANALYSE
   =======
      Depuis le mois de juin dernier et l'introduction du paramètrage GESTION_MEMOIRE='AUTO'
      avec le solveur linéaire MUMPS, on permet à ce dernier de "s'étaler" en RAM. Cela
      améliore grandement son comportement numérique (on a beaucoup moins à redimensionner
      l'espace dévolu au pivotage) et un peu les perfs.
      Cependant, avec la commande éclatée FACTORISER, ce comportement est préjudiciable car
      on ne libère pas ce espace alloué par MUMPS jusqu'à la destruction explicite des données.
      Et comme, on donne à MUMPS le droit de prendre toute la mémoire hors JEVEUX+Python,
      juste après le premier appel à FACTORISER, il ne rest plus grand chose (par def) !
   
      On supprime donc l'accès, pour l'opérateur FACTORISER, à cette valeur de GESTION_MEMOIRE.
      L'utilisateur devra choisir entre IN_CORE' (défaut), 'OUT_OF_CORE' et 'EVAL'.
   
   RQ1. L'autre solution aurait été un mode "AUTO" light uniquement pour cet op. (pour 
   continuer à profiter des autres aspects positifs du mode 'AUTO'). Mais cela
   compliquerait la programmation inutilement. On attend d'éventuels besoins en la matière.
   
   RQ2. Heureusement que j'ai gardé le "non étalement" mémoire de MUMPS de rigueur avec les 2 
   autres modes de GESTION_MEMOIRE. Je l'ai fait initialement pour préserver un mode de 
   fonctionnement viable en cas de pb d'estimation mémoire disponible par le code (comme 
   parfois sur Rocks). Cela sert aussi pour cette commande éclatée.
   
   VALIDATION
   ===========
      Par adhérence de la suppression du mode 'AUTO': mumps03a.
   
   SOURCE RESTITUEE
   =================
     factoriser.capy
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.55.01
VALIDATION
    informatique
NB_JOURS_TRAV  : 0.25
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR assire       ASSIRE Aimery          DATE 10/15/2012 - 01:12:15

--------------------------------------------------------------------------------
RESTITUTION FICHE 019695 DU 2012-10-10 11:09:29
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Les tests zzzz118a, b, c et d doivent xc3xaatre en Intranet
FONCTIONNALITE
   Les tests zzzz118a, b, c et d doivent être en NIV_PUB_WEB=INTRANET car ils font appel à un
   catalogue matériau qui n'est pas distribué.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    zzzz118*
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019085 DU 2012-06-29 14:36:31
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    INCLUDE dans un fichier esclave MACR_RECAL
FONCTIONNALITE
   Probleme :
   ----------
   Dans MACR_RECAL en mode INCLUSION, il n'est pas possible d'avoir la commande INCLUDE dans
   le fichier esclave.
   
   
   Solution :
   ----------
   Il est trop difficile de faire l'évolution nécessaire dans le superviseur Aster, on
   convient donc de la convention suivante :
   
   A la place de la commande :
   INCLUDE(UNITE=91)
   
   les utilisateurs doivent utiliser la commande :
   execfile('fort.91')
   
   en remplacant 91 par l'unité logique utilisée.
   
   
   Aucune restitution de source dans Aster.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : u4.73.02
VALIDATION
    zzzz159a modifié
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 017696 DU 2011-10-12 11:27:03
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Version de GMSH utilisee par Aster
FONCTIONNALITE
   On propose de faire une légère évolution dans EXEC_LOGICIEL / MAILLAGE = GMSH : 
   rajoute "-format msh" à la ligne de commande de GMSH.
   
   Ceci permet de rentre compatible EXEC_LOGICIEL avec les dernières versions de GMSH.
   Accessoirement, le zzzz141a sera OK dans aster-full.
   
   Cette option étant compatible avec les anciennes versions de GMSH, on peut alors utiliser
   n'importe quelle version de GMSH.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    zzzz141a
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019591 DU 2012-09-26 15:33:30
TYPE aide utilisation concernant Code_Aster (VERSION 10.5)
TITRE
    Comment rxc3xa9duire la verbositxc3xa9 pour MACR_RECAL
FONCTIONNALITE
   Besoin :
   --------
   
   L'utilisateur veut faire du recalage entre deux champs de déplacement (expérimental et
   calculé). La récupération des données expérimentales passe par des LIRE_FONCTION dans une
   boucle sur le nombre de noeuds de recalage; de même pour les données calculées avec une
   boucle de CALC_TABL dans le post-traitement dans le fichier esclave.
   
   
   Probleme :
   ----------
   
   Le calcul esclave contient des boucles Python autour des commandes Aster et peut générer
   énormément d'output lorsque le nombre de données expérimentales augmente.
   De plus, il souhaite lancer son calcul en MPI.
   Il a donc un fichier output extrement gros (plusieurs Gigas) et son calcul fini par
   planter sur Aster-4 car l'output de LSF (écrit dans le répertoire ~/.lsbatch) a dépassé le
   quota que son $HOME (fixé à 20 Go).
   
   
   Réponse :
   ---------
   
   Il n'est pas simple d'annuler complètement les output générés par les commandes (sorte de
   INFO=0). Cette question sera traitée indépendament de cette AOM.
   
   Pour cette AOM, on donne les conseils suivants :
   
   - Mettre DEBUT(IMPR_MACRO='NON') dans le job maitre de MACR_RECAL pour limiter un peu
   l'affichage (seul la partie correspondant à l'écriture des commandes disparait, mais
   l'echo des commandes elles-même reste) ;
   - Faire un lien symbolique de ~/.lsbatch vers /scratch/$USER/.lsbatch 
   - Faire un lien symboliqe de ~/flasheur vers /scratch/$USER/flasheur
   
   Avec ces préconisations, les études devraient aller au bout et ne pas être stoppées à
   cause du quota (le quota est de 1 To par utilisateur sur /scratch).
   
   
   Aucune restitution de source.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    xc3xa9tude perso
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019727 DU 2012-10-13 20:44:04
TYPE express concernant Code_Aster (VERSION 10.5)
TITRE
    Le test ssnv101c doit xc3xaatre en Intranet
FONCTIONNALITE
   Le test ssnv101c doit être en Intranet car il utilise un catalogue matériau qui n'est pas
   diffusé à l'externe.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    ssnv101c
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019097 DU 2012-07-02 15:51:12
TYPE express concernant Code_Aster (VERSION 10.5)
TITRE
    Stanley et encodage
FONCTIONNALITE
   Certains textes n'apparaissent pas dans Stanley : le bouton "Déformée", des textes dans
   les MessageBox, etc.
   Il faut remplaçer tous les _("texte") par _(u"texte").
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Stanley
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR berro        BERRO Hassan           DATE 10/16/2012 - 01:34:10

--------------------------------------------------------------------------------
RESTITUTION FICHE 018568 DU 2012-03-16 14:02:13
TYPE evolution concernant Code_Aster (VERSION 10.5)
TITRE
    Difference des valeurs RMS calculees en frequentiel et en temporel
FONCTIONNALITE
   . . . . . . . . . ********************
   . . . . . . . . .* Résumé du problème *
   . . . . . . . . . ********************
   
   Dans le cadre des simulations en Interaction Fluide-Structure, on remarque une difference 
   dans les niveaux de réponse structurelle à une excitation fluide turbulente selon le type 
   de calcul: spectral ou temporel.
   
   . . . . . . . . . ****************************
   . . . . . . . . .* Identification du problème *
   . . . . . . . . . ****************************
   
   Je reviens sur cette fiche après quelques mois de travail sur les opérateurs IFS. Suite 
   à mes analyses de chaque opérateur impliqué dans la chaîne de calcul spectral-temporel, 
   j'ai la certitude que le problème vient de l'utilisation de l'opérateur GENE_FONC_ALEA 
   avec l'option INTERP='OUI'.
   
   Quand on demande l'interspectre d'excitation turbulente projeté sur base modale par le
   moyen de l'opérateur PROJ_SPEC_BASE, on est obligé de définir la plage de fréquences ou le
   spectre est calculé ainsi que sa discrétisation. (FREQ_INIT, FREQ_FIN, NB_POIN)
   
   Ensuite si on veut générer un signal temporel (aléatoire) à partir du spectre, on a le 
   choix d'interpoler (ou pas) les valeurs du spectre entre deux discrétisations. Ce que j'ai
   remarqué est que cette pratique ne fait qu'introduire du bruit supplémentaire sur le 
   signal temporel. 
   
   Pour obtenir un "joli" signal temporel "joli" et par intégration
   temporelle une réponse précise de la structure, on doit rechercher plutôt une 
   discrétisation fine en temps.
   
   Vu que l'intégration temporelle s'effectue avec des pas de temps assez petits, on doit
   vérifier que l'excitation temporelle turbulente est définie assez finement sur l'échelle
   temporelle. On sait que :
   
   dt = (1/fmax)
   
   dt : discrétisation temporelle de l'excitation
   fmax : fréquence maximale du spectre d'excitation (= FREQ_FIN de PROJ_SPEC_BASE)
   
   Il est donc préférable d'éteindre le spectre d'excitaion à des hautes fréquences avant de 
   procéder à la génération du signal temporel.
   
   Le raffinement fine du pas fréquentielle (augmenter NB_POIN dans PROJ_SPEC_BASE) permet 
   simplement d'augmenter la durée d'excitation.
   
   Le problème rencontré dans ce genre de cas-test est du à deux mauvaises pratiques 
   d'utilisation (au moins pour le cas d'études en IFS):
   
   .1. Interpolation linéaire d'un spectre d'excitation non-linéaire.
   . . 
   . . Dans le test initial par André, nous avons les options suivantes :
   . . 
   . . << dans PROJ_SPEC_BASE >>
   . . FREQ_INIT = 19.2675
   . . FREQ_FIN .= 57.8025
   . . NB_POIN. .= 2048 . . . << (appelons le NB_POIN_0)
   . . . . La discrétisation du spectre original est donc de :
   . . . . DF_0 = (FREQ_FIN-FREQ_INIT)/(NB_POIN_0-1) = 0.018825 Hz
   . . 
   . . << dans GENE_FONC_ALEA >>
   . . INTERP . .= 'OUI'
   . . NB_POIN. .= 2048 . . . << (appelons le NB_POIN_1)
   . . . . La discrétisation du spectre interpolé avant génération de l'excitation est de :
   . . . . DF_1 = (FREQ_FIN)/(NB_POIN_1-1) = 0.028237 Hz
   . . 
   . . . . DF_1 > DF_0
   . . On a donc de l'information perdue sur le spectre *avant* même de générer le signal!
   
   .2. Raffinement insuffisant de l'excitation temporelle.
   . .
   . . L'excitation temporelle est définie avec une discrétisation :
   . . DT_EXCIT = 1./(FREQ_FIN) = 17.3E-3 s
   . .
   . . L'intégration temporelle avec DYNA_TRAN_MODAL s'effectue avec un pas de temps :
   . . DT_INTEG = 1.0E-3
   . .
   . . DT_EXCIT > DT_INTEG
   . . Là aussi on a un problème car on ne connait pas assez finement le signal d'excitation.
   
   . . . . . . . . . **********
   . . . . . . . . .* Solution *
   . . . . . . . . . **********
   
   Pour corriger ces deux points, il suffit d'utiliser GENE_FONC_ALEA sans interpolation et
   avec un nombre de points suffisant :
   
   VECTINT2 = GENE_FONC_ALEA ( INTE_SPEC. . . = SPPROJ, 
   . . . . . . . . . . . . . . NUME_VITE_FLUI = 1, . . . . << A enlever pour la V11
   . . . . . . . . . . . . . . INTERPOL . . . = 'NON',
   . . . . . . . . . . . . . . NB_POIN. . . . = 16384, . . << = NB_POIN_0 * 8
   . . . . . . . . . . . . . . NB_TIRAGE. . . = 1,);
   
   
   Ici, NB_POIN devient un paramètre qui permettra de prolonger le spectre à des hautes 
   fréquences pour obtenir un rendu plus propre en signal temporel.
   
   Pour calculer la nouvelle FREQ_MAX et la discrétisation du signal d'excitation, on procède 
   comme la suite : 
   
   1. Calculer le pas de fréquence initial dans le spectre de PROJ_SPEC_BASE : 
   . . DF_0 = (FREQ_FIN-FREQ_INIT)/(NB_POIN_0-1) = 0.018825 Hz
   
   2. Multiplier cette valeur par NB_POIN dans GENE_FONC_ALEA : 
   . . FREQ_MAX = NB_POIN_1 * DF_0 = 308.4306 Hz
   
   3. La discrétisation temporelle du signal d'excitation est l'inverse de FREQ_MAX : 
   . . DT = 1.0/FREQ_MAX = 3.242E-3 s
   
   4. Choisir un pas de temps d'intégration temporelle supérieure à DT.
   
   ========================================================================================
   Bug dans GENE_FONC_ALEA avec INTERP = 'NON' 
   ========================================================================================
   
   Si on fait l'appel précédent à GENE_FONC_ALEA, on tombe sur un bug très curieux.
   
   Le signal généré correspond à un spectre décalé vers la "gauche". Autrement dit, FREQ_INIT 
   devient 0.0 et FREQ_FIN devient (FREQ_FIN-FREQ_INIT). Si le spectre est défini entre 10 et 
   25 Hz, on obtient un signal temporel avec une empreinte fréquentielle entre 0 et 15 Hz!
   
   L'erreur est tracé et corrigé dans gefact.f dans les versions 10 et 11.
   
   ========================================================================================
   
   En faisant ces corrections on arrive à ces résultats :
   
   *********************************************************************
   Calcul temporel : RMS = 1.46706E-04
   Calcul spectral : RMS = 1.47323E-04
   **************************************** Soit 0.4% d'écart **********
   
   . . . . . . . . . *******************
   . . . . . . . . .* Résultats Faux ?? *
   . . . . . . . . . *******************
   
   1. Pour la méthode avec interpolation, les résultats obtenus sont faux si le spectre 
   d'origine n'est pas censé être interpolé linéairement.
   
   2. Pour la méthode sans interpolation et vu le bug précédent alors oui il y a un risque de
   résultat faux **si le spectre qu'on utilise n'est pas défini à partir de f = 0.0 Hz**
   
   En analysant les tests de couverture du code, l'option INTERPOL='NON' de GENE_FONC_ALEA
   n'est testé que dans zzzz180a. Dans ce test le spectre est défini à partir de f = 0 Hz. Du
   coup le bug de décalage n'intervenait pas.
   
   . . . . . . . . . **********************************************
   . . . . . . . . .* Donner un bon exemple dans les cas-tests IFS *
   . . . . . . . . . **********************************************
   
   Les 4 cas-tests IFS faisant appel à GENE_FONC_ALEA le font avec interpolation, je propose 
   de les passer tous en INTERP='NON' pour donner un bon exemple d'utilisation.
   
   sdnl112b sdnl112c sdll115b sdnl136a
   
   Les valeurs de tests de non-régression pour les calculs temporels ont du être modifiées.
   
   
   . . . . . . . . . *********
   . . . . . . . . .* Impacts *
   . . . . . . . . . *********
   
   . fortran : gefact.f
   cas-tests : sdnl112b sdnl112c sdll115b sdnl136a
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U2.06.14
VALIDATION
    sdnl112b sdnl112c sdll115b sdnl136a
NB_JOURS_TRAV  : 15.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019515 DU 2012-09-18 08:08:17
TYPE anomalie concernant Code_Aster (VERSION )
TITRE
    ITMI dans DYNA_VIBRA, le mot-cle AMOR_REDUIT n'est pas utilise
FONCTIONNALITE
   . . . . . . . . . ********************
   . . . . . . . . .* Résumé du problème *
   . . . . . . . . . ********************
   
   Le mot-clé AMOR_REDUIT est obligatoire dans DYNA_VIBRA > ITMI. Il ne devrait pas l'être
   parce qu'on récupère systématiquement les amortissements ajoutés venant du fluide et
   présents dans la base modale melas_flu.
   
   
   . . . . . . . . . ***********************
   . . . . . . . . .* Corrections apportées *
   . . . . . . . . . ***********************
   
   1. On garde le mot-clé AMOR_REDUIT mais il devient facultatif. Après correction d'un bug
   dans mditmi.f, il devient possible d'utiliser ce mot-clé pour renseigner les amortissements
   modaux pour les modes non couplés avec le fluide.
   
   2. Clarifications dans la doc U de DYNA_VIBRA, méthode ITMI.
   
   . . . . . . . . . *********
   . . . . . . . . .* Impacts *
   . . . . . . . . . *********
   
   fortran : mditmi.f, mdveri.f
   . . doc : U4.53.21
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.53.21
VALIDATION
    cas-tests ITMI
NB_JOURS_TRAV  : 4.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019586 DU 2012-09-26 09:44:36
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    AR02 : Le pas de temps de calcul n'est pas correctement sauvegarde pour la methode ITMI de DYNA_VIBRA
FONCTIONNALITE
   . . . . . . . . . ********************
   . . . . . . . . .* Résumé du problème *
   . . . . . . . . . ********************
   
   Suite aux développements dans le cadre de la fiche issue10487, on sauvegarde désormais
   systématiquement les valeurs du pas de temps de calcul dynamique transitoire pour chaque
   instant d'archivage, peu importe le schéma d'intégration temporelle.
   
   Avec la méthode ITMI de DYNA_VIBRA, le pas de temps n'est pas sauvegardé.
   
   
   . . . . . . . . . ***********************
   . . . . . . . . .* Corrections apportées *
   . . . . . . . . . ***********************
   
   On sauvegarde le pas de temps et on le passe dans les différentes routines ITMI tel qu'il
   est fait avec les vecteurs de déplacements, vitesse, et accélération.
   
   Le vecteur des pas de temps est archivé vers la fin de calcul dans la sd_dyna_gene 
   produite.
   
   . . . . . . . . . *********
   . . . . . . . . .* Impacts *
   . . . . . . . . . *********
   
   fortran : ecrbas.f ecrgen.f mditm2.f mditm3.f
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    cas-tests ITMI
NB_JOURS_TRAV  : 3.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR courtois     COURTOIS Mathieu       DATE 15/10/2012 - 18:07:04

--------------------------------------------------------------------------------
RESTITUTION FICHE 019716 DU 2012-10-11 14:15:06
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    En NEW11.2.18, 84 cas-tests sont NOOK ou en erreur fatale sur Aster4, Rocks et Calibre7.
FONCTIONNALITE
   Aster4 & Calibre7
   =================
   
   Liste des tests cassés
   ----------------------
   
       comp003a
       comp003b
       comp003c
       hsnv124c
       hsnv125g
       sdls118a
       sslv311a
       ssnd105b
       ssnd105c
       ssnv101a
   
   
   Correction
   ----------
   
   comp003*
   ~~~~~~~~
   
   Les modifications ont été faites dans les fichiers '.91'.
   Les '.comm' étant inchangés, elles n'ont pas été prises en compte.
   Il suffit donc de les restituer de nouveau.
   
   Autres tests
   ~~~~~~~~~~~~
   
   Tous les NOOK sont sur des tests de NON_REGRESSION (ceux ajoutés).
   
       hsnv124c . .39 .cal7 . .2.11304244E-03 .2.1130371288302E-03 2.51E-04% . 1.0E-04%
       hsnv124c . .42 .aster4 .2.11304244E-03 .2.1130371288302E-03 2.51E-04% . 1.0E-04%
       hsnv124c . .59 .mc . . .2.11304244E-03 .2.1130371288302E-03 2.51E-04% . 1.0E-04%
       hsnv124c . .71 .cal7 . .2.11304244E-03 .2.1130371288302E-03 2.51E-04% . 1.0E-04%
       hsnv124c . .74 .aster4 .2.11304244E-03 .2.1130371288302E-03 2.51E-04% . 1.0E-04%
       hsnv124c . .91 .mc . . .2.11304244E-03 .2.1130371288302E-03 2.51E-04% . 1.0E-04%
       => valeurs de non régression identiques partout, elles sont modifiées
   
       hsnv125g . .63 .cal7 . .-27.67079557 . .-27.670766645182 . .1.05E-04% . 1.0E-04%
       hsnv125g . .66 .aster4 .-27.67079557 . .-27.670766645182 . .1.05E-04% . 1.0E-04%
       hsnv125g . .83 .mc . . .-27.67079557 . .-27.670766645182 . .1.05E-04% . 1.0E-04%
       => valeurs de non régression identiques partout, elles sont modifiées
   
       sdls118a . .132 aster4 .1.0000 . . . . .1.0301 . . . . . . .3.0% . . . .1.0%
       sdls118a . .149 mc . . .1.0000 . . . . .1.0301 . . . . . . .3.0% . . . .1.0%
       sdls118a . .129 cal7 . .1.000000 . . . .0.970307 . . . . . .3.0% . . . .1.0%
       => variabilité importante !
   
       sslv311a . .87 .aster4 .6.22775043E+07 .6.2278210724233E+07 1.13E-03% . 1.0E-04%
       sslv311a . .96 .cal7 . .6.22775043E+07 .6.2278210724232E+07 1.13E-03% . 1.0E-04%
       sslv311a . .104 mc . . .6.22775043E+07 .6.2278210724233E+07 1.13E-03% . 1.0E-04%
       sslv311a . .79 .aster4 .6.33686998E+07 .6.336961399357E+07 .1.44E-03% . 1.0E-04%
       sslv311a . .88 .cal7 . .6.33686998E+07 .6.3369613993569E+07 1.44E-03% . 1.0E-04%
       sslv311a . .96 .mc . . .6.33686998E+07 .6.336961399357E+07 .1.44E-03% . 1.0E-04%
       sslv311a . .247 aster4 .6.33686998E+07 .6.336961399357E+07 .1.44E-03% . 1.0E-04%
       sslv311a . .256 cal7 . .6.33686998E+07 .6.3369613993569E+07 1.44E-03% . 1.0E-04%
       sslv311a . .264 mc . . .6.33686998E+07 .6.336961399357E+07 .1.44E-03% . 1.0E-04%
       sslv311a . .95 .aster4 .6.54255802E+07 .6.5426885911065E+07 2.0E-03% . .1.0E-04%
       sslv311a . .104 cal7 . .6.54255802E+07 .6.5426885911063E+07 2.0E-03% . .1.0E-04%
       sslv311a . .112 mc . . .6.54255802E+07 .6.5426885911065E+07 2.0E-03% . .1.0E-04%
       sslv311a . .103 aster4 .6.64188047E+07 .6.6420246084091E+07 2.17E-03% . 1.0E-04%
       sslv311a . .112 cal7 . .6.64188047E+07 .6.6420246084091E+07 2.17E-03% . 1.0E-04%
       sslv311a . .120 mc . . .6.64188047E+07 .6.6420246084091E+07 2.17E-03% . 1.0E-04%
       sslv311a . .111 aster4 .6.94122117E+07 .6.9413845312653E+07 2.35E-03% . 1.0E-04%
       sslv311a . .120 cal7 . .6.94122117E+07 .6.9413845312653E+07 2.35E-03% . 1.0E-04%
       sslv311a . .128 mc . . .6.94122117E+07 .6.9413845312652E+07 2.35E-03% . 1.0E-04%
       sslv311a . .119 aster4 .7.28598925E+07 .7.2861644783148E+07 2.41E-03% . 1.0E-04%
       sslv311a . .128 cal7 . .7.28598925E+07 .7.2861644783148E+07 2.41E-03% . 1.0E-04%
       sslv311a . .136 mc . . .7.28598925E+07 .7.2861644783147E+07 2.41E-03% . 1.0E-04%
       sslv311a . .127 aster4 .7.60795844E+07 .7.6081420578262E+07 2.41E-03% . 1.0E-04%
       sslv311a . .136 cal7 . .7.60795844E+07 .7.6081420578262E+07 2.41E-03% . 1.0E-04%
       sslv311a . .144 mc . . .7.60795844E+07 .7.6081420578261E+07 2.41E-03% . 1.0E-04%
       sslv311a . .135 aster4 .8.05522517E+07 .8.0554142723604E+07 2.35E-03% . 1.0E-04%
       sslv311a . .144 cal7 . .8.05522517E+07 .8.0554142723604E+07 2.35E-03% . 1.0E-04%
       sslv311a . .152 mc . . .8.05522517E+07 .8.0554142723603E+07 2.35E-03% . 1.0E-04%
       sslv311a . .255 aster4 .8.05522517E+07 .8.0554142723604E+07 2.35E-03% . 1.0E-04%
       sslv311a . .264 cal7 . .8.05522517E+07 .8.0554142723604E+07 2.35E-03% . 1.0E-04%
       sslv311a . .272 mc . . .8.05522517E+07 .8.0554142723603E+07 2.35E-03% . 1.0E-04%
       sslv311a . .143 aster4 .8.2617533E+07 . 8.2619467441977E+07 2.34E-03% . 1.0E-04%
       sslv311a . .152 cal7 . .8.2617533E+07 . 8.2619467441977E+07 2.34E-03% . 1.0E-04%
       sslv311a . .160 mc . . .8.2617533E+07 . 8.2619467441976E+07 2.34E-03% . 1.0E-04%
       sslv311a . .151 aster4 .8.69681483E+07 .8.6970114680491E+07 2.26E-03% . 1.0E-04%
       sslv311a . .160 cal7 . .8.69681483E+07 .8.6970114680491E+07 2.26E-03% . 1.0E-04%
       sslv311a . .168 mc . . .8.69681483E+07 .8.6970114680489E+07 2.26E-03% . 1.0E-04%
       sslv311a . .159 aster4 .8.78450343E+07 .8.7847024649877E+07 2.27E-03% . 1.0E-04%
       sslv311a . .168 cal7 . .8.78450343E+07 .8.7847024649878E+07 2.27E-03% . 1.0E-04%
       sslv311a . .176 mc . . .8.78450343E+07 .8.7847024649876E+07 2.27E-03% . 1.0E-04%
       sslv311a . .175 aster4 .9.16983032E+07 .9.170032471222E+07 .2.2E-03% . .1.0E-04%
       sslv311a . .184 cal7 . .9.16983032E+07 .9.1700324712221E+07 2.2E-03% . .1.0E-04%
       sslv311a . .192 mc . . .9.16983032E+07 .9.1700324712218E+07 2.2E-03% . .1.0E-04%
       sslv311a . .167 aster4 .9.19000967E+07 .9.1902104783696E+07 2.19E-03% . 1.0E-04%
       sslv311a . .176 cal7 . .9.19000967E+07 .9.1902104783697E+07 2.19E-03% . 1.0E-04%
       sslv311a . .184 mc . . .9.19000967E+07 .9.1902104783695E+07 2.19E-03% . 1.0E-04%
       sslv311a . .271 aster4 .9.45419713E+07 .9.4544029993447E+07 2.18E-03% . 1.0E-04%
       sslv311a . .280 cal7 . .9.45419713E+07 .9.4544029993446E+07 2.18E-03% . 1.0E-04%
       sslv311a . .288 mc . . .9.45419713E+07 .9.4544029993446E+07 2.18E-03% . 1.0E-04%
       sslv311a . .191 aster4 .9.50262271E+07 .9.5028264077854E+07 2.14E-03% . 1.0E-04%
       sslv311a . .200 cal7 . .9.50262271E+07 .9.5028264077855E+07 2.14E-03% . 1.0E-04%
       sslv311a . .208 mc . . .9.50262271E+07 .9.5028264077852E+07 2.14E-03% . 1.0E-04%
       sslv311a . .183 aster4 .9.56022931E+07 .9.5604325237953E+07 2.13E-03% . 1.0E-04%
       sslv311a . .192 cal7 . .9.56022931E+07 .9.5604325237954E+07 2.13E-03% . 1.0E-04%
       sslv311a . .200 mc . . .9.56022931E+07 .9.5604325237952E+07 2.13E-03% . 1.0E-04%
       sslv311a . .207 aster4 .9.71927561E+07 .9.7194800846869E+07 2.1E-03% . .1.0E-04%
       sslv311a . .216 cal7 . .9.71927561E+07 .9.7194800846871E+07 2.1E-03% . .1.0E-04%
       sslv311a . .224 mc . . .9.71927561E+07 .9.7194800846867E+07 2.1E-03% . .1.0E-04%
       sslv311a . .263 aster4 .9.71927561E+07 .9.7194800846869E+07 2.1E-03% . .1.0E-04%
       sslv311a . .272 cal7 . .9.71927561E+07 .9.7194800846871E+07 2.1E-03% . .1.0E-04%
       sslv311a . .280 mc . . .9.71927561E+07 .9.7194800846867E+07 2.1E-03% . .1.0E-04%
       sslv311a . .199 aster4 .9.827111E+07 . .9.8273158545897E+07 2.08E-03% . 1.0E-04%
       sslv311a . .208 cal7 . .9.827111E+07 . .9.8273158545899E+07 2.08E-03% . 1.0E-04%
       sslv311a . .216 mc . . .9.827111E+07 . .9.8273158545895E+07 2.08E-03% . 1.0E-04%
       => valeurs de non régression identiques partout, elles sont modifiées
   
       ssnd105b . .79 .cal7 . .-0.346509 . . . -0.346423 . . . . . 8.7E-05 . . 1.0E-06
       ssnd105b . .82 .aster4 .-0.346509 . . . -0.346423 . . . . . 8.7E-05 . . 1.0E-06
       ssnd105b . .99 .mc . . .-0.346509 . . . -0.346423 . . . . . 8.7E-05 . . 1.0E-06
       => valeurs de non régression identiques partout, elles sont modifiées
   
       ssnd105c . .79 .cal7 . .-0.3466943 . . .-0.3466082 . . . . .8.6E-05 . . 1.0E-06
       ssnd105c . .82 .aster4 .-0.3466943 . . .-0.3466082 . . . . .8.6E-05 . . 1.0E-06
       ssnd105c . .99 .mc . . .-0.3466943 . . .-0.3466082 . . . . .8.6E-05 . . 1.0E-06
       => valeurs de non régression identiques partout, elles sont modifiées
   
       ssnv101a . .57 .cal7 . .0.19015335600 . 0.19015315569614 . .1.05E-04% . 1.0E-04%
       ssnv101a . .60 .aster4 .0.19015335600 . 0.19015315569614 . .1.05E-04% . 1.0E-04%
       ssnv101a . .77 .mc . . .0.19015335600 . 0.19015315569614 . .1.05E-04% . 1.0E-04%
       => valeurs de non régression identiques partout, elles sont modifiées
   
   
   Rocks
   =====
   
   Si erreur < 1.e-5, on ne se pose pas de question, on augmente TOLE_MACHINE à 1.e-5.
   
   Il y a déjà un certain nombre de tests marqués avec "#TODO" pour signaler qu'il y
   a quelque chose à faire : mettre de "vraies" VALE_CALC (notamment quand c'est dans
   une boucle), ou des valeurs de TOLE_MACHINE trop grandes qui sont suspectes.
   
   
   ..  code-block:: none
   
       ascou18a . .rocks . 995 . . 0.36463202800000 . .0.36463111715126 . .2.5E-04% . .1.0E-04%
       ascou18a . .rocks . 987 . . 27.945983336 . . . .27.946718229667 . . 2.63E-03% . 1.0E-04%
       ascou18a . .rocks . 1003 . .34.694584486 . . . .34.69553755944 . . .2.75E-03% . 1.0E-04%
       => TOLE_MACHINE à 5.e-6 et 5e-5
   
       comp002i . .rocks . 421 9.44465954E-05 .8.856526823381E-05 .5.88E-06 . .1.0E-06
       comp002j . .rocks . 346 6.5478845E-04 . 6.0547392167862E-04 4.93E-05 . .1.0E-06
       => valeurs de référence nulle : VALE_CALC=0.0, TOLE_MACHINE=1.e-4
   
       fdlv111b . .rocks . 44 .0.43458 . . . . 0.43416 . . . . . . 4.2E-04 . . 1.0E-04
       => valeur de référence nulle avec PRECISION=1. : TOLE_MACHINE=1.e-3
   
       gcpc002a . .rocks . 34 .6.5862203681296E-04 6.5853711912954E-04 0.0129% 0.01000%
       => référence NON_DEFINI, variations entre les machines, marqué #TODO,
        . TOLE_MACHINE augmenté.
   
       gcpc002b . .rocks . 264 -1.1343463070495 . .-1.1331398275081 . .0.106% .0.1000%
       => référence SOURCE_EXTERNE à 6%, TOLE_MACHINE=5.e-3
   
       gcpc002c . .rocks . 492 0.0E+00 1.2037529690373E-04 1.2E-04 1.0E-04
       => valeurs de référence nulle : VALE_CALC=0.0, TOLE_MACHINE=2.e-4
   
       hpla310a . .rocks . 168 1.231266956 1.2312687753324 1.48E-04% . 1.0E-04%
       hpla310a . .rocks . 192 1.235235065 1.2352369364115 1.52E-04% . 1.0E-04%
       hpla310a . .rocks . 184 1.235621972 1.2356238194561 1.5E-04% . .1.0E-04%
       hpla310a . .rocks . 176 1.235784755 1.2357865812045 1.48E-04% . 1.0E-04%
   
       hpla310a . .rocks . 136 12503.1256 . . .12501.473408904 0.0132% . . 1.0E-04%
       hpla310a . .rocks . 144 12548.7866 . . .12547.128378637 0.0132% . . 1.0E-04%
       hpla310a . .rocks . 152 12555.2906 . . .12553.630953496 0.0132% . . 1.0E-04%
       hpla310a . .rocks . 160 12578.5482 . . .12576.886526253 0.0132% . . 1.0E-04%
       hpla310a . .rocks . 104 294.523150071 . 294.49635444093 9.1E-03% . .1.0E-04%
       hpla310a . .rocks . 112 295.599311716 . 295.57241818927 9.1E-03% . .1.0E-04%
       hpla310a . .rocks . 120 295.745336085 . 295.7184292931 .9.1E-03% . .1.0E-04%
       hpla310a . .rocks . 128 296.039005039 . 296.01209421591 9.09E-03% . 1.0E-04%
       => 1er bloc : TOLE_MACHINE mis à 1.e-5 y compris où il était à 1.e-3 (ex PRECISION)
       => valeurs très proches entre Aster4 et Calibre7, on augmente TOLE_MACHINE + #TODO
   
       hsnv101c . .rocks . 119 0.062069009000000 . 0.062069155623537 . 2.36E-04% . 1.0E-04%
       => TOLE_MACHINE mis à 1.e-5
   
       miss02a rocks . 485 1.12618510E-04 .1.12618805E-04 .2.6E-04% . .1.0E-04%
       miss02a rocks . 479 1.1321087E-04 . 1.1321125E-04 . 3.4E-04% . .1.0E-04%
       miss02a rocks . 507 2.4536542E-05 . 2.4536454E-05 . 3.6E-04% . .1.0E-04%
       miss02a rocks . 501 2.5059156E-05 . 2.5059013E-05 . 5.7E-04% . .1.0E-04%
       => TOLE_MACHINE mis à 1.e-5
   
       miss07a rocks . 2227 . .0.0818715 . 0.0818714 . 1.8E-04% . .1.0E-04%
       => TOLE_MACHINE mis à 1.e-5
   
       mtlp103a . .rocks . 58 .608.297986398 . 608.29798514658 1.25E-06 . .1.0E-06
       mtlp103a . .rocks . 34 .871.347693015 . 871.34769006283 2.95E-06 . .1.0E-06
       mtlp103a . .rocks . 52 .890.127528194 . 890.12752541387 2.78E-06 . .1.0E-06
       mtlp103a . .rocks . 70 .895.338426344 . 895.33842511956 1.22E-06 . .1.0E-06
       => on passe tous les tests de ABSOLU à RELATIF.
   
       sdll02b rocks . 70 .-0.37014688200000 . -0.37014738734920 . 1.37E-04% . 1.0E-04%
       sdll02b rocks . 34 .-0.70710893100000 . -0.70718169344676 . 0.0103% 1.0E-04%
       sdll02b rocks . 156 0.084511993000000 . 0.084513023625584 . 1.22E-03% . 1.0E-04%
       sdll02b rocks . 162 0.091503742000000 . 0.091502534072427 . 1.32E-03% . 1.0E-04%
       sdll02b rocks . 76 .0.52346838900000 . .0.52346744395374 . .1.81E-04% . 1.0E-04%
       sdll02b rocks . 46 .0.70710214100000 . .0.70694513682523 . .0.0222% 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdll110b . .rocks . 601 -2.490315E-03 . -2.491544E-03 . 4.9E-02% . .1.0E-04%
       sdll110b . .rocks . 593 6.7148E-04 . . .6.7093E-04 . . .8.2E-02% . .1.0E-04%
       sdll110b . .rocks . 556 8.04241E-03 . . 8.04337E-03 . . 1.2E-02% . .1.0E-04%
       sdll110b . .rocks . 564 8.05088E-03 . . 8.05100E-03 . . 1.5E-03% . .1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdll110c . .rocks . 599 -5.13333E-04 . .-5.14568E-04 . .0.2% . .1.0E-04%
       sdll110c . .rocks . 563 0.01007 . . . . 0.01009 . . . . 0.2% . .1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdll110d . .rocks . 599 -5.91414783E-04 -5.91415540E-04 1.3E-04% . .1.0E-04%
       => TOLE_MACHINE mis à 1.e-5
   
       sdll110e . .rocks . 599 -5.13333E-04 . .-5.14568E-04 . .0.2% . .1.0E-04%
       sdll110e . .rocks . 563 0.01007 . . . . 0.01009 . . . . 0.2% . .1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdll119a . .rocks . 111 0.2264740 . 0.2264752 . 5.4E-04% . .1.0E-04%
       => TOLE_MACHINE mis à 1.e-5
   
       sdll119b . .rocks . 111 0.2264740 . 0.2264752 . 5.4E-04% . .1.0E-04%
       => TOLE_MACHINE mis à 1.e-5
   
       sdll135a . .rocks . 138 310.137886846 . 310.14121491261 1.07E-03% . 1.0E-04%
       => TOLE_MACHINE mis à 2.e-5 .(1.E-10% ailleurs)
   
       sdll503a . .rocks . 317 1.739270E-04 . .1.739623E-04 . .2.0E-02% . .1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdls103a . .rocks . 692 21.9593697 .21.9594029 .1.5E-04% . .1.0E-04%
       sdls103a . .rocks . 708 29.3402438 .29.3401397 .3.5E-04% . .1.0E-04%
       sdls103a . .rocks . 724 33.74969 . .33.75175 . .6.1E-03% . .1.0E-04%
       sdls103a . .rocks . 644 5.296302 . .5.296255 . .8.9E-04% . .1.0E-04%
       sdls103a . .rocks . 652 6.12090 . . 6.12114 . . 3.9E-03% . .1.0E-04%
       sdls103a . .rocks . 660 6.12114 . . 6.12213 . . 1.6E-02% . .1.0E-04%
       sdls103a . .rocks . 676 8.6928563 . 8.6928082 . 5.5E-04% . .1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdls106b . .rocks . 34 .17.130729485 . .17.130141283562 3.43E-03% . 1.0E-04%
       sdls106b . .rocks . 40 .35.949976144 . .35.950783475038 2.25E-03% . 1.0E-04%
       sdls106b . .rocks . 46 .50.149926023 . .50.100354726712 0.0988% . . 1.0E-04%
       sdls106b . .rocks . 52 .66.556106995 . .66.555514592906 8.9E-04% . .1.0E-04%
       sdls106b . .rocks . 58 .68.900395429 . .68.897901336665 3.62E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdls106e . .rocks . 50 .17.130729485 . .17.130141283526 . . 3.43E-03% . 1.0E-04%
       sdls106e . .rocks . 56 .35.949976144 . .35.950783475389 . . 2.25E-03% . 1.0E-04%
       sdls106e . .rocks . 62 .50.149926023 . .50.100354733673 . . 0.0988% . . 1.0E-04%
       sdls106e . .rocks . 42 .6.01037366E-03 .1.8968887186786E-03 4.11E-03 . .1.0E-03
       sdls106e . .rocks . 68 .66.556106995 . .66.555514592993 . . 8.9E-04% . .1.0E-04%
       sdls106e . .rocks . 74 .68.900395429 . .68.897901334005 . . 3.62E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdls122a . .rocks . 111 32.459064597 . .32.456912761249 6.63E-03% . 1.0E-03%
       sdls122a . .rocks . 117 40.819099773 . .40.821479024303 5.83E-03% . 1.0E-03%
       sdls122a . .rocks . 93 .5.813938725 . . 5.8135805386451 6.16E-03% . 1.0E-03%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdnd100c . .rocks . 49 .3.54955942E-05 .3.4002612240588E-05 4.21% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sdnd121a . .rocks . 249 0.063052 . .0.063054 . .2.4E-06 1.0E-06
       sdnd121a . .rocks . 241 0.091652 . .0.091653 . .1.7E-06 1.0E-06
       => TOLE_MACHINE mis à 1.E-5 (ABSOLU, 1.E-3%)
   
       sdnl112c . .rocks . 409 2.90488187E-03 .2.9048927790564E-03 3.76E-04% . 1.0E-04%
       sdnl112c . .rocks . 417 2.90488187E-03 .2.9048927790564E-03 3.76E-04% . 1.0E-04%
       sdnl112c . .rocks . 433 2.90488187E-03 .2.9048927790564E-03 3.76E-04% . 1.0E-04%
       sdnl112c . .rocks . 441 2.90488187E-03 .2.9048927790564E-03 3.76E-04% . 1.0E-04%
       => TOLE_MACHINE mis à 1.e-5
   
       sdnl301a . .rocks . 1799 . .22.893076703 . .22.24422986264 .2.83% . 1.0%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       ssll102i . .rocks . 162 -1.35852902E-05 9.7646016083583E-06 2.33E-05 . .1.0E-06
       => TOLE_MACHINE mis à 2.E-5
   
       ssls124b . .rocks . 134 0.015257924000000 . 0.015306737450950 . 0.320% .1.0E-04%
       ssls124b . .rocks . 128 0.015441970000000 . 0.015486110529824 . 0.286% .1.0E-04%
       ssls124b . .rocks . 148 0.25721195700000 . .0.23317995514143 . .9.34% . 1.0E-04%
       ssls124b . .rocks . 142 0.26118966800000 . .0.23577197688076 . .9.73% . 1.0E-04%
       ssls124b . .rocks . 120 1.91066292E-03 . . .1.910713436485E-03 .2.64E-03% . 1.0E-04%
       ssls124b . .rocks . 114 1.93316307E-03 . . .1.9332383253498E-03 3.89E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       ssls124f . .rocks . 128 0.015750871364735 . 0.015699339829216 . 0.327% .0.1000%
       ssls124f . .rocks . 134 0.015751906894420 . 0.015700399885282 . 0.327% .0.1000%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sslv110f . .rocks . 175 1.998006317 1.9980371866719 1.55E-03% . 1.0E-04%
       => TOLE_MACHINE mis à 2.E-5
   
       sslv134a . .rocks . 111 11.530427062 . .11.519910624849 0.0912% . . 1.0E-04%
       sslv134a . .rocks . 159 11.575479416 . .11.571801759492 0.0318% . . 1.0E-04%
       sslv134a . .rocks . 79 .11.576714249 . .11.576830127045 1.0E-03% . .1.0E-04%
       sslv134a . .rocks . 127 11.613984079 . .11.614645670531 5.7E-03% . .1.0E-04%
       sslv134a . .rocks . 167 11.635705914 . .11.644527134451 0.0758% . . 1.0E-04%
       sslv134a . .rocks . 196 11.656232512 . .11.646912699005 0.0800% . . 1.0E-04%
       sslv134a . .rocks . 143 11.673596469 . .11.673658076692 5.28E-04% . 1.0E-04%
       sslv134a . .rocks . 119 11.69961228 . . 11.69981130879 .1.7E-03% . .1.0E-04%
       sslv134a . .rocks . 135 11.713919805 . .11.713823663282 8.21E-04% . 1.0E-04%
       sslv134a . .rocks . 151 11.714999754 . .11.715622335166 5.31E-03% . 1.0E-04%
       sslv134a . .rocks . 95 .11.76236014 . . 11.761818164532 4.61E-03% . 1.0E-04%
       sslv134a . .rocks . 71 .11.796774937 . .11.790062426646 0.0569% . . 1.0E-04%
       sslv134a . .rocks . 87 .11.80475242 . . 11.809378135268 0.0392% . . 1.0E-04%
       sslv134a . .rocks . 103 11.807222019 . .11.810546868667 0.0282% . . 1.0E-04%
       sslv134b . .rocks . 138 11.727943329 . .11.729705808428 0.0150% . . 1.0E-04%
       sslv134b . .rocks . 122 11.737106824 . .11.753926840441 0.143% . . .1.0E-04%
       sslv134b . .rocks . 130 11.759838337 . .11.767403260493 0.0643% . . 1.0E-04%
       sslv134d . .rocks . 61 .11.72847316 . . 11.729530932951 9.02E-03% . 1.0E-04%
       sslv134d . .rocks . 45 .11.733108741 . .11.753130258071 0.171% . . .1.0E-04%
       sslv134d . .rocks . 53 .11.758727064 . .11.76675722382 .0.0683% . . 1.0E-04%
       sslv134d . .rocks . 220 19.050208085 . .19.074562753929 0.128% . . .1.0E-04%
       sslv134d . .rocks . 236 19.074378231 . .19.075726246828 7.07E-03% . 1.0E-04%
       sslv134d . .rocks . 228 19.084252983 . .19.095607882307 0.0595% . . 1.0E-04%
       sslv134d . .rocks . 125 7.317099343 . . 7.3214324958581 0.0592% . . 1.0E-04%
       sslv134d . .rocks . 133 7.325525919 . . 7.3288506584875 0.0454% . . 1.0E-04%
       sslv134d . .rocks . 141 7.345905071 . . 7.3461953138772 3.95E-03% . 1.0E-04%
       sslv134e . .rocks . 90 .13.717285809 . .13.717264051307 1.59E-04% . 1.0E-04%
       sslv134e . .rocks . 98 .13.717285809 . .13.717264051307 1.59E-04% . 1.0E-04%
       sslv134e . .rocks . 138 22.396158391 . .22.396125141054 1.48E-04% . 1.0E-04%
       sslv134e . .rocks . 146 22.838005523 . .22.837968454561 1.62E-04% . 1.0E-04%
       sslv134e . .rocks . 74 .36.555291332 . .36.555232505869 1.61E-04% . 1.0E-04%
       sslv134e . .rocks . 82 .36.555291332 . .36.555232505869 1.61E-04% . 1.0E-04%
       sslv134e . .rocks . 162 477.091858143 . 477.09110745045 1.57E-04% . 1.0E-04%
       sslv134e . .rocks . 122 5.480260359 . . 5.4802462750671 2.57E-04% . 1.0E-04%
       sslv134e . .rocks . 130 5.480260359 . . 5.4802462750671 2.57E-04% . 1.0E-04%
       sslv134e . .rocks . 106 95.064893923 . .95.064746839285 1.55E-04% . 1.0E-04%
       sslv134e . .rocks . 114 95.064893923 . .95.064746839285 1.55E-04% . 1.0E-04%
       sslv134e . .rocks . 154 95.064893923 . .95.064746839284 1.55E-04% . 1.0E-04%
       sslv134f . .rocks .1266 . .11.504738152 11.526911691543 0.193% . . .1.0E-04%
       sslv134f . .rocks .1274 . .11.504738152 11.526911691543 0.193% . . .1.0E-04%
       sslv134f . .rocks .1314 . .152.66213272 152.56410033063 0.0642% . . 1.0E-04%
       sslv134f . .rocks .1282 . .29.918097334 29.975764369561 0.193% . . .1.0E-04%
       sslv134f . .rocks .1306 . .30.197348915 30.195498620061 6.13E-03% . 1.0E-04%
       sslv134f . .rocks .1290 . .4.344719728 .4.3449906986888 6.24E-03% . 1.0E-04%
       sslv134f . .rocks .1298 . .4.344719728 .4.3449906986888 6.24E-03% . 1.0E-04%
       sslv134h . .rocks . 256 1.53451274E+06 .1.5345215194954E+06 5.72E-04% . 1.0E-04%
       sslv134h . .rocks . 248 1.86526986E+06 .1.8654011729846E+06 7.04E-03% . 1.0E-04%
       => voir avec issue19703
   
       sslv139c . .rocks . 40 .8.69429895E+05 .8.6942840330185E+05 1.72E-04% . 1.0E-04%
       => TOLE_MACHINE mis à 1.E-5
   
       sslv155c . .rocks . 125 3.61171891E+05 .3.6116853811275E+05 9.28E-04% . 1.0E-04%
       => TOLE_MACHINE mis à 1.E-5
   
       sslv312a . .rocks . 34 .1.09189013E-05 .1.0918888652804E-05 1.16E-04% . 1.0E-04%
       sslv312a . .rocks . 42 .1.09247203E-05 .1.0924567094377E-05 1.4E-03% . .1.0E-04%
       sslv312a . .rocks . 82 .6.67906939E-06 .6.6755893007141E-06 0.0521% . . 1.0E-04%
       sslv312a . .rocks . 122 6.68744858E-06 .6.6838000838447E-06 0.0546% . . 1.0E-04%
       sslv312a . .rocks . 74 .8.03160818E-06 .8.0361931476301E-06 0.0571% . . 1.0E-04%
       sslv312a . .rocks . 114 8.04712266E-06 .8.0518429838724E-06 0.0587% . . 1.0E-04%
       sslv312a . .rocks . 66 .8.54085331E-06 .8.5408797150488E-06 3.09E-04% . 1.0E-04%
       sslv312a . .rocks . 106 8.56136579E-06 .8.5606462275651E-06 8.4E-03% . .1.0E-04%
       sslv312a . .rocks . 98 .8.59633494E-06 .8.5921667626053E-06 0.0485% . . 1.0E-04%
       sslv312a . .rocks . 58 .8.59913369E-06 .8.5938143686161E-06 0.0619% . . 1.0E-04%
       sslv312a . .rocks . 50 .8.86889305E-06 .8.8857441504568E-06 0.190% . . .1.0E-04%
       sslv312a . .rocks . 90 .8.91327482E-06 .8.9271565962881E-06 0.156% . . .1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sslv315b . .rocks . 90 .9.035064786 9.035449123189 .4.25E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       sslv315c . .rocks . 93 .9.1512171727545 9.1390406631788 0.133% .0.1000%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       ssnd109a . .rocks . 192 -163.886054826 .-163.886453429 .2.4E-04% . .1.0E-04%
       ssnd109a . .rocks . 224 163.1817746 . . 163.1825817 4.9E-04% . .1.0E-04%
       => TOLE_MACHINE mis à 1.E-5
   
       ssnl133b . .rocks . 430 0.872346 . .0.872362 . .1.8E-03% . .1.0E-03%
       => TOLE_MACHINE mis à 2.E-5 (déjà bcp de travail fait sur ce test)
   
       ssnp116a . .rocks . 110 1.73160783E-05 .1.7316028920352E-05 2.85E-04% . 1.0E-04%
       ssnp116a . .rocks . 70 .1.73160842E-05 .1.7316034780786E-05 2.85E-04% . 1.0E-04%
       ssnp116a . .rocks . 54 .7.14120724E-07 .7.1406564830562E-07 7.71E-03% . 1.0E-04%
       ssnp116a . .rocks . 94 .7.14120724E-07 .7.1406564857226E-07 7.71E-03% . 1.0E-04%
       ssnp116a . .rocks . 118 8.53606702E-04 .8.5360223990234E-04 5.23E-04% . 1.0E-04%
       => TOLE_MACHINE mis à 1.E-5, 1.E-4 pour les valeurs en 1.E-7
   
       ssnp130a . .rocks . 102 0.029500698000000 . 0.029531693124192 . 0.105% .1.0E-04%
       ssnp130a . .rocks . 193 0.029500698000000 . 0.029531693124192 . 0.105% .1.0E-04%
       ssnp130a . .rocks . 133 0.58428910100000 . .0.59147874363442 . .1.23% . 1.0E-04%
       ssnp130a . .rocks . 151 0.58428910100000 . .0.59147874363442 . .1.23% . 1.0E-04%
       ssnp130a . .rocks . 112 0.68706655100000 . .0.68741702185646 . .0.0510% 1.0E-04%
       ssnp130a . .rocks . 139 0.68706655100000 . .0.68741702185646 . .0.0510% 1.0E-04%
       ssnp130a . .rocks . 145 0.68706655100000 . .0.68741702185646 . .0.0510% 1.0E-04%
       ssnp130a . .rocks . 86 .1.031074366 . . . . 1.0302626371134 . . 0.0787% 1.0E-04%
       ssnp130a . .rocks . 177 1.031074366 . . . . 1.0302626371134 . . 0.0787% 1.0E-04%
       ssnp130a . .rocks . 94 .1.691812909 . . . . 1.6931458629523 . . 0.0788% 1.0E-04%
       ssnp130a . .rocks . 185 1.691812909 . . . . 1.6931458629523 . . 0.0788% 1.0E-04%
       ssnp130a . .rocks . 78 .7.362654381 . . . . 7.3549269166462 . . 0.105% .1.0E-04%
       ssnp130a . .rocks . 169 7.362654381 . . . . 7.3549269166462 . . 0.105% .1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       ssnp130b . .rocks . 82 .0.086174006000000 . 0.086177040118023 . 3.52E-03% . 1.0E-04%
       ssnp130b . .rocks . 194 0.086174006000000 . 0.086177040118023 . 3.52E-03% . 1.0E-04%
       ssnp130b . .rocks . 66 .0.21621733500000 . .0.21621352859487 . .1.76E-03% . 1.0E-04%
       ssnp130b . .rocks . 178 0.21621733500000 . .0.21621352859487 . .1.76E-03% . 1.0E-04%
       ssnp130b . .rocks . 116 0.55114076600000 . .0.55803771315967 . .1.25% . . . 1.0E-04%
       ssnp130b . .rocks . 134 0.55114076600000 . .0.55803771315967 . .1.25% . . . 1.0E-04%
       ssnp130b . .rocks . 140 0.55114076600000 . .0.55803771315967 . .1.25% . . . 1.0E-04%
       ssnp130b . .rocks . 146 0.55114076600000 . .0.55803771315967 . .1.25% . . . 1.0E-04%
       ssnp130b . .rocks . 92 .0.75125573900000 . .0.74937777540383 . .0.250% . . .1.0E-04%
       ssnp130b . .rocks . 122 0.75125573900000 . .0.74937777540383 . .0.250% . . .1.0E-04%
       ssnp130b . .rocks . 128 0.75125573900000 . .0.74937777540383 . .0.250% . . .1.0E-04%
       ssnp130b . .rocks . 58 .2.520521608 . . . . 2.520432871166 . . .3.52E-03% . 1.0E-04%
       ssnp130b . .rocks . 170 2.520521608 . . . . 2.520432871166 . . .3.52E-03% . 1.0E-04%
       ssnp130b . .rocks . 74 .4.487857506 . . . . 4.4879365073098 . . 1.76E-03% . 1.0E-04%
       ssnp130b . .rocks . 186 4.487857506 . . . . 4.4879365073098 . . 1.76E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       ssnp136a . .rocks . 242 227.177158568 . 227.17707770298 8.09E-05 . .1.0E-06
       ssnp136a . .rocks . 202 434.426253519 . 434.43670440562 0.0105 .0.01000
       => en RELATIF
   
       ssnv101a . .calib7 .57 .0.19015335600000 . .0.19015315569614 . .1.05E-04% . 1.0E-04%
       ssnv101a . .rocks . 58 .0.19015335600000 . .0.19015315569614 . .1.05E-04% . 1.0E-04%
       => TOLE_MACHINE mis à 1.E-5
   
       ssnv104i . .rocks . 96 .-0.11889432700000 . -0.11915309456979 . 0.218% . . .1.0E-04%
       ssnv104i . .rocks . 102 -0.11890409800000 . -0.11855295498386 . 0.295% . . .1.0E-04%
       ssnv104i . .rocks . 108 -0.16460373600000 . -0.16546451965532 . 0.523% . . .1.0E-04%
       ssnv104i . .rocks . 114 -0.16476808700000 . -0.16267218631456 . 1.27% . . . 1.0E-04%
       ssnv104i . .rocks . 120 -0.18618316100000 . -0.18696435440282 . 0.420% . . .1.0E-04%
       ssnv104i . .rocks . 126 -0.18684172500000 . -0.18602220119670 . 0.439% . . .1.0E-04%
       ssnv104i . .rocks . 138 -0.63011980400000 . -0.63075683436240 . 0.101% . . .1.0E-04%
       ssnv104i . .rocks . 132 -0.63098792500000 . -0.63030641633653 . 0.108% . . .1.0E-04%
       ssnv104i . .rocks . 34 .-2989.26838 . . . . -2991.1400418922 . .0.0626% . . 1.0E-04%
       ssnv104i . .rocks . 42 .-2989.26838 . . . . -2991.1400418922 . .0.0626% . . 1.0E-04%
       ssnv104i . .rocks . 48 .-2989.6499 . . . . .-2990.6895202601 . .0.0348% . . 1.0E-04%
       ssnv104i . .rocks . 60 .-2989.76944 . . . . -2990.2894796934 . .0.0174% . . 1.0E-04%
       ssnv104i . .rocks . 54 .-2989.77788 . . . . -2990.466358182 . . 0.0230% . . 1.0E-04%
       ssnv104i . .rocks . 66 .-2989.85414 . . . . -2990.1265310806 . .9.11E-03% . 1.0E-04%
       ssnv104i . .rocks . 72 .-2990.03794 . . . . -2989.9091718491 . .4.31E-03% . 1.0E-04%
       ssnv104i . .rocks . 78 .-2990.21076 . . . . -2989.6694822127 . .0.0181% . . 1.0E-04%
       ssnv104i . .rocks . 84 .-2990.45748 . . . . -2989.3158229197 . .0.0382% . . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       ssnv104j . .rocks . 102 -0.11434101300000 . -0.11435819303556 . 0.0150% . . 1.0E-04%
       ssnv104j . .rocks . 96 .-0.11436609700000 . -0.11435845447567 . 6.68E-03% . 1.0E-04%
       ssnv104j . .rocks . 108 -0.16275789400000 . -0.16279513892436 . 0.0229% . . 1.0E-04%
       ssnv104j . .rocks . 114 -0.16279571300000 . -0.16276090581873 . 0.0214% . . 1.0E-04%
       ssnv104j . .rocks . 126 -0.18136637000000 . -0.18147556641693 . 0.0602% . . 1.0E-04%
       ssnv104j . .rocks . 120 -0.18153580200000 . -0.18140102166232 . 0.0742% . . 1.0E-04%
       ssnv104j . .rocks . 138 -0.62957192000000 . -0.62961545787105 . 6.92E-03% . 1.0E-04%
       ssnv104j . .rocks . 132 -0.62960369500000 . -0.62957589753303 . 4.42E-03% . 1.0E-04%
       ssnv104j . .rocks . 84 .-3177.5084 . . . . .-3177.5982905534 . .2.83E-03% . 1.0E-04%
       ssnv104j . .rocks . 54 .-3177.52662 . . . . -3177.5228092537 . .1.2E-04% . .1.0E-04%
       ssnv104j . .rocks . 78 .-3177.53058 . . . . -3177.5613159814 . .9.67E-04% . 1.0E-04%
       ssnv104j . .rocks . 48 .-3177.53885 . . . . -3177.512293403 . . 8.36E-04% . 1.0E-04%
       ssnv104j . .rocks . 34 .-3177.56739 . . . . -3177.4889622597 . .2.47E-03% . 1.0E-04%
       ssnv104j . .rocks . 42 .-3177.56739 . . . . -3177.4889622597 . .2.47E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       ssnv166c . .rocks . 183 1.03410076E+07 .1.0341019795881E+07 1.18E-04% . 1.0E-04%
       ssnv166c . .rocks . 199 1.03410076E+07 .1.0341019795881E+07 1.18E-04% . 1.0E-04%
       ssnv166c . .rocks . 207 1.03520066E+07 .1.0351967458928E+07 3.78E-04% . 1.0E-04%
       ssnv166c . .rocks . 175 5.133734E+06 . .5.1337647609599E+06 5.99E-04% . 1.0E-04%
       ssnv166c . .rocks . 191 5.133734E+06 . .5.1337647609599E+06 5.99E-04% . 1.0E-04%
       ssnv166c . .rocks . 215 9.46470815E+06 .9.4646722390615E+06 3.79E-04% . 1.0E-04%
       => TOLE_MACHINE mis à 1.E-5
   
       ssnv205a . .rocks . 641 -10146.4375 . . -10146.454990224 . . . .1.72E-04% . 1.0E-04%
       ssnv205a . .rocks . 665 -2.26671163E-05 -2.266704917325E-05 . . 2.96E-04% . 1.0E-04%
       ssnv205a . .rocks . 673 -4.4870566E-05 .-4.4870475756926E-05 . .2.01E-04% . 1.0E-04%
       ssnv205a . .rocks . 633 -4210.7038 . . .-4210.7212655533 . . . .4.15E-04% . 1.0E-04%
       ssnv205a . .rocks . 681 -5.35105277E-05 -5.3510431581263E-05 . .1.8E-04% . .1.0E-04%
       ssnv205a . .rocks . 729 -51.861989627 . -51.862404350625 . . . .8.0E-04% . .1.0E-04%
       ssnv205a . .rocks . 761 -6.01857891E-09 -6.0185726328575E-09 . .1.04E-04% . 1.0E-04%
       ssnv205a . .rocks . 769 -6.01857891E-09 -6.0185726328575E-09 . .1.04E-04% . 1.0E-04%
       ssnv205a . .rocks . 689 -7.57107577E-05 -7.5710641653845E-05 . .1.53E-04% . 1.0E-04%
       ssnv205a . .rocks . 625 10146.0887 . . .10146.071189441 . . . . 1.73E-04% . 1.0E-04%
       ssnv205a . .rocks . 617 4211.43348 . . .4211.4053985338 . . . . 6.67E-04% . 1.0E-04%
       ssnv205a . .rocks . 713 55.925887376 . .55.9256427274 . . . . . 4.37E-04% . 1.0E-04%
       => TOLE_MACHINE mis à 1.E-5
   
       ssnv504b . .rocks . 156 20.709220332247 20.705014216712 0.0203% 0.01000%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       wtna102e . .rocks . 34 .7944.44824 .7944.6318222661 2.31E-03% . 1.0E-04%
       wtna102e . .rocks . 50 .7944.44824 .7944.6318222661 2.31E-03% . 1.0E-04%
       wtna102e . .rocks . 42 .9556.69688 .9556.8388084247 1.49E-03% . 1.0E-04%
       wtna102e . .rocks . 58 .9556.69688 .9556.8388084247 1.49E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       wtna102f . .rocks . 34 .7947.80554 .7948.0481128199 3.05E-03% . 1.0E-04%
       wtna102f . .rocks . 42 .9559.73485 .9559.9223537381 1.96E-03% . 1.0E-04%
       wtna102f . .rocks . 57 .9559.73485 .9559.9223537381 1.96E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       wtna104a . .rocks . 34 .7944.44824 .7944.6318222661 2.31E-03% . 1.0E-04%
       wtna104a . .rocks . 42 .9556.69688 .9556.8388084247 1.49E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       wtna104b . .rocks . 34 .7947.80554 .7948.0481128199 3.05E-03% . 1.0E-04%
       wtna104b . .rocks . 42 .9559.73485 .9559.9223537381 1.96E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       wtnp104a . .rocks . 34 .11281.447 . 11281.640282229 1.71E-03% . 1.0E-04%
       wtnp104a . .rocks . 42 .12269.2283 .12269.345484064 9.55E-04% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       wtnp105a . .rocks . 34 .11281.447 . 11281.640282229 1.71E-03% . 1.0E-04%
       wtnp105a . .rocks . 42 .12269.2283 .12269.345484064 9.55E-04% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       wtnp120d . .rocks . 925 3.42484668E-11 .3.4242858611477E-11 0.0164% 1.0E-04%
       => valeurs très petites, TOLE_MACHINE mis à 1.E-3
   
       wtnp120e . .rocks . 308 4.95840169E-11 .4.9587320886561E-11 6.66E-03% . 1.0E-04%
       => valeurs très petites, TOLE_MACHINE mis à 1.E-3
   
       wtnp120f . .rocks . 308 4.95967441E-11 .4.9589017144629E-11 0.0156% 1.0E-04%
       => valeurs très petites, TOLE_MACHINE mis à 1.E-3
   
       wtnp120g . .rocks . 308 4.95965446E-11 .4.9589016101574E-11 0.0152% 1.0E-04%
       => valeurs très petites, TOLE_MACHINE mis à 1.E-3
   
       wtnp123b . .rocks . 195 1.63303748E-13 .1.6330188610762E-13 1.14E-03% . 1.0E-04%
       => valeurs très petites, TOLE_MACHINE mis à 1.E-3
   
       wtnp125b . .rocks . 74 .2.03353327E-04 .2.0335402257951E-04 3.42E-04% . 1.0E-04%
       wtnp125b . .rocks . 42 .3.83466238E+07 .3.8346717097761E+07 2.43E-04% . 1.0E-04%
       wtnp125b . .rocks . 58 .4.08799064E+07 .4.0879996387656E+07 2.2E-04% . .1.0E-04%
       => TOLE_MACHINE mis à 1.E-5
   
       wtnv131a . .rocks . 677344 .11278.7592 .11278.952940637 1.72E-03% . 1.0E-04%
       wtnv131a . .rocks . 677352 .12267.6339 .12267.751161701 9.56E-04% . 1.0E-04%
       wtnv131a . .rocks . 677360 .6615.79492 .6616.1795547857 5.81E-03% . 1.0E-04%
       wtnv131a . .rocks . 677368 .8741.65162 .8741.9165379298 3.03E-03% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       zzzz180a . .rocks . 311 24.490963709 . .24.490876196608 3.57E-04% . 1.0E-04%
       zzzz180a . .rocks . 335 24.501368431 . .24.4932067239 . 0.0333% . . 1.0E-04%
       zzzz180a . .rocks . 327 24.541437554 . .24.541358266469 3.23E-04% . 1.0E-04%
       zzzz180a . .rocks . 319 24.551284314 . .24.543127594083 0.0332% . . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       zzzz208a . .rocks . 223 SOURCE_EXTERNE .-2.1104262094839E-07 . .-2.0083183894528E-07 . .4.84% . 1.0%
       zzzz208a . .rocks . 222 -2.11042621E-07 -2.0083183894528E-07 . .4.84% . 1.0E-04%
       zzzz208a . .rocks . 151 SOURCE_EXTERNE .6.7227942546218E-08 6.9737761187019E-08 3.73% . 1.0%
       zzzz208a . .rocks . 229 SOURCE_EXTERNE .6.7227942546231E-08 6.9737761187021E-08 3.73% . 1.0%
       zzzz208a . .rocks . 150 6.72279425E-08 .6.9737761187019E-08 3.73% . 1.0E-04%
       zzzz208a . .rocks . 228 6.72279425E-08 .6.9737761187021E-08 3.73% . 1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
       zzzz255b . .rocks . 57 .382.179488562 . 378.30457917918 1.01% . 1.0E-04%
       zzzz255b . .rocks . 49 .382.182218724 . 383.07514281154 0.234% .1.0E-04%
       => variations entre les machines, marqué #TODO, TOLE_MACHINE augmenté.
   
   
   Hors sujet
   ----------
   
   L'appel à MPIALR (vérification des alarmes émises sur les autres processeurs que #0)
   a été supprimé lors du déplacement dans fin999.f. On le rétablit.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    les 84 tests
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019494 DU 2012-09-13 15:13:51
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    En NEW11.02.12, le cas-test sdll11a s'arrete en erreur fatale sur Aster4 MPI.
FONCTIONNALITE
   Problème
   --------
   
   Le test sdll11a échoue en parallèle quand on lève une exception.
   Celle-ci est "transformée" en erreur fatale et l'erreur tracée dans issue19685 
   fait qu'on s'arrête en segfault (sinon cela aurait été une erreur fatale).
   
   Correction
   ----------
   
   Il y avait plusieurs problèmes :
   
   - Lors de l'émission de "l'erreur", il faut stocker s'il s'agit d'une 
   exception ou d'une erreur fatale car il faudra le savoir après la 
   communication du statut global.
   
   - Le numéro de l'exception (ici BandeFrequenceVideError=24) est passé par 
   COMMON. Il faut le copier dans une variable locale de u2mesg sinon il est 
   écrasé par un u2mesg imbriqué (celui qui dit "on arrête sur tous les 
   processeurs").
   
   - Quand il s'agit d'une exception, il ne faut pas passer forcer le mode "arrêt 
   par Mpi_Abort".
   
   - Juste avant de lever l'exception, on réinitialise le statut global au cas où 
   l'exception serait interceptée et l'exécution poursuivie.
   
   
   
   Autre
   -----
   
   - optdep.f : on remplace le JEDETC par quelques JEDETR.
   
   - aster.h/astermodule.c : on renomme la macro ASSERT en AS_ASSERT pour éviter 
   les warnings de compilation de conflit avec celle de metis.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    sdll11a en parallxc3xa8le
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR devesa       DEVESA Georges         DATE 10/16/2012 - 11:33:23

--------------------------------------------------------------------------------
RESTITUTION FICHE 019100 DU 2012-07-03 09:19:47
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Masses ajoutées simplifiées
FONCTIONNALITE
   L'objectif est de prendre en compte simplement la masse ajoutée de fluide dans les problèmes de barrages sans 
   avoir à modéliser le fluide comme dans MACRO_MATR_AJOU et de ne conserver que la structure pour des études 
   dynamiques non linéaires.
   L'idée est donc dans une nouvelle option MASS_AJOU de AFFE_CARA_ELEM, de répartir des caractéristiques de 
   masse ponctuelle M_T_N aux noeuds de l'interface fluide-structure du parement amont sans ajouter de DDLs en 
   dehors de la structure. On s'inspire ainsi de la répartition de caractéristiques globales de rigidité ou 
   amortissement par l'option RIGI_PARASOL de AFFE_CARA_ELEM.
   Dans cette nouvelle option MASS_AJOU de AFFE_CARA_ELEM, on répartit donc avec des caractéristiques M_T_N des 
   valeurs élémentaires de masse directionnelle obtenues par intégration de la pression normale à chaque élément 
   en tenant compte de pondérations dues à la densité surfacique de maillage autour du noeud, ce qui existe déjà 
   dans RIGI_PARASOL, mais aussi à la fonction de répartition de pression dépendant des coordonnées - en 
   particulier de l'altitude - afin d'exprimer des relations de Westergaard par exemple. Cette dernière 
   possibilité existe déjà sous une forme voisine dans RIGI_PARASOL derrière le mot clé FONC_GROUP où on peut 
   entrer une fonction dépendant de la distance du point d'affectation à un point fixe. Il suffit de généraliser 
   cette possibilité dans la nouvelle option à l'introduction de fonctions quelconques des coordonnées du point 
   d'affectation.
   Ce développement a donc pour impact :
   - Ajout de la nouvelle option MASS_AJOU de AFFE_CARA_ELEM qui reprend pour l'essentiel certains mots clés 
   internes de RIGI_PARASOL :
     GROUP_MA : liste de groupes de mailles surfaciques de l'interface fluide-structure.
     GROUP_MA_POI1 : liste des mailles ponctuelles s'appuyant sur les noeuds de l'interface précédente et sur 
   lesquelles on affecte des caractéristiques de masse M_T_N.
     FONC_GROUP : liste de fonctions de pression normale homogène à une densité surfacique de masse en fonction 
   des coordonnées pour les groupes de mailles surfaciques de l'interface fluide-structure.
   
   - Ajout de nouvelles routines ACEAMR ACEVMR MASREP
   - Modification des routines OP0019 ACEADI ACEINC VAFCAR
   
   On valide ce développement par l'introduction d'une nouvelle modélisation C du test FDLV112 du barrage de 
   Talvacchia où seule la structure est modélisée. On retrouve ainsi assez bien les premières fréquences propres 
   des modélisations A et B qui prennent en compte le fluide par masse ajoutée ou interface Aster-MISS ISFS.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.42.01 V8.01.112 U2.06.21
VALIDATION
    cas test FDLV112C
NB_JOURS_TRAV  : 4.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019196 DU 2012-07-17 12:09:46
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    xc3xa9volution de DYNA_ISS_VARI pour prise en compte de fondations enfoncxc3xa9es, de modes de rxc3xa9duction et ISFS
FONCTIONNALITE
   La formulation actuelle de DYNA_ISS_VARI permet la prise en compte de fondations avec les cas d'hypothèses
   extrêmes "rigide", associée au mot-clé MODE_INTERF='CORP_RIGI', et "souple", associée au mot-clé 
   MODE_INTERF='TOUT'.
   Or, ces cas extrêmes prennent en compte la représentation du champ sismique incident sous une forme à la fois 
   physique et modale de déplacement unitaire. La formulation de la variabilité spatiale dans DYNA_ISS_VARI 
   prend en compte cette simplification et équivalence.
   Or, dans les cas suivants, on ne peut confondre les représentations modale et physique du champ incident et 
   les réduire à des valeurs unitaires : 
   - les fondations enfoncées,
   - les fondations souples dont les déplacements sont décomposés sur une base réduite de modes d'interface,
   - les fondations de l'interface sol-structure en ISFS (interaction sol-fluide-structure).
   Dans tous ces cas, éventuellement combinés, le champ sismique n'est plus unitaire et varie avec la fréquence. 
   Il doit alors être calculé par inversion des champs de forces sismiques par rapport à l'impédance de sol. Le 
   champ sismique obtenu s'exprime en outre en coordonnées modales sur la base de modes d'interface. Pour 
   exprimer la variabilité spatiale du champ sismique incident, il faut d'abord le passer en coordonnées 
   physiques, puis de là estimer le champ sismique modifié par variabilité spatiale et ensuite passer ce champ 
   modifié en modal, et enfin, à partir de ce dernier champ, réévaluer le nouveau second membre des forces 
   sismiques (par produit par l'impédance). Tout cela dans la boucle fréquentielle de résolution.
   
   Le cas ISFS (interaction sol-fluide-structure) est spécifique pour l'extraction des impédances et forces 
   sismiques comportant des termes non nuls pour les modes dynamiques et nécessite un nouveau mot-clé ISSF='OUI' 
   dans DYNA_ISS_VARI.
   
   Pour traiter l'ensemble des cas spécifiques précédents, on propose également une nouvelle entrée 
   MODE_INTERF='QUELCONQUE' dans DYNA_ISS_VARI.
   
   La validation du développement s'effectue par l'ajout de 2 nouvelles modélisations C et D du cas test SDLS118 
   où on représente le mouvement d'une fondation rigide circulaire sur sol moyen par 30 modes propres 
   quelconques calculés sur un tapis de ressorts obtenus à partir de l'impédance de sol statique. Ces 
   modélisations complètent respectivement les modélisations A (avec résultats table_interspectre) et B (avec 
   résultats transitoires en SRO) où le mouvement de la fondation est représenté par les 6 modes de corps 
   rigide.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.53.31 V2.03.118 R4.05.04
VALIDATION
    cas test SDLS118
NB_JOURS_TRAV  : 4.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019200 DU 2012-07-18 15:45:45
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Evolution de CALC_MISS pour les problxc3xa8mes d'interaction sol-fluide-structure (ISFS)
FONCTIONNALITE
   Dans l'objectif de la résorption de MACRO_MISS_3D par CALC_MISS, il faut notamment traiter les cas 
   d'interaction sol-fluide-structure (ISFS).
   Pour cela, il faut générer un certain nombre de données supplémentaires :
   1) dans CALC_MISS proprement dit, il faut prévoir le mot clé ISSF='OUI' dans PARAMETRE et la donnée de 
   nouvelles interfaces sol-fluide, structure-fluide, sol-libre, sous forme de groupes de mailles avec les mots 
   clés GROUP_MA_FLU_SOL, GROUP_MA_FLU_STR, GROUP_MA_SOL_SOL. On introduit également le mot clé ALLU dans 
   PARAMETRE pour entrer le coefficient d'absorption à l'interface sol-fluide compris entre 0 et 1.
   2) à partir du fichier IMPR_ASTER pour MISS, générer les données spécifiques de MISS en ISFS par un impact 
   sur le source python :
    - dans MISS_FICHIER_INTERF.PY, on prend en compte les nouvelles interfaces sol-fluide, structure-fluide, sol-
   libre dans l'écriture des fichiers de maillage .mvol, de définition des modes d'interface .chp, et enfin de 
   données de lancement MISS .in.
   - dans MISS_CALCUL.PY, si ISSF='OUI' on génère les données Aster de prise en compte des interfaces ISFS dans 
   la commande IMPR_MACR_ELEM au format MISS3D puis on lance la lecture spécifique du fichier IMPR_ASTER créé.
   - dans MISS_RESU_ASTER.PY, si ISSF='OUI' on lit les connectivités des interfaces spécifiques ISFS dans le 
   fichier résultat créé par la commande IMPR_MACR_ELEM au format MISS3D.
    
   Ces modifications permettront d'enchaîner une résolution DYNA_VIBRA dans Code_Aster analogue à celle pour 
   l'ISS. Pour le calcul d'évolutions transitoires ou harmoniques on doit alors dans MISS_POST.PY prendre en 
   compte le paramètre ISSF='OUI' dans la génération des données Aster de LIRE_IMPE_MISS et LIRE_FORC_MISS.
   
   La validation de ce développement est faite en remplaçant dans le test FDLV112B l'appel à MACRO_MISS_3D 
   option MISS_IMPE et ISSF='OUI' par CALC_MISS option FICHIER et ISSF='OUI' en conservant les mêmes tests.
   
   Toutefois, dans l'objectif de la résorption de MACRO_MISS_3D par CALC_MISS, on observe qu'on ne couvre pas 
   encore ainsi les fonctionnalités SOURCE_SOL et SOURCE_FLUIDE du test FDLVD113.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U7.03.12 V8.01.112 U2.06.21
VALIDATION
    cas test FDLV112B
NB_JOURS_TRAV  : 4.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019603 DU 2012-09-27 16:32:21
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Copie de modes par COPMOD et COPMO2
FONCTIONNALITE
   Un certain nombre de routines appellent simultanément les routines de copie de modes avec ou sans conversion 
   de numérotation COPMO2 et COPMOD.
   
   Pour la plupart (HARM75 MDTR74 OP0072 OP0079 PROJMC PROJMR REGENE TRAN75 TRAN77) le distinguo semble être 
   basé selon que la base de projection soit un MODE_GENE (COPMOD) ou autre chose, généralement un MODE_MECA 
   (COPMO2) et cela semble correct.
   
   Par contre, 3 routines (IREDM1 OP0162 OP0163) distinguent les appels à COPMOD ou COPMO2 selon la présence ou 
   l'absence d'une interface dynamique. Or cela ne correspond plus à la réalité présente car on peut avoir 
   besoin en sous-structuration statique d'une interface dynamique avec une base de Ritz quelconque et il faudra 
   quand même faire appel à COPMO2. Depuis la version 10.2.3 on peut liaisonner les interfaces avec des macro-
   éléments bâtis sur des modes quelconques qu'on doit relier à des degrés physiques de liberté d'interface par 
   la donnée d'une interface dynamique. Or faire appel dans ce cas à COPMOD pourra induire des modes d'interface 
   faux pour la détermination des impédances de sol ou de macro-élément. Cf. une étude Laplace-temps classique. 
   Le plus simple est alors de supprimer cette condition de distinction et alors on fait appel à COPMO2 
   systématiquement, ce qui ne coûte pas tellement plus cher.
   
   Enfin la routine ORTH99 appelle COPMOD si la base de projection est un MODE_GENE ou un MODE_MECA. Cela semble 
   correspondre à un état ancien quand MODE_MECA ne désignait que les modes propres et pas les modes statiques 
   ou les bases de Ritz par exemple. On supprime donc MODE_MECA de la condition d'appel à COPMOD.
   
   Les routines impactées sont donc : IREDM1 OP0162 OP0163 ORTH99
RESU_FAUX_VERSION_EXPLOITATION    :  OUI   DEPUIS : 10.2.3
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 10.2.3
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    étude MISS
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019604 DU 2012-09-27 16:47:27
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    problxc3xa8me sur charge de macro-xc3xa9lxc3xa9ment statique et de sol en particulier
FONCTIONNALITE
   Il s'agissait de corriger 2 petites coquilles concernant des charges de macro-élément statique et de sol en 
   particulier. Ces corrections sont nécessaires pour traiter une étude dynamique avec la méthode Laplace-Temps 
   et macro-élément de sol.
   
   La première consistant à passer l'argument NUMEDD à la routine NMEXSO (charge de sol) par son appel à NMINIT 
   a déjà été prise en compte par la résolution de la fiche 18875.
   D'autre part, afin de ne pas être obligé de liaisonner l'interface avec plus de ddls que nécessaire, on 
   insère dans la routine CALIMC qui traite LIAISON_INTERF deux lignes après la ligne 231 :
               NUEQ = ZI(IAPRNO-1+(NBEC+2)*(INOE-1)+2)
               IF (ICMP.GT.NUEQ) GOTO 26
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    xc3xa9tude Laplace-temps
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------
RESTITUTION FICHE 019018 DU 2012-06-19 09:00:46
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    CALC_MISS : message d'erreur peu explicite
FONCTIONNALITE
   On blinde l'utilisation de DEFI_SOL_MISS. On propose pour ça 
   d'imposer au moins une couche de sol en dehors du substratum. Avec 
   un impact sur le source python de DEFI_SOL_MISS. On émet un 
   message par miss0.py dans le cas contraire.
   Dans le source python de DEFI_SOL_MISS, on imposait déjà de mettre 
   un et un seul substratum.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    étude MISS
NB_JOURS_TRAV  : 0.3
--------------------------------------------------------------------------------
RESTITUTION FICHE 018650 DU 2012-04-03 08:29:10
TYPE aide utilisation concernant Code_Aster (VERSION 10.5)
TITRE
    MACRO_MATR_ASSE : plantage avec RIGI_PARASOL / A_T_D_N
FONCTIONNALITE
   L'utilisateur veut affecter simultanément des caractéristiques K_TR_D_N et A_T_D_N sur une seule modélisation de discrets 
   par RIGI_PARASOL. 
   En dehors du contournement évoqué dans la fiche 17975 où on proposait d'affecter des caractéristiques A_TR_D_N équivalentes, 
   on ne peut aller plus loin dans le cadre de cette AOM car sa résolution définitive est liée à la résolution de la fiche 
   18644.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    xc3xa9tude MISS
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019113 DU 2012-07-04 14:37:33
TYPE aide utilisation concernant Miss3D (VERSION )
TITRE
    Calcul ISS / Miss3D
FONCTIONNALITE
   A partir de la lecture du fichier de sortie de MISS *.out dans le répertoire de traitement fourni par 
   l'utilisateur, il s'avère qu'il y avait un problème de syntaxe de lecture dans le fichier de sol des 
   paramètres spectraux pour calcul des fonctions de Green.
   
   Comme MISS plantait, il ne créait pas de fichiers de mouvement à post-traiter 
   d'où le message transmis à Aster qui incriminait plutôt PTASTER.
   
   En rétablissant la bonne syntaxe OFFSET, le calcul tourne maintenant. Il n'y a pas de correction 
   supplémentaire dans Aster proprement dit car il s'agit d'un problème lié à de la syntaxe MISS. Aster fait son 
   boulot en signalant qu'il n'y a pas les fichiers de sortie MISS attendus.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    xc3xa9tude MISS
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR foucault     FOUCAULT Alexandre     DATE 10/15/2012 - 01:41:29

--------------------------------------------------------------------------------
RESTITUTION FICHE 019728 DU 2012-10-15 05:45:24
TYPE express concernant Code_Aster (VERSION 10.5)
TITRE
    LETK IMPLICITE: Utiliser en Prediction (RIGI_MECA) la matrice tangente de VITESSE
FONCTIONNALITE
   Mise en contexte:
   -----------------
   Le developpement de LETK integre en implicite n'a pas integre la possiblite de proposer
   une matrice tangente en "vitesse" aux utilisateurs pour l'étape de prediction de
   l'algorithme de Newton global.
   
   Developpement:
   --------------
   Utilisation des sources developpees precedemment pour  l'integration explicite de LETK via
   lkcomp.f et lkoptg.f.
   Impact fortran: lc0035.f
   
   Validation:
   -----------
   SSNV206C(Calibre 5) 
   
   Nb pas de temps     Nb iterations Newton   Temps CPU
                       Avant    |  Après      Avant | Après
   120                 360      |   295       4.6s  | 4.1s
   300                 916      |   636       11.9s | 9.3s
   600                 1783     |  1194       22.4s | 18.0s
   1200                3560     |  2148       45.0s | 33.9s  
   3000                6995     |  4385       95.0s | 75.0s
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : R7.01.24
VALIDATION
    CAS-TEST
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 018998 DU 2012-06-15 11:47:27
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    PETIT_REAC+KIT_HM
FONCTIONNALITE
   L'emploi du mode de déformation PETIT_REAC n'est pas bloqué alors qu'il n'est jamais pris
   en compte dans les éléments finis de THM.
   
   solution conservative: 
   Retirer PETIT_REAC et GROT_GDEP des fichiers python suivants:
   kit_hhm.py
   kit_hm.py
   kit_thhm.py
   kit_thm.py
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    SANS
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR geniaut      GENIAUT Samuel         DATE 10/15/2012 - 04:58:11

--------------------------------------------------------------------------------
RESTITUTION FICHE 017416 DU 2011-08-23 07:36:38
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    DEF8 - Gabarits de calcul
FONCTIONNALITE
   A) Demande initiale
   -------------------
   
   
   Un livrable prévu dans MNAM 2012 (DEF8) concerne le développement des "gabarits de calcul
   non-linéaires".
   
   
   Un gabarit de calcul est un ensemble de paramètres pré-définis de manière globale et
   humainement lisible des paramètres de calcul, essentiellement en non-linéaire.
   
   L'enjeu consiste à permettre à un utilisateur "moyen" (non spécialiste du non-linéaire)
   désirant faire des études non-linéaires d'utiliser des paramètres optimaux pour un
   catégorie d'études. En effet, actuellement Aster met à la disposition de tous un ensemble
   de paramètres de contrôle des algorithmes. Ces paramètres sont très nombreux, certains
   sont difficiles à utiliser/comprendre. De plus, cette technique permettra de capitaliser
   des méthodologies d'études autrement que dans des études lourdes et peu pratiques ou dans
   des rapports/documents difficiles à maintenir.
   
   La puissance d'Aster avec l'ergonomie black-box d'un Abaqus.
   
   PRINCIPE
   ========
   
   Une "commande" (ou macro-commande ou autre, c'est à discuter) de la forme suivante (par
   exemple):
   DEFI_ETUDE(
   CONTACT= 'OUI'/'NON',
   FROTTEMENT = 'OUI'/'NON',
   GRANDES_DEFORMATIONS = 'OUI'/'NON',
   TYPE_ETUDE='PLASTICITE",'ENDOMMAGEMENT','VISCOPLASTICITE'
   PRIORITAIRE='MEMOIRE','CPU'
   PRIORITAIRE='ROBUSTE',PERFORMANT'
   INCOMPRESSIBILITE='OUI'/'nON'
   )
   
   Cette "commande" est donc un ensemble de mot-clef lisibles et clairs pour les
   utilisateurs. Il faut que ça reste simple au moins dans son utilisation).
   Cette commande produit un concept (?) qui rentrera a priori dans les commandes suivantes:
   - AFFE_MODELE (choix des EF)
   - DEFI_CONTACT
   - DEFI_LIST_INST
   - STAT/DYNA_NON_LINE (tous les mots-clefs)
   
   Par exemple, pour le frottement, le choix de la solution "ROBUSTE" entrainera
   automatiquement l'utilisation d'un algorithme à trois boucles de points fixes avec la
   formulation continue. La solution "PERFORMANTE" utilisera un Newton généralisé avec
   adaptation automatique des coefficients d'augmentation.
   Il est possible de permettre l'entrée des données du maillage et des matériaux (pour le
   choix automatique de certains paramètres.
   Pour le choix des lois de comportements et de leurs paramètres, il serait plus pratique de
   modifier DEFI_COMPOR pour lui faire produire un concept qui entrerait dans COMP_INCR.
   
   QUESTIONS
   =========
   
   Forme du gabarit:
   - Fonctions Python/dictionnaires lisibles depuis le Fortran
   - Simple fichier texte
   - Autre
   
   Il faut également prévoir:
   - la sauvegarde de ces gabarits dans les sources d'Aster
   - la génération automatique d'un gabarit à partir d'une étude qui a (bien) fonctionné
   - la surcharge des gabarits: il faut laisser la possibilité à l'utilisateur de surcharger
   des paramètres définis dans le gabarit
   
   J'ai une préférence pour un dictionnaire Python (ou approchant, sur le modèle des
   catalogues de LdC). Il faudrait discuter de la forme et de la techno.
   
   
   
   B) réponse apportée
   -------------------
   
   Une réflexion a été menée sur l'intérêt et le fonctionnement d'un tel outil.
   Cela a fait l'objet du CR-12.226.
   D'un point de vue stratégique, il a été décidé de ne pas faire cet outil dans MNAM en 2013.
   La fiche est fermée "sans suite".
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    aucun
NB_JOURS_TRAV  : 5.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019537 DU 2012-09-19 14:55:00
TYPE anomalie concernant Code_Aster (VERSION 10.8)
TITRE
    [FORMA] DEFI_LIST_INST/METHODE='AUTO' dxc3xa9coupe sans fin en NEW10
FONCTIONNALITE
   Problème :
   ----------
   
   Dans le calcul joint tiré de la formation, en NEW10, le calcul en METHODE='AUTO' de
   DEFI_LIST_INST ne s'arrête jamais. Il ne semble jamais atteindre le pas de découpe minimal
   (SUBD_PAS_MINI) alors que c'est le cas en NEW11.
   
   
   Analyse :
   ---------
   
   It's not a bug, it's a feature.
   
   En NEW10 : pendant la subdivision du pas de temps, on regarde si le nouveau pas de temps
   est inférieur à SUBD_PAS_MINI (0 par défaut). Comme il n'est pas renseigné, on s'arretera
   en erreur F que si le nouveau pas de temps est strictement inférieur à 0 (dans nmdcei.f).
   Ce qui n'est bien sur jamais le cas !!
   Comme on est en gestion AUTO, il n'y a pas de NIVEAU, donc impossible de s'arrêter avec
   SUBD_NIVEAU. La seule cause d'arrêt est le CPU_LIMIT. Jusque la, rien d'anormal.
   
   En NEW11 : on s'attend au même comportement, et pourtant, le calcul s'arrête bien avant le
   CPU_LIMIT. Pourquoi ? et bien parce que lors de la reprogrammation du sous-découpage le
   test d'émission de l'erreur F sur SUBD_PAS_MINI (PASMIN) est devenu (dans nmdecv.) :
   DT.LT.PASMIN .OR.  DT.LE.R8PREM()
   En clair, on s'arrête de sous-découper quand le pas de temps est en dessous de la
   précision machine (ce qui semble raisonnable).
   
   
   Solution :
   ----------
   
   Pour s'arrêter plus tôt en NEW10, je propose que l'utilisateur mette SUBD_PAS_MINI
   différent de 0.
   
   Pour améliorer la programmation en NEW10, on peut :
   - soit rajouter le test DT<R8PREM() dans nmdcei.f
   - soit mettre une valeur par défaut non nulle de SUBD_PAS_MINI en gestion AUTO.
   
   Je propose la 1ere solution car elle est coïncide avec celle en NEW11.
   
   impact (NEW1O uniquement) : nmdcei.f
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    etude fournie
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019711 DU 2012-10-11 09:34:14
TYPE express concernant Code_Aster (VERSION 11.3)
TITRE
    oubli chgt syntaxe fiche 19315
FONCTIONNALITE
   oubli de changer la syntaxe pour la fiche issue19315 : NB_DECOUPE -> SUBD_PAS 
   comme décidé en EDA
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    ssnp15g
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019230 DU 2012-07-23 16:25:18
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    RUPT : message rupture0_7 a revoir
FONCTIONNALITE
   Problème :
   ----------
   
   Le message rupture0_7 est emis par DEFI_FOND_FISS (dans op0055.f)
   mais la 3eme valeur K renseigné dans le utmess n'est pas cohérente avec le reste du message.
   
   Solution :
   ----------
   
   On la supprime
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    perso
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019299 DU 2012-08-02 15:38:22
TYPE anomalie concernant Code_Aster (VERSION 11.3)
TITRE
    En NEW11.02.08, le cas-test sslv317a est NOOK sur Rocks.
FONCTIONNALITE
   Problème :
   ----------
   
   En NEW11.02.08, le cas-test sslv317a est NOOK sur Rocks. 
    
   # TITRE PROPAGATION MIXTE D'UNE FISSURE 3D AVEC X-FEM ET RAFFINEMENT ADAPTATI
    
   Le NOOK est : 
    
   -------------------------------------------------------------------------- 
    ---- TABLE            NOM_PARA         TYPE_TEST
         TAB_KG           K1               MIN
         REFERENCE        LEGENDE          VALE_REF         VALE_CAL         ERREUR         
    TOLE            
   NOOK  NON_REGRESSION   XXXX             36617.61         37871.099124841  3.42%          
    2.0%
   
   
   Solution :
   ----------
   
   Ce test a été introduit en 2012 pour garder une trace de la méthode de propagation de
   fissure mise en place dans le stage de Laura Chappé (méthode maillage + raffinement).
   Depuis, cette méthode a évolué, et le dernier test en date (sslv319) fait référence.
   Le test sslv317a est donc obsolète. On le supprime.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : v3.04.317
VALIDATION
    aucun
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019324 DU 2012-08-10 08:21:48
TYPE anomalie concernant Code_Aster (VERSION 11.3)
TITRE
    Plantage si atteinte du niveau maximal de decoupe avec dive_resi
FONCTIONNALITE
   Problème :
   ----------
   
   Un utilisateur a voulu utiliser le critere dive_resi pour la redecoupe du pas de temps
   pour les calculs de
   robinetterie.
   
   Malheureusement, quand le niveau maximal de subdivision est atteint (subd_niveau), le calcul
   s'arrete en erreur développeur dvp_1, et surtout, on perd la base du calcul.
   
   C'est ce que je reproduis ici sur le cas de la base ssnv157c.
   
   
   Solution :
   ----------
   
   Effectivement, il y a bien un bug dans nmerro.f.
   Dans le cas où DIVE_RESI est enclenché mais qu'on a atteint le niveaux de sous-découpe, alors
   on tombe dans un call assert de nmerro.f
   la solution temporaire consiste à traiter dans nmerro.f le cas 'DIVER_RESI' et émettre un
   message sur DIVE_RESI. 
   
   
   impacts : nmerro.f, mecanonline9.py
   
   
   Mais en fait, l'idéal serait plutot que l'échec de sous-découpage soit traité comme une
   erreur en tant que telle, avec émission d'un message qui explique pourquoi le calcul
   s'arrete : pb dans le sous-découpage.
   -> Mickael émet une fiche sur ce point.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    etude fournie
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019363 DU 2012-08-28 09:25:16
TYPE anomalie concernant Code_Aster (VERSION 11.3)
TITRE
    Couverture de PERMR8
FONCTIONNALITE
   Problème :
   ----------
   
   La routine PERMR8 qui était validée par crack01a sdlv130b sslv110f sslv154b sslv315d
   sslv315e sslv316b sslv316c sslv316e sslv316f sslv316g sslv316h sslv316i sslv318b sslv319a
   sslv319b sslv320a sslv320b sslv320c ssnv185b ssnv185p zzzz309a zzzz309b zzzz309c et
   zzzz309d, ne l'est plus.
   
   
   Analyse :
   ---------
   
   La routine permr8.f n'est appelée que par la routine xprfon.f (routine de propagation
   X-FEM dédiée à la renumérotation des points du front de fissure).
   
   L'appel se fait sous une condition (bloc if ligne 156) 
   
             IF (COMPTE.NE.NUMFON) THEN
   
   avec le commentaire suivant :
   
   C           Si le trou le plus grand n est pas le dernier, les
   C           differents fond de fissure sont mal numerote
   C            On doit changer l'ordre des fonds de fissure 
   
   Avant, la  condition était satisfaite, et que suite aux travaux sur la
   détermination automatique du fond de fissure (issue17280 restituée en 11.2.8), cette
   condition n'est plus satisfaite, l'algorithme de création de la liste des points du fond
   ayant complètement changé.
   
   Pour info, xprfon.f a été introduite en 11.0.28 pour gérer la fusion et division des fonds
   de fissure lors de la propagation.
   
   Je ne sais pas du tout comment générer une liste de points du fond de telle sorte que
   xprfon.f fasse que l'on repasse à nouveau dans permr8.f.
   
   Mais je trouve un peu étrange le fait qu'une routine utilitaire aussi basique que permr8.f
   ne soit utilisée que dans les routines de propagation de fissure X-FEM avec fusions des
   fonds !
   A mon avis, il est difficile de trouver des tests pour que xprfon.f appelle de nouveau
   permr8.f, mais il doit être possible de modifier une autre routine aster afin que permr8.f
   soit couverte.
   
   
   Solution :
   ----------
   
   En fait, une recherche de "PERMUTATION CIRCULAIRE" dans les sources ne renvoit que des
   routines où les permutations sont effectuées sur des tableau de K ou de I.
   
   On ne restitue donc rien.
   La routine utilitaire permr8.f reste donc non couverte.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    neant
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 018942 DU 2012-06-05 09:25:55
TYPE express concernant Code_Aster (VERSION 11.3)
TITRE
    X-FEM : supression de l'objet sd_fiss_xfem.MAILFISS.INDIC
FONCTIONNALITE
   Problème :
   ----------
   
   L'objet .MAILFISS .INDIC de la sd_fiss_xfem sert à savoir si les objets .MAILFISS  .HEAV,
   .MAILFISS  .CTIP, et .MAILFISS  .HECT exitent dans la sd, et à récuperer leur longueur.
   
    Cet objet avait été créé à l'origine par méconnaissance des routines JEEXIN(obj,...) et
   JELIRA(obj,'LONMAX'...).
   
   
   
   Solution :
   ----------
   
   On supprime l'objet .MAILFISS .INDIC et on utilise les routines régaliennes de JEVEUX.
   
   impact :
   cgmaxf.f  
   op0041.f
   xaint2.f
   xbarvi.f
   xconno.f
   xdefco.f
   xlagsp.f
   xlmail.f
   xmele1.f
   xmele2.f
   xoripe.f
   xtmafi.f
   xtyele.f
   
   et on en profite pour supprimer les blancs des noms des objets
   ".MAILFISS  .HEAV", ".MAILFISS  .CTIP", et ".MAILFISS  .HECT"
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : D4.10.02
VALIDATION
    x-fem
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR granet       GRANET Sylvie          DATE 10/15/2012 - 04:21:46

--------------------------------------------------------------------------------
RESTITUTION FICHE 019590 DU 2012-09-26 15:00:15
TYPE evolution concernant Code_Aster (VERSION 10.5)
TITRE
    Cas test de pressurisation thermique
FONCTIONNALITE
   On crée le cas test wtna112a représentant le cas classique d'un échantillon saturé non
   drainé et confiné soumis à une montée en température. La montée en pression qui en résulte
   est alors une fonction linéaire de ce gradient de température. Le coefficient de
   cette fonction linéaire - appelée coefficient de pressurisation thermique - se calcule
   analytiquement.
   Ce cas est une étude classique et sert de base à de nombreux tests expérimentaux. Il
   s'agit d'un cas test T.H.M élastique saturé
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : V7.31.112
VALIDATION
    Solution analytique
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 019634 DU 2012-10-02 15:22:41
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    instruction inconnue dans cas-test THM
FONCTIONNALITE
   Dans un certain nombre de cas tests Volumes Finis, on trouve l'instruction abort() au sein
   de blocs conditionnels inutiles. On supprime cet appel conditionnel (et donc le abort).
   
   Test concernés :
   wtnp117c.comm
   wtnp117d.comm
   wtnp117e.comm
   wtnp120a.comm
   wtnp120b.comm
   wtnp120c.comm
   wtnp120d.comm
   wtnp120e.comm
   wtnp120f.comm
   wtnp120g.comm
   wtnp120h.comm
   wtnp120i.comm
   wtnp120j.comm
   wtnp121a.comm
   wtnp121b.comm
   wtnp121c.comm
   wtnp121d.comm
   wtnp121e.comm
   wtnp121f.comm
   wtnp121g.comm
   wtnp121h.comm
   wtnp121i.comm
   wtnp121j.comm
   wtnp121k.comm
   wtnp121l.comm
   wtnp122a.comm
   wtnp122b.comm
   wtnp122c.comm
   wtnp122d.comm
   wtnp122e.comm
   wtnp122f.comm
   wtnp122g.comm
   wtnp122h.comm
   wtnp123a.comm
   wtnp123b.comm
   wtnp123c.comm
   wtnp123d.comm
   wtnp123e.comm
   wtnp124a.comm
   wtnp124b.comm
   wtnp124d.comm
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Passage des cas tests modifixc3xa9s
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR michel       MICHEL-PONNELLE Sylvie   DATE 10/15/2012 - 04:21:47

--------------------------------------------------------------------------------
RESTITUTION FICHE 019587 DU 2012-09-26 09:53:57
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Suite validation fiche issue18368 : Optimisation de DEFI_CABLE_BP
FONCTIONNALITE
   Au moment de la restitution de la fiche 18368 sur l'amélioration des performances de
   l'opérateur DEFI_CABLE_BP, le test zzzz999 a été restitué au lieu de zzzz321. En plus, il
   nécessite une mémoire très importante (au moins 1G).
   Après réflexion, on considère que le développement est validé par le passage des
   différents cas-tests utilisant DEFI_CABLE_BP est qu'il n'est pas nécessaire de tester le
   gain en performance apporté par le développement.
   En conséquence, on supprime le test zzzz999.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    aucune
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR geniaut      GENIAUT Samuel         DATE 10/16/2012 - 03:55:22

--------------------------------------------------------------------------------
RESTITUTION FICHE 011829 DU 2008-03-11 14:42:11
TYPE evolution concernant Code_Aster (VERSION 7.0)
TMA : Phimeca
TITRE
    DEFI_FISS_XFEM / option GROUP_MA_FOND : gradient infini aux noeuds
FONCTIONNALITE
   Problème :
   ----------
   
   Dans DEFI_FISS_XFEM, on cherche à calculer à chaque noeud (ELNO) le gradient des level sets.
   On utilise classiquement les dérivées des fonctions de formes, évaluées aux noeuds.
   Dans le cas des éléments de Barsoum, les dérivées de certaines fonctions de formes sont
   infinies sur le noeud coïncidant avec le fond de fissure.
   Cela arrive uniquement dans le cas des fissures maillées (pour calculer ensuite
   CALC_G/CALC_K_G).
   
   
   Solution :
   ----------
   
   Avec la restitution de la fiche issues14537, DEFI_FISS_XFEM n'est plus utilisé pour les
   fissures maillées, au
   profit de DEFI_FOND_FISS. On n'a alors pas de gradient de level set à calculer sur le fond.
   Le problème est résolu.
   On bascule donc tous les cas-tests avec fissure maillée et maillage 3D et quadratique en
   éléments de Barsoum.
   
   cas-tests modifies :
   
   ascou01a
   ascou18b
   aspic01b
   forma07a
   sslv134a
   sslv134b
   sslv134f
   sslv310a
   sslv312a
   sslv312b
   ssnv108a
   
   +sslv154a (J'ai profité de cette fiche pour supprimer un commentaire erroné dans le
   cas-test sslv154a et sa doc v3.04.154 qui dit qu'on ne peut pas utiliser les éléments de
   Barsoum. 
   De plus j'ai enlevé le commentaire de la doc qui précise qu'il faut spécifier les
   tangentes à  la fissure aux extrémités du fond de fissure.)
   
   
   Doc:
   v3.04.154
   v3.04.134
   v6.04.108
   v3.04.156
   v1.10.113
   v1.01.146
   v1.10.302
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : v3.04.154 v3.04.134 v6.04.108 v3.04.156 v1.10.113 v1.01.146 v1.10.302
VALIDATION
    tests DEFI_FISS_XFEM
--------------------------------------------------------------------------------
RESTITUTION FICHE 019659 DU 2012-10-05 10:09:22
TYPE evolution concernant Code_Aster (VERSION )
TMA : Phimeca
TITRE
    POST_RUPTURE : gestion d'une table avec plusieurs fonds de fissure
FONCTIONNALITE
   Objectif:
   ---------
   Permettre de faire toutes les opérations dans POST_RUPTURE quand les tables ont plusieurs
   fonds de fissure.
   
   Réalisation:
   -----------
   
   Pour OPERATION == 'ABSC_CURV_NORM' :
   
   A l'origine on appliquait déjà  une formule sur la colonne ABSC_CURV pour calculer une
   nouvelle colonne contenant les
   abscisses curvilignes normées (ABSC_CURV/max(ABSC_CURV)).
   ---> on a modifié cette formule pour diviser l'abscisse curviligne de chaque point par la
   valeur max des abscisses du fond auquel appartient le point .
   
   
   Pour OPERATION == 'COMPTAGE_CYCLES' et pour OPERATION == 'CUMUL_CYCLES':
   
   A l'origine il y avait une boucle sur chaque point du fond. Pour chaque point on prélevait
   la ligne du tableau le concernant pour réaliser une opération.
   --> on a ajouté une boucle sur le nombre fond,  dans laquelle on a ajouté un filtre sur le
   numéro du fond pour prélever la bonne ligne dans le tableau.
   
   
   Fichiers modifiés :
   ------------------
   
   PY:
   --
   post_rupture_ops
   rupture1
   
   CAS-TEST:
   --------
   création de zzzz287b
   
   DOC :
   ------
   v1.01.287
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : v1.01.287
VALIDATION
    zzzz287b
--------------------------------------------------------------------------------
RESTITUTION FICHE 019655 DU 2012-10-05 09:21:00
TYPE anomalie concernant Code_Aster (VERSION 11.3)
TMA : Phimeca
TITRE
    bug post_rupture
FONCTIONNALITE
   Problème : 
   ----------
   
   Dans POST_RUPTURE, il y a une erreur sur la formule utilisée dans l'opération 'K_EQ',
   option 'CUMUL_G'.
   
   
   
   Solution :
   ----------
   
   La formule de Keq a été corrigée dans post_rupture_ops.py, opération K_EQ option CUMUL_G
   en mettant :
             Keq=sqrt(G.E/(1-nu^2))
   
   
   impact:
   post_rupture_ops
   zzzz287a
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 11.0.0
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : u4.82.04
VALIDATION
    zzzz287a
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR lefebvre     LEFEBVRE Jean-Pierre   DATE 10/16/2012 - 08:23:29

--------------------------------------------------------------------------------
RESTITUTION FICHE 019463 DU 2012-09-11 13:35:11
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    AR08 montxc3xa9e de version MED3.0.6
FONCTIONNALITE
   But de l'évolution :
   ===================
   Mettre à niveau la librairie med-3.0.6 avant stabilisation.
   
   Réalisation :
   ===========
   On reconstruit la librairie sur les différentes plates-formes et on modifie les fichiers
   de configuration pour pointer sur la nouvelle version.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    les 1951 tests utilisant med
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR proix        PROIX Jean-Michel      DATE 10/15/2012 - 02:28:49

--------------------------------------------------------------------------------
RESTITUTION FICHE 019693 DU 2012-10-10 09:42:33
TYPE express concernant Code_Aster (VERSION 10.5)
TITRE
    Choix de plusieurs méthodes de résolution dans la loi VMIS_JOHN_COOK
FONCTIONNALITE
   Suite au travail de Samuel dans l' issue15955 , qui consistait à faire une routine chapeau
   pour les méthodes de résolution d'équations scalaires, on remplace pour la loi VMIS_JOHN_COOK
   Chaboche la résolution par la méthode de Dekker par l'appel à cette routine chapeau.
   
   Ce travail est similaire à l 'issue19644
   
   On offre donc la possibilité d'utiliser DEKKER, SECANTE ou BRENT  pour VMIS_JOHN_COOK
   
   Validation : 
   - ALGO_INTE='BRENT' dans SDNV103G
   - un astout sur tous les tests utilisant ce comportement.
   
   Avec Brent 
    testcase         result            cpu      sys  cpu+sys  elapsed
   ------------ ------------------ -------- -------- -------- --------
   comp002k     <A>_ALARM             36.41     1.32    37.73    39.84
   comp008o     <A>_ALARM              1.91     0.53     2.44     4.14
   hsna105a     <A>_ALARM             14.35     0.69    15.04    17.43
   hsna105b     <A>_ALARM             16.76     0.74    17.50    20.30
   sdnv103g     <A>_ALARM             41.61     0.83    42.44    43.91
   ------------ ------------------ -------- -------- -------- --------
      5 tests      0 errors          111.04     4.11   115.15   125.62
   
   Avec DEKKER
     testcase         result            cpu      sys  cpu+sys  elapsed
   ------------ ------------------ -------- -------- -------- --------
   comp002k     <A>_ALARM             34.01     0.95    34.96    35.64
   comp008o     <A>_ALARM              1.91     0.47     2.38     4.31
   hsna105a     <A>_ALARM             14.24     0.78    15.02    17.04
   hsna105b     <A>_ALARM             16.67     0.86    17.53    20.10
   sdnv103g     <A>_ALARM             43.87     0.90    44.77    47.14
   ------------ ------------------ -------- -------- -------- --------
      5 tests      0 errors          110.70     3.96   114.66   124.23
   
   La différence n'est pas significative. Pour ne reien changer, on laisse donc Dekker par
   défaut, et Brent et SECANTE en option de ALGO_INTE.
   
   Sur SNDV103G, on vérifie (SUIVI_DDL) que le nombre d'itérations internes est plus petit
   avec Brent. On modifie donc ce test.
   
   De plus, dans un cas d'étude, la loi de comportement converge avec Brent et ne converge
   pas (en 100 itérations) avec Dekker.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : u4.51.11
VALIDATION
    sndv103g
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR sellenet     SELLENET Nicolas       DATE 10/16/2012 - 08:51:40

--------------------------------------------------------------------------------
RESTITUTION FICHE 019701 DU 2012-10-10 13:42:37
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Routines plus couvertes en 11.2.17
FONCTIONNALITE
   Les routines TE0142 et TE0231 ne sont plus appelables, je les supprime.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    aucune
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019588 DU 2012-09-26 12:06:33
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Routine plus appelee en 11.2.14
FONCTIONNALITE
   Les routines D2GEOM DHFMSS DJACBM DVECT MECHDA MECHPE MEPESA NMIMPI OBCOPY OBLGAP OBLSOP
   MECHN2 MPIALR et RESOU2 ne sont plus appelées. Je les supprime.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    aucune
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 019562 DU 2012-09-24 11:36:44
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    [FORUM] Plantage CALC_CHAMP aprxc3xa8s un POST_CHAMP
FONCTIONNALITE
   Problème :
   ----------
   Dans le calcul joint à la fiche, on fait des calculs de champs à sous-point (CALC_CHAMP),
   puis des extractions (POST_CHAMP) et enfin un calcul des contraintes aux noeuds
   (SIGM_NOEU). L'erreur suivante intervient :
   """
   Nom de collection ou de répertoire inexistant : >ÿÿÿÿÿÿÿ.NOMMAI<
   """
   
   
   Analyse :
   ---------
   On plante dans DXQPGL lorsqu'on essaye d'imprimer le message ELEMENTS4_80 :
   """
   L'élément de plaque QUAD4 défini sur la maille : M171
   n'est pas plan et peut conduire a des résultats faux
   Distance au plan :  0.469022
   """
   
   Ce message ne peut pas être imprimer car habituellement, DXQPGL est appelée sous un TE. Ce
   n'est pas le cas ici (CALC_CHAMP) donc il manque des éléments (notamment le nom du
   maillage) initialisés d'habitude par CALCUL.
   
   
   Solution :
   ----------
   On modifie DXQPGL pour qu'elle renvoit un code retour comme Jacques le conseillait. On
   ajoute des arguments :
   OUT : IRET : 0 / 1 : OK / NOOK
   IN  : KSTOP : 'F' : on émet l'U2MESS / F
                 ' ' : on sort avec IRET=1
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    unitaire
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 017279 DU 2011-07-11 12:19:45
TYPE evolution concernant Code_Aster (VERSION 9.1)
TITRE
    creation test de performance pour un cas tres non lineaire
FONCTIONNALITE
   Demande :
   ---------
   Créer un cas test de performance montrant la bonne scalabilité des calculs élémentaires
   lorsqu'on passe beaucoup de temps à les réaliser en comparaison des autres tâches (solveur
   linéaire, ...).
   
   
   Proposition :
   -------------
   J'utilise le test ssnv118a qui utilise le comportement VISCOCHAB (très coûteux à intégrer).
   
   Ce test est un cube (constitué d'un HEXA8) et la résolution se déroule dans STAT_NON_LINE.
   
   L'idée est de raffiner le maillage en adaptant la discrétisation temporelle. Deux
   possibilités s'offrent à nous :
   - un premier maillage raffiné en 8 HEXA8 et permet d'exhiber un speed-up de 7,6 sur 8,
   - un deuxième maillage raffiné en 64 HEXA8 qui lui permet d'atteindre 7,9 sur 8.
   
   Dans tous les cas, on passe tout le temps de la résolution (99,9%) dans les calculs
   élémentaires. La charge étant parfaitement équilibrée, on obtient un speed-up
   quasi-parfait. Le permier test est un peu plus sévère car il y a moins d'éléments par
   processeurs.
   
   Le test tournera sur 1, 2, 4 et 8 processeurs et se nommera perf015*
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : V1.01.327
VALIDATION
    aucune
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 010145 DU 2006-10-17 11:47:32
TYPE evolution concernant Code_Aster (VERSION 7.0)
TITRE
    Imprimer les sous-points des elements de structure au format MED
FONCTIONNALITE
   Demande :
   ---------
   Le but des cette fiche est de pouvoir imprimer des champs aux points de Gauss à
   sous-points au format MED.
   
   
   Solution :
   ----------
   Le format MED le permet, on ajoute donc cette possibilité dans Aster. Je rajoute le
   mot-clé CARA_ELEM dans IMPR_RESU au format MED. C'est lorsque l'utilisateur fournira la
   sd_cara_elem qu'on sera en mesure d'imprimer un champ à sous-point correctement au format MED.
   
   La syntaxe est la suivante :
   IMPR_RESU(FORMAT='MED',
    . . . . .RESU=_F(CARA_ELEM=carel,
    . . . . . . . . .RESULTAT=resu,),);
   
   Pour mémoire, aujourd'hui, lorsqu'IMPR_RESU rencontre un champ ELGA à sous-points, il
   duplique les points de Gauss de l'élément de référence autant de fois qu'il y a de
   sous-points dans la définition de la localisation MED.
   
   Dans ce que je compte restituer, ce mode de fonctionnement est préservé dans le cas où
   l'utilisateur ne donne pas de CARA_ELEM donc même en cas de bug, l'utilisateur aura un plan B.
   
   Je profite aussi de cette fiche pour rendre OP0039 plus lisible et plus courte.
   
   
   Détails d'implémentation :
   --------------------------
   Pour définir un champ aux points de Gauss à sous-points (ex SIEF_ELGA sur des coques QUAD4
   FPG4 avec d'un côté 2 couches et d'un autre 3 couches), il faut :
   - définir un permier maillage dit "support" (au sens MED) qui représentera en fait dans
   l'exemple une maille QUAD4 "canonique" (comme déjà définit dans Aster et MED).
   - définir un "élément de structure" (au sens MED) qui reposera sur le permier maillage
   support. On pourra associer à cet élément des "attributs" variables et constants
   (épaisseur, angle de vrille, ...).
   - ajouter ces éléments de structure dans le maillage dit de calcul. On définit à cette
   occasion les attributs variables.
   - définir un deuxième maillage support de la section. Dans notre exemple, on définit 2
   maillages supports suivant x pour représenter les 2 et 3 couches voulues.
   - définir une localisation qui se fondera sur l'élément de structure, la famille FPG4 et
   le maillage support.
   
   
   Validation :
   ------------
   J'ajoute un cas test avec 3 modélisations : zzzz326 a et b pour valider l'impression
   des sous-points pour les coques et les tuyaux.
   
   Je rajoute aussi des IMPR_RESU avec CARA_ELEM dans ssls113a, zzzz296a et ssnl123a
   (respectivement coque, tuyaux et pmf).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : V1.01.326 U7.05.21
VALIDATION
    zzzz326 a, b et c
NB_JOURS_TRAV  : 15.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR tardieu      TARDIEU Nicolas        DATE 10/15/2012 - 02:34:26

--------------------------------------------------------------------------------
RESTITUTION FICHE 019400 DU 2012-08-31 16:02:37
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Pouvoir imprimer des champs xc3xa0 chaque itxc3xa9ration de Newton
FONCTIONNALITE
   On propose de restituer une subroutine qui permet d'imprimer au format MED dans le fichier
   d'unité logique 80 le champ de déplacement à
   chaque itération de Newton dans un but de debug.
   On crée une routine DBGCHA dans la bibliothèque DEBUG appelée dans NMDEPL. Il faut
   positionner un booléen à .TRUE. et re-compiler pour activer les impressions.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Test perso
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019700 DU 2012-10-10 13:31:41
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    En NEW11.02.17, le cas-test sdns108a sxe2x80x99arrxc3xaate par manque de temps CPU sur Aster4.
FONCTIONNALITE
   Problème :
   ----------
   En NEW11.02.17, le cas-test sdns108a s’arrête par manque de temps CPU sur Aster4. 
   
   Solution :
   ----------
   Pour info, le test est OK en NEW11.2.18.
   Je propose d'augmenter légèrement le temps limite du test.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Passage du test
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019665 DU 2012-10-05 12:44:52
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    vxc3xa9rification en trop dans te0038 (option MASS_INER) pour des poutres xc3xa0 VARI_SECT='HOMOTHETIQUE'
FONCTIONNALITE
   Problème :
   ----------
   Dans AFFE_CARA_ELEM, quand on définit une section homothétique, on impose que les aires
   des sections aux 2 extrémités soient différentes. 
   
   Solution :
   ----------
   Cette vérification semble exagérée compte tenu du fait que l'on retrouve les mêmes
   résultats qu'en cas de section constante.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Test perso
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019542 DU 2012-09-20 08:59:29
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    En NEW11.02.13, le cas-test forma08a s’arrête par manque de temps CPU sur Rocks.
FONCTIONNALITE
   Problème :
   ----------
   En NEW11.02.13, le cas-test forma08a s’arrête par manque de temps CPU sur Rocks. 
   
   Solution :
   ----------
   Pour info : 
   En NEW11.02.14, le test est de nouveau OK
   En NEW11.02.16, le test est nouveau cassé
   En NEW11.02.17, le test est de nouveau OK
   Je propose d'ajouter du temps.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Passage du test
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

       C MODIF supervis/astermodule         courtois M.COURTOIS        2800     43     43
       C MODIF supervis/libinfos            lefebvre J-P.LEFEBVRE        78      1      1
       C MODIF supervis/med_aster_module    lefebvre J-P.LEFEBVRE        95      1      1
 CASTEST AJOUT fdlv112c                       devesa G.DEVESA           224    224      0
 CASTEST AJOUT perf015a                     sellenet N.SELLENET         137    137      0
 CASTEST AJOUT perf015b                     sellenet N.SELLENET         137    137      0
 CASTEST AJOUT perf015c                     sellenet N.SELLENET         137    137      0
 CASTEST AJOUT perf015d                     sellenet N.SELLENET         137    137      0
 CASTEST AJOUT sdls118c                       devesa G.DEVESA           525    525      0
 CASTEST AJOUT sdls118d                       devesa G.DEVESA           584    584      0
 CASTEST AJOUT wtna112a                       granet S.GRANET           258    258      0
 CASTEST AJOUT zzzz287b                       ladier A.LADIER           580    580      0
 CASTEST AJOUT zzzz326a                     sellenet N.SELLENET          82     82      0
 CASTEST AJOUT zzzz326b                     sellenet N.SELLENET          91     91      0
 CASTEST MODIF ahlv100a                      alarcon A.ALARCON          532      4     11
 CASTEST MODIF ahlv100f                      alarcon A.ALARCON          127      4     15
 CASTEST MODIF ahlv100g                      alarcon A.ALARCON          286      4     21
 CASTEST MODIF ahlv100h                      alarcon A.ALARCON          273      4     16
 CASTEST MODIF ahlv100i                      alarcon A.ALARCON          285      4     16
 CASTEST MODIF ahlv100j                      alarcon A.ALARCON          282      4     14
 CASTEST MODIF ahlv100k                      alarcon A.ALARCON          287      4     14
 CASTEST MODIF ahlv100m                      alarcon A.ALARCON          207      4     12
 CASTEST MODIF ahlv100q                      alarcon A.ALARCON          136      4     14
 CASTEST MODIF ahlv100r                      alarcon A.ALARCON          134      4     14
 CASTEST MODIF ahlv100s                      alarcon A.ALARCON          135      4     14
 CASTEST MODIF ahlv101a                      alarcon A.ALARCON          118      5      9
 CASTEST MODIF ahlv101b                      alarcon A.ALARCON          125      5      9
 CASTEST MODIF ahlv101c                      alarcon A.ALARCON          126      5      9
 CASTEST MODIF ascou01a                       ladier A.LADIER           324      7      1
 CASTEST MODIF ascou18a                     courtois M.COURTOIS         282      4      2
 CASTEST MODIF ascou18b                       ladier A.LADIER           137     13      7
 CASTEST MODIF aspic01b                       ladier A.LADIER           513      7      1
 CASTEST MODIF comp002i                     courtois M.COURTOIS         360      3      2
 CASTEST MODIF comp002j                     courtois M.COURTOIS         313      3      2
 CASTEST MODIF comp003a                     courtois M.COURTOIS         270      2      1
 CASTEST MODIF comp003b                     courtois M.COURTOIS         228      2      1
 CASTEST MODIF comp003c                     courtois M.COURTOIS         229      2      1
 CASTEST MODIF efica01a                      alarcon A.ALARCON          294      3     10
 CASTEST MODIF elsa01b                       alarcon A.ALARCON          253      2      2
 CASTEST MODIF elsa01c                       alarcon A.ALARCON          275      2      2
 CASTEST MODIF elsa01d                       alarcon A.ALARCON          295      2      2
 CASTEST MODIF fdlv111b                     courtois M.COURTOIS         252      2      2
 CASTEST MODIF fdlv112b                       devesa G.DEVESA           537     96     44
 CASTEST MODIF fdnv100a                      alarcon A.ALARCON          511      5     27
 CASTEST MODIF forma02b                      alarcon A.ALARCON           78      3     10
 CASTEST MODIF forma02d                      alarcon A.ALARCON          307     11     17
 CASTEST MODIF forma07a                       ladier A.LADIER           218      8      2
 CASTEST MODIF forma08a                      tardieu N.TARDIEU          258      2      2
 CASTEST MODIF forma11c                      alarcon A.ALARCON          207      8     11
 CASTEST MODIF forma12a                      alarcon A.ALARCON           87      2      2
 CASTEST MODIF forma12b                      alarcon A.ALARCON          115     12     15
 CASTEST MODIF forma12c                      alarcon A.ALARCON          128     16     27
 CASTEST MODIF forma12d                      alarcon A.ALARCON          163     16     28
 CASTEST MODIF forma12e                      alarcon A.ALARCON          268     14     13
 CASTEST MODIF gcpc002a                     courtois M.COURTOIS         536      2      2
 CASTEST MODIF gcpc002b                     courtois M.COURTOIS         703      2      2
 CASTEST MODIF gcpc002c                     courtois M.COURTOIS         793      2      2
 CASTEST MODIF hpla310a                     courtois M.COURTOIS        1019     15      3
 CASTEST MODIF hsnv101c                     courtois M.COURTOIS         538      2      1
 CASTEST MODIF hsnv124c                     courtois M.COURTOIS         384      3      3
 CASTEST MODIF hsnv125g                     courtois M.COURTOIS         478      3      3
 CASTEST MODIF miss01a                       alarcon A.ALARCON          208      2      2
 CASTEST MODIF miss02a                      courtois M.COURTOIS         544      5      1
 CASTEST MODIF miss03a                       alarcon A.ALARCON          260      2      3
 CASTEST MODIF miss03b                       alarcon A.ALARCON         1182      3     10
 CASTEST MODIF miss03c                       alarcon A.ALARCON         1170      3     11
 CASTEST MODIF miss04b                       alarcon A.ALARCON          475      3     10
 CASTEST MODIF miss05a                       alarcon A.ALARCON          840      2      2
 CASTEST MODIF miss06a                       alarcon A.ALARCON          654      2     10
 CASTEST MODIF miss06b                       alarcon A.ALARCON          837     17     38
 CASTEST MODIF miss06c                       alarcon A.ALARCON          835     20     37
 CASTEST MODIF miss07a                      courtois M.COURTOIS         368      3      2
 CASTEST MODIF mtlp103a                     courtois M.COURTOIS        1065     10     10
 CASTEST MODIF mumps03a                      alarcon A.ALARCON          249      4      4
 CASTEST MODIF rccm02a                       alarcon A.ALARCON          351      1      1
 CASTEST MODIF sdld02a                       alarcon A.ALARCON          777     14     16
 CASTEST MODIF sdld02b                       alarcon A.ALARCON         1087      2      2
 CASTEST MODIF sdld02e                       alarcon A.ALARCON          743      2      4
 CASTEST MODIF sdld02f                       alarcon A.ALARCON          755      2      9
 CASTEST MODIF sdld102c                      alarcon A.ALARCON          470      2      2
 CASTEST MODIF sdld103a                      alarcon A.ALARCON         1015      2      9
 CASTEST MODIF sdld103b                      alarcon A.ALARCON          562      2      9
 CASTEST MODIF sdld105a                      alarcon A.ALARCON          309      2      3
 CASTEST MODIF sdld21a                       alarcon A.ALARCON         2259      4     10
 CASTEST MODIF sdld21b                       alarcon A.ALARCON         1388      4     17
 CASTEST MODIF sdld21c                       alarcon A.ALARCON          396      2     10
 CASTEST MODIF sdld21d                       alarcon A.ALARCON         2449      7     15
 CASTEST MODIF sdld30a                       alarcon A.ALARCON         1815      2      9
 CASTEST MODIF sdld313a                      alarcon A.ALARCON          158      4     10
 CASTEST MODIF sdld31b                       alarcon A.ALARCON          393      5     19
 CASTEST MODIF sdld34a                       alarcon A.ALARCON          254      2      9
 CASTEST MODIF sdld34b                       alarcon A.ALARCON          176      2      9
 CASTEST MODIF sdll02b                      courtois M.COURTOIS         353      7      1
 CASTEST MODIF sdll109b                      alarcon A.ALARCON         3581      3     20
 CASTEST MODIF sdll110b                     courtois M.COURTOIS         492      5      1
 CASTEST MODIF sdll110c                     courtois M.COURTOIS         487      4      2
 CASTEST MODIF sdll110d                     courtois M.COURTOIS         514      2      1
 CASTEST MODIF sdll110e                     courtois M.COURTOIS         515      4      2
 CASTEST MODIF sdll112a                      alarcon A.ALARCON          939      2      9
 CASTEST MODIF sdll112b                      alarcon A.ALARCON          935      2      9
 CASTEST MODIF sdll113c                      alarcon A.ALARCON          471      3      3
 CASTEST MODIF sdll115b                        berro H.BERRO            895     35     31
 CASTEST MODIF sdll119a                     courtois M.COURTOIS         494      3      2
 CASTEST MODIF sdll119b                     courtois M.COURTOIS         506      3      2
 CASTEST MODIF sdll123a                      alarcon A.ALARCON          480     13     31
 CASTEST MODIF sdll123b                      alarcon A.ALARCON          595      2      8
 CASTEST MODIF sdll123c                      alarcon A.ALARCON          971      2      8
 CASTEST MODIF sdll123d                      alarcon A.ALARCON          319      2      4
 CASTEST MODIF sdll123e                      alarcon A.ALARCON          302      2      4
 CASTEST MODIF sdll123f                      alarcon A.ALARCON          316      2      4
 CASTEST MODIF sdll124a                      alarcon A.ALARCON          388      2      3
 CASTEST MODIF sdll125a                      alarcon A.ALARCON          409      2      3
 CASTEST MODIF sdll125b                      alarcon A.ALARCON          410      2      3
 CASTEST MODIF sdll125c                      alarcon A.ALARCON          386      2      3
 CASTEST MODIF sdll126a                      alarcon A.ALARCON          201     28     31
 CASTEST MODIF sdll126b                      alarcon A.ALARCON          218     32     42
 CASTEST MODIF sdll126c                      alarcon A.ALARCON          199     28     31
 CASTEST MODIF sdll126d                      alarcon A.ALARCON          223     28     41
 CASTEST MODIF sdll127a                      alarcon A.ALARCON          490      2      4
 CASTEST MODIF sdll127b                      alarcon A.ALARCON        10299      2      4
 CASTEST MODIF sdll127c                      alarcon A.ALARCON        10300      2      4
 CASTEST MODIF sdll128a                      alarcon A.ALARCON          989      3     11
 CASTEST MODIF sdll129a                      alarcon A.ALARCON         1085      3     12
 CASTEST MODIF sdll131a                      alarcon A.ALARCON         1035      3     12
 CASTEST MODIF sdll135a                      alarcon A.ALARCON          495      3     11
 CASTEST MODIF sdll135b                      alarcon A.ALARCON          493      2     11
 CASTEST MODIF sdll135c                      alarcon A.ALARCON          475      2     11
 CASTEST MODIF sdll135d                      alarcon A.ALARCON          474      2     11
 CASTEST MODIF sdll135e                      alarcon A.ALARCON          549      2      9
 CASTEST MODIF sdll138a                      alarcon A.ALARCON          698      2      4
 CASTEST MODIF sdll140a                      alarcon A.ALARCON          416      2     11
 CASTEST MODIF sdll141a                      alarcon A.ALARCON          184      2     10
 CASTEST MODIF sdll141b                      alarcon A.ALARCON          191      2     10
 CASTEST MODIF sdll141c                      alarcon A.ALARCON          295      2     11
 CASTEST MODIF sdll141d                      alarcon A.ALARCON          188      2     10
 CASTEST MODIF sdll141e                      alarcon A.ALARCON          218      2     10
 CASTEST MODIF sdll144a                      alarcon A.ALARCON          317     27     37
 CASTEST MODIF sdll144b                      alarcon A.ALARCON          320     25     34
 CASTEST MODIF sdll147a                      alarcon A.ALARCON          941      2      9
 CASTEST MODIF sdll149a                      alarcon A.ALARCON         3161      2      9
 CASTEST MODIF sdll149b                      alarcon A.ALARCON         2074      2      9
 CASTEST MODIF sdll14a                       alarcon A.ALARCON          171      2      9
 CASTEST MODIF sdll14b                       alarcon A.ALARCON          177      2      9
 CASTEST MODIF sdll14c                       alarcon A.ALARCON          173      2      9
 CASTEST MODIF sdll503a                     courtois M.COURTOIS         346      2      1
 CASTEST MODIF sdls01a                       alarcon A.ALARCON          530      3     14
 CASTEST MODIF sdls01e                       alarcon A.ALARCON          566      3     11
 CASTEST MODIF sdls01f                       alarcon A.ALARCON          564      3     11
 CASTEST MODIF sdls01g                       alarcon A.ALARCON          573      3     11
 CASTEST MODIF sdls01h                       alarcon A.ALARCON          568      3     11
 CASTEST MODIF sdls03a                       alarcon A.ALARCON          308      5     15
 CASTEST MODIF sdls03b                       alarcon A.ALARCON          487      8     20
 CASTEST MODIF sdls03c                       alarcon A.ALARCON          182      2     10
 CASTEST MODIF sdls03d                       alarcon A.ALARCON          165      2      9
 CASTEST MODIF sdls07d                       alarcon A.ALARCON          226      2      9
 CASTEST MODIF sdls07e                       alarcon A.ALARCON          222      2      9
 CASTEST MODIF sdls102a                      alarcon A.ALARCON          122      2      9
 CASTEST MODIF sdls102b                      alarcon A.ALARCON          123      2      9
 CASTEST MODIF sdls103a                     courtois M.COURTOIS         417      8      1
 CASTEST MODIF sdls106b                     courtois M.COURTOIS         372      6      1
 CASTEST MODIF sdls106d                      alarcon A.ALARCON          337      4     14
 CASTEST MODIF sdls106e                     courtois M.COURTOIS         379      8      3
 CASTEST MODIF sdls119a                      alarcon A.ALARCON          569     10     15
 CASTEST MODIF sdls119b                      alarcon A.ALARCON          618     10     21
 CASTEST MODIF sdls122a                      alarcon A.ALARCON          652      7     18
 CASTEST MODIF sdls300a                      alarcon A.ALARCON          153      3      5
 CASTEST MODIF sdls504a                      alarcon A.ALARCON          278     78      1
 CASTEST MODIF sdlv125a                      alarcon A.ALARCON          494      4     10
 CASTEST MODIF sdlv132a                      alarcon A.ALARCON          800      3     13
 CASTEST MODIF sdlx02c                       alarcon A.ALARCON          200      3     11
 CASTEST MODIF sdlx02d                       alarcon A.ALARCON          193      2      9
 CASTEST MODIF sdlx02e                       alarcon A.ALARCON          200      2      9
 CASTEST MODIF sdlx02f                       alarcon A.ALARCON          199      2      9
 CASTEST MODIF sdlx100a                      alarcon A.ALARCON          277      2      2
 CASTEST MODIF sdlx201a                      alarcon A.ALARCON         1290    142     23
 CASTEST MODIF sdnd100c                     courtois M.COURTOIS         170      3      2
 CASTEST MODIF sdnd102a                      alarcon A.ALARCON          420      3     10
 CASTEST MODIF sdnd102b                      alarcon A.ALARCON          853      3     10
 CASTEST MODIF sdnd102c                      alarcon A.ALARCON          257      2      9
 CASTEST MODIF sdnd106a                      alarcon A.ALARCON          259      9     22
 CASTEST MODIF sdnd112a                      alarcon A.ALARCON          375      7     21
 CASTEST MODIF sdnd120a                      alarcon A.ALARCON          389      2      9
 CASTEST MODIF sdnd121a                      alarcon A.ALARCON          246     15     25
 CASTEST MODIF sdnl112b                        berro H.BERRO            630     38     20
 CASTEST MODIF sdnl112c                        berro H.BERRO            720     50     30
 CASTEST MODIF sdnl113a                      alarcon A.ALARCON          326      2      2
 CASTEST MODIF sdnl131a                      alarcon A.ALARCON         1071      3      7
 CASTEST MODIF sdnl133a                      alarcon A.ALARCON          279     19     35
 CASTEST MODIF sdnl133b                      alarcon A.ALARCON          311     19     35
 CASTEST MODIF sdnl133c                      alarcon A.ALARCON          311     18     35
 CASTEST MODIF sdnl136a                        berro H.BERRO            684     23     10
 CASTEST MODIF sdnl301a                     courtois M.COURTOIS         446      2      2
 CASTEST MODIF sdns106e                      alarcon A.ALARCON          296      4      4
 CASTEST MODIF sdns106f                      alarcon A.ALARCON          373      2      2
 CASTEST MODIF sdns107a                      alarcon A.ALARCON          435      3      6
 CASTEST MODIF sdns107b                      alarcon A.ALARCON          437      2      4
 CASTEST MODIF sdns108a                      tardieu N.TARDIEU          195      2      2
 CASTEST MODIF sdnv102a                      alarcon A.ALARCON          547      2      9
 CASTEST MODIF sdnv103g                        proix J-M.PROIX          243     17      2
 CASTEST MODIF sdnv106a                      alarcon A.ALARCON          692      3     12
 CASTEST MODIF sdnv107b                      alarcon A.ALARCON          502      4     11
 CASTEST MODIF shll102a                      alarcon A.ALARCON          494      4     11
 CASTEST MODIF shll103a                      alarcon A.ALARCON         2144     25     27
 CASTEST MODIF shls200a                      alarcon A.ALARCON          560      9     15
 CASTEST MODIF ssll102i                     courtois M.COURTOIS         380      3      2
 CASTEST MODIF ssll103b                      alarcon A.ALARCON          327      3      7
 CASTEST MODIF ssll106a                      alarcon A.ALARCON         1146      2      3
 CASTEST MODIF ssll106c                      alarcon A.ALARCON         1145      2      9
 CASTEST MODIF ssll106e                      alarcon A.ALARCON         1257      2      9
 CASTEST MODIF ssll11c                       alarcon A.ALARCON          222      5      7
 CASTEST MODIF ssls111a                      alarcon A.ALARCON          272      2      9
 CASTEST MODIF ssls111b                      alarcon A.ALARCON          294      2      9
 CASTEST MODIF ssls113a                     sellenet N.SELLENET         564      2      1
 CASTEST MODIF ssls117a                      alarcon A.ALARCON          249      2      9
 CASTEST MODIF ssls117b                      alarcon A.ALARCON          252      2      9
 CASTEST MODIF ssls124b                     courtois M.COURTOIS         427     11      5
 CASTEST MODIF ssls124f                     courtois M.COURTOIS         375      3      3
 CASTEST MODIF sslv110f                     courtois M.COURTOIS         265      2      1
 CASTEST MODIF sslv134a                       ladier A.LADIER           392     39     36
 CASTEST MODIF sslv134b                       ladier A.LADIER           480     34     22
 CASTEST MODIF sslv134f                       ladier A.LADIER           321     19     23
 CASTEST MODIF sslv139c                     courtois M.COURTOIS         147      3      2
 CASTEST MODIF sslv154a                       ladier A.LADIER           428      2      2
 CASTEST MODIF sslv155c                     courtois M.COURTOIS         266      3      2
 CASTEST MODIF sslv310a                       ladier A.LADIER           558     56     32
 CASTEST MODIF sslv311a                     courtois M.COURTOIS         440     28     26
 CASTEST MODIF sslv312a                       ladier A.LADIER           287     54     25
 CASTEST MODIF sslv312b                       ladier A.LADIER           275     30     13
 CASTEST MODIF sslv315b                     courtois M.COURTOIS         247      2      1
 CASTEST MODIF sslv315c                     courtois M.COURTOIS         223      2      2
 CASTEST MODIF ssnd105b                     courtois M.COURTOIS         544      2      2
 CASTEST MODIF ssnd105c                     courtois M.COURTOIS         551      2      2
 CASTEST MODIF ssnd109a                     courtois M.COURTOIS         277      3      1
 CASTEST MODIF ssnl123a                     sellenet N.SELLENET         416      2      7
 CASTEST MODIF ssnl133b                     courtois M.COURTOIS         373      2      2
 CASTEST MODIF ssnp116a                     courtois M.COURTOIS         734      8      3
 CASTEST MODIF ssnp130a                     courtois M.COURTOIS         356     14      1
 CASTEST MODIF ssnp130b                     courtois M.COURTOIS         355     16      1
 CASTEST MODIF ssnp136a                     courtois M.COURTOIS         755      3      3
 CASTEST MODIF ssnp15g                       geniaut S.GENIAUT          236      2      2
 CASTEST MODIF ssns106a                      alarcon A.ALARCON         1247      3      3
 CASTEST MODIF ssns106b                      alarcon A.ALARCON         1676      3      3
 CASTEST MODIF ssns106c                      alarcon A.ALARCON         1866      3      3
 CASTEST MODIF ssns106d                      alarcon A.ALARCON          602      3      3
 CASTEST MODIF ssns106e                      alarcon A.ALARCON          548      3      3
 CASTEST MODIF ssns106f                      alarcon A.ALARCON          654      3      3
 CASTEST MODIF ssns106g                      alarcon A.ALARCON          449      3      3
 CASTEST MODIF ssns106h                      alarcon A.ALARCON          897      3      3
 CASTEST MODIF ssns106i                      alarcon A.ALARCON          970      3      3
 CASTEST MODIF ssns106j                      alarcon A.ALARCON         1403      3      3
 CASTEST MODIF ssns106k                      alarcon A.ALARCON          483      4      4
 CASTEST MODIF ssnv101a                     courtois M.COURTOIS         154      3      2
 CASTEST MODIF ssnv101c                       assire A.ASSIRE           407      2      2
 CASTEST MODIF ssnv104i                     courtois M.COURTOIS         408     20      3
 CASTEST MODIF ssnv104j                     courtois M.COURTOIS         403     18      1
 CASTEST MODIF ssnv108a                       ladier A.LADIER           313     14     27
 CASTEST MODIF ssnv166c                     courtois M.COURTOIS         303      7      1
 CASTEST MODIF ssnv205a                     courtois M.COURTOIS         690     13      1
 CASTEST MODIF ssnv206c                     foucault A.FOUCAULT         332      1      1
 CASTEST MODIF ssnv504b                     courtois M.COURTOIS         282      2      2
 CASTEST MODIF wtna102e                     courtois M.COURTOIS         333      5      1
 CASTEST MODIF wtna102f                     courtois M.COURTOIS         300      5      2
 CASTEST MODIF wtna104a                     courtois M.COURTOIS         277      3      1
 CASTEST MODIF wtna104b                     courtois M.COURTOIS         266      3      1
 CASTEST MODIF wtnl100g                     courtois M.COURTOIS         439      3      1
 CASTEST MODIF wtnp104a                     courtois M.COURTOIS         291      3      1
 CASTEST MODIF wtnp105a                     courtois M.COURTOIS         274      3      1
 CASTEST MODIF wtnp117c                       granet S.GRANET           500     19     28
 CASTEST MODIF wtnp117d                       granet S.GRANET           501     17     26
 CASTEST MODIF wtnp117e                       granet S.GRANET           436     13     24
 CASTEST MODIF wtnp120a                       granet S.GRANET           706     34     44
 CASTEST MODIF wtnp120b                       granet S.GRANET           748     34     44
 CASTEST MODIF wtnp120c                       granet S.GRANET           752     34     46
 CASTEST MODIF wtnp120d                       granet S.GRANET           591      2      1
 CASTEST MODIF wtnp120e                       granet S.GRANET           606     43     51
 CASTEST MODIF wtnp120f                       granet S.GRANET           604     43     52
 CASTEST MODIF wtnp120g                       granet S.GRANET           605     43     54
 CASTEST MODIF wtnp120h                       granet S.GRANET           578     21     31
 CASTEST MODIF wtnp120i                       granet S.GRANET           583     21     34
 CASTEST MODIF wtnp120j                       granet S.GRANET           586     21     31
 CASTEST MODIF wtnp121a                       granet S.GRANET           354     11     24
 CASTEST MODIF wtnp121b                       granet S.GRANET           349     11     24
 CASTEST MODIF wtnp121c                       granet S.GRANET           351     11     23
 CASTEST MODIF wtnp121d                       granet S.GRANET           327      8     14
 CASTEST MODIF wtnp121e                       granet S.GRANET           329      9     19
 CASTEST MODIF wtnp121f                       granet S.GRANET           318      7     16
 CASTEST MODIF wtnp121g                       granet S.GRANET           336      9     19
 CASTEST MODIF wtnp121h                       granet S.GRANET           321      8     19
 CASTEST MODIF wtnp121i                       granet S.GRANET           334      7     13
 CASTEST MODIF wtnp121j                       granet S.GRANET           333      7     14
 CASTEST MODIF wtnp121k                       granet S.GRANET           334      7     13
 CASTEST MODIF wtnp121l                       granet S.GRANET           332      6     12
 CASTEST MODIF wtnp122a                       granet S.GRANET           420     16     31
 CASTEST MODIF wtnp122b                       granet S.GRANET           427     16     30
 CASTEST MODIF wtnp122c                       granet S.GRANET           426     16     31
 CASTEST MODIF wtnp122d                       granet S.GRANET           373     11     24
 CASTEST MODIF wtnp122e                       granet S.GRANET           387     13     29
 CASTEST MODIF wtnp122f                       granet S.GRANET           389     13     28
 CASTEST MODIF wtnp122g                       granet S.GRANET           386     13     26
 CASTEST MODIF wtnp122h                       granet S.GRANET           364     11     23
 CASTEST MODIF wtnp123a                       granet S.GRANET           738     44     56
 CASTEST MODIF wtnp123b                       granet S.GRANET           576     32     42
 CASTEST MODIF wtnp123c                       granet S.GRANET           573     23     37
 CASTEST MODIF wtnp123d                       granet S.GRANET           537     57     75
 CASTEST MODIF wtnp123e                       granet S.GRANET           533     56     76
 CASTEST MODIF wtnp124a                       granet S.GRANET           548     24     34
 CASTEST MODIF wtnp124b                       granet S.GRANET           558     26     35
 CASTEST MODIF wtnp124d                       granet S.GRANET           541     22     32
 CASTEST MODIF wtnp125b                     courtois M.COURTOIS         366      4      1
 CASTEST MODIF wtnv131a                     courtois M.COURTOIS         356      5      1
 CASTEST MODIF zzzz108b                      alarcon A.ALARCON          328      3      4
 CASTEST MODIF zzzz118a                       assire A.ASSIRE           277      2      2
 CASTEST MODIF zzzz118b                       assire A.ASSIRE           154      2      2
 CASTEST MODIF zzzz118c                       assire A.ASSIRE            38      2      2
 CASTEST MODIF zzzz118d                       assire A.ASSIRE            36      2      2
 CASTEST MODIF zzzz137a                      alarcon A.ALARCON          208      2      2
 CASTEST MODIF zzzz180a                     courtois M.COURTOIS         874      5      1
 CASTEST MODIF zzzz200b                      alarcon A.ALARCON         1182      3      6
 CASTEST MODIF zzzz208a                     courtois M.COURTOIS         553     10      7
 CASTEST MODIF zzzz255b                     courtois M.COURTOIS         122      3      1
 CASTEST MODIF zzzz287a                       ladier A.LADIER           550      3      3
 CASTEST MODIF zzzz296a                     sellenet N.SELLENET         271      4      1
 CASTEST SUPPR sslv317a.comm                 geniaut S.GENIAUT          471      0    471
 CASTEST SUPPR zzzz999a.comm                  granet S.GRANET           229      0    229
CATALOGU SUPPR commande/macro_matr_asse      alarcon A.ALARCON          109      0    109
CATALOPY AJOUT commande/assemblage           alarcon A.ALARCON          133    133      0
CATALOPY MODIF commande/affe_cara_elem        devesa G.DEVESA           604     15      1
CATALOPY MODIF commande/calc_miss             devesa G.DEVESA           237     15      1
CATALOPY MODIF commande/defi_glrc            alarcon A.ALARCON          132      4      4
CATALOPY MODIF commande/defi_list_inst       geniaut S.GENIAUT          446      3      3
CATALOPY MODIF commande/defi_materiau        alarcon A.ALARCON         3570      4      4
CATALOPY MODIF commande/dyna_iss_vari         devesa G.DEVESA            79      3      2
CATALOPY MODIF commande/factoriser           alarcon A.ALARCON           72      2      2
CATALOPY MODIF commande/impr_resu           sellenet N.SELLENET         207      3      2
CATALOPY MODIF commande/info_mode            alarcon A.ALARCON           98     14     20
CATALOPY MODIF commande/macro_mode_meca      alarcon A.ALARCON           94     15     12
CATALOPY MODIF commande/mode_iter_simult     alarcon A.ALARCON          171      4      1
CATALOPY MODIF commun/c_solveur              alarcon A.ALARCON          466      8     10
 FORTRAN AJOUT algeline/vptabl               alarcon A.ALARCON          209    209      0
 FORTRAN AJOUT debug/dbgcha                  tardieu N.TARDIEU           59     59      0
 FORTRAN AJOUT modelisa/aceamr                devesa G.DEVESA           321    321      0
 FORTRAN AJOUT modelisa/acevmr                devesa G.DEVESA           104    104      0
 FORTRAN AJOUT modelisa/masrep                devesa G.DEVESA           343    343      0
 FORTRAN AJOUT prepost/ircael               sellenet N.SELLENET          81     81      0
 FORTRAN AJOUT prepost/irchor               sellenet N.SELLENET         272    272      0
 FORTRAN AJOUT prepost/irelst               sellenet N.SELLENET         297    297      0
 FORTRAN AJOUT prepost/irmaes               sellenet N.SELLENET         301    301      0
 FORTRAN AJOUT prepost/irmase               sellenet N.SELLENET         201    201      0
 FORTRAN AJOUT prepost/irmfac               sellenet N.SELLENET         311    311      0
 FORTRAN AJOUT prepost/irtopo               sellenet N.SELLENET         363    363      0
 FORTRAN MODIF algeline/op0032               alarcon A.ALARCON          579    184     65
 FORTRAN MODIF algeline/op0044               alarcon A.ALARCON          747      2      5
 FORTRAN MODIF algeline/op0045               alarcon A.ALARCON         1259     49     14
 FORTRAN MODIF algeline/vpecst               alarcon A.ALARCON          210     81     19
 FORTRAN MODIF algeline/vpfopr               alarcon A.ALARCON          476    115     61
 FORTRAN MODIF algorith/dfllty               geniaut S.GENIAUT          218      2      2
 FORTRAN MODIF algorith/dltini               alarcon A.ALARCON          167     10     10
 FORTRAN MODIF algorith/ecrbas                 berro H.BERRO            148     13      6
 FORTRAN MODIF algorith/ecrgen                 berro H.BERRO             71      7      6
 FORTRAN MODIF algorith/gefact                 berro H.BERRO            425     11      7
 FORTRAN MODIF algorith/lc0035              foucault A.FOUCAULT          66      3      2
 FORTRAN MODIF algorith/mditm2                 berro H.BERRO            507     17     12
 FORTRAN MODIF algorith/mditm3                 berro H.BERRO            141     12      5
 FORTRAN MODIF algorith/mditmi                 berro H.BERRO            357      7      5
 FORTRAN MODIF algorith/mdveri                 berro H.BERRO            135      4      4
 FORTRAN MODIF algorith/nmdepl               tardieu N.TARDIEU          227      5      1
 FORTRAN MODIF algorith/nmerro               geniaut S.GENIAUT          148      3      1
 FORTRAN MODIF algorith/nmexso                 abbas M.ABBAS            271     16     19
 FORTRAN MODIF algorith/nmtevp                 proix J-M.PROIX          472     91     32
 FORTRAN MODIF algorith/op0041               geniaut S.GENIAUT          492      7      9
 FORTRAN MODIF algorith/op0179                devesa G.DEVESA           229      3      3
 FORTRAN MODIF algorith/orth99                devesa G.DEVESA           236      2      2
 FORTRAN MODIF algorith/xaint2               geniaut S.GENIAUT          333     16     15
 FORTRAN MODIF algorith/xbarvi               geniaut S.GENIAUT          366     13     12
 FORTRAN MODIF algorith/xconno               geniaut S.GENIAUT          221     12     14
 FORTRAN MODIF algorith/xlagsp               geniaut S.GENIAUT          461      9     10
 FORTRAN MODIF algorith/xmele1               geniaut S.GENIAUT          210      9     13
 FORTRAN MODIF algorith/xmele2               geniaut S.GENIAUT          203     11     15
 FORTRAN MODIF algorith/xoripe               geniaut S.GENIAUT          364     10     12
 FORTRAN MODIF algorith/xtmafi               geniaut S.GENIAUT          136     16     15
 FORTRAN MODIF calculel/cccmcr              sellenet N.SELLENET         184      5      5
 FORTRAN MODIF calculel/ccvrrl              sellenet N.SELLENET         326     20      3
 FORTRAN MODIF calculel/mpglcp              sellenet N.SELLENET         107      5      4
 FORTRAN MODIF calculel/op0055               geniaut S.GENIAUT          249      3      4
 FORTRAN MODIF calculel/optdep              courtois M.COURTOIS          48      7      3
 FORTRAN MODIF debug/irchmd                 sellenet N.SELLENET          62      4      3
 FORTRAN MODIF elements/bsthpl              sellenet N.SELLENET          90      3      3
 FORTRAN MODIF elements/cosiro              sellenet N.SELLENET         123      2      2
 FORTRAN MODIF elements/crgdm                alarcon A.ALARCON          207     23     23
 FORTRAN MODIF elements/dxiner              sellenet N.SELLENET         291      3      3
 FORTRAN MODIF elements/dxqpgl              sellenet N.SELLENET         159     22      3
 FORTRAN MODIF elements/ef0031              sellenet N.SELLENET          68      3     10
 FORTRAN MODIF elements/ef0033              sellenet N.SELLENET          81      8     15
 FORTRAN MODIF elements/ef0409              sellenet N.SELLENET          76      6     23
 FORTRAN MODIF elements/te0031              sellenet N.SELLENET         359      5     10
 FORTRAN MODIF elements/te0032              sellenet N.SELLENET         263      3      3
 FORTRAN MODIF elements/te0033              sellenet N.SELLENET         271      2      2
 FORTRAN MODIF elements/te0035              sellenet N.SELLENET          94      3      3
 FORTRAN MODIF elements/te0038               tardieu N.TARDIEU          419      1      6
 FORTRAN MODIF elements/te0134              sellenet N.SELLENET          98      3      3
 FORTRAN MODIF elements/te0404              sellenet N.SELLENET         124      3      3
 FORTRAN MODIF elements/te0409              sellenet N.SELLENET         326      7      7
 FORTRAN MODIF elements/te0412              sellenet N.SELLENET         281      3      3
 FORTRAN MODIF elements/te0413              sellenet N.SELLENET         235      2      2
 FORTRAN MODIF elements/te0422              sellenet N.SELLENET          81      3      3
 FORTRAN MODIF elements/te0430              sellenet N.SELLENET         206      3      3
 FORTRAN MODIF elements/te0431              sellenet N.SELLENET         247      2      2
 FORTRAN MODIF elements/te0432              sellenet N.SELLENET         278      2      2
 FORTRAN MODIF elements/te0433              sellenet N.SELLENET         257      2      2
 FORTRAN MODIF elements/te0442              sellenet N.SELLENET         163      3      3
 FORTRAN MODIF elements/te0462              sellenet N.SELLENET         125      2      2
 FORTRAN MODIF elements/te0488              sellenet N.SELLENET         162      3      3
 FORTRAN MODIF modelisa/aceadi                devesa G.DEVESA           278      4      3
 FORTRAN MODIF modelisa/aceinc                devesa G.DEVESA           277      3      3
 FORTRAN MODIF modelisa/calimc                devesa G.DEVESA           352      4      2
 FORTRAN MODIF modelisa/cgmaxf               geniaut S.GENIAUT          197     13     16
 FORTRAN MODIF modelisa/dglrdm               alarcon A.ALARCON          379     32     32
 FORTRAN MODIF modelisa/op0019                devesa G.DEVESA           515     18      4
 FORTRAN MODIF modelisa/vafcar                devesa G.DEVESA           164      3      2
 FORTRAN MODIF modelisa/xdefco               geniaut S.GENIAUT           76     16     19
 FORTRAN MODIF modelisa/xdelco               geniaut S.GENIAUT          233      4      4
 FORTRAN MODIF modelisa/xlmail               geniaut S.GENIAUT          147      7     20
 FORTRAN MODIF modelisa/xtyele               geniaut S.GENIAUT          370     10     11
 FORTRAN MODIF modelisa/xxmmvd               geniaut S.GENIAUT           62      4      6
 FORTRAN MODIF prepost/ircam1               sellenet N.SELLENET         370     30     13
 FORTRAN MODIF prepost/ircame               sellenet N.SELLENET         351     14      7
 FORTRAN MODIF prepost/irceme               sellenet N.SELLENET         131      5      4
 FORTRAN MODIF prepost/irchme               sellenet N.SELLENET         263      9      8
 FORTRAN MODIF prepost/ircmpe               sellenet N.SELLENET         452    134    154
 FORTRAN MODIF prepost/ircmpn               sellenet N.SELLENET         256     27     16
 FORTRAN MODIF prepost/ircmpr               sellenet N.SELLENET         253     13     10
 FORTRAN MODIF prepost/ircnme               sellenet N.SELLENET         132      5      4
 FORTRAN MODIF prepost/iremed               sellenet N.SELLENET         272    104     36
 FORTRAN MODIF prepost/irmama               sellenet N.SELLENET         119      5      4
 FORTRAN MODIF prepost/irmpg1               sellenet N.SELLENET         485     18     13
 FORTRAN MODIF prepost/irmpga               sellenet N.SELLENET         322     56     21
 FORTRAN MODIF prepost/irnono               sellenet N.SELLENET         128      5      4
 FORTRAN MODIF prepost/irvari               sellenet N.SELLENET         241      4      4
 FORTRAN MODIF prepost/lrvcpg               sellenet N.SELLENET         253      3      3
 FORTRAN MODIF prepost/op0039               sellenet N.SELLENET         272     39    792
 FORTRAN MODIF prepost/op0162                 devesa G.DEVESA           339      1      5
 FORTRAN MODIF prepost/op0163                 devesa G.DEVESA           220      5      9
 FORTRAN MODIF prepost/w039c1               sellenet N.SELLENET         183      4      3
 FORTRAN MODIF prepost/w039c3               sellenet N.SELLENET         105      6      5
 FORTRAN MODIF supervis/fin999              courtois M.COURTOIS          33      4      6
 FORTRAN MODIF utilifor/u2mesg              courtois M.COURTOIS         195     12      7
 FORTRAN MODIF utilitai/iredm1                devesa G.DEVESA           496      1      5
 FORTRAN SUPPR algorith/d2geom              sellenet N.SELLENET         175      0    175
 FORTRAN SUPPR algorith/nmimpi              sellenet N.SELLENET          33      0     33
 FORTRAN SUPPR calculel/mechda              sellenet N.SELLENET          68      0     68
 FORTRAN SUPPR calculel/mechn2              sellenet N.SELLENET         120      0    120
 FORTRAN SUPPR calculel/mechpe              sellenet N.SELLENET          68      0     68
 FORTRAN SUPPR calculel/mepesa              sellenet N.SELLENET          67      0     67
 FORTRAN SUPPR elements/dhfmss              sellenet N.SELLENET         132      0    132
 FORTRAN SUPPR elements/djacbm              sellenet N.SELLENET         125      0    125
 FORTRAN SUPPR elements/dvect               sellenet N.SELLENET          86      0     86
 FORTRAN SUPPR elements/te0142              sellenet N.SELLENET         118      0    118
 FORTRAN SUPPR elements/te0231              sellenet N.SELLENET         195      0    195
 FORTRAN SUPPR utilitai/obcopy              sellenet N.SELLENET          82      0     82
 FORTRAN SUPPR utilitai/oblgap              sellenet N.SELLENET          59      0     59
 FORTRAN SUPPR utilitai/oblsop              sellenet N.SELLENET          47      0     47
FORTRAN90 AJOUT echange/mfesar               sellenet N.SELLENET          52     52      0
FORTRAN90 AJOUT echange/mfescr               sellenet N.SELLENET          48     48      0
FORTRAN90 AJOUT echange/mfeslr               sellenet N.SELLENET          59     59      0
FORTRAN90 AJOUT echange/mfesnb               sellenet N.SELLENET          41     41      0
FORTRAN90 AJOUT echange/mfmscr               sellenet N.SELLENET          48     48      0
FORTRAN90 AJOUT echange/mfmsle               sellenet N.SELLENET          49     49      0
FORTRAN90 AJOUT echange/mfmsnb               sellenet N.SELLENET          41     41      0
FORTRAN90 MODIF echange/mfgaue               sellenet N.SELLENET          49      6      6
FORTRAN90 MODIF echange/mfgaui               sellenet N.SELLENET          50      8      6
FORTRAN90 MODIF utilitai/ib1mai              courtois M.COURTOIS          29      5      1
FORTRAN90 MODIF utilitai/mpichk              courtois M.COURTOIS         148      6      5
FORTRAN90 MODIF utilitai/mpicmw              courtois M.COURTOIS          72     11      2
FORTRAN90 MODIF utilitai/mpisst              courtois M.COURTOIS          94      5      4
FORTRAN90 MODIF utilitai/mpistp              courtois M.COURTOIS          70     12      5
       H MODIF include/aster                courtois M.COURTOIS          76      3      3
  PYTHON AJOUT Macro/assemblage_ops          alarcon A.ALARCON          201    201      0
  PYTHON MODIF Comportement/kit_hhm         foucault A.FOUCAULT          55      2      2
  PYTHON MODIF Comportement/kit_hm          foucault A.FOUCAULT          55      2      2
  PYTHON MODIF Comportement/kit_thhm        foucault A.FOUCAULT          55      2      2
  PYTHON MODIF Comportement/kit_thm         foucault A.FOUCAULT          55      2      2
  PYTHON MODIF Comportement/vmis_john_cook      proix J-M.PROIX           39      2      2
  PYTHON MODIF Macro/defi_sol_miss_ops        devesa G.DEVESA            98      7      2
  PYTHON MODIF Macro/dyna_iss_vari_ops        devesa G.DEVESA           668    107     30
  PYTHON MODIF Macro/exec_logiciel_ops        assire A.ASSIRE           489      2      2
  PYTHON MODIF Macro/macr_recal_ops          alarcon A.ALARCON          729      2      2
  PYTHON MODIF Macro/macro_mode_meca_ops     alarcon A.ALARCON          263    142     13
  PYTHON MODIF Macro/post_rupture_ops         ladier A.LADIER           815     93     48
  PYTHON MODIF Macro/reca_mac                alarcon A.ALARCON          130      5      4
  PYTHON MODIF Macro/recal                   alarcon A.ALARCON         1577     22      1
  PYTHON MODIF Messages/algeline2            alarcon A.ALARCON          459     49      2
  PYTHON MODIF Messages/algeline3            alarcon A.ALARCON          509     11      1
  PYTHON MODIF Messages/algorith2           sellenet N.SELLENET         259      1      5
  PYTHON MODIF Messages/algorith5              berro H.BERRO            346      2      8
  PYTHON MODIF Messages/appelmpi            courtois M.COURTOIS          75      7      2
  PYTHON MODIF Messages/calculel4           sellenet N.SELLENET         439      1      6
  PYTHON MODIF Messages/elements2            tardieu N.TARDIEU          208      2      6
  PYTHON MODIF Messages/elements4           sellenet N.SELLENET         242      5      2
  PYTHON MODIF Messages/matrice0             alarcon A.ALARCON           77     28      2
  PYTHON MODIF Messages/mecanonline9         geniaut S.GENIAUT          138      6      1
  PYTHON MODIF Messages/med                 sellenet N.SELLENET         574      6      1
  PYTHON MODIF Messages/miss0                 devesa G.DEVESA           145      5      1
  PYTHON MODIF Messages/modal                alarcon A.ALARCON           79     53      2
  PYTHON MODIF Messages/rupture0             geniaut S.GENIAUT          567      2      2
  PYTHON MODIF Messages/rupture1              ladier A.LADIER           366      2      6
  PYTHON MODIF Miss/miss_calcul               devesa G.DEVESA           469     17      3
  PYTHON MODIF Miss/miss_fichier_interf       devesa G.DEVESA           635    189      2
  PYTHON MODIF Miss/miss_post                 devesa G.DEVESA           951      7      1
  PYTHON MODIF Miss/miss_resu_aster           devesa G.DEVESA           321    134      2
  PYTHON MODIF Miss/miss_utils                devesa G.DEVESA           246      2      2
  PYTHON MODIF SD/sd_xfem                    geniaut S.GENIAUT          154      4      5
  PYTHON SUPPR Macro/macro_matr_asse_ops     alarcon A.ALARCON            0      0      0


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :   32        6426      6426             +6426
 MODIF :  462      221220      5466    5859      -393
 SUPPR :   18        2184              2184     -2184
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :  512      229830     11892    8043     +3849 
