========================================================================
Version 11.3.7 du : 06/02/2013
========================================================================


-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR alarcon      ALARCON Albert         DATE 02/05/2013 - 04:55:46

--------------------------------------------------------------------------------
RESTITUTION FICHE 012636 DU 2008-10-16 08:44:10
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    MOD3 - DYNA_TRAN_MODAL : algo en temps
FONCTIONNALITE
   Contexte
   -----------------
   Dans le but d'am√©liorer les performances de calcul de l'op√©rateur DTM, en particulier en
   pr√©sence de non-lin√©arit√©s, un nouveau sch√©ma d'int√©gration √† pas de temps adaptatif
   semblait n√©cessaire, notamment au vu des performances des sch√©mas actuels ADAPT_ORDRE1 et
    ADAPT_ORDRE2.
   Pour cela deux nouveaux sch√©mas d'int√©gration faisant partie de la famille des sch√©mas de
   Runge-Kutta sont propos√©s¬†:  le sch√©ma de Dormand-Prince DOPRI54 et le sch√©ma de
   Bogacki-Shampine BOSHA32.
   Ces sch√©mas √©valuent le pas de temps optimal en contr√¥lant l'erreur de quadrature
   d'int√©gration entre les estimations d'ordre 5-4 pour DOPRI54 et 3-2 pour BOSHA32.
   
   On restitue donc ces sch√©mas dans DTM dans le cadre de cette fiche
   
   Les sch√©mas restitu√©s ont √©t√© cod√©s pour √™tre compatibles, en principe, avec toutes les
   possibilit√©s de non-lin√©arit√© disponibles dans DTM √† l'exception de LAME_FLUIDE. 
   
   
   Nouveaut√©s catalogue
   ---------------------
   Pour l'op√©rateur Dyna_Tran_Modal, et par extension Dyna_Vibra, on dispose maintenant sous
   le mot cl√© SCHEMA_TEMPS  des deux possibilit√©s suivantes¬†:
   
   SCHEMA_TEMPS=_F(SCHEMA='RUNGE_KUTTA_54',TOLERANCE=xxx) 
   SCHEMA_TEMPS=_F(SCHEMA='RUNGE_KUTTA_32',TOLERANCE=xxx) 
   
   dont la correspondance avec les sch√©mas cit√©s plus haut se fait par l'ordre ( 54 ou  32 ). 
   Le mot cl√© TOLERANCE permet de contr√¥ler la tol√©rance voulue entre les ordres en question
   et il s'agit d'un param√®tre utilisateur. Par d√©faut elle est fix√©e √† 1e-3.
   
   
   Nouveaut√©s Fortran
   ---------------------
   Une nouvelle routine g√©n√©rique pour tout type de sch√©ma de Runge-Kutta est introduite ‚Üí
   mdruku.f
   Elle est appel√©e par les routines ch√¢peau mdtr74 (superposition modale) et ssdt74
   (sous-structuration) de DTM si le choix d'un algorithme de type Runge-Kutta est fait. A
   l'int√©rieur, d'autres nouvelles sous-routines sp√©cifiques aux sch√©mas de Runge-Kutta sont
   appel√©es lors de l'int√©gration (mddp54.f , mdbs32.f, concrk.f)
   
   De mani√®re macroscopique¬†:
   La routine mdruku prepare l'int√©gration, fait la boucle en temps et restitue le r√©sultat
   de l'int√©gration dans un objet conforme √† la SD dyna_gene. Elle g√®re donc la taille
   variable des objets du fait du pas de temps variable.
   
   La routine mddp54 fait l'estimation par quadrature de l'√©tat √† l'instant suivant par la
   m√©thode de DOPRI54 et donne aussi l'estimation de l'erreur.
   
   La routine mdbs32 fait l'estimation par quadrature de l'√©tat √† l'instant suivant par la
   m√©thode de BOSHA32 et donne aussi l'estimation de l'erreur.
   
   La routine concrk permet de concatener l'ensemble d'objets jeveux temporaires n√©cessaires
   au stockage du r√©sultat d'int√©gration qui ont √©t√© cr√©es par mdruku lors de l'int√©gration.
   
   
   Cas test de validation
   ----------------------
   Les cas-test de validation suivants ont √©t√© enrichis avec les deux nouveaux sch√©mas
   d'int√©gration¬†:
   
   sdld22b, sdnd104a, sdld102a, sdld13a,sdld321b, sdld325a,sdld325b
   
   
   Documentation impact√©e¬†:
   -------------------------
   U4.53.21 ‚Üí Dyna_Tran_Modal
   U4.53.03 ‚Üí Dyna_Vibra
   R5.06.04 ‚Üí Algorithmes d'int√©gration de l'op√©rateur Dyna_Tran_Modal
   Documentation cas test= v2.01.22,v5.01.104,v2.01.102,v2.01.103,v2.01.321,v2.01.325
   
   Autres impacts collat√©raux
   ---------------------------
   Fortran¬†: mdallo (possiblit√© de cr√©er des objets sur base volatile ou globale), mdtr74,
   ssdt74, mdptem, ecresu, limsst,mdall2, mptran, op0060.
   
   Capy/py¬†: dyna_tran_modal.capy, dyna_vibra.capy, dyna_vibra_ops.py
   
   Messages¬†: algorith3.py, algorith5.py
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : U4.53.21,U4.53.03,R5.06.04,v2.01.22,v5.01.104,v2.01.102,v2.01.103,v2.01.321,v2.01.325
VALIDATION
    sdld22b, sdnd104a, sdld102a, sdld13a,sdld321b, sdld325a,sdld325b
NB_JOURS_TRAV  : 30.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 020009 DU 2012-11-27 17:25:36
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    DYNA_TRAN_MODAL : variable TCF inutile (MDFNLI)
FONCTIONNALITE
   Probl√®me
   *************
   Lors de la cr√©ation des sources concernant les nouveaux sch√©mas d'int√©gration de
   Runge-Kutta √† pas adaptatif (DTM), il a √©t√© constat√© que la routine mdfnli avait une
   variable d'entr√©e (TCF) qui n'est plus utile.
   
   Modification
   *************
   On supprime la variable TCF de mdfnli et on modifie les routines qui l'appellent, √† savoir
   mdeul1, mdadap et mddevo.
   
   Restitution faite au m√™me temps que issue12636, validation comprise.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    valid√© par issue12636
NB_JOURS_TRAV  : 0.01
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR bargelli     BARGELLINI Renaud      DATE 05/02/2013 - 10:16:52

--------------------------------------------------------------------------------
RESTITUTION FICHE 019964 DU 2012-11-20 10:27:59
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    RUPT : S'affranchir des copeaux pour le calcul de Gp en 2D
FONCTIONNALITE
   BUT RECHERCHE
   ***********************
   Actuellement, l'approche ÈnergÈtique Gp nÈcessite l'utilisation d'un maillage ‡
   morphologie particuliËre (dÈfinition de zones ‡ gÈomÈtrie spÈcifique appelÈe copeaux).
   Le livrable Anode L3.1a a pour objectif de permettre l'utilisation d'un maillage
   quelconque (mais suffisamment fin) en fond d'entaille pour les problËmes 2D.
   
   
   
   ACTION REALISEE
   ***********************
   CrÈation d'une macro CALC_GP, spÈcifique au 2D pour l'instant.
   
   Cette macro permet le calcul du paramËtre ÈnergÈtique ‡ partir d'un maillage comportant
   dÈj‡ des copeaux ou ‡ partir d'un maillage fin quelconque prÈsentant une entaille.
   
   La macro donne en sortie systÈmatique une table complËte du paramËtre ÈnergÈtique ‡ chaque
   instant pour les diffÈrents copeaux ; de faÁon facultative, on peut obtenir en plus une
   table donnant simplement le max du paramËtre ‡ chaque instant ; dans le cas d'un maillage
   quelconque, on peut visualiser le champ des copeaux crÈÈs afin de vÈrifier sa dÈfinition.
   
   La dÈfinition automatique se base sur des champs valant 1 dans le copeau et 0 ailleurs. On
   crÈÈ donc autant de champs que de copeaux demandÈs. Il n'a pas ÈtÈ possible de se servir
   d'un seul champ contenant l'ensemble des informations.
   
   VALIDATION
   ***************************************
   Le cas test ssnp131a est modifiÈ ; il utilise toujours POST_GP, et compare les rÈsultats
   obtenus avec CALC_GP dans les 2 cas de dÈfinition des copeaux (automatique ou maillÈ).
   On ajoute le cas ssnp131b dans lequel le maillage est quelconque.
   L'ancien ssnp131b, 3D, est placÈ en ssnp131c.
   
   IMPACT
   ***************************************
   informatique :
   calc_gp.capy
   calc_gp_ops.py
   rupture01.py
   documentaire :
   V6.03.131
   U4.82.?? (en cours, pas de numero !)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : V6.03.131
VALIDATION
    ssnp131
NB_JOURS_TRAV  : 10.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR courtois     COURTOIS Mathieu       DATE 05/02/2013 - 10:59:57

--------------------------------------------------------------------------------
RESTITUTION FICHE 020301 DU 2013-02-01 09:36:15
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    En NEW11.03.06, le cas-test ssnv213a s‚Äôarr√™te en erreur fatale sur Rocks et Calibre7.
FONCTIONNALITE
   Le test ssnv213a √©choue car le fichier datg contenant les propri√©t√©s mat√©riaux est 
   absent.
   Le fichier a √©t√© copi√© sur Rocks, Calibre7, Ivanoe.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    ssnv213a
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 020265 DU 2013-01-25 17:12:51
TYPE evolution concernant astk (VERSION )
TITRE
    AR14 : Utiliser les .export dans les astouts
FONCTIONNALITE
   Cette fiche traite du support des .export pour les cas-tests en remplacement des .para.
   La syntaxe est la suivante (.export standard) :
   
   P time_limit 200
   P memory_limit 512
   P ncpus 1
   P testlist rest
   F comm zzzz241a.comm D 1
   F comm zzzz241a.com1 D 1
   F libr zzzz241a.11 D 11
   
   
   Les param√®tres autoris√©s sont:
   - time_limit, memory_limit, mem_aster
   - ncpus, mpi_nbcpu, mpi_nbnoeud
   - testlist (on peut mettre plusieurs noms)
   
   Les noms de fichiers doivent √™tre sans r√©pertoire. Uniquement des fichiers en donn√©es
   strictement n√©cessaires.
   
   Pour as_run 1.12.0, l'astout utilise '<test>.export' s'il est pr√©sent, sinon il cherche le
   '<test>.*'.
   
   Rem: on a pris memory_limit, time_limit √† cause des diff√©rences d'unit√© (min/secondes,
   ko/Mo) entre memjob/mem_job, tpsjob/tps_job... Il faudrait g√©n√©raliser l'utilisation de
   ces 'limits'.
   
   Fonctionnement avec --get:
   'as_run --get --all zzzz241a' prend tous les fichiers zzzz241a.*, y compris le .export
   
   Plus int√©ressant: 'as_run --get_export zzzz241a' fournit un .export compl√©t√© afin d'√™tre import√© 
   dans astk. C'est ce que fait, Fichier/Importer/cas-test...
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : D1.02.05
VALIDATION
    astout + unittest as_run
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 020299 DU 2013-02-01 09:30:20
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    En NEW11.03.06, les cas-tests ssnp150b, ssnv219b, c, d, tplp107a et b s‚Äôarr√™tent en erreur fatale sur Rocks.
FONCTIONNALITE
   Probl√®me
   --------
   
   Les tests ssnp150b, ssnv219b, c, d, tplp107a et b s'arr√™tent en Floating Point Exception sur 
   Rocks depuis la 11.3.6.
   
   
   Analyse & Correction
   --------------------
   
   Un test tr√®s simple: DEBUT() / import sympy / FIN() met en √©vidence le probl√®me.
   
   C'est un OVERFLOW qui se produit dans sympy.mpmath.math2 (pour le trouver, on vide les __init__ 
   de chaque package pour d√©tecter l'instruction qui pose probl√®me).
   On y fait: INF = 1e300*1e300
   
   Or dans Code_Aster, on intercepte les divisions par z√©ro, overflows et invalids.
   Donc l'import √©choue, c'est "normal".
   
   L'erreur se produisant d√®s l'import, on peut contourner le probl√®me.
   En effet, un import n'est r√©ellement fait qu'une fois. Les fois suivantes, python retourne la 
   r√©f√©rence du module d√©j√† import√©.
   On va donc importer ce module le plus t√¥t possible et surtout avant que l'on configure 
   l'interception des FPE. On le fait dans E_SUPERV.py. On pr√©voit une liste de modules en 
   commentant la raison pour laquelle on met en cache l'import.
   
   
   Pourquoi les tests n'ont pas cass√©s avant la 11.3.6 ? Ils auraient au moins d√ª plant√© d√®s la 
   11.3.5. Avant 11.3.5, le 'import sympy' avant DEBUT pouvait sauver la mise.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    tplp107a
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR lefebvre     LEFEBVRE Jean-Pierre   DATE 05/02/2013 - 10:59:59

--------------------------------------------------------------------------------
RESTITUTION FICHE 020003 DU 2012-11-27 06:25:53
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    AR05 Optimisation Memoire dans les macros
FONCTIONNALITE
   Cette demande fait suite au constat que dans la macro-commande PERM_MAC3COEUR on a besoin 
   d'une m√©moire importante due aux appels r√©p√©t√©s aux commandes CREA_CHAMP, CREA_RESU...
   
   Le diagnostic initial n'est pas bon. La macro lib√®re bien les objets JEVEUX associ√©s aux
   diff√©rents
   concepts. Il est normal que la m√©moire consomm√©e 'VmSize' croisse jusqu'√† la limite fix√©e
   au lancement. D√®s que cette limite est atteinte l'appel au m√©canisme de lib√©ration
   (JJLDYN) doit permettre d'allouer de nouveaux objets. 
   Dans cette √©tude, le probl√®me est ailleurs. Malheureusement je n'ai pas r√©ussi √†
   reproduire le plantage avec
   le code instrument√©. Par contre j'ai d√©tect√© une l√©g√®re anomalie dans la routine JJALLS
   (instruction ligne 132 o√π le cumul des tailles des objets lib√©r√©s √©tait divis√© par LOIS et
   compar√© √† une valeur en entiers) qui a fait l'objet d'une correction en 11.2.26. 
   
   La fiche est √† mettre sans suite.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    √©tude fournie
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR delmas       DELMAS Josselin        DATE 05/02/2013 - 09:30:08

--------------------------------------------------------------------------------
RESTITUTION FICHE 020298 DU 2013-02-01 09:27:13
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    En NEW11.03.06, le cas-test sdls504a s‚Äôarr√™te en erreur fatale sur Calibre7.
FONCTIONNALITE
   Probl√®me :
   ========
   En NEW11.03.06, le cas-test sdls504a s‚Äôarr√™te en erreur fatale sur Calibre7 en manque de
   m√©moire.
   
   Correction :
   ==========
   On passe la limite m√©moire de 256Mo √† 512Mo
   
   Impact :
   ======
   sdls504a.export
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    passage du test
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 020232 DU 2013-01-22 15:06:36
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    MN18 - [FORUM] POST_CHAMP ne marche pas apr√®s un transitoire dynamique
FONCTIONNALITE
   Probl√®me :
   ========
   POST_CHAMP n'accepte pas les r√©sultats issus d'un calcul dynamique transitoire sur base
   physique (dyna_trans).
   
   Correction :
   ==========
   Il n'y a pas de limitation th√©orique. On permet dans POST_CHAMP, les m√™mes types de SD que
   pour CALC_CHAMP.
   
   On v√©rifie pour les dyna_trans en ajoutant CALC_CHAMP+POST_CHAMP dans sdlx100a.
   
   Impacts :
   =======
   CAPY:
   post_champ.capy
   
   TESTS:
   sdlx100a.comm
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    passage de la liste complete
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 019195 DU 2012-07-17 12:01:34
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    MN18 - Am√©lioration de l'ergonomie de CALC_CHAMP / SIRO_ELEM
FONCTIONNALITE
   Demande :
   =======
   Cette fiche pointe deux probl√®mes d'architecture pour le calcul de l'option SIRO_ELEM :
   - le calcul n'est pas possible lorsqu'une maille surfacique est "coinc√©e" entre deux
   mailles volumiques ;
   - il faut faire un calcul pr√©alable de SIGM_ELNO sur tout le mod√®le (volumique) avant de
   pouvoir calculer SIRO_ELEM, c'est √† l'encontre de l'esprit CALC_CHAMP.
   
   R√©alisation :
   ===========
   Le probl√®me des mailles "coinc√©es" a d√©j√† √©t√© dans une autre fiche issue19628 : on choisit
   celle qui est dans la direction de la normale √† la surface pour recopier les valeurs des
   contraintes sur la face.
   
   Pour r√©soudre le second probl√®me, on modifier le ligrel quand SIRO_ELEM est demand√©. A la
   place de ne prendre que les mailles de peau donn√©es par l'utilisateur, on prend les
   mailles de peau et les mailles sous-jacentes. On r√©tablit la d√©pendance dans le catalogue.
   Ainsi, SIGM_ELNO est calcul√© sur les mailles volumiques et SIRO_ELEM sur les mailles de
   peau. L'utilisateur n'est plus oblig√© de proc√©der en deux temps et ne devra plus se
   pr√©occuper du calcul de SIGM_ELNO.
   
   Pour valider le fonctionnement, on modifie deux tests dans lesquels on supprime le calcul
   de SIGM_ELNO.
   
   Par ailleurs TOUT='OUI' n'√©tait pas sympa puisqu'on ne scrutait que MAILLE ou GROUPE_MA.
   Ainsi la liste des mailles est vide et on se plante car on ne trouve aucune maille de peau.
   
   J'ai fait en sorte de lire TOUT, MAILLE ou GROUPE_MA puis de ne garder que les mailles 2D.
   
   Ainsi l'option marche √† tous les coups.
   
   Enfin j'ai vu avec le cas fourni qu'avec mon d√©veloppement sans reuse, on plantait car
   on ne trouvait pas SIGM_ELNO. On ne cherchait que sur le RESUIN et pas sur RESUOU. J'ai aussi 
   corrig√© ce probl√®me.
   
   Dans le cas o√π SIGM_ELNO n'a pas √©t√© calcul√© sur les "bonnes" mailles volumiques, on a un
   plantage peu explicite. J'am√©liore le message :
   
   """
    Le calcul du champ SIGM_ELNO n'a pas √©t√© fait sur la maille volumique %(k1)s qui borde
    la maille surfacique %(k2)s.
   
    Conseils :
     Il faut faire le calcul du champ SIGM_ELNO sur les √©l√©ments volumiques de l'autre "cot√©"
     de la face en choisissant le bon groupe de mailles soit en faisant le calcul sur tout
     le volume.
     Il est aussi possible de supprimer le calcul pr√©alable de SIGM_ELNO, le calcul sera fait
     automatiquement sur les bonnes mailles volumiques.
   """
   
   
   Impacts :
   =======
   CATA:
   siro_elem.cata
   
   F:
   calcop.f  ccchel.f  ccpara.f  ccvepo.f  mearcc.f  medom2.f  srlima.f  srmedo.f
   
   PY:
   calculel5.py
   
   TESTS:
   sslv04a.comm  sslv04b.para  sslv04c.para  sslv04d.para  zzzz325a.comm  zzzz325a.para
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : u4.81.04
VALIDATION
    passage de la liste des tests SIRO_ELEM
NB_JOURS_TRAV  : 3.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR flejou       FLEJOU Jean Luc        DATE 02/04/2013 - 03:36:02

--------------------------------------------------------------------------------
RESTITUTION FICHE 020243 DU 2013-01-23 15:53:18
TYPE anomalie concernant Code_Aster (VERSION 11.3)
TITRE
    En NEW11.03.05, le cas-test zzzz331a est NOOK sur Aster4, Rocks et Calibre7.
FONCTIONNALITE
   Passage du cas test.
   
   Modification des VALE_CALC.
   
   Pas de r√©sultats faux.
   M√©thode de v√©rification avec une surcharge du code, en attendant de pouvoir faire mieux !
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Passage du cas test
NB_JOURS_TRAV  : 0.01
--------------------------------------------------------------------------------
RESTITUTION FICHE 014817 DU 2010-03-18 16:16:02
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    MN09 Amelioration potentielle temps de calcul SNS  - STAT_NON_LINE : Prise en compte de tous les termes "thermique" dans le 2nd membre
FONCTIONNALITE
   L'analyse est termin√©e, document CR-AMA-2012.224.
   Une synth√®se est pr√©sent√©e dans le document joint.
   
   Fiche issue20307 pour am√©liorer la convergence dans certain cas.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    sans objet
NB_JOURS_TRAV  : 8.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR foucault     FOUCAULT Alexandre     DATE 02/05/2013 - 09:01:52

--------------------------------------------------------------------------------
RESTITUTION FICHE 020240 DU 2013-01-23 12:32:58
TYPE anomalie concernant Code_Aster (VERSION 10.5)
TITRE
    Variable non initialisee detectee a l'execution en NEW11.3.5 dans la routine LKIJAC
FONCTIONNALITE
   Variable utilise sans initialisation - DPHIDX dans LKIJAC
   ---------------------------------------------------------
   Pas de risque de resultats faux puisqu'il s'agit de la routine permettant l'evaluation de
   la matrice jacobienne. Au pire, elle n'est pas exacte et produit une divergence locale et
   un echec de la loi de comportement.
   
   Action realisee:
   ----------------
   La fonction test (IF...) permettant ensuite d'utiliser la variable DPHIDX devient
   identique √† celle ayant permis sa definition.
   
   Validation:
   ----------
   Le cas-test SSNV206C ne presente plus l'anomalie relevee
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    CAS-TESTS
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR desroche     DESROCHES Xavier       DATE 02/05/2013 - 08:41:34

--------------------------------------------------------------------------------
RESTITUTION FICHE 017449 DU 2011-08-31 12:42:02
TYPE evolution concernant Code_Aster (VERSION )
TMA : DeltaCad
TITRE
    AR01 Developper les options DEGE_ELGA et DEGE_ELNO pour les COQUES_3D
FONCTIONNALITE
   1. Objectif
   -----------
   D√©velopper les options DEGE_ELGA et DEGE_ELNO pour les COQUE_3D.
   
   2. Analyse
   ----------
   Les d√©formations g√©n√©ralis√©es Eij, Kij et GAi sont reli√©es aux d√©placements de la fa√ßon
   suivante:
         E  = [Bm]{Un}  --> d√©formations de membrane
         K  = [Bf]{Un}  --> d√©formations de courbure
        GA  = [Bc]{Un}  --> d√©formations de cisaillement
   ou 
      - Bm : repr√©sente la matrice de passage des d√©formations membranaires 
             au champ de d√©placement
      - Bf : repr√©sente la matrice de passage des d√©formations de courbures 
             au champ de d√©placement
      - Bc : repr√©sente la matrice de passage des d√©formations de cisaillement 
             au champ de d√©placement
      - Un : repr√©sente le champ de d√©placement 
   
   3. D√©veloppement 
   ----------------
   3.1 DEGE_ELGA
   La routine vdxsig calcule les d√©formations locales EPij sur les peaux SUP, MOY et INF 
   pour chacune des couches. Pour ces calculs, vdxsig calcule les matrices Bm(BTDM), Bf
   (BTDF) et Bc(BTDS). On utilise donc ces matrices pour calculer les d√©formations 
   g√©n√©ralis√©es.
   
         E  = [BTDM]{Un}  --> d√©formations de membrane
         K  = [BTDF]{Un}  --> d√©formations de courbure
        GA  = [BTDS]{Un}  --> d√©formations de cisaillement
   
   On calcule l'option DEGE_ELGA en appelant la routine te0410. Pour cela on cr√©e une
   nouvelle routine "vdxedg" √† partir de la routine vdxsig. Les d√©formations g√©n√©ralis√©es
   sont exprim√©es dans le rep√®re local utilisateur. Le changement de rep√®re INTRINSEQUE -
   > UTILISATEUR est effectu√© dans la routine te0410. 
   
   3.2 DEGE_ELNO
   Le calcul de l'option EFGE_ELNO est effectu√© en int√©grant les contraintes dans 
   l'√©paisseur (routine vdefge) aux points d'int√©gration. On propose de cr√©er une 
   nouvelle routine (vddege) bas√©e sur vdefge pour calculer DEGE_ELNO √† partir de 
   DEGE_ELGA. Les d√©formations g√©n√©ralis√©es sont exprim√©es dans le rep√®re local 
   utilisateur. Le changement de rep√®re INTRINSEQUE -> UTILISATEUR est effectu√© dans la 
   routine te0410.
   
   4. VALIDATION
   -------------
   => Membrane : ssls110 "Stabilit√© d'une plaque carr√©e comprim√©e"
       - Mod√©lisation A : QUAD9
       - Mod√©lisation B : TRIA7 
      On teste les d√©formations de membrane par rapport a la solution analytique.
      On en profite pour mettre en coh√©rence la REFERENCE avec la doc => 
   REFERENCE='ANALYTIQUE'
   
   => Flexion : ssls118" Plaque carr√©e pos√©e soumise a une pression sinuso√Ødale". 
       - Mod√©lisation E : TRIA7
       - Mod√©lisation F : QUAD9 
      On teste les d√©formations de courbure par rapport a la solution analytique.
   
   => Cas test ssls200 "M√©canique lin√©aire mod√©lisation de coque". 
     Ce cas-test valide les √©l√©ments de coques. On le compl√®te par le calcul de DEGE_ELGA 
   et DEGE_ELNO  sur les COQUE_3D. Comme on ajoute dans les calculs de DEGE_ELGA et 
   DEGE_ELNO les mailles Q9 et T7, on modifie la valeur de r√©f√©rence du TEST_RESU
   (...,TYPE_TEST='SOMM_ABS',...).
   
   - Liste restreinte + cas-tests utilisant la mod√©lisation COQUE_3D
   
   5. DOCUMENTATION
   ---------------- 
    Doc U 
       - Actualisation de la doc u2.02.01
    Doc V
      cas-test ssls110 [V3.03.110] ajout :
       - de la formule analytique des d√©formations de membranes,
       - des valeurs de r√©f√©rence pour les mod√©lisations a et b
      cas-test ssls118 [V3.03.118] ajout :
       - de la formule analytique donnant l'expression des courbures
      cas-test ssls200 [V3.03.200] :
       - Mise √† jour des valeurs de r√©f√©rence
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : u2.02.01 V3.03.110 V3.03.118 V3.03.200
VALIDATION
    ssls110 ssls118 ssls200
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR lefebvre     LEFEBVRE Jean-Pierre   DATE 02/04/2013 - 05:59:43

--------------------------------------------------------------------------------
RESTITUTION FICHE 020250 DU 2013-01-24 12:22:30
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    AR14 : Changer les .para en .export
FONCTIONNALITE
   Afin de r√©duire la taille du futur d√©p√¥t des fichiers sources de Code_Aster il a √©t√©
   entrepris un grand nettoyage des fichiers des tests. Un gain significatif est obtenu en
   mutualisant les gros fichiers de donn√©es associ√©es aux maillages (issue20255), mais aussi
   en supprimant les donn√©es inutiles (maillages en doublon dans des formats diff√©rents,
   fichiers de r√©sultats restitu√©s √† tort, fichier associ√©s √† des unit√©s logiques ne figurant
   pas de le fichier de commandes). Afin de r√©aliser ce travail, on modifie l'organisation
   des tests. On introduit un fichier .export (syntaxe asrun), obligatoire lors de la
   restitution, permettant de stocker √† la fois les param√®tres d'ex√©cution et la liste des
   fichiers de donn√©es n√©cessaires au test, on peut ainsi partager des donn√©es communes entre
   les mod√©lisations et entre tests diff√©rents. Le fichier .para devient inutile. La syntaxe
   du fichier .export est la suivante, par exemple perf009d :
   
   P time_limit 1200            -> limite de temps cpu en secondes
   P memory_limit 2882          -> limite m√©moire en Mo de l'ex√©cution
   P ncpus 1                    -> nombre de CPUs OpenMP   
   P mpi_nbcpu 1                -> nombre de CPUs MPI
   P mpi_nbnoeud 1              -> nombre de noeuds MPI
   P testlist PI                -> affectation du test (liste complete C, restreinte R,
   performance P, mpi I, debug D) 
   
   F comm perf009d.comm D 1     -> F fichier ou R r√©pertoire, type astk associ√©, nom relatif
   du fichier, D donn√©es ou R r√©sultat, unit√© logique associ√©e
   F mmed perf009a.mmed D 20
   
   Les scripts de l'AGLA et d'asrun ont √©t√© modifi√©s pour prendre en compte cette nouvelle
   syntaxe lors du passage des tests et de la restitution (pre_eda, eda, astout) et effectuer
   un minimum de v√©rification. 
   On supprime ainsi 1369 fichiers (environ 961 Mo).
   Par ailleurs le fichier de maillage au format MED du test adlv301a est reconstruit, il
   passe de 2.48 Mo √† 0.21 Mo.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : D1.02.05
VALIDATION
    tests impact√©s par les renommages et les destructions
NB_JOURS_TRAV  : 5.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR perony       PERONY Raphael         DATE 04/02/2013 - 15:48:10

--------------------------------------------------------------------------------
RESTITUTION FICHE 020143 DU 2013-01-03 16:31:12
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Extension de CALC_MAC3COEUR au cas mono-assemblage
FONCTIONNALITE
   -----------------------
   OBJET :
   -----------------------
   L'objet de cette fiche est d'√©tendre CALC_MAC3COEUR au cas d'un coeur mono-assemblage. Le
   mot cl√© TYPE_COEUR doit pouvoir prendre la valeur 'MONO'.
   L'objectif est de pouvoir simuler le comportement d'un seul assemblage combustible, tout
   en gardant la m√™me macro-commande.
   
   De plus, l'utilisateur doit pouvoir choisir entre :
      * un effort de maintien fixe impos√© sur l'embout sup√©rieur de l'assemblage combustible,
   pour reproduire fid√®lement les essais exp√©rimentaux qui servent notamment √† recaler le
   mod√®le ;
      * ou un effort de maintien engendr√© par le d√©placement de la Plaque Sup√©rieur de Coeur
   (PSC) impos√© aux ressorts de maintien, comme c'est le cas pour un coeur r√©el
   multi-assemblages (cf. issue19170).
   
   
   -----------------------
   SOLUTION PROPOSEE :
   -----------------------
   Le cas 'MONO' est ajout√© aux valeurs possibles du mot cl√© TYPE_COEUR de CALC_MAC3COEUR.
   
   Il faut aussi introduire deux nouveaux mots cl√©s : TYPE_MAINTIEN et FORCE_MAINTIEN.
   
   Dans les cas de coeur r√©el (TYPE_COEUR == 'TEST', '900', '1300', 'N4', 'EPR'), le mot cl√©
   TYPE_MAINTIEN est facultatif et n'autorise que la valeur 'DEPL_PSC' d√©crite
   ci-dessous'(c'est aussi la valeur par d√©faut).
   Ainsi, la syntaxe actuelle des fichiers de commandes utilisateurs n'est pas √† modifier.
   
   Dans le cas TYPE_COEUR == 'MONO', le mot cl√© TYPE_MAINTIEN est obligatoire, sans valeur
   par d√©faut, et peut prendre les valeurs 'DEPL_PSC' ou 'FORCE' :
     * Si TYPE_MAINTIEN=='DEPL_PSC', l'effort de maintien est alors engendr√© par un
   d√©placement impos√© dont la valeur est renseign√© dans le fichier datg du coeur consid√©r√©
   (comme dans le cas des coeurs r√©els). Dans ce cas le 2√®me mot cl√© FORCE_MAINTIEN n'est pas
   attendu.
     * Si TYPE_MAINTIEN=='FORCE', l'effort de maintien est alors introduit par un effort
   impos√© fixe dont la valeur est donn√©e par le 2√®me mot cl√© FORCE_MAINTIEN, dont la valeur
   correspond √† l'intensit√© de la force.
   
   
   -----------------------------
   IMPACT calc_mac3coeur.capy :
   -----------------------------
   On compl√®te le fichier calc_mac3coeur.capy :
   TYPE_COEUR   =
   SIMP(statut='o',typ='TXM',into=("MONO","TEST","900","1300","N4","EPR"),position='global' ),
   
   
   On compl√®te aussi le bloc DEFORMATION du fichier calc_mac3coeur.capy par deux blocs
   conditionnels :
   
   DEFORMATION  = FACT(...   
          
   # choix du maintien dans le cas mono-assemblage
   b_maintien_mono = BLOC(condition = "TYPE_COEUR == 'MONO'", TYPE_MAINTIEN =
   SIMP(statut='o',typ='TXM',into=("FORCE","DEPL_PSC"), ),
    b_maintien_mono_force = BLOC(condition = "TYPE_MAINTIEN == 'FORCE'",
    fr="valeur de l'effort de maintien impos√©e",
    FORCE_MAINTIEN=SIMP(statut='o',typ='R', max=1),),),
                   
   # choix du maintien dans le cas d'un coeur √† plusieurs assemblages
   b_maintien_coeur = BLOC(condition = "TYPE_COEUR != 'MONO'",TYPE_MAINTIEN =
   SIMP(statut='f',typ='TXM',into=("DEPL_PSC",),defaut="DEPL_PSC" ),),),
   
   
   ------------------------------
   IMPACT calc_mac3coeur_ops.py :
   ------------------------------
   Si TYPE_COEUR=='MONO', on fait appel √† deux fonctions diff√©rentes selon la valeur de
   TYPE_MAINTIEN :
   
   if _DEFORMATION['TYPE_MAINTIEN'] == 'DEPL_PSC' :
     _F_EMBO  = _coeur.definition_effor_maintien_deplPSC(_MO_N)   
   else :      
     _F_EMBO  = _coeur.definition_effor_maintien(_MO_N,_DEFORMATION['FORCE_MAINTIEN'])
   
   
   De plus, si TYPE_COEUR=='MONO', on ne consid√®re pas de contact entre l'assemblage et les
   internes de cuve :
   if (_typ_coeur=="MONO"):
     _AVEC_CONTACT = 'NON'
   --> dans ce cas, on donne une valeur tr√®s petite √† la raideur de contact : 10 N/m.
   
   Remarques: un nouveau groupe de mailles 'RES_TOT' est utilis√© pour les appels aux
   diff√©rents √©l√©ments de contact du mod√®le. Il correspond √† l'union des groupes 'RES_CONT'
   (contact assemblage-assemblage) et 'RES_EXT'(contact assemblage-cuve). Dans le cas
   'MONO','RES_CONT' n'existe pas.
   
   
   -----------------------------
   IMPACT mac3coeur_coeur.py :
   -----------------------------
   D√©finition d'une nouvelle fonction : "definition_effor_maintien_force"
   
   Introduction d'un param√®tre de subdivision du pas de temps dans la fonction
   "definition_time", pour bien simuler, dans le cas TYPE_COEUR=='MONO', la charge et la
   d√©charge des essais de compression et de flexion.
   
   Ajout d'un pas de temps interm√©diaire T0b (entre T0 et T1) o√π seules la pesanteur et la
   force d'Archim√®de sont actives.
   
   
   -----------------------------
   IMPACT autres fichiers :
   -----------------------------
   Les fichiers suivants sont impact√©s dans une moindre mesure pour introduire 'MONO' :
    * perm_mac3coeur_ops.py --> ajout de 'MONO'
    * post_mac3coeur.capy --> ajout de 'MONO'
    * post_mac3coeur_ops.py --> ajout de tests (if) : pas d'affichage des lames d'eau
   inter-assemblage dans le cas 'MONO'
   
   Le fichier suivant est cr√©√© :
    * Coeur_MONO.datg
   
   
   Par ailleurs, un recalage des param√®tres materiaux de la liaison grille-crayon a √©t√©
   reconduit. Les fichiers suivants ont √©t√© modifi√©s:
   AF3G_GC_EB_REF_A.NOMI
   AF3G_GC_EH_REF_A.NOMI
   AF3G_GC_ME_REF_A.NOMI
   AFA_GC_EB_REF_A.NOMI
   AFA_GC_EH_REF_A.NOMI
   AFA_GC_ME_REF_A.NOMI
   
   
   
   -----------------------
   IMPACT UTILISATEUR :
   -----------------------
   Au niveau du fichier de commande, cela donne la syntaxe suivante :
   
   RESU_C1 = CALC_MAC3COEUR(TYPE_COEUR  = 'MONO',
                         TABLE_N     =  tabn,
                         MAILLAGE_N  =  MA1,
                         DEFORMATION = _F(UNITE_THYC   = 32,
                                          NIVE_FLUENCE = 0.,
                                          TYPE_MAINTIEN = 'FORCE',
                                          FORCE_MAINTIEN =9000.,
                                          ),)
   
   -----------------------
   VALIDATION :
   -----------------------
   Les cas-tests ssnl132a et ssnl132b sont supprim√©s. Ils simulaient respectivement les
   essais exp√©rimentaux de compression et de flexion d'un assemblage combustible, sans
   utiliser CALC_MAC3COEUR (fichier de commande classique).
   
   Ces cas-tests sont remplac√©s par trois nouveaux cas tests :
   * mac3c04a : essai de compression en utilisant CALC_MAC3COEUR.
   * mac3c04b : essai de flexion en utilisant CALC_MAC3COEUR.
   * mac3c04c : recalage avec MACR_RECAL du comportement de l'assemblage sur les essais de
   compression et de flexion. Le fichier esclave de MACR_RECAL correspond √† un fichier de
   commande classique, n'utilisant pas CALC_MAC3COEUR.
   
   
   La note associ√©e pour le descriptif des ph√©nom√®nes physiques est la suivante :
   H-T64-2012-01646-FR
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.90.11,V1.02.100, V1.02.103, V1.02.104 ,V1.02.105, U4.90.12,V6.02.132
VALIDATION
    mac3c01a, mac3c02a, mac3c03a, mac3c04a, mac3c04b, mac3c04c
NB_JOURS_TRAV  : 10.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR tardieu      TARDIEU Nicolas        DATE 02/04/2013 - 04:54:17

--------------------------------------------------------------------------------
RESTITUTION FICHE 020284 DU 2013-01-29 14:16:39
TYPE aide utilisation concernant Code_Aster (VERSION 10.5)
TITRE
    D√©finir un chargement fonction de l'espace 3D
FONCTIONNALITE
   Probl√®me :
   ---------
   Suite √† discussion avec le support Aster, j'ai cern√© le pb qui consiste essentiellement √† √™tre capable 
   d'interpoler un ensemble de valeurs dans l'espace.
   Aster est √©quip√© de tel outil pour des fonctions d'une variable ou des nappes mais pas des fonctions de 
   3 variables.
   
   Solution :
   ---------
   Le moyen le plus direct consiste √† utiliser les Radial Basis Function du module Scipy (technique √† 
   rapprocher de la m√©thode NUAGE_DEG_1 de la commande PROJ_CHAMP). 
   Je joins un petit exemple o√π je tire des points au hasard dans l'espace o√π j'interpole une fonction 
   connue. Ensuite, je compare les valeurs interpol√©es aux valeurs vraies. 
   On peut noter qu'en cas d'extrapolation, les diff√©rences peuvent √™tre importantes.
   D'o√π l'int√©r√™t d'√©chantillonner suffisamment sa fonction.
   
   Cette approche me semble √™tre la plus simple car, une fois la formule d√©finie en Python, on peut 
   l'utiliser dans AFFE_CHAR_MECA_F.
   
   Pour bien faire les choses, il faudrait faire produire un maillage et un champ correspondant √† 
   l'√©chantillonnage puis faire un appel √† PROJ_CHAMP/CAS_FIGURE='2.5D' puis transformer ce
   champ en champ de pression utilisable par AFFE_CHAR_MECA/EVOL_CHAR. C'est donc une approche plus pr√©cise 
   mais plus complexe.
   
   
   PS : On pourrait aussi utiliser la fonctionnalit√© LinearNDInterpolator 
   (http://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.LinearNDInterpolator.html#scipy.i
   nterpolate.LinearNDInterpolator) qui se base sur la construction d'un maillage de Delaunay et une 
   interpolation lin√©aire. Par contre, l'extrapolation n'est pas support√©e.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    sans objet
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

       C MODIF supervis/aster_exceptions    courtois M.COURTOIS         175      2      2
 CASTEST AJOUT mac3c04a                       perony R.PERONY           148    148      0
 CASTEST AJOUT mac3c04b                       perony R.PERONY           157    157      0
 CASTEST AJOUT mac3c04c                       perony R.PERONY           109    109      0
 CASTEST MODIF adlv301a                     lefebvre J-P.LEFEBVRE       171     12     15
 CASTEST MODIF forma30a                     lefebvre J-P.LEFEBVRE       161      4      4
 CASTEST MODIF forma30b                     lefebvre J-P.LEFEBVRE       370      6      6
 CASTEST MODIF mac3c01a                       perony R.PERONY           119      6      6
 CASTEST MODIF mac3c02a                       perony R.PERONY           289     28     42
 CASTEST MODIF mac3c03a                       perony R.PERONY           244     17     17
 CASTEST MODIF sdld102a                      alarcon A.ALARCON         1134    119      9
 CASTEST MODIF sdld103a                      alarcon A.ALARCON         1708    500      8
 CASTEST MODIF sdld22b                       alarcon A.ALARCON          989    332      3
 CASTEST MODIF sdld321b                      alarcon A.ALARCON         1007    406      3
 CASTEST MODIF sdld325a                      alarcon A.ALARCON         1446    540      3
 CASTEST MODIF sdld325b                      alarcon A.ALARCON         1594    603      3
 CASTEST MODIF sdls504a                       delmas J.DELMAS           276      3      5
 CASTEST MODIF sdlx100a                       delmas J.DELMAS           286     11      2
 CASTEST MODIF sdnd104a                      alarcon A.ALARCON         1006    324     16
 CASTEST MODIF ssls105b                    lebouvier F.LEBOUVIER        295    195      3
 CASTEST MODIF ssls110a                    lebouvier F.LEBOUVIER        260     74      6
 CASTEST MODIF ssls110b                    lebouvier F.LEBOUVIER        263     74      6
 CASTEST MODIF ssls118e                    lebouvier F.LEBOUVIER       1398     76      2
 CASTEST MODIF ssls118f                    lebouvier F.LEBOUVIER       1412     69      2
 CASTEST MODIF ssls200a                    lebouvier F.LEBOUVIER        411      5      5
 CASTEST MODIF sslv04a                        delmas J.DELMAS          2310     20     32
 CASTEST MODIF sslv04b                        delmas J.DELMAS          1240      2      2
 CASTEST MODIF sslv04c                        delmas J.DELMAS           932      2      2
 CASTEST MODIF ssnp131a                     bargelli R.BARGELLINI       290    144     33
 CASTEST MODIF ssnp131b                     bargelli R.BARGELLINI       192    111    204
 CASTEST MODIF ssnp150b                     courtois M.COURTOIS         617      1      3
 CASTEST MODIF ssnv219b                     courtois M.COURTOIS         628      1      3
 CASTEST MODIF ssnv219c                     courtois M.COURTOIS         551      1      3
 CASTEST MODIF zzzz325a                       delmas J.DELMAS           455      2      5
 CASTEST MODIF zzzz331a                       flejou J-L.FLEJOU         125      4      4
 CASTEST SUPPR ssnl132a.comm                  perony R.PERONY          1047      0   1047
 CASTEST SUPPR ssnl132b.comm                  perony R.PERONY          1099      0   1099
CATALOGU MODIF options/siro_elem              delmas J.DELMAS            32      4      4
CATALOGU MODIF typelem/gener_mecq32        lebouvier F.LEBOUVIER        313      8      3
CATALOPY AJOUT commande/calc_gp             bargelli R.BARGELLINI        65     65      0
CATALOPY MODIF commande/calc_mac3coeur        perony R.PERONY            63     26      5
CATALOPY MODIF commande/dyna_tran_modal      alarcon A.ALARCON          302      6      3
CATALOPY MODIF commande/dyna_vibra           alarcon A.ALARCON          475      6      3
CATALOPY MODIF commande/post_champ            delmas J.DELMAS           137      4      3
CATALOPY MODIF commande/post_mac3coeur        perony R.PERONY            52      3      3
    CMAT MODIF AF3G_GC_EB_REF_A.NOMI        R.PERONY 122                  9      9      0
    CMAT MODIF AF3G_GC_EH_REF_A.NOMI        R.PERONY 122                  9      9      0
    CMAT MODIF AF3G_GC_ME_REF_A.NOMI        R.PERONY 124                  9      9      0
    CMAT MODIF AFA_GC_EB_REF_A.NOMI         R.PERONY 122                  9      9      0
    CMAT MODIF AFA_GC_EH_REF_A.NOMI         R.PERONY 122                  9      9      0
    CMAT MODIF AFA_GC_ME_REF_A.NOMI         R.PERONY 124                  9      9      0
    DATG AJOUT Coeur_MONO.datg                perony R.PERONY           107    107      0
 FORTRAN AJOUT algorith/concrk               alarcon A.ALARCON          168    168      0
 FORTRAN AJOUT algorith/mdbs32               alarcon A.ALARCON          196    196      0
 FORTRAN AJOUT algorith/mddp54               alarcon A.ALARCON          222    222      0
 FORTRAN AJOUT algorith/mdruku               alarcon A.ALARCON          473    473      0
 FORTRAN AJOUT calculel/srlima                delmas J.DELMAS            94     94      0
 FORTRAN AJOUT calculel/srmedo                delmas J.DELMAS           135    135      0
 FORTRAN AJOUT elements/vddege             lebouvier F.LEBOUVIER         93     93      0
 FORTRAN AJOUT elements/vdxedg             lebouvier F.LEBOUVIER        164    164      0
 FORTRAN MODIF algorith/limsst               alarcon A.ALARCON           82      5      4
 FORTRAN MODIF algorith/lkijac              foucault A.FOUCAULT         508      4      4
 FORTRAN MODIF algorith/mdadap               alarcon A.ALARCON          768      8     10
 FORTRAN MODIF algorith/mdall2               alarcon A.ALARCON           83      3      3
 FORTRAN MODIF algorith/mdallo               alarcon A.ALARCON          318     48     26
 FORTRAN MODIF algorith/mddevo               alarcon A.ALARCON          412      5      5
 FORTRAN MODIF algorith/mdeul1               alarcon A.ALARCON          611      8     10
 FORTRAN MODIF algorith/mdfnli               alarcon A.ALARCON          122      4      4
 FORTRAN MODIF algorith/mditm2               alarcon A.ALARCON          507      4      4
 FORTRAN MODIF algorith/mdptem               alarcon A.ALARCON          327     36     18
 FORTRAN MODIF algorith/mdtr74               alarcon A.ALARCON          913     75     56
 FORTRAN MODIF algorith/mptran               alarcon A.ALARCON          454      5      5
 FORTRAN MODIF algorith/op0060               alarcon A.ALARCON          542      4      4
 FORTRAN MODIF algorith/ssdt74               alarcon A.ALARCON          442     52     25
 FORTRAN MODIF calculel/calcop                delmas J.DELMAS           300     12      5
 FORTRAN MODIF calculel/ccchel                delmas J.DELMAS           117      4      4
 FORTRAN MODIF calculel/ccpara                delmas J.DELMAS           154      9      6
 FORTRAN MODIF calculel/ccvepo                delmas J.DELMAS           118      6     14
 FORTRAN MODIF calculel/mearcc                delmas J.DELMAS           162     35     52
 FORTRAN MODIF calculel/medom2                delmas J.DELMAS           131      9     21
 FORTRAN MODIF elements/te0410             lebouvier F.LEBOUVIER        132     29      1
 FORTRAN MODIF utilitai/ecresu               alarcon A.ALARCON          397      4      4
       H MODIF include/aster_exceptions     courtois M.COURTOIS          75      3      3
  PYTHON AJOUT Macro/calc_gp_ops            bargelli R.BARGELLINI       314    314      0
  PYTHON MODIF Execution/E_SUPERV           courtois M.COURTOIS         376     17      3
  PYTHON MODIF Mac3coeur/calc_mac3coeur_ops     perony R.PERONY           414     20     11
  PYTHON MODIF Mac3coeur/mac3coeur_coeur      perony R.PERONY          1227     51     18
  PYTHON MODIF Mac3coeur/perm_mac3coeur_ops     perony R.PERONY           191      4      4
  PYTHON MODIF Mac3coeur/post_mac3coeur_ops     perony R.PERONY           470     42     39
  PYTHON MODIF Macro/dyna_vibra_ops          alarcon A.ALARCON           92      3      3
  PYTHON MODIF Messages/algorith3            alarcon A.ALARCON          255      6      2
  PYTHON MODIF Messages/algorith5            alarcon A.ALARCON          352      9      3
  PYTHON MODIF Messages/calculel5             delmas J.DELMAS           345     15     10
  PYTHON MODIF Messages/rupture1            bargelli R.BARGELLINI       364     10      1


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :   14        2445      2445             +2445
 MODIF :   78       35543      4354     865     +3489
 SUPPR :    2        2146              2146     -2146
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :   94       40134      6799    3011     +3788 
