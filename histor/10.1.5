

-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR galenne      GALENNE Erwan          DATE 05/01/2010 - 08:50:53

--------------------------------------------------------------------------------
RESTITUTION FICHE 013364 DU 2009-05-04 07:29:00
TYPE evolution concernant Code_Aster (VERSION )
TITRE
   X-FEM : PROPA_FISS - methode MAILLAGE : amelioration de l'ergonomie
FONCTIONNALITE
   Contexte
   --------
   Trois méthodes de propagation de fissures sont disponibles dans l'opérateur PROPA_FISS :
   les méthodes UPWIND et SIMPLEXE (développées en fortran) et la méthode MAILLAGE
   (développée en python).
   Cette fiche vise à faciliter l'utilisation de la méthode MAILLAGE et à la rendre plus
   proche des deux autres méthodes.
   
   
   Travail réalisé
   ---------------
   1/ Suppression de la règle de nommage qui rendait difficile la création du maillage
   (surfacique) de la fissure initiale
   2/ Développement de la propagation de plusieurs fissures
   3/ Uniformisation de la syntaxe et de la loi de propagation avec les autres méthodes
   4/ Développement de l'option d'initialisation d'une fissure elliptique en 3D
   
   Ce travail se traduit par une modification sensible de la syntaxe et de nombreuses
   évolutions du python.
   
   Syntaxe
   -------
   * pour la propagation
   PROPA_FISS( METHODE_PROPA='MAILLAGE',
   # nouveau mot clé facteur 
   .           FISSURE=_F(FISS_ACTUELLE=FF[i],
   .                MAIL_ACTUEL =  MAX[i],
   .                MAIL_PROPAGE = MAX[i+1] ,
   .                GROUP_MA_FISS='FISS',
   .                GROUP_MA_FOND='FOND',    
   .                TABLE=TABK,
   .                  ),
   # mots clés existants (changement de nom)
   .         MAIL_STRUC= .. ,
   .         MAIL_TOT2 = .. ,
   .         DA_MAX=25,		-> déplacé de LOI_PROPA
   .         ITERATION = i,
   # mots clés facteurs copiés des autres méthodes
   .          LOI_PROPA=_F(LOI='PARIS',
   .                       M=1.,
   .                       C=1.,
   .                       N=0.,
   .                       MATER=ACIER,
   .                      )  ,
   .          COMP_LINE=_F(COEF_MULT_MINI=0.,                                 
   .                       COEF_MULT_MAXI=1.),  );
   
   Les mots clés GROUP_MA_FISS et GROUP_MA_FOND permettent d'indiquer comment vont s'appeler
   les groupes de mailles du fond et des lèvres (qui seront successivement FOND_0, FOND_1,
   etc). Ces mots clés sont indispensables pour pouvoir utiliser un maillage quelconque pour
   la fissure initiale ; et pour pouvoir traiter le cas de la multifissuration. Une valeur
   par défaut existe.
   
   * pour l'initialisation
   PROPA_FISS(METHODE_PROPA='INITIALISATION',
   .         FORM_FISS='ELLIPSE',	-> nouvelle option
   # définition de la géométrie (en s'inspirant de defi_fiss_xfem)
   .         CENTRE = 		-> coordonnées du centre
   .         DEMI_GRAND_AXE =	-> a
   .         DEMI_PETIT_AXE =	-> c
   .         VECT_X         =	-> vecteur
   .         VECT_Y         =	-> vecteur orthogonal
   .         ANGLE_ORIG     = 	-> position (en degrés) du premier point dans le repère
   (vect_x,vect_y)
   .         ANGLE_EXTR     = 	-> position (en degrés) du dernier point dans le repère
   (vect_x,vect_y)
   .         GROUP_MA_FISS='FISS',
   .         GROUP_MA_FOND='FOND',
   .         NB_POINT_FOND = ..,	-> entier < 26
   # mots clés existants (changement de nom)
   .         MAIL_STRUC= .. ,
   .         MAIL_FISS = ..,
   .         MAIL_TOT2 = .. ,
            );
   
   
   Validation
   ----------
   * Validation informatique : propagation de deux fissures en mode mixte (à partir des tests
   sslp319 et sslv315)
   .  - en 2D et en 3D
   .  - avec CALC_G ou POST_K1_K2_K3
   .  - avec un instant unique ou plusieurs instants	
   
   * Nouveaux cas test :
   .  - sslp319c et d : nouvelles modélisations pour la propagation en 2D et en mode I pur de
   deux fissures (utilisation de CALC_G et plusieurs pas de temps pour c ; POST_K1_K2_K3 et
   un seul pas de temps pour d). Les tests portent sur la valeur de K1 et K2 comme pour les
   autres modélisations.
   
   .  - zzzz255c : nouvelle modélisation pour tester l'initialisation et la propagation
   uniforme d'une fissure circulaire. Les autres modélisations valident l'option RAFF_MAIL
   pour les autres méthodes, avec la même fissure. Le 
   
   test porte sur la valeur des level set en un noeud.
   
   * Autres cas test impactés (syntaxe) sslp315a/b, sslp320a, sslp321a, sslp322a, sslv314b/c,
   sslv315b/c
   
   
   Remarques 
   ---------
   Il reste quelques tâches à réaliser pour l'iso-fonctionalité entre méthodes :
   - initialisation simultanée de plusieurs fissures (aucune difficulté)
   - calcul dans la macro-commande des level set (et non juste du nouveau maillage propagé) :
   ce point demande un peu de réflexion (le maillage total, donc le modèle, change à toutes
   les itérations)
   - propagation d'une fissure à fonds multiples
   - définition d'un cas test plus discriminant sur la multi-fissuration (par exemple partir
   du cas test sslp319 et ajouter un chargement de cisaillement pour induire une bifurcation).
   
   Par ailleurs, il faudrait aller plus loin dans la mutualisation des développements entre
   les 3 méthodes. Ici il y a des doublons entre le fortran et le python pour le passage des
   K au vecteur propagation en chaque point du fond. 
   Normalement seule l'étape de réactualisation des level sets à partir du vecteur
   propagation devrait être différente.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.82.11,V3.02.319
VALIDATION
   sslp319,zzzz255
NB_JOURS_TRAV  : 5.0
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

 CASTEST AJOUT sslp319c                      galenne E.GALENNE          289    289      0
 CASTEST AJOUT sslp319d                      galenne E.GALENNE          293    293      0
 CASTEST AJOUT zzzz255c                      galenne E.GALENNE          195    195      0
 CASTEST MODIF sslp315a                      galenne E.GALENNE          168     16     12
 CASTEST MODIF sslp315b                      galenne E.GALENNE          167     21     19
 CASTEST MODIF sslp320a                      galenne E.GALENNE          282     19     15
 CASTEST MODIF sslp321a                      galenne E.GALENNE          228     19     16
 CASTEST MODIF sslp322a                      galenne E.GALENNE          244     19     16
 CASTEST MODIF sslv314b                      galenne E.GALENNE          236     22     18
 CASTEST MODIF sslv314c                      galenne E.GALENNE          211     20     17
 CASTEST MODIF sslv315b                      galenne E.GALENNE          265     21     16
 CASTEST MODIF sslv315c                      galenne E.GALENNE          237     21     16
CATALOPY MODIF commande/propa_fiss           galenne E.GALENNE          160     62     32
  PYTHON MODIF Macro/propa_fiss_ops          galenne E.GALENNE          978    383    195
  PYTHON MODIF Messages/rupture1             galenne E.GALENNE          348     17     10


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :    3         777       777              +777
 MODIF :   12        3524       640     382      +258
 SUPPR :    0           0                 0        +0
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :   15        4301      1417     382     +1035 
