

-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR abbas        ABBAS Mickael          DATE 04/18/2011 - 03:18:20

--------------------------------------------------------------------------------
RESTITUTION FICHE 016775 DU 2011-04-13 13:40:39
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    CTC7 - Séparation des termes dans les TE
FONCTIONNALITE
   Afin de préparer la fiche issue16543, cette fiche propose une évolution sur le contenu des TE
   de la méthode continue.
   
   Il existe deux TE:
   te0364.f s'occupe de calculer les matrices (RIGI_CONT et RIGI_FROT)
   te0365.f s'occupe de calculer les seconds membres (CHAR_MECA_CONT et CHAR_MECA_FROT) 
   
   Dans l'idée d'utiliser un schéma d'intégration différent pour la forme forte (équilibre
   avec réaction de contact/frottement) et la forme faible (condition de signorini/Coulomb
   sous forme faible), je propose la ré-organisation suivante.
   
   Voici le schéma d'organisation général d'un TE
   C
   C --- PREPARATION DES CALCULS - INFOS SUR LA MAILLE DE CONTACT
   C
         CALL MMELEM()
   C
   C --- PREPARATION DES CALCULS - LECTURE DES COEFFICIENTS
   C
         CALL MMMLCF()
   C
   C --- PREPARATION DES CALCULS - LECTURE FONCTIONNALITES AVANCEES
   C
         CALL MMMLAV()
   C
   C --- PREPARATION DES DONNEES
   C
         IF (TYPELT.EQ.'POIN_ELEM') THEN
   C
   C ----- CALCUL DES QUANTITES
   C
           CALL MM*PPE()
   C
   C ----- EVALUATION DES STATUTS
   C
           CALL MMMSTA()
   C
   C ----- EVALUATION DE LA PHASE DE CALCUL
   C
           CALL MMMPHA()
   C       
         ELSE
           CALL ASSERT(.FALSE.)
         ENDIF
   C
   C --- CALCUL FORME FORTE
   C
         IF (TYPELT.EQ.'POIN_ELEM') THEN
           CALL MM*FPE()
         ELSE
           CALL ASSERT(.FALSE.)
         ENDIF
   C
   C --- CALCUL FORME FAIBLE
   C      
         IF (TYPELT.EQ.'POIN_ELEM') THEN                      
           CALL MM*APE()
         ELSE
           CALL ASSERT(.FALSE.)
         ENDIF
   C
   C --- CALCULS - FONCTIONNALITES AVANCEES
   C
         CALL MMM*AV()
   C
   C --- MODIFICATIONS EXCLUSION/BARSOUM/RACCORD
   C
         CALL MMM*EX()
   C
   C --- ASSEMBLAGE FINAL
   C
         CALL MMM*AS()
   C
   C --- ECRITURE DANS LE RESU_ELEM
   C
   
   
   1/ On sépare le calcul de la forme faible (mmtape et mmvape) et de la forme forte (mmtfpe
   et mmvfpe)
   2/ On sépare les fonctionnalités standards des fonctionnalités avancées (Barsoum,
   fond_fissure, usure, compliance)
   3/ On prépare le cas où les éléments de contact seront de type POIN_ELEM (situation
   actuelle) ou ELEM_ELEM (situation à venir (voir issue16453)
   
   Si on veut tester un schéma d'intégration différent, il "suffit" de séparer les deux
   termes (forts et faibles) dans deux TE différents et de passer les informations
   différentes (deux ligrels de contact différents dans le cas POIN_ELEM).
   
   NB: le statut de contact et de frottement est évalué dans MMMSTA. Pour l'instant, on
   continue à lire la carte avec les statuts calculés dans MMMBCA. Dans la prochaine
   restitution, on passera un CHAM_NO (dont les termes viendront du gap intégré ou du gap nodal).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    liste contact continu
NB_JOURS_TRAV  : 5.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR assire       ASSIRE Aimery          DATE 04/19/2011 - 11:42:11

--------------------------------------------------------------------------------
RESTITUTION FICHE 011297 DU 2007-09-28 14:21:03
TYPE evolution concernant Code_Aster (VERSION )
TMA : DeltaCad
TITRE
    MACR_RECAL
FONCTIONNALITE
   Objectif
   --------
   Etendre les possibilites de saisie pour l'operateur MACR_RECAL.
   
   Actuellement, il faut fournir aux mots-cles RESU_EXP, RESU_CALC, POIDS et LIST_PARA des
   donnees ecrites sous forme de listes python, voire de liste d'array Numeric.
   L'objectif est d'offir a l'utilisateur un mode de saisie supplementaire plus simple, lui
   permettant de faire passer des donnees Aster (structure de donnees fonction) ou des
   valeurs numeriques a de nouveaux mot-cles.
   L'utilisateur ne pourra pas faire de mixe entre les 2 modes, il choisira soit le mode
   actuel, soit le nouveau.
   
   
   
   Syntaxe
   =======
   
   parametres=[nom_para,valeur_initiale,valeur_minimale,valeur_maximale]
   calculs=[nom_fonction_calc,nom_para_X,nom_para_Y]
   poids=[5.0]
   
   MACR_RECAL(
      o   /  LIST_PARA = parametres,
          /  PARA_OPTI =  _F(
                    o   NOM_PARA  =  nom_para,
                    o   VALE_INI  =  valeur_initiale,
                    o   VALE_MIN  =  valeur_minimale,
                    o   VALE_MAX  =  valeur_maximale,)
   
       o  /    RESU_EXP  = experiences,
               RESU_CALC = calculs,
          /    COURBE   =  _F(
                    o   FONC_EXP      = sd_fonction,
                    o   NOM_FONC_CALC = nom_fonction_calc,
                    f   POIDS         = 5.0,
                    o   PARA_X        = nom_para_X,
                    o   PARA_Y        = nom_para_Y,)
   
       f        LIST_POIDS = poids
            )
   
   
   Remarques:
   - "experiences" correspond a la liste de Numeric.array contenant les resultats d'essais.
   Pour chaque Numeric.array, l'utilisateur desireux utiliser le nouveau mode devra creer les
   fonctions correspondantes, 
   afin de les fournir au mot-cle FONC_EXP a chaque iteration.
   - l'ancien mot-cle facultatif POIDS a ete renomme en LIST_POIDS.
   
   
   Equivalences entre les 2 modes
   =============================
   
   1)LIST_PARA
   
   Mode actuel:
   ------------
   parametres =[['R_INF__',250.,200.,800.],['b__',20.,10.,100.],]
   MACR_RECAL(...,
       LIST_PARA=parametres,
       ...)
   
   Nouveau Mode:
   --------------
   MACR_RECAL(...,
       PARA_OPTI=(_F(NOM_PARA='R_INF__',VALE_INI=250.,VALE_MIN=200.,VALE_MAX=800.),
                  _F(NOM_PARA='b__',    VALE_INI=20., VALE_MIN=10., VALE_MAX=100.),),
       ...)
   
   
   2)RESU_EXP
   
   Mode actuel:
   -----------
   experience=[    NP.array([
                                 [ 1.00000E-03 , 2.00000E+02  ],
                                 [ 6.00000E-03 , 2.15275E+02  ],
                                 .............................
                                 [ 2.00000E-01 , 2.69996E+02  ],
                                 ]) ]
   MACR_RECAL(...,
       RESU_EXP=experience,
       ...)
   
   Nouveau Mode:
   ------------
   experi=DEFI_FONCTION(NOM_PARA='INST',
                            NOM_RESU='SIYY',
                            VALE=(1.00000E-03 , 2.00000E+02,
                                  6.00000E-03 , 2.15275E+02,
                                 .............................
                                  2.00000E-01 , 2.69996E+02 ,),)
   
   MACR_RECAL(...,
          COURBE=_F(FONC_EXP=experi,...),
       ...)
   
   3)RESU_CALC
   
   Mode actuel:
   -----------
   calcul = [['RESU1','INST','SIYY'],]
   
   MACR_RECAL(...,
       RESU_CALC=calcul,
       ...)
   
   Nouveau Mode:
   ------------
   MACR_RECAL(...,
          COURBE=_F(NOM_FONC_CALC='RESU1',PARA_X='INST',PARA_Y='SIYY',...),
       ...)
   
   4)POIDS
   
   Mode actuel:
   -----------
   poids =  NP.array([5.0,1.0])
   
   MACR_RECAL(...,
       LIST_POIDS=poids,
       ...)
   
   Nouveau Mode:
   ------------
   MACR_RECAL(...,
          COURBE=(_F(POIDS=5.0,...),
                  _F(POIDS=1.0,...),),
       ...)
   
   
   Developpement
   ==============
   Ajout des differents mot-cles et regles dans macr_recal.capy
   Modification de macr_recal_ops : on a fait passer COURBE et PARA_OPTI dans les parametres
   de macr_recal_ops, puis on a reconstruit a partir de ces donnees les listes de listes ou
   les listes d'array du mode actuel.
   Les regles de calculs n'ont pas ete modifiees.
   
   Validation
   ==========
   - Modification des 10 cas-tests utilisant MACR_RECAL de sorte a utiliser le nouveau mode
   de saisie.On a verifie par le passage de chaque test que le code retour etait OK.
   - Restituer 2 cas-tests,  zzzz159a et e, enrichi chacun par un nouveau MACR_RECAL (avec le
   nouveau mode). On a compare les valeurs des parametres recales des 2 MACR_RECAL.
   - Restituer 5 cas-tests (sdls121a,b et c,zzzz159c et d) suite au changement syntaxique du
   mot-cle POIDS (POIDS -> LIST_POIDS)
   
   Documentation
   =============
   On a presente les nouveaux mots-cles et leurs fonctionnalites dans la doc U4.73.02
   (MACR_RECAL).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.73.02
VALIDATION
    astout macr_recal
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR colombo      COLOMBO Daniele        DATE 04/15/2011 - 11:44:27

--------------------------------------------------------------------------------
RESTITUTION FICHE 016624 DU 2011-03-17 16:05:59
TYPE anomalie concernant Code_Aster (VERSION 10.3)
TITRE
    En NEW10.3.18, le cas-test sslv315d s'arrete en erreur fatale sur Rocks.
FONCTIONNALITE
   Thomas a réussi à reproduire l'erreur dans le cas test. Mois je n'arrive pas toujours à la
   reproduire. Voici sa explication:
   
   « Le test SSLV315D plante à nouveau sur Clpaster (Rocks) mais cette fois-ci 
   on arrive à reproduire le plantage. J'ai donc jeté un coup d'oeil : le 
   problème se produit dans xprvit.f à la ligne 626 :
   
      625  C              CHANGE IN THE SEARCH DIRECTION
      626                 IF ((D*DPREC).LT.0.D0) DS=DS*(-0.5D0)
      627 
   
   D vaut en fait NaN (Not A Number) c'est pour cela que ça plante. J'ai 
   remonté la chaîne pour savoir ce qui causait le NaN, il s'agit des lignes 
   527-529 :
   
      522  C              COORDINATES OF THE POINT AT THE END OF THE CRACK 
   FRONT 
      523  C              SEGMENT
      524                 XI1 = ZR(JFONF-1+4*(JMIN-1)+1)
      525                 YI1 = ZR(JFONF-1+4*(JMIN-1)+2)
      526                 ZI1 = ZR(JFONF-1+4*(JMIN-1)+3)
      527                 XJ1 = ZR(JFONF-1+4*(JMIN-1+1)+1)        <= ces lignes posent problème
      528                 YJ1 = ZR(JFONF-1+4*(JMIN-1+1)+2)        <= ces lignes posent problème
      529                 ZJ1 = ZR(JFONF-1+4*(JMIN-1+1)+3)        <= ces lignes posent problème
   
   Le tableau JFONF est de taille 20 donc JMIN ne doit pas dépasser 4 sous 
   peine de lire en dehors.
   
   En effet JMIN vaut au plus 4 (=nombre de points du fond de fissure - 1) 
   avant de commencer la boucle 206 mais il peut être incrémenté/décrémenté. 
   Au moment du plantage JMIN=5 donc dans les lignes  527-529 font que l'on 
   lit au delà de JFONF (et ici on lit des NaN).
   
   Qu'en penses-tu ? Y-a-t-il un bug quelque part ? Pourquoi JMIN devient 
   égal à 5 en particulier ? »
   
   Effectivement il y a une erreur dans la partie du code de lissage qui gère le changement
   du morceau du fond considéré et qui est responsable du changement de la valeur de JMIN
   (cela est nécessaire pour l'algorithme de recherche). Les lignes qui sont à l'origine du
   problème sont le suivantes:
   
   640               IF ((SMIN.GT.1.D0).AND.(JMIN.LT.NBPTFF)) THEN
   641                  JMIN=JMIN+1
   642                  SMIN=0.D0
   643               ELSE IF ((SMIN.GT.1.D0).AND.(JMIN.EQ.NBPTFF)) THEN
   644                  SMIN=1.D0
   645                  GOTO 207
   646               ENDIF
   
   La valeur maximale de JMIN est NBPTFF-1 et pas NBPTFF (lignes 640 et 643).
   On corrige:
   
   640               IF ((SMIN.GT.1.D0).AND.(JMIN.LT.(NBPTFF-1))) THEN
   641                  JMIN=JMIN+1
   642                  SMIN=0.D0
   643               ELSE IF ((SMIN.GT.1.D0).AND.(JMIN.EQ.(NBPTFF-1))) THEN
   644                  SMIN=1.D0
   645                  GOTO 207
   646               ENDIF
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    ce cas test
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR courtois     COURTOIS Mathieu       DATE 04/20/2011 - 09:12:10

--------------------------------------------------------------------------------
RESTITUTION FICHE 016748 DU 2011-04-07 11:29:40
TYPE express concernant Code_Aster (VERSION 9.1)
TITRE
    Quelques memory leak
FONCTIONNALITE
   Une exécution avec valgrind de sslv315d donne :
   
   ==1626== LEAK SUMMARY:
   ==1626==    definitely lost: 476,265 bytes in 15,390 blocks
   
   Ce sont des allocations de chaînes de caractères qui ne sont 
   pas libérées (le FreeStr était parfois présent mais non 
   atteint).
   
   Ne restent que quelques mallocs faits par Python.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    sslv315d valgrind
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 016740 DU 2011-04-05 16:30:58
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Impression des messages : la 1ere ligne n'est pas alignxc3xa9e comme les autres
FONCTIONNALITE
   Quand on définit un message comme :
   
   37 : _("""
    Attention : Certains ddls sont "imposés" plusieurs fois par 
   AFFE_CHAR_CINE.
    Pour ces ddls, la valeur imposée sera la SOMME des 
   différentes valeurs imposées.
    Ce n'est peut-etre pas ce qui est voulu.
   """
   
   Il est imprimé comme ceci :
   
   ...!---------------------------------------------------------
   -------------------------!
   ...!.
   <A>.CALCULEL3_37>............................................
   ....................!
   ...!.........................................................
   ..........................!
   ...!.Attention.:.Certains.ddls.sont."imposés".plusieurs.fois.
   par.AFFE_CHAR_CINE........!
   ...!..Pour.ces.ddls,.la.valeur.imposée.sera.la.SOMME.des.diff
   érentes.valeurs.imposées..!
   ...!..Ce.n'est.peut-
   etre.pas.ce.qui.est.voulu....................................
   ......!
   ...!.........................................................
   ..........................!
   
   On voit que l'alignement du texte à gauche est modifié pour 
   la 1ère ligne.
   
   
   On corrige le formattage pour éviter de supprimer les espaces 
   en début de première ligne.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    visuelle
DEJA RESTITUE DANS : 10.4.0, 11.0.0
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 014180 DU 2009-11-13 13:36:03
TYPE evolution concernant Rex (VERSION )
TITRE
    Emission automatique de fiche documentaire dans REX quand impact doc histor
FONCTIONNALITE
   L'objet de cette fiche (voir aussi issue14824) est de 
   fiabiliser le processus de gestion des impacts documentaires 
   vis à vis des restitutions du code source.
   
   Pour cela, on ajoute un nouvel état aux fiches, "attente_doc", 
   entre l'état "valide_EDA" et "ferme".
   
   Ainsi, à la fin de la mise à jour, les fiches à clore si elles 
   ne sont pas attendues dans une autre version et s'il y a un 
   impact documentaire sont passées dans "attente_doc".
   S'il n'y a pas d'impact documentaire, on passe directement à 
   l'état "ferme" (comme aujourd'hui).
   
   C'est le responsable niveau 2 qui ferme définitivement la fiche 
   quand il valide d'impact associé.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    graphique
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 016681 DU 2011-03-30 09:08:19
TYPE express concernant Rex (VERSION )
TITRE
    Changer validation RTA en xc3xa9tude d'impact
FONCTIONNALITE
   Le champ "validation RTA" : oui/non n'était pas très clair.
   
   On modifie l'affichage en : Etude d'impact : Validée / Non 
   validée.
   
   
   Rév. REX : 60:2c2747696375
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    graphique
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR pellet       PELLET Jacques         DATE 04/20/2011 - 09:12:10

--------------------------------------------------------------------------------
RESTITUTION FICHE 013479 DU 2009-06-04 14:56:42
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    MN13 - pourquoi les calculs xc3xa9lxc3xa9mentaires d'Europlexus sont-ils beaucoup plus rapides que ceux de Code_Aster ?
FONCTIONNALITE
   Problème :
   ----------
   Le meme calcul dynamique réalisé par Aster et Europlexus est 16 fois plus rapide avec
   Europlexus
   Peut-on améliorer Aster ?
                                                                                            
                           
   Evolution :
   -----------
   En observant (avec valgrind/callgrind) les postes de consommation de CPU du programme
   Aster, on s'aperçoit de certaines maladresses de programmation que l'on corrige (voir
   ci-dessous le § Modifications des sources).
                                                                                            
                           
   Validation :
   ------------
   On profite de cette fiche pour introduire un nouveau test de performances : perf012a.
   Le but de ce test est de mesurer les performances des calculs élémentaires.
   Les caractéristiques de ce test sont :
      * commande DYNA_NON_LINE
      * 6400 HEXA8
      * 400 pas de temps
      * comportement VMIS_ISOT_TRAC
                                                                                            
                           
   Le temps consommé par les calculs élémentaires (+ assemblages) est de 86% du temps total
   du job.
   Le reste du temps est essentiellement consommé lors de la résolution des systèmes linéaires
                                                                                            
                           
   Résultats :
   -----------
   Les chiffres ci-dessous correspondent à TOTAL_JOB, en version "nodebug" sur la machine aster4.
                                                                                            
                           
   Europlexus  :   9s
   Aster avant : 144s
   Aster après : 117s
                                                                                            
                           
   Nos évolutions permettent seulement de diminuer un peu le ratio Aster/Europlexus : 16.0 ->
   13.0
   Le problème reste donc "entier" : que faire pour accélérer les calculs élémentaires d'Aster ?
   Une nouvelle fiche (16746) a été émise pour prendre le relai de celle-ci.
                                                                                            
                           
   Impact documentaire :
   ---------------------
   V1.01.288 : Cas-test perf012a
   D5.02.05  : Introduire un nouveau calcul élémentaire
   D5.04.01  : Introduire une nouvelle loi de comportement
                                                                                            
                           
                                                                                            
                           
   Modifications des sources :
   -----------------------------
                                                                                            
                           
   * trigd.f :
     On évite les comparaisons avec la chaine de caractères TYPEGD
                                                                                            
                           
   * nmgeom.f :
     On ajoute l'argument LDFDI pour indiquer si l'on veut calculer le tableau DFDI.
     Quand on appelle 2 fois NMGEOM (avec UM et DU), on peut économiser le second
     calcul de DFDI avec les routines DFDM3D ou DFDM2D.
                                                                                            
                           
   * dans les routines ci-dessous, on remplace l'argument KSTOP par IARRET
       KSTOP= '  '      -> IARRET=0
       KSTOP= 'FM'      -> IARRET=1
       KSTOP= 'F '      -> IARRET=2
    routines : rcadma rcadme rcvala rcvalb rcvalc rcvale rcvals
                                                                                            
                           
   * dans les routines ci-dessous, on remplace l'argument CODRET par ICODRE
       CODRET= 'OK'      -> ICODRE=0
       CODRET= 'NO'      -> ICODRE=1
    routines : dinonc massup rcadma rcadme rccoma rccome rcpare rcvad2 rcvada rcvala rcvalc
   rcvale rcvals
                                                                                            
                           
   * dans la routine rcvala.f et rctype.f :
      * moins de copies et de comparaisons de chaines de caractères
                                                                                            
                           
   * dans les routines rctrac.f et rcfonc.f :
      * On remplace l'argument NOMRC par KTRAC :
        NOMRC='TRACTION'          -> KTRAC=1
        NOMRC='META_TRACTION'     -> KTRAC=2
        NOMRC='META_TRAC_ZIRC'    -> KTRAC=3
                                                                                            
                           
   * dans la routine corddl.f (appelée par assvec.f) :
     On limite la boucle sur tous les ddls possibles (121 pour DEPL_R)
                                                                                            
                           
   * dans la routine nmpl3d.f :
     Pour le calcul de BT*SIGMA, on tire profit du fait que B est à moitié vide
                                                                                            
                           
    
    
   Liste des fichiers impactés par la correction de la fiche:  13479
     alfint.f  assesu.f  assthm.f  assvsu.f  avdowh.f  betmat.f
     brag00.f  brag01.f  bsthco.f  calcft.f  calcme.f  cavini.f
     ...
     tumass.f  turigi.f  tusief.f  tutemp.f  vdgnlr.f  vdpnlr.f
     vdxnlr.f  vecmat.f  verifg.f  verifm.f  verift.f  xcgfvo.f
     xmase2.f  xmase3.f  xsifel.f  zacier.f  zedgar.f
     perf012a.comm
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : V1.01.288 D5.02.05 D5.04.01
VALIDATION
    rien de particulier
NB_JOURS_TRAV  : 6.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 016514 DU 2011-03-02 07:57:27
TYPE evolution concernant Code_Aster (VERSION 9.1)
TITRE
    calcul CALC_FERRAILLAGE restreint aux zones topologiques dxc3xa9signxc3xa9es
FONCTIONNALITE
   Problème :
   ----------
   Quand on utilise la commande CALC_FERRAILLAGE, on écrit quelque chose comme :
                                                                                            
                           
   Solution=CALC_FERRAILLAGE(reuse =Solution,
                      RESULTAT=Solution,
                      TYPE_COMB='ELS',
                      INST=(0.),
                      AFFE  = (
                         _F( GROUP_MA='GM1',      ENROBG=0.04, CEQUI=15.E0, SIGM_ACIER=2.3E8,
   SIGM_BETON=3.5E7),
                         _F( GROUP_MA='GM2',      ENROBG=0.03, CEQUI=12.E0, SIGM_ACIER=1.6E8,
   SIGM_BETON=2.8E7),
                      ));
                                                                                            
                           
   Les caractéristiques affectées sur GM1 et GM2 : ENROBG, CEQUI, ... sont nécessaires au
   calcul du ferraillage.
   Malheureusement, le calcul du post-traitement est actuellement fait sur TOUS les éléments
   (de coque) du modèle.
                                                                                            
                           
   Si l'utilisateur n'a pas affecté les caractéristiques sur TOUS les éléments de coque, il
   est arreté par une erreur fatale.
                                                                                            
                           
   Evolution :
   -----------
   On ne fait le calcul du ferraillage que sur les éléments pour lesquels l'utilisateur a
   utilisé le mot clé AFFE.
                                                                                            
                           
   Validation :
   ------------
   Je modifie le test ssls135a pour ne faire le calcul du ferraillage que sur les mailles que
   l'on teste avec TEST_RESU.
                                                                                            
                           
   Impact documentaire :
   ---------------------
   U4.81.42 : CALC_FERRAILLAGE : dire que le calcul ne sera fait que sur les éléments
   renseignés avec le mot clé facteur AFFE.
                                                                                            
                           
    
    
   Liste des fichiers impactés par la correction de la fiche:  16514
     w175ca.f
     ssls135a.comm
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.81.42
VALIDATION
    ssls135a
NB_JOURS_TRAV  : 0.3
--------------------------------------------------------------------------------
RESTITUTION FICHE 016532 DU 2011-03-03 11:53:59
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Cumul des charges cinxc3xa9matiques dans les commandes de calcul.
FONCTIONNALITE
   Problème :
   ----------
   Si plusieurs charges "cinématiques" (AFFE_CHAR_CINE) se chevauchent, les valeurs imposées
   se cumulent.
   C'est un comportement "usuel" pour les chargements de type "force", mais cela me semble
   inabituel pour des déplacements imposés.
                                                                                            
                                                                   
   Evolution proposée :
   --------------------
   Quand des ddls sont imposés par plusieurs charges cinématiques, on émet maintenant
   l'alarme suivante :
                                                                                            
                                                                   
   !-----------------------------------------------------------------------------------!
   !.<A>.<CALCULEL3_37>................................................................!
   !...................................................................................!
   !.Attention.:.Certains.ddls.sont."imposés".plusieurs.fois.par.AFFE_CHAR_CINE........!
   !..Pour.ces.ddls,.la.valeur.imposée.sera.la.SOMME.des.différentes.valeurs.imposées..!
   !..Ce.n'est.peut-etre.pas.ce.qui.est.voulu..........................................!
   !...................................................................................!
   !..Exemple.d'un.ddl.imposé.plusieurs.fois.:.........................................!
   !....Noeud.:.N8..Composante.:.DY....................................................!
   !...................................................................................!
   !...................................................................................!
   !.Ceci.est.une.alarme..Si.vous.ne.comprenez.pas.le.sens.de.cette....................!
   !.alarme,.vous.pouvez.obtenir.des.résultats.inattendus.!............................!
   !-----------------------------------------------------------------------------------!
    
    
   Liste des fichiers impactés par la correction de la fiche:  16532
     ascavc.f
     calculel3.py
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    essai perso
NB_JOURS_TRAV  : 0.25
--------------------------------------------------------------------------------
RESTITUTION FICHE 016591 DU 2011-03-10 10:12:04
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    CREA_CHAMP/AFFE et PROL_ZERO
FONCTIONNALITE
   Problème :
   ----------
   Quand on utilise CREA_CHAMP / OPERATION = 'AFFE' + TYPE_CHAM='ELxx_NEUT_F' +
   PROL_ZERO='OUI', le cham_elem résultat est "prolongé" (là où l'utilisateur n'a rien dit)
   par la chaine "blanche" (' ').
                                                                                            
                           
   On préférerait que le champ soit prolongé par une fonction "nulle".
                                                                                            
                           
   Evolution / correction :
   ------------------------
   Dans la routine cescel.f, si la grandeur du champ est 'NEUT_F' et que PROL_ZERO='OUI', on
   affecte la fonction '&FOZERO' (créée sur la base globale par la commande DEBUT).
                                                                                            
                           
   Validation :
   ------------
   Essai perso à partir du test zzzz242a : on réalise :
                                                                                            
                           
   X1=CREA_CHAMP(OPERATION='AFFE', TYPE_CHAM='ELNO_NEUT_F', MODELE=MO1,    INFO=2, 
   PROL_ZERO='OUI',
                 AFFE=_F( TOUT = 'OUI', NOM_CMP = ('X1',), VALE_F  = (FONCX,)))
                                                                                            
                           
   X2=CREA_CHAMP(OPERATION='EVAL', TYPE_CHAM='ELNO_NEUT_R', INFO=2,
                 CHAM_F=X1,  CHAM_PARA=( CHXN2,)   )
                                                                                            
                           
   On vérifie que X1 contient '&FOZERO' pour les CMPS X2, X3, ..., X6
   On vérifie que X2 contient 0.        pour les CMPS X2, X3, ..., X6
    
    
   Liste des fichiers impactés par la correction de la fiche:  16591
     cescel.f
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    essai perso
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------
RESTITUTION FICHE 016679 DU 2011-03-29 17:17:59
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    MACR_ECLA_PG gourmand en mémoire ?
FONCTIONNALITE
   Problème:
   ---------
   Un utilisateur (merci à lui) a remarqué que la commande MACR_ECLA_PG nécessite 3,2 Go
   alors que le calcul MECA_STATIQUE se contente de 203.45Mo.
                                                                                            
                         
   Analyse :
   ---------
   Le problème apparait dans la routine eclpgc.f : on alloue un cham_no_s pouvant accueillir
   toutes les CMPS de la grandeur. Ici, la grandeur est SIEF_F (120 CMPS environ), ce qui
   conduit à un très gros cham_no_s.
                                                                                            
                         
   Corrections :
   ------------
   1) Dans eclpgc.f, on crée le cham_no_s pour les composantes réellement présentes dans le
   cham_elem / ELGA à éclater.
   2) Suite à la correction précédente, MACR_ECLA_PG utilise encore un peu plus de mémoire
   que MECA_STATIQUE (265.36 Mo / 203.45 Mo)
      Pour aller plus loin dans les économies, je rajoute quelques JELIBE ciblés dans les
   routines eclpgc.f et cnscno.f
                                                                                            
                         
   Validation :
   ------------
   L'étude fournie va au bout.
   Les consommations mémoires mesurées (calibre5) sont :
                                                                                            
                         
      RESU=MECA_STATIQUE(EXCIT=_F(TYPE_CHARGE='FIXE', ...
       #     - MEMOIRE UTILISEE            :         7.57 Mo (MAXIMUM ATTEINT :       203.45 Mo)
                                                                                            
                         
      MACR_ECLA_PG(CRITERE='RELATIF', ...
       #     - MEMOIRE UTILISEE            :         7.57 Mo (MAXIMUM ATTEINT :       203.45 Mo)
                                                                                            
                         
      TUTU=PROJ_CHAMP( METHODE='ECLA_PG', ...
       #     - MEMOIRE UTILISEE            :         7.57 Mo (MAXIMUM ATTEINT :       205.52 Mo)
                                                                                            
                         
   Remarque : Pour ce calcul, c'est PROJ_CHAMP qui utilise le plus la mémoire.
              Mais ce n'est pas très significatif. Je m'arrete là pour cette fiche.
                                                                                            
                         
    
    
   Liste des fichiers impactés par la correction de la fiche:  16679
     cnscno.f  eclpgc.f
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    étude fournie
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR desoza       DE SOZA Thomas         DATE 04/20/2011 - 09:12:11

--------------------------------------------------------------------------------
RESTITUTION FICHE 016733 DU 2011-04-05 07:36:15
TYPE anomalie concernant Code_Aster (VERSION 9.1)
TITRE
    [FORUM] Problxc3xa8me de perfs des plaques mutlicouches
FONCTIONNALITE
   Anomalie
   ========
   
   Réf : http://www.code-aster.org/forum2/viewtopic.php?id=14683
   
   Les plaques utilisant DEFI_COQU_MULT sont très lentes quand il s'agit de calculer des
   contraintes.
   Le post du forum en référence le montre. Lors de la correction des fiches issue16224 et
   issue16664, j'ai encore "dégradé" les performances. En effet la routine DXDMUL qui permet
   de calculer une matrice nécessaire pour le Cisaillement Transverse coûte cher et j'ai
   décuplé son nombre d'appel. En particulier son coût croît quadratiquement avec le nombre
   de couches du composite.
   
   Exemple sur le test SSLS128A si on retire OPTION='SANS' du MECA_STATIQUE, le temps de
   calcul explose.
   
   Analyse
   =======
   
   Il est normal que la routine DXDMUL soit de plus en plus coûteuse (on doit faire une somme
   entre -z0 et z, z étant l'altitude de la couche considérée : quand z=z0 c'est plus cher
   que quand z=-z0, on le comprend ;-))
   
   L'évolution autour de RCVALA réalisée en 11.0.1 améliore les choses mais le temps de
   calcul des contraintes reste important.
   Comme le coût de DXDMUL est uniquement dû au calcul de termes pour le cisaillement
   transverse on peut cependant faire en sorte de sauter ce traitement quand par exemple on
   calcule des déformations (cas où on a besoin d'infos de DXDMUL mais du CT).
   
   Correction
   ==========
   
   On modifie les routines qui appellent DXDMUL pour rajouter un argument supplémentaire :
   calcul ou pas des termes de CT.
   Cela permet de retrouver un temps correct pour le calcul des déformations (exemple sur un
   composite à 100 couches) :
   
   Avant
   =====
    * MECA_STATIQUE            :      13.64 :       0.04 :      13.68 :      13.67 *
    * CALC_ELEM                :      15.55 :       0.07 :      15.62 :      15.65 *
    * CALC_ELEM                :     137.52 :       0.43 :     137.95 :     138.23 *
   
   Après
   =====
    * MECA_STATIQUE            :      13.52 :       0.10 :      13.62 :      13.59 *
    * CALC_ELEM                :      14.09 :       0.05 :      14.14 :      14.17 *
    * CALC_ELEM                :      14.08 :       0.09 :      14.17 :      14.20 *
   
   Impact :
   dkqcod.f  dkqcol.f  dkqsie.f  dktcod.f  dktcol.f  dktsie.f  dsqcod.f  dsqcol.f  dsqsie.f 
   dstcod.f  dstcol.f  dstsie.f  dxdmul.f  dxeffi.f  dxsigm.f  dxsigv.f  q4gcod.f  q4gcol.f 
   q4gsie.f  te0033.f
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    astout plaque
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 016731 DU 2011-04-05 07:17:03
TYPE anomalie concernant Code_Aster (VERSION 9.1)
TITRE
    Plaque Q4G - Erreur dans le calcul des efforts
FONCTIONNALITE
   Anomalie
   ========
   
   La modélisation Q4G ne donne pas les résultats analytiques attendus sur un simple test de
   poutre en flexion (en matériau ELAS et avec une seule couche sans excentrement).
   C'est étrange :
   - soit c'est normal pour cette modélisation et alors elle présente à mon avis très peu
   d'intérêt dans le code
   - soit c'est anormal et alors c'est très grave car ici on parle des efforts (EFGE_ELNO) et
   plus des contraintes et c'est une grandeur que l'on utilise souvent
   
   Analyse
   =======
   
   En fait il n'y a pas d'erreur dans l'implémentation. Cet élément (Q4G) utilise une
   approximation bilinéaire pour les rotations Beta_x et Beta_y. Donc si on modélise une
   plaque en flexion avec nu=0 alors on a donc une approximation constante par élément de la
   courbure (Kappa_x=Beta_x,x), il faut donc mailler suffisamment fin pour retrouver la
   solution analytique de la poutre en flexion (en ce qui concerne les moments fléchissants).
   
   Remarque : l'élément DST n'a pas ce problème car l'approximation des rotations est
   quadratique.
   
   Action
   ======
   
   On précise dans la notice d'utilisation des plaques qu'il faut mailler suffisamment en Q4G.
   
   On ajoute des précisions dans la synthèse du test SSLS101 qui dit que les résultats
   obtenus étaient "inacceptables".
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : U2.02.01,V3.03.101
VALIDATION
    nxc3xa9ant
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR flejou       FLEJOU Jean Luc        DATE 04/20/2011 - 09:12:11

--------------------------------------------------------------------------------
RESTITUTION FICHE 016723 DU 2011-04-04 09:19:41
TYPE anomalie concernant Code_Aster (VERSION 11.1)
TITRE
    Blindage AFFE_CARA_ELEM + RIGI_PARASOL
FONCTIONNALITE
   Description de l'erreur :
   - AFFE_MODELE : DIS_T
   - AFFE_CARA_ELEM/RIGI_PARASOL avec 6 valeurs (l'utilisateur pensait affecter des DIS_TR :
    3 raideurs en translation et 3 en rotations).
   
   Fonctionnement de AFFE_CARA_ELEM/RIGI_PARASOL.
   Il est possible de renseigner des grandeurs de raideur et d'amortissement en même temps.
   On peut donc avoir entre 3 et 12 valeurs réelles. Il n'est donc pas possible de faire de
   vérification au niveau des catalogues.
   
   Catalogue AFFE_CARA_ELEM/RIGI_PARASOL :
   ---------------------------------------
   Il faut que les CARA renseignés soient cohérents. Par exemple si on a donné K_TR_D_N on ne
   peut plus que donner A_TR_D_N, les autres valeurs sont interdites. On ne peut donc plus
   mélanger des K_TR_D_N avec des K_T_D_L ou des A_TR_D_L.
   
   Catalogues .cata :
   ------------------
   * grandeur_simple__.cata : Ajout dans CINFDI de TYDI qui permet de connaître le type du
   discret auquel on affecte les caractéristiques.
   * gener_me*.cata pour les discrets : Ajout de TYDI dans CCINFDI
   
   Fortrans :
   ----------
   * acearp : Lors de l'affectation des VALE on vérifie que le nombre de VALE correspond
   exactement à ce qu'il faut. Avant on pouvait en avoir plus, c'est la cause de cette fiche.
   * infdis : enrichissement des clefs, mise à jour des commentaires.
   * aceadi, acearm : initialisation de la carte CINFDI faite par INFDIS (codé en dur
   uniquement à cet endroit).
   * afdi2d, afdi3d : récupération du type de section et enregistrement dans la carte CINFDI.
   * te0009  te0039  te0041  te0042  te0043  te0044  te0045  te0047 : vérification que dans
   le TE on traite effectivement le bon type de discret, si ce n'est pas le cas <F>. Par
   défaut les matrices K, M, A des discrets sont initialisées à zéro, lorsque l'on utilise
   une matrice non affectée par l'utilisateur un message <A> est émis lui indiquant qu'il
   utilise la matrice nulle.
   
   Messages :
   ----------
   * discrets.py : ajout des messages liés au blindage.
   
   Cas tests :
   -----------
   Passage des 274 cas tests avec AFFE_MODELE/DISCRET.
   !!! Il y plus de message <A> à cause des matrices non renseignées par l'utilisateur qui
   sont initialisées à zéro.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Passage des 274 cas tests AFFE_MODELE/DISCRETS
NB_JOURS_TRAV  : 5.5
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR foucault     FOUCAULT Alexandre     DATE 04/20/2011 - 09:12:11

--------------------------------------------------------------------------------
RESTITUTION FICHE 016743 DU 2011-04-06 09:08:50
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Evaluation Parametre de Regularisation pour le 2nd gradient de dilatation
FONCTIONNALITE
   Fiche d'Evolution pour le developpement d'un calcul elementaire de post-traitement : 
   
   *****************
   MISE EN CONTEXTE
   *****************
   Dans le but de caracteriser au mieux la valeur a affecter au parametre de regularisation,
   A1, du 2nd gradient de dilatation, il est possible de determiner une borne superieure a ce
   parametre en fonction de la matrice tangente en vitesse de tout modele de comportement
   adoucissant.
   De cette facon, l'utilisateur pourra determiner en fonction de la taille des mailles du
   probleme qu'il traite la valeur du parametre A1 la mieux adaptee a son probleme. 
   
   
   ************************************
   FICHE D'IDENTITE DE L'OPTION OUVERTE
   ************************************
   OPTION: PDIL_ELGA 
   GRANDEUR: PDIL_R
   COMPOSANTE: A1_LC2
   
   ****************************************
   REFERENCES ANALYTIQUES POUR CETTE OPTION
   ****************************************
   Ce calcul est base sur un probleme analytique 2D d'une bande de cisaillement
   (cf These Foucault(2010) + Chambon et al.(2001)).
   
   La caracterisation du parametre A1 se ramene a l'expression majorante suivante:
   A1 <= (LC/pi)^2*(Cep_1112*Cep_1211-Cep_1212*Cep_1111)/(3*Cep_1212)
   
   avec LC : largeur caracteristique de bande souhaitee
        Cep: tenseur elastoplastique en vitesse
        pi : 3.14159...
   
   Dans le cadre de ce post-traitement elementaire calcule en chaque point de Gauss, on
   determine la quantite intrinseque au modele de comportement, c'est a dire A1/LC^2. 
   
   ****************************
   VALIDATION DU DEVELOPPEMENT
   ****************************
   Option ouverte pour :
   -) les modeles de Hujeux et Drucker-Prager.
   -) les modelisations de deformations planes en Mecanique et HM.
   
   Option testee dans les cas-tests mecaniques SSNV208A et SSNP125A en NON_REGRESSION.
   
   ***************
   IMPACT SOURCES
   ***************
   Impact Fortran:
   --------------
   te0511, evala1, rscrsd
   
   Catalogues d'options elementaires :
   -----------------------------------
   pdil_elga.cata 
   
   Catalogues d'éléments:
   ----------------------
   gener_medh22.cata, gener_medpl2.cata 
   
   Catalogues communs:
   ------------------
   grandeur_simple__.cata 
   
   Catalogues de commandes:
   -----------------------
   calc_elem.capy, c_nom_cham_into.capy, c_nom_grandeur.capy
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : V6.03.125, V6.04.208, U4.81.01, R5.04.03
VALIDATION
    CAS-TEST
NB_JOURS_TRAV  : 5.0
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR sfayolle     FAYOLLE Sebastien      DATE 04/20/2011 - 09:12:11

--------------------------------------------------------------------------------
RESTITUTION FICHE 016628 DU 2011-03-21 07:58:23
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    Implementation de la loi d'ecrouissage de Johnson-Cook
FONCTIONNALITE
   Evolution
   ~~~~~~~~~
   
   L'évolution concerne l'introduction de la loi d'écrouissage isotrope de type Johnson-Cook.
   La loi de Johnson-Cook permet de modéliser le comportement de métaux en prenant en compte
   l'influence de la vitesse de déformation et de la température sur la courbe d'écrouissage.
   Cette loi est extrêmement souvent utilisée dans le cadre d'application de type impact ou
   crash : barre de Taylor, ...
   
   Pour la validation, on a été amené à enrichir les options de vérifications de la matrice
   tangente dans la macro TEST_COMPOR et VERI_MATR_TANG. Dans VERI_MATR_TANG, on introduit un
   nouveau mot clé simple :
   
   PREC_ZERO       =SIMP(statut='f',typ='R',defaut=1.E-12 ),
   
   Ce mot clé permet de définir la précision du zéro machine (en-dessous de prec_zero, on ne
   compare pas les matrices), il sert lors de l'initialisation des objets de la classe TANGENT.
   
   Dans TEST_COMPOR, on introduit un nouveau mot clé facteur VERI_MATR_OPTION disponible
   uniquement lorsque OPTION = 'MECA'  :
   
               VERI_MATR_OPTION  =FACT(statut='f',max=1,fr='options pour le test de la
   matrice tangente',
                 VALE_PERT_RELA  =SIMP(statut='f',typ='R',defaut=1.E-5),
                 PRECISION       =SIMP(statut='f',typ='R',defaut=1.E-4 ),
                 PREC_ZERO       =SIMP(statut='f',typ='R',defaut=1.E-12 ),
                                    ),
   
   Les mots clés simples sous le mot clé facteur VERI_MATR_OPTION servent à contrôler l'étape
   de vérification de la matrice tangente.
   
   Impacts
   ~~~~~~~
   
   Py :
   
   Création de vmis_john_cook.py
   num_lc = 54
   nb_vari = 4
   
   test_compor_ops.py : ajout de VERI_MATR_OPTION
   veri_matr_tang.py : ajout de PREC_ZERO
   
   Catapy :
   
   c_relation.capy : ajout de VMIS_JOHN_COOK
   defi_materiau.capy : ajout de ECRO_COOK
   test_compor.capy : ajout de VERI_MATR_OPTION
   
   Fortran :
   
   lc0054.f : fichier d'encapsulation 
   nmtevp.f : intégration des lois thermo-élasto(visco)plastique
   nmcri9.f et eccook.f : intégration de JC
   
   Doc :
   
   Intégration des relations de comportement élasto-plastique de Von Mises [R5.03.02] 
   Comportements non linéaires [U4.51.11] 
   Opérateur DEFI_MATERIAU [U4.43.01] 
   TEST_COMPOR [U4.92.06] 
   
   Cas tests : V6.07.108, V6.07.110
   
   Validation
   ~~~~~~~~~~
   
   comp002k : TEST LOI DE COMPORTEMENT 3D VMIS_JOHN_COOK
   comp008o : VARIATION TEMPERATURE DANS LE COMPORTEMENT VMIS_JOHN_COOK
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : R5.03.02,U4.51.11,U4.43.01,U4.92.06,V6.07.108,V6.07.110
VALIDATION
    cas test
NB_JOURS_TRAV  : 4.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR delmas       DELMAS Josselin        DATE 04/18/2011 - 01:43:49

--------------------------------------------------------------------------------
RESTITUTION FICHE 016469 DU 2011-02-24 07:53:36
TYPE aide utilisation concernant Code_Aster (VERSION 10.4)
TITRE
    Alarme <CALCULEL_26> : comment l'xc3xa9viter
FONCTIONNALITE
   Cette AOM portait sur l'utilisation de FORC_NODA / REAC_NODA ainsi que les alarmes
   engendrées par CALC_ELEM / CALC_NO avec l'utilisation de GROUP_MA.
   
   On confirme que pour obtenir l'action d'une partie du modèle sur l'autre partie, il faut
   utiliser FORC_NODA. Un exemple est donné dans la doc U de CALC_NO.
   
   L'utilisateur obtient des alarmes indiquant que le champ FORC_NODA existe déjà mais on le
   recalcule car il souhaite calculer plusieurs fois FORC_NODA avec des groupes de mailles
   différents. Cette alarme ne peut être évitée car il n'est pas possible de faire un CALC_NO
   non réentrant. Cette limitation sera levée en version 11 avec l'introduction de CALC_CHAMP.
   
   On obtient une autre alarme disant que CALC_NO ne doit pas être utilisé en réentrant si on
   renseigne GROUP_MA. C'est le serpent qui se mord la queue ! CALC_NO ne peut-être utilisé
   qu'en réentrant.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    *
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR desroche     DESROCHES Xavier       DATE 04/18/2011 - 02:48:56

--------------------------------------------------------------------------------
RESTITUTION FICHE 016441 DU 2011-02-17 14:00:02
TYPE anomalie concernant Code_Aster (VERSION 9.1)
TITRE
    POST_ELEM + modele variable
FONCTIONNALITE
   Avec le chantier ARCHIVAGE, le cas-test sslp105a est cassé 
   lors du POST_ELEM (MASS_INER) avec le message suivant:
   
      !---------------------------------------------------------!
      ! <F> <CALCULEL3_44>                                      !
      !                                                         !
      ! les charges ne s'appuient pas toutes sur le meme modèle !
      !                                                         !
      !                                                         !
      ! Cette erreur est fatale. Le code s'arrete.              !
      !---------------------------------------------------------!
   
   Le problème vient du fait que CALC_ELEM vérifie si les 
   charges qui ont conduit au résultat s'appuient toutes sur le 
   même modèle, alors que STAT_NON_LINE ne le vérifie pas. Or le 
   resu a été calculé avec des charges s'appuyant sur des 
   modèles différents (ch3 sur mo1 et ch51 sur mo2), ce qui 
   n'est pas normal.
   
   Après investigation supplémentaire, j'ai compris pourquoi 
   l'erreur apparait en V10 et ne se produisait pas en STA9 :
   dans le cas où les charges varient au cours du calcul, en V10 
   la liste des charges, quel que soit l'instant, est celle du 
   dernier instant (à tort).
   Plus exactement dans le cas-test SSLP105a, on a :
   
   numéro d'ordre    0         1         2         3
   charges               ch210          ch3       ch3
                         ch220          ch220     ch51
   
   Toutes les charges s'appuient sur mo1, sauf ch51 sur mo2.
   Le POST_ELEM MASS_INER est fait à l'ordre 1.
   
   En STA9, on récupère la bonne liste et les charges s'appuient 
   sur mo1, donc OK.
   En NEW10, on récupère la liste de nume_ordre=3, et il y a 
   erreur car ch3 et ch51 ne s'appuient pas sur le même modèle.
   
   Il y a donc une correction à faire en 10.
   J'émets une nouvelle fiche, celle-ci étant à fermer.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    sans
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR geniaut      GENIAUT Samuel         DATE 04/19/2011 - 11:44:27

--------------------------------------------------------------------------------
RESTITUTION FICHE 014583 DU 2010-02-09 10:18:36
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    RUPT : abscisse curviligne normee dans les tables de POST_K1_K2_K3 et CALC_G
FONCTIONNALITE
   Problème :
   ----------
   
   On souhaite rajouter une colonne supplémentaire dans les tables issues des commandes
   POST_K1_K2_K3 et CALC_G, cette colonne correspond à l'abscisse curviligne normée le long du 
   fond de fissure.
   
   
   Solution
   --------
   
   On introduit un nouvel opérateur de post-traitements génériques pour la mécanique de la 
   rupture, conformément à la fiche 15522.
   
   #& AJOUT COMMANDE
   # RESPONSABLE 
   from Macro.post_rupture_ops import post_rupture_ops
   POST_RUPTURE=MACRO(nom="POST_RUPTURE",op=post_rupture_ops,sd_prod=table_sdaster,
    . . . . . . . . . fr="post-traitements en Rupture",
    . . . . . . . . . reentrant='o',
    . . . . . . . . . UIinfo={"groupes":("Résultats et champs","Rupture",)},
   
    . . .TABLE . . = SIMP(statut='o',typ=table_sdaster),
    . . .OPERATION = SIMP(statut='o', typ='TXM',into=('ABSC_CURV_NORM',)),
   
   #-----------------------------------------------------------------------------------------------------------------------------------
   # . . . . . . . . 'ABSC_CURV_NORM'
   #-----------------------------------------------------------------------------------------------------------------------------------
   
    . . .b_absc = BLOC(condition="OPERATION == 'ABSC_CURV_NORM'",fr="normalise l'abscisse 
   curviligne",
   
    . . . . . . . . . .NOM_PARA = 
   SIMP(statut='f',typ='TXM',max=1,defaut="ABSC_CURV_NORM",fr="Nom de la nouvelle colonne"),
    . . . . . . . . .
    . . . . . . . . . ),
   
   ) .;
   
   
   nouvel opérateur : POST_RUPTURE
   sd produite : table
   re-entrant : on rajoute une colonne à la table en entrée
   OPTION = 'ABSC_CURV_NORM'
   on ne travaille que sur un fond de fissure a la fois (comme CALG_G)
   s'il y a plusieurs instant, il faut que cela soit sur le même fond !
   
   On réalise les vérifications suivantes :
   - ABSC_CURV est bien présent
   - si NUME_FOND est présent dans la table, vérifier qu'il n'y a qu'un fond
   
   
   impact : 
   post_rupture_ops.py
   
   
   Validation :
   Introduction d'un nouveau cas test informatique : zzzz287a
   titre : validation elementaire de l'opérateur POST_RUPTURE
   Dans ce test, on lit une table donnée par l'utilisateur dans laquelle se trouve K1 et K2
   le lond d'un fond de fissure pour 2 instants.
   On teste qu'après normalisation, le max de l'abscisse curviligne vaut 1.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : U4.82.04, V1.01.287, U2.05.01
VALIDATION
    zzzz287a
NB_JOURS_TRAV  : 3.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 013557 DU 2009-06-23 16:07:18
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    RUPT : calcul de l'angle de bifurcation en mecanique de la rupture
FONCTIONNALITE
   Problème :
   ----------
   
   Actuellement, l'angle de bifurcation (BETA) de la fissure est calculé dans l'opérateur
   CALC_G, option CALC_K_G, en 3D (mais pas en 2D). La valeur de BETA est stockée dans le
   tableau résultat, et peut être ensuite réutilisée dans l'opérateur PROPA_FISS pour la
   propagation de la fissure (méthode X-FEM).
   Le critère est celui de la contrainte circonférentielle max.
   
   On souhaite sortir le calcul de BETA de la commande CALC_G, au profit de POST_RUPTURE.
   compatible avec CALC_G et POST_K1_K2_K3, en 2D/3D,
   le critère de bifurcation étant un choix utilisateur (parmi les critères implantés)
   
   Remarque : il existe aussi un calcul de l'angle de propagation selon 3 autres critères (K1max,
   K2min et Gmax) réalisé dans CALC_G si option = CALC_K_G en 2D et INFO=2 !!! Les valeurs
   sont alors imprimées dans le fichier de message. La recherche de l'angle est faite de 10
   degré en 10.
   
   
   Solution :
   ----------
   
   On introduit une nouvelle option de l'opérateur POST_RUPTURE :
   
   #-----------------------------------------------------------------------------------------------------------------------------------
   # . . . . . . . . 'ANGLE_BIFURCATION'
   #-----------------------------------------------------------------------------------------------------------------------------------
    . . . . . . . . .
    . . .b_angle = BLOC(condition="OPERATION == 'ANGLE_BIFURCATION' .",fr="Angle de bifurcation",
   
    . . . . . . . . . . NOM_PARA = SIMP(statut='f',typ='TXM',max=1,defaut="BETA",fr="Nom de
   la nouvelle colonne"),
   
    . . . . . . . . . . CRITERE .=
   SIMP(statut='f',typ='TXM',max=1,defaut="SITT_MAX",into=('SITT_MAX','K1_MAX','K2_NUL'),),
   
    . . . . . . . . .
    . . . . . . . . . . ),
   
   
   OPERATION = 'ANGLE_BIFURCATION'
   on ne travaille que sur un fond de fissure a la fois (comme CALG_G)
   s'il y a plusieurs instant, il faut que cela soit sur le même fond !
   
   On réalise les vérifications suivantes :
   - les parametres dont on a besoin sont bien présents
   - si NUME_FOND est présent dans la table, vérifier qu'il n'y a qu'un fond
   
   On autorise 3 critères :
   - SITT_MAX : contrainte circonférentielle max (par défaut)
   - K1_MAX, K2_NUL : critères d'Amestoy et Bui, uniquement en 2D !
   Remarque : on ne permet pas le critère G_MAX car il nécessite de calculer G par la formule
   d'Irwin et donc de connaitre les paramètres élastiques du matériau en fond de fissure
   ainsi que le type de modélisation. Ce qui nécessiterait 2 mot-clés supplémentaires + tout
   un traitement si le matériau dépend de la température et/ou de de l'espace. On verra si un
   tel besoin se présente.
   On ne sait pas vérifier si on est en 2D. l'utilisateur doit faire attention.
   De toute façon, ces critères ne sont pas employés en pratique car ils ne donnent un angle
   qu'à 10° près.
   
   impact : 
   post_rupture_ops.py
   post_rupture.capy
   rupture1.py
   
   Validation :
   Enrichissement du cas test informatique : zzzz287a
   Dans ce test, on utilise la table déjà lue pour calculer l'angle suivant les critères
   implémentés,
   Pour divers ratio de K1/K2.
   
   On constate que le critère K2_NUL ne marche pas pour un angle supérieur à 60° (une alarme
   est émise dans un tel cas). C'est pour cela que le test émet des alarmes (RUPTURE1_60).
   On constate également que pour les grands angles, le critère K1_MAX est très sensible au
   signe de K1
   donc si k1 est négatif ou nul, on force k1 = +0.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.82.04, V1.01.287, U2.05.01
VALIDATION
    zzzz287a
NB_JOURS_TRAV  : 5.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 016684 DU 2011-03-30 10:58:55
TYPE evolution concernant Code_Aster (VERSION )
TITRE
    RUPT : calcul de l'avancxc3xa9e de fissure en fatigue
FONCTIONNALITE
   Problème :
   ----------
   
   On souhaite pouvoir faire le calcul de l'avancée d'une fissure compte tenu d'une loi de
   propagation en fatigue.
   
   
   
   Solution :
   ----------
   
   On introduit une nouvelle option dans l'opérateur POST_RUPTURE : OPERATION = 'LOI_PROPA'.
   
    . . .b_Loi_Propa . = BLOC(condition="OPERATION == 'LOI_PROPA' .",fr="calcul de
   l'incrément d'avancée de fissure par cycle",
   
    . . . . NOM_PARA . . . = SIMP(statut='f',typ='TXM',defaut="DELTA_A" . ,max=1,fr="Nom de
   la nouvelle colonne"),
    . . . . NOM_DELTA_K_EQ = SIMP(statut='f',typ='TXM',defaut="DELTA_K_EQ",max=1,fr="Nom de
   la quantité correspondant au Delta_K_eq"),
    . . . . LOI . . . . . .= SIMP(statut='o',typ='TXM',into=("PARIS",)),
   
    . . . . b_paris = BLOC(condition = "LOI=='PARIS'",
    . . . . . . . . . . . .C = SIMP(statut='o',typ='R',),
    . . . . . . . . . . . .M = SIMP(statut='o',typ='R',),
    . . . . . . . . . . . ),
   
    . . . . . . . . . . . .),
   
   OPERATION = 'LOI_PROPA'
   On ne travaille que sur un fond de fissure à la fois (comme CALG_G).
   On vérifie que les paramètres dont on a besoin sont bien présents dans la table.
   
   Pour le moment, on ne propose que la loi de Paris da/dn = C. deltaKeq ** M.
   C et M sont des paramètres matériaux.
   Il faut que la table en entrée contienne donc une colonne correspondant à deltaKeq.
   
   On créée dans la table en sortie une colonne supplémentaire correspondant à l'avancée pour
   1 cycle de chargement.
   
   
   Validation :
   Enrichissement du cas test informatique : zzzz287a
   On lit une nouvelle table qui contient l'évolution de deltaKeq pour différents cycles (en
   2 points du fond).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.82.04, V1.01.287, U2.05.01
VALIDATION
    zzzz287a
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR desroche     DESROCHES Xavier       DATE 04/18/2011 - 02:03:19

--------------------------------------------------------------------------------
RESTITUTION FICHE 011943 DU 2008-04-08 09:06:15
TYPE evolution concernant Code_Aster (VERSION )
TMA : DeltaCad
TITRE
    QUA2 - Adaptation de la discrxc3xa9tisation des forces surfaciques pour les applications en dynamique utilisant la matrice masse lumpxc3xa9e
FONCTIONNALITE
   Problème posé :
   --------------
   
   Sur les DKT et DST le passage entre la charge surfacique (pression, pésanteur, 
   etc.) et les forces nodales (qui servent réellement au calcul) ne se fait pas 
   par l'intégrale de la charge pondérée par les fonctions de forme mais par des 
   formules géométriques qui prennent en compte les angles des T3.
   Cette programmation existe depuis le début des plaques et a l'avantage d'être 
   plus précise que les formules standards. Par contre, elle a le gros inconvénient
   de ne pas être cohérente avec la matrice de masse en dynamique, et peut donc 
   donner des résultats faux. On s'en aperçoit en appliquant une pression sur une 
   structure sans blocages, on n'obtient pas un mouvement de corps rigide mais des 
   déformations parasites.
   A noter que ce problème n'existe pas pour les Q4, car la pondération par les 
   angles est prise en compte dans les formules standards par l'intermédiaire du 
   jacobien (qui n'est pas constant). Les 2 programmations sont strictement 
   équivalentes.
   
   Solution préconisée :
   -------------------
   On supprime les formules géométriques pour les T3 et on la remplace par les 
   formules de projection.
   
   Impact sur les cas-tests : 13 cas-tests deviennent NOOK !
   -------------------------
   Quasiment tous les cas-tests DKT et DST avec un chargement en pression ou en 
   pesanteur. Parmi ceux-ci : 
   
   - 11 ont vu leurs valeurs changer très peu : il suffit d'ajuster la tolérance
   
   - SENSM15A est un cas-test de sensibilité dont une valeur de dérivée est très 
   différente : 79% d'erreur.
   C'est normal car la solution de référence calculée par une méthode de 
   différences finies a changé. On la recalcule et l'erreur est < 1%.
   
   - SSLS114C a des erreurs fortes sur les déplacements et contraintes ( > 30%).
   Là, cela vient du maillage qui est assez grossier. Avec l'ancienne méthode, la 
   répartition des efforts qui tenait compte des angles "compensait" le maillage 
   grossier. Ce n'est plus le cas maintenant (répartition 1/3 1/3 1/3), et il faut 
   raffiner le maillage. On peut le visualiser page 10 de la doc V3.03.114. Le 
   quart de virole cylindrique est modélisé par 2X6 rangées de triangle. En 
   modélisant avec 8x24 rangées, on redescend sous les tolérances qui existent.
   C'est en fait le seul cas-test où les formules géométriques apportaient une 
   réelle amélioration par rapport aux formules standards.
   
   Travaux réalisés :
   ----------------
   a) Intervention dans les cas-tests
   ==================================
    - Ajustement des tolérances pour les 11 cas-tests suivants 
        ssls100a, ssls100b, 
        ssls101a, ssls101b, ssls101m, ssls101n
        ssls118c, ssls118g
        ssls200a
        ssls503a
        zzzz189a
    - Modification de la valeur de référence
        sensm15c
    - Création d'un nouveau maillage et ajustement de la tolérance
        ssls114c
   
   b) Validation
   =============
     Passage de la liste complète 
   
   c) Documentation
   ================
   => Report dans les doc V des modifications effectuées
        Tolérances
        Mise à jour de la modélisation ssls114c
   => Mise en conformité des doc V par rapport aux nouvelles règles de rédaction
       - Cas tests (58 modélisations)
           ssls100: 10 modélisations
           ssls101: 14 modélisations
           ssls118: 14 modélisations
           ssls200:  1 modélisation
           ssls503:  4 modélisations
           zzzz189:  2 modélisations
           sensm15:  2 modélisations
           ssls114: 11 modélisations
       - Suppression du paragraphe "FONCTIONNALITE TESTEE"
       - mise en forme des résultats : (on supprime tous les résultats Code_Aster) 
   
         -------------------------------------------------------------------------
         |Identification  |  type de référence | valeur de référence | tolérance |
         -------------------------------------------------------------------------
         |                |                    |                     |           |
         -------------------------------------------------------------------------
   
   La documentation est en attente de la version 11.
   Elle est reportée à la fiche 16785.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    13 tests dst/dkt
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

 CASTEST AJOUT comp002k                     courtois M.COURTOIS         105    105      0
 CASTEST AJOUT comp008o                     courtois M.COURTOIS         113    113      0
 CASTEST AJOUT perf012a                     courtois M.COURTOIS         211    211      0
 CASTEST AJOUT zzzz287a                      geniaut S.GENIAUT          185    185      0
 CASTEST MODIF sdls121a                       assire A.ASSIRE           122      2      2
 CASTEST MODIF sdls121b                       assire A.ASSIRE           111      2      2
 CASTEST MODIF sdls121c                       assire A.ASSIRE           115      2      2
 CASTEST MODIF sensm15a                    lebouvier F.LEBOUVIER        341      5      5
 CASTEST MODIF ssls100a                    lebouvier F.LEBOUVIER        321     14     13
 CASTEST MODIF ssls100b                    lebouvier F.LEBOUVIER        275      4      4
 CASTEST MODIF ssls101a                    lebouvier F.LEBOUVIER        618     13     12
 CASTEST MODIF ssls101b                    lebouvier F.LEBOUVIER        356     16     12
 CASTEST MODIF ssls101m                    lebouvier F.LEBOUVIER        124      5      5
 CASTEST MODIF ssls101n                    lebouvier F.LEBOUVIER         93      4      4
 CASTEST MODIF ssls114c                    lebouvier F.LEBOUVIER        493     52     50
 CASTEST MODIF ssls118c                    lebouvier F.LEBOUVIER       1133     10      9
 CASTEST MODIF ssls118g                    lebouvier F.LEBOUVIER       1177     11     10
 CASTEST MODIF ssls135a                     courtois M.COURTOIS         419     14      3
 CASTEST MODIF ssls200a                    lebouvier F.LEBOUVIER        402     10     10
 CASTEST MODIF ssls503a                    lebouvier F.LEBOUVIER        199      5      4
 CASTEST MODIF ssnp125a                     courtois M.COURTOIS         513     20      2
 CASTEST MODIF ssnv208a                     courtois M.COURTOIS         613     20      2
 CASTEST MODIF zzzz159a                       assire A.ASSIRE           113     74     77
 CASTEST MODIF zzzz159c                       assire A.ASSIRE           127      2      2
 CASTEST MODIF zzzz159d                       assire A.ASSIRE           123      2      2
 CASTEST MODIF zzzz159e                       assire A.ASSIRE           176     74      3
 CASTEST MODIF zzzz189a                    lebouvier F.LEBOUVIER        297      7      7
CATALOGU AJOUT options/pdil_elga            courtois M.COURTOIS          36     36      0
CATALOGU MODIF compelem/grandeur_simple__   courtois M.COURTOIS        2127      9      3
CATALOGU MODIF typelem/gener_cmcfz1            abbas M.ABBAS             91     10      6
CATALOGU MODIF typelem/gener_cmcfz2            abbas M.ABBAS            185     26      2
CATALOGU MODIF typelem/gener_cmcoz1            abbas M.ABBAS             82      4     10
CATALOGU MODIF typelem/gener_cmcoz2            abbas M.ABBAS            149      2      2
CATALOGU MODIF typelem/gener_me2dt0         courtois M.COURTOIS         187      2      2
CATALOGU MODIF typelem/gener_me2dt1         courtois M.COURTOIS         200      2      2
CATALOGU MODIF typelem/gener_me2tr0         courtois M.COURTOIS         186      2      2
CATALOGU MODIF typelem/gener_me2tr1         courtois M.COURTOIS         200      2      2
CATALOGU MODIF typelem/gener_medh22         courtois M.COURTOIS         253      4      1
CATALOGU MODIF typelem/gener_medit0         courtois M.COURTOIS         199      2      2
CATALOGU MODIF typelem/gener_medit1         courtois M.COURTOIS         204      2      2
CATALOGU MODIF typelem/gener_medpl2         courtois M.COURTOIS         588      4      1
CATALOGU MODIF typelem/gener_medtr0         courtois M.COURTOIS         205      2      2
CATALOGU MODIF typelem/gener_medtr1         courtois M.COURTOIS         218      4      3
CATALOPY AJOUT commande/post_rupture         geniaut S.GENIAUT          116    116      0
CATALOPY MODIF commande/affe_cara_elem      courtois M.COURTOIS         596     10      3
CATALOPY MODIF commande/calc_elem           courtois M.COURTOIS         536      2      2
CATALOPY MODIF commande/defi_materiau       courtois M.COURTOIS        3150     14      2
CATALOPY MODIF commande/macr_recal            assire A.ASSIRE           131     23      5
CATALOPY MODIF commande/test_compor         courtois M.COURTOIS          87      6      1
CATALOPY MODIF commun/c_nom_cham_into       courtois M.COURTOIS         204      2      1
CATALOPY MODIF commun/c_nom_grandeur        courtois M.COURTOIS         152      2      1
CATALOPY MODIF commun/c_relation            courtois M.COURTOIS         153      2      1
       C MODIF supervis/astermodule         courtois M.COURTOIS        3906     34     46
       C MODIF utilitai/asterm              courtois M.COURTOIS         394      2      1
 FORTRAN AJOUT algorith/eccook              courtois M.COURTOIS          56     56      0
 FORTRAN AJOUT algorith/lc0054              courtois M.COURTOIS         107    107      0
 FORTRAN AJOUT algorith/nmcri9              courtois M.COURTOIS          53     53      0
 FORTRAN AJOUT algorith/nmtevp              courtois M.COURTOIS         364    364      0
 FORTRAN AJOUT elements/evala1              courtois M.COURTOIS         162    162      0
 FORTRAN AJOUT elements/mmintg                 abbas M.ABBAS             86     86      0
 FORTRAN AJOUT elements/mmjacg                 abbas M.ABBAS            201    201      0
 FORTRAN AJOUT elements/mmjeug                 abbas M.ABBAS             63     63      0
 FORTRAN AJOUT elements/mmlacg                 abbas M.ABBAS            104    104      0
 FORTRAN AJOUT elements/mmmlav                 abbas M.ABBAS            134    134      0
 FORTRAN AJOUT elements/mmmlcf                 abbas M.ABBAS             94     94      0
 FORTRAN AJOUT elements/mmmpha                 abbas M.ABBAS            117    117      0
 FORTRAN AJOUT elements/mmmsta                 abbas M.ABBAS            139    139      0
 FORTRAN AJOUT elements/mmmtav                 abbas M.ABBAS            223    223      0
 FORTRAN AJOUT elements/mmmte1                 abbas M.ABBAS            124    124      0
 FORTRAN AJOUT elements/mmmte2                 abbas M.ABBAS            139    139      0
 FORTRAN AJOUT elements/mmmtex                 abbas M.ABBAS            108    108      0
 FORTRAN AJOUT elements/mmmtuc                 abbas M.ABBAS             77     77      0
 FORTRAN AJOUT elements/mmmtuf                 abbas M.ABBAS             95     95      0
 FORTRAN AJOUT elements/mmmvex                 abbas M.ABBAS             99     99      0
 FORTRAN AJOUT elements/mmtape                 abbas M.ABBAS            137    137      0
 FORTRAN AJOUT elements/mmtfpe                 abbas M.ABBAS            144    144      0
 FORTRAN AJOUT elements/mmtpav                 abbas M.ABBAS            102    102      0
 FORTRAN AJOUT elements/mmtppe                 abbas M.ABBAS            214    214      0
 FORTRAN AJOUT elements/mmtpro                 abbas M.ABBAS             71     71      0
 FORTRAN AJOUT elements/mmtrpr                 abbas M.ABBAS            119    119      0
 FORTRAN AJOUT elements/mmvape                 abbas M.ABBAS            115    115      0
 FORTRAN AJOUT elements/mmvfpe                 abbas M.ABBAS            128    128      0
 FORTRAN AJOUT elements/mmvppe                 abbas M.ABBAS            242    242      0
 FORTRAN AJOUT elements/mmvspe                 abbas M.ABBAS             50     50      0
 FORTRAN AJOUT elements/te0511              courtois M.COURTOIS         166    166      0
 FORTRAN MODIF algorith/ascavc              courtois M.COURTOIS         174     23      7
 FORTRAN MODIF algorith/assesu              courtois M.COURTOIS         969    117    120
 FORTRAN MODIF algorith/assthm              courtois M.COURTOIS         439      3      3
 FORTRAN MODIF algorith/assvsu              courtois M.COURTOIS        2338    307    313
 FORTRAN MODIF algorith/betmat              courtois M.COURTOIS         148     18     20
 FORTRAN MODIF algorith/brag00              courtois M.COURTOIS         160      5      9
 FORTRAN MODIF algorith/brag01              courtois M.COURTOIS         853     22     27
 FORTRAN MODIF algorith/calcft              courtois M.COURTOIS         148     24     24
 FORTRAN MODIF algorith/calcme              courtois M.COURTOIS         549      6      6
 FORTRAN MODIF algorith/cavini              courtois M.COURTOIS         126      5      5
 FORTRAN MODIF algorith/cjsmat              courtois M.COURTOIS         116      9     11
 FORTRAN MODIF algorith/coefdg              courtois M.COURTOIS          50      4      4
 FORTRAN MODIF algorith/coeime              courtois M.COURTOIS         251      4      4
 FORTRAN MODIF algorith/cvmmat              courtois M.COURTOIS         194     13     15
 FORTRAN MODIF algorith/dicrgr              courtois M.COURTOIS         382     14     14
 FORTRAN MODIF algorith/dil2gr              courtois M.COURTOIS          66      6      6
 FORTRAN MODIF algorith/dilpen              courtois M.COURTOIS          40      3      3
 FORTRAN MODIF algorith/dpmate              courtois M.COURTOIS         140      9      9
 FORTRAN MODIF algorith/dpvpma              courtois M.COURTOIS         127      6      6
 FORTRAN MODIF algorith/edgmat              courtois M.COURTOIS         244      9     10
 FORTRAN MODIF algorith/eibex               courtois M.COURTOIS         398      4      4
 FORTRAN MODIF algorith/elagon              courtois M.COURTOIS         175      4      5
 FORTRAN MODIF algorith/fonoda              courtois M.COURTOIS         209      8      8
 FORTRAN MODIF algorith/fragex              courtois M.COURTOIS         304      4      5
 FORTRAN MODIF algorith/hbrmat              courtois M.COURTOIS         177      7      7
 FORTRAN MODIF algorith/hujmat              courtois M.COURTOIS         156     10     11
 FORTRAN MODIF algorith/hypmat              courtois M.COURTOIS         115      9     13
 FORTRAN MODIF algorith/inithm              courtois M.COURTOIS          69      5      5
 FORTRAN MODIF algorith/irrmat              courtois M.COURTOIS         487     11     11
 FORTRAN MODIF algorith/lc0001              courtois M.COURTOIS         159      4      4
 FORTRAN MODIF algorith/lc0050              courtois M.COURTOIS         280      5      6
 FORTRAN MODIF algorith/lcbrgm              courtois M.COURTOIS         204      8      8
 FORTRAN MODIF algorith/lcdpnl              courtois M.COURTOIS         133      6      6
 FORTRAN MODIF algorith/lcedex              courtois M.COURTOIS         207      4      4
 FORTRAN MODIF algorith/lcegeo              courtois M.COURTOIS         189      4      5
 FORTRAN MODIF algorith/lceib1              courtois M.COURTOIS         179     14     14
 FORTRAN MODIF algorith/lceifa              courtois M.COURTOIS         211      3      3
 FORTRAN MODIF algorith/lceiou              courtois M.COURTOIS         215      3      3
 FORTRAN MODIF algorith/lceitc              courtois M.COURTOIS         251      3      3
 FORTRAN MODIF algorith/lceitr              courtois M.COURTOIS         223      5      5
 FORTRAN MODIF algorith/lcejex              courtois M.COURTOIS         213      5      5
 FORTRAN MODIF algorith/lcejfr              courtois M.COURTOIS         307      8      8
 FORTRAN MODIF algorith/lcejli              courtois M.COURTOIS         255      5      5
 FORTRAN MODIF algorith/lcejmr              courtois M.COURTOIS         470     18     18
 FORTRAN MODIF algorith/lceobg              courtois M.COURTOIS        1071      4      4
 FORTRAN MODIF algorith/lceobl              courtois M.COURTOIS         968      4      5
 FORTRAN MODIF algorith/lcesgv              courtois M.COURTOIS         268      6      7
 FORTRAN MODIF algorith/lcfrge              courtois M.COURTOIS         257      7      7
 FORTRAN MODIF algorith/lcfrlo              courtois M.COURTOIS         245      7      7
 FORTRAN MODIF algorith/lcgdpm              courtois M.COURTOIS         929     26     25
 FORTRAN MODIF algorith/lcimpl              courtois M.COURTOIS         103     13     16
 FORTRAN MODIF algorith/lcjoba              courtois M.COURTOIS         381      7      7
 FORTRAN MODIF algorith/lcjohm              courtois M.COURTOIS         105      4      4
 FORTRAN MODIF algorith/lckimp              courtois M.COURTOIS         234      7      9
 FORTRAN MODIF algorith/lclbr2              courtois M.COURTOIS          72      4      7
 FORTRAN MODIF algorith/lcldsb              courtois M.COURTOIS         466     13     13
 FORTRAN MODIF algorith/lcmaec              courtois M.COURTOIS          69      6      7
 FORTRAN MODIF algorith/lcmaei              courtois M.COURTOIS         156     19     19
 FORTRAN MODIF algorith/lcmafl              courtois M.COURTOIS         170     16     16
 FORTRAN MODIF algorith/lcmaza              courtois M.COURTOIS         610     12     12
 FORTRAN MODIF algorith/lcmmap              courtois M.COURTOIS         496     20     23
 FORTRAN MODIF algorith/lcmmat              courtois M.COURTOIS         383     18     19
 FORTRAN MODIF algorith/lcmzge              courtois M.COURTOIS         557     12     12
 FORTRAN MODIF algorith/lcpima              courtois M.COURTOIS         146     20     20
 FORTRAN MODIF algorith/lcpivm              courtois M.COURTOIS         232      7      7
 FORTRAN MODIF algorith/lcrofs              courtois M.COURTOIS          71      3      3
 FORTRAN MODIF algorith/lcroma              courtois M.COURTOIS          91      8      8
 FORTRAN MODIF algorith/lcrotg              courtois M.COURTOIS         222      3      3
 FORTRAN MODIF algorith/lcroy1              courtois M.COURTOIS         117      3      3
 FORTRAN MODIF algorith/lcroyi              courtois M.COURTOIS          93      3      3
 FORTRAN MODIF algorith/lcumfe              courtois M.COURTOIS         598     17     20
 FORTRAN MODIF algorith/lcumfp              courtois M.COURTOIS         724     21     25
 FORTRAN MODIF algorith/lcvmf1              courtois M.COURTOIS          73      3      4
 FORTRAN MODIF algorith/lcvmgv              courtois M.COURTOIS         553     25     28
 FORTRAN MODIF algorith/lglmat              courtois M.COURTOIS         160      5      5
 FORTRAN MODIF algorith/lklmat              courtois M.COURTOIS         165      6      6
 FORTRAN MODIF algorith/mmelem                 abbas M.ABBAS            331     81     77
 FORTRAN MODIF algorith/mmusum                 abbas M.ABBAS            109      2      2
 FORTRAN MODIF algorith/nifint              courtois M.COURTOIS         460      6      6
 FORTRAN MODIF algorith/nifn2b              courtois M.COURTOIS         161      2      2
 FORTRAN MODIF algorith/nifn2c              courtois M.COURTOIS         151      2      2
 FORTRAN MODIF algorith/nifn2d              courtois M.COURTOIS         143      3      3
 FORTRAN MODIF algorith/nifn3b              courtois M.COURTOIS         155      2      2
 FORTRAN MODIF algorith/nifn3c              courtois M.COURTOIS         143      2      2
 FORTRAN MODIF algorith/nifn3d              courtois M.COURTOIS         138      3      3
 FORTRAN MODIF algorith/niforc              courtois M.COURTOIS         224      6      6
 FORTRAN MODIF algorith/nipl2b              courtois M.COURTOIS         288      3      3
 FORTRAN MODIF algorith/nipl2c              courtois M.COURTOIS         276      3      3
 FORTRAN MODIF algorith/nipl2d              courtois M.COURTOIS         355      7      7
 FORTRAN MODIF algorith/nipl3b              courtois M.COURTOIS         280      3      3
 FORTRAN MODIF algorith/nipl3c              courtois M.COURTOIS         268      3      3
 FORTRAN MODIF algorith/nipl3d              courtois M.COURTOIS         347      5      5
 FORTRAN MODIF algorith/nm1dci              courtois M.COURTOIS         110      4      5
 FORTRAN MODIF algorith/nm1dis              courtois M.COURTOIS         159     10     12
 FORTRAN MODIF algorith/nm1tra              courtois M.COURTOIS          94      5      5
 FORTRAN MODIF algorith/nm1vil              courtois M.COURTOIS         237     13     15
 FORTRAN MODIF algorith/nmas2d              courtois M.COURTOIS         483      4      4
 FORTRAN MODIF algorith/nmas3d              courtois M.COURTOIS         418      7      7
 FORTRAN MODIF algorith/nmasf2              courtois M.COURTOIS         256      5      5
 FORTRAN MODIF algorith/nmasf3              courtois M.COURTOIS         266      8      9
 FORTRAN MODIF algorith/nmasse              courtois M.COURTOIS          60      4      4
 FORTRAN MODIF algorith/nmasym              courtois M.COURTOIS         137      4      5
 FORTRAN MODIF algorith/nmbarc              courtois M.COURTOIS        1337     16     23
 FORTRAN MODIF algorith/nmccam              courtois M.COURTOIS         981     10     12
 FORTRAN MODIF algorith/nmcham              courtois M.COURTOIS         193     13     14
 FORTRAN MODIF algorith/nmcine              courtois M.COURTOIS         221      9     10
 FORTRAN MODIF algorith/nmco1d              courtois M.COURTOIS         154      7      8
 FORTRAN MODIF algorith/nmcpel              courtois M.COURTOIS         125      6      6
 FORTRAN MODIF algorith/nmcpla              courtois M.COURTOIS         440     13     19
 FORTRAN MODIF algorith/nmcri1              courtois M.COURTOIS          66      3      4
 FORTRAN MODIF algorith/nmecmi              courtois M.COURTOIS         406     12     14
 FORTRAN MODIF algorith/nmed2d              courtois M.COURTOIS         451      9     10
 FORTRAN MODIF algorith/nmedel              courtois M.COURTOIS         111      5      7
 FORTRAN MODIF algorith/nmedpi              courtois M.COURTOIS         142      4      4
 FORTRAN MODIF algorith/nmel2d              courtois M.COURTOIS         244      5      5
 FORTRAN MODIF algorith/nmel3d              courtois M.COURTOIS         239      5      5
 FORTRAN MODIF algorith/nmelnl              courtois M.COURTOIS         492     16     18
 FORTRAN MODIF algorith/nmelru              courtois M.COURTOIS         243     12     12
 FORTRAN MODIF algorith/nmfogn              courtois M.COURTOIS         152      4      4
 FORTRAN MODIF algorith/nmfogv              courtois M.COURTOIS         165      3      3
 FORTRAN MODIF algorith/nmgc2d              courtois M.COURTOIS         330      5      5
 FORTRAN MODIF algorith/nmgc3d              courtois M.COURTOIS         333      4      4
 FORTRAN MODIF algorith/nmgeom              courtois M.COURTOIS         177     21     11
 FORTRAN MODIF algorith/nmgr2d              courtois M.COURTOIS         374      4      4
 FORTRAN MODIF algorith/nmgr3d              courtois M.COURTOIS         363      4      4
 FORTRAN MODIF algorith/nmgran              courtois M.COURTOIS         498     32     34
 FORTRAN MODIF algorith/nmgvno              courtois M.COURTOIS         411      8     10
 FORTRAN MODIF algorith/nmgz2d              courtois M.COURTOIS         325      5      5
 FORTRAN MODIF algorith/nmgz3d              courtois M.COURTOIS         312      5      5
 FORTRAN MODIF algorith/nmhoff              courtois M.COURTOIS         112      4      4
 FORTRAN MODIF algorith/nmholi              courtois M.COURTOIS          94      5      5
 FORTRAN MODIF algorith/nmiclb              courtois M.COURTOIS         174      7      8
 FORTRAN MODIF algorith/nmisex              courtois M.COURTOIS         460     12     14
 FORTRAN MODIF algorith/nmisot              courtois M.COURTOIS         528     42     44
 FORTRAN MODIF algorith/nmmaba              courtois M.COURTOIS         166      8     14
 FORTRAN MODIF algorith/nmpl2d              courtois M.COURTOIS         296      4      4
 FORTRAN MODIF algorith/nmpl3d              courtois M.COURTOIS         307     13      9
 FORTRAN MODIF algorith/nmplge              courtois M.COURTOIS         311      4      5
 FORTRAN MODIF algorith/nmplgs              courtois M.COURTOIS         639      6      7
 FORTRAN MODIF algorith/nmplgv              courtois M.COURTOIS         411      3      3
 FORTRAN MODIF algorith/nmplru              courtois M.COURTOIS         193     12     14
 FORTRAN MODIF algorith/nmsh1               courtois M.COURTOIS         416     11     14
 FORTRAN MODIF algorith/nmtama              courtois M.COURTOIS         115     13     15
 FORTRAN MODIF algorith/nmvekx              courtois M.COURTOIS          80      4      5
 FORTRAN MODIF algorith/nmvmpm              courtois M.COURTOIS         218      5      5
 FORTRAN MODIF algorith/nmvmpo              courtois M.COURTOIS         357      6      5
 FORTRAN MODIF algorith/nmvpgm              courtois M.COURTOIS         359      5      6
 FORTRAN MODIF algorith/nmvpir              courtois M.COURTOIS         544     10     10
 FORTRAN MODIF algorith/nmvple              courtois M.COURTOIS         293      5      6
 FORTRAN MODIF algorith/nsdrpr              courtois M.COURTOIS         591     14     16
 FORTRAN MODIF algorith/nsisot              courtois M.COURTOIS         569     15     19
 FORTRAN MODIF algorith/nspl2d              courtois M.COURTOIS         233      7      7
 FORTRAN MODIF algorith/nspl3d              courtois M.COURTOIS         218      7      7
 FORTRAN MODIF algorith/nzcifw              courtois M.COURTOIS         732     16     16
 FORTRAN MODIF algorith/nzcizi              courtois M.COURTOIS         708     16     16
 FORTRAN MODIF algorith/nzedga              courtois M.COURTOIS         733     25     24
 FORTRAN MODIF algorith/nzgdzi              courtois M.COURTOIS         901     26     25
 FORTRAN MODIF algorith/nzisfw              courtois M.COURTOIS         757     25     24
 FORTRAN MODIF algorith/permea              courtois M.COURTOIS          92      7      7
 FORTRAN MODIF algorith/pieigv              courtois M.COURTOIS         556     17     19
 FORTRAN MODIF algorith/piesgv              courtois M.COURTOIS         145      4      5
 FORTRAN MODIF algorith/pipeba              courtois M.COURTOIS         183      4      5
 FORTRAN MODIF algorith/pipedo              courtois M.COURTOIS         701      7      7
 FORTRAN MODIF algorith/pipeds              courtois M.COURTOIS         534      8      9
 FORTRAN MODIF algorith/pipeed              courtois M.COURTOIS         542      6      6
 FORTRAN MODIF algorith/pipeef              courtois M.COURTOIS         173      7      7
 FORTRAN MODIF algorith/pipegv              courtois M.COURTOIS         183      3      4
 FORTRAN MODIF algorith/pipeou              courtois M.COURTOIS          89      3      3
 FORTRAN MODIF algorith/pipetc              courtois M.COURTOIS         154      3      4
 FORTRAN MODIF algorith/rcdiff              courtois M.COURTOIS         119      8     13
 FORTRAN MODIF algorith/reg2gr              courtois M.COURTOIS          93     15     15
 FORTRAN MODIF algorith/rkdvec              courtois M.COURTOIS         203      9      9
 FORTRAN MODIF algorith/rsliso              courtois M.COURTOIS          45      4      4
 FORTRAN MODIF algorith/rslmat              courtois M.COURTOIS         158     15     18
 FORTRAN MODIF algorith/rsvmat              courtois M.COURTOIS         168     18     21
 FORTRAN MODIF algorith/smevol              courtois M.COURTOIS         318      6      6
 FORTRAN MODIF algorith/tanbul              courtois M.COURTOIS          76      7      8
 FORTRAN MODIF algorith/te0123              courtois M.COURTOIS         229      4      4
 FORTRAN MODIF algorith/thmrcp              courtois M.COURTOIS        2221    227    229
 FORTRAN MODIF algorith/vecmat              courtois M.COURTOIS         326     37     39
 FORTRAN MODIF algorith/xmase2              courtois M.COURTOIS         223      8      9
 FORTRAN MODIF algorith/xmase3              courtois M.COURTOIS         226      9     10
 FORTRAN MODIF algorith/xprvit               colombo D.COLOMBO          824     13     20
 FORTRAN MODIF algorith/zacier              courtois M.COURTOIS         282     14     14
 FORTRAN MODIF algorith/zedgar              courtois M.COURTOIS         301      4      4
 FORTRAN MODIF calculel/cescel              courtois M.COURTOIS         685     18      7
 FORTRAN MODIF calculel/cnscno              courtois M.COURTOIS         389      9      1
 FORTRAN MODIF calculel/corddl              courtois M.COURTOIS         105     10     15
 FORTRAN MODIF calculel/eclpgc              courtois M.COURTOIS         310     81     41
 FORTRAN MODIF calculel/excar2              courtois M.COURTOIS         129     11     10
 FORTRAN MODIF calculel/excart              courtois M.COURTOIS         131      5      5
 FORTRAN MODIF calculel/exchml              courtois M.COURTOIS         235      8      6
 FORTRAN MODIF calculel/exchno              courtois M.COURTOIS         310      5      5
 FORTRAN MODIF calculel/exresl              courtois M.COURTOIS         131      5      5
 FORTRAN MODIF calculel/extra1              courtois M.COURTOIS         146     22      6
 FORTRAN MODIF calculel/gbilin              courtois M.COURTOIS         247      5      5
 FORTRAN MODIF calculel/mecoel              courtois M.COURTOIS         337      8      5
 FORTRAN MODIF calculel/te0165              courtois M.COURTOIS         146      5      7
 FORTRAN MODIF calculel/te0166              courtois M.COURTOIS         104      4      7
 FORTRAN MODIF calculel/trigd               courtois M.COURTOIS         187     17     18
 FORTRAN MODIF calculel/w175ca              courtois M.COURTOIS          59      4      5
 FORTRAN MODIF elements/bsthco              courtois M.COURTOIS         336      9     12
 FORTRAN MODIF elements/cdnfo2              courtois M.COURTOIS          52      6      6
 FORTRAN MODIF elements/cdnfon              courtois M.COURTOIS          58      6      6
 FORTRAN MODIF elements/comcq1              courtois M.COURTOIS         115      7      7
 FORTRAN MODIF elements/coqsep              courtois M.COURTOIS         445      4      4
 FORTRAN MODIF elements/coqsnl              courtois M.COURTOIS         390      5      5
 FORTRAN MODIF elements/crgdm               courtois M.COURTOIS         207     12     13
 FORTRAN MODIF elements/d1ma3d              courtois M.COURTOIS         245      7      8
 FORTRAN MODIF elements/d1macp              courtois M.COURTOIS         181      8      8
 FORTRAN MODIF elements/d1madp              courtois M.COURTOIS         230      7      7
 FORTRAN MODIF elements/deeut1              courtois M.COURTOIS         181      8      8
 FORTRAN MODIF elements/diarme              courtois M.COURTOIS         213      4      5
 FORTRAN MODIF elements/dichoc              courtois M.COURTOIS         259      8      8
 FORTRAN MODIF elements/dicorn              courtois M.COURTOIS         591      4      5
 FORTRAN MODIF elements/digouj              courtois M.COURTOIS         195      6      6
 FORTRAN MODIF elements/dinonc              courtois M.COURTOIS         160     13     13
 FORTRAN MODIF elements/distfo              courtois M.COURTOIS         103      5      5
 FORTRAN MODIF elements/dkqcod              courtois M.COURTOIS         157      3      5
 FORTRAN MODIF elements/dkqcol              courtois M.COURTOIS         175      5      8
 FORTRAN MODIF elements/dkqgco              courtois M.COURTOIS         148      2      4
 FORTRAN MODIF elements/dkqsie              courtois M.COURTOIS         214      3      2
 FORTRAN MODIF elements/dktcod              courtois M.COURTOIS         164      3      6
 FORTRAN MODIF elements/dktcol              courtois M.COURTOIS         180      5      8
 FORTRAN MODIF elements/dktgco              courtois M.COURTOIS         154      2      5
 FORTRAN MODIF elements/dktsie              courtois M.COURTOIS         215      3      2
 FORTRAN MODIF elements/dm3dse              courtois M.COURTOIS         708     11     11
 FORTRAN MODIF elements/dmat3d              courtois M.COURTOIS         289      7      7
 FORTRAN MODIF elements/dmatcp              courtois M.COURTOIS         203      7      7
 FORTRAN MODIF elements/dmatdp              courtois M.COURTOIS         273      7      7
 FORTRAN MODIF elements/dmathl              courtois M.COURTOIS         330     24     25
 FORTRAN MODIF elements/dmcpse              courtois M.COURTOIS         345     11     11
 FORTRAN MODIF elements/dmdpse              courtois M.COURTOIS         611     11     11
 FORTRAN MODIF elements/dsqcod              courtois M.COURTOIS         205      3      5
 FORTRAN MODIF elements/dsqcol              courtois M.COURTOIS         219      6     11
 FORTRAN MODIF elements/dsqsie              courtois M.COURTOIS         255      3      2
 FORTRAN MODIF elements/dstcod              courtois M.COURTOIS         187      3      5
 FORTRAN MODIF elements/dstcol              courtois M.COURTOIS         202      6     11
 FORTRAN MODIF elements/dstsie              courtois M.COURTOIS         241      3      2
 FORTRAN MODIF elements/dxdmul              courtois M.COURTOIS         197     15     13
 FORTRAN MODIF elements/dxeffi              courtois M.COURTOIS         161      3      2
 FORTRAN MODIF elements/dxefgt              courtois M.COURTOIS         142      6      7
 FORTRAN MODIF elements/dxefnt              courtois M.COURTOIS         161      7      8
 FORTRAN MODIF elements/dxmate              courtois M.COURTOIS         613     14     13
 FORTRAN MODIF elements/dxmath              courtois M.COURTOIS         439     24     26
 FORTRAN MODIF elements/dxroep              courtois M.COURTOIS          90      6      6
 FORTRAN MODIF elements/dxsigm              courtois M.COURTOIS          86     13     15
 FORTRAN MODIF elements/dxsigt              courtois M.COURTOIS         164      6      7
 FORTRAN MODIF elements/dxsigv              courtois M.COURTOIS          81      8     10
 FORTRAN MODIF elements/dxtfor             lebouvier F.LEBOUVIER         67      6     20
 FORTRAN MODIF elements/epstmc              courtois M.COURTOIS         273      9     10
 FORTRAN MODIF elements/epsvmc              courtois M.COURTOIS         183      3      3
 FORTRAN MODIF elements/fornpd              courtois M.COURTOIS         239      8     13
 FORTRAN MODIF elements/glrcmm              courtois M.COURTOIS         140      6      6
 FORTRAN MODIF elements/infdis              courtois M.COURTOIS         216    141     54
 FORTRAN MODIF elements/infted              courtois M.COURTOIS         252      2      3
 FORTRAN MODIF elements/interf              courtois M.COURTOIS          65      7      8
 FORTRAN MODIF elements/maglrc              courtois M.COURTOIS         182      9      9
 FORTRAN MODIF elements/massup              courtois M.COURTOIS         205      6      6
 FORTRAN MODIF elements/matela              courtois M.COURTOIS          61      5      5
 FORTRAN MODIF elements/matrc2              courtois M.COURTOIS         205      8      8
 FORTRAN MODIF elements/matrc               courtois M.COURTOIS         277     12     11
 FORTRAN MODIF elements/matrth              courtois M.COURTOIS         103     11     12
 FORTRAN MODIF elements/metau1              courtois M.COURTOIS         150      8      8
 FORTRAN MODIF elements/metau2              courtois M.COURTOIS         140      6      6
 FORTRAN MODIF elements/mmmmat                 abbas M.ABBAS            119      2    200
 FORTRAN MODIF elements/mmmtas                 abbas M.ABBAS            298      7      8
 FORTRAN MODIF elements/mmmtcc                 abbas M.ABBAS             88     25     50
 FORTRAN MODIF elements/mmmtce                 abbas M.ABBAS             78     18     68
 FORTRAN MODIF elements/mmmtcm                 abbas M.ABBAS             78     18     67
 FORTRAN MODIF elements/mmmtcu                 abbas M.ABBAS             77     22     48
 FORTRAN MODIF elements/mmmtec                 abbas M.ABBAS             83     22     76
 FORTRAN MODIF elements/mmmtee                 abbas M.ABBAS            232    105    149
 FORTRAN MODIF elements/mmmtef                 abbas M.ABBAS            172     54     61
 FORTRAN MODIF elements/mmmtem                 abbas M.ABBAS            224     99    147
 FORTRAN MODIF elements/mmmtfe                 abbas M.ABBAS            166     48     67
 FORTRAN MODIF elements/mmmtff                 abbas M.ABBAS            167     31     30
 FORTRAN MODIF elements/mmmtfm                 abbas M.ABBAS            166     48     67
 FORTRAN MODIF elements/mmmtfu                 abbas M.ABBAS             93     23     40
 FORTRAN MODIF elements/mmmtmc                 abbas M.ABBAS             84     22     73
 FORTRAN MODIF elements/mmmtme                 abbas M.ABBAS            255    127    148
 FORTRAN MODIF elements/mmmtmf                 abbas M.ABBAS            173     54     61
 FORTRAN MODIF elements/mmmtmm                 abbas M.ABBAS            219     97    144
 FORTRAN MODIF elements/mmmtuu                 abbas M.ABBAS            110     34     66
 FORTRAN MODIF elements/mmmvas                 abbas M.ABBAS            103      2      2
 FORTRAN MODIF elements/mmmvcc                 abbas M.ABBAS             86     29     53
 FORTRAN MODIF elements/mmmvec                 abbas M.ABBAS            100      3    178
 FORTRAN MODIF elements/mmmvee                 abbas M.ABBAS            195     64    100
 FORTRAN MODIF elements/mmmvff                 abbas M.ABBAS            219     36     55
 FORTRAN MODIF elements/mmmvmm                 abbas M.ABBAS            193     63    101
 FORTRAN MODIF elements/mmmvuu                 abbas M.ABBAS            105     33     42
 FORTRAN MODIF elements/ortrep              courtois M.COURTOIS         168      5      6
 FORTRAN MODIF elements/pipdef              courtois M.COURTOIS         154      6      9
 FORTRAN MODIF elements/pipepl              courtois M.COURTOIS         177     11     11
 FORTRAN MODIF elements/pmfcom              courtois M.COURTOIS         331      9     10
 FORTRAN MODIF elements/pmfitx              courtois M.COURTOIS         147     17     16
 FORTRAN MODIF elements/ptforp              courtois M.COURTOIS         411      6      8
 FORTRAN MODIF elements/q4gcod              courtois M.COURTOIS         159      3      5
 FORTRAN MODIF elements/q4gcol              courtois M.COURTOIS         185      6     11
 FORTRAN MODIF elements/q4gsie              courtois M.COURTOIS         224      3      2
 FORTRAN MODIF elements/te0003              courtois M.COURTOIS        1164     39     38
 FORTRAN MODIF elements/te0009              courtois M.COURTOIS         112     22      8
 FORTRAN MODIF elements/te0010              courtois M.COURTOIS         141      7      8
 FORTRAN MODIF elements/te0011              courtois M.COURTOIS         191      6      7
 FORTRAN MODIF elements/te0012              courtois M.COURTOIS         303      5      5
 FORTRAN MODIF elements/te0014              courtois M.COURTOIS         139      5      5
 FORTRAN MODIF elements/te0015              courtois M.COURTOIS         103      5      6
 FORTRAN MODIF elements/te0021              courtois M.COURTOIS         122      4      4
 FORTRAN MODIF elements/te0027              courtois M.COURTOIS         577      9      9
 FORTRAN MODIF elements/te0031              courtois M.COURTOIS         410      7      6
 FORTRAN MODIF elements/te0033              courtois M.COURTOIS         331     14     15
 FORTRAN MODIF elements/te0038              courtois M.COURTOIS         439      7      7
 FORTRAN MODIF elements/te0039              courtois M.COURTOIS         631     46     41
 FORTRAN MODIF elements/te0040              courtois M.COURTOIS         205      6      7
 FORTRAN MODIF elements/te0041              courtois M.COURTOIS         552     99     50
 FORTRAN MODIF elements/te0042              courtois M.COURTOIS         168     22      6
 FORTRAN MODIF elements/te0043              courtois M.COURTOIS         269     23      5
 FORTRAN MODIF elements/te0044              courtois M.COURTOIS         205     32      9
 FORTRAN MODIF elements/te0045              courtois M.COURTOIS         320     23      4
 FORTRAN MODIF elements/te0047              courtois M.COURTOIS         931     48     42
 FORTRAN MODIF elements/te0050              courtois M.COURTOIS         185      7      9
 FORTRAN MODIF elements/te0051              courtois M.COURTOIS         163      6      6
 FORTRAN MODIF elements/te0054              courtois M.COURTOIS         101      6      6
 FORTRAN MODIF elements/te0061              courtois M.COURTOIS         421     16     17
 FORTRAN MODIF elements/te0062              courtois M.COURTOIS         286     10     10
 FORTRAN MODIF elements/te0063              courtois M.COURTOIS         289     10     11
 FORTRAN MODIF elements/te0064              courtois M.COURTOIS         133      7      7
 FORTRAN MODIF elements/te0065              courtois M.COURTOIS         189      8      8
 FORTRAN MODIF elements/te0066              courtois M.COURTOIS          95      4      4
 FORTRAN MODIF elements/te0067              courtois M.COURTOIS         133      4      4
 FORTRAN MODIF elements/te0069              courtois M.COURTOIS         292     11     11
 FORTRAN MODIF elements/te0076              courtois M.COURTOIS         192      6      6
 FORTRAN MODIF elements/te0077              courtois M.COURTOIS         162      6      6
 FORTRAN MODIF elements/te0078              courtois M.COURTOIS         420     13     13
 FORTRAN MODIF elements/te0081              courtois M.COURTOIS         177      6      8
 FORTRAN MODIF elements/te0082              courtois M.COURTOIS         202      4      4
 FORTRAN MODIF elements/te0084              courtois M.COURTOIS         116      5      6
 FORTRAN MODIF elements/te0085              courtois M.COURTOIS          88      5      5
 FORTRAN MODIF elements/te0095              courtois M.COURTOIS         348     13     12
 FORTRAN MODIF elements/te0096              courtois M.COURTOIS        1241     11     11
 FORTRAN MODIF elements/te0101              courtois M.COURTOIS         630      9      9
 FORTRAN MODIF elements/te0102              courtois M.COURTOIS         357     10     10
 FORTRAN MODIF elements/te0109              courtois M.COURTOIS         245      8      7
 FORTRAN MODIF elements/te0110              courtois M.COURTOIS         949      8      6
 FORTRAN MODIF elements/te0111              courtois M.COURTOIS         132      4      4
 FORTRAN MODIF elements/te0113              courtois M.COURTOIS         206      3      3
 FORTRAN MODIF elements/te0120              courtois M.COURTOIS         108      3      3
 FORTRAN MODIF elements/te0140              courtois M.COURTOIS         259      8      8
 FORTRAN MODIF elements/te0141              courtois M.COURTOIS         266      6      6
 FORTRAN MODIF elements/te0142              courtois M.COURTOIS         239      9      9
 FORTRAN MODIF elements/te0144              courtois M.COURTOIS         202      3      4
 FORTRAN MODIF elements/te0149              courtois M.COURTOIS         184      6      6
 FORTRAN MODIF elements/te0150              courtois M.COURTOIS         470      9     10
 FORTRAN MODIF elements/te0151              courtois M.COURTOIS         264      5      5
 FORTRAN MODIF elements/te0152              courtois M.COURTOIS         132      4      4
 FORTRAN MODIF elements/te0153              courtois M.COURTOIS         143      7      8
 FORTRAN MODIF elements/te0154              courtois M.COURTOIS         235      8      8
 FORTRAN MODIF elements/te0155              courtois M.COURTOIS         614     13     14
 FORTRAN MODIF elements/te0157              courtois M.COURTOIS         157      5      5
 FORTRAN MODIF elements/te0160              courtois M.COURTOIS         166      6      7
 FORTRAN MODIF elements/te0161              courtois M.COURTOIS         265      4      5
 FORTRAN MODIF elements/te0168              courtois M.COURTOIS         120      4      4
 FORTRAN MODIF elements/te0170              courtois M.COURTOIS         176      4      4
 FORTRAN MODIF elements/te0171              courtois M.COURTOIS         133      4      4
 FORTRAN MODIF elements/te0172              courtois M.COURTOIS         156      7     10
 FORTRAN MODIF elements/te0173              courtois M.COURTOIS         122      5     11
 FORTRAN MODIF elements/te0174              courtois M.COURTOIS         148      7     11
 FORTRAN MODIF elements/te0175              courtois M.COURTOIS          95      5      5
 FORTRAN MODIF elements/te0177              courtois M.COURTOIS          86      4      4
 FORTRAN MODIF elements/te0178              courtois M.COURTOIS          97      6      8
 FORTRAN MODIF elements/te0179              courtois M.COURTOIS          87      5      6
 FORTRAN MODIF elements/te0181              courtois M.COURTOIS          91      4      4
 FORTRAN MODIF elements/te0182              courtois M.COURTOIS         147      6      9
 FORTRAN MODIF elements/te0183              courtois M.COURTOIS         134      4      8
 FORTRAN MODIF elements/te0187              courtois M.COURTOIS         109      4      4
 FORTRAN MODIF elements/te0190              courtois M.COURTOIS         173      5      8
 FORTRAN MODIF elements/te0191              courtois M.COURTOIS         144      5      5
 FORTRAN MODIF elements/te0196              courtois M.COURTOIS          85      4      4
 FORTRAN MODIF elements/te0197              courtois M.COURTOIS          89      4      4
 FORTRAN MODIF elements/te0204              courtois M.COURTOIS         789      9      8
 FORTRAN MODIF elements/te0205              courtois M.COURTOIS         620      9      8
 FORTRAN MODIF elements/te0217              courtois M.COURTOIS         120      4      4
 FORTRAN MODIF elements/te0219              courtois M.COURTOIS         139      4      4
 FORTRAN MODIF elements/te0220              courtois M.COURTOIS          92      4      4
 FORTRAN MODIF elements/te0221              courtois M.COURTOIS         279      6      7
 FORTRAN MODIF elements/te0225              courtois M.COURTOIS         144      9     11
 FORTRAN MODIF elements/te0226              courtois M.COURTOIS         152      4      4
 FORTRAN MODIF elements/te0227              courtois M.COURTOIS         159      4      4
 FORTRAN MODIF elements/te0230              courtois M.COURTOIS         186      8     10
 FORTRAN MODIF elements/te0231              courtois M.COURTOIS         207      7      9
 FORTRAN MODIF elements/te0232              courtois M.COURTOIS         118      4      5
 FORTRAN MODIF elements/te0233              courtois M.COURTOIS          92      4      5
 FORTRAN MODIF elements/te0234              courtois M.COURTOIS         353      7      8
 FORTRAN MODIF elements/te0237              courtois M.COURTOIS         189      9     11
 FORTRAN MODIF elements/te0239              courtois M.COURTOIS         357     14     17
 FORTRAN MODIF elements/te0240              courtois M.COURTOIS         167      6      6
 FORTRAN MODIF elements/te0241              courtois M.COURTOIS         175      8      9
 FORTRAN MODIF elements/te0243              courtois M.COURTOIS         290      7      7
 FORTRAN MODIF elements/te0244              courtois M.COURTOIS         520      4      4
 FORTRAN MODIF elements/te0245              courtois M.COURTOIS         124      4      4
 FORTRAN MODIF elements/te0247              courtois M.COURTOIS         431      8      8
 FORTRAN MODIF elements/te0253              courtois M.COURTOIS         182      4      4
 FORTRAN MODIF elements/te0254              courtois M.COURTOIS         134      4      5
 FORTRAN MODIF elements/te0255              courtois M.COURTOIS          98      6      7
 FORTRAN MODIF elements/te0256              courtois M.COURTOIS         113      6      7
 FORTRAN MODIF elements/te0257              courtois M.COURTOIS         149      4      5
 FORTRAN MODIF elements/te0258              courtois M.COURTOIS         118      4      4
 FORTRAN MODIF elements/te0259              courtois M.COURTOIS         164     11     14
 FORTRAN MODIF elements/te0260              courtois M.COURTOIS          93      4      5
 FORTRAN MODIF elements/te0265              courtois M.COURTOIS          98      3      4
 FORTRAN MODIF elements/te0266              courtois M.COURTOIS          94      5      6
 FORTRAN MODIF elements/te0281              courtois M.COURTOIS         463      4      4
 FORTRAN MODIF elements/te0283              courtois M.COURTOIS         234      5      5
 FORTRAN MODIF elements/te0285              courtois M.COURTOIS         212      5      5
 FORTRAN MODIF elements/te0287              courtois M.COURTOIS         281      5      5
 FORTRAN MODIF elements/te0288              courtois M.COURTOIS         259      5      6
 FORTRAN MODIF elements/te0291              courtois M.COURTOIS         150      3      3
 FORTRAN MODIF elements/te0292              courtois M.COURTOIS         171      3      3
 FORTRAN MODIF elements/te0295              courtois M.COURTOIS         579     21     23
 FORTRAN MODIF elements/te0297              courtois M.COURTOIS         236      9      9
 FORTRAN MODIF elements/te0299              courtois M.COURTOIS         350      9     10
 FORTRAN MODIF elements/te0300              courtois M.COURTOIS         329      7      7
 FORTRAN MODIF elements/te0311              courtois M.COURTOIS         447     12     15
 FORTRAN MODIF elements/te0312              courtois M.COURTOIS          57      5      5
 FORTRAN MODIF elements/te0315              courtois M.COURTOIS         141      8      9
 FORTRAN MODIF elements/te0318              courtois M.COURTOIS         163      6      6
 FORTRAN MODIF elements/te0319              courtois M.COURTOIS         172      6      6
 FORTRAN MODIF elements/te0320              courtois M.COURTOIS         150      4      5
 FORTRAN MODIF elements/te0321              courtois M.COURTOIS         148      4      5
 FORTRAN MODIF elements/te0325              courtois M.COURTOIS         171      7     11
 FORTRAN MODIF elements/te0326              courtois M.COURTOIS         303      4      4
 FORTRAN MODIF elements/te0331              courtois M.COURTOIS         398     14     13
 FORTRAN MODIF elements/te0333              courtois M.COURTOIS         303      9      9
 FORTRAN MODIF elements/te0334              courtois M.COURTOIS         297     10     10
 FORTRAN MODIF elements/te0338              courtois M.COURTOIS         369     12     11
 FORTRAN MODIF elements/te0342              courtois M.COURTOIS         214      4      6
 FORTRAN MODIF elements/te0344              courtois M.COURTOIS         240      3      3
 FORTRAN MODIF elements/te0347              courtois M.COURTOIS         351      3      4
 FORTRAN MODIF elements/te0353              courtois M.COURTOIS         433     43     44
 FORTRAN MODIF elements/te0358              courtois M.COURTOIS         438     35     35
 FORTRAN MODIF elements/te0364                 abbas M.ABBAS            263    103    281
 FORTRAN MODIF elements/te0365                 abbas M.ABBAS            213     93    276
 FORTRAN MODIF elements/te0368              courtois M.COURTOIS         775     82     84
 FORTRAN MODIF elements/te0369              courtois M.COURTOIS         120      5     10
 FORTRAN MODIF elements/te0370              courtois M.COURTOIS         191     10     12
 FORTRAN MODIF elements/te0371              courtois M.COURTOIS         128      9     13
 FORTRAN MODIF elements/te0372              courtois M.COURTOIS         111      4      4
 FORTRAN MODIF elements/te0373              courtois M.COURTOIS          94      6      6
 FORTRAN MODIF elements/te0374              courtois M.COURTOIS         141      7      9
 FORTRAN MODIF elements/te0375              courtois M.COURTOIS         596     51     52
 FORTRAN MODIF elements/te0377              courtois M.COURTOIS         618     18     20
 FORTRAN MODIF elements/te0378              courtois M.COURTOIS         681     38     44
 FORTRAN MODIF elements/te0381              courtois M.COURTOIS         238      4      5
 FORTRAN MODIF elements/te0382              courtois M.COURTOIS         528      6      6
 FORTRAN MODIF elements/te0390              courtois M.COURTOIS         368      6      8
 FORTRAN MODIF elements/te0391              courtois M.COURTOIS         137      4      4
 FORTRAN MODIF elements/te0392              courtois M.COURTOIS         279     16     18
 FORTRAN MODIF elements/te0396              courtois M.COURTOIS         180      5      7
 FORTRAN MODIF elements/te0399              courtois M.COURTOIS         275     18     17
 FORTRAN MODIF elements/te0404              courtois M.COURTOIS         139      7      5
 FORTRAN MODIF elements/te0409              courtois M.COURTOIS         363      3      3
 FORTRAN MODIF elements/te0421              courtois M.COURTOIS         232      9     10
 FORTRAN MODIF elements/te0431              courtois M.COURTOIS         493     10     10
 FORTRAN MODIF elements/te0432              courtois M.COURTOIS         281     14     18
 FORTRAN MODIF elements/te0441              courtois M.COURTOIS         195      6      6
 FORTRAN MODIF elements/te0447              courtois M.COURTOIS          96      2      2
 FORTRAN MODIF elements/te0453              courtois M.COURTOIS          96      2      2
 FORTRAN MODIF elements/te0461              courtois M.COURTOIS         479     25     28
 FORTRAN MODIF elements/te0470              courtois M.COURTOIS         432      8      9
 FORTRAN MODIF elements/te0471              courtois M.COURTOIS         336      8      9
 FORTRAN MODIF elements/te0473              courtois M.COURTOIS         169      5      5
 FORTRAN MODIF elements/te0477              courtois M.COURTOIS         497     12     13
 FORTRAN MODIF elements/te0484              courtois M.COURTOIS         179      5      6
 FORTRAN MODIF elements/te0485              courtois M.COURTOIS         233      3      3
 FORTRAN MODIF elements/te0490              courtois M.COURTOIS         951     18     17
 FORTRAN MODIF elements/te0491              courtois M.COURTOIS         907     19     20
 FORTRAN MODIF elements/te0497              courtois M.COURTOIS         708     23     23
 FORTRAN MODIF elements/te0498              courtois M.COURTOIS         353     16     17
 FORTRAN MODIF elements/te0499              courtois M.COURTOIS         270      4      4
 FORTRAN MODIF elements/te0500              courtois M.COURTOIS         294     13     13
 FORTRAN MODIF elements/te0512              courtois M.COURTOIS         324      6      6
 FORTRAN MODIF elements/te0517              courtois M.COURTOIS         353      6      6
 FORTRAN MODIF elements/te0528              courtois M.COURTOIS         228      5      5
 FORTRAN MODIF elements/te0532              courtois M.COURTOIS         355      3      3
 FORTRAN MODIF elements/te0537              courtois M.COURTOIS         218      6      6
 FORTRAN MODIF elements/te0545              courtois M.COURTOIS         189      3      4
 FORTRAN MODIF elements/te0550              courtois M.COURTOIS         125      4      4
 FORTRAN MODIF elements/te0551              courtois M.COURTOIS          98      4      5
 FORTRAN MODIF elements/te0552              courtois M.COURTOIS         103      3      3
 FORTRAN MODIF elements/te0553              courtois M.COURTOIS         166      4      4
 FORTRAN MODIF elements/te0554              courtois M.COURTOIS         145      4      4
 FORTRAN MODIF elements/te0555              courtois M.COURTOIS         161      4      4
 FORTRAN MODIF elements/te0556              courtois M.COURTOIS         191      8      9
 FORTRAN MODIF elements/te0560              courtois M.COURTOIS         206      3      4
 FORTRAN MODIF elements/te0569              courtois M.COURTOIS         204      8      9
 FORTRAN MODIF elements/te0583              courtois M.COURTOIS         506      4      4
 FORTRAN MODIF elements/te0598              courtois M.COURTOIS         553      6      6
 FORTRAN MODIF elements/te0600              courtois M.COURTOIS         440     54     54
 FORTRAN MODIF elements/tuforc              courtois M.COURTOIS         457      3      3
 FORTRAN MODIF elements/tufull              courtois M.COURTOIS         410      4      4
 FORTRAN MODIF elements/tumass              courtois M.COURTOIS         280      6      7
 FORTRAN MODIF elements/turigi              courtois M.COURTOIS         252      4      4
 FORTRAN MODIF elements/tusief              courtois M.COURTOIS         308      3      3
 FORTRAN MODIF elements/tutemp              courtois M.COURTOIS         251     11     12
 FORTRAN MODIF elements/vdgnlr              courtois M.COURTOIS        1018     12     18
 FORTRAN MODIF elements/vdpnlr              courtois M.COURTOIS        1224     12     16
 FORTRAN MODIF elements/vdxnlr              courtois M.COURTOIS         388      8      8
 FORTRAN MODIF elements/verdis              courtois M.COURTOIS         100      2      2
 FORTRAN MODIF elements/xcgfvo              courtois M.COURTOIS         171      5      6
 FORTRAN MODIF elements/xsifel              courtois M.COURTOIS         633      6      6
 FORTRAN MODIF modelisa/aceadi              courtois M.COURTOIS         306     10      8
 FORTRAN MODIF modelisa/acearm              courtois M.COURTOIS         230      9      7
 FORTRAN MODIF modelisa/acearp              courtois M.COURTOIS         491     18      7
 FORTRAN MODIF modelisa/afdi2d              courtois M.COURTOIS         216      8      7
 FORTRAN MODIF modelisa/afdi3d              courtois M.COURTOIS         247      7      4
 FORTRAN MODIF modelisa/alfint              courtois M.COURTOIS         275      7      7
 FORTRAN MODIF modelisa/dglrda              courtois M.COURTOIS         490     12     12
 FORTRAN MODIF modelisa/dglrdm              courtois M.COURTOIS         386     17     17
 FORTRAN MODIF modelisa/nm1dco              courtois M.COURTOIS         225     15     21
 FORTRAN MODIF modelisa/nm3dco              courtois M.COURTOIS         418      5      5
 FORTRAN MODIF modelisa/op0056              courtois M.COURTOIS         807     18     18
 FORTRAN MODIF modelisa/rcadma              courtois M.COURTOIS         112     14     15
 FORTRAN MODIF modelisa/rcadme              courtois M.COURTOIS         115     11     11
 FORTRAN MODIF modelisa/rccoma              courtois M.COURTOIS          78      8      9
 FORTRAN MODIF modelisa/rccome              courtois M.COURTOIS          72      7      8
 FORTRAN MODIF modelisa/rcfonc              courtois M.COURTOIS         232     10     10
 FORTRAN MODIF modelisa/rcpare              courtois M.COURTOIS          81      7      8
 FORTRAN MODIF modelisa/rctrac              courtois M.COURTOIS         488    271    271
 FORTRAN MODIF modelisa/rctype              courtois M.COURTOIS         124     10     13
 FORTRAN MODIF modelisa/rcvad2              courtois M.COURTOIS         137     13     15
 FORTRAN MODIF modelisa/rcvada              courtois M.COURTOIS         124     11     13
 FORTRAN MODIF modelisa/rcvala              courtois M.COURTOIS         171     29     29
 FORTRAN MODIF modelisa/rcvalb              courtois M.COURTOIS          89      8      9
 FORTRAN MODIF modelisa/rcvalc              courtois M.COURTOIS         122     11     12
 FORTRAN MODIF modelisa/rcvale              courtois M.COURTOIS         176     28     17
 FORTRAN MODIF modelisa/rcvals              courtois M.COURTOIS          74     11     13
 FORTRAN MODIF modelisa/verifg              courtois M.COURTOIS         165      8      9
 FORTRAN MODIF modelisa/verifm              courtois M.COURTOIS         159      8      9
 FORTRAN MODIF modelisa/verift              courtois M.COURTOIS         184      8      9
 FORTRAN MODIF postrele/op0165              courtois M.COURTOIS         143      6      6
 FORTRAN MODIF postrele/prccm3              courtois M.COURTOIS          83      4      4
 FORTRAN MODIF postrele/rc3201              courtois M.COURTOIS         757     34     34
 FORTRAN MODIF postrele/rc32ma              courtois M.COURTOIS         153     15     15
 FORTRAN MODIF postrele/rc32r8              courtois M.COURTOIS          97      7      7
 FORTRAN MODIF postrele/rc32sa              courtois M.COURTOIS         131      8      8
 FORTRAN MODIF postrele/rc36ac              courtois M.COURTOIS         459     25     31
 FORTRAN MODIF postrele/rc36fp              courtois M.COURTOIS         215     21     20
 FORTRAN MODIF postrele/rc36fs              courtois M.COURTOIS         196     18     18
 FORTRAN MODIF postrele/rc36fu              courtois M.COURTOIS         142     13     13
 FORTRAN MODIF postrele/rc36ma              courtois M.COURTOIS         429     31     31
 FORTRAN MODIF postrele/rcevfa              courtois M.COURTOIS         190     13     14
 FORTRAN MODIF postrele/rcevo1              courtois M.COURTOIS          93     13     13
 FORTRAN MODIF postrele/rcevoa              courtois M.COURTOIS         390     17     17
 FORTRAN MODIF prepost/avdowh               courtois M.COURTOIS         135     13     13
 FORTRAN MODIF prepost/deltau               courtois M.COURTOIS         673     17     17
 FORTRAN MODIF prepost/dmgmod               courtois M.COURTOIS         221      6      7
 FORTRAN MODIF prepost/dtauno               courtois M.COURTOIS         677     19     19
 FORTRAN MODIF prepost/fgdoba               courtois M.COURTOIS          77      5      5
 FORTRAN MODIF prepost/fgdohs               courtois M.COURTOIS          98      6      6
 FORTRAN MODIF prepost/fgdoma               courtois M.COURTOIS          72      5      5
 FORTRAN MODIF prepost/fgdomg               courtois M.COURTOIS         109      9      9
 FORTRAN MODIF prepost/fgdowh               courtois M.COURTOIS          85      6      6
 FORTRAN MODIF prepost/fglema               courtois M.COURTOIS         201     13     13
 FORTRAN MODIF prepost/fgtaep               courtois M.COURTOIS          89      6      6
 FORTRAN MODIF prepost/fgtaes               courtois M.COURTOIS         154     16     15
 FORTRAN MODIF prepost/fgtahe               courtois M.COURTOIS         113     15     15
 FORTRAN MODIF prepost/op0151               courtois M.COURTOIS         515     28     28
 FORTRAN MODIF prepost/pdadom               courtois M.COURTOIS         241     23     23
 FORTRAN MODIF prepost/pofape               courtois M.COURTOIS         203     12     12
 FORTRAN MODIF prepost/pofaun               courtois M.COURTOIS         278     19     18
 FORTRAN MODIF prepost/rnomat               courtois M.COURTOIS         241     36     36
 FORTRAN MODIF utilitai/pecapo              courtois M.COURTOIS         390      8      9
 FORTRAN MODIF utilitai/rscrsd              courtois M.COURTOIS         432      3      3
       H MODIF include/aster                courtois M.COURTOIS          83      1      1
       H MODIF include/aster_fort           courtois M.COURTOIS         232      3      3
       H MODIF include/definition           courtois M.COURTOIS         341      5      1
  PYTHON AJOUT Comportement/vmis_john_cook   courtois M.COURTOIS          39     39      0
  PYTHON AJOUT Macro/post_rupture_ops        geniaut S.GENIAUT          435    435      0
  PYTHON MODIF Macro/macr_recal_ops           assire A.ASSIRE           728     41      3
  PYTHON MODIF Macro/post_gp_ops            courtois M.COURTOIS        1463      4      3
  PYTHON MODIF Macro/post_k1_k2_k3_ops      courtois M.COURTOIS        2024      3      3
  PYTHON MODIF Macro/propa_fiss_ops         courtois M.COURTOIS         955      2      2
  PYTHON MODIF Macro/test_compor_ops        courtois M.COURTOIS         784      6      5
  PYTHON MODIF Messages/calculel3           courtois M.COURTOIS         498     11      1
  PYTHON MODIF Messages/discrets            courtois M.COURTOIS         179     37      1
  PYTHON MODIF Messages/rupture1             geniaut S.GENIAUT          403     39      2
  PYTHON MODIF SD/co_mater                  courtois M.COURTOIS          53      3      3
  PYTHON MODIF Utilitai/Utmess              courtois M.COURTOIS         714      5      2
  PYTHON MODIF Utilitai/veri_matr_tang      courtois M.COURTOIS         274     10      5


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :   39        5273      5273             +5273
 MODIF :  635      190029      8272    9341     -1069
 SUPPR :    0           0                 0        +0
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :  674      195302     13545    9341     +4204 
