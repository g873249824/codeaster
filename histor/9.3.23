

-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR abbas        ABBAS Mickael          DATE 24/11/2008 - 13:26:54

--------------------------------------------------------------------------------
RESTITUTION FICHE 012564 DU 2008-09-30 12:28:44
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   STAT_NON_LINE : pb lors de l'affichage d'un message
FONCTIONNALITE
   Pour ldedga et ldgini.
   
   Remplacement des U2MESS par des code-retour 1 permettant un redécoupage (ECHEC DANS
   L'INTEGRATION DE LA LOI DE COMPORTEMENT)
   
   Pour ZEDGAR (options META_ELNO_TEMP dans CALC_META)
   
   
   IF (DG.EQ.0.D0) THEN
     CALL U2MESS('F','ZEDGAR : DERIVEE NULLE')
   ENDIF
   
   On remplace par un CALL ASSERT (qu'est ce que l'utilisateur va bien pouvoir faire de cette
   info ?)
   
   CALL U2MESS('F','ZEDGAR:ITER_INTE_MAXI INSUFFISANT')
   
   En fait, ITER_INTE_MAXI est en dur dans la routine et vaut 15. L'utilisateur ne peut pas
   augmenter ITER_INTE_MAXI.
   
   On remplace par un CALL ASSERT
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   hsnv123a
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 012870 DU 2008-11-20 13:22:30
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Bug DYNA_NON_LINE avec DIS_CHOC amorti
FONCTIONNALITE
   Bug dans DYNA_NON_LINE avec des DIS_CHOC amortis.
   Les éléments discrets de contact avec amortissement déplacent le calcul de la partie
   amortissement des forces internes vers la matrice d'amortissement (fiche 6822)
   Dans DYNA_NON_LINE, la présence d'amortissement dasn les DIS_CHOC est testée (AMOR_NOR ou
   AMOR_TAN présents) et on passe alors dans un mode équivalent à l'amortissement de Rayleigh
   classique( [C]= alpha.[M]+beta.[K]).
   Par souci d'économie en 9.3.12, la matrice d'amortissement n'est pas calculée à chaque
   itération dans DYNA_NON_LINE mais seulement lorsque l'on ré-évalue la matrice de rigidité
   (la matrice masse étant constante pendant tout le transitoire)
   Or, pour les DIS_CHOC, cette économie entrainte un résultat faux. Car l'amortissement
   n'est pas du tout équivalent à du rayleigh mais à des forces internes visqueuses ! Il est
   donc INDISPENSABLE de recalculer la matrice [C] à CHAQUE itération.
   On modifie NMPRMA et NMCOMA en conséquence:
   
   IF (LCRIGI.AND.LAMOR) THEN
   ... Calcul de C
   ENDIF 
   
   Par
   
   IF (LAMOR) THEN
   ... Calcul de C
   ENDIF
   
   Le seul cas-test validant cette configuration (DYNA_NON_LINE+DIS_CHOC+Amortissement non
   négligeable) est sdnv105b.
   Par manque de rigueur, j'avais enlevé les tests qui étaient faux, pensant que c'était un
   effet habituel de ces tests.
   Je les remets donc et ils sont justes.
   Les valeurs correspondent bien à celles données avant la 9.3.12 (réference anlytique), par
   contre, certains tests étant assez "mauvais" (de 15 à 25% d'erreur) depuis l'origine du
   cas-test, ils étaient doublés par des test de NON-REGRESSION que je modifie.
   On se retrouve donc bien dans la bonne situation de sdnv105b en STA9.2.
   
   NB: Ce changement remet les instants de choc à leur valeur avant la restitution en 9.3.12.
   On modifie donc en conséquence sdnv105a et c.
   On passe la liste complète des tests faisant appel à DYNA_NON_LINE.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 9.3.12
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   liste complete DYNA_NON_LINE
NB_JOURS_TRAV  : 2.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 012559 DU 2008-09-30 06:46:37
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   calcul d'un agrxc3xa9gat en parallxc3xa8le
FONCTIONNALITE
   Lors de la correction de la fiche 12720 (sur le même calcul), on avait ajouté une
   dérogation si une des valeurs de la régression linéiare était nulle (XA1).
   Or, dans certaisn cas, une autre valeur peut être nulle: XDET.
   Si XDET = 0, on plante en FPE dans la ligne CIBLEN = (XA0 + XA1*LOG(CIBLE) )/XDET
   On ne sai tpa sbien pouruqoi XDET vaut zéro !
   Toutefois, en urgence, on contourne le problème en passant en mode de subdivision
   'UNIFORME' dans le cas XDET=0 (comme dans le cas XA1=0).
   
   NOTE IMPORTANTE: on rappelle que pour éviter de perdre le calcul (long), il ne faut pas
   mettre "CODE" dans DEBUT. Le mécanisme de récupération des erreurs fatales est alors
   désactivée.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   etude jointe
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
RESTITUTION FICHE 012559 DU 2008-09-30 06:46:37
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   calcul d'un agrxc3xa9gat en parallxc3xa8le
FONCTIONNALITE
   Lors de la correction de la fiche 12720 (sur le même calcul), on avait ajouté une
   dérogation si une des valeurs de la régression linéiare était nulle (XA1).
   Or, dans certaisn cas, une autre valeur peut être nulle: XDET.
   Si XDET = 0, on plante en FPE dans la ligne CIBLEN = (XA0 + XA1*LOG(CIBLE) )/XDET
   On ne sai tpa sbien pouruqoi XDET vaut zéro !
   Toutefois, en urgence, on contourne le problème en passant en mode de subdivision
   'UNIFORME' dans le cas XDET=0 (comme dans le cas XA1=0).
   
   NOTE IMPORTANTE: on rappelle que pour éviter de perdre le calcul (long), il ne faut pas
   mettre "CODE" dans DEBUT. Le mécanisme de récupération des erreurs fatales est alors
   désactivée.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   etude jointe
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR andriam      ANDRIAMBOLOLONA Hari   DATE 24/11/2008 - 15:02:56

--------------------------------------------------------------------------------
RESTITUTION FICHE 012522 DU 2008-09-24 09:05:06
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   sdls112a NOOK si SDVERI
FONCTIONNALITE
   Contexte :
   En mettant SDVERI = 'OUI' sur le cas test sdls112a, celui-ci s'arrête en erreur fatale car les structures de 
   données produites par DEFI_BASE_MODALE et par PROJ_MESU_MODAL ne sont pas conformes. Dans cette fiche, je ne 
   traite que la structure de données issue de PROJ_MESU_MODAL.
   
   Analyse :
   En regardant dans les fortrans, on constate que les résultats de type harm_gene produits par PROJ_MESU_MODAL 
   ont été alloués manuellement. Ils ne suivent donc pas la règle normale de construction des structures de 
   données sd_résultat.
   
   Correction :
   - Création du harm_gene en passant par RSCRSD.
   - Lecture systématique des variables d'accès par RSLIPA.
   - Passage du cas test sdls112a en SDVERI = 'OUI', mais sans vérification des sd produites par 
   DEFI_BASE_MODALE (AL à émettre).
   - Modification paramètres de calcul (temps cpu : passer de 300 s à 500 s, espace mémoire : passer de 128 Mo 
   à 512 Mo).
   - Je mets également le test sdll137a en SDVERI='OUI'.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   Les tests qui font appel xc3xa0 PROJ_MESU_MODAL
NB_JOURS_TRAV  : 2.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR assire       ASSIRE Aimery          DATE 24/11/2008 - 13:33:27

--------------------------------------------------------------------------------
RESTITUTION FICHE 012814 DU 2008-11-13 17:26:16
TYPE anomalie concernant Code_Aster (VERSION 9.4)
TITRE
   En NEW 9.3.21, le cas-test plexu02a s?arrete en ERREUR_<F> sur Bull, Rocks, Calibre 4 et 5.
FONCTIONNALITE
   idem 12813
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   plexu01, plexu02
NB_JOURS_TRAV  : 0.01
--------------------------------------------------------------------------------
RESTITUTION FICHE 012813 DU 2008-11-13 17:24:34
TYPE anomalie concernant Code_Aster (VERSION 9.4)
TITRE
   En NEW 9.3.21, le cas-test plexu01a s?arrete en ERREUR_<F> sur Bull, Rocks, Calibre 4 et 5.
FONCTIONNALITE
   Dans une évolution dans calc_europlexus_ops.py la semaine passée, on utilisait le
   mecanisme try/except pour un lire_champ / med afin de predimensionner le nombre de champs
   à lire dans le fichier.
   Pour que cela fonctionne pour les cas-tests, il faut explicitement ajouter
   ERREUR=_F(ERREUR_F='EXCEPTION',) dans la commande DEBUT.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   plexu01, plexu02
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 012844 DU 2008-11-19 09:57:29
TYPE express concernant Code_Aster (VERSION 9.3)
TITRE
   Stanley cassxc3xa9 en NEW9 pour les evol_ther
FONCTIONNALITE
   Suite à la derniere evolution, Stanley ne fonctionnait plus pourles evol_ther, car les
   modele, cara_elem et cham_mater, qui sont stocké dans la structure de donnée resultat
   (.RSP8), ne sont pas mis dans le même ordre suivant les sd résultats.
   
   On utilise la routine aster.DISMOI qui a été enrichie pour l'occasion par JP.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   stanley
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR boyere       BOYERE Emmanuel        DATE 25/11/2008 - 17:48:02

--------------------------------------------------------------------------------
RESTITUTION FICHE 010984 DU 2007-06-15 15:56:30
TYPE anomalie concernant Code_Aster (VERSION 2.x)
TITRE
   sd_tran_gene : objet .ORDR incorrect dans le test sdld102b
FONCTIONNALITE
   Jacques a ajouté dans sd_tran_gene une vérification sur l'unicité des numéros d'ordre  et
   des pas de temps.
   Or ce test sur le cas sdld102b détecte que dans le cas du schéma en temps 'ADAPT' le pas
   de temps final peut être stocké deux fois.
   Cette redondance fautive est due à une détermination hasardeuse du nombre de pas de stockage.
   
   En effet jusqu'ici il était déterminé par la formule suivante 
   NBSAUV = INT((TFIN-TINIT)/DTARCH) + 2
   sans tenir compte que, suivant les machines, NBSAUV pouvait prendre en compte le nombre
   exact d'intervale ou en prendre un en plus.
   
   Par exemple, sur ma machine, si l'utilisateur entre un TFIN=10.0, la valeur est lue comme
   9.9999999999 et INT(TFIN) vaut 9.
   La formule est donc juste et donne le bon nombre de pas de stockage.
   
   En revanche sur la machine BULL, toujours pour TFIN=10.0, la valeur lue est 10.0 et
   INT(TFIN)=10.
   La formule donne alors un pas en trop et le mécanisme complexe de calcul des pas de temps
   dans ADAPT, qui doit jongler entre la liste de pas de temps spécifié par l'utilisateur,
   celle qu'il crée pour adapter le schéma en temps et la liste des pas de stockage, double
   le pas final.
   
   Pour corriger le problème, j'ajoute le test suivant :
   NBSAUV = INT((TFIN-TINIT)/DTARCH) + 1
   IF ((TFIN - (TINIT+(NBSAUV-1)*DTARCH)).GE.R8PREM()) THEN
                NBSAUV=NBSAUV+1
   END IF
   
   Enfin, j'enlève les commentaires dans sd_tran_gene.py qui désactivaient la vérification.
   Il n'y a pas de risques de résultats faux. Mais, encore une fois, je déconseille toutefois
   l'usage de la méthode 'ADAPT' en dehors du cadre des applications spécifiques pour
   lesquelles elle a été mise au point. Son heuristique complexe ne s'adapte pas à tous les
   types d'étude.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   astout sur DYNA_TRAN_MODAL
NB_JOURS_TRAV  : 2.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 012875 DU 2008-11-21 11:28:01
TYPE express concernant Code_Aster (VERSION 9.3)
TITRE
   erreur DVP2 dans GRAPPE_FLUIDE
FONCTIONNALITE
   Dans le calcul des forces fluides du module GRAPPE_FLUIDE du module de chute de grappe,
   dans la routine gfcomm, on calcule la racine carrée d'un déterminant sans prendre la
   précaution de s'assurer qu'il est positif.
   Il correspond au calcul de la vitesse, UML, de remontée du fluide dans la zone de
   mécanisme de levée. D'après ce que j'ai compris de la documentation de référence, il
   suppose que cette vitesse est orientée vers le haut (i.e. que le fluide remonte le mécanisme).
   Or il semble que si la grappe ralentit beaucoup, voire s'arrête, cela mène à une inversion
   de l'écoulement, en contradiction avec les hypothèses de départ. Et ceci aboutit au
   déterminant négatif, qui n'a pas été prévu.
   
   J'ajoute un test supplémentaire pour vérifier la positivité du déterminant. S'il est
   négatif on annule la vitesse du fluide dans le mécanisme, conformément aux autres cas
   particuliers qui ont été prévus dans cette partie de GRAPPE_FLUIDE.
   
   Cependant cela montre les limites du modèle lorsque l'on sort de son domaine de
   validation, en particulier lorsque la grappe est très fortement ralentie.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   fdnl100
NB_JOURS_TRAV  : 3.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 012660 DU 2008-10-17 15:46:32
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   symetrisation abusive dans DYNA_LINE_HARM
FONCTIONNALITE
   Pour résoudre le problème harmonique, DYNA_LINE_HARM construit la matrice suivante :
   H = -w2*M + jw*C + K 
   et elle la type et numérote systématiquement selon la structure de la matrice de raideur K.
   Donc si K est symétrique, H sera symétrique.
   Or si la matrice d'amortissement C est non symétrique, cela aboutit à une symétrisation
   indue de H.
   Les résultats sont alors faux.
   
   Le risque d'erreur n'existe que depuis l'introduction de la gyroscopie dans Code_Aster.
   
   Ce problème a été traité lors de la restitution 9.3.17.
   Mais j'avais oublié de clore la fiche.
   
   Je reste toutefois circonspect sur les résultats DYNA_LINE_HARM avec GYROSCOPIE. Il est
   possible qu'il reste un problème de variable non initialisée et/ou de tableau mal dimensionné.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   shll102a
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR courtois     COURTOIS Mathieu       DATE 25/11/2008 - 18:43:55

--------------------------------------------------------------------------------
RESTITUTION FICHE 012846 DU 2008-11-19 13:18:53
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Performance de la verification des formules
FONCTIONNALITE
   En 9.3.20, on a introduit une vérification de cohérence entre les paramètres de la formule
   et ceux fournis pour l'évaluation.
   
   Le surcoût (en temps) de cette vérification est trop important.
   Sur 50.000 évaluations via CALC_FONC_INTERP, on est ainsi passé de 0.70 s à 2.25 s, soit
   un facteur 3. C'est à peu près ce qu'a constaté Thomas sur la dérive de ssnv209b.
   
   Pour rendre cette vérification acceptable, on "met en cache" le résultat des vérifications
   précédentes : la liste des paramètres nécessaires à l'évaluation (intersection des
   paramètres de la formule et de ceux fournis).
   
   Sur les 50.000 évaluations, on revient à un temps acceptable de 0.95 s.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   ssnv209b + test elementaire
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 012805 DU 2008-11-13 12:38:03
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Affichage de messages multiples
FONCTIONNALITE
   Quand un message d'alarme est affiché plus de 5 fois, il n'est plus émis du tout. Même
   dans une commande ultérieure.
   Cela peut être dangereux.
   
   On ajoute donc une méthode à la classe qui gère l'affichage des messages, qui sera appelée
   entre chaque commande : reset_command.
   
   On l'appele dans E_ETAPE après l'exécution de la commande.
   Lors de cette opération, on en profite pour vérifier qu'il n'y a pas d'erreur <E> en
   attente d'erreur <F> (ce qui n'était fait que dans FIN, soit un peu tard !).
   
   Impact : E_ETAPE.py, Utmess.py (on a 2 compteurs d'alarmes, un global, un pour la commande
   courante).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   test elementaire
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 012889 DU 2008-11-25 17:39:35
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Carton dans vechde : tableau mal dimensionne
FONCTIONNALITE
   Routine vechde, 2 bugs :
   - CHCARS est dimensionné à 15 alors que MECARA remplit 18 valeurs (evolution 9.3.18)
   - erreur dans les paramètres passés à CALCUL : TYPCAL='MECA', les paramètres 12 et 13 ne
   servent à rien (PGEOM2 est absent des typelems).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   sslp101f en mode debug, + sens*
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR desoza       DE SOZA Thomas         DATE 24/11/2008 - 17:53:47

--------------------------------------------------------------------------------
RESTITUTION FICHE 012845 DU 2008-11-19 10:27:15
TYPE express concernant Code_Aster (VERSION 7.0)
TITRE
   Variables non initialis?, lectures invalides et troncatures
FONCTIONNALITE
   Fiche express
   =============
   
   Dans cette fiche on corrige un certain nombre de petits bugs parmi lesquels des variables
   non initialisées identifiées grâce à Valgrind et Ftnchek mais aussi une troncature abusive.
   
   Corrections
   ===========
   
   cla110.f : ZERO n'est pas défini, on remplace par 0.D0
   ==> DEFI_SQUELETTE. Sans conséquences.
   
   connor.f : RHOEQ n'est pas initialisé et on cumule dedans
   ==> CALC_FLUI_STRU. Résultats faux depuis 9.2.21. Pourtant couvert par les tests.
   
   d1madp.f : NU31 et NU32 ne sont pas d'un type défini et on est en IMPLICIT REAL*8 (pas de
   chance !)
   ==> Options ENEL_ELGA, ENEL_ELNO_ELGA en ELAS_ORTH et ELAS/ISTR
       Résultats faux depuis 8.3.23. Pourtant couvert par les tests.
   
   refe81.f : couper un IF en deux pour éviter un warning Valgrind
   ==> Sans conséquences.
   
   te0321.f : on fait des vérifications sur des champs locaux avant le JEVECH
   ==> Sans conséquences, ce ne sont que des vérifications. Au pire on plantait alors qu'il
   n'y avait pas lieu.
   
   te0432.f : RHO n'est pas initialisé et on l'utilise
   ==> Grilles membranes. Options MASS_MECA*, M_GAMMA, ECIN_ELEM_DEPL.
       Résultats faux depuis 9.1.4. Pourtant couvert par les tests.
RESU_FAUX_VERSION_EXPLOITATION    :  OUI   DEPUIS : 8.3.23
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 9.0.0
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   perso
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 012807 DU 2008-11-13 14:50:18
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   En NEW 9.3.21, le cas-test ssnp138a s?arrete par manque de temps CPU sur Bull.
FONCTIONNALITE
   Anomalie
   ========
   
   Le test ssnp138a s'est arrêté par manque de temps CPU en 9.3.21 tout comme le test zzzz231b.
   
   Analyse
   =======
   
   On ne reproduit plus le problème sur ces tests en les relançant à la main. Ils sont aussi
   passés en 9.3.22 dans l'astout.
   En examinant de plus près on voit qu'il y a eu pour les deux une consommation de temps
   système (normale car ils libèrent tous les deux de la mémoire en temps normal) mais
   celle-ci a consommé beaucoup plus de temps écoulé que d'habitude. Vraisemblablement à
   cause d'un accès concurrent au disque dur (c'est une ressource partagée et à ce titre il y
   a une régulation du système Linux) lors de l'astout.
   
   Conclusion
   ==========
   
   Rien à faire.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   zzzz231b,ssnp138a
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 012791 DU 2008-11-10 13:32:13
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   En NEW9.3.20, le cas-test sdls111a s'arrete en erreur_<F> sur Rocks.
FONCTIONNALITE
   Anomalie
   ========
   
   Le cas-test sdls111a se plante en 9.3.20 sur Rocks.
   
   Analyse
   =======
   
   En 9.3.22, le test est OK. Il se plante cependant de manière reproductible sur le noeud
   c0-3 de Clpaster. Le plantage est une erreur fatale : on a estimé qu'il y avait 5
   fréquences dans la bande choisie (test de Sturm) or l'algorithme par défaut ('SORENSEN')
   n'en trouve que 4 (itératif, il a atteint le nombre max d'itérations par défaut).
   Il y a un problème ensuite car on cherche quand même à lire la 5ème fréquence dans la
   vérification des modes alors qu'elle n'a pas été calculée (fiche d'évolution émise)
   
   Un passage de Valgrind indique une variable non initialisée dans un vpsorn.f (pour un
   autre MODE_ITER_SIMULT) sans que l'on sache vraiment pourquoi.
   
   Par contre ce qui est sûr c'est que 'SORENSEN' est un algorithme itératif qui initialise
   la solution avec un vecteur aléatoire. En effet on peut remarquer que pour deux runs
   identiques les modes trouvés et le nombre d'itérations nécessaires n'est pas tout à fait
   identique.
   
   Conclusion
   ==========
   
   J'augmente le nombre d'itérations max de 'SORENSEN' de 20 à 25 dans le fichier de
   commandes ce qui suffit à passer.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   sdls111a
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 012788 DU 2008-11-10 11:47:51
TYPE anomalie concernant Code_Aster (VERSION 9.3)
TITRE
   test SSNV209B en arret_cpu sur BULL et CALIBRE4 en 9.3.20
FONCTIONNALITE
   Anomalie
   ========
   
   Le cas-test ssnv209b a subi une dérive importante depuis la version 9.3.11 (sur Bull)
   jusqu'à doubler quasiment son temps CPU en 9.3.20 (sur toutes les plate-formes).
   
   Analyse
   =======
   
   En 9.3.11 il a été modifié pour remplacer une fonction (DEFI_FONCTION) par une formule
   Python (FORMULE) : la différence fondamentale étant que la première est interpolée
   linéairement dans le Fortran à partir de la donnée des points tandis que la seconde est
   interprétée dans le Python (aller/retour nécessaire).
   
   À l'aide des versions incrémentales construites par ASTK, on met en évidence un impact de
   cette modif sur la Bull et pas sur les autres plate-formes (comme si l'appel Python était
   plus coûteux).
   
   En 9.3.20 des vérifications supplémentaires ont été ajoutées lors de l'interprétation de
   formules Python (fiche 12091). Elles induisent un surcoût qui est visible sur toutes les
   plate-formes et sur ce test en particulier. Il est situé dans le calcul de l'option
   FULL_MECA qui réalise en particulier l'intégration du comportement (où on appelle RCVALA
   et donc on interprète la formule Python).
   Mathieu va modifier la vérification pour regagner un facteur 2 sur l'évaluation d'une formule.
   
   Remarque : un profiling via Gprof du cas-test ssnv209b en NEW9 montrait une prédominance
   d'appels à la fonction PyEval_EvalFrame (à retenir).
   
   Conclusion
   ==========
   
   Par ailleurs on modifie le test ssnv209b pour revenir à des fonctions car il n'est pas
   conseillé d'utiliser des formules Python pour des objets appelés souvent (en général très
   loin dans l'arbre d'appel, dans les calculs élémentaires en particulier).
   Le test revient alors à un temps raisonnable en dessous de sa valeur limite dans le .para
   (fixée à 500s).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   ssnv209b
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 011334 DU 2007-10-08 14:10:14
TYPE anomalie concernant Code_Aster (VERSION 2.x)
TITRE
   Ecrasement aval dans DEFI_PART_FETI
FONCTIONNALITE
   Anomalie
   ========
   
   Une étude (6 millions de DDLs) se plante dans DEFI_PART_FETI avec l'erreur JEVEUX
   
      !----------------------------------------------------!
      ! <F> <JEVEUX_01>                                    !
      !                                                    !
      !                                                    !
      !   REPERTOIRE DE     48 NOMS NE CONTIENT PAS    121 !
      !                                                    !
      !                                                    !
      !                                                    !
      ! Cette erreur est fatale. Le code s'arrete.         !
      !----------------------------------------------------!
   
   
   Analyse
   =======
   
   On a constitué une base juste avant de faire le DEFI_PART_FETI puis on a lancé l'étude
   sous le debugger idb sur Calibre 5 (le seul qui semble marcher correctement). On constate
   alors que l'erreur se produit car on cherche à interroger la collection &CATA.TM.NOMTM
   avec un numéro codée de maille supérieure aux 48 types de mailles disponibles dans Code_Aster.
   Ce numéro a été obtenu via la sd_maillage en lisant l'objet .LIEL de la sd_ligrel du
   modèle. Il se trouve que ce dernier contient des numéros de mailles négatifs (qui sont
   alors des mailles tardives).
   A ce stade les seules mailles tardives qu'un modèle peut contenir sont des noeuds
   (AFFE_MODELE/AFFE/GROUP_NO), ce qui est le cas de l'étude.
   
   DEFI_PART_FETI ne traite pas ce cas (il faudrait lire l'objet .NEMA de la sd_ligrel pour cela.
   
   On blinde donc DEFI_PART_FETI pour interdire les mailles tardives POI1. On conseille
   d'utiliser CREA_MAILLAGE/CREA_POI1 à la place.
   
   Conclusion
   ==========
   
   On modifie fetskp.f pour blinder. Modif à faire en 8
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.23.05
VALIDATION
   xc3xa9tude
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 012880 DU 2008-11-21 17:54:19
TYPE express concernant Code_Aster (VERSION 7.0)
TITRE
   CONTACT - corrections diverses
FONCTIONNALITE
   Fiche express
   =============
   
   On trace dans cette fiche trois corrections liées au contact :
   
   1/ On corrige une lecture invalide signalée par Valgrind dans la routine cfsuex.f. On
   cherche à dupliquer un objet JEVEUX et comme on pense que ce dernier a pu être agrandi, on
   alloue un objet plus grand (on prend un max). En copiant on va donc lire n'importe quoi
   (tout ce qui est au delà de la taille réelle de l'objet). Il suffit de lire la taille du
   vecteur éventuellement agrandi pour dimensionner correctement la copie.
   
   Impacts : cfsuex.f, cacoeq.f
   
   2/ Dans la méthode 'CONTINUE' de contact, on assemblait systématiquement la contribution
   au frottement même quand il n'y en avait pas. On ne le fait maintenant que quand c'est
   nécessaire.
   
   Impacts : nmchcc.f, asmari.f
   
   3/ Dans la routine quadco.f, on décide selon le type de méthode de contact si on va lier
   les noeuds milieux des QUAD8 aux noeuds sommets pour éviter le problème sur les forces
   nodales de contact.
   Bizarrement on ne lie pas les noeuds pour la méthode 'PENALISATION' du contact et du
   frottement alors qu'on les lie pour la méthode 'PENALISATION' du contact et sans frottement.
   Je fais en sorte qu'on **ne lie pas** les noeuds dans ce dernier cas.
   
   Impact : quadco.f
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   astout
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR durand       DURAND Christophe      DATE 25/11/2008 - 15:59:39

--------------------------------------------------------------------------------
RESTITUTION FICHE 012811 DU 2008-11-13 15:10:01
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   En NEW 9.3.21, le cas-test ssnp15a s?arrete en ARRET_<A> sur Calibre 5
FONCTIONNALITE
   Suite restitution DMarkovic en 9.3.13 : le nombre des paramètres de la table à créer dans
   peingl.f (post_elem INDIC_*) est conditionnel (5 ou 7) suivant le nom de l'option.
   
   Correction de peingl.f
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   ssnp15a
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR corus        CORUS Mathieu          DATE 25/11/2008 - 15:59:40

--------------------------------------------------------------------------------
RESTITUTION FICHE 012373 DU 2008-08-07 15:31:27
TYPE anomalie concernant Code_Aster (VERSION 9.3)
TITRE
   Message d'erreur pas adaptxc3xa9 dans CALC_FONCTION
FONCTIONNALITE
   Rappel du problème :
   
   Lorsqu'on fait une FFT inverse sur une fonction réelle, Aster plante avec le message
   d'erreur suivant : 
   
      !------------------------------------------------------------------------------------!
      ! <F> <FONCT0_28>                                                                    !
      !                                                                                    !
      !                                                                                    !
      ! Un problème concernant le nom des abscisses ou ordonnées a été rencontré.          !
      ! Fonction concernée : SPECTRE                                                       !
      !                                                                                    !
      !   -> Risque & Conseil :                                                            !
      !       Vérifier la valeur fournie derrière les mots-clés 'NOM_PARA'/'NOM_RESU' lors !
      !       de la création de cette(ces) fonction(s).                                    !
      !                                                                                    !
      !   -> Debug :                                                                       !
      !       fonction réelle : FFT : NOM_PARA=INST pour une transformée directe           !
      !                                                                                    !
      !                                                                                    !
      !                                                                                    !
      ! Cette erreur est fatale. Le code s'arrete.                                         !
      !------------------------------------------------------------------------------------!
   
   Ce serait pas mal d'avoir un message un peu plus approprié du genre : "Si vous faites une
   FFT inverse (et c'est bien ce que vous projetez de faire vu que votre fonction en entrée a
   un NOM_PARA = "FREQ"), il aut avoir une fonction complexe"
   
   Solution adoptée :
   
   Le message d'erreur a ete enrichi pour preciser a l'utilisateur qu'il ne peut pas faire de
   FFT d'une fonction dont les abscisses sont des fréquences / ou fonction a valeurs
   complexes. De la meme facon, si on averti l'utilisateur voulant faire une FFT inverse sur
   une fonction a valeurs reelles.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   aucune
NB_JOURS_TRAV  : 0.02
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR durand       DURAND Christophe      DATE 25/11/2008 - 15:59:42

--------------------------------------------------------------------------------
RESTITUTION FICHE 012863 DU 2008-11-20 10:37:14
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   En NEW 9.3.22, le cas-test ssnv148a est NOOK sur Rocks, Calibre4 et Calibre5.
FONCTIONNALITE
   Bug assez vicieux dans le calcul de RICE-TRACEY :
   
   Dans la configuration SIGM_ELGA et LOCAL=NON (et uniquement celle là), on recherche une
   valeur max sur les points de Gauss pour RSR0 dans le te0339.f. On sort RSR0 lui-même et le
   "volume de la sous-maille" (confer R7.02.06 paragraphe 3.4.1). La notion de volume de
   "sous-maille" me semble très curieuse. On sort ici en fait le poids relatif du point de
   Gauss qui a "accroché" le max. Le hic ici, c'est que le max peut sauter d'un PG à son
   voisin en fonction de debug/nodebug, des machines, en bougeant de epsilon près. Ce n'est
   pas grave pour le max (à epsilon près) mais le poids d'un PG peut radicalement changer
   avec celui de son voisin.
   
   Bref, je sors donc le calcul du "sous-volume" de la boucle des PG et je calcule à la place
   dans TE0339 le volume total de la maille divisé par le nombre de PG.
   
   Seulement, ça ne suffit toujours pas : dans PERITR.f, on recherche à nouveau un max mais
   cette fois ci pas dans la maille mais dans tout le champ (call memax). Et là, même topo :
   la maille cible du max sur RSR0 peut avoir un volume radicalement différent de sa voisine
   qui possède le même RSR0 à epsilon près, d'où la sensibilité aux machines, à l'âge du
   capitaine ...
   
   Outre la modif de te0339.f, je propose donc de carrément supprimer les test_resu sur les
   volumes qui nous gênent.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : R7.02.06
VALIDATION
   ssnv148a
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR adobes       ADOBES André           DATE 25/11/2008 - 15:59:44

--------------------------------------------------------------------------------
RESTITUTION FICHE 012009 DU 2008-04-18 17:13:24
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   En NEW9.2.20, le cas-test sdll116a s'arrete en ERREUR_<F> sur Bull et Rocks.
FONCTIONNALITE
   Le pb vient d'un blindage (très certainement légitime) par Irmela Zentner en version
   9.2.20 dans POST_DYNA_ALEA : on vérifie que l'autospectre en entrée est bien à valeurs
   positives. De fait, ce test "accroche" l'erreur fatale depuis qu'Irmela a introduit le
   blindage.
   
   Si on trace la fonction interspectre récupérée, on voit que le pb est lié à un unique
   point (pour lequel il faut zoomer très fort) qui effectivement passe en ordonnée négative
   (voir images jointes à la fiche rex). C'est très probablement un artefact numérique.
   
   Je me rends compte qu'en modifiant dans REST_SPEC_PHYS OPTION='DIAG_TOUT' en
   OPTION='DIAG_DIAG', on n'a plus ce problème d'ordonnée négative. La conséquence étant
   qu'un test_resu (TOLE=5%) doit passer désormais à 7%. Pour ne pas rester 6 mois de plus
   avec ce test cassé et dans l'optique de stabiliser avec un bilan propre, je choisis donc,
   sans bien comprendre les conséquences physiques et numériques de ma modification :
   - de passer en option='DIAG_DIAG'
   - de modifier la tolérence du test_resu concerné à 7%
   
   Merci à l'équipe fluide-structure à MFEE de réagir si ma solution ne les satisfaisait pas.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   sdll116a
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR flejou       FLEJOU Jean Luc        DATE 25/11/2008 - 09:43:53

--------------------------------------------------------------------------------
RESTITUTION FICHE 012864 DU 2008-11-20 10:40:15
TYPE anomalie concernant Code_Aster (VERSION 9.4)
TITRE
   En NEW 9.3.22, le cas-test ssna117c s?arrete en ERREUR_<F> sur Bull, Rocks, Calibre4 et 5.
FONCTIONNALITE
   Effectivement j'ai blindé IRRAD3M et maintenant il est obligatoire de donner la
   température et l'irradiation.
   
   La raison :
   -----------
   Les paramètres matériaux de la loi sont dépendant de la température et de l'irradiation,
   il faut donc préciser les 2 champs. Si l'on fait une simulation à température ou
   irradiation constante il faut l'indiquer à Aster en créant un champ constant.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   Passage cas test
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR gnicolas     NICOLAS Gérald         DATE 24/11/2008 - 14:03:40

--------------------------------------------------------------------------------
RESTITUTION FICHE 012795 DU 2008-11-10 13:52:52
TYPE express concernant Code_Aster (VERSION 9.3)
TITRE
   HOMARD: temps pour verif INTERPENETRATION - bis
FONCTIONNALITE
   Pour éviter les désagréments évoqués dans la fiche 12628, je désactive 
   les contôles d'interpénétration dans les phases d'adaptation des cas-
   tests. Comme cela ne concerne que les phases d'adaptation, cela n'est pas 
   pénalisant en terme de couverture.
   La suggestion d'émettre une alarme sera évaluée dans la résolution de la 
   fiche 12628, en version 10.
   
   Remarque 1 : changement de commentaire dans forma11c, non concerné par 
   HOMARD.
   
   Remarque 2 : j'en profite pour inhiber l'alarme  MODELISA5_49 dans 
   macr_adap_mail. Elle signale que l'on a supprimé la vérification du 
   maillage lu, ce qui est naturel car cette vérification est faite par 
   HOMARD avant le retour du maillage vers Aster.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   demo001a, forma04a-b-c, forma05a-b, tpll01j, zzzz121a-b-c-d-e, zzzz175a
NB_JOURS_TRAV  : 0.4
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR greffet      GREFFET Nicolas        DATE 24/11/2008 - 15:16:49

--------------------------------------------------------------------------------
RESTITUTION FICHE 012753 DU 2008-10-30 16:42:07
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Plantage CRIT_FLAMB
FONCTIONNALITE
   Le problème est dû à un écrasement au passage d'objets réels en 
   complexes... dans nmop45. Ce problème ne peut se produire que pour des 
   matrices de raideur non symétriques (aucun cas-test ne fait cela).
   
   On a en fait deux solutions :
   - Soit on modifie nmop45 pour le cas complexe : dans ce cas on aura des 
   valeurs propres complexes et des modes complexes, ce qui est assez difficile 
   à interpréter.
   - Soit on force la matrice de raideur à être symétrique (uniquement pour les 
   calculs type CRIT_FLAMB ou MODE_VIBR, pour la résolution on garde une 
   matrice non symétrique si on veut), quitte à tout réassembler. Dans ce cas 
   on aura des valeurs propres et vecteurs propres réels.
   
   Je propose, à court terme, de suivre la deuxième solution.
   Si, plus tard, on éprouve le besoin d'avoir les valeurs complexes, on pourra 
   alors rajouter un mot-clé pour gérer ces deux cas.
   
   Routines impactées :
   nmflam
   nmflma
   
   Pour valider je passe l'étude fournies avec la fiche et tous les cas-tests 
   qui font appel à CRIT_FLAMB ou MODE_VIBR :
   sdnv106a, ssll105d, ssll105e, ssnl126a, ssnl126b et miss06b
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 9.3.11
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   etude de la fiche, sdnv106a, ssll105d, ssll105e, ssnl126a, ssnl126b, miss06b
NB_JOURS_TRAV  : 2.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR laverne      LAVERNE Jérôme         DATE 24/11/2008 - 14:18:06

--------------------------------------------------------------------------------
RESTITUTION FICHE 012820 DU 2008-11-14 16:37:11
TYPE express concernant Code_Aster (VERSION 9.3)
TITRE
   Coquille dans les cata XFEM en 2D
FONCTIONNALITE
   Probleme :
   ---------
   Suite a la restit des chargements volumiques sur les elements XFEM (fiche 12470),une
   coquille s'est glissee dans le nom des options de force volu des catalogues d'element XFEM 2D.
   
   Solution :
   ---------
   remplacer CHAR_MECA_FF3D3D par CHAR_MECA_FF2D2D
   remplacer CHAR_MECA_FR3D3D par CHAR_MECA_FR2D2D
   
   Validation :
   -----------
   ajout d'un cas test (non regression) en 2D pour tester les forces volumiques : ssnp138b =
   fissure segment orientee à 0 et 45 deg, soumise
   a des forces volumiques (type FORCE_INTERNE et PESANTEUR).
   
   Sources : 
   --------
   modif :
   gener_mecpl2_xh.cata
   gener_mecpl2_xhc.cata
   gener_mecpl2_xht.cata
   gener_mecpl2_xhtc.cata
   gener_mecpl2_xt.cata
   gener_mecpl2_xtc.cata
   gener_medpl2_xh.cata
   gener_medpl2_xhc.cata
   gener_medpl2_xht.cata
   gener_medpl2_xhtc.cata
   gener_medpl2_xt.cata
   gener_medpl2_xtc.cata
   
   ajout : ssnp138b
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : V6.03.138
VALIDATION
   ajout ssnp138b
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR pellet       PELLET Jacques         DATE 24/11/2008 - 17:45:29

--------------------------------------------------------------------------------
RESTITUTION FICHE 012792 DU 2008-11-10 13:32:18
TYPE express concernant Code_Aster (VERSION 7.0)
TITRE
   2 tests de performances oublixc3xa9s : perf001d et perf002c
FONCTIONNALITE
   On restitue 2 tests de performances oubliés en Juillet :
    perf001d
    perf002c
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   perf001d et perf002c
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------
RESTITUTION FICHE 012806 DU 2008-11-13 14:44:58
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   En NEW 9.3.21, le cas-test sslv200a est NOOK sur Bull, Rocks, Calibre 4 et 5.
FONCTIONNALITE
   Problème:
   ---------
   En 9.3.21, le test sslv200b est NOOK sur toutes les plateformes.
                                                                                            
                           
   Analyse:
   -----------
   Il s'agit d'une conséquence de la correction de l'anomalie 12275 (bug dans les éléments
   FORC_NOD_2DDL/3DDL).
                                                                                            
                           
   Xavier a corrigé la routine cafono.f puis il a cru que les NOOK du test sslv200b (de
   l'ordre de 1.e-7) n'étaient pas significatifs et il a juste augmenté la tolérance : 1.E-10
   -> 2.E-7
                                                                                            
                           
   Mais il n'a pas modifié sslv200a qui fait le meme genre de calculs. D'où les NOOK sur
   sslv200a.
                                                                                            
                           
   Correction:
   -----------
   1) Pour ne pas que l'on doute encore des résultats NOOK, j'amplifie (*1.E4) les forces
   nodales des 2 tests sslv200a et sslv200b. Ils deviennent alors NOOK de 1.E-3 et cela se
   voit mieux.
   2) Je rétablis la tolérance initiale (faible) 1.E-10
   3) Je modifie les valeurs de référence (qui étaient fausses car les forces nodales selon Z
   étaient parfois mises à zéro de façon indue.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   rien de particulier
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 012815 DU 2008-11-14 07:22:18
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Le test mumps05b s'arrete brutalement en version MPI  NEW9.3.21 + mumps05a
FONCTIONNALITE
   Problème:
   ---------
   Le test mumps05b s'arrete brutalement en version MPI  NEW9.3.21
                                                                                            
                           
   Analyse et Corrections :
   -------------------------
                                                                                            
                           
   Cette fiche m'aura fait souffrir.
   Merci à tous ceux qui m'ont soutenu et encouragé (en particulier Thomas).
                                                                                            
                           
   Au bout du compte, on a trouvé plusieurs problèmes :
                                                                                            
                           
   1) Un bug dans amumpp.F :
   -------------------------
     Il s'agit d'une coquille introduite en 9.3.3 dans la routine amumpp.F (routine
   introduite par Olivier pour fractionner les routines mumps en petits morceaux et pour
   mutualiser ce qui peut l'etre entre amumpr.F et amumpc.F).
                                                                                            
                           
   On trouve en effet dans amumpp.F vers la ligne 180:
                                                                                            
                           
   IF (TYPE.EQ.'R') THEN
      CALL MPICM1('REDUCE','R',NNBSOL,...)
   ELSEIF (TYPE.EQ.'R') THEN
      CALL MPICM1('REDUCE','R',2*NNBSOL,...)
   ENDIF
                                                                                            
                           
   L'idée du IF est d'utiliser l'utilitaire pour les complexes avec un vecteur de réels de
   longueur double.
   Le problème est d'avoir recopié le  IF (TYPE.EQ.'R') THEN
                                                                                            
                           
   Du coup :
     - si le champ est complexe, on ne fait pas le "REDUCE" => résultats faux.
                                                                                            
                           
                                                                                            
                           
   2) Des problèmes dans mpicm1a.f :
   ---------------------------------
   2.1) Erreurs de programmation :
     Dans le bloc "REDUCE", j'ai fait 2 erreurs :
     2.1.1) pour les entiers, l'appel à MPI_REDUCE n'a pas le bon nombre d'arguments (il
   manque ROOT)
            Mais ce n'est pas grave car cette fonctionnalité n'est pas appelée actuellement.
     2.1.2) pour les réels, on appelle MPI_ALLREDUCE au lieu de MPI_REDUCE, ce qui est une
   chance (au vu de 2.1.1) mais cela se traduit par un sur-cout inutile.
                                                                                            
                           
   2.2) Un problème vicieux de chez vicieux :
     La routine mpicm1a utilise des "automatic array" fortran pour allouer le tampon
   nécessaire aux "reduce" MPI.
     Malheureusement, ces tableaux automatiques sont alloués dans la "pile". Comme cette pile
   est de longueur fixe (8192Mo actuellement sur bull), on peut "déborder" si on veut
   échanger un gros objet. C'est ce qui se passe dans mumps05b.
                                                                                            
                           
     J'ai trouvé un site Web qui explique que Fortran NE VERIFIE PAS le débordement de la pile !
                                                                                            
                           
     Ce problème a été corrigé de la façon suivante :
       - si la longueur de l'objet est <= 1000, on utilise un tableau statique dimensionné à 1000
       - si la longueur de l'objet est > 1000, on crée (puis on détruit) un objet jeveux.
                                                                                            
                           
                                                                                            
                           
                                                                                            
                           
                                                                                            
                           
   Résultats faux :
   ----------------
   Je pense que pour les matrices complexes, Mumps "distribué" donnait des résultats faux
   depuis la version 9.3.3
                                                                                            
                           
   Validation:
   -----------
   Passage du test mumps05b en version MPI (et de tous les autres tests MPI).
                                                                                            
                           
                                                                                            
                           
   Détails :
   ---------
   * mumps05a s'arrete par manque de mémoire pour pivoter en 9.3.22 :
     Je propose d'augmenter un peu PCENT_PIVOT.
   * on déplace les routines de "from_c" dans "hors_arex"
   * on renomme mpicm1a en mpicm1b (pour ne pas etre en conflit lors du dépacement)
   * Usage des tableaux automatiques :
     Vu le danger de débordement de la pile à cause des tableaux automatiques, on peut se
   demander s'il ne faut pas leur faire la peau ?
     Thomas De Soza (avec fntcheck) a identifié plus de routines qui les utilisent.
     Il faudrait les regarder de plus près pour etre sur que les tableaux automatiques ne
   sont pas trop gros (< 20 000 ?)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   mumps05a,b avec version MPI
NB_JOURS_TRAV  : 4.0
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR proix        PROIX Jean-Michel      DATE 24/11/2008 - 15:31:44

--------------------------------------------------------------------------------
RESTITUTION FICHE 011774 DU 2008-02-18 14:14:11
TYPE anomalie concernant Code_Aster (VERSION 9.4)
TITRE
   Loi de comportemeent LMARC et remarque sur META_LEMA_ANI
FONCTIONNALITE
   Comme l'a remarqué Valérie, le comportement LMARC avec coefficient d'orthotropie n'est
   utilisable qu'en axisymétrie, si les coefficients étant donnés dans l'ordre
   (R,Z,T),correspondant aux axes globaux X,Y,Z. En effet aucun changement de repère n'est
   effectué dans la programmation. Dans le cas isotrope, il n'y a pas de limitation.
   
   Pour éviter des résultats potentiellement faux, dans le cas où l'utilisateur a fourni des
   coefficients anisotropes et qu'il n'est pas en AXIS, je propose (en attendant que le
   changement de repère soit programmé - responsabilité MMC ) que le code s'arrête avec le
   message suivant :
   
   <F> <COMPOR1_62>                                        
   L'orthotropie pour le comportement LMARC n'est disponible que pour la modélisation
   AXIS.(cf. R5.03.10). Or la modelisation choisie est <3D> .                               
   Les coefficients de la matrice d'anisotropie sont :                                      
   M(1,1)  : <6.990000000000000E-01>                                                     
   M(2,2)  : <5.624000000000000E-01>                                                     
   M(3,3)  : <6.666666000000000E-01>                                                     
   M(6,6)  : <6.600000000000000E-01>                                                     
   L'orthotropie est à utiliser seulement en axi, si et seulement si les coefficients sont
   donnés dans l'ordre (R,Z,T) et non (R,T,Z).
   
   - il faut alors changer les deux tests en mettant les coefficients isotropes. Les
   TEST_RESU changent alors de quelques pourcents.
   
   On ajoutera aussi un warning dans les docs U4.43.01 et
   U4.51.11
RESU_FAUX_VERSION_EXPLOITATION    :  OUI   DEPUIS : 8.0.0
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 9.0.0
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.43.01, U4.51.11
VALIDATION
   ssnv117A et B
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 012865 DU 2008-11-20 10:43:22
TYPE anomalie concernant Code_Aster (VERSION 9.3)
TITRE
   En NEW 9.3.22, le cas-test ssll102j s?arrete en CPU_LIMIT sur Bull.
FONCTIONNALITE
   Ce test dure en réalité 4s environ. Le .para est à 60s.
   Curieusement, pour le test cassé en CPU_LIMIT, presque tout le temps CPU est consommé en
   temps système : 
   
   par exemple pour LIRE_MAILLAGE dans le test cassé en 9.3.22 :
   
   FIN COMMANDE NO : 0002   DUREE TOTALE: 6.49s (SYST: 6.43s)
   
   Alors que LIRE_MAILLAGE pour ce test relancé plusieurs fois "à la main" ou dans le
   répertoire astest :
   
   FIN COMMANDE NO : 0002   DUREE TOTALE:  0.05s (SYST: 0.00s)
   
   Je laisse donc d'augmenter le temps CPU dans le .para à 60s, sans comprendre d'où cela vient.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   ssll102j
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

 CASTEST AJOUT perf001d                       pellet J.PELLET            67     67      0
 CASTEST AJOUT perf002c                       pellet J.PELLET            99     99      0
 CASTEST AJOUT ssnp138b                      laverne J.LAVERNE          390    390      0
 CASTEST MODIF forma04b                     gnicolas G.NICOLAS          361      2      4
 CASTEST MODIF forma04c                     gnicolas G.NICOLAS          312      2      3
 CASTEST MODIF forma05a                     gnicolas G.NICOLAS          333      2      4
 CASTEST MODIF forma05b                     gnicolas G.NICOLAS          367      2      4
 CASTEST MODIF forma11c                     gnicolas G.NICOLAS          183      3      3
 CASTEST MODIF hsnv123a                        abbas M.ABBAS            341      1      1
 CASTEST MODIF hsnv132b                     gnicolas G.NICOLAS          253      1      5
 CASTEST MODIF plexu01a                       assire A.ASSIRE           248      2      2
 CASTEST MODIF plexu02a                       assire A.ASSIRE           459      2      2
 CASTEST MODIF sdll116a                       durand C.DURAND          4989      3      3
 CASTEST MODIF sdll137a                      andriam H.ANDRIAMBOLOLONA    452      2      2
 CASTEST MODIF sdls111a                       desoza T.DESOZA           402      2      1
 CASTEST MODIF sdnv105a                        abbas M.ABBAS           1336     15     16
 CASTEST MODIF sdnv105b                        abbas M.ABBAS           1273      2      2
 CASTEST MODIF sdnv105c                        abbas M.ABBAS            978      9      9
 CASTEST MODIF shll102a                       boyere E.BOYERE           433     57     60
 CASTEST MODIF ssll102j                        proix J-M.PROIX          127      2      1
 CASTEST MODIF sslv200a                       pellet J.PELLET          1096     90     90
 CASTEST MODIF sslv200b                       pellet J.PELLET          1057    146    146
 CASTEST MODIF ssna117c                       flejou J-L.FLEJOU         138     18      2
 CASTEST MODIF ssnv117a                        proix J-M.PROIX          393    331    173
 CASTEST MODIF ssnv117b                        proix J-M.PROIX          455    397    342
 CASTEST MODIF ssnv148a                       durand C.DURAND           367      1     22
 CASTEST MODIF ssnv209b                       desoza T.DESOZA           517     16     15
 CASTEST MODIF tpll01j                      gnicolas G.NICOLAS          115      2      3
 CASTEST MODIF zzzz121a                     gnicolas G.NICOLAS          266      2      3
 CASTEST MODIF zzzz121b                     gnicolas G.NICOLAS          662      3      6
 CASTEST MODIF zzzz121c                     gnicolas G.NICOLAS          474      2      4
 CASTEST MODIF zzzz121d                     gnicolas G.NICOLAS          531      3      4
 CASTEST MODIF zzzz121e                     gnicolas G.NICOLAS          271      2      4
 CASTEST MODIF zzzz175a                     gnicolas G.NICOLAS          620      2      4
CATALOGU MODIF typelem/gener_mecpl2_xhc      laverne J.LAVERNE          277      3      3
CATALOGU MODIF typelem/gener_mecpl2_xh       laverne J.LAVERNE          283      3      3
CATALOGU MODIF typelem/gener_mecpl2_xhtc     laverne J.LAVERNE          283      3      3
CATALOGU MODIF typelem/gener_mecpl2_xht      laverne J.LAVERNE          278      3      3
CATALOGU MODIF typelem/gener_mecpl2_xtc      laverne J.LAVERNE          250      3      3
CATALOGU MODIF typelem/gener_mecpl2_xt       laverne J.LAVERNE          276      6      2
CATALOGU MODIF typelem/gener_medpl2_xhc      laverne J.LAVERNE          281      3      3
CATALOGU MODIF typelem/gener_medpl2_xh       laverne J.LAVERNE          282      3      3
CATALOGU MODIF typelem/gener_medpl2_xhtc     laverne J.LAVERNE          280      3      3
CATALOGU MODIF typelem/gener_medpl2_xht      laverne J.LAVERNE          277      3      3
CATALOGU MODIF typelem/gener_medpl2_xtc      laverne J.LAVERNE          249      3      3
CATALOGU MODIF typelem/gener_medpl2_xt       laverne J.LAVERNE          275      3      3
       C MODIF utilitai/mpicm1                pellet J.PELLET            37      2      2
 FORTRAN MODIF algeline/connor                desoza T.DESOZA           445      3      1
 FORTRAN MODIF algorith/asmari                desoza T.DESOZA           149      5      2
 FORTRAN MODIF algorith/cla110                desoza T.DESOZA           513      3      3
 FORTRAN MODIF algorith/edgini                 abbas M.ABBAS             85     14      6
 FORTRAN MODIF algorith/gfcomm                boyere E.BOYERE           448      5      4
 FORTRAN MODIF algorith/harm75               andriam H.ANDRIAMBOLOLONA    227      2     27
 FORTRAN MODIF algorith/lcedga                 abbas M.ABBAS            438     17      6
 FORTRAN MODIF algorith/lmaani                 proix J-M.PROIX           67     18      5
 FORTRAN MODIF algorith/lmamat                 proix J-M.PROIX          183      9      9
 FORTRAN MODIF algorith/mdallc               andriam H.ANDRIAMBOLOLONA    147     81    122
 FORTRAN MODIF algorith/mdtr74                boyere E.BOYERE           733      5      2
 FORTRAN MODIF algorith/mptran               andriam H.ANDRIAMBOLOLONA    419     10     17
 FORTRAN MODIF algorith/nmchcc                desoza T.DESOZA           108      5      2
 FORTRAN MODIF algorith/nmcoma                 abbas M.ABBAS            269      3      4
 FORTRAN MODIF algorith/nmdcex                 abbas M.ABBAS            281     22      1
 FORTRAN MODIF algorith/nmflam               greffet N.GREFFET          221      5      4
 FORTRAN MODIF algorith/nmflma               greffet N.GREFFET          332     18      9
 FORTRAN MODIF algorith/nmprma                 abbas M.ABBAS            253      3      4
 FORTRAN MODIF algorith/refe81                desoza T.DESOZA           233      4      2
 FORTRAN MODIF algorith/ssdt74                boyere E.BOYERE           364      5      2
 FORTRAN MODIF algorith/vechde              courtois M.COURTOIS         547      4      4
 FORTRAN MODIF algorith/zedgar                 abbas M.ABBAS            301      2      2
 FORTRAN MODIF elements/d1madp                desoza T.DESOZA           230      2      2
 FORTRAN MODIF elements/te0321                desoza T.DESOZA           149     18     12
 FORTRAN MODIF elements/te0339                durand C.DURAND           360      7      2
 FORTRAN MODIF elements/te0432                desoza T.DESOZA           285      7      7
 FORTRAN MODIF from_c/mpicm1a                 pellet J.PELLET           220    119     43
 FORTRAN MODIF modelisa/cacoeq                desoza T.DESOZA           237      2      2
 FORTRAN MODIF modelisa/cfsuex                desoza T.DESOZA           116      3      8
 FORTRAN MODIF modelisa/quadco                desoza T.DESOZA           140      2      2
 FORTRAN MODIF utilitai/dismrs                assire A.ASSIRE           212     38      6
 FORTRAN MODIF utilitai/fetskp                desoza T.DESOZA           497      7      2
 FORTRAN MODIF utilitai/peingl                durand C.DURAND           734      5      4
 FORTRAN MODIF utilitai/rsharm               andriam H.ANDRIAMBOLOLONA    156      1      9
  PYTHON MODIF Build/B_ETAPE                courtois M.COURTOIS         720     12      9
  PYTHON MODIF Execution/E_ETAPE            courtois M.COURTOIS         305      4      1
  PYTHON MODIF Macro/calc_europlexus_ops      assire A.ASSIRE          2407     40     25
  PYTHON MODIF Macro/macr_adap_mail_ops     gnicolas G.NICOLAS          872    108    101
  PYTHON MODIF Messages/compor1                proix J-M.PROIX          362     13      1
  PYTHON MODIF Messages/feti0                 desoza T.DESOZA            40      8      1
  PYTHON MODIF Messages/fonct0                durand C.DURAND           346      5      1
  PYTHON MODIF Messages/xfem2                laverne J.LAVERNE          150      2      2
  PYTHON MODIF SD/sd_tran_gene                boyere E.BOYERE           150      3      3
  PYTHON MODIF Stanley/stanley                assire A.ASSIRE          3179     13     15
  PYTHON MODIF Utilitai/Utmess              courtois M.COURTOIS         629     16      5


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :    3         556       556              +556
 MODIF :   89       42396      1843    1478      +365
 SUPPR :    0           0                 0        +0
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :   92       42952      2399    1478      +921 
