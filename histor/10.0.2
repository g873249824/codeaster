

-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR nistor       NISTOR Ionel           DATE 11/05/2009 - 14:59:34

--------------------------------------------------------------------------------
RESTITUTION FICHE 008694 DU 2005-05-20 00:00:00
TYPE evolution concernant Code_Aster (VERSION 8.0)
TITRE
   AR10 - Rapprochement structure MODE_MECA / BASE_MODALE
FONCTIONNALITE
   Cette fiche est resolue par la 11584.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
   tous les cas-tests appelant MODE_*
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 009158 DU 2005-11-02 00:00:00
TYPE evolution concernant Code_Aster (VERSION 8.1)
TITRE
   ISTA AR10 - objet .UTIL de la SD BASE_MODALE
FONCTIONNALITE
   Problème:
   ------------------------------------------
   La commande DEFI_BASE_MODALE crée un objet .UTIL qui n'est documenté
   nulle part et qui ne respecte pas l?architecture des sd_resultat_dyn
   
   Diagnostique :
   ------------------------------------------
   Effectivement, la commande DEFI_BASE_MODALE créait cet objet qui est un vecteur de 5 entiers stockant 
   certaines informations relatives à la base modale dont elle calcule :
   -type de la base (CLASSIQUE, RITZ, MASS_DIAG)
   -nombre total de modes contenus dans la base
   -nombre de modes dynamiques contenus dans la base
   -nombre de modes d?interface (statiques ou déformées de type MULT_ELAS) contenus dans la base.
   Il n?y a pas de documentation pour cet objet qui a créée d?ailleurs quelques problèmes pour passer les cas-
   tests en SDVERI=?OUI? car il n?est pas un objet « standard » de la sd_resultat_dyn. Jacques l?a déclaré dans 
   le concept base_modale en tant qu?objet facultatif ce qui ne l?enchantait pas.
   En plus, comme l?objet existait, plusieurs développeurs se sont servi de lui pour développer des routines 
   Fortran où des classes Python qui exploitent ses informations.
   
   Solution :
   ----------------------------------------
   Suite aux travaux du chantier « fusion des structures de données modales », cet objet a été résorbé (voir 
   aussi l?histor de la 11584). Les informations qu?il contenaient sont maintenant stockées (directement ou 
   indirectement) dans la nouvelle sd_mode_meca :
   -le type de la base (CLASSIQUE, RITZ, MASS_DIAG ou ORTHO_BASE) dans la 7-ème position de l?objet .REFD
   -le nombre total de modes ainsi que le nombre de modes dits « dynamique » (on une fréquence) et les nombre de 
   modes d?interface (par de fréquences propre dans la sd_mode_meca) sont obtenus en répondant aux trois 
   nouvelles questions DISMOI :
           NB_MODES_TOT
   	NB_MODES_DYN
   	NB_MODES_STA
   
   Impact dans les sources :
   -la routine bmnbmd.f a été resorbée
   -la fonction NBRE_MODES de la classe python macr_elem_dyna a été supprimée
   -dans toutes les routines fortran qui appelaient bmnbmd.f la modification a été faite pour obtenir les 
   informations suite à l?interrogation de l?objet .REFD ou avec les nouvelles DISMOI
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   liste de cas-tests appelant DEFI_BASE_MODALE
NB_JOURS_TRAV  : 5.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 011584 DU 2007-12-21 09:44:36
TYPE evolution concernant Code_Aster (VERSION )
TITRE
   AR02 - Fusion de SD de dynamique: mode_meca+base_modale+mode_stat
FONCTIONNALITE
   Contexte
   ----------------------------------------------
   Trois SD stockent actuellement les informations concernant les modes mécaniques: mode_meca(_c), base_modale 
   et mode_stat_*
   Pourtant, l?information contenue est très similaire parce qu'un mode mécanique = des champs nodaux (DEPL, 
   etc.) + paramètres + variables d?accès. Dans les 3 SD citées ci-dessus, les différences apparaissent plus 
   particulièrement sur les paramètres.
   La gestion de la création et de l?exploitation de ces SD est devenue compliqué dans les catalogues de 
   commandes et les sources Fortran et Python et des évolutions successives ont impacté l?architecture de ces SD 
   en les éloignant de celle d?une sd_resultat_dyn.
   La fusion de ces SD a été décidée afin de permettre une maintenance et une developabilité du code plus facile 
   tout en assurant le maintien des fonctionnalités actuelles.
   
   Solution
   -----------------------------------------------------
   Trois principes ont été retenus pour le développement :
   1. Pas de différences par rapport aux autres sd_resultat_dyn :  présence de mêmes objets que dans n?importe 
   quel autre sd_resultat_dyn 
   2. Pas d?impact pour l?utilisateur : ne pas toucher aux mots-clé dans les catalogues = pas de problèmes de 
   traduction avec EFICAS
   3. Pas de perte d?information : l?architecture de la nouvelle SD doit garantir qu?on puisse stocker et 
   récupérer toutes les informations (paramètres et variables d?accès) présentes dans les SD actuelles
   
   Après une assez longue réflexion, l?architecture suivante a été retenue pour la nouvelle sd_mode_meca (on 
   garde ce nom sous lequel on va stocker tout mode mécanique, quelque soit sa provenance) :
   
   MODE.DESC  LONG=139 	K16
   MODE.NOVA  LONG=28 		K16
   
   	AMOR_GENE       AMOR_REDUIT	     CARAELEM	
   	CHAMPMAT	COEF_X  	     COEF_Y
   	COEF_Z  	EXCIT		     FACT_PARTICI_DX 
   	FACT_PARTICI_DY FACT_PARTICI_DZ      FREQ [A]
   	MASS_EFFE_DX	MASS_EFFE_DY	     MASS_EFFE_DZ 
   	MASS_EFFE_UN_DX MASS_EFFE_UN_DY      MASS_EFFE_UN_DZ
   	MASS_GENE	MODELE  	     NOEUD_CMP [A]
   	NORME		NUME_DDL	     NUME_MODE [A]
   	OMEGA2  	RIGI_GENE	     TYPE_DEFO	
   	TYPE_MODE
   
   MODE.ORDR  LONG=nb_ordr 	I
   MODE.REFD  LONG=7 		K24
   
   	mat_rigi  mat_mass  mat_amor  nume_ddl interf_dyna_clas   [?]  type_base
   
   MODE.RS16  LONG=3xnb_ordr     K16
   
   MODE.RS24  LONG=2xnb_ordr     K24
   
   MODE.RSP8  LONG=3xnb_ordr     K8
   
   MODE.RSPI  LONG=2xnb_ordr     I
   
   MODE.RSPR  LONG=18xnb_ordr    R
   
   MODE.NOEU  LONG=nb_ordr       K16 (sera résorbé bientôt)
   
   MODE.TACH  LONG=139           K24
   
   MODE.TAVA  LONG=28            K8
   
   MODE.TITR  LONG=1             K80
   
   
   MODE.00i.00000j.DESC
   MODE.00i.00000j.REFE
   MODE.00i.00000j.VALE
   
   Les changements importantes :
   - Surpression de l?objet .UTIL (fiche 9158):le nombre de modes dans une collection en fonction de leur type 
   est obtenu maintenant avec trois appels DISMOI, les questions sont: NB_MODES_TOT, NB_MODES_DYN, NB_MODES_STA
   - le type de base modale est stocké dans la 7-ème position de l?objet REFD
   - Mode propre ou déformée statique? On obtient cette information en lissant la valeur du nouveau paramètre 
   TYPE_MODE avec un appel RSADPA (routine d?accès à une sd_resultat). Réponses possibles: MODE_DYN ou MODE_STA
   - 7-ème position de l?objet REFD: on stocke le type de base modale: ?CLASSIQUE?, ?RITZ?, ?DIAG_MASS?
   - Variables d?accès multiples:  FREQ, NUME_MODE et N?UD_CMP sont les variables d?accès de la nouvelle 
   sd_mode_meca en plus de numéro d?ordre
   
   Impact dans les catalogues PYTHON :
   ----------------------------------------
   - Des petites modifications dans les catalogues des commandes qui produisent/utilisent les anciennes 
   mode_stat et base_modale:
   
   accas.capy                 dyna_tran_modal.capy  norm_mode.capy
   calc_char_seisme.capy      extr_resu.capy        nume_ddl_gene.capy
   calc_elem.capy             lire_forc_miss.capy   observation.capy
   calc_essai.capy            lire_impe_miss.capy   post_releve_t.capy
   calc_forc_ajou.capy        mac_modes.capy        proj_matr_base.capy
   comb_sism_modal.capy       macr_elem_dyna.capy   proj_mesu_modal.capy
   defi_base_modale.capy      macr_elem_stat.capy   proj_vect_base.capy
   macro_expans.capy          rest_cond_tran.capy
   depl_interne.capy          macro_matr_ajou.capy  rest_gene_phys.capy
   dyna_alea_modal.capy       macro_proj_base.capy  rest_sous_struc.capy
   dyna_line_tran.capy        mode_iter_cycl.capy   rest_spec_phys.capy
   dyna_non_line.capy         mode_statique.capy    stanley.capy
   
   - Dans sd_prod, mode_stat_* et base_modale sont remplacées par mode_meca
   - Derrière certains mots-clé où on attendait une mode_stat ou une base_modale, on doit fournir maintenant une 
   mode_meca
   - Dans le catalogue NORM_MODE, deux mots-clé obligatoires (MASSE et RAIDE) sous condition de normer une 
   base_modale sont devenus facultatifs
   
   Impact dans les sources Python
   --------------------------------------------------------
   
   - Peu d?impact dans les sources python
   
   co_macr_elem_dyna.py          meidee_calcul_modifstruct.py  sd_modele_gene.py             
   co_mode_meca.py               meidee_cata.py                sd_mode_meca.py               
   dyna_iss_vari_ops.py          observation_ops.py            sd_resultat_dyn.py
   meidee_calcul_correlation.py  sd_mode_cycl.py               sd_tran_gene.py
   
   
   -Des ajustements dans les catalogues des SD 
   -Quelques modifications plus importantes dans deux classes issues de Meidee
   
   Impact dans les sources Fortran
   -------------------------------------------------------
   -De nombreuses modifications plus ou moins importantes dans:
   
   ajrefd.f  dismrs.f  lridea.f      nmop45.f  op0162.f  rehagl.f  
   bamo78.f  dltcrr.f  macr78.f      op0037.f  op0163.f  remnec.f  tran77.f
   bmnodi.f  ecresu.f  mdallc.f      op0044.f  op0164.f  remngl.f  
   bmradi.f  exmali.f  mdallo.f      op0045.f  op0179.f  retrec.f  trmult.f
   bmrdda.f  exphgl.f  mdrecf.f      op0060.f  orth99.f  retrgl.f  typddl.f
   calamo.f  exprli.f  mdtr74.f      op0072.f  recbec.f  ritz99.f  utpar1.f
   calprc.f  harm75.f  mecalm.f      op0074.f  recbgl.f  rscrsd.f  utpara.f
   calpro.f  imbamo.f  mgco99.f      op0075.f  refe80.f  rsdocu.f  vecgen.f
   clas99.f  impe81.f  op0077.f      refe81.f  rsutc2.f  vpcrea.f
   comp81.f  iner81.f  moco99.f      op0092.f  refe99.f  rvpara.f  vppara.f
   crtype.f  iredmi.f  op0093.f      regeec.f  simul2.f  vprecu.f
   defsta.f  irvgen.f  modiba.f      op0099.f  regegl.f  speph0.f  vpstor.f
   desccy.f  liacar.f  mptran.f      op0106.f  regene.f  ssdt74.f
   diag99.f  liared.f  mstget.f      op0109.f  rehaec.f  tran75.f
   
   - On impacte les routines de création de sd_resultat pour créer seulement des sd_mode_meca
   - Pas mal d?impacts sur les routines de stockage et copie des modes
   - On élimine ou modifie beaucoup de filtres sur base_modale ou mode_stat
   - On ajoute trois nouvelles questions à la routine DISMOI
   - On prolonge partout l?objet REFD d?une position
   
   Impact sur les cas-tests :
   --------------------------------------------------------------
   - Deux impacts dans les fichiers de commande des cas-tests existantes:
           - sdld102a ? NOOK sur deux TEST_FICHIER (on a un paramètre de plus dans les SD vérifiée), je modifie 
   la reference
           - zzzz208b ? lors de la validation de l?interfaçage avec Python, on utilise une classe basée sur 
   information stockée dans l?objet .UTIL qui n?existe plus. Je récupère les informations nécessaires autrement 
   (longueur de l?objet .ORDR pour deux sd_mode_meca qui constituent une base modale?)
   - Tests passés en SDVERI=?OUI? : sdll133b, sdnl301a et fdlv112a
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.53.01; U4.53.02; U4.53.22; U4.52.05; U4.52.11; U4.52.12; U4.63.11; U4.63.31; U4.63.32; U4.63.33; U4.63.22; U4.64.02; U4.65.01; U4.66.03; U4.66.11; U4.62.02; U4.73.01; U4.81.01; U4.90.01; U4.90.03; U4.63.01; U4.84.01; U4.90.02; U4.53.21; U7.02.33; U7.02
VALIDATION
   tous les cas-tests appelant MODE_*
NB_JOURS_TRAV  : 40.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 012023 DU 2008-04-21 16:13:04
TYPE evolution concernant Code_Aster (VERSION )
TITRE
   Amortissement rxc3xa9duit a MODE_ITER_SIMULT
FONCTIONNALITE
   Contexte
   ----------------------------------------------
   Cette évolution a été demandé par Charles BODEL afin de pouvoir  simuler 
   des résultats issus de 
   l'expérimental sans avoir à faire un IMPR_RESU + LIRE_RESU (et ajout, à la 
   main, des amortissements réduits 
   dans le fichier .unv intermédiaire). Il souhaite donc pouvoir intégrer 
   dans le résultat de MODE_ITER_SIMULT 
   (sd_mode_meca) des amortissements réduits, même si les modes calculés sont 
   réels. 
   
   Solution
   ------------------------------------------------
   Après réflexion, on a décidé que le développement soit fait dans 
   DEFI_BASE_MODALE où on  
   ajoute un nouveau mot-clé, au premier niveau, LIST_AMOR qu?on doit 
   renseigner avec une liste de réels (la 
   liste des amortissements csi). Ce nouveau mot-clé est facultatif est sa 
   présence est accepté seulement si le 
   bloc RITZ est présente. Autrement dit, on enrichit une collection de modes 
   mécaniques seulement dans le cadre 
   d?une base de Ritz et on va enrichir précisément le concept fourni 
   derrière le mot-clé simple MODE_MECA 
   Si l?utilisateur fourni une liste d?amortissements avec un nombre 
   inférieur au nombre de modes du concept à 
   enrichir, on l?averti (alarme déjà existante) et on prolonge la liste avec 
   la dernière valeur. Si 
   l?utilisateur fourni une liste d?amortissements avec un nombre supérieur 
   au nombre de modes du concept à 
   enrichir, on l?averti (alarme déjà existante) et on tronque.
   
   Impact dans les sources :
   -------------------------------------------------
   
   -le catalogue de la commande DEFI_BASE_MODALE
   -ritz99.f
   
   
   Validation
   ---------------------------------------------------
   - deux nouveaux cas-tests : sdlv128a et sdlv128b. La structure étudiée est 
   un crayon B4C de grappe de 
   commande multi-supporte par des ressorts appelés soufflets aux niveaux 
   de "cartes" de maintien. Elle est 
   représentative des 
   crayons que l'on trouve sur la maquette PHACETIE. Une expansion des modes 
   identifies expérimentalement sur 
   les essais PHACETIE est réalisée. Les modes numériques sont calcules sans 
   amortissement. On ajoute 
   l'amortissement avec le nouveau mot-clé et on vérifie (TEST_TABLE) que les 
   amortissements ont bien été 
   ajoutes dans la sd_mode_meca.
   
   temps de travail:
   --------------------------------------------------
   2 jours Ionel + 2 jours Charles
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : V2.04.128; U4.64.02
VALIDATION
   sdlv128a, sdlv128b
NB_JOURS_TRAV  : 4.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 013261 DU 2009-03-31 12:39:40
TYPE evolution concernant Code_Aster (VERSION )
TITRE
   DEFI_BASE_MODALE
FONCTIONNALITE
   Contexte
   ----------------------------------------------
   
   Cette évolution fait suite à une observation légitime de Franck. 
   Lorsque l'on définit ou enrichit une base modale avec l'option RITZ il est possible de renseigner ou
   non le nombre max de modes (NMAX_MODE). Dans le cas de la construction d'une base avec un
   résultat de type mode_meca issu de MODE_STATIQUE, on ne connaît pas a priori le nombre max de modes à  
   utiliser, aussi il arrive que la valeur par défaut (NMAX_MODE=999) ne soit pas suffisante,
   ce qui a observé dans un cas de calcul. Cela peut conduire à des résultats faux.
   
   Solution
   -------------------------------------------
   Après analyse avec Georges et Franck, on a décidé de supprimer cette limitation à 999 (la valeur par défaut 
   de NMAX_MODE). Comme il n?y plus de valeur par défaut, et le mot clé est facultatif, un impact a été 
   nécessaire dans les sources Python (ritz99.f) :
   -si le mot clé n?est pas renseigné, on prend tous les modes présents dans le concept
   -si le mot clé est renseigné, on prend le minimum entre la valeur fourni par l?utilisateur et le nombre de 
   modes présents dans le concept .
   
   
   Impact dans les sources :
   -------------------------------------------------
   -ritz99.f
   -defi_base_modale.capy
   
   Validation
   --------------------------------------------------
   - la liste de cas-tests appelant DEFI_BASE_MODALE
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.64.02
VALIDATION
   liste de cas-tests appelant DEFI_BASE_MODALE
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 013282 DU 2009-04-06 08:18:35
TYPE evolution concernant Code_Aster (VERSION )
TITRE
   Copie de champs (autre que 'DEPL') pour DEFI_BASE_MODALE
FONCTIONNALITE
   Contexte
   ----------------------------------------------
   
   Cette évolution fait suite à une observation de Charles BODEL qui souhaite qu?une sd_mode_meca issue de 
   DEFI_BASE_MODALE puisse avoir autres champs que DEPL (la situation actuelle). Effectivement, dans les 
   routines appelées par cette commande, on génère un concept de type mode_meca à partir d?autres concepts de 
   même type (c?est le principe de constitution d?une base modale) mais on ne copie dans le concept final que 
   les noms des champ DEPL parce que c?est comme ça, en dur, dans le Fortran. On mentionne le fait qu?on concept 
   mode_meca peut, après une CALC_ELEM par exemple, être enrichis avec des nouveaux champs (contraintes, 
   déformations etc.)
   
   Solution
   ----------------------------------------------
   Dans la routine qui copie les noms des champs des concepts d?origine vers le concept final, on introduit une 
   boucle sur les noms symboliques des champs. On vérifie si le champ est présent et dans l?affirmatif on  copie 
   son nom dans le .TACH du concept final. En fait on ne copie pas le champ mais on fait un pointage vers la SD 
   d?origine (comme on faisait déjà pour DEPL) On est sur maintenant de ne pas perdre aucun information d?un 
   concept suite à son passage par DEFI_BASE_MODALE même si il s?agit de pointer vers la SD d?origine ce qui 
   suppose que cette dernière existe toujours.
   
   
   Impact dans les sources :
   -------------------------------------------------
   -moco99.f
   
   Validation
   -------------------------------------------------
   Deux nouveaux cas-tests : sdlv128a et sdlv128b. La structure étudiée est un crayon B4C de grappe de commande 
   multi-supporte par des ressorts appelés soufflets aux niveaux de "cartes" de maintien. Elle est 
   représentative des crayons que l'on trouve sur la maquette PHACETIE. 
   Pour valider l?évolution qui fait l?objet de cette fiche, on calcule le champ EPSI_NOEU_DEPL pour une 
   sd_mode_meca avec CALC_ELEM. On constitue une mode_meca en passant par DEFI_BASE_MODALE et on teste ensuite 
   la corrélation MAC avec la base modale mesurée expérimentalement.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : V2.04.128
VALIDATION
   sdlv128a, sdlv128b
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 013319 DU 2009-04-16 11:16:28
TYPE evolution concernant Code_Aster (VERSION 10.1)
TITRE
   Declaration des modes d'interface dans DEFI_BASE_MODALE
FONCTIONNALITE
   Contexte
   ----------------------------------------------
   Lors de la création d'une collection de modes (base modale) avec DEFI_BASE_MODALE, option RITZ, on s?aperçoit 
   dans les sources Fortran (ritz99.f) qu?on fait un traitement particulier si on renseigne deux mots-clé 
   MODE_MECA: la deuxième collection de modes dynamique est considérée comme une collection de modes d?interface 
   et les modes sont comptés comme des déformées statiques. Ce mécanisme n'est pas "transparent" pour 
   l'utilisateur est prête à la confusion.
   
   
   Solution
   ---------------------------------------------
   Je fais évoluer la syntaxe de  DEFI_BASE_MODALE en introduisant un nouveau mot-clé MODE_INTF, à la place de 
   la deuxième instance MODE_MECA, sous lequel on pourra déclarer les modes d?interface. Dés maintenant, dans 
   cette commande, MODE_MECA nous pourra plus être un mot-clé de deuxième instance et donc le concept derrière 
   lui ne servira plus pour définir des modes d?interface. Les modes d?interface seront déclarées par MODE_INTF, 
   MODE_STA ou MULT_ELAS. A terme, avec le prix d?un certain impact dans le .comm des cas-tests, on pourra 
   supprimer les deux derniers mots clés (MODE_STA et MULT_ELAS) et ne garder que MODE_INTF pour déclarer les 
   modes d?interface.
   
   Impact dans les sources :
   -------------------------------------------------
   -defi_base_modale.capy
   -ritz99.f
   -miss05a.comm., sdlv402a.comm., sdnl105c.comm., sdnv107a.comm., zzzz208b.comm
   
   
   Validation
   --------------------------------------------------------
   -miss05a
   -sdlv402a
   -sdnl105c
   -sdnv107a
   -zzzz208b
   
   -sdnl105c
   -sdnv107a
   -zzzz208b
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : V1.10.124, V5.02.105, V5.03.107
VALIDATION
   miss05a, sdlv402a, sdnl105c,sdnv107a,zzzz208b
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR andriam      ANDRIAMBOLOLONA Hari   DATE 11/05/2009 - 14:59:36

--------------------------------------------------------------------------------
RESTITUTION FICHE 013374 DU 2009-05-05 08:58:37
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
   Qualification des mots-clxc3xa9s dans le catalogue de CALC_ESSAI
FONCTIONNALITE
   En rédigeant la doc de CALC_ESSAI, on s'est rendus compte que certains mots-clés
   obligatoires dans la doc ne l'étaient pas dans le capy, alors qu'ils devraient l'être.
   
   C'est le cas des mots-clés facteurs GOURP_NO_CAPTEURS  et GROUP_NO_EXTERIEUR lorsqu'on
   veut effectuer une modification structurale en non-interactif.
   
   A l'inverse, il est souhaitable de modifier le catalogue sur le mot-clé RESOLUTION (mcf
   MODIFSTRUCT) de manière à ce qu'il soit facultatif et fixé par défaut à 'ES'.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.90.01
VALIDATION
   les cas tests qui font appel xc3xa0 CALC_ESSAI
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 013383 DU 2009-05-06 11:20:17
TYPE anomalie concernant Code_Aster (VERSION 9.4)
TITRE
   Cas-test sdls139a et sdlv125a cassxc3xa9s avec python 2.5 (CALC_ESSAI)
FONCTIONNALITE
   Dans le cadre de la fiche 13374 (catalogue de CALC_ESSAI), on s'est rendus compte que les
   cas-tests du titre ne passaient pas sur nos machines locales, qui tournent avec python 2.5.
   
   La partie incriminée est un bout de python lorsqu'on initialise les matrices pour
   l'identification d'effort. On avait : 
   
   inv_S = complex(1,0)*S[:], S étant un numerical array
   la matrice inv_S est de la bonne taille, c'est à dire la même que S.
   
   Mais avec python 2.5, inv_S devient une matrice de taille 0 (zeros((O,),'D').
   Pour corriger, on remplace cette ligne par :
   
   inv_S = zeros(S.shape,'D')
   
   Et cela marche sur la bull comme en local sur nos machines.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
   les cas tests qui font appel xc3xa0 CALC_ESSAI
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

 CASTEST AJOUT sdlv128a                       nistor I.NISTOR           434    434      0
 CASTEST AJOUT sdlv128b                       nistor I.NISTOR           280    280      0
 CASTEST MODIF fdlv112a                       nistor I.NISTOR           298      7      2
 CASTEST MODIF miss05a                        nistor I.NISTOR           443      3      2
 CASTEST MODIF sdld102a                       nistor I.NISTOR           876    612    521
 CASTEST MODIF sdll133b                       nistor I.NISTOR           368      2      2
 CASTEST MODIF sdlv402a                       nistor I.NISTOR           349      6      4
 CASTEST MODIF sdnl105c                       nistor I.NISTOR           628      7      4
 CASTEST MODIF sdnl301a                       nistor I.NISTOR           427      8      2
 CASTEST MODIF sdnv107a                       nistor I.NISTOR           625      8      3
 CASTEST MODIF zzzz208b                       nistor I.NISTOR           468     48     29
CATALOPY MODIF commande/calc_char_seisme      nistor I.NISTOR            38      2      2
CATALOPY MODIF commande/calc_elem             nistor I.NISTOR           546      2      3
CATALOPY MODIF commande/calc_essai            nistor I.NISTOR           157     13     13
CATALOPY MODIF commande/calc_forc_ajou        nistor I.NISTOR            99      2      3
CATALOPY MODIF commande/comb_sism_modal       nistor I.NISTOR           119      4      4
CATALOPY MODIF commande/defi_base_modale      nistor I.NISTOR            80     10      8
CATALOPY MODIF commande/depl_interne          nistor I.NISTOR            35      2      3
CATALOPY MODIF commande/dyna_alea_modal       nistor I.NISTOR           103      2      2
CATALOPY MODIF commande/dyna_line_tran        nistor I.NISTOR           179      2      2
CATALOPY MODIF commande/dyna_non_line         nistor I.NISTOR           403      3      3
CATALOPY MODIF commande/dyna_tran_modal       nistor I.NISTOR           248      3      3
CATALOPY MODIF commande/extr_resu             nistor I.NISTOR            74      2      5
CATALOPY MODIF commande/lire_forc_miss        nistor I.NISTOR            31      2      2
CATALOPY MODIF commande/lire_impe_miss        nistor I.NISTOR            30      2      2
CATALOPY MODIF commande/mac_modes             nistor I.NISTOR            32      3      3
CATALOPY MODIF commande/macr_elem_dyna        nistor I.NISTOR            42      2      2
CATALOPY MODIF commande/macr_elem_stat        nistor I.NISTOR            56      3      2
CATALOPY MODIF commande/macro_expans          nistor I.NISTOR            75      3      3
CATALOPY MODIF commande/macro_matr_ajou       nistor I.NISTOR           133      2      2
CATALOPY MODIF commande/macro_proj_base       nistor I.NISTOR            54      2      2
CATALOPY MODIF commande/mode_iter_cycl        nistor I.NISTOR            57      2      2
CATALOPY MODIF commande/mode_statique         nistor I.NISTOR           123      3      8
CATALOPY MODIF commande/norm_mode             nistor I.NISTOR            63      9      7
CATALOPY MODIF commande/nume_ddl_gene         nistor I.NISTOR            35      2      2
CATALOPY MODIF commande/observation           nistor I.NISTOR           150      4      4
CATALOPY MODIF commande/post_releve_t         nistor I.NISTOR           157      2      2
CATALOPY MODIF commande/proj_matr_base        nistor I.NISTOR            37      2      2
CATALOPY MODIF commande/proj_mesu_modal       nistor I.NISTOR            65      6      4
CATALOPY MODIF commande/proj_vect_base        nistor I.NISTOR            31      2      2
CATALOPY MODIF commande/rest_cond_tran        nistor I.NISTOR            57      2      2
CATALOPY MODIF commande/rest_gene_phys        nistor I.NISTOR            74      1      2
CATALOPY MODIF commande/rest_sous_struc       nistor I.NISTOR            86      3      5
CATALOPY MODIF commande/rest_spec_phys        nistor I.NISTOR            46      3      3
CATALOPY MODIF commande/stanley               nistor I.NISTOR            35      2      2
CATALOPY MODIF entete/accas                   nistor I.NISTOR           222      2      9
 FORTRAN MODIF algeline/mstget                nistor I.NISTOR           246      1      1
 FORTRAN MODIF algeline/nmop45                nistor I.NISTOR           434      3      3
 FORTRAN MODIF algeline/op0037                nistor I.NISTOR           650      8     14
 FORTRAN MODIF algeline/op0044                nistor I.NISTOR           768      3      3
 FORTRAN MODIF algeline/op0045                nistor I.NISTOR          1167      3      3
 FORTRAN MODIF algeline/op0092                nistor I.NISTOR            72      1      1
 FORTRAN MODIF algeline/op0093                nistor I.NISTOR           529     10      3
 FORTRAN MODIF algeline/simul2                nistor I.NISTOR           145      2      2
 FORTRAN MODIF algeline/trmult                nistor I.NISTOR           192      3      2
 FORTRAN MODIF algeline/vpcrea                nistor I.NISTOR           135      2      2
 FORTRAN MODIF algeline/vppara                nistor I.NISTOR           194      1      1
 FORTRAN MODIF algeline/vprecu                nistor I.NISTOR           281      5      1
 FORTRAN MODIF algeline/vpstor                nistor I.NISTOR           354     23     10
 FORTRAN MODIF algorith/bamo78                nistor I.NISTOR           236      3      2
 FORTRAN MODIF algorith/bmnodi                nistor I.NISTOR           185      9      8
 FORTRAN MODIF algorith/bmradi                nistor I.NISTOR           174      1      2
 FORTRAN MODIF algorith/bmrdda                nistor I.NISTOR           178      1      2
 FORTRAN MODIF algorith/calamo                nistor I.NISTOR           148      5      3
 FORTRAN MODIF algorith/calprc                nistor I.NISTOR           172      3      2
 FORTRAN MODIF algorith/calpro                nistor I.NISTOR           165      3      2
 FORTRAN MODIF algorith/clas99                nistor I.NISTOR           155      7     10
 FORTRAN MODIF algorith/comp81                nistor I.NISTOR           310      6      4
 FORTRAN MODIF algorith/crtype                nistor I.NISTOR           441      2      2
 FORTRAN MODIF algorith/defsta                nistor I.NISTOR           186      4      3
 FORTRAN MODIF algorith/desccy                nistor I.NISTOR           176      3      3
 FORTRAN MODIF algorith/diag99                nistor I.NISTOR           242     11     10
 FORTRAN MODIF algorith/dltcrr                nistor I.NISTOR           163      3      2
 FORTRAN MODIF algorith/exmali                nistor I.NISTOR           133      4      3
 FORTRAN MODIF algorith/exphgl                nistor I.NISTOR           221      3      8
 FORTRAN MODIF algorith/exprli                nistor I.NISTOR           163      4      3
 FORTRAN MODIF algorith/harm75                nistor I.NISTOR           230      5      6
 FORTRAN MODIF algorith/imbamo                nistor I.NISTOR           192     18     15
 FORTRAN MODIF algorith/impe81                nistor I.NISTOR           142      5     11
 FORTRAN MODIF algorith/liacar                nistor I.NISTOR           203      4      3
 FORTRAN MODIF algorith/liared                nistor I.NISTOR           118      5      3
 FORTRAN MODIF algorith/macr78                nistor I.NISTOR           200      6      3
 FORTRAN MODIF algorith/mdallc                nistor I.NISTOR           147      3      3
 FORTRAN MODIF algorith/mdallo                nistor I.NISTOR           226      3      2
 FORTRAN MODIF algorith/mdrecf                nistor I.NISTOR           225      7      6
 FORTRAN MODIF algorith/mdtr74                nistor I.NISTOR           740     27     18
 FORTRAN MODIF algorith/mgco99                nistor I.NISTOR           172     26     44
 FORTRAN MODIF algorith/moco99                nistor I.NISTOR           234     70     18
 FORTRAN MODIF algorith/modiba                nistor I.NISTOR           250      5      3
 FORTRAN MODIF algorith/mptran                nistor I.NISTOR           420      5      4
 FORTRAN MODIF algorith/op0060                nistor I.NISTOR           721      3      2
 FORTRAN MODIF algorith/op0072                nistor I.NISTOR           273      9     19
 FORTRAN MODIF algorith/op0074                nistor I.NISTOR           104      2      4
 FORTRAN MODIF algorith/op0075                nistor I.NISTOR           185      3      7
 FORTRAN MODIF algorith/op0077                nistor I.NISTOR           281      1      1
 FORTRAN MODIF algorith/op0099                nistor I.NISTOR           130      2      3
 FORTRAN MODIF algorith/op0109                nistor I.NISTOR           415      1      1
 FORTRAN MODIF algorith/op0164                nistor I.NISTOR           241      7     14
 FORTRAN MODIF algorith/op0179                nistor I.NISTOR           176      8     13
 FORTRAN MODIF algorith/orth99                nistor I.NISTOR           193      6      9
 FORTRAN MODIF algorith/recbec                nistor I.NISTOR           332     10     15
 FORTRAN MODIF algorith/recbgl                nistor I.NISTOR           409      9     10
 FORTRAN MODIF algorith/refe80                nistor I.NISTOR           103      6      7
 FORTRAN MODIF algorith/refe81                nistor I.NISTOR           232      6      7
 FORTRAN MODIF algorith/refe99                nistor I.NISTOR           173     11      2
 FORTRAN MODIF algorith/regeec                nistor I.NISTOR           222      9      6
 FORTRAN MODIF algorith/regegl                nistor I.NISTOR           326      9      6
 FORTRAN MODIF algorith/regene                nistor I.NISTOR           326     11     25
 FORTRAN MODIF algorith/rehaec                nistor I.NISTOR           283      3      4
 FORTRAN MODIF algorith/rehagl                nistor I.NISTOR           328      3      8
 FORTRAN MODIF algorith/remnec                nistor I.NISTOR           339     10     15
 FORTRAN MODIF algorith/remngl                nistor I.NISTOR           417     10     11
 FORTRAN MODIF algorith/retrec                nistor I.NISTOR           317      3      2
 FORTRAN MODIF algorith/retrgl                nistor I.NISTOR           411      7      4
 FORTRAN MODIF algorith/ritz99                nistor I.NISTOR           325     95     25
 FORTRAN MODIF algorith/speph0                nistor I.NISTOR           416     11      7
 FORTRAN MODIF algorith/ssdt74                nistor I.NISTOR           368      9      5
 FORTRAN MODIF algorith/tran75                nistor I.NISTOR           469      3      2
 FORTRAN MODIF algorith/tran77                nistor I.NISTOR           403      3      2
 FORTRAN MODIF algorith/vecgen                nistor I.NISTOR           460      8      6
 FORTRAN MODIF calculel/ajrefd                nistor I.NISTOR            69      3      3
 FORTRAN MODIF calculel/mecalm                nistor I.NISTOR          2536     20      6
 FORTRAN MODIF elements/iner81                nistor I.NISTOR           149      4      2
 FORTRAN MODIF postrele/rvpara                nistor I.NISTOR           623      2      4
 FORTRAN MODIF prepost/irvgen                 nistor I.NISTOR           267     19      6
 FORTRAN MODIF prepost/lridea                 nistor I.NISTOR           547      3     26
 FORTRAN MODIF prepost/op0106                 nistor I.NISTOR           921     21      8
 FORTRAN MODIF prepost/op0162                 nistor I.NISTOR           283     10      6
 FORTRAN MODIF prepost/op0163                 nistor I.NISTOR           233      7     10
 FORTRAN MODIF prepost/rsutc2                 nistor I.NISTOR            94      4      1
 FORTRAN MODIF utilitai/dismrs                nistor I.NISTOR           253     44      3
 FORTRAN MODIF utilitai/ecresu                nistor I.NISTOR           165      6      2
 FORTRAN MODIF utilitai/iredmi                nistor I.NISTOR           210      7     11
 FORTRAN MODIF utilitai/rscrsd                nistor I.NISTOR           438      3      8
 FORTRAN MODIF utilitai/rsdocu                nistor I.NISTOR            86      1      7
 FORTRAN MODIF utilitai/typddl                nistor I.NISTOR           261      4      3
 FORTRAN MODIF utilitai/utpar1                nistor I.NISTOR           484      6     14
 FORTRAN MODIF utilitai/utpara                nistor I.NISTOR           386      1      1
  PYTHON AJOUT SD/co_mode_meca                nistor I.NISTOR            28     28      0
  PYTHON AJOUT SD/sd_mode_meca                nistor I.NISTOR            31     31      0
  PYTHON MODIF Macro/dyna_iss_vari_ops        nistor I.NISTOR           352      7      4
  PYTHON MODIF Macro/observation_ops          nistor I.NISTOR           620      3      2
  PYTHON MODIF Meidee/meidee_calcul_correlation     nistor I.NISTOR           279      3      2
  PYTHON MODIF Meidee/meidee_calcul_modifstruct     nistor I.NISTOR          1198      6      3
  PYTHON MODIF Meidee/meidee_calcul_turbulent     nistor I.NISTOR           447      3      3
  PYTHON MODIF Meidee/meidee_cata             nistor I.NISTOR          1222      7      5
  PYTHON MODIF SD/co_macr_elem_dyna           nistor I.NISTOR           130     11     11
  PYTHON MODIF SD/sd_mode_cycl                nistor I.NISTOR            95      5      4
  PYTHON MODIF SD/sd_modele_gene              nistor I.NISTOR           116      3      2
  PYTHON MODIF SD/sd_resultat_dyn             nistor I.NISTOR            50      2      2
  PYTHON MODIF SD/sd_tran_gene                nistor I.NISTOR           151      3      2


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :    4         773       773              +773
 MODIF :  147       42411      1634    1351      +283
 SUPPR :    0           0                 0        +0
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :  151       43184      2407    1351     +1056 
