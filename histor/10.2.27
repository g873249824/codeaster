

-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR assire       ASSIRE Aimery          DATE 11/25/2010 - 04:48:50

--------------------------------------------------------------------------------
RESTITUTION FICHE 015967 DU 2010-11-25 14:51:05
TYPE express concernant Code_Aster (VERSION 9.1)
TITRE
    Stanley et Salome hors Salome-Meca
FONCTIONNALITE
   Quelques correctifs sont proposés pour corriger des plantages dans le cas d'une
   utilisation de Stanley avec export des resultats vers un Salome distant (c'est-à-dire hors
   du cas Salome-Meca).
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    stanley
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR courtois     COURTOIS Mathieu       DATE 11/23/2010 - 05:58:12

--------------------------------------------------------------------------------
RESTITUTION FICHE 015862 DU 2010-11-03 18:35:32
TYPE anomalie concernant Code_Aster (VERSION 9.1)
TITRE
    IMPR_RESU('MED') impossible dans une boucle
FONCTIONNALITE
   Problème
   ========
   
   Dans une boucle, on souhaite produire à chaque itération un fichier 
   MED de résultats de calcul.
   On fait :
   
   ma = LIRE_MAILLAGE()
   
   for i in range(3):
   . . fname = "./REPE_OUT/file.%d" % i
   . . # récupérer l'unité par DEFI_FICHIER
   . . cunit = DEFI_FICHIER(FICHIER=fname,
   . . . . . . . . . . . . .TYPE="BINARY",
   . . . . . . . . . . . . .ACCES="NEW")
   . . unit = cunit.valeur
   
   . . IMPR_RESU(FORMAT='MED',
   . . . . . . . UNITE=unit,
   . . . . . . . RESU=_F(MAILLAGE=ma),)
   
   . . DEFI_FICHIER(ACTION="LIBERER",
   . . . . . . . . .UNITE=unit)
   
   
   On tombe sur l'erreur UTILITAI5_7 : "redefinition de l'unite logique  
   99  non autorisee"
   
   
   Correction
   ==========
   
   Deux corrections sont nécessaires :
    1. il faut autoriser la redéfinition d'une unité logique qui a été 
   libérée
    2. dans le test fait pour retrouver l'unité logique déjà utilisée, 
   on ne peut tenir compte du DDNAME ('MESSAGE', 'RESULTAT'...) 
   uniquement s'il est non vide (' ').
   
   
   Routine impactée pour la correction en version 9 : uldefi.f
   
   
   En version 10, on fait un peu de nettoyage de choses qui ne sont plus 
   utilisées : fichier VIGILE, arguments non utilisés, IMPLICIT NONE.
   
   
   
   D'autre part, on améliore le message dans le cas où l'utilisateur 
   essaie d'imprimer dans son fichier med un champ qui existe déjà.
   Le message est maintenant :
   
    !-------------------------------------------------------------------
   --!
    ! <F> <MED2_4> . . . . . . . . . . . . . . . . . . . . . . . . . . . 
   .!
    ! . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
   . !
    ! Le champ 'DEPLA___DEPL____________________' est déjà présent . . . 
   .!
    ! dans le fichier med pour l'instant 0. . . . . . . . . . . . . . . 
   . !
    ! . -> Conseil : . . . . . . . . . . . . . . . . . . . . . . . . . . 
   .!
    ! . . .Vous pouvez soit imprimer le champ dans un autre fichier, 
   soit !
    ! . . .changer nommer le champ différemment. . . . . . . . . . . . . 
   .!
    ! . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
   . !
    ! . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
   . !
    ! Cette erreur est fatale. Le code s'arrete. . . . . . . . . . . . . 
   .!
    !-------------------------------------------------------------------
   --!
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  OUI
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    impression dans une boucle
NB_JOURS_TRAV  : 1.0
--------------------------------------------------------------------------------
RESTITUTION FICHE 015931 DU 2010-11-18 08:50:14
TYPE anomalie concernant Code_Aster (VERSION 9.1)
TITRE
    En NEW10.2.25, les cas-tests sdll23b et sdll23c sont NOOK sur Rocks, Calibre 5 et Aster 4.
FONCTIONNALITE
   Problème
   ========
   
   Les tests sdll23b et sdll23c sont NOOK sur les plates-formes autres que 
   Bull.
   
   
   Correction
   ==========
   
   On teste des valeurs proches de 0. en relatif.
   On corrige en testant ces valeurs en absolu par rapport à 0. avec une 
   tolérance de 1.e-8.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    sdll23b, sdll23c
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------
RESTITUTION FICHE 015951 DU 2010-11-22 16:44:32
TYPE anomalie concernant Code_Aster (VERSION 9.1)
TITRE
    Petites corrections dans le catalogue de commandes
FONCTIONNALITE
   Dans DEFI_LIST_INST, le mot-clé simple SUBD_METHODE est présent dans un 
   bloc et hors du bloc.
   
   Dans CALC_MISS, le mot-clé TABLE_SOL doit être obligatoire.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    asrest
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR geniaut      GENIAUT Samuel         DATE 11/23/2010 - 05:58:13

--------------------------------------------------------------------------------
RESTITUTION FICHE 015538 DU 2010-09-14 13:02:33
TYPE aide utilisation concernant Code_Aster (VERSION 10.2)
TITRE
    X-FEM : evolution de l'enrichissement au cours de la propagation avec PROPA_FISS
FONCTIONNALITE
   Question :
   ----------
   
   En statique
   
   La plupart des tests renseignés dans la base utilisent actuellement 
   le modèle enrichi mis à jour au cours de la propagation :
   MODELE=MODELX[i] dans PROPA_FISS.
   
   Pourquoi ne donne t-on pas plutôt le modèle sain (qui ne change pas) :
   MODELE=MODELE_IN dans ces tests ?
   
   
   Réponse :
   ---------
   
     Pourquoi passer donc le modèle enrichie à PROPA_FISS? Pour deux raisons. 
     La première est que c'est logique. Si je veux faire propager les fissures affectées au
   modèle, je doit passer le modèle X-FEM (MODELX) et non plus le modèle sain. Je pourrait en
   fait utiliser le même modèle sain pour étudier plusieurs fissures au même temps, par
   exemple pour évaluer deux formes initiales différentes de fond de fissure. J'aurai donc le
   même modèle sain mais deux modèles MODELX différents, chacun avec une fissure différente.
     La deuxième est un problème pratique: je ne peux pas récupérer le modèle MODELX associé
   à une fissure en partent de la SD de la fissure. Cela est indispensable pour les calculs
   de PROPA_XFEM. Si on regarde sd_fiss_xfem, le modèle sur lequel la fissure est définie
   n'est pas stocké. De plus, PROPA_FISS a besoin d'avoir la liste des fissures définies sur
   MODELX pour bien calculer les avancées de chacune dans le cas de présence de plusieurs
   fissures au même temps. Pour cela on a besoin d'accéder à la sd_modele_xfem de MODELX.
   
     Effectivement on pourrait  améliorer l'ergonomie de PROPA_FISS en modifient sd_fiss_xfem
   pour permettre de récupérer MODELX à partir de la fissure. Cela serait plus logique parce
   que le lien entre la fissure et MODELX est univoque et l'utilisateur donne seulement les
   fissures à propager.
   
   En fait cela est déjà fait (fiche 14219)
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    aucun
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR delmas       DELMAS Josselin        DATE 11/23/2010 - 05:58:13

--------------------------------------------------------------------------------
RESTITUTION FICHE 013971 DU 2009-10-02 15:49:55
TYPE anomalie concernant Code_Aster (VERSION 9.1)
TITRE
    Comportement aleatoire de SING_ELEM
FONCTIONNALITE
   Problème :
   ========
   On avait noté un comportement potentiellement suspect de l'option SING_ELEM au travers de
   plusieurs modifications de valeurs de non-régression et de correction de bugs.
   On suspectait une variable non initialisée.
   
   Correction :
   ==========
   Le passage de Valgrind ne montre rien. On clos la fiche sans rien faire de plus.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Valgrind
NB_JOURS_TRAV  : 0.5
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR pellet       PELLET Jacques         DATE 11/23/2010 - 05:58:13

--------------------------------------------------------------------------------
RESTITUTION FICHE 013992 DU 2009-10-08 11:49:07
TYPE anomalie concernant Documentation (VERSION *)
TITRE
    Erreur Syntaxe CREA_CHAMP/ASSE/NOM_CMP
FONCTIONNALITE
   Problème :
   ----------
   Georges Devesa a attiré mon attention sur CREA_CHAMP / ASSE / NOM_CMP.
   Il y a une erreur dans la syntaxe :
   
   Actuel :
   
   (f)   NOM_CMP : ...
         NOM_CMP_RESU : ...
   
   ce qui se comprend comme NOM_CMP_RESU est obligatoire si NOM_CMP est utilisé.
   
   Alors que la réalité est :
   (f)   NOM_CMP : ...
         (f)   NOM_CMP_RESU : ...
   
   On ne peut utiliser NOM_CMP_RESU que si NOM_CMP est fourni, mais NOM_CMP_RESU n'est pas
   obligatoire.
   
   Correction :
   ------------
   Josselin a corrigé cette erreur en révision 4655.
   Merci à lui.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.72.04
VALIDATION
    sans objet
NB_JOURS_TRAV  : 0.05
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR greffet      GREFFET Nicolas        DATE 11/23/2010 - 05:58:13

--------------------------------------------------------------------------------
RESTITUTION FICHE 015275 DU 2010-06-30 12:21:41
TYPE aide utilisation concernant Code_Aster (VERSION 9.1)
TITRE
    probleme de conditions aux limites en dynamique
FONCTIONNALITE
   Bonjour,
   j'ai relancé cette étude avec l'option suivante dans DNL :
   DEFORMATION='GROT_GDEP',
   J'ai testé un schéma implicite de base : NEWMARK (accélération moyenne) 
   et un schmé explicite : DIFF_CENT.
   Dans les deux cas on va jusqu'à 10 s avec un pas de 0.0001 (l'explicite 
   n'est pas pénalisant ici car la CFL donne un pas limite de 0.00019).
   Le temps CPU total est de 1000 s en explicite et environ le double en 
   implicite.
   
   Je joins quelques résultats dans l'archive resultats-carre.zip ci-jointe :
   - film carre-exp.mpeg : resultat explicite
   - film carre_imp.mpeg : le même en implicite
   - graphe de comparaison du déplacement horizontal du noeud situé en 
   diagonal de la liaison pivot (le carre a u pivot dans son coin supérieur 
   droit : on trace donc pour le noeud en bas à gauche) : graphe-carre-imp-
   exp.jpg
   
   On voit que le schéma explicite conserve le moment cinétique et pas 
   l'accélération moyenne modifiée qui va induire une dissipation sur ce 
   problème qui normalement ne devrait pas dissiper...
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    cas-test de la fiche
NB_JOURS_TRAV  : 0.1
--------------------------------------------------------------------------------
RESTITUTION FICHE 015292 DU 2010-07-02 08:46:59
TYPE anomalie concernant Code_Aster (VERSION 7.0)
TITRE
    En NEW10.2.5, le cas-test fdlv110a s'arrete par manque de temps CPU sur Bull et Calibre5
FONCTIONNALITE
   Bonjour,
   sur Bull, en 10.2.10, ce cas-test a tourné en 23,7 s. Sa limite dans 
   le .para est à 60 s.
   Sur Calibre 5, je viens de le relancer et il a pris 17 s, sur claut708.
   Si on regarde l'évolution de son temps CPU sur Calibre 5 :
   http://aster-rex.der.edf.fr/arbres/standard/castest/fdlv110a.html
   On constate que son temps CPU reste assez stable.
   
   Sur clpaster, il a aussi tourné en 19 s...
   
   On peut donc classer cette fiche sans suite.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  NON
IMPACT_DOCUMENTAIRE : 
VALIDATION
    fdlv110a
NB_JOURS_TRAV  : 0.05
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR pellet       PELLET Jacques         DATE 11/23/2010 - 05:58:14

--------------------------------------------------------------------------------
RESTITUTION FICHE 015711 DU 2010-10-11 12:40:17
TYPE anomalie concernant Code_Aster (VERSION 9.1)
TITRE
    Bug dans la routine fetcrf depuis la version 10.1.3
FONCTIONNALITE
   Problème :
   ---------
   Depuis une évolution de la routine fetcrf.f en 10.1.3, il y a un écrasement mémoire pour
   l'objet .FCFB.
   
   Correction :
   ------------
   Dans cette routine, on ne se décale plus de la quantité ZDIME mais de la constante 9.
   Cela corrige le problème.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  NON
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    rien de particulier
NB_JOURS_TRAV  : 0.2
--------------------------------------------------------------------------------



-----------------------------------------------------------------------

--------------------------------------------------------------------------------
--- AUTEUR geniaut      GENIAUT Samuel         DATE 11/24/2010 - 09:38:24

--------------------------------------------------------------------------------
RESTITUTION FICHE 015214 DU 2010-06-15 16:12:05
TYPE anomalie concernant Code_Aster (VERSION 10.2)
TMA : Phimeca
TITRE
    X-FEM : bug dans le calcul du Keq dans PROPA_FISS
FONCTIONNALITE
   Problème :
   ----------
   
   Dans l'opérateur PROPA_FISS, la formule donnant le Keq en fonction de G n'est pas tout à
   fait correcte.
   Cela fausse le calcul du nombre de cycles.
   
   à l'heure actuelle : Keq = sqrt(E)*sqrt(G)
   
   Solution :
   ----------
   
   On corrige avec la "bonne" formule :
   
   Keq = sqrt(G*E/(1-nu^2))
   
   Ce calcul est réalisé dans propa_fiss_ops.py pour la méthode 'Maillage' et dans xprcyc.f
   pour les méthodes 'Simplexe' et 'Upwind'.
   
   Impact:
   propa_fiss_ops.py
   xprcyc.f
   
   
   Remarque :
   Attention au sens que cela a en Contraintes Plantes
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 10.0.0
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : U4.82.11
VALIDATION
    visuel
--------------------------------------------------------------------------------
RESTITUTION FICHE 015221 DU 2010-06-16 11:05:38
TYPE anomalie concernant Code_Aster (VERSION 10.2)
TMA : Phimeca
TITRE
    X-FEM : parametres materiaux en dur dans PROPA_FISS / methode MAILLAGE
FONCTIONNALITE
   Problème :
   ----------
   
   Les paramètres matériaux de PROPA_FISS / méthode MAILLAGE ne sont pas ceux définis par
   l'utilisateur sous LOI_PROPA/MATER mais ils sont codés en dur dans propa_fiss_ops.py !
   
   Cela implique en particulier que le calcul du DKeq est faux, donc le nombre de cycles est
   faux.
   
   
   Solution :
   ----------
   
   Les méthodes UpWind ou Simplexe récupèrent quant à elles les paramètres matériaux
   (fonction de la température) correctement.
   On reprend la méthode d'extraction de ces méthodes et on en fait une fonction commune pour
   toutes les méthodes.
   
   Impact:
   
   propa_fiss_ops.py
   
   Validation :
   ------------
   Le nombre de cycles ne peut pas être testé proprement car il est simplement affiché dans
   le fichier .mess
   Dans la réflexion sur les évolutions de PROPA_FISS, on souhaite stocker ce nombre de
   cycles dans une table pour le tester.
RESU_FAUX_VERSION_EXPLOITATION    :  NON
RESU_FAUX_VERSION_DEVELOPPEMENT   :  OUI   DEPUIS : 10.0.0
RESTITUTION_VERSION_EXPLOITATION  :  NON
RESTITUTION_VERSION_DEVELOPPEMENT :  OUI
IMPACT_DOCUMENTAIRE : 
VALIDATION
    Visuel
--------------------------------------------------------------------------------



========================================================================
=== Recapitulation des operations demandees pour toutes les restitutions
========================================================================


    TYPE Action    unite                      user      Auteur         nblg  ajout suppr.

 CASTEST MODIF sdld301a                     courtois M.COURTOIS         531      1      1
 CASTEST MODIF sdld30a                      courtois M.COURTOIS        1660      1      1
 CASTEST MODIF sdll23b                      courtois M.COURTOIS         462      3     71
 CASTEST MODIF sdll23c                      courtois M.COURTOIS         473      3     54
CATALOPY MODIF commande/calc_miss           courtois M.COURTOIS          67      2      2
CATALOPY MODIF commande/defi_list_inst      courtois M.COURTOIS         232     33     36
 FORTRAN MODIF algorith/xprcyc                 micol A.MICOL            970      3      3
 FORTRAN MODIF jeveux/jedebu                courtois M.COURTOIS         286      2      5
 FORTRAN MODIF prepost/ircame               courtois M.COURTOIS         326      2      5
 FORTRAN MODIF supervis/debut               courtois M.COURTOIS         103      3      3
 FORTRAN MODIF supervis/ib0mai              courtois M.COURTOIS          96      7      4
 FORTRAN MODIF supervis/ibimpr              courtois M.COURTOIS          92     14     30
 FORTRAN MODIF supervis/ibmain              courtois M.COURTOIS          63      4      7
 FORTRAN MODIF supervis/op9999              courtois M.COURTOIS         161      3      6
 FORTRAN MODIF supervis/prente              courtois M.COURTOIS          99     17     17
 FORTRAN MODIF supervis/prinit              courtois M.COURTOIS          41      7     64
 FORTRAN MODIF supervis/prtitr              courtois M.COURTOIS          52     17     56
 FORTRAN MODIF utilifor/iunifi              courtois M.COURTOIS          82      6      9
 FORTRAN MODIF utilitai/trigom              courtois M.COURTOIS          52      5      8
 FORTRAN MODIF utilitai/uldefi              courtois M.COURTOIS         153      5      4
 FORTRAN MODIF utilitai/ulinit              courtois M.COURTOIS          44      3      2
 FORTRAN MODIF utilitai/ulopen              courtois M.COURTOIS         227      8     13
 FORTRAN SUPPR supervis/prdefc              courtois M.COURTOIS          35      0     35
  PYTHON MODIF Macro/propa_fiss_ops            micol A.MICOL            993     56     59
  PYTHON MODIF Messages/med2                courtois M.COURTOIS          55      9      1
  PYTHON MODIF Messages/supervis            courtois M.COURTOIS         447      1      5
  PYTHON MODIF Messages/utilitai5           courtois M.COURTOIS         305     14     14
  PYTHON MODIF Stanley/salomeVisu             assire A.ASSIRE           508      6      6
  PYTHON MODIF Stanley/stanley_engine         assire A.ASSIRE          3247     33     17


        nb unites  nb lignes  ajouts  suppr.  difference
 AJOUT :    0           0         0                +0
 MODIF :   28       11827       268     503      -235
 SUPPR :    1          35                35       -35
 DEPLA :    0           0 
         ----      ------     ------  ------   ------
 TOTAL :   29       11862       268     538      -270 
